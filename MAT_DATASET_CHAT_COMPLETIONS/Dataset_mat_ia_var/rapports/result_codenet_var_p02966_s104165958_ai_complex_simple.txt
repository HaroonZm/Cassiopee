================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, itemgetter
import sys

N = int(sys.stdin.readline())

# Créer la matrice A avec map/filter/lambda et compréhension multiple
A = [list(map(int, sys.stdin.readline().split() + ['0']))[:N] for _ in range(N)]
A = [list(map(lambda jp: A[i][jp] if i > jp else (A[i][jp-1] if i < jp else 0), range(N))) for i in range(N)]

# Générer Al et Ar via accumulation et transposition zip
def rot(mat):
    return list(map(list, zip(*mat)))

zeros = lambda n: [0]*n
Al = [zeros(N+1) for _ in range(N+1)]
Ar = [zeros(N+1) for _ in range(N+1)]

list(map(lambda idx: [
    list(map(lambda j: Al.__setitem__(idx[0], (
        lambda row: row[:idx[1]+1] + [row[idx[1]] + A[idx[0]][idx[1]]] + row[idx[1]+2:]
    )(Al[idx[0]])), range(idx[0]+1, N))),
    list(map(lambda j: Ar.__setitem__(idx[1], (
        lambda row: row[:idx[0]+1] + [row[idx[0]] + A[idx[0]][idx[1]]] + row[idx[0]+2:]
    )(Ar[idx[1]])), range(idx[1]+1, N)))
], [(i, j) for i in range(N) for j in range(i+1, N)]))

# Initialiser dp avec diagonal float('inf') et dp[0][0] = 0 via numpy.broadcast_to
dp = [[float('inf')] * (N+1) for _ in range(N+1)]
dp[0][0] = 0

# Utiliser itertools pour générer la boucle et calculer l/r de manière "inutile"
from itertools import product

def flatten(x): return [item for sublist in x for item in sublist]

for i, j in ((i, j) for i in range(N+1) for j in range(i, N+1)):
    l, r = 0, 0
    def fake_sum(it): return reduce(add, it, 0)
    step = lambda k: (
        fake_sum([Al[k-1][i]]), 
        fake_sum([Ar[k-2][k-1] - Ar[j-1][k-1]])
    )
    for k in range(j+1, N+1):
        l += step(k)[0]
        r += step(k)[1]
        dp[j][k] = min(dp[j][k], dp[i][j] + l + r)

# Calcul final avec map/min/reduce pour sur-complexifier
print(reduce(min, map(itemgetter(N), dp)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.25372281670570374
    2. 'partial' → logprob: -1.7537227869033813
    3. 'reduce' → logprob: -3.503722906112671
    4. ' wraps' → logprob: -4.003722667694092
    5. 'l' → logprob: -6.753722667694092
    6. ' partial' → logprob: -7.378722667694092
    7. 'cache' → logprob: -8.37872314453125
    8. '```' → logprob: -8.62872314453125
    9. 'cached' → logprob: -9.00372314453125
    10. 'cmp' → logprob: -9.25372314453125

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042372774332761765
    2. 'def' → logprob: -3.667372703552246
    3. '\' → logprob: -4.542372703552246
    4. ',' → logprob: -6.417372703552246
    5. '(
' → logprob: -7.292372703552246
    6. '```' → logprob: -7.542372703552246
    7. '(lambda' → logprob: -7.667372703552246
    8. '\(' → logprob: -7.917372703552246
    9. ' ' → logprob: -8.792372703552246
    10. '\n' → logprob: -8.792372703552246

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.24421319365501404
    2. ' math' → logprob: -2.119213104248047
    3. 'operator' → logprob: -3.244213104248047
    4. ' itertools' → logprob: -3.244213104248047
    5. ' collections' → logprob: -4.494213104248047
    6. 'math' → logprob: -5.494213104248047
    7. ' os' → logprob: -6.369213104248047
    8. 'collections' → logprob: -7.369213104248047
    9. ' ' → logprob: -7.994213104248047
    10. ' typing' → logprob: -8.119213104248047

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022971155121922493
    2. 'import' → logprob: -3.8979711532592773
    3. ' ' → logprob: -6.397971153259277
    4. '.' → logprob: -7.397971153259277
    5. ' .' → logprob: -9.147971153259277
    6. '.import' → logprob: -10.647971153259277
    7. '	import' → logprob: -11.772971153259277
    8. '<|end|>' → logprob: -13.022971153259277
    9. '_import' → logprob: -13.397971153259277
    10. ' ' → logprob: -13.522971153259277

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1571701467037201
    2. ' import' → logprob: -2.282170057296753
    3. 'add' → logprob: -3.907170057296753
    4. ' mul' → logprob: -4.282170295715332
    5. ' ' → logprob: -5.532170295715332
    6. 'import' → logprob: -5.657170295715332
    7. 'mul' → logprob: -6.907170295715332
    8. ' item' → logprob: -7.407170295715332
    9. ' icon' → logprob: -9.157170295715332
    10. 'item' → logprob: -9.532170295715332

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271875485777855
    2. '(
' → logprob: -4.052718639373779
    3. ',' → logprob: -4.552718639373779
    4. '\n' → logprob: -4.677718639373779
    5. '\' → logprob: -4.802718639373779
    6. '#' → logprob: -6.677718639373779
    7. '`' → logprob: -6.802718639373779
    8. '
' → logprob: -7.677718639373779
    9. '()' → logprob: -7.802718639373779
    10. ' ' → logprob: -7.927718639373779

Token 10: ' item' (ID: 2169)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.27142664790153503
    2. ' mul' → logprob: -1.5214266777038574
    3. 'sub' → logprob: -4.271426677703857
    4. ' sub' → logprob: -5.396426677703857
    5. 'item' → logprob: -8.5214262008667
    6. '```' → logprob: -8.8964262008667
    7. 'getitem' → logprob: -8.8964262008667
    8. ' i' → logprob: -9.5214262008667
    9. 'i' → logprob: -9.7714262008667
    10. ' ' → logprob: -10.0214262008667

Token 11: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0006142667261883616
    2. 'get' → logprob: -7.500614166259766
    3. 'getitem' → logprob: -9.750614166259766
    4. 'g' → logprob: -13.750614166259766
    5. 'gett' → logprob: -13.750614166259766
    6. 's' → logprob: -14.625614166259766
    7. 'item' → logprob: -16.000614166259766
    8. 'ge' → logprob: -16.500614166259766
    9. 'gets' → logprob: -16.625614166259766
    10. '_get' → logprob: -16.875614166259766

Token 12: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027603307738900185
    2. ',' → logprob: -4.4026031494140625
    3. '(
' → logprob: -4.6526031494140625
    4. '.' → logprob: -5.6526031494140625
    5. '\' → logprob: -7.9026031494140625
    6. '\n' → logprob: -8.402603149414062
    7. '[' → logprob: -8.527603149414062
    8. '()' → logprob: -9.027603149414062
    9. '`' → logprob: -9.152603149414062
    10. ',
' → logprob: -9.277603149414062

Token 13: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3256461024284363
    2. '(
' → logprob: -1.700646162033081
    3. ',' → logprob: -3.450646162033081
    4. '\' → logprob: -4.075645923614502
    5. '`' → logprob: -5.200645923614502
    6. ',
' → logprob: -5.200645923614502
    7. '[' → logprob: -5.200645923614502
    8. 'def' → logprob: -5.450645923614502
    9. '\n' → logprob: -5.575645923614502
    10. '.' → logprob: -5.825645923614502

Token 14: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.6723197102546692
    2. ' itertools' → logprob: -1.2973196506500244
    3. ' collections' → logprob: -2.1723196506500244
    4. ' functools' → logprob: -2.9223196506500244
    5. ' pandas' → logprob: -4.2973198890686035
    6. ' json' → logprob: -4.5473198890686035
    7. ' re' → logprob: -4.6723198890686035
    8. ' math' → logprob: -4.7973198890686035
    9. ' sys' → logprob: -6.1723198890686035
    10. ' ' → logprob: -6.5473198890686035

Token 15: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8165130615234375
    2. ',' → logprob: -1.3165130615234375
    3. '\' → logprob: -2.4415130615234375
    4. '\n' → logprob: -3.0665130615234375
    5. 'def' → logprob: -3.4415130615234375
    6. 'import' → logprob: -3.5665130615234375
    7. '```' → logprob: -3.5665130615234375
    8. '[' → logprob: -4.1915130615234375
    9. ',
' → logprob: -4.6915130615234375
    10. '.

' → logprob: -5.3165130615234375

Token 16: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8153752684593201
    2. 'data' → logprob: -1.5653753280639648
    3. '.' → logprob: -2.565375328063965
    4. 'for' → logprob: -3.190375328063965
    5. 'result' → logprob: -3.315375328063965
    6. ',' → logprob: -3.565375328063965
    7. '\' → logprob: -3.815375328063965
    8. '[' → logprob: -4.065375328063965
    9. '=' → logprob: -4.190375328063965
    10. '```' → logprob: -4.315375328063965

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18561013042926788
    2. '=' → logprob: -1.8106101751327515
    3. '_' → logprob: -5.810610294342041
    4. ',' → logprob: -6.310610294342041
    5. ' ' → logprob: -7.435610294342041
    6. '  ' → logprob: -9.060609817504883
    7. '=int' → logprob: -9.560609817504883
    8. ' ,' → logprob: -9.685609817504883
    9. '.' → logprob: -9.810609817504883
    10. '   ' → logprob: -10.185609817504883

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029319139197468758
    2. 'int' → logprob: -3.6543190479278564
    3. ' ' → logprob: -6.1543192863464355
    4. '10' → logprob: -7.4043192863464355
    5. '20' → logprob: -9.529318809509277
    6. '5' → logprob: -9.654318809509277
    7. '100' → logprob: -10.779318809509277
    8. ' input' → logprob: -11.029318809509277
    9. '50' → logprob: -11.404318809509277
    10. '3' → logprob: -11.529318809509277

Token 19: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5765520334243774
    2. '(sys' → logprob: -0.8265520334243774
    3. '('' → logprob: -8.326552391052246
    4. '(input' → logprob: -8.451552391052246
    5. '(os' → logprob: -10.451552391052246
    6. 'sys' → logprob: -11.076552391052246
    7. '(
' → logprob: -11.076552391052246
    8. '()' → logprob: -11.326552391052246
    9. '(`' → logprob: -11.451552391052246
    10. '(Sys' → logprob: -11.576552391052246

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.048897553235292435
    2. '.argv' → logprob: -3.5488975048065186
    3. '.' → logprob: -4.048897743225098
    4. '.readline' → logprob: -6.548897743225098
    5. '.stdout' → logprob: -10.298897743225098
    6. ' .' → logprob: -10.548897743225098
    7. '.input' → logprob: -10.923897743225098
    8. '.read' → logprob: -12.423897743225098
    9. '.std' → logprob: -12.548897743225098
    10. '.)' → logprob: -13.673897743225098

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0031943509820848703
    2. '.read' → logprob: -5.753194332122803
    3. '.' → logprob: -11.128194808959961
    4. '.stdin' → logprob: -14.253194808959961
    5. '.readlines' → logprob: -14.378194808959961
    6. ')' → logprob: -15.753194808959961
    7. '.)' → logprob: -15.878194808959961
    8. '.Read' → logprob: -16.25319480895996
    9. '.READ' → logprob: -16.50319480895996
    10. ').' → logprob: -16.62819480895996

Token 22: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1506633162498474
    2. ')' → logprob: -2.150663375854492
    3. '()' → logprob: -3.775663375854492
    4. '().' → logprob: -8.025663375854492
    5. '(' → logprob: -9.400663375854492
    6. '()[' → logprob: -10.275663375854492
    7. ' ())' → logprob: -10.400663375854492
    8. '[' → logprob: -11.275663375854492
    9. '()))' → logprob: -11.525663375854492
    10. '))' → logprob: -11.775663375854492

Token 23: '#' (ID: 2)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8373497128486633
    2. 'lst' → logprob: -1.9623496532440186
    3. 'numbers' → logprob: -2.0873496532440186
    4. 'arr' → logprob: -2.3373496532440186
    5. 'a' → logprob: -3.8373496532440186
    6. 'items' → logprob: -3.8373496532440186
    7. ' data' → logprob: -3.9623496532440186
    8. 'array' → logprob: -4.087349891662598
    9. 'elements' → logprob: -4.087349891662598
    10. 'result' → logprob: -4.212349891662598

Token 24: ' Cr' (ID: 5790)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -1.6082295179367065
    2. ' numbers' → logprob: -1.8582295179367065
    3. ' arr' → logprob: -2.108229637145996
    4. 'data' → logprob: -2.358229637145996
    5. ' lst' → logprob: -2.608229637145996
    6. 'arr' → logprob: -2.858229637145996
    7. 'lst' → logprob: -2.858229637145996
    8. 'numbers' → logprob: -2.983229637145996
    9. ' nums' → logprob: -3.233229637145996
    10. 'nums' → logprob: -3.858229637145996

Token 25: 'éer' (ID: 83012)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.022167880088090897
    2. 'eat' → logprob: -5.022167682647705
    3. 'each' → logprob: -5.272167682647705
    4. 'edit' → logprob: -5.522167682647705
    5. 'ed' → logprob: -6.272167682647705
    6. 'iter' → logprob: -6.772167682647705
    7. 'eam' → logprob: -7.397167682647705
    8. 'ede' → logprob: -7.647167682647705
    9. 'ea' → logprob: -7.897167682647705
    10. 'ef' → logprob: -7.897167682647705

Token 26: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.947605550289154
    2. ' un' → logprob: -1.1976056098937988
    3. ' ' → logprob: -1.3226056098937988
    4. ' la' → logprob: -4.322605609893799
    5. ' a' → logprob: -4.697605609893799
    6. 's' → logprob: -4.697605609893799
    7. '_' → logprob: -5.322605609893799
    8. 'une' → logprob: -5.947605609893799
    9. 'a' → logprob: -6.197605609893799
    10. 'un' → logprob: -6.947605609893799

Token 27: ' matr' (ID: 25095)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.24991929531097412
    2. ' liste' → logprob: -1.7499192953109741
    3. 'suite' → logprob: -4.374919414520264
    4. 'fonction' → logprob: -4.374919414520264
    5. 's' → logprob: -4.874919414520264
    6. 'list' → logprob: -5.124919414520264
    7. ' somme' → logprob: -5.874919414520264
    8. ' suite' → logprob: -6.874919414520264
    9. ' fonction' → logprob: -7.499919414520264
    10. 'som' → logprob: -7.749919414520264

Token 28: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0008650107774883509
    2. 'ic' → logprob: -8.12586498260498
    3. 'i' → logprob: -8.25086498260498
    4. 'ix' → logprob: -8.37586498260498
    5. 'î' → logprob: -10.62586498260498
    6. '```' → logprob: -10.62586498260498
    7. 'ì' → logprob: -12.37586498260498
    8. 'ï' → logprob: -12.50086498260498
    9. 'ixe' → logprob: -12.50086498260498
    10. ' ice' → logprob: -13.12586498260498

Token 29: ' A' (ID: 355)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.3504684269428253
    2. 'm' → logprob: -1.600468397140503
    3. ' matrix' → logprob: -2.975468397140503
    4. '[' → logprob: -4.100468635559082
    5. '(matrix' → logprob: -5.225468635559082
    6. 'mat' → logprob: -5.475468635559082
    7. 'M' → logprob: -6.100468635559082
    8. 'a' → logprob: -6.225468635559082
    9. ' m' → logprob: -6.600468635559082
    10. 'data' → logprob: -6.600468635559082

Token 30: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5767282843589783
    2. 'A' → logprob: -0.9517282843589783
    3. ' A' → logprob: -3.326728343963623
    4. 'a' → logprob: -4.951728343963623
    5. '[' → logprob: -5.576728343963623
    6. '=' → logprob: -6.076728343963623
    7. 'matrix' → logprob: -7.576728343963623
    8. '=[]' → logprob: -7.701728343963623
    9. '#' → logprob: -8.076727867126465
    10. ' ' → logprob: -8.201727867126465

Token 31: ' map' (ID: 4014)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.041040062904358
    2. '[N' → logprob: -1.416040062904358
    3. '[int' → logprob: -1.916040062904358
    4. '[i' → logprob: -2.1660399436950684
    5. ' [' → logprob: -2.9160399436950684
    6. '[n' → logprob: -3.2910399436950684
    7. '[]' → logprob: -4.916039943695068
    8. 'list' → logprob: -5.041039943695068
    9. 'des' → logprob: -5.416039943695068
    10. '[list' → logprob: -5.416039943695068

Token 32: '/filter' (ID: 151200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12517790496349335
    2. '(lambda' → logprob: -2.2501778602600098
    3. '(int' → logprob: -5.62517786026001
    4. 'list' → logprob: -5.75017786026001
    5. '(list' → logprob: -6.00017786026001
    6. '(
' → logprob: -6.25017786026001
    7. '(map' → logprob: -8.250178337097168
    8. '(str' → logprob: -8.500178337097168
    9. 'map' → logprob: -9.250178337097168
    10. 'a' → logprob: -9.250178337097168

Token 33: '/l' (ID: 16347)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06567881256341934
    2. '(
' → logprob: -2.815678834915161
    3. 'A' → logprob: -6.565678596496582
    4. 'a' → logprob: -7.315678596496582
    5. 'matrix' → logprob: -7.690678596496582
    6. '(lambda' → logprob: -8.565678596496582
    7. '(A' → logprob: -8.815678596496582
    8. ',' → logprob: -8.815678596496582
    9. '(matrix' → logprob: -9.315678596496582
    10. 's' → logprob: -9.565678596496582

Token 34: 'ambda' (ID: 12104)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.021864330396056175
    2. 'ambda' → logprob: -4.021864414215088
    3. 'en' → logprob: -5.896864414215088
    4. 'is' → logprob: -8.52186393737793
    5. 'i' → logprob: -9.14686393737793
    6. '#' → logprob: -9.14686393737793
    7. '```' → logprob: -9.14686393737793
    8. 'map' → logprob: -9.77186393737793
    9. 'amb' → logprob: -9.89686393737793
    10. 'am' → logprob: -10.02186393737793

Token 35: ' et' (ID: 859)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0034512223210185766
    2. 'matrix' → logprob: -5.878451347351074
    3. 'a' → logprob: -8.253451347351074
    4. ' A' → logprob: -8.878451347351074
    5. '(
' → logprob: -9.503451347351074
    6. '[' → logprob: -10.253451347351074
    7. '(' → logprob: -10.503451347351074
    8. 'mat' → logprob: -10.878451347351074
    9. 'list' → logprob: -11.503451347351074
    10. '[
' → logprob: -11.503451347351074

Token 36: ' compréhension' (ID: 142333)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.49380698800086975
    2. ' reduce' → logprob: -1.1188069581985474
    3. 'list' → logprob: -3.368807077407837
    4. 'filter' → logprob: -4.493806838989258
    5. ' list' → logprob: -4.743806838989258
    6. 'zip' → logprob: -6.368806838989258
    7. ' filter' → logprob: -6.493806838989258
    8. 'map' → logprob: -6.493806838989258
    9. 'range' → logprob: -7.493806838989258
    10. ' zip' → logprob: -7.743806838989258

Token 37: ' multiple' (ID: 7598)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001360593712888658
    2. 'matrix' → logprob: -7.2513604164123535
    3. ' A' → logprob: -7.8763604164123535
    4. 'a' → logprob: -9.001360893249512
    5. '[' → logprob: -9.626360893249512
    6. '```' → logprob: -10.751360893249512
    7. 'rows' → logprob: -11.376360893249512
    8. ' matrix' → logprob: -11.751360893249512
    9. '[
' → logprob: -12.376360893249512
    10. 'mat' → logprob: -12.376360893249512

Token 38: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011658350005745888
    2. 'matrix' → logprob: -4.886658191680908
    3. ' A' → logprob: -6.011658191680908
    4. 'a' → logprob: -6.761658191680908
    5. ' matrix' → logprob: -8.761658668518066
    6. '```' → logprob: -9.761658668518066
    7. 'rows' → logprob: -10.011658668518066
    8. 's' → logprob: -10.261658668518066
    9. '[' → logprob: -10.636658668518066
    10. ',' → logprob: -11.261658668518066

Token 39: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.829823102336377e-05
    2. 'matrix' → logprob: -10.00009822845459
    3. ' A' → logprob: -10.50009822845459
    4. 'a' → logprob: -11.00009822845459
    5. '[' → logprob: -13.12509822845459
    6. '```' → logprob: -13.50009822845459
    7. 'rows' → logprob: -13.87509822845459
    8. ')' → logprob: -14.25009822845459
    9. ',' → logprob: -14.75009822845459
    10. ' matrix' → logprob: -14.87509822845459

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741147756576538
    2. '=' → logprob: -0.9741147756576538
    3. ' ' → logprob: -11.349114418029785
    4. '[' → logprob: -12.224114418029785
    5. ' =[' → logprob: -12.349114418029785
    6. '=[' → logprob: -12.599114418029785
    7. '=[]' → logprob: -12.599114418029785
    8. ' =
' → logprob: -12.724114418029785
    9. '[]' → logprob: -13.849114418029785
    10. '[:]' → logprob: -13.974114418029785

Token 41: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7147241830825806
    2. '[list' → logprob: -0.9647241830825806
    3. '[' → logprob: -2.339724063873291
    4. ' list' → logprob: -4.464724063873291
    5. '[[' → logprob: -4.464724063873291
    6. ' [' → logprob: -4.714724063873291
    7. '[
' → logprob: -7.964724063873291
    8. ' [[' → logprob: -8.33972454071045
    9. '[int' → logprob: -8.96472454071045
    10. '[List' → logprob: -9.71472454071045

Token 42: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.008804241195321083
    2. ' list' → logprob: -5.5088043212890625
    3. '[list' → logprob: -6.1338043212890625
    4. '[' → logprob: -7.1338043212890625
    5. '[int' → logprob: -7.2588043212890625
    6. 'map' → logprob: -7.5088043212890625
    7. '[i' → logprob: -9.133804321289062
    8. '[*' → logprob: -9.258804321289062
    9. 'int' → logprob: -9.383804321289062
    10. '(list' → logprob: -9.633804321289062

Token 43: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0024930182844400406
    2. '(filter' → logprob: -6.252492904663086
    3. '(' → logprob: -7.877492904663086
    4. '(range' → logprob: -8.627492904663086
    5. 'map' → logprob: -13.627492904663086
    6. '(
' → logprob: -13.877492904663086
    7. '(int' → logprob: -14.252492904663086
    8. '()' → logprob: -14.377492904663086
    9. '((' → logprob: -14.752492904663086
    10. '(i' → logprob: -15.252492904663086

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10576238483190536
    2. '(' → logprob: -2.730762481689453
    3. '(lambda' → logprob: -3.355762481689453
    4. '(float' → logprob: -8.480762481689453
    5. '(
' → logprob: -9.980762481689453
    6. '(str' → logprob: -10.605762481689453
    7. '(abs' → logprob: -11.605762481689453
    8. ')' → logprob: -12.480762481689453
    9. '(filter' → logprob: -12.855762481689453
    10. '(list' → logprob: -12.980762481689453

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009701321832835674
    2. '(sys' → logprob: -5.009701251983643
    3. ',input' → logprob: -6.759701251983643
    4. 'sys' → logprob: -7.259701251983643
    5. ',line' → logprob: -7.384701251983643
    6. '(' → logprob: -8.8847017288208
    7. ',
' → logprob: -9.1347017288208
    8. ',(' → logprob: -9.3847017288208
    9. ' ,' → logprob: -9.7597017288208
    10. '=sys' → logprob: -10.8847017288208

Token 46: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.13863399624824524
    2. 'filter' → logprob: -2.638633966445923
    3. 'line' → logprob: -3.138633966445923
    4. ' sys' → logprob: -5.263634204864502
    5. 'input' → logprob: -5.388634204864502
    6. 'row' → logprob: -6.263634204864502
    7. ')' → logprob: -7.888634204864502
    8. ' filter' → logprob: -8.013633728027344
    9. 'lambda' → logprob: -8.013633728027344
    10. 'x' → logprob: -8.138633728027344

Token 47: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06919652223587036
    2. '.readline' → logprob: -2.8191964626312256
    3. 'stdin' → logprob: -4.944196701049805
    4. '(stdin' → logprob: -9.944196701049805
    5. '.stdout' → logprob: -11.944196701049805
    6. '.readlines' → logprob: -12.194196701049805
    7. 'in' → logprob: -12.694196701049805
    8. 's' → logprob: -12.819196701049805
    9. '```' → logprob: -12.944196701049805
    10. 'sys' → logprob: -12.944196701049805

Token 48: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.650518920039758e-06
    2. '.' → logprob: -13.250003814697266
    3. '.readlines' → logprob: -13.375003814697266
    4. ')' → logprob: -16.000003814697266
    5. 'read' → logprob: -16.500003814697266
    6. ' readline' → logprob: -16.625003814697266
    7. '```' → logprob: -18.000003814697266
    8. '().' → logprob: -18.625003814697266
    9. '))' → logprob: -19.000003814697266
    10. ')))' → logprob: -19.375003814697266

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.676981345459353e-06
    2. '()' → logprob: -12.125005722045898
    3. ' ().' → logprob: -16.2500057220459
    4. '.strip' → logprob: -17.3750057220459
    5. '()))' → logprob: -18.0000057220459
    6. '.readline' → logprob: -18.5000057220459
    7. '(' → logprob: -18.8750057220459
    8. '.split' → logprob: -18.8750057220459
    9. '()
' → logprob: -19.2500057220459
    10. '.rstrip' → logprob: -19.3750057220459

Token 50: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1282530575990677
    2. 'strip' → logprob: -2.1282529830932617
    3. 'rstrip' → logprob: -6.628252983093262
    4. 'read' → logprob: -13.878252983093262
    5. ' split' → logprob: -14.628252983093262
    6. '(split' → logprob: -16.503253936767578
    7. 'rs' → logprob: -16.503253936767578
    8. ' strip' → logprob: -16.878253936767578
    9. 'spl' → logprob: -17.628253936767578
    10. 'decode' → logprob: -17.753253936767578

Token 51: '()' (ID: 416)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0019212529296055436
    2. '))' → logprob: -6.7519211769104
    3. '())))' → logprob: -8.001921653747559
    4. '()' → logprob: -8.376921653747559
    5. '()))
' → logprob: -9.126921653747559
    6. '())' → logprob: -10.126921653747559
    7. '(' → logprob: -10.876921653747559
    8. ')))' → logprob: -11.876921653747559
    9. '())))
' → logprob: -12.626921653747559
    10. '()));' → logprob: -12.876921653747559

Token 52: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1809857189655304
    2. '()))' → logprob: -1.805985689163208
    3. ')))' → logprob: -6.805985927581787
    4. '()' → logprob: -9.805985450744629
    5. '())))' → logprob: -10.555985450744629
    6. ' ))' → logprob: -11.305985450744629
    7. '())' → logprob: -11.680985450744629
    8. ')' → logprob: -11.680985450744629
    9. '()))
' → logprob: -12.430985450744629
    10. ' ' → logprob: -12.680985450744629

Token 53: ' ['' (ID: 5140)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2217104136943817
    2. '['' → logprob: -1.721710443496704
    3. ' [' → logprob: -4.846710205078125
    4. 'list' → logprob: -5.221710205078125
    5. '["' → logprob: -5.971710205078125
    6. ' ['' → logprob: -6.971710205078125
    7. '[]' → logprob: -7.096710205078125
    8. '[-' → logprob: -7.346710205078125
    9. 'sys' → logprob: -7.346710205078125
    10. ' list' → logprob: -8.221710205078125

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06210078299045563
    2. '[' → logprob: -2.812100887298584
    3. ' [' → logprob: -9.812100410461426
    4. ' ' → logprob: -10.687100410461426
    5. '1' → logprob: -10.812100410461426
    6. ''' → logprob: -11.562100410461426
    7. '00' → logprob: -12.687100410461426
    8. '100' → logprob: -12.812100410461426
    9. '['' → logprob: -12.812100410461426
    10. '']' → logprob: -12.812100410461426

Token 55: '']))' (ID: 19989)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.019287753850221634
    2. '']))' → logprob: -4.519287586212158
    3. ''' → logprob: -5.144287586212158
    4. '0' → logprob: -6.519287586212158
    5. ']' → logprob: -8.519288063049316
    6. ''*' → logprob: -8.644288063049316
    7. ']*(' → logprob: -8.769288063049316
    8. ']*' → logprob: -9.394288063049316
    9. '')))' → logprob: -9.519288063049316
    10. '])))' → logprob: -10.394288063049316

Token 56: '[:' (ID: 7808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5867362022399902
    2. 'for' → logprob: -1.5867362022399902
    3. ' for' → logprob: -1.7117362022399902
    4. '[:-' → logprob: -3.4617362022399902
    5. '[:' → logprob: -3.7117362022399902
    6. '[' → logprob: -7.33673620223999
    7. ')]' → logprob: -7.83673620223999
    8. ' )' → logprob: -7.83673620223999
    9. ' ' → logprob: -7.96173620223999
    10. ']' → logprob: -7.96173620223999

Token 57: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004540723282843828
    2. '4' → logprob: -6.504540920257568
    3. 'M' → logprob: -6.504540920257568
    4. '5' → logprob: -7.879540920257568
    5. '3' → logprob: -8.12954044342041
    6. '10' → logprob: -8.50454044342041
    7. ' N' → logprob: -8.75454044342041
    8. 'len' → logprob: -9.50454044342041
    9. '9' → logprob: -9.62954044342041
    10. '7' → logprob: -9.75454044342041

Token 58: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45060455799102783
    2. ']' → logprob: -1.9506045579910278
    3. ')]' → logprob: -1.9506045579910278
    4. '])' → logprob: -2.5756044387817383
    5. ')])' → logprob: -7.075604438781738
    6. '])]' → logprob: -7.450604438781738
    7. ' )' → logprob: -7.950604438781738
    8. '))' → logprob: -8.700604438781738
    9. ' ])' → logprob: -9.450604438781738
    10. ' ' → logprob: -9.950604438781738

Token 59: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03104613721370697
    2. ' for' → logprob: -3.781046152114868
    3. 'for' → logprob: -5.531045913696289
    4. ')]' → logprob: -6.156045913696289
    5. ']' → logprob: -7.281045913696289
    6. ' )' → logprob: -7.656045913696289
    7. '])' → logprob: -8.031045913696289
    8. '))' → logprob: -9.156045913696289
    9. ')])' → logprob: -10.281045913696289
    10. '   ' → logprob: -10.656045913696289

Token 60: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0029813870787620544
    2. ' _' → logprob: -6.627981185913086
    3. ' range' → logprob: -6.752981185913086
    4. 'range' → logprob: -7.877981185913086
    5. '_i' → logprob: -9.752981185913086
    6. '_range' → logprob: -10.752981185913086
    7. 'i' → logprob: -10.752981185913086
    8. ' i' → logprob: -12.252981185913086
    9. ' ' → logprob: -14.752981185913086
    10. ' in' → logprob: -15.252981185913086

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07897505164146423
    2. 'in' → logprob: -2.578974962234497
    3. 'range' → logprob: -9.703974723815918
    4. '<|end|>' → logprob: -11.953974723815918
    5. ' ' → logprob: -12.078974723815918
    6. 'i' → logprob: -12.453974723815918
    7. '<|end|>' → logprob: -13.703974723815918
    8. '	in' → logprob: -13.828974723815918
    9. 'n' → logprob: -13.953974723815918
    10. ')' → logprob: -14.328974723815918

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.318681188422488e-05
    2. ' range' → logprob: -11.25001335144043
    3. '(range' → logprob: -17.12501335144043
    4. '	range' → logprob: -17.25001335144043
    5. ')' → logprob: -18.25001335144043
    6. 'rang' → logprob: -18.75001335144043
    7. 'x' → logprob: -18.87501335144043
    8. 'A' → logprob: -19.00001335144043
    9. '```' → logprob: -19.75001335144043
    10. '   ' → logprob: -20.12501335144043

Token 63: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001249925117008388
    2. '(' → logprob: -9.62512493133545
    3. 'N' → logprob: -9.75012493133545
    4. '(n' → logprob: -15.25012493133545
    5. '(
' → logprob: -15.87512493133545
    6. ' (' → logprob: -16.375125885009766
    7. '	N' → logprob: -17.250125885009766
    8. ' N' → logprob: -17.625125885009766
    9. '(A' → logprob: -17.875125885009766
    10. '((' → logprob: -17.875125885009766

Token 64: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008507246384397149
    2. ')' → logprob: -7.125850677490234
    3. ']' → logprob: -10.375850677490234
    4. ')])' → logprob: -11.500850677490234
    5. '])]' → logprob: -13.375850677490234
    6. '))' → logprob: -13.500850677490234
    7. '])' → logprob: -14.000850677490234
    8. ' )' → logprob: -15.000850677490234
    9. ')]
' → logprob: -15.375850677490234
    10. ')],' → logprob: -15.375850677490234

Token 65: 'A' (ID: 32)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9192180037498474
    2. '<|end|>' → logprob: -0.9192180037498474
    3. ']' → logprob: -2.919218063354492
    4. '#' → logprob: -2.919218063354492
    5. ')' → logprob: -3.419218063354492
    6. 'for' → logprob: -3.919218063354492
    7. 'A' → logprob: -4.294218063354492
    8. '+' → logprob: -5.044218063354492
    9. '[' → logprob: -5.544218063354492
    10. '<|end|>' → logprob: -5.669218063354492

Token 66: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.1823950707912445
    2. ' [' → logprob: -2.9323949813842773
    3. 'list' → logprob: -3.0573949813842773
    4. '[' → logprob: -3.1823949813842773
    5. ' list' → logprob: -3.9323949813842773
    6. '[[' → logprob: -5.807394981384277
    7. '[A' → logprob: -6.807394981384277
    8. ' [[' → logprob: -8.182394981384277
    9. '[len' → logprob: -8.807394981384277
    10. '[(' → logprob: -9.182394981384277

Token 68: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.019530238583683968
    2. '[list' → logprob: -5.394530296325684
    3. ' list' → logprob: -5.644530296325684
    4. '[' → logprob: -5.644530296325684
    5. '[A' → logprob: -6.519530296325684
    6. 'map' → logprob: -6.644530296325684
    7. '[(' → logprob: -6.894530296325684
    8. '[i' → logprob: -7.019530296325684
    9. 'reduce' → logprob: -8.144530296325684
    10. 'A' → logprob: -8.269530296325684

Token 69: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.010015185922384262
    2. '(filter' → logprob: -5.13501501083374
    3. '(re' → logprob: -6.01001501083374
    4. '(' → logprob: -6.51001501083374
    5. '(
' → logprob: -10.510015487670898
    6. '(acc' → logprob: -10.635015487670898
    7. '(zip' → logprob: -10.760015487670898
    8. '(it' → logprob: -11.510015487670898
    9. '(item' → logprob: -12.010015487670898
    10. '(lambda' → logprob: -12.260015487670898

Token 70: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5757154822349548
    2. '(lambda' → logprob: -1.5757155418395996
    3. '(add' → logprob: -1.9507155418395996
    4. '(int' → logprob: -2.4507155418395996
    5. '(
' → logprob: -7.2007155418396
    6. '(list' → logprob: -8.325715065002441
    7. '(operator' → logprob: -8.325715065002441
    8. '(item' → logprob: -8.450715065002441
    9. '(part' → logprob: -8.575715065002441
    10. 'add' → logprob: -8.575715065002441

Token 71: ' jp' (ID: 72535)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6341500878334045
    2. 'x' → logprob: -0.7591500878334045
    3. 'a' → logprob: -7.75915002822876
    4. ' a' → logprob: -8.259150505065918
    5. ' y' → logprob: -8.259150505065918
    6. ' i' → logprob: -9.009150505065918
    7. 'y' → logprob: -9.009150505065918
    8. 'i' → logprob: -9.384150505065918
    9. ',' → logprob: -9.384150505065918
    10. ':' → logprob: -10.759150505065918

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08157799392938614
    2. ',' → logprob: -2.706578016281128
    3. ',j' → logprob: -6.331577777862549
    4. 'os' → logprob: -6.581577777862549
    5. '1' → logprob: -6.706577777862549
    6. 't' → logprob: -6.831577777862549
    7. 'j' → logprob: -7.206577777862549
    8. ':j' → logprob: -7.331577777862549
    9. ' :' → logprob: -7.456577777862549
    10. 'A' → logprob: -7.581577777862549

Token 73: ' A' (ID: 355)
  Prédit: 'jp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -0.46078747510910034
    2. 'add' → logprob: -1.4607875347137451
    3. ' jp' → logprob: -2.335787534713745
    4. 'A' → logprob: -4.210787296295166
    5. ' add' → logprob: -4.710787296295166
    6. 'int' → logprob: -5.210787296295166
    7. '0' → logprob: -5.710787296295166
    8. ' A' → logprob: -6.335787296295166
    9. 'item' → logprob: -6.835787296295166
    10. '(j' → logprob: -7.210787296295166

Token 74: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07092312723398209
    2. '[' → logprob: -3.695923089981079
    3. '[i' → logprob: -4.445923328399658
    4. '[ip' → logprob: -4.570923328399658
    5. '[A' → logprob: -4.820923328399658
    6. '[p' → logprob: -5.695923328399658
    7. '[N' → logprob: -5.945923328399658
    8. '[_' → logprob: -5.945923328399658
    9. '[len' → logprob: -7.695923328399658
    10. '[:' → logprob: -7.695923328399658

Token 75: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.01563461497426033
    2. '[' → logprob: -4.515634536743164
    3. '[i' → logprob: -6.515634536743164
    4. '[(' → logprob: -7.015634536743164
    5. '][' → logprob: -7.765634536743164
    6. '[ip' → logprob: -7.890634536743164
    7. '+' → logprob: -8.640634536743164
    8. '+j' → logprob: -9.265634536743164
    9. '[js' → logprob: -9.390634536743164
    10. '[p' → logprob: -9.390634536743164

Token 76: 'jp' (ID: 72936)
  Prédit: 'jp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -0.13907963037490845
    2. '(j' → logprob: -2.6390795707702637
    3. '(i' → logprob: -3.8890795707702637
    4. '(' → logprob: -4.264079570770264
    5. 'min' → logprob: -5.264079570770264
    6. '(min' → logprob: -5.639079570770264
    7. 'i' → logprob: -6.389079570770264
    8. '(max' → logprob: -6.514079570770264
    9. ' jp' → logprob: -6.514079570770264
    10. 'max' → logprob: -6.639079570770264

Token 77: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8995147943496704
    2. ']' → logprob: -0.8995147943496704
    3. ']+' → logprob: -2.399514675140381
    4. '+' → logprob: -2.774514675140381
    5. ' -' → logprob: -4.024514675140381
    6. ' +' → logprob: -5.524514675140381
    7. '],' → logprob: -5.649514675140381
    8. '+j' → logprob: -6.649514675140381
    9. ' ' → logprob: -7.024514675140381
    10. ':' → logprob: -7.024514675140381

Token 78: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2653503715991974
    2. ' +' → logprob: -2.265350341796875
    3. ' if' → logprob: -3.390350341796875
    4. 'if' → logprob: -3.515350341796875
    5. '*' → logprob: -3.890350341796875
    6. '+j' → logprob: -4.015350341796875
    7. '-' → logprob: -4.640350341796875
    8. ',' → logprob: -5.265350341796875
    9. ' *' → logprob: -5.890350341796875
    10. ' -' → logprob: -6.140350341796875

Token 79: ' i' (ID: 575)
  Prédit: 'jp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -0.6393771767616272
    2. ' jp' → logprob: -0.7643771767616272
    3. 'j' → logprob: -6.639377117156982
    4. ' i' → logprob: -6.889377117156982
    5. ' j' → logprob: -7.014377117156982
    6. ' ' → logprob: -7.264377117156982
    7. 'A' → logprob: -7.389377117156982
    8. '0' → logprob: -7.639377117156982
    9. 'i' → logprob: -7.639377117156982
    10. ' (' → logprob: -8.13937759399414

Token 80: ' >' (ID: 1424)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6735473275184631
    2. ' !=' → logprob: -1.1735472679138184
    3. '+' → logprob: -2.6735472679138184
    4. '==' → logprob: -3.4235472679138184
    5. '>=' → logprob: -3.6735472679138184
    6. ' >=' → logprob: -4.173547267913818
    7. '<=' → logprob: -4.423547267913818
    8. ' ==' → logprob: -4.673547267913818
    9. '>' → logprob: -5.548547267913818
    10. ' <=' → logprob: -5.673547267913818

Token 81: ' jp' (ID: 72535)
  Prédit: 'jp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -0.15538814663887024
    2. ' jp' → logprob: -2.280388116836548
    3. '0' → logprob: -3.405388116836548
    4. ' ' → logprob: -4.905388355255127
    5. '=' → logprob: -7.780388355255127
    6. 'j' → logprob: -8.280387878417969
    7. '1' → logprob: -9.155387878417969
    8. '  ' → logprob: -10.155387878417969
    9. '-' → logprob: -10.217887878417969
    10. 'i' → logprob: -10.717887878417969

Token 82: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.22966530919075012
    2. 'else' → logprob: -1.6046652793884277
    3. ' and' → logprob: -6.479665279388428
    4. 'and' → logprob: -6.604665279388428
    5. ' or' → logprob: -7.104665279388428
    6. '        ' → logprob: -8.979665756225586
    7. ' ' → logprob: -9.229665756225586
    8. 'or' → logprob: -9.354665756225586
    9. '    ' → logprob: -9.854665756225586
    10. '            ' → logprob: -10.104665756225586

Token 83: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7529114484786987
    2. 'A' → logprob: -0.7529114484786987
    3. ' A' → logprob: -3.7529115676879883
    4. ' ' → logprob: -4.252911567687988
    5. 'j' → logprob: -5.127911567687988
    6. 'i' → logprob: -5.377911567687988
    7. 'jp' → logprob: -5.377911567687988
    8. '   ' → logprob: -6.877911567687988
    9. '1' → logprob: -7.252911567687988
    10. ' i' → logprob: -7.502911567687988

Token 84: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.15571080148220062
    2. '0' → logprob: -2.1557106971740723
    3. ' A' → logprob: -4.530710697174072
    4. '1' → logprob: -5.405710697174072
    5. ' ' → logprob: -5.655710697174072
    6. 'i' → logprob: -6.030710697174072
    7. 'jp' → logprob: -6.655710697174072
    8. '-' → logprob: -6.780710697174072
    9. 'j' → logprob: -7.155710697174072
    10. '(' → logprob: -7.655710697174072

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3783356249332428
    2. '[j' → logprob: -1.2533355951309204
    3. '[' → logprob: -3.62833571434021
    4. 'i' → logprob: -6.628335475921631
    5. '][' → logprob: -8.253335952758789
    6. '[N' → logprob: -8.503335952758789
    7. 'j' → logprob: -9.003335952758789
    8. '[ip' → logprob: -9.253335952758789
    9. ',i' → logprob: -9.690835952758789
    10. '   ' → logprob: -9.690835952758789

Token 86: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04416210204362869
    2. '+' → logprob: -3.6691620349884033
    3. '[j' → logprob: -4.669162273406982
    4. '-' → logprob: -5.544162273406982
    5. '[' → logprob: -6.794162273406982
    6. ']' → logprob: -7.044162273406982
    7. ' +' → logprob: -7.169162273406982
    8. ']+' → logprob: -8.294161796569824
    9. ' -' → logprob: -8.419161796569824
    10. '   ' → logprob: -8.544161796569824

Token 87: 'jp' (ID: 72936)
  Prédit: 'jp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -0.23425310850143433
    2. 'j' → logprob: -2.109253168106079
    3. 'i' → logprob: -2.734253168106079
    4. 'pj' → logprob: -4.9842529296875
    5. '1' → logprob: -5.2342529296875
    6. ']' → logprob: -6.6092529296875
    7. '])' → logprob: -6.6092529296875
    8. 'p' → logprob: -6.7342529296875
    9. 'N' → logprob: -6.8592529296875
    10. '0' → logprob: -6.8592529296875

Token 88: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05640643090009689
    2. ']+' → logprob: -3.5564064979553223
    3. '-' → logprob: -4.556406497955322
    4. '],' → logprob: -5.681406497955322
    5. ']),' → logprob: -5.806406497955322
    6. ']*' → logprob: -6.431406497955322
    7. '[i' → logprob: -6.431406497955322
    8. '])' → logprob: -6.556406497955322
    9. '+' → logprob: -6.681406497955322
    10. ' -' → logprob: -7.056406497955322

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.374227425316349e-05
    2. ' ' → logprob: -10.250073432922363
    3. 'i' → logprob: -10.500073432922363
    4. 'j' → logprob: -12.625073432922363
    5. '+' → logprob: -13.250073432922363
    6. ']' → logprob: -13.500073432922363
    7. '0' → logprob: -13.875073432922363
    8. '   ' → logprob: -14.125073432922363
    9. '-' → logprob: -14.937573432922363
    10. ' i' → logprob: -15.562573432922363

Token 90: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13470222055912018
    2. ']+' → logprob: -2.259702205657959
    3. '],' → logprob: -4.759702205657959
    4. ']),' → logprob: -5.134702205657959
    5. '-' → logprob: -6.009702205657959
    6. ']*' → logprob: -6.384702205657959
    7. ']-' → logprob: -7.134702205657959
    8. ' ]' → logprob: -7.384702205657959
    9. '])' → logprob: -7.634702205657959
    10. ' -' → logprob: -8.259702682495117

Token 91: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9505419135093689
    2. ' +' → logprob: -1.4505419731140137
    3. '),' → logprob: -1.8255419731140137
    4. ',' → logprob: -2.7005419731140137
    5. ' if' → logprob: -3.0755419731140137
    6. ' ,' → logprob: -3.9505419731140137
    7. '-' → logprob: -3.9505419731140137
    8. ' ),' → logprob: -4.075541973114014
    9. ' -' → logprob: -4.325541973114014
    10. 'if' → logprob: -4.700541973114014

Token 92: ' i' (ID: 575)
  Prédit: 'jp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -0.7087290287017822
    2. ' i' → logprob: -1.7087290287017822
    3. ' jp' → logprob: -1.8337290287017822
    4. 'i' → logprob: -1.8337290287017822
    5. 'j' → logprob: -5.333728790283203
    6. ' j' → logprob: -6.958728790283203
    7. ' ' → logprob: -7.833728790283203
    8. '0' → logprob: -8.333728790283203
    9. 'pj' → logprob: -9.146228790283203
    10. '(i' → logprob: -9.396228790283203

Token 93: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3587628901004791
    2. '>' → logprob: -1.2337628602981567
    3. ' >=' → logprob: -5.608762741088867
    4. '>=' → logprob: -6.108762741088867
    5. ' ' → logprob: -6.858762741088867
    6. '==' → logprob: -7.733762741088867
    7. ' <' → logprob: -7.733762741088867
    8. ' <=' → logprob: -7.983762741088867
    9. ' !=' → logprob: -7.983762741088867
    10. ' ==' → logprob: -7.983762741088867

Token 94: ' jp' (ID: 72535)
  Prédit: 'jp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -0.12812332808971405
    2. ' jp' → logprob: -2.1281232833862305
    3. ' ' → logprob: -7.8781232833862305
    4. 'j' → logprob: -8.37812328338623
    5. ' i' → logprob: -8.62812328338623
    6. 'i' → logprob: -8.75312328338623
    7. '1' → logprob: -10.25312328338623
    8. '  ' → logprob: -10.50312328338623
    9. ' j' → logprob: -10.50312328338623
    10. ' N' → logprob: -10.62812328338623

Token 95: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12723056972026825
    2. 'else' → logprob: -2.127230644226074
    3. ' ' → logprob: -9.627230644226074
    4. ')' → logprob: -9.877230644226074
    5. '-' → logprob: -9.877230644226074
    6. ']' → logprob: -10.252230644226074
    7. 'e' → logprob: -11.502230644226074
    8. '         ' → logprob: -11.939730644226074
    9. '        ' → logprob: -12.002230644226074
    10. '	else' → logprob: -12.252230644226074

Token 96: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33977657556533813
    2. ' ' → logprob: -1.7147765159606934
    3. 'A' → logprob: -2.7147765159606934
    4. ' A' → logprob: -3.3397765159606934
    5. '1' → logprob: -6.464776515960693
    6. 'None' → logprob: -6.964776515960693
    7. '-' → logprob: -7.339776515960693
    8. 'i' → logprob: -7.464776515960693
    9. ' i' → logprob: -7.714776515960693
    10. ' None' → logprob: -8.214776992797852

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1204710528254509
    2. 'A' → logprob: -2.6204710006713867
    3. ' ' → logprob: -3.7454710006713867
    4. '1' → logprob: -5.495471000671387
    5. 'None' → logprob: -5.620471000671387
    6. ' A' → logprob: -5.870471000671387
    7. '-' → logprob: -6.245471000671387
    8. ''A' → logprob: -6.995471000671387
    9. ''' → logprob: -7.245471000671387
    10. 'i' → logprob: -8.245471000671387

Token 98: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.12498729676008224
    2. ',' → logprob: -2.3749873638153076
    3. ')),' → logprob: -4.3749871253967285
    4. ')' → logprob: -5.9999871253967285
    5. ' else' → logprob: -6.2499871253967285
    6. ' ,' → logprob: -6.3749871253967285
    7. '))),' → logprob: -6.6249871253967285
    8. ' ),' → logprob: -6.7499871253967285
    9. '))' → logprob: -6.8749871253967285
    10. ')))' → logprob: -7.3749871253967285

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25217145681381226
    2. ' range' → logprob: -1.502171516418457
    3. '(range' → logprob: -10.252171516418457
    4. ' ' → logprob: -10.377171516418457
    5. '   ' → logprob: -10.502171516418457
    6. ')' → logprob: -10.502171516418457
    7. 'enumer' → logprob: -10.502171516418457
    8. '[' → logprob: -11.127171516418457
    9. '	range' → logprob: -11.127171516418457
    10. 'rang' → logprob: -11.939671516418457

Token 100: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0019872826524078846
    2. '(' → logprob: -6.251987457275391
    3. '(n' → logprob: -10.25198745727539
    4. '(
' → logprob: -11.75198745727539
    5. ' (' → logprob: -11.87698745727539
    6. '(len' → logprob: -12.75198745727539
    7. ')' → logprob: -13.37698745727539
    8. 'N' → logprob: -13.75198745727539
    9. '(i' → logprob: -14.75198745727539
    10. '((' → logprob: -15.00198745727539

Token 101: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.02594701386988163
    2. '))' → logprob: -4.525947093963623
    3. ' ' → logprob: -4.650947093963623
    4. '))))' → logprob: -5.775947093963623
    5. ')' → logprob: -6.900947093963623
    6. ' ))' → logprob: -7.650947093963623
    7. ')))
' → logprob: -8.650946617126465
    8. ' )' → logprob: -9.025946617126465
    9. '),' → logprob: -9.150946617126465
    10. ')));' → logprob: -9.775946617126465

Token 102: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2216266691684723
    2. 'for' → logprob: -1.72162663936615
    3. ')' → logprob: -4.0966267585754395
    4. ']' → logprob: -6.8466267585754395
    5. ' ' → logprob: -7.3466267585754395
    6. '	for' → logprob: -7.4716267585754395
    7. '   ' → logprob: -7.7216267585754395
    8. ' range' → logprob: -8.971626281738281
    9. ' in' → logprob: -9.471626281738281
    10. ' i' → logprob: -9.596626281738281

Token 103: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04432370141148567
    2. 'range' → logprob: -3.169323682785034
    3. ' i' → logprob: -6.919323921203613
    4. '(range' → logprob: -8.669323921203613
    5. 'i' → logprob: -8.919323921203613
    6. ' ' → logprob: -11.294323921203613
    7. ' in' → logprob: -12.544323921203613
    8. ' xrange' → logprob: -13.169323921203613
    9. 'enumer' → logprob: -13.294323921203613
    10. '  ' → logprob: -13.544323921203613

Token 104: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.32032403349876404
    2. ' in' → logprob: -1.5703240633010864
    3. 'range' → logprob: -2.820323944091797
    4. '(range' → logprob: -5.070323944091797
    5. 'in' → logprob: -8.945323944091797
    6. '(' → logprob: -9.570323944091797
    7. '(N' → logprob: -11.070323944091797
    8. ' (' → logprob: -11.320323944091797
    9. ')' → logprob: -12.070323944091797
    10. ']' → logprob: -13.195323944091797

Token 105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889056205749512
    2. ' range' → logprob: -2.578890562057495
    3. '(range' → logprob: -14.453890800476074
    4. ' ' → logprob: -16.203889846801758
    5. 'N' → logprob: -17.328889846801758
    6. ')' → logprob: -17.828889846801758
    7. '	range' → logprob: -17.953889846801758
    8. '   ' → logprob: -19.328889846801758
    9. '  ' → logprob: -19.453889846801758
    10. ' xrange' → logprob: -19.453889846801758

Token 106: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00017708084487821907
    2. '(' → logprob: -8.750177383422852
    3. 'N' → logprob: -11.250177383422852
    4. '(n' → logprob: -12.875177383422852
    5. ' (' → logprob: -13.250177383422852
    6. '(
' → logprob: -13.875177383422852
    7. '(len' → logprob: -16.12517738342285
    8. ' N' → logprob: -16.75017738342285
    9. '((' → logprob: -17.25017738342285
    10. '(

' → logprob: -17.50017738342285

Token 107: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0017562180291861296
    2. ']' → logprob: -6.376756191253662
    3. ')' → logprob: -10.62675666809082
    4. '])]' → logprob: -10.75175666809082
    5. '])' → logprob: -12.12675666809082
    6. ')])' → logprob: -14.12675666809082
    7. ')],' → logprob: -14.50175666809082
    8. '))' → logprob: -14.50175666809082
    9. ')]
' → logprob: -14.87675666809082
    10. ']]' → logprob: -15.50175666809082

Token 108: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6653454899787903
    2. ']' → logprob: -1.5403454303741455
    3. '
' → logprob: -1.7903454303741455
    4. '<|end|>' → logprob: -2.5403454303741455
    5. '#' → logprob: -4.790345668792725
    6. '[' → logprob: -5.165345668792725
    7. ' ' → logprob: -5.290345668792725
    8. ')]' → logprob: -6.290345668792725
    9. '```' → logprob: -6.915345668792725
    10. 'for' → logprob: -7.415345668792725

Token 109: ' Gén' (ID: 71828)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6358078122138977
    2. '#' → logprob: -2.385807752609253
    3. 'sum' → logprob: -2.635807752609253
    4. 's' → logprob: -3.260807752609253
    5. ' result' → logprob: -3.385807752609253
    6. 'B' → logprob: -3.635807752609253
    7. 'total' → logprob: -3.760807752609253
    8. 'print' → logprob: -3.885807752609253
    9. 'S' → logprob: -3.885807752609253
    10. 'res' → logprob: -4.135807991027832

Token 110: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6911969780921936
    2. 'érer' → logprob: -1.0661969184875488
    3. '#' → logprob: -2.191196918487549
    4. 'for' → logprob: -4.066196918487549
    5. 'expr' → logprob: -4.941196918487549
    6. 'érateur' → logprob: -5.316196918487549
    7. 'def' → logprob: -5.566196918487549
    8. 'ération' → logprob: -5.691196918487549
    9. 'ér' → logprob: -6.691196918487549
    10. 'A' → logprob: -6.816196918487549

Token 111: ' Al' (ID: 1667)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2296457290649414
    2. ' all' → logprob: -1.2296457290649414
    3. 'all' → logprob: -1.3546457290649414
    4. ' l' → logprob: -3.6046457290649414
    5. ' les' → logprob: -3.8546457290649414
    6. 'l' → logprob: -4.104645729064941
    7. ' pairs' → logprob: -4.229645729064941
    8. ' permutations' → logprob: -4.479645729064941
    9. 'la' → logprob: -4.604645729064941
    10. 'pairs' → logprob: -4.729645729064941

Token 112: ' et' (ID: 859)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.23947559297084808
    2. 't' → logprob: -1.8644756078720093
    3. 'g' → logprob: -3.4894754886627197
    4. 'p' → logprob: -4.739475727081299
    5. 'e' → logprob: -5.864475727081299
    6. ' =' → logprob: -5.864475727081299
    7. 'pha' → logprob: -6.114475727081299
    8. 'ls' → logprob: -6.614475727081299
    9. 'ph' → logprob: -6.739475727081299
    10. 'i' → logprob: -6.739475727081299

Token 113: ' Ar' (ID: 1754)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.024549469351768494
    2. 'Bl' → logprob: -4.77454948425293
    3. 'Au' → logprob: -5.39954948425293
    4. 'A' → logprob: -6.64954948425293
    5. 'l' → logprob: -6.89954948425293
    6. ' Ar' → logprob: -7.02454948425293
    7. 'Ul' → logprob: -7.14954948425293
    8. 'Ap' → logprob: -7.27454948425293
    9. 'Ah' → logprob: -7.52454948425293
    10. 'Al' → logprob: -7.64954948425293

Token 114: ' via' (ID: 4493)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.0357169508934021
    2. '=' → logprob: -3.535717010498047
    3. ' =' → logprob: -5.785717010498047
    4. 'al' → logprob: -6.535717010498047
    5. 'l' → logprob: -7.660717010498047
    6. ',' → logprob: -8.160717010498047
    7. '=[]' → logprob: -8.785717010498047
    8. '#' → logprob: -9.035717010498047
    9. '=
' → logprob: -9.160717010498047
    10. ' Al' → logprob: -9.910717010498047

Token 115: ' accumulation' (ID: 70787)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -1.856349229812622
    2. ' list' → logprob: -1.981349229812622
    3. ' zip' → logprob: -2.106349229812622
    4. 'map' → logprob: -2.356349229812622
    5. 'reduce' → logprob: -2.481349229812622
    6. 'zip' → logprob: -2.606349229812622
    7. 'list' → logprob: -2.731349229812622
    8. ' item' → logprob: -2.856349229812622
    9. ' reduce' → logprob: -3.356349229812622
    10. ' la' → logprob: -3.356349229812622

Token 116: ' et' (ID: 859)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.13321232795715332
    2. 'l' → logprob: -2.8832123279571533
    3. '
' → logprob: -3.0082123279571533
    4. 'al' → logprob: -4.758212089538574
    5. 'import' → logprob: -5.633212089538574
    6. ' =' → logprob: -5.883212089538574
    7. ' Al' → logprob: -7.508212089538574
    8. ',' → logprob: -7.758212089538574
    9. '=' → logprob: -7.758212089538574
    10. 'def' → logprob: -7.883212089538574

Token 117: ' trans' (ID: 1643)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.3005075454711914
    2. ' reduce' → logprob: -2.3005075454711914
    3. 'map' → logprob: -2.6755075454711914
    4. ' map' → logprob: -3.5505075454711914
    5. 'zip' → logprob: -4.800507545471191
    6. ' accumulate' → logprob: -4.800507545471191
    7. 'acc' → logprob: -5.050507545471191
    8. ' accumulation' → logprob: -5.550507545471191
    9. ' zip' → logprob: -5.550507545471191
    10. 'filter' → logprob: -5.675507545471191

Token 118: 'position' (ID: 4504)
  Prédit: 'pose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pose' → logprob: -0.28497540950775146
    2. 'position' → logprob: -1.4099754095077515
    3. 'p' → logprob: -7.409975528717041
    4. '#' → logprob: -7.659975528717041
    5. 'posé' → logprob: -7.909975528717041
    6. 'ition' → logprob: -8.159975051879883
    7. '
' → logprob: -8.409975051879883
    8. 'ponse' → logprob: -8.409975051879883
    9. 'post' → logprob: -8.534975051879883
    10. 'pos' → logprob: -8.784975051879883

Token 119: ' zip' (ID: 16216)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.17123132944107056
    2. '
' → logprob: -1.9212312698364258
    3. 'import' → logprob: -5.171231269836426
    4. '#' → logprob: -6.046231269836426
    5. 'al' → logprob: -7.421231269836426
    6. 'def' → logprob: -7.921231269836426
    7. 'A' → logprob: -7.921231269836426
    8. '
' → logprob: -8.296231269836426
    9. 'l' → logprob: -8.546231269836426
    10. 'Ar' → logprob: -8.546231269836426

Token 120: '
' (ID: 198)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.0008056987426243722
    2. '
' → logprob: -8.250805854797363
    3. 'l' → logprob: -9.250805854797363
    4. '#' → logprob: -9.250805854797363
    5. 'al' → logprob: -9.375805854797363
    6. 'Ar' → logprob: -9.750805854797363
    7. 'def' → logprob: -10.250805854797363
    8. 'import' → logprob: -10.250805854797363
    9. ' Al' → logprob: -10.500805854797363
    10. ',' → logprob: -10.500805854797363

Token 121: 'def' (ID: 1314)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.0006181967910379171
    2. ' Al' → logprob: -8.125617980957031
    3. '
' → logprob: -9.375617980957031
    4. 'al' → logprob: -9.875617980957031
    5. 'l' → logprob: -10.250617980957031
    6. 'A' → logprob: -10.625617980957031
    7. '#' → logprob: -10.625617980957031
    8. 'AL' → logprob: -10.750617980957031
    9. '(' → logprob: -11.000617980957031
    10. ',' → logprob: -11.375617980957031

Token 122: ' rot' (ID: 8845)
  Prédit: ' accumulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.9288667440414429
    2. ' split' → logprob: -1.0538667440414429
    3. ' Al' → logprob: -2.6788668632507324
    4. ' generate' → logprob: -3.4288668632507324
    5. 'split' → logprob: -3.4288668632507324
    6. ' accum' → logprob: -4.053866863250732
    7. ' cumulative' → logprob: -4.553866863250732
    8. ' compute' → logprob: -4.803866863250732
    9. ' multiply' → logprob: -4.803866863250732
    10. ' matrix' → logprob: -4.928866863250732

Token 123: '(mat' (ID: 83002)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.07666152715682983
    2. '13' → logprob: -3.2016615867614746
    3. '90' → logprob: -4.326661586761475
    4. 'a' → logprob: -5.451661586761475
    5. '_' → logprob: -5.826661586761475
    6. '45' → logprob: -6.326661586761475
    7. 'ATE' → logprob: -6.701661586761475
    8. '
' → logprob: -6.951661586761475
    9. '27' → logprob: -7.076661586761475
    10. '-' → logprob: -7.576661586761475

Token 124: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09630962461233139
    2. '):' → logprob: -2.4713096618652344
    3. '):
' → logprob: -6.096309661865234
    4. '(mat' → logprob: -6.471309661865234
    5. 'atrix' → logprob: -6.971309661865234
    6. ')' → logprob: -7.096309661865234
    7. ',m' → logprob: -8.846309661865234
    8. 'ation' → logprob: -8.846309661865234
    9. ' ,' → logprob: -8.971309661865234
    10. '(matrix' → logprob: -8.971309661865234

Token 125: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1524488478899002
    2. '   ' → logprob: -2.652448892593384
    3. ' return' → logprob: -2.652448892593384
    4. ' ' → logprob: -8.902448654174805
    5. '	return' → logprob: -9.527448654174805
    6. 'zip' → logprob: -9.777448654174805
    7. '[' → logprob: -10.027448654174805
    8. 'def' → logprob: -10.527448654174805
    9. 'list' → logprob: -10.652448654174805
    10. '
' → logprob: -11.027448654174805

Token 126: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05322267487645149
    2. 'list' → logprob: -3.30322265625
    3. '   ' → logprob: -4.55322265625
    4. ' return' → logprob: -5.55322265625
    5. '[list' → logprob: -8.05322265625
    6. 'zip' → logprob: -9.55322265625
    7. ' list' → logprob: -9.67822265625
    8. '[' → logprob: -10.05322265625
    9. '
' → logprob: -10.30322265625
    10. ' ' → logprob: -10.55322265625

Token 127: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3887673616409302
    2. '[list' → logprob: -1.1387673616409302
    3. '[' → logprob: -6.388767242431641
    4. ' list' → logprob: -8.76376724243164
    5. ' [' → logprob: -10.26376724243164
    6. '[[' → logprob: -11.51376724243164
    7. '(list' → logprob: -12.76376724243164
    8. '[len' → logprob: -13.26376724243164
    9. '[List' → logprob: -13.26376724243164
    10. '[
' → logprob: -13.63876724243164

Token 128: '(map' (ID: 16946)
  Prédit: '(zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.014250477775931358
    2. '(map' → logprob: -4.2642502784729
    3. 'zip' → logprob: -9.514250755310059
    4. '(' → logprob: -11.264250755310059
    5. '(
' → logprob: -15.889250755310059
    6. 'map' → logprob: -16.014249801635742
    7. '(re' → logprob: -16.514249801635742
    8. ' zip' → logprob: -17.139249801635742
    9. '(list' → logprob: -17.764249801635742
    10. '(rot' → logprob: -18.264249801635742

Token 129: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.20696230232715607
    2. 'list' → logprob: -1.7069623470306396
    3. '(lambda' → logprob: -5.3319621086120605
    4. '(' → logprob: -7.4569621086120605
    5. 'lambda' → logprob: -9.706962585449219
    6. '(re' → logprob: -10.956962585449219
    7. ' list' → logprob: -11.331962585449219
    8. '(
' → logprob: -11.831962585449219
    9. '(tuple' → logprob: -11.956962585449219
    10. 're' → logprob: -12.206962585449219

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3569513261318207
    2. 'zip' → logprob: -1.231951355934143
    3. '(zip' → logprob: -5.6069512367248535
    4. 're' → logprob: -5.7319512367248535
    5. ',re' → logprob: -6.6069512367248535
    6. ' zip' → logprob: -10.481951713562012
    7. '[::-' → logprob: -10.481951713562012
    8. '(re' → logprob: -10.606951713562012
    9. ' ,' → logprob: -10.731951713562012
    10. '
' → logprob: -10.731951713562012

Token 131: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.0009745901916176081
    2. 're' → logprob: -7.250974655151367
    3. ' zip' → logprob: -8.250974655151367
    4. '(zip' → logprob: -12.750974655151367
    5. ' reversed' → logprob: -15.125974655151367
    6. '
' → logprob: -16.125974655151367
    7. 'reverse' → logprob: -16.250974655151367
    8. '   ' → logprob: -16.375974655151367
    9. '.zip' → logprob: -16.750974655151367
    10. 'lambda' → logprob: -17.500974655151367

Token 132: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -2.7252845029579476e-05
    2. '(*)' → logprob: -11.000027656555176
    3. '(' → logprob: -11.500027656555176
    4. '*' → logprob: -15.000027656555176
    5. '(
' → logprob: -16.50002670288086
    6. '(-' → logprob: -17.25002670288086
    7. '(

' → logprob: -18.75002670288086
    8. '((*' → logprob: -19.12502670288086
    9. '(*(' → logprob: -19.87502670288086
    10. '[*' → logprob: -20.00002670288086

Token 133: 'mat' (ID: 8872)
  Prédit: 'mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.038266513496637344
    2. 're' → logprob: -3.28826642036438
    3. 'zip' → logprob: -9.6632661819458
    4. 'map' → logprob: -9.7882661819458
    5. '(mat' → logprob: -10.4132661819458
    6. '[' → logprob: -10.9132661819458
    7. 'matrix' → logprob: -11.1632661819458
    8. ' mat' → logprob: -11.4132661819458
    9. '[::-' → logprob: -11.6632661819458
    10. 'rev' → logprob: -11.6632661819458

Token 134: ')))

' (ID: 46526)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0006840797723270953
    2. ')))' → logprob: -7.8756842613220215
    3. '[' → logprob: -8.375683784484863
    4. ')[' → logprob: -10.000683784484863
    5. '[-' → logprob: -11.125683784484863
    6. '))[' → logprob: -11.750683784484863
    7. '))' → logprob: -13.375683784484863
    8. '[:-' → logprob: -14.000683784484863
    9. '[:' → logprob: -14.375683784484863
    10. '[i' → logprob: -14.875683784484863

Token 135: 'zeros' (ID: 24095)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.027298633009195328
    2. 'def' → logprob: -4.402298450469971
    3. ')' → logprob: -5.652298450469971
    4. '#' → logprob: -5.652298450469971
    5. 'A' → logprob: -5.652298450469971
    6. 'Ar' → logprob: -6.902298450469971
    7. 'AL' → logprob: -7.277298450469971
    8. '
' → logprob: -7.777298450469971
    9. 'al' → logprob: -7.902298450469971
    10. ' Al' → logprob: -8.652298927307129

Token 136: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5660642981529236
    2. ' =' → logprob: -1.8160643577575684
    3. '_like' → logprob: -1.9410643577575684
    4. '_' → logprob: -2.9410643577575684
    5. '=' → logprob: -3.3160643577575684
    6. '(N' → logprob: -4.316064357757568
    7. '_matrix' → logprob: -5.191064357757568
    8. '((' → logprob: -5.566064357757568
    9. '()' → logprob: -5.816064357757568
    10. '_mat' → logprob: -6.191064357757568

Token 137: ' lambda' (ID: 27871)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.13418292999267578
    2. '[' → logprob: -2.134182929992676
    3. ' [[' → logprob: -5.259182929992676
    4. ' [' → logprob: -6.384182929992676
    5. '[N' → logprob: -9.134182929992676
    6. '[n' → logprob: -9.134182929992676
    7. '([[' → logprob: -10.759182929992676
    8. '[]' → logprob: -10.884182929992676
    9. '[A' → logprob: -11.134182929992676
    10. '[list' → logprob: -11.134182929992676

Token 138: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2813968062400818
    2. 'N' → logprob: -1.6563968658447266
    3. ' n' → logprob: -3.6563968658447266
    4. 'x' → logprob: -5.156396865844727
    5. '[N' → logprob: -5.156396865844727
    6. ' N' → logprob: -5.281396865844727
    7. ':' → logprob: -5.406396865844727
    8. '[n' → logprob: -5.906396865844727
    9. 'lambda' → logprob: -6.156396865844727
    10. '(n' → logprob: -7.031396865844727

Token 139: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003195535857230425
    2. ':[' → logprob: -6.253195762634277
    3. '[n' → logprob: -7.753195762634277
    4. ' :' → logprob: -8.253195762634277
    5. '(n' → logprob: -8.503195762634277
    6. ':n' → logprob: -8.503195762634277
    7. '[' → logprob: -9.503195762634277
    8. ':list' → logprob: -9.878195762634277
    9. 'n' → logprob: -11.003195762634277
    10. '[N' → logprob: -11.253195762634277

Token 140: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3133043050765991
    2. ' [' → logprob: -1.3133043050765991
    3. '[n' → logprob: -10.93830394744873
    4. '[list' → logprob: -11.18830394744873
    5. ' list' → logprob: -12.68830394744873
    6. 'list' → logprob: -13.18830394744873
    7. '[len' → logprob: -13.68830394744873
    8. '[m' → logprob: -14.06330394744873
    9. '[int' → logprob: -14.43830394744873
    10. ' ' → logprob: -14.93830394744873

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '[' → logprob: -16.87509536743164
    4. 'int' → logprob: -17.50009536743164
    5. ')' → logprob: -18.50009536743164
    6. '00' → logprob: -19.06259536743164
    7. '
' → logprob: -19.37509536743164
    8. '  ' → logprob: -19.43759536743164
    9. '(' → logprob: -19.50009536743164
    10. 'lambda' → logprob: -19.50009536743164

Token 142: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5802277326583862
    2. ']*' → logprob: -1.0802277326583862
    3. '(n' → logprob: -2.330227851867676
    4. '(' → logprob: -5.830227851867676
    5. ']*(' → logprob: -8.330227851867676
    6. 'for' → logprob: -8.705227851867676
    7. ' for' → logprob: -9.955227851867676
    8. '](' → logprob: -10.955227851867676
    9. '(N' → logprob: -11.455227851867676
    10. 'n' → logprob: -11.955227851867676

Token 143: 'n' (ID: 77)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.127391055226326
    2. 'n' → logprob: -2.1273910999298096
    3. '(n' → logprob: -8.50239086151123
    4. '(N' → logprob: -8.87739086151123
    5. '(' → logprob: -9.12739086151123
    6. 'len' → logprob: -11.75239086151123
    7. '(len' → logprob: -13.87739086151123
    8. ' N' → logprob: -13.87739086151123
    9. ' n' → logprob: -14.75239086151123
    10. '2' → logprob: -15.37739086151123

Token 144: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.400959849357605
    2. '<|end|>' → logprob: -1.525959849357605
    3. 'def' → logprob: -3.0259599685668945
    4. '#' → logprob: -3.5259599685668945
    5. '

' → logprob: -4.6509599685668945
    6. ')' → logprob: -5.2759599685668945
    7. 'N' → logprob: -5.6509599685668945
    8. '[' → logprob: -6.0259599685668945
    9. '<|end|>' → logprob: -6.4009599685668945
    10. 'A' → logprob: -6.4009599685668945

Token 145: 'Al' (ID: 2348)
  Prédit: 'Al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.032058410346508026
    2. '#' → logprob: -4.782058238983154
    3. 'def' → logprob: -5.157058238983154
    4. 'Ar' → logprob: -5.907058238983154
    5. 'al' → logprob: -6.157058238983154
    6. 'sum' → logprob: -6.157058238983154
    7. 'AL' → logprob: -6.657058238983154
    8. 'Bl' → logprob: -7.032058238983154
    9. 'B' → logprob: -7.407058238983154
    10. 'L' → logprob: -7.532058238983154

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.056064631789922714
    2. '=' → logprob: -2.9310646057128906
    3. ',' → logprob: -6.806064605712891
    4. ' ,' → logprob: -10.55606460571289
    5. '=[]' → logprob: -11.18106460571289
    6. ' ' → logprob: -11.80606460571289
    7. ' =[' → logprob: -11.80606460571289
    8. '=[' → logprob: -12.55606460571289
    9. '[' → logprob: -12.68106460571289
    10. ' ' → logprob: -13.55606460571289

Token 147: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.9537466168403625
    2. ' [' → logprob: -1.5787465572357178
    3. '[' → logprob: -2.3287465572357178
    4. 'list' → logprob: -2.3287465572357178
    5. ' reduce' → logprob: -2.8287465572357178
    6. 'reduce' → logprob: -2.8287465572357178
    7. '[A' → logprob: -3.3287465572357178
    8. 'A' → logprob: -4.203746795654297
    9. '[list' → logprob: -4.453746795654297
    10. ' A' → logprob: -4.703746795654297

Token 148: 'zeros' (ID: 24095)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.36271941661834717
    2. 'list' → logprob: -2.1127195358276367
    3. 'zeros' → logprob: -2.3627195358276367
    4. '[' → logprob: -2.9877195358276367
    5. '0' → logprob: -4.612719535827637
    6. '[A' → logprob: -4.737719535827637
    7. '[]' → logprob: -5.237719535827637
    8. 'sum' → logprob: -5.362719535827637
    9. 'A' → logprob: -5.612719535827637
    10. '[i' → logprob: -6.987719535827637

Token 149: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003044802288059145
    2. '(' → logprob: -8.750304222106934
    3. 'N' → logprob: -9.750304222106934
    4. '(n' → logprob: -9.875304222106934
    5. ' (' → logprob: -10.500304222106934
    6. '](' → logprob: -13.375304222106934
    7. '
' → logprob: -13.500304222106934
    8. '((' → logprob: -13.875304222106934
    9. ')' → logprob: -14.250304222106934
    10. '(len' → logprob: -14.375304222106934

Token 150: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10633855313062668
    2. ')]' → logprob: -2.3563385009765625
    3. ')]
' → logprob: -5.8563385009765625
    4. '())' → logprob: -6.6063385009765625
    5. '-' → logprob: -7.1063385009765625
    6. ')
' → logprob: -7.7313385009765625
    7. ' )' → logprob: -8.356338500976562
    8. '()' → logprob: -9.356338500976562
    9. '),' → logprob: -9.981338500976562
    10. '))' → logprob: -9.981338500976562

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006134499795734882
    2. '2' → logprob: -5.631134510040283
    3. '0' → logprob: -6.131134510040283
    4. '3' → logprob: -8.506134033203125
    5. '4' → logprob: -9.506134033203125
    6. ' ' → logprob: -10.756134033203125
    7. '5' → logprob: -11.256134033203125
    8. '7' → logprob: -11.506134033203125
    9. '6' → logprob: -11.631134033203125
    10. 'N' → logprob: -11.881134033203125

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3152071535587311
    2. ')]' → logprob: -1.3152071237564087
    3. ' )' → logprob: -7.190207004547119
    4. ')
' → logprob: -7.565207004547119
    5. ')]
' → logprob: -8.565207481384277
    6. ')[' → logprob: -9.315207481384277
    7. ']' → logprob: -9.565207481384277
    8. ')][' → logprob: -9.815207481384277
    9. ')])' → logprob: -9.940207481384277
    10. '-' → logprob: -10.065207481384277

Token 153: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.644309401512146
    2. 'for' → logprob: -1.394309401512146
    3. ' for' → logprob: -1.519309401512146
    4. ']+' → logprob: -6.0193095207214355
    5. ')' → logprob: -6.6443095207214355
    6. ']
' → logprob: -6.8943095207214355
    7. '+' → logprob: -6.8943095207214355
    8. ')]' → logprob: -7.0193095207214355
    9. '()]' → logprob: -7.7693095207214355
    10. ' ]' → logprob: -8.144309043884277

Token 154: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07242213189601898
    2. 'range' → logprob: -2.8224220275878906
    3. '_' → logprob: -4.697422027587891
    4. '(range' → logprob: -7.322422027587891
    5. '_range' → logprob: -7.572422027587891
    6. ' _' → logprob: -9.44742202758789
    7. ' in' → logprob: -10.69742202758789
    8. ' xrange' → logprob: -13.32242202758789
    9. '	range' → logprob: -13.69742202758789
    10. '_in' → logprob: -13.82242202758789

Token 155: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017721657641232014
    2. ' range' → logprob: -6.376772403717041
    3. '(range' → logprob: -10.126771926879883
    4. 'in' → logprob: -11.001771926879883
    5. '(' → logprob: -11.626771926879883
    6. ' in' → logprob: -13.126771926879883
    7. '[' → logprob: -14.751771926879883
    8. 'A' → logprob: -14.751771926879883
    9. '	range' → logprob: -14.751771926879883
    10. ' ' → logprob: -14.876771926879883

Token 156: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001514557225164026
    2. ' range' → logprob: -8.875151634216309
    3. '(range' → logprob: -11.625151634216309
    4. '[' → logprob: -13.375151634216309
    5. '(' → logprob: -14.250151634216309
    6. 'A' → logprob: -15.000151634216309
    7. '	range' → logprob: -17.000150680541992
    8. ']' → logprob: -17.250150680541992
    9. 'rang' → logprob: -17.625150680541992
    10. ')' → logprob: -18.125150680541992

Token 157: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00016742534353397787
    2. '(' → logprob: -9.000167846679688
    3. 'N' → logprob: -10.375167846679688
    4. ' (' → logprob: -12.125167846679688
    5. '((' → logprob: -12.625167846679688
    6. '(n' → logprob: -13.250167846679688
    7. '(len' → logprob: -13.500167846679688
    8. '(
' → logprob: -15.125167846679688
    9. '(M' → logprob: -15.625167846679688
    10. '(A' → logprob: -16.625167846679688

Token 158: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12712286412715912
    2. '+' → logprob: -2.1271228790283203
    3. ' +' → logprob: -9.37712287902832
    4. ')]
' → logprob: -10.37712287902832
    5. ' )' → logprob: -10.50212287902832
    6. ')' → logprob: -11.00212287902832
    7. ']' → logprob: -11.62712287902832
    8. '-' → logprob: -12.25212287902832
    9. ')][' → logprob: -12.25212287902832
    10. ')]

' → logprob: -12.87712287902832

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.106736039626412e-05
    2. '+' → logprob: -11.250031471252441
    3. '2' → logprob: -11.750031471252441
    4. ' ' → logprob: -12.625031471252441
    5. 'N' → logprob: -13.375031471252441
    6. '(' → logprob: -14.000031471252441
    7. '0' → logprob: -14.000031471252441
    8. '
' → logprob: -14.125031471252441
    9. ')' → logprob: -14.250031471252441
    10. '(N' → logprob: -14.312531471252441

Token 160: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005300374468788505
    2. ']' → logprob: -7.625530242919922
    3. ')' → logprob: -10.125530242919922
    4. ')]
' → logprob: -14.500530242919922
    5. '])]' → logprob: -14.500530242919922
    6. ')],' → logprob: -15.375530242919922
    7. '')]' → logprob: -16.000530242919922
    8. ')].' → logprob: -16.125530242919922
    9. ')])' → logprob: -16.375530242919922
    10. '])' → logprob: -16.375530242919922

Token 161: 'Ar' (ID: 2326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011249530129134655
    2. ']' → logprob: -5.761249542236328
    3. ' for' → logprob: -5.761249542236328
    4. '#' → logprob: -6.511249542236328
    5. ')' → logprob: -6.511249542236328
    6. 'Al' → logprob: -7.511249542236328
    7. '<|end|>' → logprob: -7.636249542236328
    8. 'i' → logprob: -8.386249542236328
    9. 'Ar' → logprob: -8.886249542236328
    10. '[' → logprob: -9.136249542236328

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47418031096458435
    2. ' =' → logprob: -0.9741803407669067
    3. '[' → logprob: -9.474180221557617
    4. ')' → logprob: -11.349180221557617
    5. '=[]' → logprob: -12.599180221557617
    6. ']' → logprob: -12.849180221557617
    7. ' =[' → logprob: -13.099180221557617
    8. '=[' → logprob: -13.599180221557617
    9. ' ' → logprob: -13.599180221557617
    10. ',' → logprob: -14.474180221557617

Token 163: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07159728556871414
    2. ' [' → logprob: -2.6965973377227783
    3. 'Al' → logprob: -7.071597099304199
    4. 'zeros' → logprob: -8.3215970993042
    5. ' zeros' → logprob: -8.6965970993042
    6. ' Al' → logprob: -8.8215970993042
    7. '[[' → logprob: -9.8215970993042
    8. '[z' → logprob: -9.9465970993042
    9. '[A' → logprob: -10.3215970993042
    10. '[n' → logprob: -11.3215970993042

Token 164: 'zeros' (ID: 24095)
  Prédit: 'zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.03925791010260582
    2. '[' → logprob: -3.2892580032348633
    3. '[A' → logprob: -7.914258003234863
    4. '[N' → logprob: -8.289258003234863
    5. 'A' → logprob: -8.664258003234863
    6. ' zeros' → logprob: -9.039258003234863
    7. ' [' → logprob: -9.414258003234863
    8. '0' → logprob: -9.664258003234863
    9. 'list' → logprob: -10.039258003234863
    10. '[i' → logprob: -11.039258003234863

Token 165: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003200922510586679
    2. '(' → logprob: -8.125320434570312
    3. ' (' → logprob: -11.250320434570312
    4. 'N' → logprob: -12.000320434570312
    5. '((' → logprob: -13.125320434570312
    6. '(n' → logprob: -13.875320434570312
    7. '
' → logprob: -14.500320434570312
    8. '```' → logprob: -14.625320434570312
    9. '(
' → logprob: -15.375320434570312
    10. '1' → logprob: -15.750320434570312

Token 166: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.635164754698053e-05
    2. '(N' → logprob: -10.750066757202148
    3. 'N' → logprob: -11.000066757202148
    4. ' +' → logprob: -11.750066757202148
    5. ')]' → logprob: -12.500066757202148
    6. ')' → logprob: -12.625066757202148
    7. '(' → logprob: -12.625066757202148
    8. '+
' → logprob: -12.875066757202148
    9. '-' → logprob: -13.125066757202148
    10. '1' → logprob: -13.625066757202148

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. '+' → logprob: -11.125032424926758
    3. ' ' → logprob: -11.500032424926758
    4. ')' → logprob: -13.375032424926758
    5. '```' → logprob: -13.375032424926758
    6. '0' → logprob: -13.500032424926758
    7. 'N' → logprob: -14.562532424926758
    8. '   ' → logprob: -14.750032424926758
    9. '2' → logprob: -15.125032424926758
    10. ']' → logprob: -15.687532424926758

Token 168: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010943770175799727
    2. '+' → logprob: -7.751094341278076
    3. '(N' → logprob: -8.376094818115234
    4. ')]' → logprob: -8.376094818115234
    5. 'for' → logprob: -9.751094818115234
    6. ' )' → logprob: -9.876094818115234
    7. '()' → logprob: -10.876094818115234
    8. '(' → logprob: -11.001094818115234
    9. ')
' → logprob: -11.126094818115234
    10. '[' → logprob: -11.876094818115234

Token 169: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7879062294960022
    2. 'for' → logprob: -0.7879062294960022
    3. ' for' → logprob: -2.4129061698913574
    4. '+' → logprob: -8.037906646728516
    5. ']' → logprob: -8.537906646728516
    6. ' ' → logprob: -9.037906646728516
    7. '[' → logprob: -9.662906646728516
    8. ')]' → logprob: -9.912906646728516
    9. '()' → logprob: -10.287906646728516
    10. ' )' → logprob: -10.787906646728516

Token 170: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05281814560294151
    2. ' (' → logprob: -4.177818298339844
    3. '(N' → logprob: -4.177818298339844
    4. ' _' → logprob: -4.302818298339844
    5. ' range' → logprob: -5.552818298339844
    6. '_range' → logprob: -5.802818298339844
    7. '_N' → logprob: -8.802818298339844
    8. 'range' → logprob: -9.052818298339844
    9. ' N' → logprob: -10.552818298339844
    10. '_(' → logprob: -10.802818298339844

Token 171: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10045251250267029
    2. ' range' → logprob: -2.350452423095703
    3. '_' → logprob: -9.225452423095703
    4. ' in' → logprob: -9.850452423095703
    5. 'in' → logprob: -10.100452423095703
    6. '(range' → logprob: -10.850452423095703
    7. '_range' → logprob: -11.600452423095703
    8. ' _' → logprob: -12.350452423095703
    9. '	range' → logprob: -12.475452423095703
    10. '(' → logprob: -12.475452423095703

Token 172: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.28263893723487854
    2. 'range' → logprob: -1.4076389074325562
    3. '(N' → logprob: -6.657639026641846
    4. '[N' → logprob: -9.282638549804688
    5. '(range' → logprob: -9.782638549804688
    6. ' (' → logprob: -10.532638549804688
    7. '[' → logprob: -12.032638549804688
    8. '_range' → logprob: -12.407638549804688
    9. '	range' → logprob: -12.407638549804688
    10. 'N' → logprob: -13.157638549804688

Token 173: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001029471677611582
    2. 'N' → logprob: -9.750102996826172
    3. ' (' → logprob: -10.375102996826172
    4. '(' → logprob: -11.750102996826172
    5. '(n' → logprob: -13.375102996826172
    6. 'range' → logprob: -14.000102996826172
    7. '
' → logprob: -14.375102996826172
    8. '[N' → logprob: -14.625102996826172
    9. '```' → logprob: -14.750102996826172
    10. '((' → logprob: -15.500102996826172

Token 174: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001434690784662962
    2. ')]' → logprob: -9.000143051147461
    3. ' +' → logprob: -12.250143051147461
    4. ')' → logprob: -12.250143051147461
    5. ')])' → logprob: -13.125143051147461
    6. '+
' → logprob: -13.250143051147461
    7. '1' → logprob: -13.375143051147461
    8. ')]
' → logprob: -13.500143051147461
    9. ')+' → logprob: -14.000143051147461
    10. '()+' → logprob: -14.875143051147461

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. '+' → logprob: -12.625007629394531
    3. '```' → logprob: -13.500007629394531
    4. ' ' → logprob: -13.625007629394531
    5. ')' → logprob: -15.375007629394531
    6. '0' → logprob: -15.500007629394531
    7. '(' → logprob: -15.750007629394531
    8. '
' → logprob: -16.12500762939453
    9. '2' → logprob: -16.50000762939453
    10. '``' → logprob: -16.81250762939453

Token 176: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011772842844948173
    2. ']' → logprob: -9.625117301940918
    3. ')' → logprob: -10.500117301940918
    4. ')]
' → logprob: -10.875117301940918
    5. '])]' → logprob: -13.125117301940918
    6. ')])' → logprob: -13.750117301940918
    7. '')]' → logprob: -14.875117301940918
    8. ')].' → logprob: -15.125117301940918
    9. '))' → logprob: -15.250117301940918
    10. ')]
' → logprob: -15.375117301940918

Token 177: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005539901088923216
    2. 'i' → logprob: -6.005539894104004
    3. ' for' → logprob: -6.505539894104004
    4. ']' → logprob: -7.505539894104004
    5. '#' → logprob: -7.630539894104004
    6. ')' → logprob: -8.130539894104004
    7. 'A' → logprob: -9.880539894104004
    8. '(' → logprob: -10.255539894104004
    9. '<|end|>' → logprob: -10.255539894104004
    10. '[' → logprob: -10.630539894104004

Token 178: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6443317532539368
    2. '(' → logprob: -0.7693317532539368
    3. '(range' → logprob: -5.019331932067871
    4. '(
' → logprob: -6.519331932067871
    5. '(re' → logprob: -7.394331932067871
    6. '((' → logprob: -7.644331932067871
    7. 'for' → logprob: -8.019331932067871
    8. '<|end|>' → logprob: -8.019331932067871
    9. '=' → logprob: -8.144331932067871
    10. '(lambda' → logprob: -8.269331932067871

Token 179: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.02637949399650097
    2. '(' → logprob: -3.7763795852661133
    3. '(
' → logprob: -5.776379585266113
    4. ' (' → logprob: -10.901379585266113
    5. '(

' → logprob: -12.401379585266113
    6. '((' → logprob: -13.526379585266113
    7. 'lambda' → logprob: -13.901379585266113
    8. '(l' → logprob: -14.401379585266113
    9. '=lambda' → logprob: -14.901379585266113
    10. '(...' → logprob: -14.901379585266113

Token 180: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11701157689094543
    2. 'i' → logprob: -2.492011547088623
    3. ' lambda' → logprob: -4.992011547088623
    4. ' j' → logprob: -5.117011547088623
    5. '(i' → logprob: -5.367011547088623
    6. 'lambda' → logprob: -5.992011547088623
    7. '(lambda' → logprob: -6.117011547088623
    8. 'j' → logprob: -6.367011547088623
    9. ' (' → logprob: -6.867011547088623
    10. '(' → logprob: -7.867011547088623

Token 181: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0509458780288696
    2. 'lambda' → logprob: -1.4259458780288696
    3. '=lambda' → logprob: -1.4259458780288696
    4. '(lambda' → logprob: -2.05094575881958
    5. ' lambda' → logprob: -3.67594575881958
    6. ' :' → logprob: -5.42594575881958
    7. ',' → logprob: -6.55094575881958
    8. 'ambda' → logprob: -6.67594575881958
    9. 'idx' → logprob: -6.92594575881958
    10. '(i' → logprob: -6.92594575881958

Token 182: ' [
' (ID: 4240)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.386372834444046
    2. ' (' → logprob: -1.7613728046417236
    3. ' lambda' → logprob: -2.3863728046417236
    4. 'lambda' → logprob: -3.1363728046417236
    5. '(
' → logprob: -4.761373043060303
    6. '(' → logprob: -6.386373043060303
    7. '   ' → logprob: -6.511373043060303
    8. ' (
' → logprob: -7.011373043060303
    9. '[' → logprob: -9.386372566223145
    10. 'A' → logprob: -9.511372566223145

Token 183: '   ' (ID: 271)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -1.1466461420059204
    2. '(' → logprob: -1.5216461420059204
    3. '   ' → logprob: -1.8966461420059204
    4. ' (' → logprob: -2.396646022796631
    5. ' Al' → logprob: -2.521646022796631
    6. '(set' → logprob: -3.396646022796631
    7. '(
' → logprob: -3.646646022796631
    8. ' setattr' → logprob: -3.896646022796631
    9. '(lambda' → logprob: -4.021646022796631
    10. ' ' → logprob: -4.271646022796631

Token 184: ' list' (ID: 1562)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.7995858192443848
    2. '(' → logprob: -1.1745858192443848
    3. '(set' → logprob: -2.9245858192443848
    4. '   ' → logprob: -3.0495858192443848
    5. 'set' → logprob: -3.4245858192443848
    6. ' Al' → logprob: -3.4245858192443848
    7. ' (' → logprob: -3.9245858192443848
    8. '(lambda' → logprob: -4.049585819244385
    9. '(
' → logprob: -4.424585819244385
    10. ' setattr' → logprob: -4.674585819244385

Token 185: '(map' (ID: 16946)
  Prédit: '(set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -1.077184796333313
    2. '(' → logprob: -1.327184796333313
    3. '(map' → logprob: -1.327184796333313
    4. '(lambda' → logprob: -2.5771846771240234
    5. 'Al' → logprob: -4.327184677124023
    6. '(
' → logprob: -4.827184677124023
    7. '.__' → logprob: -4.952184677124023
    8. '__' → logprob: -5.327184677124023
    9. 'set' → logprob: -5.827184677124023
    10. 'item' → logprob: -6.202184677124023

Token 186: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.06977236270904541
    2. '(' → logprob: -2.944772243499756
    3. '(
' → logprob: -4.319772243499756
    4. ' (' → logprob: -6.569772243499756
    5. 'lambda' → logprob: -10.569772720336914
    6. '   ' → logprob: -11.194772720336914
    7. ' (
' → logprob: -11.694772720336914
    8. '(

' → logprob: -11.819772720336914
    9. '(l' → logprob: -12.569772720336914
    10. ' lambda' → logprob: -12.819772720336914

Token 187: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2782955765724182
    2. ' j' → logprob: -1.6532955169677734
    3. 'lambda' → logprob: -4.153295516967773
    4. 'jp' → logprob: -4.653295516967773
    5. ' lambda' → logprob: -4.903295516967773
    6. 'i' → logprob: -5.278295516967773
    7. ' jp' → logprob: -5.403295516967773
    8. ' i' → logprob: -6.278295516967773
    9. '   ' → logprob: -6.653295516967773
    10. 'x' → logprob: -7.153295516967773

Token 188: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03576099872589111
    2. 'x' → logprob: -4.910760879516602
    3. 'lambda' → logprob: -5.160760879516602
    4. ' :' → logprob: -5.535760879516602
    5. 'ambda' → logprob: -5.785760879516602
    6. 'idx' → logprob: -6.160760879516602
    7. ' lambda' → logprob: -6.285760879516602
    8. '   ' → logprob: -6.285760879516602
    9. 'j' → logprob: -6.410760879516602
    10. '=lambda' → logprob: -6.535760879516602

Token 189: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.6010085940361023
    2. ' Al' → logprob: -1.101008653640747
    3. '   ' → logprob: -2.726008653640747
    4. 'Ar' → logprob: -4.726008415222168
    5. '(lambda' → logprob: -4.726008415222168
    6. ' (' → logprob: -4.851008415222168
    7. '(' → logprob: -4.851008415222168
    8. 'lambda' → logprob: -5.101008415222168
    9. ' lambda' → logprob: -5.976008415222168
    10. ' Ar' → logprob: -6.226008415222168

Token 190: '.__' (ID: 10210)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.021945038810372353
    2. '.__' → logprob: -4.271944999694824
    3. '[' → logprob: -5.771944999694824
    4. '__' → logprob: -6.396944999694824
    5. '[i' → logprob: -7.396944999694824
    6. 'idx' → logprob: -7.896944999694824
    7. '.append' → logprob: -8.021944999694824
    8. ')' → logprob: -8.771944999694824
    9. '[j' → logprob: -8.896944999694824
    10. '```' → logprob: -9.084444999694824

Token 191: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.007618102710694075
    2. 'getitem' → logprob: -4.882617950439453
    3. 'sets' → logprob: -12.007617950439453
    4. '```' → logprob: -13.257617950439453
    5. 'i' → logprob: -14.382617950439453
    6. ' set' → logprob: -14.507617950439453
    7. '
' → logprob: -14.632617950439453
    8. '_set' → logprob: -15.007617950439453
    9. '__' → logprob: -15.382617950439453
    10. '`' → logprob: -15.382617950439453

Token 192: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -7.896309739408025e-07
    2. 'attr' → logprob: -14.250000953674316
    3. 'ite' → logprob: -17.125
    4. 'it' → logprob: -17.75
    5. '(item' → logprob: -17.75
    6. 'getitem' → logprob: -17.875
    7. ' item' → logprob: -18.5
    8. '(' → logprob: -19.0
    9. '((' → logprob: -19.25
    10. '__(' → logprob: -19.625

Token 193: '__(' (ID: 8241)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.004011084325611591
    2. '(' → logprob: -6.254011154174805
    3. ' (' → logprob: -7.129011154174805
    4. 'idx' → logprob: -7.879011154174805
    5. '(index' → logprob: -8.379011154174805
    6. '((' → logprob: -8.754011154174805
    7. ')(' → logprob: -9.004011154174805
    8. '[idx' → logprob: -9.129011154174805
    9. '(
' → logprob: -9.754011154174805
    10. ')' → logprob: -9.754011154174805

Token 194: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.022465046495199203
    2. ' idx' → logprob: -4.022465229034424
    3. '(idx' → logprob: -5.522465229034424
    4. '0' → logprob: -9.772464752197266
    5. ' (' → logprob: -10.522464752197266
    6. ')' → logprob: -10.522464752197266
    7. '(' → logprob: -10.647464752197266
    8. 'index' → logprob: -10.647464752197266
    9. '[idx' → logprob: -10.647464752197266
    10. 'i' → logprob: -10.772464752197266

Token 195: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037278688978403807
    2. ',[' → logprob: -6.128727912902832
    3. '[' → logprob: -7.253727912902832
    4. ',
' → logprob: -8.753727912902832
    5. '],' → logprob: -9.503727912902832
    6. 'idx' → logprob: -9.628727912902832
    7. '[idx' → logprob: -9.878727912902832
    8. '],[' → logprob: -9.878727912902832
    9. ',j' → logprob: -9.878727912902832
    10. ' ,' → logprob: -10.003727912902832

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008508202619850636
    2. '1' → logprob: -5.383508205413818
    3. 'idx' → logprob: -6.508508205413818
    4. 'j' → logprob: -7.133508205413818
    5. '[' → logprob: -7.633508205413818
    6. ' ' → logprob: -7.883508205413818
    7. '][' → logprob: -8.88350772857666
    8. 'i' → logprob: -9.00850772857666
    9. '   ' → logprob: -9.63350772857666
    10. '
' → logprob: -9.75850772857666

Token 197: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013839183375239372
    2. ',[' → logprob: -4.763839244842529
    3. ',j' → logprob: -6.513839244842529
    4. '[j' → logprob: -7.388839244842529
    5. '[' → logprob: -7.388839244842529
    6. '],' → logprob: -7.763839244842529
    7. '],[' → logprob: -7.888839244842529
    8. ' ,' → logprob: -8.138838768005371
    9. ',list' → logprob: -8.263838768005371
    10. '+' → logprob: -8.763838768005371

Token 198: ' (
' (ID: 4112)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.19418202340602875
    2. '[idx' → logprob: -2.4441819190979004
    3. '[' → logprob: -2.9441819190979004
    4. 'idx' → logprob: -4.6941819190979
    5. ' list' → logprob: -5.0691819190979
    6. '[list' → logprob: -5.0691819190979
    7. '[j' → logprob: -5.3191819190979
    8. 'lambda' → logprob: -5.4441819190979
    9. ' [' → logprob: -6.4441819190979
    10. '[(' → logprob: -7.1941819190979

Token 199: '       ' (ID: 309)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.22273939847946167
    2. '[' → logprob: -1.9727394580841064
    3. '[j' → logprob: -4.222739219665527
    4. '[list' → logprob: -4.347739219665527
    5. '[A' → logprob: -4.847739219665527
    6. 'Al' → logprob: -4.972739219665527
    7. '[idx' → logprob: -5.722739219665527
    8. '[i' → logprob: -5.847739219665527
    9. '[(' → logprob: -6.097739219665527
    10. ' list' → logprob: -6.097739219665527

Token 200: ' lambda' (ID: 27871)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.17200490832328796
    2. '[' → logprob: -2.2970049381256104
    3. 'Al' → logprob: -3.9220049381256104
    4. '[j' → logprob: -4.422004699707031
    5. '[list' → logprob: -4.672004699707031
    6. '[A' → logprob: -5.047004699707031
    7. '[
' → logprob: -6.422004699707031
    8. '[(' → logprob: -6.422004699707031
    9. '[i' → logprob: -6.797004699707031
    10. 'reduce' → logprob: -6.922004699707031

Token 201: ' row' (ID: 5225)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1498725414276123
    2. '[' → logprob: -2.7748725414276123
    3. 'Al' → logprob: -4.024872779846191
    4. 'reduce' → logprob: -4.024872779846191
    5. '[
' → logprob: -4.399872779846191
    6. '[list' → logprob: -4.774872779846191
    7. '[j' → logprob: -5.274872779846191
    8. '[A' → logprob: -5.899872779846191
    9. 'add' → logprob: -6.024872779846191
    10. ' list' → logprob: -6.149872779846191

Token 202: ':' (ID: 25)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.8778142333030701
    2. '[row' → logprob: -1.5028142929077148
    3. '[(' → logprob: -2.502814292907715
    4. '[' → logprob: -2.502814292907715
    5. '[i' → logprob: -2.752814292907715
    6. 'list' → logprob: -3.127814292907715
    7. '[
' → logprob: -3.877814292907715
    8. '[idx' → logprob: -4.002814292907715
    9. 'row' → logprob: -5.002814292907715
    10. '   ' → logprob: -5.127814292907715

Token 203: ' row' (ID: 5225)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.28526410460472107
    2. 'row' → logprob: -2.410264015197754
    3. 'list' → logprob: -2.660264015197754
    4. '[' → logprob: -2.910264015197754
    5. '[(' → logprob: -4.285264015197754
    6. ' [' → logprob: -4.910264015197754
    7. '[list' → logprob: -5.035264015197754
    8. '[j' → logprob: -6.035264015197754
    9. '[
' → logprob: -6.785264015197754
    10. ' list' → logprob: -7.160264015197754

Token 204: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.09117948263883591
    2. ' if' → logprob: -3.466179370880127
    3. '[:]' → logprob: -4.216179370880127
    4. ')))' → logprob: -4.841179370880127
    5. ')' → logprob: -4.841179370880127
    6. 'if' → logprob: -5.091179370880127
    7. '))' → logprob: -5.466179370880127
    8. '[:-' → logprob: -6.466179370880127
    9. '[j' → logprob: -6.591179370880127
    10. '.copy' → logprob: -6.716179370880127

Token 205: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.015771325677633286
    2. 'N' → logprob: -5.390771389007568
    3. 'len' → logprob: -5.515771389007568
    4. 'j' → logprob: -6.015771389007568
    5. ']' → logprob: -6.640771389007568
    6. ':' → logprob: -7.015771389007568
    7. '(' → logprob: -7.765771389007568
    8. ':]' → logprob: -7.765771389007568
    9. '-' → logprob: -8.01577091217041
    10. '1' → logprob: -8.01577091217041

Token 206: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022391125094145536
    2. '1' → logprob: -6.127239227294922
    3. '(' → logprob: -11.127239227294922
    4. '0' → logprob: -11.252239227294922
    5. ']' → logprob: -12.752239227294922
    6. 'idx' → logprob: -12.814739227294922
    7. '
' → logprob: -12.939739227294922
    8. '2' → logprob: -13.377239227294922
    9. '][' → logprob: -13.502239227294922
    10. '+' → logprob: -13.627239227294922

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01626051776111126
    2. '0' → logprob: -4.141260623931885
    3. '[' → logprob: -9.266260147094727
    4. '2' → logprob: -10.266260147094727
    5. '-' → logprob: -10.641260147094727
    6. ']' → logprob: -10.766260147094727
    7. '
' → logprob: -11.328760147094727
    8. '

' → logprob: -12.766260147094727
    9. '' → logprob: -13.016260147094727
    10. '```' → logprob: -13.078760147094727

Token 208: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7188584804534912
    2. ']+' → logprob: -0.7188584804534912
    3. '+' → logprob: -3.718858480453491
    4. '[' → logprob: -8.09385871887207
    5. '-' → logprob: -8.59385871887207
    6. '])' → logprob: -9.21885871887207
    7. ']]' → logprob: -9.59385871887207
    8. '][:' → logprob: -9.59385871887207
    9. '][' → logprob: -9.84385871887207
    10. '])+' → logprob: -10.21885871887207

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009919608710333705
    2. ']' → logprob: -7.7509918212890625
    3. 'idx' → logprob: -8.250991821289062
    4. ' ' → logprob: -9.500991821289062
    5. ']+' → logprob: -10.375991821289062
    6. 'len' → logprob: -10.375991821289062
    7. '+' → logprob: -10.750991821289062
    8. '0' → logprob: -10.875991821289062
    9. '-' → logprob: -11.125991821289062
    10. 'sum' → logprob: -11.375991821289062

Token 210: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14530886709690094
    2. ']))' → logprob: -2.5203089714050293
    3. ']+' → logprob: -3.0203089714050293
    4. '])' → logprob: -6.145308971405029
    5. '])))' → logprob: -6.520308971405029
    6. '+' → logprob: -7.520308971405029
    7. '])),' → logprob: -7.645308971405029
    8. '],' → logprob: -7.770308971405029
    9. ']
' → logprob: -8.895308494567871
    10. ' ]' → logprob: -9.145308494567871

Token 211: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4452974796295166
    2. ' +' → logprob: -1.5702974796295166
    3. ']' → logprob: -2.4452974796295166
    4. ']))' → logprob: -3.5702974796295166
    5. ']+' → logprob: -4.5702972412109375
    6. '+[' → logprob: -4.6952972412109375
    7. ')' → logprob: -5.4452972412109375
    8. '])' → logprob: -6.1952972412109375
    9. ')))' → logprob: -6.8202972412109375
    10. '()+' → logprob: -6.9452972412109375

Token 212: ' [' (ID: 723)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.8144850134849548
    2. '[' → logprob: -1.3144850730895996
    3. 'row' → logprob: -1.4394850730895996
    4. ' [' → logprob: -3.8144850730895996
    5. '[A' → logprob: -4.6894850730896
    6. 'list' → logprob: -5.0644850730896
    7. '[(' → logprob: -5.6894850730896
    8. ' row' → logprob: -5.6894850730896
    9. '[j' → logprob: -5.9394850730896
    10. '[list' → logprob: -6.6894850730896

Token 213: 'row' (ID: 843)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.6362762451171875
    2. 'sum' → logprob: -1.5112762451171875
    3. 'row' → logprob: -1.6362762451171875
    4. 'add' → logprob: -4.0112762451171875
    5. '0' → logprob: -4.1362762451171875
    6. 'A' → logprob: -4.7612762451171875
    7. ' reduce' → logprob: -5.1362762451171875
    8. 'Al' → logprob: -6.7612762451171875
    9. ' sum' → logprob: -6.8862762451171875
    10. 'Ar' → logprob: -7.1362762451171875

Token 214: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00011522514978423715
    2. 'idx' → logprob: -9.250115394592285
    3. '(idx' → logprob: -12.000115394592285
    4. '[' → logprob: -12.125115394592285
    5. '[j' → logprob: -12.750115394592285
    6. '   ' → logprob: -13.625115394592285
    7. '[i' → logprob: -14.125115394592285
    8. ' idx' → logprob: -14.375115394592285
    9. '```' → logprob: -14.500115394592285
    10. '	idx' → logprob: -15.250115394592285

Token 215: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023343311622738838
    2. '[' → logprob: -3.773343324661255
    3. '
' → logprob: -10.148343086242676
    4. ' ' → logprob: -10.773343086242676
    5. '   ' → logprob: -11.148343086242676
    6. ']' → logprob: -12.398343086242676
    7. '(' → logprob: -12.960843086242676
    8. '```' → logprob: -13.085843086242676
    9. '0' → logprob: -13.148343086242676
    10. '<|end|>' → logprob: -13.210843086242676

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.08944896562025e-05
    2. '0' → logprob: -10.000081062316895
    3. '2' → logprob: -11.812581062316895
    4. '[' → logprob: -11.875081062316895
    5. '
' → logprob: -12.187581062316895
    6. ' ' → logprob: -12.625081062316895
    7. '```' → logprob: -12.875081062316895
    8. ']' → logprob: -13.000081062316895
    9. '   ' → logprob: -13.187581062316895
    10. '-' → logprob: -14.625081062316895

Token 217: ']]' (ID: 8928)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.30731335282325745
    2. ']' → logprob: -2.1823134422302246
    3. '1' → logprob: -2.5573134422302246
    4. '[' → logprob: -2.8073134422302246
    5. ']]' → logprob: -4.307313442230225
    6. '0' → logprob: -9.057312965393066
    7. '][' → logprob: -9.932312965393066
    8. ']-' → logprob: -9.932312965393066
    9. '+' → logprob: -10.057312965393066
    10. ']]]' → logprob: -10.682312965393066

Token 218: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00935487449169159
    2. '+' → logprob: -5.634355068206787
    3. ']*' → logprob: -6.384355068206787
    4. '])' → logprob: -6.759355068206787
    5. ']+' → logprob: -7.259355068206787
    6. '   ' → logprob: -7.384355068206787
    7. ' ]' → logprob: -7.759355068206787
    8. ']*(' → logprob: -7.884355068206787
    9. ']]' → logprob: -8.884354591369629
    10. ']])' → logprob: -9.134354591369629

Token 219: ' A' (ID: 355)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.3563571274280548
    2. '1' → logprob: -1.9813570976257324
    3. ' row' → logprob: -2.4813570976257324
    4. 'A' → logprob: -3.6063570976257324
    5. 'Al' → logprob: -3.8563570976257324
    6. 'mat' → logprob: -4.856357097625732
    7. ' Al' → logprob: -5.356357097625732
    8. ' A' → logprob: -5.606357097625732
    9. ' ' → logprob: -5.856357097625732
    10. '0' → logprob: -6.231357097625732

Token 220: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.03361884132027626
    2. 'idx' → logprob: -3.908618927001953
    3. '[' → logprob: -4.783618927001953
    4. '[i' → logprob: -5.908618927001953
    5. '][' → logprob: -6.783618927001953
    6. '(idx' → logprob: -8.033618927001953
    7. ' idx' → logprob: -8.658618927001953
    8. ']' → logprob: -10.033618927001953
    9. 'i' → logprob: -10.533618927001953
    10. '	idx' → logprob: -10.658618927001953

Token 221: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.045895129442214966
    2. '0' → logprob: -3.2958950996398926
    3. 'idx' → logprob: -5.420895099639893
    4. '[idx' → logprob: -5.920895099639893
    5. '][' → logprob: -8.04589557647705
    6. ']' → logprob: -8.79589557647705
    7. ' idx' → logprob: -10.29589557647705
    8. '   ' → logprob: -10.60839557647705
    9. '1' → logprob: -10.79589557647705
    10. '(idx' → logprob: -10.85839557647705

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008653218857944012
    2. '1' → logprob: -5.008653163909912
    3. '[' → logprob: -7.008653163909912
    4. 'idx' → logprob: -7.008653163909912
    5. ' ' → logprob: -10.57115364074707
    6. '   ' → logprob: -10.57115364074707
    7. ']' → logprob: -11.63365364074707
    8. '(' → logprob: -11.69615364074707
    9. '][' → logprob: -11.82115364074707
    10. '
' → logprob: -12.00865364074707

Token 223: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022492227144539356
    2. '[' → logprob: -7.127249240875244
    3. ']][' → logprob: -7.502249240875244
    4. '[idx' → logprob: -7.877249240875244
    5. ' ][' → logprob: -8.627248764038086
    6. ']' → logprob: -9.002248764038086
    7. ']])' → logprob: -10.252248764038086
    8. ',' → logprob: -10.752248764038086
    9. 'idx' → logprob: -10.814748764038086
    10. '   ' → logprob: -11.064748764038086

Token 224: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03755650669336319
    2. 'j' → logprob: -3.5375564098358154
    3. ' idx' → logprob: -4.9125566482543945
    4. ' j' → logprob: -8.412556648254395
    5. '   ' → logprob: -9.912556648254395
    6. 'i' → logprob: -9.912556648254395
    7. '
' → logprob: -10.662556648254395
    8. '  ' → logprob: -10.912556648254395
    9. ' ' → logprob: -11.787556648254395
    10. '	idx' → logprob: -11.787556648254395

Token 225: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028411708772182465
    2. '[' → logprob: -3.653411626815796
    3. ']' → logprob: -7.278411865234375
    4. '0' → logprob: -7.528411865234375
    5. ' ' → logprob: -9.090911865234375
    6. 'idx' → logprob: -9.090911865234375
    7. '])' → logprob: -9.340911865234375
    8. ']+' → logprob: -9.465911865234375
    9. ']]' → logprob: -9.590911865234375
    10. '-' → logprob: -9.715911865234375

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020761480554938316
    2. '0' → logprob: -7.127076148986816
    3. 'idx' → logprob: -7.502076148986816
    4. ']' → logprob: -8.252076148986816
    5. ']]' → logprob: -8.752076148986816
    6. '[' → logprob: -9.127076148986816
    7. '])' → logprob: -9.877076148986816
    8. ']])' → logprob: -10.377076148986816
    9. ' ' → logprob: -11.252076148986816
    10. ']))' → logprob: -11.314576148986816

Token 227: ']]]' (ID: 198030)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.32282066345214844
    2. ']]]' → logprob: -1.4478206634521484
    3. '-' → logprob: -4.072820663452148
    4. ']' → logprob: -4.572820663452148
    5. ']])' → logprob: -4.822820663452148
    6. ']+' → logprob: -6.072820663452148
    7. '])]' → logprob: -6.447820663452148
    8. ']-' → logprob: -8.197820663452148
    9. ' -' → logprob: -8.322820663452148
    10. ']]
' → logprob: -8.572820663452148

Token 228: ' +' (ID: 659)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.2588014602661133
    2. '[idx' → logprob: -1.5088014602661133
    3. '(idx' → logprob: -1.8838014602661133
    4. '])' → logprob: -2.0088014602661133
    5. '   ' → logprob: -3.0088014602661133
    6. '       ' → logprob: -3.0088014602661133
    7. ']' → logprob: -3.6338014602661133
    8. ' for' → logprob: -3.6338014602661133
    9. '           ' → logprob: -4.633801460266113
    10. ']))' → logprob: -4.633801460266113

Token 229: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.386922687292099
    2. ' row' → logprob: -1.1369227170944214
    3. '[row' → logprob: -10.761922836303711
    4. '(row' → logprob: -11.636922836303711
    5. '       ' → logprob: -11.761922836303711
    6. ' ' → logprob: -12.011922836303711
    7. '[' → logprob: -13.636922836303711
    8. '   ' → logprob: -13.761922836303711
    9. '	row' → logprob: -13.761922836303711
    10. '        ' → logprob: -13.886922836303711

Token 230: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0002670575922820717
    2. '(idx' → logprob: -8.250267028808594
    3. 'idx' → logprob: -13.250267028808594
    4. '[' → logprob: -13.375267028808594
    5. '[(' → logprob: -13.625267028808594
    6. '   ' → logprob: -14.625267028808594
    7. '[:' → logprob: -15.500267028808594
    8. '       ' → logprob: -16.250267028808594
    9. '[len' → logprob: -16.750267028808594
    10. ' [' → logprob: -17.000267028808594

Token 231: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008302362984977663
    2. '1' → logprob: -7.125830173492432
    3. ']' → logprob: -11.87583065032959
    4. '
' → logprob: -12.12583065032959
    5. '   ' → logprob: -12.62583065032959
    6. 'idx' → logprob: -13.25083065032959
    7. '[
' → logprob: -13.62583065032959
    8. '```' → logprob: -13.87583065032959
    9. '[idx' → logprob: -14.00083065032959
    10. ')' → logprob: -14.68833065032959

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022530299611389637
    2. '[' → logprob: -6.12725305557251
    3. '
' → logprob: -10.627252578735352
    4. ']' → logprob: -11.252252578735352
    5. '0' → logprob: -11.439752578735352
    6. ' ' → logprob: -13.002252578735352
    7. '```' → logprob: -13.252252578735352
    8. '   ' → logprob: -13.314752578735352
    9. '2' → logprob: -13.439752578735352
    10. ':' → logprob: -13.502252578735352

Token 233: ']+' (ID: 15344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3732112944126129
    2. '1' → logprob: -1.6232112646102905
    3. '+' → logprob: -2.24821138381958
    4. ']+' → logprob: -4.87321138381958
    5. ']' → logprob: -8.373210906982422
    6. '2' → logprob: -8.623210906982422
    7. ':]' → logprob: -9.248210906982422
    8. ':' → logprob: -9.498210906982422
    9. '{' → logprob: -9.748210906982422
    10. '0' → logprob: -10.248210906982422

Token 234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005028736195527017
    2. '1' → logprob: -7.750503063201904
    3. ' ' → logprob: -9.625502586364746
    4. '   ' → logprob: -13.500502586364746
    5. '```' → logprob: -13.625502586364746
    6. '
' → logprob: -14.000502586364746
    7. '3' → logprob: -14.313002586364746
    8. '[' → logprob: -14.313002586364746
    9. '+' → logprob: -15.188002586364746
    10. '  ' → logprob: -15.688002586364746

Token 235: ':]
' (ID: 61598)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32334813475608826
    2. ':]' → logprob: -1.4483481645584106
    3. ':],' → logprob: -3.198348045349121
    4. ':]
' → logprob: -8.073348045349121
    5. ':]

' → logprob: -9.573348045349121
    6. ':])
' → logprob: -9.823348045349121
    7. ']),' → logprob: -11.698348045349121
    8. ':)' → logprob: -11.823348045349121
    9. '])),' → logprob: -12.073348045349121
    10. ']:' → logprob: -12.073348045349121

Token 236: '   ' (ID: 271)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.9806721210479736
    2. '))' → logprob: -1.6056721210479736
    3. ']))' → logprob: -2.1056721210479736
    4. ')))' → logprob: -2.6056721210479736
    5. ')' → logprob: -2.7306721210479736
    6. '(' → logprob: -3.4806721210479736
    7. '(row' → logprob: -3.7306721210479736
    8. '),' → logprob: -3.9806721210479736
    9. '   ' → logprob: -4.3556718826293945
    10. ')(' → logprob: -4.3556718826293945

Token 237: ' )(' (ID: 100233)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.013073049485683441
    2. '(row' → logprob: -4.763072967529297
    3. '(' → logprob: -6.388072967529297
    4. ')(' (adapté à ' )(') → logprob: -6.513072967529297
    5. '](' → logprob: -8.513072967529297
    6. '])(' → logprob: -8.638072967529297
    7. ' (' → logprob: -8.763072967529297
    8. ')' → logprob: -9.013072967529297
    9. '(A' → logprob: -9.138072967529297
    10. 'idx' → logprob: -9.263072967529297

Token 238: 'Al' (ID: 2348)
  Prédit: 'Al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.0007534049218520522
    2. ' Al' → logprob: -7.625753402709961
    3. 'Ar' → logprob: -9.125753402709961
    4. 'idx' → logprob: -9.750753402709961
    5. 'zeros' → logprob: -10.375753402709961
    6. '(' → logprob: -10.875753402709961
    7. 'row' → logprob: -11.250753402709961
    8. '[' → logprob: -11.625753402709961
    9. 'A' → logprob: -12.250753402709961
    10. 'lambda' → logprob: -12.875753402709961

Token 239: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.001098895794712007
    2. 'idx' → logprob: -7.001099109649658
    3. '[' → logprob: -9.0010986328125
    4. ' idx' → logprob: -10.8760986328125
    5. '(idx' → logprob: -11.1260986328125
    6. ')' → logprob: -11.8760986328125
    7. '	idx' → logprob: -12.0010986328125
    8. '_idx' → logprob: -12.7510986328125
    9. '```' → logprob: -13.1260986328125
    10. '))' → logprob: -13.5010986328125

Token 240: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18030580878257751
    2. '[' → logprob: -1.8053058385849
    3. '(' → logprob: -7.8053059577941895
    4. '])' → logprob: -10.805305480957031
    5. '][' → logprob: -11.055305480957031
    6. ' ' → logprob: -11.055305480957031
    7. '1' → logprob: -11.305305480957031
    8. '<|end|>' → logprob: -11.492805480957031
    9. ']' → logprob: -11.555305480957031
    10. '<|end|>' → logprob: -11.617805480957031

Token 241: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010700009443098679
    2. '[' → logprob: -9.750106811523438
    3. '1' → logprob: -10.625106811523438
    4. '(' → logprob: -12.250106811523438
    5. ' ' → logprob: -12.437606811523438
    6. '   ' → logprob: -13.625106811523438
    7. 'idx' → logprob: -13.812606811523438
    8. '
' → logprob: -13.812606811523438
    9. '<|end|>' → logprob: -14.062606811523438
    10. ']' → logprob: -14.187606811523438

Token 242: ']]' (ID: 8928)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -1.1229300498962402
    2. ']))' → logprob: -1.3729300498962402
    3. '])),' → logprob: -1.6229300498962402
    4. ']),' → logprob: -2.2479300498962402
    5. '][' → logprob: -2.7479300498962402
    6. ']' → logprob: -3.6229300498962402
    7. '])))' → logprob: -4.24793004989624
    8. '])' → logprob: -5.12293004989624
    9. '])[' → logprob: -6.49793004989624
    10. '][:' → logprob: -6.74793004989624

Token 243: ')),' (ID: 12098)
  Prédit: '])),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])),' → logprob: -0.28587910532951355
    2. '),' → logprob: -2.785879135131836
    3. ']),' → logprob: -3.035879135131836
    4. '],' → logprob: -3.660879135131836
    5. ',' → logprob: -3.660879135131836
    6. ']))' → logprob: -3.785879135131836
    7. '))),' → logprob: -3.785879135131836
    8. ')),' → logprob: -4.535879135131836
    9. ')]' → logprob: -5.035879135131836
    10. ']' → logprob: -5.035879135131836

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008411920862272382
    2. ' range' → logprob: -7.25084114074707
    3. 'idx' → logprob: -9.12584114074707
    4. '   ' → logprob: -12.50084114074707
    5. '(range' → logprob: -12.50084114074707
    6. 'filter' → logprob: -12.87584114074707
    7. 're' → logprob: -12.87584114074707
    8. '[' → logprob: -13.37584114074707
    9. 'A' → logprob: -13.87584114074707
    10. '	range' → logprob: -14.25084114074707

Token 245: '(idx' (ID: 42793)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00035810720873996615
    2. '(' → logprob: -8.875358581542969
    3. '(idx' → logprob: -9.000358581542969
    4. 'N' → logprob: -9.375358581542969
    5. '(len' → logprob: -12.500358581542969
    6. '(
' → logprob: -13.625358581542969
    7. ' (' → logprob: -13.875358581542969
    8. '   ' → logprob: -14.000358581542969
    9. '(n' → logprob: -14.500358581542969
    10. 'idx' → logprob: -14.500358581542969

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07446406781673431
    2. '(' → logprob: -2.6994640827178955
    3. '1' → logprob: -5.574463844299316
    4. '(idx' → logprob: -7.949463844299316
    5. '(N' → logprob: -8.574463844299316
    6. 'idx' → logprob: -10.449463844299316
    7. '(len' → logprob: -10.574463844299316
    8. 'len' → logprob: -10.574463844299316
    9. '[idx' → logprob: -10.949463844299316
    10. '```' → logprob: -11.074463844299316

Token 247: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07399258762598038
    2. 'N' → logprob: -3.5739924907684326
    3. '(N' → logprob: -3.6989924907684326
    4. '[' → logprob: -4.448992729187012
    5. '(' → logprob: -5.323992729187012
    6. '0' → logprob: -7.198992729187012
    7. 'len' → logprob: -7.698992729187012
    8. '(idx' → logprob: -8.448992729187012
    9. '[N' → logprob: -8.948992729187012
    10. 'idx' → logprob: -9.323992729187012

Token 248: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8304026126861572
    2. ']+' → logprob: -0.8304026126861572
    3. ',' → logprob: -2.5804026126861572
    4. ' +' → logprob: -3.9554026126861572
    5. ']' → logprob: -4.205402374267578
    6. ']))' → logprob: -4.705402374267578
    7. '],' → logprob: -6.080402374267578
    8. ' ,' → logprob: -6.330402374267578
    9. '[' → logprob: -6.330402374267578
    10. '()+' → logprob: -7.330402374267578

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033856455702334642
    2. 'idx' → logprob: -6.003385543823242
    3. ' ' → logprob: -7.878385543823242
    4. 'N' → logprob: -8.378385543823242
    5. '(idx' → logprob: -9.253385543823242
    6. '(' → logprob: -10.003385543823242
    7. ' idx' → logprob: -10.253385543823242
    8. '0' → logprob: -10.253385543823242
    9. '(N' → logprob: -10.628385543823242
    10. '2' → logprob: -10.753385543823242

Token 250: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6568431854248047
    2. ')))' → logprob: -1.5318431854248047
    3. ')),' → logprob: -1.9068431854248047
    4. '))),' → logprob: -2.9068431854248047
    5. '+' → logprob: -3.5318431854248047
    6. ')' → logprob: -4.406843185424805
    7. '))))' → logprob: -4.906843185424805
    8. ')))),' → logprob: -5.281843185424805
    9. ')):' → logprob: -6.281843185424805
    10. ')),
' → logprob: -6.906843185424805

Token 251: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0003819332632701844
    2. ' N' → logprob: -8.000381469726562
    3. 'idx' → logprob: -10.125381469726562
    4. '   ' → logprob: -12.500381469726562
    5. 'len' → logprob: -14.500381469726562
    6. 'n' → logprob: -15.000381469726562
    7. ' idx' → logprob: -15.125381469726562
    8. '  ' → logprob: -15.250381469726562
    9. '	N' → logprob: -15.375381469726562
    10. ' ' → logprob: -15.375381469726562

Token 252: '))),
' (ID: 91673)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0040596406906843185
    2. ')))' → logprob: -6.629059791564941
    3. '))' → logprob: -6.754059791564941
    4. '[' → logprob: -7.629059791564941
    5. ' +' → logprob: -7.754059791564941
    6. ')' → logprob: -9.254059791564941
    7. '))),' → logprob: -9.254059791564941
    8. ')+' → logprob: -9.629059791564941
    9. '0' → logprob: -9.629059791564941
    10. '1' → logprob: -10.254059791564941

Token 253: '   ' (ID: 271)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.7899519205093384
    2. '   ' → logprob: -2.039951801300049
    3. 'range' → logprob: -2.289951801300049
    4. 'idx' → logprob: -2.539951801300049
    5. '])' → logprob: -2.664951801300049
    6. ' list' → logprob: -2.789951801300049
    7. 'lambda' → logprob: -2.914951801300049
    8. ' idx' → logprob: -3.164951801300049
    9. 'None' → logprob: -3.414951801300049
    10. ' range' → logprob: -3.414951801300049

Token 254: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5274711847305298
    2. 'list' (adapté à ' list') → logprob: -1.0274711847305298
    3. 'None' → logprob: -4.02747106552124
    4. ' None' → logprob: -4.65247106552124
    5. ']))' → logprob: -5.77747106552124
    6. '   ' → logprob: -5.90247106552124
    7. '[' → logprob: -6.02747106552124
    8. 'Al' → logprob: -6.15247106552124
    9. ' ]' → logprob: -6.27747106552124
    10. '])' → logprob: -6.52747106552124

Token 255: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007401806069537997
    2. 'map' → logprob: -7.250740051269531
    3. '(lambda' → logprob: -11.250740051269531
    4. '(' → logprob: -11.250740051269531
    5. '(
' → logprob: -13.000740051269531
    6. '(filter' → logprob: -14.625740051269531
    7. ',map' → logprob: -14.875740051269531
    8. '```' → logprob: -15.500740051269531
    9. '(range' → logprob: -15.875740051269531
    10. 'lambda' → logprob: -15.875740051269531

Token 256: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0002666999935172498
    2. '(' → logprob: -8.375267028808594
    3. 'lambda' → logprob: -10.875267028808594
    4. '(
' → logprob: -11.500267028808594
    5. ' (' → logprob: -12.875267028808594
    6. '```' → logprob: -14.000267028808594
    7. '=lambda' → logprob: -14.375267028808594
    8. '(None' → logprob: -14.500267028808594
    9. '(l' → logprob: -14.750267028808594
    10. '
' → logprob: -15.500267028808594

Token 257: ' j' (ID: 441)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6279800534248352
    2. 'j' → logprob: -1.3779799938201904
    3. 'idx' → logprob: -2.1279799938201904
    4. ' lambda' → logprob: -3.0029799938201904
    5. '(lambda' → logprob: -4.0029802322387695
    6. ' j' → logprob: -4.2529802322387695
    7. ' idx' → logprob: -4.5029802322387695
    8. '(idx' → logprob: -6.6279802322387695
    9. '(j' → logprob: -9.00298023223877
    10. '(' → logprob: -9.50298023223877

Token 258: ':' (ID: 25)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7533963918685913
    2. '(idx' → logprob: -0.8783963918685913
    3. ' (' → logprob: -2.753396511077881
    4. ':' → logprob: -3.628396511077881
    5. '(' → logprob: -4.003396511077881
    6. ',' → logprob: -6.378396511077881
    7. 'lambda' → logprob: -7.253396511077881
    8. '(None' → logprob: -7.378396511077881
    9. '(range' → logprob: -7.628396511077881
    10. ' lambda' → logprob: -8.003396034240723

Token 259: ' Ar' (ID: 1754)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.1671706736087799
    2. 'Al' → logprob: -2.292170763015747
    3. ' Ar' → logprob: -3.167170763015747
    4. ' Al' → logprob: -4.542170524597168
    5. '   ' → logprob: -9.792170524597168
    6. ' ' → logprob: -10.667170524597168
    7. '(' → logprob: -11.417170524597168
    8. '    ' → logprob: -12.292170524597168
    9. '  ' → logprob: -12.417170524597168
    10. '       ' → logprob: -12.667170524597168

Token 260: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.004202224779874086
    2. '(idx' → logprob: -5.754202365875244
    3. '__' → logprob: -7.254202365875244
    4. '[idx' → logprob: -9.004201889038086
    5. '(__' → logprob: -9.629201889038086
    6. '(' → logprob: -10.129201889038086
    7. '().__' → logprob: -10.129201889038086
    8. '[' → logprob: -11.629201889038086
    9. '__.__' → logprob: -11.629201889038086
    10. '(lambda' → logprob: -11.629201889038086

Token 261: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -7.779520092299208e-05
    2. '_set' → logprob: -9.625078201293945
    3. '__' → logprob: -11.375078201293945
    4. 'getitem' → logprob: -16.125078201293945
    5. ' set' → logprob: -16.500078201293945
    6. '```' → logprob: -19.875078201293945
    7. 's' → logprob: -20.000078201293945
    8. '...' → logprob: -20.125078201293945
    9. 'sett' → logprob: -20.125078201293945
    10. '.set' → logprob: -20.250078201293945

Token 262: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -2.1008713702030946e-06
    2. 'getitem' → logprob: -13.375001907348633
    3. 'idx' → logprob: -14.750001907348633
    4. '(idx' → logprob: -17.625001907348633
    5. '(item' → logprob: -18.000001907348633
    6. ' item' → logprob: -18.375001907348633
    7. '[idx' → logprob: -18.750001907348633
    8. 'id' → logprob: -19.375001907348633
    9. '$item' → logprob: -19.625001907348633
    10. '-item' → logprob: -19.625001907348633

Token 263: '__(' (ID: 8241)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.08306355029344559
    2. '(' → logprob: -2.9580636024475098
    3. '__(' → logprob: -3.8330636024475098
    4. '((' → logprob: -6.33306360244751
    5. '__((' → logprob: -7.20806360244751
    6. ' (' → logprob: -7.33306360244751
    7. '([' → logprob: -7.45806360244751
    8. '<|end|>' → logprob: -7.45806360244751
    9. '(index' → logprob: -7.70806360244751
    10. '(lambda' → logprob: -8.333063125610352

Token 264: 'idx' (ID: 13196)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0001434690784662962
    2. ' (' → logprob: -9.000143051147461
    3. '(' → logprob: -11.500143051147461
    4. '[idx' → logprob: -12.625143051147461
    5. '(j' → logprob: -13.375143051147461
    6. 'idx' → logprob: -13.500143051147461
    7. '(lambda' → logprob: -13.750143051147461
    8. '(index' → logprob: -14.000143051147461
    9. '((' → logprob: -15.000143051147461
    10. '   ' → logprob: -15.250143051147461

Token 265: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5370756387710571
    2. '(idx' → logprob: -0.9120756387710571
    3. '[' → logprob: -4.787075519561768
    4. '(j' → logprob: -6.537075519561768
    5. ' (' → logprob: -6.662075519561768
    6. '[idx' → logprob: -6.912075519561768
    7. '([' → logprob: -7.162075519561768
    8. '(lambda' → logprob: -8.287075996398926
    9. '__(' → logprob: -8.662075996398926
    10. '(index' → logprob: -9.037075996398926

Token 266: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20852290093898773
    2. '1' → logprob: -1.958522915840149
    3. '(' → logprob: -3.0835227966308594
    4. '[' → logprob: -6.833522796630859
    5. ' ' → logprob: -9.58352279663086
    6. ' (' → logprob: -9.70852279663086
    7. '```' → logprob: -10.08352279663086
    8. '
' → logprob: -10.95852279663086
    9. '   ' → logprob: -11.02102279663086
    10. '([' → logprob: -11.39602279663086

Token 267: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1544693410396576
    2. '],' → logprob: -2.5294692516326904
    3. '[' → logprob: -3.4044692516326904
    4. ' ,' → logprob: -4.2794694900512695
    5. '),' → logprob: -5.5294694900512695
    6. '0' → logprob: -5.5294694900512695
    7. ',[' → logprob: -6.1544694900512695
    8. '(' → logprob: -6.2794694900512695
    9. '][' → logprob: -6.9044694900512695
    10. '(),' → logprob: -7.2794694900512695

Token 268: ' (
' (ID: 4112)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.41411125659942627
    2. '(lambda' → logprob: -1.7891112565994263
    3. ' (' → logprob: -2.2891111373901367
    4. '(range' → logprob: -2.7891111373901367
    5. 'range' → logprob: -5.914111137390137
    6. '[idx' → logprob: -6.414111137390137
    7. 'idx' → logprob: -6.414111137390137
    8. 'lambda' → logprob: -6.914111137390137
    9. ' idx' → logprob: -7.289111137390137
    10. 'j' → logprob: -7.914111137390137

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29861539602279663
    2. 'Ar' → logprob: -1.4236154556274414
    3. 'lambda' → logprob: -4.798615455627441
    4. '(lambda' → logprob: -5.423615455627441
    5. '   ' → logprob: -5.923615455627441
    6. ' Ar' → logprob: -7.298615455627441
    7. '(' → logprob: -7.298615455627441
    8. '(
' → logprob: -8.298615455627441
    9. '           ' → logprob: -9.798615455627441
    10. '      ' → logprob: -9.798615455627441

Token 270: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.010979906655848026
    2. '(lambda' → logprob: -5.260980129241943
    3. '       ' → logprob: -5.885980129241943
    4. '   ' → logprob: -6.385980129241943
    5. ' lambda' → logprob: -6.760980129241943
    6. 'Ar' → logprob: -10.135979652404785
    7. '    ' → logprob: -11.260979652404785
    8. '(' → logprob: -11.385979652404785
    9. 'λ' → logprob: -12.135979652404785
    10. ' ' → logprob: -12.135979652404785

Token 271: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.5759629607200623
    2. 'row' → logprob: -0.8259629607200623
    3. '[row' → logprob: -11.200963020324707
    4. '(row' → logprob: -12.700963020324707
    5. 'j' → logprob: -12.950963020324707
    6. ' lambda' → logprob: -14.575963020324707
    7. 'ar' → logprob: -14.575963020324707
    8. ' j' → logprob: -14.700963020324707
    9. 'lambda' → logprob: -14.700963020324707
    10. ' ' → logprob: -14.950963020324707

Token 272: ':' (ID: 25)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0017206385964527726
    2. '(' → logprob: -7.251720428466797
    3. ' (' → logprob: -7.376720428466797
    4. '[row' → logprob: -8.876720428466797
    5. '(j' → logprob: -9.626720428466797
    6. ':' → logprob: -9.751720428466797
    7. 'row' → logprob: -10.501720428466797
    8. '(lambda' → logprob: -10.751720428466797
    9. ')' → logprob: -11.376720428466797
    10. '=row' → logprob: -11.501720428466797

Token 273: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5759475827217102
    2. ' row' → logprob: -0.8259475827217102
    3. '(row' → logprob: -12.825947761535645
    4. '[row' → logprob: -13.075947761535645
    5. ' ' → logprob: -13.700947761535645
    6. 'r' → logprob: -13.825947761535645
    7. '	row' → logprob: -14.950947761535645
    8. '=row' → logprob: -15.575947761535645
    9. '   ' → logprob: -16.200946807861328
    10. ',row' → logprob: -16.325946807861328

Token 274: '[:' (ID: 7808)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.7313408255577087
    2. '(idx' → logprob: -0.9813408255577087
    3. '(row' → logprob: -2.6063408851623535
    4. '[row' → logprob: -3.2313408851623535
    5. '[:' → logprob: -3.8563408851623535
    6. '[j' → logprob: -5.2313408851623535
    7. '[' → logprob: -5.9813408851623535
    8. 'idx' → logprob: -7.3563408851623535
    9. '(' → logprob: -8.606340408325195
    10. ' (' → logprob: -8.981340408325195

Token 275: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -2.4034345187828876e-05
    2. ' idx' → logprob: -11.50002384185791
    3. '[idx' → logprob: -11.62502384185791
    4. '(idx' → logprob: -12.50002384185791
    5. '[' → logprob: -14.62502384185791
    6. 'j' → logprob: -14.62502384185791
    7. '	idx' → logprob: -16.125024795532227
    8. 'index' → logprob: -16.500024795532227
    9. '
' → logprob: -17.250024795532227
    10. '(' → logprob: -17.250024795532227

Token 276: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013500562636181712
    2. '1' → logprob: -9.12513542175293
    3. '(' → logprob: -11.00013542175293
    4. '[idx' → logprob: -12.75013542175293
    5. '0' → logprob: -13.25013542175293
    6. '```' → logprob: -14.00013542175293
    7. ' [' → logprob: -14.37513542175293
    8. 'idx' → logprob: -14.37513542175293
    9. '(idx' → logprob: -14.50013542175293
    10. '[
' → logprob: -14.62513542175293

Token 277: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026508932933211327
    2. '0' → logprob: -3.6515090465545654
    3. '[' → logprob: -8.651509284973145
    4. 'idx' → logprob: -12.339009284973145
    5. ' ' → logprob: -12.776509284973145
    6. '
' → logprob: -12.964009284973145
    7. '```' → logprob: -13.089009284973145
    8. '   ' → logprob: -13.089009284973145
    9. ']' → logprob: -13.151509284973145
    10. '(' → logprob: -13.214009284973145

Token 278: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3166276514530182
    2. '[' → logprob: -1.9416276216506958
    3. ']+' → logprob: -2.0666277408599854
    4. '1' → logprob: -7.191627502441406
    5. ']' → logprob: -7.816627502441406
    6. '()+' → logprob: -10.191627502441406
    7. ' +' → logprob: -10.441627502441406
    8. '+[' → logprob: -11.066627502441406
    9. '][' → logprob: -11.316627502441406
    10. ')+' → logprob: -11.441627502441406

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008078443352133036
    2. 'idx' → logprob: -7.375807762145996
    3. '+' → logprob: -9.000807762145996
    4. '(idx' → logprob: -10.750807762145996
    5. ' ' → logprob: -11.750807762145996
    6. ' idx' → logprob: -12.000807762145996
    7. '   ' → logprob: -12.250807762145996
    8. '2' → logprob: -12.750807762145996
    9. '[idx' → logprob: -13.063307762145996
    10. ']+' → logprob: -13.375807762145996

Token 280: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006948007503524423
    2. ']+' → logprob: -7.375694751739502
    3. '+' → logprob: -10.62569522857666
    4. '(row' → logprob: -11.12569522857666
    5. ' ]' → logprob: -11.12569522857666
    6. '[' → logprob: -12.87569522857666
    7. '()]' → logprob: -13.00069522857666
    8. '']' → logprob: -13.62569522857666
    9. ')' → logprob: -13.62569522857666
    10. '```' → logprob: -13.75069522857666

Token 281: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4741614758968353
    2. '+' → logprob: -0.9741615056991577
    3. ']' → logprob: -9.974161148071289
    4. '[' → logprob: -11.224161148071289
    5. ')' → logprob: -11.974161148071289
    6. ']+' → logprob: -12.599161148071289
    7. '(row' → logprob: -12.724161148071289
    8. '+[' → logprob: -12.724161148071289
    9. '```' → logprob: -13.099161148071289
    10. '   ' → logprob: -13.349161148071289

Token 282: ' [' (ID: 723)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.3339424729347229
    2. ' [' → logprob: -1.3339424133300781
    3. '[' → logprob: -3.958942413330078
    4. ' row' → logprob: -7.208942413330078
    5. 'row' → logprob: -7.458942413330078
    6. '[j' → logprob: -10.333942413330078
    7. '(row' → logprob: -11.333942413330078
    8. '       ' → logprob: -11.583942413330078
    9. ' ' → logprob: -12.583942413330078
    10. '   ' → logprob: -13.333942413330078

Token 283: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0004905993700958788
    2. ' row' → logprob: -7.625490665435791
    3. '(row' → logprob: -13.500490188598633
    4. '   ' → logprob: -14.625490188598633
    5. '[row' → logprob: -15.250490188598633
    6. '       ' → logprob: -15.625490188598633
    7. '	row' → logprob: -16.625490188598633
    8. '  ' → logprob: -16.875490188598633
    9. ' ' → logprob: -16.875490188598633
    10. '    ' → logprob: -17.125490188598633

Token 284: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.048660267144441605
    2. '(idx' → logprob: -3.0486602783203125
    3. 'idx' → logprob: -9.548660278320312
    4. ' idx' → logprob: -14.798660278320312
    5. '[j' → logprob: -15.423660278320312
    6. '
' → logprob: -15.423660278320312
    7. '   ' → logprob: -15.548660278320312
    8. '	idx' → logprob: -15.798660278320312
    9. '[' → logprob: -15.923660278320312
    10. '[
' → logprob: -16.423660278320312

Token 285: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016030559781938791
    2. '0' → logprob: -6.501603126525879
    3. '1' → logprob: -9.251603126525879
    4. '   ' → logprob: -13.751603126525879
    5. 'idx' → logprob: -13.876603126525879
    6. '       ' → logprob: -14.501603126525879
    7. '(' → logprob: -14.501603126525879
    8. '
' → logprob: -14.751603126525879
    9. '[idx' → logprob: -15.251603126525879
    10. '```' → logprob: -15.501603126525879

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018923594325315207
    2. '1' → logprob: -8.875188827514648
    3. '[' → logprob: -10.000188827514648
    4. ' ' → logprob: -13.375188827514648
    5. '   ' → logprob: -14.250188827514648
    6. '(' → logprob: -14.562688827514648
    7. '
' → logprob: -15.000188827514648
    8. '```' → logprob: -15.500188827514648
    9. ']' → logprob: -16.18768882751465
    10. '       ' → logprob: -16.62518882751465

Token 287: ']]' (ID: 8928)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.08298500627279282
    2. ']' → logprob: -2.5829849243164062
    3. '+' → logprob: -5.832984924316406
    4. '[' → logprob: -7.332984924316406
    5. ']]' → logprob: -7.957984924316406
    6. ' ]' → logprob: -10.457984924316406
    7. '0' → logprob: -11.082984924316406
    8. '1' → logprob: -11.082984924316406
    9. '   ' → logprob: -11.207984924316406
    10. '][' → logprob: -11.332984924316406

Token 288: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20148174464702606
    2. ' +' → logprob: -1.7014816999435425
    3. ']+' → logprob: -10.326481819152832
    4. ']' → logprob: -11.576481819152832
    5. '[idx' → logprob: -11.576481819152832
    6. '[' → logprob: -12.826481819152832
    7. '   ' → logprob: -13.326481819152832
    8. '```' → logprob: -13.576481819152832
    9. '+
' → logprob: -13.826481819152832
    10. '()+' → logprob: -13.951481819152832

Token 289: ' A' (ID: 355)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.002538920845836401
    2. ' row' → logprob: -6.002539157867432
    3. 'A' → logprob: -10.002538681030273
    4. '[row' → logprob: -12.502538681030273
    5. '(row' → logprob: -12.752538681030273
    6. '1' → logprob: -13.002538681030273
    7. '0' → logprob: -13.252538681030273
    8. '[' → logprob: -13.252538681030273
    9. 'Ar' → logprob: -13.377538681030273
    10. ' A' → logprob: -13.752538681030273

Token 290: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.020908065140247345
    2. 'idx' → logprob: -3.8959081172943115
    3. '[' → logprob: -8.64590835571289
    4. '(idx' → logprob: -9.52090835571289
    5. ' idx' → logprob: -10.14590835571289
    6. '[j' → logprob: -10.39590835571289
    7. '	idx' → logprob: -11.89590835571289
    8. '```' → logprob: -12.14590835571289
    9. ']' → logprob: -12.27090835571289
    10. '][' → logprob: -12.27090835571289

Token 291: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05099152773618698
    2. '[idx' → logprob: -3.5509915351867676
    3. 'idx' → logprob: -3.9259915351867676
    4. '1' → logprob: -7.675991535186768
    5. '(idx' → logprob: -8.67599105834961
    6. ' idx' → logprob: -9.05099105834961
    7. '][' → logprob: -9.30099105834961
    8. '0' → logprob: -9.42599105834961
    9. '_idx' → logprob: -9.67599105834961
    10. 'user' → logprob: -10.17599105834961

Token 292: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6653862595558167
    2. '0' → logprob: -0.7903862595558167
    3. '[' → logprob: -4.415386199951172
    4. 'j' → logprob: -4.665386199951172
    5. 'idx' → logprob: -4.915386199951172
    6. '][' → logprob: -7.540386199951172
    7. '[j' → logprob: -8.040386199951172
    8. ']' → logprob: -8.102886199951172
    9. '
' → logprob: -8.227886199951172
    10. ' idx' → logprob: -8.290386199951172

Token 293: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010605561546981335
    2. '[' → logprob: -7.376060485839844
    3. ']][' → logprob: -8.501060485839844
    4. ' ][' → logprob: -9.251060485839844
    5. ']' → logprob: -9.501060485839844
    6. '       ' → logprob: -11.126060485839844
    7. '   ' → logprob: -11.376060485839844
    8. '[idx' → logprob: -11.876060485839844
    9. '()][' → logprob: -12.626060485839844
    10. ']])' → logprob: -12.751060485839844

Token 294: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.027191441506147385
    2. 'j' → logprob: -3.652191400527954
    3. ' idx' → logprob: -7.902191638946533
    4. '1' → logprob: -8.902191162109375
    5. '[' → logprob: -9.527191162109375
    6. '
' → logprob: -9.652191162109375
    7. '0' → logprob: -10.152191162109375
    8. '[idx' → logprob: -10.152191162109375
    9. '   ' → logprob: -10.527191162109375
    10. 'index' → logprob: -10.902191162109375

Token 295: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015940074808895588
    2. '[' → logprob: -6.501594066619873
    3. '
' → logprob: -9.876593589782715
    4. 'idx' → logprob: -11.501593589782715
    5. '0' → logprob: -11.626593589782715
    6. ' ' → logprob: -12.689093589782715
    7. ']' → logprob: -12.751593589782715
    8. '   ' → logprob: -13.314093589782715
    9. '```' → logprob: -13.439093589782715
    10. '][' → logprob: -13.814093589782715

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006638261256739497
    2. 'idx' → logprob: -8.000663757324219
    3. '0' → logprob: -8.375663757324219
    4. '
' → logprob: -10.500663757324219
    5. '[' → logprob: -10.875663757324219
    6. '(idx' → logprob: -11.938163757324219
    7. ']' → logprob: -12.000663757324219
    8. ' idx' → logprob: -12.125663757324219
    9. 'j' → logprob: -12.625663757324219
    10. 'index' → logprob: -12.813163757324219

Token 297: ']]]' (ID: 198030)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.30937260389328003
    2. ']' → logprob: -2.434372663497925
    3. ']+' → logprob: -2.559372663497925
    4. ']])' → logprob: -2.934372663497925
    5. ']]]' → logprob: -3.934372663497925
    6. ']],' → logprob: -4.059372425079346
    7. '])]' → logprob: -4.934372425079346
    8. '])' → logprob: -6.684372425079346
    9. '   ' → logprob: -7.809372425079346
    10. '[idx' → logprob: -8.309372901916504

Token 298: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2650411128997803
    2. ']' → logprob: -1.8900411128997803
    3. ']+' → logprob: -3.2650411128997803
    4. ' +' → logprob: -3.5150411128997803
    5. ')' → logprob: -5.390041351318359
    6. '[idx' → logprob: -6.015041351318359
    7. '(idx' → logprob: -6.015041351318359
    8. '   ' → logprob: -6.265041351318359
    9. '+]' → logprob: -7.515041351318359
    10. ')+' → logprob: -7.515041351318359

Token 299: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.38687798380851746
    2. 'row' → logprob: -1.1368780136108398
    3. '[row' → logprob: -12.51187801361084
    4. '(row' → logprob: -13.76187801361084
    5. ' ' → logprob: -14.13687801361084
    6. '	row' → logprob: -14.63687801361084
    7. '   ' → logprob: -16.011877059936523
    8. '       ' → logprob: -16.011877059936523
    9. 'j' → logprob: -16.261877059936523
    10. '_row' → logprob: -16.386877059936523

Token 300: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0564890131354332
    2. '[:' → logprob: -2.9314889907836914
    3. '(idx' → logprob: -6.806488990783691
    4. 'idx' → logprob: -7.681488990783691
    5. '[' → logprob: -11.181488990783691
    6. ' idx' → logprob: -11.681488990783691
    7. '
' → logprob: -12.556488990783691
    8. '[j' → logprob: -13.181488990783691
    9. '   ' → logprob: -13.556488990783691
    10. '[
' → logprob: -13.681488990783691

Token 301: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03817310929298401
    2. '1' → logprob: -3.288173198699951
    3. '(' → logprob: -9.663172721862793
    4. '(idx' → logprob: -10.663172721862793
    5. 'idx' → logprob: -10.913172721862793
    6. '[idx' → logprob: -11.538172721862793
    7. '0' → logprob: -12.288172721862793
    8. '   ' → logprob: -12.663172721862793
    9. '```' → logprob: -13.163172721862793
    10. '...' → logprob: -14.038172721862793

Token 302: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006373812211677432
    2. '0' → logprob: -7.500637531280518
    3. 'idx' → logprob: -9.75063705444336
    4. '[' → logprob: -11.75063705444336
    5. ' ' → logprob: -12.00063705444336
    6. '
' → logprob: -13.00063705444336
    7. '(' → logprob: -13.18813705444336
    8. '   ' → logprob: -13.25063705444336
    9. '2' → logprob: -13.87563705444336
    10. '```' → logprob: -14.00063705444336

Token 303: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05876610428094864
    2. '[' → logprob: -3.1837661266326904
    3. ']+' → logprob: -4.308765888214111
    4. '1' → logprob: -7.058765888214111
    5. '()+' → logprob: -7.558765888214111
    6. '0' → logprob: -7.808765888214111
    7. ':' → logprob: -8.55876636505127
    8. ')+' → logprob: -9.93376636505127
    9. '   ' → logprob: -10.30876636505127
    10. ' +' → logprob: -11.05876636505127

Token 304: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006477446295320988
    2. '1' → logprob: -7.37564754486084
    3. '3' → logprob: -11.75064754486084
    4. '
' → logprob: -12.12564754486084
    5. '   ' → logprob: -13.31314754486084
    6. ' ' → logprob: -13.68814754486084
    7. '```' → logprob: -13.81314754486084
    8. '+' → logprob: -14.12564754486084
    9. 'j' → logprob: -14.18814754486084
    10. '0' → logprob: -14.25064754486084

Token 305: ':]
' (ID: 61598)
  Prédit: ':],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.06359952688217163
    2. ':' → logprob: -3.0635995864868164
    3. ':]' → logprob: -4.313599586486816
    4. '],' → logprob: -7.188599586486816
    5. ']),' → logprob: -7.438599586486816
    6. ':]
' → logprob: -10.063599586486816
    7. ')],' → logprob: -10.938599586486816
    8. ':].' → logprob: -11.063599586486816
    9. ':])
' → logprob: -11.188599586486816
    10. '']),' → logprob: -11.313599586486816

Token 306: '   ' (ID: 271)
  Prédit: ')),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.062587209045887
    2. '),' → logprob: -3.687587261199951
    3. '   ' → logprob: -4.312587261199951
    4. '))' → logprob: -4.687587261199951
    5. '))),' → logprob: -5.312587261199951
    6. '       ' → logprob: -5.562587261199951
    7. ')))' → logprob: -7.437587261199951
    8. ')))),' → logprob: -7.687587261199951
    9. ']),' → logprob: -7.812587261199951
    10. '))(' → logprob: -8.187586784362793

Token 307: ' )(' (ID: 100233)
  Prédit: ')),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.6803929209709167
    2. '(' → logprob: -1.4303929805755615
    3. '))(' → logprob: -1.6803929805755615
    4. '(idx' → logprob: -3.6803929805755615
    5. '))),' → logprob: -4.430392742156982
    6. '))' → logprob: -4.555392742156982
    7. '   ' → logprob: -5.180392742156982
    8. '[' → logprob: -6.180392742156982
    9. '))[' → logprob: -6.305392742156982
    10. '])),' → logprob: -6.680392742156982

Token 308: 'Ar' (ID: 2326)
  Prédit: 'Ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.00032962486147880554
    2. 'idx' → logprob: -8.250329971313477
    3. ' Ar' → logprob: -10.375329971313477
    4. '   ' → logprob: -11.375329971313477
    5. '(' → logprob: -11.625329971313477
    6. 'Al' → logprob: -12.000329971313477
    7. '[' → logprob: -12.875329971313477
    8. ''Ar' → logprob: -13.625329971313477
    9. 'Arg' → logprob: -13.875329971313477
    10. '       ' → logprob: -14.125329971313477

Token 309: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.009425370953977108
    2. 'idx' → logprob: -4.759425163269043
    3. '[' → logprob: -7.259425163269043
    4. ' idx' → logprob: -10.134425163269043
    5. '(idx' → logprob: -10.134425163269043
    6. ')' → logprob: -11.884425163269043
    7. '	idx' → logprob: -13.134425163269043
    8. '[j' → logprob: -13.134425163269043
    9. '
' → logprob: -13.259425163269043
    10. '   ' → logprob: -13.509425163269043

Token 310: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012705770321190357
    2. '1' → logprob: -4.3877058029174805
    3. '0' → logprob: -9.26270580291748
    4. '(' → logprob: -9.38770580291748
    5. ' [' → logprob: -12.38770580291748
    6. '   ' → logprob: -12.51270580291748
    7. ']' → logprob: -13.38770580291748
    8. ' ' → logprob: -13.38770580291748
    9. '][' → logprob: -14.26270580291748
    10. '{' → logprob: -14.32520580291748

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018328495789319277
    2. '0' → logprob: -6.376832962036133
    3. 'idx' → logprob: -9.751832962036133
    4. '[' → logprob: -10.126832962036133
    5. '(' → logprob: -11.626832962036133
    6. '   ' → logprob: -12.189332962036133
    7. ' ' → logprob: -12.564332962036133
    8. '
' → logprob: -12.939332962036133
    9. '(idx' → logprob: -13.314332962036133
    10. ' idx' → logprob: -14.001832962036133

Token 312: ']]' (ID: 8928)
  Prédit: '])),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])),' → logprob: -0.06123026832938194
    2. ']))' → logprob: -3.686230182647705
    3. ']' → logprob: -3.936230182647705
    4. ']),' → logprob: -4.811230182647705
    5. '[' → logprob: -5.686230182647705
    6. '0' → logprob: -6.061230182647705
    7. '))),' → logprob: -8.561230659484863
    8. '])))' → logprob: -8.811230659484863
    9. ' ]' → logprob: -9.186230659484863
    10. '   ' → logprob: -9.311230659484863

Token 313: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.01471515279263258
    2. '))),' → logprob: -4.389715194702148
    3. '))' → logprob: -6.514715194702148
    4. ')))),' → logprob: -8.764715194702148
    5. '),' → logprob: -9.139715194702148
    6. ' ' → logprob: -9.139715194702148
    7. '   ' → logprob: -9.139715194702148
    8. ')' → logprob: -9.514715194702148
    9. ')),
' → logprob: -10.014715194702148
    10. ')))' → logprob: -10.639715194702148

Token 314: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12254096567630768
    2. 'N' → logprob: -2.4975409507751465
    3. ' range' → logprob: -3.6225409507751465
    4. 'idx' → logprob: -5.2475409507751465
    5. ' N' → logprob: -7.3725409507751465
    6. ' idx' → logprob: -8.872541427612305
    7. '   ' → logprob: -9.372541427612305
    8. '(range' → logprob: -9.497541427612305
    9. '    ' → logprob: -10.997541427612305
    10. '(N' → logprob: -11.122541427612305

Token 315: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.004261461552232504
    2. '(N' → logprob: -5.629261493682861
    3. '(' → logprob: -7.379261493682861
    4. 'idx' → logprob: -10.629261016845703
    5. 'N' → logprob: -12.629261016845703
    6. '(len' → logprob: -12.754261016845703
    7. '(A' → logprob: -13.254261016845703
    8. '[idx' → logprob: -14.129261016845703
    9. '((' → logprob: -14.379261016845703
    10. '(index' → logprob: -14.379261016845703

Token 316: '[' (ID: 58)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.9053896069526672
    2. '(' → logprob: -1.4053895473480225
    3. '(N' → logprob: -1.5303895473480225
    4. '[' → logprob: -2.0303895473480225
    5. '[idx' → logprob: -6.280389785766602
    6. '0' → logprob: -8.905389785766602
    7. '(A' → logprob: -9.030389785766602
    8. '(len' → logprob: -9.155389785766602
    9. '(user' → logprob: -10.030389785766602
    10. 'idx' → logprob: -10.280389785766602

Token 317: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21667426824569702
    2. 'N' → logprob: -2.966674327850342
    3. 'idx' → logprob: -3.091674327850342
    4. '1' → logprob: -3.466674327850342
    5. '(idx' → logprob: -3.466674327850342
    6. '(' → logprob: -3.716674327850342
    7. '(N' → logprob: -4.841674327850342
    8. '[' → logprob: -6.216674327850342
    9. ' idx' → logprob: -7.466674327850342
    10. '[idx' → logprob: -8.966673851013184

Token 318: ']+' (ID: 15344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06147860363125801
    2. '+' → logprob: -3.061478614807129
    3. ']+' → logprob: -4.811478614807129
    4. '0' → logprob: -6.311478614807129
    5. '(idx' → logprob: -7.186478614807129
    6. '()+' → logprob: -7.436478614807129
    7. '[idx' → logprob: -7.811478614807129
    8. 'N' → logprob: -8.061478614807129
    9. '(' → logprob: -8.436478614807129
    10. '(N' → logprob: -8.936478614807129

Token 319: '1' (ID: 16)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3821077346801758
    2. 'N' → logprob: -1.2571077346801758
    3. '0' → logprob: -3.882107734680176
    4. '(idx' → logprob: -5.132107734680176
    5. ' idx' → logprob: -6.257107734680176
    6. '(N' → logprob: -6.257107734680176
    7. '(' → logprob: -7.132107734680176
    8. '1' → logprob: -7.382107734680176
    9. '+' → logprob: -8.132107734680176
    10. ' N' → logprob: -8.382107734680176

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004837838001549244
    2. '+' → logprob: -6.004837989807129
    3. ',N' → logprob: -6.504837989807129
    4. ' ,' → logprob: -7.754837989807129
    5. '(N' → logprob: -8.879837989807129
    6. 'N' → logprob: -8.879837989807129
    7. ' +' → logprob: -9.879837989807129
    8. ',
' → logprob: -10.754837989807129
    9. '),' → logprob: -10.879837989807129
    10. '(' → logprob: -11.379837989807129

Token 321: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012667743489146233
    2. ' N' → logprob: -4.387667655944824
    3. '   ' → logprob: -9.262667655944824
    4. '(N' → logprob: -10.637667655944824
    5. ' ' → logprob: -12.012667655944824
    6. '    ' → logprob: -12.137667655944824
    7. '(' → logprob: -12.387667655944824
    8. '  ' → logprob: -12.762667655944824
    9. '       ' → logprob: -12.887667655944824
    10. ')' → logprob: -13.325167655944824

Token 322: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.23637524247169495
    2. '))' → logprob: -1.6113752126693726
    3. '))))' → logprob: -5.486375331878662
    4. ')))
' → logprob: -6.236375331878662
    5. '))
' → logprob: -6.236375331878662
    6. '))),
' → logprob: -7.111375331878662
    7. '))),' → logprob: -7.111375331878662
    8. ')))),' → logprob: -8.361374855041504
    9. ')' → logprob: -8.486374855041504
    10. ']))' → logprob: -8.611374855041504

Token 323: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.8633542656898499
    2. '])' → logprob: -1.488354206085205
    3. '),' → logprob: -1.988354206085205
    4. ')])' → logprob: -2.488354206085205
    5. ']))' → logprob: -2.738354206085205
    6. ']),' → logprob: -3.863354206085205
    7. '])(' → logprob: -3.863354206085205
    8. ')' → logprob: -4.863354206085205
    9. '))' → logprob: -5.363354206085205
    10. ')],' → logprob: -5.363354206085205

Token 324: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.23038344085216522
    2. 'enumer' → logprob: -1.9803833961486816
    3. '((' → logprob: -3.7303833961486816
    4. ' [(' → logprob: -3.9803833961486816
    5. ' enumerate' → logprob: -4.105383396148682
    6. 'range' → logprob: -5.355383396148682
    7. ' ((' → logprob: -6.855383396148682
    8. '[((' → logprob: -7.480383396148682
    9. '[[' → logprob: -7.855383396148682
    10. '[' → logprob: -8.10538387298584

Token 325: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10405652225017548
    2. '(i' → logprob: -2.3540565967559814
    3. '(j' → logprob: -7.104056358337402
    4. ' i' → logprob: -7.104056358337402
    5. 'j' → logprob: -7.479056358337402
    6. 'x' → logprob: -7.604056358337402
    7. ' (' → logprob: -8.229056358337402
    8. 'a' → logprob: -8.729056358337402
    9. '(x' → logprob: -9.229056358337402
    10. '(' → logprob: -9.604056358337402

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2024526447057724
    2. ',i' → logprob: -1.7024526596069336
    3. ' ,' → logprob: -7.452452659606934
    4. ',
' → logprob: -8.702452659606934
    5. ',j' → logprob: -9.077452659606934
    6. '(' → logprob: -10.702452659606934
    7. '0' → logprob: -10.952452659606934
    8. ',n' → logprob: -10.952452659606934
    9. ',len' → logprob: -11.077452659606934
    10. ',(' → logprob: -11.327452659606934

Token 327: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0006509594968520105
    2. ' j' → logprob: -7.375650882720947
    3. 'i' → logprob: -11.500651359558105
    4. '
' → logprob: -12.750651359558105
    5. '   ' → logprob: -12.750651359558105
    6. '```' → logprob: -12.750651359558105
    7. 'k' → logprob: -13.125651359558105
    8. ' ' → logprob: -14.375651359558105
    9. ')' → logprob: -14.750651359558105
    10. '  ' → logprob: -14.875651359558105

Token 328: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020339188631623983
    2. 'for' → logprob: -6.252033710479736
    3. ' for' → logprob: -10.127034187316895
    4. ' )' → logprob: -10.252034187316895
    5. ')
' → logprob: -11.377034187316895
    6. 'in' → logprob: -12.002034187316895
    7. '
' → logprob: -12.752034187316895
    8. ',' → logprob: -12.752034187316895
    9. '[' → logprob: -14.127034187316895
    10. '}' → logprob: -14.627034187316895

Token 329: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2561070919036865
    2. ' for' → logprob: -1.5061070919036865
    3. ')' → logprob: -5.631107330322266
    4. 'in' → logprob: -8.006107330322266
    5. ' in' → logprob: -8.381107330322266
    6. '	for' → logprob: -11.506107330322266
    7. '
' → logprob: -12.881107330322266
    8. '   ' → logprob: -13.131107330322266
    9. ' ' → logprob: -13.381107330322266
    10. 'from' → logprob: -14.006107330322266

Token 330: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01842336729168892
    2. ' i' → logprob: -4.018423557281494
    3. 'j' → logprob: -8.268423080444336
    4. ' j' → logprob: -11.518423080444336
    5. '(' → logprob: -13.643423080444336
    6. '(i' → logprob: -13.643423080444336
    7. '0' → logprob: -13.768423080444336
    8. ' ' → logprob: -14.268423080444336
    9. '	i' → logprob: -14.268423080444336
    10. 'range' → logprob: -14.518423080444336

Token 331: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25198179483413696
    2. 'in' → logprob: -1.5019817352294922
    3. ',' → logprob: -11.001981735229492
    4. '<|end|>' → logprob: -11.126981735229492
    5. 'i' → logprob: -12.376981735229492
    6. 'range' → logprob: -12.626981735229492
    7. ' ' → logprob: -12.751981735229492
    8. '
' → logprob: -13.501981735229492
    9. '```' → logprob: -13.501981735229492
    10. 'import' → logprob: -14.001981735229492

Token 332: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04304783046245575
    2. ' range' → logprob: -3.1680479049682617
    3. 'i' → logprob: -10.043047904968262
    4. 'in' → logprob: -12.918047904968262
    5. ' in' → logprob: -13.668047904968262
    6. ' i' → logprob: -14.168047904968262
    7. '(range' → logprob: -15.293047904968262
    8. '0' → logprob: -15.793047904968262
    9. ' ' → logprob: -16.043046951293945
    10. 'j' → logprob: -16.668046951293945

Token 333: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009881501318886876
    2. 'N' → logprob: -7.000988006591797
    3. '(' → logprob: -9.500988006591797
    4. '(n' → logprob: -14.500988006591797
    5. '(
' → logprob: -15.125988006591797
    6. ' N' → logprob: -15.625988006591797
    7. '1' → logprob: -15.875988006591797
    8. '(len' → logprob: -16.125988006591797
    9. '	N' → logprob: -16.375988006591797
    10. ' (' → logprob: -16.625988006591797

Token 334: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032144265715032816
    2. 'for' → logprob: -5.878214359283447
    3. '+' → logprob: -7.878214359283447
    4. ' )' → logprob: -11.253214836120605
    5. ' for' → logprob: -11.378214836120605
    6. '-' → logprob: -13.378214836120605
    7. '   ' → logprob: -14.128214836120605
    8. 'N' → logprob: -14.253214836120605
    9. '	for' → logprob: -14.253214836120605
    10. ')]' → logprob: -14.753214836120605

Token 335: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4741247594356537
    2. ' for' → logprob: -0.9741247892379761
    3. '   ' → logprob: -10.724124908447266
    4. ')' → logprob: -11.599124908447266
    5. '	for' → logprob: -12.349124908447266
    6. ' ' → logprob: -12.349124908447266
    7. '  ' → logprob: -12.724124908447266
    8. '    ' → logprob: -13.224124908447266
    9. ',' → logprob: -14.224124908447266
    10. '()' → logprob: -14.724124908447266

Token 336: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02630389854311943
    2. ' j' → logprob: -3.651304006576538
    3. 'i' → logprob: -13.776304244995117
    4. 'range' → logprob: -14.151304244995117
    5. ' range' → logprob: -14.651304244995117
    6. '(j' → logprob: -14.776304244995117
    7. ' ' → logprob: -15.401304244995117
    8. ' ' → logprob: -16.026304244995117
    9. '	j' → logprob: -16.026304244995117
    10. ')' → logprob: -16.401304244995117

Token 337: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3187389373779297
    2. 'in' → logprob: -1.3187389373779297
    3. '(i' → logprob: -5.44373893737793
    4. '(' → logprob: -8.06873893737793
    5. 'range' → logprob: -8.31873893737793
    6. '(in' → logprob: -8.69373893737793
    7. '(N' → logprob: -8.69373893737793
    8. '(range' → logprob: -8.94373893737793
    9. ' (' → logprob: -10.31873893737793
    10. ' range' → logprob: -10.69373893737793

Token 338: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.056890349835157394
    2. ' range' → logprob: -3.0568902492523193
    3. 'i' → logprob: -5.181890487670898
    4. 'N' → logprob: -6.056890487670898
    5. '(i' → logprob: -9.181890487670898
    6. '(range' → logprob: -9.306890487670898
    7. '(N' → logprob: -9.806890487670898
    8. ' i' → logprob: -9.931890487670898
    9. ' N' → logprob: -11.931890487670898
    10. '[i' → logprob: -13.556890487670898

Token 339: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7448233366012573
    2. '(N' → logprob: -1.1198233366012573
    3. 'N' → logprob: -1.8698233366012573
    4. 'i' → logprob: -3.119823455810547
    5. '(' → logprob: -7.994823455810547
    6. ' (' → logprob: -9.869823455810547
    7. ' i' → logprob: -9.994823455810547
    8. ' N' → logprob: -10.494823455810547
    9. '1' → logprob: -10.619823455810547
    10. '   ' → logprob: -12.369823455810547

Token 340: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00047833603457547724
    2. ' +' → logprob: -7.875478267669678
    3. '1' → logprob: -10.500478744506836
    4. ')' → logprob: -10.750478744506836
    5. ',' → logprob: -11.125478744506836
    6. 'N' → logprob: -11.750478744506836
    7. ',N' → logprob: -11.875478744506836
    8. ')])' → logprob: -11.875478744506836
    9. ')]' → logprob: -12.750478744506836
    10. '+
' → logprob: -14.000478744506836

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.421908958349377e-05
    2. 'N' → logprob: -9.62507438659668
    3. ' ' → logprob: -11.87507438659668
    4. '0' → logprob: -15.62507438659668
    5. ' N' → logprob: -15.62507438659668
    6. '
' → logprob: -15.62507438659668
    7. '2' → logprob: -15.62507438659668
    8. '```' → logprob: -15.62507438659668
    9. '(N' → logprob: -15.62507438659668
    10. '(' → logprob: -17.12507438659668

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04395187273621559
    2. '1' → logprob: -3.418951988220215
    3. ',N' → logprob: -4.793951988220215
    4. 'N' → logprob: -6.918951988220215
    5. '(N' → logprob: -7.418951988220215
    6. '(' → logprob: -8.043951988220215
    7. ' ,' → logprob: -10.543951988220215
    8. ',
' → logprob: -11.543951988220215
    9. '_,' → logprob: -11.668951988220215
    10. '
' → logprob: -12.293951988220215

Token 343: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004079708829522133
    2. ' N' → logprob: -5.504079818725586
    3. ' ' → logprob: -15.004079818725586
    4. '   ' → logprob: -15.629079818725586
    5. '	N' → logprob: -15.754079818725586
    6. '
' → logprob: -16.004079818725586
    7. '(N' → logprob: -16.379079818725586
    8. ')' → logprob: -16.629079818725586
    9. 'n' → logprob: -16.879079818725586
    10. ' ' → logprob: -16.879079818725586

Token 344: ')]' (ID: 15710)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.16244135797023773
    2. ')]' → logprob: -1.912441372871399
    3. ']))' → logprob: -7.037441253662109
    4. '])' → logprob: -7.037441253662109
    5. '])]' → logprob: -8.41244125366211
    6. ')' → logprob: -8.66244125366211
    7. '))' → logprob: -10.53744125366211
    8. '):' → logprob: -12.03744125366211
    9. ')],' → logprob: -12.28744125366211
    10. ' )' → logprob: -12.28744125366211

Token 345: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4992930293083191
    2. '])' → logprob: -1.2492930889129639
    3. '))' → logprob: -2.874293088912964
    4. ')])' → logprob: -3.124293088912964
    5. ']))' → logprob: -5.499292850494385
    6. ')))' → logprob: -6.874292850494385
    7. ')]' → logprob: -7.624292850494385
    8. '])]' → logprob: -9.249293327331543
    9. ']' → logprob: -9.374293327331543
    10. ']])' → logprob: -9.874293327331543

Token 346: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4022020697593689
    2. '<|end|>' → logprob: -1.7772021293640137
    3. '#' → logprob: -2.4022021293640137
    4. 'for' → logprob: -3.9022021293640137
    5. 'Al' → logprob: -4.027202129364014
    6. ']' → logprob: -4.152202129364014
    7. '```' → logprob: -5.027202129364014
    8. 'A' → logprob: -6.402202129364014
    9. '
' → logprob: -6.402202129364014
    10. '])' → logprob: -6.527202129364014

Token 347: ' Initial' (ID: 9209)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4436306953430176
    2. 'sum' → logprob: -1.6936306953430176
    3. 'print' → logprob: -1.8186306953430176
    4. 'for' → logprob: -2.4436306953430176
    5. 'total' → logprob: -2.4436306953430176
    6. 'result' → logprob: -2.5686306953430176
    7. '<|end|>' → logprob: -2.6936306953430176
    8. 'max' → logprob: -3.9436306953430176
    9. ')' → logprob: -4.318630695343018
    10. 'pass' → logprob: -4.818630695343018

Token 348: 'iser' (ID: 7466)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5626980066299438
    2. 'sum' → logprob: -1.5626980066299438
    3. 'max' → logprob: -2.0626978874206543
    4. '#' → logprob: -2.4376978874206543
    5. 'result' → logprob: -2.6876978874206543
    6. 's' → logprob: -3.0626978874206543
    7. 'dp' → logprob: -3.0626978874206543
    8. 'S' → logprob: -3.9376978874206543
    9. 'total' → logprob: -4.187697887420654
    10. 'DP' → logprob: -4.437697887420654

Token 349: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2509450912475586
    2. 'DP' → logprob: -2.6259450912475586
    3. 'D' → logprob: -3.3759450912475586
    4. 'Dp' → logprob: -3.5009450912475586
    5. 'res' → logprob: -4.250945091247559
    6. 'S' → logprob: -4.375945091247559
    7. 'C' → logprob: -4.875945091247559
    8. 'score' → logprob: -5.125945091247559
    9. 'F' → logprob: -5.625945091247559
    10. 'sum' → logprob: -5.750945091247559

Token 350: ' avec' (ID: 3937)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.988221684878226e-06
    2. ' =' → logprob: -12.375006675720215
    3. ' dp' → logprob: -14.000006675720215
    4. '[[' → logprob: -14.500006675720215
    5. '=' → logprob: -14.750006675720215
    6. '
' → logprob: -14.875006675720215
    7. '```' → logprob: -15.375006675720215
    8. '[' → logprob: -16.25000762939453
    9. 'DP' → logprob: -16.37500762939453
    10. '#' → logprob: -16.50000762939453

Token 351: ' diagonal' (ID: 71638)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.09969083964824677
    2. '[' → logprob: -2.5996909141540527
    3. 'zeros' → logprob: -4.099690914154053
    4. ' [[' → logprob: -5.974690914154053
    5. '[(' → logprob: -7.974690914154053
    6. ' zeros' → logprob: -7.974690914154053
    7. ' [' → logprob: -8.849690437316895
    8. '[n' → logprob: -9.224690437316895
    9. '[-' → logprob: -9.474690437316895
    10. 'Al' → logprob: -9.599690437316895

Token 352: ' float' (ID: 4428)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8275196552276611
    2. '=' → logprob: -1.2025196552276611
    3. 'al' → logprob: -1.5775196552276611
    4. '=[' → logprob: -3.952519655227661
    5. 'l' → logprob: -4.952519416809082
    6. 'als' → logprob: -5.702519416809082
    7. '1' → logprob: -5.702519416809082
    8. '[' → logprob: -5.827519416809082
    9. 'a' → logprob: -6.077519416809082
    10. 'dp' → logprob: -6.202519416809082

Token 353: '('' (ID: 706)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012193270958960056
    2. '[' → logprob: -5.512193202972412
    3. '[N' → logprob: -6.512193202972412
    4. '[[' → logprob: -6.887193202972412
    5. '(dp' → logprob: -7.012193202972412
    6. 'import' → logprob: -7.512193202972412
    7. '([' → logprob: -7.887193202972412
    8. 'p' → logprob: -7.887193202972412
    9. ' dp' → logprob: -7.887193202972412
    10. '[
' → logprob: -7.887193202972412

Token 354: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.6862725019454956
    2. 'inf' → logprob: -0.8112725019454956
    3. '-inf' → logprob: -3.811272621154785
    4. ''' → logprob: -3.936272621154785
    5. 'in' → logprob: -5.186272621154785
    6. ''-' → logprob: -6.186272621154785
    7. '0' → logprob: -6.936272621154785
    8. ''i' → logprob: -7.061272621154785
    9. '-in' → logprob: -8.311272621154785
    10. ''e' → logprob: -8.936272621154785

Token 355: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.18708327412605286
    2. ')' → logprob: -2.5620832443237305
    3. '')
' → logprob: -3.1870832443237305
    4. 'y' → logprob: -4.5620832443237305
    5. '('' → logprob: -4.8120832443237305
    6. ')
' → logprob: -5.4370832443237305
    7. '])' → logprob: -5.5620832443237305
    8. ''))' → logprob: -5.9370832443237305
    9. '']' → logprob: -5.9370832443237305
    10. ''])' → logprob: -6.1870832443237305

Token 356: ' et' (ID: 859)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0024033624213188887
    2. '
' → logprob: -6.252403259277344
    3. ' dp' → logprob: -9.002403259277344
    4. ' =' → logprob: -9.502403259277344
    5. '(dp' → logprob: -9.627403259277344
    6. '```' → logprob: -10.002403259277344
    7. 'import' → logprob: -10.377403259277344
    8. ']' → logprob: -11.002403259277344
    9. '_dp' → logprob: -11.252403259277344
    10. '=' → logprob: -11.377403259277344

Token 357: ' dp' (ID: 21546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18343493342399597
    2. '[[' → logprob: -2.4334349632263184
    3. '[' → logprob: -2.8084349632263184
    4. ' ' → logprob: -5.183434963226318
    5. '1' → logprob: -5.433434963226318
    6. 'float' → logprob: -5.683434963226318
    7. ' [[' → logprob: -5.933434963226318
    8. ' [' → logprob: -7.183434963226318
    9. '[(' → logprob: -7.308434963226318
    10. 'zeros' → logprob: -7.558434963226318

Token 358: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049114689230918884
    2. '=' → logprob: -3.04911470413208
    3. '=[[' → logprob: -8.424114227294922
    4. '=[' → logprob: -9.049114227294922
    5. '[' → logprob: -9.799114227294922
    6. '0' → logprob: -10.799114227294922
    7. 'p' → logprob: -11.049114227294922
    8. ' ' → logprob: -11.299114227294922
    9. 'dp' → logprob: -11.674114227294922
    10. ']' → logprob: -11.674114227294922

Token 359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2438818216323853
    2. ']' → logprob: -1.2438818216323853
    3. 'i' → logprob: -1.7438818216323853
    4. 'N' → logprob: -2.2438817024230957
    5. '[' → logprob: -3.1188817024230957
    6. '[N' → logprob: -3.3688817024230957
    7. '[i' → logprob: -3.9938817024230957
    8. '(N' → logprob: -3.9938817024230957
    9. '][' → logprob: -4.868881702423096
    10. ']=' → logprob: -5.618881702423096

Token 360: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48747995495796204
    2. '+' → logprob: -1.4874799251556396
    3. '][' → logprob: -1.9874799251556396
    4. ']=' → logprob: -4.487480163574219
    5. '[' → logprob: -4.987480163574219
    6. '0' → logprob: -6.612480163574219
    7. '(N' → logprob: -7.362480163574219
    8. '(' → logprob: -7.487480163574219
    9. ' +' → logprob: -8.112480163574219
    10. 'N' → logprob: -8.362480163574219

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004750507418066263
    2. 'N' → logprob: -5.879750728607178
    3. '1' → logprob: -7.879750728607178
    4. 'j' → logprob: -8.00475025177002
    5. 'i' → logprob: -8.00475025177002
    6. ']' → logprob: -8.00475025177002
    7. ' ' → logprob: -8.62975025177002
    8. '][' → logprob: -9.25475025177002
    9. '
' → logprob: -9.37975025177002
    10. '```' → logprob: -10.12975025177002

Token 362: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03520425409078598
    2. ' =' → logprob: -3.9102041721343994
    3. '=' → logprob: -5.1602044105529785
    4. ']=' → logprob: -5.6602044105529785
    5. '()]' → logprob: -6.9102044105529785
    6. ',' → logprob: -7.0352044105529785
    7. '[' → logprob: -7.1602044105529785
    8. '][' → logprob: -7.6602044105529785
    9. '()' → logprob: -7.6602044105529785
    10. '0' → logprob: -7.7852044105529785

Token 363: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22898714244365692
    2. '=' → logprob: -2.228987216949463
    3. 'dp' → logprob: -2.353987216949463
    4. '[' → logprob: -7.353987216949463
    5. ']' → logprob: -7.853987216949463
    6. ' dp' → logprob: -8.228986740112305
    7. '=
' → logprob: -8.728986740112305
    8. ',' → logprob: -9.228986740112305
    9. '=[' → logprob: -9.228986740112305
    10. ' =
' → logprob: -9.478986740112305

Token 364: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004975094925612211
    2. ' ' → logprob: -7.875497341156006
    3. 'float' → logprob: -9.625497817993164
    4. '[' → logprob: -10.625497817993164
    5. '1' → logprob: -10.875497817993164
    6. '{' → logprob: -13.625497817993164
    7. 'inf' → logprob: -13.875497817993164
    8. '   ' → logprob: -14.000497817993164
    9. '  ' → logprob: -14.375497817993164
    10. ' float' → logprob: -14.500497817993164

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.074907287256792e-05
    2. ' ' → logprob: -10.12506103515625
    3. 'float' → logprob: -11.37506103515625
    4. '1' → logprob: -13.12506103515625
    5. '[' → logprob: -13.25006103515625
    6. '(' → logprob: -13.50006103515625
    7. '   ' → logprob: -14.00006103515625
    8. '{' → logprob: -14.25006103515625
    9. '-' → logprob: -14.62506103515625
    10. 'inf' → logprob: -15.06256103515625

Token 366: ' via' (ID: 4493)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005326599348336458
    2. '
' → logprob: -7.750532627105713
    3. ' dp' → logprob: -9.500533103942871
    4. 'import' → logprob: -11.500533103942871
    5. '```' → logprob: -12.000533103942871
    6. ' =' → logprob: -13.000533103942871
    7. '

' → logprob: -13.125533103942871
    8. ',' → logprob: -13.500533103942871
    9. '_dp' → logprob: -13.875533103942871
    10. 'float' → logprob: -14.375533103942871

Token 367: ' numpy' (ID: 19529)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.49521350860595703
    2. '[' → logprob: -1.245213508605957
    3. 'zeros' → logprob: -2.995213508605957
    4. ' [[' → logprob: -4.120213508605957
    5. 'dp' → logprob: -5.120213508605957
    6. 'lambda' → logprob: -5.245213508605957
    7. '0' → logprob: -5.245213508605957
    8. ' [' → logprob: -5.370213508605957
    9. 'float' → logprob: -5.495213508605957
    10. ' zeros' → logprob: -5.620213508605957

Token 368: '.broadcast' (ID: 123344)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -7.553032628493384e-05
    2. '```' → logprob: -9.625075340270996
    3. ' import' → logprob: -12.625075340270996
    4. ',' → logprob: -12.625075340270996
    5. '
' → logprob: -13.125075340270996
    6. '[' → logprob: -15.875075340270996
    7. '``' → logprob: -16.125076293945312
    8. ',
' → logprob: -16.250076293945312
    9. '<|end|>' → logprob: -16.250076293945312
    10. ':' → logprob: -16.375076293945312

Token 369: '_to' (ID: 5089)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.006839453242719173
    2. 'dp' → logprob: -6.756839275360107
    3. '(' → logprob: -6.881839275360107
    4. ',' → logprob: -6.881839275360107
    5. '[' → logprob: -7.131839275360107
    6. ']' → logprob: -7.631839275360107
    7. '```' → logprob: -8.256839752197266
    8. '
' → logprob: -8.506839752197266
    9. ' import' → logprob: -8.631839752197266
    10. 'from' → logprob: -8.756839752197266

Token 370: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03871593251824379
    2. 'dp' → logprob: -3.2887158393859863
    3. '```' → logprob: -8.538716316223145
    4. ',' → logprob: -8.913716316223145
    5. ' import' → logprob: -9.413716316223145
    6. '
' → logprob: -9.413716316223145
    7. '[' → logprob: -9.538716316223145
    8. ' dp' → logprob: -10.663716316223145
    9. 'from' → logprob: -11.288716316223145
    10. ']' → logprob: -11.288716316223145

Token 371: 'dp' (ID: 19037)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0026304731145501137
    2. 'dp' → logprob: -6.002630710601807
    3. '```' → logprob: -9.627630233764648
    4. '
' → logprob: -10.502630233764648
    5. ' import' → logprob: -11.127630233764648
    6. '[' → logprob: -11.127630233764648
    7. ',' → logprob: -11.752630233764648
    8. 'from' → logprob: -11.752630233764648
    9. ']' → logprob: -12.752630233764648
    10. '[
' → logprob: -13.252630233764648

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05563342571258545
    2. '=' → logprob: -2.930633544921875
    3. '[' → logprob: -7.555633544921875
    4. '=[[' → logprob: -9.430633544921875
    5. ',' → logprob: -9.930633544921875
    6. 'import' → logprob: -10.555633544921875
    7. ' ' → logprob: -10.555633544921875
    8. '=[' → logprob: -11.305633544921875
    9. ' =[' → logprob: -11.305633544921875
    10. '_' → logprob: -12.430633544921875

Token 373: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.15375916659832
    2. '[list' → logprob: -2.403759241104126
    3. '[' → logprob: -3.403759241104126
    4. 'list' → logprob: -4.653759002685547
    5. ' [[' → logprob: -5.153759002685547
    6. ' [' → logprob: -6.403759002685547
    7. '[np' → logprob: -7.903759002685547
    8. '[
' → logprob: -7.903759002685547
    9. 'import' → logprob: -8.528759002685547
    10. '[n' → logprob: -8.528759002685547

Token 374: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.11317653954029083
    2. '0' → logprob: -2.2381765842437744
    3. '(float' → logprob: -8.613176345825195
    4. '(' → logprob: -9.363176345825195
    5. '[' → logprob: -10.238176345825195
    6. ' float' → logprob: -10.488176345825195
    7. 'False' → logprob: -12.113176345825195
    8. '1' → logprob: -12.488176345825195
    9. ' ' → logprob: -12.863176345825195
    10. 'inf' → logprob: -13.863176345825195

Token 375: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.002515373518690467
    2. ''in' → logprob: -6.0025153160095215
    3. ''' → logprob: -10.62751579284668
    4. 'inf' → logprob: -11.25251579284668
    5. ' ('' → logprob: -13.87751579284668
    6. '(in' → logprob: -14.25251579284668
    7. '("' → logprob: -15.50251579284668
    8. ''inc' → logprob: -15.62751579284668
    9. '(' → logprob: -15.87751579284668
    10. ''s' → logprob: -16.12751579284668

Token 376: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.127333340875339e-06
    2. '0' → logprob: -13.750003814697266
    3. '-inf' → logprob: -13.750003814697266
    4. 'in' → logprob: -14.125003814697266
    5. 'i' → logprob: -15.250003814697266
    6. ' inf' → logprob: -16.000003814697266
    7. ''' → logprob: -16.250003814697266
    8. ')' → logprob: -16.375003814697266
    9. '.inf' → logprob: -16.500003814697266
    10. ''in' → logprob: -16.625003814697266

Token 377: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2601296305656433
    2. ')' → logprob: -1.510129690170288
    3. '')]' → logprob: -5.010129451751709
    4. '')' → logprob: -6.760129451751709
    5. ']' → logprob: -9.010129928588867
    6. ' )' → logprob: -10.260129928588867
    7. ')
' → logprob: -10.885129928588867
    8. '']' → logprob: -10.885129928588867
    9. ']]' → logprob: -11.010129928588867
    10. ''' → logprob: -11.010129928588867

Token 378: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.437895268201828
    2. ']*(' → logprob: -1.8128952980041504
    3. ' for' → logprob: -2.0628952980041504
    4. ']*' → logprob: -3.1878952980041504
    5. ']' → logprob: -4.56289529800415
    6. 'if' → logprob: -4.68789529800415
    7. ']+' → logprob: -6.18789529800415
    8. ' if' → logprob: -6.81289529800415
    9. '   ' → logprob: -9.187894821166992
    10. '*(' → logprob: -9.187894821166992

Token 379: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.003043196862563491
    2. ' (' → logprob: -5.878043174743652
    3. 'N' → logprob: -9.003043174743652
    4. '(' → logprob: -9.503043174743652
    5. '
' → logprob: -11.003043174743652
    6. '(n' → logprob: -11.628043174743652
    7. '((' → logprob: -12.253043174743652
    8. '   ' → logprob: -12.753043174743652
    9. ' ' → logprob: -14.003043174743652
    10. '(M' → logprob: -14.253043174743652

Token 380: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.383526149671525e-05
    2. '(N' → logprob: -10.250053405761719
    3. ' N' → logprob: -11.000053405761719
    4. '
' → logprob: -14.250053405761719
    5. '   ' → logprob: -14.750053405761719
    6. '(' → logprob: -15.000053405761719
    7. 'len' → logprob: -16.62505340576172
    8. '	N' → logprob: -16.87505340576172
    9. ' (' → logprob: -17.00005340576172
    10. '0' → logprob: -17.50005340576172

Token 381: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00046260483213700354
    2. ' +' → logprob: -7.875462532043457
    3. ')' → logprob: -9.625462532043457
    4. '+
' → logprob: -12.125462532043457
    5. '1' → logprob: -13.000462532043457
    6. '
' → logprob: -13.000462532043457
    7. '   ' → logprob: -13.500462532043457
    8. '```' → logprob: -13.750462532043457
    9. 'N' → logprob: -14.437962532043457
    10. '[' → logprob: -14.687962532043457

Token 382: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -11.250020027160645
    3. '2' → logprob: -12.375020027160645
    4. '
' → logprob: -13.625020027160645
    5. '```' → logprob: -15.125020027160645
    6. '+' → logprob: -15.687520027160645
    7. '   ' → logprob: -15.687520027160645
    8. '0' → logprob: -15.750020027160645
    9. ')' → logprob: -16.562519073486328
    10. 'N' → logprob: -16.625019073486328

Token 383: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014011532068252563
    2. 'for' → logprob: -4.639011383056641
    3. ' for' → logprob: -5.639011383056641
    4. ']' → logprob: -8.13901138305664
    5. ')]' → logprob: -8.26401138305664
    6. ' )' → logprob: -9.01401138305664
    7. ' ' → logprob: -12.63901138305664
    8. '   ' → logprob: -13.13901138305664
    9. ',' → logprob: -13.26401138305664
    10. ' ]' → logprob: -13.38901138305664

Token 384: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5760504007339478
    2. ' for' → logprob: -0.8260504007339478
    3. ']' → logprob: -9.576050758361816
    4. ' ' → logprob: -10.826050758361816
    5. '   ' → logprob: -11.576050758361816
    6. '	for' → logprob: -12.076050758361816
    7. ')' → logprob: -12.326050758361816
    8. ' ' → logprob: -14.826050758361816
    9. '  ' → logprob: -14.951050758361816
    10. '
' → logprob: -15.326050758361816

Token 385: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01817592792212963
    2. ' _' → logprob: -4.018176078796387
    3. ' range' → logprob: -10.643176078796387
    4. 'range' → logprob: -13.768176078796387
    5. ' in' → logprob: -15.143176078796387
    6. ' i' → logprob: -15.393176078796387
    7. '_range' → logprob: -15.518176078796387
    8. '_
' → logprob: -15.768176078796387
    9. '_=' → logprob: -16.14317512512207
    10. '_

' → logprob: -16.89317512512207

Token 386: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.40950658917427063
    2. ' range' → logprob: -2.0345065593719482
    3. ' in' → logprob: -2.1595065593719482
    4. 'in' → logprob: -2.4095065593719482
    5. '(range' → logprob: -11.159506797790527
    6. ' ' → logprob: -11.534506797790527
    7. '0' → logprob: -12.659506797790527
    8. 'ange' → logprob: -13.284506797790527
    9. '   ' → logprob: -13.659506797790527
    10. '  ' → logprob: -13.659506797790527

Token 387: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804665803909302
    2. ' range' → logprob: -3.2880465984344482
    3. '[' → logprob: -12.288046836853027
    4. '(range' → logprob: -14.663046836853027
    5. '	range' → logprob: -16.16304588317871
    6. '0' → logprob: -18.53804588317871
    7. ' ' → logprob: -18.91304588317871
    8. '
' → logprob: -19.03804588317871
    9. '.range' → logprob: -19.66304588317871
    10. ' [' → logprob: -19.66304588317871

Token 388: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3890684247016907
    2. ' range' → logprob: -1.139068365097046
    3. '(N' → logprob: -6.514068603515625
    4. '(range' → logprob: -7.264068603515625
    5. 'N' → logprob: -11.889068603515625
    6. ' (' → logprob: -13.014068603515625
    7. '[N' → logprob: -13.764068603515625
    8. '
' → logprob: -14.639068603515625
    9. 'Range' → logprob: -14.639068603515625
    10. ' N' → logprob: -15.139068603515625

Token 389: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.848420551046729e-05
    2. ')]' → logprob: -10.1250581741333
    3. '+
' → logprob: -12.1250581741333
    4. ' +' → logprob: -12.5000581741333
    5. '1' → logprob: -12.7500581741333
    6. ')' → logprob: -12.8750581741333
    7. ')])' → logprob: -13.8750581741333
    8. ')]
' → logprob: -14.2500581741333
    9. ')][' → logprob: -14.2500581741333
    10. '```' → logprob: -14.7500581741333

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -16.000001907348633
    4. '2' → logprob: -16.937501907348633
    5. '
' → logprob: -17.250001907348633
    6. '+' → logprob: -17.375001907348633
    7. ')' → logprob: -17.500001907348633
    8. '۱' → logprob: -18.062501907348633
    9. '   ' → logprob: -18.187501907348633
    10. '0' → logprob: -18.375001907348633

Token 391: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005887754959985614
    2. ']' → logprob: -7.625588893890381
    3. ')' → logprob: -9.250588417053223
    4. '])]' → logprob: -13.375588417053223
    5. ')],' → logprob: -14.125588417053223
    6. '])' → logprob: -14.125588417053223
    7. ')])' → logprob: -14.250588417053223
    8. '}]' → logprob: -15.625588417053223
    9. ')]
' → logprob: -15.625588417053223
    10. ']]' → logprob: -15.750588417053223

Token 392: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.935296834039036e-06
    2. 'for' → logprob: -14.25000286102295
    3. '```' → logprob: -14.25000286102295
    4. 'import' → logprob: -14.75000286102295
    5. ' dp' → logprob: -14.87500286102295
    6. 'dt' → logprob: -15.50000286102295
    7. '
' → logprob: -15.87500286102295
    8. '<|end|>' → logprob: -16.125003814697266
    9. '[' → logprob: -17.000003814697266
    10. '(dp' → logprob: -17.000003814697266

Token 393: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4894986785948277e-05
    2. '][' → logprob: -10.250044822692871
    3. '0' → logprob: -13.250044822692871
    4. 'dp' → logprob: -13.375044822692871
    5. ')[' → logprob: -13.500044822692871
    6. '```' → logprob: -13.500044822692871
    7. '<|end|>' → logprob: -13.750044822692871
    8. '
' → logprob: -14.625044822692871
    9. ' [' → logprob: -15.375044822692871
    10. 'def' → logprob: -15.750044822692871

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '
' → logprob: -18.75
    4. '[' → logprob: -19.375
    5. '```' → logprob: -19.375
    6. '   ' → logprob: -19.625
    7. '00' → logprob: -20.0
    8. '۰' → logprob: -20.5625
    9. '][' → logprob: -20.75
    10. '1' → logprob: -21.4375

Token 395: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.7146746763028204e-05
    2. ']' → logprob: -10.87503719329834
    3. '[' → logprob: -11.12503719329834
    4. ' ][' → logprob: -13.00003719329834
    5. '0' → logprob: -14.87503719329834
    6. '"][' → logprob: -15.37503719329834
    7. ']][' → logprob: -15.50003719329834
    8. ''][' → logprob: -16.250036239624023
    9. '()][' → logprob: -16.500036239624023
    10. ']
' → logprob: -16.625036239624023

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۰' → logprob: -18.75
    4. '<|end|>' → logprob: -20.0
    5. ']' → logprob: -20.1875
    6. '   ' → logprob: -20.25
    7. '০' → logprob: -20.625
    8. '[' → logprob: -20.6875
    9. ')' → logprob: -20.6875
    10. '```' → logprob: -20.875

Token 397: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.0590548703912646e-05
    2. ']=' → logprob: -10.625030517578125
    3. ' ]' → logprob: -12.500030517578125
    4. '=' → logprob: -13.000030517578125
    5. ')' → logprob: -15.500030517578125
    6. ')]' → logprob: -18.125030517578125
    7. ']
' → logprob: -18.625030517578125
    8. ' =' → logprob: -18.875030517578125
    9. '']' → logprob: -19.375030517578125
    10. '`]' → logprob: -19.375030517578125

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022534668445587
    2. ' =' → logprob: -1.9102253913879395
    3. ' ' → logprob: -15.160224914550781
    4. ']' → logprob: -15.410224914550781
    5. ' =
' → logprob: -15.660224914550781
    6. '=
' → logprob: -16.41022491455078
    7. '<|end|>' → logprob: -16.53522491455078
    8. '[' → logprob: -16.78522491455078
    9. ']=' → logprob: -16.78522491455078
    10. ' ' → logprob: -16.78522491455078

Token 399: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۰' → logprob: -20.750001907348633
    4. '00' → logprob: -21.250001907348633
    5. ' ' → logprob: -21.875001907348633
    6. '```' → logprob: -22.125001907348633
    7. '   ' → logprob: -22.687501907348633
    8. '000' → logprob: -22.937501907348633
    9. '０' → logprob: -23.125001907348633
    10. '٠' → logprob: -23.187501907348633

Token 400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '00' → logprob: -20.625
    4. '۰' → logprob: -20.75
    5. ' ' → logprob: -22.0
    6. '０' → logprob: -22.0625
    7. '   ' → logprob: -22.0625
    8. 'float' → logprob: -22.0625
    9. '000' → logprob: -22.125
    10. '```' → logprob: -22.75

Token 401: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04461388662457466
    2. ')' → logprob: -3.294613838195801
    3. '<|end|>' → logprob: -5.794613838195801
    4. ' for' → logprob: -5.919613838195801
    5. ']' → logprob: -8.0446138381958
    6. '
' → logprob: -8.1696138381958
    7. 'i' → logprob: -9.7946138381958
    8. '```' → logprob: -10.4196138381958
    9. 'def' → logprob: -10.5446138381958
    10. 'range' → logprob: -11.0446138381958

Token 402: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00024096666311379522
    2. ' for' → logprob: -9.62524127960205
    3. 'from' → logprob: -9.62524127960205
    4. 'list' → logprob: -10.37524127960205
    5. 'import' → logprob: -10.62524127960205
    6. '#' → logprob: -10.87524127960205
    7. 'def' → logprob: -11.37524127960205
    8. ')' → logprob: -11.62524127960205
    9. '.' → logprob: -13.00024127960205
    10. '```' → logprob: -13.00024127960205

Token 403: ' Util' (ID: 13564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002005961025133729
    2. 'from' → logprob: -6.6270060539245605
    3. 'list' → logprob: -7.6270060539245605
    4. '#' → logprob: -9.127005577087402
    5. 'import' → logprob: -9.877005577087402
    6. 'def' → logprob: -10.627005577087402
    7. ' for' → logprob: -12.502005577087402
    8. 'i' → logprob: -13.752005577087402
    9. '```' → logprob: -13.877005577087402
    10. '
' → logprob: -14.127005577087402

Token 404: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.019002510234713554
    2. 'se' → logprob: -4.144002437591553
    3. 's' → logprob: -6.519002437591553
    4. '#' → logprob: -8.144002914428711
    5. 'iser' → logprob: -8.144002914428711
    6. 'sing' → logprob: -8.144002914428711
    7. '```' → logprob: -9.269002914428711
    8. 'er' → logprob: -9.394002914428711
    9. 'sage' → logprob: -9.519002914428711
    10. 'ter' → logprob: -10.269002914428711

Token 405: ' itertools' (ID: 103178)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08279978483915329
    2. ' for' → logprob: -3.0827996730804443
    3. 'range' → logprob: -3.4577996730804443
    4. ' range' → logprob: -6.332799911499023
    5. ' nested' → logprob: -8.582799911499023
    6. 'nested' → logprob: -9.832799911499023
    7. 'sum' → logprob: -10.707799911499023
    8. '(range' → logprob: -10.957799911499023
    9. '```' → logprob: -11.332799911499023
    10. 'lambda' → logprob: -11.582799911499023

Token 406: ' pour' (ID: 1930)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.31455129384994507
    2. 'import' → logprob: -1.3145513534545898
    3. ' from' → logprob: -6.68955135345459
    4. ' import' → logprob: -10.56455135345459
    5. 'for' → logprob: -11.31455135345459
    6. '```' → logprob: -13.68955135345459
    7. '
' → logprob: -13.68955135345459
    8. ' for' → logprob: -14.06455135345459
    9. '<|end|>' → logprob: -14.43955135345459
    10. 'acc' → logprob: -14.68955135345459

Token 407: ' génér' (ID: 18939)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2548616826534271
    2. 'import' → logprob: -1.5048617124557495
    3. ' from' → logprob: -5.879861831665039
    4. ' import' → logprob: -9.004861831665039
    5. ' itertools' → logprob: -12.379861831665039
    6. 'reduce' → logprob: -12.879861831665039
    7. ' accumulate' → logprob: -13.379861831665039
    8. 'for' → logprob: -14.129861831665039
    9. '```' → logprob: -15.004861831665039
    10. 'acc' → logprob: -15.129861831665039

Token 408: 'er' (ID: 259)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.8909832239151001
    2. 'import' → logprob: -1.1409832239151
    3. 'from' → logprob: -1.3909832239151
    4. 'er' → logprob: -5.1409831047058105
    5. 'com' → logprob: -6.0159831047058105
    6. 'product' → logprob: -6.1409831047058105
    7. 'ertools' → logprob: -6.1409831047058105
    8. 'enerate' → logprob: -6.3909831047058105
    9. '```' → logprob: -6.3909831047058105
    10. 'rate' → logprob: -6.7659831047058105

Token 409: ' la' (ID: 557)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13368017971515656
    2. 'import' → logprob: -2.1336801052093506
    3. ' from' → logprob: -5.00868034362793
    4. ' import' → logprob: -10.13368034362793
    5. '```' → logprob: -11.75868034362793
    6. ' itertools' → logprob: -13.25868034362793
    7. 'for' → logprob: -16.25868034362793
    8. '	from' → logprob: -16.75868034362793
    9. '
' → logprob: -17.13368034362793
    10. 'range' → logprob: -17.13368034362793

Token 410: ' boucle' (ID: 174211)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20192955434322357
    2. 'import' → logprob: -1.7019295692443848
    3. ' from' → logprob: -8.326929092407227
    4. '```' → logprob: -8.826929092407227
    5. 'product' → logprob: -10.201929092407227
    6. '
' → logprob: -10.326929092407227
    7. 'next' → logprob: -11.076929092407227
    8. 'com' → logprob: -11.201929092407227
    9. 'range' → logprob: -11.826929092407227
    10. ' import' → logprob: -12.576929092407227

Token 411: ' et' (ID: 859)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3878927528858185
    2. 'import' → logprob: -1.137892723083496
    3. ' from' → logprob: -7.137892723083496
    4. 'for' → logprob: -8.762892723083496
    5. '```' → logprob: -9.762892723083496
    6. ' for' → logprob: -12.137892723083496
    7. ' import' → logprob: -12.512892723083496
    8. 's' → logprob: -12.887892723083496
    9. '<|end|>' → logprob: -15.137892723083496
    10. '
' → logprob: -15.137892723083496

Token 412: ' calcul' (ID: 7559)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.6941363215446472
    2. 'from' → logprob: -1.444136381149292
    3. ' accumulate' → logprob: -2.444136381149292
    4. 'import' → logprob: -2.694136381149292
    5. 'acc' → logprob: -3.319136381149292
    6. ' product' → logprob: -3.444136381149292
    7. 'range' → logprob: -3.694136381149292
    8. 'enumer' → logprob: -4.944136142730713
    9. 'reduce' → logprob: -5.319136142730713
    10. ' from' → logprob: -6.944136142730713

Token 413: 'er' (ID: 259)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.048020001500844955
    2. 'import' → logprob: -3.9230198860168457
    3. ' from' → logprob: -3.9230198860168457
    4. 's' → logprob: -6.548019886016846
    5. 'ations' → logprob: -6.673019886016846
    6. 'r' → logprob: -6.798019886016846
    7. '```' → logprob: -7.423019886016846
    8. 'e' → logprob: -7.548019886016846
    9. 'es' → logprob: -7.548019886016846
    10. 'ate' → logprob: -7.548019886016846

Token 414: ' l' (ID: 305)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.03898724168539047
    2. 'import' → logprob: -3.288987159729004
    3. ' from' → logprob: -7.288987159729004
    4. 'for' → logprob: -8.288987159729004
    5. ' import' → logprob: -11.913987159729004
    6. ' for' → logprob: -13.163987159729004
    7. 'product' → logprob: -14.038987159729004
    8. '```' → logprob: -14.288987159729004
    9. '__' → logprob: -14.413987159729004
    10. 'reduce' → logprob: -15.663987159729004

Token 415: '/r' (ID: 17447)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5090882182121277
    2. 'import' → logprob: -2.0090882778167725
    3. 'reduce' → logprob: -2.1340882778167725
    4. 'product' → logprob: -2.3840882778167725
    5. 'acc' → logprob: -3.3840882778167725
    6. ' product' → logprob: -5.634088039398193
    7. ' from' → logprob: -5.634088039398193
    8. 'operator' → logprob: -5.759088039398193
    9. ' combinations' → logprob: -6.759088039398193
    10. 'combine' → logprob: -7.259088039398193

Token 416: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12910853326320648
    2. 'import' → logprob: -2.379108428955078
    3. 'com' → logprob: -3.629108428955078
    4. 'product' → logprob: -7.629108428955078
    5. ' from' → logprob: -7.879108428955078
    6. '```' → logprob: -8.004108428955078
    7. 'ations' → logprob: -8.129108428955078
    8. 's' → logprob: -8.754108428955078
    9. 'for' → logprob: -10.004108428955078
    10. ' combinations' → logprob: -10.379108428955078

Token 417: ' manière' (ID: 35013)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5724027752876282
    2. 'range' → logprob: -1.3224027156829834
    3. 'import' → logprob: -2.8224027156829834
    4. 'i' → logprob: -3.6974027156829834
    5. ' range' → logprob: -3.9474027156829834
    6. 'ranges' → logprob: -4.0724029541015625
    7. 'product' → logprob: -4.3224029541015625
    8. ' from' → logprob: -4.6974029541015625
    9. 'ange' → logprob: -5.4474029541015625
    10. 'com' → logprob: -5.9474029541015625

Token 418: ' "' (ID: 392)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1567060947418213
    2. 'product' → logprob: -1.4067060947418213
    3. 'reduce' → logprob: -1.7817060947418213
    4. 'zip' → logprob: -2.0317060947418213
    5. 'it' → logprob: -3.1567060947418213
    6. 'chain' → logprob: -3.9067060947418213
    7. 'range' → logprob: -4.031705856323242
    8. 'com' → logprob: -4.281705856323242
    9. 'enumer' → logprob: -4.281705856323242
    10. 'import' → logprob: -4.531705856323242

Token 419: 'inut' (ID: 58529)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.38570505380630493
    2. 'acc' → logprob: -1.7607049942016602
    3. 'com' → logprob: -2.38570499420166
    4. 'chain' → logprob: -3.26070499420166
    5. 'reduce' → logprob: -4.51070499420166
    6. 'from' → logprob: -6.51070499420166
    7. 'repeat' → logprob: -6.63570499420166
    8. 'zip' → logprob: -6.76070499420166
    9. ' accumulate' → logprob: -6.88570499420166
    10. 'compress' → logprob: -7.76070499420166

Token 420: 'ile' (ID: 554)
  Prédit: 'ertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.6855398416519165
    2. 'er' → logprob: -1.3105398416519165
    3. 'ils' → logprob: -2.185539722442627
    4. 'ools' → logprob: -2.685539722442627
    5. 'import' → logprob: -3.310539722442627
    6. 'iles' → logprob: -5.560539722442627
    7. 'il' → logprob: -5.810539722442627
    8. 'from' → logprob: -7.185539722442627
    9. 'ers' → logprob: -7.310539722442627
    10. 'tools' → logprob: -8.060540199279785

Token 421: '"
' (ID: 1092)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6018410325050354
    2. 'from' → logprob: -0.8518410325050354
    3. ' from' → logprob: -4.101840972900391
    4. ' import' → logprob: -5.726840972900391
    5. ',' → logprob: -5.851840972900391
    6. 's' → logprob: -6.476840972900391
    7. ' itertools' → logprob: -7.851840972900391
    8. 'for' → logprob: -8.60184097290039
    9. ' ,' → logprob: -9.10184097290039
    10. ' for' → logprob: -9.10184097290039

Token 422: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1606544405221939
    2. 'import' → logprob: -1.9106544256210327
    3. '```' → logprob: -8.035654067993164
    4. ' from' → logprob: -9.785654067993164
    5. 'for' → logprob: -9.910654067993164
    6. ' import' → logprob: -14.910654067993164
    7. ' for' → logprob: -16.160654067993164
    8. '``' → logprob: -16.410654067993164
    9. '...' → logprob: -17.785654067993164
    10. 'iter' → logprob: -18.535654067993164

Token 423: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -2.4868770196917467e-05
    2. ' itertools' → logprob: -10.625024795532227
    3. 'iter' → logprob: -15.000024795532227
    4. 'import' → logprob: -16.500024795532227
    5. 'operator' → logprob: -17.375024795532227
    6. 'math' → logprob: -17.875024795532227
    7. '_it' → logprob: -18.250024795532227
    8. 'fun' → logprob: -18.625024795532227
    9. '(it' → logprob: -19.500024795532227
    10. 'sys' → logprob: -19.750024795532227

Token 424: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.22683687508106232
    2. 'import' → logprob: -1.601836919784546
    3. '	import' → logprob: -6.601836681365967
    4. '<|end|>' → logprob: -10.726837158203125
    5. '.com' → logprob: -11.101837158203125
    6. 'ertools' → logprob: -11.226837158203125
    7. '
' → logprob: -13.101837158203125
    8. '_import' → logprob: -13.351837158203125
    9. '```' → logprob: -13.476837158203125
    10. ' ' → logprob: -13.476837158203125

Token 425: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.0019542062655091286
    2. 'com' → logprob: -6.376954078674316
    3. 'acc' → logprob: -8.501954078674316
    4. 'st' → logprob: -11.251954078674316
    5. 'chain' → logprob: -11.376954078674316
    6. 'count' → logprob: -11.876954078674316
    7. 'per' → logprob: -12.126954078674316
    8. ' product' → logprob: -12.376954078674316
    9. 'pair' → logprob: -13.251954078674316
    10. 'cycle' → logprob: -13.376954078674316

Token 426: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004316653124988079
    2. '
' → logprob: -6.379316806793213
    3. 'range' → logprob: -6.504316806793213
    4. ' for' → logprob: -7.004316806793213
    5. '(range' → logprob: -8.879316329956055
    6. '

' → logprob: -10.754316329956055
    7. 'ranges' → logprob: -11.879316329956055
    8. '(' → logprob: -12.004316329956055
    9. '(*' → logprob: -12.254316329956055
    10. '(N' → logprob: -12.629316329956055

Token 427: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.65707261255011e-06
    2. ' for' → logprob: -11.875008583068848
    3. 'list' → logprob: -13.750008583068848
    4. 'l' → logprob: -15.750008583068848
    5. 'i' → logprob: -15.875008583068848
    6. 'range' → logprob: -16.000009536743164
    7. '```' → logprob: -16.250009536743164
    8. 'dp' → logprob: -17.250009536743164
    9. '
' → logprob: -18.125009536743164
    10. '(i' → logprob: -18.250009536743164

Token 428: ' flatten' (ID: 61445)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -1.3430366516113281
    2. 'update' → logprob: -1.7180366516113281
    3. 'min' → logprob: -2.093036651611328
    4. 'calculate' → logprob: -2.468036651611328
    5. 'calc' → logprob: -2.593036651611328
    6. 'compute' → logprob: -2.593036651611328
    7. 'l' → logprob: -2.843036651611328
    8. 'dp' → logprob: -3.218036651611328
    9. 'main' → logprob: -3.218036651611328
    10. 'cost' → logprob: -4.218036651611328

Token 429: '(x' (ID: 4061)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.02683963254094124
    2. '(list' → logprob: -3.9018397331237793
    3. '(l' → logprob: -5.401839733123779
    4. '(iter' → logprob: -7.401839733123779
    5. '(ls' → logprob: -7.526839733123779
    6. '(x' → logprob: -8.026839256286621
    7. '(n' → logprob: -9.651839256286621
    8. '(arr' → logprob: -10.026839256286621
    9. '(matrix' → logprob: -10.026839256286621
    10. '(seq' → logprob: -10.151839256286621

Token 430: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04302510991692543
    2. '):' → logprob: -3.168025016784668
    3. '):
' → logprob: -10.918025016784668
    4. ':list' → logprob: -12.543025016784668
    5. '   ' → logprob: -13.918025016784668
    6. '):

' → logprob: -14.043025016784668
    7. ' ):
' → logprob: -14.793025016784668
    8. ')' → logprob: -14.918025016784668
    9. ',' → logprob: -15.168025016784668
    10. ':
' → logprob: -15.293025016784668

Token 431: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4605235755443573
    2. '   ' → logprob: -1.2105236053466797
    3. ' return' → logprob: -3.8355236053466797
    4. '[y' → logprob: -4.33552360534668
    5. '[x' → logprob: -4.83552360534668
    6. '[' → logprob: -4.83552360534668
    7. '[item' → logprob: -4.83552360534668
    8. ' [' → logprob: -5.21052360534668
    9. ' ' → logprob: -6.33552360534668
    10. '[j' → logprob: -6.83552360534668

Token 432: ' [' (ID: 723)
  Prédit: '[item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[item' → logprob: -0.6103321313858032
    2. '[x' → logprob: -1.1103321313858032
    3. '[' → logprob: -2.7353320121765137
    4. '[list' → logprob: -3.3603320121765137
    5. 'list' → logprob: -3.9853320121765137
    6. '[y' → logprob: -5.610332012176514
    7. ' [' → logprob: -6.235332012176514
    8. '[next' → logprob: -6.860332012176514
    9. 'reduce' → logprob: -7.360332012176514
    10. '[j' → logprob: -7.985332012176514

Token 433: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.06823226809501648
    2. 'y' → logprob: -3.818232297897339
    3. 'i' → logprob: -4.06823205947876
    4. 'el' → logprob: -4.56823205947876
    5. 'e' → logprob: -5.44323205947876
    6. 'elem' → logprob: -5.56823205947876
    7. 'j' → logprob: -6.06823205947876
    8. 'a' → logprob: -6.19323205947876
    9. 'z' → logprob: -6.31823205947876
    10. 'element' → logprob: -6.44323205947876

Token 434: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20141908526420593
    2. ' for' → logprob: -1.7014191150665283
    3. ' ' → logprob: -12.95141887664795
    4. '	for' → logprob: -12.95141887664795
    5. '
' → logprob: -14.45141887664795
    6. 'item' → logprob: -15.82641887664795
    7. 'f' → logprob: -16.326419830322266
    8. '   ' → logprob: -16.826419830322266
    9. 'sub' → logprob: -16.951419830322266
    10. 'elem' → logprob: -17.326419830322266

Token 435: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.00023095356300473213
    2. 'row' → logprob: -9.12523078918457
    3. ' sub' → logprob: -9.12523078918457
    4. 's' → logprob: -11.87523078918457
    5. 'lst' → logprob: -12.75023078918457
    6. 'a' → logprob: -13.87523078918457
    7. '_sub' → logprob: -14.87523078918457
    8. 'l' → logprob: -15.00023078918457
    9. 'xs' → logprob: -15.37523078918457
    10. 'sl' → logprob: -15.50023078918457

Token 436: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0002879145904444158
    2. 'lst' → logprob: -8.250288009643555
    3. ' in' → logprob: -10.750288009643555
    4. 'l' → logprob: -12.750288009643555
    5. 'li' → logprob: -13.625288009643555
    6. 'sub' → logprob: -15.125288009643555
    7. 'in' → logprob: -15.500288009643555
    8. 'item' → logprob: -15.500288009643555
    9. 'lis' → logprob: -15.875288009643555
    10. '_list' → logprob: -16.125288009643555

Token 437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018172655254602432
    2. 'in' → logprob: -4.018172740936279
    3. 'x' → logprob: -11.018172264099121
    4. ' ' → logprob: -12.768172264099121
    5. 's' → logprob: -13.643172264099121
    6. 'list' → logprob: -14.393172264099121
    7. 'n' → logprob: -14.518172264099121
    8. '  ' → logprob: -15.768172264099121
    9. '
' → logprob: -16.143173217773438
    10. 'for' → logprob: -16.268173217773438

Token 438: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.438573680294212e-06
    2. ' x' → logprob: -12.125005722045898
    3. '
' → logprob: -18.7500057220459
    4. '   ' → logprob: -19.7500057220459
    5. '	x' → logprob: -20.0000057220459
    6. ' ' → logprob: -20.1250057220459
    7. '  ' → logprob: -20.8750057220459
    8. '(x' → logprob: -21.5000057220459
    9. 'sub' → logprob: -22.1250057220459
    10. '[' → logprob: -22.2500057220459

Token 439: ' for' (ID: 395)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015768787125125527
    2. 'in' → logprob: -7.126576900482178
    3. 'for' → logprob: -7.251576900482178
    4. ' for' → logprob: -10.00157642364502
    5. ' ' → logprob: -11.62657642364502
    6. '   ' → logprob: -12.62657642364502
    7. '  ' → logprob: -13.37657642364502
    8. 'import' → logprob: -13.62657642364502
    9. 's' → logprob: -13.75157642364502
    10. ']' → logprob: -14.87657642364502

Token 440: ' item' (ID: 2169)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -2.15310683415737e-05
    2. ' sub' → logprob: -10.750021934509277
    3. 'item' → logprob: -17.62502098083496
    4. '	sub' → logprob: -20.50002098083496
    5. '(sub' → logprob: -21.75002098083496
    6. 's' → logprob: -22.37502098083496
    7. ' ' → logprob: -22.50002098083496
    8. '=sub' → logprob: -22.75002098083496
    9. '  ' → logprob: -22.87502098083496
    10. 'sup' → logprob: -23.25002098083496

Token 441: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2520624101161957
    2. 'in' → logprob: -1.502062439918518
    3. 'sub' → logprob: -9.377062797546387
    4. ' ' → logprob: -10.877062797546387
    5. 's' → logprob: -11.127062797546387
    6. '  ' → logprob: -11.502062797546387
    7. ' sub' → logprob: -12.877062797546387
    8. '   ' → logprob: -14.377062797546387
    9. ' ' → logprob: -15.377062797546387
    10. 'ins' → logprob: -15.752062797546387

Token 442: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.001170225441455841
    2. ' sub' → logprob: -6.7511701583862305
    3. '(sub' → logprob: -19.626171112060547
    4. '	sub' → logprob: -20.501171112060547
    5. '
' → logprob: -21.626171112060547
    6. 's' → logprob: -21.626171112060547
    7. 'su' → logprob: -22.376171112060547
    8. ' ' → logprob: -22.751171112060547
    9. '=sub' → logprob: -23.126171112060547
    10. '[sub' → logprob: -23.126171112060547

Token 443: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.8961017202818766e-05
    2. 'sub' → logprob: -9.750059127807617
    3. 'lst' → logprob: -15.125059127807617
    4. 'lists' → logprob: -15.875059127807617
    5. ' list' → logprob: -17.250059127807617
    6. 'liste' → logprob: -17.250059127807617
    7. ' sub' → logprob: -17.750059127807617
    8. '_list' → logprob: -17.875059127807617
    9. 'lista' → logprob: -18.250059127807617
    10. 'ilist' → logprob: -18.625059127807617

Token 444: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016357855638489127
    2. '()]' → logprob: -6.501635551452637
    3. ' ]' → logprob: -9.126635551452637
    4. ' in' → logprob: -11.126635551452637
    5. 'in' → logprob: -13.001635551452637
    6. ']
' → logprob: -13.251635551452637
    7. ']()' → logprob: -13.251635551452637
    8. '()' → logprob: -13.876635551452637
    9. ']

' → logprob: -14.251635551452637
    10. 's' → logprob: -14.376635551452637

Token 445: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010607946896925569
    2. ' for' → logprob: -6.876060962677002
    3. '
' → logprob: -11.751060485839844
    4. 'list' → logprob: -12.501060485839844
    5. 'from' → logprob: -13.001060485839844
    6. '   ' → logprob: -13.376060485839844
    7. ')' → logprob: -13.501060485839844
    8. '```' → logprob: -13.501060485839844
    9. 'result' → logprob: -13.626060485839844
    10. ']' → logprob: -13.751060485839844

Token 446: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1371397078037262
    2. 'l' → logprob: -2.5121397972106934
    3. ' i' → logprob: -4.387139797210693
    4. 'k' → logprob: -5.137139797210693
    5. 'x' → logprob: -5.262139797210693
    6. 'a' → logprob: -5.512139797210693
    7. '(i' → logprob: -5.887139797210693
    8. 'r' → logprob: -6.012139797210693
    9. ' l' → logprob: -6.387139797210693
    10. 'length' → logprob: -6.512139797210693

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2008417397737503
    2. ',j' → logprob: -1.8258417844772339
    3. ' in' → logprob: -3.9508416652679443
    4. 'in' → logprob: -7.200841903686523
    5. 'j' → logprob: -8.450841903686523
    6. '1' → logprob: -8.575841903686523
    7. '_,' → logprob: -8.825841903686523
    8. ' ,' → logprob: -8.950841903686523
    9. '0' → logprob: -9.200841903686523
    10. ',l' → logprob: -11.200841903686523

Token 448: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001549737062305212
    2. ' j' → logprob: -7.25154972076416
    3. 'l' → logprob: -7.87654972076416
    4. 'k' → logprob: -8.00154972076416
    5. 'r' → logprob: -10.12654972076416
    6. 's' → logprob: -11.12654972076416
    7. 'd' → logprob: -11.12654972076416
    8. 'a' → logprob: -12.12654972076416
    9. '   ' → logprob: -12.12654972076416
    10. '```' → logprob: -12.12654972076416

Token 449: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08894437551498413
    2. 'in' → logprob: -2.463944435119629
    3. ',' → logprob: -13.838944435119629
    4. ' ' → logprob: -14.088944435119629
    5. ')' → logprob: -14.088944435119629
    6. '   ' → logprob: -14.963944435119629
    7. '
' → logprob: -15.463944435119629
    8. 's' → logprob: -15.713944435119629
    9. '	in' → logprob: -15.713944435119629
    10. '  ' → logprob: -16.026443481445312

Token 450: ' ((' (ID: 3536)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -6.432518421206623e-05
    2. ' product' → logprob: -10.0000638961792
    3. 'range' → logprob: -11.5000638961792
    4. 'list' → logprob: -12.5000638961792
    5. 'filter' → logprob: -12.7500638961792
    6. 'flatten' → logprob: -13.5000638961792
    7. '(product' → logprob: -15.6250638961792
    8. 'prod' → logprob: -16.000064849853516
    9. 'enumer' → logprob: -16.750064849853516
    10. '   ' → logprob: -17.000064849853516

Token 451: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023681918159127235
    2. 'x' → logprob: -4.523682117462158
    3. 'k' → logprob: -5.148682117462158
    4. 'a' → logprob: -5.773682117462158
    5. '(i' → logprob: -6.773682117462158
    6. 'p' → logprob: -7.523682117462158
    7. '_i' → logprob: -7.523682117462158
    8. 'ii' → logprob: -8.273681640625
    9. ' i' → logprob: -8.398681640625
    10. ')' → logprob: -8.773681640625

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062204744666814804
    2. ',j' → logprob: -2.8122048377990723
    3. ' ,' → logprob: -9.812204360961914
    4. ',i' → logprob: -10.062204360961914
    5. 'j' → logprob: -10.187204360961914
    6. ')' → logprob: -10.437204360961914
    7. 'for' → logprob: -10.812204360961914
    8. ' for' → logprob: -11.187204360961914
    9. ',k' → logprob: -11.437204360961914
    10. ' j' → logprob: -12.187204360961914

Token 453: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008959780680015683
    2. ' j' → logprob: -7.375895977020264
    3. 'i' → logprob: -8.875896453857422
    4. '0' → logprob: -9.875896453857422
    5. ')' → logprob: -10.500896453857422
    6. 'N' → logprob: -11.250896453857422
    7. '   ' → logprob: -11.625896453857422
    8. 'k' → logprob: -11.750896453857422
    9. ' ' → logprob: -12.500896453857422
    10. '```' → logprob: -13.063396453857422

Token 454: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.519893501419574e-05
    2. 'for' → logprob: -9.50009536743164
    3. ' )' → logprob: -11.75009536743164
    4. 'in' → logprob: -12.25009536743164
    5. ' for' → logprob: -12.37509536743164
    6. ')
' → logprob: -13.50009536743164
    7. '   ' → logprob: -14.00009536743164
    8. '
' → logprob: -14.75009536743164
    9. ' in' → logprob: -15.12509536743164
    10. '  ' → logprob: -16.12509536743164

Token 455: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.618900716304779
    2. ' in' → logprob: -1.1189007759094238
    3. ' for' → logprob: -2.993900775909424
    4. 'in' → logprob: -2.993900775909424
    5. 'for' → logprob: -3.368900775909424
    6. ' )' → logprob: -9.368900299072266
    7. ' ' → logprob: -9.743900299072266
    8. '   ' → logprob: -10.118900299072266
    9. '
' → logprob: -11.993900299072266
    10. 'from' → logprob: -12.118900299072266

Token 456: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02231268770992756
    2. ' i' → logprob: -3.897312641143799
    3. 'j' → logprob: -6.397312641143799
    4. ' j' → logprob: -9.522313117980957
    5. '(i' → logprob: -11.147313117980957
    6. '	i' → logprob: -12.897313117980957
    7. '   ' → logprob: -13.147313117980957
    8. ' ' → logprob: -13.272313117980957
    9. ' ' → logprob: -13.397313117980957
    10. '_i' → logprob: -13.647313117980957

Token 457: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3869529664516449
    2. ' in' → logprob: -1.1369529962539673
    3. ',' → logprob: -10.636953353881836
    4. 'range' → logprob: -10.761953353881836
    5. '
' → logprob: -11.761953353881836
    6. '```' → logprob: -11.886953353881836
    7. ' ' → logprob: -12.136953353881836
    8. ')' → logprob: -12.761953353881836
    9. '0' → logprob: -13.136953353881836
    10. 'i' → logprob: -13.386953353881836

Token 458: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009780056774616241
    2. ' range' → logprob: -4.634779930114746
    3. 'in' → logprob: -11.384779930114746
    4. ' in' → logprob: -12.134779930114746
    5. 'product' → logprob: -12.509779930114746
    6. ')' → logprob: -14.009779930114746
    7. 're' → logprob: -14.634779930114746
    8. ' ' → logprob: -14.634779930114746
    9. '(range' → logprob: -14.634779930114746
    10. 'i' → logprob: -15.509779930114746

Token 459: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2015511393547058
    2. '(' → logprob: -1.7015511989593506
    3. 'N' → logprob: -9.45155143737793
    4. '1' → logprob: -9.82655143737793
    5. '(n' → logprob: -12.82655143737793
    6. '(
' → logprob: -14.57655143737793
    7. ' (' → logprob: -14.57655143737793
    8. '(len' → logprob: -14.95155143737793
    9. '(M' → logprob: -15.32655143737793
    10. '((' → logprob: -15.57655143737793

Token 460: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07763421535491943
    2. ' +' → logprob: -3.327634334564209
    3. ')' → logprob: -3.452634334564209
    4. '   ' → logprob: -5.327634334564209
    5. ' for' → logprob: -6.952634334564209
    6. 'for' → logprob: -6.952634334564209
    7. '       ' → logprob: -9.57763385772705
    8. ',' → logprob: -9.82763385772705
    9. 'N' → logprob: -9.82763385772705
    10. '    ' → logprob: -9.95263385772705

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1471453756093979
    2. '+' → logprob: -2.0221452713012695
    3. 'N' → logprob: -5.7721452713012695
    4. 'i' → logprob: -7.0221452713012695
    5. 'j' → logprob: -8.77214527130127
    6. ' ' → logprob: -9.27214527130127
    7. '0' → logprob: -9.64714527130127
    8. ')' → logprob: -9.89714527130127
    9. '2' → logprob: -10.64714527130127
    10. ' +' → logprob: -11.14714527130127

Token 462: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2983565330505371
    2. ' for' → logprob: -1.798356533050537
    3. 'for' → logprob: -2.548356533050537
    4. '   ' → logprob: -4.298356533050537
    5. ' ' → logprob: -8.298357009887695
    6. '       ' → logprob: -9.298357009887695
    7. '	for' → logprob: -9.798357009887695
    8. ' )' → logprob: -10.048357009887695
    9. '  ' → logprob: -10.548357009887695
    10. '+' → logprob: -10.548357009887695

Token 463: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.055175065994262695
    2. 'for' → logprob: -2.9301750659942627
    3. ')' → logprob: -8.430174827575684
    4. '   ' → logprob: -10.680174827575684
    5. ' ' → logprob: -10.805174827575684
    6. ',' → logprob: -11.055174827575684
    7. '	for' → logprob: -12.555174827575684
    8. '       ' → logprob: -12.930174827575684
    9. '           ' → logprob: -13.305174827575684
    10. '    ' → logprob: -13.555174827575684

Token 464: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04861779510974884
    2. ' j' → logprob: -3.0486178398132324
    3. '   ' → logprob: -10.798617362976074
    4. ' ' → logprob: -12.798617362976074
    5. '    ' → logprob: -13.173617362976074
    6. '  ' → logprob: -14.173617362976074
    7. ' ' → logprob: -14.298617362976074
    8. ')' → logprob: -14.548617362976074
    9. 'range' → logprob: -14.673617362976074
    10. '	j' → logprob: -14.673617362976074

Token 465: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026308773085474968
    2. 'in' → logprob: -3.65130877494812
    3. '(N' → logprob: -12.6513090133667
    4. ' ' → logprob: -13.1513090133667
    5. 'for' → logprob: -14.0263090133667
    6. ',' → logprob: -14.2763090133667
    7. 'range' → logprob: -14.5263090133667
    8. '   ' → logprob: -14.6513090133667
    9. ')' → logprob: -14.6513090133667
    10. '(' → logprob: -16.401308059692383

Token 466: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11783155053853989
    2. 'N' → logprob: -3.1178314685821533
    3. 'i' → logprob: -3.2428314685821533
    4. ' range' → logprob: -3.6178314685821533
    5. '(i' → logprob: -7.992831707000732
    6. ' i' → logprob: -8.367831230163574
    7. '(N' → logprob: -8.367831230163574
    8. ' N' → logprob: -8.992831230163574
    9. '   ' → logprob: -10.367831230163574
    10. '(range' → logprob: -10.992831230163574

Token 467: '(i' (ID: 3649)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04933428019285202
    2. '(i' → logprob: -3.0493342876434326
    3. '(' → logprob: -7.2993340492248535
    4. '((' → logprob: -10.674334526062012
    5. 'N' → logprob: -11.049334526062012
    6. 'i' → logprob: -11.924334526062012
    7. ' (' → logprob: -11.924334526062012
    8. '(j' → logprob: -12.424334526062012
    9. '   ' → logprob: -12.549334526062012
    10. '(M' → logprob: -12.674334526062012

Token 468: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5039158463478088
    2. ',' → logprob: -1.128915786743164
    3. ',N' → logprob: -2.628915786743164
    4. 'N' → logprob: -9.128915786743164
    5. '(N' → logprob: -9.503915786743164
    6. ',j' → logprob: -10.628915786743164
    7. ' ,' → logprob: -10.753915786743164
    8. ' +' → logprob: -10.878915786743164
    9. ')' → logprob: -11.378915786743164
    10. '   ' → logprob: -11.878915786743164

Token 469: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015280749648809433
    2. ' N' → logprob: -6.501528263092041
    3. '(N' → logprob: -11.376527786254883
    4. '   ' → logprob: -11.501527786254883
    5. ' ' → logprob: -13.251527786254883
    6. '	N' → logprob: -14.126527786254883
    7. '  ' → logprob: -15.126527786254883
    8. '```' → logprob: -15.626527786254883
    9. '       ' → logprob: -15.751527786254883
    10. '
' → logprob: -15.751527786254883

Token 470: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1160349458805285e-05
    2. ' +' → logprob: -12.125011444091797
    3. '+
' → logprob: -13.375011444091797
    4. ')):
' → logprob: -13.875011444091797
    5. ')):' → logprob: -14.250011444091797
    6. ')+' → logprob: -14.500011444091797
    7. ')' → logprob: -14.875011444091797
    8. '   ' → logprob: -14.875011444091797
    9. '))' → logprob: -15.250011444091797
    10. '+)' → logprob: -15.750011444091797

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036111166700720787
    2. '+' → logprob: -5.628611087799072
    3. ' ' → logprob: -12.12861156463623
    4. ')' → logprob: -12.75361156463623
    5. ')+' → logprob: -14.00361156463623
    6. '
' → logprob: -14.75361156463623
    7. '   ' → logprob: -14.87861156463623
    8. '2' → logprob: -15.12861156463623
    9. '+)' → logprob: -15.50361156463623
    10. ' +' → logprob: -15.62861156463623

Token 472: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011877299984917045
    2. '):
' → logprob: -6.751187801361084
    3. ')' → logprob: -11.626187324523926
    4. ')):' → logprob: -12.501187324523926
    5. ':' → logprob: -12.626187324523926
    6. ' ):' → logprob: -14.751187324523926
    7. '):

' → logprob: -14.876187324523926
    8. '):
' → logprob: -15.126187324523926
    9. '   ' → logprob: -15.751187324523926
    10. ']):' → logprob: -16.001188278198242

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028737489134073257
    2. '       ' → logprob: -4.153737545013428
    3. 'dp' → logprob: -5.278737545013428
    4. ' dp' → logprob: -5.653737545013428
    5. ' if' → logprob: -5.903737545013428
    6. '	dp' → logprob: -7.278737545013428
    7. ' for' → logprob: -9.15373706817627
    8. '    
' → logprob: -9.40373706817627
    9. '   ' → logprob: -9.52873706817627
    10. 'if' → logprob: -9.52873706817627

Token 474: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2367631047964096
    2. '       ' → logprob: -2.2367630004882812
    3. '   ' → logprob: -2.4867630004882812
    4. ' if' → logprob: -3.9867630004882812
    5. 'for' → logprob: -6.986763000488281
    6. 'r' → logprob: -7.736763000488281
    7. 'l' (adapté à ' l') → logprob: -7.986763000488281
    8. 'dp' → logprob: -9.236763000488281
    9. 'li' → logprob: -9.236763000488281
    10. 'left' → logprob: -9.986763000488281

Token 475: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28584444522857666
    2. '=' → logprob: -2.410844326019287
    3. 'if' → logprob: -3.035844326019287
    4. '   ' → logprob: -3.785844326019287
    5. '_cost' → logprob: -3.910844326019287
    6. 'cost' → logprob: -4.035844326019287
    7. 'f' → logprob: -4.660844326019287
    8. 'eft' → logprob: -4.660844326019287
    9. '_val' → logprob: -4.785844326019287
    10. ',' → logprob: -5.660844326019287

Token 476: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03720074146986008
    2. ' r' → logprob: -3.412200689315796
    3. 'dp' → logprob: -6.037200927734375
    4. ' dp' → logprob: -8.037200927734375
    5. ' =' → logprob: -8.162200927734375
    6. '=' → logprob: -8.537200927734375
    7. '   ' → logprob: -8.912200927734375
    8. '0' → logprob: -9.912200927734375
    9. ' ' → logprob: -10.662200927734375
    10. 'i' → logprob: -10.912200927734375

Token 477: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891491055488586
    2. ' =' → logprob: -2.5789148807525635
    3. '   ' → logprob: -11.078914642333984
    4. ',' → logprob: -11.953914642333984
    5. '    ' → logprob: -14.328914642333984
    6. 'dp' → logprob: -14.828914642333984
    7. ' ' → logprob: -14.828914642333984
    8. 'if' → logprob: -15.328914642333984
    9. '=l' → logprob: -15.703914642333984
    10. '=i' → logprob: -15.953914642333984

Token 478: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14938901364803314
    2. '(dp' → logprob: -2.8993890285491943
    3. 'Al' → logprob: -3.2743890285491943
    4. '(' → logprob: -3.5243890285491943
    5. 'float' → logprob: -5.899388790130615
    6. ' dp' → logprob: -6.024388790130615
    7. 'min' → logprob: -6.149388790130615
    8. '(A' → logprob: -6.399388790130615
    9. '0' → logprob: -6.524388790130615
    10. '(float' → logprob: -6.649388790130615

Token 479: '0' (ID: 15)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08714259415864944
    2. 'Al' → logprob: -3.0871427059173584
    3. '(' → logprob: -4.337142467498779
    4. '(dp' → logprob: -4.587142467498779
    5. 'min' → logprob: -5.587142467498779
    6. '0' → logprob: -5.712142467498779
    7. '(i' → logprob: -6.337142467498779
    8. 'float' → logprob: -6.462142467498779
    9. 'max' → logprob: -7.087142467498779
    10. '(A' → logprob: -7.337142467498779

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9948084354400635
    2. '
' → logprob: -1.2448084354400635
    3. '   ' → logprob: -1.2448084354400635
    4. ' if' → logprob: -4.244808197021484
    5. ';' → logprob: -4.494808197021484
    6. 'if' → logprob: -4.619808197021484
    7. 'for' → logprob: -5.244808197021484
    8. '<|end|>' → logprob: -5.619808197021484
    9. ',
' → logprob: -5.994808197021484
    10. ' ' → logprob: -6.369808197021484

Token 481: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008686074987053871
    2. 'float' → logprob: -5.633686065673828
    3. 'dp' → logprob: -6.008686065673828
    4. ' ' → logprob: -6.883686065673828
    5. 'i' → logprob: -7.508686065673828
    6. 'N' → logprob: -7.633686065673828
    7. 'j' → logprob: -7.883686065673828
    8. '1' → logprob: -10.133686065673828
    9. ' float' → logprob: -10.633686065673828
    10. 'A' → logprob: -11.258686065673828

Token 482: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24712832272052765
    2. 'j' → logprob: -1.8721283674240112
    3. 'N' → logprob: -3.6221282482147217
    4. 'i' → logprob: -3.9971282482147217
    5. 'float' → logprob: -3.9971282482147217
    6. 'dp' → logprob: -7.622128486633301
    7. ' ' → logprob: -7.872128486633301
    8. 'len' → logprob: -8.6221284866333
    9. '1' → logprob: -8.7471284866333
    10. ' j' → logprob: -9.2471284866333

Token 483: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005754699464887381
    2. '
' → logprob: -5.255754470825195
    3. '    
' → logprob: -8.255754470825195
    4. '<|end|>' → logprob: -8.380754470825195
    5. ' if' → logprob: -12.130754470825195
    6. '       ' → logprob: -12.255754470825195
    7. '<|end|>' → logprob: -12.255754470825195
    8. '        
' → logprob: -12.880754470825195
    9. '
' → logprob: -13.255754470825195
    10. ' 
' → logprob: -13.255754470825195

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015836587408557534
    2. 'if' → logprob: -9.625158309936523
    3. '       ' → logprob: -10.625158309936523
    4. ' if' → logprob: -10.750158309936523
    5. '<|end|>' → logprob: -10.875158309936523
    6. 'for' → logprob: -11.375158309936523
    7. '    
' → logprob: -12.375158309936523
    8. ' for' → logprob: -12.625158309936523
    9. '
' → logprob: -13.125158309936523
    10. '  ' → logprob: -13.625158309936523

Token 485: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40618863701820374
    2. 'if' → logprob: -1.2811886072158813
    3. 'for' → logprob: -2.906188726425171
    4. ' if' → logprob: -6.781188488006592
    5. ' for' → logprob: -8.28118896484375
    6. '	if' → logprob: -11.40618896484375
    7. '       ' → logprob: -11.40618896484375
    8. 'while' → logprob: -12.65618896484375
    9. '	for' → logprob: -12.65618896484375
    10. '   ' → logprob: -13.40618896484375

Token 486: ' fake' (ID: 20774)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.7858726978302002
    2. ' l' → logprob: -1.9108726978302002
    3. ' update' → logprob: -1.9108726978302002
    4. 'update' → logprob: -2.5358726978302
    5. ' calc' → logprob: -2.7858726978302
    6. ' inner' → logprob: -3.1608726978302
    7. ' get' → logprob: -3.1608726978302
    8. ' f' → logprob: -3.2858726978302
    9. 'acc' → logprob: -3.2858726978302
    10. 'calc' → logprob: -3.2858726978302

Token 487: '_sum' (ID: 29859)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8074530363082886
    2. '():' → logprob: -1.5574530363082886
    3. '_l' → logprob: -1.8074530363082886
    4. '(l' → logprob: -3.182453155517578
    5. '():
' → logprob: -3.807453155517578
    6. '_sum' → logprob: -4.182453155517578
    7. '(x' → logprob: -4.432453155517578
    8. '_range' → logprob: -5.057453155517578
    9. '_loop' → logprob: -5.057453155517578
    10. '_acc' → logprob: -5.182453155517578

Token 488: '(it' (ID: 29445)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4190185070037842
    2. '(x' → logprob: -1.7940185070037842
    3. '(k' → logprob: -2.794018507003784
    4. '():
' → logprob: -2.919018507003784
    5. '(l' → logprob: -4.544018745422363
    6. '(acc' → logprob: -4.794018745422363
    7. '(lst' → logprob: -5.044018745422363
    8. '(a' → logprob: -5.044018745422363
    9. '(n' → logprob: -5.294018745422363
    10. '(s' → logprob: -5.419018745422363

Token 489: '):' (ID: 3127)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.08572054654359818
    2. '):
' → logprob: -3.0857205390930176
    3. '):' → logprob: -3.3357205390930176
    4. '=' → logprob: -7.710720539093018
    5. 'ertools' → logprob: -8.335721015930176
    6. '):

' → logprob: -9.710721015930176
    7. '):
' → logprob: -10.585721015930176
    8. 'or' → logprob: -11.210721015930176
    9. ':' → logprob: -11.210721015930176
    10. ',' → logprob: -11.460721015930176

Token 490: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007210336625576019
    2. ' return' → logprob: -5.3822102546691895
    3. ' for' → logprob: -6.8822102546691895
    4. '   ' → logprob: -7.3822102546691895
    5. 'return' → logprob: -7.5072102546691895
    6. '    ' → logprob: -9.132210731506348
    7. '	   ' → logprob: -9.132210731506348
    8. 'for' → logprob: -9.757210731506348
    9. '      ' → logprob: -10.507210731506348
    10. '	' → logprob: -10.632210731506348

Token 491: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.21121975779533386
    2. 'sum' → logprob: -1.8362197875976562
    3. 'next' → logprob: -3.8362197875976562
    4. ' reduce' → logprob: -5.586219787597656
    5. '0' → logprob: -5.711219787597656
    6. ' sum' → logprob: -6.961219787597656
    7. 'list' → logprob: -7.586219787597656
    8. ' next' → logprob: -8.211219787597656
    9. 'fun' → logprob: -9.086219787597656
    10. 'max' → logprob: -9.336219787597656

Token 492: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.006549228448420763
    2. 'add' → logprob: -5.13154935836792
    3. '(lambda' → logprob: -7.50654935836792
    4. '(operator' → logprob: -10.631548881530762
    5. ' add' → logprob: -10.756548881530762
    6. '(' → logprob: -11.256548881530762
    7. ' (' → logprob: -12.881548881530762
    8. ')add' → logprob: -13.131548881530762
    9. '   ' → logprob: -13.256548881530762
    10. 'lambda' → logprob: -13.381548881530762

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030400342075154185
    2. ',it' → logprob: -8.125304222106934
    3. ',list' → logprob: -13.500304222106934
    4. ' ,' → logprob: -13.500304222106934
    5. ',map' → logprob: -13.500304222106934
    6. '(it' → logprob: -13.750304222106934
    7. ',int' → logprob: -14.125304222106934
    8. ',next' → logprob: -14.625304222106934
    9. 'it' → logprob: -15.125304222106934
    10. '   ' → logprob: -15.625304222106934

Token 494: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.04646676778793335
    2. 'list' → logprob: -3.921466827392578
    3. '(it' → logprob: -4.296466827392578
    4. 'map' → logprob: -4.671466827392578
    5. '[it' → logprob: -6.671466827392578
    6. 'fake' → logprob: -7.421466827392578
    7. ' it' → logprob: -9.046466827392578
    8. ')' → logprob: -9.296466827392578
    9. 'item' → logprob: -9.421466827392578
    10. '[' → logprob: -9.421466827392578

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06029348075389862
    2. ')' → logprob: -2.935293436050415
    3. ' if' → logprob: -5.935293674468994
    4. '   ' → logprob: -6.560293674468994
    5. 'if' → logprob: -7.310293674468994
    6. ' ,' → logprob: -7.685293674468994
    7. ' or' → logprob: -9.310293197631836
    8. '    ' → logprob: -10.810293197631836
    9. '       ' → logprob: -11.435293197631836
    10. '  ' → logprob: -11.560293197631836

Token 496: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010462664067745209
    2. ' ' → logprob: -6.876046180725098
    3. ')' → logprob: -11.876046180725098
    4. '   ' → logprob: -13.126046180725098
    5. 'float' → logprob: -13.626046180725098
    6. '  ' → logprob: -14.251046180725098
    7. '    ' → logprob: -14.938546180725098
    8. '[' → logprob: -15.126046180725098
    9. '[]' → logprob: -15.376046180725098
    10. '           ' → logprob: -15.876046180725098

Token 497: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034869377850554883
    2. ' ' → logprob: -8.125349044799805
    3. '[])' → logprob: -11.250349044799805
    4. '[' → logprob: -11.375349044799805
    5. '[]' → logprob: -11.375349044799805
    6. 'float' → logprob: -12.000349044799805
    7. ')' → logprob: -12.625349044799805
    8. '1' → logprob: -13.000349044799805
    9. '-' → logprob: -14.125349044799805
    10. '[])
' → logprob: -14.500349044799805

Token 498: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032509120646864176
    2. '   ' → logprob: -5.753251075744629
    3. ' )' → logprob: -10.128251075744629
    4. ')
' → logprob: -11.503251075744629
    5. '       ' → logprob: -12.253251075744629
    6. '):' → logprob: -12.378251075744629
    7. '):
' → logprob: -13.128251075744629
    8. '  ' → logprob: -13.253251075744629
    9. ' ' → logprob: -13.378251075744629
    10. ')return' → logprob: -13.878251075744629

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030114251421764493
    2. '<|end|>' → logprob: -8.625301361083984
    3. '    
' → logprob: -9.625301361083984
    4. ' for' → logprob: -10.625301361083984
    5. 'for' → logprob: -11.125301361083984
    6. '       ' → logprob: -12.375301361083984
    7. ' if' → logprob: -13.375301361083984
    8. '
' → logprob: -13.500301361083984
    9. '        
' → logprob: -13.500301361083984
    10. ')' → logprob: -13.750301361083984

Token 500: ' step' (ID: 5983)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07654382288455963
    2. 'if' → logprob: -2.7015438079833984
    3. ' if' → logprob: -5.451543807983398
    4. 'l' → logprob: -6.826543807983398
    5. 'for' → logprob: -6.826543807983398
    6. ' for' → logprob: -10.076543807983398
    7. '    
' → logprob: -10.326543807983398
    8. ' l' → logprob: -10.451543807983398
    9. 'r' → logprob: -12.326543807983398
    10. '   ' → logprob: -12.701543807983398

Token 501: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6519109010696411
    2. 's' → logprob: -1.1519109010696411
    3. '   ' → logprob: -2.9019107818603516
    4. '=' → logprob: -3.4019107818603516
    5. '_l' → logprob: -4.026910781860352
    6. '_values' → logprob: -4.401910781860352
    7. '_size' → logprob: -4.651910781860352
    8. '_cost' → logprob: -5.026910781860352
    9. '_' → logprob: -5.401910781860352
    10. '_sum' → logprob: -5.651910781860352

Token 502: ' lambda' (ID: 27871)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.8064279556274414
    2. 'Al' → logprob: -2.3064279556274414
    3. 'j' → logprob: -2.4314279556274414
    4. 'i' → logprob: -2.5564279556274414
    5. '(' → logprob: -2.6814279556274414
    6. 'fake' → logprob: -2.9314279556274414
    7. '1' → logprob: -3.0564279556274414
    8. ' dp' → logprob: -3.0564279556274414
    9. ' i' → logprob: -3.3064279556274414
    10. ' (' → logprob: -3.3064279556274414

Token 503: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.1978461742401123
    2. ' x' → logprob: -1.3228461742401123
    3. 'k' → logprob: -1.5728461742401123
    4. 'x' → logprob: -1.5728461742401123
    5. ' idx' → logprob: -4.947846412658691
    6. 'idx' → logprob: -6.197846412658691
    7. '(k' → logprob: -6.947846412658691
    8. ' t' → logprob: -7.447846412658691
    9. 't' → logprob: -7.447846412658691
    10. 'i' → logprob: -7.822846412658691

Token 504: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012460665311664343
    2. ' :' → logprob: -6.876245975494385
    3. ',' → logprob: -9.501246452331543
    4. '=' → logprob: -10.126246452331543
    5. '   ' → logprob: -11.001246452331543
    6. 'k' → logprob: -11.001246452331543
    7. 'r' → logprob: -11.751246452331543
    8. ':l' → logprob: -11.751246452331543
    9. ':k' → logprob: -11.751246452331543
    10. ':[' → logprob: -12.251246452331543

Token 505: ' (
' (ID: 4112)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0834544897079468
    2. 'A' → logprob: -1.4584544897079468
    3. 'Al' → logprob: -1.8334544897079468
    4. '(A' → logprob: -2.8334546089172363
    5. '(' → logprob: -3.0834546089172363
    6. ' dp' → logprob: -3.0834546089172363
    7. ' A' → logprob: -3.4584546089172363
    8. ' (' → logprob: -4.458454608917236
    9. '(dp' → logprob: -4.583454608917236
    10. ' Al' → logprob: -4.583454608917236

Token 506: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4450594186782837
    2. 'Al' → logprob: -1.3200594186782837
    3. '(' → logprob: -3.945059299468994
    4. 'A' → logprob: -4.070059299468994
    5. 'Ar' → logprob: -4.320059299468994
    6. 'l' → logprob: -4.945059299468994
    7. ' dp' → logprob: -4.945059299468994
    8. '(dp' → logprob: -5.320059299468994
    9. '(A' → logprob: -5.570059299468994
    10. 'fake' → logprob: -5.820059299468994

Token 507: ' fake' (ID: 20774)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1258670538663864
    2. 'fake' (adapté à ' fake') → logprob: -3.7508671283721924
    3. '(' → logprob: -3.8758671283721924
    4. '(dp' → logprob: -4.000866889953613
    5. 'Al' → logprob: -4.125866889953613
    6. 'max' → logprob: -4.875866889953613
    7. 'A' → logprob: -5.000866889953613
    8. '(A' → logprob: -5.375866889953613
    9. '(l' → logprob: -5.625866889953613
    10. '(fake' → logprob: -5.625866889953613

Token 508: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.2200749754119897e-06
    2. 'sum' → logprob: -13.250001907348633
    3. '_' → logprob: -16.250001907348633
    4. '_s' → logprob: -16.250001907348633
    5. '_
' → logprob: -17.000001907348633
    6. ')' → logprob: -17.750001907348633
    7. '
' → logprob: -17.875001907348633
    8. 'Sum' → logprob: -18.000001907348633
    9. '(sum' → logprob: -18.000001907348633
    10. '__' → logprob: -18.250001907348633

Token 509: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13825741410255432
    2. '(A' → logprob: -2.8882575035095215
    3. '([' → logprob: -3.1382575035095215
    4. '(range' → logprob: -4.0132575035095215
    5. '((' → logprob: -4.7632575035095215
    6. '(
' → logprob: -6.0132575035095215
    7. '(AL' → logprob: -8.763257026672363
    8. '([
' → logprob: -9.013257026672363
    9. '(map' → logprob: -9.138257026672363
    10. '(L' → logprob: -9.263257026672363

Token 510: 'Al' (ID: 2348)
  Prédit: 'Al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.03126278892159462
    2. 'A' → logprob: -3.6562628746032715
    3. '(' → logprob: -6.0312628746032715
    4. 'Ar' → logprob: -6.4062628746032715
    5. ' Al' → logprob: -7.7812628746032715
    6. '(A' → logprob: -8.406262397766113
    7. '1' → logprob: -10.031262397766113
    8. ' A' → logprob: -10.406262397766113
    9. 'int' → logprob: -10.906262397766113
    10. '   ' → logprob: -10.906262397766113

Token 511: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011196131817996502
    2. '[k' → logprob: -4.636196136474609
    3. '[j' → logprob: -7.011196136474609
    4. '[' → logprob: -8.26119613647461
    5. '[l' → logprob: -9.26119613647461
    6. 'i' → logprob: -9.38619613647461
    7. ' [' → logprob: -11.13619613647461
    8. '[m' → logprob: -11.38619613647461
    9. '][' → logprob: -11.38619613647461
    10. 'k' → logprob: -12.01119613647461

Token 512: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01747800037264824
    2. '[i' → logprob: -4.517477989196777
    3. '[j' → logprob: -5.892477989196777
    4. '[' → logprob: -6.392477989196777
    5. '[k' → logprob: -7.767477989196777
    6. '[l' → logprob: -8.142477989196777
    7. '[m' → logprob: -8.142477989196777
    8. '-' → logprob: -8.892477989196777
    9. '[x' → logprob: -9.267477989196777
    10. '   ' → logprob: -9.642477989196777

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7123762965202332
    2. '][' → logprob: -1.212376356124878
    3. 'i' → logprob: -2.337376356124878
    4. 'j' → logprob: -2.587376356124878
    5. '-' → logprob: -4.212376117706299
    6. '0' → logprob: -4.337376117706299
    7. '[' → logprob: -4.962376117706299
    8. 'k' → logprob: -6.337376117706299
    9. 'm' → logprob: -7.837376117706299
    10. '(' → logprob: -7.962376117706299

Token 514: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01645589992403984
    2. '[j' → logprob: -4.641456127166748
    3. '[k' → logprob: -6.141456127166748
    4. '[i' → logprob: -6.516456127166748
    5. '[' → logprob: -6.766456127166748
    6. '[m' → logprob: -7.766456127166748
    7. '[l' → logprob: -8.51645565032959
    8. ']' → logprob: -8.51645565032959
    9. '[x' → logprob: -8.64145565032959
    10. '][:' → logprob: -8.89145565032959

Token 515: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0927065834403038
    2. 'i' → logprob: -2.4677066802978516
    3. 'l' → logprob: -6.342706680297852
    4. 'r' → logprob: -7.092706680297852
    5. 'm' → logprob: -7.967706680297852
    6. 'k' → logprob: -8.342706680297852
    7. '   ' → logprob: -9.467706680297852
    8. 'x' → logprob: -9.467706680297852
    9. '0' → logprob: -9.592706680297852
    10. 'p' → logprob: -9.842706680297852

Token 516: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1169486865401268
    2. '],' → logprob: -2.6169486045837402
    3. '-' → logprob: -4.24194860458374
    4. 'k' → logprob: -5.61694860458374
    5. ' -' → logprob: -5.61694860458374
    6. 'if' → logprob: -5.74194860458374
    7. ' if' → logprob: -6.11694860458374
    8. ']+' → logprob: -6.24194860458374
    9. 'j' → logprob: -6.49194860458374
    10. 'for' → logprob: -6.99194860458374

Token 517: '),' (ID: 936)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6157965660095215
    2. 'for' → logprob: -1.7407965660095215
    3. ',' → logprob: -2.1157965660095215
    4. '+' → logprob: -2.7407965660095215
    5. ' +' → logprob: -2.8657965660095215
    6. ' if' → logprob: -3.9907965660095215
    7. ' -' → logprob: -4.4907965660095215
    8. 'if' → logprob: -5.7407965660095215
    9. '-' → logprob: -6.1157965660095215
    10. ' ,' → logprob: -7.2407965660095215

Token 518: ' 
' (ID: 793)
  Prédit: 'fake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fake' → logprob: -0.2566111385822296
    2. ' fake' → logprob: -1.6316111087799072
    3. '        ' → logprob: -4.381611347198486
    4. '       ' → logprob: -5.131611347198486
    5. 'r' → logprob: -6.006611347198486
    6. 'Ar' → logprob: -6.131611347198486
    7. ' r' → logprob: -6.256611347198486
    8. '(fake' → logprob: -6.506611347198486
    9. ' Ar' → logprob: -7.006611347198486
    10. '    ' → logprob: -8.006610870361328

Token 519: '       ' (ID: 309)
  Prédit: 'fake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fake' → logprob: -0.43277081847190857
    2. ' fake' → logprob: -1.057770848274231
    3. 'Ar' → logprob: -6.932770729064941
    4. ' Ar' → logprob: -7.182770729064941
    5. '        ' → logprob: -7.307770729064941
    6. '       ' → logprob: -7.432770729064941
    7. '(fake' → logprob: -8.057770729064941
    8. 'r' → logprob: -8.307770729064941
    9. 'Fake' → logprob: -9.432770729064941
    10. '.fake' → logprob: -9.807770729064941

Token 520: ' fake' (ID: 20774)
  Prédit: 'fake'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fake' (adapté à ' fake') → logprob: -0.003882261458784342
    2. ' fake' → logprob: -6.00388240814209
    3. 'Ar' → logprob: -6.62888240814209
    4. ' Ar' → logprob: -10.62888240814209
    5. '   ' → logprob: -11.50388240814209
    6. '(fake' → logprob: -11.75388240814209
    7. '         ' → logprob: -12.50388240814209
    8. '  ' → logprob: -12.50388240814209
    9. '       ' → logprob: -12.75388240814209
    10. '    ' → logprob: -12.75388240814209

Token 521: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0001502636878285557
    2. 'sum' → logprob: -8.875150680541992
    3. 'Sum' → logprob: -11.750150680541992
    4. '_s' → logprob: -14.250150680541992
    5. 'r' → logprob: -15.000150680541992
    6. 's' → logprob: -15.375150680541992
    7. '[' → logprob: -15.500150680541992
    8. ' sum' → logprob: -15.625150680541992
    9. '_S' → logprob: -16.125150680541992
    10. '_' → logprob: -16.375150680541992

Token 522: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0020007232669740915
    2. '[' → logprob: -6.50200080871582
    3. '(' → logprob: -7.62700080871582
    4. 'Ar' → logprob: -12.12700080871582
    5. '([...' → logprob: -13.75200080871582
    6. '([
' → logprob: -14.00200080871582
    7. ')' → logprob: -14.12700080871582
    8. '([(' → logprob: -14.75200080871582
    9. '(lambda' → logprob: -15.00200080871582
    10. '((' → logprob: -15.25200080871582

Token 523: 'Ar' (ID: 2326)
  Prédit: 'Ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.00023750975378789008
    2. 'Al' → logprob: -9.500237464904785
    3. ' Ar' → logprob: -9.875237464904785
    4. '[' → logprob: -10.125237464904785
    5. '(' → logprob: -11.000237464904785
    6. '
' → logprob: -11.375237464904785
    7. '   ' → logprob: -11.875237464904785
    8. ' ' → logprob: -12.125237464904785
    9. '  ' → logprob: -13.125237464904785
    10. 'r' → logprob: -13.125237464904785

Token 524: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.005126784555613995
    2. 'k' → logprob: -5.505126953125
    3. '[j' → logprob: -7.005126953125
    4. '[' → logprob: -10.255126953125
    5. '][' → logprob: -11.130126953125
    6. '(k' → logprob: -11.255126953125
    7. '[i' → logprob: -11.255126953125
    8. '{k' → logprob: -11.255126953125
    9. '
' → logprob: -11.505126953125
    10. '[l' → logprob: -11.880126953125

Token 525: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00021855637896806002
    2. '][' → logprob: -9.250218391418457
    3. '[' → logprob: -9.750218391418457
    4. '1' → logprob: -10.375218391418457
    5. ' -' → logprob: -10.750218391418457
    6. '[j' → logprob: -12.625218391418457
    7. 'j' → logprob: -12.625218391418457
    8. '0' → logprob: -14.000218391418457
    9. '   ' → logprob: -14.375218391418457
    10. ']' → logprob: -14.375218391418457

Token 526: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0437452532351017
    2. 'j' → logprob: -3.168745279312134
    3. '-' → logprob: -7.293745040893555
    4. 'i' → logprob: -10.793745040893555
    5. ']' → logprob: -11.668745040893555
    6. ' j' → logprob: -12.043745040893555
    7. '
' → logprob: -12.043745040893555
    8. '   ' → logprob: -12.293745040893555
    9. '```' → logprob: -12.293745040893555
    10. '...' → logprob: -13.043745040893555

Token 527: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005695315543562174
    2. '[j' → logprob: -5.255695343017578
    3. ']' → logprob: -8.380695343017578
    4. ' ][' → logprob: -9.380695343017578
    5. '[i' → logprob: -10.380695343017578
    6. '[' → logprob: -10.380695343017578
    7. '   ' → logprob: -10.505695343017578
    8. ']))' → logprob: -11.880695343017578
    9. '[k' → logprob: -12.130695343017578
    10. '][:' → logprob: -12.255695343017578

Token 528: 'k' (ID: 74)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00015050210640765727
    2. ' j' → logprob: -9.875150680541992
    3. 'k' → logprob: -10.000150680541992
    4. '   ' → logprob: -11.125150680541992
    5. 'i' → logprob: -11.250150680541992
    6. '[j' → logprob: -12.500150680541992
    7. 'r' → logprob: -12.625150680541992
    8. '(j' → logprob: -13.000150680541992
    9. ']' → logprob: -13.125150680541992
    10. '           ' → logprob: -13.125150680541992

Token 529: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006380564067512751
    2. '1' → logprob: -5.506380558013916
    3. ']])' → logprob: -7.381380558013916
    4. ']' → logprob: -7.506380558013916
    5. ' -' → logprob: -7.506380558013916
    6. ']]' → logprob: -9.131381034851074
    7. 'j' → logprob: -9.256381034851074
    8. '2' → logprob: -9.756381034851074
    9. ']-' → logprob: -9.756381034851074
    10. '[' → logprob: -9.756381034851074

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.035926394164562225
    2. '2' → logprob: -3.410926342010498
    3. 'j' → logprob: -6.285926342010498
    4. '3' → logprob: -8.535926818847656
    5. '-' → logprob: -9.285926818847656
    6. 'i' → logprob: -9.660926818847656
    7. '0' → logprob: -11.035926818847656
    8. ']' → logprob: -11.410926818847656
    9. 'k' → logprob: -11.535926818847656
    10. ' ' → logprob: -11.973426818847656

Token 531: ']' (ID: 60)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.9265191555023193
    2. ']]' → logprob: -1.0515191555023193
    3. '-' → logprob: -2.0515191555023193
    4. ']' → logprob: -2.1765191555023193
    5. ' -' → logprob: -5.801519393920898
    6. ']))' → logprob: -5.801519393920898
    7. '][' → logprob: -6.051519393920898
    8. '])' → logprob: -7.051519393920898
    9. '],' → logprob: -7.426519393920898
    10. ']]]' → logprob: -7.551519393920898

Token 532: ' -' (ID: 533)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03253002092242241
    2. ']))' → logprob: -4.032529830932617
    3. '])
' → logprob: -4.907529830932617
    4. ']),' → logprob: -6.157529830932617
    5. '[i' → logprob: -6.657529830932617
    6. '[j' → logprob: -6.782529830932617
    7. ')])' → logprob: -7.157529830932617
    8. '[k' → logprob: -8.532529830932617
    9. ' ])' → logprob: -8.532529830932617
    10. '])]' → logprob: -8.532529830932617

Token 533: ' Ar' (ID: 1754)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.2925977110862732
    2. 'Ar' → logprob: -1.417597770690918
    3. 'l' → logprob: -5.417597770690918
    4. '(' → logprob: -5.792597770690918
    5. 'r' → logprob: -6.417597770690918
    6. ' Al' → logprob: -7.167597770690918
    7. ' Ar' → logprob: -7.792597770690918
    8. '0' → logprob: -8.417597770690918
    9. 'j' → logprob: -8.917597770690918
    10. '   ' → logprob: -9.417597770690918

Token 534: '[j' (ID: 7895)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.004329233895987272
    2. 'k' → logprob: -5.754329204559326
    3. '[i' → logprob: -8.004329681396484
    4. '[' → logprob: -8.004329681396484
    5. '(k' → logprob: -8.754329681396484
    6. '[j' → logprob: -9.004329681396484
    7. '][' → logprob: -10.004329681396484
    8. '{k' → logprob: -10.504329681396484
    9. '[l' → logprob: -10.879329681396484
    10. ' [' → logprob: -11.129329681396484

Token 535: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5981542468070984
    2. '-' → logprob: -1.3481543064117432
    3. '[k' → logprob: -1.7231543064117432
    4. '[' → logprob: -4.848154067993164
    5. 'k' → logprob: -6.473154067993164
    6. ' -' → logprob: -6.973154067993164
    7. '+' → logprob: -7.723154067993164
    8. '[j' → logprob: -8.848154067993164
    9. '1' → logprob: -8.973154067993164
    10. '   ' → logprob: -8.973154067993164

Token 536: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07898562401533127
    2. '2' → logprob: -2.5789856910705566
    3. 'k' → logprob: -10.203985214233398
    4. 'i' → logprob: -11.203985214233398
    5. '3' → logprob: -11.328985214233398
    6. ' ' → logprob: -11.328985214233398
    7. '(k' → logprob: -12.078985214233398
    8. '(i' → logprob: -12.703985214233398
    9. '   ' → logprob: -12.828985214233398
    10. '(' → logprob: -12.828985214233398

Token 537: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002273604739457369
    2. '[k' → logprob: -6.2522735595703125
    3. ' ][' → logprob: -8.877273559570312
    4. '[' → logprob: -9.377273559570312
    5. '-' → logprob: -10.252273559570312
    6. 'k' → logprob: -10.627273559570312
    7. ']' → logprob: -10.752273559570312
    8. '   ' → logprob: -11.877273559570312
    9. ' -' → logprob: -12.252273559570312
    10. ' ' → logprob: -12.877273559570312

Token 538: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012122140266001225
    2. 'i' → logprob: -4.51212215423584
    3. 'j' → logprob: -7.01212215423584
    4. ' k' → logprob: -10.13712215423584
    5. '(k' → logprob: -10.38712215423584
    6. 'r' → logprob: -10.63712215423584
    7. '0' → logprob: -11.38712215423584
    8. '-' → logprob: -11.38712215423584
    9. '[k' → logprob: -11.38712215423584
    10. '   ' → logprob: -11.63712215423584

Token 539: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08838211745023727
    2. '2' → logprob: -2.5883820056915283
    3. '1' → logprob: -5.463382244110107
    4. ']' → logprob: -5.963382244110107
    5. ' -' → logprob: -6.838382244110107
    6. '])' → logprob: -7.588382244110107
    7. '0' → logprob: -8.08838176727295
    8. 'k' → logprob: -8.83838176727295
    9. '   ' → logprob: -9.46338176727295
    10. '],' → logprob: -9.58838176727295

Token 540: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11284072697162628
    2. '1' → logprob: -2.2378406524658203
    3. '```' → logprob: -11.86284065246582
    4. ' ' → logprob: -12.48784065246582
    5. ']' → logprob: -13.86284065246582
    6. '3' → logprob: -13.92534065246582
    7. '0' → logprob: -13.92534065246582
    8. '-' → logprob: -13.98784065246582
    9. '   ' → logprob: -14.05034065246582
    10. 'k' → logprob: -14.17534065246582

Token 541: ']])
' (ID: 62818)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.5536594390869141
    2. ']' → logprob: -0.9286594390869141
    3. '])' → logprob: -4.053659439086914
    4. '],' → logprob: -5.428659439086914
    5. ']])' → logprob: -6.553659439086914
    6. ']))
' → logprob: -6.678659439086914
    7. '])]' → logprob: -6.928659439086914
    8. '])),' → logprob: -7.303659439086914
    9. ']]' → logprob: -7.428659439086914
    10. ' ]' → logprob: -7.428659439086914

Token 542: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5268637537956238
    2. '   ' → logprob: -0.9018637537956238
    3. '       ' → logprob: -5.6518635749816895
    4. '),' → logprob: -9.401864051818848
    5. ')
' → logprob: -9.776864051818848
    6. '))' → logprob: -10.276864051818848
    7. ',' → logprob: -11.401864051818848
    8. ' )' → logprob: -12.026864051818848
    9. ')}' → logprob: -12.026864051818848
    10. ')))' → logprob: -12.776864051818848

Token 543: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030487418174743652
    2. '   ' → logprob: -3.530487537384033
    3. '       ' → logprob: -7.530487537384033
    4. ')
' (adapté à ' )
') → logprob: -9.030487060546875
    5. '))' → logprob: -10.905487060546875
    6. ' )' → logprob: -11.405487060546875
    7. '),' → logprob: -11.530487060546875
    8. '  ' → logprob: -12.030487060546875
    9. ' if' → logprob: -12.030487060546875
    10. ')[' → logprob: -12.030487060546875

Token 544: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4526904821395874
    2. ')' → logprob: -1.0776904821395874
    3. ':' → logprob: -4.827690601348877
    4. '):' → logprob: -4.952690601348877
    5. '<|end|>' → logprob: -5.077690601348877
    6. '       ' → logprob: -7.452690601348877
    7. ' ' → logprob: -7.577690601348877
    8. '  ' → logprob: -7.702690601348877
    9. ')
' → logprob: -8.952690124511719
    10. '    ' → logprob: -9.327690124511719

Token 545: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05029095709323883
    2. ' if' → logprob: -4.050291061401367
    3. ')' → logprob: -4.550291061401367
    4. 'if' → logprob: -4.925291061401367
    5. 'for' (adapté à ' for') → logprob: -5.050291061401367
    6. ' for' → logprob: -5.300291061401367
    7. '       ' → logprob: -6.675291061401367
    8. '<|end|>' → logprob: -7.925291061401367
    9. '    ' → logprob: -9.050291061401367
    10. ' ' → logprob: -9.300291061401367

Token 546: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016065455973148346
    2. ' k' → logprob: -4.14106559753418
    3. '   ' → logprob: -11.76606559753418
    4. '_k' → logprob: -12.01606559753418
    5. 'step' → logprob: -12.89106559753418
    6. ' ' → logprob: -13.01606559753418
    7. 'x' → logprob: -13.39106559753418
    8. '	k' → logprob: -13.51606559753418
    9. '_' → logprob: -13.64106559753418
    10. 'l' → logprob: -13.76606559753418

Token 547: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07895466685295105
    2. 'in' → logprob: -2.5789546966552734
    3. ' ' → logprob: -10.453954696655273
    4. 'k' → logprob: -11.828954696655273
    5. '	in' → logprob: -12.078954696655273
    6. 'range' → logprob: -12.578954696655273
    7. ')' → logprob: -12.703954696655273
    8. '   ' → logprob: -13.203954696655273
    9. ',' → logprob: -13.203954696655273
    10. '_in' → logprob: -13.328954696655273

Token 548: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02325211651623249
    2. ' range' → logprob: -3.773252010345459
    3. '(range' → logprob: -12.148252487182617
    4. 'i' → logprob: -15.023252487182617
    5. '	range' → logprob: -15.148252487182617
    6. 'list' → logprob: -15.398252487182617
    7. ' ' → logprob: -16.148252487182617
    8. 'filter' → logprob: -16.398252487182617
    9. 're' → logprob: -16.523252487182617
    10. '   ' → logprob: -16.648252487182617

Token 549: '(j' (ID: 4997)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006434691604226828
    2. '(' → logprob: -5.506434917449951
    3. 'i' → logprob: -6.256434917449951
    4. '(j' → logprob: -8.131434440612793
    5. '1' → logprob: -10.256434440612793
    6. '   ' → logprob: -10.631434440612793
    7. '(max' → logprob: -10.631434440612793
    8. ' (' → logprob: -10.756434440612793
    9. ' i' → logprob: -11.256434440612793
    10. '(l' → logprob: -11.881434440612793

Token 550: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5623344779014587
    2. ',i' → logprob: -1.5623345375061035
    3. '+' → logprob: -2.3123345375061035
    4. 'i' → logprob: -3.1873345375061035
    5. '):' → logprob: -3.5623345375061035
    6. '):
' → logprob: -4.3123345375061035
    7. '   ' → logprob: -4.8123345375061035
    8. '[i' → logprob: -5.1873345375061035
    9. ' +' → logprob: -5.4373345375061035
    10. '-' → logprob: -5.5623345375061035

Token 551: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004274038597941399
    2. 'i' → logprob: -5.629273891448975
    3. ' ' → logprob: -8.629274368286133
    4. '0' → logprob: -8.629274368286133
    5. '2' → logprob: -9.504274368286133
    6. '-' → logprob: -10.004274368286133
    7. ' i' → logprob: -10.379274368286133
    8. '   ' → logprob: -10.504274368286133
    9. '(i' → logprob: -10.629274368286133
    10. ')' → logprob: -10.629274368286133

Token 552: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28494876623153687
    2. '):
' → logprob: -1.7849488258361816
    3. ',' → logprob: -2.5349488258361816
    4. '   ' → logprob: -8.909948348999023
    5. '<|end|>' → logprob: -9.159948348999023
    6. ':' → logprob: -9.409948348999023
    7. ')' → logprob: -9.534948348999023
    8. ',j' → logprob: -9.909948348999023
    9. ',k' → logprob: -10.034948348999023
    10. ' ,' → logprob: -10.034948348999023

Token 553: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01971808448433876
    2. 'j' → logprob: -4.019718170166016
    3. ' N' → logprob: -6.894718170166016
    4. 'i' → logprob: -7.644718170166016
    5. 'k' → logprob: -10.894718170166016
    6. ' j' → logprob: -11.019718170166016
    7. '   ' → logprob: -12.269718170166016
    8. '(N' → logprob: -12.269718170166016
    9. '	N' → logprob: -12.394718170166016
    10. ' ' → logprob: -12.394718170166016

Token 554: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000623918604105711
    2. ' +' → logprob: -7.50062370300293
    3. '):' → logprob: -10.25062370300293
    4. '):
' → logprob: -10.50062370300293
    5. '   ' → logprob: -12.87562370300293
    6. '-' → logprob: -13.62562370300293
    7. '+
' → logprob: -13.87562370300293
    8. ')' → logprob: -13.87562370300293
    9. ')+' → logprob: -14.87562370300293
    10. '[' → logprob: -15.12562370300293

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07892283797264099
    2. '2' → logprob: -2.578922748565674
    3. ' ' → logprob: -11.328923225402832
    4. '3' → logprob: -12.328923225402832
    5. '+' → logprob: -12.453923225402832
    6. '```' → logprob: -12.703923225402832
    7. '
' → logprob: -13.141423225402832
    8. ')' → logprob: -13.578923225402832
    9. '   ' → logprob: -13.766423225402832
    10. '``' → logprob: -14.453923225402832

Token 556: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014412997290492058
    2. '):
' → logprob: -4.389412879943848
    3. ':' → logprob: -6.639412879943848
    4. '   ' → logprob: -7.889412879943848
    5. ')' → logprob: -8.639412879943848
    6. '<|end|>' → logprob: -11.389412879943848
    7. ',' → logprob: -11.514412879943848
    8. '       ' → logprob: -12.389412879943848
    9. ']:' → logprob: -13.014412879943848
    10. '):

' → logprob: -13.264412879943848

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011768875643610954
    2. '<|end|>' → logprob: -4.511768817901611
    3. '   ' → logprob: -8.88676929473877
    4. ')' → logprob: -9.38676929473877
    5. '    ' → logprob: -9.76176929473877
    6. '        ' → logprob: -10.13676929473877
    7. ',' → logprob: -10.13676929473877
    8. ' ' → logprob: -10.26176929473877
    9. ':' → logprob: -10.38676929473877
    10. ' if' → logprob: -10.51176929473877

Token 558: ' l' (ID: 305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48212361335754395
    2. ' l' → logprob: -1.357123613357544
    3. 'l' (adapté à ' l') → logprob: -2.232123613357544
    4. ' if' → logprob: -4.982123374938965
    5. ' pass' → logprob: -6.232123374938965
    6. '   ' → logprob: -6.232123374938965
    7. 'if' → logprob: -6.607123374938965
    8. 'r' → logprob: -7.232123374938965
    9. '        ' → logprob: -7.357123374938965
    10. 'step' → logprob: -7.357123374938965

Token 559: ' +=' (ID: 2757)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12759798765182495
    2. ' +=' → logprob: -2.2525980472564697
    3. '+=' → logprob: -4.627597808837891
    4. ' ,' → logprob: -5.502597808837891
    5. ',r' → logprob: -8.00259780883789
    6. ' =' → logprob: -9.12759780883789
    7. '   ' → logprob: -9.25259780883789
    8. '=' → logprob: -9.50259780883789
    9. '_,' → logprob: -10.25259780883789
    10. '       ' → logprob: -10.75259780883789

Token 560: ' step' (ID: 5983)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.06512296199798584
    2. 'step' → logprob: -3.4401230812072754
    3. 'A' → logprob: -3.5651230812072754
    4. '(' → logprob: -6.940123081207275
    5. ' Al' → logprob: -7.440123081207275
    6. 'dp' → logprob: -7.940123081207275
    7. 'Ar' → logprob: -8.565122604370117
    8. '(A' → logprob: -8.815122604370117
    9. ' step' → logprob: -8.815122604370117
    10. '(step' → logprob: -9.690122604370117

Token 561: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0014074939535930753
    2. 'k' → logprob: -6.751407623291016
    3. ' (' → logprob: -8.751407623291016
    4. '(' → logprob: -9.626407623291016
    5. '(i' → logprob: -11.751407623291016
    6. '(j' → logprob: -13.376407623291016
    7. ' k' → logprob: -13.751407623291016
    8. '(
' → logprob: -14.001407623291016
    9. '(lambda' → logprob: -14.501407623291016
    10. '((' → logprob: -15.376407623291016

Token 562: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.00012296605564188212
    2. ' )[' → logprob: -10.125123023986816
    3. '[' → logprob: -10.250123023986816
    4. ')' → logprob: -10.250123023986816
    5. '   ' → logprob: -12.500123023986816
    6. '][' → logprob: -13.625123023986816
    7. '
' → logprob: -14.000123023986816
    8. '())[' → logprob: -14.250123023986816
    9. ' ' → logprob: -14.375123023986816
    10. '-' → logprob: -14.375123023986816

Token 563: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.656383680412546e-05
    2. '1' → logprob: -10.125046730041504
    3. ' ' → logprob: -12.250046730041504
    4. '   ' → logprob: -15.187546730041504
    5. '[' → logprob: -15.687546730041504
    6. '2' → logprob: -15.750046730041504
    7. '-' → logprob: -16.250045776367188
    8. '```' → logprob: -16.625045776367188
    9. '...' → logprob: -16.812545776367188
    10. '۰' → logprob: -17.125045776367188

Token 564: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014300662092864513
    2. ']' → logprob: -5.01430082321167
    3. '<|end|>' → logprob: -5.51430082321167
    4. ' )' → logprob: -6.26430082321167
    5. '+' → logprob: -7.51430082321167
    6. ' +' → logprob: -7.88930082321167
    7. ')+' → logprob: -8.014300346374512
    8. ')
' → logprob: -8.639300346374512
    9. ']+' → logprob: -10.139300346374512
    10. ' ]' → logprob: -10.264300346374512

Token 565: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031917449086904526
    2. ' r' → logprob: -4.156917572021484
    3. 'r' → logprob: -4.906917572021484
    4. '<|end|>' → logprob: -5.156917572021484
    5. ' ' → logprob: -6.656917572021484
    6. '   ' → logprob: -7.656917572021484
    7. ' l' → logprob: -7.906917572021484
    8. '	r' → logprob: -9.281917572021484
    9. ')' → logprob: -9.406917572021484
    10. ',r' → logprob: -9.531917572021484

Token 566: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.07016894966363907
    2. 'r' (adapté à ' r') → logprob: -2.820168972015381
    3. '       ' → logprob: -4.820168972015381
    4. '   ' → logprob: -10.570168495178223
    5. ')' → logprob: -11.070168495178223
    6. ' ' → logprob: -11.570168495178223
    7. '        ' → logprob: -11.570168495178223
    8. '    ' → logprob: -11.695168495178223
    9. ' ' → logprob: -11.820168495178223
    10. '           ' → logprob: -12.195168495178223

Token 567: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3139086663722992
    2. '+=' → logprob: -1.3139086961746216
    3. '+' → logprob: -7.438908576965332
    4. ' +' → logprob: -10.313908576965332
    5. ']+=' → logprob: -10.813908576965332
    6. '+='' → logprob: -13.063908576965332
    7. '=' → logprob: -13.813908576965332
    8. '+=(' → logprob: -14.188908576965332
    9. '+="' → logprob: -14.438908576965332
    10. '[' → logprob: -15.313908576965332

Token 568: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.04858918860554695
    2. ' step' → logprob: -3.0485892295837402
    3. '	step' → logprob: -14.173588752746582
    4. '   ' → logprob: -15.173588752746582
    5. '(step' → logprob: -15.173588752746582
    6. ' ' → logprob: -15.423588752746582
    7. '1' → logprob: -16.2985897064209
    8. '       ' → logprob: -17.0485897064209
    9. '  ' → logprob: -17.1735897064209
    10. '-step' → logprob: -17.1735897064209

Token 569: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -13.875000953674316
    3. 'k' → logprob: -18.750001907348633
    4. '```' → logprob: -19.625001907348633
    5. ' (' → logprob: -19.750001907348633
    6. '1' → logprob: -20.375001907348633
    7. '()(' → logprob: -20.625001907348633
    8. '()' → logprob: -20.625001907348633
    9. '(j' → logprob: -21.750001907348633
    10. '(key' → logprob: -22.750001907348633

Token 570: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.0006112866685725749
    2. '[' → logprob: -7.625611305236816
    3. '][' → logprob: -9.625611305236816
    4. ')' → logprob: -11.125611305236816
    5. '1' → logprob: -11.500611305236816
    6. ' )[' → logprob: -11.625611305236816
    7. '-' → logprob: -12.125611305236816
    8. ')][' → logprob: -12.375611305236816
    9. '())[' → logprob: -12.375611305236816
    10. '()[' → logprob: -12.625611305236816

Token 571: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.368984107510187e-05
    2. '0' → logprob: -10.375033378601074
    3. '```' → logprob: -14.125033378601074
    4. ' ' → logprob: -14.375033378601074
    5. '[' → logprob: -14.812533378601074
    6. '
' → logprob: -15.437533378601074
    7. '   ' → logprob: -15.562533378601074
    8. '-' → logprob: -16.06253433227539
    9. '(' → logprob: -16.62503433227539
    10. '１' → logprob: -17.06253433227539

Token 572: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027025199960917234
    2. '       ' → logprob: -6.377702713012695
    3. ')
' → logprob: -7.127702713012695
    4. '<|end|>' → logprob: -9.002702713012695
    5. '   ' → logprob: -9.752702713012695
    6. ' )' → logprob: -12.502702713012695
    7. ']' → logprob: -13.252702713012695
    8. '))' → logprob: -13.752702713012695
    9. ')return' → logprob: -13.752702713012695
    10. '<|end|>' → logprob: -13.877702713012695

Token 573: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.167361855506897
    2. '       ' → logprob: -1.167361855506897
    3. '   ' → logprob: -1.292361855506897
    4. '<|end|>' → logprob: -2.4173617362976074
    5. '    ' → logprob: -5.792361736297607
    6. '[' → logprob: -6.042361736297607
    7. '           ' → logprob: -7.042361736297607
    8. ' if' → logprob: -7.167361736297607
    9. '        ' → logprob: -7.167361736297607
    10. ' ' → logprob: -7.292361736297607

Token 574: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13539741933345795
    2. '   ' → logprob: -3.135397434234619
    3. '<|end|>' → logprob: -3.385397434234619
    4. ')' → logprob: -3.510397434234619
    5. 'dp' (adapté à ' dp') → logprob: -4.635397434234619
    6. ' dp' → logprob: -6.135397434234619
    7. ' if' → logprob: -6.385397434234619
    8. ' ' → logprob: -6.760397434234619
    9. '
' → logprob: -6.885397434234619
    10. 'if' → logprob: -7.135397434234619

Token 575: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.895480277715251e-06
    2. '[j' → logprob: -12.125008583068848
    3. '[' → logprob: -13.250008583068848
    4. 'i' → logprob: -13.750008583068848
    5. '[k' → logprob: -15.750008583068848
    6. '<|end|>' → logprob: -16.125009536743164
    7. ' [' → logprob: -16.500009536743164
    8. ' i' → logprob: -16.750009536743164
    9. '[min' → logprob: -16.750009536743164
    10. '][' → logprob: -17.250009536743164

Token 576: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00047071068547666073
    2. ']' → logprob: -7.8754706382751465
    3. '[j' → logprob: -9.750471115112305
    4. ' ][' → logprob: -11.000471115112305
    5. '[' → logprob: -11.750471115112305
    6. '   ' → logprob: -13.125471115112305
    7. '[k' → logprob: -13.625471115112305
    8. '[i' → logprob: -14.625471115112305
    9. '][_' → logprob: -14.625471115112305
    10. '"][' → logprob: -14.750471115112305

Token 577: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004881961736828089
    2. 'j' → logprob: -5.379881858825684
    3. 'i' → logprob: -8.254881858825684
    4. 'N' → logprob: -14.629881858825684
    5. ']' → logprob: -15.004881858825684
    6. '   ' → logprob: -15.129881858825684
    7. ' k' → logprob: -15.629881858825684
    8. 'r' → logprob: -15.754881858825684
    9. '
' → logprob: -16.2548828125
    10. '0' → logprob: -16.2548828125

Token 578: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007531665614806116
    2. ' ]' → logprob: -7.625753402709961
    3. ']=' → logprob: -8.500753402709961
    4. ']+=' → logprob: -10.000753402709961
    5. ']+' → logprob: -12.375753402709961
    6. '=' → logprob: -12.625753402709961
    7. ' =' → logprob: -12.875753402709961
    8. '[' → logprob: -13.000753402709961
    9. '],' → logprob: -14.000753402709961
    10. '+' → logprob: -14.375753402709961

Token 579: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688042759895325
    2. '=' → logprob: -1.1368803977966309
    3. '=min' → logprob: -11.636880874633789
    4. '+=' → logprob: -16.01188087463379
    5. 'min' → logprob: -16.38688087463379
    6. ' ' → logprob: -16.51188087463379
    7. ')' → logprob: -16.76188087463379
    8. ' +=' → logprob: -16.76188087463379
    9. '[' → logprob: -16.88688087463379
    10. ' ' → logprob: -17.26188087463379

Token 580: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0009581510093994439
    2. ' min' → logprob: -7.00095796585083
    3. 'dp' → logprob: -10.250958442687988
    4. 'l' → logprob: -12.250958442687988
    5. 'float' → logprob: -13.250958442687988
    6. 'max' → logprob: -13.375958442687988
    7. '   ' → logprob: -13.625958442687988
    8. '	min' → logprob: -13.750958442687988
    9. '(min' → logprob: -15.375958442687988
    10. '0' → logprob: -15.375958442687988

Token 581: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -6.957014556974173e-05
    2. '(' → logprob: -9.750069618225098
    3. 'dp' → logprob: -11.875069618225098
    4. '(
' → logprob: -12.750069618225098
    5. '(min' → logprob: -14.875069618225098
    6. '(float' → logprob: -15.250069618225098
    7. '(r' → logprob: -15.375069618225098
    8. '(d' → logprob: -16.12506866455078
    9. '((' → logprob: -16.37506866455078
    10. ' (' → logprob: -16.62506866455078

Token 582: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5451681974809617e-05
    2. '(j' → logprob: -11.500015258789062
    3. 'j' → logprob: -12.375015258789062
    4. '[' → logprob: -14.875015258789062
    5. '[i' → logprob: -15.250015258789062
    6. ' [' → logprob: -16.125015258789062
    7. '```' → logprob: -16.250015258789062
    8. '[k' → logprob: -16.375015258789062
    9. '   ' → logprob: -16.875015258789062
    10. '][' → logprob: -17.250015258789062

Token 583: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001398929744027555
    2. '[j' → logprob: -9.500140190124512
    3. ']' → logprob: -10.500140190124512
    4. ' ][' → logprob: -11.000140190124512
    5. '[k' → logprob: -11.750140190124512
    6. '[' → logprob: -12.250140190124512
    7. '   ' → logprob: -13.000140190124512
    8. ']][' → logprob: -13.875140190124512
    9. '-' → logprob: -14.125140190124512
    10. '])' → logprob: -14.375140190124512

Token 584: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008243953343480825
    2. 'j' → logprob: -7.125824451446533
    3. 'i' → logprob: -11.750823974609375
    4. '[k' → logprob: -12.500823974609375
    5. ' k' → logprob: -13.375823974609375
    6. '   ' → logprob: -13.750823974609375
    7. 'N' → logprob: -14.000823974609375
    8. '[' → logprob: -14.250823974609375
    9. '[j' → logprob: -14.625823974609375
    10. ']' → logprob: -14.875823974609375

Token 585: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.008040360175073147
    2. ']' → logprob: -5.008040428161621
    3. ',' → logprob: -7.383040428161621
    4. ']+' → logprob: -7.508040428161621
    5. 'r' → logprob: -9.383040428161621
    6. '+' → logprob: -10.508040428161621
    7. ' ],' → logprob: -10.883040428161621
    8. '],
' → logprob: -11.133040428161621
    9. '   ' → logprob: -13.133040428161621
    10. 'l' → logprob: -13.758040428161621

Token 586: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00906984694302082
    2. ' dp' → logprob: -4.759069919586182
    3. 'r' → logprob: -8.509069442749023
    4. 'l' → logprob: -9.009069442749023
    5. '   ' → logprob: -10.259069442749023
    6. 'max' → logprob: -10.509069442749023
    7. 'min' → logprob: -11.259069442749023
    8. '           ' → logprob: -11.509069442749023
    9. '       ' → logprob: -11.759069442749023
    10. 'd' → logprob: -12.009069442749023

Token 587: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.723202645778656
    2. '[j' → logprob: -0.723202645778656
    3. 'j' → logprob: -4.223202705383301
    4. 'i' → logprob: -4.723202705383301
    5. ' [' → logprob: -6.098202705383301
    6. ' j' → logprob: -6.848202705383301
    7. '][' → logprob: -6.973202705383301
    8. ' i' → logprob: -7.098202705383301
    9. '[' → logprob: -7.598202705383301
    10. '   ' → logprob: -8.3482027053833

Token 588: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002848982810974121
    2. '[j' → logprob: -6.002849102020264
    3. '[i' → logprob: -8.252848625183105
    4. ' ][' → logprob: -10.002848625183105
    5. 'j' → logprob: -10.752848625183105
    6. ']' → logprob: -11.002848625183105
    7. '[' → logprob: -11.627848625183105
    8. '   ' → logprob: -11.877848625183105
    9. '])' → logprob: -12.877848625183105
    10. 'i' → logprob: -13.252848625183105

Token 589: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006901501677930355
    2. 'i' → logprob: -5.006901264190674
    3. 'k' → logprob: -8.631901741027832
    4. ' j' → logprob: -12.506901741027832
    5. '   ' → logprob: -14.131901741027832
    6. ']' → logprob: -14.131901741027832
    7. '
' → logprob: -14.381901741027832
    8. 'l' → logprob: -14.756901741027832
    9. ' ' → logprob: -15.756901741027832
    10. ')' → logprob: -15.756901741027832

Token 590: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00103686039801687
    2. ']+' → logprob: -6.876036643981934
    3. ' ]' → logprob: -13.126036643981934
    4. ']]' → logprob: -14.501036643981934
    5. '[' → logprob: -14.876036643981934
    6. '']' → logprob: -15.376036643981934
    7. '])' → logprob: -15.501036643981934
    8. '[j' → logprob: -15.626036643981934
    9. ']
' → logprob: -15.626036643981934
    10. '][' → logprob: -16.25103759765625

Token 591: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1366955190896988
    2. '+' → logprob: -2.261695623397827
    3. '+r' → logprob: -3.761695623397827
    4. '+l' → logprob: -8.136695861816406
    5. ')' → logprob: -10.761695861816406
    6. '       ' → logprob: -12.011695861816406
    7. ' +
' → logprob: -12.761695861816406
    8. '   ' → logprob: -12.886695861816406
    9. '+
' → logprob: -13.011695861816406
    10. ')+' → logprob: -13.136695861816406

Token 592: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.035658854991197586
    2. ' l' → logprob: -3.535658836364746
    3. 'A' → logprob: -6.160658836364746
    4. 'max' → logprob: -6.285658836364746
    5. 'r' → logprob: -7.160658836364746
    6. ' max' → logprob: -7.285658836364746
    7. ' A' → logprob: -8.035658836364746
    8. ' r' → logprob: -10.160658836364746
    9. 'min' → logprob: -11.285658836364746
    10. '(' → logprob: -11.535658836364746

Token 593: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.46439677476882935
    2. '+' → logprob: -1.4643967151641846
    3. '+r' → logprob: -1.9643967151641846
    4. ')' → logprob: -11.964396476745605
    5. '+
' → logprob: -12.214396476745605
    6. ' +
' → logprob: -12.464396476745605
    7. '+l' → logprob: -12.964396476745605
    8. '       ' → logprob: -13.464396476745605
    9. '+b' → logprob: -13.964396476745605
    10. '+k' → logprob: -13.964396476745605

Token 594: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0013305948814377189
    2. ' r' → logprob: -6.626330375671387
    3. 'A' → logprob: -13.876330375671387
    4. 'dp' → logprob: -14.251330375671387
    5. '
' → logprob: -14.626330375671387
    6. '   ' → logprob: -14.876330375671387
    7. '(' → logprob: -15.126330375671387
    8. ')' → logprob: -15.501330375671387
    9. '```' → logprob: -15.501330375671387
    10. '+' → logprob: -15.626330375671387

Token 595: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003047186473850161
    2. '))' → logprob: -8.50030517578125
    3. ')
' → logprob: -9.37530517578125
    4. ' )' → logprob: -12.25030517578125
    5. '       ' → logprob: -12.37530517578125
    6. ')))' → logprob: -12.87530517578125
    7. '+' → logprob: -14.00030517578125
    8. '')' → logprob: -14.00030517578125
    9. '   ' → logprob: -14.12530517578125
    10. ')`' → logprob: -14.37530517578125

Token 596: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004399497993290424
    2. '<|end|>' → logprob: -6.504399299621582
    3. ':' → logprob: -7.254399299621582
    4. '[' → logprob: -7.254399299621582
    5. '   ' → logprob: -7.629399299621582
    6. ']' → logprob: -8.004399299621582
    7. '```' → logprob: -8.129399299621582
    8. ' ' → logprob: -10.504399299621582
    9. '#' → logprob: -10.504399299621582
    10. '):' → logprob: -10.629399299621582

Token 597: ' Calcul' (ID: 57243)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 598: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002664481056854129
    2. 'for' → logprob: -6.252664566040039
    3. 'e' → logprob: -7.877664566040039
    4. '```' → logprob: -9.752664566040039
    5. ' print' → logprob: -9.877664566040039
    6. '#' → logprob: -10.002664566040039
    7. 'import' → logprob: -10.127664566040039
    8. '[' → logprob: -11.127664566040039
    9. 'sys' → logprob: -11.127664566040039
    10. 'if' → logprob: -11.252664566040039

Token 599: ' avec' (ID: 3937)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.021713167428970337
    2. 'result' → logprob: -3.8967132568359375
    3. 'res' → logprob: -7.8967132568359375
    4. 'min' → logprob: -8.146713256835938
    5. 'ans' → logprob: -8.271713256835938
    6. 'answer' → logprob: -8.521713256835938
    7. ' print' → logprob: -11.771713256835938
    8. '```' → logprob: -11.771713256835938
    9. 'import' → logprob: -12.021713256835938
    10. 'best' → logprob: -12.271713256835938

Token 600: ' map' (ID: 4014)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4894614517688751
    2. 'min' → logprob: -1.3644614219665527
    3. 'dp' → logprob: -2.4894614219665527
    4. 'max' → logprob: -3.1144614219665527
    5. 'reduce' → logprob: -5.864461421966553
    6. ' print' → logprob: -7.864461421966553
    7. 'result' → logprob: -8.239461898803711
    8. 'float' → logprob: -8.739461898803711
    9. ' dp' → logprob: -9.239461898803711
    10. ' min' → logprob: -9.239461898803711

Token 601: '/min' (ID: 62483)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6088179349899292
    2. 'print' → logprob: -0.8588179349899292
    3. 'res' → logprob: -4.108818054199219
    4. 'dp' → logprob: -4.983818054199219
    5. 'final' → logprob: -6.108818054199219
    6. 'for' → logprob: -6.358818054199219
    7. 'list' → logprob: -6.483818054199219
    8. 'import' → logprob: -6.983818054199219
    9. 'min' → logprob: -7.733818054199219
    10. ' print' → logprob: -7.983818054199219

Token 602: '/re' (ID: 18868)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.40633127093315125
    2. 'result' → logprob: -1.2813313007354736
    3. 'res' → logprob: -3.2813313007354736
    4. 'ans' → logprob: -4.5313310623168945
    5. 'answer' → logprob: -5.0313310623168945
    6. 'import' → logprob: -7.9063310623168945
    7. 'min' → logprob: -8.406331062316895
    8. '```' → logprob: -8.906331062316895
    9. '
' → logprob: -9.031331062316895
    10. 'r' → logprob: -9.531331062316895

Token 603: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -2.165027217415627e-05
    2. 'd' → logprob: -11.375021934509277
    3. 'du' → logprob: -12.500021934509277
    4. 'duction' → logprob: -13.375021934509277
    5. 'duc' → logprob: -13.750021934509277
    6. 'duced' → logprob: -14.000021934509277
    7. 'reduce' → logprob: -14.125021934509277
    8. 'duct' → logprob: -14.250021934509277
    9. 'ducer' → logprob: -14.375021934509277
    10. 'dux' → logprob: -15.750021934509277

Token 604: ' pour' (ID: 1930)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5728924870491028
    2. 'res' → logprob: -1.572892427444458
    3. 'print' → logprob: -1.697892427444458
    4. 'ans' → logprob: -3.822892427444458
    5. 'final' → logprob: -4.822892665863037
    6. 'min' → logprob: -5.072892665863037
    7. 'import' → logprob: -5.947892665863037
    8. 'answer' → logprob: -6.572892665863037
    9. 'dp' → logprob: -6.822892665863037
    10. 'sys' → logprob: -6.947892665863037

Token 605: ' sur' (ID: 1512)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038231853395700455
    2. 'result' → logprob: -3.41323184967041
    3. 'min' → logprob: -6.28823184967041
    4. 'dp' → logprob: -6.66323184967041
    5. ' print' → logprob: -7.41323184967041
    6. 'final' → logprob: -8.53823184967041
    7. 'res' → logprob: -8.91323184967041
    8. 'rés' → logprob: -9.16323184967041
    9. 'sys' → logprob: -9.53823184967041
    10. ' result' → logprob: -10.03823184967041

Token 606: '-com' (ID: 18251)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09710580110549927
    2. 'max' → logprob: -2.8471057415008545
    3. 'range' → logprob: -4.222105979919434
    4. ' min' → logprob: -4.847105979919434
    5. ' max' → logprob: -6.097105979919434
    6. 'v' → logprob: -6.097105979919434
    7. 'sum' → logprob: -7.097105979919434
    8. 'print' → logprob: -7.347105979919434
    9. 'final' → logprob: -7.472105979919434
    10. ' range' → logprob: -7.722105979919434

Token 607: 'plex' (ID: 12081)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.138019323348999
    2. 'val' → logprob: -2.388019323348999
    3. 'v' → logprob: -2.763019323348999
    4. 'ver' → logprob: -3.263019323348999
    5. 'ever' → logprob: -3.263019323348999
    6. 'umer' → logprob: -3.513019323348999
    7. 'm' → logprob: -3.763019323348999
    8. 'st' → logprob: -3.888019323348999
    9. 'pl' → logprob: -3.888019323348999
    10. 'vr' → logprob: -4.013019561767578

Token 608: 'ifier' (ID: 4550)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9805412292480469
    2. 'result' → logprob: -1.2305412292480469
    3. 'dp' → logprob: -2.230541229248047
    4. 'res' → logprob: -2.855541229248047
    5. 'ans' → logprob: -3.105541229248047
    6. 'min' → logprob: -3.605541229248047
    7. 'sys' → logprob: -3.855541229248047
    8. 'final' → logprob: -4.230541229248047
    9. 'import' → logprob: -4.605541229248047
    10. ' result' → logprob: -4.730541229248047

Token 609: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7421113848686218
    2. 'result' → logprob: -0.7421113848686218
    3. 'res' → logprob: -3.4921114444732666
    4. 'ans' → logprob: -5.4921112060546875
    5. 'final' → logprob: -5.8671112060546875
    6. 'answer' → logprob: -6.2421112060546875
    7. 'sys' → logprob: -6.2421112060546875
    8. 'import' → logprob: -6.4921112060546875
    9. 'dp' → logprob: -6.6171112060546875
    10. 'min' → logprob: -7.3671112060546875

Token 610: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4061264395713806
    2. 'result' → logprob: -1.1561264991760254
    3. 'res' → logprob: -4.656126499176025
    4. 'sys' → logprob: -5.906126499176025
    5. 'ans' → logprob: -6.031126499176025
    6. 'import' → logprob: -7.031126499176025
    7. 'dp' → logprob: -7.031126499176025
    8. 'answer' → logprob: -7.031126499176025
    9. 'min' → logprob: -7.156126499176025
    10. ' print' → logprob: -7.781126499176025

Token 611: '(re' (ID: 8178)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.007295670453459024
    2. '(re' → logprob: -5.007295608520508
    3. '(' → logprob: -8.007295608520508
    4. 'min' → logprob: -8.382295608520508
    5. '(list' → logprob: -11.632295608520508
    6. 'reduce' → logprob: -13.007295608520508
    7. '(map' → logprob: -13.507295608520508
    8. '(max' → logprob: -13.757295608520508
    9. '(f' → logprob: -13.882295608520508
    10. '(int' → logprob: -14.132295608520508

Token 612: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.0002647927321959287
    2. 'd' → logprob: -8.250265121459961
    3. 'du' → logprob: -12.750265121459961
    4. 'duc' → logprob: -15.375265121459961
    5. '
' → logprob: -16.25026512145996
    6. '(' → logprob: -16.50026512145996
    7. '[' → logprob: -17.00026512145996
    8. 'duced' → logprob: -17.25026512145996
    9. '``' → logprob: -17.50026512145996
    10. 'dice' → logprob: -18.00026512145996

Token 613: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.003907418809831142
    2. '(lambda' → logprob: -5.753907203674316
    3. 'min' → logprob: -7.503907203674316
    4. '(' → logprob: -8.753907203674316
    5. '(
' → logprob: -11.628907203674316
    6. '(add' → logprob: -12.628907203674316
    7. ' (' → logprob: -12.753907203674316
    8. '```' → logprob: -13.003907203674316
    9. ' min' → logprob: -13.753907203674316
    10. '   ' → logprob: -13.878907203674316

Token 614: ',' (ID: 11)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.3731488287448883
    2. '(map' → logprob: -1.873148798942566
    3. ',' → logprob: -2.2481489181518555
    4. '(' → logprob: -3.7481489181518555
    5. '([' → logprob: -4.7481489181518555
    6. '(
' → logprob: -4.8731489181518555
    7. '(range' → logprob: -5.6231489181518555
    8. ',map' → logprob: -5.6231489181518555
    9. 'dp' → logprob: -5.9981489181518555
    10. 'map' → logprob: -7.2481489181518555

Token 615: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.059597525745630264
    2. 'dp' → logprob: -2.9345974922180176
    3. 'flatten' → logprob: -6.559597492218018
    4. '(map' → logprob: -6.809597492218018
    5. '(dp' → logprob: -7.059597492218018
    6. ' map' → logprob: -7.684597492218018
    7. '[' → logprob: -7.809597492218018
    8. 'min' → logprob: -8.559597969055176
    9. '[min' → logprob: -9.559597969055176
    10. ' dp' → logprob: -9.934597969055176

Token 616: '(item' (ID: 10016)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0010025626979768276
    2. '(min' → logprob: -7.251002788543701
    3. '(' → logprob: -8.376002311706543
    4. 'lambda' → logprob: -10.876002311706543
    5. '(int' → logprob: -11.001002311706543
    6. '(
' → logprob: -11.126002311706543
    7. '(float' → logprob: -12.251002311706543
    8. '(dp' → logprob: -12.876002311706543
    9. 'min' → logprob: -13.626002311706543
    10. '(str' → logprob: -14.251002311706543

Token 617: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -1.9361264946837764e-07
    2. 'get' → logprob: -15.625
    3. 'finder' → logprob: -17.5
    4. 'setter' → logprob: -19.0
    5. 'item' → logprob: -19.125
    6. 'Getter' → logprob: -21.375
    7. 'caller' → logprob: -21.875
    8. 'got' → logprob: -21.875
    9. '
' → logprob: -21.875
    10. 'operator' → logprob: -21.875

Token 618: '(N' (ID: 10564)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5208879113197327
    2. '(' → logprob: -1.520887851715088
    3. '(-' → logprob: -2.270887851715088
    4. '1' → logprob: -3.020887851715088
    5. '-' → logprob: -3.895887851715088
    6. '(lambda' → logprob: -4.770887851715088
    7. 'lambda' → logprob: -5.395887851715088
    8. '2' → logprob: -6.520887851715088
    9. '(len' → logprob: -8.270888328552246
    10. 'len' → logprob: -9.020888328552246

Token 619: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.46926483511924744
    2. ',' → logprob: -1.4692648649215698
    3. ',N' → logprob: -2.3442647457122803
    4. ',[' → logprob: -3.4692647457122803
    5. ')(' → logprob: -5.219264984130859
    6. '),(' → logprob: -5.469264984130859
    7. ')[' → logprob: -6.594264984130859
    8. ',-' → logprob: -6.969264984130859
    9. '-' → logprob: -7.219264984130859
    10. '[' → logprob: -7.469264984130859

Token 620: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.718606891809031e-05
    2. ' dp' → logprob: -9.750066757202148
    3. '(dp' → logprob: -11.750066757202148
    4. 'range' → logprob: -14.125066757202148
    5. '[' → logprob: -15.875066757202148
    6. '   ' → logprob: -17.25006675720215
    7. '	dp' → logprob: -18.37506675720215
    8. 'enumer' → logprob: -18.75006675720215
    9. ' range' → logprob: -19.00006675720215
    10. 'lambda' → logprob: -19.50006675720215

Token 621: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.28179240226745605
    2. '))' → logprob: -1.406792402267456
    3. ')' → logprob: -8.406792640686035
    4. '))))' → logprob: -8.781792640686035
    5. '[' → logprob: -8.906792640686035
    6. '),' → logprob: -10.031792640686035
    7. ')))
' → logprob: -11.406792640686035
    8. ' ' → logprob: -11.406792640686035
    9. ')[' → logprob: -11.656792640686035
    10. '(' → logprob: -11.906792640686035


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 619
Tokens correctement prédits (1ère position, stricte): 248
Tokens correctement prédits (1ère position, avec adaptation): 251
Tokens correctement prédits (top 10): 487
Précision stricte (1ère position): 40.06%
Précision adaptée (1ère position): 40.55%
Précision (top 10): 78.68%
================================================================================
