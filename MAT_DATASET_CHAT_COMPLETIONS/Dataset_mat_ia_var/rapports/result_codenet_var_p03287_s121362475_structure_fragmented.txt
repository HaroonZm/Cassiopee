================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return input()

def parse_n_m(input_line):
    n_str, m_str = input_line.split()
    return int(n_str), int(m_str)

def parse_a(input_line):
    return list(map(int, input_line.split()))

def compute_prefix_sums(a, n, m):
    a_cs = [0] * (n + 1)
    for i in range(n):
        a_cs[i + 1] = (a_cs[i] + a[i]) % m
    return a_cs

def initialize_defaultdict():
    from collections import defaultdict
    return defaultdict(int)

def count_prefix_sums(a_cs, n, d):
    for i in range(1, n + 1):
        increment_dict(d, a_cs[i])

def increment_dict(d, key):
    d[key] += 1

def calculate_pairs(d):
    ans = 0
    for k, v in d.items():
        ans += part_contribution(d, k, v)
    return ans

def part_contribution(d, k, v):
    if k == 0:
        return v * (v + 1) // 2
    else:
        if d[k] > 1:
            return (v - 1) * v // 2
    return 0

def print_result(ans):
    print(ans)

def main():
    input_line_1 = read_input()
    n, m = parse_n_m(input_line_1)
    input_line_2 = read_input()
    a = parse_a(input_line_2)
    a_cs = compute_prefix_sums(a, n, m)
    d = initialize_defaultdict()
    count_prefix_sums(a_cs, n, d)
    ans = calculate_pairs(d)
    print_result(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.988785445690155
    2. '\' → logprob: -1.2387855052947998
    3. '\n' → logprob: -1.3637855052947998
    4. '   ' → logprob: -3.1137855052948
    5. '    
' → logprob: -4.863785266876221
    6. '
' → logprob: -5.113785266876221
    7. ' 
' → logprob: -5.613785266876221
    8. '``' → logprob: -5.863785266876221
    9. ':' → logprob: -6.113785266876221
    10. ''\' → logprob: -6.613785266876221

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44198349118232727
    2. '```' → logprob: -2.066983461380005
    3. 'return' (adapté à ' return') → logprob: -2.691983461380005
    4. 'input' → logprob: -3.441983461380005
    5. '    ' → logprob: -3.441983461380005
    6. 'r' → logprob: -3.566983461380005
    7. '\' → logprob: -4.191983699798584
    8. 'x' → logprob: -4.316983699798584
    9. '       ' → logprob: -4.691983699798584
    10. '`' → logprob: -5.191983699798584

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19978126883506775
    2. '"' → logprob: -2.4497811794281006
    3. 'input' → logprob: -2.9497811794281006
    4. ' input' → logprob: -3.6997811794281006
    5. ''' → logprob: -4.19978141784668
    6. '  ' → logprob: -7.07478141784668
    7. ' "' → logprob: -7.94978141784668
    8. ' []' → logprob: -8.32478141784668
    9. '(input' → logprob: -8.57478141784668
    10. '`' → logprob: -8.82478141784668

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003167979419231415
    2. '()' → logprob: -6.003168106079102
    3. ''' → logprob: -8.503168106079102
    4. '"' → logprob: -8.878168106079102
    5. '```' → logprob: -9.378168106079102
    6. '("("' → logprob: -9.628168106079102
    7. '('' → logprob: -9.753168106079102
    8. '(
' → logprob: -10.753168106079102
    9. ' ' → logprob: -11.128168106079102
    10. '`' → logprob: -11.253168106079102

Token 8: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8554037809371948
    2. '(' → logprob: -1.8554037809371948
    3. '```' → logprob: -2.6054039001464844
    4. '\' → logprob: -2.7304039001464844
    5. '
' → logprob: -3.1054039001464844
    6. '()' → logprob: -3.2304039001464844
    7. '<|end|>' → logprob: -3.2304039001464844
    8. '.' → logprob: -3.3554039001464844
    9. ':' → logprob: -3.6054039001464844
    10. ')' → logprob: -3.9804039001464844

Token 9: ' parse' (ID: 8420)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -1.137978196144104
    2. ' calculate' → logprob: -1.512978196144104
    3. ' read' → logprob: -1.762978196144104
    4. ' main' → logprob: -2.0129780769348145
    5. ' write' → logprob: -2.3879780769348145
    6. ' compute' → logprob: -4.2629780769348145
    7. ' user' → logprob: -4.6379780769348145
    8. ' parse' → logprob: -5.0129780769348145
    9. ' print' → logprob: -5.2629780769348145
    10. ' space' → logprob: -5.3879780769348145

Token 10: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021266166120767593
    2. '_input' → logprob: -4.146265983581543
    3. '(' → logprob: -5.396265983581543
    4. '_line' → logprob: -8.146265983581543
    5. '_data' → logprob: -9.896265983581543
    6. '_token' → logprob: -10.146265983581543
    7. '_(' → logprob: -10.396265983581543
    8. '_text' → logprob: -10.396265983581543
    9. '_output' → logprob: -10.771265983581543
    10. '(_' → logprob: -10.771265983581543

Token 11: '_m' (ID: 1285)
  Prédit: 'umber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umber' → logprob: -0.24591778218746185
    2. '_' → logprob: -2.120917797088623
    3. '()' → logprob: -3.120917797088623
    4. 'um' → logprob: -3.495917797088623
    5. 'ame' → logprob: -4.370917797088623
    6. 'umbers' → logprob: -5.370917797088623
    7. '():' → logprob: -5.495917797088623
    8. 'ext' → logprob: -7.495917797088623
    9. '():
' → logprob: -7.995917797088623
    10. '(' → logprob: -8.120917320251465

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4191266894340515
    2. '():' → logprob: -1.1691267490386963
    3. '()' → logprob: -3.5441267490386963
    4. '_' → logprob: -7.419126510620117
    5. ' (' → logprob: -7.544126510620117
    6. '("("' → logprob: -8.044126510620117
    7. '(a' → logprob: -8.544126510620117
    8. ' ()' → logprob: -8.794126510620117
    9. '(()' → logprob: -9.419126510620117
    10. '(n' → logprob: -9.794126510620117

Token 13: '_line' (ID: 14418)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14212502539157867
    2. '(' → logprob: -2.767125129699707
    3. ')_' → logprob: -4.267125129699707
    4. '_line' → logprob: -4.392125129699707
    5. '_)' → logprob: -4.392125129699707
    6. '_' → logprob: -4.517125129699707
    7. '_text' → logprob: -5.017125129699707
    8. '_string' → logprob: -5.142125129699707
    9. '())' → logprob: -7.017125129699707
    10. '):' → logprob: -7.142125129699707

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014840487390756607
    2. ')' → logprob: -4.264840602874756
    3. '(' → logprob: -8.389840126037598
    4. ':' → logprob: -8.889840126037598
    5. ',' → logprob: -9.389840126037598
    6. ' ):' → logprob: -9.764840126037598
    7. '():' → logprob: -10.139840126037598
    8. '):
' → logprob: -10.514840126037598
    9. '[' → logprob: -10.764840126037598
    10. '=' → logprob: -11.264840126037598

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9292915463447571
    2. 'input' → logprob: -1.5542914867401123
    3. ' input' → logprob: -1.8042914867401123
    4. ' line' → logprob: -2.4292914867401123
    5. '(' → logprob: -3.1792914867401123
    6. ' return' → logprob: -3.5542914867401123
    7. 'return' → logprob: -4.804291725158691
    8. 'def' → logprob: -4.929291725158691
    9. ' token' → logprob: -5.054291725158691
    10. 'int' → logprob: -5.179291725158691

Token 16: ' n' (ID: 297)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.15944425761699677
    2. 'input' → logprob: -3.0344443321228027
    3. ' line' → logprob: -3.6594443321228027
    4. ' return' → logprob: -4.034444332122803
    5. ' int' → logprob: -4.159444332122803
    6. '   ' → logprob: -4.409444332122803
    7. ' map' → logprob: -5.034444332122803
    8. ' split' → logprob: -5.034444332122803
    9. ' ' → logprob: -5.659444332122803
    10. ' token' → logprob: -6.034444332122803

Token 17: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006754917558282614
    2. ' ,' → logprob: -5.0067548751831055
    3. '_,' → logprob: -11.381754875183105
    4. '=' → logprob: -11.881754875183105
    5. ' =' → logprob: -12.006754875183105
    6. ' ' → logprob: -12.381754875183105
    7. ',int' → logprob: -12.506754875183105
    8. '_' → logprob: -13.006754875183105
    9. ',_' → logprob: -13.631754875183105
    10. ',n' → logprob: -14.256754875183105

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021565472707152367
    2. ' =' → logprob: -4.2715654373168945
    3. ' ,' → logprob: -5.3965654373168945
    4. '=' → logprob: -5.8965654373168945
    5. ' ' → logprob: -10.021565437316895
    6. ',n' → logprob: -11.521565437316895
    7. 's' → logprob: -11.771565437316895
    8. ',_' → logprob: -12.396565437316895
    9. ',s' → logprob: -12.896565437316895
    10. ',e' → logprob: -12.896565437316895

Token 19: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.08052124083042145
    2. 'm' → logprob: -2.70552134513855
    3. ' ' → logprob: -4.580521106719971
    4. ' input' → logprob: -10.080521583557129
    5. 'input' → logprob: -10.205521583557129
    6. 's' → logprob: -10.330521583557129
    7. '<|end|>' → logprob: -10.705521583557129
    8. 'space' → logprob: -10.955521583557129
    9. '	m' → logprob: -11.205521583557129
    10. ' s' → logprob: -11.205521583557129

Token 20: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5297076106071472
    2. '=' → logprob: -1.029707670211792
    3. ',' → logprob: -3.404707670211792
    4. '_' → logprob: -3.904707670211792
    5. '_str' → logprob: -7.779707431793213
    6. ' ,' → logprob: -9.404707908630371
    7. ')' → logprob: -10.029707908630371
    8. 's' → logprob: -10.154707908630371
    9. '_=' → logprob: -10.779707908630371
    10. '_,' → logprob: -11.029707908630371

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859123006463051
    2. '=' → logprob: -3.048591136932373
    3. ',' → logprob: -12.673591613769531
    4. ' ' → logprob: -14.923591613769531
    5. ')' → logprob: -15.423591613769531
    6. ' =
' → logprob: -16.79859161376953
    7. ' =)' → logprob: -17.04859161376953
    8. ' ,' → logprob: -17.42359161376953
    9. 's' → logprob: -18.17359161376953
    10. ' =",' → logprob: -18.29859161376953

Token 22: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.054884202778339386
    2. 'input' → logprob: -2.929884195327759
    3. '	input' → logprob: -14.05488395690918
    4. '=input' → logprob: -14.42988395690918
    5. '(input' → logprob: -16.05488395690918
    6. ' ' → logprob: -16.17988395690918
    7. '<|end|>' → logprob: -16.55488395690918
    8. ',input' → logprob: -16.80488395690918
    9. '<input' → logprob: -16.92988395690918
    10. '    ' → logprob: -17.05488395690918

Token 23: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0002678920282050967
    2. '_split' → logprob: -9.37526798248291
    3. '_str' → logprob: -9.87526798248291
    4. '_lines' → logprob: -10.00026798248291
    5. '_' → logprob: -10.50026798248291
    6. '_string' → logprob: -11.50026798248291
    7. 'line' → logprob: -12.00026798248291
    8. '().' → logprob: -12.12526798248291
    9. '_token' → logprob: -12.37526798248291
    10. '_LINE' → logprob: -12.50026798248291

Token 24: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2551489770412445
    2. '.split' → logprob: -1.505149006843567
    3. '.strip' → logprob: -5.755148887634277
    4. ' .' → logprob: -10.130148887634277
    5. 'split' → logprob: -12.505148887634277
    6. '.rstrip' → logprob: -13.380148887634277
    7. '.s' → logprob: -13.505148887634277
    8. '.readline' → logprob: -15.130148887634277
    9. '.Split' → logprob: -15.380148887634277
    10. '   ' → logprob: -15.380148887634277

Token 25: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.007258862257003784
    2. '("("' → logprob: -5.382258892059326
    3. ''' → logprob: -6.507258892059326
    4. '(' → logprob: -7.007258892059326
    5. '()' → logprob: -8.632258415222168
    6. '("' → logprob: -10.882258415222168
    7. '"' → logprob: -11.632258415222168
    8. '('(' → logprob: -11.882258415222168
    9. '(',' → logprob: -12.007258415222168
    10. '('.')' → logprob: -12.507258415222168

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8248048424720764
    2. '
' → logprob: -1.9498047828674316
    3. '    
' → logprob: -2.4498047828674316
    4. ' ' → logprob: -2.5748047828674316
    5. ',' → logprob: -2.9498047828674316
    6. '<|end|>' → logprob: -2.9498047828674316
    7. ')' → logprob: -3.3248047828674316
    8. '  ' → logprob: -3.6998047828674316
    9. '  
' → logprob: -3.9498047828674316
    10. '\n' → logprob: -4.199804782867432

Token 27: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2375129759311676
    2. ' n' → logprob: -1.6125129461288452
    3. ' return' → logprob: -5.112513065338135
    4. '   ' → logprob: -5.362513065338135
    5. 'return' (adapté à ' return') → logprob: -6.737513065338135
    6. '    ' → logprob: -9.862512588500977
    7. ' ' → logprob: -10.612512588500977
    8. '	n' → logprob: -11.487512588500977
    9. ')' → logprob: -11.737512588500977
    10. '```' → logprob: -11.737512588500977

Token 28: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931801438331604
    2. ' int' → logprob: -0.6931801438331604
    3. '(int' → logprob: -10.443180084228516
    4. '   ' → logprob: -13.443180084228516
    5. '  ' → logprob: -13.943180084228516
    6. ' (' → logprob: -14.818180084228516
    7. '[int' → logprob: -15.068180084228516
    8. ' ' → logprob: -15.568180084228516
    9. '	int' → logprob: -16.318180084228516
    10. '<int' → logprob: -16.318180084228516

Token 29: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759871006011963
    2. '(n' → logprob: -0.8259871006011963
    3. ' (' → logprob: -10.200986862182617
    4. '(`' → logprob: -12.825986862182617
    5. '('' → logprob: -12.950986862182617
    6. '("("' → logprob: -13.575986862182617
    7. 'n' → logprob: -13.950986862182617
    8. '(
' → logprob: -14.575986862182617
    9. ' ' → logprob: -14.575986862182617
    10. '(

' → logprob: -14.825986862182617

Token 30: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.73808753490448
    2. ')' → logprob: -0.98808753490448
    3. ',' → logprob: -2.6130876541137695
    4. '(n' → logprob: -3.6130876541137695
    5. '),' → logprob: -3.8630876541137695
    6. '_' → logprob: -4.2380876541137695
    7. '_n' → logprob: -5.4880876541137695
    8. ' ' → logprob: -5.6130876541137695
    9. '(' → logprob: -6.4880876541137695
    10. ' )' → logprob: -6.9880876541137695

Token 31: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.019740061834454536
    2. ')' → logprob: -4.019740104675293
    3. ',' → logprob: -6.519740104675293
    4. ' ),' → logprob: -9.144740104675293
    5. ' ,' → logprob: -12.644740104675293
    6. ' ' → logprob: -13.519740104675293
    7. ' )' → logprob: -13.894740104675293
    8. '),
' → logprob: -14.269740104675293
    9. '   ' → logprob: -14.519740104675293
    10. '),(' → logprob: -14.894740104675293

Token 32: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00608496880158782
    2. 'int' → logprob: -5.13108491897583
    3. ' m' → logprob: -9.006085395812988
    4. 'm' → logprob: -11.006085395812988
    5. ' ' → logprob: -11.381085395812988
    6. ' ' → logprob: -13.506085395812988
    7. '=int' → logprob: -13.631085395812988
    8. '[int' → logprob: -14.256085395812988
    9. '<int' → logprob: -14.631085395812988
    10. '	int' → logprob: -14.631085395812988

Token 33: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0052342405542731285
    2. '(' → logprob: -5.255234241485596
    3. ' (' → logprob: -15.505233764648438
    4. '('' → logprob: -17.380233764648438
    5. '("("' → logprob: -17.630233764648438
    6. 'm' → logprob: -18.005233764648438
    7. '(

' → logprob: -18.380233764648438
    8. ')' → logprob: -18.505233764648438
    9. '(n' → logprob: -18.505233764648438
    10. '(s' → logprob: -18.755233764648438

Token 34: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00042686203960329294
    2. ')' → logprob: -7.875426769256592
    3. '_' → logprob: -11.00042724609375
    4. 'str' → logprob: -11.12542724609375
    5. '_)' → logprob: -12.25042724609375
    6. '_s' → logprob: -12.37542724609375
    7. 'Str' → logprob: -13.25042724609375
    8. '_STR' → logprob: -13.75042724609375
    9. ')_' → logprob: -14.62542724609375
    10. '   ' → logprob: -14.87542724609375

Token 35: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '))' → logprob: -16.375
    5. '')' → logprob: -16.375
    6. ')return' → logprob: -16.75
    7. '   ' → logprob: -16.875
    8. '),' → logprob: -17.0
    9. '`)' → logprob: -17.25
    10. ')`' → logprob: -17.5

Token 36: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6234631538391113
    2. 'def' → logprob: -0.9984631538391113
    3. '
' → logprob: -2.3734631538391113
    4. 'n' → logprob: -7.123463153839111
    5. '```' → logprob: -7.873463153839111
    6. 'd' → logprob: -8.123462677001953
    7. '\' → logprob: -8.248462677001953
    8. '<|end|>' → logprob: -8.623462677001953
    9. '\n' → logprob: -9.373462677001953
    10. '
' → logprob: -9.998462677001953

Token 37: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.2262905836105347
    2. ' solve' → logprob: -1.2262905836105347
    3. ' calculate' → logprob: -1.8512905836105347
    4. ' read' → logprob: -2.226290702819824
    5. ' process' → logprob: -3.101290702819824
    6. ' count' → logprob: -3.351290702819824
    7. ' compute' → logprob: -3.351290702819824
    8. ' parse' → logprob: -4.726290702819824
    9. ' sum' → logprob: -5.226290702819824
    10. ' find' → logprob: -5.351290702819824

Token 38: '_a' (ID: 10852)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.7051501274108887
    2. '_array' → logprob: -1.9551501274108887
    3. '_list' → logprob: -2.3301501274108887
    4. '_a' → logprob: -2.8301501274108887
    5. '_line' → logprob: -3.3301501274108887
    6. '_int' → logprob: -3.3301501274108887
    7. '_' → logprob: -3.4551501274108887
    8. '_data' → logprob: -4.205150127410889
    9. '_arr' → logprob: -4.205150127410889
    10. '_items' → logprob: -4.580150127410889

Token 39: '(input' (ID: 10054)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.069341778755188
    2. 'rray' → logprob: -1.194341778755188
    3. 'rr' → logprob: -2.0693416595458984
    4. '_list' → logprob: -2.4443416595458984
    5. '_' → logprob: -2.8193416595458984
    6. '()' → logprob: -2.9443416595458984
    7. '_arr' → logprob: -4.694341659545898
    8. '_array' → logprob: -4.944341659545898
    9. '_input' → logprob: -6.069341659545898
    10. '_rr' → logprob: -6.444341659545898

Token 40: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0036840438842773438
    2. '_' → logprob: -6.253684043884277
    3. '_array' → logprob: -7.128684043884277
    4. '_list' → logprob: -7.503684043884277
    5. '_a' → logprob: -8.753684043884277
    6. '_lines' → logprob: -9.378684043884277
    7. 'line' → logprob: -9.628684043884277
    8. ')_' → logprob: -10.628684043884277
    9. 'a' → logprob: -11.253684043884277
    10. ')' → logprob: -11.378684043884277

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003467865171842277
    2. ')' → logprob: -8.375347137451172
    3. '):
' → logprob: -9.375347137451172
    4. '   ' → logprob: -11.875347137451172
    5. '():' → logprob: -11.875347137451172
    6. '_' → logprob: -12.125347137451172
    7. ' ):' → logprob: -12.250347137451172
    8. '[]):' → logprob: -12.875347137451172
    9. ''):' → logprob: -14.000347137451172
    10. '_line' → logprob: -14.250347137451172

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009350438485853374
    2. 'a' → logprob: -7.375935077667236
    3. 'return' → logprob: -8.500934600830078
    4. ' return' → logprob: -10.000934600830078
    5. ' a' → logprob: -10.250934600830078
    6. '[' → logprob: -12.000934600830078
    7. '[]' → logprob: -12.375934600830078
    8. '    ' → logprob: -12.500934600830078
    9. '  ' → logprob: -12.625934600830078
    10. 'list' → logprob: -13.875934600830078

Token 43: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42193636298179626
    2. 'return' (adapté à ' return') → logprob: -1.5469363927841187
    3. ' return' → logprob: -2.796936273574829
    4. ' a' → logprob: -2.921936273574829
    5. '   ' → logprob: -4.296936511993408
    6. 'list' → logprob: -6.796936511993408
    7. '[a' → logprob: -6.921936511993408
    8. ' list' → logprob: -8.29693603515625
    9. '[int' → logprob: -8.54693603515625
    10. '[' → logprob: -9.67193603515625

Token 44: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6051506996154785
    2. ' list' → logprob: -1.2301506996154785
    3. '[int' → logprob: -2.3551506996154785
    4. '[input' → logprob: -3.3551506996154785
    5. '[list' → logprob: -3.8551506996154785
    6. ' [' → logprob: -5.1051506996154785
    7. '[' → logprob: -5.4801506996154785
    8. 'input' → logprob: -8.35515022277832
    9. 'int' → logprob: -8.48015022277832
    10. ' input' → logprob: -9.85515022277832

Token 45: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19221636652946472
    2. '(map' → logprob: -1.817216396331787
    3. '(input' → logprob: -4.692216396331787
    4. '(int' → logprob: -6.442216396331787
    5. '(eval' → logprob: -6.692216396331787
    6. '(range' → logprob: -8.567215919494629
    7. '(parse' → logprob: -10.692215919494629
    8. '((' → logprob: -10.817215919494629
    9. '(list' → logprob: -10.817215919494629
    10. '()' → logprob: -10.942215919494629

Token 46: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014340397901833057
    2. '(' → logprob: -6.626433849334717
    3. '(lambda' → logprob: -10.626434326171875
    4. '<|end|>' → logprob: -10.751434326171875
    5. 'int' → logprob: -10.876434326171875
    6. ')' → logprob: -11.126434326171875
    7. '<int' → logprob: -11.376434326171875
    8. ',int' → logprob: -12.376434326171875
    9. '(str' → logprob: -12.501434326171875
    10. '(
' → logprob: -13.001434326171875

Token 47: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6147174835205078
    2. ',input' → logprob: -1.1147174835205078
    3. ',' → logprob: -2.239717483520508
    4. '(' → logprob: -3.739717483520508
    5. '<|end|>' → logprob: -7.864717483520508
    6. ',(' → logprob: -9.114717483520508
    7. '<|end|>' → logprob: -9.364717483520508
    8. ')' → logprob: -9.364717483520508
    9. '(),' → logprob: -9.989717483520508
    10. ' ,' → logprob: -10.239717483520508

Token 48: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023350762203335762
    2. ' input' → logprob: -3.773350715637207
    3. '(input' → logprob: -9.398350715637207
    4. ',input' → logprob: -11.398350715637207
    5. '=input' → logprob: -12.648350715637207
    6. '   ' → logprob: -12.773350715637207
    7. '	input' → logprob: -12.898350715637207
    8. '[input' → logprob: -14.023350715637207
    9. ' ' → logprob: -14.398350715637207
    10. ')' → logprob: -14.648350715637207

Token 49: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00011188744247192517
    2. ')' → logprob: -10.62511157989502
    3. '_LINE' → logprob: -10.62511157989502
    4. ')_' → logprob: -11.00011157989502
    5. '_' → logprob: -11.50011157989502
    6. '_token' → logprob: -12.00011157989502
    7. '(' → logprob: -12.25011157989502
    8. '.readline' → logprob: -12.87511157989502
    9. ')(_' → logprob: -13.00011157989502
    10. '_lines' → logprob: -13.00011157989502

Token 50: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.4481918215751648
    2. '.strip' → logprob: -1.4481918811798096
    3. '.' → logprob: -2.0731918811798096
    4. '().' → logprob: -8.57319164276123
    5. ' .' → logprob: -8.57319164276123
    6. '.rstrip' → logprob: -10.94819164276123
    7. ')' → logprob: -11.44819164276123
    8. '.readline' → logprob: -11.82319164276123
    9. ').' → logprob: -11.94819164276123
    10. '.replace' → logprob: -11.94819164276123

Token 51: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.022427279502153397
    2. ')' → logprob: -4.522427082061768
    3. '()))' → logprob: -4.522427082061768
    4. '(' → logprob: -8.647427558898926
    5. '())' → logprob: -8.772427558898926
    6. ')))' → logprob: -9.147427558898926
    7. '()' → logprob: -11.522427558898926
    8. '   ' → logprob: -13.522427558898926
    9. ''))' → logprob: -14.147427558898926
    10. ' ))' → logprob: -14.397427558898926

Token 52: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003472493728622794
    2. 'd' → logprob: -6.253472328186035
    3. '\' → logprob: -7.378472328186035
    4. '
' → logprob: -7.878472328186035
    5. 'n' → logprob: -8.003472328186035
    6. '#' → logprob: -9.878472328186035
    7. '

' → logprob: -9.878472328186035
    8. '```' → logprob: -9.878472328186035
    9. '\n' → logprob: -10.628472328186035
    10. 'de' → logprob: -12.503472328186035

Token 53: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2637982964515686
    2. ' solve' → logprob: -2.013798236846924
    3. ' parse' → logprob: -3.763798236846924
    4. ' read' → logprob: -4.138798236846924
    5. ' calculate' → logprob: -4.388798236846924
    6. ' process' → logprob: -4.513798236846924
    7. 'main' → logprob: -4.888798236846924
    8. 'solve' → logprob: -5.013798236846924
    9. ' count' → logprob: -5.138798236846924
    10. ' compute' → logprob: -6.013798236846924

Token 54: '_prefix' (ID: 33197)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8185528516769409
    2. '_sum' → logprob: -1.068552851676941
    3. '_max' → logprob: -1.693552851676941
    4. '(' → logprob: -4.6935529708862305
    5. '_difference' → logprob: -5.9435529708862305
    6. '_a' → logprob: -6.0685529708862305
    7. '_total' → logprob: -6.5685529708862305
    8. '_result' → logprob: -6.5685529708862305
    9. '_area' → logprob: -7.0685529708862305
    10. '_count' → logprob: -7.0685529708862305

Token 55: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.33862602710723877
    2. '_sum' → logprob: -1.3386260271072388
    3. '_' → logprob: -3.713625907897949
    4. '_array' → logprob: -8.46362590789795
    5. '_max' → logprob: -9.33862590789795
    6. '_hash' → logprob: -9.46362590789795
    7. 's' → logprob: -9.46362590789795
    8. '_lengths' → logprob: -9.71362590789795
    9. '_suffix' → logprob: -10.33862590789795
    10. '_counts' → logprob: -10.33862590789795

Token 56: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.5759434103965759
    2. 'um' → logprob: -0.8259434103965759
    3. 'quares' → logprob: -13.075942993164062
    4. ' um' → logprob: -14.450942993164062
    5. 'uffix' → logprob: -15.200942993164062
    6. 'u' → logprob: -15.825942993164062
    7. '```' → logprob: -16.200942993164062
    8. 'ummary' → logprob: -16.325942993164062
    9. '``' → logprob: -16.575942993164062
    10. 'ум' → logprob: -16.575942993164062

Token 57: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021098130382597446
    2. '(a' → logprob: -6.877110004425049
    3. '(n' → logprob: -7.752110004425049
    4. '(input' → logprob: -8.62710952758789
    5. '(def' → logprob: -9.25210952758789
    6. ' (' → logprob: -9.75210952758789
    7. '(data' → logprob: -10.12710952758789
    8. '(s' → logprob: -10.37710952758789
    9. '_' → logprob: -10.50210952758789
    10. '(lst' → logprob: -10.75210952758789

Token 58: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00014740281039848924
    2. ')' → logprob: -9.625147819519043
    3. ',' → logprob: -10.000147819519043
    4. '):
' → logprob: -11.125147819519043
    5. ':' → logprob: -11.625147819519043
    6. ' ):' → logprob: -11.750147819519043
    7. '[]):' → logprob: -14.000147819519043
    8. ']:' → logprob: -14.500147819519043
    9. '_list' → logprob: -14.625147819519043
    10. ')):' → logprob: -14.625147819519043

Token 59: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3073400855064392
    2. 'n' → logprob: -1.557340145111084
    3. ' m' → logprob: -3.682340145111084
    4. 'm' → logprob: -3.932340145111084
    5. ')' → logprob: -5.307340145111084
    6. ' )' → logprob: -7.182340145111084
    7. '):
' → logprob: -7.307340145111084
    8. '   ' → logprob: -7.932340145111084
    9. '))' → logprob: -8.182339668273926
    10. 'prefix' → logprob: -8.307339668273926

Token 60: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.085517113911919e-05
    2. ')' → logprob: -11.12505054473877
    3. '):
' → logprob: -11.25005054473877
    4. ' ):' → logprob: -11.37505054473877
    5. ',' → logprob: -11.62505054473877
    6. ':' → logprob: -13.25005054473877
    7. '):
' → logprob: -15.75005054473877
    8. '=' → logprob: -15.87505054473877
    9. '+' → logprob: -16.125051498413086
    10. ')):' → logprob: -16.375051498413086

Token 61: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.06234622001647949
    2. 'm' → logprob: -2.8123462200164795
    3. ')' → logprob: -9.062346458435059
    4. ' ' → logprob: -9.437346458435059
    5. '_m' → logprob: -10.312346458435059
    6. '   ' → logprob: -10.749846458435059
    7. ' k' → logprob: -10.812346458435059
    8. '_' → logprob: -11.187346458435059
    9. 'k' → logprob: -11.312346458435059
    10. ' )' → logprob: -11.437346458435059

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001773192489054054
    2. ',' → logprob: -9.250177383422852
    3. ')' → logprob: -9.750177383422852
    4. ' ):' → logprob: -11.375177383422852
    5. ':' → logprob: -11.875177383422852
    6. '):
' → logprob: -13.250177383422852
    7. '=' → logprob: -14.750177383422852
    8. '():' → logprob: -14.875177383422852
    9. '_' → logprob: -15.125177383422852
    10. ')：' → logprob: -15.250177383422852

Token 63: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029576157685369253
    2. ' :' → logprob: -6.627957820892334
    3. '):' → logprob: -7.002957820892334
    4. '   ' → logprob: -7.627957820892334
    5. '():' → logprob: -9.252957344055176
    6. ':
' → logprob: -9.877957344055176
    7. ',' → logprob: -10.627957344055176
    8. ':list' → logprob: -11.752957344055176
    9. ']:' → logprob: -12.002957344055176
    10. '=' → logprob: -12.002957344055176

Token 64: ' a' (ID: 261)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.5625479221343994
    2. '   ' → logprob: -1.1875479221343994
    3. 'prefix' → logprob: -2.3125479221343994
    4. '    ' → logprob: -4.56254768371582
    5. ' p' → logprob: -4.81254768371582
    6. 'p' → logprob: -6.68754768371582
    7. ' 
' → logprob: -7.06254768371582
    8. '    
' → logprob: -7.06254768371582
    9. '     
' → logprob: -7.68754768371582
    10. '```' → logprob: -7.68754768371582

Token 65: '_cs' (ID: 82698)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16720415651798248
    2. '_' → logprob: -2.2922041416168213
    3. '=' → logprob: -3.9172041416168213
    4. ' =' → logprob: -4.6672043800354
    5. '[:]' → logprob: -4.9172043800354
    6. '_prefix' → logprob: -5.2922043800354
    7. '.' → logprob: -5.9172043800354
    8. '.append' → logprob: -6.1672043800354
    9. ',' → logprob: -7.1672043800354
    10. '_len' → logprob: -7.7922043800354

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024076981469988823
    2. ' =' → logprob: -3.7740769386291504
    3. 'um' → logprob: -7.52407693862915
    4. '=[' → logprob: -8.399077415466309
    5. '=[]' → logprob: -10.899077415466309
    6. 'a' → logprob: -11.649077415466309
    7. '   ' → logprob: -12.399077415466309
    8. 'u' → logprob: -12.899077415466309
    9. ' ' → logprob: -13.024077415466309
    10. '[' → logprob: -13.024077415466309

Token 67: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7461985349655151
    2. ' [' → logprob: -0.7461985349655151
    3. '[a' → logprob: -2.9961986541748047
    4. 'a' → logprob: -6.621198654174805
    5. ' a' → logprob: -8.621198654174805
    6. '[n' → logprob: -9.996198654174805
    7. ' ' → logprob: -10.371198654174805
    8. '[m' → logprob: -10.996198654174805
    9. '[len' → logprob: -10.996198654174805
    10. '0' → logprob: -11.121198654174805

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1093578804284334e-05
    2. ' ' → logprob: -10.250051498413086
    3. 'a' → logprob: -11.750051498413086
    4. '[' → logprob: -12.000051498413086
    5. ')' → logprob: -15.312551498413086
    6. '   ' → logprob: -15.375051498413086
    7. ' [' → logprob: -15.437551498413086
    8. '[a' → logprob: -15.437551498413086
    9. '-' → logprob: -15.687551498413086
    10. ']' → logprob: -16.250051498413086

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002007987059187144
    2. ']*(' → logprob: -9.250201225280762
    3. ']*' → logprob: -10.250201225280762
    4. '0' → logprob: -10.375201225280762
    5. ' ]' → logprob: -11.625201225280762
    6. ']+' → logprob: -12.000201225280762
    7. ']
' → logprob: -12.750201225280762
    8. '[' → logprob: -13.125201225280762
    9. ']int' → logprob: -13.125201225280762
    10. '1' → logprob: -13.250201225280762

Token 70: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3613203763961792
    2. '<|end|>' → logprob: -1.7363203763961792
    3. ']*(' → logprob: -3.2363204956054688
    4. '0' → logprob: -4.111320495605469
    5. 'for' → logprob: -4.361320495605469
    6. '[' → logprob: -4.486320495605469
    7. '*' → logprob: -4.611320495605469
    8. ' for' → logprob: -4.861320495605469
    9. '+' → logprob: -5.111320495605469
    10. ']*' → logprob: -5.486320495605469

Token 71: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14528125524520874
    2. '(m' → logprob: -2.1452813148498535
    3. ' (' → logprob: -4.6452813148498535
    4. '(' → logprob: -4.8952813148498535
    5. '(len' → logprob: -7.1452813148498535
    6. '((' → logprob: -8.270280838012695
    7. ' ' → logprob: -11.145280838012695
    8. '   ' → logprob: -11.770280838012695
    9. 'm' → logprob: -11.770280838012695
    10. 'n' → logprob: -12.145280838012695

Token 72: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1475967913866043
    2. ' n' → logprob: -2.022596836090088
    3. 'len' → logprob: -5.897596836090088
    4. 'm' → logprob: -6.772596836090088
    5. '(n' → logprob: -7.647596836090088
    6. '   ' → logprob: -8.64759635925293
    7. ' len' → logprob: -9.02259635925293
    8. ' (' → logprob: -9.77259635925293
    9. ' ' → logprob: -9.89759635925293
    10. ' m' → logprob: -9.89759635925293

Token 73: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023286130279302597
    2. ' +' → logprob: -3.7732861042022705
    3. '+)' → logprob: -11.898285865783691
    4. '+
' → logprob: -11.898285865783691
    5. '+m' → logprob: -11.898285865783691
    6. ' ' → logprob: -12.148285865783691
    7. ')' → logprob: -12.273285865783691
    8. '<|end|>' → logprob: -12.898285865783691
    9. ' +
' → logprob: -13.148285865783691
    10. '1' → logprob: -13.773285865783691

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008156602270901203
    2. ' ' → logprob: -5.133156776428223
    3. 'm' → logprob: -6.258156776428223
    4. ' m' → logprob: -8.133156776428223
    5. ')' → logprob: -12.008156776428223
    6. '2' → logprob: -12.383156776428223
    7. '   ' → logprob: -13.008156776428223
    8. '<|end|>' → logprob: -13.883156776428223
    9. '  ' → logprob: -14.008156776428223
    10. '```' → logprob: -14.758156776428223

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014091627672314644
    2. 'm' → logprob: -6.62640905380249
    3. ' ' → logprob: -9.876409530639648
    4. '2' → logprob: -10.751409530639648
    5. ' m' → logprob: -12.001409530639648
    6. '   ' → logprob: -13.563909530639648
    7. '  ' → logprob: -14.813909530639648
    8. '(m' → logprob: -14.938909530639648
    9. '```' → logprob: -15.001409530639648
    10. '	m' → logprob: -15.813909530639648

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.0020742492051795e-05
    2. ')
' → logprob: -10.250049591064453
    3. ' )' → logprob: -11.250049591064453
    4. ')

' → logprob: -14.625049591064453
    5. '<|end|>' → logprob: -14.750049591064453
    6. ')
' → logprob: -15.625049591064453
    7. '),' → logprob: -15.875049591064453
    8. ' ' → logprob: -17.000049591064453
    9. '   ' → logprob: -17.000049591064453
    10. ',' → logprob: -17.000049591064453

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22494809329509735
    2. ' for' → logprob: -2.3499481678009033
    3. '
' → logprob: -2.7249481678009033
    4. 'for' → logprob: -3.8499481678009033
    5. '	for' → logprob: -4.599947929382324
    6. '    
' → logprob: -5.474947929382324
    7. ' ' → logprob: -6.599947929382324
    8. '<|end|>' → logprob: -6.599947929382324
    9. '' → logprob: -7.474947929382324
    10. '\n' → logprob: -8.224947929382324

Token 78: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.165134996175766
    2. ' for' → logprob: -2.165134906768799
    3. '   ' → logprob: -3.290134906768799
    4. '	for' → logprob: -8.415135383605957
    5. '
' → logprob: -12.415135383605957
    6. '    
' → logprob: -12.540135383605957
    7. ' ' → logprob: -12.665135383605957
    8. '  ' → logprob: -13.415135383605957
    9. 'i' → logprob: -13.540135383605957
    10. '```' → logprob: -13.915135383605957

Token 79: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0003764535649679601
    2. ' ' → logprob: -8.12537670135498
    3. 'i' → logprob: -9.75037670135498
    4. '_' → logprob: -11.62537670135498
    5. ' _' → logprob: -11.62537670135498
    6. '	i' → logprob: -13.12537670135498
    7. ' I' → logprob: -14.50037670135498
    8. '_i' → logprob: -15.00037670135498
    9. '<|end|>' → logprob: -15.12537670135498
    10. ' x' → logprob: -15.25037670135498

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004789191763848066
    2. 'in' → logprob: -5.504789352416992
    3. ' ' → logprob: -7.379789352416992
    4. '  ' → logprob: -10.504789352416992
    5. '+' → logprob: -10.879789352416992
    6. '	in' → logprob: -11.754789352416992
    7. '<|end|>' → logprob: -12.254789352416992
    8. '_' → logprob: -12.254789352416992
    9. ',' → logprob: -12.379789352416992
    10. ' i' → logprob: -12.379789352416992

Token 81: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07890399545431137
    2. 'range' → logprob: -2.578903913497925
    3. ' ' → logprob: -11.703904151916504
    4. ' xrange' → logprob: -12.703904151916504
    5. '	range' → logprob: -13.453904151916504
    6. '(range' → logprob: -13.703904151916504
    7. '  ' → logprob: -15.828904151916504
    8. '   ' → logprob: -16.328903198242188
    9. 'ange' → logprob: -17.453903198242188
    10. ' in' → logprob: -17.953903198242188

Token 82: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13060906529426575
    2. ' (' → logprob: -2.2556090354919434
    3. '(n' → logprob: -4.380609035491943
    4. ' ' → logprob: -5.380609035491943
    5. '1' → logprob: -8.130609512329102
    6. ' n' → logprob: -9.380609512329102
    7. '<|end|>' → logprob: -10.130609512329102
    8. '(i' → logprob: -10.505609512329102
    9. '   ' → logprob: -11.130609512329102
    10. '(
' → logprob: -11.505609512329102

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029035817831754684
    2. '):
' → logprob: -3.779035806655884
    3. '+' → logprob: -5.404036045074463
    4. '1' → logprob: -7.404036045074463
    5. ' ):' → logprob: -8.404035568237305
    6. '   ' → logprob: -8.904035568237305
    7. ')' → logprob: -9.029035568237305
    8. ' +' → logprob: -10.154035568237305
    9. ':' → logprob: -10.154035568237305
    10. '-' → logprob: -10.404035568237305

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.286899209022522
    2. ' a' → logprob: -1.911899209022522
    3. 'a' → logprob: -2.6618990898132324
    4. '   ' → logprob: -3.7868990898132324
    5. '    ' → logprob: -5.286899089813232
    6. ' 
' → logprob: -6.786899089813232
    7. '    
' → logprob: -7.036899089813232
    8. '<|end|>' → logprob: -7.411899089813232
    9. '        
' → logprob: -7.911899089813232
    10. ' ' → logprob: -7.911899089813232

Token 85: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.003980685491114855
    2. '   ' → logprob: -6.00398063659668
    3. ' a' → logprob: -6.50398063659668
    4. '	a' → logprob: -12.12898063659668
    5. '_a' → logprob: -15.37898063659668
    6. ' ' → logprob: -15.75398063659668
    7. '>a' → logprob: -15.75398063659668
    8. '  ' → logprob: -16.12898063659668
    9. '       ' → logprob: -16.12898063659668
    10. '    ' → logprob: -16.50398063659668

Token 86: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -8.435139898210764e-05
    2. '[i' → logprob: -10.000083923339844
    3. '   ' → logprob: -11.500083923339844
    4. '[' → logprob: -12.375083923339844
    5. '	cs' → logprob: -12.625083923339844
    6. '_' → logprob: -12.750083923339844
    7. 'a' → logprob: -12.750083923339844
    8. '_CS' → logprob: -12.875083923339844
    9. '[_' → logprob: -12.875083923339844
    10. '_c' → logprob: -13.250083923339844

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006475062109529972
    2. '[' → logprob: -7.37564754486084
    3. ' [' → logprob: -11.37564754486084
    4. '   ' → logprob: -12.75064754486084
    5. '[a' → logprob: -13.00064754486084
    6. '[I' → logprob: -13.50064754486084
    7. ' +=' → logprob: -14.12564754486084
    8. '+' → logprob: -14.87564754486084
    9. '[++' → logprob: -15.25064754486084
    10. '```' → logprob: -15.37564754486084

Token 88: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889793813228607
    2. ' +' → logprob: -2.5788979530334473
    3. ']' → logprob: -11.828897476196289
    4. ' ' → logprob: -15.203897476196289
    5. '1' → logprob: -15.203897476196289
    6. '+]' → logprob: -16.32889747619629
    7. ' plus' → logprob: -16.45389747619629
    8. '＋' → logprob: -16.57889747619629
    9. ')' → logprob: -16.95389747619629
    10. '+i' → logprob: -17.32889747619629

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012844942102674395
    2. ' ' → logprob: -9.000128746032715
    3. '   ' → logprob: -13.000128746032715
    4. '<|end|>' → logprob: -13.250128746032715
    5. ')' → logprob: -14.875128746032715
    6. '```' → logprob: -15.375128746032715
    7. ']' → logprob: -16.6251277923584
    8. '  ' → logprob: -16.8751277923584
    9. '=' → logprob: -17.0001277923584
    10. 'def' → logprob: -17.1251277923584

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '   ' → logprob: -14.500025749206543
    4. ']' → logprob: -15.750025749206543
    5. '```' → logprob: -16.000024795532227
    6. ')' → logprob: -16.250024795532227
    7. '  ' → logprob: -16.625024795532227
    8. '<|end|>' → logprob: -17.375024795532227
    9. '0' → logprob: -17.437524795532227
    10. '+' → logprob: -17.812524795532227

Token 91: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8314306139945984
    2. ' =' → logprob: -0.8314306139945984
    3. '=' → logprob: -2.206430673599243
    4. ']' → logprob: -4.331430435180664
    5. ' )' → logprob: -5.831430435180664
    6. ' +=' → logprob: -6.456430435180664
    7. ')=' → logprob: -7.581430435180664
    8. ' ]' → logprob: -8.331430435180664
    9. ' ' → logprob: -8.456430435180664
    10. ')]' → logprob: -8.956430435180664

Token 92: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3872153162956238
    2. ' =' → logprob: -1.1372153759002686
    3. ' +=' → logprob: -8.137215614318848
    4. '+=' → logprob: -9.887215614318848
    5. ' ' → logprob: -15.387215614318848
    6. '=a' → logprob: -15.887215614318848
    7. '.=' → logprob: -16.13721466064453
    8. ')' → logprob: -16.38721466064453
    9. '+' → logprob: -16.51221466064453
    10. '<|end|>' → logprob: -16.76221466064453

Token 93: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22543375194072723
    2. ' a' → logprob: -1.6004337072372437
    3. '	a' → logprob: -11.600433349609375
    4. '   ' → logprob: -12.100433349609375
    5. '>a' → logprob: -13.100433349609375
    6. '<|end|>' → logprob: -13.475433349609375
    7. ' ' → logprob: -13.850433349609375
    8. '    ' → logprob: -14.600433349609375
    9. ')a' → logprob: -15.100433349609375
    10. '_a' → logprob: -15.225433349609375

Token 94: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14272713661193848
    2. ' a' → logprob: -2.0177271366119385
    3. '   ' → logprob: -11.14272689819336
    4. '	a' → logprob: -11.26772689819336
    5. ')a' → logprob: -11.89272689819336
    6. ')' → logprob: -12.26772689819336
    7. ' ' → logprob: -12.76772689819336
    8. '<|end|>' → logprob: -12.76772689819336
    9. '>a' → logprob: -13.01772689819336
    10. '    ' → logprob: -13.51772689819336

Token 95: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -0.007682223338633776
    2. '[i' → logprob: -4.8826823234558105
    3. '[' → logprob: -10.882681846618652
    4. '	cs' → logprob: -11.257681846618652
    5. '_CS' → logprob: -11.507681846618652
    6. ' ' → logprob: -12.007681846618652
    7. '   ' → logprob: -12.257681846618652
    8. ')[' → logprob: -12.507681846618652
    9. '_cd' → logprob: -12.507681846618652
    10. '[_' → logprob: -13.757681846618652

Token 96: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.843177233240567e-05
    2. ' i' → logprob: -12.000018119812012
    3. 'i' → logprob: -12.250018119812012
    4. '[' → logprob: -12.375018119812012
    5. ' [' → logprob: -13.000018119812012
    6. ')' → logprob: -15.250018119812012
    7. ')[' → logprob: -15.375018119812012
    8. ' ' → logprob: -15.375018119812012
    9. '   ' → logprob: -16.125019073486328
    10. '```' → logprob: -17.125019073486328

Token 97: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03008749894797802
    2. '+' → logprob: -3.530087471008301
    3. ' ' → logprob: -8.1550874710083
    4. ')' → logprob: -10.9050874710083
    5. '+a' → logprob: -11.1550874710083
    6. ' plus' → logprob: -12.0300874710083
    7. ' a' → logprob: -12.5300874710083
    8. ')+' → logprob: -13.2800874710083
    9. ' )' → logprob: -13.5300874710083
    10. ' +
' → logprob: -13.6550874710083

Token 98: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11322571337223053
    2. '+' → logprob: -2.2382256984710693
    3. ' ' → logprob: -8.113225936889648
    4. '+a' → logprob: -10.488225936889648
    5. ')' → logprob: -10.613225936889648
    6. ' plus' → logprob: -10.863225936889648
    7. ' a' → logprob: -11.738225936889648
    8. '   ' → logprob: -12.488225936889648
    9. '[' → logprob: -12.613225936889648
    10. '    ' → logprob: -12.738225936889648

Token 99: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20143039524555206
    2. 'a' → logprob: -1.7014304399490356
    3. '    ' → logprob: -12.201430320739746
    4. '	a' → logprob: -12.826430320739746
    5. '   ' → logprob: -12.951430320739746
    6. ' ' → logprob: -13.576430320739746
    7. ' (' → logprob: -13.701430320739746
    8. ' ' → logprob: -13.826430320739746
    9. '(a' → logprob: -13.951430320739746
    10. '1' → logprob: -13.951430320739746

Token 100: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.143808109802194e-05
    2. '[' → logprob: -10.250041007995605
    3. ' [' → logprob: -12.125041007995605
    4. '[
' → logprob: -15.750041007995605
    5. '[a' → logprob: -15.875041007995605
    6. ' ' → logprob: -16.500041961669922
    7. '   ' → logprob: -16.750041961669922
    8. 'a' → logprob: -17.000041961669922
    9. '[m' → logprob: -17.250041961669922
    10. ')[' → logprob: -17.250041961669922

Token 101: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5919835567474365
    2. ')' → logprob: -0.8419835567474365
    3. ']' → logprob: -4.466983795166016
    4. ' )' → logprob: -6.091983795166016
    5. ' ])' → logprob: -7.466983795166016
    6. ')%' → logprob: -7.841983795166016
    7. ')])' → logprob: -7.841983795166016
    8. ')]' → logprob: -8.341983795166016
    9. '   ' → logprob: -9.091983795166016
    10. '[i' → logprob: -9.091983795166016

Token 102: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0009328982559964061
    2. ' m' → logprob: -7.000932693481445
    3. '100' → logprob: -11.500932693481445
    4. ' ' → logprob: -12.625932693481445
    5. '(m' → logprob: -12.750932693481445
    6. '10' → logprob: -13.625932693481445
    7. '998' → logprob: -14.125932693481445
    8. ' (' → logprob: -14.250932693481445
    9. '(' → logprob: -14.250932693481445
    10. '101' → logprob: -15.000932693481445

Token 104: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00768683897331357
    2. '
' → logprob: -5.382686614990234
    3. '	return' → logprob: -6.632686614990234
    4. 'return' → logprob: -7.257686614990234
    5. '<|end|>' → logprob: -7.632686614990234
    6. ' return' → logprob: -7.757686614990234
    7. '    
' → logprob: -9.757686614990234
    8. '\n' → logprob: -11.132686614990234
    9. ':return' → logprob: -11.382686614990234
    10. '<|end|>' → logprob: -11.757686614990234

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022305480670183897
    2. '
' → logprob: -7.002230644226074
    3. 'return' → logprob: -7.502230644226074
    4. '	return' → logprob: -8.127230644226074
    5. '<|end|>' → logprob: -8.377230644226074
    6. '    
' → logprob: -9.002230644226074
    7. ' return' → logprob: -9.502230644226074
    8. '\n' → logprob: -11.252230644226074
    9. '```' → logprob: -12.252230644226074
    10. ':return' → logprob: -12.502230644226074

Token 106: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12915578484535217
    2. 'return' (adapté à ' return') → logprob: -2.1291558742523193
    3. ' return' → logprob: -6.37915563583374
    4. '
' → logprob: -8.004156112670898
    5. '	return' → logprob: -9.254156112670898
    6. '<|end|>' → logprob: -10.129156112670898
    7. '    
' → logprob: -10.754156112670898
    8. 'def' → logprob: -11.504156112670898
    9. ' ' → logprob: -11.629156112670898
    10. ':return' → logprob: -12.004156112670898

Token 107: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38687169551849365
    2. ' a' → logprob: -1.1368716955184937
    3. '	a' → logprob: -15.011871337890625
    4. '(a' → logprob: -16.386871337890625
    5. '_a' → logprob: -16.511871337890625
    6. ' ' → logprob: -17.011871337890625
    7. '[a' → logprob: -17.386871337890625
    8. ' ' → logprob: -17.761871337890625
    9. '#a' → logprob: -18.636871337890625
    10. ' а' → logprob: -18.886871337890625

Token 108: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -2.5776860184123507e-06
    2. '_c' → logprob: -13.75000286102295
    3. '_css' → logprob: -14.62500286102295
    4. 'cs' → logprob: -14.62500286102295
    5. '	cs' → logprob: -15.25000286102295
    6. '_' → logprob: -15.75000286102295
    7. '_cos' → logprob: -16.500001907348633
    8. '_CS' → logprob: -18.375001907348633
    9. '_cm' → logprob: -19.125001907348633
    10. '_cc' → logprob: -19.500001907348633

Token 109: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6876764297485352
    2. '<|end|>' → logprob: -0.9376764297485352
    3. '

' → logprob: -2.437676429748535
    4. '
' → logprob: -4.187676429748535
    5. '<|end|>' → logprob: -6.062676429748535
    6. '```' → logprob: -7.812676429748535
    7. '[' → logprob: -9.312676429748535
    8. ' def' → logprob: -9.312676429748535
    9. 'newline' → logprob: -10.312676429748535
    10. '#' → logprob: -10.562676429748535

Token 110: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002712738234549761
    2. '
' → logprob: -6.752712726593018
    3. '<|end|>' → logprob: -6.752712726593018
    4. '

' → logprob: -8.252713203430176
    5. '```' → logprob: -9.377713203430176
    6. '  
' → logprob: -11.752713203430176
    7. '<|end|>' → logprob: -12.752713203430176
    8. 'from' → logprob: -12.877713203430176
    9. '#' → logprob: -13.002713203430176
    10. '    
' → logprob: -13.127713203430176

Token 111: ' initialize' (ID: 18400)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1925365924835205
    2. 'max' → logprob: -2.0675365924835205
    3. ' find' → logprob: -3.5675365924835205
    4. ' maximum' → logprob: -5.192536354064941
    5. ' solve' → logprob: -5.692536354064941
    6. ' count' → logprob: -5.817536354064941
    7. 'count' → logprob: -6.692536354064941
    8. ' compute' → logprob: -6.692536354064941
    9. ' main' → logprob: -7.067536354064941
    10. ' maximize' → logprob: -7.317536354064941

Token 112: '_default' (ID: 21934)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.53098064661026
    2. '_array' → logprob: -2.5309805870056152
    3. '_table' → logprob: -3.2809805870056152
    4. '_' → logprob: -3.2809805870056152
    5. '_arrays' → logprob: -3.4059805870056152
    6. '_max' → logprob: -3.9059805870056152
    7. '(' → logprob: -4.030980587005615
    8. '_m' → logprob: -4.155980587005615
    9. '(n' → logprob: -4.280980587005615
    10. '_segment' → logprob: -4.405980587005615

Token 113: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.0017530106706544757
    2. '_dict' → logprob: -6.376752853393555
    3. '_value' → logprob: -11.251752853393555
    4. ' dict' → logprob: -11.501752853393555
    5. '_' → logprob: -12.751752853393555
    6. 'value' → logprob: -12.751752853393555
    7. 'd' → logprob: -12.876752853393555
    8. 's' → logprob: -13.001752853393555
    9. 'list' → logprob: -13.126752853393555
    10. '(dict' → logprob: -13.126752853393555

Token 114: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07304240763187408
    2. '():
' → logprob: -3.198042392730713
    3. '()' → logprob: -3.948042392730713
    4. ' ():' → logprob: -5.323042392730713
    5. ' ()' → logprob: -5.948042392730713
    6. '(' → logprob: -6.198042392730713
    7. '():

' → logprob: -7.823042392730713
    8. 'from' → logprob: -8.823042869567871
    9. 'import' → logprob: -9.823042869567871
    10. '():
' → logprob: -10.448042869567871

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7657908201217651
    2. 'from' → logprob: -0.7657908201217651
    3. ' from' → logprob: -2.8907909393310547
    4. 'import' → logprob: -4.265790939331055
    5. '```' → logprob: -8.265790939331055
    6. ' import' → logprob: -9.515790939331055
    7. ' defaultdict' → logprob: -9.890790939331055
    8. '()' → logprob: -10.765790939331055
    9. '(' → logprob: -10.890790939331055
    10. '
' → logprob: -11.015790939331055

Token 116: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.04572901874780655
    2. ' from' → logprob: -3.920728921890259
    3. 'import' → logprob: -4.420729160308838
    4. '   ' → logprob: -4.545729160308838
    5. 'return' → logprob: -7.170729160308838
    6. ' defaultdict' → logprob: -7.170729160308838
    7. ' return' → logprob: -8.04572868347168
    8. ' import' → logprob: -8.92072868347168
    9. 'default' → logprob: -9.04572868347168
    10. 'collections' → logprob: -10.17072868347168

Token 117: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.16022463142871857
    2. 'collections' → logprob: -1.9102246761322021
    3. '.collections' → logprob: -15.535224914550781
    4. ' ' → logprob: -16.28522491455078
    5. ' collection' → logprob: -16.53522491455078
    6. 'collection' → logprob: -16.66022491455078
    7. ' ' → logprob: -18.03522491455078
    8. 'collect' → logprob: -18.41022491455078
    9. '_col' → logprob: -18.78522491455078
    10. '   ' → logprob: -19.16022491455078

Token 118: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.009795641526579857
    2. ' import' → logprob: -4.634795665740967
    3. ' defaultdict' → logprob: -10.884795188903809
    4. 'default' → logprob: -11.009795188903809
    5. 'from' → logprob: -13.134795188903809
    6. ' ' → logprob: -14.509795188903809
    7. '```' → logprob: -15.009795188903809
    8. 'collections' → logprob: -15.384795188903809
    9. '	import' → logprob: -15.384795188903809
    10. '<|end|>' → logprob: -15.384795188903809

Token 119: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.0052350712940096855
    2. 'default' → logprob: -5.255235195159912
    3. ' default' → logprob: -13.880234718322754
    4. 'Default' → logprob: -15.880234718322754
    5. '"default' → logprob: -16.00523567199707
    6. '_default' → logprob: -17.63023567199707
    7. ''default' → logprob: -17.63023567199707
    8. ' Default' → logprob: -17.88023567199707
    9. '.default' → logprob: -18.00523567199707
    10. ' ' → logprob: -18.00523567199707

Token 120: '
' (ID: 198)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6444483399391174
    2. '()' → logprob: -1.6444482803344727
    3. '
' → logprob: -1.7694482803344727
    4. '<|end|>' → logprob: -3.2694482803344727
    5. '   ' → logprob: -3.3944482803344727
    6. ' defaultdict' → logprob: -3.8944482803344727
    7. 'def' → logprob: -4.894448280334473
    8. 'default' → logprob: -5.519448280334473
    9. '()

' → logprob: -6.269448280334473
    10. '    
' → logprob: -6.394448280334473

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4898448586463928
    2. '
' → logprob: -1.489844799041748
    3. '<|end|>' → logprob: -2.114844799041748
    4. '    
' → logprob: -3.989844799041748
    5. 'def' → logprob: -4.739844799041748
    6. ' defaultdict' → logprob: -5.239844799041748
    7. '

' → logprob: -6.489844799041748
    8. '<|end|>' → logprob: -6.614844799041748
    9. '()' → logprob: -6.739844799041748
    10. 'default' → logprob: -6.864844799041748

Token 122: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9458904266357422
    2. ' return' → logprob: -1.3208904266357422
    3. 'return' (adapté à ' return') → logprob: -2.445890426635742
    4. 'd' → logprob: -2.570890426635742
    5. ' d' → logprob: -3.570890426635742
    6. ' counter' → logprob: -4.195890426635742
    7. 'count' → logprob: -4.320890426635742
    8. 'def' → logprob: -4.320890426635742
    9. 'counts' → logprob: -4.320890426635742
    10. ' counts' → logprob: -4.445890426635742

Token 123: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.004621780011802912
    2. 'default' → logprob: -5.379621982574463
    3. ' default' → logprob: -15.254621505737305
    4. ' ' → logprob: -15.254621505737305
    5. 'Default' → logprob: -15.254621505737305
    6. '_default' → logprob: -15.379621505737305
    7. '"default' → logprob: -15.754621505737305
    8. 'collections' → logprob: -16.129621505737305
    9. '(default' → logprob: -16.129621505737305
    10. ''default' → logprob: -16.754621505737305

Token 124: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003961924463510513
    2. 'int' → logprob: -6.12896203994751
    3. '(lambda' → logprob: -6.37896203994751
    4. '(' → logprob: -10.378961563110352
    5. 'lambda' → logprob: -11.003961563110352
    6. '<int' → logprob: -11.253961563110352
    7. '(<' → logprob: -12.378961563110352
    8. '[int' → logprob: -12.628961563110352
    9. '(list' → logprob: -12.628961563110352
    10. 'list' → logprob: -12.753961563110352

Token 125: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.0
    3. ')
' → logprob: -17.875
    4. '))' → logprob: -19.375
    5. ')return' → logprob: -19.75
    6. ')`' → logprob: -19.75
    7. '())' → logprob: -19.875
    8. '),' → logprob: -21.0
    9. ')

' → logprob: -21.125
    10. ')}' → logprob: -21.25

Token 126: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6985828280448914
    2. 'count' → logprob: -1.3235828876495361
    3. ' update' → logprob: -2.198582887649536
    4. ' find' → logprob: -2.823582887649536
    5. ' main' → logprob: -3.948582887649536
    6. 'update' → logprob: -4.323582649230957
    7. ' solve' → logprob: -4.448582649230957
    8. ' process' → logprob: -5.198582649230957
    9. ' compute' → logprob: -5.323582649230957
    10. 'compute' → logprob: -5.948582649230957

Token 128: '_prefix' (ID: 33197)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.1357104480266571
    2. '_' → logprob: -2.6357104778289795
    3. '_prefix' → logprob: -3.8857104778289795
    4. '_max' → logprob: -4.3857102394104
    5. '(' → logprob: -5.0107102394104
    6. '_occ' → logprob: -5.2607102394104
    7. '_pairs' → logprob: -5.6357102394104
    8. 'sub' → logprob: -6.0107102394104
    9. '_s' → logprob: -7.2607102394104
    10. '_total' → logprob: -8.135710716247559

Token 129: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.023864807561039925
    2. 's' → logprob: -4.14886474609375
    3. '_sub' → logprob: -6.14886474609375
    4. '_mod' → logprob: -6.14886474609375
    5. 'es' → logprob: -6.89886474609375
    6. 'sum' → logprob: -7.14886474609375
    7. 'sub' → logprob: -7.77386474609375
    8. '_sum' → logprob: -8.27386474609375
    9. '_' → logprob: -8.52386474609375
    10. '_occ' → logprob: -8.52386474609375

Token 130: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.05550792068243027
    2. 'ub' → logprob: -3.0555078983306885
    3. 'uffix' → logprob: -5.555508136749268
    4. 'um' → logprob: -5.930508136749268
    5. 'ubl' → logprob: -8.80550765991211
    6. 'plits' → logprob: -9.80550765991211
    7. 'quares' → logprob: -10.18050765991211
    8. '```' → logprob: -10.43050765991211
    9. 'ubs' → logprob: -11.18050765991211
    10. 'uf' → logprob: -11.30550765991211

Token 131: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4522883892059326
    2. '(' → logprob: -1.2022883892059326
    3. '_' → logprob: -3.3272883892059326
    4. '_occ' → logprob: -4.827288627624512
    5. '_(' → logprob: -5.452288627624512
    6. '(_' → logprob: -5.827288627624512
    7. '_equal' → logprob: -5.952288627624512
    8. ' (' → logprob: -6.452288627624512
    9. '(prefix' → logprob: -6.577288627624512
    10. '_frequency' → logprob: -6.952288627624512

Token 132: '_cs' (ID: 82698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006338149309158325
    2. ',n' → logprob: -5.256338119506836
    3. ' ,' → logprob: -6.881338119506836
    4. ',m' → logprob: -11.131338119506836
    5. ',a' → logprob: -11.756338119506836
    6. 'def' → logprob: -11.881338119506836
    7. ')' → logprob: -11.881338119506836
    8. '   ' → logprob: -12.256338119506836
    9. ',
' → logprob: -12.756338119506836
    10. ',len' → logprob: -12.881338119506836

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6364938020706177
    2. '):' → logprob: -0.7614938020706177
    3. ' ,' → logprob: -6.261493682861328
    4. ' ):' → logprob: -6.886493682861328
    5. ')' → logprob: -8.261493682861328
    6. '):
' → logprob: -8.386493682861328
    7. ',m' → logprob: -8.636493682861328
    8. ',a' → logprob: -8.636493682861328
    9. ',n' → logprob: -10.761493682861328
    10. '   ' → logprob: -11.636493682861328

Token 134: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.048524677753448486
    2. 'n' → logprob: -3.7985246181488037
    3. ' m' → logprob: -3.9235246181488037
    4. 'default' → logprob: -6.423524856567383
    5. '   ' → logprob: -6.548524856567383
    6. ' n' → logprob: -6.798524856567383
    7. ' defaultdict' → logprob: -7.548524856567383
    8. 'a' → logprob: -8.923524856567383
    9. 'def' → logprob: -9.798524856567383
    10. 'd' → logprob: -9.923524856567383

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020370108541101217
    2. '):' → logprob: -6.627037048339844
    3. ' ,' → logprob: -7.377037048339844
    4. ',m' → logprob: -10.377037048339844
    5. ')' → logprob: -11.002037048339844
    6. '+' → logprob: -11.502037048339844
    7. ' ):' → logprob: -11.877037048339844
    8. '):
' → logprob: -12.252037048339844
    9. ',
' → logprob: -12.877037048339844
    10. 'm' → logprob: -12.877037048339844

Token 136: ' d' (ID: 272)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0036216892767697573
    2. ' m' → logprob: -5.628621578216553
    3. 'default' → logprob: -12.003622055053711
    4. 'from' → logprob: -12.503622055053711
    5. ')' → logprob: -12.878622055053711
    6. ' defaultdict' → logprob: -12.878622055053711
    7. '   ' → logprob: -13.378622055053711
    8. 'def' → logprob: -14.003622055053711
    9. 'initialize' → logprob: -14.003622055053711
    10. '<|end|>' → logprob: -14.128622055053711

Token 137: '):
' (ID: 1883)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.12478476017713547
    2. 'ict' → logprob: -2.8747847080230713
    3. '):' → logprob: -3.4997847080230713
    4. ')' → logprob: -3.8747847080230713
    5. 'ct' → logprob: -5.99978494644165
    6. 'f' → logprob: -6.12478494644165
    7. 'efs' → logprob: -6.37478494644165
    8. 'e' → logprob: -7.49978494644165
    9. 'ist' → logprob: -7.74978494644165
    10. 'eft' → logprob: -7.87478494644165

Token 138: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4673168659210205
    2. '):
' → logprob: -1.5923168659210205
    3. ':' → logprob: -1.8423168659210205
    4. '   ' → logprob: -5.217316627502441
    5. ':
' → logprob: -6.342316627502441
    6. '():' → logprob: -7.217316627502441
    7. '():
' → logprob: -7.217316627502441
    8. 'def' → logprob: -7.217316627502441
    9. ' :' → logprob: -7.842316627502441
    10. ')' → logprob: -7.842316627502441

Token 139: ' for' (ID: 395)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.2706197500228882
    2. 'count' → logprob: -1.3956197500228882
    3. '   ' → logprob: -1.7706197500228882
    4. ' counts' → logprob: -2.8956198692321777
    5. 'counts' → logprob: -3.2706198692321777
    6. ' d' → logprob: -3.5206198692321777
    7. ' counter' → logprob: -3.6456198692321777
    8. 'd' → logprob: -3.8956198692321777
    9. ' cnt' → logprob: -3.8956198692321777
    10. ' freq' → logprob: -4.145619869232178

Token 140: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3354926109313965
    2. ' i' → logprob: -1.3354926109313965
    3. 'prefix' → logprob: -5.3354926109313965
    4. ' prefix' → logprob: -5.4604926109313965
    5. 'x' → logprob: -5.7104926109313965
    6. ' x' → logprob: -6.0854926109313965
    7. ' value' → logprob: -6.7104926109313965
    8. ' val' → logprob: -6.9604926109313965
    9. 'value' → logprob: -7.0854926109313965
    10. ' cs' → logprob: -7.2104926109313965

Token 141: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010090951807796955
    2. 'in' → logprob: -4.6350908279418945
    3. ' ' → logprob: -8.510090827941895
    4. ',' → logprob: -9.260090827941895
    5. '  ' → logprob: -11.510090827941895
    6. ' ,' → logprob: -11.885090827941895
    7. '   ' → logprob: -12.135090827941895
    8. ')' → logprob: -12.635090827941895
    9. '_' → logprob: -13.635090827941895
    10. '    ' → logprob: -13.885090827941895

Token 142: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07019595056772232
    2. ' range' → logprob: -2.6951959133148193
    3. 'a' → logprob: -8.570196151733398
    4. ' a' → logprob: -10.320196151733398
    5. '   ' → logprob: -10.945196151733398
    6. ' ' → logprob: -11.695196151733398
    7. '(range' → logprob: -12.195196151733398
    8. '  ' → logprob: -13.195196151733398
    9. ')' → logprob: -14.320196151733398
    10. '	range' → logprob: -14.445196151733398

Token 143: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31450289487838745
    2. '(' → logprob: -1.3145029544830322
    3. '1' → logprob: -7.439502716064453
    4. 'n' → logprob: -7.939502716064453
    5. '(len' → logprob: -8.314502716064453
    6. ' (' → logprob: -11.314502716064453
    7. '   ' → logprob: -11.439502716064453
    8. ' n' → logprob: -11.814502716064453
    9. ' ' → logprob: -11.939502716064453
    10. 'len' → logprob: -12.689502716064453

Token 144: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01418207585811615
    2. '1' → logprob: -4.389182090759277
    3. ' n' → logprob: -6.639182090759277
    4. '   ' → logprob: -8.514182090759277
    5. 'len' → logprob: -9.014182090759277
    6. ' ' → logprob: -10.514182090759277
    7. '0' → logprob: -12.014182090759277
    8. '(n' → logprob: -13.389182090759277
    9. '
' → logprob: -13.514182090759277
    10. ' len' → logprob: -13.639182090759277

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000748398422729224
    2. ' ,' → logprob: -7.375748634338379
    3. ',n' → logprob: -9.125748634338379
    4. '   ' → logprob: -11.875748634338379
    5. '(n' → logprob: -13.000748634338379
    6. ',
' → logprob: -13.000748634338379
    7. ',len' → logprob: -14.750748634338379
    8. 'n' → logprob: -15.375748634338379
    9. '
' → logprob: -15.625748634338379
    10. ' ' → logprob: -15.625748634338379

Token 146: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06251184642314911
    2. ' n' → logprob: -2.812511920928955
    3. 'len' → logprob: -7.687511920928955
    4. ' len' → logprob: -9.437511444091797
    5. '   ' → logprob: -12.687511444091797
    6. '(n' → logprob: -14.062511444091797
    7. '	n' → logprob: -14.062511444091797
    8. ' ' → logprob: -14.687511444091797
    9. '
' → logprob: -15.562511444091797
    10. '_n' → logprob: -15.812511444091797

Token 147: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2525840997695923
    2. ' +' → logprob: -1.5025840997695923
    3. '):
' → logprob: -7.752583980560303
    4. '):' → logprob: -8.502584457397461
    5. '   ' → logprob: -10.877584457397461
    6. '+
' → logprob: -13.377584457397461
    7. ':' → logprob: -15.377584457397461
    8. ' +
' → logprob: -15.502584457397461
    9. '+n' → logprob: -15.502584457397461
    10. ')' → logprob: -15.627584457397461

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011212585377506912
    2. ' ' → logprob: -9.125112533569336
    3. ')' → logprob: -13.000112533569336
    4. '   ' → logprob: -14.250112533569336
    5. '):
' → logprob: -16.000112533569336
    6. '```' → logprob: -16.500112533569336
    7. '
' → logprob: -17.250112533569336
    8. '):' → logprob: -17.500112533569336
    9. '  ' → logprob: -18.750112533569336
    10. '2' → logprob: -19.000112533569336

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.11996734328568e-05
    2. ' ' → logprob: -10.125041007995605
    3. ')' → logprob: -15.000041007995605
    4. '+' → logprob: -15.250041007995605
    5. '   ' → logprob: -15.250041007995605
    6. 'len' → logprob: -16.125041961669922
    7. '```' → logprob: -16.375041961669922
    8. '2' → logprob: -16.750041961669922
    9. 'i' → logprob: -17.000041961669922
    10. '):
' → logprob: -17.500041961669922

Token 150: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47904661297798157
    2. '):
' → logprob: -0.9790465831756592
    3. ':' → logprob: -5.354046821594238
    4. ' ):' → logprob: -9.854046821594238
    5. '):
' → logprob: -9.979046821594238
    6. '   ' → logprob: -10.104046821594238
    7. ' ):
' → logprob: -10.354046821594238
    8. ':
' → logprob: -10.354046821594238
    9. ' :' → logprob: -11.604046821594238
    10. ')' → logprob: -11.854046821594238

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022147126495838165
    2. 'd' → logprob: -4.272147178649902
    3. '   ' → logprob: -5.272147178649902
    4. ' d' → logprob: -6.147147178649902
    5. ',' → logprob: -9.397147178649902
    6. ' if' → logprob: -9.647147178649902
    7. ')' → logprob: -9.647147178649902
    8. '    ' → logprob: -9.897147178649902
    9. '<|end|>' → logprob: -10.022147178649902
    10. ' defaultdict' → logprob: -10.147147178649902

Token 152: ' increment' (ID: 24032)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0496228002011776
    2. '       ' → logprob: -3.2996227741241455
    3. '   ' → logprob: -4.924623012542725
    4. ' d' → logprob: -5.674623012542725
    5. 'if' → logprob: -7.799623012542725
    6. 'count' → logprob: -9.299622535705566
    7. '           ' → logprob: -9.424622535705566
    8. 'key' → logprob: -9.924622535705566
    9. '    ' → logprob: -10.174622535705566
    10. 'for' → logprob: -10.674622535705566

Token 153: '_dict' (ID: 11295)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2929598391056061
    2. '_key' → logprob: -2.9179599285125732
    3. '_count' → logprob: -3.2929599285125732
    4. '=' → logprob: -3.4179599285125732
    5. '=d' → logprob: -3.6679599285125732
    6. '_value' → logprob: -3.7929599285125732
    7. 'd' → logprob: -3.9179599285125732
    8. '(d' → logprob: -4.542959690093994
    9. '[d' → logprob: -4.542959690093994
    10. 's' → logprob: -4.917959690093994

Token 154: '(d' (ID: 2572)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.04671787843108177
    2. '[d' → logprob: -3.296717882156372
    3. '[' → logprob: -5.796717643737793
    4. ' =' → logprob: -6.921717643737793
    5. '(a' → logprob: -7.046717643737793
    6. '   ' → logprob: -7.046717643737793
    7. ' [' → logprob: -7.796717643737793
    8. 'a' → logprob: -7.796717643737793
    9. '[(' → logprob: -8.046717643737793
    10. '()[' → logprob: -8.046717643737793

Token 155: ',' (ID: 11)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.054948072880506516
    2. ')[' → logprob: -3.429948091506958
    3. ',' → logprob: -3.929948091506958
    4. ',a' → logprob: -7.929947853088379
    5. '][' → logprob: -8.179947853088379
    6. 'a' → logprob: -8.554947853088379
    7. '[' → logprob: -8.554947853088379
    8. ')' → logprob: -8.804947853088379
    9. ' )[' → logprob: -10.429947853088379
    10. ' ,' → logprob: -10.679947853088379

Token 156: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01604246348142624
    2. ' a' → logprob: -4.141042232513428
    3. ')' → logprob: -12.266042709350586
    4. ' ' → logprob: -14.391042709350586
    5. '   ' → logprob: -14.516042709350586
    6. ')a' → logprob: -14.516042709350586
    7. '[a' → logprob: -15.016042709350586
    8. '(a' → logprob: -15.703542709350586
    9. '```' → logprob: -15.828542709350586
    10. '[' → logprob: -15.828542709350586

Token 157: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -5.6457742175552994e-05
    2. 'cs' → logprob: -10.125056266784668
    3. '_c' → logprob: -11.625056266784668
    4. 'a' → logprob: -13.125056266784668
    5. '_css' → logprob: -14.000056266784668
    6. '	cs' → logprob: -14.000056266784668
    7. '_' → logprob: -14.250056266784668
    8. '```' → logprob: -14.875056266784668
    9. '_CS' → logprob: -15.000056266784668
    10. '_cc' → logprob: -15.125056266784668

Token 158: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.0948158382670954e-05
    2. ')' → logprob: -11.375030517578125
    3. ' [' → logprob: -12.250030517578125
    4. '[' → logprob: -12.250030517578125
    5. 'i' → logprob: -13.250030517578125
    6. '```' → logprob: -13.375030517578125
    7. ')[' → logprob: -13.625030517578125
    8. ',i' → logprob: -14.250030517578125
    9. '
' → logprob: -14.375030517578125
    10. '(i' → logprob: -14.500030517578125

Token 159: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.010509109124541283
    2. ')' → logprob: -4.760509014129639
    3. ' ])' → logprob: -7.135509014129639
    4. ')]' → logprob: -7.760509014129639
    5. ')])' → logprob: -8.385509490966797
    6. ']' → logprob: -8.510509490966797
    7. ' )' → logprob: -9.385509490966797
    8. '])
' → logprob: -9.635509490966797
    9. '],' → logprob: -10.135509490966797
    10. '))' → logprob: -11.635509490966797

Token 160: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32858625054359436
    2. '<|end|>' → logprob: -1.578586220741272
    3. '   ' → logprob: -2.7035863399505615
    4. ' ' → logprob: -6.203586101531982
    5. ')' → logprob: -6.453586101531982
    6. '+' → logprob: -7.203586101531982
    7. '
' → logprob: -7.703586101531982
    8. '    
' → logprob: -7.828586101531982
    9. '#' → logprob: -8.07858657836914
    10. '    ' → logprob: -8.45358657836914

Token 161: ' increment' (ID: 24032)
  Prédit: ' increment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increment' → logprob: -0.21889780461788177
    2. ' def' → logprob: -2.343897819519043
    3. 'increment' → logprob: -2.468897819519043
    4. ' count' → logprob: -5.468897819519043
    5. '_increment' → logprob: -5.593897819519043
    6. 'def' → logprob: -5.968897819519043
    7. ' _' → logprob: -6.468897819519043
    8. ' initialize' → logprob: -6.718897819519043
    9. ' define' → logprob: -7.593897819519043
    10. ' ' → logprob: -7.593897819519043

Token 162: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.011789368465542793
    2. '_def' → logprob: -4.886789321899414
    3. 'def' → logprob: -5.886789321899414
    4. '_d' → logprob: -7.136789321899414
    5. '_default' → logprob: -8.511789321899414
    6. '(' → logprob: -8.761789321899414
    7. '_' → logprob: -9.636789321899414
    8. 'd' → logprob: -10.511789321899414
    9. 'dict' → logprob: -10.636789321899414
    10. '(d' → logprob: -10.761789321899414

Token 163: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.008649671450257301
    2. '(' → logprob: -4.758649826049805
    3. ' (' → logprob: -10.758649826049805
    4. '(dict' → logprob: -12.008649826049805
    5. '(def' → logprob: -12.758649826049805
    6. '(dictionary' → logprob: -12.883649826049805
    7. '(
' → logprob: -13.258649826049805
    8. '(a' → logprob: -15.883649826049805
    9. '(data' → logprob: -16.758649826049805
    10. 'def' → logprob: -16.883649826049805

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004950098809786141
    2. ' ,' → logprob: -7.625494956970215
    3. ',a' → logprob: -12.375494956970215
    4. '   ' → logprob: -15.125494956970215
    5. ',value' → logprob: -15.250494956970215
    6. ',d' → logprob: -15.250494956970215
    7. ',
' → logprob: -15.250494956970215
    8. ',key' → logprob: -15.250494956970215
    9. ' ' → logprob: -15.500494956970215
    10. 'a' → logprob: -15.875494956970215

Token 165: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.12958669662475586
    2. ' key' → logprob: -2.129586696624756
    3. 'value' → logprob: -6.254586696624756
    4. 'x' → logprob: -8.004587173461914
    5. 'val' → logprob: -9.379587173461914
    6. 'prefix' → logprob: -9.379587173461914
    7. ' value' → logprob: -9.629587173461914
    8. ' x' → logprob: -9.879587173461914
    9. 'a' → logprob: -10.254587173461914
    10. ')' → logprob: -10.879587173461914

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003237013006582856
    2. '):
' → logprob: -5.753237247467041
    3. ' ):' → logprob: -10.378236770629883
    4. ')' → logprob: -10.628236770629883
    5. '):
' → logprob: -12.878236770629883
    6. '   ' → logprob: -14.378236770629883
    7. '):

' → logprob: -15.128236770629883
    8. ':' → logprob: -15.878236770629883
    9. ' ' → logprob: -16.128236770629883
    10. ']:' → logprob: -16.753236770629883

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007744444068521261
    2. 'd' → logprob: -4.882744312286377
    3. ' d' → logprob: -9.007744789123535
    4. '	d' → logprob: -11.632744789123535
    5. '    
' → logprob: -13.007744789123535
    6. 'def' → logprob: -13.882744789123535
    7. '
' → logprob: -14.007744789123535
    8. '```' → logprob: -14.132744789123535
    9. '[' → logprob: -14.882744789123535
    10. '       ' → logprob: -15.132744789123535

Token 168: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.05679810792207718
    2. ' d' → logprob: -3.056798219680786
    3. '   ' → logprob: -4.806797981262207
    4. ' ' → logprob: -13.931797981262207
    5. '	d' → logprob: -14.056797981262207
    6. '
' → logprob: -14.306797981262207
    7. '  ' → logprob: -14.681797981262207
    8. '    
' → logprob: -15.931797981262207
    9. '    ' → logprob: -16.056798934936523
    10. '       ' → logprob: -16.931798934936523

Token 169: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0003364158037584275
    2. '[' → logprob: -8.000336647033691
    3. '```' → logprob: -15.000336647033691
    4. '\[' → logprob: -15.750336647033691
    5. '[...]' → logprob: -16.125335693359375
    6. 'key' → logprob: -16.250335693359375
    7. '[int' → logprob: -16.875335693359375
    8. ' [' → logprob: -16.875335693359375
    9. '_key' → logprob: -17.125335693359375
    10. '[k' → logprob: -17.250335693359375

Token 170: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.894790981779806e-05
    2. ']+=' → logprob: -10.000048637390137
    3. ' ]' → logprob: -12.625048637390137
    4. ')' → logprob: -15.625048637390137
    5. '[' → logprob: -17.375049591064453
    6. ']=' → logprob: -17.625049591064453
    7. ']+' → logprob: -18.125049591064453
    8. ')]' → logprob: -18.250049591064453
    9. '']' → logprob: -19.125049591064453
    10. '"]' → logprob: -19.125049591064453

Token 171: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3875816762447357
    2. ' +=' → logprob: -1.137581706047058
    3. '=' → logprob: -7.262581825256348
    4. ' =' → logprob: -12.137581825256348
    5. ']+=' → logprob: -12.762581825256348
    6. '+' → logprob: -15.262581825256348
    7. ' ' → logprob: -15.637581825256348
    8. '   ' → logprob: -15.887581825256348
    9. '[' → logprob: -16.01258087158203
    10. '```' → logprob: -16.51258087158203

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -18.250139236450195
    4. '```' → logprob: -19.625139236450195
    5. '  ' → logprob: -20.375139236450195
    6. '<|end|>' → logprob: -20.625139236450195
    7. '۱' → logprob: -21.375139236450195
    8. '0' → logprob: -21.750139236450195
    9. '１' → logprob: -21.750139236450195
    10. '+' → logprob: -22.062639236450195

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -19.875
    4. '<|end|>' → logprob: -20.25
    5. '   ' → logprob: -20.625
    6. '۱' → logprob: -21.375
    7. 'int' → logprob: -21.625
    8. '0' → logprob: -22.625
    9. '１' → logprob: -22.6875
    10. '
' → logprob: -22.6875

Token 174: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.763666947837919e-05
    2. '<|end|>' → logprob: -10.25004768371582
    3. '
' → logprob: -12.37504768371582
    4. '#' → logprob: -13.00004768371582
    5. '```' → logprob: -13.00004768371582
    6. 'from' → logprob: -13.25004768371582
    7. ' def' → logprob: -15.12504768371582
    8. '<|end|>' → logprob: -15.12504768371582
    9. 'import' → logprob: -15.75004768371582
    10. 'a' → logprob: -15.87504768371582

Token 176: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2974415421485901
    2. ' count' → logprob: -2.2974414825439453
    3. ' find' → logprob: -2.9224414825439453
    4. ' max' → logprob: -3.5474414825439453
    5. 'main' → logprob: -3.5474414825439453
    6. 'count' → logprob: -3.7974414825439453
    7. 'max' → logprob: -4.672441482543945
    8. ' compute' → logprob: -5.422441482543945
    9. ' solve' → logprob: -5.422441482543945
    10. ' calculate' → logprob: -7.047441482543945

Token 177: '_pairs' (ID: 90005)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.5184286832809448
    2. '_sub' → logprob: -1.7684286832809448
    3. '_total' → logprob: -2.2684288024902344
    4. '_result' → logprob: -2.3934288024902344
    5. '_sum' → logprob: -4.893428802490234
    6. '_answer' → logprob: -5.018428802490234
    7. '_count' → logprob: -5.143428802490234
    8. '_' → logprob: -5.268428802490234
    9. '_prefix' → logprob: -5.768428802490234
    10. 'max' → logprob: -5.893428802490234

Token 178: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0006172468420118093
    2. '(' → logprob: -7.500617027282715
    3. '(a' → logprob: -10.125617027282715
    4. '(def' → logprob: -10.875617027282715
    5. ' (' → logprob: -13.000617027282715
    6. 'def' → logprob: -14.125617027282715
    7. '(
' → logprob: -14.125617027282715
    8. '(s' → logprob: -14.250617027282715
    9. '(n' → logprob: -14.875617027282715
    10. '():' → logprob: -16.87561798095703

Token 179: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014298430643975735
    2. '):
' → logprob: -4.264298439025879
    3. ',' → logprob: -9.139298439025879
    4. ' ):' → logprob: -11.014298439025879
    5. '):
' → logprob: -12.639298439025879
    6. ')' → logprob: -13.014298439025879
    7. '   ' → logprob: -13.139298439025879
    8. ',d' → logprob: -14.139298439025879
    9. '):

' → logprob: -14.139298439025879
    10. ' ' → logprob: -14.889298439025879

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19826485216617584
    2. 'pairs' → logprob: -2.3232648372650146
    3. 'total' → logprob: -3.6982648372650146
    4. 'result' → logprob: -3.6982648372650146
    5. 'count' → logprob: -4.448265075683594
    6. ' pairs' → logprob: -4.698265075683594
    7. ' result' → logprob: -5.948265075683594
    8. ' total' → logprob: -5.948265075683594
    9. 'res' → logprob: -6.198265075683594
    10. 'pair' → logprob: -6.573265075683594

Token 181: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9291383624076843
    2. 'total' → logprob: -1.429138422012329
    3. 'pairs' → logprob: -1.804138422012329
    4. 'result' → logprob: -2.554138422012329
    5. 'count' → logprob: -3.054138422012329
    6. ' total' → logprob: -3.304138422012329
    7. ' result' → logprob: -4.30413818359375
    8. ' pairs' → logprob: -4.30413818359375
    9. 'res' → logprob: -5.42913818359375
    10. ' count' → logprob: -5.55413818359375

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890377938747406
    2. '=' → logprob: -2.5789036750793457
    3. ' ' → logprob: -11.828904151916504
    4. ',' → logprob: -12.453904151916504
    5. '   ' → logprob: -13.828904151916504
    6. '_' → logprob: -14.203904151916504
    7. '  ' → logprob: -14.578904151916504
    8. ' +=' → logprob: -14.953904151916504
    9. 'def' → logprob: -16.578903198242188
    10. 's' → logprob: -16.703903198242188

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.125335693359375
    4. 'sum' → logprob: -17.500335693359375
    5. '  ' → logprob: -18.750335693359375
    6. 'int' → logprob: -18.812835693359375
    7. '۰' → logprob: -19.375335693359375
    8. ' ' → logprob: -19.375335693359375
    9. '```' → logprob: -19.437835693359375
    10. '=' → logprob: -19.687835693359375

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'sum' → logprob: -16.000003814697266
    4. '   ' → logprob: -16.875003814697266
    5. 'int' → logprob: -17.500003814697266
    6. '[' → logprob: -19.000003814697266
    7. '```' → logprob: -19.000003814697266
    8. '(' → logprob: -19.687503814697266
    9. '=' → logprob: -19.812503814697266
    10. '
' → logprob: -19.937503814697266

Token 185: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07916968315839767
    2. '
' → logprob: -2.579169750213623
    3. ' for' → logprob: -8.829169273376465
    4. 'for' → logprob: -9.454169273376465
    5. '    
' → logprob: -10.329169273376465
    6. '<|end|>' → logprob: -11.704169273376465
    7. '
' → logprob: -12.454169273376465
    8. ',' → logprob: -12.954169273376465
    9. ' ' → logprob: -13.454169273376465
    10. ',
' → logprob: -13.579169273376465

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026791063137352467
    2. 'for' → logprob: -6.002678871154785
    3. ' for' → logprob: -8.502678871154785
    4. ' ' → logprob: -15.377678871154785
    5. 'def' → logprob: -15.877678871154785
    6. '	for' → logprob: -16.6276798248291
    7. '
' → logprob: -16.7526798248291
    8. '  ' → logprob: -17.3776798248291
    9. '       ' → logprob: -17.6276798248291
    10. '    
' → logprob: -18.2526798248291

Token 187: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.56233171664644e-05
    2. ' for' → logprob: -10.375055313110352
    3. '   ' → logprob: -10.625055313110352
    4. ' ' → logprob: -17.25005531311035
    5. 'from' → logprob: -18.37505531311035
    6. '  ' → logprob: -18.50005531311035
    7. '
' → logprob: -18.75005531311035
    8. '	for' → logprob: -19.12505531311035
    9. '```' → logprob: -19.12505531311035
    10. 'def' → logprob: -19.37505531311035

Token 188: ' k' (ID: 372)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.9305232167243958
    2. 'key' → logprob: -1.805523157119751
    3. 'v' → logprob: -2.305523157119751
    4. 'count' → logprob: -2.305523157119751
    5. ' key' → logprob: -2.430523157119751
    6. ' value' → logprob: -2.680523157119751
    7. ' count' → logprob: -3.680523157119751
    8. ' v' → logprob: -3.930523157119751
    9. ' val' → logprob: -4.05552339553833
    10. 'val' → logprob: -4.55552339553833

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4883192181587219
    2. ' in' → logprob: -0.9883192181587219
    3. 'in' → logprob: -4.488319396972656
    4. ' ,' → logprob: -6.238319396972656
    5. ',v' → logprob: -7.738319396972656
    6. ',d' → logprob: -7.988319396972656
    7. ',in' → logprob: -9.613319396972656
    8. 'd' → logprob: -10.488319396972656
    9. ',value' → logprob: -11.113319396972656
    10. ' ' → logprob: -11.238319396972656

Token 190: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03806409612298012
    2. ' v' → logprob: -3.2880640029907227
    3. 'count' → logprob: -10.913064002990723
    4. 'cnt' → logprob: -13.038064002990723
    5. ' count' → logprob: -13.788064002990723
    6. '	v' → logprob: -14.788064002990723
    7. ' cnt' → logprob: -15.663064002990723
    8. 'value' → logprob: -15.913064002990723
    9. 'val' → logprob: -16.03806495666504
    10. 'c' → logprob: -16.03806495666504

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018179206177592278
    2. 'in' → logprob: -4.018179416656494
    3. ' ' → logprob: -10.893178939819336
    4. '   ' → logprob: -12.518178939819336
    5. 'n' → logprob: -13.643178939819336
    6. '	in' → logprob: -14.018178939819336
    7. ',' → logprob: -14.393178939819336
    8. 's' → logprob: -14.643178939819336
    9. '  ' → logprob: -14.768178939819336
    10. '
' → logprob: -14.768178939819336

Token 192: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5231264233589172
    2. 'd' → logprob: -0.8981264233589172
    3. '
' → logprob: -14.523126602172852
    4. '	d' → logprob: -14.648126602172852
    5. ' ' → logprob: -14.773126602172852
    6. '(d' → logprob: -15.023126602172852
    7. ')d' → logprob: -15.148126602172852
    8. '```' → logprob: -15.148126602172852
    9. ' in' → logprob: -15.398126602172852
    10. '   ' → logprob: -16.33562660217285

Token 193: '.items' (ID: 19607)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033951565623283386
    2. 'in' → logprob: -3.4089515209198
    3. ' ' → logprob: -9.033951759338379
    4. '   ' → logprob: -9.658951759338379
    5. 'items' → logprob: -10.283951759338379
    6. 'values' → logprob: -10.783951759338379
    7. '```' → logprob: -11.408951759338379
    8. '.items' → logprob: -11.908951759338379
    9. ',' → logprob: -12.158951759338379
    10. '  ' → logprob: -12.283951759338379

Token 194: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001270589418709278
    2. '():
' → logprob: -7.251270771026611
    3. '()' → logprob: -7.501270771026611
    4. ' ():' → logprob: -12.626270294189453
    5. '(' → logprob: -13.501270294189453
    6. '():

' → logprob: -13.626270294189453
    7. ':' → logprob: -13.876270294189453
    8. '():
' → logprob: -14.126270294189453
    9. '()>' → logprob: -16.251270294189453
    10. '()}' → logprob: -16.376270294189453

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003480454906821251
    2. ' if' → logprob: -5.753480434417725
    3. '   ' → logprob: -8.878480911254883
    4. 'if' → logprob: -9.253480911254883
    5. ' ans' → logprob: -10.628480911254883
    6. 'ans' → logprob: -10.753480911254883
    7. '```' → logprob: -11.878480911254883
    8. ',' → logprob: -12.003480911254883
    9. '(ans' → logprob: -12.878480911254883
    10. '	ans' → logprob: -13.378480911254883

Token 196: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6774224042892456
    2. ' ans' → logprob: -1.4274224042892456
    3. 'ans' (adapté à ' ans') → logprob: -1.9274224042892456
    4. ' if' → logprob: -2.427422523498535
    5. 'if' → logprob: -4.427422523498535
    6. '       ' → logprob: -5.302422523498535
    7. '	ans' → logprob: -6.802422523498535
    8. '(ans' → logprob: -8.802422523498535
    9. '    ' → logprob: -10.177422523498535
    10. '           ' → logprob: -10.177422523498535

Token 197: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10175611078739166
    2. '+=' → logprob: -2.3517560958862305
    3. '+=(' → logprob: -6.4767560958862305
    4. '   ' → logprob: -11.85175609588623
    5. '```' → logprob: -14.47675609588623
    6. '    ' → logprob: -14.72675609588623
    7. ']+=' → logprob: -14.97675609588623
    8. '+' → logprob: -15.22675609588623
    9. '	' → logprob: -15.35175609588623
    10. '
' → logprob: -15.47675609588623

Token 198: ' part' (ID: 997)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011961601674556732
    2. '(v' → logprob: -4.636961460113525
    3. ' v' → logprob: -6.136961460113525
    4. '(' → logprob: -10.386961936950684
    5. ' (' → logprob: -11.636961936950684
    6. '   ' → logprob: -14.011961936950684
    7. '	v' → logprob: -14.386961936950684
    8. ' ' → logprob: -15.386961936950684
    9. '_v' → logprob: -16.011960983276367
    10. '[v' → logprob: -16.386960983276367

Token 199: '_con' (ID: 7531)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.02484511211514473
    2. '[v' → logprob: -4.024845123291016
    3. '(' → logprob: -6.274845123291016
    4. ' v' → logprob: -6.649845123291016
    5. 'itions' → logprob: -7.274845123291016
    6. 'v' → logprob: -7.274845123291016
    7. 'ition' → logprob: -7.774845123291016
    8. '   ' → logprob: -8.149845123291016
    9. '*v' → logprob: -8.149845123291016
    10. ' (' → logprob: -8.274845123291016

Token 200: 'tribution' (ID: 7090)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5970089435577393
    2. '(v' → logprob: -1.2220089435577393
    3. 'binations' → logprob: -3.3470089435577393
    4. 'tributions' → logprob: -3.4720089435577393
    5. 'trib' → logprob: -3.4720089435577393
    6. 'ib' → logprob: -4.59700870513916
    7. 'n' → logprob: -4.59700870513916
    8. '[v' → logprob: -4.84700870513916
    9. 'tribution' → logprob: -5.09700870513916
    10. 'rib' → logprob: -5.22200870513916

Token 201: '(d' (ID: 2572)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6966702342033386
    2. '(v' → logprob: -0.9466702342033386
    3. '[v' → logprob: -2.8216702938079834
    4. ' v' → logprob: -3.0716702938079834
    5. '   ' → logprob: -5.821670055389404
    6. '=' → logprob: -6.946670055389404
    7. '=v' → logprob: -6.946670055389404
    8. ' =' → logprob: -7.571670055389404
    9. 's' → logprob: -7.946670055389404
    10. '(' → logprob: -8.321670532226562

Token 202: ',' (ID: 11)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.290713906288147
    2. '(k' → logprob: -1.415713906288147
    3. '[key' → logprob: -5.415713787078857
    4. ')' → logprob: -6.665713787078857
    5. '[v' → logprob: -7.165713787078857
    6. 'k' → logprob: -7.415713787078857
    7. ',' → logprob: -7.665713787078857
    8. ',k' → logprob: -7.915713787078857
    9. '(key' → logprob: -8.290714263916016
    10. '{k' → logprob: -8.415714263916016

Token 203: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28764885663986206
    2. 'v' → logprob: -1.4126489162445068
    3. ' k' → logprob: -5.412648677825928
    4. ' v' → logprob: -6.287648677825928
    5. ')' → logprob: -10.162649154663086
    6. '   ' → logprob: -10.787649154663086
    7. ' ' → logprob: -11.037649154663086
    8. ')v' → logprob: -11.287649154663086
    9. '(k' → logprob: -11.725149154663086
    10. '  ' → logprob: -11.975149154663086

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1472981721162796
    2. ')' → logprob: -2.0222980976104736
    3. ',v' → logprob: -5.522298336029053
    4. ' ,' → logprob: -8.272297859191895
    5. ' )' → logprob: -9.272297859191895
    6. ')v' → logprob: -9.522297859191895
    7. ')*' → logprob: -9.897297859191895
    8. 'v' → logprob: -10.147297859191895
    9. '   ' → logprob: -10.897297859191895
    10. ')
' → logprob: -11.022297859191895

Token 205: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011055837385356426
    2. ' v' → logprob: -4.511055946350098
    3. '2' → logprob: -13.011055946350098
    4. ')v' → logprob: -13.261055946350098
    5. '   ' → logprob: -13.886055946350098
    6. '[v' → logprob: -14.136055946350098
    7. ')' → logprob: -14.261055946350098
    8. ' ' → logprob: -14.636055946350098
    9. '	v' → logprob: -15.011055946350098
    10. '
' → logprob: -15.136055946350098

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009656535112299025
    2. ' )' → logprob: -7.625965595245361
    3. ',' → logprob: -8.50096607208252
    4. '   ' → logprob: -9.25096607208252
    5. '       ' → logprob: -9.62596607208252
    6. ')
' → logprob: -10.00096607208252
    7. ' -' → logprob: -11.00096607208252
    8. '-' → logprob: -11.12596607208252
    9. ' *' → logprob: -12.00096607208252
    10. ' ' → logprob: -12.00096607208252

Token 207: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3715599477291107
    2. '
' → logprob: -1.621559977531433
    3. 'v' → logprob: -2.3715598583221436
    4. '(v' → logprob: -4.746560096740723
    5. '   ' → logprob: -5.246560096740723
    6. ' v' → logprob: -6.496560096740723
    7. 'return' → logprob: -6.621560096740723
    8. '        
' → logprob: -7.871560096740723
    9. '    
' → logprob: -8.246560096740723
    10. '       ' → logprob: -8.246560096740723

Token 208: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3020598888397217
    2. 'def' → logprob: -1.4270598888397217
    3. '   ' → logprob: -1.8020598888397217
    4. 'v' → logprob: -1.9270598888397217
    5. 'return' (adapté à ' return') → logprob: -2.9270598888397217
    6. '    
' → logprob: -3.1770598888397217
    7. ' return' → logprob: -3.5520598888397217
    8. ' 
' → logprob: -3.9270598888397217
    9. ' def' → logprob: -4.552060127258301
    10. ' v' → logprob: -4.677060127258301

Token 209: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4741007387638092
    2. ' ans' → logprob: -0.9741007089614868
    3. '(ans' → logprob: -10.724101066589355
    4. '	ans' → logprob: -14.099101066589355
    5. 'int' → logprob: -14.724101066589355
    6. '0' → logprob: -15.599101066589355
    7. '   ' → logprob: -15.599101066589355
    8. '_ans' → logprob: -16.09910011291504
    9. ' ' → logprob: -17.09910011291504
    10. ' ' → logprob: -17.59910011291504

Token 210: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0442131944000721
    2. '
' → logprob: -3.66921329498291
    3. '

' → logprob: -4.16921329498291
    4. ' def' → logprob: -7.16921329498291
    5. '(' → logprob: -7.79421329498291
    6. '```' → logprob: -8.16921329498291
    7. '*' → logprob: -8.79421329498291
    8. '   ' → logprob: -9.04421329498291
    9. '(lambda' → logprob: -9.66921329498291
    10. '<|end|>' → logprob: -9.79421329498291

Token 211: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0047887153923511505
    2. '   ' → logprob: -6.129788875579834
    3. ' def' → logprob: -6.754788875579834
    4. '       ' → logprob: -7.129788875579834
    5. 'v' → logprob: -7.754788875579834
    6. '
' → logprob: -9.629788398742676
    7. '```' → logprob: -10.379788398742676
    8. ' v' → logprob: -10.629788398742676
    9. '(v' → logprob: -11.254788398742676
    10. ' ' → logprob: -11.754788398742676

Token 212: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.12863507866859436
    2. 'part' → logprob: -2.1286351680755615
    3. ' pair' → logprob: -7.878634929656982
    4. ' def' → logprob: -8.25363540649414
    5. ' calculate' → logprob: -8.50363540649414
    6. 'pair' → logprob: -9.12863540649414
    7. 'def' → logprob: -9.12863540649414
    8. '_part' → logprob: -9.50363540649414
    9. 'calculate' → logprob: -9.62863540649414
    10. ' count' → logprob: -9.75363540649414

Token 213: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -1.3306015716807451e-05
    2. '_def' → logprob: -13.00001335144043
    3. 'def' → logprob: -13.37501335144043
    4. '_cont' → logprob: -14.00001335144043
    5. ' _' → logprob: -14.12501335144043
    6. '_count' → logprob: -14.25001335144043
    7. '_' → logprob: -14.25001335144043
    8. '```' → logprob: -14.25001335144043
    9. 's' → logprob: -14.37501335144043
    10. '\' → logprob: -14.50001335144043

Token 214: 'tribution' (ID: 7090)
  Prédit: 'tribution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tribution' → logprob: -0.062154777348041534
    2. 'rib' → logprob: -2.812154769897461
    3. 'trib' → logprob: -9.437154769897461
    4. 'Trib' → logprob: -10.937154769897461
    5. 'Contribution' → logprob: -11.062154769897461
    6. '_' → logprob: -11.312154769897461
    7. 'tri' → logprob: -11.562154769897461
    8. '(' → logprob: -11.562154769897461
    9. 't' → logprob: -11.687154769897461
    10. ' trib' → logprob: -11.937154769897461

Token 215: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0003954033018089831
    2. '(' → logprob: -8.250395774841309
    3. '(_,' → logprob: -9.125395774841309
    4. '(def' → logprob: -12.000395774841309
    5. 'def' → logprob: -12.375395774841309
    6. '(
' → logprob: -12.500395774841309
    7. '(k' → logprob: -12.500395774841309
    8. 'd' → logprob: -12.750395774841309
    9. '(dict' → logprob: -13.750395774841309
    10. ' (' → logprob: -14.000395774841309

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014239625306800008
    2. ',k' → logprob: -9.250142097473145
    3. ' ,' → logprob: -10.000142097473145
    4. ',key' → logprob: -14.875142097473145
    5. 'k' → logprob: -15.875142097473145
    6. '   ' → logprob: -16.37514305114746
    7. ',
' → logprob: -16.62514305114746
    8. '_,' → logprob: -16.87514305114746
    9. '(k' → logprob: -16.87514305114746
    10. ' k' → logprob: -17.12514305114746

Token 217: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004213620908558369
    2. 'key' → logprob: -5.629213809967041
    3. ' k' → logprob: -7.504213809967041
    4. ' key' → logprob: -10.254213333129883
    5. '_k' → logprob: -11.629213333129883
    6. '_' → logprob: -11.629213333129883
    7. '_,' → logprob: -12.379213333129883
    8. '_key' → logprob: -12.629213333129883
    9. '   ' → logprob: -14.504213333129883
    10. 'd' → logprob: -15.004213333129883

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010931886499747634
    2. ',v' → logprob: -7.00109338760376
    3. ' ,' → logprob: -8.626092910766602
    4. ',
' → logprob: -14.126092910766602
    5. '   ' → logprob: -14.376092910766602
    6. 'v' → logprob: -15.001092910766602
    7. '_,' → logprob: -16.1260929107666
    8. '):
' → logprob: -16.1260929107666
    9. '),' → logprob: -16.5010929107666
    10. '):' → logprob: -16.5010929107666

Token 219: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004233801271766424
    2. ' v' → logprob: -5.5042338371276855
    3. 'd' → logprob: -9.504233360290527
    4. 'k' → logprob: -10.254233360290527
    5. ')' → logprob: -11.629233360290527
    6. 'def' → logprob: -12.129233360290527
    7. ')v' → logprob: -12.254233360290527
    8. 'lambda' → logprob: -12.504233360290527
    9. 'value' → logprob: -12.754233360290527
    10. '):
' → logprob: -12.754233360290527

Token 220: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869052231311798
    2. '):
' → logprob: -1.1369051933288574
    3. '):
' → logprob: -10.511905670166016
    4. '):

' → logprob: -13.136905670166016
    5. '   ' → logprob: -13.261905670166016
    6. ':' → logprob: -13.386905670166016
    7. ')' → logprob: -13.636905670166016
    8. ',' → logprob: -15.761905670166016
    9. 'v' → logprob: -16.011905670166016
    10. ' ):' → logprob: -16.386905670166016

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.421798437833786
    2. 'return' → logprob: -1.2967984676361084
    3. 'v' → logprob: -2.7967984676361084
    4. ' return' → logprob: -4.671798229217529
    5. ' v' → logprob: -8.796798706054688
    6. '(v' → logprob: -9.171798706054688
    7. 'if' → logprob: -10.546798706054688
    8. ' ' → logprob: -10.796798706054688
    9. 'def' → logprob: -11.296798706054688
    10. '
' → logprob: -11.296798706054688

Token 222: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02529771625995636
    2. 'v' → logprob: -3.9002976417541504
    3. ' return' → logprob: -6.27529764175415
    4. 'if' (adapté à ' if') → logprob: -6.52529764175415
    5. '   ' → logprob: -7.27529764175415
    6. '(v' → logprob: -7.40029764175415
    7. 'ans' → logprob: -10.400298118591309
    8. 'def' → logprob: -11.775298118591309
    9. 'result' → logprob: -11.900298118591309
    10. '((' → logprob: -11.900298118591309

Token 223: ' k' (ID: 372)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.22636263072490692
    2. 'v' → logprob: -1.6013625860214233
    3. ' k' → logprob: -7.976362705230713
    4. 'k' → logprob: -8.101362228393555
    5. 'd' → logprob: -9.726362228393555
    6. '(v' → logprob: -9.851362228393555
    7. ' isinstance' → logprob: -9.851362228393555
    8. ' d' → logprob: -10.101362228393555
    9. 'False' → logprob: -11.538862228393555
    10. '_v' → logprob: -11.538862228393555

Token 224: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4316542148590088
    2. '==' → logprob: -1.0566542148590088
    3. ')' → logprob: -7.43165397644043
    4. '>' → logprob: -7.55665397644043
    5. ' ' → logprob: -7.68165397644043
    6. ' in' → logprob: -8.43165397644043
    7. ':' → logprob: -8.55665397644043
    8. '=' → logprob: -8.93165397644043
    9. ' not' → logprob: -8.93165397644043
    10. '[' → logprob: -8.93165397644043

Token 225: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00862627848982811
    2. ' ' → logprob: -4.758626461029053
    3. '   ' → logprob: -12.821125984191895
    4. '1' → logprob: -13.008625984191895
    5. 'v' → logprob: -13.383625984191895
    6. 'd' → logprob: -13.883625984191895
    7. '  ' → logprob: -14.946125984191895
    8. 'None' → logprob: -15.008625984191895
    9. 'k' → logprob: -15.071125984191895
    10. 'a' → logprob: -15.196125984191895

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005550591740757227
    2. ' ' → logprob: -7.500555038452148
    3. '1' → logprob: -14.125555038452148
    4. 'v' → logprob: -15.250555038452148
    5. '   ' → logprob: -15.688055038452148
    6. 'None' → logprob: -15.813055038452148
    7. 'k' → logprob: -15.875555038452148
    8. 'd' → logprob: -15.875555038452148
    9. '2' → logprob: -17.43805503845215
    10. '00' → logprob: -17.50055503845215

Token 227: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10912980139255524
    2. ':' → logprob: -2.3591299057006836
    3. ' or' → logprob: -4.734129905700684
    4. '   ' → logprob: -10.484129905700684
    5. ':return' → logprob: -10.609129905700684
    6. ' and' → logprob: -11.484129905700684
    7. ' :
' → logprob: -11.984129905700684
    8. '):
' → logprob: -12.109129905700684
    9. 'or' → logprob: -12.359129905700684
    10. ':

' → logprob: -12.359129905700684

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01331622339785099
    2. ' return' → logprob: -5.2633161544799805
    3. '   ' → logprob: -5.8883161544799805
    4. 'return' → logprob: -5.8883161544799805
    5. 'v' → logprob: -6.3883161544799805
    6. ' v' → logprob: -7.3883161544799805
    7. '
' → logprob: -9.26331615447998
    8. '      ' → logprob: -10.88831615447998
    9. '           ' → logprob: -11.26331615447998
    10. '     ' → logprob: -11.26331615447998

Token 229: ' return' (ID: 622)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7161637544631958
    2. 'ans' → logprob: -0.8411637544631958
    3. 'return' (adapté à ' return') → logprob: -2.7161636352539062
    4. '       ' → logprob: -5.341163635253906
    5. ' ans' → logprob: -5.716163635253906
    6. '   ' → logprob: -5.841163635253906
    7. '           ' → logprob: -7.091163635253906
    8. '
' → logprob: -7.091163635253906
    9. ' return' → logprob: -7.841163635253906
    10. '(ans' → logprob: -7.966163635253906

Token 230: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00755953649058938
    2. '(v' → logprob: -5.132559299468994
    3. ' v' → logprob: -6.757559299468994
    4. '(' → logprob: -8.132559776306152
    5. '0' → logprob: -9.632559776306152
    6. ' (' → logprob: -9.632559776306152
    7. '   ' → logprob: -11.132559776306152
    8. '((' → logprob: -12.007559776306152
    9. '1' → logprob: -12.132559776306152
    10. ' ' → logprob: -13.132559776306152

Token 231: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.062941774725914
    2. ' *' → logprob: -2.812941789627075
    3. '*(' → logprob: -6.937941551208496
    4. '*v' → logprob: -13.312941551208496
    5. ' ' → logprob: -14.062941551208496
    6. '+' → logprob: -14.687941551208496
    7. '**' → logprob: -15.562941551208496
    8. '(v' → logprob: -16.187942504882812
    9. ' ' → logprob: -16.312942504882812
    10. 'def' → logprob: -16.812942504882812

Token 232: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0009411195642314851
    2. ' (' → logprob: -7.125941276550293
    3. '(' → logprob: -9.500941276550293
    4. '(n' → logprob: -10.250941276550293
    5. '   ' → logprob: -11.500941276550293
    6. '
' → logprob: -12.375941276550293
    7. '(m' → logprob: -12.500941276550293
    8. 'v' → logprob: -12.750941276550293
    9. ' ' → logprob: -13.375941276550293
    10. '  ' → logprob: -14.250941276550293

Token 233: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03831527754664421
    2. '(v' → logprob: -3.2883152961730957
    3. ' v' → logprob: -8.538314819335938
    4. ' (' → logprob: -10.038314819335938
    5. '   ' → logprob: -10.913314819335938
    6. '(' → logprob: -12.913314819335938
    7. '[v' → logprob: -13.038314819335938
    8. '
' → logprob: -13.163314819335938
    9. ' ' → logprob: -13.163314819335938
    10. '	v' → logprob: -13.163314819335938

Token 234: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47413912415504456
    2. '-' → logprob: -0.9741390943527222
    3. '+' → logprob: -10.599139213562012
    4. ' +' → logprob: -11.349139213562012
    5. ' ' → logprob: -11.474139213562012
    6. '   ' → logprob: -12.349139213562012
    7. '1' → logprob: -12.349139213562012
    8. ')' → logprob: -13.224139213562012
    9. '<|end|>' → logprob: -13.599139213562012
    10. '  ' → logprob: -14.099139213562012

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019372005481272936
    2. ' ' → logprob: -6.251937389373779
    3. ')' → logprob: -12.126936912536621
    4. '
' → logprob: -13.751936912536621
    5. '-' → logprob: -14.001936912536621
    6. '<|end|>' → logprob: -14.751936912536621
    7. '```' → logprob: -15.126936912536621
    8. '   ' → logprob: -15.376936912536621
    9. ' -' → logprob: -16.001937866210938
    10. '...' → logprob: -16.751937866210938

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.875003814697266
    3. '
' → logprob: -14.625003814697266
    4. ')' → logprob: -15.750003814697266
    5. '```' → logprob: -17.625003814697266
    6. 'def' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.250003814697266
    8. '-' → logprob: -18.500003814697266
    9. '

' → logprob: -18.875003814697266
    10. '  ' → logprob: -19.750003814697266

Token 237: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004941754741594195
    2. ')//' → logprob: -7.750494003295898
    3. ' )' → logprob: -9.750494003295898
    4. ' //' → logprob: -12.875494003295898
    5. '//' → logprob: -13.000494003295898
    6. '   ' → logprob: -15.625494003295898
    7. ')
' → logprob: -16.2504940032959
    8. '")' → logprob: -18.2504940032959
    9. ')`' → logprob: -18.2504940032959
    10. '```' → logprob: -18.3754940032959

Token 238: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2521594166755676
    2. '//' → logprob: -1.5021593570709229
    3. '   ' → logprob: -8.502159118652344
    4. ' ' → logprob: -11.877159118652344
    5. '()' → logprob: -12.002159118652344
    6. '  ' → logprob: -12.627159118652344
    7. '```' → logprob: -12.752159118652344
    8. ')' → logprob: -13.252159118652344
    9. '#' → logprob: -13.627159118652344
    10. '
' → logprob: -13.627159118652344

Token 239: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '
' → logprob: -18.750001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '```' → logprob: -20.000001907348633
    6. '

' → logprob: -21.125001907348633
    7. '۲' → logprob: -21.375001907348633
    8. '1' → logprob: -21.750001907348633
    9. '  ' → logprob: -21.750001907348633
    10. '<|end|>' → logprob: -22.125001907348633

Token 240: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -18.0
    4. '   ' → logprob: -19.5
    5. '```' → logprob: -19.875
    6. '1' → logprob: -21.0
    7. '۲' → logprob: -21.375
    8. '{' → logprob: -21.625
    9. '

' → logprob: -21.625
    10. '202' → logprob: -22.125

Token 241: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028902292251586914
    2. '
' → logprob: -6.002890110015869
    3. 'else' → logprob: -8.002890586853027
    4. ' else' → logprob: -10.127890586853027
    5. 'return' → logprob: -11.002890586853027
    6. '    
' → logprob: -11.127890586853027
    7. '       ' → logprob: -12.752890586853027
    8. ' return' → logprob: -13.752890586853027
    9. '  
' → logprob: -14.002890586853027
    10. '<|end|>' → logprob: -14.002890586853027

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031055594445206225
    2. 'else' → logprob: -8.375310897827148
    3. 'return' → logprob: -9.500310897827148
    4. '
' → logprob: -13.125310897827148
    5. ' else' → logprob: -13.250310897827148
    6. ' return' → logprob: -14.375310897827148
    7. '       ' → logprob: -14.625310897827148
    8. '    
' → logprob: -16.00031089782715
    9. ' ' → logprob: -16.50031089782715
    10. 'elif' → logprob: -16.62531089782715

Token 243: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4805203676223755
    2. 'else' (adapté à ' else') → logprob: -0.9805203676223755
    3. '   ' → logprob: -5.980520248413086
    4. ' return' → logprob: -5.980520248413086
    5. ' else' → logprob: -6.605520248413086
    6. ' ' → logprob: -12.480520248413086
    7. '```' → logprob: -12.730520248413086
    8. 'elif' → logprob: -12.980520248413086
    9. '
' → logprob: -13.355520248413086
    10. '	return' → logprob: -14.105520248413086

Token 244: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2701275050640106
    2. '       ' → logprob: -2.145127534866333
    3. ' return' → logprob: -2.395127534866333
    4. 'return' → logprob: -3.645127534866333
    5. ':' → logprob: -6.520127296447754
    6. ':
' → logprob: -8.520127296447754
    7. ':return' → logprob: -8.520127296447754
    8. '    ' → logprob: -9.520127296447754
    9. ' ' → logprob: -9.520127296447754
    10. '  ' → logprob: -9.645127296447754

Token 245: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12262383848428726
    2. '   ' → logprob: -2.497623920440674
    3. ' return' → logprob: -4.122623920440674
    4. 'v' → logprob: -4.122623920440674
    5. '       ' → logprob: -7.372623920440674
    6. ' v' → logprob: -10.497623443603516
    7. '    ' → logprob: -10.497623443603516
    8. '  ' → logprob: -11.747623443603516
    9. ' ' → logprob: -11.872623443603516
    10. '           ' → logprob: -11.997623443603516

Token 246: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02437787875533104
    2. ' return' → logprob: -3.7743778228759766
    3. '   ' → logprob: -6.899377822875977
    4. '       ' → logprob: -9.524377822875977
    5. 'v' → logprob: -10.024377822875977
    6. '
' → logprob: -13.399377822875977
    7. '    ' → logprob: -13.524377822875977
    8. ' ' → logprob: -14.149377822875977
    9. '           ' → logprob: -14.149377822875977
    10. '  ' → logprob: -14.774377822875977

Token 247: ' d' (ID: 272)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.14782045781612396
    2. ' v' → logprob: -2.397820472717285
    3. 'k' → logprob: -3.897820472717285
    4. 'd' → logprob: -3.897820472717285
    5. ' d' → logprob: -5.772820472717285
    6. ' k' → logprob: -6.647820472717285
    7. '(v' → logprob: -7.397820472717285
    8. ' (' → logprob: -8.522820472717285
    9. '0' → logprob: -8.897820472717285
    10. '(k' → logprob: -9.147820472717285

Token 248: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.002352337818592787
    2. '[key' → logprob: -6.377352237701416
    3. '.get' → logprob: -7.377352237701416
    4. 'k' → logprob: -11.252352714538574
    5. '[' → logprob: -11.627352714538574
    6. 'get' → logprob: -14.377352714538574
    7. ' k' → logprob: -15.252352714538574
    8. '[v' → logprob: -15.252352714538574
    9. '(k' → logprob: -15.377352714538574
    10. '.__' → logprob: -16.002351760864258

Token 249: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.668854832649231
    2. ' >' → logprob: -0.918854832649231
    3. ']' → logprob: -3.2938547134399414
    4. ' >=' → logprob: -3.6688547134399414
    5. '>=' → logprob: -4.543854713439941
    6. ']>' → logprob: -5.543854713439941
    7. ']>=' → logprob: -5.793854713439941
    8. ')' → logprob: -6.168854713439941
    9. '[' → logprob: -6.793854713439941
    10. '-' → logprob: -7.168854713439941

Token 250: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6463690400123596
    2. ' >' → logprob: -1.6463689804077148
    3. '>=' → logprob: -1.8963689804077148
    4. ' >=' → logprob: -2.021368980407715
    5. 'v' → logprob: -8.396368980407715
    6. ' ' → logprob: -9.146368980407715
    7. '<|end|>' → logprob: -9.521368980407715
    8. '==' → logprob: -9.771368980407715
    9. '=' → logprob: -9.771368980407715
    10. ' <' → logprob: -10.521368980407715

Token 251: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003240816527977586
    2. ' ' → logprob: -5.878240585327148
    3. '0' → logprob: -8.253240585327148
    4. 'v' → logprob: -8.878240585327148
    5. '=' → logprob: -11.003240585327148
    6. '   ' → logprob: -12.128240585327148
    7. '2' → logprob: -12.440740585327148
    8. ' v' → logprob: -13.440740585327148
    9. ' =' → logprob: -13.940740585327148
    10. '>' → logprob: -14.128240585327148

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05363468825817108
    2. '0' → logprob: -3.4286346435546875
    3. 'v' → logprob: -3.9286346435546875
    4. '=' → logprob: -10.053634643554688
    5. ' ' → logprob: -10.303634643554688
    6. '2' → logprob: -11.178634643554688
    7. 'd' → logprob: -11.178634643554688
    8. 'k' → logprob: -12.553634643554688
    9. ' v' → logprob: -13.178634643554688
    10. '=v' → logprob: -13.178634643554688

Token 253: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39385315775871277
    2. ':
' → logprob: -1.2688531875610352
    3. '           ' → logprob: -3.143853187561035
    4. '       ' → logprob: -7.393853187561035
    5. ':

' → logprob: -8.268853187561035
    6. ',' → logprob: -9.143853187561035
    7. ':return' → logprob: -9.393853187561035
    8. ' and' → logprob: -9.518853187561035
    9. '):
' → logprob: -10.393853187561035
    10. '   ' → logprob: -10.768853187561035

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016286444151774049
    2. 'return' → logprob: -7.126628875732422
    3. ' return' → logprob: -7.126628875732422
    4. '       ' → logprob: -11.001628875732422
    5. '               ' → logprob: -13.376628875732422
    6. '          ' → logprob: -14.251628875732422
    7. '	       ' → logprob: -14.501628875732422
    8. '         ' → logprob: -14.876628875732422
    9. '   ' → logprob: -15.376628875732422
    10. '		' → logprob: -15.751628875732422

Token 255: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011593196541070938
    2. ' return' → logprob: -5.011593341827393
    3. '           ' → logprob: -5.386593341827393
    4. 'v' → logprob: -8.386592864990234
    5. '   ' → logprob: -10.136592864990234
    6. '       ' → logprob: -11.261592864990234
    7. '               ' → logprob: -13.136592864990234
    8. '(v' → logprob: -13.136592864990234
    9. '         ' → logprob: -13.636592864990234
    10. '          ' → logprob: -14.261592864990234

Token 256: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005426085088402033
    2. ' v' → logprob: -5.505425930023193
    3. '(v' → logprob: -6.630425930023193
    4. '   ' → logprob: -11.255426406860352
    5. ' (' → logprob: -12.005426406860352
    6. '(' → logprob: -12.880426406860352
    7. ' ' → logprob: -13.505426406860352
    8. 'd' → logprob: -14.255426406860352
    9. '           ' → logprob: -14.255426406860352
    10. '    ' → logprob: -14.255426406860352

Token 257: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004134203307330608
    2. 'd' → logprob: -5.629134178161621
    3. '(v' → logprob: -8.004134178161621
    4. ' v' → logprob: -9.004134178161621
    5. '(d' → logprob: -9.629134178161621
    6. '   ' → logprob: -12.504134178161621
    7. ' d' → logprob: -13.004134178161621
    8. '(' → logprob: -13.379134178161621
    9. ' (' → logprob: -14.754134178161621
    10. 'k' → logprob: -14.879134178161621

Token 258: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3203853964805603
    2. '*' → logprob: -1.320385456085205
    3. '-' → logprob: -6.070385456085205
    4. ' -' → logprob: -6.320385456085205
    5. ')' → logprob: -6.445385456085205
    6. ' ' → logprob: -7.445385456085205
    7. '*(' → logprob: -7.570385456085205
    8. '   ' → logprob: -9.195384979248047
    9. '    ' → logprob: -9.570384979248047
    10. ' )' → logprob: -10.445384979248047

Token 259: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000628683075774461
    2. ' ' → logprob: -7.375628471374512
    3. '
' → logprob: -13.750628471374512
    4. '   ' → logprob: -14.250628471374512
    5. '  ' → logprob: -16.875629425048828
    6. '0' → logprob: -16.875629425048828
    7. '

' → logprob: -17.125629425048828
    8. '```' → logprob: -17.313129425048828
    9. '    ' → logprob: -17.438129425048828
    10. ')' → logprob: -17.750629425048828

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.289473822107539e-05
    2. ' ' → logprob: -9.750062942504883
    3. '
' → logprob: -12.875062942504883
    4. '   ' → logprob: -14.937562942504883
    5. '

' → logprob: -15.312562942504883
    6. ')' → logprob: -15.812562942504883
    7. '0' → logprob: -16.000062942504883
    8. '2' → logprob: -16.562562942504883
    9. '...' → logprob: -16.750062942504883
    10. '  ' → logprob: -16.812562942504883

Token 261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0046503725461661816
    2. ')*' → logprob: -5.504650592803955
    3. '*' → logprob: -7.879650592803955
    4. ' )' → logprob: -9.254650115966797
    5. ' *' → logprob: -9.504650115966797
    6. '   ' → logprob: -11.504650115966797
    7. '+' → logprob: -12.504650115966797
    8. ')*(' → logprob: -12.879650115966797
    9. ' ' → logprob: -13.629650115966797
    10. '    ' → logprob: -14.004650115966797

Token 262: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759623050689697
    2. ' *' → logprob: -0.8259623050689697
    3. ' ' → logprob: -11.20096206665039
    4. '*v' → logprob: -12.07596206665039
    5. '+' → logprob: -13.82596206665039
    6. '*(' → logprob: -14.20096206665039
    7. ' ' → logprob: -14.82596206665039
    8. 'v' → logprob: -15.57596206665039
    9. ')' → logprob: -15.57596206665039
    10. ')*' → logprob: -15.70096206665039

Token 263: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0017789494013413787
    2. ' v' → logprob: -6.376779079437256
    3. '(' → logprob: -10.126778602600098
    4. '(v' → logprob: -10.626778602600098
    5. '1' → logprob: -11.876778602600098
    6. ' (' → logprob: -12.751778602600098
    7. '   ' → logprob: -13.751778602600098
    8. ' ' → logprob: -14.751778602600098
    9. '	v' → logprob: -15.126778602600098
    10. '
' → logprob: -15.626778602600098

Token 264: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5759704113006592
    2. '//' → logprob: -0.8259704113006592
    3. '   ' → logprob: -10.825970649719238
    4. '       ' → logprob: -12.700970649719238
    5. '```' → logprob: -12.825970649719238
    6. '           ' → logprob: -13.700970649719238
    7. ' ' → logprob: -13.700970649719238
    8. '0' → logprob: -14.700970649719238
    9. '2' → logprob: -14.700970649719238
    10. '
' → logprob: -15.075970649719238

Token 265: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -15.750006675720215
    4. '1' → logprob: -17.50000762939453
    5. '
' → logprob: -17.75000762939453
    6. '```' → logprob: -18.50000762939453
    7. '۲' → logprob: -19.18750762939453
    8. 'def' → logprob: -19.50000762939453
    9. '  ' → logprob: -20.00000762939453
    10. '           ' → logprob: -20.31250762939453

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -17.000003814697266
    4. '۲' → logprob: -17.750003814697266
    5. '
' → logprob: -18.500003814697266
    6. '```' → logprob: -18.625003814697266
    7. '<|end|>' → logprob: -19.312503814697266
    8. '1' → logprob: -19.375003814697266
    9. '२' → logprob: -19.750003814697266
    10. 'def' → logprob: -19.812503814697266

Token 267: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28454670310020447
    2. '   ' → logprob: -1.4095467329025269
    3. '<|end|>' → logprob: -6.409546852111816
    4. ' else' → logprob: -8.034546852111816
    5. 'else' → logprob: -8.159546852111816
    6. '	' → logprob: -8.159546852111816
    7. '
' → logprob: -8.409546852111816
    8. '	return' → logprob: -8.659546852111816
    9. '	else' → logprob: -9.159546852111816
    10. ' return' → logprob: -9.284546852111816

Token 268: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4264969229698181
    2. 'return' (adapté à ' return') → logprob: -1.801496982574463
    3. '
' → logprob: -2.551496982574463
    4. '<|end|>' → logprob: -3.426496982574463
    5. ' return' → logprob: -3.676496982574463
    6. '0' → logprob: -3.801496982574463
    7. '\n' → logprob: -4.426496982574463
    8. ' ' → logprob: -4.926496982574463
    9. '\' → logprob: -6.176496982574463
    10. ')' → logprob: -7.801496982574463

Token 270: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -20.62506675720215
    4. '۰' → logprob: -21.50006675720215
    5. '00' → logprob: -21.62506675720215
    6. '000' → logprob: -22.00006675720215
    7. '1' → logprob: -22.37506675720215
    8. '
' → logprob: -22.50006675720215
    9. '```' → logprob: -22.81256675720215
    10. '  ' → logprob: -23.06256675720215

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۰' → logprob: -20.5
    4. '00' → logprob: -20.625
    5. '<|end|>' → logprob: -21.25
    6. '000' → logprob: -21.375
    7. '```' → logprob: -21.625
    8. '   ' → logprob: -21.875
    9. '
' → logprob: -22.375
    10. '(' → logprob: -23.4375

Token 272: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026360645424574614
    2. '#' → logprob: -6.502635955810547
    3. 'n' → logprob: -8.127635955810547
    4. 'from' → logprob: -8.627635955810547
    5. 'a' → logprob: -8.877635955810547
    6. 'read' → logprob: -9.002635955810547
    7. '<|end|>' → logprob: -9.252635955810547
    8. 'd' → logprob: -9.252635955810547
    9. 'input' → logprob: -9.502635955810547
    10. '```' → logprob: -10.127635955810547

Token 274: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2527129054069519
    2. ' main' → logprob: -1.5027129650115967
    3. 'solve' → logprob: -7.502712726593018
    4. ' solve' → logprob: -8.627713203430176
    5. 'def' → logprob: -11.002713203430176
    6. 'solution' → logprob: -11.627713203430176
    7. 'calculate' → logprob: -12.002713203430176
    8. 'count' → logprob: -12.252713203430176
    9. 'process' → logprob: -12.502713203430176
    10. ' solution' → logprob: -12.877713203430176

Token 275: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021310284733772278
    2. '(ans' → logprob: -3.896310329437256
    3. '('' → logprob: -7.896310329437256
    4. '("' → logprob: -8.896309852600098
    5. '(
' → logprob: -9.271309852600098
    6. '(answer' → logprob: -10.021309852600098
    7. '("("' → logprob: -10.396309852600098
    8. ' (' → logprob: -10.771309852600098
    9. '(

' → logprob: -11.396309852600098
    10. '()' → logprob: -11.646309852600098

Token 276: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.08198938518762589
    2. '(result' → logprob: -3.456989288330078
    3. '(' → logprob: -3.581989288330078
    4. '():' → logprob: -4.081989288330078
    5. '(answer' → logprob: -6.706989288330078
    6. '()' → logprob: -7.581989288330078
    7. '(output' → logprob: -8.206989288330078
    8. ' (' → logprob: -8.456989288330078
    9. '():
' → logprob: -8.706989288330078
    10. '(def' → logprob: -10.706989288330078

Token 277: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07925481349229813
    2. '):
' → logprob: -2.5792548656463623
    3. ')' → logprob: -7.954254627227783
    4. '):
' → logprob: -11.454255104064941
    5. ':' → logprob: -13.579255104064941
    6. '):

' → logprob: -14.079255104064941
    7. ' ):' → logprob: -14.454255104064941
    8. ',' → logprob: -15.204255104064941
    9. '   ' → logprob: -15.329255104064941
    10. ')
' → logprob: -17.079254150390625

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017724325880408287
    2. 'print' → logprob: -4.517724514007568
    3. ' print' → logprob: -5.017724514007568
    4. '```' → logprob: -10.26772403717041
    5. 'def' → logprob: -18.017724990844727
    6. '	print' → logprob: -18.142724990844727
    7. '`' → logprob: -18.267724990844727
    8. '    ' → logprob: -18.767724990844727
    9. '``' → logprob: -18.767724990844727
    10. '    
' → logprob: -19.017724990844727

Token 279: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.6240566083070007e-06
    2. ' print' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.000001907348633
    4. '```' → logprob: -17.000001907348633
    5. 'def' → logprob: -21.125001907348633
    6. '
' → logprob: -21.500001907348633
    7. '`' → logprob: -22.500001907348633
    8. 'pr' → logprob: -22.750001907348633
    9. 'pass' → logprob: -23.500001907348633
    10. 'prin' → logprob: -24.250001907348633

Token 280: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.375015258789062
    3. 'ans' → logprob: -12.625015258789062
    4. ' (' → logprob: -15.500015258789062
    5. '(answer' → logprob: -15.625015258789062
    6. '()' → logprob: -15.625015258789062
    7. '	ans' → logprob: -17.500015258789062
    8. '(
' → logprob: -19.000015258789062
    9. '(abs' → logprob: -19.125015258789062
    10. '(result' → logprob: -19.125015258789062

Token 281: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.875001907348633
    4. '())' → logprob: -16.250001907348633
    5. ')`' → logprob: -16.250001907348633
    6. '()' → logprob: -16.500001907348633
    7. '))' → logprob: -18.000001907348633
    8. '')' → logprob: -18.125001907348633
    9. '`)' → logprob: -18.625001907348633
    10. '),' → logprob: -19.000001907348633

Token 282: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.700132997939363e-05
    2. '<|end|>' → logprob: -11.375017166137695
    3. '#' → logprob: -13.125017166137695
    4. '```' → logprob: -13.375017166137695
    5. 'if' → logprob: -13.750017166137695
    6. ' def' → logprob: -15.250017166137695
    7. 'ndef' → logprob: -15.375017166137695
    8. 'n' → logprob: -15.875017166137695
    9. 'for' → logprob: -16.375017166137695
    10. '
' → logprob: -16.625017166137695

Token 283: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.38751286268234253
    2. ' main' → logprob: -1.1375129222869873
    3. 'def' → logprob: -7.387512683868408
    4. ' def' → logprob: -11.012513160705566
    5. 'solve' → logprob: -13.387513160705566
    6. ' solve' → logprob: -13.512513160705566
    7. 'read' → logprob: -13.637513160705566
    8. 'run' → logprob: -14.762513160705566
    9. 'if' → logprob: -14.762513160705566
    10. 'process' → logprob: -15.262513160705566

Token 284: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000305310997646302
    2. '():
' → logprob: -8.12530517578125
    3. ' ():' → logprob: -12.00030517578125
    4. '()' → logprob: -13.00030517578125
    5. '(' → logprob: -14.62530517578125
    6. '():
' → logprob: -15.62530517578125
    7. '():

' → logprob: -16.37530517578125
    8. '_' → logprob: -16.50030517578125
    9. 'def' → logprob: -17.75030517578125
    10. ':' → logprob: -17.75030517578125

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7321730256080627
    2. ' input' → logprob: -0.8571730256080627
    3. 'input' → logprob: -2.357172966003418
    4. ' line' → logprob: -10.732172966003418
    5. ' n' → logprob: -11.482172966003418
    6. 'n' → logprob: -11.732172966003418
    7. 'line' → logprob: -11.982172966003418
    8. ' ' → logprob: -11.982172966003418
    9. '	input' → logprob: -11.982172966003418
    10. '(input' → logprob: -11.982172966003418

Token 286: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.25906670093536377
    2. ' input' → logprob: -1.7590667009353638
    3. '   ' → logprob: -2.884066581726074
    4. ' ' → logprob: -10.634066581726074
    5. 'line' → logprob: -10.634066581726074
    6. 'n' → logprob: -11.009066581726074
    7. '  ' → logprob: -11.759066581726074
    8. '	input' → logprob: -11.759066581726074
    9. '
' → logprob: -12.134066581726074
    10. ' n' → logprob: -12.134066581726074

Token 287: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00020616286201402545
    2. '_' → logprob: -8.750205993652344
    3. '()' → logprob: -10.125205993652344
    4. 'line' → logprob: -12.000205993652344
    5. '_l' → logprob: -14.250205993652344
    6. '_LINE' → logprob: -16.000205993652344
    7. '_input' → logprob: -16.250205993652344
    8. '_lines' → logprob: -16.375205993652344
    9. 'Line' → logprob: -16.625205993652344
    10. '_Line' → logprob: -16.625205993652344

Token 288: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889022678136826
    2. ' =' → logprob: -2.578890323638916
    3. '=input' → logprob: -15.828889846801758
    4. '   ' → logprob: -15.828889846801758
    5. '()' → logprob: -16.328889846801758
    6. ' ' → logprob: -16.578889846801758
    7. '_' → logprob: -17.703889846801758
    8. ',' → logprob: -17.828889846801758
    9. '＝' → logprob: -18.453889846801758
    10. 's' → logprob: -18.453889846801758

Token 289: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10027793794870377
    2. ' =' → logprob: -2.350277900695801
    3. '()' → logprob: -9.6002779006958
    4. ' ' → logprob: -13.3502779006958
    5. '(' → logprob: -13.9752779006958
    6. ' ()' → logprob: -14.9752779006958
    7. ')' → logprob: -15.6002779006958
    8. '=input' → logprob: -15.7252779006958
    9. '   ' → logprob: -15.8502779006958
    10. '_' → logprob: -15.8502779006958

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868752717971802
    2. '=' → logprob: -1.1368752717971802
    3. ',' → logprob: -13.13687515258789
    4. ' ' → logprob: -13.76187515258789
    5. '   ' → logprob: -14.38687515258789
    6. '=input' → logprob: -15.76187515258789
    7. ' ' → logprob: -16.01187515258789
    8. ' =
' → logprob: -16.63687515258789
    9. '()' → logprob: -16.63687515258789
    10. ')' → logprob: -16.76187515258789

Token 291: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.009766949340701103
    2. ' read' → logprob: -4.634767055511475
    3. 'input' → logprob: -11.634766578674316
    4. ' input' → logprob: -13.509766578674316
    5. ' ' → logprob: -15.259766578674316
    6. '   ' → logprob: -15.759766578674316
    7. '	read' → logprob: -15.759766578674316
    8. '  ' → logprob: -16.384767532348633
    9. '(read' → logprob: -17.009767532348633
    10. 'parse' → logprob: -18.509767532348633

Token 292: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.051689110696315765
    2. '_input' → logprob: -3.0516891479492188
    3. '()
' → logprob: -6.551689147949219
    4. '_line' → logprob: -7.051689147949219
    5. '_' → logprob: -7.801689147949219
    6. 'input' → logprob: -8.926689147949219
    7. 'line' → logprob: -9.301689147949219
    8. '())' → logprob: -9.426689147949219
    9. ')' → logprob: -9.801689147949219
    10. ' ()' → logprob: -12.426689147949219

Token 293: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005618501454591751
    2. '()
' → logprob: -7.500561714172363
    3. '().' → logprob: -12.750561714172363
    4. '()

' → logprob: -13.125561714172363
    5. '())' → logprob: -13.250561714172363
    6. '()
' → logprob: -14.250561714172363
    7. ')' → logprob: -15.125561714172363
    8. '(' → logprob: -15.375561714172363
    9. '()`' → logprob: -15.375561714172363
    10. '()\' → logprob: -15.375561714172363

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0650671124458313
    2. 'input' → logprob: -2.8150670528411865
    3. 'n' → logprob: -6.440067291259766
    4. '
' → logprob: -7.065067291259766
    5. ' input' → logprob: -7.940067291259766
    6. '    
' → logprob: -9.190067291259766
    7. ' n' → logprob: -9.940067291259766
    8. '```' → logprob: -10.565067291259766
    9. '<|end|>' → logprob: -10.940067291259766
    10. '[input' → logprob: -11.315067291259766

Token 295: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.018868224695324898
    2. '   ' → logprob: -4.018868446350098
    3. ' n' → logprob: -7.268868446350098
    4. '	n' → logprob: -11.768868446350098
    5. '  ' → logprob: -12.393868446350098
    6. 'input' → logprob: -13.268868446350098
    7. '```' → logprob: -13.893868446350098
    8. ' ' → logprob: -14.018868446350098
    9. '(n' → logprob: -14.268868446350098
    10. ',' → logprob: -14.393868446350098

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001153674442321062
    2. '_str' → logprob: -7.376153469085693
    3. '_,' → logprob: -8.251153945922852
    4. '_' → logprob: -9.626153945922852
    5. ' ,' → logprob: -9.751153945922852
    6. '=' → logprob: -10.501153945922852
    7. ',_' → logprob: -11.001153945922852
    8. ',input' → logprob: -11.001153945922852
    9. ',n' → logprob: -11.251153945922852
    10. '<|end|>' → logprob: -11.501153945922852

Token 297: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.34935906529426575
    2. 'm' → logprob: -1.2243590354919434
    3. ' input' → logprob: -7.724359035491943
    4. 'input' → logprob: -8.474359512329102
    5. '<|end|>' → logprob: -8.599359512329102
    6. ' parse' → logprob: -10.224359512329102
    7. 'parse' → logprob: -11.099359512329102
    8. ' ' → logprob: -11.224359512329102
    9. '    ' → logprob: -12.599359512329102
    10. '<|end|>' → logprob: -12.724359512329102

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269284337759018
    2. '=' → logprob: -2.1269283294677734
    3. '=parse' → logprob: -14.876928329467773
    4. ',' → logprob: -17.376928329467773
    5. ')' → logprob: -17.751928329467773
    6. '=input' → logprob: -18.001928329467773
    7. ' ' → logprob: -18.376928329467773
    8. '   ' → logprob: -18.876928329467773
    9. 'parse' → logprob: -19.251928329467773
    10. ' =
' → logprob: -19.501928329467773

Token 299: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.03804171830415726
    2. 'parse' → logprob: -3.288041830062866
    3. '(parse' → logprob: -16.038042068481445
    4. '=parse' → logprob: -16.413042068481445
    5. '	parse' → logprob: -17.663042068481445
    6. '_parse' → logprob: -18.538042068481445
    7. '.parse' → logprob: -19.538042068481445
    8. 'n' → logprob: -21.538042068481445
    9. ' parses' → logprob: -22.038042068481445
    10. ' parsed' → logprob: -22.538042068481445

Token 300: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00161733478307724
    2. '_' → logprob: -6.501617431640625
    3. '(input' → logprob: -9.251617431640625
    4. '(' → logprob: -12.126617431640625
    5. '(n' → logprob: -12.376617431640625
    6. ' ' → logprob: -12.751617431640625
    7. 'n' → logprob: -12.876617431640625
    8. '```' → logprob: -13.751617431640625
    9. 'input' → logprob: -14.376617431640625
    10. '_input' → logprob: -14.626617431640625

Token 301: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0037312027998268604
    2. '_' → logprob: -5.8787312507629395
    3. '_line' → logprob: -7.0037312507629395
    4. '_input' → logprob: -12.253730773925781
    5. '_l' → logprob: -12.503730773925781
    6. '_ml' → logprob: -13.503730773925781
    7. '_str' → logprob: -13.628730773925781
    8. ' _' → logprob: -14.003730773925781
    9. 'm' → logprob: -14.128730773925781
    10. 'input' → logprob: -14.628730773925781

Token 302: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.607391408877447e-05
    2. '(' → logprob: -10.375036239624023
    3. 'input' → logprob: -12.750036239624023
    4. ' (' → logprob: -13.375036239624023
    5. '(read' → logprob: -15.625036239624023
    6. '()' → logprob: -16.000036239624023
    7. ',input' → logprob: -17.625036239624023
    8. '(
' → logprob: -17.875036239624023
    9. '=input' → logprob: -18.000036239624023
    10. ' input' → logprob: -18.000036239624023

Token 303: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.007628757506608963
    2. '_' → logprob: -4.882628917694092
    3. 'line' → logprob: -11.757628440856934
    4. '1' → logprob: -12.382628440856934
    5. 'Line' → logprob: -13.007628440856934
    6. ')' → logprob: -13.007628440856934
    7. ')_' → logprob: -13.257628440856934
    8. '```' → logprob: -13.757628440856934
    9. '_LINE' → logprob: -14.132628440856934
    10. ' _' → logprob: -14.132628440856934

Token 304: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005346827092580497
    2. '1' → logprob: -7.875534534454346
    3. ')' → logprob: -9.875535011291504
    4. '_line' → logprob: -10.000535011291504
    5. '()' → logprob: -11.250535011291504
    6. '(' → logprob: -11.750535011291504
    7. '   ' → logprob: -11.750535011291504
    8. '```' → logprob: -12.000535011291504
    9. '())' → logprob: -12.250535011291504
    10. ')_' → logprob: -12.875535011291504

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018610459519550204
    2. 'input' → logprob: -6.751861095428467
    3. '(input' → logprob: -7.876861095428467
    4. '_' → logprob: -8.251860618591309
    5. ' ' → logprob: -11.376860618591309
    6. 'line' → logprob: -11.501860618591309
    7. ' input' → logprob: -11.876860618591309
    8. ')' → logprob: -12.001860618591309
    9. '_line' → logprob: -12.126860618591309
    10. '```' → logprob: -12.626860618591309

Token 306: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038086701184511185
    2. ')
' → logprob: -3.2880866527557373
    3. '   ' → logprob: -10.163086891174316
    4. ')

' → logprob: -12.788086891174316
    5. ')
' → logprob: -14.038086891174316
    6. ' )' → logprob: -14.163086891174316
    7. ')`' → logprob: -14.788086891174316
    8. ')\' → logprob: -15.163086891174316
    9. '))' → logprob: -15.413086891174316
    10. ')#' → logprob: -15.538086891174316

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21377971768379211
    2. 'input' → logprob: -1.7137796878814697
    3. ' input' → logprob: -4.463779926300049
    4. '
' → logprob: -7.838779926300049
    5. 'a' → logprob: -8.46377944946289
    6. '	input' → logprob: -9.83877944946289
    7. '```' → logprob: -9.96377944946289
    8. '[input' → logprob: -10.96377944946289
    9. ' a' → logprob: -11.58877944946289
    10. ' ' → logprob: -11.71377944946289

Token 308: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.16691941022872925
    2. ' input' → logprob: -2.416919469833374
    3. '   ' → logprob: -2.791919469833374
    4. 'a' → logprob: -5.791919231414795
    5. ' a' → logprob: -9.041919708251953
    6. '  ' → logprob: -11.541919708251953
    7. ' ' → logprob: -11.541919708251953
    8. '	input' → logprob: -11.791919708251953
    9. '```' → logprob: -12.291919708251953
    10. '
' → logprob: -12.291919708251953

Token 309: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.3782830137643032e-05
    2. '_' → logprob: -11.37501335144043
    3. '_lines' → logprob: -13.62501335144043
    4. 'line' → logprob: -14.25001335144043
    5. '_LINE' → logprob: -16.12501335144043
    6. 'a' → logprob: -16.62501335144043
    7. 'Line' → logprob: -16.87501335144043
    8. '_list' → logprob: -17.00001335144043
    9. '_Line' → logprob: -17.00001335144043
    10. '_a' → logprob: -17.12501335144043

Token 310: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003396343090571463
    2. '2' → logprob: -9.00033950805664
    3. '=' → logprob: -9.00033950805664
    4. ' =' → logprob: -9.50033950805664
    5. '1' → logprob: -11.50033950805664
    6. '_=' → logprob: -12.37533950805664
    7. 'a' → logprob: -13.25033950805664
    8. '   ' → logprob: -14.37533950805664
    9. 's' → logprob: -14.50033950805664
    10. ' ' → logprob: -15.62533950805664

Token 311: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.9424725148128346e-05
    2. ' ' → logprob: -10.875049591064453
    3. '=' → logprob: -11.125049591064453
    4. '1' → logprob: -11.625049591064453
    5. 'read' → logprob: -12.250049591064453
    6. '_' → logprob: -14.250049591064453
    7. ' =' → logprob: -14.750049591064453
    8. '   ' → logprob: -14.875049591064453
    9. 'a' → logprob: -16.000049591064453
    10. '  ' → logprob: -16.125049591064453

Token 312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519296407699585
    2. '=' → logprob: -1.5019296407699585
    3. ' ' → logprob: -15.75192928314209
    4. '_' → logprob: -16.001930236816406
    5. ',' → logprob: -16.376930236816406
    6. '=input' → logprob: -16.626930236816406
    7. '   ' → logprob: -17.001930236816406
    8. ' ' → logprob: -17.376930236816406
    9. ')' → logprob: -17.626930236816406
    10. '_=' → logprob: -18.126930236816406

Token 313: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.6931478381156921
    2. ' read' → logprob: -0.6931478381156921
    3. '	read' → logprob: -14.443147659301758
    4. '(read' → logprob: -16.943147659301758
    5. ' readline' → logprob: -18.193147659301758
    6. 'input' → logprob: -18.443147659301758
    7. ' reads' → logprob: -18.443147659301758
    8. '.read' → logprob: -18.568147659301758
    9. '_read' → logprob: -18.818147659301758
    10. ' input' → logprob: -18.818147659301758

Token 314: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.3877035081386566
    2. '()' → logprob: -1.137703537940979
    3. '_' → logprob: -7.7627034187316895
    4. 'input' → logprob: -8.137703895568848
    5. '()
' → logprob: -10.012703895568848
    6. 'Input' → logprob: -10.387703895568848
    7. '_line' → logprob: -11.637703895568848
    8. '()<' → logprob: -12.512703895568848
    9. '()>' → logprob: -12.637703895568848
    10. '().' → logprob: -12.762703895568848

Token 315: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023136120289564133
    2. 'a' → logprob: -4.648136138916016
    3. '<|end|>' → logprob: -5.273136138916016
    4. '()' → logprob: -5.773136138916016
    5. '
' → logprob: -6.773136138916016
    6. '(a' → logprob: -6.898136138916016
    7. ')' → logprob: -7.523136138916016
    8. ',' → logprob: -7.523136138916016
    9. '()
' → logprob: -8.023136138916016
    10. 'n' → logprob: -8.398136138916016

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2258666604757309
    2. 'a' → logprob: -1.600866675376892
    3. ' a' → logprob: -8.100866317749023
    4. '<|end|>' → logprob: -9.225866317749023
    5. '	a' → logprob: -10.975866317749023
    6. ',a' → logprob: -11.725866317749023
    7. '#a' → logprob: -11.725866317749023
    8. '>a' → logprob: -12.350866317749023
    9. '[a' → logprob: -12.600866317749023
    10. '```' → logprob: -12.600866317749023

Token 317: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -9.729906196298543e-06
    2. ' a' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.125009536743164
    4. '	a' → logprob: -17.875009536743164
    5. '<|end|>' → logprob: -18.625009536743164
    6. '```' → logprob: -19.000009536743164
    7. '#a' → logprob: -19.375009536743164
    8. ' ' → logprob: -19.875009536743164
    9. '  ' → logprob: -20.250009536743164
    10. '#' → logprob: -20.375009536743164

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0891573503613472
    2. '=' → logprob: -2.4641573429107666
    3. ',' → logprob: -8.839157104492188
    4. '_' → logprob: -10.089157104492188
    5. 'a' → logprob: -11.964157104492188
    6. ')' → logprob: -12.339157104492188
    7. ' ' → logprob: -12.714157104492188
    8. '=parse' → logprob: -12.839157104492188
    9. '[' → logprob: -13.339157104492188
    10. '   ' → logprob: -13.464157104492188

Token 319: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.2519315779209137
    2. 'parse' → logprob: -1.5019315481185913
    3. '(parse' → logprob: -13.626931190490723
    4. '=parse' → logprob: -14.001931190490723
    5. '	parse' → logprob: -15.251931190490723
    6. '_parse' → logprob: -15.876931190490723
    7. '.parse' → logprob: -16.25193214416504
    8. ' ' → logprob: -18.25193214416504
    9. ' parses' → logprob: -19.25193214416504
    10. 'a' → logprob: -20.12693214416504

Token 320: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.759734732331708e-05
    2. '_' → logprob: -11.000017166137695
    3. 'a' → logprob: -14.000017166137695
    4. '_n' → logprob: -17.750017166137695
    5. ' _' → logprob: -19.000017166137695
    6. ' a' → logprob: -19.375017166137695
    7. '_an' → logprob: -20.000017166137695
    8. '_b' → logprob: -20.125017166137695
    9. '```' → logprob: -20.375017166137695
    10. '_input' → logprob: -20.500017166137695

Token 321: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.723973582556937e-05
    2. 'input' → logprob: -11.000017166137695
    3. '(' → logprob: -14.875017166137695
    4. ' (' → logprob: -16.625017166137695
    5. ' input' → logprob: -17.250017166137695
    6. ',input' → logprob: -17.625017166137695
    7. '[input' → logprob: -18.000017166137695
    8. '=input' → logprob: -18.125017166137695
    9. '<input' → logprob: -18.250017166137695
    10. '   ' → logprob: -19.875017166137695

Token 322: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -6.153795766294934e-06
    2. 'line' → logprob: -12.375005722045898
    3. 'Line' → logprob: -14.000005722045898
    4. '_LINE' → logprob: -15.125005722045898
    5. ')_' → logprob: -15.500005722045898
    6. '```' → logprob: -15.875005722045898
    7. ')' → logprob: -16.0000057220459
    8. '_' → logprob: -16.2500057220459
    9. ' line' → logprob: -17.0000057220459
    10. '_Line' → logprob: -17.6250057220459

Token 323: '_' (ID: 62)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.011406653560698032
    2. '_' → logprob: -4.511406421661377
    3. '2' → logprob: -8.136406898498535
    4. 'line' → logprob: -10.136406898498535
    5. ')' → logprob: -11.886406898498535
    6. '(' → logprob: -12.011406898498535
    7. '```' → logprob: -12.386406898498535
    8. 'Line' → logprob: -13.136406898498535
    9. '(line' → logprob: -13.261406898498535
    10. '_LINE' → logprob: -13.386406898498535

Token 324: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012864413671195507
    2. 'line' → logprob: -4.387864589691162
    3. '_line' → logprob: -8.387864112854004
    4. '1' → logprob: -9.137864112854004
    5. 'input' → logprob: -11.512864112854004
    6. 'l' → logprob: -12.637864112854004
    7. 'Line' → logprob: -13.137864112854004
    8. '(line' → logprob: -14.387864112854004
    9. 'x' → logprob: -15.137864112854004
    10. '_' → logprob: -15.200364112854004

Token 325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006556084263138473
    2. ',' → logprob: -7.875655651092529
    3. ',n' → logprob: -9.000655174255371
    4. ')n' → logprob: -9.750655174255371
    5. '(n' → logprob: -10.375655174255371
    6. ')
' → logprob: -10.375655174255371
    7. ' )' → logprob: -11.125655174255371
    8. '   ' → logprob: -11.500655174255371
    9. ')
' → logprob: -14.500655174255371
    10. ' ' → logprob: -14.500655174255371

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1275450885295868
    2. 'a' → logprob: -2.252545118331909
    3. ' a' → logprob: -4.25254487991333
    4. '<|end|>' → logprob: -8.252545356750488
    5. ' ' → logprob: -10.002545356750488
    6. '```' → logprob: -10.502545356750488
    7. '  ' → logprob: -11.002545356750488
    8. '	a' → logprob: -11.752545356750488
    9. '>a' → logprob: -12.127545356750488
    10. '#a' → logprob: -12.252545356750488

Token 327: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.002983883023262024
    2. ' a' → logprob: -6.002984046936035
    3. '   ' → logprob: -7.627984046936035
    4. 'd' → logprob: -10.877984046936035
    5. ' d' → logprob: -13.752984046936035
    6. ' ' → logprob: -14.377984046936035
    7. '```' → logprob: -14.627984046936035
    8. '	a' → logprob: -16.12798309326172
    9. '
' → logprob: -16.25298309326172
    10. '  ' → logprob: -16.62798309326172

Token 328: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -3.810037742368877e-05
    2. '_' → logprob: -10.625038146972656
    3. '_ct' → logprob: -12.750038146972656
    4. 'cs' → logprob: -13.000038146972656
    5. ' =' → logprob: -13.500038146972656
    6. '_CS' → logprob: -13.625038146972656
    7. '_css' → logprob: -14.125038146972656
    8. 'a' → logprob: -14.250038146972656
    9. '	cs' → logprob: -14.625038146972656
    10. '_cm' → logprob: -14.750038146972656

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31333228945732117
    2. '=' → logprob: -1.3133323192596436
    3. ',' → logprob: -9.563332557678223
    4. '=create' → logprob: -16.063331604003906
    5. ' ,' → logprob: -16.438331604003906
    6. '＝' → logprob: -17.563331604003906
    7. '=com' → logprob: -17.813331604003906
    8. ' ' → logprob: -18.188331604003906
    9. ')' → logprob: -18.438331604003906
    10. '[' → logprob: -18.438331604003906

Token 330: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.47407761216163635
    2. ' compute' → logprob: -0.974077582359314
    3. '_compute' → logprob: -14.724077224731445
    4. '.compute' → logprob: -15.724077224731445
    5. 'calculate' → logprob: -17.349077224731445
    6. ' ' → logprob: -17.849077224731445
    7. 'computer' → logprob: -18.099077224731445
    8. '   ' → logprob: -18.474077224731445
    9. ' calculate' → logprob: -18.599077224731445
    10. ' computer' → logprob: -18.849077224731445

Token 331: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -5.88418151892256e-05
    2. 'prefix' → logprob: -9.750059127807617
    3. '_suffix' → logprob: -14.750059127807617
    4. '_' → logprob: -16.750059127807617
    5. '_pref' → logprob: -17.750059127807617
    6. '_PREFIX' → logprob: -17.875059127807617
    7. '(prefix' → logprob: -18.125059127807617
    8. 'Prefix' → logprob: -18.125059127807617
    9. 'refix' → logprob: -18.625059127807617
    10. 'a' → logprob: -19.125059127807617

Token 332: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.4617256056226324e-05
    2. '_sum' → logprob: -11.250014305114746
    3. 'a' → logprob: -14.250014305114746
    4. 's' → logprob: -15.000014305114746
    5. '_a' → logprob: -15.875014305114746
    6. '_sub' → logprob: -16.875015258789062
    7. 'summ' → logprob: -16.875015258789062
    8. ' sums' → logprob: -17.125015258789062
    9. 'sum' → logprob: -17.250015258789062
    10. '_prefix' → logprob: -17.500015258789062

Token 333: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -1.2233183042553719e-05
    2. '```' → logprob: -12.875012397766113
    3. 'um' → logprob: -13.125012397766113
    4. 's' → logprob: -13.250012397766113
    5. '   ' → logprob: -13.250012397766113
    6. 'a' → logprob: -13.625012397766113
    7. '[' → logprob: -14.625012397766113
    8. 'uffix' → logprob: -14.750012397766113
    9. 'umsum' → logprob: -14.875012397766113
    10. '_s' → logprob: -15.750012397766113

Token 334: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.512236498361744e-07
    2. ' (' → logprob: -14.875000953674316
    3. '(' → logprob: -15.750000953674316
    4. '```' → logprob: -17.0
    5. '   ' → logprob: -18.5
    6. '(
' → logprob: -19.5
    7. 'a' → logprob: -19.625
    8. '(ai' → logprob: -20.125
    9. '<a' → logprob: -21.0
    10. '/a' → logprob: -21.25

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008182040764950216
    2. ',n' → logprob: -7.125818252563477
    3. ' ,' → logprob: -11.375818252563477
    4. ',
' → logprob: -14.000818252563477
    5. '(n' → logprob: -14.375818252563477
    6. ')' → logprob: -15.250818252563477
    7. 'n' → logprob: -16.000818252563477
    8. '(' → logprob: -16.375818252563477
    9. '   ' → logprob: -16.375818252563477
    10. ',N' → logprob: -16.500818252563477

Token 336: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011712945997714996
    2. ' n' → logprob: -6.751171112060547
    3. '   ' → logprob: -13.751171112060547
    4. 'len' → logprob: -16.876171112060547
    5. '	n' → logprob: -18.251171112060547
    6. ')n' → logprob: -19.001171112060547
    7. '$n' → logprob: -22.126171112060547
    8. '_n' → logprob: -22.626171112060547
    9. ' len' → logprob: -22.626171112060547
    10. '  ' → logprob: -22.751171112060547

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.707997428951785e-05
    2. ',m' → logprob: -10.000077247619629
    3. ' ,' → logprob: -10.375077247619629
    4. '   ' → logprob: -14.875077247619629
    5. 'm' → logprob: -17.500076293945312
    6. ',
' → logprob: -18.875076293945312
    7. '‌,' → logprob: -19.250076293945312
    8. '```' → logprob: -19.750076293945312
    9. ',n' → logprob: -20.250076293945312
    10. ')' → logprob: -20.625076293945312

Token 338: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2519293427467346
    2. ' m' → logprob: -1.5019292831420898
    3. '   ' → logprob: -16.126930236816406
    4. ' ' → logprob: -16.501930236816406
    5. '	m' → logprob: -18.001930236816406
    6. ')m' → logprob: -18.376930236816406
    7. ' м' → logprob: -18.751930236816406
    8. '    ' → logprob: -19.626930236816406
    9. ')' → logprob: -19.751930236816406
    10. '```' → logprob: -20.501930236816406

Token 339: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02329147979617119
    2. ')
' → logprob: -3.77329158782959
    3. '   ' → logprob: -10.14829158782959
    4. ')
' → logprob: -12.27329158782959
    5. ')d' → logprob: -13.77329158782959
    6. ')

' → logprob: -14.02329158782959
    7. ' ' → logprob: -15.64829158782959
    8. ' )' → logprob: -16.148290634155273
    9. ' )
' → logprob: -18.148290634155273
    10. ')\' → logprob: -18.148290634155273

Token 340: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06226646155118942
    2. '   ' → logprob: -2.8122663497924805
    3. ' d' → logprob: -8.18726634979248
    4. '```' → logprob: -10.93726634979248
    5. '	d' → logprob: -13.18726634979248
    6. ' ' → logprob: -15.06226634979248
    7. '
' → logprob: -15.56226634979248
    8. '    
' → logprob: -16.312267303466797
    9. '       ' → logprob: -16.562267303466797
    10. '``' → logprob: -16.687267303466797

Token 341: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -4.36574100604048e-06
    2. '   ' → logprob: -12.625004768371582
    3. ' d' → logprob: -13.875004768371582
    4. 'from' → logprob: -17.250003814697266
    5. 'def' → logprob: -18.125003814697266
    6. '
' → logprob: -18.375003814697266
    7. '```' → logprob: -18.875003814697266
    8. '    
' → logprob: -19.250003814697266
    9. ' ' → logprob: -19.500003814697266
    10. '  ' → logprob: -20.000003814697266

Token 342: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889000326395035
    2. '=' → logprob: -2.578890085220337
    3. '=create' → logprob: -16.453889846801758
    4. ' ' → logprob: -16.953889846801758
    5. '.' → logprob: -17.453889846801758
    6. ')' → logprob: -17.578889846801758
    7. 's' → logprob: -17.703889846801758
    8. ':' → logprob: -18.203889846801758
    9. 'space' → logprob: -18.828889846801758
    10. 'd' → logprob: -18.828889846801758

Token 343: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.0031781906727701426
    2. ' initialize' → logprob: -5.753178119659424
    3. '	initialize' → logprob: -14.753178596496582
    4. '_initialize' → logprob: -16.378177642822266
    5. 'initialized' → logprob: -17.128177642822266
    6. '.initialize' → logprob: -18.003177642822266
    7. '   ' → logprob: -18.503177642822266
    8. 'initial' → logprob: -18.753177642822266
    9. 'Initialize' → logprob: -19.128177642822266
    10. ' initialized' → logprob: -20.503177642822266

Token 344: '_default' (ID: 21934)
  Prédit: '_default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_default' → logprob: -2.7729658540920354e-05
    2. 'default' → logprob: -10.500027656555176
    3. 'def' → logprob: -16.625028610229492
    4. '_def' → logprob: -19.125028610229492
    5. '_DEFAULT' → logprob: -19.500028610229492
    6. '"default' → logprob: -19.750028610229492
    7. '_Default' → logprob: -20.125028610229492
    8. ' defaultdict' → logprob: -20.125028610229492
    9. ''default' → logprob: -20.250028610229492
    10. 'Default' → logprob: -20.375028610229492

Token 345: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -4.1080467781284824e-05
    2. 'default' → logprob: -10.125041007995605
    3. 'def' → logprob: -14.000041007995605
    4. 'd' → logprob: -17.000041961669922
    5. '_dict' → logprob: -17.250041961669922
    6. 'ict' → logprob: -17.375041961669922
    7. ' dict' → logprob: -17.750041961669922
    8. '```' → logprob: -17.750041961669922
    9. '(dict' → logprob: -18.250041961669922
    10. '_default' → logprob: -18.750041961669922

Token 346: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015943869948387146
    2. '()
' → logprob: -8.75015926361084
    3. '()

' → logprob: -14.62515926361084
    4. ' ()' → logprob: -15.87515926361084
    5. '()\' → logprob: -16.250160217285156
    6. '()`' → logprob: -16.375160217285156
    7. '()]' → logprob: -16.875160217285156
    8. '()"' → logprob: -17.125160217285156
    9. '()
' → logprob: -17.125160217285156
    10. '(' → logprob: -17.625160217285156

Token 347: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0552624948322773
    2. 'increment' → logprob: -3.180262565612793
    3. 'd' → logprob: -4.430262565612793
    4. '   ' → logprob: -8.805262565612793
    5. 'for' → logprob: -9.805262565612793
    6. ' count' → logprob: -10.055262565612793
    7. 'in' → logprob: -12.055262565612793
    8. ' increment' → logprob: -12.180262565612793
    9. 'increase' → logprob: -13.180262565612793
    10. '```' → logprob: -13.180262565612793

Token 348: ' count' (ID: 3605)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.3896941840648651
    2. 'd' → logprob: -1.1396942138671875
    3. 'count' (adapté à ' count') → logprob: -6.3896942138671875
    4. 'for' → logprob: -6.8896942138671875
    5. ' increment' → logprob: -10.014694213867188
    6. '#' → logprob: -10.264694213867188
    7. 'increments' → logprob: -11.639694213867188
    8. 'in' → logprob: -12.014694213867188
    9. 'Increment' → logprob: -12.764694213867188
    10. '   ' → logprob: -12.764694213867188

Token 349: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -9.400689305039123e-05
    2. '_' → logprob: -10.250094413757324
    3. 'prefix' → logprob: -11.000094413757324
    4. 'a' → logprob: -11.750094413757324
    5. '_suffix' → logprob: -12.000094413757324
    6. '_d' → logprob: -12.500094413757324
    7. '_pres' → logprob: -12.500094413757324
    8. '```' → logprob: -12.625094413757324
    9. '_pref' → logprob: -12.750094413757324
    10. '_(' → logprob: -13.125094413757324

Token 350: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -3.6550729419104755e-05
    2. 's' → logprob: -10.250036239624023
    3. '_sum' → logprob: -14.000036239624023
    4. '_counts' → logprob: -16.500036239624023
    5. '   ' → logprob: -17.500036239624023
    6. 'a' → logprob: -17.750036239624023
    7. 'd' → logprob: -17.875036239624023
    8. 'sum' → logprob: -18.125036239624023
    9. ' sums' → logprob: -18.250036239624023
    10. 'S' → logprob: -19.000036239624023

Token 351: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -3.464347173576243e-05
    2. 's' → logprob: -11.25003433227539
    3. 'a' → logprob: -11.62503433227539
    4. 'um' → logprob: -12.37503433227539
    5. '(d' → logprob: -13.37503433227539
    6. '```' → logprob: -13.87503433227539
    7. '(a' → logprob: -14.00003433227539
    8. '(' → logprob: -14.37503433227539
    9. 'd' → logprob: -14.87503433227539
    10. '_s' → logprob: -14.87503433227539

Token 352: '(a' (ID: 6271)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0002512071805540472
    2. '(a' → logprob: -8.375250816345215
    3. '(' → logprob: -11.000250816345215
    4. ' (' → logprob: -12.500250816345215
    5. '(
' → logprob: -16.62525177001953
    6. '   ' → logprob: -17.25025177001953
    7. '```' → logprob: -17.25025177001953
    8. '(def' → logprob: -17.62525177001953
    9. '(s' → logprob: -18.50025177001953
    10. '(b' → logprob: -18.62525177001953

Token 353: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -0.015137829817831516
    2. 'cs' → logprob: -4.765137672424316
    3. ',' → logprob: -5.140137672424316
    4. 'd' → logprob: -8.765137672424316
    5. 's' → logprob: -9.390137672424316
    6. ',d' → logprob: -9.765137672424316
    7. '_c' → logprob: -9.765137672424316
    8. '_,' → logprob: -10.390137672424316
    9. '```' → logprob: -10.515137672424316
    10. 'c' → logprob: -10.640137672424316

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002605029381811619
    2. ',d' → logprob: -6.127604961395264
    3. '(d' → logprob: -7.877604961395264
    4. ' ,' → logprob: -11.127605438232422
    5. 'd' → logprob: -11.502605438232422
    6. '   ' → logprob: -12.002605438232422
    7. ')' → logprob: -12.127605438232422
    8. '(' → logprob: -13.252605438232422
    9. ',
' → logprob: -14.002605438232422
    10. '```' → logprob: -14.627605438232422

Token 355: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00033546582562848926
    2. ' n' → logprob: -8.000335693359375
    3. '	n' → logprob: -18.000335693359375
    4. ')n' → logprob: -18.875335693359375
    5. ',n' → logprob: -19.750335693359375
    6. '   ' → logprob: -20.000335693359375
    7. '_n' → logprob: -20.625335693359375
    8. '
' → logprob: -20.625335693359375
    9. ')' → logprob: -21.000335693359375
    10. '```' → logprob: -22.000335693359375

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00048024329589679837
    2. ',d' → logprob: -7.8754801750183105
    3. ' ,' → logprob: -9.250480651855469
    4. 'd' → logprob: -12.875480651855469
    5. '   ' → logprob: -14.000480651855469
    6. ',
' → logprob: -15.125480651855469
    7. ')' → logprob: -15.875480651855469
    8. ' d' → logprob: -16.50048065185547
    9. '```' → logprob: -16.87548065185547
    10. '),' → logprob: -18.12548065185547

Token 357: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0024769625160843134
    2. ' d' → logprob: -6.002477169036865
    3. ')d' → logprob: -13.627476692199707
    4. '	d' → logprob: -16.627477645874023
    5. '>d' → logprob: -17.877477645874023
    6. ')' → logprob: -18.002477645874023
    7. '   ' → logprob: -18.627477645874023
    8. 'def' → logprob: -18.877477645874023
    9. '[d' → logprob: -18.877477645874023
    10. '$d' → logprob: -19.127477645874023

Token 358: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2813805937767029
    2. ')' → logprob: -1.4063806533813477
    3. ')
' → logprob: -8.656380653381348
    4. '<|end|>' → logprob: -10.781380653381348
    5. '    
' → logprob: -10.906380653381348
    6. '
' → logprob: -12.281380653381348
    7. ',' → logprob: -12.906380653381348
    8. ' )' → logprob: -13.281380653381348
    9. ')d' → logprob: -13.531380653381348
    10. 'd' → logprob: -14.031380653381348

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10094218701124191
    2. 'ans' → logprob: -2.3509421348571777
    3. 'd' → logprob: -7.975942134857178
    4. ' ans' → logprob: -8.850942611694336
    5. '	ans' → logprob: -9.100942611694336
    6. '```' → logprob: -9.975942611694336
    7. 'answer' → logprob: -10.600942611694336
    8. 'result' → logprob: -11.100942611694336
    9. '    
' → logprob: -11.100942611694336
    10. 'print' → logprob: -11.725942611694336

Token 360: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.014328386634588242
    2. 'print' → logprob: -4.514328479766846
    3. 'd' → logprob: -5.764328479766846
    4. 'result' → logprob: -10.014328002929688
    5. 'for' → logprob: -10.389328002929688
    6. 'answer' → logprob: -10.889328002929688
    7. '   ' → logprob: -10.889328002929688
    8. '#' → logprob: -11.889328002929688
    9. ' ans' → logprob: -12.264328002929688
    10. '```' → logprob: -12.264328002929688

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003605416975915432
    2. '=' → logprob: -5.628605365753174
    3. ',' → logprob: -12.253605842590332
    4. ' =)' → logprob: -15.128605842590332
    5. ' +=' → logprob: -16.003604888916016
    6. ' =
' → logprob: -16.628604888916016
    7. ' ' → logprob: -16.753604888916016
    8. '<|end|>' → logprob: -16.878604888916016
    9. ')' → logprob: -17.378604888916016
    10. '_' → logprob: -17.753604888916016

Token 362: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.00861456897109747
    2. ' calculate' → logprob: -4.758614540100098
    3. '.calculate' → logprob: -18.633615493774414
    4. 'alculate' → logprob: -18.883615493774414
    5. 'calc' → logprob: -19.883615493774414
    6. '
' → logprob: -20.133615493774414
    7. 'Calculate' → logprob: -20.383615493774414
    8. '   ' → logprob: -20.383615493774414
    9. 'cal' → logprob: -20.508615493774414
    10. 'c' → logprob: -20.508615493774414

Token 363: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -14.62500286102295
    3. '_parts' → logprob: -14.75000286102295
    4. 's' → logprob: -14.87500286102295
    5. '_result' → logprob: -15.12500286102295
    6. ' _' → logprob: -15.37500286102295
    7. 'pairs' → logprob: -15.37500286102295
    8. '```' → logprob: -15.87500286102295
    9. '_p' → logprob: -16.000001907348633
    10. '_par' → logprob: -17.375001907348633

Token 364: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -13.875000953674316
    3. ' (' → logprob: -18.000001907348633
    4. '(de' → logprob: -18.875001907348633
    5. '```' → logprob: -19.125001907348633
    6. '(
' → logprob: -19.625001907348633
    7. ',d' → logprob: -19.750001907348633
    8. '(def' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.500001907348633
    10. 'd' → logprob: -21.000001907348633

Token 365: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0052414643578231335
    2. ')' → logprob: -5.255241394042969
    3. ')
' → logprob: -12.130241394042969
    4. '   ' → logprob: -13.255241394042969
    5. ' )
' → logprob: -15.255241394042969
    6. '())
' → logprob: -16.00524139404297
    7. ')

' → logprob: -17.25524139404297
    8. ')`
' → logprob: -17.50524139404297
    9. '()
' → logprob: -18.00524139404297
    10. '()' → logprob: -18.50524139404297

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17099203169345856
    2. 'print' → logprob: -1.9209920167922974
    3. ' print' → logprob: -4.545991897583008
    4. '```' → logprob: -9.795991897583008
    5. '
' → logprob: -10.420991897583008
    6. '	print' → logprob: -11.670991897583008
    7. '(print' → logprob: -12.545991897583008
    8. '.print' → logprob: -14.170991897583008
    9. '    
' → logprob: -14.670991897583008
    10. '``' → logprob: -14.795991897583008

Token 367: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.200166469876422e-06
    2. ' print' → logprob: -12.500004768371582
    3. '   ' → logprob: -13.500004768371582
    4. '```' → logprob: -20.3750057220459
    5. '.print' → logprob: -20.7500057220459
    6. '
' → logprob: -21.1250057220459
    7. '	print' → logprob: -21.2500057220459
    8. '_print' → logprob: -22.1250057220459
    9. '-print' → logprob: -22.1250057220459
    10. '(print' → logprob: -22.2500057220459

Token 368: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.45848218582978e-06
    2. 'result' → logprob: -13.00000286102295
    3. '(result' → logprob: -16.500001907348633
    4. 'Result' → logprob: -17.375001907348633
    5. '_results' → logprob: -17.375001907348633
    6. '_RESULT' → logprob: -17.750001907348633
    7. '(' → logprob: -18.625001907348633
    8. '(_' → logprob: -19.250001907348633
    9. ' result' → logprob: -19.375001907348633
    10. '_Result' → logprob: -19.750001907348633

Token 369: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.25000286102295
    3. '(answer' → logprob: -13.87500286102295
    4. ' (' → logprob: -15.37500286102295
    5. '(an' → logprob: -17.875003814697266
    6. '```' → logprob: -18.500003814697266
    7. '(
' → logprob: -18.750003814697266
    8. '(ast' → logprob: -19.375003814697266
    9. '(abs' → logprob: -20.125003814697266
    10. '(acc' → logprob: -20.250003814697266

Token 370: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.762356209335849e-05
    2. ')
' → logprob: -10.37503719329834
    3. '())' → logprob: -12.25003719329834
    4. '()' → logprob: -14.12503719329834
    5. ')`' → logprob: -15.00003719329834
    6. ' )' → logprob: -15.37503719329834
    7. '))' → logprob: -16.250038146972656
    8. ')#' → logprob: -17.500038146972656
    9. ')

' → logprob: -17.500038146972656
    10. ')}' → logprob: -18.125038146972656

Token 371: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.029800137504935265
    2. 'if' → logprob: -3.5298001766204834
    3. '#' → logprob: -11.029800415039062
    4. '(main' → logprob: -11.529800415039062
    5. ' main' → logprob: -11.654800415039062
    6. 'print' → logprob: -12.279800415039062
    7. 'd' → logprob: -13.154800415039062
    8. '```' → logprob: -13.154800415039062
    9. 'increment' → logprob: -14.029800415039062
    10. '_main' → logprob: -14.279800415039062

Token 372: '()' (ID: 416)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4235506057739258
    2. '<|end|>' → logprob: -1.1735506057739258
    3. '#' → logprob: -4.423550605773926
    4. '```' → logprob: -4.923550605773926
    5. '0' → logprob: -5.173550605773926
    6. ')' → logprob: -5.798550605773926
    7. '[' → logprob: -6.173550605773926
    8. ' d' → logprob: -6.798550605773926
    9. ' ' → logprob: -6.798550605773926
    10. '<|end|>' → logprob: -6.923550605773926


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 370
Tokens correctement prédits (1ère position, stricte): 170
Tokens correctement prédits (1ère position, avec adaptation): 185
Tokens correctement prédits (top 10): 325
Précision stricte (1ère position): 45.95%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 87.84%
================================================================================
