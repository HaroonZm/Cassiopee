================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from itertools import compress

h, w = map(int, stdin.readline().split())
rows = [stdin.readline().rstrip() for _ in range(h)]

row_mask = [row.count('.') != w for row in rows]
col_mask = [any(row[i] != '.' for row in rows) for i in range(w)]

for row in compress(rows, row_mask):
    print(''.join(compress(row, col_mask)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.051410701125860214
    2. ' argv' → logprob: -3.426410675048828
    3. 'exit' → logprob: -4.176410675048828
    4. ' exit' → logprob: -6.801410675048828
    5. 'stdout' → logprob: -7.301410675048828
    6. 'stdin' → logprob: -8.426410675048828
    7. 'path' → logprob: -8.926410675048828
    8. 'import' → logprob: -10.176410675048828
    9. 'stderr' → logprob: -10.426410675048828
    10. 'version' → logprob: -10.676410675048828

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006454797694459558
    2. '.readline' → logprob: -8.250645637512207
    3. '\n' → logprob: -8.500645637512207
    4. '.
' → logprob: -10.125645637512207
    5. 'import' → logprob: -10.250645637512207
    6. '\' → logprob: -10.375645637512207
    7. '```' → logprob: -10.875645637512207
    8. '.read' → logprob: -10.875645637512207
    9. '' → logprob: -12.000645637512207
    10. ',' → logprob: -12.125645637512207

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06320580840110779
    2. '.readline' → logprob: -3.5632057189941406
    3. 'for' → logprob: -4.563205718994141
    4. '\n' → logprob: -4.688205718994141
    5. '
' → logprob: -5.938205718994141
    6. 'import' → logprob: -5.938205718994141
    7. 'print' → logprob: -6.188205718994141
    8. '.read' → logprob: -6.688205718994141
    9. '```' → logprob: -7.313205718994141
    10. ',' → logprob: -7.313205718994141

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03390835225582123
    2. ' sys' → logprob: -3.7839083671569824
    3. ' io' → logprob: -4.783908367156982
    4. ' math' → logprob: -7.283908367156982
    5. ' typing' → logprob: -7.658908367156982
    6. 'os' → logprob: -7.908908367156982
    7. ' stdout' → logprob: -9.033907890319824
    8. ' itertools' → logprob: -9.033907890319824
    9. ' subprocess' → logprob: -9.283907890319824
    10. ' space' → logprob: -9.408907890319824

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020581480115652084
    2. 'import' → logprob: -3.8955814838409424
    3. ' ' → logprob: -11.020581245422363
    4. '	import' → logprob: -11.645581245422363
    5. '.' → logprob: -12.395581245422363
    6. '_import' → logprob: -12.770581245422363
    7. ' im' → logprob: -13.645581245422363
    8. ' itertools' → logprob: -13.770581245422363
    9. '.import' → logprob: -13.770581245422363
    10. ' .' → logprob: -14.145581245422363

Token 8: ' compress' (ID: 34112)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6391264200210571
    2. 'count' → logprob: -1.8891264200210571
    3. 'per' → logprob: -2.1391263008117676
    4. 'chain' → logprob: -3.0141263008117676
    5. 'product' → logprob: -3.3891263008117676
    6. 'group' → logprob: -3.5141263008117676
    7. 'import' → logprob: -3.6391263008117676
    8. ' permutations' → logprob: -4.139126300811768
    9. 'cycle' → logprob: -4.139126300811768
    10. ' is' → logprob: -4.389126300811768

Token 9: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8767048120498657
    2. '\n' → logprob: -1.6267048120498657
    3. '
' → logprob: -1.7517048120498657
    4. 'newline' → logprob: -2.501704692840576
    5. '(' → logprob: -2.751704692840576
    6. '' → logprob: -4.626704692840576
    7. 'data' → logprob: -4.751704692840576
    8. '\' → logprob: -4.751704692840576
    9. 'import' → logprob: -4.751704692840576
    10. ' for' → logprob: -5.626704692840576

Token 10: 'h' (ID: 71)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8269481658935547
    2. 'for' → logprob: -0.9519481658935547
    3. '_' → logprob: -3.3269481658935547
    4. 'def' → logprob: -3.5769481658935547
    5. 'result' → logprob: -4.076948165893555
    6. 'lines' → logprob: -4.326948165893555
    7. 'input' → logprob: -4.451948165893555
    8. '[' → logprob: -4.826948165893555
    9. 'line' → logprob: -5.076948165893555
    10. 'output' → logprob: -5.076948165893555

Token 11: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06981859356164932
    2. 'eight' → logprob: -3.9448184967041016
    3. 'ead' → logprob: -4.069818496704102
    4. 'elper' → logprob: -4.319818496704102
    5. 't' → logprob: -5.069818496704102
    6. 'i' → logprob: -6.569818496704102
    7. 'igh' → logprob: -6.694818496704102
    8. 'elp' → logprob: -6.819818496704102
    9. 'ex' → logprob: -7.319818496704102
    10. 'eil' → logprob: -7.444818496704102

Token 12: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03830081969499588
    2. ' w' → logprob: -3.2883007526397705
    3. 't' → logprob: -8.538300514221191
    4. '*w' → logprob: -10.663300514221191
    5. ' t' → logprob: -11.413300514221191
    6. 'm' → logprob: -12.163300514221191
    7. '_w' → logprob: -12.288300514221191
    8. ' =' → logprob: -12.288300514221191
    9. '=w' → logprob: -13.163300514221191
    10. '_' → logprob: -13.288300514221191

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05999210476875305
    2. '=' → logprob: -2.9349920749664307
    3. ',' → logprob: -5.30999231338501
    4. ' ,' → logprob: -8.934991836547852
    5. ' ' → logprob: -11.934991836547852
    6. ' =
' → logprob: -12.059991836547852
    7. ')' → logprob: -12.684991836547852
    8. '<|end|>' → logprob: -12.809991836547852
    9. '=

' → logprob: -13.809991836547852
    10. ' =",' → logprob: -13.809991836547852

Token 14: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023401426151394844
    2. 'map' → logprob: -3.7734014987945557
    3. ' list' → logprob: -9.523401260375977
    4. ' stdin' → logprob: -10.023401260375977
    5. 'stdin' → logprob: -11.273401260375977
    6. ' ' → logprob: -11.273401260375977
    7. 'list' → logprob: -11.773401260375977
    8. ' [' → logprob: -13.023401260375977
    9. '[' → logprob: -14.023401260375977
    10. ' input' → logprob: -14.398401260375977

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06764106452465057
    2. '(' → logprob: -2.942641019821167
    3. '(str' → logprob: -4.817641258239746
    4. '(lambda' → logprob: -5.567641258239746
    5. '(input' → logprob: -8.567641258239746
    6. '(stdin' → logprob: -8.567641258239746
    7. 'int' → logprob: -9.317641258239746
    8. '<|end|>' → logprob: -9.442641258239746
    9. '()' → logprob: -9.567641258239746
    10. '(len' → logprob: -10.567641258239746

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009754435159265995
    2. '(stdin' → logprob: -4.759754657745361
    3. ',input' → logprob: -7.509754657745361
    4. '(' → logprob: -8.009754180908203
    5. ')' → logprob: -9.634754180908203
    6. 'stdin' → logprob: -9.884754180908203
    7. ',int' → logprob: -10.384754180908203
    8. ',std' → logprob: -10.509754180908203
    9. '(),' → logprob: -11.009754180908203
    10. ' ,' → logprob: -11.634754180908203

Token 17: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.014420519582927227
    2. ' stdin' → logprob: -4.514420509338379
    3. 'input' → logprob: -6.139420509338379
    4. '(stdin' → logprob: -6.764420509338379
    5. ' input' → logprob: -10.139420509338379
    6. 'std' → logprob: -12.014420509338379
    7. '.stdin' → logprob: -12.389420509338379
    8. ' ' → logprob: -13.264420509338379
    9. ')' → logprob: -13.514420509338379
    10. 'map' → logprob: -13.514420509338379

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0015672342851758003
    2. '.read' → logprob: -6.501567363739014
    3. '.' → logprob: -10.001566886901855
    4. '.readlines' → logprob: -11.126566886901855
    5. ').' → logprob: -12.626566886901855
    6. '().' → logprob: -14.376566886901855
    7. ')' → logprob: -16.001567840576172
    8. '.write' → logprob: -16.001567840576172
    9. '.stdin' → logprob: -16.251567840576172
    10. '.decode' → logprob: -16.501567840576172

Token 19: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.142655611038208
    2. '().' → logprob: -2.142655611038208
    3. '()' → logprob: -4.267655372619629
    4. ')' → logprob: -6.892655372619629
    5. '(),' → logprob: -8.642655372619629
    6. '()))' → logprob: -8.767655372619629
    7. '());' → logprob: -9.517655372619629
    8. '()[' → logprob: -10.017655372619629
    9. '();)' → logprob: -10.642655372619629
    10. '()),' → logprob: -11.017655372619629

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12809135019779205
    2. 'strip' → logprob: -2.128091335296631
    3. 'rstrip' → logprob: -7.128091335296631
    4. 'read' → logprob: -8.003091812133789
    5. ')' → logprob: -10.753091812133789
    6. ' split' → logprob: -13.003091812133789
    7. '(split' → logprob: -13.628091812133789
    8. '```' → logprob: -14.878091812133789
    9. ' strip' → logprob: -15.878091812133789
    10. '_split' → logprob: -16.75309181213379

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07173077762126923
    2. '))' → logprob: -2.821730852127075
    3. '())' → logprob: -4.696730613708496
    4. '()' → logprob: -8.071730613708496
    5. '()))' → logprob: -8.446730613708496
    6. '(' → logprob: -10.821730613708496
    7. '),' → logprob: -10.821730613708496
    8. ')))' → logprob: -11.696730613708496
    9. ')`' → logprob: -13.196730613708496
    10. ')
' → logprob: -13.696730613708496

Token 22: 'rows' (ID: 2668)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.2759510278701782
    2. 'field' → logprob: -1.9009510278701782
    3. 'matrix' → logprob: -3.0259509086608887
    4. 'board' → logprob: -3.4009509086608887
    5. 'data' → logprob: -6.150950908660889
    6. '```' → logprob: -6.400950908660889
    7. 'map' → logprob: -6.775950908660889
    8. 'a' → logprob: -7.150950908660889
    9. 'rows' → logprob: -7.400950908660889
    10. 'lines' → logprob: -7.775950908660889

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011639509350061417
    2. '=' → logprob: -4.511639595031738
    3. '_' → logprob: -7.886639595031738
    4. '_masks' → logprob: -9.886639595031738
    5. '=[]' → logprob: -10.261639595031738
    6. ')' → logprob: -10.386639595031738
    7. '_mask' → logprob: -10.636639595031738
    8. '_filtered' → logprob: -11.261639595031738
    9. '[]' → logprob: -11.386639595031738
    10. ' =[' → logprob: -11.636639595031738

Token 24: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.4789346158504486
    2. '[' → logprob: -0.978934645652771
    3. '[int' → logprob: -5.9789347648620605
    4. '[str' → logprob: -6.8539347648620605
    5. 'list' → logprob: -7.7289347648620605
    6. '[List' → logprob: -8.103934288024902
    7. '[]' → logprob: -9.103934288024902
    8. '[h' → logprob: -9.103934288024902
    9. '[len' → logprob: -9.603934288024902
    10. '[input' → logprob: -9.728934288024902

Token 25: 'stdin' (ID: 132953)
  Prédit: 'stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.3146260678768158
    2. 'list' → logprob: -1.3146260976791382
    3. 'tuple' → logprob: -7.439626216888428
    4. 'line' → logprob: -8.68962574005127
    5. '(stdin' → logprob: -8.68962574005127
    6. 'map' → logprob: -9.06462574005127
    7. '[' → logprob: -9.68962574005127
    8. 'input' → logprob: -9.81462574005127
    9. 'stdout' → logprob: -9.93962574005127
    10. '[]' → logprob: -10.43962574005127

Token 26: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.576873758807778e-05
    2. '.' → logprob: -9.625075340270996
    3. '().' → logprob: -11.625075340270996
    4. '.readlines' → logprob: -14.500075340270996
    5. '.read' → logprob: -15.750075340270996
    6. ' readline' → logprob: -17.250076293945312
    7. '()' → logprob: -18.000076293945312
    8. '.rstrip' → logprob: -18.250076293945312
    9. '].' → logprob: -18.250076293945312
    10. ')' → logprob: -18.375076293945312

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011947521707043052
    2. '()' → logprob: -6.751194953918457
    3. '())' → logprob: -11.626194953918457
    4. '()]' → logprob: -11.876194953918457
    5. '.rstrip' → logprob: -12.751194953918457
    6. ' ().' → logprob: -13.126194953918457
    7. 'rstrip' → logprob: -13.751194953918457
    8. '.strip' → logprob: -14.251194953918457
    9. ')' → logprob: -14.251194953918457
    10. '()].' → logprob: -14.501194953918457

Token 28: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10021423548460007
    2. 'rstrip' → logprob: -2.3502142429351807
    3. 'split' → logprob: -11.850214004516602
    4. ' strip' → logprob: -15.475214004516602
    5. 'rs' → logprob: -15.850214004516602
    6. 'str' → logprob: -15.975214004516602
    7. '.rstrip' → logprob: -18.6002140045166
    8. 'r' → logprob: -18.6002140045166
    9. '_strip' → logprob: -19.4752140045166
    10. '(strip' → logprob: -19.4752140045166

Token 29: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4811832904815674
    2. '('\' → logprob: -1.7311832904815674
    3. '())' → logprob: -1.7311832904815674
    4. '()\' → logprob: -3.8561832904815674
    5. ')' → logprob: -5.856183052062988
    6. '()
' → logprob: -6.856183052062988
    7. '()]' → logprob: -7.106183052062988
    8. '("\' → logprob: -7.231183052062988
    9. '().' → logprob: -8.106183052062988
    10. ''\' → logprob: -8.481183052062988

Token 30: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6408482193946838
    2. ' for' → logprob: -0.8908482193946838
    3. '()' → logprob: -3.390848159790039
    4. ')' → logprob: -3.640848159790039
    5. ' ' → logprob: -6.015848159790039
    6. '	for' → logprob: -8.015848159790039
    7. ']' → logprob: -9.890848159790039
    8. '(' → logprob: -11.015848159790039
    9. '\n' → logprob: -11.015848159790039
    10. '('\' → logprob: -11.390848159790039

Token 31: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2025356888771057
    2. '_' → logprob: -1.702535629272461
    3. ' range' → logprob: -6.827535629272461
    4. 'range' → logprob: -10.702535629272461
    5. '_range' → logprob: -11.952535629272461
    6. ' i' → logprob: -12.202535629272461
    7. ' ' → logprob: -13.577535629272461
    8. ' ' → logprob: -13.702535629272461
    9. ' in' → logprob: -13.952535629272461
    10. '_i' → logprob: -15.077535629272461

Token 32: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020531266927719116
    2. ' range' → logprob: -4.020531177520752
    3. ' in' → logprob: -6.145531177520752
    4. 'in' → logprob: -8.39553165435791
    5. '	range' → logprob: -12.77053165435791
    6. '(range' → logprob: -12.89553165435791
    7. '_' → logprob: -13.89553165435791
    8. 'ange' → logprob: -14.02053165435791
    9. ')' → logprob: -14.39553165435791
    10. ' ' → logprob: -14.52053165435791

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007106438861228526
    2. ' range' → logprob: -7.250710487365723
    3. '(range' → logprob: -14.625710487365723
    4. '	range' → logprob: -16.37571144104004
    5. '[' → logprob: -16.50071144104004
    6. '```' → logprob: -17.62571144104004
    7. ')' → logprob: -17.75071144104004
    8. '(' → logprob: -18.50071144104004
    9. ' ' → logprob: -19.25071144104004
    10. 'rang' → logprob: -19.25071144104004

Token 34: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.625027656555176
    3. '(w' → logprob: -12.750027656555176
    4. '(n' → logprob: -15.250027656555176
    5. 'h' → logprob: -15.625027656555176
    6. '(
' → logprob: -17.875028610229492
    7. ' (' → logprob: -19.125028610229492
    8. ' h' → logprob: -20.000028610229492
    9. '(int' → logprob: -20.000028610229492
    10. '(m' → logprob: -20.125028610229492

Token 35: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00227693491615355
    2. ')' → logprob: -6.25227689743042
    3. ']' → logprob: -8.002277374267578
    4. ')])' → logprob: -11.752277374267578
    5. '])]' → logprob: -12.752277374267578
    6. '))' → logprob: -13.752277374267578
    7. '')]' → logprob: -14.502277374267578
    8. '])' → logprob: -14.752277374267578
    9. ')],' → logprob: -15.127277374267578
    10. '）' → logprob: -15.877277374267578

Token 36: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.26560723781585693
    2. 'rows' → logprob: -1.890607237815857
    3. 'col' → logprob: -3.8906073570251465
    4. 'cols' → logprob: -4.1406073570251465
    5. 'is' → logprob: -4.8906073570251465
    6. 'mask' → logprob: -5.3906073570251465
    7. 'keep' → logprob: -5.7656073570251465
    8. 'columns' → logprob: -5.8906073570251465
    9. 'r' → logprob: -6.0156073570251465
    10. 'non' → logprob: -6.0156073570251465

Token 37: '_mask' (ID: 21732)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37595105171203613
    2. '_s' → logprob: -2.250951051712036
    3. '_' → logprob: -2.500951051712036
    4. '_mask' → logprob: -2.625951051712036
    5. '_masks' → logprob: -3.875951051712036
    6. '_flags' → logprob: -4.500950813293457
    7. '_counts' → logprob: -5.250950813293457
    8. '_has' → logprob: -5.500950813293457
    9. '_keep' → logprob: -5.750950813293457
    10. '_filter' → logprob: -6.500950813293457

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6113525032997131
    2. 's' → logprob: -0.8613525032997131
    3. '=' → logprob: -3.3613524436950684
    4. ',' → logprob: -9.486352920532227
    5. '_' → logprob: -11.736352920532227
    6. ' ' → logprob: -12.111352920532227
    7. ' s' → logprob: -12.486352920532227
    8. '=[]' → logprob: -12.736352920532227
    9. ')' → logprob: -13.236352920532227
    10. '[:]' → logprob: -13.486352920532227

Token 39: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010118331760168076
    2. '[row' → logprob: -5.51011848449707
    3. '[h' → logprob: -5.88511848449707
    4. '[len' → logprob: -6.38511848449707
    5. ' [' → logprob: -7.38511848449707
    6. '[list' → logprob: -8.51011848449707
    7. '[a' → logprob: -9.13511848449707
    8. '[int' → logprob: -9.13511848449707
    9. '[i' → logprob: -9.51011848449707
    10. '[length' → logprob: -9.76011848449707

Token 40: 'row' (ID: 843)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.010535651817917824
    2. 'True' → logprob: -5.260535717010498
    3. 'False' → logprob: -5.760535717010498
    4. ''any' → logprob: -7.260535717010498
    5. '(any' → logprob: -7.760535717010498
    6. 'not' → logprob: -8.26053524017334
    7. 'all' → logprob: -8.26053524017334
    8. '1' → logprob: -8.88553524017334
    9. '0' → logprob: -9.26053524017334
    10. 'a' → logprob: -9.63553524017334

Token 41: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.09792265295982361
    2. ')' → logprob: -3.3479225635528564
    3. ']' → logprob: -3.8479225635528564
    4. '[i' → logprob: -4.5979228019714355
    5. 'count' → logprob: -5.2229228019714355
    6. ' for' → logprob: -5.8479228019714355
    7. '!=' → logprob: -6.3479228019714355
    8. ' !=' → logprob: -6.3479228019714355
    9. '])' → logprob: -6.4729228019714355
    10. '.' → logprob: -6.5979228019714355

Token 42: '('.')' (ID: 194651)
  Prédit: '('#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('#' → logprob: -0.3423532545566559
    2. '("#' → logprob: -1.3423532247543335
    3. '('' → logprob: -4.092353343963623
    4. '("' → logprob: -5.592353343963623
    5. '(' → logprob: -5.717353343963623
    6. '('.')' → logprob: -5.842353343963623
    7. '(".' → logprob: -6.967353343963623
    8. '('*' → logprob: -7.967353343963623
    9. ''#' → logprob: -8.217352867126465
    10. '"#' → logprob: -8.717352867126465

Token 43: ' !=' (ID: 1666)
  Prédit: '('.')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('.')' → logprob: -0.5083132982254028
    2. '(' → logprob: -1.3833132982254028
    3. '('' → logprob: -2.5083131790161133
    4. '>' → logprob: -3.0083131790161133
    5. ')' → logprob: -5.258313179016113
    6. 'for' → logprob: -5.758313179016113
    7. '()' → logprob: -6.008313179016113
    8. ' for' → logprob: -6.758313179016113
    9. '.' → logprob: -7.258313179016113
    10. '()>' → logprob: -7.508313179016113

Token 44: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10477697849273682
    2. '0' → logprob: -2.3547768592834473
    3. ' w' → logprob: -5.479776859283447
    4. ' ' → logprob: -8.479777336120605
    5. 'row' → logprob: -9.729777336120605
    6. 'len' → logprob: -9.854777336120605
    7. 'h' → logprob: -10.604777336120605
    8. ''w' → logprob: -12.292277336120605
    9. 'col' → logprob: -12.479777336120605
    10. '<w' → logprob: -12.792277336120605

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02749081328511238
    2. 'for' → logprob: -3.6524908542633057
    3. ' ' → logprob: -7.402490615844727
    4. ')' → logprob: -7.527490615844727
    5. ']' → logprob: -10.402490615844727
    6. '	for' → logprob: -12.777490615844727
    7. ' and' → logprob: -13.152490615844727
    8. ',' → logprob: -13.527490615844727
    9. '   ' → logprob: -13.527490615844727
    10. '  ' → logprob: -13.902490615844727

Token 46: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.11285915225744247
    2. 'row' → logprob: -2.2378592491149902
    3. ' ' → logprob: -10.737858772277832
    4. '	row' → logprob: -11.362858772277832
    5. '(row' → logprob: -14.112858772277832
    6. 'rows' → logprob: -14.487858772277832
    7. ' rows' → logprob: -14.487858772277832
    8. ',row' → logprob: -14.987858772277832
    9. '_row' → logprob: -15.112858772277832
    10. '_' → logprob: -15.362858772277832

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038101278245449066
    2. 'in' → logprob: -3.2881011962890625
    3. 'row' → logprob: -10.663101196289062
    4. 'rows' → logprob: -11.413101196289062
    5. ' ' → logprob: -12.038101196289062
    6. 's' → logprob: -12.663101196289062
    7. ' row' → logprob: -13.038101196289062
    8. '	in' → logprob: -13.163101196289062
    9. ')' → logprob: -13.600601196289062
    10. '  ' → logprob: -13.850601196289062

Token 48: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.023250484839081764
    2. ' rows' → logprob: -3.7732505798339844
    3. '	rows' → logprob: -12.898250579833984
    4. '(rows' → logprob: -13.648250579833984
    5. 'row' → logprob: -13.898250579833984
    6. ' ' → logprob: -15.648250579833984
    7. '.rows' → logprob: -16.773250579833984
    8. '_rows' → logprob: -16.898250579833984
    9. 'lines' → logprob: -17.023250579833984
    10. 'range' → logprob: -17.023250579833984

Token 49: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00035274302354082465
    2. ')]' → logprob: -8.25035285949707
    3. ' ]' → logprob: -9.87535285949707
    4. ')' → logprob: -10.62535285949707
    5. '])' → logprob: -11.50035285949707
    6. ']
' → logprob: -12.37535285949707
    7. '`]' → logprob: -15.00035285949707
    8. ']

' → logprob: -15.12535285949707
    9. '])]' → logprob: -15.62535285949707
    10. '()]' → logprob: -15.87535285949707

Token 50: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.03887946158647537
    2. 'column' → logprob: -3.28887939453125
    3. ' col' → logprob: -7.78887939453125
    4. 'keep' → logprob: -10.03887939453125
    5. 'filtered' → logprob: -10.03887939453125
    6. 'for' → logprob: -10.16387939453125
    7. 'if' → logprob: -10.28887939453125
    8. 'rows' → logprob: -10.28887939453125
    9. 'cols' → logprob: -10.41387939453125
    10. ' ' → logprob: -10.91387939453125

Token 51: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.0008664412307552993
    2. '_' → logprob: -7.250866413116455
    3. '_masks' → logprob: -9.125866889953613
    4. 'mask' → logprob: -10.375866889953613
    5. '_m' → logprob: -11.750866889953613
    6. ' _' → logprob: -13.250866889953613
    7. '_MASK' → logprob: -13.875866889953613
    8. 's' → logprob: -14.250866889953613
    9. '_count' → logprob: -15.000866889953613
    10. '_s' → logprob: -15.000866889953613

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005239445250481367
    2. '=' → logprob: -5.255239486694336
    3. ')' → logprob: -13.130239486694336
    4. ' ' → logprob: -13.755239486694336
    5. ' =[' → logprob: -14.130239486694336
    6. '[' → logprob: -14.630239486694336
    7. 's' → logprob: -14.880239486694336
    8. ',' → logprob: -15.380239486694336
    9. ' =)' → logprob: -15.505239486694336
    10. ']' → logprob: -15.880239486694336

Token 53: ' [' (ID: 723)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.5121963024139404
    2. '[' → logprob: -1.0121963024139404
    3. '[row' → logprob: -3.6371963024139404
    4. '[w' → logprob: -5.6371965408325195
    5. '[column' → logprob: -5.8871965408325195
    6. ' [' → logprob: -6.1371965408325195
    7. '[len' → logprob: -6.8871965408325195
    8. '[list' → logprob: -7.2621965408325195
    9. '[word' → logprob: -8.38719654083252
    10. '[i' → logprob: -8.88719654083252

Token 54: 'any' (ID: 1252)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6068804264068604
    2. 'any' → logprob: -1.2318804264068604
    3. ''.' → logprob: -2.1068804264068604
    4. 'col' → logprob: -3.3568804264068604
    5. 'row' → logprob: -6.356880187988281
    6. 'rows' → logprob: -6.856880187988281
    7. 'False' → logprob: -7.106880187988281
    8. ' all' → logprob: -7.606880187988281
    9. 'True' → logprob: -7.606880187988281
    10. 'not' → logprob: -7.981880187988281

Token 55: '(row' (ID: 15945)
  Prédit: '(rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -0.2917655110359192
    2. '(row' → logprob: -1.6667654514312744
    3. 'rows' → logprob: -2.7917654514312744
    4. 'row' → logprob: -6.4167656898498535
    5. '(' → logprob: -7.6667656898498535
    6. '(cell' → logprob: -8.541765213012695
    7. '(r' → logprob: -9.041765213012695
    8. '(cols' → logprob: -9.291765213012695
    9. '(col' → logprob: -9.541765213012695
    10. '(grid' → logprob: -9.666765213012695

Token 56: '[i' (ID: 1768)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.4529942572116852
    2. '[j' → logprob: -1.2029942274093628
    3. '[c' → logprob: -3.0779943466186523
    4. '[i' → logprob: -4.452994346618652
    5. '[x' → logprob: -6.327994346618652
    6. '[column' → logprob: -6.702994346618652
    7. '[' → logprob: -6.827994346618652
    8. '[cell' → logprob: -7.827994346618652
    9. '[row' → logprob: -7.952994346618652
    10. '```' → logprob: -8.327994346618652

Token 57: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14602741599082947
    2. ' ==' → logprob: -2.1460273265838623
    3. 'for' → logprob: -4.646027565002441
    4. ' !=' → logprob: -5.521027565002441
    5. '!=' → logprob: -6.271027565002441
    6. ' for' → logprob: -6.396027565002441
    7. '=='' → logprob: -7.521027565002441
    8. ' ' → logprob: -8.646027565002441
    9. '!='' → logprob: -9.021027565002441
    10. '   ' → logprob: -9.021027565002441

Token 58: ' !=' (ID: 1666)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5691816806793213
    2. 'for' → logprob: -1.4441816806793213
    3. '==' → logprob: -1.9441816806793213
    4. '!=' → logprob: -3.9441816806793213
    5. ' !=' → logprob: -4.069181442260742
    6. ' ==' → logprob: -4.444181442260742
    7. '!='' → logprob: -6.194181442260742
    8. ' ' → logprob: -6.319181442260742
    9. ''.' → logprob: -7.194181442260742
    10. '=='' → logprob: -7.569181442260742

Token 59: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0017082560807466507
    2. ' '.'' → logprob: -6.876708030700684
    3. '.' → logprob: -7.751708030700684
    4. ''#' → logprob: -8.501708030700684
    5. ''' → logprob: -10.751708030700684
    6. ' ' → logprob: -12.251708030700684
    7. '"."' → logprob: -12.501708030700684
    8. '')' → logprob: -12.876708030700684
    9. ' '.')' → logprob: -13.001708030700684
    10. ' '#'' → logprob: -13.501708030700684

Token 60: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11291079223155975
    2. 'for' → logprob: -2.237910747528076
    3. ' ' → logprob: -9.737911224365234
    4. '	for' → logprob: -10.862911224365234
    5. ')' → logprob: -12.487911224365234
    6. '   ' → logprob: -13.112911224365234
    7. '    ' → logprob: -13.862911224365234
    8. '
' → logprob: -14.362911224365234
    9. ' in' → logprob: -14.487911224365234
    10. '  ' → logprob: -14.487911224365234

Token 61: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.38695189356803894
    2. 'row' → logprob: -1.1369519233703613
    3. ' ' → logprob: -10.261951446533203
    4. '	row' → logprob: -10.636951446533203
    5. ' i' → logprob: -11.261951446533203
    6. 'i' → logprob: -12.386951446533203
    7. 'rows' → logprob: -13.011951446533203
    8. '  ' → logprob: -14.261951446533203
    9. ' rows' → logprob: -14.386951446533203
    10. '   ' → logprob: -14.886951446533203

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16039147973060608
    2. 'in' → logprob: -1.9103914499282837
    3. ')' → logprob: -9.410391807556152
    4. ' ' → logprob: -9.660391807556152
    5. 's' → logprob: -12.410391807556152
    6. '<|end|>' → logprob: -13.160391807556152
    7. 'i' → logprob: -13.285391807556152
    8. '	in' → logprob: -13.410391807556152
    9. '  ' → logprob: -13.785391807556152
    10. ',' → logprob: -13.910391807556152

Token 63: ' rows' (ID: 13585)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6312636733055115
    2. 'row' → logprob: -1.3812637329101562
    3. 'rows' → logprob: -1.6312637329101562
    4. ' range' → logprob: -4.006263732910156
    5. ' row' → logprob: -6.506263732910156
    6. ' rows' → logprob: -6.631263732910156
    7. 'r' → logprob: -9.506263732910156
    8. ' ' → logprob: -10.881263732910156
    9. ')' → logprob: -11.881263732910156
    10. '   ' → logprob: -12.756263732910156

Token 64: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03174377232789993
    2. 'for' → logprob: -3.6567437648773193
    3. ' in' → logprob: -5.656744003295898
    4. ')' → logprob: -6.656744003295898
    5. ' ' → logprob: -7.781744003295898
    6. '   ' → logprob: -9.031744003295898
    7. ' range' → logprob: -10.406744003295898
    8. '	for' → logprob: -10.531744003295898
    9. '    ' → logprob: -11.031744003295898
    10. ' )' → logprob: -11.156744003295898

Token 65: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016263917088508606
    2. 'for' → logprob: -4.141263961791992
    3. ' in' → logprob: -8.766263961791992
    4. ' ' → logprob: -9.891263961791992
    5. '   ' → logprob: -11.141263961791992
    6. '	for' → logprob: -12.391263961791992
    7. ' range' → logprob: -13.766263961791992
    8. ')' → logprob: -14.266263961791992
    9. ' ' → logprob: -14.266263961791992
    10. '    ' → logprob: -14.516263961791992

Token 66: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132629096508026
    2. 'range' → logprob: -1.313262939453125
    3. ' ' → logprob: -14.438262939453125
    4. '	range' → logprob: -15.438262939453125
    5. 'i' → logprob: -15.688262939453125
    6. '(range' → logprob: -16.938262939453125
    7. ' i' → logprob: -17.063262939453125
    8. '  ' → logprob: -17.188262939453125
    9. ' in' → logprob: -17.313262939453125
    10. '   ' → logprob: -17.813262939453125

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055376529693603516
    2. 'in' → logprob: -2.9303765296936035
    3. ' range' → logprob: -8.055376052856445
    4. 'range' → logprob: -8.680376052856445
    5. ' ' → logprob: -12.180376052856445
    6. ')' → logprob: -14.305376052856445
    7. ',' → logprob: -14.430376052856445
    8. '  ' → logprob: -15.305376052856445
    9. '   ' → logprob: -16.805376052856445
    10. '	in' → logprob: -16.805376052856445

Token 68: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519296407699585
    2. ' range' → logprob: -1.5019296407699585
    3. '	range' → logprob: -15.50192928314209
    4. '(range' → logprob: -15.62692928314209
    5. ' ' → logprob: -15.87692928314209
    6. '   ' → logprob: -17.501930236816406
    7. ')' → logprob: -17.751930236816406
    8. 'rang' → logprob: -18.501930236816406
    9. ' xrange' → logprob: -18.751930236816406
    10. '  ' → logprob: -19.126930236816406

Token 69: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.023724649101495743
    2. 'w' → logprob: -3.7737245559692383
    3. '(' → logprob: -8.148724555969238
    4. ' w' → logprob: -8.773724555969238
    5. ' (' → logprob: -10.648724555969238
    6. '	w' → logprob: -11.898724555969238
    7. '(h' → logprob: -13.773724555969238
    8. '<w' → logprob: -14.023724555969238
    9. '(
' → logprob: -14.273724555969238
    10. ')' → logprob: -15.398724555969238

Token 70: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006177394650876522
    2. ']' → logprob: -5.2561774253845215
    3. ')' → logprob: -7.0061774253845215
    4. '])' → logprob: -11.506176948547363
    5. ' )' → logprob: -11.881176948547363
    6. ' ]' → logprob: -12.006176948547363
    7. '])]' → logprob: -12.006176948547363
    8. ')])' → logprob: -12.756176948547363
    9. ')]
' → logprob: -13.506176948547363
    10. '))' → logprob: -14.381176948547363

Token 71: 'for' (ID: 1938)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.6384742259979248
    2. 'for' → logprob: -1.5134742259979248
    3. 'new' → logprob: -1.8884742259979248
    4. 'rows' → logprob: -3.013474225997925
    5. 'result' → logprob: -4.013474464416504
    6. 'compressed' → logprob: -4.388474464416504
    7. 'row' → logprob: -4.638474464416504
    8. 'pr' → logprob: -5.888474464416504
    9. 'print' → logprob: -6.638474464416504
    10. 'r' → logprob: -7.013474464416504

Token 72: ' row' (ID: 5225)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15983904898166656
    2. ' r' → logprob: -2.659839153289795
    3. ' _' → logprob: -3.034839153289795
    4. ' row' → logprob: -4.159839153289795
    5. '_' → logprob: -5.034839153289795
    6. ' ' → logprob: -5.284839153289795
    7. 'i' → logprob: -6.659839153289795
    8. 'r' → logprob: -7.659839153289795
    9. ' h' → logprob: -8.284838676452637
    10. 'row' → logprob: -9.034838676452637

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03279826417565346
    2. 'in' → logprob: -4.0327982902526855
    3. ',' → logprob: -4.2827982902526855
    4. '_' → logprob: -8.407797813415527
    5. ' ,' → logprob: -8.407797813415527
    6. '_in' → logprob: -9.407797813415527
    7. 's' → logprob: -9.907797813415527
    8. ' _' → logprob: -10.657797813415527
    9. ' if' → logprob: -10.782797813415527
    10. 'if' → logprob: -11.032797813415527

Token 74: ' compress' (ID: 34112)
  Prédit: 'compress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compress' → logprob: -0.0010842557530850172
    2. ' compress' → logprob: -7.501084327697754
    3. 'com' → logprob: -7.751084327697754
    4. 'list' → logprob: -9.751084327697754
    5. 'rows' → logprob: -10.876084327697754
    6. '(com' → logprob: -11.251084327697754
    7. 'filter' → logprob: -12.126084327697754
    8. '	com' → logprob: -13.376084327697754
    9. 'compressed' → logprob: -13.376084327697754
    10. ' ' → logprob: -14.251084327697754

Token 75: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -3.523948907968588e-05
    2. '(' → logprob: -11.000035285949707
    3. 'rows' → logprob: -11.500035285949707
    4. '(row' → logprob: -11.875035285949707
    5. ' rows' → logprob: -14.500035285949707
    6. '(columns' → logprob: -15.250035285949707
    7. ' (' → logprob: -15.375035285949707
    8. '(lines' → logprob: -15.500035285949707
    9. '	rows' → logprob: -16.25003433227539
    10. '(
' → logprob: -17.25003433227539

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011873723706230521
    2. ',row' → logprob: -6.751187324523926
    3. ' ,' → logprob: -11.376187324523926
    4. 'row' → logprob: -13.251187324523926
    5. ',col' → logprob: -13.376187324523926
    6. '`,' → logprob: -15.001187324523926
    7. '(row' → logprob: -15.001187324523926
    8. '[row' → logprob: -15.001187324523926
    9. ' row' → logprob: -15.126187324523926
    10. ',column' → logprob: -15.376187324523926

Token 77: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.03365710750222206
    2. 'row' → logprob: -3.4086570739746094
    3. '[row' → logprob: -12.28365707397461
    4. '	row' → logprob: -12.78365707397461
    5. ' col' → logprob: -12.90865707397461
    6. '(row' → logprob: -14.28365707397461
    7. ' ' → logprob: -15.15865707397461
    8. ',row' → logprob: -15.78365707397461
    9. ')' → logprob: -16.40865707397461
    10. '=row' → logprob: -16.40865707397461

Token 78: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -2.641841820150148e-05
    2. 'mask' → logprob: -11.00002670288086
    3. '_MASK' → logprob: -12.75002670288086
    4. '_masks' → logprob: -12.75002670288086
    5. '_row' → logprob: -13.12502670288086
    6. ')' → logprob: -14.87502670288086
    7. 'row' → logprob: -14.87502670288086
    8. '_' → logprob: -15.87502670288086
    9. 'Mask' → logprob: -15.87502670288086
    10. '__' → logprob: -16.25002670288086

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.047027841210365295
    2. ')' → logprob: -3.172027826309204
    3. ' ):' → logprob: -6.047028064727783
    4. '):
' → logprob: -6.547028064727783
    5. ' )' → logprob: -8.922027587890625
    6. ',' → logprob: -10.047027587890625
    7. '),' → logprob: -11.172027587890625
    8. ':' → logprob: -11.672027587890625
    9. ' ' → logprob: -12.547027587890625
    10. '):
' → logprob: -12.797027587890625

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3689793348312378
    2. 'print' → logprob: -1.9939793348312378
    3. ' print' → logprob: -2.3689794540405273
    4. ' for' → logprob: -3.1189794540405273
    5. 'for' → logprob: -3.3689794540405273
    6. '    ' → logprob: -8.993979454040527
    7. '    
' → logprob: -11.118979454040527
    8. '       ' → logprob: -11.118979454040527
    9. ' ' → logprob: -11.493979454040527
    10. '   ' → logprob: -11.743979454040527

Token 81: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.030961425974965096
    2. '   ' → logprob: -4.405961513519287
    3. ' print' → logprob: -4.655961513519287
    4. 'for' → logprob: -4.780961513519287
    5. ' for' → logprob: -7.905961513519287
    6. ' ' → logprob: -11.905961036682129
    7. '  ' → logprob: -12.280961036682129
    8. '	print' → logprob: -12.780961036682129
    9. '    ' → logprob: -12.905961036682129
    10. '       ' → logprob: -13.780961036682129

Token 82: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.18710194528102875
    2. '(*' → logprob: -2.0621018409729004
    3. '(' → logprob: -3.4371018409729004
    4. '("' → logprob: -4.5621018409729
    5. '(*(' → logprob: -7.1871018409729
    6. '"' → logprob: -10.062102317810059
    7. '('',' → logprob: -11.562102317810059
    8. '(row' → logprob: -11.937102317810059
    9. ''' → logprob: -12.062102317810059
    10. '()' → logprob: -12.312102317810059

Token 83: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0006305903079919517
    2. '"' → logprob: -7.5006303787231445
    3. ' ''.' → logprob: -10.250630378723145
    4. ''.' → logprob: -11.125630378723145
    5. '''' → logprob: -11.125630378723145
    6. ''' → logprob: -11.375630378723145
    7. '   ' → logprob: -14.750630378723145
    8. '('' → logprob: -15.500630378723145
    9. ''',' → logprob: -15.625630378723145
    10. '''
' → logprob: -15.625630378723145

Token 84: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -8.65707261255011e-06
    2. 'strip' → logprob: -12.000008583068848
    3. ' join' → logprob: -13.250008583068848
    4. '.join' → logprob: -15.625008583068848
    5. 'rstrip' → logprob: -16.625009536743164
    6. 'pack' → logprob: -16.750009536743164
    7. 'print' → logprob: -16.875009536743164
    8. '1' → logprob: -17.125009536743164
    9. ''.' → logprob: -17.125009536743164
    10. '(join' → logprob: -17.250009536743164

Token 85: '(com' (ID: 27868)
  Prédit: 'compress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compress' → logprob: -0.006638394668698311
    2. '(com' → logprob: -5.381638526916504
    3. 'com' → logprob: -6.506638526916504
    4. ' compress' → logprob: -8.506638526916504
    5. 'list' → logprob: -8.506638526916504
    6. '	com' → logprob: -9.381638526916504
    7. '.compress' → logprob: -11.881638526916504
    8. '   ' → logprob: -11.881638526916504
    9. 'compressed' → logprob: -12.381638526916504
    10. '[' → logprob: -12.756638526916504

Token 86: 'press' (ID: 2020)
  Prédit: 'press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -7.827200897736475e-05
    2. 'ress' → logprob: -9.500078201293945
    3. 'p' → logprob: -13.250078201293945
    4. '[' → logprob: -15.000078201293945
    5. '(' → logprob: -15.000078201293945
    6. 'ss' → logprob: -15.625078201293945
    7. 'pr' → logprob: -15.625078201293945
    8. 'pressed' → logprob: -15.750078201293945
    9. 'pres' → logprob: -15.875078201293945
    10. 'rp' → logprob: -16.750078201293945

Token 87: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0003659746435005218
    2. '(rows' → logprob: -8.2503662109375
    3. '(list' → logprob: -10.1253662109375
    4. '(' → logprob: -10.7503662109375
    5. '(col' → logprob: -11.5003662109375
    6. ')' → logprob: -11.5003662109375
    7. 'row' → logprob: -12.1253662109375
    8. '(cols' → logprob: -12.2503662109375
    9. '[row' → logprob: -12.8753662109375
    10. ')(' → logprob: -13.2503662109375

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019313829019665718
    2. ',col' → logprob: -4.394313812255859
    3. ' ,' → logprob: -5.144313812255859
    4. ' col' → logprob: -7.394313812255859
    5. '(col' → logprob: -8.26931381225586
    6. 'col' → logprob: -10.14431381225586
    7. ',row' → logprob: -11.14431381225586
    8. '),' → logprob: -12.01931381225586
    9. ')' → logprob: -12.26931381225586
    10. '[col' → logprob: -12.39431381225586

Token 89: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.20141538977622986
    2. ' col' → logprob: -1.7014154195785522
    3. '[col' → logprob: -13.826415061950684
    4. 'column' → logprob: -14.701415061950684
    5. '	col' → logprob: -15.201415061950684
    6. '   ' → logprob: -15.326415061950684
    7. ' ' → logprob: -16.326416015625
    8. '(col' → logprob: -16.951416015625
    9. '.col' → logprob: -17.201416015625
    10. 'colm' → logprob: -17.826416015625

Token 90: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -4.4849443838757e-06
    2. '_MASK' → logprob: -13.250004768371582
    3. 'mask' → logprob: -13.250004768371582
    4. '_' → logprob: -15.750004768371582
    5. '_m' → logprob: -15.750004768371582
    6. '_masks' → logprob: -15.750004768371582
    7. '_col' → logprob: -16.125003814697266
    8. 'Mask' → logprob: -16.250003814697266
    9. '__' → logprob: -17.375003814697266
    10. 'o' → logprob: -17.500003814697266

Token 91: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.018597032874822617
    2. '))' → logprob: -4.01859712600708
    3. ')' → logprob: -7.89359712600708
    4. ')))
' → logprob: -9.643596649169922
    5. '))
' → logprob: -12.893596649169922
    6. '))))' → logprob: -12.893596649169922
    7. '')))' → logprob: -13.518596649169922
    8. ')))

' → logprob: -14.018596649169922
    9. ' ' → logprob: -14.018596649169922
    10. '())))' → logprob: -15.268596649169922


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 47.19%
Précision adaptée (1ère position): 48.31%
Précision (top 10): 84.27%
================================================================================
