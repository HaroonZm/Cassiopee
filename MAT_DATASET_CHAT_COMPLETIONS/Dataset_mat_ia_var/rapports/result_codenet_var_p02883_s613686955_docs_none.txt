================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

sys.setrecursionlimit(10 ** 6)
input = sys.stdin.readline

def main():
    n, k = map(int, input().split())
    aa = list(map(int, input().split()))
    ff = list(map(int, input().split()))
    aa.sort(reverse=True)
    ff.sort()
    l = -1
    r = aa[0] * ff[-1]
    while l + 1 < r:
        m = (l + r) // 2
        s = 0
        for a, f in zip(aa, ff):
            b = m // f
            s += max(a - b, 0)
            if s > k:
                l = m
                break
        else:
            r = m
    print(r)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.024313896894454956
    2. '\n' → logprob: -4.649313926696777
    3. '<|end|>' → logprob: -5.274313926696777
    4. 'import' → logprob: -5.524313926696777
    5. '\' → logprob: -6.649313926696777
    6. 'newline' → logprob: -7.024313926696777
    7. '<|end|>' → logprob: -7.274313926696777
    8. '' → logprob: -7.524313926696777
    9. '
' → logprob: -8.274313926696777
    10. '[' → logprob: -8.399313926696777

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5570885807392187e-05
    2. ' .' → logprob: -12.875015258789062
    3. '.`' → logprob: -13.125015258789062
    4. '.readline' → logprob: -13.250015258789062
    5. '.stdout' → logprob: -13.500015258789062
    6. '.user' → logprob: -14.000015258789062
    7. '.import' → logprob: -14.000015258789062
    8. '."""' → logprob: -14.125015258789062
    9. '.exit' → logprob: -14.375015258789062
    10. '.​' → logprob: -14.375015258789062

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6206529140472412
    2. '_trace' → logprob: -1.9956529140472412
    3. ' _' → logprob: -2.120652914047241
    4. '_version' → logprob: -2.370652914047241
    5. '_sys' → logprob: -3.120652914047241
    6. '_encoding' → logprob: -4.49565315246582
    7. '_system' → logprob: -4.99565315246582
    8. '_attr' → logprob: -5.49565315246582
    9. '_default' → logprob: -5.49565315246582
    10. '_exc' → logprob: -6.24565315246582

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.06535323709249496
    2. 'limit' → logprob: -4.4403533935546875
    3. 't' → logprob: -4.5653533935546875
    4. 'ursive' → logprob: -4.9403533935546875
    5. 'sys' → logprob: -5.3153533935546875
    6. '_' → logprob: -5.3153533935546875
    7. '_sys' → logprob: -5.5653533935546875
    8. 'ut' → logprob: -6.4403533935546875
    9. '_limit' → logprob: -6.5653533935546875
    10. 'up' → logprob: -6.6903533935546875

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00025966696557588875
    2. '_limit' → logprob: -8.375259399414062
    3. 'lim' → logprob: -10.625259399414062
    4. ' limit' → logprob: -13.000259399414062
    5. 'depth' → logprob: -14.500259399414062
    6. '-limit' → logprob: -14.500259399414062
    7. 'ault' → logprob: -14.875259399414062
    8. 'al' → logprob: -15.375259399414062
    9. 'l' → logprob: -15.500259399414062
    10. 'ort' → logprob: -15.875259399414062

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.034592388459714e-06
    2. '(
' → logprob: -12.750005722045898
    3. ' (' → logprob: -13.750005722045898
    4. '(

' → logprob: -14.000005722045898
    5. '('' → logprob: -15.000005722045898
    6. '("("' → logprob: -15.125005722045898
    7. '((' → logprob: -15.250005722045898
    8. '()' → logprob: -16.7500057220459
    9. '(`' → logprob: -17.2500057220459
    10. '40' → logprob: -17.5000057220459

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4741309583187103
    2. '100' → logprob: -0.9741309881210327
    3. '300' → logprob: -10.849130630493164
    4. '500' → logprob: -11.099130630493164
    5. '999' → logprob: -11.849130630493164
    6. ' ' → logprob: -11.974130630493164
    7. '1' → logprob: -12.599130630493164
    8. '150' → logprob: -14.099130630493164
    9. '110' → logprob: -14.974130630493164
    10. '  ' → logprob: -14.974130630493164

Token 10: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02113441564142704
    2. '000' → logprob: -4.521134376525879
    3. '00' → logprob: -4.646134376525879
    4. '4' → logprob: -7.896134376525879
    5. '6' → logprob: -10.021134376525879
    6. '2' → logprob: -11.771134376525879
    7. '3' → logprob: -12.271134376525879
    8. ')' → logprob: -12.646134376525879
    9. '5' → logprob: -13.521134376525879
    10. '**' → logprob: -13.896134376525879

Token 11: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004115088377147913
    2. '6' → logprob: -5.754115104675293
    3. '9' → logprob: -7.254115104675293
    4. '8' → logprob: -8.379115104675293
    5. ')' → logprob: -16.879114151000977
    6. ' ' → logprob: -17.004114151000977
    7. '```' → logprob: -18.129114151000977
    8. '4' → logprob: -18.504114151000977
    9. '5' → logprob: -18.629114151000977
    10. '**' → logprob: -19.879114151000977

Token 12: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.020047646015882492
    2. '6' → logprob: -4.020047664642334
    3. '9' → logprob: -6.520047664642334
    4. '8' → logprob: -7.770047664642334
    5. '```' → logprob: -16.895048141479492
    6. '**' → logprob: -17.895048141479492
    7. ' ' → logprob: -18.520048141479492
    8. '5' → logprob: -18.520048141479492
    9. '4' → logprob: -19.645048141479492
    10. '(' → logprob: -20.145048141479492

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ' )' → logprob: -12.750005722045898
    3. '))' → logprob: -12.750005722045898
    4. ')
' → logprob: -15.625005722045898
    5. ')))' → logprob: -17.5000057220459
    6. '')' → logprob: -17.6250057220459
    7. ')

' → logprob: -17.6250057220459
    8. '```' → logprob: -17.6250057220459
    9. ')`' → logprob: -17.7500057220459
    10. ' ' → logprob: -17.8750057220459

Token 14: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7530561685562134
    2. '

' → logprob: -0.8780561685562134
    3. 'def' → logprob: -3.628056049346924
    4. '' → logprob: -4.003056049346924
    5. '
' → logprob: -4.003056049346924
    6. '(' → logprob: -4.253056049346924
    7. '\n' → logprob: -4.378056049346924
    8. '\' → logprob: -4.503056049346924
    9. '

' → logprob: -5.628056049346924
    10. '```' → logprob: -6.253056049346924

Token 15: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035475664772093296
    2. '()' → logprob: -6.503547668457031
    3. '```' → logprob: -7.253547668457031
    4. '.' → logprob: -8.003547668457031
    5. '40' → logprob: -8.003547668457031
    6. ')' → logprob: -8.753547668457031
    7. '('' → logprob: -9.628547668457031
    8. '(
' → logprob: -9.878547668457031
    9. ''' → logprob: -10.003547668457031
    10. '("("' → logprob: -10.253547668457031

Token 16: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4760347306728363
    2. ' sys' → logprob: -1.3510347604751587
    3. 'input' → logprob: -2.226034641265869
    4. ' input' → logprob: -4.476034641265869
    5. '(sys' → logprob: -8.476035118103027
    6. '	sys' → logprob: -9.476035118103027
    7. '=sys' → logprob: -9.476035118103027
    8. 'lambda' → logprob: -10.101035118103027
    9. '(input' → logprob: -11.476035118103027
    10. 'raw' → logprob: -11.601035118103027

Token 17: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.23078320920467377
    2. '.' → logprob: -1.605783224105835
    3. '.readline' → logprob: -5.730782985687256
    4. ' .' → logprob: -6.855782985687256
    5. '.stdout' → logprob: -7.105782985687256
    6. '.std' → logprob: -9.480783462524414
    7. '.argv' → logprob: -10.355783462524414
    8. '.input' → logprob: -10.605783462524414
    9. '.​' → logprob: -11.355783462524414
    10. '.stderr' → logprob: -11.355783462524414

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.10392103344202042
    2. '.' → logprob: -2.3539209365844727
    3. '.read' → logprob: -5.603920936584473
    4. '.readlines' → logprob: -11.353920936584473
    5. '.Read' → logprob: -11.853920936584473
    6. '.buffer' → logprob: -12.978920936584473
    7. '.

' → logprob: -14.978920936584473
    8. '.READ' → logprob: -14.978920936584473
    9. 'read' → logprob: -15.228920936584473
    10. '.
' → logprob: -15.353920936584473

Token 19: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03852027282118797
    2. '(' → logprob: -3.788520336151123
    3. '()
' → logprob: -4.413520336151123
    4. '()

' → logprob: -6.163520336151123
    5. '(
' → logprob: -7.788520336151123
    6. '()\' → logprob: -8.288519859313965
    7. '
' → logprob: -9.163519859313965
    8. '\n' → logprob: -10.038519859313965
    9. 'def' → logprob: -10.288519859313965
    10. '(

' → logprob: -10.788519859313965

Token 20: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38747355341911316
    2. 'def' → logprob: -1.1374735832214355
    3. '
' → logprob: -9.137473106384277
    4. 'N' → logprob: -9.137473106384277
    5. 'class' → logprob: -9.262473106384277
    6. '\' → logprob: -9.387473106384277
    7. '(n' → logprob: -10.012473106384277
    8. 'for' → logprob: -10.012473106384277
    9. 'd' → logprob: -10.137473106384277
    10. '```' → logprob: -10.512473106384277

Token 21: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7427706122398376
    2. ' dfs' → logprob: -1.3677706718444824
    3. ' factorial' → logprob: -2.1177706718444824
    4. ' solve' → logprob: -2.2427706718444824
    5. ' process' → logprob: -4.117770671844482
    6. ' factor' → logprob: -4.617770671844482
    7. ' ' → logprob: -5.617770671844482
    8. ' parse' → logprob: -6.367770671844482
    9. ' calculate' → logprob: -6.492770671844482
    10. ' f' → logprob: -6.742770671844482

Token 22: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06056851148605347
    2. '():' → logprob: -2.9355685710906982
    3. ':' → logprob: -5.685568332672119
    4. '(:' → logprob: -6.185568332672119
    5. '(":' → logprob: -10.060568809509277
    6. ' (' → logprob: -10.310568809509277
    7. '(`' → logprob: -10.685568809509277
    8. '(
' → logprob: -10.685568809509277
    9. '):' → logprob: -11.060568809509277
    10. ' ():' → logprob: -11.060568809509277

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0043465676717460155
    2. 'n' → logprob: -5.6293463706970215
    3. '(n' → logprob: -8.50434684753418
    4. ')' → logprob: -9.12934684753418
    5. ' n' → logprob: -9.37934684753418
    6. '    ' → logprob: -9.50434684753418
    7. '    
' → logprob: -9.62934684753418
    8. 'a' → logprob: -10.00434684753418
    9. '(' → logprob: -10.25434684753418
    10. ' ' → logprob: -10.37934684753418

Token 24: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.014510281383991241
    2. ' n' → logprob: -4.514510154724121
    3. '   ' → logprob: -5.764510154724121
    4. 'N' → logprob: -8.264510154724121
    5. ' N' → logprob: -11.264510154724121
    6. 't' → logprob: -11.514510154724121
    7. '    
' → logprob: -11.889510154724121
    8. 'a' → logprob: -12.139510154724121
    9. ' for' → logprob: -12.514510154724121
    10. ' ' → logprob: -12.639510154724121

Token 25: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006042439490556717
    2. '=' → logprob: -5.13104248046875
    3. ' ' → logprob: -9.25604248046875
    4. '=int' → logprob: -11.50604248046875
    5. ' =
' → logprob: -12.63104248046875
    6. ',' → logprob: -12.75604248046875
    7. ' ,' → logprob: -13.75604248046875
    8. '   ' → logprob: -15.38104248046875
    9. '  ' → logprob: -16.00604248046875
    10. ' >' → logprob: -16.00604248046875

Token 26: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8815720677375793
    2. ' k' → logprob: -1.2565720081329346
    3. ' m' → logprob: -1.3815720081329346
    4. 'm' → logprob: -3.2565720081329346
    5. 'k' → logprob: -4.756572246551514
    6. '=' → logprob: -7.506572246551514
    7. ' =' → logprob: -7.631572246551514
    8. ' t' → logprob: -7.756572246551514
    9. ' x' → logprob: -8.256571769714355
    10. ' q' → logprob: -8.756571769714355

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889209687709808
    2. '=' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.20389175415039
    4. ',' → logprob: -14.95389175415039
    5. ')' → logprob: -16.20389175415039
    6. '=int' → logprob: -17.45389175415039
    7. ' =
' → logprob: -17.45389175415039
    8. '   ' → logprob: -17.82889175415039
    9. '  ' → logprob: -17.82889175415039
    10. '=input' → logprob: -18.07889175415039

Token 28: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006722706835716963
    2. 'map' → logprob: -5.006722927093506
    3. ' ' → logprob: -12.381722450256348
    4. '	map' → logprob: -13.756722450256348
    5. ' list' → logprob: -14.631722450256348
    6. ' input' → logprob: -14.756722450256348
    7. '   ' → logprob: -15.381722450256348
    8. ' ma' → logprob: -15.506722450256348
    9. '  ' → logprob: -15.631722450256348
    10. 'm' → logprob: -16.006723403930664

Token 29: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4153268039226532
    2. '(int' → logprob: -1.6653268337249756
    3. '(input' → logprob: -1.9153268337249756
    4. '(str' → logprob: -5.7903265953063965
    5. '(lambda' → logprob: -8.540327072143555
    6. '(list' → logprob: -9.040327072143555
    7. '(
' → logprob: -11.040327072143555
    8. '(in' → logprob: -11.165327072143555
    9. '(eval' → logprob: -11.165327072143555
    10. '(tuple' → logprob: -12.040327072143555

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007677130866795778
    2. ',input' → logprob: -4.88267707824707
    3. 'input' → logprob: -10.50767707824707
    4. '(' → logprob: -10.75767707824707
    5. '(input' → logprob: -11.25767707824707
    6. ' ,' → logprob: -11.88267707824707
    7. ',int' → logprob: -13.50767707824707
    8. ')' → logprob: -14.75767707824707
    9. ',
' → logprob: -15.75767707824707
    10. ' input' → logprob: -16.00767707824707

Token 31: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16027723252773285
    2. ' input' → logprob: -1.910277247428894
    3. 'sys' → logprob: -10.660277366638184
    4. ' sys' → logprob: -10.785277366638184
    5. ')' → logprob: -11.910277366638184
    6. ' ' → logprob: -13.785277366638184
    7. '(input' → logprob: -14.660277366638184
    8. ',input' → logprob: -15.035277366638184
    9. '	input' → logprob: -15.785277366638184
    10. '   ' → logprob: -16.410276412963867

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005675682332366705
    2. '()' → logprob: -7.500567436218262
    3. '())' → logprob: -11.375567436218262
    4. ' ().' → logprob: -13.000567436218262
    5. '()
' → logprob: -14.625567436218262
    6. '(' → logprob: -16.625568389892578
    7. ')' → logprob: -16.625568389892578
    8. ' ()' → logprob: -16.750568389892578
    9. '（）' → logprob: -17.000568389892578
    10. '()\' → logprob: -17.875568389892578

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.48557189106941223
    2. 'strip' → logprob: -0.9855718612670898
    3. 'rstrip' → logprob: -4.48557186126709
    4. 'read' → logprob: -9.36057186126709
    5. ')' → logprob: -9.73557186126709
    6. '())' → logprob: -12.11057186126709
    7. '(split' → logprob: -13.36057186126709
    8. 'decode' → logprob: -13.48557186126709
    9. '().' → logprob: -13.61057186126709
    10. '()' → logprob: -13.86057186126709

Token 34: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001535216229967773
    2. '))' → logprob: -6.501535415649414
    3. '()' → logprob: -10.876535415649414
    4. '())' → logprob: -11.376535415649414
    5. ')
' → logprob: -14.251535415649414
    6. ')))' → logprob: -14.876535415649414
    7. '(' → logprob: -15.001535415649414
    8. ' )' → logprob: -15.001535415649414
    9. ')`' → logprob: -15.251535415649414
    10. '),' → logprob: -15.376535415649414

Token 35: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0849156379699707
    2. '   ' → logprob: -1.2099156379699707
    3. ')' → logprob: -1.4599156379699707
    4. ' ' → logprob: -3.3349156379699707
    5. '
' → logprob: -3.5849156379699707
    6. '\n' → logprob: -3.8349156379699707
    7. '\' → logprob: -4.459915637969971
    8. '    
' → logprob: -4.834915637969971
    9. ' 
' → logprob: -4.959915637969971
    10. ',' → logprob: -5.709915637969971

Token 36: ' aa' (ID: 40260)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8925949335098267
    2. 'dp' → logprob: -1.7675949335098267
    3. ' dp' → logprob: -2.142594814300537
    4. 'a' → logprob: -2.642594814300537
    5. '   ' → logprob: -3.017594814300537
    6. 'd' → logprob: -3.267594814300537
    7. '    ' → logprob: -3.392594814300537
    8. ' 
' → logprob: -3.892594814300537
    9. ')' → logprob: -4.767594814300537
    10. ' a' → logprob: -5.267594814300537

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2821581959724426
    2. '=' → logprob: -1.4071581363677979
    3. ',' → logprob: -7.782158374786377
    4. ' ' → logprob: -7.907158374786377
    5. '[' → logprob: -9.032157897949219
    6. 's' → logprob: -10.407157897949219
    7. '[:]' → logprob: -10.407157897949219
    8. '   ' → logprob: -11.782157897949219
    9. '[:' → logprob: -11.907157897949219
    10. '.' → logprob: -12.157157897949219

Token 38: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.277087926864624
    2. 'list' → logprob: -1.527087926864624
    3. ' [' → logprob: -3.902087926864624
    4. '[' → logprob: -6.152088165283203
    5. '[list' → logprob: -6.402088165283203
    6. ' []' → logprob: -7.402088165283203
    7. '[]' → logprob: -8.527088165283203
    8. '[int' → logprob: -10.652088165283203
    9. '[a' → logprob: -12.402088165283203
    10. '	list' → logprob: -12.777088165283203

Token 39: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.4766387939453125
    2. '(' → logprob: -0.9766387939453125
    3. '(int' → logprob: -6.2266387939453125
    4. '(range' → logprob: -7.9766387939453125
    5. '()' → logprob: -8.851638793945312
    6. '(input' → logprob: -9.601638793945312
    7. '(
' → logprob: -12.101638793945312
    8. '(

' → logprob: -12.351638793945312
    9. '(eval' → logprob: -12.726638793945312
    10. '(filter' → logprob: -13.351638793945312

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007188651943579316
    2. '(' → logprob: -7.25071907043457
    3. 'int' → logprob: -12.37571907043457
    4. '[int' → logprob: -13.00071907043457
    5. '<int' → logprob: -13.50071907043457
    6. '(
' → logprob: -15.50071907043457
    7. '=int' → logprob: -15.87571907043457
    8. ',int' → logprob: -15.87571907043457
    9. '(lambda' → logprob: -16.12571907043457
    10. '(str' → logprob: -16.25071907043457

Token 41: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7477712631225586
    2. ',' → logprob: -1.3727712631225586
    3. ',input' → logprob: -1.3727712631225586
    4. '(' → logprob: -3.9977712631225586
    5. '(int' → logprob: -7.247771263122559
    6. ',int' → logprob: -7.872771263122559
    7. ' ,' → logprob: -8.872771263122559
    8. ')' → logprob: -9.872771263122559
    9. ',(' → logprob: -10.247771263122559
    10. 'input' → logprob: -10.247771263122559

Token 42: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519317865371704
    2. ' input' → logprob: -1.5019317865371704
    3. '(input' → logprob: -13.876932144165039
    4. ' ' → logprob: -14.501932144165039
    5. '	input' → logprob: -14.626932144165039
    6. '<input' → logprob: -15.751932144165039
    7. '   ' → logprob: -15.876932144165039
    8. ',input' → logprob: -16.00193214416504
    9. '=input' → logprob: -16.25193214416504
    10. '_input' → logprob: -16.62693214416504

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.816093228830141e-06
    2. '()' → logprob: -12.87500286102295
    3. ' ().' → logprob: -16.250001907348633
    4. '(' → logprob: -18.000001907348633
    5. '()-' → logprob: -19.625001907348633
    6. '.' → logprob: -20.125001907348633
    7. '())' → logprob: -20.375001907348633
    8. '()
' → logprob: -20.500001907348633
    9. '()?.' → logprob: -20.625001907348633
    10. '()))' → logprob: -20.750001907348633

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.173704271830502e-06
    2. 'rstrip' → logprob: -13.62500286102295
    3. 'strip' → logprob: -13.75000286102295
    4. 'spl' → logprob: -15.25000286102295
    5. ' split' → logprob: -15.50000286102295
    6. '(split' → logprob: -15.50000286102295
    7. 'read' → logprob: -16.625003814697266
    8. ')' → logprob: -19.375003814697266
    9. 'plit' → logprob: -19.750003814697266
    10. '.split' → logprob: -20.625003814697266

Token 45: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.015467941761016846
    2. '())' → logprob: -4.765468120574951
    3. '))' → logprob: -5.140468120574951
    4. '()' → logprob: -7.015468120574951
    5. ')' → logprob: -10.265467643737793
    6. '()))
' → logprob: -10.515467643737793
    7. '(' → logprob: -11.765467643737793
    8. '()));' → logprob: -12.515467643737793
    9. '()),' → logprob: -14.265467643737793
    10. '())))' → logprob: -14.390467643737793

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39721572399139404
    2. '
' → logprob: -1.522215723991394
    3. ')' → logprob: -3.5222158432006836
    4. '    
' → logprob: -3.6472158432006836
    5. '<|end|>' → logprob: -3.6472158432006836
    6. ' ' → logprob: -5.522215843200684
    7. '[' → logprob: -5.647215843200684
    8. '  
' → logprob: -5.647215843200684
    9. '\n' → logprob: -6.272215843200684
    10. ' 
' → logprob: -6.272215843200684

Token 47: ' ff' (ID: 35384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.753321886062622
    2. 'dp' → logprob: -1.878321886062622
    3. ')' → logprob: -2.128321886062622
    4. ' 
' → logprob: -2.503321886062622
    5. '
' → logprob: -2.503321886062622
    6. '\' → logprob: -2.503321886062622
    7. 'a' → logprob: -2.878321886062622
    8. 'def' → logprob: -3.003321886062622
    9. ' ' → logprob: -3.878321886062622
    10. '#' → logprob: -3.878321886062622

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07976632565259933
    2. ' =' → logprob: -2.579766273498535
    3. 'or' → logprob: -8.329766273498535
    4. 'a' → logprob: -8.829766273498535
    5. '.' → logprob: -9.079766273498535
    6. 'o' → logprob: -9.204766273498535
    7. '_' → logprob: -9.704766273498535
    8. 'i' → logprob: -9.829766273498535
    9. '＝' → logprob: -10.579766273498535
    10. 'f' → logprob: -10.579766273498535

Token 49: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6931963562965393
    2. 'list' → logprob: -0.6931963562965393
    3. 'ist' → logprob: -10.693196296691895
    4. '=list' → logprob: -11.068196296691895
    5. '(list' → logprob: -12.193196296691895
    6. 'sorted' → logprob: -13.193196296691895
    7. '   ' → logprob: -13.943196296691895
    8. ' sorted' → logprob: -14.193196296691895
    9. '	list' → logprob: -14.318196296691895
    10. 'int' → logprob: -15.318196296691895

Token 50: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0411943718791008
    2. '(' → logprob: -3.416194438934326
    3. '(int' → logprob: -4.916194438934326
    4. '(
' → logprob: -8.666193962097168
    5. ' (' → logprob: -11.416193962097168
    6. '(lambda' → logprob: -12.791193962097168
    7. 'map' → logprob: -13.416193962097168
    8. '(

' → logprob: -14.166193962097168
    9. '.map' → logprob: -14.416193962097168
    10. '(func' → logprob: -14.666193962097168

Token 51: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.3782830137643032e-05
    2. 'int' → logprob: -11.75001335144043
    3. '=int' → logprob: -12.50001335144043
    4. ',int' → logprob: -13.87501335144043
    5. '<int' → logprob: -14.50001335144043
    6. '[int' → logprob: -15.50001335144043
    7. ']int' → logprob: -15.87501335144043
    8. ':int' → logprob: -16.37501335144043
    9. ' int' → logprob: -16.75001335144043
    10. '(' → logprob: -16.75001335144043

Token 52: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0031771177891641855
    2. ',int' → logprob: -6.128177165985107
    3. 'int' → logprob: -7.128177165985107
    4. '=int' → logprob: -9.50317668914795
    5. ',' → logprob: -10.12817668914795
    6. '[int' → logprob: -10.75317668914795
    7. '<int' → logprob: -10.87817668914795
    8. ']int' → logprob: -11.62817668914795
    9. ':int' → logprob: -12.25317668914795
    10. ')(' → logprob: -12.25317668914795

Token 53: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.028311023488640785
    2. ' int' → logprob: -3.778311014175415
    3. 'input' → logprob: -5.653311252593994
    4. ' input' → logprob: -6.653311252593994
    5. '(int' → logprob: -8.278310775756836
    6. '   ' → logprob: -14.153310775756836
    7. '(input' → logprob: -14.528310775756836
    8. ' ' → logprob: -14.653310775756836
    9. '[int' → logprob: -14.653310775756836
    10. '<int' → logprob: -15.028310775756836

Token 54: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004610980395227671
    2. '.' → logprob: -5.504611015319824
    3. '(.' → logprob: -8.754611015319824
    4. '.readline' → logprob: -9.379611015319824
    5. 'int' → logprob: -9.504611015319824
    6. '.split' → logprob: -9.879611015319824
    7. '.int' → logprob: -10.129611015319824
    8. ').' → logprob: -10.254611015319824
    9. '()' → logprob: -10.504611015319824
    10. '(int' → logprob: -10.629611015319824

Token 55: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'spl' → logprob: -14.625000953674316
    3. 'strip' → logprob: -15.875000953674316
    4. ' split' → logprob: -16.375
    5. 'rstrip' → logprob: -16.5
    6. ')' → logprob: -16.625
    7. 'read' → logprob: -16.75
    8. 'plit' → logprob: -17.25
    9. '(split' → logprob: -17.5
    10. '```' → logprob: -18.625

Token 56: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -1.0131512880325317
    2. '()))' → logprob: -1.2631512880325317
    3. ')' → logprob: -1.5131512880325317
    4. '))' → logprob: -2.138151168823242
    5. '()' → logprob: -4.138151168823242
    6. '(' → logprob: -9.763151168823242
    7. '()))
' → logprob: -10.638151168823242
    8. '())
' → logprob: -11.263151168823242
    9. '()));' → logprob: -11.638151168823242
    10. ' ())' → logprob: -12.388151168823242

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060054175555706024
    2. '
' → logprob: -3.185054063796997
    3. '    
' → logprob: -4.310054302215576
    4. 'aa' → logprob: -7.185054302215576
    5. '  
' → logprob: -7.310054302215576
    6. ' ' → logprob: -7.810054302215576
    7. '  ' → logprob: -8.185053825378418
    8. '<|end|>' → logprob: -8.185053825378418
    9. '   
' → logprob: -8.435053825378418
    10. '' → logprob: -8.560053825378418

Token 58: ' aa' (ID: 40260)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' (adapté à ' aa') → logprob: -0.014346137642860413
    2. '   ' → logprob: -5.264346122741699
    3. 'ff' → logprob: -5.389346122741699
    4. '    
' → logprob: -6.014346122741699
    5. '#aa' → logprob: -7.389346122741699
    6. 'aaa' → logprob: -8.0143461227417
    7. '
' → logprob: -8.7643461227417
    8. ' ' → logprob: -8.7643461227417
    9. '```' → logprob: -8.8893461227417
    10. ' aa' → logprob: -9.0143461227417

Token 59: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.09061193466186523
    2. '.' → logprob: -2.4656119346618652
    3. '=' → logprob: -6.465611934661865
    4. ',' → logprob: -10.465612411499023
    5. '.=' → logprob: -10.840612411499023
    6. '.reverse' → logprob: -10.965612411499023
    7. ' =' → logprob: -11.090612411499023
    8. 'sort' → logprob: -11.090612411499023
    9. '_sorted' → logprob: -12.590612411499023
    10. ')' → logprob: -12.840612411499023

Token 60: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.01835409179329872
    2. 'reverse' → logprob: -4.2683539390563965
    3. '()' → logprob: -5.5183539390563965
    4. '()
' → logprob: -9.268354415893555
    5. '.reverse' → logprob: -10.018354415893555
    6. '_reverse' → logprob: -11.518354415893555
    7. ' reverse' → logprob: -11.768354415893555
    8. 'Reverse' → logprob: -12.268354415893555
    9. '(' → logprob: -12.518354415893555
    10. '();' → logprob: -13.643354415893555

Token 61: '=True' (ID: 7827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0587444081902504
    2. '())' → logprob: -3.308744430541992
    3. '()' → logprob: -3.933744430541992
    4. '=True' → logprob: -7.433744430541992
    5. '(True' → logprob: -8.683744430541992
    6. '(' → logprob: -9.808744430541992
    7. '))' → logprob: -10.308744430541992
    8. '<|end|>' → logprob: -11.433744430541992
    9. '(),' → logprob: -11.933744430541992
    10. '=' → logprob: -12.058744430541992

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005734055885113776
    2. ')
' → logprob: -7.500573635101318
    3. ' )' → logprob: -11.25057315826416
    4. '   ' → logprob: -12.25057315826416
    5. '<|end|>' → logprob: -14.50057315826416
    6. ')

' → logprob: -14.75057315826416
    7. ' ' → logprob: -14.75057315826416
    8. ')a' → logprob: -15.50057315826416
    9. '),' → logprob: -15.75057315826416
    10. '')' → logprob: -16.375574111938477

Token 63: '   ' (ID: 271)
  Prédit: 'ff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ff' → logprob: -0.12461144477128983
    2. ' ff' → logprob: -3.7496113777160645
    3. '    
' → logprob: -3.7496113777160645
    4. '	ff' → logprob: -3.8746113777160645
    5. '   ' → logprob: -4.1246113777160645
    6. ' 
' → logprob: -4.2496113777160645
    7. '  
' → logprob: -5.2496113777160645
    8. ' ' → logprob: -5.3746113777160645
    9. ' ' → logprob: -6.2496113777160645
    10. ',' → logprob: -6.4996113777160645

Token 64: ' ff' (ID: 35384)
  Prédit: 'ff'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ff' (adapté à ' ff') → logprob: -2.8444881536415778e-05
    2. ' ff' → logprob: -11.000028610229492
    3. '	ff' → logprob: -11.875028610229492
    4. '_ff' → logprob: -14.000028610229492
    5. 'f' → logprob: -14.250028610229492
    6. 'fff' → logprob: -14.500028610229492
    7. '   ' → logprob: -14.625028610229492
    8. 'ffff' → logprob: -15.125028610229492
    9. 'ffi' → logprob: -15.250028610229492
    10. 'fa' → logprob: -15.625028610229492

Token 65: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.014228851534426212
    2. '.' → logprob: -4.264228820800781
    3. ' .' → logprob: -9.889228820800781
    4. 'sort' → logprob: -11.639228820800781
    5. '	sort' → logprob: -13.389228820800781
    6. '.reverse' → logprob: -13.514228820800781
    7. '.s' → logprob: -14.639228820800781
    8. ' sort' → logprob: -14.639228820800781
    9. '.Sort' → logprob: -14.764228820800781
    10. '.py' → logprob: -15.139228820800781

Token 66: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07178470492362976
    2. '(reverse' → logprob: -2.821784734725952
    3. '(' → logprob: -4.696784496307373
    4. '()(' → logprob: -7.571784496307373
    5. ' ()' → logprob: -10.196784973144531
    6. 'reverse' → logprob: -11.321784973144531
    7. '()
' → logprob: -11.321784973144531
    8. '(()' → logprob: -11.446784973144531
    9. '()<' → logprob: -11.571784973144531
    10. '())' → logprob: -12.321784973144531

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12348049134016037
    2. 'low' → logprob: -2.7484805583953857
    3. 'left' → logprob: -3.7484805583953857
    4. 'l' → logprob: -4.998480319976807
    5. '```' → logprob: -4.998480319976807
    6. ' low' → logprob: -5.373480319976807
    7. '<|end|>' → logprob: -5.623480319976807
    8. 'def' → logprob: -5.748480319976807
    9. ' left' → logprob: -7.373480319976807
    10. 'lo' → logprob: -7.498480319976807

Token 68: ' l' (ID: 305)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.634929358959198
    2. 'l' (adapté à ' l') → logprob: -1.3849294185638428
    3. '   ' → logprob: -2.5099294185638428
    4. 'left' → logprob: -2.8849294185638428
    5. '```' → logprob: -3.2599294185638428
    6. 'low' → logprob: -3.5099294185638428
    7. 'while' → logprob: -4.884929180145264
    8. ' l' → logprob: -6.259929180145264
    9. '    
' → logprob: -7.384929180145264
    10. '``' → logprob: -7.384929180145264

Token 69: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5392763018608093
    2. '=' → logprob: -1.414276361465454
    3. ' =' → logprob: -1.789276361465454
    4. ' ,' → logprob: -5.789276123046875
    5. 'ow' → logprob: -6.414276123046875
    6. 'e' → logprob: -7.414276123046875
    7. ' ' → logprob: -7.789276123046875
    8. 'ower' → logprob: -8.039276123046875
    9. 'b' → logprob: -8.289276123046875
    10. 'eft' → logprob: -8.664276123046875

Token 70: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002668192028068006
    2. '-' → logprob: -8.625267028808594
    3. ' ' → logprob: -9.375267028808594
    4. ' -' → logprob: -13.250267028808594
    5. '```' → logprob: -15.375267028808594
    6. '   ' → logprob: -15.875267028808594
    7. '1' → logprob: -16.375267028808594
    8. '000' → logprob: -16.875267028808594
    9. '[' → logprob: -17.062767028808594
    10. '  ' → logprob: -17.500267028808594

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. '10' → logprob: -12.125008583068848
    3. '-' → logprob: -13.250008583068848
    4. ' ' → logprob: -13.875008583068848
    5. '100' → logprob: -16.437509536743164
    6. '１' → logprob: -16.437509536743164
    7. '```' → logprob: -16.812509536743164
    8. '(' → logprob: -17.000009536743164
    9. '
' → logprob: -17.312509536743164
    10. '2' → logprob: -17.375009536743164

Token 72: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16233788430690765
    2. ' r' → logprob: -1.9123378992080688
    3. '<|end|>' → logprob: -7.412337779998779
    4. '
' → logprob: -7.662337779998779
    5. '+' → logprob: -8.037338256835938
    6. ' ' → logprob: -8.287338256835938
    7. ' 
' → logprob: -8.912338256835938
    8. '+r' → logprob: -9.912338256835938
    9. '1' → logprob: -10.162338256835938
    10. '\' → logprob: -10.787338256835938

Token 74: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.06221673637628555
    2. ' r' → logprob: -2.8122167587280273
    3. ' ' → logprob: -9.312216758728027
    4. '<|end|>' → logprob: -10.562216758728027
    5. '    ' → logprob: -10.812216758728027
    6. '100' → logprob: -11.062216758728027
    7. '```' → logprob: -11.312216758728027
    8. 'l' → logprob: -11.312216758728027
    9. '500' → logprob: -12.187216758728027
    10. '1' → logprob: -12.437216758728027

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009791270829737186
    2. '=' → logprob: -4.634791374206543
    3. ' ' → logprob: -10.259791374206543
    4. '=int' → logprob: -15.759791374206543
    5. '```' → logprob: -17.009790420532227
    6. ':' → logprob: -17.134790420532227
    7. ',' → logprob: -17.384790420532227
    8. ' :' → logprob: -18.009790420532227
    9. ' ' → logprob: -18.259790420532227
    10. ' ,' → logprob: -18.384790420532227

Token 76: ' aa' (ID: 40260)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0028322190046310425
    2. 'max' → logprob: -6.002832412719727
    3. ' ' → logprob: -8.877832412719727
    4. '1' → logprob: -9.127832412719727
    5. 'int' → logprob: -9.377832412719727
    6. '100' → logprob: -11.877832412719727
    7. '(' → logprob: -12.627832412719727
    8. 'pow' → logprob: -12.627832412719727
    9. ' max' → logprob: -13.002832412719727
    10. '2' → logprob: -13.002832412719727

Token 77: '[' (ID: 58)
  Prédit: '.__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.8579617142677307
    2. '[' → logprob: -0.9829617142677307
    3. 'length' → logprob: -3.482961654663086
    4. '[-' → logprob: -3.982961654663086
    5. 'len' → logprob: -4.107961654663086
    6. 'size' → logprob: -4.107961654663086
    7. 'max' → logprob: -4.232961654663086
    8. '__' → logprob: -4.357961654663086
    9. 'r' → logprob: -4.607961654663086
    10. '_length' → logprob: -4.982961654663086

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.6696149840718135e-05
    2. ' ' → logprob: -10.125056266784668
    3. '-' → logprob: -11.250056266784668
    4. ' -' → logprob: -14.125056266784668
    5. ':' → logprob: -14.625056266784668
    6. '00' → logprob: -14.625056266784668
    7. '
' → logprob: -15.125056266784668
    8. '000' → logprob: -15.375056266784668
    9. ']' → logprob: -15.437556266784668
    10. '   ' → logprob: -15.500056266784668

Token 79: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04952853545546532
    2. ' *' → logprob: -3.0495285987854004
    3. ']' → logprob: -7.4245285987854
    4. ' ' → logprob: -8.674528121948242
    5. ']*' → logprob: -9.549528121948242
    6. '+' → logprob: -10.674528121948242
    7. ')' → logprob: -10.924528121948242
    8. ' ' → logprob: -11.424528121948242
    9. '**' → logprob: -11.674528121948242
    10. '*k' → logprob: -12.174528121948242

Token 80: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5437565445899963
    2. ' *' → logprob: -0.9187565445899963
    3. '+' → logprob: -4.418756484985352
    4. ' +' → logprob: -4.793756484985352
    5. ' ' → logprob: -9.793756484985352
    6. ' ' → logprob: -11.418756484985352
    7. '**' → logprob: -12.293756484985352
    8. '10' → logprob: -12.543756484985352
    9. ' //' → logprob: -12.668756484985352
    10. '1' → logprob: -12.918756484985352

Token 81: ' ff' (ID: 35384)
  Prédit: ' ff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ff' → logprob: -0.38818350434303284
    2. 'ff' → logprob: -1.1381834745407104
    3. ' max' → logprob: -7.26318359375
    4. 'max' → logprob: -7.76318359375
    5. '100' → logprob: -9.51318359375
    6. '(ff' → logprob: -10.01318359375
    7. '	ff' → logprob: -10.26318359375
    8. ' ' → logprob: -10.88818359375
    9. 'f' → logprob: -12.38818359375
    10. '10' → logprob: -12.88818359375

Token 82: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005180035717785358
    2. '0' → logprob: -5.3801798820495605
    3. '[-' → logprob: -7.5051798820495605
    4. ' ' → logprob: -12.755180358886719
    5. ' [' → logprob: -12.880180358886719
    6. '[len' → logprob: -13.630180358886719
    7. '-' → logprob: -13.880180358886719
    8. '```' → logprob: -14.380180358886719
    9. 'len' → logprob: -15.505180358886719
    10. 'r' → logprob: -15.505180358886719

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -13.250005722045898
    3. ']' → logprob: -13.437505722045898
    4. '```' → logprob: -14.750005722045898
    5. '１' → logprob: -15.000005722045898
    6. '-' → logprob: -15.625005722045898
    7. '0' → logprob: -16.0000057220459
    8. '])' → logprob: -16.3125057220459
    9. '   ' → logprob: -16.4375057220459
    10. '2' → logprob: -16.4375057220459

Token 84: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1988697648048401
    2. ' +' → logprob: -2.0738697052001953
    3. '<|end|>' → logprob: -3.5738697052001953
    4. ')' → logprob: -3.8238697052001953
    5. ')+' → logprob: -5.823869705200195
    6. ']' → logprob: -7.323869705200195
    7. '<|end|>' → logprob: -7.698869705200195
    8. ']+' → logprob: -7.823869705200195
    9. ' ' → logprob: -9.073869705200195
    10. ' )' → logprob: -10.573869705200195

Token 85: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05796535313129425
    2. ' 
' → logprob: -3.9329652786254883
    3. '
' → logprob: -4.432965278625488
    4. ' +' → logprob: -4.807965278625488
    5. '\n' → logprob: -4.932965278625488
    6. '  
' → logprob: -6.182965278625488
    7. '<|end|>' → logprob: -6.182965278625488
    8. '    
' → logprob: -6.307965278625488
    9. '+
' → logprob: -6.432965278625488
    10. '   ' → logprob: -7.307965278625488

Token 86: ' while' (ID: 2049)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8845139145851135
    2. '
' → logprob: -0.8845139145851135
    3. '\n' → logprob: -3.0095138549804688
    4. ' 
' → logprob: -3.1345138549804688
    5. 'while' (adapté à ' while') → logprob: -3.8845138549804688
    6. '    
' → logprob: -4.384513854980469
    7. '\' → logprob: -4.759513854980469
    8. ':' → logprob: -4.884513854980469
    9. ' while' → logprob: -5.259513854980469
    10. '  
' → logprob: -5.384513854980469

Token 87: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4317600131034851
    2. ' r' → logprob: -1.3067600727081299
    3. 'r' → logprob: -3.05676007270813
    4. 'l' → logprob: -3.43176007270813
    5. ' (' → logprob: -8.43175983428955
    6. ' ' → logprob: -8.80675983428955
    7. '(' → logprob: -9.55675983428955
    8. '(r' → logprob: -9.68175983428955
    9. '(l' → logprob: -10.43175983428955
    10. '	l' → logprob: -11.55675983428955

Token 88: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1190551295876503
    2. '<' → logprob: -2.6190550327301025
    3. ' +' → logprob: -3.3690550327301025
    4. ' <' → logprob: -5.369055271148682
    5. '+r' → logprob: -8.494054794311523
    6. ' ' → logprob: -10.244054794311523
    7. '<int' → logprob: -12.119054794311523
    8. '<n' → logprob: -12.494054794311523
    9. '1' → logprob: -12.494054794311523
    10. '<R' → logprob: -12.744054794311523

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026526954025030136
    2. ' ' → logprob: -8.250265121459961
    3. '<|end|>' → logprob: -12.875265121459961
    4. '<' → logprob: -13.875265121459961
    5. ' <' → logprob: -15.625265121459961
    6. '+' → logprob: -16.00026512145996
    7. '```' → logprob: -16.87526512145996
    8. '<|end|>' → logprob: -17.50026512145996
    9. '   ' → logprob: -17.62526512145996
    10. '=' → logprob: -18.00026512145996

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -14.37500286102295
    4. '   ' → logprob: -17.875003814697266
    5. 'e' → logprob: -18.125003814697266
    6. '+' → logprob: -18.250003814697266
    7. 's' → logprob: -18.500003814697266
    8. '<' → logprob: -18.750003814697266
    9. 'r' → logprob: -19.000003814697266
    10. '>' → logprob: -19.000003814697266

Token 91: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0487184077501297
    2. ' <' → logprob: -3.0487184524536133
    3. '<|end|>' → logprob: -9.548718452453613
    4. '<int' → logprob: -11.048718452453613
    5. '<n' → logprob: -11.798718452453613
    6. '<class' → logprob: -11.923718452453613
    7. ' ' → logprob: -12.298718452453613
    8. '<len' → logprob: -12.423718452453613
    9. '<num' → logprob: -12.798718452453613
    10. '<th' → logprob: -13.548718452453613

Token 92: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.428723007440567
    2. ' r' → logprob: -1.0537229776382446
    3. ' ' → logprob: -10.928723335266113
    4. '	r' → logprob: -12.928723335266113
    5. '=r' → logprob: -14.178723335266113
    6. '_r' → logprob: -15.178723335266113
    7. '=' → logprob: -15.678723335266113
    8. '   ' → logprob: -15.678723335266113
    9. ' ' → logprob: -15.803723335266113
    10. '```' → logprob: -15.803723335266113

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001443035143893212
    2. ':
' → logprob: -9.000144004821777
    3. ' :' → logprob: -11.000144004821777
    4. '):' → logprob: -13.000144004821777
    5. '<|end|>' → logprob: -14.625144004821777
    6. ':

' → logprob: -14.750144004821777
    7. ':**' → logprob: -15.000144004821777
    8. ',' → logprob: -15.875144004821777
    9. '>:' → logprob: -16.125144958496094
    10. '   ' → logprob: -16.250144958496094

Token 94: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6550672650337219
    2. '       ' → logprob: -1.4050672054290771
    3. '    ' → logprob: -1.6550672054290771
    4. '    
' → logprob: -4.405067443847656
    5. ' ' → logprob: -4.530067443847656
    6. ':' → logprob: -5.905067443847656
    7. '        
' → logprob: -5.905067443847656
    8. '     
' → logprob: -6.155067443847656
    9. '     ' → logprob: -6.280067443847656
    10. '  
' → logprob: -6.405067443847656

Token 95: ' m' (ID: 284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38356536626815796
    2. ' 
' → logprob: -2.1335654258728027
    3. ' mid' → logprob: -2.6335654258728027
    4. 'm' (adapté à ' m') → logprob: -3.2585654258728027
    5. 'mid' → logprob: -3.2585654258728027
    6. '    ' → logprob: -4.383565425872803
    7. ' m' → logprob: -4.758565425872803
    8. '       ' → logprob: -5.008565425872803
    9. '<|end|>' → logprob: -5.258565425872803
    10. '  
' → logprob: -6.008565425872803

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01105300523340702
    2. '=' → logprob: -4.511053085327148
    3. ' ' → logprob: -12.761053085327148
    4. '<|end|>' → logprob: -14.511053085327148
    5. ')' → logprob: -14.636053085327148
    6. ',' → logprob: -15.261053085327148
    7. '=int' → logprob: -15.511053085327148
    8. ':' → logprob: -15.761053085327148
    9. ' ' → logprob: -15.886053085327148
    10. '```' → logprob: -16.01105308532715

Token 97: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.07006536424160004
    2. ' (' → logprob: -2.6950652599334717
    3. '(' → logprob: -9.32006549835205
    4. '   ' → logprob: -11.19506549835205
    5. '(r' → logprob: -11.32006549835205
    6. ' ' → logprob: -11.82006549835205
    7. '(m' → logprob: -13.82006549835205
    8. '(L' → logprob: -13.94506549835205
    9. '(ls' → logprob: -14.07006549835205
    10. 'l' → logprob: -14.32006549835205

Token 98: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00021069261129014194
    2. ' l' → logprob: -8.500210762023926
    3. 'r' → logprob: -12.125210762023926
    4. '	l' → logprob: -13.500210762023926
    5. '(l' → logprob: -16.00020980834961
    6. '_l' → logprob: -17.25020980834961
    7. ' ' → logprob: -17.37520980834961
    8. '   ' → logprob: -17.62520980834961
    9. ')' → logprob: -18.00020980834961
    10. '```' → logprob: -18.62520980834961

Token 99: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47490304708480835
    2. '+' → logprob: -0.9749030470848083
    3. '+r' → logprob: -7.099903106689453
    4. '＋' → logprob: -15.474903106689453
    5. '+m' → logprob: -16.224903106689453
    6. ' ' → logprob: -16.349903106689453
    7. ' ' → logprob: -16.849903106689453
    8. '+l' → logprob: -16.849903106689453
    9. ' plus' → logprob: -18.099903106689453
    10. '+s' → logprob: -18.224903106689453

Token 100: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.395715594291687
    2. ' r' → logprob: -1.145715594291687
    3. '1' → logprob: -4.770715713500977
    4. ' ' → logprob: -8.020715713500977
    5. '	r' → logprob: -13.770715713500977
    6. '+' → logprob: -14.645715713500977
    7. '+r' → logprob: -14.645715713500977
    8. '   ' → logprob: -15.145715713500977
    9. ' ' → logprob: -15.395715713500977
    10. '  ' → logprob: -15.895715713500977

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019376569252926856
    2. ')//' → logprob: -8.62519359588623
    3. ' )' → logprob: -11.37519359588623
    4. ')>>' → logprob: -13.25019359588623
    5. '   ' → logprob: -15.12519359588623
    6. '）' → logprob: -15.87519359588623
    7. ')
' → logprob: -16.125194549560547
    8. '1' → logprob: -16.625194549560547
    9. '0' → logprob: -16.750194549560547
    10. ' ' → logprob: -17.125194549560547

Token 102: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.06264857202768326
    2. '//' → logprob: -2.8126485347747803
    3. ')' → logprob: -8.31264877319336
    4. '>>' → logprob: -8.56264877319336
    5. ' >>' → logprob: -9.56264877319336
    6. ')//' → logprob: -9.56264877319336
    7. '2' → logprob: -10.06264877319336
    8. '1' → logprob: -11.06264877319336
    9. '```' → logprob: -11.18764877319336
    10. ' ' → logprob: -11.18764877319336

Token 103: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '２' → logprob: -19.875024795532227
    4. '```' → logprob: -20.000024795532227
    5. '۲' → logprob: -20.250024795532227
    6. '२' → logprob: -21.500024795532227
    7. '   ' → logprob: -22.062524795532227
    8. '২' → logprob: -22.375024795532227
    9. '  ' → logprob: -22.750024795532227
    10. '٢' → logprob: -22.937524795532227

Token 104: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '２' → logprob: -22.125
    4. '۲' → logprob: -22.125
    5. '२' → logprob: -23.25
    6. '```' → logprob: -23.375
    7. '٢' → logprob: -23.875
    8. '২' → logprob: -24.25
    9. '   ' → logprob: -24.5
    10. '  ' → logprob: -25.375

Token 105: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06389781832695007
    2. '   ' → logprob: -3.4388978481292725
    3. '        
' → logprob: -4.313897609710693
    4. '
' → logprob: -4.688897609710693
    5. '  
' → logprob: -5.688897609710693
    6. '    
' → logprob: -6.563897609710693
    7. ' ' → logprob: -7.063897609710693
    8. '<|end|>' → logprob: -8.063898086547852
    9. '    ' → logprob: -8.563898086547852
    10. '   
' → logprob: -8.813898086547852

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00430323788896203
    2. '   ' → logprob: -6.504303455352783
    3. 'count' → logprob: -6.754303455352783
    4. '        
' → logprob: -7.504303455352783
    5. '
' → logprob: -8.504302978515625
    6. 'total' → logprob: -8.504302978515625
    7. 'def' → logprob: -9.004302978515625
    8. '```' → logprob: -9.504302978515625
    9. ' count' → logprob: -9.754302978515625
    10. ' total' → logprob: -10.004302978515625

Token 107: ' s' (ID: 265)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.2223366498947144
    2. 'count' → logprob: -1.5973366498947144
    3. 'total' → logprob: -2.097336769104004
    4. 'c' → logprob: -2.097336769104004
    5. 's' (adapté à ' s') → logprob: -2.472336769104004
    6. '       ' → logprob: -3.222336769104004
    7. ' total' → logprob: -3.972336769104004
    8. '   ' → logprob: -4.097336769104004
    9. ' count' → logprob: -4.097336769104004
    10. ' cnt' → logprob: -4.222336769104004

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45952796936035156
    2. 'um' → logprob: -1.0845279693603516
    3. '=' → logprob: -4.209527969360352
    4. 'u' → logprob: -4.834527969360352
    5. 't' → logprob: -6.834527969360352
    6. 'core' → logprob: -6.959527969360352
    7. 'atisfied' → logprob: -6.959527969360352
    8. ' ' → logprob: -7.459527969360352
    9. 'atisf' → logprob: -7.709527969360352
    10. 'ufficient' → logprob: -7.959527969360352

Token 109: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036323845852166414
    2. ' ' → logprob: -5.628632545471191
    3. 'sum' → logprob: -10.503632545471191
    4. ' sum' → logprob: -12.878632545471191
    5. '   ' → logprob: -14.503632545471191
    6. '  ' → logprob: -14.503632545471191
    7. ' ' → logprob: -15.128632545471191
    8. '1' → logprob: -15.128632545471191
    9. 'k' → logprob: -16.253631591796875
    10. '[' → logprob: -16.628631591796875

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000491672137286514
    2. 'sum' → logprob: -7.750491619110107
    3. ' ' → logprob: -9.750492095947266
    4. '   ' → logprob: -14.375492095947266
    5. ' sum' → logprob: -14.625492095947266
    6. '1' → logprob: -15.000492095947266
    7. '[' → logprob: -15.250492095947266
    8. 'k' → logprob: -16.000492095947266
    9. 's' → logprob: -16.125492095947266
    10. 'int' → logprob: -16.250492095947266

Token 111: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1884670853614807
    2. '       ' → logprob: -2.063467025756836
    3. '<|end|>' → logprob: -3.563467025756836
    4. ' for' → logprob: -4.938467025756836
    5. '   ' → logprob: -5.813467025756836
    6. 'for' → logprob: -6.688467025756836
    7. '  
' → logprob: -6.688467025756836
    8. '        
' → logprob: -7.313467025756836
    9. '    
' → logprob: -7.313467025756836
    10. ' ' → logprob: -7.313467025756836

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009493148885667324
    2. ' for' → logprob: -5.384493350982666
    3. '   ' → logprob: -5.759493350982666
    4. 'for' → logprob: -7.134493350982666
    5. '<|end|>' → logprob: -7.884493350982666
    6. ' ' → logprob: -8.384492874145508
    7. '	for' → logprob: -9.009492874145508
    8. '	' → logprob: -9.634492874145508
    9. '  ' → logprob: -10.759492874145508
    10. '	   ' → logprob: -11.009492874145508

Token 113: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.021651919931173325
    2. ' for' → logprob: -3.8966519832611084
    3. '       ' → logprob: -7.271651744842529
    4. '   ' → logprob: -7.896651744842529
    5. '	for' → logprob: -10.396652221679688
    6. ' ' → logprob: -11.896652221679688
    7. '
' → logprob: -12.646652221679688
    8. '  ' → logprob: -14.646652221679688
    9. '0' → logprob: -15.146652221679688
    10. 'i' → logprob: -15.646652221679688

Token 114: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11126363277435303
    2. 'i' → logprob: -2.3612637519836426
    3. ' a' → logprob: -4.861263751983643
    4. ' i' → logprob: -6.111263751983643
    5. 'ai' → logprob: -7.986263751983643
    6. 'aa' → logprob: -8.111263275146484
    7. 'x' → logprob: -8.486263275146484
    8. 'j' → logprob: -10.611263275146484
    9. '_' → logprob: -10.861263275146484
    10. '_a' → logprob: -10.986263275146484

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01756327971816063
    2. ',f' → logprob: -4.142563343048096
    3. ',a' → logprob: -7.017563343048096
    4. 'f' → logprob: -8.517562866210938
    5. ',i' → logprob: -8.517562866210938
    6. ' in' → logprob: -8.767562866210938
    7. ' ,' → logprob: -10.142562866210938
    8. 'a' → logprob: -11.267562866210938
    9. 'i' → logprob: -11.392562866210938
    10. ',in' → logprob: -13.267562866210938

Token 116: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0011071135522797704
    2. ' f' → logprob: -7.376107215881348
    3. 'b' → logprob: -7.751107215881348
    4. 'ff' → logprob: -10.251107215881348
    5. ' ' → logprob: -11.626107215881348
    6. '	f' → logprob: -13.626107215881348
    7. '_f' → logprob: -14.376107215881348
    8. '   ' → logprob: -14.626107215881348
    9. ' b' → logprob: -14.876107215881348
    10. 'g' → logprob: -15.126107215881348

Token 117: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6328062415122986
    2. ' in' → logprob: -0.7578062415122986
    3. ',' → logprob: -9.757805824279785
    4. ' ' → logprob: -10.132805824279785
    5. 'a' → logprob: -10.257805824279785
    6. 'f' → logprob: -10.257805824279785
    7. '   ' → logprob: -11.507805824279785
    8. 'n' → logprob: -11.882805824279785
    9. 'i' → logprob: -12.132805824279785
    10. 's' → logprob: -12.507805824279785

Token 118: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.16023123264312744
    2. ' zip' → logprob: -1.9102312326431274
    3. '(zip' → logprob: -12.035231590270996
    4. 'z' → logprob: -14.285231590270996
    5. ' ' → logprob: -15.160231590270996
    6. '_zip' → logprob: -16.16023063659668
    7. '.zip' → logprob: -16.53523063659668
    8. '
' → logprob: -17.16023063659668
    9. 'ip' → logprob: -18.16023063659668
    10. 'zi' → logprob: -18.53523063659668

Token 119: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '(sorted' → logprob: -16.375
    3. '(a' → logprob: -17.875
    4. ' (' → logprob: -19.125
    5. '   ' → logprob: -19.375
    6. '(ss' → logprob: -19.5
    7. '(ai' → logprob: -19.5
    8. '(rr' → logprob: -19.75
    9. '(ff' → logprob: -19.75
    10. '(zip' → logprob: -19.875

Token 120: 'aa' (ID: 3545)
  Prédit: 'aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -8.2994620242971e-06
    2. ' aa' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.000008583068848
    4. '(' → logprob: -14.750008583068848
    5. 'aaa' → logprob: -17.25000762939453
    6. 'AA' → logprob: -18.62500762939453
    7. '#aa' → logprob: -18.75000762939453
    8. '    ' → logprob: -19.00000762939453
    9. '  ' → logprob: -19.12500762939453
    10. ' ' → logprob: -19.50000762939453

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014859484508633614
    2. ' ,' → logprob: -8.87514877319336
    3. ',f' → logprob: -11.87514877319336
    4. '   ' → logprob: -14.75014877319336
    5. ',
' → logprob: -15.00014877319336
    6. '(ff' → logprob: -15.50014877319336
    7. '),' → logprob: -15.75014877319336
    8. 'ff' → logprob: -15.87514877319336
    9. '(),' → logprob: -16.00014877319336
    10. '‌,' → logprob: -16.37514877319336

Token 122: ' ff' (ID: 35384)
  Prédit: 'ff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ff' → logprob: -0.023268774151802063
    2. ' ff' → logprob: -3.773268699645996
    3. 'f' → logprob: -11.398268699645996
    4. '	ff' → logprob: -12.023268699645996
    5. ' ' → logprob: -12.898268699645996
    6. '(ff' → logprob: -13.148268699645996
    7. '_ff' → logprob: -14.023268699645996
    8. '.ff' → logprob: -15.648268699645996
    9. '   ' → logprob: -15.773268699645996
    10. 'FF' → logprob: -16.023269653320312

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03806088864803314
    2. '):
' → logprob: -3.2880609035491943
    3. '):
' → logprob: -11.413061141967773
    4. ':' → logprob: -12.288061141967773
    5. ' ):' → logprob: -13.413061141967773
    6. '       ' → logprob: -14.288061141967773
    7. ')' → logprob: -14.663061141967773
    8. '):

' → logprob: -14.788061141967773
    9. '():' → logprob: -15.663061141967773
    10. '   ' → logprob: -15.788061141967773

Token 124: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33619922399520874
    2. '           ' → logprob: -1.5861992835998535
    3. ':
' → logprob: -2.7111992835998535
    4. '<|end|>' → logprob: -4.7111992835998535
    5. '):
' → logprob: -6.5861992835998535
    6. '):' → logprob: -6.9611992835998535
    7. '<|end|>' → logprob: -7.2111992835998535
    8. '
' → logprob: -7.4611992835998535
    9. '       ' → logprob: -7.7111992835998535
    10. ' if' → logprob: -8.211198806762695

Token 125: ' b' (ID: 287)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6093366742134094
    2. 's' → logprob: -1.6093366146087646
    3. 'if' → logprob: -2.2343366146087646
    4. ' if' → logprob: -2.7343366146087646
    5. '               ' → logprob: -2.7343366146087646
    6. ' s' → logprob: -3.9843366146087646
    7. '       ' → logprob: -7.984336853027344
    8. '<|end|>' → logprob: -9.359336853027344
    9. '
' → logprob: -9.734336853027344
    10. '```' → logprob: -10.234336853027344

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.647649884223938
    2. ' =' → logprob: -0.772649884223938
    3. '=max' → logprob: -4.272649765014648
    4. 'max' → logprob: -7.022649765014648
    5. '=min' → logprob: -11.147649765014648
    6. 'b' → logprob: -11.397649765014648
    7. '+=' → logprob: -11.397649765014648
    8. ' max' → logprob: -11.522649765014648
    9. 'a' → logprob: -11.772649765014648
    10. 'd' → logprob: -12.147649765014648

Token 127: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5393092036247253
    2. 'max' → logprob: -1.1643092632293701
    3. ' max' → logprob: -3.03930926322937
    4. '0' → logprob: -3.66430926322937
    5. '(max' → logprob: -4.414309024810791
    6. ' m' → logprob: -4.664309024810791
    7. '(m' → logprob: -4.914309024810791
    8. ' ' → logprob: -6.914309024810791
    9. '(' → logprob: -7.539309024810791
    10. ' (' → logprob: -7.914309024810791

Token 128: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.027607141062617302
    2. ' //' → logprob: -3.6526072025299072
    3. '
' → logprob: -7.027606964111328
    4. '#' → logprob: -8.277606964111328
    5. '//=' → logprob: -9.527606964111328
    6. ' ' → logprob: -10.652606964111328
    7. 'div' → logprob: -11.402606964111328
    8. '<|end|>' → logprob: -11.902606964111328
    9. '/' → logprob: -12.027606964111328
    10. 'max' → logprob: -12.027606964111328

Token 129: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4974866644479334e-05
    2. ' f' → logprob: -11.125015258789062
    3. 'a' → logprob: -16.375015258789062
    4. ' ' → logprob: -17.500015258789062
    5. '	f' → logprob: -18.000015258789062
    6. '   ' → logprob: -18.375015258789062
    7. '<f' → logprob: -19.625015258789062
    8. '  ' → logprob: -19.625015258789062
    9. '*f' → logprob: -20.375015258789062
    10. '
' → logprob: -20.625015258789062

Token 130: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4130043089389801
    2. '
' → logprob: -1.5380042791366577
    3. 'if' → logprob: -2.4130043983459473
    4. '           ' → logprob: -4.163004398345947
    5. '<|end|>' → logprob: -4.413004398345947
    6. '       ' → logprob: -5.663004398345947
    7. ' ' → logprob: -7.788004398345947
    8. '            
' → logprob: -7.913004398345947
    9. '+' → logprob: -8.038003921508789
    10. '<|end|>' → logprob: -8.288003921508789

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05927199870347977
    2. ' if' → logprob: -3.434272050857544
    3. 'if' → logprob: -4.434271812438965
    4. '       ' → logprob: -4.684271812438965
    5. 's' → logprob: -5.559271812438965
    6. ' s' → logprob: -8.309271812438965
    7. '+' → logprob: -10.559271812438965
    8. '   ' → logprob: -11.559271812438965
    9. 'b' → logprob: -11.684271812438965
    10. '               ' → logprob: -11.809271812438965

Token 132: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.05445868894457817
    2. 'if' → logprob: -3.5544586181640625
    3. '           ' → logprob: -3.8044586181640625
    4. ' s' → logprob: -6.4294586181640625
    5. ' if' → logprob: -7.9294586181640625
    6. '       ' → logprob: -9.179458618164062
    7. '   ' → logprob: -10.429458618164062
    8. '               ' → logprob: -11.804458618164062
    9. '            
' → logprob: -12.179458618164062
    10. 'b' → logprob: -12.679458618164062

Token 133: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4742372930049896
    2. '+=' → logprob: -0.974237322807312
    3. '+' → logprob: -8.974237442016602
    4. '+=(' → logprob: -10.974237442016602
    5. '=' → logprob: -11.599237442016602
    6. ' +' → logprob: -13.099237442016602
    7. '   ' → logprob: -13.224237442016602
    8. ' =' → logprob: -13.724237442016602
    9. ']+=' → logprob: -14.349237442016602
    10. '    ' → logprob: -15.349237442016602

Token 134: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00524075236171484
    2. ' max' → logprob: -5.2552409172058105
    3. '(max' → logprob: -12.755240440368652
    4. 'a' → logprob: -13.255240440368652
    5. '	max' → logprob: -14.255240440368652
    6. 'min' → logprob: -14.255240440368652
    7. '0' → logprob: -14.380240440368652
    8. '   ' → logprob: -16.13024139404297
    9. ' ' → logprob: -16.38024139404297
    10. '
' → logprob: -16.75524139404297

Token 135: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01185040082782507
    2. '(a' → logprob: -4.511850357055664
    3. '0' → logprob: -7.136850357055664
    4. 'a' → logprob: -12.386850357055664
    5. ' ' → logprob: -13.886850357055664
    6. '((' → logprob: -14.261850357055664
    7. ' (' → logprob: -14.761850357055664
    8. '(b' → logprob: -15.261850357055664
    9. '(
' → logprob: -15.761850357055664
    10. '{' → logprob: -16.136850357055664

Token 136: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016580065712332726
    2. '-' → logprob: -4.141580104827881
    3. '-b' → logprob: -7.891580104827881
    4. '0' → logprob: -9.016579627990723
    5. 'b' → logprob: -10.641579627990723
    6. ' ' → logprob: -11.016579627990723
    7. ' b' → logprob: -12.266579627990723
    8. '   ' → logprob: -13.516579627990723
    9. ')' → logprob: -14.891579627990723
    10. '          ' → logprob: -14.891579627990723

Token 137: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233763717114925
    2. ' b' → logprob: -5.2552337646484375
    3. ')b' → logprob: -17.380233764648438
    4. '	b' → logprob: -17.880233764648438
    5. '>b' → logprob: -18.880233764648438
    6. ' ' → logprob: -19.630233764648438
    7. '           ' → logprob: -20.630233764648438
    8. '   ' → logprob: -21.130233764648438
    9. '<|end|>' → logprob: -21.255233764648438
    10. '*b' → logprob: -21.505233764648438

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037162236403673887
    2. '0' → logprob: -5.878715991973877
    3. ' ,' → logprob: -7.003715991973877
    4. ' ' → logprob: -13.003716468811035
    5. ',
' → logprob: -16.62871551513672
    6. '   ' → logprob: -17.00371551513672
    7. '           ' → logprob: -17.50371551513672
    8. '       ' → logprob: -17.50371551513672
    9. '  ' → logprob: -18.00371551513672
    10. '00' → logprob: -18.62871551513672

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. ')' → logprob: -16.627185821533203
    4. '  ' → logprob: -17.252185821533203
    5. '   ' → logprob: -17.377185821533203
    6. '<|end|>' → logprob: -18.252185821533203
    7. '
' → logprob: -18.814685821533203
    8. ' ' → logprob: -19.064685821533203
    9. '۰' → logprob: -19.314685821533203
    10. '    ' → logprob: -19.314685821533203

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -18.125085830688477
    4. ')' → logprob: -18.250085830688477
    5. '  ' → logprob: -19.625085830688477
    6. '۰' → logprob: -19.625085830688477
    7. '<|end|>' → logprob: -20.000085830688477
    8. '
' → logprob: -20.375085830688477
    9. '```' → logprob: -20.375085830688477
    10. '00' → logprob: -20.625085830688477

Token 141: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048664581030607224
    2. ')
' → logprob: -3.0486645698547363
    3. ')
' → logprob: -10.173665046691895
    4. '       ' → logprob: -10.923665046691895
    5. ' )' → logprob: -11.048665046691895
    6. ')

' → logprob: -12.923665046691895
    7. ' )
' → logprob: -13.173665046691895
    8. '   ' → logprob: -15.298665046691895
    9. '))' → logprob: -16.298664093017578
    10. ')return' → logprob: -16.298664093017578

Token 142: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0048871771432459354
    2. '   ' → logprob: -5.379887104034424
    3. '
' → logprob: -9.129887580871582
    4. ' if' → logprob: -9.254887580871582
    5. ' ' → logprob: -11.379887580871582
    6. '  ' → logprob: -11.879887580871582
    7. 'if' → logprob: -11.879887580871582
    8. '           ' → logprob: -12.004887580871582
    9. '        
' → logprob: -12.129887580871582
    10. '      ' → logprob: -12.379887580871582

Token 143: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5877678394317627
    2. ' if' → logprob: -0.8377678394317627
    3. '           ' → logprob: -4.837767601013184
    4. '       ' → logprob: -5.587767601013184
    5. '   ' → logprob: -9.587767601013184
    6. ' ' → logprob: -11.712767601013184
    7. '	if' → logprob: -12.087767601013184
    8. '    ' → logprob: -12.837767601013184
    9. '  ' → logprob: -13.587767601013184
    10. '        ' → logprob: -13.962767601013184

Token 144: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759605765342712
    2. ' s' → logprob: -0.8259605765342712
    3. '   ' → logprob: -11.950960159301758
    4. '	s' → logprob: -11.950960159301758
    5. ' ' → logprob: -12.825960159301758
    6. ' ' → logprob: -13.075960159301758
    7. '>s' → logprob: -13.825960159301758
    8. '  ' → logprob: -14.075960159301758
    9. '>' → logprob: -15.075960159301758
    10. '    ' → logprob: -15.075960159301758

Token 145: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6931955814361572
    2. ' >' → logprob: -0.6931955814361572
    3. ' ' → logprob: -10.693195343017578
    4. '>=' → logprob: -11.693195343017578
    5. ' >=' → logprob: -12.193195343017578
    6. '>K' → logprob: -12.943195343017578
    7. '()>' → logprob: -13.443195343017578
    8. '   ' → logprob: -13.693195343017578
    9. ' ' → logprob: -13.943195343017578
    10. '>
' → logprob: -13.943195343017578

Token 146: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.607391408877447e-05
    2. ' k' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.375036239624023
    4. '	k' → logprob: -16.375036239624023
    5. ' ' → logprob: -18.750036239624023
    6. '  ' → logprob: -19.750036239624023
    7. '    ' → logprob: -19.750036239624023
    8. '
' → logprob: -20.125036239624023
    9. '    
' → logprob: -21.750036239624023
    10. '=k' → logprob: -21.750036239624023

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1131751611828804
    2. ':
' → logprob: -2.2381751537323
    3. '           ' → logprob: -8.488175392150879
    4. '       ' → logprob: -9.238175392150879
    5. '               ' → logprob: -11.488175392150879
    6. ':return' → logprob: -11.613175392150879
    7. ' :' → logprob: -11.863175392150879
    8. ':
' → logprob: -12.113175392150879
    9. '   ' → logprob: -12.238175392150879
    10. ' :
' → logprob: -12.488175392150879

Token 148: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4999779462814331
    2. '           ' → logprob: -1.249977946281433
    3. ' break' → logprob: -2.6249780654907227
    4. 'break' → logprob: -3.3749780654907227
    5. '	break' → logprob: -8.999978065490723
    6. '
' → logprob: -9.624978065490723
    7. '```' → logprob: -9.999978065490723
    8. '       ' → logprob: -11.249978065490723
    9. '   ' → logprob: -11.874978065490723
    10. '                   ' → logprob: -12.249978065490723

Token 149: ' l' (ID: 305)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.395698606967926
    2. 'break' → logprob: -1.1456985473632812
    3. '               ' → logprob: -4.770698547363281
    4. '	break' → logprob: -8.395698547363281
    5. '                   ' → logprob: -9.770698547363281
    6. '           ' → logprob: -11.145698547363281
    7. '
' → logprob: -12.145698547363281
    8. '```' → logprob: -12.395698547363281
    9. 'b' → logprob: -12.770698547363281
    10. '_break' → logprob: -13.395698547363281

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2599889934062958
    2. ' =' → logprob: -1.5099890232086182
    3. '+' → logprob: -5.634988784790039
    4. '<|end|>' → logprob: -5.884988784790039
    5. '+=' → logprob: -7.009988784790039
    6. ' +=' → logprob: -8.134988784790039
    7. ' ' → logprob: -8.384988784790039
    8. ' +' → logprob: -9.634988784790039
    9. '>=' → logprob: -9.884988784790039
    10. ' >=' → logprob: -10.759988784790039

Token 151: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00020377879263833165
    2. ' m' → logprob: -8.500204086303711
    3. '	m' → logprob: -15.500204086303711
    4. '    ' → logprob: -18.37520408630371
    5. ' ' → logprob: -18.62520408630371
    6. '_m' → logprob: -19.00020408630371
    7. '
' → logprob: -19.25020408630371
    8. '   ' → logprob: -19.37520408630371
    9. '<m' → logprob: -19.37520408630371
    10. '0' → logprob: -19.87520408630371

Token 152: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010270876373397186
    2. '           ' → logprob: -9.750102996826172
    3. '              ' → logprob: -10.875102996826172
    4. '
' → logprob: -12.000102996826172
    5. 'else' → logprob: -12.000102996826172
    6. '```' → logprob: -12.625102996826172
    7. '<|end|>' → logprob: -12.875102996826172
    8. 'break' → logprob: -13.375102996826172
    9. '                   ' → logprob: -13.875102996826172
    10. '                
' → logprob: -13.875102996826172

Token 153: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.810037742368877e-05
    2. 'else' → logprob: -10.875038146972656
    3. '           ' → logprob: -11.750038146972656
    4. 'break' → logprob: -12.625038146972656
    5. '              ' → logprob: -12.875038146972656
    6. '```' → logprob: -13.375038146972656
    7. ' else' → logprob: -13.875038146972656
    8. '<|end|>' → logprob: -13.875038146972656
    9. '			' → logprob: -14.875038146972656
    10. '       ' → logprob: -15.250038146972656

Token 154: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2548896074295044
    2. 'break' (adapté à ' break') → logprob: -1.5048896074295044
    3. ' break' → logprob: -5.879889488220215
    4. '	break' → logprob: -9.004889488220215
    5. '
' → logprob: -12.004889488220215
    6. '```' → logprob: -12.129889488220215
    7. '              ' → logprob: -12.254889488220215
    8. '_break' → logprob: -12.379889488220215
    9. 'reak' → logprob: -12.754889488220215
    10. '                
' → logprob: -13.004889488220215

Token 155: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028395960107445717
    2. 'else' → logprob: -3.653395891189575
    3. ' else' → logprob: -6.778396129608154
    4. 'r' → logprob: -7.778396129608154
    5. '```' → logprob: -8.153395652770996
    6. '   ' → logprob: -9.403395652770996
    7. '           ' → logprob: -9.528395652770996
    8. '
' → logprob: -10.028395652770996
    9. '<|end|>' → logprob: -11.403395652770996
    10. ')' → logprob: -11.903395652770996

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08191656321287155
    2. 'else' → logprob: -2.581916570663452
    3. ' else' → logprob: -6.956916332244873
    4. '   ' → logprob: -6.956916332244873
    5. 'r' → logprob: -7.081916332244873
    6. '```' → logprob: -8.331916809082031
    7. '           ' → logprob: -11.456916809082031
    8. '
' → logprob: -11.956916809082031
    9. ' r' → logprob: -12.081916809082031
    10. ')' → logprob: -12.456916809082031

Token 157: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.05002984032034874
    2. '       ' → logprob: -3.550029754638672
    3. '   ' → logprob: -4.425029754638672
    4. ' else' → logprob: -5.050029754638672
    5. 'r' → logprob: -6.675029754638672
    6. '```' → logprob: -7.925029754638672
    7. ' r' → logprob: -10.925029754638672
    8. '	else' → logprob: -11.050029754638672
    9. '<|end|>' → logprob: -12.050029754638672
    10. '
' → logprob: -12.300029754638672

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20350688695907593
    2. ':
' → logprob: -1.7035069465637207
    3. '       ' → logprob: -6.453506946563721
    4. '           ' → logprob: -7.953506946563721
    5. '```' → logprob: -9.328506469726562
    6. '   ' → logprob: -10.828506469726562
    7. 'r' → logprob: -10.953506469726562
    8. ':

' → logprob: -11.328506469726562
    9. ':
' → logprob: -11.703506469726562
    10. ' r' → logprob: -11.953506469726562

Token 159: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.471417635679245
    2. '           ' → logprob: -1.0964176654815674
    3. '       ' → logprob: -3.4714176654815674
    4. ' r' → logprob: -4.596417427062988
    5. '   ' → logprob: -7.471417427062988
    6. '	r' → logprob: -10.596417427062988
    7. '	       ' → logprob: -11.096417427062988
    8. '               ' → logprob: -11.471417427062988
    9. ' ' → logprob: -11.721417427062988
    10. '```' → logprob: -12.221417427062988

Token 160: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0007105246186256409
    2. ' r' → logprob: -7.250710487365723
    3. '           ' → logprob: -14.875710487365723
    4. '               ' → logprob: -16.25071144104004
    5. '	r' → logprob: -16.62571144104004
    6. '       ' → logprob: -17.12571144104004
    7. '   ' → logprob: -17.12571144104004
    8. '
' → logprob: -18.75071144104004
    9. '_r' → logprob: -19.87571144104004
    10. '                   ' → logprob: -20.37571144104004

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693388760089874
    2. '=' → logprob: -2.1269338130950928
    3. '<|end|>' → logprob: -12.126934051513672
    4. '=m' → logprob: -15.751934051513672
    5. ')' → logprob: -16.501934051513672
    6. ' ' → logprob: -17.126934051513672
    7. '＝' → logprob: -17.501934051513672
    8. ' =)' → logprob: -17.626934051513672
    9. ' =
' → logprob: -18.501934051513672
    10. '<|end|>' → logprob: -18.876934051513672

Token 162: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004078639671206474
    2. ' m' → logprob: -5.5040788650512695
    3. '	m' → logprob: -15.25407886505127
    4. 'ｍ' → logprob: -19.629077911376953
    5. ' ' → logprob: -20.004077911376953
    6. ' м' → logprob: -20.379077911376953
    7. '<|end|>' → logprob: -20.379077911376953
    8. '<m' → logprob: -20.504077911376953
    9. ' ' → logprob: -20.504077911376953
    10. '*m' → logprob: -20.754077911376953

Token 163: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10461411625146866
    2. '   ' → logprob: -2.479614019393921
    3. '    
' → logprob: -5.2296142578125
    4. 'print' → logprob: -5.6046142578125
    5. 'main' → logprob: -5.9796142578125
    6. 'if' → logprob: -6.3546142578125
    7. '
' → logprob: -7.1046142578125
    8. ')' → logprob: -7.4796142578125
    9. '  
' → logprob: -8.2296142578125
    10. '

' → logprob: -9.2296142578125

Token 164: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1845277100801468
    2. '   ' → logprob: -1.9345277547836304
    3. '
' → logprob: -4.43452787399292
    4. 'return' → logprob: -5.05952787399292
    5. 'if' → logprob: -6.05952787399292
    6. ')' → logprob: -6.68452787399292
    7. 'main' → logprob: -7.18452787399292
    8. '    
' → logprob: -7.68452787399292
    9. '```' → logprob: -7.80952787399292
    10. ' print' → logprob: -8.059527397155762

Token 165: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.040457421680912e-05
    2. '   ' → logprob: -10.000070571899414
    3. ' print' → logprob: -10.875070571899414
    4. '```' → logprob: -12.125070571899414
    5. '
' → logprob: -14.750070571899414
    6. '    
' → logprob: -16.875070571899414
    7. 'return' → logprob: -16.875070571899414
    8. '	print' → logprob: -18.000070571899414
    9. '``' → logprob: -18.125070571899414
    10. '
' → logprob: -18.875070571899414

Token 166: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. 'r' → logprob: -16.25002098083496
    4. ' (' → logprob: -17.50002098083496
    5. '()' → logprob: -18.00002098083496
    6. '(
' → logprob: -19.25002098083496
    7. '((' → logprob: -19.50002098083496
    8. '(s' → logprob: -21.00002098083496
    9. '(re' → logprob: -21.00002098083496
    10. '(rv' → logprob: -21.75002098083496

Token 167: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4498052223643754e-05
    2. ')
' → logprob: -11.500014305114746
    3. ' )' → logprob: -12.500014305114746
    4. ')

' → logprob: -15.875014305114746
    5. '```' → logprob: -16.125015258789062
    6. ')`' → logprob: -16.375015258789062
    7. '<|end|>' → logprob: -16.625015258789062
    8. '())' → logprob: -17.125015258789062
    9. ')#' → logprob: -17.250015258789062
    10. ')}' → logprob: -17.375015258789062

Token 168: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011781477369368076
    2. 'main' → logprob: -5.011781692504883
    3. '
' → logprob: -6.136781692504883
    4. '```' → logprob: -6.511781692504883
    5. '<|end|>' → logprob: -7.511781692504883
    6. '\n' → logprob: -8.011781692504883
    7. ' if' → logprob: -8.511781692504883
    8. '\' → logprob: -9.761781692504883
    9. '0' → logprob: -9.886781692504883
    10. '  
' → logprob: -10.011781692504883

Token 169: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 167
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 149
Précision stricte (1ère position): 37.72%
Précision adaptée (1ère position): 43.71%
Précision (top 10): 89.22%
================================================================================
