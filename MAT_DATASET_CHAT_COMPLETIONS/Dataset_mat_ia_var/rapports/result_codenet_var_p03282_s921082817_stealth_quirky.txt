================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math as m
import sys as system
import queue as q
from collections import Counter as C
from itertools import accumulate as acc
try:
    from math import gcd as gcd_func
except ImportError:
    from fractions import gcd as gcd_func
from functools import reduce as rdc

my_mod = 10**9 + 7

fancy_lcm = lambda x, y: x * y // gcd_func(x, y)

def combine(n, k): return m.factorial(n) // (m.factorial(n - k) * m.factorial(k))

def perms(n, k): return m.factorial(n) // m.factorial(n - k)

'''
### Mad input cheat sheet ###
# Get one line as str
  = system.stdin.readline().strip()
# str to list of chars
  = list(system.stdin.readline().strip())
# Get int
  = int(system.stdin.readline())
# Unpack int line
  = map(int, system.stdin.readline().split())
# List of ints
  = list(map(int, system.stdin.readline().split()))
# List of int lists Nx?
  = [list(map(int, system.stdin.readline().split())) for _ in range(N)]
'''

if __name__ + "" == "__main__":
    S_raw = system.stdin.readline().strip()
    K_mine = int(system.stdin.readline())
    countz = 0
    for idx, ch in enumerate(S_raw):
        if not K_mine:
            print(1)
            break
        if ch == "1":
            K_mine -= 1
        else:
            print(ch)
            break
    else:
        print(1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' m' (ID: 284)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.002156091621145606
    2. 'math' → logprob: -6.3771562576293945
    3. ' m' → logprob: -8.002156257629395
    4. ' ' → logprob: -9.127156257629395
    5. ' ma' → logprob: -12.252156257629395
    6. 'm' → logprob: -13.627156257629395
    7. ' ' → logprob: -13.752156257629395
    8. '_math' → logprob: -13.877156257629395
    9. '```' → logprob: -14.377156257629395
    10. ' Math' → logprob: -14.752156257629395

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00010330478107789531
    2. '\' → logprob: -10.000102996826172
    3. '\n' → logprob: -10.875102996826172
    4. '.

' → logprob: -12.250102996826172
    5. '```' → logprob: -12.250102996826172
    6. '<|end|>' → logprob: -12.375102996826172
    7. 'import' → logprob: -12.625102996826172
    8. '\.' → logprob: -13.000102996826172
    9. ' .' → logprob: -13.250102996826172
    10. '.\' → logprob: -13.375102996826172

Token 5: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002599053841549903
    2. '\' → logprob: -9.500260353088379
    3. '.

' → logprob: -10.500260353088379
    4. '\n' → logprob: -10.625260353088379
    5. '```' → logprob: -11.125260353088379
    6. 'm' → logprob: -11.250260353088379
    7. 'import' → logprob: -11.500260353088379
    8. '.
' → logprob: -11.500260353088379
    9. '.e' → logprob: -11.625260353088379
    10. '
' → logprob: -11.625260353088379

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2140413224697113
    2. ' numpy' → logprob: -1.8390413522720337
    3. ' os' → logprob: -3.589041233062744
    4. 'sys' → logprob: -5.464041233062744
    5. 'numpy' → logprob: -7.214041233062744
    6. ' random' → logprob: -7.714041233062744
    7. ' cm' → logprob: -7.964041233062744
    8. ' ' → logprob: -9.589041709899902
    9. ' re' → logprob: -9.839041709899902
    10. 'os' → logprob: -9.839041709899902

Token 7: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8911513090133667
    2. '
' → logprob: -1.2661513090133667
    3. '

' → logprob: -2.2661514282226562
    4. '<|end|>' → logprob: -2.3911514282226562
    5. '\n' → logprob: -2.5161514282226562
    6. '<|end|>' → logprob: -4.641151428222656
    7. 'import' → logprob: -5.391151428222656
    8. '\' → logprob: -5.641151428222656
    9. '```' → logprob: -5.891151428222656
    10. 'newline' → logprob: -5.891151428222656

Token 8: ' system' (ID: 2420)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12669172883033752
    2. ' sys' → logprob: -2.2516918182373047
    3. 's' → logprob: -4.751691818237305
    4. 'sys' → logprob: -5.751691818237305
    5. ' sy' → logprob: -7.001691818237305
    6. ' ' → logprob: -7.251691818237305
    7. 'sy' → logprob: -8.626691818237305
    8. ' py' → logprob: -10.251691818237305
    9. '_s' → logprob: -10.376691818237305
    10. ' ' → logprob: -11.001691818237305

Token 9: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.285826712846756
    2. '
' → logprob: -2.0358266830444336
    3. '<|end|>' → logprob: -3.1608266830444336
    4. '\n' → logprob: -3.6608266830444336
    5. '

' → logprob: -3.9108266830444336
    6. '<|end|>' → logprob: -4.910826683044434
    7. 'import' → logprob: -5.410826683044434
    8. 'newline' → logprob: -5.535826683044434
    9. '```' → logprob: -6.035826683044434
    10. '
' → logprob: -6.035826683044434

Token 10: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14475668966770172
    2. '
' → logprob: -2.64475679397583
    3. 'import' → logprob: -3.89475679397583
    4. '.
' → logprob: -4.64475679397583
    5. '\n' → logprob: -4.76975679397583
    6. '' → logprob: -5.01975679397583
    7. '\' → logprob: -5.89475679397583
    8. ',' → logprob: -6.14475679397583
    9. '

' → logprob: -6.14475679397583
    10. '<|end|>' → logprob: -6.14475679397583

Token 11: ' queue' (ID: 13661)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.032114170491695404
    2. ' numpy' → logprob: -3.782114267349243
    3. ' math' → logprob: -5.907114028930664
    4. ' ' → logprob: -5.907114028930664
    5. ' random' → logprob: -6.907114028930664
    6. ' re' → logprob: -8.032114028930664
    7. ' itertools' → logprob: -8.032114028930664
    8. ' time' → logprob: -8.532114028930664
    9. ' o' → logprob: -8.657114028930664
    10. ' collections' → logprob: -8.782114028930664

Token 12: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20448485016822815
    2. '<|end|>' → logprob: -2.0794849395751953
    3. '
' → logprob: -3.4544849395751953
    4. ' as' → logprob: -4.454484939575195
    5. '<|end|>' → logprob: -5.079484939575195
    6. 'import' → logprob: -5.829484939575195
    7. 'as' → logprob: -6.204484939575195
    8. '\n' → logprob: -6.579484939575195
    9. '

' → logprob: -6.954484939575195
    10. '.Queue' → logprob: -6.954484939575195

Token 13: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6968671679496765
    2. ' q' → logprob: -0.6968671679496765
    3. 'Q' → logprob: -5.821866989135742
    4. ' que' → logprob: -8.321866989135742
    5. 'que' → logprob: -8.571866989135742
    6. ' Q' → logprob: -9.321866989135742
    7. 'qu' → logprob: -9.571866989135742
    8. 'qq' → logprob: -10.321866989135742
    9. '   ' → logprob: -10.446866989135742
    10. ' qu' → logprob: -10.446866989135742

Token 14: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01145979855209589
    2. '
' → logprob: -4.886459827423096
    3. '<|end|>' → logprob: -6.261459827423096
    4. '.
' → logprob: -8.011459350585938
    5. 'import' → logprob: -8.136459350585938
    6. '<|end|>' → logprob: -8.261459350585938
    7. '

' → logprob: -8.511459350585938
    8. '.Queue' → logprob: -8.886459350585938
    9. '\n' → logprob: -9.011459350585938
    10. 'newline' → logprob: -9.386459350585938

Token 15: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0029723532497882843
    2. 'q' → logprob: -7.25297212600708
    3. '.
' → logprob: -7.87797212600708
    4. 'import' → logprob: -7.87797212600708
    5. '
' → logprob: -8.127972602844238
    6. '\' → logprob: -8.752972602844238
    7. '\n' → logprob: -9.002972602844238
    8. '<|end|>' → logprob: -9.127972602844238
    9. 'newline' → logprob: -9.252972602844238
    10. '#' → logprob: -9.377972602844238

Token 16: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.24144767224788666
    2. ' threading' → logprob: -2.741447687149048
    3. ' math' → logprob: -2.866447687149048
    4. ' ' → logprob: -3.616447687149048
    5. ' abc' → logprob: -3.616447687149048
    6. 'collections' → logprob: -4.366447448730469
    7. ' os' → logprob: -4.866447448730469
    8. ' dat' → logprob: -5.866447448730469
    9. ' enum' → logprob: -5.866447448730469
    10. ' functools' → logprob: -6.116447448730469

Token 17: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5761857628822327
    2. ' import' → logprob: -0.8261857628822327
    3. '.' → logprob: -9.576186180114746
    4. 'abc' → logprob: -10.076186180114746
    5. '```' → logprob: -10.201186180114746
    6. '	import' → logprob: -10.326186180114746
    7. ' ' → logprob: -11.201186180114746
    8. ' abc' → logprob: -11.326186180114746
    9. 's' → logprob: -11.826186180114746
    10. ' defaultdict' → logprob: -12.701186180114746

Token 18: ' Counter' (ID: 32251)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.12425639480352402
    2. 'deque' → logprob: -2.4992563724517822
    3. ' defaultdict' → logprob: -3.3742563724517822
    4. ' abc' → logprob: -8.749256134033203
    5. ' named' → logprob: -9.374256134033203
    6. 'de' → logprob: -9.624256134033203
    7. 'default' → logprob: -10.124256134033203
    8. 'abc' → logprob: -10.249256134033203
    9. 'Deque' → logprob: -10.624256134033203
    10. ' de' → logprob: -10.624256134033203

Token 19: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.563727080821991
    2. 'import' → logprob: -2.3137271404266357
    3. '\n' → logprob: -2.3137271404266357
    4. ',' → logprob: -2.4387271404266357
    5. '<|end|>' → logprob: -3.0637271404266357
    6. '
' → logprob: -3.4387271404266357
    7. 'n' → logprob: -4.313726902008057
    8. 'a' → logprob: -4.438726902008057
    9. '\' → logprob: -5.063726902008057
    10. 'newline' → logprob: -5.188726902008057

Token 20: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.16859741508960724
    2. ' Counter' → logprob: -2.668597459793091
    3. 'Counter' → logprob: -3.418597459793091
    4. 'C' → logprob: -3.918597459793091
    5. ' Co' → logprob: -4.668597221374512
    6. ' c' → logprob: -4.918597221374512
    7. ' ' → logprob: -5.043597221374512
    8. ' Ct' → logprob: -5.918597221374512
    9. ' counter' → logprob: -6.043597221374512
    10. ' cnt' → logprob: -7.293597221374512

Token 21: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08250882476568222
    2. '\' → logprob: -3.8325088024139404
    3. '\n' → logprob: -4.0825090408325195
    4. ',' → logprob: -4.9575090408325195
    5. '
' → logprob: -5.0825090408325195
    6. '<|end|>' → logprob: -5.4575090408325195
    7. 'q' → logprob: -5.7075090408325195
    8. '_' → logprob: -5.8325090408325195
    9. '(' → logprob: -6.2075090408325195
    10. '#' → logprob: -6.3325090408325195

Token 22: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10813270509243011
    2. ',' → logprob: -3.4831326007843018
    3. '\n' → logprob: -3.7331326007843018
    4. '\' → logprob: -3.9831326007843018
    5. 'import' → logprob: -5.108132839202881
    6. '<|end|>' → logprob: -5.483132839202881
    7. '_' → logprob: -5.608132839202881
    8. '
' → logprob: -5.608132839202881
    9. '#' → logprob: -6.233132839202881
    10. '' → logprob: -6.358132839202881

Token 23: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.039477720856666565
    2. ' collections' → logprob: -4.664477825164795
    3. ' typing' → logprob: -4.914477825164795
    4. ' functools' → logprob: -5.039477825164795
    5. ' datetime' → logprob: -5.664477825164795
    6. ' os' → logprob: -5.789477825164795
    7. ' math' → logprob: -6.164477825164795
    8. ' ' → logprob: -6.664477825164795
    9. 'collections' → logprob: -6.914477825164795
    10. ' dat' → logprob: -7.414477825164795

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.007308803033083677
    2. 'import' → logprob: -5.0073089599609375
    3. ' ' → logprob: -7.7573089599609375
    4. '<|end|>' → logprob: -9.257308959960938
    5. '	import' → logprob: -10.132308959960938
    6. '.' → logprob: -11.632308959960938
    7. '_import' → logprob: -11.757308959960938
    8. ' Import' → logprob: -12.882308959960938
    9. '.import' → logprob: -13.007308959960938
    10. '<|end|>' → logprob: -13.257308959960938

Token 25: ' accumulate' (ID: 74226)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.6732949018478394
    2. ' count' → logprob: -1.6732949018478394
    3. ' permutations' → logprob: -2.048295021057129
    4. ' chain' → logprob: -3.048295021057129
    5. ' product' → logprob: -3.423295021057129
    6. ' ' → logprob: -3.798295021057129
    7. ' combinations' → logprob: -4.048295021057129
    8. ' group' → logprob: -4.173295021057129
    9. 'per' → logprob: -4.298295021057129
    10. 'com' → logprob: -4.798295021057129

Token 26: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8922888040542603
    2. 'import' → logprob: -1.7672888040542603
    3. '.' → logprob: -2.1422886848449707
    4. '<|end|>' → logprob: -2.5172886848449707
    5. '(' → logprob: -2.8922886848449707
    6. '\n' → logprob: -3.2672886848449707
    7. '
' → logprob: -3.6422886848449707
    8. ' ' → logprob: -3.8922886848449707
    9. '(
' → logprob: -4.767288684844971
    10. '<|end|>' → logprob: -4.767288684844971

Token 27: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.12146667391061783
    2. 'a' → logprob: -2.496466636657715
    3. 'ac' → logprob: -4.246466636657715
    4. ' acc' → logprob: -4.371466636657715
    5. ' a' → logprob: -5.621466636657715
    6. ' ' → logprob: -7.621466636657715
    7. ' ac' → logprob: -7.996466636657715
    8. ' accu' → logprob: -8.871466636657715
    9. 'acci' → logprob: -8.871466636657715
    10. '	acc' → logprob: -9.121466636657715

Token 28: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1925040483474731
    2. '(' → logprob: -1.5675040483474731
    3. '.' → logprob: -1.8175040483474731
    4. '<|end|>' → logprob: -2.0675039291381836
    5. '
' → logprob: -2.5675039291381836
    6. '\n' → logprob: -3.1925039291381836
    7. '\' → logprob: -4.192503929138184
    8. '(
' → logprob: -4.192503929138184
    9. 'n' → logprob: -4.817503929138184
    10. 'import' → logprob: -5.067503929138184

Token 29: 'try' (ID: 1806)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3286670446395874
    2. ',' → logprob: -1.7036670446395874
    3. '<|end|>' → logprob: -1.9536670446395874
    4. 'import' → logprob: -2.453667163848877
    5. '#' → logprob: -2.578667163848877
    6. '
' → logprob: -2.828667163848877
    7. 'def' → logprob: -3.078667163848877
    8. '\n' → logprob: -3.828667163848877
    9. 'n' → logprob: -4.078667163848877
    10. '\' → logprob: -4.203667163848877

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06198897212743759
    2. ' :' → logprob: -2.8119890689849854
    3. ':
' → logprob: -11.686988830566406
    4. ' :
' → logprob: -12.811988830566406
    5. ' except' → logprob: -12.811988830566406
    6. ':**' → logprob: -13.186988830566406
    7. '：' → logprob: -13.811988830566406
    8. ',' → logprob: -14.561988830566406
    9. ':def' → logprob: -14.561988830566406
    10. ' ' → logprob: -14.811988830566406

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08004366606473923
    2. ' :' → logprob: -2.5800435543060303
    3. ':
' → logprob: -7.705043792724609
    4. '   ' → logprob: -7.705043792724609
    5. '    ' → logprob: -9.83004379272461
    6. ' :
' → logprob: -9.83004379272461
    7. ' ' → logprob: -9.95504379272461
    8. '(' → logprob: -10.33004379272461
    9. ' (' → logprob: -10.58004379272461
    10. '():' → logprob: -12.08004379272461

Token 32: ' from' (ID: 591)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04804021865129471
    2. ' :' → logprob: -3.6730401515960693
    3. '   ' → logprob: -4.798040390014648
    4. ':
' → logprob: -5.673040390014648
    5. ' system' → logprob: -5.923040390014648
    6. '    ' → logprob: -5.923040390014648
    7. ' ' → logprob: -6.548040390014648
    8. 'import' → logprob: -7.548040390014648
    9. 'except' → logprob: -8.173040390014648
    10. ' import' → logprob: -8.298040390014648

Token 33: ' math' (ID: 13324)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.21613331139087677
    2. ' math' → logprob: -2.7161333560943604
    3. 'numpy' → logprob: -2.7161333560943604
    4. ' functools' → logprob: -3.8411333560943604
    5. ' collections' → logprob: -4.466133117675781
    6. ' scipy' → logprob: -4.966133117675781
    7. ' sym' → logprob: -5.216133117675781
    8. ' matplotlib' → logprob: -5.466133117675781
    9. 'collections' → logprob: -6.216133117675781
    10. '_numpy' → logprob: -6.216133117675781

Token 34: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2841050922870636
    2. 'import' → logprob: -2.034105062484741
    3. '<|end|>' → logprob: -2.409105062484741
    4. 'plotlib' → logprob: -4.03410530090332
    5. 's' → logprob: -6.03410530090332
    6. ' ' → logprob: -6.15910530090332
    7. '<|end|>' → logprob: -6.40910530090332
    8. '.' → logprob: -8.03410530090332
    9. 'ertools' → logprob: -8.15910530090332
    10. ' as' → logprob: -8.65910530090332

Token 35: ' gcd' (ID: 106918)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.5487409830093384
    2. 'sqrt' → logprob: -1.5487409830093384
    3. 'prod' → logprob: -1.9237409830093384
    4. 'comb' → logprob: -2.798740863800049
    5. ' comb' → logprob: -3.048740863800049
    6. 'log' → logprob: -3.173740863800049
    7. 'dist' → logprob: -3.298740863800049
    8. 'g' → logprob: -3.298740863800049
    9. 'inf' → logprob: -3.423740863800049
    10. 'factor' → logprob: -3.423740863800049

Token 36: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.1210324764251709
    2. '<|end|>' → logprob: -2.621032476425171
    3. ',' → logprob: -4.12103271484375
    4. '
' → logprob: -5.24603271484375
    5. '_' → logprob: -5.62103271484375
    6. ' ' → logprob: -5.62103271484375
    7. '<|end|>' → logprob: -5.74603271484375
    8. ')' → logprob: -6.37103271484375
    9. '

' → logprob: -6.49603271484375
    10. 'except' → logprob: -6.62103271484375

Token 37: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.568721354007721
    2. ' gcd' → logprob: -1.1937212944030762
    3. ' g' → logprob: -2.068721294403076
    4. '_g' → logprob: -6.818721294403076
    5. ' math' → logprob: -7.068721294403076
    6. '	g' → logprob: -7.318721294403076
    7. ' ' → logprob: -7.693721294403076
    8. ' greatest' → logprob: -8.443721771240234
    9. '   ' → logprob: -8.568721771240234
    10. ' _' → logprob: -8.693721771240234

Token 38: '_func' (ID: 22252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6699733734130859
    2. '
' → logprob: -1.794973373413086
    3. '_' → logprob: -2.169973373413086
    4. '<|end|>' → logprob: -2.794973373413086
    5. ' as' → logprob: -3.294973373413086
    6. 'except' → logprob: -3.794973373413086
    7. '_except' → logprob: -3.794973373413086
    8. ' except' → logprob: -4.794973373413086
    9. '

' → logprob: -4.919973373413086
    10. '_
' → logprob: -5.044973373413086

Token 39: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.89085853099823
    2. 'except' → logprob: -1.39085853099823
    3. '<|end|>' → logprob: -2.1408586502075195
    4. ' except' → logprob: -2.8908586502075195
    5. '
' → logprob: -3.0158586502075195
    6. ')' → logprob: -3.5158586502075195
    7. ' as' → logprob: -3.5158586502075195
    8. '<|end|>' → logprob: -4.2658586502075195
    9. '_' → logprob: -4.8908586502075195
    10. ' ' → logprob: -5.2658586502075195

Token 40: 'except' (ID: 25035)
  Prédit: 'except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.316837877035141
    2. ' except' → logprob: -1.4418379068374634
    3. ':' → logprob: -3.566837787628174
    4. '
' → logprob: -5.691837787628174
    5. '    
' → logprob: -6.566837787628174
    6. '   ' → logprob: -7.066837787628174
    7. ':
' → logprob: -8.066838264465332
    8. '	except' → logprob: -8.316838264465332
    9. '_except' → logprob: -8.941838264465332
    10. ',' → logprob: -9.191838264465332

Token 41: ' Import' (ID: 19998)
  Prédit: ' Import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Import' → logprob: -0.0005249153473414481
    2. ' Module' → logprob: -8.375524520874023
    3. ' ' → logprob: -8.875524520874023
    4. 'Import' → logprob: -9.125524520874023
    5. ' ' → logprob: -10.125524520874023
    6. '<|end|>' → logprob: -13.250524520874023
    7. ' ' → logprob: -13.750524520874023
    8. '  ' → logprob: -13.750524520874023
    9. 'Module' → logprob: -15.125524520874023
    10. '_' → logprob: -15.750524520874023

Token 42: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.320199877838604e-07
    2. 'rror' → logprob: -15.25
    3. ' Error' → logprob: -16.0
    4. 'error' → logprob: -17.375
    5. 'Er' → logprob: -17.375
    6. 'Warning' → logprob: -18.0
    7. 'Erro' → logprob: -18.875
    8. 'Err' → logprob: -19.0
    9. '_error' → logprob: -19.125
    10. 'E' → logprob: -19.375

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005132370279170573
    2. ' :' → logprob: -7.625513076782227
    3. ':
' → logprob: -11.125513076782227
    4. ':**' → logprob: -12.500513076782227
    5. ',' → logprob: -13.500513076782227
    6. '):' → logprob: -13.625513076782227
    7. ' as' → logprob: -14.250513076782227
    8. '<|end|>' → logprob: -14.375513076782227
    9. '():' → logprob: -14.750513076782227
    10. '>:' → logprob: -15.125513076782227

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04496461898088455
    2. ' pass' → logprob: -3.544964551925659
    3. ':' → logprob: -4.419964790344238
    4. 'pass' → logprob: -6.294964790344238
    5. '    ' → logprob: -8.044964790344238
    6. '	pass' → logprob: -8.169964790344238
    7. ' :' → logprob: -9.294964790344238
    8. '    
' → logprob: -9.294964790344238
    9. 'g' → logprob: -10.044964790344238
    10. ' ' → logprob: -10.169964790344238

Token 45: ' from' (ID: 591)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.2384604215621948
    2. 'def' → logprob: -1.6134604215621948
    3. ' from' → logprob: -1.8634604215621948
    4. ' pass' → logprob: -2.1134605407714844
    5. 'from' (adapté à ' from') → logprob: -2.2384605407714844
    6. ' gcd' → logprob: -3.4884605407714844
    7. '   ' → logprob: -3.6134605407714844
    8. 'g' → logprob: -3.8634605407714844
    9. 'import' → logprob: -4.113460540771484
    10. 'pass' → logprob: -4.488460540771484

Token 46: ' fractions' (ID: 110523)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.5485032796859741
    2. ' fractions' → logprob: -0.9235032796859741
    3. 'math' → logprob: -4.048503398895264
    4. ' math' → logprob: -5.798503398895264
    5. '   ' → logprob: -5.923503398895264
    6. 'cmath' → logprob: -7.923503398895264
    7. ' ' → logprob: -8.173502922058105
    8. 'sys' → logprob: -8.923502922058105
    9. 'f' → logprob: -9.298502922058105
    10. 'c' → logprob: -9.423502922058105

Token 47: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01937146857380867
    2. 'import' → logprob: -4.019371509552002
    3. ' ' → logprob: -7.019371509552002
    4. '	import' → logprob: -8.894371032714844
    5. '.' → logprob: -9.894371032714844
    6. ' gcd' → logprob: -10.144371032714844
    7. ' .' → logprob: -10.519371032714844
    8. '<|end|>' → logprob: -11.269371032714844
    9. '_import' → logprob: -12.144371032714844
    10. '_' → logprob: -12.269371032714844

Token 48: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.0706702470779419
    2. 'g' → logprob: -2.6956701278686523
    3. ' g' → logprob: -7.320670127868652
    4. '_g' → logprob: -10.320670127868652
    5. ' ' → logprob: -11.570670127868652
    6. 'G' → logprob: -12.070670127868652
    7. ' G' → logprob: -12.320670127868652
    8. '	g' → logprob: -12.570670127868652
    9. 'Fraction' → logprob: -12.945670127868652
    10. ' Fraction' → logprob: -12.945670127868652

Token 49: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6197138428688049
    2. 'def' → logprob: -1.9947137832641602
    3. '<|end|>' → logprob: -1.9947137832641602
    4. '

' → logprob: -3.11971378326416
    5. '  
' → logprob: -3.61971378326416
    6. ' 
' → logprob: -3.99471378326416
    7. '\n' → logprob: -3.99471378326416
    8. '```' → logprob: -4.36971378326416
    9. ' 

' → logprob: -4.74471378326416
    10. '#' → logprob: -4.74471378326416

Token 50: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.01630754955112934
    2. ' gcd' → logprob: -4.391307353973389
    3. 'fra' → logprob: -5.766307353973389
    4. 'f' → logprob: -7.641307353973389
    5. 'fraction' → logprob: -9.016307830810547
    6. ' fractions' → logprob: -10.516307830810547
    7. ' ' → logprob: -12.141307830810547
    8. '	g' → logprob: -12.266307830810547
    9. 'frac' → logprob: -12.641307830810547
    10. '   ' → logprob: -12.766307830810547

Token 51: '_func' (ID: 22252)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06228136271238327
    2. '_
' → logprob: -2.937281370162964
    3. '_

' → logprob: -5.312281131744385
    4. '_func' → logprob: -6.437281131744385
    5. '
' → logprob: -8.187281608581543
    6. '\' → logprob: -9.187281608581543
    7. '_
' → logprob: -9.187281608581543
    8. '_\' → logprob: -9.687281608581543
    9. '\n' → logprob: -9.937281608581543
    10. '' → logprob: -10.187281608581543

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2450837641954422
    2. '

' → logprob: -1.6200838088989258
    3. '\n' → logprob: -5.120083808898926
    4. 'def' → logprob: -5.370083808898926
    5. '#' → logprob: -6.495083808898926
    6. '<|end|>' → logprob: -6.870083808898926
    7. ' 
' → logprob: -6.995083808898926
    8. '    
' → logprob: -7.245083808898926
    9. '


' → logprob: -7.370083808898926
    10. ' 

' → logprob: -7.370083808898926

Token 53: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0170811414718628
    2. 'def' → logprob: -1.0170811414718628
    3. '

' → logprob: -1.6420811414718628
    4. '#' → logprob: -3.1420812606811523
    5. '<|end|>' → logprob: -4.267081260681152
    6. '\n' → logprob: -4.767081260681152
    7. '```' → logprob: -6.392081260681152
    8. ' 

' → logprob: -6.392081260681152
    9. ' 
' → logprob: -6.767081260681152
    10. 'newline' → logprob: -6.892081260681152

Token 54: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.6584892868995667
    2. ' operator' → logprob: -1.2834892272949219
    3. ' typing' → logprob: -2.658489227294922
    4. 'operator' → logprob: -3.158489227294922
    5. 'fun' → logprob: -3.908489227294922
    6. ' os' → logprob: -4.033489227294922
    7. ' decimal' → logprob: -4.408489227294922
    8. ' random' → logprob: -4.908489227294922
    9. ' math' → logprob: -5.283489227294922
    10. 'os' → logprob: -5.408489227294922

Token 55: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.024537263438105583
    2. 'import' → logprob: -3.7745373249053955
    3. ' ' → logprob: -7.274537086486816
    4. '.' → logprob: -7.899537086486816
    5. '_import' → logprob: -9.399537086486816
    6. '	import' → logprob: -9.899537086486816
    7. ' .' → logprob: -10.649537086486816
    8. '<|end|>' → logprob: -10.649537086486816
    9. '_' → logprob: -11.399537086486816
    10. '.import' → logprob: -11.524537086486816

Token 56: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.20155902206897736
    2. 'reduce' → logprob: -1.826559066772461
    3. ' l' → logprob: -3.951559066772461
    4. 'l' → logprob: -6.451559066772461
    5. ' partial' → logprob: -8.076559066772461
    6. ' wraps' → logprob: -8.951559066772461
    7. ' cmp' → logprob: -9.576559066772461
    8. 'partial' → logprob: -9.701559066772461
    9. 'wrap' → logprob: -9.951559066772461
    10. ' ' → logprob: -10.201559066772461

Token 57: ' as' (ID: 472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10803490877151489
    2. '<|end|>' → logprob: -3.48303484916687
    3. ' 
' → logprob: -3.60803484916687
    4. 'import' → logprob: -4.233035087585449
    5. ' as' → logprob: -4.483035087585449
    6. ' import' → logprob: -5.233035087585449
    7. ' 

' → logprob: -5.733035087585449
    8. ' ,' → logprob: -5.983035087585449
    9. ',' → logprob: -6.108035087585449
    10. '<|end|>' → logprob: -6.483035087585449

Token 58: ' r' (ID: 428)
  Prédit: ' red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.23031924664974213
    2. ' reduce' → logprob: -1.9803192615509033
    3. ' r' → logprob: -2.8553192615509033
    4. 'red' → logprob: -5.480319023132324
    5. 'reduce' → logprob: -5.730319023132324
    6. ' ' → logprob: -6.980319023132324
    7. 'r' → logprob: -7.230319023132324
    8. ' rd' → logprob: -8.230319023132324
    9. ' re' → logprob: -8.980319023132324
    10. ' reduct' → logprob: -8.980319023132324

Token 59: 'dc' (ID: 13964)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.01121499203145504
    2. 'educt' → logprob: -4.8862152099609375
    3. 'educ' → logprob: -5.8862152099609375
    4. 'e' → logprob: -7.2612152099609375
    5. 'edf' → logprob: -10.761215209960938
    6. '<|end|>' → logprob: -10.886215209960938
    7. 'edu' → logprob: -11.011215209960938
    8. 'duce' → logprob: -11.136215209960938
    9. ' ed' → logprob: -11.636215209960938
    10. '```' → logprob: -11.886215209960938

Token 60: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: 'my' (ID: 3825)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1721012443304062
    2. '
' → logprob: -2.0471012592315674
    3. '

' → logprob: -4.172101020812988
    4. '#' → logprob: -5.297101020812988
    5. '<|end|>' → logprob: -6.422101020812988
    6. 'd' → logprob: -6.672101020812988
    7. '\' → logprob: -7.297101020812988
    8. '\n' → logprob: -7.547101020812988
    9. ' 

' → logprob: -7.797101020812988
    10. ' def' → logprob: -7.797101020812988

Token 62: '_mod' (ID: 15325)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.075766921043396
    2. '_var' → logprob: -3.7007670402526855
    3. '_list' → logprob: -4.4507670402526855
    4. '_func' → logprob: -4.5757670402526855
    5. '_math' → logprob: -4.8257670402526855
    6. ' _' → logprob: -5.0757670402526855
    7. '_set' → logprob: -5.9507670402526855
    8. '_s' → logprob: -6.5757670402526855
    9. '_number' → logprob: -6.9507670402526855
    10. '_array' → logprob: -6.9507670402526855

Token 63: ' =' (ID: 314)
  Prédit: 'ulus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulus' → logprob: -1.3404088020324707
    2. ' =' → logprob: -1.4654088020324707
    3. 'ular' → logprob: -2.4654088020324707
    4. '(' → logprob: -2.4654088020324707
    5. 'ule' → logprob: -2.5904088020324707
    6. '=' → logprob: -2.7154088020324707
    7. 'ulo' → logprob: -3.2154088020324707
    8. '_' → logprob: -3.4654088020324707
    9. ' ' → logprob: -3.4654088020324707
    10. 'ul' → logprob: -3.9654088020324707

Token 64: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09991058707237244
    2. '10' → logprob: -2.4749104976654053
    3. '100' → logprob: -4.599910736083984
    4. ' lambda' → logprob: -7.724910736083984
    5. '1' → logprob: -8.974910736083984
    6. ' (' → logprob: -9.349910736083984
    7. 'pow' → logprob: -9.349910736083984
    8. 'lambda' → logprob: -9.849910736083984
    9. ' int' → logprob: -10.849910736083984
    10. 'int' → logprob: -11.474910736083984

Token 65: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01624644361436367
    2. '100' → logprob: -4.141246318817139
    3. '1' → logprob: -9.516246795654297
    4. 'lambda' → logprob: -9.516246795654297
    5. 'int' → logprob: -10.516246795654297
    6. '998' → logprob: -11.141246795654297
    7. 'pow' → logprob: -11.891246795654297
    8. '123' → logprob: -12.141246795654297
    9. 'm' → logprob: -12.641246795654297
    10. '(' → logprob: -12.891246795654297

Token 66: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7098143696784973
    2. '09' → logprob: -0.9598143696784973
    3. '**' → logprob: -2.3348143100738525
    4. '009' → logprob: -4.209814548492432
    5. '000' → logprob: -4.334814548492432
    6. '007' → logprob: -9.084814071655273
    7. ' ' → logprob: -9.584814071655273
    8. '00' → logprob: -9.834814071655273
    9. '^' → logprob: -9.834814071655273
    10. '```' → logprob: -9.959814071655273

Token 67: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. '09' → logprob: -14.500000953674316
    3. ' ' → logprob: -16.875
    4. '10' → logprob: -18.0
    5. '```' → logprob: -18.5
    6. '8' → logprob: -19.5
    7. '18' → logprob: -19.75
    8. '4' → logprob: -19.875
    9. '7' → logprob: -20.0
    10. '0' → logprob: -20.25

Token 68: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0067559825256466866
    2. ' +' → logprob: -5.006755828857422
    3. '7' → logprob: -10.381755828857422
    4. '+
' → logprob: -12.756755828857422
    5. ' plus' → logprob: -13.631755828857422
    6. ' ' → logprob: -14.006755828857422
    7. ' ' → logprob: -14.131755828857422
    8. '＋' → logprob: -14.631755828857422
    9. '+

' → logprob: -14.631755828857422
    10. '```' → logprob: -14.756755828857422

Token 69: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.392202976712724e-06
    2. '+' → logprob: -12.250006675720215
    3. ' ' → logprob: -13.625006675720215
    4. '9' → logprob: -16.1250057220459
    5. '```' → logprob: -16.2500057220459
    6. '07' → logprob: -16.3750057220459
    7. '   ' → logprob: -17.2500057220459
    8. '  ' → logprob: -18.6250057220459
    9. '

' → logprob: -19.0000057220459
    10. ' +' → logprob: -19.0625057220459

Token 70: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '```' → logprob: -17.875
    4. '+' → logprob: -18.125
    5. '07' → logprob: -18.5
    6. '

' → logprob: -19.125
    7. '9' → logprob: -19.5
    8. '   ' → logprob: -19.9375
    9. '' → logprob: -20.4375
    10. '  ' → logprob: -20.9375

Token 71: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5624176859855652
    2. 'def' → logprob: -1.18741774559021
    3. '<|end|>' → logprob: -3.18741774559021
    4. '

' → logprob: -3.56241774559021
    5. '\n' → logprob: -3.93741774559021
    6. '\' → logprob: -4.312417507171631
    7. '#' → logprob: -4.812417507171631
    8. 'newline' → logprob: -5.187417507171631
    9. '' → logprob: -5.812417507171631
    10. 'n' → logprob: -6.812417507171631

Token 72: 'f' (ID: 69)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2837103605270386
    2. 'd' → logprob: -2.033710479736328
    3. '
' → logprob: -2.658710479736328
    4. '\' → logprob: -3.658710479736328
    5. '#' → logprob: -4.658710479736328
    6. '\n' → logprob: -5.908710479736328
    7. 'a' → logprob: -6.283710479736328
    8. 'n' → logprob: -6.408710479736328
    9. '' → logprob: -6.783710479736328
    10. '

' → logprob: -7.408710479736328

Token 73: 'ancy' (ID: 8830)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2974483966827393
    2. 'a' → logprob: -1.9224483966827393
    3. 'u' → logprob: -1.9224483966827393
    4. '_' → logprob: -2.4224483966827393
    5. 'actor' → logprob: -2.6724483966827393
    6. 'ac' → logprob: -2.7974483966827393
    7. '(' → logprob: -3.0474483966827393
    8. 'i' → logprob: -3.4224483966827393
    9. '#' → logprob: -4.04744815826416
    10. 'l' → logprob: -4.17244815826416

Token 74: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0048951273784041405
    2. '_factor' → logprob: -6.129895210266113
    3. '(' → logprob: -6.629895210266113
    4. '_sum' → logprob: -8.254895210266113
    5. '_add' → logprob: -9.129895210266113
    6. '_mod' → logprob: -9.129895210266113
    7. '_func' → logprob: -9.254895210266113
    8. '_s' → logprob: -9.629895210266113
    9. '_div' → logprob: -9.754895210266113
    10. ' _' → logprob: -10.004895210266113

Token 75: 'cm' (ID: 7871)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.2769973874092102
    2. 'og' → logprob: -2.5269973278045654
    3. 'en' → logprob: -2.9019973278045654
    4. 'ook' → logprob: -2.9019973278045654
    5. 'oop' → logprob: -3.5269973278045654
    6. 'ine' → logprob: -5.0269975662231445
    7. 'ists' → logprob: -5.6519975662231445
    8. 'ength' → logprob: -6.4019975662231445
    9. 'ink' → logprob: -6.6519975662231445
    10. 'ib' → logprob: -6.9019975662231445

Token 76: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015664072707295418
    2. ' (' → logprob: -5.015664100646973
    3. ' =' → logprob: -5.515664100646973
    4. '_' → logprob: -5.515664100646973
    5. '=' → logprob: -7.765664100646973
    6. '(s' → logprob: -9.140664100646973
    7. 's' → logprob: -10.015664100646973
    8. '(a' → logprob: -10.140664100646973
    9. ' ' → logprob: -10.515664100646973
    10. 'def' → logprob: -11.015664100646973

Token 77: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0177572313696146
    2. ' lambda' → logprob: -4.517757415771484
    3. 'rd' → logprob: -5.642757415771484
    4. '(lambda' → logprob: -5.767757415771484
    5. '=lambda' → logprob: -11.517757415771484
    6. 'l' → logprob: -13.267757415771484
    7. 'ld' → logprob: -13.267757415771484
    8. 'def' → logprob: -14.892757415771484
    9. ' rd' → logprob: -15.017757415771484
    10. ' ' → logprob: -15.017757415771484

Token 78: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35724523663520813
    2. 'x' → logprob: -1.6072452068328857
    3. ' a' → logprob: -2.7322452068328857
    4. ' x' → logprob: -3.3572452068328857
    5. 'lambda' → logprob: -10.482245445251465
    6. ' lambda' → logprob: -10.857245445251465
    7. '	a' → logprob: -12.857245445251465
    8. ' ' → logprob: -13.732245445251465
    9. 'b' → logprob: -13.732245445251465
    10. '=lambda' → logprob: -13.982245445251465

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007936524227261543
    2. ',x' → logprob: -5.632936477661133
    3. ',:' → logprob: -6.507936477661133
    4. ',y' → logprob: -6.757936477661133
    5. ' ,' → logprob: -7.757936477661133
    6. ':' → logprob: -8.132936477661133
    7. ',f' → logprob: -8.132936477661133
    8. ',m' → logprob: -8.382936477661133
    9. ' :' → logprob: -8.507936477661133
    10. ',n' → logprob: -9.757936477661133

Token 80: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0788925439119339
    2. ' y' → logprob: -2.578892469406128
    3. ' ' → logprob: -13.953892707824707
    4. '	y' → logprob: -14.078892707824707
    5. 'lambda' → logprob: -14.328892707824707
    6. ',y' → logprob: -15.453892707824707
    7. ' lambda' → logprob: -15.953892707824707
    8. 'x' → logprob: -16.45389175415039
    9. ',' → logprob: -17.07889175415039
    10. 'f' → logprob: -17.57889175415039

Token 81: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010054604150354862
    2. ' :' → logprob: -4.635054588317871
    3. '=' → logprob: -8.635054588317871
    4. ':(' → logprob: -9.635054588317871
    5. ',' → logprob: -10.635054588317871
    6. ':x' → logprob: -11.010054588317871
    7. ' :(' → logprob: -12.010054588317871
    8. ':m' → logprob: -13.135054588317871
    9. ',:' → logprob: -13.385054588317871
    10. '=(' → logprob: -13.635054588317871

Token 82: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5961405634880066
    2. 'x' → logprob: -0.8461405634880066
    3. ' x' → logprob: -4.346140384674072
    4. ' (' → logprob: -5.221140384674072
    5. '(' → logprob: -6.596140384674072
    6. '(abs' → logprob: -9.09614086151123
    7. 'abs' → logprob: -9.84614086151123
    8. '((' → logprob: -10.22114086151123
    9. '(y' → logprob: -10.84614086151123
    10. '(m' → logprob: -11.09614086151123

Token 83: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6040847897529602
    2. ' *' → logprob: -1.2290847301483154
    3. '*y' → logprob: -1.8540847301483154
    4. '*x' → logprob: -6.2290849685668945
    5. '*l' → logprob: -7.1040849685668945
    6. '*m' → logprob: -7.7290849685668945
    7. '//' → logprob: -8.104084968566895
    8. ' //' → logprob: -8.604084968566895
    9. '*g' → logprob: -8.979084968566895
    10. '*q' → logprob: -9.229084968566895

Token 84: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.837811088189483e-05
    2. ' y' → logprob: -9.625068664550781
    3. '(y' → logprob: -13.875068664550781
    4. '//' → logprob: -13.875068664550781
    5. ' ' → logprob: -16.37506866455078
    6. '	y' → logprob: -16.75006866455078
    7. '...' → logprob: -17.00006866455078
    8. '  ' → logprob: -17.12506866455078
    9. '(' → logprob: -17.25006866455078
    10. ''y' → logprob: -17.62506866455078

Token 85: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.25199413299560547
    2. '//' → logprob: -1.5019941329956055
    3. ' ' → logprob: -10.501994132995605
    4. ')' → logprob: -11.251994132995605
    5. ' /' → logprob: -12.126994132995605
    6. '%' → logprob: -12.751994132995605
    7. ')//' → logprob: -12.751994132995605
    8. '//=' → logprob: -12.876994132995605
    9. '```' → logprob: -13.001994132995605
    10. '/' → logprob: -13.126994132995605

Token 86: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.5941604690160602e-05
    2. 'math' → logprob: -11.250025749206543
    3. ' gcd' → logprob: -11.750025749206543
    4. 'm' → logprob: -12.875025749206543
    5. 'rd' → logprob: -13.375025749206543
    6. 'gd' → logprob: -15.000025749206543
    7. 'r' → logprob: -15.750025749206543
    8. 'gcc' → logprob: -16.00002670288086
    9. 'gc' → logprob: -16.62502670288086
    10. '(g' → logprob: -17.12502670288086

Token 87: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -5.438573680294212e-06
    2. '```' → logprob: -13.125005722045898
    3. 'func' → logprob: -13.875005722045898
    4. '_funcs' → logprob: -14.000005722045898
    5. '_fun' → logprob: -14.375005722045898
    6. '_function' → logprob: -15.125005722045898
    7. '_' → logprob: -15.875005722045898
    8. '_f' → logprob: -16.3750057220459
    9. '_FUNC' → logprob: -16.5000057220459
    10. '(' → logprob: -16.5000057220459

Token 88: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.47434115409851074
    2. '(' → logprob: -0.9743411540985107
    3. ' (' → logprob: -8.47434139251709
    4. '(y' → logprob: -9.97434139251709
    5. '(
' → logprob: -11.97434139251709
    6. '(s' → logprob: -13.97434139251709
    7. '(

' → logprob: -15.22434139251709
    8. '((' → logprob: -15.59934139251709
    9. '(None' → logprob: -15.84934139251709
    10. ' ' → logprob: -15.97434139251709

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027941521257162094
    2. ',y' → logprob: -3.7779414653778076
    3. ' ,' → logprob: -5.527941703796387
    4. 'y' → logprob: -7.277941703796387
    5. ')' → logprob: -11.652941703796387
    6. ' y' → logprob: -11.652941703796387
    7. ' )' → logprob: -14.527941703796387
    8. ' ' → logprob: -14.527941703796387
    9. ')y' → logprob: -14.902941703796387
    10. ',
' → logprob: -15.277941703796387

Token 90: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006716436706483364
    2. ' y' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.88171672821045
    4. ')y' → logprob: -15.25671672821045
    5. ')' → logprob: -15.50671672821045
    6. '	y' → logprob: -15.63171672821045
    7. '    ' → logprob: -17.631715774536133
    8. '<|end|>' → logprob: -17.756715774536133
    9. 'x' → logprob: -18.006715774536133
    10. '   ' → logprob: -18.006715774536133

Token 91: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. '))' → logprob: -11.875008583068848
    3. ' )' → logprob: -13.500008583068848
    4. ')))' → logprob: -16.50000762939453
    5. ')
' → logprob: -16.62500762939453
    6. ')}' → logprob: -17.25000762939453
    7. ')`' → logprob: -17.75000762939453
    8. '),' → logprob: -18.12500762939453
    9. '}' → logprob: -18.37500762939453
    10. ')**' → logprob: -18.50000762939453

Token 92: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011041370453312993
    2. '#' → logprob: -7.501104354858398
    3. 'n' → logprob: -9.251104354858398
    4. ')' → logprob: -9.501104354858398
    5. 'a' → logprob: -9.751104354858398
    6. '[' → logprob: -10.001104354858398
    7. 'x' → logprob: -10.251104354858398
    8. ',' → logprob: -10.376104354858398
    9. '_' → logprob: -10.501104354858398
    10. '
' → logprob: -10.626104354858398

Token 93: ' combine' (ID: 21700)
  Prédit: ' fancy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fancy' → logprob: -0.8343675136566162
    2. ' l' → logprob: -1.0843675136566162
    3. ' gcd' → logprob: -2.334367513656616
    4. ' compute' → logprob: -3.709367513656616
    5. ' calculate' → logprob: -3.834367513656616
    6. ' main' → logprob: -3.834367513656616
    7. ' my' → logprob: -4.084367752075195
    8. ' solve' → logprob: -4.459367752075195
    9. ' ' → logprob: -4.459367752075195
    10. ' factorial' → logprob: -4.834367752075195

Token 94: '(n' (ID: 2406)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3928754925727844
    2. '(' → logprob: -1.3928754329681396
    3. '(lst' → logprob: -3.6428754329681396
    4. '(arr' → logprob: -4.142875671386719
    5. '(x' → logprob: -4.892875671386719
    6. '_lists' → logprob: -5.642875671386719
    7. '(*' → logprob: -5.767875671386719
    8. ' (' → logprob: -5.767875671386719
    9. '(nums' → logprob: -6.142875671386719
    10. '(elements' → logprob: -6.142875671386719

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034261439577676356
    2. ' ,' → logprob: -8.37534236907959
    3. '):' → logprob: -10.00034236907959
    4. ',k' → logprob: -10.62534236907959
    5. ',n' → logprob: -11.12534236907959
    6. 'a' → logprob: -11.62534236907959
    7. ',a' → logprob: -12.37534236907959
    8. 's' → logprob: -12.62534236907959
    9. '1' → logprob: -13.12534236907959
    10. ',
' → logprob: -14.25034236907959

Token 96: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18986615538597107
    2. 'r' → logprob: -1.9398661851882935
    3. ' k' → logprob: -3.814866065979004
    4. ' r' → logprob: -4.939866065979004
    5. ')' → logprob: -11.939866065979004
    6. ' ' → logprob: -13.564866065979004
    7. '```' → logprob: -13.939866065979004
    8. '  ' → logprob: -14.689866065979004
    9. 'm' → logprob: -15.439866065979004
    10. ' )' → logprob: -15.564866065979004

Token 97: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00020008347928524017
    2. ',' → logprob: -9.125200271606445
    3. ')' → logprob: -9.375200271606445
    4. '):
' → logprob: -12.500200271606445
    5. ' ):' → logprob: -13.750200271606445
    6. ':' → logprob: -14.000200271606445
    7. ''):' → logprob: -16.125200271606445
    8. '   ' → logprob: -16.250200271606445
    9. '}:' → logprob: -16.500200271606445
    10. '=' → logprob: -16.625200271606445

Token 98: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' m' (ID: 284)
  Prédit: 'rd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rd' → logprob: -0.08748593181371689
    2. ' r' → logprob: -2.9624860286712646
    3. '1' → logprob: -4.5874857902526855
    4. 'math' → logprob: -4.9624857902526855
    5. ' ' → logprob: -5.5874857902526855
    6. ' math' → logprob: -5.9624857902526855
    7. '0' → logprob: -6.3374857902526855
    8. ' rd' → logprob: -6.4624857902526855
    9. 'r' → logprob: -6.8374857902526855
    10. ' m' → logprob: -6.9624857902526855

Token 100: '.factor' (ID: 196244)
  Prédit: '.com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.20170676708221436
    2. '.factor' → logprob: -1.7017067670822144
    3. '.prod' → logprob: -8.951706886291504
    4. '.' → logprob: -10.076706886291504
    5. ' comb' → logprob: -10.326706886291504
    6. 'factor' → logprob: -10.451706886291504
    7. '.ceil' → logprob: -10.576706886291504
    8. 'comb' → logprob: -11.451706886291504
    9. ' factorial' → logprob: -11.701706886291504
    10. '```' → logprob: -12.201706886291504

Token 101: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -6.408677290892228e-05
    2. 'orial' → logprob: -11.0000638961792
    3. 'al' → logprob: -11.3750638961792
    4. 'rial' → logprob: -11.5000638961792
    5. 'atorial' → logprob: -11.7500638961792
    6. 't' → logprob: -12.2500638961792
    7. 'ialize' → logprob: -12.3750638961792
    8. 'cial' → logprob: -13.5000638961792
    9. '```' → logprob: -13.7500638961792
    10. 'ials' → logprob: -13.7500638961792

Token 102: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00010998018842656165
    2. '(' → logprob: -9.125109672546387
    3. ' (' → logprob: -14.625109672546387
    4. 'n' → logprob: -14.625109672546387
    5. '(
' → logprob: -17.250110626220703
    6. '((' → logprob: -17.500110626220703
    7. ' ' → logprob: -19.250110626220703
    8. '(x' → logprob: -20.125110626220703
    9. '

' → logprob: -20.500110626220703
    10. ')' → logprob: -20.625110626220703

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015693542081862688
    2. ')//' → logprob: -8.875157356262207
    3. ' )' → logprob: -11.000157356262207
    4. '   ' → logprob: -15.625157356262207
    5. ')
' → logprob: -16.62515640258789
    6. '//' → logprob: -17.75015640258789
    7. '))' → logprob: -18.12515640258789
    8. ')/' → logprob: -18.12515640258789
    9. ')/(' → logprob: -18.12515640258789
    10. '')' → logprob: -18.12515640258789

Token 104: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.17976513504981995
    2. ' //' → logprob: -1.8047651052474976
    3. '   ' → logprob: -12.054764747619629
    4. ' //(' → logprob: -12.429764747619629
    5. ' ' → logprob: -12.929764747619629
    6. '#' → logprob: -12.929764747619629
    7. ' ' → logprob: -13.554764747619629
    8. '/' → logprob: -14.179764747619629
    9. '//=' → logprob: -14.429764747619629
    10. 'def' → logprob: -14.554764747619629

Token 105: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0005127601907588542
    2. ' (' → logprob: -7.875512599945068
    3. '((' → logprob: -9.875513076782227
    4. 'm' → logprob: -9.875513076782227
    5. '(' → logprob: -11.000513076782227
    6. '(math' → logprob: -11.500513076782227
    7. '   ' → logprob: -14.375513076782227
    8. '(
' → logprob: -14.375513076782227
    9. '(f' → logprob: -14.500513076782227
    10. ' m' → logprob: -15.750513076782227

Token 106: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005222928593866527
    2. '(m' → logprob: -7.625522136688232
    3. ' m' → logprob: -10.50052261352539
    4. '(' → logprob: -13.25052261352539
    5. ')m' → logprob: -13.37552261352539
    6. '   ' → logprob: -13.50052261352539
    7. ' (' → logprob: -14.00052261352539
    8. '	m' → logprob: -14.25052261352539
    9. 'math' → logprob: -15.87552261352539
    10. '  ' → logprob: -16.37552261352539

Token 107: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.0011782010551542044
    2. 'factor' → logprob: -6.75117826461792
    3. '.' → logprob: -12.001177787780762
    4. ' factorial' → logprob: -13.376177787780762
    5. '_factor' → logprob: -16.126178741455078
    6. '.fact' → logprob: -17.126178741455078
    7. '.math' → logprob: -18.126178741455078
    8. 'Factor' → logprob: -18.501178741455078
    9. '-factor' → logprob: -18.626178741455078
    10. '.fac' → logprob: -18.626178741455078

Token 108: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0052456180565059185
    2. 'ial' → logprob: -5.255245685577393
    3. 'atorial' → logprob: -12.630245208740234
    4. 'nal' → logprob: -12.880245208740234
    5. 'ator' → logprob: -13.505245208740234
    6. 'omial' → logprob: -14.630245208740234
    7. ' al' → logprob: -14.630245208740234
    8. 'l' → logprob: -14.630245208740234
    9. 'cial' → logprob: -15.005245208740234
    10. '(al' → logprob: -15.005245208740234

Token 109: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.00026634239475242794
    2. '(n' → logprob: -8.750266075134277
    3. 'k' → logprob: -9.250266075134277
    4. ' (' → logprob: -11.500266075134277
    5. '(' → logprob: -13.625266075134277
    6. ' k' → logprob: -16.375267028808594
    7. ')' → logprob: -16.625267028808594
    8. ')(' → logprob: -17.000267028808594
    9. '	k' → logprob: -17.125267028808594
    10. '   ' → logprob: -17.125267028808594

Token 110: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.3063671588897705
    2. ' -' → logprob: -1.8063671588897705
    3. '-' → logprob: -2.3063671588897705
    4. 'k' → logprob: -11.556366920471191
    5. ')' → logprob: -14.306366920471191
    6. ' k' → logprob: -14.556366920471191
    7. '-K' → logprob: -15.556366920471191
    8. ' ' → logprob: -15.556366920471191
    9. '-n' → logprob: -16.181367874145508
    10. '   ' → logprob: -16.306367874145508

Token 111: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00861468818038702
    2. ' k' → logprob: -4.758614540100098
    3. '	k' → logprob: -15.633614540100098
    4. ' к' → logprob: -17.758615493774414
    5. '{k' → logprob: -19.133615493774414
    6. ' ' → logprob: -19.758615493774414
    7. ',k' → logprob: -20.508615493774414
    8. '  ' → logprob: -20.633615493774414
    9. '=k' → logprob: -20.883615493774414
    10. '   ' → logprob: -21.133615493774414

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1054253011243418e-05
    2. ' )' → logprob: -11.125020980834961
    3. ')*' → logprob: -12.000020980834961
    4. '   ' → logprob: -17.75002098083496
    5. '))' → logprob: -17.87502098083496
    6. ')
' → logprob: -18.00002098083496
    7. '*)' → logprob: -18.25002098083496
    8. ')`' → logprob: -18.37502098083496
    9. '```' → logprob: -18.50002098083496
    10. '),' → logprob: -18.62502098083496

Token 113: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3137299418449402
    2. '*' → logprob: -1.313730001449585
    3. ' ' → logprob: -8.438730239868164
    4. '*m' → logprob: -8.688730239868164
    5. ')' → logprob: -9.813730239868164
    6. '*k' → logprob: -11.688730239868164
    7. '```' → logprob: -12.563730239868164
    8. '*f' → logprob: -12.938730239868164
    9. 'm' → logprob: -13.063730239868164
    10. ')*' → logprob: -13.063730239868164

Token 114: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.014164448715746403
    2. ' m' → logprob: -4.264164447784424
    3. '	m' → logprob: -14.264164924621582
    4. '   ' → logprob: -15.389164924621582
    5. '  ' → logprob: -16.639163970947266
    6. ' ' → logprob: -16.889163970947266
    7. ')m' → logprob: -17.389163970947266
    8. '    ' → logprob: -17.389163970947266
    9. '(m' → logprob: -18.014163970947266
    10. ' м' → logprob: -18.889163970947266

Token 115: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -8.184812031686306e-05
    2. 'factor' → logprob: -10.000082015991211
    3. '.' → logprob: -10.250082015991211
    4. ' factorial' → logprob: -15.125082015991211
    5. '.fact' → logprob: -15.750082015991211
    6. '.f' → logprob: -15.875082015991211
    7. '.fac' → logprob: -16.12508201599121
    8. ' .' → logprob: -16.25008201599121
    9. '_factor' → logprob: -16.50008201599121
    10. '.timedelta' → logprob: -16.62508201599121

Token 116: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0021526420023292303
    2. 'al' → logprob: -6.502152442932129
    3. 'atorial' → logprob: -8.252152442932129
    4. 'omial' → logprob: -8.502152442932129
    5. 'orial' → logprob: -9.627152442932129
    6. 'cial' → logprob: -9.752152442932129
    7. 'ical' → logprob: -11.002152442932129
    8. 'rial' → logprob: -11.252152442932129
    9. 'ialize' → logprob: -12.252152442932129
    10. 'ator' → logprob: -12.377152442932129

Token 117: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.500004768371582
    3. 'k' → logprob: -14.625004768371582
    4. ' (' → logprob: -16.250003814697266
    5. ')(' → logprob: -17.000003814697266
    6. '(n' → logprob: -17.000003814697266
    7. '(
' → logprob: -18.125003814697266
    8. ')' → logprob: -19.375003814697266
    9. ' k' → logprob: -20.750003814697266
    10. '(x' → logprob: -21.500003814697266

Token 118: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10021745413541794
    2. '))' → logprob: -2.350217342376709
    3. ')))' → logprob: -11.725217819213867
    4. ' )' → logprob: -13.600217819213867
    5. '())' → logprob: -14.975217819213867
    6. ')
' → logprob: -15.225217819213867
    7. ')}' → logprob: -15.600217819213867
    8. ')n' → logprob: -16.100217819213867
    9. ' ))' → logprob: -16.350217819213867
    10. ')")' → logprob: -16.475217819213867

Token 119: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014272337779402733
    2. '
' → logprob: -5.139272212982178
    3. '<|end|>' → logprob: -5.139272212982178
    4. '#' → logprob: -6.514272212982178
    5. ' def' → logprob: -8.389272689819336
    6. 'class' → logprob: -8.389272689819336
    7. '\' → logprob: -9.514272689819336
    8. 'n' → logprob: -9.514272689819336
    9. '<|end|>' → logprob: -9.764272689819336
    10. '

' → logprob: -9.889272689819336

Token 120: ' perms' (ID: 189933)
  Prédit: ' combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combine' → logprob: -1.319261908531189
    2. ' main' → logprob: -1.694261908531189
    3. ' pow' → logprob: -1.819261908531189
    4. ' factorial' → logprob: -2.1942620277404785
    5. ' comb' → logprob: -2.4442620277404785
    6. ' power' → logprob: -3.8192620277404785
    7. ' count' → logprob: -3.9442620277404785
    8. ' fast' → logprob: -3.9442620277404785
    9. ' l' → logprob: -4.1942620277404785
    10. ' ' → logprob: -4.5692620277404785

Token 121: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04334352910518646
    2. '(' → logprob: -3.1683435440063477
    3. ' (' → logprob: -8.293343544006348
    4. '(k' → logprob: -10.543343544006348
    5. '("("' → logprob: -11.043343544006348
    6. '((' → logprob: -11.168343544006348
    7. '('' → logprob: -12.668343544006348
    8. 'def' → logprob: -12.793343544006348
    9. '(x' → logprob: -12.918343544006348
    10. '(a' → logprob: -13.293343544006348

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011546355381142348
    2. ',k' → logprob: -9.625115394592285
    3. ' ,' → logprob: -10.250115394592285
    4. ',n' → logprob: -11.625115394592285
    5. '):' → logprob: -12.625115394592285
    6. 'n' → logprob: -14.125115394592285
    7. '(n' → logprob: -14.250115394592285
    8. 'k' → logprob: -16.6251163482666
    9. ')' → logprob: -17.1251163482666
    10. '   ' → logprob: -18.1251163482666

Token 123: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011456732638180256
    2. ' k' → logprob: -4.5114569664001465
    3. 'r' → logprob: -7.8864569664001465
    4. ' r' → logprob: -10.636456489562988
    5. 'n' → logprob: -12.011456489562988
    6. ' ' → logprob: -13.636456489562988
    7. ' n' → logprob: -14.511456489562988
    8. ')' → logprob: -14.636456489562988
    9. '0' → logprob: -15.636456489562988
    10. '  ' → logprob: -16.136457443237305

Token 124: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.041768160182983e-05
    2. ')' → logprob: -9.750080108642578
    3. '):
' → logprob: -11.000080108642578
    4. ':' → logprob: -13.125080108642578
    5. ' ):' → logprob: -13.125080108642578
    6. ',' → logprob: -14.875080108642578
    7. ''):' → logprob: -15.250080108642578
    8. '=' → logprob: -15.500080108642578
    9. '}:' → logprob: -15.625080108642578
    10. '):
' → logprob: -16.250080108642578

Token 125: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1374458521604538
    2. 'return' → logprob: -2.2624459266662598
    3. ' m' → logprob: -4.01244592666626
    4. '   ' → logprob: -5.51244592666626
    5. 'm' → logprob: -6.26244592666626
    6. ' ' → logprob: -9.012445449829102
    7. ':' → logprob: -10.262445449829102
    8. ':return' → logprob: -10.512445449829102
    9. '    ' → logprob: -10.762445449829102
    10. '  ' → logprob: -11.262445449829102

Token 126: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.019403623417019844
    2. ' m' → logprob: -4.394403457641602
    3. 'math' → logprob: -5.269403457641602
    4. 'f' → logprob: -6.769403457641602
    5. ' math' → logprob: -7.769403457641602
    6. 'int' → logprob: -9.644403457641602
    7. ' f' → logprob: -10.644403457641602
    8. 'factor' → logprob: -10.769403457641602
    9. '(m' → logprob: -11.269403457641602
    10. '	m' → logprob: -12.144403457641602

Token 127: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.007886854000389576
    2. '.per' → logprob: -5.00788688659668
    3. 'factor' → logprob: -6.88288688659668
    4. '.' → logprob: -9.13288688659668
    5. ' factorial' → logprob: -10.88288688659668
    6. '_factor' → logprob: -11.50788688659668
    7. 'perm' → logprob: -12.63288688659668
    8. '.prod' → logprob: -13.13288688659668
    9. 'per' → logprob: -14.00788688659668
    10. '.floor' → logprob: -14.88288688659668

Token 128: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.014875484630465508
    2. 'atorial' → logprob: -4.264875411987305
    3. 'ical' → logprob: -8.764875411987305
    4. 'ional' → logprob: -8.889875411987305
    5. 'orial' → logprob: -9.264875411987305
    6. 'omial' → logprob: -9.514875411987305
    7. 'al' → logprob: -9.639875411987305
    8. 'cial' → logprob: -9.889875411987305
    9. '```' → logprob: -10.139875411987305
    10. 'rial' → logprob: -11.139875411987305

Token 129: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.491498531133402e-06
    2. '(' → logprob: -11.750009536743164
    3. 'n' → logprob: -13.500009536743164
    4. ' (' → logprob: -16.000009536743164
    5. '<|end|>' → logprob: -17.750009536743164
    6. '(k' → logprob: -18.500009536743164
    7. '<|end|>' → logprob: -19.500009536743164
    8. '(
' → logprob: -19.500009536743164
    9. '[n' → logprob: -19.625009536743164
    10. '	n' → logprob: -20.500009536743164

Token 130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. ')//' → logprob: -10.750027656555176
    3. ' )' → logprob: -12.125027656555176
    4. '   ' → logprob: -15.500027656555176
    5. '()' → logprob: -17.50002670288086
    6. ')
' → logprob: -17.50002670288086
    7. ' //' → logprob: -18.12502670288086
    8. '//' → logprob: -18.25002670288086
    9. '-' → logprob: -18.37502670288086
    10. '())' → logprob: -18.50002670288086

Token 131: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2258138805627823
    2. '//' → logprob: -1.600813865661621
    3. '#' → logprob: -7.975813865661621
    4. 'def' → logprob: -11.100813865661621
    5. ' ' → logprob: -11.100813865661621
    6. '...' → logprob: -12.225813865661621
    7. ' #' → logprob: -12.350813865661621
    8. ')' → logprob: -12.475813865661621
    9. ' ' → logprob: -12.725813865661621
    10. '   ' → logprob: -13.350813865661621

Token 132: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00023393364972434938
    2. ' m' → logprob: -8.37523365020752
    3. '(m' → logprob: -12.87523365020752
    4. '	m' → logprob: -14.37523365020752
    5. ')m' → logprob: -16.750234603881836
    6. ' ' → logprob: -16.875234603881836
    7. '#m' → logprob: -17.000234603881836
    8. '```' → logprob: -17.250234603881836
    9. ' ' → logprob: -17.500234603881836
    10. '   ' → logprob: -17.500234603881836

Token 133: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -9.968312951968983e-06
    2. 'factor' → logprob: -11.625009536743164
    3. '.' → logprob: -14.000009536743164
    4. '.fact' → logprob: -16.625009536743164
    5. '.per' → logprob: -16.750009536743164
    6. ' factorial' → logprob: -17.750009536743164
    7. '.fac' → logprob: -18.250009536743164
    8. '.f' → logprob: -18.375009536743164
    9. '_factor' → logprob: -18.750009536743164
    10. '.floor' → logprob: -20.000009536743164

Token 134: 'ial' (ID: 563)
  Prédit: 'atorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atorial' → logprob: -0.633143961429596
    2. 'ial' → logprob: -0.883143961429596
    3. 'orial' → logprob: -3.258143901824951
    4. 'actor' → logprob: -4.383143901824951
    5. 'al' → logprob: -6.758143901824951
    6. 'rial' → logprob: -6.883143901824951
    7. 'cial' → logprob: -7.508143901824951
    8. 'omial' → logprob: -7.633143901824951
    9. 'factor' → logprob: -7.633143901824951
    10. '(n' → logprob: -8.00814437866211

Token 135: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.62501335144043
    3. 'n' → logprob: -12.62501335144043
    4. ' (' → logprob: -13.62501335144043
    5. '((' → logprob: -16.75001335144043
    6. ' ' → logprob: -19.12501335144043
    7. '(
' → logprob: -19.37501335144043
    8. '   ' → logprob: -20.00001335144043
    9. '\(' → logprob: -20.50001335144043
    10. '(noun' → logprob: -20.50001335144043

Token 136: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2096022665500641
    2. ' -' → logprob: -1.7096022367477417
    3. '-k' → logprob: -4.959602355957031
    4. '-n' → logprob: -6.834602355957031
    5. '(n' → logprob: -9.959602355957031
    6. 'n' → logprob: -11.334602355957031
    7. '(' → logprob: -13.834602355957031
    8. '-m' → logprob: -14.334602355957031
    9. ' ' → logprob: -14.834602355957031
    10. ' n' → logprob: -14.959602355957031

Token 137: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.038042064756155014
    2. ' k' → logprob: -3.2880420684814453
    3. '	k' → logprob: -14.663042068481445
    4. ' к' → logprob: -17.163042068481445
    5. ' ' → logprob: -17.288042068481445
    6. '   ' → logprob: -17.413042068481445
    7. '{k' → logprob: -17.413042068481445
    8. '(k' → logprob: -18.038042068481445
    9. '```' → logprob: -18.038042068481445
    10. ')' → logprob: -18.538042068481445

Token 138: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.250000953674316
    3. '))' → logprob: -14.625000953674316
    4. ')
' → logprob: -16.875001907348633
    5. ')}' → logprob: -17.375001907348633
    6. '())' → logprob: -17.375001907348633
    7. ')**' → logprob: -17.750001907348633
    8. '[' → logprob: -18.250001907348633
    9. '}' → logprob: -18.375001907348633
    10. '')' → logprob: -18.375001907348633

Token 139: ''''
' (ID: 33518)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02807401493191719
    2. '
' → logprob: -3.903074026107788
    3. '<|end|>' → logprob: -5.153073787689209
    4. 'class' → logprob: -7.403073787689209
    5. '#' → logprob: -7.528073787689209
    6. '

' → logprob: -9.153074264526367
    7. ' def' → logprob: -9.153074264526367
    8. '\n' → logprob: -9.528074264526367
    9. ')' → logprob: -10.028074264526367
    10. '<|end|>' → logprob: -10.278074264526367

Token 140: '###' (ID: 31639)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21150153875350952
    2. ''''' → logprob: -2.5865015983581543
    3. '#' → logprob: -2.8365015983581543
    4. 'class' → logprob: -4.336501598358154
    5. '*' → logprob: -5.336501598358154
    6. 'd' → logprob: -5.461501598358154
    7. 'A' → logprob: -5.586501598358154
    8. 'The' → logprob: -5.711501598358154
    9. 'This' → logprob: -5.836501598358154
    10. '''' → logprob: -6.086501598358154

Token 141: ' Mad' (ID: 14763)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4427240490913391
    2. 'def' → logprob: -1.6927239894866943
    3. '###' → logprob: -2.4427239894866943
    4. ''''' → logprob: -3.6927239894866943
    5. '#' → logprob: -4.192724227905273
    6. 'The' → logprob: -4.692724227905273
    7. 'This' → logprob: -5.442724227905273
    8. ' def' → logprob: -5.817724227905273
    9. '```' → logprob: -5.817724227905273
    10. 'Code' → logprob: -6.192724227905273

Token 142: ' input' (ID: 3422)
  Prédit: 'libs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'libs' → logprob: -0.47077879309654236
    2. 'lib' → logprob: -1.5957788228988647
    3. 'ness' → logprob: -2.595778703689575
    4. 'Lib' → logprob: -3.595778703689575
    5. ' Lib' → logprob: -3.720778703689575
    6. 'max' → logprob: -3.970778703689575
    7. ' libs' → logprob: -4.470778942108154
    8. 'code' → logprob: -5.470778942108154
    9. ' code' → logprob: -5.720778942108154
    10. ' max' → logprob: -6.595778942108154

Token 143: ' cheat' (ID: 65354)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.358421802520752
    2. '###' → logprob: -1.608421802520752
    3. '()' → logprob: -2.108421802520752
    4. ''''' → logprob: -2.233421802520752
    5. '_format' → logprob: -2.983421802520752
    6. 'format' → logprob: -3.608421802520752
    7. ' format' → logprob: -3.733421802520752
    8. 'def' → logprob: -3.858421802520752
    9. ' processing' → logprob: -3.858421802520752
    10. '''' → logprob: -4.233421802520752

Token 144: ' sheet' (ID: 16658)
  Prédit: '###'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '###' → logprob: -0.8979907035827637
    2. 'code' → logprob: -1.0229907035827637
    3. ''''' → logprob: -2.3979907035827637
    4. '_code' → logprob: -3.6479907035827637
    5. '#' → logprob: -3.8979907035827637
    6. '```' → logprob: -4.022990703582764
    7. ' code' → logprob: -4.147990703582764
    8. 'def' → logprob: -4.522990703582764
    9. 's' → logprob: -5.022990703582764
    10. 'sheet' → logprob: -5.772990703582764

Token 145: ' ###
' (ID: 177099)
  Prédit: '''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''''' → logprob: -0.455504834651947
    2. '###' → logprob: -1.0805048942565918
    3. '```' → logprob: -4.455504894256592
    4. ':' → logprob: -5.580504894256592
    5. '#' → logprob: -5.955504894256592
    6. '\n' → logprob: -6.080504894256592
    7. '>>>' → logprob: -6.705504894256592
    8. ''''
' → logprob: -7.080504894256592
    9. ' '''' → logprob: -7.205504894256592
    10. ' ###' → logprob: -7.455504894256592

Token 146: '#' (ID: 2)
  Prédit: '''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''''' → logprob: -0.323276162147522
    2. '#' → logprob: -3.1982760429382324
    3. 'def' → logprob: -3.5732760429382324
    4. 'Input' → logprob: -3.8232760429382324
    5. 'Use' → logprob: -4.323276042938232
    6. '###' → logprob: -4.448276042938232
    7. ''''
' → logprob: -4.448276042938232
    8. '1' → logprob: -4.823276042938232
    9. 'The' → logprob: -4.948276042938232
    10. 'import' → logprob: -5.073276042938232

Token 147: ' Get' (ID: 2942)
  Prédit: '''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''''' → logprob: -0.9193778038024902
    2. '#' → logprob: -1.2943778038024902
    3. 'def' → logprob: -3.0443778038024902
    4. 'import' → logprob: -3.1693778038024902
    5. 'input' → logprob: -3.2943778038024902
    6. '"""' → logprob: -4.29437780380249
    7. ' input' → logprob: -4.41937780380249
    8. ' The' → logprob: -4.54437780380249
    9. ' def' → logprob: -4.54437780380249
    10. ''''
' → logprob: -4.66937780380249

Token 148: ' one' (ID: 1001)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6929165720939636
    2. 'line' → logprob: -1.1929166316986084
    3. ' input' → logprob: -2.9429166316986084
    4. ' line' → logprob: -3.6929166316986084
    5. 'lines' → logprob: -3.9429166316986084
    6. '()' → logprob: -4.192916393280029
    7. 'n' → logprob: -4.692916393280029
    8. 'int' → logprob: -4.817916393280029
    9. ' the' → logprob: -4.817916393280029
    10. 'list' → logprob: -5.067916393280029

Token 149: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7774660587310791
    2. '()' → logprob: -0.9024660587310791
    3. '_line' → logprob: -2.527466058731079
    4. 'input' → logprob: -3.777466058731079
    5. ' line' → logprob: -4.5274658203125
    6. '().' → logprob: -5.5274658203125
    7. 'token' → logprob: -6.0274658203125
    8. '(' → logprob: -6.1524658203125
    9. 's' → logprob: -6.2774658203125
    10. '_' → logprob: -6.5274658203125

Token 150: ' as' (ID: 472)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -1.441109299659729
    2. ' =' → logprob: -1.941109299659729
    3. 'input' → logprob: -2.0661091804504395
    4. ' input' → logprob: -2.0661091804504395
    5. '.strip' → logprob: -2.3161091804504395
    6. '.split' → logprob: -2.8161091804504395
    7. ':' → logprob: -3.0661091804504395
    8. '()' → logprob: -3.1911091804504395
    9. 's' → logprob: -3.4411091804504395
    10. ' of' → logprob: -4.3161091804504395

Token 151: ' str' (ID: 989)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9465534687042236
    2. ' input' → logprob: -0.9465534687042236
    3. ' string' → logprob: -2.3215534687042236
    4. 'string' → logprob: -2.5715534687042236
    5. ' a' → logprob: -3.8215534687042236
    6. 'a' → logprob: -4.0715532302856445
    7. 'str' → logprob: -5.6965532302856445
    8. 'list' → logprob: -6.1965532302856445
    9. ' list' → logprob: -6.1965532302856445
    10. ' str' → logprob: -6.9465532302856445

Token 152: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6323274970054626
    2. 'input' → logprob: -1.1323275566101074
    3. '#' → logprob: -2.8823275566101074
    4. 's' → logprob: -3.7573275566101074
    5. '\n' → logprob: -4.007327556610107
    6. ':' → logprob: -4.632327556610107
    7. 'line' → logprob: -4.757327556610107
    8. 'inp' → logprob: -5.007327556610107
    9. '=' → logprob: -5.507327556610107
    10. ',' → logprob: -5.757327556610107

Token 153: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8044760823249817
    2. 'line' → logprob: -1.554476022720337
    3. '#' → logprob: -1.679476022720337
    4. 's' → logprob: -2.554476022720337
    5. 'inp' → logprob: -3.554476022720337
    6. ' line' → logprob: -4.179476261138916
    7. ' input' → logprob: -4.554476261138916
    8. ''''' → logprob: -5.179476261138916
    9. ' s' → logprob: -5.679476261138916
    10. ' #' → logprob: -6.429476261138916

Token 154: ' =' (ID: 314)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4936818778514862
    2. 'line' → logprob: -1.7436819076538086
    3. 's' → logprob: -1.8686819076538086
    4. '#' → logprob: -3.7436819076538086
    5. 'inp' → logprob: -3.7436819076538086
    6. ' line' → logprob: -5.493681907653809
    7. 'x' → logprob: -6.243681907653809
    8. ' input' → logprob: -6.368681907653809
    9. ' s' → logprob: -6.493681907653809
    10. ''''' → logprob: -7.618681907653809

Token 155: ' system' (ID: 2420)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10083657503128052
    2. 'line' → logprob: -3.1008365154266357
    3. 's' → logprob: -3.4758365154266357
    4. 'inp' → logprob: -4.225836753845215
    5. 'raw' → logprob: -5.725836753845215
    6. ' input' → logprob: -7.850836753845215
    7. 'sys' → logprob: -7.850836753845215
    8. 'x' → logprob: -8.475836753845215
    9. '_' → logprob: -8.600836753845215
    10. 'str' → logprob: -8.600836753845215

Token 156: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.020375804975628853
    2. '.' → logprob: -4.770375728607178
    3. 'stdin' → logprob: -5.145375728607178
    4. '.readline' → logprob: -5.895375728607178
    5. '.argv' → logprob: -6.395375728607178
    6. 'input' → logprob: -7.520375728607178
    7. '.stdout' → logprob: -7.520375728607178
    8. 'in' → logprob: -9.020376205444336
    9. '_input' → logprob: -9.645376205444336
    10. '.input' → logprob: -9.895376205444336

Token 157: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0004498573543969542
    2. '.read' → logprob: -8.625450134277344
    3. 'read' → logprob: -9.125450134277344
    4. '.' → logprob: -9.375450134277344
    5. '_read' → logprob: -10.750450134277344
    6. ' readline' → logprob: -11.250450134277344
    7. 'input' → logprob: -11.375450134277344
    8. '_line' → logprob: -11.875450134277344
    9. '.readlines' → logprob: -12.250450134277344
    10. '_input' → logprob: -12.500450134277344

Token 158: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2656804621219635
    2. '()' → logprob: -1.5156804323196411
    3. '#' → logprob: -5.140680313110352
    4. ')' → logprob: -6.390680313110352
    5. '.readline' → logprob: -6.390680313110352
    6. '()
' → logprob: -6.890680313110352
    7. '.strip' → logprob: -7.390680313110352
    8. ' ' → logprob: -7.390680313110352
    9. '())' → logprob: -8.015680313110352
    10. 's' → logprob: -8.390680313110352

Token 159: 'strip' (ID: 23905)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21060268580913544
    2. 's' → logprob: -2.9606027603149414
    3. '
' → logprob: -3.0856027603149414
    4. 'input' → logprob: -3.7106027603149414
    5. 'line' → logprob: -4.460602760314941
    6. 'x' → logprob: -4.585602760314941
    7. '  
' → logprob: -4.585602760314941
    8. ' 
' → logprob: -4.960602760314941
    9. ' #' → logprob: -5.335602760314941
    10. '\n' → logprob: -5.460602760314941

Token 160: '()
' (ID: 1234)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.009714901447296143
    2. 'input' → logprob: -5.6347150802612305
    3. '
' → logprob: -6.2597150802612305
    4. '  
' → logprob: -7.0097150802612305
    5. '\n' → logprob: -7.5097150802612305
    6. ' ' → logprob: -7.6347150802612305
    7. ' 
' → logprob: -8.00971508026123
    8. ' #' → logprob: -8.38471508026123
    9. '\' → logprob: -8.50971508026123
    10. 'line' → logprob: -8.50971508026123

Token 161: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5692569017410278
    2. 's' → logprob: -1.6942569017410278
    3. 'input' → logprob: -2.1942567825317383
    4. 'line' → logprob: -3.0692567825317383
    5. 'x' → logprob: -3.5692567825317383
    6. ' #' → logprob: -4.569256782531738
    7. 'inp' → logprob: -4.819256782531738
    8. 'data' → logprob: -4.944256782531738
    9. ' line' → logprob: -5.194256782531738
    10. 'str' → logprob: -5.194256782531738

Token 162: ' str' (ID: 989)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8841077089309692
    2. 's' → logprob: -1.3841077089309692
    3. '#' → logprob: -2.5091075897216797
    4. 'input' → logprob: -2.6341075897216797
    5. 'inp' → logprob: -3.2591075897216797
    6. 'x' → logprob: -3.3841075897216797
    7. 'a' → logprob: -3.5091075897216797
    8. 'data' → logprob: -4.25910758972168
    9. 'raw' → logprob: -4.50910758972168
    10. ' line' → logprob: -4.75910758972168

Token 163: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2030327469110489
    2. 'line' → logprob: -2.4530327320098877
    3. 'input' → logprob: -3.0780327320098877
    4. ' s' → logprob: -3.7030327320098877
    5. ' line' → logprob: -4.578032970428467
    6. ' =' → logprob: -5.078032970428467
    7. ' ' → logprob: -6.328032970428467
    8. 'data' → logprob: -6.703032970428467
    9. ' input' → logprob: -6.953032970428467
    10. 'x' → logprob: -7.078032970428467

Token 164: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3840741515159607
    2. 'int' → logprob: -1.5090742111206055
    3. 'lst' → logprob: -3.0090742111206055
    4. ' list' → logprob: -3.5090742111206055
    5. ' int' → logprob: -5.7590742111206055
    6. 'ints' → logprob: -6.0090742111206055
    7. 'tokens' → logprob: -6.0090742111206055
    8. '_list' → logprob: -6.0090742111206055
    9. ' lst' → logprob: -6.3840742111206055
    10. 's' → logprob: -6.6340742111206055

Token 165: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1920205354690552
    2. 's' → logprob: -1.4420205354690552
    3. ' =' → logprob: -1.4420205354690552
    4. 'lst' → logprob: -2.1920204162597656
    5. ' lst' → logprob: -2.9420204162597656
    6. ' s' → logprob: -3.6920204162597656
    7. 'a' → logprob: -5.067020416259766
    8. '=' → logprob: -5.442020416259766
    9. 'l' → logprob: -5.567020416259766
    10. ' l' → logprob: -5.567020416259766

Token 166: ' chars' (ID: 47991)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.315052330493927
    2. 'ints' → logprob: -1.5650522708892822
    3. 'str' → logprob: -2.9400522708892822
    4. 's' → logprob: -5.940052509307861
    5. 'chars' → logprob: -6.190052509307861
    6. 'inte' → logprob: -6.315052509307861
    7. 'tokens' → logprob: -8.190052032470703
    8. ' ints' → logprob: -8.565052032470703
    9. 'list' → logprob: -8.690052032470703
    10. 'numbers' → logprob: -8.815052032470703

Token 167: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5782914757728577
    2. 's' → logprob: -1.328291416168213
    3. ' =' → logprob: -3.078291416168213
    4. 'lst' → logprob: -3.078291416168213
    5. 'l' → logprob: -4.203291416168213
    6. 'chars' → logprob: -4.328291416168213
    7. 'a' → logprob: -4.828291416168213
    8. ' s' → logprob: -5.203291416168213
    9. 'char' → logprob: -5.203291416168213
    10. 'c' → logprob: -5.453291416168213

Token 168: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0147533416748047
    2. ' ' → logprob: -1.3897533416748047
    3. ' s' → logprob: -2.1397533416748047
    4. 'chars' → logprob: -2.6397533416748047
    5. 'lst' → logprob: -3.0147533416748047
    6. ' l' → logprob: -3.8897533416748047
    7. ' =' → logprob: -4.139753341674805
    8. ' lst' → logprob: -4.139753341674805
    9. ' line' → logprob: -4.264753341674805
    10. 'l' → logprob: -4.264753341674805

Token 169: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5091893076896667
    2. ' =' → logprob: -1.6341893672943115
    3. '=' → logprob: -2.0091893672943115
    4. ' ' → logprob: -4.009189128875732
    5. 'chars' → logprob: -4.509189128875732
    6. ' s' → logprob: -5.134189128875732
    7. 'line' → logprob: -5.259189128875732
    8. 'input' → logprob: -5.509189128875732
    9. 'lst' → logprob: -5.509189128875732
    10. ' line' → logprob: -5.759189128875732

Token 170: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.000397422380046919
    2. 'system' → logprob: -8.500397682189941
    3. ' list' → logprob: -9.500397682189941
    4. '[list' → logprob: -9.500397682189941
    5. '[' → logprob: -11.000397682189941
    6. 'sys' → logprob: -12.125397682189941
    7. '=list' → logprob: -12.875397682189941
    8. 'input' → logprob: -13.125397682189941
    9. '(list' → logprob: -13.250397682189941
    10. 's' → logprob: -13.375397682189941

Token 171: '(system' (ID: 91175)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2359941154718399
    2. '(system' → logprob: -2.1109941005706787
    3. '#' → logprob: -3.3609941005706787
    4. '(' → logprob: -4.360994338989258
    5. 'system' → logprob: -4.735994338989258
    6. '<|end|>' → logprob: -4.985994338989258
    7. '(input' → logprob: -5.485994338989258
    8. '(s' → logprob: -5.735994338989258
    9. '()
' → logprob: -5.735994338989258
    10. 's' → logprob: -5.735994338989258

Token 172: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0026975206565111876
    2. '.readline' → logprob: -6.377697467803955
    3. 'stdin' → logprob: -7.627697467803955
    4. '(stdin' → logprob: -8.002697944641113
    5. '.' → logprob: -9.377697944641113
    6. ')' → logprob: -10.127697944641113
    7. '.stdout' → logprob: -10.252697944641113
    8. '.system' → logprob: -12.127697944641113
    9. ' stdin' → logprob: -13.502697944641113
    10. 'input' → logprob: -13.877697944641113

Token 173: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.07016472518444061
    2. 'read' → logprob: -2.695164680480957
    3. 'stdin' → logprob: -9.695164680480957
    4. ' readline' → logprob: -10.070164680480957
    5. '```' → logprob: -10.570164680480957
    6. '_read' → logprob: -10.820164680480957
    7. 'input' → logprob: -11.195164680480957
    8. 'line' → logprob: -11.195164680480957
    9. ')' → logprob: -11.320164680480957
    10. 'strip' → logprob: -11.570164680480957

Token 174: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002966291969642043
    2. '())' → logprob: -6.252966403961182
    3. '()' → logprob: -6.877966403961182
    4. ' ().' → logprob: -12.502965927124023
    5. '()[' → logprob: -13.502965927124023
    6. ')' → logprob: -14.877965927124023
    7. ' ())' → logprob: -15.002965927124023
    8. '(strip' → logprob: -15.377965927124023
    9. '()).' → logprob: -15.627965927124023
    10. ' ()' → logprob: -15.877965927124023

Token 175: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.8670179997570813e-05
    2. 'rstrip' → logprob: -11.125019073486328
    3. ' strip' → logprob: -13.000019073486328
    4. ')' → logprob: -13.625019073486328
    5. 'read' → logprob: -15.250019073486328
    6. '(strip' → logprob: -16.250019073486328
    7. '.strip' → logprob: -16.875019073486328
    8. 'split' → logprob: -17.750019073486328
    9. '())' → logprob: -18.750019073486328
    10. '```' → logprob: -19.000019073486328

Token 176: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00250918953679502
    2. '()' → logprob: -6.002509117126465
    3. '())
' → logprob: -11.502509117126465
    4. ')' → logprob: -11.627509117126465
    5. ' ())' → logprob: -12.377509117126465
    6. '();)' → logprob: -12.377509117126465
    7. '())

' → logprob: -13.127509117126465
    8. '()))' → logprob: -13.502509117126465
    9. '().' → logprob: -14.502509117126465
    10. '()]' → logprob: -14.502509117126465

Token 177: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0014985528541728854
    2. ''''
' → logprob: -7.251498699188232
    3. '\n' → logprob: -9.001498222351074
    4. '''' → logprob: -9.126498222351074
    5. '<|end|>' → logprob: -9.751498222351074
    6. ' #' → logprob: -10.001498222351074
    7. '```' → logprob: -10.001498222351074
    8. 'n' → logprob: -10.251498222351074
    9. ''''' → logprob: -10.251498222351074
    10. '\' → logprob: -10.376498222351074

Token 178: ' Get' (ID: 2942)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.003713261801749468
    2. 'num' → logprob: -7.128713130950928
    3. 'n' → logprob: -7.628713130950928
    4. 'ints' → logprob: -7.753713130950928
    5. 'numbers' → logprob: -8.003713607788086
    6. 'int' → logprob: -8.003713607788086
    7. 'nums' → logprob: -8.503713607788086
    8. 'arr' → logprob: -8.753713607788086
    9. ' #' → logprob: -8.878713607788086
    10. 'tokens' → logprob: -9.003713607788086

Token 179: ' int' (ID: 677)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.3041364848613739
    2. ' one' → logprob: -2.3041365146636963
    3. 'n' → logprob: -2.8041365146636963
    4. 'int' → logprob: -2.8041365146636963
    5. 'a' → logprob: -3.5541365146636963
    6. 'number' → logprob: -5.554136276245117
    7. 'integer' → logprob: -6.429136276245117
    8. ' an' → logprob: -6.554136276245117
    9. 'an' → logprob: -7.304136276245117
    10. ' n' → logprob: -7.429136276245117

Token 180: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38275712728500366
    2. ' =' → logprob: -1.3827571868896484
    3. '=' → logprob: -2.8827571868896484
    4. 's' → logprob: -5.007757186889648
    5. '  ' → logprob: -6.382757186889648
    6. ' ' → logprob: -6.882757186889648
    7. '<|end|>' → logprob: -8.632757186889648
    8. '   ' → logprob: -8.882757186889648
    9. 'line' → logprob: -9.007757186889648
    10. 'a' → logprob: -9.007757186889648

Token 181: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03320125862956047
    2. ' =' → logprob: -4.408201217651367
    3. 'n' → logprob: -4.908201217651367
    4. '=' → logprob: -5.033201217651367
    5. 'x' → logprob: -5.283201217651367
    6. 'i' → logprob: -7.908201217651367
    7. ' n' → logprob: -8.658201217651367
    8. 'number' → logprob: -8.908201217651367
    9. 'a' → logprob: -9.033201217651367
    10. '  ' → logprob: -9.283201217651367

Token 182: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5989359617233276
    2. '=' → logprob: -1.8489359617233276
    3. 'n' → logprob: -2.098936080932617
    4. ' =' → logprob: -2.223936080932617
    5. 'x' → logprob: -2.973936080932617
    6. 'i' → logprob: -4.973936080932617
    7. 'val' → logprob: -6.848936080932617
    8. 'num' → logprob: -6.973936080932617
    9. '   ' → logprob: -7.348936080932617
    10. 'a' → logprob: -7.848936080932617

Token 183: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003613847540691495
    2. ' int' → logprob: -5.6286139488220215
    3. '  ' → logprob: -12.503613471984863
    4. ' ' → logprob: -12.878613471984863
    5. '(int' → logprob: -13.628613471984863
    6. '=int' → logprob: -13.878613471984863
    7. '   ' → logprob: -14.253613471984863
    8. '	int' → logprob: -14.253613471984863
    9. 'n' → logprob: -14.503613471984863
    10. 'in' → logprob: -14.628613471984863

Token 184: '(system' (ID: 91175)
  Prédit: '(system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(system' → logprob: -0.0005643534241244197
    2. 'system' → logprob: -7.5005645751953125
    3. '(' → logprob: -11.875564575195312
    4. '(sys' → logprob: -13.125564575195312
    5. '()' → logprob: -13.250564575195312
    6. ' system' → logprob: -16.000564575195312
    7. '	system' → logprob: -16.000564575195312
    8. '(System' → logprob: -16.125564575195312
    9. '```' → logprob: -16.375564575195312
    10. '((' → logprob: -17.000564575195312

Token 185: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.7227283120155334
    2. '.stdin' → logprob: -0.7227283120155334
    3. '.system' → logprob: -3.7227282524108887
    4. 'system' → logprob: -5.597728252410889
    5. '(system' → logprob: -7.597728252410889
    6. 'stdin' → logprob: -8.597728729248047
    7. '.stdout' → logprob: -9.097728729248047
    8. '_system' → logprob: -9.347728729248047
    9. '(stdin' → logprob: -9.472728729248047
    10. '=sys' → logprob: -9.722728729248047

Token 186: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0004243587900418788
    2. 'line' → logprob: -8.7504243850708
    3. 'system' → logprob: -9.0004243850708
    4. '.stdin' → logprob: -9.2504243850708
    5. 'sys' → logprob: -10.5004243850708
    6. 'stdin' → logprob: -12.2504243850708
    7. '=sys' → logprob: -12.7504243850708
    8. 'input' → logprob: -13.0004243850708
    9. '(system' → logprob: -13.2504243850708
    10. '(sys' → logprob: -13.6254243850708

Token 187: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.007423229981213808
    2. '())' → logprob: -5.007423400878906
    3. '()' → logprob: -7.257423400878906
    4. ')' → logprob: -13.257423400878906
    5. '.readline' → logprob: -15.507423400878906
    6. '()[' → logprob: -16.007423400878906
    7. 'line' → logprob: -16.257423400878906
    8. '()
' → logprob: -16.382423400878906
    9. ' ().' → logprob: -16.382423400878906
    10. '())
' → logprob: -16.632423400878906

Token 188: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0001305950863752514
    2. ''''
' → logprob: -9.625130653381348
    3. '<|end|>' → logprob: -10.625130653381348
    4. '...' → logprob: -11.625130653381348
    5. '#
' → logprob: -12.250130653381348
    6. '```' → logprob: -12.375130653381348
    7. '<|end|>' → logprob: -12.375130653381348
    8. '''' → logprob: -12.375130653381348
    9. ' #' → logprob: -13.125130653381348
    10. ''''' → logprob: -13.250130653381348

Token 189: ' Un' (ID: 1367)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.016231665387749672
    2. 'def' → logprob: -5.641231536865234
    3. 'arr' → logprob: -6.266231536865234
    4. 'n' → logprob: -6.766231536865234
    5. 'Get' → logprob: -6.891231536865234
    6. 's' → logprob: -7.016231536865234
    7. 'list' → logprob: -7.141231536865234
    8. 'lst' → logprob: -7.141231536865234
    9. ' #' → logprob: -7.266231536865234
    10. 'line' → logprob: -7.766231536865234

Token 190: 'pack' (ID: 7786)
  Prédit: 'pack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pack' → logprob: -0.00018518301658332348
    2. 'packing' → logprob: -8.750185012817383
    3. 'packed' → logprob: -10.750185012817383
    4. 'packs' → logprob: -13.125185012817383
    5. 'packer' → logprob: -13.875185012817383
    6. ' pack' → logprob: -14.000185012817383
    7. 'map' → logprob: -14.750185012817383
    8. '=' → logprob: -15.375185012817383
    9. 'package' → logprob: -15.375185012817383
    10. 'fold' → logprob: -15.875185012817383

Token 191: ' int' (ID: 677)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46137452125549316
    2. ' ' → logprob: -2.461374521255493
    3. ' system' → logprob: -2.586374521255493
    4. '=' → logprob: -2.836374521255493
    5. 'system' → logprob: -2.836374521255493
    6. '(system' → logprob: -4.211374282836914
    7. 'line' → logprob: -4.711374282836914
    8. 'map' → logprob: -4.711374282836914
    9. 'values' → logprob: -5.086374282836914
    10. '*' → logprob: -5.086374282836914

Token 192: ' line' (ID: 2543)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5892608761787415
    2. 's' → logprob: -1.4642608165740967
    3. '=' → logprob: -1.7142608165740967
    4. '()' → logprob: -4.714261054992676
    5. 'a' → logprob: -5.339261054992676
    6. '(*' → logprob: -5.964261054992676
    7. '_list' → logprob: -6.089261054992676
    8. ' ' → logprob: -6.214261054992676
    9. '_values' → logprob: -6.214261054992676
    10. '*' → logprob: -6.589261054992676

Token 193: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3885621130466461
    2. ' ' → logprob: -1.8885620832443237
    3. '()' → logprob: -2.0135622024536133
    4. '=' → logprob: -3.3885622024536133
    5. 's' → logprob: -6.263562202453613
    6. '   ' → logprob: -8.513562202453613
    7. ')' → logprob: -8.638562202453613
    8. ',' → logprob: -8.888562202453613
    9. '  ' → logprob: -9.138562202453613
    10. '():' → logprob: -9.263562202453613

Token 194: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030953451991081238
    2. ' =' → logprob: -3.7809534072875977
    3. '=' → logprob: -5.405953407287598
    4. 'a' → logprob: -6.530953407287598
    5. 'x' → logprob: -7.155953407287598
    6. '#' → logprob: -8.405953407287598
    7. 'n' → logprob: -8.655953407287598
    8. 'numbers' → logprob: -9.530953407287598
    9. '   ' → logprob: -9.655953407287598
    10. '*' → logprob: -9.905953407287598

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27304306626319885
    2. 'a' → logprob: -2.023043155670166
    3. ' ' → logprob: -3.023043155670166
    4. ' =' → logprob: -3.023043155670166
    5. 'x' → logprob: -5.023043155670166
    6. '*' → logprob: -6.898043155670166
    7. ' a' → logprob: -7.898043155670166
    8. '=a' → logprob: -8.648042678833008
    9. '   ' → logprob: -8.648042678833008
    10. 'ints' → logprob: -8.898042678833008

Token 196: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011096864938735962
    2. ' map' → logprob: -4.511096954345703
    3. 'list' → logprob: -10.011096954345703
    4. 'tuple' → logprob: -13.136096954345703
    5. ' list' → logprob: -14.636096954345703
    6. '[*' → logprob: -14.761096954345703
    7. '[' → logprob: -15.011096954345703
    8. '*' → logprob: -15.386096954345703
    9. ' ' → logprob: -15.386096954345703
    10. '(map' → logprob: -15.386096954345703

Token 197: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.038301508873701096
    2. 'int' → logprob: -3.288301467895508
    3. 'system' → logprob: -9.038301467895508
    4. '(' → logprob: -9.788301467895508
    5. '(system' → logprob: -10.038301467895508
    6. ' int' → logprob: -11.288301467895508
    7. '   ' → logprob: -11.538301467895508
    8. ' ' → logprob: -12.038301467895508
    9. ' system' → logprob: -12.788301467895508
    10. '<int' → logprob: -13.288301467895508

Token 198: ',' (ID: 11)
  Prédit: '(system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(system' → logprob: -0.035579483956098557
    2. ',' → logprob: -3.7855794429779053
    3. ')' → logprob: -4.910579681396484
    4. 'system' → logprob: -5.410579681396484
    5. ')(' → logprob: -8.160579681396484
    6. ' system' → logprob: -9.410579681396484
    7. ' (' → logprob: -11.535579681396484
    8. '(' → logprob: -11.660579681396484
    9. ' ,' → logprob: -12.285579681396484
    10. '.system' → logprob: -12.410579681396484

Token 199: ' system' (ID: 2420)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'system' → logprob: -0.2520025670528412
    2. ' system' → logprob: -1.5020025968551636
    3. ')' → logprob: -10.127002716064453
    4. ' ' → logprob: -11.252002716064453
    5. '(system' → logprob: -11.252002716064453
    6. '	system' → logprob: -13.502002716064453
    7. '   ' → logprob: -13.627002716064453
    8. 'sys' → logprob: -13.752002716064453
    9. '  ' → logprob: -14.127002716064453
    10. 'ssystem' → logprob: -14.502002716064453

Token 200: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.09010561555624008
    2. '.readline' → logprob: -2.7151055335998535
    3. '().' → logprob: -4.3401055335998535
    4. '(stdin' → logprob: -5.4651055335998535
    5. '.' → logprob: -7.3401055335998535
    6. '.stdout' → logprob: -7.4651055335998535
    7. '())' → logprob: -8.090106010437012
    8. 'stdin' → logprob: -8.340106010437012
    9. '(System' → logprob: -8.590106010437012
    10. '.system' → logprob: -8.840106010437012

Token 201: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.08972818404436111
    2. '().' → logprob: -2.4647281169891357
    3. '())' → logprob: -8.214728355407715
    4. '()' → logprob: -8.214728355407715
    5. ')' → logprob: -10.089728355407715
    6. 'line' → logprob: -10.464728355407715
    7. 's' → logprob: -10.964728355407715
    8. 'split' → logprob: -11.089728355407715
    9. '.readlines' → logprob: -11.089728355407715
    10. 'sys' → logprob: -11.214728355407715

Token 202: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010612714104354382
    2. '())' → logprob: -6.87606143951416
    3. '()' → logprob: -10.62606143951416
    4. '()).' → logprob: -12.87606143951416
    5. ')' → logprob: -13.62606143951416
    6. '()))' → logprob: -15.25106143951416
    7. '());' → logprob: -16.751060485839844
    8. '(' → logprob: -16.876060485839844
    9. '.readline' → logprob: -17.626060485839844
    10. '()),' → logprob: -17.751060485839844

Token 203: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.011277000419795513
    2. 'split' → logprob: -4.511277198791504
    3. 'read' → logprob: -8.761277198791504
    4. 'rstrip' → logprob: -9.636277198791504
    5. ')' → logprob: -12.886277198791504
    6. '.readline' → logprob: -13.011277198791504
    7. ' strip' → logprob: -14.386277198791504
    8. '(strip' → logprob: -14.636277198791504
    9. '().' → logprob: -14.886277198791504
    10. 'str' → logprob: -15.261277198791504

Token 204: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0013627357548102736
    2. '()' → logprob: -6.8763628005981445
    3. ')' → logprob: -8.376362800598145
    4. '())
' → logprob: -9.251362800598145
    5. '())

' → logprob: -13.751362800598145
    6. ' ())' → logprob: -14.001362800598145
    7. '()
' → logprob: -14.751362800598145
    8. '())
' → logprob: -15.251362800598145
    9. '(' → logprob: -15.251362800598145
    10. '());' → logprob: -15.501362800598145

Token 205: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.049561306834220886
    2. ''''' → logprob: -3.4245612621307373
    3. '''' → logprob: -5.674561500549316
    4. '<|end|>' → logprob: -5.924561500549316
    5. ')' → logprob: -6.424561500549316
    6. '<|end|>' → logprob: -6.549561500549316
    7. 'def' → logprob: -6.549561500549316
    8. '\n' → logprob: -6.674561500549316
    9. '```' → logprob: -6.924561500549316
    10. ''''
' → logprob: -7.424561500549316

Token 206: ' List' (ID: 2655)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4072178602218628
    2. 'n' → logprob: -1.7822178602218628
    3. '#' → logprob: -2.5322179794311523
    4. 'def' → logprob: -2.5322179794311523
    5. 'input' → logprob: -2.7822179794311523
    6. 'ints' → logprob: -2.9072179794311523
    7. 'arr' → logprob: -3.0322179794311523
    8. 'for' → logprob: -3.2822179794311523
    9. 'data' → logprob: -3.4072179794311523
    10. 'list' → logprob: -3.7822179794311523

Token 207: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.194583460688591
    2. '=' → logprob: -1.9445834159851074
    3. '[int' → logprob: -4.444583415985107
    4. '_' → logprob: -5.319583415985107
    5. 's' → logprob: -5.569583415985107
    6. ' ' → logprob: -6.319583415985107
    7. 'of' → logprob: -6.444583415985107
    8. ' of' → logprob: -6.444583415985107
    9. '<|end|>' → logprob: -6.444583415985107
    10. '=[]' → logprob: -6.694583415985107

Token 208: ' ints' (ID: 121629)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18553033471107483
    2. 'ints' → logprob: -1.8105303049087524
    3. '(int' → logprob: -5.935530185699463
    4. ' ints' → logprob: -6.560530185699463
    5. '=int' → logprob: -7.185530185699463
    6. '<int' → logprob: -8.060530662536621
    7. 's' → logprob: -8.810530662536621
    8. '[int' → logprob: -8.810530662536621
    9. 'inte' → logprob: -9.185530662536621
    10. 'list' → logprob: -9.560530662536621

Token 209: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5049617290496826
    2. ' ' → logprob: -1.0049617290496826
    3. '=' → logprob: -3.7549617290496826
    4. 's' → logprob: -5.254961967468262
    5. '=[]' → logprob: -7.379961967468262
    6. ',' → logprob: -8.004961967468262
    7. '  ' → logprob: -9.379961967468262
    8. '#' → logprob: -9.629961967468262
    9. 'def' → logprob: -9.754961967468262
    10. '[]' → logprob: -9.754961967468262

Token 210: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6888287663459778
    2. ' =' → logprob: -1.188828706741333
    3. '=' → logprob: -1.688828706741333
    4. 'lst' → logprob: -5.813828945159912
    5. '=[]' → logprob: -6.188828945159912
    6. '[]' → logprob: -6.688828945159912
    7. 'list' → logprob: -7.813828945159912
    8. 's' → logprob: -8.563828468322754
    9. '_' → logprob: -8.688828468322754
    10. '  ' → logprob: -8.938828468322754

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31153202056884766
    2. ' ' → logprob: -1.6865320205688477
    3. ' =' → logprob: -2.9365320205688477
    4. 'lst' → logprob: -4.061532020568848
    5. 'list' → logprob: -5.061532020568848
    6. '_' → logprob: -6.811532020568848
    7. '[]' → logprob: -7.061532020568848
    8. 'ints' → logprob: -7.561532020568848
    9. 'system' → logprob: -7.811532020568848
    10. '=list' → logprob: -7.936532020568848

Token 212: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.190178904333152e-05
    2. ' list' → logprob: -10.375031471252441
    3. '[list' → logprob: -14.625031471252441
    4. '[' → logprob: -17.125032424926758
    5. 'map' → logprob: -17.250032424926758
    6. '=list' → logprob: -17.375032424926758
    7. ' ' → logprob: -18.125032424926758
    8. 'lst' → logprob: -18.875032424926758
    9. '   ' → logprob: -18.875032424926758
    10. '
' → logprob: -18.875032424926758

Token 213: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00017016702622640878
    2. 'map' → logprob: -9.37516975402832
    3. '(int' → logprob: -10.12516975402832
    4. '(system' → logprob: -10.37516975402832
    5. '(' → logprob: -11.50016975402832
    6. 'system' → logprob: -13.25016975402832
    7. '[int' → logprob: -14.12516975402832
    8. '
' → logprob: -15.62516975402832
    9. 'int' → logprob: -15.75016975402832
    10. ',map' → logprob: -15.75016975402832

Token 214: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008682532235980034
    2. 'int' → logprob: -4.758682727813721
    3. '(' → logprob: -11.008682250976562
    4. '[int' → logprob: -11.008682250976562
    5. ',int' → logprob: -11.133682250976562
    6. '<int' → logprob: -11.758682250976562
    7. ']int' → logprob: -12.508682250976562
    8. '=int' → logprob: -12.508682250976562
    9. ' int' → logprob: -12.633682250976562
    10. 's' → logprob: -14.633682250976562

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.338466093642637e-05
    2. '(system' → logprob: -9.625073432922363
    3. ' ,' → logprob: -12.750073432922363
    4. ',map' → logprob: -13.375073432922363
    5. ',System' → logprob: -13.875073432922363
    6. '(),' → logprob: -14.250073432922363
    7. ',(' → logprob: -14.500073432922363
    8. 'system' → logprob: -14.875073432922363
    9. '(' → logprob: -16.000072479248047
    10. ',s' → logprob: -16.375072479248047

Token 216: ' system' (ID: 2420)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'system' → logprob: -0.048605188727378845
    2. ' system' → logprob: -3.04860520362854
    3. ' ' → logprob: -11.798604965209961
    4. '(system' → logprob: -11.923604965209961
    5. 'sys' → logprob: -13.298604965209961
    6. ')' → logprob: -14.298604965209961
    7. '   ' → logprob: -15.173604965209961
    8. '  ' → logprob: -15.173604965209961
    9. '	system' → logprob: -15.298604965209961
    10. 'System' → logprob: -15.548604965209961

Token 217: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002892967313528061
    2. 'stdin' → logprob: -6.002892971038818
    3. '.readline' → logprob: -8.25289249420166
    4. '.stdout' → logprob: -9.50289249420166
    5. '(stdin' → logprob: -9.50289249420166
    6. '=sys' → logprob: -12.87789249420166
    7. 'import' → logprob: -14.00289249420166
    8. '```' → logprob: -14.00289249420166
    9. '.stderr' → logprob: -14.25289249420166
    10. 'stdout' → logprob: -14.75289249420166

Token 218: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00014358828775584698
    2. '.stdin' → logprob: -10.375144004821777
    3. '().' → logprob: -10.625144004821777
    4. '.split' → logprob: -10.750144004821777
    5. '.readlines' → logprob: -10.875144004821777
    6. ').' → logprob: -11.875144004821777
    7. ')' → logprob: -12.125144004821777
    8. '```' → logprob: -12.125144004821777
    9. '=sys' → logprob: -12.125144004821777
    10. 'import' → logprob: -12.250144004821777

Token 219: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006372620700858533
    2. '()))' → logprob: -7.375637054443359
    3. '()' → logprob: -11.87563705444336
    4. '())' → logprob: -13.37563705444336
    5. '))' → logprob: -13.87563705444336
    6. '()))
' → logprob: -14.62563705444336
    7. '()));' → logprob: -15.37563705444336
    8. '())).' → logprob: -15.62563705444336
    9. '()[' → logprob: -16.00063705444336
    10. ' ().' → logprob: -16.12563705444336

Token 220: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00046689616283401847
    2. 'strip' → logprob: -8.000467300415039
    3. 'read' → logprob: -9.750467300415039
    4. 'rstrip' → logprob: -10.250467300415039
    5. ')' → logprob: -10.375467300415039
    6. ' split' → logprob: -13.625467300415039
    7. '(split' → logprob: -13.750467300415039
    8. 'plit' → logprob: -14.000467300415039
    9. 'spl' → logprob: -14.250467300415039
    10. '.readline' → logprob: -14.500467300415039

Token 221: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1115061566233635
    2. '))' → logprob: -2.361506223678589
    3. '()))
' → logprob: -5.23650598526001
    4. '()' → logprob: -5.86150598526001
    5. '())' → logprob: -5.86150598526001
    6. '))
' → logprob: -8.861506462097168
    7. '()))
' → logprob: -10.611506462097168
    8. ')' → logprob: -10.986506462097168
    9. '()))

' → logprob: -11.236506462097168
    10. '())
' → logprob: -11.236506462097168

Token 222: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6657906174659729
    2. ''''' → logprob: -1.5407905578613281
    3. 'def' → logprob: -2.540790557861328
    4. '<|end|>' → logprob: -2.915790557861328
    5. ')' → logprob: -3.290790557861328
    6. '<|end|>' → logprob: -3.540790557861328
    7. '\n' → logprob: -4.165790557861328
    8. ''''
' → logprob: -4.665790557861328
    9. '```' → logprob: -4.665790557861328
    10. 'import' → logprob: -5.165790557861328

Token 223: ' List' (ID: 2655)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7503066062927246
    2. 'def' → logprob: -1.6253066062927246
    3. 'from' → logprob: -2.8753066062927246
    4. 'import' → logprob: -3.0003066062927246
    5. 'input' → logprob: -3.0003066062927246
    6. 'for' → logprob: -3.2503066062927246
    7. 'n' → logprob: -3.5003066062927246
    8. ')' → logprob: -3.7503066062927246
    9. ''''' → logprob: -4.750306606292725
    10. 'pass' → logprob: -5.000306606292725

Token 224: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9207217693328857
    2. '<|end|>' → logprob: -1.7957217693328857
    3. '[int' → logprob: -2.0457217693328857
    4. ' =' → logprob: -2.2957217693328857
    5. '(map' → logprob: -2.5457217693328857
    6. 'of' → logprob: -2.5457217693328857
    7. '[' → logprob: -4.670722007751465
    8. 's' → logprob: -4.795722007751465
    9. '=' → logprob: -4.920722007751465
    10. '_of' → logprob: -5.795722007751465

Token 225: ' int' (ID: 677)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.35605499148368835
    2. 'int' → logprob: -1.2310550212860107
    3. 'list' → logprob: -6.231054782867432
    4. 'str' → logprob: -6.356054782867432
    5. ' ints' → logprob: -6.356054782867432
    6. 'lists' → logprob: -6.731054782867432
    7. 'map' → logprob: -8.98105525970459
    8. 'lines' → logprob: -9.23105525970459
    9. 'tokens' → logprob: -9.48105525970459
    10. 'inte' → logprob: -9.48105525970459

Token 226: ' lists' (ID: 19471)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005784121458418667
    2. ' s' → logprob: -7.5005784034729
    3. 'S' → logprob: -11.875578880310059
    4. ')' → logprob: -12.125578880310059
    5. ')s' → logprob: -12.500578880310059
    6. '<|end|>' → logprob: -12.875578880310059
    7. '_s' → logprob: -13.125578880310059
    8. ']' → logprob: -13.750578880310059
    9. '(s' → logprob: -14.375578880310059
    10. '_list' → logprob: -15.250578880310059

Token 227: ' Nx' (ID: 178338)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11748791486024857
    2. ' =' → logprob: -2.367487907409668
    3. '=' → logprob: -5.367487907409668
    4. '()' → logprob: -5.492487907409668
    5. '#' → logprob: -6.117487907409668
    6. 's' → logprob: -6.742487907409668
    7. '=[]' → logprob: -6.992487907409668
    8. '<|end|>' → logprob: -7.117487907409668
    9. 'def' → logprob: -7.617487907409668
    10. '(' → logprob: -7.742487907409668

Token 228: '?
' (ID: 3901)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2266316413879395
    2. '[]' → logprob: -1.4766316413879395
    3. '[int' → logprob: -2.2266316413879395
    4. ' =' → logprob: -2.7266316413879395
    5. '...' → logprob: -3.4766316413879395
    6. ')' → logprob: -3.4766316413879395
    7. 'n' → logprob: -3.4766316413879395
    8. 'list' → logprob: -3.8516316413879395
    9. 'int' → logprob: -3.9766316413879395
    10. '(int' → logprob: -3.9766316413879395

Token 229: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.111423373222351
    2. '#' → logprob: -1.361423373222351
    3. ''''
' → logprob: -1.361423373222351
    4. ' ' → logprob: -2.6114234924316406
    5. '=' → logprob: -3.6114234924316406
    6. 's' → logprob: -4.486423492431641
    7. ''''' → logprob: -4.611423492431641
    8. '"""
' → logprob: -4.861423492431641
    9. '<|end|>' → logprob: -5.611423492431641
    10. '''' → logprob: -5.861423492431641

Token 230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9128096699714661
    2. ' =' → logprob: -1.2878096103668213
    3. ' ' → logprob: -1.5378096103668213
    4. ''''
' → logprob: -2.7878096103668213
    5. '#' → logprob: -3.2878096103668213
    6. ''''' → logprob: -5.4128098487854
    7. '=
' → logprob: -6.9128098487854
    8. ' =
' → logprob: -7.2878098487854
    9. 'import' → logprob: -7.6628098487854
    10. '"""
' → logprob: -7.9128098487854

Token 231: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.7194262742996216
    2. '[' → logprob: -1.3444262742996216
    3. ' [' → logprob: -2.094426155090332
    4. '[q' → logprob: -2.219426155090332
    5. 'list' → logprob: -4.469426155090332
    6. '[int' → logprob: -4.969426155090332
    7. '[List' → logprob: -8.094426155090332
    8. '[array' → logprob: -8.219426155090332
    9. '[n' → logprob: -8.344426155090332
    10. ' list' → logprob: -8.344426155090332

Token 232: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0017042214749380946
    2. ' list' → logprob: -6.376704216003418
    3. 'map' → logprob: -14.376704216003418
    4. '(list' → logprob: -14.876704216003418
    5. ']' → logprob: -15.126704216003418
    6. '	list' → logprob: -15.751704216003418
    7. '   ' → logprob: -15.751704216003418
    8. '
' → logprob: -15.751704216003418
    9. ' ' → logprob: -16.251705169677734
    10. '=list' → logprob: -16.251705169677734

Token 233: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.4192871175473556e-05
    2. '(' → logprob: -10.125054359436035
    3. 'map' → logprob: -11.625054359436035
    4. '(system' → logprob: -12.625054359436035
    5. '(
' → logprob: -13.375054359436035
    6. '	map' → logprob: -16.37505340576172
    7. ',map' → logprob: -17.50005340576172
    8. 'system' → logprob: -17.62505340576172
    9. ' map' → logprob: -18.00005340576172
    10. '(range' → logprob: -18.00005340576172

Token 234: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0029321794863790274
    2. 'int' → logprob: -5.877932071685791
    3. ']int' → logprob: -9.87793254852295
    4. '=int' → logprob: -10.37793254852295
    5. '<int' → logprob: -10.75293254852295
    6. ',int' → logprob: -11.25293254852295
    7. '[int' → logprob: -12.12793254852295
    8. '(' → logprob: -13.87793254852295
    9. ':int' → logprob: -13.87793254852295
    10. 'system' → logprob: -14.00293254852295

Token 235: ',' (ID: 11)
  Prédit: '(system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(system' → logprob: -0.026321083307266235
    2. ',' → logprob: -3.7763211727142334
    3. 'system' → logprob: -6.526320934295654
    4. '(int' → logprob: -7.151320934295654
    5. '(sys' → logprob: -7.526320934295654
    6. 'int' → logprob: -9.651321411132812
    7. ' system' → logprob: -9.651321411132812
    8. '   ' → logprob: -9.776321411132812
    9. 'sys' → logprob: -11.026321411132812
    10. '(' → logprob: -11.026321411132812

Token 236: ' system' (ID: 2420)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'system' → logprob: -0.10053122043609619
    2. ' system' → logprob: -2.3505311012268066
    3. '(system' → logprob: -8.100531578063965
    4. 'sys' → logprob: -10.850531578063965
    5. ' sys' → logprob: -14.600531578063965
    6. '	system' → logprob: -14.725531578063965
    7. 'System' → logprob: -15.100531578063965
    8. ')' → logprob: -15.600531578063965
    9. '-system' → logprob: -15.975531578063965
    10. ' ' → logprob: -15.975531578063965

Token 237: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.007163465954363346
    2. '.readline' → logprob: -5.1321635246276855
    3. '=sys' → logprob: -7.5071635246276855
    4. '.stdout' → logprob: -7.7571635246276855
    5. '(stdin' → logprob: -9.132163047790527
    6. 'stdin' → logprob: -9.132163047790527
    7. '.system' → logprob: -10.757163047790527
    8. '.strptime' → logprob: -12.757163047790527
    9. '.setdefault' → logprob: -13.007163047790527
    10. '().' → logprob: -13.382163047790527

Token 238: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000158842682139948
    2. 'stdin' → logprob: -9.50015926361084
    3. 'line' → logprob: -10.87515926361084
    4. ' readline' → logprob: -11.12515926361084
    5. '.stdin' → logprob: -11.37515926361084
    6. 'system' → logprob: -11.50015926361084
    7. ')' → logprob: -12.37515926361084
    8. '```' → logprob: -12.50015926361084
    9. 'sys' → logprob: -12.75015926361084
    10. '=sys' → logprob: -12.87515926361084

Token 239: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.676981345459353e-06
    2. '()' → logprob: -13.000005722045898
    3. '.readline' → logprob: -13.500005722045898
    4. '.' → logprob: -15.000005722045898
    5. ' ().' → logprob: -15.250005722045898
    6. '(' → logprob: -15.500005722045898
    7. '.py' → logprob: -15.750005722045898
    8. 's' → logprob: -15.750005722045898
    9. '.split' → logprob: -15.875005722045898
    10. '   ' → logprob: -16.1250057220459

Token 240: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8789383830153383e-05
    2. 'rstrip' → logprob: -11.750019073486328
    3. 'strip' → logprob: -11.875019073486328
    4. ')' → logprob: -13.000019073486328
    5. 'read' → logprob: -14.625019073486328
    6. ' split' → logprob: -14.875019073486328
    7. 'spl' → logprob: -16.000019073486328
    8. 'sl' → logprob: -16.000019073486328
    9. 'x' → logprob: -16.125019073486328
    10. '
' → logprob: -16.250019073486328

Token 241: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.010050825774669647
    2. '))' → logprob: -4.6350507736206055
    3. '()' → logprob: -8.385050773620605
    4. '()))
' → logprob: -10.760050773620605
    5. '))]
' → logprob: -11.385050773620605
    6. '()[' → logprob: -11.510050773620605
    7. '())' → logprob: -11.885050773620605
    8. '())).' → logprob: -12.510050773620605
    9. '()]' → logprob: -13.010050773620605
    10. '().' → logprob: -13.135050773620605

Token 242: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.4372478723526001
    2. ']' → logprob: -1.0622478723526
    3. '()' → logprob: -4.9372477531433105
    4. '#' → logprob: -7.6872477531433105
    5. '()]
' → logprob: -8.562248229980469
    6. ')]' → logprob: -8.687248229980469
    7. ']
' → logprob: -8.812248229980469
    8. ']()' → logprob: -9.312248229980469
    9. 'for' → logprob: -9.812248229980469
    10. '']' → logprob: -10.062248229980469

Token 243: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009828103706240654
    2. ' _' → logprob: -4.634828090667725
    3. '_N' → logprob: -10.134828567504883
    4. '_i' → logprob: -11.009828567504883
    5. '_n' → logprob: -12.009828567504883
    6. '_x' → logprob: -12.884828567504883
    7. '_system' → logprob: -13.634828567504883
    8. '_=' → logprob: -14.259828567504883
    9. '_range' → logprob: -14.384828567504883
    10. '__' → logprob: -14.384828567504883

Token 244: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10943854600191116
    2. 'in' → logprob: -2.48443865776062
    3. 'range' → logprob: -4.109438419342041
    4. '_' → logprob: -5.859438419342041
    5. ' range' → logprob: -6.984438419342041
    6. '  ' → logprob: -11.2344388961792
    7. '_in' → logprob: -11.3594388961792
    8. ' ' → logprob: -11.3594388961792
    9. 'i' → logprob: -11.9844388961792
    10. 'x' → logprob: -12.1094388961792

Token 245: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000915039679966867
    2. ' range' → logprob: -7.000915050506592
    3. '_' → logprob: -13.125914573669434
    4. '_range' → logprob: -14.500914573669434
    5. 'r' → logprob: -15.125914573669434
    6. '	range' → logprob: -15.625914573669434
    7. '(range' → logprob: -15.750914573669434
    8. '   ' → logprob: -15.875914573669434
    9. '  ' → logprob: -16.00091552734375
    10. '[' → logprob: -16.50091552734375

Token 246: '(N' (ID: 10564)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10009913891553879
    2. '(system' → logprob: -3.1000990867614746
    3. '(N' → logprob: -4.100099086761475
    4. '(int' → logprob: -4.225099086761475
    5. '(' → logprob: -4.725099086761475
    6. 'n' → logprob: -5.350099086761475
    7. '()]' → logprob: -5.850099086761475
    8. '(s' → logprob: -7.600099086761475
    9. ')]' → logprob: -7.600099086761475
    10. '(num' → logprob: -8.600099563598633

Token 247: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0025348791386932135
    2. ']' → logprob: -6.002534866333008
    3. ')' → logprob: -11.127534866333008
    4. '()]' → logprob: -11.252534866333008
    5. '])]' → logprob: -11.252534866333008
    6. ')])' → logprob: -12.252534866333008
    7. ')],' → logprob: -12.252534866333008
    8. '])' → logprob: -13.002534866333008
    9. '')]' → logprob: -13.252534866333008
    10. ')]
' → logprob: -13.502534866333008

Token 248: ''''

' (ID: 79439)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2492868900299072
    2. 'def' → logprob: -1.2492868900299072
    3. '<|end|>' → logprob: -1.7492868900299072
    4. ')' → logprob: -2.2492868900299072
    5. '<|end|>' → logprob: -2.7492868900299072
    6. ''''' → logprob: -3.9992868900299072
    7. 'n' → logprob: -4.749286651611328
    8. 'x' → logprob: -4.874286651611328
    9. '```' → logprob: -4.999286651611328
    10. ''''
' → logprob: -5.124286651611328

Token 249: 'if' (ID: 366)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018107565119862556
    2. 'n' → logprob: -4.1431074142456055
    3. 'class' → logprob: -7.0181074142456055
    4. '#' → logprob: -7.5181074142456055
    5. 'for' → logprob: -8.268107414245605
    6. 'N' → logprob: -9.518107414245605
    7. 'import' → logprob: -9.768107414245605
    8. 'd' → logprob: -10.268107414245605
    9. '(n' → logprob: -10.393107414245605
    10. '\n' → logprob: -10.518107414245605

Token 250: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.029874522238969803
    2. '__' → logprob: -3.529874563217163
    3. ' True' → logprob: -9.279874801635742
    4. 'True' → logprob: -11.779874801635742
    5. ' False' → logprob: -11.904874801635742
    6. ' ' → logprob: -12.529874801635742
    7. ' system' → logprob: -12.654874801635742
    8. 'False' → logprob: -12.904874801635742
    9. '_' → logprob: -13.029874801635742
    10. '___' → logprob: -13.904874801635742

Token 251: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.26063817739486694
    2. '__' → logprob: -1.8856382369995117
    3. '==' → logprob: -2.6356382369995117
    4. '=="' → logprob: -5.885638236999512
    5. 'name' → logprob: -6.510638236999512
    6. ' __' → logprob: -6.510638236999512
    7. '=='' → logprob: -9.010638236999512
    8. ' =="' → logprob: -10.260638236999512
    9. 'main' → logprob: -10.510638236999512
    10. '.__' → logprob: -11.385638236999512

Token 252: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007763965986669064
    2. '==' → logprob: -7.500776290893555
    3. 'name' → logprob: -9.375776290893555
    4. ' ==' → logprob: -9.500776290893555
    5. 'main' → logprob: -10.500776290893555
    6. '=="' → logprob: -10.500776290893555
    7. 'me' → logprob: -13.250776290893555
    8. '=='' → logprob: -13.500776290893555
    9. '__.__' → logprob: -13.750776290893555
    10. '_' → logprob: -14.125776290893555

Token 253: ' +' (ID: 659)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10764791071414948
    2. '==' → logprob: -2.6076478958129883
    3. '__' → logprob: -4.232647895812988
    4. '=="' → logprob: -4.357647895812988
    5. '=='' → logprob: -6.982647895812988
    6. '"' → logprob: -9.982647895812988
    7. '=' → logprob: -10.857647895812988
    8. ' =="' → logprob: -11.482647895812988
    9. ' =' → logprob: -12.232647895812988
    10. ' ' → logprob: -12.607647895812988

Token 254: ' ""' (ID: 3216)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.019802477210760117
    2. '==' → logprob: -4.019802570343018
    3. '_' → logprob: -6.894802570343018
    4. '=' → logprob: -7.644802570343018
    5. ''' → logprob: -9.14480209350586
    6. '"' → logprob: -10.01980209350586
    7. '_=' → logprob: -12.76980209350586
    8. '___' → logprob: -13.64480209350586
    9. ' ==' → logprob: -13.76980209350586
    10. '===' → logprob: -14.26980209350586

Token 255: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018488438799977303
    2. '==' → logprob: -4.14348840713501
    3. '"' → logprob: -6.51848840713501
    4. '=' → logprob: -7.26848840713501
    5. '""' → logprob: -9.018488883972168
    6. '_' → logprob: -9.143488883972168
    7. ' ==' → logprob: -10.393488883972168
    8. '=="' → logprob: -11.393488883972168
    9. '___' → logprob: -12.768488883972168
    10. '="' → logprob: -13.018488883972168

Token 256: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0017809720011427999
    2. ''' → logprob: -6.501780986785889
    3. ' "__' → logprob: -8.25178050994873
    4. '__' → logprob: -11.25178050994873
    5. ' '__' → logprob: -13.00178050994873
    6. ' ' → logprob: -13.87678050994873
    7. ' "' → logprob: -13.87678050994873
    8. ''"' → logprob: -16.251781463623047
    9. '=' → logprob: -16.376781463623047
    10. '"""' → logprob: -16.626781463623047

Token 257: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.320199877838604e-07
    2. 'name' → logprob: -14.75
    3. ' main' → logprob: -18.25
    4. '_main' → logprob: -21.625
    5. 'ma' → logprob: -22.25
    6. 'mp' → logprob: -23.5
    7. 'init' → logprob: -24.25
    8. 'm' → logprob: -24.25
    9. '(main' → logprob: -24.25
    10. '	main' → logprob: -24.625

Token 258: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.2519325911998749
    2. '__' → logprob: -1.5019326210021973
    3. '__':
' → logprob: -12.876932144165039
    4. '__:' → logprob: -14.501932144165039
    5. '_' → logprob: -14.876932144165039
    6. '___' → logprob: -17.62693214416504
    7. '__",' → logprob: -19.12693214416504
    8. '__["' → logprob: -19.25193214416504
    9. '____' → logprob: -19.37693214416504
    10. '__("' → logprob: -19.75193214416504

Token 259: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11216311156749725
    2. '   ' → logprob: -2.4871630668640137
    3. ':
' → logprob: -3.8621630668640137
    4. '    
' → logprob: -7.237163066864014
    5. '():' → logprob: -8.112163543701172
    6. 'n' → logprob: -8.487163543701172
    7. '
' → logprob: -9.237163543701172
    8. '(n' → logprob: -9.362163543701172
    9. '[' → logprob: -9.487163543701172
    10. '":' → logprob: -9.862163543701172

Token 260: ' S' (ID: 336)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13277994096279144
    2. '   ' → logprob: -2.507779836654663
    3. 'n' → logprob: -3.757779836654663
    4. ' line' → logprob: -4.882780075073242
    5. ' import' → logprob: -5.507780075073242
    6. ' input' → logprob: -5.882780075073242
    7. ' system' → logprob: -6.757780075073242
    8. 'import' → logprob: -6.882780075073242
    9. ' lines' → logprob: -7.382780075073242
    10. ' pass' → logprob: -8.007780075073242

Token 261: '_raw' (ID: 36128)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47472813725471497
    2. '=' → logprob: -0.9747281074523926
    3. ' ' → logprob: -8.47472858428955
    4. '=sys' → logprob: -9.09972858428955
    5. '=input' → logprob: -9.09972858428955
    6. '   ' → logprob: -9.34972858428955
    7. ':' → logprob: -10.34972858428955
    8. ',' → logprob: -10.47472858428955
    9. '  ' → logprob: -10.72472858428955
    10. '.' → logprob: -11.34972858428955

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1612657755613327
    2. '=' → logprob: -1.9112657308578491
    3. ',' → logprob: -7.286265850067139
    4. ' ' → logprob: -8.16126537322998
    5. '   ' → logprob: -10.66126537322998
    6. 's' → logprob: -10.91126537322998
    7. '_' → logprob: -11.66126537322998
    8. ' ,' → logprob: -12.03626537322998
    9. '  ' → logprob: -12.28626537322998
    10. ' =
' → logprob: -13.78626537322998

Token 263: ' system' (ID: 2420)
  Prédit: 'system'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'system' → logprob: -0.09393341094255447
    2. ' system' → logprob: -2.468933343887329
    3. 'list' → logprob: -5.968933582305908
    4. 'input' → logprob: -6.218933582305908
    5. ' list' → logprob: -8.84393310546875
    6. 'sys' → logprob: -9.21893310546875
    7. ' input' → logprob: -9.34393310546875
    8. ' ' → logprob: -10.09393310546875
    9. '   ' → logprob: -11.09393310546875
    10. 'str' → logprob: -11.21893310546875

Token 264: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00018006093159783632
    2. '.' → logprob: -9.3751802444458
    3. '.stdout' → logprob: -9.6251802444458
    4. '.readline' → logprob: -10.5001802444458
    5. '.std' → logprob: -14.3751802444458
    6. '.argv' → logprob: -14.5001802444458
    7. 'stdin' → logprob: -15.6251802444458
    8. ' .' → logprob: -16.250179290771484
    9. '(stdin' → logprob: -16.250179290771484
    10. '.system' → logprob: -17.125179290771484

Token 265: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.165027217415627e-05
    2. '.read' → logprob: -11.250021934509277
    3. '.' → logprob: -11.875021934509277
    4. '.readlines' → logprob: -13.375021934509277
    5. ' .' → logprob: -17.25002098083496
    6. '.stdin' → logprob: -17.62502098083496
    7. '().' → logprob: -19.25002098083496
    8. ' readline' → logprob: -19.50002098083496
    9. '.write' → logprob: -20.00002098083496
    10. '.Read' → logprob: -20.37502098083496

Token 266: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3868885934352875
    2. '()' → logprob: -1.1368886232376099
    3. '()
' → logprob: -12.01188850402832
    4. '())' → logprob: -12.63688850402832
    5. ' ()' → logprob: -12.88688850402832
    6. '(' → logprob: -13.76188850402832
    7. ' ().' → logprob: -13.88688850402832
    8. '()).' → logprob: -14.01188850402832
    9. '()

' → logprob: -14.26188850402832
    10. '().'' → logprob: -14.63688850402832

Token 267: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -7.600714161526412e-05
    2. 'rstrip' → logprob: -9.500076293945312
    3. 'read' → logprob: -14.250076293945312
    4. ' strip' → logprob: -15.375076293945312
    5. 'decode' → logprob: -15.875076293945312
    6. 'split' → logprob: -17.625076293945312
    7. '_strip' → logprob: -17.875076293945312
    8. '.strip' → logprob: -18.250076293945312
    9. 'stripe' → logprob: -19.125076293945312
    10. '-strip' → logprob: -19.250076293945312

Token 268: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043710620957426727
    2. '()
' → logprob: -7.750437259674072
    3. '(' → logprob: -12.750436782836914
    4. '())' → logprob: -13.625436782836914
    5. '()`' → logprob: -14.500436782836914
    6. '()\' → logprob: -14.500436782836914
    7. '()

' → logprob: -14.750436782836914
    8. '()
' → logprob: -15.000436782836914
    9. '()"' → logprob: -15.375436782836914
    10. '().' → logprob: -15.750436782836914

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009882163256406784
    2. '    
' → logprob: -5.384881973266602
    3. '
' → logprob: -6.009881973266602
    4. '<|end|>' → logprob: -6.259881973266602
    5. ')' → logprob: -8.259881973266602
    6. '#' → logprob: -9.509881973266602
    7. ' S' → logprob: -9.634881973266602
    8. '<|end|>' → logprob: -9.759881973266602
    9. 'S' → logprob: -10.009881973266602
    10. 's' → logprob: -10.134881973266602

Token 270: ' K' (ID: 658)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.09512926638126373
    2. 'n' → logprob: -3.3451292514801025
    3. 'N' → logprob: -4.220129489898682
    4. 'from' → logprob: -4.345129489898682
    5. '   ' → logprob: -4.845129489898682
    6. 'freq' → logprob: -5.595129489898682
    7. 'dp' → logprob: -5.845129489898682
    8. 's' → logprob: -6.220129489898682
    9. 'chars' → logprob: -6.470129489898682
    10. 'count' → logprob: -6.720129489898682

Token 271: '_m' (ID: 1285)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04319661110639572
    2. '=' → logprob: -3.168196678161621
    3. ',' → logprob: -8.668196678161621
    4. ' ' → logprob: -11.543196678161621
    5. ' ,' → logprob: -11.668196678161621
    6. '=int' → logprob: -12.418196678161621
    7. '  ' → logprob: -13.293196678161621
    8. ' ' → logprob: -14.418196678161621
    9. '   ' → logprob: -14.543196678161621
    10. ')' → logprob: -16.293195724487305

Token 272: 'ine' (ID: 514)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2868577837944031
    2. '=' → logprob: -2.161857843399048
    3. 'y' → logprob: -2.911857843399048
    4. 'od' → logprob: -3.286857843399048
    5. 'ap' → logprob: -4.286857604980469
    6. '   ' → logprob: -4.786857604980469
    7. 'ult' → logprob: -4.786857604980469
    8. 'ax' → logprob: -5.411857604980469
    9. 'ath' → logprob: -6.786857604980469
    10. '=int' → logprob: -6.911857604980469

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741949737071991
    2. ' =' → logprob: -0.9741950035095215
    3. ' ' → logprob: -9.599194526672363
    4. '   ' → logprob: -10.849194526672363
    5. ',' → logprob: -11.349194526672363
    6. '  ' → logprob: -11.474194526672363
    7. '=int' → logprob: -12.099194526672363
    8. '    ' → logprob: -14.224194526672363
    9. 's' → logprob: -14.599194526672363
    10. 'x' → logprob: -15.224194526672363

Token 274: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023255029693245888
    2. ' int' → logprob: -3.7732551097869873
    3. ' ' → logprob: -12.648255348205566
    4. '  ' → logprob: -13.273255348205566
    5. '   ' → logprob: -13.648255348205566
    6. '0' → logprob: -14.023255348205566
    7. '3' → logprob: -14.023255348205566
    8. '=int' → logprob: -14.523255348205566
    9. '10' → logprob: -15.398255348205566
    10. '1' → logprob: -15.398255348205566

Token 275: '(system' (ID: 91175)
  Prédit: '(system'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(system' → logprob: -0.0001710014621494338
    2. '(' → logprob: -9.000170707702637
    3. '()' → logprob: -10.375170707702637
    4. 'system' → logprob: -11.125170707702637
    5. '(sys' → logprob: -14.875170707702637
    6. '(S' → logprob: -15.250170707702637
    7. '(
' → logprob: -15.375170707702637
    8. ' (' → logprob: -15.625170707702637
    9. '(System' → logprob: -16.000171661376953
    10. '(s' → logprob: -16.250171661376953

Token 276: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.01723068207502365
    2. '.readline' → logprob: -4.14223051071167
    3. '().' → logprob: -7.14223051071167
    4. '(stdin' → logprob: -9.017230987548828
    5. '.stdout' → logprob: -9.142230987548828
    6. '())' → logprob: -9.767230987548828
    7. 'stdin' → logprob: -10.267230987548828
    8. ').' → logprob: -11.017230987548828
    9. ')' → logprob: -11.017230987548828
    10. '()' → logprob: -11.017230987548828

Token 277: '.readline' (ID: 74673)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03678625449538231
    2. '.readline' → logprob: -3.5367863178253174
    3. '()' → logprob: -5.036786079406738
    4. ')' → logprob: -7.661786079406738
    5. '().' → logprob: -10.661786079406738
    6. '();)' → logprob: -11.786786079406738
    7. ' ())' → logprob: -12.411786079406738
    8. '())
' → logprob: -13.161786079406738
    9. '()))' → logprob: -13.411786079406738
    10. '()>' → logprob: -13.536786079406738

Token 278: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0031578729394823313
    2. '()' → logprob: -6.003158092498779
    3. ')' → logprob: -7.378158092498779
    4. '().' → logprob: -10.128157615661621
    5. ' ())' → logprob: -11.378157615661621
    6. '())
' → logprob: -12.753157615661621
    7. '()
' → logprob: -13.878157615661621
    8. '(' → logprob: -14.253157615661621
    9. '();)' → logprob: -14.753157615661621
    10. ' )' → logprob: -15.378157615661621

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016317162662744522
    2. '    
' → logprob: -4.766317367553711
    3. '<|end|>' → logprob: -5.516317367553711
    4. '
' → logprob: -5.766317367553711
    5. '#' → logprob: -9.016317367553711
    6. ')' → logprob: -9.391317367553711
    7. '<|end|>' → logprob: -9.891317367553711
    8. '[' → logprob: -10.641317367553711
    9. 'tokens' → logprob: -10.641317367553711
    10. '```' → logprob: -10.891317367553711

Token 280: ' count' (ID: 3605)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7672977447509766
    2. 'S' → logprob: -1.2672977447509766
    3. 'dp' → logprob: -2.0172977447509766
    4. 'freq' → logprob: -4.017297744750977
    5. 'n' → logprob: -4.142297744750977
    6. 'count' (adapté à ' count') → logprob: -4.267297744750977
    7. '#' → logprob: -4.392297744750977
    8. 'counts' → logprob: -4.767297744750977
    9. 'char' → logprob: -4.892297744750977
    10. 'chars' → logprob: -5.017297744750977

Token 281: 'z' (ID: 89)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.015245132148265839
    2. '=' → logprob: -4.890244960784912
    3. ' =' → logprob: -5.515244960784912
    4. 'S' → logprob: -6.140244960784912
    5. '_' → logprob: -7.140244960784912
    6. 'er' → logprob: -8.51524543762207
    7. '_S' → logprob: -8.89024543762207
    8. '_s' → logprob: -9.14024543762207
    9. '_chars' → logprob: -9.26524543762207
    10. '_map' → logprob: -10.76524543762207

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23963844776153564
    2. '=' → logprob: -1.8646384477615356
    3. 's' → logprob: -2.989638328552246
    4. 'S' → logprob: -5.614638328552246
    5. 'r' → logprob: -6.364638328552246
    6. '_' → logprob: -6.989638328552246
    7. 'z' → logprob: -7.489638328552246
    8. ' ' → logprob: -8.239638328552246
    9. 'd' → logprob: -8.364638328552246
    10. '(S' → logprob: -8.989638328552246

Token 283: ' ' (ID: 220)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0009991057449951768
    2. 'Counter' → logprob: -7.3759989738464355
    3. ' C' → logprob: -8.000999450683594
    4. '{}' → logprob: -11.250999450683594
    5. '[C' → logprob: -11.375999450683594
    6. '{' → logprob: -12.250999450683594
    7. ' Counter' → logprob: -12.500999450683594
    8. '[' → logprob: -13.250999450683594
    9. '	C' → logprob: -13.875999450683594
    10. '0' → logprob: -15.000999450683594

Token 284: '0' (ID: 15)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003055493871215731
    2. 'Counter' → logprob: -8.12530517578125
    3. '[C' → logprob: -12.87530517578125
    4. ' C' → logprob: -13.00030517578125
    5. '{' → logprob: -13.50030517578125
    6. 'dict' → logprob: -13.62530517578125
    7. 'len' → logprob: -14.62530517578125
    8. '{}' → logprob: -14.62530517578125
    9. '[' → logprob: -15.12530517578125
    10. 'S' → logprob: -15.25030517578125

Token 285: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5417600274085999
    2. '<|end|>' → logprob: -1.041759967803955
    3. '
' → logprob: -2.916759967803955
    4. '    
' → logprob: -5.416759967803955
    5. '<|end|>' → logprob: -5.791759967803955
    6. '    ' → logprob: -7.416759967803955
    7. ')' → logprob: -7.666759967803955
    8. ' ' → logprob: -7.916759967803955
    9. '  ' → logprob: -8.041760444641113
    10. ' for' → logprob: -8.166760444641113

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28267166018486023
    2. '<|end|>' → logprob: -1.6576716899871826
    3. '
' → logprob: -3.0326716899871826
    4. '    
' → logprob: -6.5326714515686035
    5. '  ' → logprob: -6.9076714515686035
    6. ')' → logprob: -7.1576714515686035
    7. 'for' → logprob: -7.2826714515686035
    8. ' for' → logprob: -7.2826714515686035
    9. ' ' → logprob: -7.4076714515686035
    10. '    ' → logprob: -7.5326714515686035

Token 287: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06447167694568634
    2. 'n' → logprob: -4.31447172164917
    3. 'S' → logprob: -4.56447172164917
    4. 'factor' → logprob: -5.06447172164917
    5. 'length' → logprob: -5.31447172164917
    6. ' for' → logprob: -5.31447172164917
    7. 'from' → logprob: -5.68947172164917
    8. 'freq' → logprob: -5.81447172164917
    9. 'dp' → logprob: -5.93947172164917
    10. 'N' → logprob: -6.18947172164917

Token 288: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.35803940892219543
    2. 'i' → logprob: -1.733039379119873
    3. ' c' → logprob: -3.483039379119873
    4. ' length' → logprob: -3.608039379119873
    5. 'c' → logprob: -4.358039379119873
    6. ' ch' → logprob: -4.608039379119873
    7. ' char' → logprob: -4.608039379119873
    8. 'char' → logprob: -4.983039379119873
    9. ' idx' → logprob: -5.108039379119873
    10. 'ch' → logprob: -5.233039379119873

Token 289: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06284405291080475
    2. 'in' → logprob: -3.0628440380096436
    3. ',' → logprob: -4.312844276428223
    4. ' ,' → logprob: -7.562844276428223
    5. ' ' → logprob: -8.437844276428223
    6. ',in' → logprob: -12.187844276428223
    7. '  ' → logprob: -12.312844276428223
    8. '   ' → logprob: -12.687844276428223
    9. ',S' → logprob: -13.562844276428223
    10. ')' → logprob: -14.062844276428223

Token 290: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.6360598802566528
    2. 'char' → logprob: -1.5110598802566528
    3. 'c' → logprob: -1.8860598802566528
    4. ' ch' → logprob: -3.2610597610473633
    5. ' char' → logprob: -3.2610597610473633
    6. ' c' → logprob: -4.261059761047363
    7. 'val' → logprob: -6.386059761047363
    8. 's' → logprob: -6.386059761047363
    9. 'x' → logprob: -7.136059761047363
    10. ' val' → logprob: -7.636059761047363

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07891347259283066
    2. 'in' → logprob: -2.578913450241089
    3. ' ' → logprob: -11.328913688659668
    4. '	in' → logprob: -13.203913688659668
    5. '   ' → logprob: -13.328913688659668
    6. '  ' → logprob: -13.578913688659668
    7. ',' → logprob: -13.703913688659668
    8. 'import' → logprob: -14.203913688659668
    9. ')' → logprob: -14.328913688659668
    10. 's' → logprob: -14.641413688659668

Token 292: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.25192928314208984
    2. 'enumer' → logprob: -1.5019292831420898
    3. 'en' → logprob: -16.376930236816406
    4. ' enumer' → logprob: -16.501930236816406
    5. '(en' → logprob: -17.126930236816406
    6. 'enum' → logprob: -17.501930236816406
    7. '```' → logprob: -18.001930236816406
    8. ' en' → logprob: -18.626930236816406
    9. 'Enumer' → logprob: -18.626930236816406
    10. '.enumer' → logprob: -19.501930236816406

Token 293: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -8.685467764735222e-05
    2. '(' → logprob: -9.875086784362793
    3. ' (' → logprob: -10.500086784362793
    4. '(s' → logprob: -12.625086784362793
    5. ' S' → logprob: -13.250086784362793
    6. 'S' → logprob: -13.375086784362793
    7. '(range' → logprob: -15.000086784362793
    8. '((' → logprob: -15.125086784362793
    9. '(en' → logprob: -15.250086784362793
    10. '   ' → logprob: -15.875086784362793

Token 294: '_raw' (ID: 36128)
  Prédit: '_raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_raw' → logprob: -1.981667537620524e-06
    2. '):' → logprob: -13.625001907348633
    3. 'raw' → logprob: -14.500001907348633
    4. '   ' → logprob: -16.375001907348633
    5. ')' → logprob: -16.875001907348633
    6. '_RAW' → logprob: -17.250001907348633
    7. '):
' → logprob: -17.500001907348633
    8. ')_' → logprob: -17.625001907348633
    9. '_r' → logprob: -17.875001907348633
    10. 'Raw' → logprob: -18.125001907348633

Token 295: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007661870680749416
    2. '):
' → logprob: -4.882661819458008
    3. ' ):' → logprob: -10.132661819458008
    4. ':' → logprob: -11.507661819458008
    5. '   ' → logprob: -12.882661819458008
    6. '):
' → logprob: -13.132661819458008
    7. '():' → logprob: -15.257661819458008
    8. '}:' → logprob: -15.632661819458008
    9. '[::-' → logprob: -15.632661819458008
    10. ' ):
' → logprob: -15.757661819458008

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042132675647735596
    2. '<|end|>' → logprob: -3.542132616043091
    3. '    ' → logprob: -5.66713285446167
    4. ' ' → logprob: -5.66713285446167
    5. '        
' → logprob: -6.04213285446167
    6. '        ' → logprob: -7.54213285446167
    7. '   ' → logprob: -7.79213285446167
    8. ' if' → logprob: -7.91713285446167
    9. ':' → logprob: -7.91713285446167
    10. ' 
' → logprob: -8.167132377624512

Token 297: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45279446244239807
    2. '       ' → logprob: -1.3277944326400757
    3. 'if' (adapté à ' if') → logprob: -2.8277945518493652
    4. '    ' → logprob: -3.7027945518493652
    5. '        ' → logprob: -4.577794551849365
    6. '   ' → logprob: -6.202794551849365
    7. ' ' → logprob: -6.577794551849365
    8. ' for' → logprob: -7.952794551849365
    9. '        
' → logprob: -8.452794075012207
    10. '     ' → logprob: -8.577794075012207

Token 298: ' not' (ID: 625)
  Prédit: ' ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.2019015997648239
    2. 'ch' → logprob: -1.7019015550613403
    3. '   ' → logprob: -8.70190143585205
    4. ' ' → logprob: -9.70190143585205
    5. ' not' → logprob: -9.70190143585205
    6. ' ord' → logprob: -9.95190143585205
    7. 'count' → logprob: -10.95190143585205
    8. '  ' → logprob: -11.07690143585205
    9. ' S' → logprob: -11.32690143585205
    10. '    ' → logprob: -11.63940143585205

Token 299: ' K' (ID: 658)
  Prédit: ' ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.18381628394126892
    2. 'ch' → logprob: -1.8088163137435913
    3. '(ch' → logprob: -6.558816432952881
    4. ' (' → logprob: -7.558816432952881
    5. ' S' → logprob: -7.808816432952881
    6. 'count' → logprob: -8.183815956115723
    7. ' count' → logprob: -8.433815956115723
    8. ' K' → logprob: -8.558815956115723
    9. 'S' → logprob: -8.683815956115723
    10. 'K' → logprob: -8.933815956115723

Token 300: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0004834617720916867
    2. ':' → logprob: -7.750483512878418
    3. '>' → logprob: -11.000483512878418
    4. '   ' → logprob: -11.875483512878418
    5. ':
' → logprob: -12.250483512878418
    6. '==' → logprob: -12.375483512878418
    7. '_k' → logprob: -12.625483512878418
    8. '_' → logprob: -12.875483512878418
    9. '-' → logprob: -13.750483512878418
    10. '=' → logprob: -13.875483512878418

Token 301: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.002760176081210375
    2. '   ' → logprob: -7.002760410308838
    3. 'in' → logprob: -7.252760410308838
    4. '>' → logprob: -8.87775993347168
    5. 'mine' → logprob: -9.37775993347168
    6. '```' → logprob: -9.37775993347168
    7. 'i' → logprob: -9.62775993347168
    8. 'and' → logprob: -10.00275993347168
    9. 'e' → logprob: -10.00275993347168
    10. '_' → logprob: -10.12775993347168

Token 302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17456687986850739
    2. '>' → logprob: -2.5495669841766357
    3. ' or' → logprob: -2.7995669841766357
    4. ':
' → logprob: -5.174566745758057
    5. ' >' → logprob: -5.299566745758057
    6. ' and' → logprob: -5.799566745758057
    7. '==' → logprob: -6.049566745758057
    8. '   ' → logprob: -6.799566745758057
    9. '<|end|>' → logprob: -7.049566745758057
    10. '<=' → logprob: -7.424566745758057

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41298702359199524
    2. ':' → logprob: -1.2879869937896729
    3. ':
' → logprob: -2.787986993789673
    4. '       ' → logprob: -7.787987232208252
    5. ' break' → logprob: -9.162986755371094
    6. '          ' → logprob: -9.287986755371094
    7. ' :' → logprob: -9.412986755371094
    8. ' or' → logprob: -9.787986755371094
    9. ' :
' → logprob: -9.787986755371094
    10. '   ' → logprob: -10.287986755371094

Token 304: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13637447357177734
    2. ' break' → logprob: -2.3863744735717773
    3. 'break' → logprob: -3.6363744735717773
    4. '           ' → logprob: -4.761374473571777
    5. '   ' → logprob: -7.886374473571777
    6. '
' → logprob: -9.136374473571777
    7. '	break' → logprob: -9.636374473571777
    8. '               ' → logprob: -10.136374473571777
    9. '        
' → logprob: -11.886374473571777
    10. ' ' → logprob: -12.136374473571777

Token 305: '(' (ID: 7)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.007269510067999363
    2. '(' → logprob: -5.007269382476807
    3. '()' → logprob: -7.882269382476807
    4. 'count' → logprob: -9.882269859313965
    5. '(
' → logprob: -10.007269859313965
    6. '(idx' → logprob: -11.007269859313965
    7. '("")' → logprob: -11.382269859313965
    8. '((' → logprob: -11.882269859313965
    9. '(S' → logprob: -12.132269859313965
    10. '()
' → logprob: -12.132269859313965

Token 306: '1' (ID: 16)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.002872511511668563
    2. '0' → logprob: -6.377872467041016
    3. 'idx' → logprob: -7.877872467041016
    4. ' count' → logprob: -8.127872467041016
    5. 'S' → logprob: -8.377872467041016
    6. '(count' → logprob: -9.627872467041016
    7. 'K' → logprob: -10.377872467041016
    8. 'ch' → logprob: -11.002872467041016
    9. 'len' → logprob: -11.127872467041016
    10. '"' → logprob: -11.127872467041016

Token 307: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.19605021178722382
    2. '           ' → logprob: -1.8210501670837402
    3. ')' → logprob: -4.19605016708374
    4. '       ' → logprob: -7.07105016708374
    5. '               ' → logprob: -9.446050643920898
    6. '
' → logprob: -9.446050643920898
    7. '   ' → logprob: -10.446050643920898
    8. ')
' → logprob: -10.696050643920898
    9. ');' → logprob: -11.196050643920898
    10. ',' → logprob: -11.196050643920898

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013691288768313825
    2. '       ' → logprob: -10.125137329101562
    3. '
' → logprob: -10.250137329101562
    4. '            
' → logprob: -10.250137329101562
    5. '               ' → logprob: -11.000137329101562
    6. '    
' → logprob: -12.750137329101562
    7. ',' → logprob: -13.625137329101562
    8. '        
' → logprob: -13.750137329101562
    9. '   ' → logprob: -13.750137329101562
    10. '          ' → logprob: -14.375137329101562

Token 309: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004375055897980928
    2. '
' → logprob: -5.504374980926514
    3. '       ' → logprob: -9.129375457763672
    4. '            
' → logprob: -9.629375457763672
    5. 'break' (adapté à ' break') → logprob: -10.004375457763672
    6. '    
' → logprob: -10.504375457763672
    7. ' break' → logprob: -11.254375457763672
    8. 'return' → logprob: -11.629375457763672
    9. '   ' → logprob: -11.629375457763672
    10. '        
' → logprob: -12.379375457763672

Token 310: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005668525584042072
    2. '<|end|>' → logprob: -6.005668640136719
    3. '        ' → logprob: -6.755668640136719
    4. '        
' → logprob: -7.005668640136719
    5. '
' → logprob: -8.130668640136719
    6. '    ' → logprob: -8.380668640136719
    7. '   ' → logprob: -8.755668640136719
    8. '      ' → logprob: -9.505668640136719
    9. ',' → logprob: -9.880668640136719
    10. ' ' → logprob: -10.130668640136719

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019406896084547043
    2. '<|end|>' → logprob: -4.769406795501709
    3. '        ' → logprob: -5.394406795501709
    4. ' ' → logprob: -5.769406795501709
    5. '    ' → logprob: -6.644406795501709
    6. '   ' → logprob: -7.394406795501709
    7. '        
' → logprob: -7.894406795501709
    8. '      ' → logprob: -8.769407272338867
    9. ')' → logprob: -9.269407272338867
    10. ' else' → logprob: -9.644407272338867

Token 312: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014691312797367573
    2. '    ' → logprob: -5.764691352844238
    3. '        ' → logprob: -6.139691352844238
    4. ' if' → logprob: -6.139691352844238
    5. '        
' → logprob: -6.389691352844238
    6. 'if' (adapté à ' if') → logprob: -6.639691352844238
    7. ' ' → logprob: -6.764691352844238
    8. '   ' → logprob: -6.889691352844238
    9. '      ' → logprob: -7.139691352844238
    10. '<|end|>' → logprob: -8.014691352844238

Token 313: ' ch' (ID: 549)
  Prédit: ' ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.31579941511154175
    2. 'ch' → logprob: -1.3157994747161865
    3. ' K' → logprob: -7.565799236297607
    4. ' not' → logprob: -7.940799236297607
    5. ' ' → logprob: -8.065799713134766
    6. 'count' → logprob: -8.190799713134766
    7. ' S' → logprob: -8.565799713134766
    8. 'K' → logprob: -8.565799713134766
    9. ' count' → logprob: -8.565799713134766
    10. '(ch' → logprob: -9.190799713134766

Token 314: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28697365522384644
    2. '==' → logprob: -1.4119737148284912
    3. ' !=' → logprob: -6.411973476409912
    4. '=='' → logprob: -6.661973476409912
    5. ' in' → logprob: -7.161973476409912
    6. '.is' → logprob: -7.286973476409912
    7. '!=' → logprob: -7.286973476409912
    8. '=="' → logprob: -8.53697395324707
    9. ' not' → logprob: -8.66197395324707
    10. '.' → logprob: -9.66197395324707

Token 315: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7067444324493408
    2. ''A' → logprob: -1.5817444324493408
    3. ''a' → logprob: -2.081744432449341
    4. '"' → logprob: -2.956744432449341
    5. ''C' → logprob: -3.331744432449341
    6. ''S' → logprob: -3.956744432449341
    7. ''O' → logprob: -4.456744194030762
    8. '"K' → logprob: -4.706744194030762
    9. '"A' → logprob: -4.956744194030762
    10. ''L' → logprob: -5.331744194030762

Token 316: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7018287181854248
    2. '1' → logprob: -1.0768287181854248
    3. 'K' → logprob: -2.451828718185425
    4. 'A' → logprob: -3.326828718185425
    5. '0' → logprob: -4.326828956604004
    6. ''' → logprob: -5.076828956604004
    7. 'R' → logprob: -5.201828956604004
    8. 'k' → logprob: -5.701828956604004
    9. 'B' → logprob: -5.951828956604004
    10. '"' → logprob: -6.326828956604004

Token 317: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.2293221652507782
    2. '":' → logprob: -1.6043221950531006
    3. '"' → logprob: -5.6043219566345215
    4. '":
' → logprob: -8.85432243347168
    5. ':
' → logprob: -10.97932243347168
    6. ':' → logprob: -11.10432243347168
    7. '":

' → logprob: -11.35432243347168
    8. '"):
' → logprob: -11.47932243347168
    9. '):
' → logprob: -11.72932243347168
    10. '       ' → logprob: -12.72932243347168

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04253136366605759
    2. ':' → logprob: -3.5425312519073486
    3. ':
' → logprob: -4.667531490325928
    4. '       ' → logprob: -6.667531490325928
    5. 'count' → logprob: -6.667531490325928
    6. ' and' → logprob: -7.542531490325928
    7. '
' → logprob: -9.79253101348877
    8. 'and' → logprob: -10.04253101348877
    9. ' count' → logprob: -10.41753101348877
    10. '          ' → logprob: -10.66753101348877

Token 319: ' K' (ID: 658)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.048875413835048676
    2. 'K' (adapté à ' K') → logprob: -3.673875331878662
    3. '           ' → logprob: -4.048875331878662
    4. ' count' → logprob: -5.923875331878662
    5. ' K' → logprob: -6.798875331878662
    6. '       ' → logprob: -7.423875331878662
    7. 'continue' → logprob: -8.17387580871582
    8. 'if' → logprob: -8.79887580871582
    9. ' continue' → logprob: -11.54887580871582
    10. 'k' → logprob: -11.54887580871582

Token 320: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.7432603272027336e-06
    2. '=' → logprob: -14.750001907348633
    3. '-=' → logprob: -15.000001907348633
    4. ' -=' → logprob: -15.250001907348633
    5. ' =' → logprob: -15.875001907348633
    6. '_' → logprob: -16.375001907348633
    7. 'm' → logprob: -16.500001907348633
    8. '+=' → logprob: -16.625001907348633
    9. '_k' → logprob: -16.625001907348633
    10. '   ' → logprob: -16.875001907348633

Token 321: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.055403150618076324
    2. 'mine' → logprob: -2.930403232574463
    3. '_m' → logprob: -8.305402755737305
    4. 'm' → logprob: -9.680402755737305
    5. 'ime' → logprob: -10.555402755737305
    6. '-m' → logprob: -10.805402755737305
    7. 'ne' → logprob: -10.805402755737305
    8. '   ' → logprob: -10.805402755737305
    9. 'inne' → logprob: -10.930402755737305
    10. ' mine' → logprob: -11.055402755737305

Token 322: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.12780803442001343
    2. ' -=' → logprob: -2.127808094024658
    3. '+=' → logprob: -7.752808094024658
    4. '-' → logprob: -7.877808094024658
    5. '=' → logprob: -9.8778076171875
    6. ' +=' → logprob: -11.1278076171875
    7. '   ' → logprob: -12.6278076171875
    8. '       ' → logprob: -14.5028076171875
    9. '    ' → logprob: -15.5028076171875
    10. ' =' → logprob: -15.6278076171875

Token 323: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '2' → logprob: -16.50006675720215
    4. '   ' → logprob: -17.12506675720215
    5. 'count' → logprob: -17.62506675720215
    6. '0' → logprob: -17.87506675720215
    7. '3' → logprob: -18.43756675720215
    8. '```' → logprob: -18.62506675720215
    9. '       ' → logprob: -18.68756675720215
    10. '  ' → logprob: -19.00006675720215

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.12500762939453
    4. '```' → logprob: -18.00000762939453
    5. '2' → logprob: -18.12500762939453
    6. '0' → logprob: -18.87500762939453
    7. '<|end|>' → logprob: -19.25000762939453
    8. '  ' → logprob: -19.25000762939453
    9. '       ' → logprob: -19.50000762939453
    10. 'count' → logprob: -20.18750762939453

Token 325: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5493389964103699
    2. '
' → logprob: -1.0493390560150146
    3. '           ' → logprob: -2.6743390560150146
    4. '   ' → logprob: -6.0493388175964355
    5. '<|end|>' → logprob: -7.1743388175964355
    6. '               ' → logprob: -8.924339294433594
    7. '        
' → logprob: -10.049339294433594
    8. '            
' → logprob: -10.299339294433594
    9. 'else' → logprob: -10.674339294433594
    10. ' else' → logprob: -10.799339294433594

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046909213066101074
    2. '           ' → logprob: -3.1719093322753906
    3. '
' → logprob: -5.796909332275391
    4. '   ' → logprob: -7.796909332275391
    5. 'else' → logprob: -8.92190933227539
    6. ' else' → logprob: -9.17190933227539
    7. '<|end|>' → logprob: -9.17190933227539
    8. 'elif' → logprob: -10.92190933227539
    9. '               ' → logprob: -11.04690933227539
    10. '        
' → logprob: -11.04690933227539

Token 327: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13480880856513977
    2. 'count' → logprob: -2.3848087787628174
    3. '   ' → logprob: -4.0098090171813965
    4. 'else' (adapté à ' else') → logprob: -4.3848090171813965
    5. 'if' → logprob: -6.7598090171813965
    6. ' count' → logprob: -6.8848090171813965
    7. ' else' → logprob: -7.6348090171813965
    8. 'elif' → logprob: -8.259808540344238
    9. '           ' → logprob: -8.759808540344238
    10. 'print' → logprob: -8.884808540344238

Token 328: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6352114677429199
    2. '           ' → logprob: -0.8852114677429199
    3. ':
' → logprob: -2.88521146774292
    4. '       ' → logprob: -6.51021146774292
    5. 'print' → logprob: -9.885211944580078
    6. '   ' → logprob: -9.885211944580078
    7. '               ' → logprob: -11.010211944580078
    8. 'break' → logprob: -11.135211944580078
    9. 'if' → logprob: -11.260211944580078
    10. '          ' → logprob: -11.760211944580078

Token 329: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08005335181951523
    2. '       ' → logprob: -2.7050533294677734
    3. 'print' → logprob: -5.205053329467773
    4. 'count' → logprob: -5.705053329467773
    5. '   ' → logprob: -6.955053329467773
    6. ' print' → logprob: -9.080053329467773
    7. ' count' → logprob: -9.830053329467773
    8. '               ' → logprob: -9.955053329467773
    9. 'break' → logprob: -11.080053329467773
    10. 'if' → logprob: -11.205053329467773

Token 330: ' print' (ID: 2123)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.20515011250972748
    2. '       ' → logprob: -2.2051501274108887
    3. 'print' (adapté à ' print') → logprob: -3.2051501274108887
    4. '           ' → logprob: -3.4551501274108887
    5. ' count' → logprob: -6.080150127410889
    6. '   ' → logprob: -7.705150127410889
    7. 'break' → logprob: -8.83014965057373
    8. ' print' → logprob: -8.95514965057373
    9. 'if' → logprob: -10.58014965057373
    10. 'K' → logprob: -10.58014965057373

Token 331: '(ch' (ID: 15574)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00654543936252594
    2. '(idx' → logprob: -5.756545543670654
    3. 'count' → logprob: -6.131545543670654
    4. 'S' → logprob: -7.631545543670654
    5. ' idx' → logprob: -8.506545066833496
    6. '1' → logprob: -8.881545066833496
    7. 'K' → logprob: -9.256545066833496
    8. 'len' → logprob: -9.756545066833496
    9. '0' → logprob: -10.131545066833496
    10. '(' → logprob: -10.256545066833496

Token 332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15834200382232666
    2. ',' → logprob: -2.283341884613037
    3. ',end' → logprob: -3.533341884613037
    4. '*' → logprob: -5.158341884613037
    5. ')
' → logprob: -5.533341884613037
    6. ' *' → logprob: -5.783341884613037
    7. ' ,' → logprob: -6.408341884613037
    8. '[end' → logprob: -8.283342361450195
    9. ' )' → logprob: -8.783342361450195
    10. '[' → logprob: -9.658342361450195

Token 333: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012281235307455063
    2. '<|end|>' → logprob: -5.26228141784668
    3. '
' → logprob: -5.38728141784668
    4. 'break' (adapté à ' break') → logprob: -7.01228141784668
    5. ' break' → logprob: -7.88728141784668
    6. '               ' → logprob: -8.51228141784668
    7. '\n' → logprob: -8.63728141784668
    8. ')' → logprob: -8.88728141784668
    9. '```' → logprob: -9.26228141784668
    10. '            ' → logprob: -9.38728141784668

Token 335: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.09413383156061172
    2. '<|end|>' → logprob: -2.5941338539123535
    3. ' else' → logprob: -4.5941338539123535
    4. '   ' → logprob: -5.7191338539123535
    5. '```' → logprob: -6.9691338539123535
    6. '#' → logprob: -7.8441338539123535
    7. 'elif' → logprob: -8.844133377075195
    8. '...' → logprob: -9.844133377075195
    9. '
' → logprob: -10.094133377075195
    10. ')' → logprob: -10.219133377075195

Token 338: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20147833228111267
    2. ':
' → logprob: -1.701478362083435
    3. '   ' → logprob: -9.826478004455566
    4. ' :' → logprob: -12.576478004455566
    5. ':

' → logprob: -12.701478004455566
    6. ' :
' → logprob: -13.201478004455566
    7. ':
' → logprob: -13.576478004455566
    8. '  ' → logprob: -14.701478004455566
    9. '{' → logprob: -15.326478004455566
    10. '    ' → logprob: -15.701478004455566

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2983485758304596
    2. '   ' → logprob: -2.0483486652374268
    3. 'print' → logprob: -2.0483486652374268
    4. ' print' → logprob: -9.798348426818848
    5. '           ' → logprob: -12.923348426818848
    6. '```' → logprob: -13.548348426818848
    7. '     ' → logprob: -14.048348426818848
    8. 'if' → logprob: -15.048348426818848
    9. '    ' → logprob: -15.048348426818848
    10. '	print' → logprob: -15.673348426818848

Token 340: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00028731857310049236
    2. '1' → logprob: -8.625287055969238
    3. 'if' → logprob: -9.625287055969238
    4. '   ' → logprob: -10.875287055969238
    5. '       ' → logprob: -11.375287055969238
    6. '0' → logprob: -11.750287055969238
    7. '           ' → logprob: -13.500287055969238
    8. ' print' → logprob: -13.625287055969238
    9. '```' → logprob: -15.000287055969238
    10. 'for' → logprob: -16.875288009643555

Token 341: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012228474952280521
    2. '1' → logprob: -7.001222610473633
    3. '(-' → logprob: -9.251222610473633
    4. '(count' → logprob: -9.626222610473633
    5. '(K' → logprob: -10.251222610473633
    6. '(len' → logprob: -10.501222610473633
    7. '((' → logprob: -11.126222610473633
    8. '(
' → logprob: -11.501222610473633
    9. '(S' → logprob: -11.626222610473633
    10. '()' → logprob: -12.001222610473633

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003623831318691373
    2. '-' → logprob: -5.753623962402344
    3. '0' → logprob: -8.503623962402344
    4. '(' → logprob: -9.003623962402344
    5. 'count' → logprob: -10.253623962402344
    6. 'K' → logprob: -11.003623962402344
    7. 'pow' → logprob: -11.128623962402344
    8. 'len' → logprob: -11.253623962402344
    9. 'S' → logprob: -11.628623962402344
    10. '(-' → logprob: -12.003623962402344

Token 343: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ')
' → logprob: -13.500004768371582
    3. '```' → logprob: -14.375004768371582
    4. '))' → logprob: -14.875004768371582
    5. ' )' → logprob: -14.875004768371582
    6. '())' → logprob: -14.875004768371582
    7. '   ' → logprob: -15.000004768371582
    8. '*)' → logprob: -15.375004768371582
    9. '<|end|>' → logprob: -15.500004768371582
    10. '')' → logprob: -15.750004768371582


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 341
Tokens correctement prédits (1ère position, stricte): 131
Tokens correctement prédits (1ère position, avec adaptation): 134
Tokens correctement prédits (top 10): 255
Précision stricte (1ère position): 38.42%
Précision adaptée (1ère position): 39.30%
Précision (top 10): 74.78%
================================================================================
