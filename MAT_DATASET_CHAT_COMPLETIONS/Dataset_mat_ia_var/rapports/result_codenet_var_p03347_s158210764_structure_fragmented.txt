================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input_size():
    return int(input())

def init_list(size):
    return [0] * size

def fill_list(A, N):
    for i in range(N):
        A[i] = read_value()
    return A

def read_value():
    return int(input())

def check_first_zero(A):
    return A[0] == 0

def calculate_difference(a, b):
    return a - b

def process_d_value(d, a_i, ans):
    if d > 1:
        if a_i != 0:
            return False, ans
    elif d == 1:
        ans += 1
    else:
        ans += a_i
    return True, ans

def print_result(possible, ans):
    if possible:
        print(ans)
    else:
        print(-1)

def main():
    N = read_input_size()
    A = init_list(N)
    A = fill_list(A, N)
    possible = 1 if check_first_zero(A) else 0
    ans = 0
    if not possible:
        print_result(possible, ans)
        return
    for i in range(1, N):
        d = calculate_difference(A[i], A[i-1])
        is_possible, ans = process_d_value(d, A[i], ans)
        if not is_possible:
            possible = 0
            break
    print_result(possible, ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '_size' (ID: 5044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005234002135694027
    2. '():' → logprob: -6.3802337646484375
    3. '_' → logprob: -6.5052337646484375
    4. '(:' → logprob: -6.7552337646484375
    5. ':' → logprob: -7.5052337646484375
    6. '```' → logprob: -9.255233764648438
    7. '(_:' → logprob: -9.880233764648438
    8. '_:' → logprob: -10.255233764648438
    9. ' (' → logprob: -10.755233764648438
    10. '(_' → logprob: -10.755233764648438

Token 5: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8333630561828613
    2. ':' → logprob: -1.9583630561828613
    3. '\n' → logprob: -1.9583630561828613
    4. '```' → logprob: -1.9583630561828613
    5. '\' → logprob: -2.8333630561828613
    6. '    
' → logprob: -3.7083630561828613
    7. '  
' → logprob: -4.708363056182861
    8. '
' → logprob: -4.833363056182861
    9. '(' → logprob: -4.958363056182861
    10. ':
' → logprob: -5.083363056182861

Token 6: ' return' (ID: 622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8048084378242493
    2. '   ' → logprob: -2.1798083782196045
    3. 'return' (adapté à ' return') → logprob: -2.1798083782196045
    4. 'r' → logprob: -2.4298083782196045
    5. 'n' → logprob: -3.0548083782196045
    6. ' ' → logprob: -3.1798083782196045
    7. '```' → logprob: -3.3048083782196045
    8. 'i' → logprob: -3.6798083782196045
    9. 'x' → logprob: -3.9298083782196045
    10. 's' → logprob: -4.054808616638184

Token 7: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21466822922229767
    2. ' int' → logprob: -1.9646682739257812
    3. ' input' → logprob: -3.4646682739257812
    4. 'input' → logprob: -5.089668273925781
    5. ' len' → logprob: -5.214668273925781
    6. '  ' → logprob: -5.464668273925781
    7. 'int' → logprob: -5.964668273925781
    8. ' []' → logprob: -7.714668273925781
    9. ' None' → logprob: -7.964668273925781
    10. '"' → logprob: -8.214668273925781

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009521945030428469
    2. '(input' → logprob: -7.500952243804932
    3. '('' → logprob: -8.375951766967773
    4. ''' → logprob: -9.625951766967773
    5. ' (' → logprob: -10.250951766967773
    6. '<|end|>' → logprob: -11.250951766967773
    7. 'input' → logprob: -11.875951766967773
    8. '(open' → logprob: -12.125951766967773
    9. ' ' → logprob: -12.250951766967773
    10. '(space' → logprob: -12.375951766967773

Token 9: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.31842443346977234
    2. '()' → logprob: -1.4434244632720947
    3. '(' → logprob: -3.5684244632720947
    4. '()))' → logprob: -5.318424224853516
    5. ')' → logprob: -5.818424224853516
    6. '('' → logprob: -8.818424224853516
    7. '(()' → logprob: -9.568424224853516
    8. '(""))' → logprob: -9.693424224853516
    9. '().' → logprob: -9.818424224853516
    10. ' ())' → logprob: -10.568424224853516

Token 10: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0483978986740112
    2. '```' → logprob: -1.0483978986740112
    3. '
' → logprob: -2.173398017883301
    4. '<|end|>' → logprob: -3.423398017883301
    5. '

' → logprob: -3.548398017883301
    6. '#' → logprob: -3.673398017883301
    7. '\n' → logprob: -3.673398017883301
    8. '' → logprob: -4.048398017883301
    9. 'newline' → logprob: -4.048398017883301
    10. '\' → logprob: -5.048398017883301

Token 11: ' init' (ID: 6327)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.7692903280258179
    2. ' calculate' → logprob: -0.7692903280258179
    3. ' main' → logprob: -3.3942904472351074
    4. ' compute' → logprob: -4.019290447235107
    5. ' process' → logprob: -4.144290447235107
    6. ' write' → logprob: -5.644290447235107
    7. ' get' → logprob: -7.269290447235107
    8. ' space' → logprob: -7.769290447235107
    9. ' print' → logprob: -8.51928997039795
    10. ' find' → logprob: -8.89428997039795

Token 12: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008721524849534035
    2. '(' → logprob: -5.758721351623535
    3. ' _' → logprob: -6.258721351623535
    4. '_array' → logprob: -7.008721351623535
    5. '_size' → logprob: -8.508721351623535
    6. '_space' → logprob: -8.758721351623535
    7. '_data' → logprob: -8.883721351623535
    8. '(_' → logprob: -8.883721351623535
    9. '_input' → logprob: -9.008721351623535
    10. ' (' → logprob: -9.258721351623535

Token 13: '(size' (ID: 15192)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04670400172472
    2. '_' → logprob: -3.921704053878784
    3. '(size' → logprob: -4.171703815460205
    4. '()' → logprob: -5.296703815460205
    5. ' (' → logprob: -6.796703815460205
    6. '_list' → logprob: -6.796703815460205
    7. '_size' → logprob: -7.546703815460205
    8. '```' → logprob: -7.921703815460205
    9. ')' → logprob: -8.421704292297363
    10. '[' → logprob: -8.546704292297363

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013245263835415244
    2. ')' → logprob: -6.751324653625488
    3. '):
' → logprob: -9.626324653625488
    4. ' ):' → logprob: -10.001324653625488
    5. '=' → logprob: -11.251324653625488
    6. '_' → logprob: -11.876324653625488
    7. ',' → logprob: -12.876324653625488
    8. '_list' → logprob: -12.876324653625488
    9. '[]):' → logprob: -13.001324653625488
    10. ':' → logprob: -13.126324653625488

Token 15: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13188499212265015
    2. '   ' → logprob: -2.756885051727295
    3. '[]' → logprob: -3.131885051727295
    4. '[:]' → logprob: -5.131885051727295
    5. '[
' → logprob: -5.881885051727295
    6. '    ' → logprob: -6.506885051727295
    7. '_list' → logprob: -6.756885051727295
    8. ' []' → logprob: -7.381885051727295
    9. '[n' → logprob: -7.631885051727295
    10. '[size' → logprob: -7.631885051727295

Token 16: ' return' (ID: 622)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4867513179779053
    2. '[' → logprob: -1.4867513179779053
    3. ' []' → logprob: -2.6117513179779053
    4. '   ' → logprob: -3.2367513179779053
    5. ' return' → logprob: -3.4867513179779053
    6. '[]' → logprob: -4.611751556396484
    7. 'return' (adapté à ' return') → logprob: -5.861751556396484
    8. '    ' → logprob: -6.236751556396484
    9. '[a' → logprob: -8.236751556396484
    10. '[:]' → logprob: -8.486751556396484

Token 17: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.11489949375391006
    2. '[' → logprob: -2.2398993968963623
    3. ' []' → logprob: -6.364899635314941
    4. '[]' → logprob: -8.239899635314941
    5. '[n' → logprob: -10.989899635314941
    6. ' ' → logprob: -11.239899635314941
    7. ' [[]' → logprob: -11.239899635314941
    8. '[size' → logprob: -11.364899635314941
    9. '[s' → logprob: -11.864899635314941
    10. '[:]' → logprob: -12.364899635314941

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000295420759357512
    2. ' ' → logprob: -8.375295639038086
    3. 'None' → logprob: -9.875295639038086
    4. ' None' → logprob: -12.000295639038086
    5. '[]' → logprob: -12.750295639038086
    6. '   ' → logprob: -13.125295639038086
    7. ']' → logprob: -14.125295639038086
    8. ')' → logprob: -14.625295639038086
    9. '[' → logprob: -15.375295639038086
    10. '_' → logprob: -15.625295639038086

Token 19: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07028774172067642
    2. ' for' → logprob: -2.9452877044677734
    3. ']*' → logprob: -4.320287704467773
    4. ' ]' → logprob: -6.445287704467773
    5. 'for' → logprob: -8.570287704467773
    6. ')' → logprob: -8.570287704467773
    7. ' ' → logprob: -11.445287704467773
    8. ',' → logprob: -12.445287704467773
    9. ')]' → logprob: -12.570287704467773
    10. '	for' → logprob: -13.445287704467773

Token 20: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.29256418347358704
    2. ' *' → logprob: -1.5425641536712646
    3. ' for' → logprob: -3.5425641536712646
    4. '[size' → logprob: -5.417564392089844
    5. '(size' → logprob: -6.042564392089844
    6. '[' → logprob: -6.667564392089844
    7. ' ' → logprob: -6.917564392089844
    8. 'for' → logprob: -7.292564392089844
    9. 'size' → logprob: -8.167564392089844
    10. ' size' → logprob: -8.167564392089844

Token 21: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.07889066636562347
    2. ' size' → logprob: -2.578890562057495
    3. '(size' → logprob: -14.078890800476074
    4. '	size' → logprob: -17.203889846801758
    5. ' ' → logprob: -17.703889846801758
    6. 's' → logprob: -18.328889846801758
    7. '_size' → logprob: -18.578889846801758
    8. '<size' → logprob: -18.703889846801758
    9. 'siz' → logprob: -18.953889846801758
    10. 'sizes' → logprob: -19.578889846801758

Token 22: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07165277004241943
    2. '

' → logprob: -2.696652889251709
    3. '
' → logprob: -6.946652889251709
    4. '```' → logprob: -8.07165241241455
    5. '\' → logprob: -8.82165241241455
    6. '<|end|>' → logprob: -9.32165241241455
    7. ' def' → logprob: -9.57165241241455
    8. 'd' → logprob: -10.82165241241455
    9. 'newline' → logprob: -10.82165241241455
    10. '\n' → logprob: -10.94665241241455

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00046498890151269734
    2. '

' → logprob: -8.500465393066406
    3. 'd' → logprob: -8.625465393066406
    4. '
' → logprob: -10.000465393066406
    5. '\' → logprob: -11.625465393066406
    6. '```' → logprob: -11.750465393066406
    7. '<|end|>' → logprob: -12.000465393066406
    8. 'de' → logprob: -12.625465393066406
    9. '#' → logprob: -13.000465393066406
    10. ' def' → logprob: -13.000465393066406

Token 24: ' fill' (ID: 6954)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6412966847419739
    2. ' process' → logprob: -1.766296625137329
    3. ' calculate' → logprob: -2.141296625137329
    4. ' solve' → logprob: -2.516296625137329
    5. ' read' → logprob: -3.641296625137329
    6. ' compute' → logprob: -3.891296625137329
    7. ' sum' → logprob: -4.391296863555908
    8. ' count' → logprob: -4.641296863555908
    9. 'process' → logprob: -5.141296863555908
    10. ' find' → logprob: -5.766296863555908

Token 25: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0020398679189383984
    2. '_' → logprob: -6.252039909362793
    3. '_lists' → logprob: -10.252039909362793
    4. '_l' → logprob: -11.002039909362793
    5. '_array' → logprob: -11.127039909362793
    6. '_li' → logprob: -11.877039909362793
    7. ' _' → logprob: -12.127039909362793
    8. '_lst' → logprob: -12.252039909362793
    9. '_input' → logprob: -12.377039909362793
    10. '_line' → logprob: -12.752039909362793

Token 26: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.109036386013031
    2. '(size' → logprob: -2.359036445617676
    3. '(lst' → logprob: -5.609036445617676
    4. '(list' → logprob: -6.359036445617676
    5. '(ls' → logprob: -7.609036445617676
    6. '(_' → logprob: -8.234036445617676
    7. '_(' → logprob: -8.359036445617676
    8. '_list' → logprob: -8.734036445617676
    9. '(s' → logprob: -8.734036445617676
    10. '(data' → logprob: -8.859036445617676

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010087540140375495
    2. ')' → logprob: -7.751008987426758
    3. ' ,' → logprob: -8.126008987426758
    4. ',size' → logprob: -8.876008987426758
    5. '[' → logprob: -9.501008987426758
    6. ',A' → logprob: -10.376008987426758
    7. ',a' → logprob: -12.001008987426758
    8. 'size' → logprob: -12.501008987426758
    9. '[size' → logprob: -12.501008987426758
    10. 'A' → logprob: -12.751008987426758

Token 28: ' N' (ID: 478)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.37134870886802673
    2. ' n' → logprob: -1.9963487386703491
    3. ' values' → logprob: -2.6213486194610596
    4. ' value' → logprob: -2.9963486194610596
    5. 'size' → logprob: -4.246348857879639
    6. ' data' → logprob: -4.996348857879639
    7. ' val' → logprob: -5.246348857879639
    8. 'n' → logprob: -5.371348857879639
    9. ' )' → logprob: -5.996348857879639
    10. ' B' → logprob: -5.996348857879639

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004931025905534625
    2. ',' → logprob: -8.125493049621582
    3. '):
' → logprob: -9.375493049621582
    4. ')' → logprob: -9.375493049621582
    5. ' ):' → logprob: -10.750493049621582
    6. '   ' → logprob: -13.500493049621582
    7. ':' → logprob: -13.625493049621582
    8. '):
' → logprob: -13.750493049621582
    9. ''):' → logprob: -15.000493049621582
    10. ' ' → logprob: -15.500493049621582

Token 30: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4656621217727661
    2. '   ' → logprob: -1.2156621217727661
    3. ' for' → logprob: -3.5906620025634766
    4. 'for' → logprob: -3.7156620025634766
    5. '():' → logprob: -4.465662002563477
    6. ':
' → logprob: -5.090662002563477
    7. '(' → logprob: -6.215662002563477
    8. '):' → logprob: -6.590662002563477
    9. '    
' → logprob: -7.965662002563477
    10. '[' → logprob: -7.965662002563477

Token 31: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05258779227733612
    2. 'for' (adapté à ' for') → logprob: -3.0525877475738525
    3. '   ' → logprob: -5.552587985992432
    4. '	for' → logprob: -10.302587509155273
    5. '
' → logprob: -10.802587509155273
    6. '    
' → logprob: -10.927587509155273
    7. '```' → logprob: -10.927587509155273
    8. ' 
' → logprob: -11.302587509155273
    9. '    ' → logprob: -12.052587509155273
    10. ' ```' → logprob: -13.552587509155273

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03273319825530052
    2. ' _' → logprob: -3.907733201980591
    3. ' ' → logprob: -4.532732963562012
    4. '_' → logprob: -6.907732963562012
    5. 'i' → logprob: -8.157732963562012
    6. ' range' → logprob: -10.157732963562012
    7. ' in' → logprob: -10.532732963562012
    8. ' ' → logprob: -12.657732963562012
    9. ' index' → logprob: -13.157732963562012
    10. '_i' → logprob: -13.282732963562012

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009997600689530373
    2. 'in' → logprob: -4.634997367858887
    3. ' ' → logprob: -8.509997367858887
    4. 'n' → logprob: -10.759997367858887
    5. '	in' → logprob: -11.634997367858887
    6. '  ' → logprob: -12.759997367858887
    7. ',' → logprob: -13.759997367858887
    8. '_' → logprob: -14.009997367858887
    9. ' i' → logprob: -14.509997367858887
    10. '   ' → logprob: -14.759997367858887

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08901003003120422
    2. 'range' → logprob: -2.464010000228882
    3. ' ' → logprob: -9.839010238647461
    4. ' in' → logprob: -11.589010238647461
    5. '	range' → logprob: -13.214010238647461
    6. ' xrange' → logprob: -13.339010238647461
    7. 'in' → logprob: -13.464010238647461
    8. '  ' → logprob: -13.964010238647461
    9. ')' → logprob: -14.714010238647461
    10. '(range' → logprob: -14.964010238647461

Token 35: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.1610284447669983
    2. '(' → logprob: -1.9110283851623535
    3. '(len' → logprob: -7.6610283851623535
    4. ' (' → logprob: -8.411028861999512
    5. '(n' → logprob: -10.161028861999512
    6. '(A' → logprob: -10.161028861999512
    7. ' ' → logprob: -11.536028861999512
    8. ' N' → logprob: -11.786028861999512
    9. ')' → logprob: -12.286028861999512
    10. '(size' → logprob: -12.786028861999512

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001238004770129919
    2. '):
' → logprob: -10.000123977661133
    3. ')' → logprob: -10.125123977661133
    4. ':' → logprob: -10.875123977661133
    5. ' ):' → logprob: -11.000123977661133
    6. '   ' → logprob: -13.750123977661133
    7. ' ' → logprob: -14.375123977661133
    8. '():' → logprob: -15.375123977661133
    9. '+' → logprob: -15.750123977661133
    10. ',' → logprob: -15.875123977661133

Token 37: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3071458041667938
    2. '       ' → logprob: -1.5571458339691162
    3. '    ' → logprob: -3.807145833969116
    4. ' A' → logprob: -3.932145833969116
    5. ':' → logprob: -5.057145595550537
    6. 'A' → logprob: -6.432145595550537
    7. ' ' → logprob: -6.932145595550537
    8. ',' → logprob: -7.682145595550537
    9. '    
' → logprob: -7.682145595550537
    10. '<|end|>' → logprob: -8.182146072387695

Token 38: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.31496384739875793
    2. 'A' (adapté à ' A') → logprob: -1.3149638175964355
    3. '   ' → logprob: -6.4399638175964355
    4. '    ' → logprob: -10.189964294433594
    5. 'a' → logprob: -10.814964294433594
    6. ' ' → logprob: -11.064964294433594
    7. ' a' → logprob: -11.939964294433594
    8. '	A' → logprob: -12.564964294433594
    9. 'x' → logprob: -13.189964294433594
    10. 'value' → logprob: -13.189964294433594

Token 39: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0076334853656589985
    2. '[' → logprob: -4.882633686065674
    3. '[I' → logprob: -12.007633209228516
    4. '[A' → logprob: -12.132633209228516
    5. '[input' → logprob: -12.257633209228516
    6. '```' → logprob: -12.507633209228516
    7. '[...]' → logprob: -13.007633209228516
    8. '[int' → logprob: -13.882633209228516
    9. '\[' → logprob: -13.882633209228516
    10. '[a' → logprob: -14.257633209228516

Token 40: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7103826999664307
    2. ' =' → logprob: -1.2103826999664307
    3. '=' → logprob: -1.7103826999664307
    4. ']' → logprob: -3.8353826999664307
    5. ')=' → logprob: -5.460382461547852
    6. ' )' → logprob: -5.835382461547852
    7. ']=' → logprob: -8.085382461547852
    8. ' ]' → logprob: -8.835382461547852
    9. '=input' → logprob: -8.960382461547852
    10. ' ' → logprob: -9.835382461547852

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759674310684204
    2. '=' → logprob: -0.8259674310684204
    3. '=input' → logprob: -11.325967788696289
    4. ' =
' → logprob: -12.450967788696289
    5. '=int' → logprob: -12.575967788696289
    6. ' +=' → logprob: -12.825967788696289
    7. ',' → logprob: -13.825967788696289
    8. ' ' → logprob: -14.075967788696289
    9. 'space' → logprob: -14.325967788696289
    10. '+=' → logprob: -14.575967788696289

Token 42: ' read' (ID: 1729)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10023978352546692
    2. ' int' → logprob: -2.3502397537231445
    3. 'input' → logprob: -11.100239753723145
    4. '(int' → logprob: -11.975239753723145
    5. ' input' → logprob: -12.100239753723145
    6. '   ' → logprob: -13.100239753723145
    7. '<int' → logprob: -13.600239753723145
    8. ' i' → logprob: -13.850239753723145
    9. 'i' → logprob: -14.350239753723145
    10. '=int' → logprob: -14.975239753723145

Token 43: '_value' (ID: 6734)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -9.782141569303349e-05
    2. '_' → logprob: -10.25009822845459
    3. ' _' → logprob: -10.87509822845459
    4. '_line' → logprob: -11.75009822845459
    5. '()' → logprob: -11.87509822845459
    6. '_i' → logprob: -11.87509822845459
    7. '_in' → logprob: -12.00009822845459
    8. '_int' → logprob: -12.37509822845459
    9. '_put' → logprob: -12.62509822845459
    10. '__' → logprob: -13.62509822845459

Token 44: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.684157026233152e-05
    2. '(' → logprob: -10.000077247619629
    3. '_' → logprob: -10.875077247619629
    4. '_parent' → logprob: -13.000077247619629
    5. 's' → logprob: -13.125077247619629
    6. ' ()' → logprob: -13.625077247619629
    7. '_input' → logprob: -13.750077247619629
    8. '()]' → logprob: -14.125077247619629
    9. '()`' → logprob: -14.125077247619629
    10. '()
' → logprob: -14.250077247619629

Token 45: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06238866224884987
    2. '

' → logprob: -3.4373886585235596
    3. '
' → logprob: -3.9373886585235596
    4. '()

' → logprob: -5.687388896942139
    5. ' def' → logprob: -6.687388896942139
    6. '```' → logprob: -7.187388896942139
    7. '<|end|>' → logprob: -7.312388896942139
    8. '()' → logprob: -7.312388896942139
    9. '(' → logprob: -7.562388896942139
    10. '()
' → logprob: -8.06238842010498

Token 46: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6732022166252136
    2. 'def' → logprob: -0.7982022166252136
    3. '<|end|>' → logprob: -3.6732022762298584
    4. '

' → logprob: -5.048202037811279
    5. '\n' → logprob: -5.548202037811279
    6. '```' → logprob: -6.423202037811279
    7. 'newline' → logprob: -7.423202037811279
    8. '<|end|>' → logprob: -7.548202037811279
    9. '    
' → logprob: -8.048202514648438
    10. ' 
' → logprob: -8.798202514648438

Token 47: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.08941518515348434
    2. 'A' → logprob: -2.5894150733947754
    3. ' None' → logprob: -4.964415073394775
    4. '<|end|>' → logprob: -6.589415073394775
    5. ' ' → logprob: -6.714415073394775
    6. 'None' → logprob: -7.089415073394775
    7. '<|end|>' → logprob: -10.589415550231934
    8. ' 
' → logprob: -11.214415550231934
    9. ' ' → logprob: -11.714415550231934
    10. '  ' → logprob: -12.089415550231934

Token 48: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9925805926322937
    2. 'def' → logprob: -0.9925805926322937
    3. '
' → logprob: -1.3675806522369385
    4. ' def' → logprob: -6.617580413818359
    5. '```' → logprob: -7.492580413818359
    6. '_' → logprob: -7.742580413818359
    7. '_

' → logprob: -7.992580413818359
    8. '(' → logprob: -8.49258041381836
    9. '(def' → logprob: -8.49258041381836
    10. 'newline' → logprob: -8.61758041381836

Token 49: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011083070188760757
    2. '_' → logprob: -5.511083126068115
    3. '
' → logprob: -5.636083126068115
    4. '\' → logprob: -6.511083126068115
    5. '<|end|>' → logprob: -7.011083126068115
    6. '

' → logprob: -7.761083126068115
    7. '```' → logprob: -8.761082649230957
    8. '_def' → logprob: -9.136082649230957
    9. ' def' → logprob: -9.261082649230957
    10. '\n' → logprob: -9.761082649230957

Token 50: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.4071418046951294
    2. ' main' → logprob: -1.4071418046951294
    3. 'read' → logprob: -3.53214168548584
    4. ' process' → logprob: -3.65714168548584
    5. 'main' → logprob: -4.78214168548584
    6. ' solve' → logprob: -4.90714168548584
    7. ' calculate' → logprob: -5.53214168548584
    8. 'process' → logprob: -5.90714168548584
    9. ' fill' → logprob: -6.03214168548584
    10. ' sum' → logprob: -6.28214168548584

Token 51: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00013285996101330966
    2. '_' → logprob: -9.00013256072998
    3. '_val' → logprob: -12.12513256072998
    4. '_values' → logprob: -13.37513256072998
    5. '_input' → logprob: -13.75013256072998
    6. '_Value' → logprob: -14.37513256072998
    7. '_variable' → logprob: -15.12513256072998
    8. '_VALUE' → logprob: -15.87513256072998
    9. 'value' → logprob: -16.000133514404297
    10. ' _' → logprob: -16.125133514404297

Token 52: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00010616567305987701
    2. '()' → logprob: -9.250105857849121
    3. '():
' → logprob: -12.250105857849121
    4. ' ():' → logprob: -12.875105857849121
    5. '(' → logprob: -13.250105857849121
    6. '()>' → logprob: -14.875105857849121
    7. ' ()' → logprob: -15.875105857849121
    8. '():

' → logprob: -16.000106811523438
    9. '()">' → logprob: -16.000106811523438
    10. '()*' → logprob: -17.125106811523438

Token 53: '   ' (ID: 271)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.256517618894577
    2. '   ' → logprob: -1.5065176486968994
    3. ' int' → logprob: -5.75651741027832
    4. 'return' → logprob: -6.88151741027832
    5. '(int' → logprob: -8.38151741027832
    6. ' return' → logprob: -9.00651741027832
    7. '<int' → logprob: -10.63151741027832
    8. '=int' → logprob: -12.63151741027832
    9. '[int' → logprob: -12.88151741027832
    10. ':int' → logprob: -13.13151741027832

Token 54: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023258639499545097
    2. 'return' (adapté à ' return') → logprob: -3.773258686065674
    3. '   ' → logprob: -12.273258209228516
    4. ' int' → logprob: -12.398258209228516
    5. ' return' → logprob: -12.773258209228516
    6. '<int' → logprob: -14.523258209228516
    7. '[int' → logprob: -15.023258209228516
    8. '(int' → logprob: -15.148258209228516
    9. '=int' → logprob: -15.398258209228516
    10. '```' → logprob: -16.648258209228516

Token 55: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07889176905155182
    2. 'int' → logprob: -2.5788917541503906
    3. ' ' → logprob: -14.20389175415039
    4. '(int' → logprob: -14.45389175415039
    5. '<int' → logprob: -15.20389175415039
    6. '	int' → logprob: -15.95389175415039
    7. ' in' → logprob: -16.07889175415039
    8. '   ' → logprob: -16.45389175415039
    9. '[int' → logprob: -16.57889175415039
    10. '=int' → logprob: -16.70389175415039

Token 56: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02326854318380356
    2. '(' → logprob: -3.773268461227417
    3. ' (' → logprob: -10.773268699645996
    4. '(in' → logprob: -13.898268699645996
    5. '(
' → logprob: -15.023268699645996
    6. 'input' → logprob: -15.023268699645996
    7. '()' → logprob: -15.898268699645996
    8. '(int' → logprob: -16.52326774597168
    9. '(inp' → logprob: -16.64826774597168
    10. '(

' → logprob: -17.02326774597168

Token 57: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007352970424108207
    2. '()' → logprob: -7.250735282897949
    3. '()))' → logprob: -10.87573528289795
    4. ' ())' → logprob: -12.75073528289795
    5. ')' → logprob: -13.37573528289795
    6. '())
' → logprob: -13.62573528289795
    7. '();)' → logprob: -14.75073528289795
    8. '())

' → logprob: -16.125736236572266
    9. '());' → logprob: -16.750736236572266
    10. '()]' → logprob: -16.750736236572266

Token 58: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001679463661275804
    2. '<|end|>' → logprob: -7.001679420471191
    3. 'for' → logprob: -8.376679420471191
    4. '
' → logprob: -9.001679420471191
    5. '```' → logprob: -9.001679420471191
    6. '<|end|>' → logprob: -9.126679420471191
    7. '\' → logprob: -9.751679420471191
    8. '#' → logprob: -10.626679420471191
    9. 'print' → logprob: -11.001679420471191
    10. 'A' → logprob: -11.376679420471191

Token 59: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0030342787504196167
    2. ' solve' → logprob: -6.6280341148376465
    3. ' calculate' → logprob: -7.1280341148376465
    4. ' process' → logprob: -8.128034591674805
    5. ' compute' → logprob: -8.378034591674805
    6. ' find' → logprob: -9.378034591674805
    7. ' read' → logprob: -9.878034591674805
    8. ' run' → logprob: -10.003034591674805
    9. ' def' → logprob: -10.378034591674805
    10. ' write' → logprob: -10.503034591674805

Token 60: '_first' (ID: 29347)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.2652689218521118
    2. '_' → logprob: -1.6402689218521118
    3. '_value' → logprob: -1.8902689218521118
    4. '_sum' → logprob: -2.1402688026428223
    5. '_equal' → logprob: -3.3902688026428223
    6. '_valid' → logprob: -3.7652688026428223
    7. '_max' → logprob: -3.8902688026428223
    8. '_div' → logprob: -3.8902688026428223
    9. '_range' → logprob: -4.015268802642822
    10. '_list' → logprob: -4.140268802642822

Token 61: '_zero' (ID: 53468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013050459325313568
    2. '_upper' → logprob: -5.763050556182861
    3. '_element' → logprob: -6.263050556182861
    4. '_char' → logprob: -6.763050556182861
    5. '_lower' → logprob: -6.888050556182861
    6. '_(' → logprob: -6.888050556182861
    7. '__' → logprob: -7.763050556182861
    8. '_parent' → logprob: -7.888050556182861
    9. '_space' → logprob: -8.138050079345703
    10. '_character' → logprob: -8.138050079345703

Token 62: '(A' (ID: 10706)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02601194567978382
    2. '()' → logprob: -4.151011943817139
    3. '(' → logprob: -4.651011943817139
    4. '_parent' → logprob: -8.901012420654297
    5. '_' → logprob: -9.151012420654297
    6. 's' → logprob: -10.026012420654297
    7. '(:' → logprob: -11.651012420654297
    8. '()>' → logprob: -11.901012420654297
    9. '("("' → logprob: -12.151012420654297
    10. '()(' → logprob: -12.526012420654297

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31873711943626404
    2. '[' → logprob: -1.4437371492385864
    3. ')' → logprob: -3.318737030029297
    4. '[]):' → logprob: -8.443737030029297
    5. ',' → logprob: -8.818737030029297
    6. ' ):' → logprob: -9.193737030029297
    7. '   ' → logprob: -9.193737030029297
    8. '):
' → logprob: -10.943737030029297
    9. ' )' → logprob: -11.068737030029297
    10. ')):' → logprob: -11.318737030029297

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1149075031280518
    2. '(' → logprob: -1.2399075031280518
    3. '():' → logprob: -1.2399075031280518
    4. ':' → logprob: -2.6149075031280518
    5. '(A' → logprob: -4.489907264709473
    6. '):' → logprob: -6.364907264709473
    7. '(
' → logprob: -6.364907264709473
    8. ' return' → logprob: -7.114907264709473
    9. ':
' → logprob: -7.364907264709473
    10. 'if' → logprob: -7.489907264709473

Token 65: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1975063979625702
    2. 'return' (adapté à ' return') → logprob: -2.6975064277648926
    3. ' if' → logprob: -2.8225064277648926
    4. '   ' → logprob: -3.5725064277648926
    5. ' for' → logprob: -4.447506427764893
    6. 'if' → logprob: -4.572506427764893
    7. 'for' → logprob: -6.322506427764893
    8. ' A' → logprob: -7.947506427764893
    9. 'A' → logprob: -9.697505950927734
    10. '```' → logprob: -11.197505950927734

Token 66: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.02402135170996189
    2. 'A' → logprob: -3.7740213871002197
    3. ' len' → logprob: -8.02402114868164
    4. ' ' → logprob: -9.02402114868164
    5. 'len' → logprob: -9.27402114868164
    6. '(A' → logprob: -9.52402114868164
    7. ' not' → logprob: -9.77402114868164
    8. ' (' → logprob: -10.02402114868164
    9. '0' → logprob: -10.14902114868164
    10. '(' → logprob: -12.27402114868164

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.963691804325208e-05
    2. ' [' → logprob: -11.375029563903809
    3. '==' → logprob: -11.625029563903809
    4. ' and' → logprob: -12.500029563903809
    5. '```' → logprob: -13.375029563903809
    6. 'and' → logprob: -14.000029563903809
    7. '.' → logprob: -14.500029563903809
    8. ' ==' → logprob: -15.000029563903809
    9. '[-' → logprob: -15.125029563903809
    10. '!=' → logprob: -15.375029563903809

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. ')' → logprob: -16.625011444091797
    4. '1' → logprob: -17.250011444091797
    5. '[' → logprob: -17.437511444091797
    6. '۰' → logprob: -17.625011444091797
    7. '```' → logprob: -17.750011444091797
    8. ']' → logprob: -17.750011444091797
    9. '   ' → logprob: -18.312511444091797
    10. '
' → logprob: -18.562511444091797

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011773581616580486
    2. ']==' → logprob: -4.511773586273193
    3. ' ]' → logprob: -7.386773586273193
    4. '==' → logprob: -9.386773109436035
    5. '[' → logprob: -11.511773109436035
    6. ' ==' → logprob: -11.761773109436035
    7. ')' → logprob: -13.261773109436035
    8. '']' → logprob: -14.261773109436035
    9. '']==' → logprob: -15.136773109436035
    10. ')]' → logprob: -15.386773109436035

Token 70: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2817853093147278
    2. '==' → logprob: -1.406785249710083
    3. '=' → logprob: -8.281785011291504
    4. ' ' → logprob: -8.656785011291504
    5. ' !=' → logprob: -9.281785011291504
    6. '0' → logprob: -10.031785011291504
    7. '!=' → logprob: -11.031785011291504
    8. '>' → logprob: -11.156785011291504
    9. ' ' → logprob: -11.406785011291504
    10. ' =' → logprob: -11.781785011291504

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014133334159851
    2. ' ' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.701414108276367
    4. '   ' → logprob: -19.701414108276367
    5. '  ' → logprob: -19.826414108276367
    6. '```' → logprob: -20.451414108276367
    7. '1' → logprob: -20.826414108276367
    8. '۰' → logprob: -21.076414108276367
    9. ' ' → logprob: -21.138914108276367
    10. '`' → logprob: -21.263914108276367

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -20.375001907348633
    4. '０' → logprob: -21.625001907348633
    5. '```' → logprob: -22.250001907348633
    6. '٠' → logprob: -22.875001907348633
    7. ''' → logprob: -23.062501907348633
    8. '०' → logprob: -23.125001907348633
    9. '০' → logprob: -23.187501907348633
    10. '  ' → logprob: -23.375001907348633

Token 73: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9171372056007385
    2. '

' → logprob: -1.0421371459960938
    3. '
' → logprob: -1.7921371459960938
    4. '<|end|>' → logprob: -2.5421371459960938
    5. '<|end|>' → logprob: -7.542137145996094
    6. '\' → logprob: -7.792137145996094
    7. '#' → logprob: -7.917137145996094
    8. '\n' → logprob: -8.167137145996094
    9. '```' → logprob: -8.542137145996094
    10. ' def' → logprob: -8.792137145996094

Token 74: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5059165358543396
    2. '
' → logprob: -1.0059165954589844
    3. '<|end|>' → logprob: -4.130916595458984
    4. '

' → logprob: -4.505916595458984
    5. '#' → logprob: -6.755916595458984
    6. '```' → logprob: -7.130916595458984
    7. '\' → logprob: -7.255916595458984
    8. '\n' → logprob: -7.380916595458984
    9. 'd' → logprob: -7.880916595458984
    10. '[' → logprob: -9.130916595458984

Token 75: ' calculate' (ID: 17950)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.26639482378959656
    2. ' main' → logprob: -1.516394853591919
    3. ' is' → logprob: -5.76639461517334
    4. ' def' → logprob: -5.76639461517334
    5. ' find' → logprob: -6.01639461517334
    6. ' process' → logprob: -6.39139461517334
    7. ' solve' → logprob: -6.76639461517334
    8. 'check' → logprob: -7.51639461517334
    9. 'main' → logprob: -8.14139461517334
    10. ' fill' → logprob: -8.26639461517334

Token 76: '_difference' (ID: 123771)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.04439384490251541
    2. '_max' → logprob: -3.66939377784729
    3. '_' → logprob: -5.044394016265869
    4. '_average' → logprob: -6.294394016265869
    5. '_prefix' → logprob: -6.919394016265869
    6. '_factor' → logprob: -6.919394016265869
    7. '_difference' → logprob: -7.044394016265869
    8. '(' → logprob: -7.044394016265869
    9. '_product' → logprob: -7.169394016265869
    10. '_count' → logprob: -7.794394016265869

Token 77: '(a' (ID: 6271)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.10864195227622986
    2. '(' → logprob: -2.3586418628692627
    3. 's' → logprob: -4.858642101287842
    4. '(a' → logprob: -7.608642101287842
    5. '_list' → logprob: -10.358641624450684
    6. '(s' → logprob: -10.608641624450684
    7. ' (' → logprob: -10.858641624450684
    8. '_' → logprob: -11.358641624450684
    9. '(_' → logprob: -11.483641624450684
    10. '_array' → logprob: -12.108641624450684

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9936960935592651
    2. '[' → logprob: -0.9936960935592651
    3. ')' → logprob: -1.6186960935592651
    4. '[i' → logprob: -3.2436962127685547
    5. '1' → logprob: -5.493696212768555
    6. '[A' → logprob: -5.743696212768555
    7. 's' → logprob: -5.868696212768555
    8. '):' → logprob: -6.118696212768555
    9. '_,' → logprob: -6.493696212768555
    10. '_list' → logprob: -6.743696212768555

Token 79: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0548897311091423
    2. ' b' → logprob: -2.929889678955078
    3. ')' → logprob: -12.304889678955078
    4. ')b' → logprob: -13.429889678955078
    5. ' ' → logprob: -14.554889678955078
    6. '   ' → logprob: -15.429889678955078
    7. '<|end|>' → logprob: -15.554889678955078
    8. ' )' → logprob: -15.554889678955078
    9. 'a' → logprob: -15.679889678955078
    10. '>b' → logprob: -16.429889678955078

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019686005543917418
    2. ')' → logprob: -6.2519683837890625
    3. '):
' → logprob: -10.376968383789062
    4. ':' → logprob: -12.751968383789062
    5. ' ):' → logprob: -12.876968383789062
    6. ',' → logprob: -13.876968383789062
    7. ' ' → logprob: -15.126968383789062
    8. '   ' → logprob: -15.126968383789062
    9. '):
' → logprob: -15.251968383789062
    10. '_' → logprob: -15.876968383789062

Token 81: '   ' (ID: 271)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7165150046348572
    2. '   ' → logprob: -1.841515064239502
    3. ' return' → logprob: -2.341515064239502
    4. 'return' → logprob: -2.466515064239502
    5. ' abs' → logprob: -2.716515064239502
    6. 'a' → logprob: -2.841515064239502
    7. 'b' → logprob: -3.216515064239502
    8. ' a' → logprob: -5.216515064239502
    9. ' b' → logprob: -6.341515064239502
    10. '    ' → logprob: -9.216514587402344

Token 82: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21193678677082062
    2. 'abs' → logprob: -2.7119367122650146
    3. ' return' → logprob: -2.8369367122650146
    4. 'b' → logprob: -2.9619367122650146
    5. '   ' → logprob: -4.711936950683594
    6. 'a' → logprob: -5.461936950683594
    7. ' abs' → logprob: -7.086936950683594
    8. ' b' → logprob: -8.836936950683594
    9. ' a' → logprob: -10.711936950683594
    10. '```' → logprob: -12.086936950683594

Token 83: ' a' (ID: 261)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.13753853738307953
    2. 'b' → logprob: -2.137538433074951
    3. ' abs' → logprob: -4.762538433074951
    4. ' a' → logprob: -7.012538433074951
    5. 'a' → logprob: -7.387538433074951
    6. 'abs' → logprob: -7.637538433074951
    7. ' ' → logprob: -11.76253890991211
    8. '   ' → logprob: -14.76253890991211
    9. ' ' → logprob: -15.13753890991211
    10. ' max' → logprob: -15.51253890991211

Token 84: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03809335455298424
    2. ' -' → logprob: -3.288093328475952
    3. '-b' → logprob: -9.913093566894531
    4. ' ' → logprob: -13.288093566894531
    5. ' ' → logprob: -16.28809356689453
    6. '_' → logprob: -16.41309356689453
    7. '+' → logprob: -16.78809356689453
    8. ')' → logprob: -16.78809356689453
    9. ',' → logprob: -17.28809356689453
    10. '-
' → logprob: -17.28809356689453

Token 85: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. '1' → logprob: -17.375553131103516
    4. '<|end|>' → logprob: -18.375553131103516
    5. '	b' → logprob: -19.250553131103516
    6. ' ' → logprob: -19.750553131103516
    7. '>b' → logprob: -20.125553131103516
    8. ')b' → logprob: -20.750553131103516
    9. '2' → logprob: -21.250553131103516
    10. '   ' → logprob: -21.750553131103516

Token 86: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12781579792499542
    2. '

' → logprob: -2.8778157234191895
    3. '<|end|>' → logprob: -3.2528157234191895
    4. '
' → logprob: -3.8778157234191895
    5. '```' → logprob: -6.2528157234191895
    6. '<|end|>' → logprob: -6.8778157234191895
    7. '\n' → logprob: -7.5028157234191895
    8. '\' → logprob: -8.627816200256348
    9. ' def' → logprob: -8.877816200256348
    10. '[' → logprob: -9.377816200256348

Token 87: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032292907126247883
    2. '<|end|>' → logprob: -6.003229141235352
    3. '
' → logprob: -7.878229141235352
    4. '```' → logprob: -9.128229141235352
    5. '#' → logprob: -9.753229141235352
    6. '

' → logprob: -10.128229141235352
    7. '\n' → logprob: -10.128229141235352
    8. ' def' → logprob: -10.378229141235352
    9. '\' → logprob: -10.378229141235352
    10. '<|end|>' → logprob: -10.628229141235352

Token 88: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09292386472225189
    2. ' process' → logprob: -3.467923879623413
    3. 'main' → logprob: -3.717923879623413
    4. ' calculate' → logprob: -4.842923641204834
    5. ' find' → logprob: -5.092923641204834
    6. ' sum' → logprob: -5.592923641204834
    7. ' solve' → logprob: -5.717923641204834
    8. 'process' → logprob: -5.967923641204834
    9. ' check' → logprob: -5.967923641204834
    10. 'calculate' → logprob: -6.342923641204834

Token 89: '_d' (ID: 1565)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11160477995872498
    2. '_list' → logprob: -2.861604690551758
    3. '_input' → logprob: -3.861604690551758
    4. '_array' → logprob: -4.611604690551758
    5. '_data' → logprob: -5.486604690551758
    6. '_first' → logprob: -5.486604690551758
    7. '_values' → logprob: -6.111604690551758
    8. '(' → logprob: -6.361604690551758
    9. '_value' → logprob: -7.236604690551758
    10. '_(' → logprob: -7.486604690551758

Token 90: '_value' (ID: 6734)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.0033314721658825874
    2. 'ef' → logprob: -6.753331661224365
    3. '_list' → logprob: -7.253331661224365
    4. 'ATA' → logprob: -8.128331184387207
    5. 'ifference' → logprob: -8.253331184387207
    6. 'ataset' → logprob: -8.503331184387207
    7. 'atalist' → logprob: -8.628331184387207
    8. 'is' → logprob: -9.878331184387207
    9. 'list' → logprob: -10.128331184387207
    10. 'ay' → logprob: -10.503331184387207

Token 91: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4638948440551758
    2. '(A' → logprob: -1.7138948440551758
    3. '()' → logprob: -2.338894844055176
    4. '(a' → logprob: -2.963894844055176
    5. '(s' → logprob: -4.213894844055176
    6. '():' → logprob: -4.588894844055176
    7. '(D' → logprob: -5.338894844055176
    8. '(_' → logprob: -5.838894844055176
    9. '(value' → logprob: -5.838894844055176
    10. 's' → logprob: -5.963894844055176

Token 92: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14189758896827698
    2. ')' → logprob: -2.766897678375244
    3. ',' → logprob: -2.766897678375244
    4. ' ):' → logprob: -5.891897678375244
    5. '_' → logprob: -6.641897678375244
    6. '_value' → logprob: -7.391897678375244
    7. ' ,' → logprob: -7.766897678375244
    8. ' )' → logprob: -8.391897201538086
    9. '(' → logprob: -8.516897201538086
    10. 's' → logprob: -8.766897201538086

Token 93: ' a' (ID: 261)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.13192270696163177
    2. ' N' → logprob: -3.006922721862793
    3. 'A' → logprob: -3.131922721862793
    4. ' a' → logprob: -4.381922721862793
    5. 'N' → logprob: -5.381922721862793
    6. ' ' → logprob: -5.506922721862793
    7. ' n' → logprob: -5.881922721862793
    8. 'a' → logprob: -6.131922721862793
    9. ' b' → logprob: -7.131922721862793
    10. ' )' → logprob: -7.381922721862793

Token 94: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005652409512549639
    2. '):' → logprob: -5.75565242767334
    3. ')' → logprob: -6.38065242767334
    4. ',b' → logprob: -7.75565242767334
    5. ' ,' → logprob: -9.63065242767334
    6. ' ' → logprob: -10.25565242767334
    7. '_,' → logprob: -10.38065242767334
    8. '_values' → logprob: -10.63065242767334
    9. '_value' → logprob: -10.75565242767334
    10. ',a' → logprob: -10.88065242767334

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40259844064712524
    2. '):' → logprob: -1.1525983810424805
    3. ')' → logprob: -4.2775983810424805
    4. '_,' → logprob: -8.02759838104248
    5. '):
' → logprob: -8.15259838104248
    6. ' ):' → logprob: -8.65259838104248
    7. 's' → logprob: -9.02759838104248
    8. '_' → logprob: -9.02759838104248
    9. ' ,' → logprob: -9.15259838104248
    10. ',i' → logprob: -9.40259838104248

Token 96: ' ans' (ID: 3345)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6597391963005066
    2. 'a' → logprob: -1.9097392559051514
    3. 'i' → logprob: -2.4097392559051514
    4. ' b' → logprob: -2.6597392559051514
    5. 'prev' → logprob: -2.9097392559051514
    6. ' prev' → logprob: -4.034739017486572
    7. ' a' → logprob: -4.159739017486572
    8. 'p' → logprob: -4.409739017486572
    9. ' i' → logprob: -4.534739017486572
    10. 'd' → logprob: -4.784739017486572

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021168719977140427
    2. ',' → logprob: -4.1461687088012695
    3. '[]):' → logprob: -5.7711687088012695
    4. ')' → logprob: -7.2711687088012695
    5. '[' → logprob: -8.02116870880127
    6. 's' → logprob: -8.89616870880127
    7. '[i' → logprob: -9.14616870880127
    8. '_' → logprob: -9.39616870880127
    9. '[]' → logprob: -9.39616870880127
    10. '_i' → logprob: -9.77116870880127

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05842670053243637
    2. ' if' → logprob: -3.18342661857605
    3. ':' → logprob: -4.558426856994629
    4. 'if' → logprob: -6.933426856994629
    5. '[' → logprob: -7.058426856994629
    6. ':
' → logprob: -7.808426856994629
    7. '+' → logprob: -7.808426856994629
    8. '[]' → logprob: -8.558426856994629
    9. ' +' → logprob: -8.683426856994629
    10. ' =' → logprob: -8.808426856994629

Token 99: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17560502886772156
    2. '   ' → logprob: -2.550605058670044
    3. 'if' (adapté à ' if') → logprob: -2.550605058670044
    4. ' ans' → logprob: -6.050604820251465
    5. ' return' → logprob: -6.300604820251465
    6. 'return' → logprob: -7.800604820251465
    7. ' for' → logprob: -9.050604820251465
    8. 'ans' → logprob: -9.300604820251465
    9. '    ' → logprob: -10.425604820251465
    10. 'for' → logprob: -10.550604820251465

Token 100: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.011399462819099426
    2. 'd' → logprob: -4.511399269104004
    3. ' (' → logprob: -9.511399269104004
    4. ' ' → logprob: -9.511399269104004
    5. ' not' → logprob: -9.886399269104004
    6. '(d' → logprob: -10.136399269104004
    7. ' a' → logprob: -10.261399269104004
    8. ' ' → logprob: -11.136399269104004
    9. ' calculate' → logprob: -11.136399269104004
    10. '(' → logprob: -11.511399269104004

Token 101: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7867459058761597
    2. ' >' → logprob: -0.7867459058761597
    3. ' <' → logprob: -3.786746025085449
    4. '<' → logprob: -4.036746025085449
    5. '==' → logprob: -4.036746025085449
    6. ' ==' → logprob: -4.786746025085449
    7. ' <=' → logprob: -5.161746025085449
    8. ' >=' → logprob: -5.536746025085449
    9. '<=' → logprob: -5.536746025085449
    10. '>=' → logprob: -5.786746025085449

Token 102: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7021032571792603
    2. ' ' → logprob: -0.7021032571792603
    3. 'a' → logprob: -5.452103137969971
    4. ' a' → logprob: -6.077103137969971
    5. '1' → logprob: -6.702103137969971
    6. '=' → logprob: -7.327103137969971
    7. 'ans' → logprob: -9.577103614807129
    8. '-' → logprob: -9.702103614807129
    9. '10' → logprob: -9.952103614807129
    10. ' -' → logprob: -9.952103614807129

Token 103: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007228442933410406
    2. ' ' → logprob: -5.632228374481201
    3. 'a' → logprob: -6.632228374481201
    4. '1' → logprob: -6.632228374481201
    5. '-' → logprob: -7.757228374481201
    6. '2' → logprob: -9.63222885131836
    7. '10' → logprob: -9.63222885131836
    8. '3' → logprob: -9.88222885131836
    9. '9' → logprob: -10.00722885131836
    10. '5' → logprob: -10.00722885131836

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04173212870955467
    2. ' and' → logprob: -3.2917320728302
    3. ':
' → logprob: -5.791732311248779
    4. ' :' → logprob: -8.041731834411621
    5. ' or' → logprob: -9.416731834411621
    6. 'and' → logprob: -9.416731834411621
    7. '   ' → logprob: -9.916731834411621
    8. '    ' → logprob: -10.541731834411621
    9. ' ' → logprob: -11.166731834411621
    10. ' :
' → logprob: -11.416731834411621

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008172504603862762
    2. '   ' → logprob: -8.25081729888916
    3. ':' → logprob: -9.37581729888916
    4. ':
' → logprob: -9.87581729888916
    5. '
' → logprob: -10.00081729888916
    6. ' ans' → logprob: -10.00081729888916
    7. '        
' → logprob: -10.12581729888916
    8. ' ' → logprob: -10.62581729888916
    9. ')' → logprob: -10.75081729888916
    10. ',' → logprob: -10.87581729888916

Token 106: ' if' (ID: 538)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1195783019065857
    2. '   ' → logprob: -2.7445783615112305
    3. 'ans' → logprob: -3.8695783615112305
    4. '       ' → logprob: -4.3695783615112305
    5. ' return' → logprob: -5.2445783615112305
    6. ' if' → logprob: -5.4945783615112305
    7. '	ans' → logprob: -6.2445783615112305
    8. ' for' → logprob: -6.4945783615112305
    9. 'return' → logprob: -7.3695783615112305
    10. 'if' (adapté à ' if') → logprob: -8.24457836151123

Token 107: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.46706345677375793
    2. ' ans' → logprob: -1.9670634269714355
    3. 'a' → logprob: -2.2170634269714355
    4. ' d' → logprob: -2.5920634269714355
    5. 'd' → logprob: -3.7170634269714355
    6. 'ans' → logprob: -4.2170634269714355
    7. ' not' → logprob: -5.4670634269714355
    8. ' check' → logprob: -5.9670634269714355
    9. '(ans' → logprob: -7.0920634269714355
    10. 'check' → logprob: -7.4670634269714355

Token 108: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00016957100888248533
    2. '[i' → logprob: -8.75016975402832
    3. '[' → logprob: -11.75016975402832
    4. '[_' → logprob: -13.50016975402832
    5. 'i' → logprob: -14.12516975402832
    6. 's' → logprob: -15.00016975402832
    7. '```' → logprob: -16.50016975402832
    8. '_j' → logprob: -16.87516975402832
    9. '[I' → logprob: -17.00016975402832
    10. '_' → logprob: -17.00016975402832

Token 109: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9532252550125122
    2. ' >' → logprob: -1.0782252550125122
    3. ' ' → logprob: -2.2032251358032227
    4. ' <' → logprob: -3.3282251358032227
    5. ' !=' → logprob: -3.4532251358032227
    6. ' >=' → logprob: -3.4532251358032227
    7. '==' → logprob: -3.7032251358032227
    8. ' <=' → logprob: -4.203225135803223
    9. '[' → logprob: -4.453225135803223
    10. '>' → logprob: -5.078225135803223

Token 110: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6557226181030273
    2. '0' → logprob: -0.7807226181030273
    3. 'ans' → logprob: -4.905722618103027
    4. ' ans' → logprob: -5.155722618103027
    5. ' -' → logprob: -6.155722618103027
    6. '-' → logprob: -6.280722618103027
    7. '1' → logprob: -6.655722618103027
    8. ' a' → logprob: -6.655722618103027
    9. 'a' → logprob: -6.905722618103027
    10. 'd' → logprob: -7.155722618103027

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034451887011528015
    2. 'ans' → logprob: -4.409451961517334
    3. '-' → logprob: -4.784451961517334
    4. ' ' → logprob: -5.284451961517334
    5. '1' → logprob: -5.659451961517334
    6. 'd' → logprob: -6.159451961517334
    7. 'a' → logprob: -6.409451961517334
    8. ' -' → logprob: -8.284451484680176
    9. '   ' → logprob: -8.784451484680176
    10. ' ans' → logprob: -9.284451484680176

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03832272067666054
    2. ' and' → logprob: -3.413322687149048
    3. ':
' → logprob: -5.788322925567627
    4. 'and' → logprob: -7.038322925567627
    5. ' :' → logprob: -8.038322448730469
    6. ' or' → logprob: -8.288322448730469
    7. ' ' → logprob: -10.038322448730469
    8. '       ' → logprob: -10.413322448730469
    9. '           ' → logprob: -10.413322448730469
    10. ' :
' → logprob: -11.788322448730469

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010479146614670753
    2. ':' → logprob: -4.885478973388672
    3. ':
' → logprob: -6.635478973388672
    4. '               ' → logprob: -7.760478973388672
    5. '
' → logprob: -8.010478973388672
    6. '       ' → logprob: -8.135478973388672
    7. ' and' → logprob: -8.385478973388672
    8. ',' → logprob: -10.260478973388672
    9. '          ' → logprob: -10.510478973388672
    10. '	       ' → logprob: -10.510478973388672

Token 114: ' return' (ID: 622)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.22987931966781616
    2. '               ' → logprob: -1.854879379272461
    3. '           ' → logprob: -3.229879379272461
    4. 'ans' → logprob: -5.479879379272461
    5. ' return' → logprob: -6.479879379272461
    6. '       ' → logprob: -7.229879379272461
    7. '	ans' → logprob: -7.229879379272461
    8. ' if' → logprob: -7.604879379272461
    9. '   ' → logprob: -7.729879379272461
    10. '(ans' → logprob: -8.354879379272461

Token 115: ' False' (ID: 7983)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4287163317203522
    2. ' ans' → logprob: -1.1787163019180298
    3. '-' → logprob: -4.05371618270874
    4. '(ans' → logprob: -5.42871618270874
    5. '0' → logprob: -5.55371618270874
    6. ' -' → logprob: -5.67871618270874
    7. '1' → logprob: -5.92871618270874
    8. 'False' → logprob: -6.30371618270874
    9. 'None' → logprob: -6.42871618270874
    10. 'True' → logprob: -6.80371618270874

Token 116: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2612210214138031
    2. '<|end|>' → logprob: -1.7612210512161255
    3. '   ' → logprob: -3.761220932006836
    4. '
' → logprob: -4.136220932006836
    5. ' else' → logprob: -5.761220932006836
    6. ' ' → logprob: -5.761220932006836
    7. ')' → logprob: -5.886220932006836
    8. '<|end|>' → logprob: -6.136220932006836
    9. '\n' → logprob: -6.636220932006836
    10. '    ' → logprob: -7.011220932006836

Token 117: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6947632431983948
    2. ' ans' → logprob: -0.6947632431983948
    3. ' True' → logprob: -7.56976318359375
    4. '0' → logprob: -8.06976318359375
    5. 'True' → logprob: -8.56976318359375
    6. '(ans' → logprob: -8.94476318359375
    7. 'False' → logprob: -9.06976318359375
    8. '	ans' → logprob: -9.31976318359375
    9. ' ' → logprob: -9.69476318359375
    10. ' False' → logprob: -9.69476318359375

Token 118: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5545913577079773
    2. '
' → logprob: -1.554591417312622
    3. '<|end|>' → logprob: -2.804591417312622
    4. '+' → logprob: -3.054591417312622
    5. ',' → logprob: -3.304591417312622
    6. '        
' → logprob: -3.929591417312622
    7. '   ' → logprob: -4.054591178894043
    8. ' +' → logprob: -4.679591178894043
    9. '    
' → logprob: -5.429591178894043
    10. '  
' → logprob: -5.804591178894043

Token 119: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030205946415662766
    2. '
' → logprob: -4.030205726623535
    3. '        
' → logprob: -4.905205726623535
    4. '<|end|>' → logprob: -6.655205726623535
    5. '   ' → logprob: -7.030205726623535
    6. '    
' → logprob: -7.780205726623535
    7. ' ' → logprob: -8.155205726623535
    8. ',' → logprob: -8.280205726623535
    9. '\n' → logprob: -8.780205726623535
    10. '  
' → logprob: -8.905205726623535

Token 120: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13214373588562012
    2. ' else' → logprob: -3.50714373588562
    3. '       ' → logprob: -3.63214373588562
    4. 'else' → logprob: -3.88214373588562
    5. '
' → logprob: -4.007143974304199
    6. 'elif' (adapté à ' elif') → logprob: -4.882143974304199
    7. '    
' → logprob: -5.132143974304199
    8. '<|end|>' → logprob: -5.132143974304199
    9. ' elif' → logprob: -6.132143974304199
    10. '    ' → logprob: -6.632143974304199

Token 121: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0132924634963274
    2. ' a' → logprob: -4.88829231262207
    3. 'd' → logprob: -5.76329231262207
    4. ' ' → logprob: -6.26329231262207
    5. ' not' → logprob: -8.13829231262207
    6. '    ' → logprob: -9.26329231262207
    7. 'a' → logprob: -9.76329231262207
    8. ' True' → logprob: -10.32579231262207
    9. '   ' → logprob: -10.70079231262207
    10. ' (' → logprob: -11.13829231262207

Token 122: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.41551464796066284
    2. '==' → logprob: -1.1655147075653076
    3. ' >' → logprob: -4.0405144691467285
    4. '>' → logprob: -5.5405144691467285
    5. ' <=' → logprob: -6.1655144691467285
    6. ' <' → logprob: -6.4155144691467285
    7. ' ' → logprob: -6.7905144691467285
    8. ' >=' → logprob: -7.5405144691467285
    9. '<=' → logprob: -7.9155144691467285
    10. '=' → logprob: -8.040514945983887

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43759486079216003
    2. '0' → logprob: -1.5625948905944824
    3. ' ' → logprob: -1.9375948905944824
    4. '2' → logprob: -7.312594890594482
    5. ' -' → logprob: -10.312594413757324
    6. '-' → logprob: -10.562594413757324
    7. '  ' → logprob: -10.687594413757324
    8. '
' → logprob: -12.562594413757324
    9. '=' → logprob: -12.750094413757324
    10. '3' → logprob: -13.187594413757324

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3932778835296631
    2. '0' → logprob: -1.143277883529663
    3. ' ' → logprob: -5.268278121948242
    4. '2' → logprob: -7.143278121948242
    5. '-' → logprob: -7.893278121948242
    6. ' -' → logprob: -10.018278121948242
    7. '3' → logprob: -12.080778121948242
    8. '  ' → logprob: -12.330778121948242
    9. '   ' → logprob: -13.205778121948242
    10. '10' → logprob: -13.580778121948242

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11331396549940109
    2. ':
' → logprob: -2.238313913345337
    3. ' and' → logprob: -8.613313674926758
    4. '       ' → logprob: -8.738313674926758
    5. '   ' → logprob: -9.738313674926758
    6. ' or' → logprob: -10.488313674926758
    7. ',' → logprob: -10.988313674926758
    8. 'and' → logprob: -11.613313674926758
    9. '):
' → logprob: -11.863313674926758
    10. ':
' → logprob: -11.863313674926758

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038640473037958145
    2. ':
' → logprob: -3.7886404991149902
    3. ':' → logprob: -4.41364049911499
    4. ' and' → logprob: -6.03864049911499
    5. 'and' → logprob: -7.66364049911499
    6. '   ' → logprob: -9.788640022277832
    7. '
' → logprob: -9.913640022277832
    8. '):
' → logprob: -10.038640022277832
    9. ',' → logprob: -10.538640022277832
    10. '<|end|>' → logprob: -10.663640022277832

Token 127: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.485831618309021
    2. 'if' → logprob: -1.235831618309021
    3. ' if' → logprob: -3.2358317375183105
    4. '   ' → logprob: -3.3608317375183105
    5. 'ans' (adapté à ' ans') → logprob: -4.7358317375183105
    6. 'return' → logprob: -4.8608317375183105
    7. ' ans' → logprob: -6.2358317375183105
    8. ' return' → logprob: -7.1108317375183105
    9. '           ' → logprob: -7.6108317375183105
    10. '
' → logprob: -9.360831260681152

Token 128: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014643034897744656
    2. '+=' → logprob: -4.38964319229126
    3. ' =' → logprob: -6.26464319229126
    4. '[' → logprob: -9.639642715454102
    5. ' -=' → logprob: -10.264642715454102
    6. '=' → logprob: -10.389642715454102
    7. '.append' → logprob: -10.639642715454102
    8. ' +' → logprob: -10.639642715454102
    9. ' *=' → logprob: -10.889642715454102
    10. '+' → logprob: -11.014642715454102

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5884246230125427
    2. 'a' → logprob: -1.2134246826171875
    3. ' a' → logprob: -2.2134246826171875
    4. ' ' → logprob: -3.3384246826171875
    5. 'calculate' → logprob: -6.7134246826171875
    6. '2' → logprob: -7.7134246826171875
    7. '(a' → logprob: -8.588424682617188
    8. ' calculate' → logprob: -8.838424682617188
    9. '10' → logprob: -9.088424682617188
    10. ' (' → logprob: -9.463424682617188

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4375329911708832
    2. 'a' → logprob: -1.0625330209732056
    3. 'calculate' → logprob: -5.187532901763916
    4. '(a' → logprob: -6.687532901763916
    5. '(' → logprob: -7.312532901763916
    6. '2' → logprob: -7.562532901763916
    7. '10' → logprob: -8.937533378601074
    8. 'max' → logprob: -9.187533378601074
    9. 'd' → logprob: -9.687533378601074
    10. 'abs' → logprob: -9.687533378601074

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25325658917427063
    2. '   ' → logprob: -2.2532565593719482
    3. '<|end|>' → logprob: -2.5032565593719482
    4. ',' → logprob: -4.753256797790527
    5. ' return' → logprob: -5.003256797790527
    6. 'return' → logprob: -5.628256797790527
    7. '	return' → logprob: -5.753256797790527
    8. '<|end|>' → logprob: -5.878256797790527
    9. '    
' → logprob: -6.003256797790527
    10. '       ' → logprob: -6.128256797790527

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2545461356639862
    2. '
' → logprob: -2.3795461654663086
    3. '       ' → logprob: -3.2545461654663086
    4. ',' → logprob: -3.6295461654663086
    5. 'return' → logprob: -3.8795461654663086
    6. ' return' → logprob: -3.8795461654663086
    7. '	return' → logprob: -4.879546165466309
    8. ':return' → logprob: -5.629546165466309
    9. '<|end|>' → logprob: -5.754546165466309
    10. ' else' → logprob: -6.004546165466309

Token 133: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1823536157608032
    2. ' else' → logprob: -1.1823536157608032
    3. 'else' (adapté à ' else') → logprob: -1.9323536157608032
    4. 'return' → logprob: -1.9323536157608032
    5. ' return' → logprob: -2.4323534965515137
    6. 'elif' → logprob: -5.557353496551514
    7. ' elif' → logprob: -6.807353496551514
    8. ':return' → logprob: -7.182353496551514
    9. '	return' → logprob: -7.307353496551514
    10. ',' → logprob: -7.432353496551514

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08030739426612854
    2. ':
' → logprob: -2.5803074836730957
    3. '   ' → logprob: -6.705307483673096
    4. ' :' → logprob: -9.455307006835938
    5. ' if' → logprob: -9.830307006835938
    6. '{' → logprob: -10.955307006835938
    7. ' :
' → logprob: -11.330307006835938
    8. '       ' → logprob: -11.580307006835938
    9. 'if' → logprob: -11.705307006835938
    10. '    ' → logprob: -13.205307006835938

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06212979927659035
    2. '   ' → logprob: -2.9371297359466553
    3. ' return' → logprob: -6.062129974365234
    4. ':' → logprob: -7.062129974365234
    5. ' ans' → logprob: -7.312129974365234
    6. 'return' → logprob: -7.312129974365234
    7. '           ' → logprob: -8.062129974365234
    8. ':
' → logprob: -8.187129974365234
    9. ' False' → logprob: -8.312129974365234
    10. '{
' → logprob: -8.437129974365234

Token 136: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.21536961197853088
    2. 'ans' (adapté à ' ans') → logprob: -1.9653695821762085
    3. 'return' → logprob: -4.090369701385498
    4. ' return' → logprob: -4.590369701385498
    5. ' if' → logprob: -4.840369701385498
    6. '   ' → logprob: -4.965369701385498
    7. 'False' → logprob: -5.840369701385498
    8. '       ' → logprob: -5.965369701385498
    9. 'if' → logprob: -5.965369701385498
    10. '	ans' → logprob: -6.715369701385498

Token 137: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08062826097011566
    2. '+=' → logprob: -3.0806281566619873
    3. ' -=' → logprob: -3.8306281566619873
    4. ' =' → logprob: -5.330628395080566
    5. '=' → logprob: -5.580628395080566
    6. '-=' → logprob: -7.955628395080566
    7. '+' → logprob: -8.205628395080566
    8. ' *=' → logprob: -9.080628395080566
    9. '-' → logprob: -9.205628395080566
    10. '<|end|>' → logprob: -9.330628395080566

Token 138: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5411286950111389
    2. ' a' → logprob: -0.9161286950111389
    3. 'd' → logprob: -5.166128635406494
    4. ' d' → logprob: -5.291128635406494
    5. '0' → logprob: -5.666128635406494
    6. ' ' → logprob: -6.416128635406494
    7. '1' → logprob: -7.291128635406494
    8. '2' → logprob: -7.541128635406494
    9. ' (' → logprob: -8.791129112243652
    10. 'calculate' → logprob: -9.166129112243652

Token 139: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.8193366486229934e-05
    2. '[i' → logprob: -11.375018119812012
    3. 'i' → logprob: -12.125018119812012
    4. '[' → logprob: -13.875018119812012
    5. '[_' → logprob: -15.625018119812012
    6. '_j' → logprob: -18.500019073486328
    7. '­i' → logprob: -18.625019073486328
    8. '_ix' → logprob: -18.750019073486328
    9. '_il' → logprob: -19.000019073486328
    10. 's' → logprob: -19.125019073486328

Token 140: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03961281478404999
    2. '<|end|>' → logprob: -4.289612770080566
    3. '   ' → logprob: -4.414612770080566
    4. ' return' → logprob: -5.789612770080566
    5. 'return' → logprob: -5.789612770080566
    6. '  
' → logprob: -6.289612770080566
    7. ' 
' → logprob: -6.664612770080566
    8. '    
' → logprob: -7.039612770080566
    9. '\n' → logprob: -7.289612770080566
    10. '
' → logprob: -7.289612770080566

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008581835776567459
    2. ' return' → logprob: -5.258581638336182
    3. 'return' → logprob: -6.133581638336182
    4. '
' → logprob: -8.00858211517334
    5. '    
' → logprob: -8.00858211517334
    6. '	return' → logprob: -8.13358211517334
    7. '       ' → logprob: -8.88358211517334
    8. ',' → logprob: -10.88358211517334
    9. ' 
' → logprob: -11.50858211517334
    10. '```' → logprob: -11.50858211517334

Token 142: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6067795753479004
    2. '   ' → logprob: -1.3567795753479004
    3. 'return' (adapté à ' return') → logprob: -1.8567795753479004
    4. '
' → logprob: -3.3567795753479004
    5. '	return' → logprob: -6.1067795753479
    6. ' ' → logprob: -6.7317795753479
    7. '    
' → logprob: -6.8567795753479
    8. ',' → logprob: -7.8567795753479
    9. ' 
' → logprob: -7.8567795753479
    10. '<|end|>' → logprob: -7.8567795753479

Token 143: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.09107924997806549
    2. ' True' → logprob: -2.5910792350769043
    3. '(True' → logprob: -4.466079235076904
    4. 'False' → logprob: -7.966079235076904
    5. 'ans' → logprob: -9.091079711914062
    6. ' ans' → logprob: -9.341079711914062
    7. ' (' → logprob: -10.341079711914062
    8. '(ans' → logprob: -10.591079711914062
    9. '(' → logprob: -11.966079711914062
    10. '(False' → logprob: -12.091079711914062

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ' ans' → logprob: -15.250003814697266
    4. '(ans' → logprob: -16.625003814697266
    5. ',int' → logprob: -17.250003814697266
    6. '<|end|>' → logprob: -17.375003814697266
    7. ',
' → logprob: -17.750003814697266
    8. '[' → logprob: -17.750003814697266
    9. '‌,' → logprob: -17.875003814697266
    10. '_ans' → logprob: -18.875003814697266

Token 145: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.47408339381217957
    2. ' ans' → logprob: -0.974083423614502
    3. '(ans' → logprob: -12.099082946777344
    4. '	ans' → logprob: -14.349082946777344
    5. '_ans' → logprob: -15.599082946777344
    6. 'Ans' → logprob: -17.974082946777344
    7. 'ANS' → logprob: -18.724082946777344
    8. 'anst' → logprob: -19.224082946777344
    9. 'answer' → logprob: -19.724082946777344
    10. ' Ans' → logprob: -20.224082946777344

Token 146: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00597572373226285
    2. '<|end|>' → logprob: -5.255975723266602
    3. '
' → logprob: -7.755975723266602
    4. ' def' → logprob: -8.505975723266602
    5. '<|end|>' → logprob: -10.630975723266602
    6. '```' → logprob: -11.005975723266602
    7. '

' → logprob: -11.005975723266602
    8. '#' → logprob: -11.005975723266602
    9. '\n' → logprob: -12.130975723266602
    10. '\' → logprob: -12.255975723266602

Token 147: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.963691804325208e-05
    2. '#' → logprob: -10.625029563903809
    3. ' def' → logprob: -13.000029563903809
    4. '<|end|>' → logprob: -13.500029563903809
    5. '```' → logprob: -14.125029563903809
    6. 'ndef' → logprob: -15.500029563903809
    7. '
' → logprob: -15.875029563903809
    8. 'import' → logprob: -16.250030517578125
    9. '[' → logprob: -16.500030517578125
    10. 'de' → logprob: -16.625030517578125

Token 148: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13830111920833588
    2. 'main' → logprob: -2.263301134109497
    3. ' solve' → logprob: -4.513300895690918
    4. 'solve' → logprob: -5.513300895690918
    5. ' process' → logprob: -6.013300895690918
    6. ' count' → logprob: -6.013300895690918
    7. ' find' → logprob: -6.513300895690918
    8. 'process' → logprob: -6.638300895690918
    9. 'count' → logprob: -7.263300895690918
    10. 'calculate' → logprob: -7.763300895690918

Token 149: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.1869308054447174
    2. '_answer' → logprob: -2.1869308948516846
    3. '(' → logprob: -3.9369308948516846
    4. '_results' → logprob: -4.4369306564331055
    5. '_' → logprob: -4.6869306564331055
    6. '_ans' → logprob: -4.9369306564331055
    7. '_final' → logprob: -5.3119306564331055
    8. '_output' → logprob: -5.5619306564331055
    9. '_(' → logprob: -8.061930656433105
    10. '(_' → logprob: -8.186930656433105

Token 150: '(pos' (ID: 24566)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2325562685728073
    2. '(ans' → logprob: -2.1075563430786133
    3. '()' → logprob: -2.4825563430786133
    4. '():' → logprob: -6.982556343078613
    5. '(result' → logprob: -7.357556343078613
    6. '(answer' → logprob: -8.607556343078613
    7. '(()' → logprob: -8.982556343078613
    8. '(a' → logprob: -9.732556343078613
    9. '(s' → logprob: -9.857556343078613
    10. ' (' → logprob: -9.982556343078613

Token 151: 'sible' (ID: 15301)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.6945016384124756
    2. 'itive' → logprob: -1.4445016384124756
    3. ')' → logprob: -1.9445016384124756
    4. 'sible' → logprob: -2.9445016384124756
    5. 'itions' → logprob: -4.194501876831055
    6. 'itivity' → logprob: -4.319501876831055
    7. 'itional' → logprob: -4.569501876831055
    8. '):' → logprob: -4.819501876831055
    9. 's' → logprob: -5.194501876831055
    10. 'itives' → logprob: -5.819501876831055

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026477135252207518
    2. '):
' → logprob: -6.877647876739502
    3. '):' → logprob: -7.252647876739502
    4. ')' → logprob: -7.252647876739502
    5. ' ,' → logprob: -9.502647399902344
    6. 'possible' → logprob: -10.627647399902344
    7. ',result' → logprob: -10.877647399902344
    8. '):

' → logprob: -10.877647399902344
    9. '),' → logprob: -11.627647399902344
    10. ',pos' → logprob: -11.752647399902344

Token 153: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5759918093681335
    2. 'ans' → logprob: -0.8259918093681335
    3. ')' → logprob: -10.7009916305542
    4. '(ans' → logprob: -10.7009916305542
    5. '	ans' → logprob: -13.2009916305542
    6. 'answer' → logprob: -13.9509916305542
    7. 'result' → logprob: -14.0759916305542
    8. ' )' → logprob: -14.0759916305542
    9. '"' → logprob: -14.0759916305542
    10. '_ans' → logprob: -14.3259916305542

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03808864951133728
    2. '):
' → logprob: -3.28808856010437
    3. ')' → logprob: -10.53808879852295
    4. '):
' → logprob: -10.91308879852295
    5. ' ):' → logprob: -13.91308879852295
    6. '):

' → logprob: -14.03808879852295
    7. ':' → logprob: -14.66308879852295
    8. '():
' → logprob: -16.038087844848633
    9. '():' → logprob: -16.288087844848633
    10. ',' → logprob: -16.913087844848633

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.286852345103398e-05
    2. '(' → logprob: -11.125042915344238
    3. ' if' → logprob: -11.250042915344238
    4. 'if' → logprob: -11.375042915344238
    5. 'print' → logprob: -13.250042915344238
    6. ' print' → logprob: -14.250042915344238
    7. ':' → logprob: -14.875042915344238
    8. '   ' → logprob: -14.875042915344238
    9. '    
' → logprob: -15.125042915344238
    10. '```' → logprob: -15.875042915344238

Token 156: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10249242186546326
    2. ' if' → logprob: -2.352492332458496
    3. 'print' → logprob: -6.352492332458496
    4. '   ' → logprob: -7.602492332458496
    5. ' print' → logprob: -10.102492332458496
    6. 'def' → logprob: -14.852492332458496
    7. '```' → logprob: -16.352493286132812
    8. '    
' → logprob: -17.102493286132812
    9. 'for' → logprob: -17.852493286132812
    10. 'import' → logprob: -18.477493286132812

Token 157: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.003836778923869133
    2. ' not' → logprob: -5.878836631774902
    3. 'possible' → logprob: -6.878836631774902
    4. ' ' → logprob: -14.253836631774902
    5. 'Possible' → logprob: -14.378836631774902
    6. '_possible' → logprob: -14.628836631774902
    7. ' posible' → logprob: -15.503836631774902
    8. 'not' → logprob: -15.878836631774902
    9. ' possibile' → logprob: -17.00383758544922
    10. ' ' → logprob: -17.50383758544922

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00029756641015410423
    2. ':
' → logprob: -8.125297546386719
    3. '==' → logprob: -13.625297546386719
    4. ' :' → logprob: -16.62529754638672
    5. '):' → logprob: -16.87529754638672
    6. 'and' → logprob: -17.00029754638672
    7. ' ==' → logprob: -17.12529754638672
    8. ':

' → logprob: -17.25029754638672
    9. ':
' → logprob: -17.37529754638672
    10. 'else' → logprob: -18.12529754638672

Token 159: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026033641770482063
    2. ':
' → logprob: -6.502603530883789
    3. '   ' → logprob: -7.627603530883789
    4. '       ' → logprob: -7.627603530883789
    5. ' :' → logprob: -9.752603530883789
    6. ' and' → logprob: -10.502603530883789
    7. '    ' → logprob: -11.002603530883789
    8. '():' → logprob: -11.752603530883789
    9. '):' → logprob: -12.252603530883789
    10. ',' → logprob: -13.252603530883789

Token 160: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009264685213565826
    2. ' print' → logprob: -7.000926494598389
    3. '   ' → logprob: -11.12592601776123
    4. '       ' → logprob: -15.62592601776123
    5. '```' → logprob: -16.875926971435547
    6. 'pr' → logprob: -17.500926971435547
    7. '    ' → logprob: -19.125926971435547
    8. '	print' → logprob: -19.375926971435547
    9. 'printf' → logprob: -19.500926971435547
    10. 'prin' → logprob: -19.875926971435547

Token 161: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -11.000027656555176
    3. 'ans' → logprob: -11.500027656555176
    4. ' ans' → logprob: -14.875027656555176
    5. ' (' → logprob: -15.375027656555176
    6. '("' → logprob: -16.75002670288086
    7. '	ans' → logprob: -16.75002670288086
    8. '(abs' → logprob: -17.25002670288086
    9. '('' → logprob: -17.50002670288086
    10. '()' → logprob: -17.87502670288086

Token 162: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0005713827558793128
    2. ')' → logprob: -7.500571250915527
    3. '   ' → logprob: -11.000571250915527
    4. ')
' → logprob: -13.625571250915527
    5. ' )
' → logprob: -15.000571250915527
    6. '())
' → logprob: -16.500572204589844
    7. '")
' → logprob: -17.250572204589844
    8. '')
' → logprob: -17.375572204589844
    9. ')

' → logprob: -17.750572204589844
    10. ' ' → logprob: -17.875572204589844

Token 163: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.002448542509227991
    2. '   ' → logprob: -6.127448558807373
    3. ' else' → logprob: -8.252448081970215
    4. 'elif' → logprob: -13.377448081970215
    5. '	else' → logprob: -14.502448081970215
    6. '<|end|>' → logprob: -14.752448081970215
    7. '_else' → logprob: -16.50244903564453
    8. 'elser' → logprob: -16.62744903564453
    9. '  ' → logprob: -16.87744903564453
    10. '```' → logprob: -17.37744903564453

Token 164: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -8.828512363834307e-05
    2. ' else' → logprob: -9.375088691711426
    3. '   ' → logprob: -12.625088691711426
    4. 'elif' → logprob: -16.25008773803711
    5. '	else' → logprob: -16.75008773803711
    6. 'elser' → logprob: -17.75008773803711
    7. 'elses' → logprob: -17.87508773803711
    8. ' ' → logprob: -18.62508773803711
    9. '```' → logprob: -18.87508773803711
    10. '_else' → logprob: -19.00008773803711

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00150390958879143
    2. ':
' → logprob: -6.501503944396973
    3. ' :' → logprob: -14.376503944396973
    4. '   ' → logprob: -15.376503944396973
    5. ':

' → logprob: -15.376503944396973
    6. '():' → logprob: -16.001502990722656
    7. ',' → logprob: -16.501502990722656
    8. '<|end|>' → logprob: -16.626502990722656
    9. ':
' → logprob: -16.751502990722656
    10. '():
' → logprob: -16.751502990722656

Token 166: '       ' (ID: 309)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3631811738014221
    2. '   ' → logprob: -1.2381811141967773
    3. 'print' → logprob: -4.363181114196777
    4. '    ' → logprob: -6.863181114196777
    5. '       ' → logprob: -7.113181114196777
    6. '	print' → logprob: -11.238181114196777
    7. '    
' → logprob: -11.738181114196777
    8. ' ' → logprob: -12.863181114196777
    9. '(' → logprob: -13.738181114196777
    10. '     ' → logprob: -13.988181114196777

Token 167: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008616581559181213
    2. ' print' → logprob: -4.7586164474487305
    3. '   ' → logprob: -13.25861644744873
    4. '	print' → logprob: -15.88361644744873
    5. 'pr' → logprob: -16.383617401123047
    6. '```' → logprob: -17.758617401123047
    7. '    ' → logprob: -18.008617401123047
    8. 'prit' → logprob: -18.383617401123047
    9. 'prin' → logprob: -18.508617401123047
    10. 'pass' → logprob: -18.508617401123047

Token 168: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3274472951889038
    2. '("' → logprob: -1.3274472951889038
    3. '(' → logprob: -4.327447414398193
    4. '-' → logprob: -8.077446937561035
    5. '('' → logprob: -8.202446937561035
    6. '("-' → logprob: -8.327446937561035
    7. '(":' → logprob: -9.952446937561035
    8. '("?' → logprob: -12.827446937561035
    9. '(
' → logprob: -13.452446937561035
    10. '0' → logprob: -13.702446937561035

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'ans' → logprob: -19.375
    3. ' ' → logprob: -19.875
    4. '１' → logprob: -22.375
    5. '3' → logprob: -22.625
    6. '-' → logprob: -22.625
    7. '```' → logprob: -22.625
    8. '2' → logprob: -22.75
    9. '   ' → logprob: -23.5
    10. '۱' → logprob: -23.625

Token 170: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.375
    3. '))' → logprob: -18.75
    4. ')`' → logprob: -19.375
    5. ' )' → logprob: -19.5
    6. ')

' → logprob: -20.875
    7. '`)' → logprob: -21.0
    8. ')}' → logprob: -21.5
    9. '')' → logprob: -21.5
    10. '),' → logprob: -22.0

Token 171: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.935296834039036e-06
    2. 'if' → logprob: -13.25000286102295
    3. '#' → logprob: -13.87500286102295
    4. '```' → logprob: -15.75000286102295
    5. ' def' → logprob: -16.750003814697266
    6. 'ndef' → logprob: -19.500003814697266
    7. '<|end|>' → logprob: -19.875003814697266
    8. '
' → logprob: -19.875003814697266
    9. 'for' → logprob: -20.500003814697266
    10. 'a' → logprob: -21.250003814697266

Token 172: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10021453350782394
    2. ' main' → logprob: -2.3502144813537598
    3. 'def' → logprob: -12.225214958190918
    4. 'solve' → logprob: -13.100214958190918
    5. 'process' → logprob: -14.725214958190918
    6. ' solve' → logprob: -15.850214958190918
    7. '	main' → logprob: -15.850214958190918
    8. 'run' → logprob: -16.6002140045166
    9. 'solution' → logprob: -16.7252140045166
    10. ' def' → logprob: -16.9752140045166

Token 173: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1398757123970427e-05
    2. ' ():' → logprob: -11.875011444091797
    3. '():
' → logprob: -12.500011444091797
    4. '()' → logprob: -14.500011444091797
    5. '_' → logprob: -16.500011444091797
    6. '():
' → logprob: -16.875011444091797
    7. '(' → logprob: -17.625011444091797
    8. '()>' → logprob: -19.125011444091797
    9. '():

' → logprob: -20.000011444091797
    10. '().' → logprob: -20.250011444091797

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057865116745233536
    2. ' N' → logprob: -3.4328651428222656
    3. 'N' → logprob: -3.8078651428222656
    4. 'n' → logprob: -6.682865142822266
    5. ' size' → logprob: -7.932865142822266
    6. ' n' → logprob: -9.182865142822266
    7. 'size' → logprob: -11.307865142822266
    8. '	N' → logprob: -12.557865142822266
    9. ' ' → logprob: -13.932865142822266
    10. '  ' → logprob: -14.557865142822266

Token 175: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.022809423506259918
    2. 'n' → logprob: -3.8978095054626465
    3. ' N' → logprob: -6.3978095054626465
    4. '   ' → logprob: -7.6478095054626465
    5. ' n' → logprob: -9.897809028625488
    6. 'size' → logprob: -10.147809028625488
    7. '    
' → logprob: -11.522809028625488
    8. '
' → logprob: -12.147809028625488
    9. ' ' → logprob: -12.772809028625488
    10. 't' → logprob: -12.897809028625488

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02056746743619442
    2. '=' → logprob: -3.8955674171447754
    3. ',' → logprob: -10.770567893981934
    4. '=int' → logprob: -12.770567893981934
    5. ')' → logprob: -14.395567893981934
    6. ' =
' → logprob: -14.895567893981934
    7. '=input' → logprob: -15.145567893981934
    8. ' ' → logprob: -15.895567893981934
    9. ' ' → logprob: -16.020566940307617
    10. '_' → logprob: -16.895566940307617

Token 177: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.12692978978157043
    2. 'read' → logprob: -2.126929759979248
    3. ' int' → logprob: -13.501930236816406
    4. 'int' → logprob: -15.376930236816406
    5. '	read' → logprob: -16.251930236816406
    6. '   ' → logprob: -17.376930236816406
    7. '(read' → logprob: -18.001930236816406
    8. ' ' → logprob: -18.501930236816406
    9. '_read' → logprob: -19.001930236816406
    10. '  ' → logprob: -19.251930236816406

Token 178: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.36574100604048e-06
    2. '_value' → logprob: -12.500004768371582
    3. '_' → logprob: -15.125004768371582
    4. 'input' → logprob: -15.875004768371582
    5. '_size' → logprob: -16.375003814697266
    6. '_line' → logprob: -17.250003814697266
    7. '_in' → logprob: -17.250003814697266
    8. '_output' → logprob: -17.375003814697266
    9. '_int' → logprob: -17.625003814697266
    10. '
' → logprob: -18.250003814697266

Token 179: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -2.856408536899835e-05
    2. '_' → logprob: -11.000028610229492
    3. '()' → logprob: -12.000028610229492
    4. 'size' → logprob: -12.500028610229492
    5. '_value' → logprob: -14.000028610229492
    6. '_SIZE' → logprob: -14.375028610229492
    7. '_s' → logprob: -15.750028610229492
    8. '_line' → logprob: -16.375028610229492
    9. '_Size' → logprob: -16.500028610229492
    10. ' size' → logprob: -16.625028610229492

Token 180: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.700132997939363e-05
    2. '()
' → logprob: -11.000017166137695
    3. ' ()' → logprob: -16.250017166137695
    4. '()

' → logprob: -16.625017166137695
    5. '()
' → logprob: -17.500017166137695
    6. '()\' → logprob: -17.875017166137695
    7. '()`' → logprob: -18.875017166137695
    8. '()"' → logprob: -19.250017166137695
    9. '())' → logprob: -19.375017166137695
    10. '()<' → logprob: -19.625017166137695

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03490441292524338
    2. ' A' → logprob: -3.9099044799804688
    3. 'A' → logprob: -4.284904479980469
    4. '<|end|>' → logprob: -7.909904479980469
    5. '	A' → logprob: -9.409904479980469
    6. '    
' → logprob: -11.909904479980469
    7. '```' → logprob: -12.034904479980469
    8. '  ' → logprob: -12.159904479980469
    9. ' ' → logprob: -12.534904479980469
    10. '   ' → logprob: -12.534904479980469

Token 182: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -1.1279553291387856e-05
    2. ' A' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.750011444091797
    4. 'a' → logprob: -17.000011444091797
    5. '```' → logprob: -18.000011444091797
    6. '  ' → logprob: -18.875011444091797
    7. '	A' → logprob: -19.250011444091797
    8. 'ans' → logprob: -19.375011444091797
    9. '    
' → logprob: -19.500011444091797
    10. ' ' → logprob: -19.875011444091797

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016038591042160988
    2. '=' → logprob: -4.141038417816162
    3. ',' → logprob: -12.39103889465332
    4. '[' → logprob: -16.64103889465332
    5. ' ' → logprob: -16.89103889465332
    6. ' ,' → logprob: -17.26603889465332
    7. ' =
' → logprob: -18.14103889465332
    8. ' ' → logprob: -18.64103889465332
    9. '＝' → logprob: -18.64103889465332
    10. '=create' → logprob: -18.76603889465332

Token 184: ' init' (ID: 6327)
  Prédit: ' init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' init' → logprob: -0.1602308303117752
    2. 'init' → logprob: -1.9102308750152588
    3. '_init' → logprob: -12.78523063659668
    4. '(init' → logprob: -13.28523063659668
    5. '	init' → logprob: -14.66023063659668
    6. '[' → logprob: -14.78523063659668
    7. ' [' → logprob: -14.91023063659668
    8. '/init' → logprob: -15.41023063659668
    9. ' ' → logprob: -15.78523063659668
    10. ':init' → logprob: -15.91023063659668

Token 185: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.0
    3. 'List' → logprob: -17.375
    4. '_array' → logprob: -17.5
    5. 'list' → logprob: -17.625
    6. '_lists' → logprob: -17.625
    7. '_List' → logprob: -17.875
    8. ' _' → logprob: -18.0
    9. '(A' → logprob: -18.0
    10. '_l' → logprob: -18.875

Token 186: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.600714161526412e-05
    2. '(' → logprob: -9.500076293945312
    3. ' (' → logprob: -14.250076293945312
    4. 'N' → logprob: -14.875076293945312
    5. '(
' → logprob: -17.000076293945312
    6. '(size' → logprob: -17.750076293945312
    7. '(n' → logprob: -17.875076293945312
    8. '
' → logprob: -18.875076293945312
    9. '```' → logprob: -18.875076293945312
    10. '   ' → logprob: -19.000076293945312

Token 187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018155328929424286
    2. ')
' → logprob: -4.018155097961426
    3. ')
' → logprob: -12.643155097961426
    4. ')

' → logprob: -13.143155097961426
    5. ' )' → logprob: -16.518156051635742
    6. '),' → logprob: -17.643156051635742
    7. '))' → logprob: -18.643156051635742
    8. ')`' → logprob: -19.018156051635742
    9. ' )
' → logprob: -19.018156051635742
    10. ').' → logprob: -19.518156051635742

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8397648930549622
    2. ' A' → logprob: -1.0897648334503174
    3. 'A' → logprob: -1.4647648334503174
    4. ' fill' → logprob: -7.9647650718688965
    5. 'fill' → logprob: -9.089764595031738
    6. '<|end|>' → logprob: -9.464764595031738
    7. ' ' → logprob: -9.839764595031738
    8. 'N' → logprob: -9.964764595031738
    9. 'Fill' → logprob: -10.214764595031738
    10. ' N' → logprob: -10.839764595031738

Token 189: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.06348821520805359
    2. 'fill' → logprob: -2.813488245010376
    3. ' A' → logprob: -6.938488006591797
    4. ' fill' → logprob: -7.563488006591797
    5. 'Fill' → logprob: -11.438488006591797
    6. 'B' → logprob: -12.313488006591797
    7. '   ' → logprob: -12.438488006591797
    8. 'filled' → logprob: -13.063488006591797
    9. '.fill' → logprob: -13.438488006591797
    10. '(fill' → logprob: -13.563488006591797

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16234071552753448
    2. '=' → logprob: -1.912340760231018
    3. ',' → logprob: -6.1623406410217285
    4. ' ,' → logprob: -12.787341117858887
    5. ')' → logprob: -13.662341117858887
    6. '[' → logprob: -13.912341117858887
    7. ' =
' → logprob: -14.787341117858887
    8. '[:]' → logprob: -15.162341117858887
    9. '＝' → logprob: -15.537341117858887
    10. '.' → logprob: -16.03734016418457

Token 191: ' fill' (ID: 6954)
  Prédit: ' fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fill' → logprob: -0.6931489706039429
    2. 'fill' → logprob: -0.6931489706039429
    3. '(fill' → logprob: -13.693148612976074
    4. '_fill' → logprob: -15.193148612976074
    5. '.fill' → logprob: -15.443148612976074
    6. '	fill' → logprob: -15.568148612976074
    7. ' ' → logprob: -18.44314956665039
    8. 'ful' → logprob: -18.69314956665039
    9. 'Fill' → logprob: -18.94314956665039
    10. ' ' → logprob: -18.94314956665039

Token 192: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2471589798224159e-05
    2. '(A' → logprob: -11.375012397766113
    3. '_' → logprob: -14.375012397766113
    4. '_fill' → logprob: -16.00001335144043
    5. '_array' → logprob: -16.50001335144043
    6. '_A' → logprob: -16.75001335144043
    7. 'A' → logprob: -17.12501335144043
    8. '(_' → logprob: -17.12501335144043
    9. '_line' → logprob: -17.50001335144043
    10. ' _' → logprob: -17.75001335144043

Token 193: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0008065330912359059
    2. '(' → logprob: -7.1258063316345215
    3. ' (' → logprob: -13.37580680847168
    4. '(
' → logprob: -15.12580680847168
    5. '(N' → logprob: -16.12580680847168
    6. '(B' → logprob: -16.87580680847168
    7. '```' → logprob: -17.50080680847168
    8. '\(' → logprob: -17.87580680847168
    9. '(

' → logprob: -18.00080680847168
    10. '(E' → logprob: -18.00080680847168

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030269217677414417
    2. ',N' → logprob: -8.1253023147583
    3. ' ,' → logprob: -12.3753023147583
    4. '(N' → logprob: -13.5003023147583
    5. 'N' → logprob: -14.3753023147583
    6. ')' → logprob: -16.375303268432617
    7. ',
' → logprob: -16.375303268432617
    8. '(' → logprob: -16.500303268432617
    9. 'A' → logprob: -16.500303268432617
    10. '，' → logprob: -17.875303268432617

Token 195: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03804149478673935
    2. ' N' → logprob: -3.288041591644287
    3. '	N' → logprob: -17.663042068481445
    4. '   ' → logprob: -18.538042068481445
    5. ' ' → logprob: -18.913042068481445
    6. ')' → logprob: -19.163042068481445
    7. 'n' → logprob: -19.538042068481445
    8. '(N' → logprob: -20.163042068481445
    9. 'len' → logprob: -20.288042068481445
    10. '>N' → logprob: -20.288042068481445

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -13.00000286102295
    3. ' )' → logprob: -15.00000286102295
    4. '))' → logprob: -15.62500286102295
    5. '),' → logprob: -15.87500286102295
    6. ')

' → logprob: -15.87500286102295
    7. '[' → logprob: -17.000003814697266
    8. ');' → logprob: -17.375003814697266
    9. ',' → logprob: -17.500003814697266
    10. 'N' → logprob: -18.125003814697266

Token 197: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5783861875534058
    2. '   ' → logprob: -0.8283861875534058
    3. '    
' → logprob: -6.703386306762695
    4. '```' → logprob: -7.578386306762695
    5. 'd' → logprob: -8.578386306762695
    6. '  
' → logprob: -9.078386306762695
    7. ' d' → logprob: -9.703386306762695
    8. ' ans' → logprob: -10.078386306762695
    9. 'pos' → logprob: -10.078386306762695
    10. 'possible' → logprob: -10.203386306762695

Token 198: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' (adapté à ' possible') → logprob: -0.16251958906650543
    2. 'if' → logprob: -2.537519693374634
    3. 'ans' → logprob: -2.912519693374634
    4. 'd' → logprob: -4.912519454956055
    5. '   ' → logprob: -5.412519454956055
    6. 'pos' → logprob: -6.287519454956055
    7. ' possible' → logprob: -6.412519454956055
    8. ' if' → logprob: -7.162519454956055
    9. ' ans' → logprob: -8.787519454956055
    10. '```' → logprob: -9.287519454956055

Token 199: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0438656285405159
    2. ' =' → logprob: -3.16886568069458
    3. '=' → logprob: -7.16886568069458
    4. ' ,' → logprob: -9.293865203857422
    5. '=True' → logprob: -13.293865203857422
    6. '[' → logprob: -15.043865203857422
    7. ',_' → logprob: -15.043865203857422
    8. ' ' → logprob: -15.168865203857422
    9. ')' → logprob: -15.418865203857422
    10. '   ' → logprob: -15.668865203857422

Token 200: ' ' (ID: 220)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.0662418603897095
    2. 'True' → logprob: -1.0662418603897095
    3. 'check' → logprob: -1.1912418603897095
    4. ' True' → logprob: -5.56624174118042
    5. ' not' → logprob: -5.94124174118042
    6. 'False' → logprob: -7.56624174118042
    7. ' check' → logprob: -7.56624174118042
    8. '(not' → logprob: -10.691242218017578
    9. '(True' → logprob: -10.816242218017578
    10. '(check' → logprob: -11.941242218017578

Token 201: '1' (ID: 16)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.01834237575531
    2. 'True' → logprob: -1.14334237575531
    3. 'check' → logprob: -1.14334237575531
    4. 'False' → logprob: -7.0183424949646
    5. ' not' → logprob: -8.518342018127441
    6. ' True' → logprob: -9.018342018127441
    7. '(not' → logprob: -10.268342018127441
    8. ' check' → logprob: -10.893342018127441
    9. '(True' → logprob: -11.268342018127441
    10. '(check' → logprob: -11.893342018127441

Token 202: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04563654214143753
    2. '<|end|>' → logprob: -3.1706366539001465
    3. '<|end|>' → logprob: -7.6706366539001465
    4. ',' → logprob: -7.7956366539001465
    5. '    
' → logprob: -8.045636177062988
    6. ' 
' → logprob: -8.170636177062988
    7. '0' → logprob: -8.670636177062988
    8. '	
' → logprob: -8.795636177062988
    9. '  
' → logprob: -8.920636177062988
    10. 'def' → logprob: -9.045636177062988

Token 203: ' check' (ID: 2371)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.34998345375061035
    2. ' check' → logprob: -1.7249834537506104
    3. 'not' → logprob: -2.7249834537506104
    4. 'check' → logprob: -2.9749834537506104
    5. ' A' → logprob: -8.724983215332031
    6. ' N' → logprob: -8.849983215332031
    7. 'A' → logprob: -9.349983215332031
    8. 'N' → logprob: -10.099983215332031
    9. ' ' → logprob: -10.349983215332031
    10. ' len' → logprob: -10.474983215332031

Token 204: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -1.9361264946837764e-07
    2. 'first' → logprob: -15.75
    3. '_FIRST' → logprob: -19.0
    4. '```' → logprob: -19.125
    5. '_last' → logprob: -19.5
    6. 'First' → logprob: -19.5
    7. '_' → logprob: -20.625
    8. '
' → logprob: -20.75
    9. '_second' → logprob: -21.125
    10. '_zero' → logprob: -21.25

Token 205: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.750001907348633
    3. 'zero' → logprob: -15.000001907348633
    4. '0' → logprob: -16.125001907348633
    5. '(A' → logprob: -16.375001907348633
    6. '```' → logprob: -17.250001907348633
    7. ' _' → logprob: -17.375001907348633
    8. '_first' → logprob: -17.375001907348633
    9. '_ZERO' → logprob: -17.500001907348633
    10. '
' → logprob: -18.375001907348633

Token 206: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.000111768240458332
    2. ' (' → logprob: -9.12511157989502
    3. '(' → logprob: -12.87511157989502
    4. '(
' → logprob: -16.375112533569336
    5. ')' → logprob: -18.000112533569336
    6. '   ' → logprob: -18.250112533569336
    7. '((' → logprob: -18.875112533569336
    8. ' ' → logprob: -19.000112533569336
    9. '(AST' → logprob: -19.000112533569336
    10. '(N' → logprob: -19.125112533569336

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006606113165616989
    2. ')==' → logprob: -7.375660419464111
    3. ' )' → logprob: -10.37566089630127
    4. '())' → logprob: -13.62566089630127
    5. '==' → logprob: -14.62566089630127
    6. ' else' → logprob: -15.25066089630127
    7. '))' → logprob: -15.37566089630127
    8. ')=' → logprob: -15.75066089630127
    9. 'else' → logprob: -16.000659942626953
    10. ')
' → logprob: -16.250659942626953

Token 208: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.006122887134552002
    2. 'else' → logprob: -5.131123065948486
    3. '==' → logprob: -8.881122589111328
    4. ' ' → logprob: -10.131122589111328
    5. ' ==' → logprob: -11.756122589111328
    6. ' and' → logprob: -12.131122589111328
    7. '   ' → logprob: -14.131122589111328
    8. '    ' → logprob: -14.881122589111328
    9. ' is' → logprob: -15.381122589111328
    10. ' ' → logprob: -15.506122589111328

Token 209: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03400583937764168
    2. ' ' → logprob: -3.409005880355835
    3. 'False' → logprob: -8.284006118774414
    4. ' False' → logprob: -9.284006118774414
    5. '   ' → logprob: -11.409006118774414
    6. '  ' → logprob: -12.909006118774414
    7. '    ' → logprob: -14.909006118774414
    8. '	' → logprob: -16.096506118774414
    9. ' ' → logprob: -16.596506118774414
    10. '-' → logprob: -16.659006118774414

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.249780638725497e-05
    2. ' ' → logprob: -10.375032424926758
    3. 'False' → logprob: -14.000032424926758
    4. '-' → logprob: -16.000032424926758
    5. '   ' → logprob: -16.000032424926758
    6. '  ' → logprob: -17.812532424926758
    7. '```' → logprob: -18.187532424926758
    8. '
' → logprob: -18.687532424926758
    9. 'None' → logprob: -18.687532424926758
    10. ' False' → logprob: -18.812532424926758

Token 211: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004910785239189863
    2. '<|end|>' → logprob: -6.129910945892334
    3. '   ' → logprob: -6.254910945892334
    4. '    
' → logprob: -7.629910945892334
    5. ',
' → logprob: -9.129910469055176
    6. '  
' → logprob: -9.254910469055176
    7. ',' → logprob: -10.504910469055176
    8. '<|end|>' → logprob: -10.629910469055176
    9. ' 
' → logprob: -11.379910469055176
    10. '```' → logprob: -11.504910469055176

Token 212: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038711462169885635
    2. '   ' → logprob: -3.4137115478515625
    3. '    
' → logprob: -5.6637115478515625
    4. '  
' → logprob: -7.7887115478515625
    5. ' 
' → logprob: -8.038711547851562
    6. 'if' → logprob: -8.788711547851562
    7. '<|end|>' → logprob: -8.788711547851562
    8. 'for' → logprob: -9.038711547851562
    9. ' for' → logprob: -9.288711547851562
    10. '```' → logprob: -9.538711547851562

Token 213: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.005458340048789978
    2. ' ans' → logprob: -5.505458354949951
    3. '   ' → logprob: -7.755458354949951
    4. '
' → logprob: -7.755458354949951
    5. '```' → logprob: -8.005457878112793
    6. '	ans' → logprob: -9.255457878112793
    7. 'for' → logprob: -9.880457878112793
    8. '(ans' → logprob: -11.380457878112793
    9. 'i' → logprob: -11.880457878112793
    10. '_ans' → logprob: -11.880457878112793

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009757150895893574
    2. '=' → logprob: -4.634757041931152
    3. ',' → logprob: -14.259757041931152
    4. ' +=' → logprob: -15.259757041931152
    5. ' ' → logprob: -15.884757041931152
    6. '=int' → logprob: -17.13475799560547
    7. ' ' → logprob: -17.38475799560547
    8. ' =
' → logprob: -17.38475799560547
    9. ' =)' → logprob: -17.38475799560547
    10. '  ' → logprob: -17.50975799560547

Token 215: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026860725483857095
    2. ' ' → logprob: -8.750268936157227
    3. '1' → logprob: -9.250268936157227
    4. 'A' → logprob: -12.250268936157227
    5. '-' → logprob: -12.750268936157227
    6. '   ' → logprob: -13.125268936157227
    7. 'int' → logprob: -14.625268936157227
    8. 'N' → logprob: -14.812768936157227
    9. '(' → logprob: -15.062768936157227
    10. '  ' → logprob: -15.125268936157227

Token 216: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.077528764260933e-05
    2. '1' → logprob: -10.000081062316895
    3. ' ' → logprob: -10.500081062316895
    4. 'A' → logprob: -12.250081062316895
    5. 'int' → logprob: -14.812581062316895
    6. '-' → logprob: -14.937581062316895
    7. 'N' → logprob: -15.000081062316895
    8. '   ' → logprob: -15.312581062316895
    9. '(' → logprob: -15.812581062316895
    10. ' A' → logprob: -16.250080108642578

Token 217: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -9.758300438988954e-05
    2. '   ' → logprob: -10.375097274780273
    3. '
' → logprob: -10.500097274780273
    4. ' for' → logprob: -10.625097274780273
    5. '    
' → logprob: -12.500097274780273
    6. 'for' → logprob: -12.750097274780273
    7. '

' → logprob: -12.875097274780273
    8. '  
' → logprob: -13.375097274780273
    9. '```' → logprob: -13.875097274780273
    10. '\n' → logprob: -14.000097274780273

Token 218: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1827731430530548
    2. ' for' → logprob: -2.3077731132507324
    3. 'for' → logprob: -2.8077731132507324
    4. '   ' → logprob: -5.057773113250732
    5. '    
' → logprob: -8.55777359008789
    6. '
' → logprob: -8.93277359008789
    7. '\n' → logprob: -9.18277359008789
    8. '  
' → logprob: -9.30777359008789
    9. '<|end|>' → logprob: -9.30777359008789
    10. '	for' → logprob: -9.55777359008789

Token 219: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020299924071878195
    2. ' for' → logprob: -6.252029895782471
    3. 'i' → logprob: -9.252030372619629
    4. '   ' → logprob: -13.002030372619629
    5. '```' → logprob: -13.127030372619629
    6. 'd' → logprob: -14.252030372619629
    7. ' i' → logprob: -14.877030372619629
    8. '
' → logprob: -15.627030372619629
    9. '	for' → logprob: -17.377029418945312
    10. 'if' (adapté à ' if') → logprob: -18.252029418945312

Token 220: ' not' (ID: 625)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.1453559845685959
    2. 'possible' → logprob: -2.1453559398651123
    3. ' not' → logprob: -4.020356178283691
    4. 'not' → logprob: -8.895356178283691
    5. ' A' → logprob: -9.895356178283691
    6. ' N' → logprob: -9.895356178283691
    7. 'A' → logprob: -10.645356178283691
    8. ' ' → logprob: -11.270356178283691
    9. '_possible' → logprob: -11.520356178283691
    10. 'Possible' → logprob: -12.395356178283691

Token 221: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.005234356038272381
    2. 'possible' → logprob: -5.255234241485596
    3. 'Possible' → logprob: -15.255234718322754
    4. '_possible' → logprob: -15.630234718322754
    5. ' posible' → logprob: -16.505233764648438
    6. ' ' → logprob: -16.505233764648438
    7. ' possibile' → logprob: -18.380233764648438
    8. ' check' → logprob: -18.755233764648438
    9. ' ' → logprob: -19.130233764648438
    10. ' possível' → logprob: -19.630233764648438

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07889749854803085
    2. ':
' → logprob: -2.578897476196289
    3. ':return' → logprob: -12.953897476196289
    4. '   ' → logprob: -13.203897476196289
    5. ':
' → logprob: -13.703897476196289
    6. '       ' → logprob: -13.953897476196289
    7. ' :
' → logprob: -14.453897476196289
    8. ' :' → logprob: -14.703897476196289
    9. ':

' → logprob: -15.828897476196289
    10. '():
' → logprob: -15.828897476196289

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007280402351170778
    2. ' return' → logprob: -8.250727653503418
    3. '
' → logprob: -8.625727653503418
    4. '   ' → logprob: -9.125727653503418
    5. 'return' → logprob: -9.125727653503418
    6. ':
' → logprob: -9.750727653503418
    7. 'print' → logprob: -12.875727653503418
    8. '    
' → logprob: -13.625727653503418
    9. ',' → logprob: -13.750727653503418
    10. '        
' → logprob: -13.875727653503418

Token 224: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10392479598522186
    2. ' print' → logprob: -2.7289247512817383
    3. '       ' → logprob: -3.7289247512817383
    4. '   ' → logprob: -4.728924751281738
    5. '
' → logprob: -7.603924751281738
    6. '```' → logprob: -10.728924751281738
    7. '	print' → logprob: -11.728924751281738
    8. '    
' → logprob: -11.978924751281738
    9. 'return' → logprob: -11.978924751281738
    10. '        
' → logprob: -12.103924751281738

Token 225: '_result' (ID: 11623)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0010337610729038715
    2. '(' → logprob: -6.876033782958984
    3. '(
' → logprob: -14.501033782958984
    4. ' (-' → logprob: -15.126033782958984
    5. '-' → logprob: -16.251033782958984
    6. '()' → logprob: -16.876033782958984
    7. '(+' → logprob: -17.501033782958984
    8. ' (' → logprob: -18.251033782958984
    9. '(

' → logprob: -18.376033782958984
    10. '("' → logprob: -19.001033782958984

Token 226: '(pos' (ID: 24566)
  Prédit: '(False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(False' → logprob: -0.00021593389101326466
    2. '(pos' → logprob: -8.500215530395508
    3. '(' → logprob: -11.375215530395508
    4. '(True' → logprob: -14.500215530395508
    5. 'False' → logprob: -14.875215530395508
    6. '(false' → logprob: -16.250215530395508
    7. '(None' → logprob: -17.500215530395508
    8. ' (' → logprob: -17.625215530395508
    9. '=False' → logprob: -17.750215530395508
    10. '(not' → logprob: -18.000215530395508

Token 227: 'sible' (ID: 15301)
  Prédit: 'sible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -0.020718462765216827
    2. 'ible' → logprob: -4.395718574523926
    3. 'isible' → logprob: -5.020718574523926
    4. 'oss' → logprob: -7.895718574523926
    5. 'possible' → logprob: -8.020718574523926
    6. 'Possible' → logprob: -8.145718574523926
    7. 't' → logprob: -8.395718574523926
    8. 'iss' → logprob: -8.770718574523926
    9. '_possible' → logprob: -10.020718574523926
    10. 'ss' → logprob: -10.270718574523926

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.392202976712724e-06
    2. ',)' → logprob: -12.875006675720215
    3. ',

' → logprob: -13.625006675720215
    4. ' ,' → logprob: -13.875006675720215
    5. ',
' → logprob: -14.000006675720215
    6. ')' → logprob: -14.125006675720215
    7. ',None' → logprob: -18.0000057220459
    8. ' ' → logprob: -18.5000057220459
    9. '   ' → logprob: -18.7500057220459
    10. '

' → logprob: -18.8750057220459

Token 229: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00020950057660229504
    2. ' ans' → logprob: -9.00020980834961
    3. '0' → logprob: -9.37520980834961
    4. '	ans' → logprob: -14.37520980834961
    5. '(ans' → logprob: -14.50020980834961
    6. ' ' → logprob: -16.87520980834961
    7. 'None' → logprob: -17.75020980834961
    8. ')' → logprob: -18.00020980834961
    9. '_ans' → logprob: -18.37520980834961
    10. '   ' → logprob: -18.50020980834961

Token 230: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31349706649780273
    2. ')
' → logprob: -1.3134970664978027
    3. '   ' → logprob: -8.813497543334961
    4. ')
' → logprob: -9.938497543334961
    5. '       ' → logprob: -10.313497543334961
    6. ')return' → logprob: -12.813497543334961
    7. ')

' → logprob: -14.188497543334961
    8. ' )' → logprob: -14.438497543334961
    9. ')`
' → logprob: -14.813497543334961
    10. ' )
' → logprob: -15.188497543334961

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062141675502061844
    2. '   ' → logprob: -2.8121416568756104
    3. '
' → logprob: -9.062141418457031
    4. '    
' → logprob: -10.562141418457031
    5. '    ' → logprob: -11.812141418457031
    6. '           ' → logprob: -12.187141418457031
    7. '        
' → logprob: -12.312141418457031
    8. '     ' → logprob: -12.562141418457031
    9. '<|end|>' → logprob: -13.062141418457031
    10. '      ' → logprob: -13.312141418457031

Token 232: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38737839460372925
    2. 'return' (adapté à ' return') → logprob: -1.137378454208374
    3. ' return' → logprob: -7.637378215789795
    4. '   ' → logprob: -10.887378692626953
    5. '
' → logprob: -12.637378692626953
    6. '	return' → logprob: -13.137378692626953
    7. ' ' → logprob: -14.012378692626953
    8. '```' → logprob: -16.262378692626953
    9. '{return' → logprob: -16.512378692626953
    10. ':return' → logprob: -16.637378692626953

Token 233: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009435292333364487
    2. '    
' → logprob: -5.634435176849365
    3. '   ' → logprob: -6.009435176849365
    4. '  
' → logprob: -6.259435176849365
    5. '

' → logprob: -7.759435176849365
    6. ' 
' → logprob: -7.759435176849365
    7. ' for' → logprob: -8.384435653686523
    8. 'for' → logprob: -8.759435653686523
    9. '   
' → logprob: -9.259435653686523
    10. '\n' → logprob: -10.509435653686523

Token 234: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6227768063545227
    2. '   ' → logprob: -1.372776746749878
    3. '
' → logprob: -1.872776746749878
    4. 'for' → logprob: -2.997776746749878
    5. '    
' → logprob: -5.372776985168457
    6. '  
' → logprob: -7.247776985168457
    7. ' 
' → logprob: -7.747776985168457
    8. '```' → logprob: -8.247776985168457
    9. '   
' → logprob: -8.747776985168457
    10. '\n' → logprob: -8.997776985168457

Token 235: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17730528116226196
    2. ' for' → logprob: -2.052305221557617
    3. '   ' → logprob: -3.427305221557617
    4. 'prev' → logprob: -7.052305221557617
    5. 'i' → logprob: -8.177305221557617
    6. 'previous' → logprob: -9.177305221557617
    7. '```' → logprob: -9.427305221557617
    8. ' i' → logprob: -9.552305221557617
    9. 'last' → logprob: -10.052305221557617
    10. ' prev' → logprob: -10.552305221557617

Token 236: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38688141107559204
    2. 'i' → logprob: -1.1368813514709473
    3. '	i' → logprob: -12.511881828308105
    4. '_i' → logprob: -13.011881828308105
    5. '(i' → logprob: -13.761881828308105
    6. ' ' → logprob: -13.886881828308105
    7. '   ' → logprob: -14.011881828308105
    8. 'index' → logprob: -15.511881828308105
    9. 'd' → logprob: -15.636881828308105
    10. 'I' → logprob: -15.636881828308105

Token 237: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002911146730184555
    2. 'in' → logprob: -5.87791109085083
    3. ' ' → logprob: -9.377911567687988
    4. '	in' → logprob: -12.502911567687988
    5. 'range' → logprob: -12.627911567687988
    6. ',' → logprob: -12.627911567687988
    7. '(' → logprob: -13.127911567687988
    8. ' i' → logprob: -13.127911567687988
    9. ' range' → logprob: -13.377911567687988
    10. '  ' → logprob: -13.752911567687988

Token 238: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023458540439606
    2. ' range' → logprob: -1.9102345705032349
    3. '   ' → logprob: -12.910234451293945
    4. '(range' → logprob: -12.910234451293945
    5. 'ange' → logprob: -13.285234451293945
    6. ' ' → logprob: -13.285234451293945
    7. '  ' → logprob: -13.660234451293945
    8. '	range' → logprob: -14.910234451293945
    9. 'in' → logprob: -15.410234451293945
    10. 'rang' → logprob: -16.660234451293945

Token 239: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010366219794377685
    2. '(N' → logprob: -6.876036643981934
    3. '1' → logprob: -12.751036643981934
    4. '(len' → logprob: -14.626036643981934
    5. 'N' → logprob: -15.876036643981934
    6. '(n' → logprob: -16.126035690307617
    7. '   ' → logprob: -16.751035690307617
    8. '(
' → logprob: -16.876035690307617
    9. ' (' → logprob: -17.126035690307617
    10. ' ' → logprob: -18.626035690307617

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016072260215878487
    2. 'N' → logprob: -4.1410722732543945
    3. 'len' → logprob: -11.016072273254395
    4. ' ' → logprob: -11.766072273254395
    5. '(' → logprob: -12.266072273254395
    6. '2' → logprob: -12.766072273254395
    7. '0' → logprob: -13.266072273254395
    8. '   ' → logprob: -13.516072273254395
    9. '(N' → logprob: -13.766072273254395
    10. ' N' → logprob: -13.891072273254395

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008949052426032722
    2. ' ,' → logprob: -7.500895023345947
    3. ',N' → logprob: -8.500894546508789
    4. '   ' → logprob: -9.250894546508789
    5. ' N' → logprob: -11.000894546508789
    6. 'N' → logprob: -11.250894546508789
    7. ',len' → logprob: -11.500894546508789
    8. ',n' → logprob: -13.750894546508789
    9. ',
' → logprob: -14.125894546508789
    10. '(len' → logprob: -15.500894546508789

Token 242: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0007145775598473847
    2. ' N' → logprob: -7.2507147789001465
    3. 'len' → logprob: -13.000714302062988
    4. '   ' → logprob: -13.000714302062988
    5. ' len' → logprob: -16.250715255737305
    6. '	N' → logprob: -17.875715255737305
    7. '  ' → logprob: -18.375715255737305
    8. 'n' → logprob: -19.750715255737305
    9. ' ' → logprob: -19.875715255737305
    10. '    ' → logprob: -20.125715255737305

Token 243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018153805285692215
    2. '):
' → logprob: -4.018153667449951
    3. '):
' → logprob: -13.51815414428711
    4. ' ):' → logprob: -13.89315414428711
    5. ':' → logprob: -14.26815414428711
    6. '():' → logprob: -14.64315414428711
    7. '):

' → logprob: -15.39315414428711
    8. ')' → logprob: -16.39315414428711
    9. '}:' → logprob: -16.64315414428711
    10. '   ' → logprob: -16.64315414428711

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073105767369270325
    2. ' d' → logprob: -5.507310390472412
    3. 'd' → logprob: -6.382310390472412
    4. '   ' → logprob: -7.132310390472412
    5. ',' → logprob: -8.25731086730957
    6. ',d' → logprob: -8.88231086730957
    7. '```' → logprob: -9.38231086730957
    8. '
' → logprob: -9.38231086730957
    9. ':' → logprob: -9.75731086730957
    10. '):
' → logprob: -10.75731086730957

Token 245: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5794322490692139
    2. 'd' (adapté à ' d') → logprob: -0.8294322490692139
    3. '       ' → logprob: -5.829432487487793
    4. '   ' → logprob: -7.579432487487793
    5. '	d' → logprob: -11.079432487487793
    6. '```' → logprob: -11.704432487487793
    7. '_d' → logprob: -13.204432487487793
    8. '
' → logprob: -13.704432487487793
    9. '  ' → logprob: -13.704432487487793
    10. ' ' → logprob: -13.704432487487793

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858873412013054
    2. ' =' → logprob: -3.048588752746582
    3. '=int' → logprob: -15.048588752746582
    4. ',' → logprob: -15.048588752746582
    5. 'd' → logprob: -15.548588752746582
    6. '=d' → logprob: -15.798588752746582
    7. '=create' → logprob: -16.298587799072266
    8. '=cut' → logprob: -16.423587799072266
    9. '=A' → logprob: -17.798587799072266
    10. ' ' → logprob: -17.798587799072266

Token 247: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.014166445471346378
    2. ' calculate' → logprob: -4.264166355133057
    3. 'c' → logprob: -13.889166831970215
    4. '   ' → logprob: -14.389166831970215
    5. 'A' → logprob: -14.764166831970215
    6. 'alculate' → logprob: -14.764166831970215
    7. 'cal' → logprob: -15.514166831970215
    8. ' A' → logprob: -15.889166831970215
    9. ' ' → logprob: -16.3891658782959
    10. '.calculate' → logprob: -16.7641658782959

Token 248: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.00014025058771949261
    2. 'difference' → logprob: -8.875140190124512
    3. 'd' → logprob: -15.625140190124512
    4. 'ifference' → logprob: -16.875141143798828
    5. '_distance' → logprob: -17.500141143798828
    6. 'Difference' → logprob: -17.500141143798828
    7. ' difference' → logprob: -17.750141143798828
    8. '_d' → logprob: -18.250141143798828
    9. '_diff' → logprob: -18.625141143798828
    10. '(A' → logprob: -19.000141143798828

Token 249: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.001706963055767119
    2. 'A' → logprob: -6.376707077026367
    3. '(' → logprob: -13.126707077026367
    4. '(i' → logprob: -13.376707077026367
    5. '(
' → logprob: -15.251707077026367
    6. '(N' → logprob: -15.501707077026367
    7. '   ' → logprob: -15.626707077026367
    8. ' A' → logprob: -16.376707077026367
    9. '
' → logprob: -16.626707077026367
    10. '((' → logprob: -16.626707077026367

Token 250: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.988221684878226e-06
    2. 'i' → logprob: -12.125006675720215
    3. '[' → logprob: -13.875006675720215
    4. '(i' → logprob: -15.750006675720215
    5. '   ' → logprob: -15.875006675720215
    6. ' [' → logprob: -16.62500762939453
    7. '
' → logprob: -16.62500762939453
    8. 'A' → logprob: -16.62500762939453
    9. '[I' → logprob: -17.00000762939453
    10. '[
' → logprob: -17.75000762939453

Token 251: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.03561399132013321
    2. '-' → logprob: -4.035614013671875
    3. ',' → logprob: -4.285614013671875
    4. '[i' → logprob: -6.535614013671875
    5. ' ],' → logprob: -7.660614013671875
    6. ' -' → logprob: -8.035614013671875
    7. ' ,' → logprob: -8.160614013671875
    8. 'A' → logprob: -8.410614013671875
    9. ']' → logprob: -8.410614013671875
    10. ',i' → logprob: -8.535614013671875

Token 252: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0024773201439529657
    2. ' A' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.002477645874023
    4. 'i' → logprob: -14.752477645874023
    5. '	A' → logprob: -15.502477645874023
    6. '  ' → logprob: -16.127477645874023
    7. ' ' → logprob: -16.252477645874023
    8. '1' → logprob: -17.252477645874023
    9. ')' → logprob: -17.877477645874023
    10. 'a' → logprob: -18.127477645874023

Token 253: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.52919222577475e-05
    2. 'i' → logprob: -9.500075340270996
    3. '(i' → logprob: -15.875075340270996
    4. ' i' → logprob: -16.62507438659668
    5. '{i' → logprob: -16.75007438659668
    6. '
' → logprob: -17.25007438659668
    7. '   ' → logprob: -17.62507438659668
    8. '[' → logprob: -17.87507438659668
    9. '	i' → logprob: -18.37507438659668
    10. '-' → logprob: -18.75007438659668

Token 254: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005176951177418232
    2. 'i' → logprob: -6.130177021026611
    3. '[i' → logprob: -6.130177021026611
    4. ' -' → logprob: -7.130177021026611
    5. '(i' → logprob: -12.505176544189453
    6. ' i' → logprob: -12.755176544189453
    7. '-i' → logprob: -13.255176544189453
    8. '1' → logprob: -14.380176544189453
    9. '   ' → logprob: -15.380176544189453
    10. ' ' → logprob: -15.380176544189453

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. 'i' → logprob: -16.500001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '-' → logprob: -18.625001907348633
    6. '
' → logprob: -19.375001907348633
    7. ']' → logprob: -19.500001907348633
    8. '])' → logprob: -19.500001907348633
    9. '```' → logprob: -19.625001907348633
    10. '0' → logprob: -19.875001907348633

Token 256: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011754630832001567
    2. ')
' → logprob: -6.751175403594971
    3. '   ' → logprob: -13.626175880432129
    4. ' )' → logprob: -13.876175880432129
    5. '))' → logprob: -14.126175880432129
    6. ')`' → logprob: -14.126175880432129
    7. '])' → logprob: -14.626175880432129
    8. ')

' → logprob: -14.876175880432129
    9. ')
' → logprob: -15.251175880432129
    10. '})' → logprob: -16.251174926757812

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0810328871011734
    2. ',' → logprob: -3.2060329914093018
    3. 'possible' → logprob: -4.081032752990723
    4. ' possible' → logprob: -4.456032752990723
    5. ' a' → logprob: -5.956032752990723
    6. 'a' → logprob: -6.331032752990723
    7. ',a' → logprob: -6.456032752990723
    8. '_possible' → logprob: -7.706032752990723
    9. '   ' → logprob: -8.081032752990723
    10. '	' → logprob: -8.456032752990723

Token 258: ' is' (ID: 382)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.005626800935715437
    2. ' possible' → logprob: -5.505626678466797
    3. '       ' → logprob: -7.130626678466797
    4. 'a' → logprob: -7.755626678466797
    5. 'result' → logprob: -9.005626678466797
    6. 'valid' → logprob: -9.505626678466797
    7. 'success' → logprob: -9.755626678466797
    8. 'if' → logprob: -10.755626678466797
    9. '_possible' → logprob: -11.630626678466797
    10. 'res' → logprob: -12.130626678466797

Token 259: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.0032525737769901752
    2. '_valid' → logprob: -6.0032525062561035
    3. 'possible' → logprob: -7.3782525062561035
    4. '_' → logprob: -10.003252983093262
    5. ' possible' → logprob: -10.128252983093262
    6. '_pos' → logprob: -10.503252983093262
    7. ',' → logprob: -11.503252983093262
    8. '_success' → logprob: -11.753252983093262
    9. '_ok' → logprob: -11.878252983093262
    10. '_,' → logprob: -12.753252983093262

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. '=' → logprob: -14.250001907348633
    3. ' ,' → logprob: -14.375001907348633
    4. ' =' → logprob: -16.000001907348633
    5. ',value' → logprob: -17.375001907348633
    6. ',
' → logprob: -17.625001907348633
    7. ',pos' → logprob: -18.125001907348633
    8. '‌,' → logprob: -18.250001907348633
    9. ',

' → logprob: -18.500001907348633
    10. ',input' → logprob: -18.625001907348633

Token 261: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10022197663784027
    2. ' ans' → logprob: -2.350221872329712
    3. '(ans' → logprob: -11.100221633911133
    4. '	ans' → logprob: -15.850221633911133
    5. '_ans' → logprob: -17.225221633911133
    6. '   ' → logprob: -17.475221633911133
    7. 'result' → logprob: -17.850221633911133
    8. ' ' → logprob: -17.850221633911133
    9. '  ' → logprob: -18.350221633911133
    10. 'answer' → logprob: -18.850221633911133

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868812620639801
    2. '=' → logprob: -1.1368812322616577
    3. ',' → logprob: -11.511880874633789
    4. '   ' → logprob: -16.38688087463379
    5. ')' → logprob: -16.76188087463379
    6. ' ' → logprob: -16.88688087463379
    7. ')=' → logprob: -17.26188087463379
    8. ' =
' → logprob: -18.13688087463379
    9. ' =)' → logprob: -18.26188087463379
    10. '=
' → logprob: -18.51188087463379

Token 263: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.1269282102584839
    2. 'process' → logprob: -2.1269283294677734
    3. ' proces' → logprob: -16.751928329467773
    4. 'proces' → logprob: -19.376928329467773
    5. '	process' → logprob: -19.876928329467773
    6. '(process' → logprob: -19.876928329467773
    7. '_process' → logprob: -20.001928329467773
    8. '.process' → logprob: -21.876928329467773
    9. 'Process' → logprob: -23.126928329467773
    10. '
' → logprob: -24.001928329467773

Token 264: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -6.392202976712724e-06
    2. 'd' → logprob: -12.000006675720215
    3. '```' → logprob: -15.875006675720215
    4. '"_' → logprob: -17.3750057220459
    5. '_' → logprob: -17.6250057220459
    6. '\' → logprob: -18.1250057220459
    7. 's' → logprob: -18.2500057220459
    8. '_a' → logprob: -18.7500057220459
    9. ''_' → logprob: -18.8750057220459
    10. '}_' → logprob: -18.8750057220459

Token 265: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.2961512513575144e-05
    2. 'alue' → logprob: -11.125022888183594
    3. 'value' → logprob: -12.000022888183594
    4. '_val' → logprob: -13.875022888183594
    5. '_' → logprob: -14.625022888183594
    6. '_values' → logprob: -15.500022888183594
    7. '_VALUE' → logprob: -16.375022888183594
    8. ' value' → logprob: -17.375022888183594
    9. '```' → logprob: -17.375022888183594
    10. ' _' → logprob: -17.750022888183594

Token 266: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0003362966235727072
    2. '(' → logprob: -8.000336647033691
    3. ' (' → logprob: -14.625336647033691
    4. '(
' → logprob: -15.125336647033691
    5. 'd' → logprob: -16.625335693359375
    6. '(de' → logprob: -19.375335693359375
    7. ',d' → logprob: -20.000335693359375
    8. '	d' → logprob: -20.125335693359375
    9. '(D' → logprob: -20.250335693359375
    10. ' d' → logprob: -20.500335693359375

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003769303730223328
    2. ' ,' → logprob: -8.00037670135498
    3. ',A' → logprob: -10.25037670135498
    4. '(' → logprob: -13.12537670135498
    5. ')' → logprob: -14.12537670135498
    6. ',d' → logprob: -14.37537670135498
    7. ',
' → logprob: -14.37537670135498
    8. '       ' → logprob: -14.62537670135498
    9. '   ' → logprob: -14.75037670135498
    10. ',a' → logprob: -14.87537670135498

Token 268: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018152287229895592
    2. ' A' → logprob: -4.018152236938477
    3. '	A' → logprob: -13.643152236938477
    4. ' ' → logprob: -14.518152236938477
    5. '   ' → logprob: -14.893152236938477
    6. 'a' → logprob: -15.768152236938477
    7. '<|end|>' → logprob: -16.018152236938477
    8. '=A' → logprob: -16.518152236938477
    9. ',A' → logprob: -16.768152236938477
    10. '(A' → logprob: -17.143152236938477

Token 269: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. 'i' → logprob: -17.125
    4. '[
' → logprob: -17.375
    5. '[I' → logprob: -18.25
    6. '```' → logprob: -19.125
    7. ' [' → logprob: -19.25
    8. '[j' → logprob: -20.875
    9. ' ' → logprob: -21.375
    10. '   ' → logprob: -21.5

Token 270: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010780861601233482
    2. '],' → logprob: -4.6357808113098145
    3. ' ,' → logprob: -7.0107808113098145
    4. ',i' → logprob: -10.010781288146973
    5. '[i' → logprob: -10.885781288146973
    6. '),' → logprob: -11.260781288146973
    7. '   ' → logprob: -11.260781288146973
    8. '_,' → logprob: -12.010781288146973
    9. ' ],' → logprob: -12.385781288146973
    10. ' ' → logprob: -12.635781288146973

Token 271: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00861468818038702
    2. ' ans' → logprob: -4.758614540100098
    3. '	ans' → logprob: -15.758614540100098
    4. '(ans' → logprob: -16.758615493774414
    5. ' ' → logprob: -19.508615493774414
    6. '_ans' → logprob: -19.633615493774414
    7. '   ' → logprob: -20.883615493774414
    8. '  ' → logprob: -21.758615493774414
    9. 'answer' → logprob: -22.133615493774414
    10. '
' → logprob: -22.258615493774414

Token 272: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10189662128686905
    2. ')
' → logprob: -2.3518965244293213
    3. '       ' → logprob: -6.4768967628479
    4. '   ' → logprob: -8.851896286010742
    5. ')
' → logprob: -12.851896286010742
    6. ')

' → logprob: -13.101896286010742
    7. ' )' → logprob: -13.726896286010742
    8. ' )
' → logprob: -15.101896286010742
    9. '
' → logprob: -15.851896286010742
    10. ')`
' → logprob: -15.851896286010742

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008319015032611787
    2. '   ' → logprob: -7.2508320808410645
    3. ' if' → logprob: -9.250831604003906
    4. 'if' → logprob: -11.250831604003906
    5. '<|end|>' → logprob: -11.875831604003906
    6. '	' → logprob: -13.250831604003906
    7. '           ' → logprob: -13.625831604003906
    8. ' ' → logprob: -14.000831604003906
    9. '
' → logprob: -14.875831604003906
    10. '	if' → logprob: -15.000831604003906

Token 274: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07125788182020187
    2. ' if' → logprob: -2.8212578296661377
    3. 'if' (adapté à ' if') → logprob: -4.696258068084717
    4. '   ' → logprob: -9.071257591247559
    5. ' ' → logprob: -13.696257591247559
    6. '	if' → logprob: -14.196257591247559
    7. '    ' → logprob: -15.321257591247559
    8. '      ' → logprob: -15.446257591247559
    9. '  ' → logprob: -15.821257591247559
    10. '     ' → logprob: -15.821257591247559

Token 275: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07895313203334808
    2. 'not' → logprob: -2.5789530277252197
    3. '   ' → logprob: -9.70395278930664
    4. '(not' → logprob: -13.95395278930664
    5. '	not' → logprob: -13.95395278930664
    6. ' ' → logprob: -15.70395278930664
    7. '    ' → logprob: -15.70395278930664
    8. ' ' → logprob: -16.45395278930664
    9. '       ' → logprob: -16.70395278930664
    10. '
' → logprob: -16.70395278930664

Token 276: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02324547804892063
    2. 'is' → logprob: -3.7732455730438232
    3. '	is' → logprob: -17.148244857788086
    4. '(is' → logprob: -18.648244857788086
    5. ' ' → logprob: -18.773244857788086
    6. '_is' → logprob: -18.773244857788086
    7. ')is' → logprob: -19.773244857788086
    8. '```' → logprob: -19.898244857788086
    9. 'possible' → logprob: -20.023244857788086
    10. ' possible' → logprob: -20.148244857788086

Token 277: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -3.173704271830502e-06
    2. 'possible' → logprob: -12.75000286102295
    3. '_' → logprob: -15.62500286102295
    4. ' possible' → logprob: -16.875003814697266
    5. '_pos' → logprob: -19.000003814697266
    6. 'Possible' → logprob: -19.000003814697266
    7. '__' → logprob: -19.875003814697266
    8. '\' → logprob: -20.000003814697266
    9. '_prob' → logprob: -20.875003814697266
    10. '_positive' → logprob: -21.000003814697266

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12743480503559113
    2. ':
' → logprob: -2.127434730529785
    3. '       ' → logprob: -7.877434730529785
    4. '           ' → logprob: -9.752434730529785
    5. ':

' → logprob: -11.127434730529785
    6. ':return' → logprob: -11.127434730529785
    7. '():
' → logprob: -11.627434730529785
    8. ',' → logprob: -11.752434730529785
    9. '):
' → logprob: -12.252434730529785
    10. '<|end|>' → logprob: -12.377434730529785

Token 279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.41866585687967e-06
    2. 'break' → logprob: -13.000008583068848
    3. 'print' → logprob: -13.500008583068848
    4. '          ' → logprob: -13.625008583068848
    5. ' break' → logprob: -14.125008583068848
    6. '       ' → logprob: -14.375008583068848
    7. '```' → logprob: -14.625008583068848
    8. '            
' → logprob: -14.875008583068848
    9. ',' → logprob: -15.000008583068848
    10. '
' → logprob: -15.000008583068848

Token 280: ' possible' (ID: 4149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47826412320137024
    2. 'print' → logprob: -1.1032640933990479
    3. '           ' → logprob: -3.228264093399048
    4. 'break' → logprob: -5.228264331817627
    5. ' print' → logprob: -5.853264331817627
    6. ' break' → logprob: -8.353263854980469
    7. '   ' → logprob: -8.478263854980469
    8. 'possible' (adapté à ' possible') → logprob: -10.353263854980469
    9. '	print' → logprob: -12.853263854980469
    10. '               ' → logprob: -12.978263854980469

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38695991039276123
    2. '=' → logprob: -1.1369599103927612
    3. '=False' → logprob: -9.38696002960205
    4. ',' → logprob: -12.63696002960205
    5. '<|end|>' → logprob: -14.13696002960205
    6. '=True' → logprob: -15.38696002960205
    7. ' ' → logprob: -15.88696002960205
    8. '=false' → logprob: -16.011959075927734
    9. ')' → logprob: -16.011959075927734
    10. '＝' → logprob: -16.261959075927734

Token 282: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0060563054867088795
    2. 'False' → logprob: -5.131056308746338
    3. ' False' → logprob: -9.25605583190918
    4. ' ' → logprob: -10.38105583190918
    5. '   ' → logprob: -14.00605583190918
    6. 'false' → logprob: -15.75605583190918
    7. '=False' → logprob: -16.75605583190918
    8. '(False' → logprob: -18.38105583190918
    9. '  ' → logprob: -18.63105583190918
    10. '    ' → logprob: -18.75605583190918

Token 283: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012523191049695015
    2. 'False' → logprob: -4.387523174285889
    3. ' False' → logprob: -11.262523651123047
    4. ' ' → logprob: -14.637523651123047
    5. 'false' → logprob: -15.762523651123047
    6. '=False' → logprob: -17.012523651123047
    7. '   ' → logprob: -18.012523651123047
    8. '(False' → logprob: -18.262523651123047
    9. '۰' → logprob: -19.137523651123047
    10. 'FALSE' → logprob: -19.637523651123047

Token 284: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.2729995988775045e-06
    2. ',' → logprob: -12.625006675720215
    3. '       ' → logprob: -13.625006675720215
    4. '               ' → logprob: -14.875006675720215
    5. '<|end|>' → logprob: -15.125006675720215
    6. '          ' → logprob: -15.250006675720215
    7. '
' → logprob: -15.250006675720215
    8. '	       ' → logprob: -15.500006675720215
    9. '   ' → logprob: -16.2500057220459
    10. '		' → logprob: -16.6250057220459

Token 285: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.45848218582978e-06
    2. '       ' → logprob: -14.25000286102295
    3. '               ' → logprob: -15.00000286102295
    4. 'break' → logprob: -15.00000286102295
    5. '	       ' → logprob: -15.12500286102295
    6. ' break' → logprob: -15.50000286102295
    7. '   ' → logprob: -15.50000286102295
    8. '		' → logprob: -15.75000286102295
    9. ',' → logprob: -16.000001907348633
    10. '          ' → logprob: -16.500001907348633

Token 286: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31678223609924316
    2. 'break' (adapté à ' break') → logprob: -1.3167822360992432
    3. ' break' → logprob: -6.316781997680664
    4. '       ' → logprob: -6.441781997680664
    5. '	break' → logprob: -9.566781997680664
    6. '   ' → logprob: -10.816781997680664
    7. '               ' → logprob: -11.566781997680664
    8. '	       ' → logprob: -12.816781997680664
    9. '
' → logprob: -12.941781997680664
    10. '```' → logprob: -12.941781997680664

Token 287: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045810069888830185
    2. '
' → logprob: -3.1708099842071533
    3. '    
' → logprob: -6.045810222625732
    4. '  
' → logprob: -8.920809745788574
    5. '```' → logprob: -9.545809745788574
    6. '<|end|>' → logprob: -9.920809745788574
    7. 'print' → logprob: -10.045809745788574
    8. '        
' → logprob: -10.295809745788574
    9. ' 
' → logprob: -10.795809745788574
    10. '\n' → logprob: -11.045809745788574

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00386801571585238
    2. '
' → logprob: -5.878868103027344
    3. 'print' → logprob: -7.503868103027344
    4. '    
' → logprob: -8.378868103027344
    5. ' print' → logprob: -8.753868103027344
    6. '```' → logprob: -9.503868103027344
    7. '<|end|>' → logprob: -11.378868103027344
    8. '  
' → logprob: -11.753868103027344
    9. '        
' → logprob: -12.003868103027344
    10. '       ' → logprob: -12.628868103027344

Token 289: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3288097679615021
    2. '   ' → logprob: -1.3288097381591797
    3. '
' → logprob: -4.57880973815918
    4. ' print' → logprob: -5.32880973815918
    5. '```' → logprob: -8.45380973815918
    6. '    
' → logprob: -9.70380973815918
    7. '	print' → logprob: -11.45380973815918
    8. ' ' → logprob: -11.95380973815918
    9. '(print' → logprob: -12.57880973815918
    10. '  ' → logprob: -12.70380973815918

Token 290: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -13.37500286102295
    3. '_' → logprob: -13.50000286102295
    4. '_results' → logprob: -15.75000286102295
    5. 'Result' → logprob: -16.875003814697266
    6. 'result' → logprob: -17.000003814697266
    7. '(_' → logprob: -17.375003814697266
    8. '_Result' → logprob: -18.375003814697266
    9. '_RESULT' → logprob: -18.500003814697266
    10. '_res' → logprob: -19.250003814697266

Token 291: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0031941127963364124
    2. '(' → logprob: -5.753194332122803
    3. '(True' → logprob: -11.878193855285645
    4. '(False' → logprob: -12.503193855285645
    5. 'possible' → logprob: -12.628193855285645
    6. ' (' → logprob: -13.753193855285645
    7. '_possible' → logprob: -15.003193855285645
    8. '(p' → logprob: -15.128193855285645
    9. '(true' → logprob: -15.753193855285645
    10. ' possible' → logprob: -16.00319480895996

Token 292: 'sible' (ID: 15301)
  Prédit: 'sible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -0.01819700375199318
    2. 'ible' → logprob: -4.018197059631348
    3. 'isible' → logprob: -10.018197059631348
    4. 's' → logprob: -14.143197059631348
    5. '_possible' → logprob: -14.518197059631348
    6. 'iable' → logprob: -14.893197059631348
    7. 'possible' → logprob: -14.893197059631348
    8. '_' → logprob: -15.768197059631348
    9. 'able' → logprob: -16.01819610595703
    10. 'is' → logprob: -16.51819610595703

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2664456789934775e-06
    2. ' ,' → logprob: -14.125000953674316
    3. ',
' → logprob: -15.250000953674316
    4. ')' → logprob: -16.250001907348633
    5. '```' → logprob: -17.375001907348633
    6. '(ans' → logprob: -18.125001907348633
    7. '‌,' → logprob: -18.125001907348633
    8. '<|end|>' → logprob: -18.875001907348633
    9. ',

' → logprob: -19.375001907348633
    10. '،' → logprob: -20.000001907348633

Token 294: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.31326544284820557
    2. ' ans' → logprob: -1.3132654428482056
    3. '(ans' → logprob: -12.563265800476074
    4. '	ans' → logprob: -15.563265800476074
    5. '_ans' → logprob: -18.313264846801758
    6. 'Ans' → logprob: -21.188264846801758
    7. 'ANS' → logprob: -21.438264846801758
    8. ')' → logprob: -22.813264846801758
    9. 'answer' → logprob: -22.938264846801758
    10. ' ' → logprob: -23.188264846801758

Token 295: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. '()' → logprob: -12.375008583068848
    3. ')
' → logprob: -13.250008583068848
    4. '())' → logprob: -13.375008583068848
    5. '(' → logprob: -14.750008583068848
    6. ')`' → logprob: -14.750008583068848
    7. '))' → logprob: -15.375008583068848
    8. ' )' → logprob: -15.625008583068848
    9. ')

' → logprob: -17.625009536743164
    10. ')#' → logprob: -17.875009536743164

Token 296: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002898666774854064
    2. 'main' → logprob: -6.127898693084717
    3. '#' → logprob: -7.627898693084717
    4. '```' → logprob: -9.127898216247559
    5. ' if' → logprob: -9.377898216247559
    6. '<|end|>' → logprob: -11.002898216247559
    7. '
' → logprob: -12.627898216247559
    8. '__' → logprob: -13.252898216247559
    9. '\' → logprob: -13.502898216247559
    10. 'print' → logprob: -13.502898216247559

Token 297: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0048380764201283455
    2. '(' → logprob: -5.504837989807129
    3. '()
' → logprob: -7.254837989807129
    4. '(
' → logprob: -10.629837989807129
    5. '()

' → logprob: -11.254837989807129
    6. '#' → logprob: -12.254837989807129
    7. '()\' → logprob: -13.129837989807129
    8. '()`' → logprob: -13.504837989807129
    9. '```' → logprob: -13.504837989807129
    10. '();' → logprob: -13.504837989807129


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 295
Tokens correctement prédits (1ère position, stricte): 142
Tokens correctement prédits (1ère position, avec adaptation): 155
Tokens correctement prédits (top 10): 262
Précision stricte (1ère position): 48.14%
Précision adaptée (1ère position): 52.54%
Précision (top 10): 88.81%
================================================================================
