================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
b = list(map(int, input().split()))
op = []
mylist = []
for x in b:
    mylist.append(x)
f = True
while len(mylist) > 0:
    found = False
    i = len(mylist) - 1
    while i >= 0:
        if mylist[i] == i + 1:
            op.append(mylist[i])
            del mylist[i]
            found = True
            break
        i -= 1
    if not found:
        f = False
        break
if f:
    ans = []
    i = len(op) - 1
    while i >= 0:
        ans.append(op[i])
        i -= 1
    i = 0
    while i < len(ans):
        print(ans[i])
        i += 1
else:
    print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00041339205927215517
    2. '(N' → logprob: -8.250412940979004
    3. '`' → logprob: -9.500412940979004
    4. '```' → logprob: -10.250412940979004
    5. ''' → logprob: -11.750412940979004
    6. '(
' → logprob: -11.875412940979004
    7. '("("' → logprob: -11.875412940979004
    8. 'N' → logprob: -12.250412940979004
    9. '('' → logprob: -12.500412940979004
    10. ' (' → logprob: -12.875412940979004

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03047388792037964
    2. ')' → logprob: -4.030473709106445
    3. '()' → logprob: -4.530473709106445
    4. '())' → logprob: -7.155473709106445
    5. '(
' → logprob: -8.530473709106445
    6. '('' → logprob: -9.155473709106445
    7. '("("' → logprob: -9.780473709106445
    8. '(

' → logprob: -9.905473709106445
    9. '```' → logprob: -9.905473709106445
    10. '(()' → logprob: -10.155473709106445

Token 5: 'b' (ID: 65)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5440441966056824
    2. 'if' → logprob: -1.0440442562103271
    3. 'x' → logprob: -4.294044017791748
    4. 's' → logprob: -4.419044017791748
    5. 'i' → logprob: -4.544044017791748
    6. 'a' → logprob: -5.544044017791748
    7. '`' → logprob: -6.044044017791748
    8. 'f' → logprob: -6.169044017791748
    9. 'print' → logprob: -6.169044017791748
    10. 'sum' → logprob: -6.169044017791748

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327047348022461
    2. 'i' → logprob: -1.132704734802246
    3. '=' → logprob: -3.132704734802246
    4. 'r' → logprob: -4.007704734802246
    5. 'in' → logprob: -4.257704734802246
    6. 'u' → logprob: -4.632704734802246
    7. 'a' → logprob: -4.632704734802246
    8. 'e' → logprob: -4.757704734802246
    9. ')' → logprob: -4.757704734802246
    10. '[i' → logprob: -4.882704734802246

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0550328493118286
    2. ' []' → logprob: -1.8050328493118286
    3. 'input' → logprob: -2.555032730102539
    4. ' ' → logprob: -2.555032730102539
    5. ' N' → logprob: -2.680032730102539
    6. '0' → logprob: -2.680032730102539
    7. ' [' → logprob: -3.430032730102539
    8. ' input' → logprob: -3.555032730102539
    9. '[' → logprob: -3.805032730102539
    10. 'list' → logprob: -3.930032730102539

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -9.77022064034827e-05
    2. '(b' → logprob: -11.125097274780273
    3. '("("' → logprob: -11.375097274780273
    4. '(
' → logprob: -11.625097274780273
    5. '```' → logprob: -11.625097274780273
    6. '`' → logprob: -11.625097274780273
    7. '(range' → logprob: -11.750097274780273
    8. ' (' → logprob: -11.875097274780273
    9. '('' → logprob: -12.125097274780273
    10. '(`' → logprob: -12.250097274780273

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.13228996098041534
    2. '(' → logprob: -2.3822898864746094
    3. '(str' → logprob: -3.5072898864746094
    4. '(lambda' → logprob: -7.382289886474609
    5. '(input' → logprob: -8.00728988647461
    6. '(list' → logprob: -9.25728988647461
    7. '```' → logprob: -9.38228988647461
    8. 'int' → logprob: -9.50728988647461
    9. ')' → logprob: -9.50728988647461
    10. '(
' → logprob: -9.75728988647461

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03061714395880699
    2. '(' → logprob: -3.6556172370910645
    3. ',input' → logprob: -5.9056172370910645
    4. '))' → logprob: -7.5306172370910645
    5. ')' → logprob: -7.6556172370910645
    6. ',' → logprob: -9.155616760253906
    7. 'input' → logprob: -9.155616760253906
    8. '=input' → logprob: -9.655616760253906
    9. '(int' → logprob: -10.405616760253906
    10. '(
' → logprob: -10.530616760253906

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06200689822435379
    2. ' input' → logprob: -2.812006950378418
    3. '(input' → logprob: -10.312006950378418
    4. ',input' → logprob: -12.562006950378418
    5. '=input' → logprob: -13.812006950378418
    6. ')' → logprob: -14.062006950378418
    7. '<input' → logprob: -15.187006950378418
    8. '	input' → logprob: -15.562006950378418
    9. '[input' → logprob: -16.4370059967041
    10. ' ' → logprob: -16.4370059967041

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5949346423149109
    2. '().' → logprob: -1.5949347019195557
    3. '())' → logprob: -1.9699347019195557
    4. '()))' → logprob: -2.3449347019195557
    5. '(' → logprob: -4.969934463500977
    6. ')' → logprob: -6.969934463500977
    7. '()));' → logprob: -7.094934463500977
    8. '()`' → logprob: -8.344934463500977
    9. '(),' → logprob: -8.469934463500977
    10. '))' → logprob: -8.594934463500977

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00028398085851222277
    2. 'strip' → logprob: -8.250284194946289
    3. 'rstrip' → logprob: -11.250284194946289
    4. ' split' → logprob: -11.625284194946289
    5. '(split' → logprob: -14.750284194946289
    6. 'spl' → logprob: -15.750284194946289
    7. ')' → logprob: -16.00028419494629
    8. '.split' → logprob: -16.75028419494629
    9. 'replace' → logprob: -17.87528419494629
    10. 'sp' → logprob: -18.12528419494629

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6372262239456177
    2. ')' → logprob: -0.7622262239456177
    3. '()))' → logprob: -5.887226104736328
    4. '())' → logprob: -7.012226104736328
    5. '(' → logprob: -7.637226104736328
    6. '('' → logprob: -8.637226104736328
    7. ')))' → logprob: -9.012226104736328
    8. ''))' → logprob: -10.012226104736328
    9. '()' → logprob: -10.887226104736328
    10. '(','' → logprob: -11.012226104736328

Token 15: 'op' (ID: 467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.30708661675453186
    2. 'c' → logprob: -1.8070865869522095
    3. 's' → logprob: -2.682086706161499
    4. 'a' → logprob: -3.932086706161499
    5. 'for' → logprob: -6.05708646774292
    6. 'd' → logprob: -6.05708646774292
    7. 'm' → logprob: -6.93208646774292
    8. 'r' → logprob: -7.05708646774292
    9. 'n' → logprob: -7.18208646774292
    10. '#' → logprob: -7.18208646774292

Token 16: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06532777845859528
    2. 'er' → logprob: -3.8153278827667236
    3. '_' → logprob: -4.1903276443481445
    4. ' =' → logprob: -4.4403276443481445
    5. '=' → logprob: -4.5653276443481445
    6. '[' → logprob: -6.8153276443481445
    7. '(' → logprob: -7.1903276443481445
    8. 'e' → logprob: -7.6903276443481445
    9. 'a' → logprob: -8.565327644348145
    10. '[]' → logprob: -8.690327644348145

Token 17: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7169460654258728
    2. '['' → logprob: -0.9669460654258728
    3. '[' → logprob: -3.0919461250305176
    4. '["' → logprob: -3.4669461250305176
    5. '"+"' → logprob: -3.9669461250305176
    6. 'b' → logprob: -4.841946125030518
    7. 'input' → logprob: -5.091946125030518
    8. ''' → logprob: -5.216946125030518
    9. 'list' → logprob: -5.466946125030518
    10. '+' → logprob: -6.216946125030518

Token 18: 'my' (ID: 3825)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017589282244443893
    2. ' for' → logprob: -4.642589092254639
    3. '(' → logprob: -5.642589092254639
    4. '[' → logprob: -6.767589092254639
    5. ' ' → logprob: -7.267589092254639
    6. '=' → logprob: -7.267589092254639
    7. '+' → logprob: -7.392589092254639
    8. '.' → logprob: -8.142589569091797
    9. 'f' → logprob: -8.267589569091797
    10. 'i' → logprob: -9.267589569091797

Token 19: 'list' (ID: 2641)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1061456203460693
    2. 'p' → logprob: -1.3561456203460693
    3. 's' → logprob: -2.3561456203460693
    4. 'op' → logprob: -2.3561456203460693
    5. '=' → logprob: -3.2311456203460693
    6. '_op' → logprob: -3.3561456203460693
    7. 'x' → logprob: -3.9811456203460693
    8. '.append' → logprob: -4.356145858764648
    9. '_' → logprob: -4.481145858764648
    10. 'd' → logprob: -4.481145858764648

Token 20: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3044910430908203
    2. '.' → logprob: -1.9294910430908203
    3. '(' → logprob: -3.3044910430908203
    4. '_' → logprob: -4.05449104309082
    5. '.append' → logprob: -4.05449104309082
    6. '=' → logprob: -4.17949104309082
    7. ' =' → logprob: -4.30449104309082
    8. '[:]' → logprob: -4.67949104309082
    9. 's' → logprob: -6.17949104309082
    10. '[]' → logprob: -6.42949104309082

Token 21: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.32185453176498413
    2. '[]' → logprob: -1.321854591369629
    3. '[' → logprob: -5.071854591369629
    4. ' [' → logprob: -6.321854591369629
    5. ' ' → logprob: -7.946854591369629
    6. 'b' → logprob: -10.196854591369629
    7. '[b' → logprob: -10.821854591369629
    8. ' b' → logprob: -11.071854591369629
    9. '  ' → logprob: -11.071854591369629
    10. ' [[]' → logprob: -11.696854591369629

Token 22: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0037130231503397226
    2. 'f' → logprob: -6.503713130950928
    3. ' for' → logprob: -6.753713130950928
    4. 'i' → logprob: -8.00371265411377
    5. '(' → logprob: -8.37871265411377
    6. 'n' → logprob: -9.00371265411377
    7. '[' → logprob: -9.75371265411377
    8. 'b' → logprob: -10.37871265411377
    9. 'd' → logprob: -10.50371265411377
    10. '+' → logprob: -10.62871265411377

Token 23: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07974640280008316
    2. ' ' → logprob: -2.5797464847564697
    3. 'i' → logprob: -7.704746246337891
    4. ' _' → logprob: -8.57974624633789
    5. '  ' → logprob: -9.20474624633789
    6. '_' → logprob: -9.70474624633789
    7. ' ‌' → logprob: -10.45474624633789
    8. ' x' → logprob: -11.70474624633789
    9. ' ' → logprob: -12.45474624633789
    10. ' I' → logprob: -13.07974624633789

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016234947368502617
    2. 'in' → logprob: -4.141234874725342
    3. ' ' → logprob: -8.7662353515625
    4. '  ' → logprob: -10.7662353515625
    5. '	in' → logprob: -12.2662353515625
    6. 'range' → logprob: -12.8912353515625
    7. '_' → logprob: -13.1412353515625
    8. 's' → logprob: -13.2662353515625
    9. 'n' → logprob: -13.3912353515625
    10. ' i' → logprob: -13.3912353515625

Token 25: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.9396882653236389
    2. ' range' → logprob: -1.1896882057189941
    3. 'b' → logprob: -1.3146882057189941
    4. 'range' → logprob: -3.314688205718994
    5. ' ' → logprob: -11.189688682556152
    6. ' xrange' → logprob: -12.314688682556152
    7. '_range' → logprob: -13.064688682556152
    8. '(range' → logprob: -13.189688682556152
    9. '  ' → logprob: -13.439688682556152
    10. 'Range' → logprob: -13.564688682556152

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001188445370644331
    2. ' :' → logprob: -7.001188278198242
    3. ':**' → logprob: -9.751188278198242
    4. '):' → logprob: -9.876188278198242
    5. '[' → logprob: -10.126188278198242
    6. '[:]' → logprob: -10.501188278198242
    7. ')' → logprob: -10.876188278198242
    8. ' if' → logprob: -11.251188278198242
    9. ':
' → logprob: -11.376188278198242
    10. ' in' → logprob: -11.376188278198242

Token 27: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5382164120674133
    2. ' ' → logprob: -1.6632163524627686
    3. '   ' → logprob: -2.1632163524627686
    4. ' if' → logprob: -2.7882163524627686
    5. '```' → logprob: -4.038216590881348
    6. '     
' → logprob: -4.163216590881348
    7. '<|end|>' → logprob: -4.913216590881348
    8. ' op' → logprob: -6.413216590881348
    9. ' ```' → logprob: -6.413216590881348
    10. '    
' → logprob: -6.538216590881348

Token 28: ' my' (ID: 922)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04351724684238434
    2. ' my' → logprob: -4.168517112731934
    3. ' op' → logprob: -4.168517112731934
    4. 'if' → logprob: -4.918517112731934
    5. 'my' (adapté à ' my') → logprob: -5.668517112731934
    6. 'op' → logprob: -7.668517112731934
    7. '   ' → logprob: -8.793517112731934
    8. ' while' → logprob: -9.168517112731934
    9. ' for' → logprob: -9.668517112731934
    10. '    ' → logprob: -10.793517112731934

Token 29: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.5048530030981055e-06
    2. '.append' → logprob: -13.750001907348633
    3. 'append' → logprob: -15.625001907348633
    4. '_list' → logprob: -15.750001907348633
    5. 'lista' → logprob: -18.000001907348633
    6. 'lst' → logprob: -18.625001907348633
    7. 'li' → logprob: -18.750001907348633
    8. 'l' → logprob: -18.750001907348633
    9. 'lis' → logprob: -18.750001907348633
    10. ' ' → logprob: -18.875001907348633

Token 30: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3133096992969513
    2. '.' → logprob: -1.313309669494629
    3. '.extend' → logprob: -10.813309669494629
    4. '.push' → logprob: -12.063309669494629
    5. ' .' → logprob: -12.063309669494629
    6. '.app' → logprob: -12.813309669494629
    7. '.setdefault' → logprob: -12.813309669494629
    8. 'append' → logprob: -13.063309669494629
    9. '.add' → logprob: -13.063309669494629
    10. '.Append' → logprob: -13.938309669494629

Token 31: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6934218406677246
    2. '(x' → logprob: -0.6934218406677246
    3. '((' → logprob: -8.443422317504883
    4. '(int' → logprob: -10.943422317504883
    5. '(
' → logprob: -11.068422317504883
    6. ' (' → logprob: -11.568422317504883
    7. '([' → logprob: -12.443422317504883
    8. '('' → logprob: -12.568422317504883
    9. '(len' → logprob: -13.443422317504883
    10. '(s' → logprob: -13.443422317504883

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033884502947330475
    2. '+' → logprob: -4.408884525299072
    3. ' )' → logprob: -4.533884525299072
    4. '))' → logprob: -4.783884525299072
    5. ' +' → logprob: -6.783884525299072
    6. '*' → logprob: -8.158884048461914
    7. ' ' → logprob: -8.908884048461914
    8. ' *' → logprob: -9.283884048461914
    9. ')
' → logprob: -9.533884048461914
    10. ' ))' → logprob: -9.658884048461914

Token 33: 'f' (ID: 69)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8702816963195801
    2. '+' → logprob: -1.49528169631958
    3. '.' → logprob: -2.24528169631958
    4. '[' → logprob: -2.37028169631958
    5. '\' → logprob: -3.49528169631958
    6. ' 
' → logprob: -3.87028169631958
    7. '*' → logprob: -4.12028169631958
    8. 'op' → logprob: -4.62028169631958
    9. '_' → logprob: -4.74528169631958
    10. ' if' → logprob: -4.99528169631958

Token 34: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.3917425870895386
    2. 'or' → logprob: -1.1417425870895386
    3. ' or' → logprob: -6.516742706298828
    4. '_' → logprob: -6.766742706298828
    5. 'r' → logprob: -7.641742706298828
    6. '.' → logprob: -7.891742706298828
    7. '(' → logprob: -8.141742706298828
    8. '   ' → logprob: -9.016742706298828
    9. '```' → logprob: -9.016742706298828
    10. '(or' → logprob: -9.141742706298828

Token 35: ' True' (ID: 6432)
  Prédit: ' my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' my' → logprob: -1.4335500001907349
    2. 'ilter' → logprob: -1.5585500001907349
    3. ' []' → logprob: -2.1835498809814453
    4. ' ' → logprob: -2.5585498809814453
    5. ' len' → logprob: -2.6835498809814453
    6. '[]' → logprob: -3.1835498809814453
    7. ' list' → logprob: -3.4335498809814453
    8. ' open' → logprob: -3.6835498809814453
    9. 'len' → logprob: -3.6835498809814453
    10. 'actor' → logprob: -3.6835498809814453

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27469733357429504
    2. 'for' → logprob: -2.7746973037719727
    3. ' ' → logprob: -2.8996973037719727
    4. '<|end|>' → logprob: -3.1496973037719727
    5. ':' → logprob: -4.024697303771973
    6. ',' → logprob: -4.024697303771973
    7. ' for' → logprob: -4.274697303771973
    8. ' 
' → logprob: -4.524697303771973
    9. 'if' → logprob: -5.774697303771973
    10. 'i' → logprob: -5.899697303771973

Token 37: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.265501618385315
    2. 'for' → logprob: -1.265501618385315
    3. ' 
' → logprob: -1.390501618385315
    4. ' for' → logprob: -2.3905014991760254
    5. ' ' → logprob: -3.7655014991760254
    6. ':' → logprob: -3.7655014991760254
    7. 'i' → logprob: -4.515501499176025
    8. '<|end|>' → logprob: -4.890501499176025
    9. '  
' → logprob: -5.140501499176025
    10. 'if' → logprob: -5.390501499176025

Token 38: ' len' (ID: 4631)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.06330416351556778
    2. ' True' → logprob: -3.6883041858673096
    3. ' my' → logprob: -4.3133039474487305
    4. ' ' → logprob: -4.6883039474487305
    5. ' len' → logprob: -4.6883039474487305
    6. 'f' → logprob: -5.9383039474487305
    7. ' not' → logprob: -6.9383039474487305
    8. ' b' → logprob: -8.06330394744873
    9. 'True' → logprob: -8.68830394744873
    10. 'my' → logprob: -9.18830394744873

Token 39: '(my' (ID: 23725)
  Prédit: '(my'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(my' → logprob: -0.061066556721925735
    2. '(' → logprob: -2.9360666275024414
    3. '(op' → logprob: -5.186066627502441
    4. ' (' → logprob: -8.061066627502441
    5. '(b' → logprob: -8.561066627502441
    6. 'my' → logprob: -10.936066627502441
    7. ' my' → logprob: -11.061066627502441
    8. '(m' → logprob: -11.311066627502441
    9. '(s' → logprob: -11.561066627502441
    10. '('' → logprob: -13.061066627502441

Token 40: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.320199877838604e-07
    2. '_list' → logprob: -15.25
    3. ' list' → logprob: -17.625
    4. 'lista' → logprob: -18.0
    5. 'my' → logprob: -18.0
    6. 'ist' → logprob: -18.375
    7. 'List' → logprob: -18.375
    8. ')' → logprob: -18.625
    9. 'op' → logprob: -18.625
    10. '>' → logprob: -18.75

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2516891658306122
    2. ' >' → logprob: -1.8766891956329346
    3. ' )' → logprob: -3.2516891956329346
    4. ')>' → logprob: -4.1266889572143555
    5. '>' → logprob: -4.2516889572143555
    6. ' ' → logprob: -8.126688957214355
    7. ' ' → logprob: -12.001688957214355
    8. ' and' → logprob: -12.501688957214355
    9. '```' → logprob: -12.501688957214355
    10. ')>=' → logprob: -12.876688957214355

Token 42: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02645263634622097
    2. '>' → logprob: -3.6514525413513184
    3. ' ' → logprob: -9.026453018188477
    4. ' >=' → logprob: -11.526453018188477
    5. ' !=' → logprob: -11.776453018188477
    6. ' and' → logprob: -13.151453018188477
    7. ' &' → logprob: -13.276453018188477
    8. '  ' → logprob: -13.276453018188477
    9. ' ' → logprob: -13.401453018188477
    10. ' <' → logprob: -13.901453018188477

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33258259296417236
    2. ' ' → logprob: -1.3325825929641724
    3. '0' → logprob: -3.957582473754883
    4. '2' → logprob: -10.832582473754883
    5. ' ' → logprob: -13.707582473754883
    6. '3' → logprob: -13.832582473754883
    7. '  ' → logprob: -13.895082473754883
    8. '   ' → logprob: -13.957582473754883
    9. '>' → logprob: -14.520082473754883
    10. '4' → logprob: -14.832582473754883

Token 44: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08969506621360779
    2. '0' → logprob: -2.4646949768066406
    3. ' ' → logprob: -7.214694976806641
    4. '2' → logprob: -11.21469497680664
    5. '   ' → logprob: -13.46469497680664
    6. '```' → logprob: -14.21469497680664
    7. '  ' → logprob: -14.46469497680664
    8. '3' → logprob: -14.52719497680664
    9. '>' → logprob: -14.90219497680664
    10. ' ' → logprob: -15.21469497680664

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013607845176011324
    2. ' and' → logprob: -9.125136375427246
    3. ':
' → logprob: -11.750136375427246
    4. ' :' → logprob: -11.750136375427246
    5. ',' → logprob: -12.375136375427246
    6. 'and' → logprob: -13.000136375427246
    7. ':**' → logprob: -13.625136375427246
    8. '[' → logprob: -14.000136375427246
    9. '   ' → logprob: -14.000136375427246
    10. '[:]' → logprob: -14.500136375427246

Token 46: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5545818209648132
    2. ' ' → logprob: -0.9295818209648132
    3. '     
' → logprob: -4.554581642150879
    4. '    ' → logprob: -5.054581642150879
    5. '   ' → logprob: -5.804581642150879
    6. '    
' → logprob: -5.929581642150879
    7. ' if' → logprob: -6.304581642150879
    8. '<|end|>' → logprob: -6.554581642150879
    9. '  
' → logprob: -7.554581642150879
    10. '\n' → logprob: -7.554581642150879

Token 47: ' found' (ID: 2491)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42345669865608215
    2. ' ' → logprob: -1.1734566688537598
    3. 'if' → logprob: -5.17345666885376
    4. ' 
' → logprob: -5.29845666885376
    5. ' i' → logprob: -5.79845666885376
    6. '    ' → logprob: -5.79845666885376
    7. ' ```' → logprob: -6.04845666885376
    8. '   ' → logprob: -6.04845666885376
    9. 'i' → logprob: -6.42345666885376
    10. 'n' → logprob: -6.42345666885376

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026919236406683922
    2. '_' → logprob: -3.90191912651062
    3. '=' → logprob: -5.151919364929199
    4. ' ' → logprob: -7.776919364929199
    5. ',' → logprob: -10.1519193649292
    6. ':' → logprob: -10.5269193649292
    7. '_space' → logprob: -10.7769193649292
    8. '_=' → logprob: -10.9019193649292
    9. ' _' → logprob: -11.9019193649292
    10. '=False' → logprob: -12.0269193649292

Token 49: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5759561657905579
    2. 'False' → logprob: -0.8259561657905579
    3. ' True' → logprob: -11.325956344604492
    4. 'True' → logprob: -12.700956344604492
    5. '0' → logprob: -14.825956344604492
    6. ' my' → logprob: -14.825956344604492
    7. ' ' → logprob: -14.950956344604492
    8. '   ' → logprob: -15.575956344604492
    9. 'my' → logprob: -15.825956344604492
    10. '(False' → logprob: -15.950956344604492

Token 50: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3872132301330566
    2. ' ' → logprob: -1.5122132301330566
    3. ' if' → logprob: -1.8872132301330566
    4. ' for' → logprob: -2.1372132301330566
    5. ' 
' → logprob: -2.3872132301330566
    6. '<|end|>' → logprob: -2.5122132301330566
    7. ':' → logprob: -3.7622132301330566
    8. '   
' → logprob: -4.387213230133057
    9. '    
' → logprob: -4.762213230133057
    10. '  
' → logprob: -4.762213230133057

Token 51: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.052756521850824356
    2. ' ' → logprob: -3.9277565479278564
    3. 'for' → logprob: -4.177756309509277
    4. ' 
' → logprob: -4.302756309509277
    5. '\n' → logprob: -6.927756309509277
    6. '<|end|>' → logprob: -7.052756309509277
    7. ' if' → logprob: -8.177756309509277
    8. '
' → logprob: -8.302756309509277
    9. '  
' → logprob: -8.927756309509277
    10. '   ' → logprob: -9.677756309509277

Token 53: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5938102602958679
    2. 'nd' → logprob: -1.4688103199005127
    3. 'f' → logprob: -1.9688103199005127
    4. ' =' → logprob: -2.9688103199005127
    5. '=' → logprob: -4.093810081481934
    6. ' ' → logprob: -6.093810081481934
    7. ' n' → logprob: -6.343810081481934
    8. 'nt' → logprob: -6.468810081481934
    9. 's' → logprob: -6.968810081481934
    10. 'd' → logprob: -7.218810081481934

Token 54: ' len' (ID: 4631)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01821526512503624
    2. '0' → logprob: -4.018215179443359
    3. ' len' → logprob: -9.76821517944336
    4. 'len' → logprob: -12.76821517944336
    5. '1' → logprob: -13.14321517944336
    6. ' my' → logprob: -13.64321517944336
    7. ' -' → logprob: -14.64321517944336
    8. ' ' → logprob: -14.95571517944336
    9. '<|end|>' → logprob: -15.33071517944336
    10. 'my' → logprob: -16.08071517944336

Token 55: '(my' (ID: 23725)
  Prédit: '(my'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(my' → logprob: -0.0014616657281294465
    2. '(' → logprob: -6.626461505889893
    3. 'my' → logprob: -9.00146198272705
    4. '(m' → logprob: -11.37646198272705
    5. '(
' → logprob: -15.50146198272705
    6. ' my' → logprob: -15.62646198272705
    7. ' (' → logprob: -16.126461029052734
    8. '	my' → logprob: -16.251461029052734
    9. '(max' → logprob: -16.876461029052734
    10. '(

' → logprob: -16.876461029052734

Token 56: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.672236824873835e-05
    2. 'my' → logprob: -10.500076293945312
    3. '_list' → logprob: -11.250076293945312
    4. 'ly' → logprob: -11.500076293945312
    5. 'ist' → logprob: -11.875076293945312
    6. 'lst' → logprob: -11.875076293945312
    7. 'li' → logprob: -12.625076293945312
    8. 'y' → logprob: -13.125076293945312
    9. ')' → logprob: -13.250076293945312
    10. 'l' → logprob: -13.500076293945312

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19578678905963898
    2. '-' → logprob: -1.8207868337631226
    3. ')-' → logprob: -4.570786952972412
    4. ' -' → logprob: -5.445786952972412
    5. ' )' → logprob: -6.945786952972412
    6. '[' → logprob: -8.695786476135254
    7. '-)' → logprob: -10.070786476135254
    8. ' ' → logprob: -10.695786476135254
    9. '()-' → logprob: -11.445786476135254
    10. '   ' → logprob: -11.570786476135254

Token 58: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34892213344573975
    2. ' -' → logprob: -1.2239221334457397
    3. ' ' → logprob: -7.848922252655029
    4. ')' → logprob: -9.848921775817871
    5. '`' → logprob: -11.723921775817871
    6. '```' → logprob: -12.348921775817871
    7. '[' → logprob: -12.848921775817871
    8. '()-' → logprob: -13.098921775817871
    9. '1' → logprob: -13.348921775817871
    10. '<|end|>' → logprob: -13.473921775817871

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019763342570513487
    2. ' ' → logprob: -6.751976490020752
    3. '2' → logprob: -7.126976490020752
    4. '```' → logprob: -13.876976013183594
    5. '<|end|>' → logprob: -14.126976013183594
    6. ')' → logprob: -15.501976013183594
    7. '`' → logprob: -16.001976013183594
    8. '<|end|>' → logprob: -16.376976013183594
    9. '>' → logprob: -16.564476013183594
    10. '   ' → logprob: -16.814476013183594

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001206423039548099
    2. '2' → logprob: -6.751206398010254
    3. ' ' → logprob: -10.251206398010254
    4. '3' → logprob: -14.813706398010254
    5. '   ' → logprob: -15.751206398010254
    6. '```' → logprob: -16.43870735168457
    7. '  ' → logprob: -17.31370735168457
    8. '１' → logprob: -17.62620735168457
    9. '4' → logprob: -17.68870735168457
    10. '0' → logprob: -17.68870735168457

Token 61: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008669880218803883
    2. 'i' → logprob: -4.758669853210449
    3. ' not' → logprob: -10.38366985321045
    4. ' ' → logprob: -11.25866985321045
    5. '	i' → logprob: -12.38366985321045
    6. '0' → logprob: -12.63366985321045
    7. 'not' → logprob: -12.88366985321045
    8. '(i' → logprob: -14.63366985321045
    9. '<|end|>' → logprob: -14.88366985321045
    10. ' ' → logprob: -15.75866985321045

Token 65: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.019054332748055458
    2. '>=' → logprob: -4.019054412841797
    3. ' >' → logprob: -7.269054412841797
    4. ' ' → logprob: -9.144054412841797
    5. '>' → logprob: -9.394054412841797
    6. ' ' → logprob: -12.644054412841797
    7. ' ≥' → logprob: -13.269054412841797
    8. '<|end|>' → logprob: -13.519054412841797
    9. ')>=' → logprob: -13.519054412841797
    10. '   ' → logprob: -13.769054412841797

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008052219054661691
    2. ' ' → logprob: -7.125805377960205
    3. '   ' → logprob: -14.250804901123047
    4. '<|end|>' → logprob: -17.250804901123047
    5. '1' → logprob: -17.625804901123047
    6. '  ' → logprob: -18.625804901123047
    7. '۰' → logprob: -19.250804901123047
    8. '...' → logprob: -19.250804901123047
    9. '```' → logprob: -19.375804901123047
    10. ')' → logprob: -19.625804901123047

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.750051498413086
    4. '1' → logprob: -17.625051498413086
    5. '  ' → logprob: -19.625051498413086
    6. '۰' → logprob: -20.000051498413086
    7. '
' → logprob: -20.750051498413086
    8. '00' → logprob: -20.750051498413086
    9. '<|end|>' → logprob: -20.812551498413086
    10. '```' → logprob: -21.125051498413086

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019633926451206207
    2. ' and' → logprob: -4.019633769989014
    3. 'and' → logprob: -7.269633769989014
    4. ' :' → logprob: -7.769633769989014
    5. ':
' → logprob: -8.894634246826172
    6. '<|end|>' → logprob: -9.269634246826172
    7. '):' → logprob: -9.644634246826172
    8. '   ' → logprob: -10.269634246826172
    9. ')' → logprob: -11.394634246826172
    10. ' ' → logprob: -12.144634246826172

Token 69: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08946358412504196
    2. '       ' → logprob: -3.464463472366333
    3. ' :' → logprob: -3.964463472366333
    4. '<|end|>' → logprob: -4.214463710784912
    5. ' ' → logprob: -4.964463710784912
    6. ' and' → logprob: -5.214463710784912
    7. '   ' → logprob: -5.964463710784912
    8. ':
' → logprob: -6.089463710784912
    9. '    ' → logprob: -6.964463710784912
    10. ' :
' → logprob: -7.214463710784912

Token 70: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6301876306533813
    2. '<|end|>' → logprob: -1.6301876306533813
    3. '       ' → logprob: -1.7551876306533813
    4. ' if' → logprob: -3.630187511444092
    5. ':' → logprob: -3.880187511444092
    6. '   ' → logprob: -4.505187511444092
    7. ' and' → logprob: -4.505187511444092
    8. ' :' → logprob: -4.630187511444092
    9. '    ' → logprob: -4.755187511444092
    10. ' 
' → logprob: -5.880187511444092

Token 71: ' my' (ID: 922)
  Prédit: ' my'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' my' → logprob: -0.20747564733028412
    2. 'my' → logprob: -1.7074756622314453
    3. ' i' → logprob: -5.707475662231445
    4. 'i' → logprob: -7.582475662231445
    5. ' (' → logprob: -7.582475662231445
    6. ' len' → logprob: -7.707475662231445
    7. ' x' → logprob: -7.832475662231445
    8. '(my' → logprob: -8.332475662231445
    9. 'x' → logprob: -8.582475662231445
    10. 'len' → logprob: -8.832475662231445

Token 72: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.704273118884885e-07
    2. '_list' → logprob: -15.375000953674316
    3. '[i' → logprob: -16.0
    4. ' list' → logprob: -16.625
    5. 'i' → logprob: -16.75
    6. 'List' → logprob: -17.75
    7. 'li' → logprob: -17.75
    8. 'lis' → logprob: -17.875
    9. 'lists' → logprob: -18.0
    10. 'len' → logprob: -18.125

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003612186061218381
    2. '[' → logprob: -5.753612041473389
    3. '%' → logprob: -8.503612518310547
    4. '[-' → logprob: -8.628612518310547
    5. ' [' → logprob: -11.378612518310547
    6. ' %' → logprob: -11.878612518310547
    7. ' ' → logprob: -12.378612518310547
    8. '[len' → logprob: -12.378612518310547
    9. '```' → logprob: -12.378612518310547
    10. '[%' → logprob: -12.503612518310547

Token 74: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10174728184938431
    2. '%' → logprob: -2.7267472743988037
    3. ' ' → logprob: -4.351747512817383
    4. '[' → logprob: -4.851747512817383
    5. ' ==' → logprob: -5.476747512817383
    6. '==' → logprob: -6.476747512817383
    7. ' <=' → logprob: -6.476747512817383
    8. ' >=' → logprob: -7.226747512817383
    9. ' >' → logprob: -7.351747512817383
    10. ')' → logprob: -7.351747512817383

Token 75: ' ==' (ID: 951)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5086067914962769
    2. ' %' → logprob: -1.1336067914962769
    3. '==' → logprob: -3.1336069107055664
    4. ' ==' → logprob: -4.133606910705566
    5. ' ' → logprob: -4.758606910705566
    6. '<=' → logprob: -6.133606910705566
    7. ' <=' → logprob: -6.258606910705566
    8. '>=' → logprob: -6.633606910705566
    9. '>' → logprob: -7.008606910705566
    10. '-' → logprob: -7.758606910705566

Token 76: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.546065628528595
    2. ' i' → logprob: -0.921065628528595
    3. ' my' → logprob: -4.921065807342529
    4. 'my' → logprob: -5.671065807342529
    5. 'len' → logprob: -5.921065807342529
    6. ' (' → logprob: -6.046065807342529
    7. ' len' → logprob: -6.671065807342529
    8. '(i' → logprob: -7.171065807342529
    9. 'b' → logprob: -7.296065807342529
    10. ' ' → logprob: -7.421065807342529

Token 77: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13001281023025513
    2. ' +' → logprob: -2.1300127506256104
    3. ':' → logprob: -6.3800129890441895
    4. ' ' → logprob: -7.2550129890441895
    5. '<|end|>' → logprob: -8.130012512207031
    6. ')' → logprob: -8.755012512207031
    7. ' and' → logprob: -9.630012512207031
    8. '):' → logprob: -10.380012512207031
    9. '<|end|>' → logprob: -10.630012512207031
    10. ' :' → logprob: -10.630012512207031

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005122834118083119
    2. ' ' → logprob: -7.62551212310791
    3. '2' → logprob: -11.12551212310791
    4. '+' → logprob: -12.12551212310791
    5. '<|end|>' → logprob: -13.75051212310791
    6. ' +' → logprob: -14.25051212310791
    7. '   ' → logprob: -14.25051212310791
    8. '...' → logprob: -15.00051212310791
    9. '`' → logprob: -15.25051212310791
    10. '<|end|>' → logprob: -15.25051212310791

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3120038501219824e-05
    2. ' ' → logprob: -10.000053405761719
    3. '2' → logprob: -11.875053405761719
    4. '+' → logprob: -15.812553405761719
    5. '...' → logprob: -16.56255340576172
    6. '  ' → logprob: -16.68755340576172
    7. '<|end|>' → logprob: -17.12505340576172
    8. '   ' → logprob: -17.43755340576172
    9. '```' → logprob: -17.50005340576172
    10. '`' → logprob: -17.50005340576172

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0061752633191645145
    2. ' and' → logprob: -5.5061750411987305
    3. ' :' → logprob: -6.6311750411987305
    4. '):' → logprob: -8.50617504119873
    5. ' or' → logprob: -8.63117504119873
    6. '<|end|>' → logprob: -9.00617504119873
    7. 'and' → logprob: -9.50617504119873
    8. ':
' → logprob: -9.50617504119873
    9. ')' → logprob: -9.50617504119873
    10. ' ' → logprob: -10.88117504119873

Token 81: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062178194522857666
    2. ':
' → logprob: -3.062178134918213
    3. '       ' → logprob: -4.812178134918213
    4. '           ' → logprob: -5.687178134918213
    5. ' and' → logprob: -7.687178134918213
    6. ' :' → logprob: -8.062178611755371
    7. '\n' → logprob: -8.187178611755371
    8. '
' → logprob: -8.937178611755371
    9. '):' → logprob: -9.062178611755371
    10. ' :
' → logprob: -9.687178611755371

Token 82: ' op' (ID: 991)
  Prédit: ' my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' my' → logprob: -0.2891792953014374
    2. ' op' → logprob: -1.6641793251037598
    3. ' found' → logprob: -3.4141793251037598
    4. '       ' → logprob: -4.78917932510376
    5. ' del' → logprob: -5.16417932510376
    6. ' 
' → logprob: -5.53917932510376
    7. 'my' → logprob: -5.78917932510376
    8. '   ' → logprob: -6.03917932510376
    9. 'op' (adapté à ' op') → logprob: -6.41417932510376
    10. '        
' → logprob: -7.28917932510376

Token 83: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.05561278760433197
    2. '.' → logprob: -2.930612802505493
    3. '.pop' → logprob: -7.430612564086914
    4. '.remove' → logprob: -9.305612564086914
    5. ' .' → logprob: -10.680612564086914
    6. '.extend' → logprob: -12.055612564086914
    7. '.push' → logprob: -12.180612564086914
    8. 'append' → logprob: -12.805612564086914
    9. '.insert' → logprob: -13.555612564086914
    10. '.Append' → logprob: -13.555612564086914

Token 84: '(my' (ID: 23725)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7837178707122803
    2. '(my' → logprob: -0.7837178707122803
    3. '(' → logprob: -3.2837178707122803
    4. '('' → logprob: -3.6587178707122803
    5. '((' → logprob: -4.408718109130859
    6. '("("' → logprob: -4.783718109130859
    7. 'my' → logprob: -6.408718109130859
    8. '(len' → logprob: -7.908718109130859
    9. '([' → logprob: -8.03371810913086
    10. '(('' → logprob: -9.15871810913086

Token 85: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.8789383830153383e-05
    2. ')' → logprob: -12.250019073486328
    3. 'op' → logprob: -12.625019073486328
    4. 'ist' → logprob: -13.000019073486328
    5. 'my' → logprob: -14.125019073486328
    6. '))' → logprob: -14.125019073486328
    7. '[' → logprob: -14.375019073486328
    8. ']' → logprob: -14.375019073486328
    9. '[i' → logprob: -14.375019073486328
    10. 'lis' → logprob: -14.625019073486328

Token 86: '[i' (ID: 1768)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0006087943911552429
    2. '[i' → logprob: -7.500608921051025
    3. '[:' → logprob: -10.000608444213867
    4. '.' → logprob: -12.000608444213867
    5. 'pop' → logprob: -12.750608444213867
    6. ' .' → logprob: -14.875608444213867
    7. ' pop' → logprob: -15.000608444213867
    8. '[' → logprob: -15.375608444213867
    9. ')' → logprob: -15.750608444213867
    10. '.remove' → logprob: -16.000608444213867

Token 87: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1470085233449936
    2. ')
' → logprob: -2.0220084190368652
    3. '])' → logprob: -6.022008419036865
    4. '')' → logprob: -8.022008895874023
    5. '])
' → logprob: -8.022008895874023
    6. '))' → logprob: -8.272008895874023
    7. '`)' → logprob: -8.647008895874023
    8. '))
' → logprob: -8.897008895874023
    9. ']' → logprob: -9.022008895874023
    10. ' )' → logprob: -9.147008895874023

Token 88: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24755680561065674
    2. '            
' → logprob: -2.372556686401367
    3. '    
' → logprob: -3.372556686401367
    4. '
' → logprob: -3.747556686401367
    5. ' 
' → logprob: -4.122556686401367
    6. '  
' → logprob: -4.372556686401367
    7. '\n' → logprob: -4.997556686401367
    8. '   
' → logprob: -5.247556686401367
    9. '        
' → logprob: -5.372556686401367
    10. '' → logprob: -5.872556686401367

Token 89: ' del' (ID: 1083)
  Prédit: ' my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' my' → logprob: -0.10793688893318176
    2. ' del' → logprob: -2.6079368591308594
    3. 'my' → logprob: -3.6079368591308594
    4. 'del' (adapté à ' del') → logprob: -6.982936859130859
    5. '   ' → logprob: -7.607936859130859
    6. '           ' → logprob: -10.23293685913086
    7. '```' → logprob: -11.10793685913086
    8. ' break' → logprob: -11.48293685913086
    9. '	my' → logprob: -11.48293685913086
    10. '    
' → logprob: -11.98293685913086

Token 90: ' my' (ID: 922)
  Prédit: ' my'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' my' → logprob: -0.00035512709291651845
    2. '(my' → logprob: -8.375354766845703
    3. 'my' → logprob: -9.000354766845703
    4. '	my' → logprob: -13.875354766845703
    5. ' ' → logprob: -16.125354766845703
    6. '[' → logprob: -16.250354766845703
    7. '(' → logprob: -17.125354766845703
    8. ',my' → logprob: -18.250354766845703
    9. '.my' → logprob: -18.375354766845703
    10. ' ' → logprob: -18.625354766845703

Token 91: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.106736039626412e-05
    2. 'ist' → logprob: -10.500031471252441
    3. 'lst' → logprob: -13.500031471252441
    4. 'li' → logprob: -14.125031471252441
    5. '_list' → logprob: -14.750031471252441
    6. ' list' → logprob: -15.250031471252441
    7. 'List' → logprob: -15.750031471252441
    8. 'olist' → logprob: -16.375030517578125
    9. 'lista' → logprob: -16.500030517578125
    10. 'st' → logprob: -16.750030517578125

Token 92: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.043102871626615524
    2. '[' → logprob: -3.168102979660034
    3. '[
' → logprob: -9.543103218078613
    4. '```' → logprob: -12.043103218078613
    5. ' [' → logprob: -12.168103218078613
    6. '[:' → logprob: -12.293103218078613
    7. '[:]' → logprob: -12.918103218078613
    8. '[I' → logprob: -12.918103218078613
    9. '\[' → logprob: -13.793103218078613
    10. '[j' → logprob: -13.918103218078613

Token 93: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28127866983413696
    2. ')
' → logprob: -1.4062786102294922
    3. '           ' → logprob: -10.031278610229492
    4. ')
' → logprob: -10.281278610229492
    5. ')

' → logprob: -11.156278610229492
    6. ']' → logprob: -11.906278610229492
    7. '       ' → logprob: -11.906278610229492
    8. '```' → logprob: -12.906278610229492
    9. '   ' → logprob: -13.031278610229492
    10. '               ' → logprob: -13.406278610229492

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21964868903160095
    2. '
' → logprob: -2.219648599624634
    3. ' 
' → logprob: -3.219648599624634
    4. '            
' → logprob: -3.344648599624634
    5. '    
' → logprob: -5.469648838043213
    6. '        
' → logprob: -5.969648838043213
    7. '       ' → logprob: -6.594648838043213
    8. '  
' → logprob: -6.844648838043213
    9. '```' → logprob: -6.969648838043213
    10. '   
' → logprob: -7.094648838043213

Token 95: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.2016359120607376
    2. ' found' → logprob: -1.7016359567642212
    3. '	found' → logprob: -8.95163631439209
    4. '           ' → logprob: -9.70163631439209
    5. 'Found' → logprob: -11.82663631439209
    6. '_found' → logprob: -12.07663631439209
    7. '(found' → logprob: -12.20163631439209
    8. '            
' → logprob: -12.32663631439209
    9. ' 
' → logprob: -12.82663631439209
    10. '
' → logprob: -12.95163631439209

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0889841690659523
    2. '=' → logprob: -2.463984251022339
    3. ' ' → logprob: -10.088984489440918
    4. '=True' → logprob: -12.963984489440918
    5. '    ' → logprob: -15.588984489440918
    6. '<|end|>' → logprob: -15.713984489440918
    7. ' =
' → logprob: -15.838984489440918
    8. 's' → logprob: -16.7139835357666
    9. '   ' → logprob: -17.2139835357666
    10. '=False' → logprob: -17.2139835357666

Token 97: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2014133334159851
    2. 'True' → logprob: -1.7014133930206299
    3. '(True' → logprob: -17.576414108276367
    4. '=True' → logprob: -17.701414108276367
    5. ' Tru' → logprob: -19.076414108276367
    6. 'Tr' → logprob: -20.451414108276367
    7. '.True' → logprob: -21.451414108276367
    8. ' Tr' → logprob: -22.076414108276367
    9. '1' → logprob: -22.451414108276367
    10. '   ' → logprob: -22.576414108276367

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8484476804733276
    2. ' 
' → logprob: -1.2234476804733276
    3. '           ' → logprob: -1.7234476804733276
    4. '\n' → logprob: -3.348447799682617
    5. '            
' → logprob: -3.473447799682617
    6. '        
' → logprob: -4.348447799682617
    7. '    
' → logprob: -4.723447799682617
    8. '       ' → logprob: -5.848447799682617
    9. '  
' → logprob: -5.848447799682617
    10. '   
' → logprob: -7.098447799682617

Token 99: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6243616342544556
    2. '           ' → logprob: -1.7493616342544556
    3. '
' → logprob: -1.8743616342544556
    4. '            
' → logprob: -2.999361515045166
    5. '    
' → logprob: -3.499361515045166
    6. '\n' → logprob: -3.749361515045166
    7. '        
' → logprob: -4.374361515045166
    8. '     
' → logprob: -5.374361515045166
    9. '  
' → logprob: -5.374361515045166
    10. '   
' → logprob: -5.874361515045166

Token 100: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6058711409568787
    2. '   ' → logprob: -1.8558712005615234
    3. ' break' → logprob: -2.3558712005615234
    4. '    ' → logprob: -2.6058712005615234
    5. ' 
' → logprob: -2.9808712005615234
    6. '           ' → logprob: -3.8558712005615234
    7. 'break' (adapté à ' break') → logprob: -4.105871200561523
    8. '    
' → logprob: -4.355871200561523
    9. '        
' → logprob: -5.105871200561523
    10. '	break' → logprob: -5.230871200561523

Token 101: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23363083600997925
    2. '
' → logprob: -2.233630895614624
    3. ' 
' → logprob: -2.858630895614624
    4. '        
' → logprob: -3.733630895614624
    5. '    
' → logprob: -5.858630657196045
    6. '<|end|>' → logprob: -5.858630657196045
    7. '       
' → logprob: -5.983630657196045
    8. '  
' → logprob: -5.983630657196045
    9. '   
' → logprob: -6.358630657196045
    10. '   ' → logprob: -6.358630657196045

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012899604625999928
    2. '
' → logprob: -5.137899398803711
    3. ' 
' → logprob: -5.887899398803711
    4. '   ' → logprob: -6.012899398803711
    5. '        
' → logprob: -7.637899398803711
    6. '       
' → logprob: -8.262899398803711
    7. '    
' → logprob: -8.762899398803711
    8. '<|end|>' → logprob: -8.887899398803711
    9. '   
' → logprob: -9.012899398803711
    10. '```' → logprob: -9.387899398803711

Token 103: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4200011193752289
    2. '   ' → logprob: -1.2950011491775513
    3. '
' → logprob: -3.6700010299682617
    4. '    
' → logprob: -4.170001029968262
    5. '        
' → logprob: -4.545001029968262
    6. ' 
' → logprob: -4.795001029968262
    7. '   
' → logprob: -6.420001029968262
    8. ' i' → logprob: -6.545001029968262
    9. '       
' → logprob: -6.545001029968262
    10. '    ' → logprob: -7.170001029968262

Token 104: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.36940592527389526
    2. '-' → logprob: -1.86940598487854
    3. ' -=' → logprob: -1.86940598487854
    4. ' -' → logprob: -7.869405746459961
    5. '=' → logprob: -10.744405746459961
    6. '    ' → logprob: -11.869405746459961
    7. ' ' → logprob: -12.119405746459961
    8. '   ' → logprob: -12.744405746459961
    9. '+=' → logprob: -13.119405746459961
    10. '```' → logprob: -13.494405746459961

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.250096321105957
    4. '  ' → logprob: -18.125097274780273
    5. '```' → logprob: -18.250097274780273
    6. '       ' → logprob: -18.875097274780273
    7. '    ' → logprob: -19.250097274780273
    8. '<|end|>' → logprob: -19.875097274780273
    9. '１' → logprob: -20.125097274780273
    10. '۱' → logprob: -20.250097274780273

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '  ' → logprob: -19.187501907348633
    6. '۱' → logprob: -20.000001907348633
    7. '0' → logprob: -20.375001907348633
    8. '１' → logprob: -20.437501907348633
    9. '<|end|>' → logprob: -20.500001907348633
    10. '१' → logprob: -20.812501907348633

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04634169489145279
    2. 'if' → logprob: -3.92134165763855
    3. '
' → logprob: -4.171341896057129
    4. ' if' → logprob: -4.796341896057129
    5. '    
' → logprob: -7.171341896057129
    6. ' 
' → logprob: -8.296341896057129
    7. '```' → logprob: -8.421341896057129
    8. '  
' → logprob: -8.546341896057129
    9. '<|end|>' → logprob: -8.671341896057129
    10. ' ' → logprob: -10.296341896057129

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14820455014705658
    2. 'if' → logprob: -2.8982045650482178
    3. '
' → logprob: -3.0232045650482178
    4. ' if' → logprob: -3.6482045650482178
    5. '    
' → logprob: -5.648204326629639
    6. '  
' → logprob: -6.523204326629639
    7. ' 
' → logprob: -6.648204326629639
    8. 'else' → logprob: -7.523204326629639
    9. '```' → logprob: -7.648204326629639
    10. '<|end|>' → logprob: -8.648204803466797

Token 109: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12058337777853012
    2. ' if' → logprob: -2.6205832958221436
    3. '   ' → logprob: -3.2455832958221436
    4. ' 
' → logprob: -7.370583534240723
    5. '    
' → logprob: -7.620583534240723
    6. 'else' → logprob: -8.120583534240723
    7. '  
' → logprob: -8.870583534240723
    8. '```' → logprob: -9.245583534240723
    9. ' ' → logprob: -9.495583534240723
    10. '
' → logprob: -9.995583534240723

Token 110: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004628772847354412
    2. 'not' → logprob: -5.379628658294678
    3. ' found' → logprob: -12.129629135131836
    4. ' ' → logprob: -13.254629135131836
    5. ' ' → logprob: -14.629629135131836
    6. 'found' → logprob: -15.129629135131836
    7. ' no' → logprob: -15.254629135131836
    8. '   ' → logprob: -15.879629135131836
    9. '	not' → logprob: -15.879629135131836
    10. '!' → logprob: -16.504629135131836

Token 111: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.2519383430480957
    2. 'found' → logprob: -1.5019383430480957
    3. '	found' → logprob: -12.126937866210938
    4. ' ' → logprob: -12.876937866210938
    5. '(found' → logprob: -14.876937866210938
    6. 'f' → logprob: -15.001937866210938
    7. '_found' → logprob: -15.501937866210938
    8. ' f' → logprob: -15.501937866210938
    9. ' ' → logprob: -16.251937866210938
    10. 'Found' → logprob: -16.501937866210938

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006776707712560892
    2. ':
' → logprob: -5.131776809692383
    3. ' :' → logprob: -7.256776809692383
    4. '   ' → logprob: -9.256776809692383
    5. ' :
' → logprob: -10.881776809692383
    6. ':

' → logprob: -12.381776809692383
    7. ' ' → logprob: -12.381776809692383
    8. '=' → logprob: -12.756776809692383
    9. '```' → logprob: -13.256776809692383
    10. '):
' → logprob: -13.381776809692383

Token 113: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015250948490574956
    2. '       ' → logprob: -6.751524925231934
    3. ' print' → logprob: -8.751524925231934
    4. 'print' → logprob: -9.126524925231934
    5. ' f' → logprob: -10.626524925231934
    6. 'f' → logprob: -10.876524925231934
    7. 'break' → logprob: -11.376524925231934
    8. '```' → logprob: -11.376524925231934
    9. ' break' → logprob: -11.626524925231934
    10. '
' → logprob: -12.251524925231934

Token 114: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.3063049018383026
    2. ' f' → logprob: -1.931304931640625
    3. 'print' → logprob: -2.431304931640625
    4. ' print' → logprob: -3.681304931640625
    5. '   ' → logprob: -5.681304931640625
    6. ' break' → logprob: -6.681304931640625
    7. 'break' → logprob: -7.306304931640625
    8. '    ' → logprob: -8.431304931640625
    9. '```' → logprob: -9.306304931640625
    10. '
' → logprob: -9.931304931640625

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11622802913188934
    2. 'a' → logprob: -2.6162281036376953
    3. ' =' → logprob: -3.6162281036376953
    4. 'alse' → logprob: -4.866228103637695
    5. ' ' → logprob: -6.616228103637695
    6. ' a' → logprob: -7.616228103637695
    7. '=False' → logprob: -9.366228103637695
    8. '=
' → logprob: -10.116228103637695
    9. '   ' → logprob: -11.241228103637695
    10. 'ail' → logprob: -11.366228103637695

Token 116: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00861456897109747
    2. ' False' → logprob: -4.758614540100098
    3. '=False' → logprob: -19.008615493774414
    4. '(False' → logprob: -19.258615493774414
    5. 'F' → logprob: -19.633615493774414
    6. 'True' → logprob: -19.883615493774414
    7. 'false' → logprob: -19.883615493774414
    8. '.False' → logprob: -20.883615493774414
    9. '_false' → logprob: -21.133615493774414
    10. ' false' → logprob: -22.258615493774414

Token 117: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4291318356990814
    2. '   ' → logprob: -1.0541318655014038
    3. '           ' → logprob: -8.929131507873535
    4. '    
' → logprob: -9.929131507873535
    5. '    ' → logprob: -10.179131507873535
    6. ' else' → logprob: -10.304131507873535
    7. '\n' → logprob: -10.804131507873535
    8. '.' → logprob: -10.804131507873535
    9. '<|end|>' → logprob: -10.804131507873535
    10. 'else' → logprob: -10.929131507873535

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16186094284057617
    2. '   ' → logprob: -1.9118609428405762
    3. '    ' → logprob: -6.911860942840576
    4. '           ' → logprob: -8.411861419677734
    5. '      ' → logprob: -9.286861419677734
    6. '     ' → logprob: -9.536861419677734
    7. '        ' → logprob: -10.036861419677734
    8. ' ' → logprob: -10.036861419677734
    9. '  ' → logprob: -10.161861419677734
    10. ' if' → logprob: -10.286861419677734

Token 119: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5268867611885071
    2. 'break' (adapté à ' break') → logprob: -0.9018867611885071
    3. '   ' → logprob: -6.276886940002441
    4. '       ' → logprob: -7.026886940002441
    5. '	break' → logprob: -7.026886940002441
    6. 'b' → logprob: -11.026886940002441
    7. '    ' → logprob: -11.276886940002441
    8. ' ' → logprob: -11.526886940002441
    9. '
' → logprob: -11.776886940002441
    10. '```' → logprob: -11.776886940002441

Token 120: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002547839190810919
    2. ' if' → logprob: -7.627547740936279
    3. 'i' → logprob: -7.752547740936279
    4. 'print' → logprob: -7.877547740936279
    5. '
' → logprob: -8.252548217773438
    6. '    
' → logprob: -8.377548217773438
    7. ' 
' → logprob: -8.627548217773438
    8. '```' → logprob: -8.752548217773438
    9. '  
' → logprob: -9.127548217773438
    10. '\n' → logprob: -9.377548217773438

Token 121: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008878758526407182
    2. ' if' → logprob: -8.500887870788574
    3. 'i' → logprob: -9.000887870788574
    4. 'print' → logprob: -9.000887870788574
    5. ' 
' → logprob: -9.375887870788574
    6. '
' → logprob: -9.375887870788574
    7. '    
' → logprob: -9.500887870788574
    8. '```' → logprob: -9.500887870788574
    9. '\n' → logprob: -10.625887870788574
    10. '  
' → logprob: -10.625887870788574

Token 122: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.014270463027060032
    2. 'f' → logprob: -4.264270305633545
    3. ' not' → logprob: -9.264270782470703
    4. 'not' → logprob: -12.014270782470703
    5. ' ' → logprob: -12.639270782470703
    6. ' ' → logprob: -12.889270782470703
    7. 'space' → logprob: -16.014270782470703
    8. '​' → logprob: -16.264270782470703
    9. ' space' → logprob: -16.639270782470703
    10. '	f' → logprob: -17.389270782470703

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024774393532425165
    2. ':
' → logprob: -6.002477645874023
    3. ' :' → logprob: -14.877477645874023
    4. '==' → logprob: -15.252477645874023
    5. ':

' → logprob: -15.377477645874023
    6. '[' → logprob: -15.377477645874023
    7. ' ==' → logprob: -15.627477645874023
    8. ':
' → logprob: -16.252477645874023
    9. ':**' → logprob: -16.377477645874023
    10. ' and' → logprob: -17.002477645874023

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004281659494154155
    2. ' for' → logprob: -8.000428199768066
    3. ' print' → logprob: -10.625428199768066
    4. 'for' → logprob: -11.000428199768066
    5. '   ' → logprob: -11.125428199768066
    6. 'print' → logprob: -11.500428199768066
    7. ':' → logprob: -12.250428199768066
    8. ':
' → logprob: -12.250428199768066
    9. '       ' → logprob: -12.375428199768066
    10. '
' → logprob: -12.625428199768066

Token 125: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015785641968250275
    2. 'print' → logprob: -4.5157856941223145
    3. 'op' → logprob: -5.3907856941223145
    4. '
' → logprob: -9.515785217285156
    5. ' for' → logprob: -10.140785217285156
    6. 'while' → logprob: -10.515785217285156
    7. '   ' → logprob: -10.890785217285156
    8. '\n' → logprob: -12.140785217285156
    9. '    
' → logprob: -13.015785217285156
    10. '\' → logprob: -15.015785217285156

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01820051483809948
    2. '=' → logprob: -4.018200397491455
    3. '=[]' → logprob: -10.643200874328613
    4. ':' → logprob: -11.893200874328613
    5. '=[]
' → logprob: -12.018200874328613
    6. '[:]' → logprob: -12.268200874328613
    7. '.append' → logprob: -13.518200874328613
    8. '[]' → logprob: -13.518200874328613
    9. ' +=' → logprob: -13.643200874328613
    10. ' ' → logprob: -13.768200874328613

Token 127: ' []
' (ID: 8911)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3002641797065735
    2. '"\' → logprob: -1.8002641201019287
    3. ''\' → logprob: -2.8002641201019287
    4. '""' → logprob: -3.9252641201019287
    5. '[]
' → logprob: -4.800264358520508
    6. '[]' → logprob: -5.800264358520508
    7. '''' → logprob: -7.925264358520508
    8. 'len' → logprob: -8.050264358520508
    9. '[' → logprob: -8.300264358520508
    10. '"' → logprob: -8.425264358520508

Token 128: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4299023151397705
    2. 'while' → logprob: -1.3049023151397705
    3. ' for' → logprob: -3.6799023151397705
    4. ' while' → logprob: -3.8049023151397705
    5. 'op' → logprob: -3.9299023151397705
    6. '   ' → logprob: -4.554902076721191
    7. ' op' → logprob: -8.429902076721191
    8. 'ans' → logprob: -9.054902076721191
    9. 'i' → logprob: -9.804902076721191
    10. '
' → logprob: -10.179902076721191

Token 129: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5769551992416382
    2. 'for' → logprob: -0.8269551992416382
    3. 'op' → logprob: -6.951955318450928
    4. 'i' (adapté à ' i') → logprob: -10.45195484161377
    5. 'ans' → logprob: -10.95195484161377
    6. ' while' → logprob: -12.20195484161377
    7. 'idx' → logprob: -13.95195484161377
    8. 'j' → logprob: -14.32695484161377
    9. ' for' → logprob: -14.45195484161377
    10. 'last' → logprob: -14.70195484161377

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34270551800727844
    2. ' =' → logprob: -1.467705488204956
    3. 'n' → logprob: -2.842705488204956
    4. 'nt' → logprob: -6.842705726623535
    5. ' n' → logprob: -9.092705726623535
    6. 's' → logprob: -9.592705726623535
    7. '=n' → logprob: -10.217705726623535
    8. ' ' → logprob: -10.467705726623535
    9. '=len' → logprob: -10.467705726623535
    10. 'nd' → logprob: -10.842705726623535

Token 131: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03884861618280411
    2. 'N' → logprob: -3.538848638534546
    3. ' len' → logprob: -4.913848400115967
    4. ' N' → logprob: -7.038848400115967
    5. '0' → logprob: -7.163848400115967
    6. ' ' → logprob: -10.413848876953125
    7. 'op' → logprob: -11.038848876953125
    8. '(len' → logprob: -12.288848876953125
    9. '   ' → logprob: -12.663848876953125
    10. '1' → logprob: -13.038848876953125

Token 132: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.00011033779446734115
    2. 'op' → logprob: -9.375110626220703
    3. '(ans' → logprob: -11.375110626220703
    4. '(b' → logprob: -11.625110626220703
    5. '(my' → logprob: -12.375110626220703
    6. '(' → logprob: -15.375110626220703
    7. ' op' → logprob: -15.500110626220703
    8. 'b' → logprob: -16.625110626220703
    9. '	op' → logprob: -16.750110626220703
    10. 'my' → logprob: -17.000110626220703

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09426717460155487
    2. '-' → logprob: -3.2192671298980713
    3. ' -' → logprob: -3.4692671298980713
    4. '()' → logprob: -4.34426736831665
    5. ')-' → logprob: -5.84426736831665
    6. ' )' → logprob: -6.71926736831665
    7. '()-' → logprob: -6.84426736831665
    8. ' ' → logprob: -7.71926736831665
    9. ' ()' → logprob: -9.219266891479492
    10. '1' → logprob: -10.344266891479492

Token 134: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6329758763313293
    2. ' -' → logprob: -0.7579758763313293
    3. ' ' → logprob: -8.007975578308105
    4. '()-' → logprob: -10.632975578308105
    5. '()' → logprob: -11.132975578308105
    6. ')' → logprob: -13.382975578308105
    7. '<|end|>' → logprob: -14.382975578308105
    8. '1' → logprob: -14.882975578308105
    9. '  ' → logprob: -15.382975578308105
    10. ' -
' → logprob: -15.382975578308105

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002477502857800573
    2. ' ' → logprob: -8.375247955322266
    3. '2' → logprob: -11.000247955322266
    4. '   ' → logprob: -15.750247955322266
    5. '```' → logprob: -16.062747955322266
    6. '0' → logprob: -16.750247955322266
    7. '<|end|>' → logprob: -17.000247955322266
    8. '  ' → logprob: -17.375247955322266
    9. '１' → logprob: -17.562747955322266
    10. '...' → logprob: -17.687747955322266

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. '2' → logprob: -11.625015258789062
    3. ' ' → logprob: -12.000015258789062
    4. '   ' → logprob: -16.125015258789062
    5. '
' → logprob: -16.812515258789062
    6. '```' → logprob: -17.250015258789062
    7. '0' → logprob: -17.500015258789062
    8. '3' → logprob: -17.562515258789062
    9. '-' → logprob: -17.875015258789062
    10. '

' → logprob: -18.062515258789062

Token 137: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5780593156814575
    2. '-' → logprob: -2.078059196472168
    3. 'while' → logprob: -2.703059196472168
    4. '```' → logprob: -3.453059196472168
    5. '<|end|>' → logprob: -3.578059196472168
    6. ':' → logprob: -3.703059196472168
    7. '
' → logprob: -3.703059196472168
    8. ':
' → logprob: -3.953059196472168
    9. ' 
' → logprob: -4.328059196472168
    10. ' while' → logprob: -4.328059196472168

Token 139: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15908104181289673
    2. 'while' (adapté à ' while') → logprob: -2.909080982208252
    3. '-' → logprob: -3.284080982208252
    4. ' while' → logprob: -4.284080982208252
    5. '0' → logprob: -4.784080982208252
    6. ' i' → logprob: -4.909080982208252
    7. ' -' → logprob: -5.159080982208252
    8. ' ' → logprob: -5.409080982208252
    9. '    ' → logprob: -5.909080982208252
    10. ' for' → logprob: -6.034080982208252

Token 140: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04859543219208717
    2. ' i' → logprob: -3.048595428466797
    3. '   ' → logprob: -12.548595428466797
    4. ' ' → logprob: -13.048595428466797
    5. '	i' → logprob: -13.548595428466797
    6. '0' → logprob: -14.173595428466797
    7. 'True' → logprob: -16.298595428466797
    8. '  ' → logprob: -16.548595428466797
    9. '_i' → logprob: -17.298595428466797
    10. '(i' → logprob: -17.298595428466797

Token 141: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.16045545041561127
    2. ' >=' → logprob: -1.9104554653167725
    3. '>' → logprob: -8.660455703735352
    4. ')>=' → logprob: -10.535455703735352
    5. ']>=' → logprob: -11.035455703735352
    6. ' >' → logprob: -12.160455703735352
    7. ' ' → logprob: -12.785455703735352
    8. ' ' → logprob: -13.160455703735352
    9. ')' → logprob: -13.285455703735352
    10. '≥' → logprob: -14.035455703735352

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003178071230649948
    2. ' ' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.128177642822266
    4. '۰' → logprob: -17.878177642822266
    5. '1' → logprob: -18.003177642822266
    6. '
' → logprob: -18.003177642822266
    7. '<|end|>' → logprob: -18.003177642822266
    8. '  ' → logprob: -18.128177642822266
    9. '=' → logprob: -18.628177642822266
    10. '```' → logprob: -18.940677642822266

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.000085830688477
    4. '1' → logprob: -17.375085830688477
    5. '
' → logprob: -17.500085830688477
    6. '00' → logprob: -18.125085830688477
    7. '۰' → logprob: -18.375085830688477
    8. '  ' → logprob: -18.500085830688477
    9. '    ' → logprob: -19.937585830688477
    10. '```' → logprob: -20.062585830688477

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04883851483464241
    2. ':
' → logprob: -3.0488386154174805
    3. '<|end|>' → logprob: -8.92383861541748
    4. '   ' → logprob: -10.04883861541748
    5. '):
' → logprob: -10.67383861541748
    6. '):' → logprob: -11.42383861541748
    7. ' :' → logprob: -11.79883861541748
    8. '
' → logprob: -11.92383861541748
    9. '```' → logprob: -12.42383861541748
    10. ':

' → logprob: -12.42383861541748

Token 145: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01393277570605278
    2. 'ans' → logprob: -5.388932704925537
    3. '       ' → logprob: -5.763932704925537
    4. '
' → logprob: -6.138932704925537
    5. '    
' → logprob: -7.263932704925537
    6. ':' → logprob: -7.388932704925537
    7. '```' → logprob: -7.388932704925537
    8. '	ans' → logprob: -7.638932704925537
    9. ' ans' → logprob: -7.763932704925537
    10. '(ans' → logprob: -8.138933181762695

Token 146: ' ans' (ID: 3345)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6368721723556519
    2. 'ans' (adapté à ' ans') → logprob: -1.3868721723556519
    3. '   ' → logprob: -1.8868721723556519
    4. ' ans' → logprob: -2.8868722915649414
    5. '\n' → logprob: -5.386872291564941
    6. '	ans' → logprob: -6.011872291564941
    7. '    
' → logprob: -6.136872291564941
    8. ' 
' → logprob: -6.511872291564941
    9. '<|end|>' → logprob: -7.011872291564941
    10. '```' → logprob: -7.636872291564941

Token 147: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12867680191993713
    2. '.' → logprob: -2.1286768913269043
    3. ' .' → logprob: -6.378676891326904
    4. '.extend' → logprob: -10.753676414489746
    5. 'append' → logprob: -11.253676414489746
    6. '.app' → logprob: -12.378676414489746
    7. '   ' → logprob: -12.503676414489746
    8. ' append' → logprob: -14.003676414489746
    9. '​.' → logprob: -14.003676414489746
    10. ' app' → logprob: -14.503676414489746

Token 148: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.0019000787287950516
    2. '(' → logprob: -6.6269001960754395
    3. '(str' → logprob: -7.8769001960754395
    4. 'op' → logprob: -8.751899719238281
    5. '(
' → logprob: -11.751899719238281
    6. '(f' → logprob: -12.001899719238281
    7. 'str' → logprob: -12.251899719238281
    8. ' op' → logprob: -12.376899719238281
    9. '('' → logprob: -12.376899719238281
    10. ' (' → logprob: -13.126899719238281

Token 149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.125000953674316
    3. '[-' → logprob: -18.25
    4. ')' → logprob: -18.875
    5. '```' → logprob: -19.125
    6. '[
' → logprob: -19.25
    7. ' [' → logprob: -19.375
    8. '   ' → logprob: -19.5
    9. 'i' → logprob: -19.625
    10. ')i' → logprob: -20.375

Token 150: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.024674974381923676
    2. ')' → logprob: -4.024674892425537
    3. '])
' → logprob: -5.149674892425537
    4. ')
' → logprob: -7.774674892425537
    5. ']' → logprob: -8.399675369262695
    6. ' ])' → logprob: -10.649675369262695
    7. '))' → logprob: -10.899675369262695
    8. ')])' → logprob: -12.649675369262695
    9. ' )' → logprob: -13.024675369262695
    10. ')]' → logprob: -13.024675369262695

Token 151: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6424762606620789
    2. '       ' → logprob: -0.7674762606620789
    3. ' i' → logprob: -5.5174760818481445
    4. '	i' → logprob: -6.0174760818481445
    5. '    
' → logprob: -7.3924760818481445
    6. 'i' → logprob: -7.3924760818481445
    7. '
' → logprob: -7.6424760818481445
    8. '        
' → logprob: -7.8924760818481445
    9. '\n' → logprob: -8.517476081848145
    10. ' ' → logprob: -8.642476081848145

Token 152: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11793496459722519
    2. 'i' (adapté à ' i') → logprob: -2.2429349422454834
    3. '
' → logprob: -5.7429351806640625
    4. '   ' → logprob: -6.4929351806640625
    5. ' 
' → logprob: -8.492935180664062
    6. '	i' → logprob: -9.242935180664062
    7. '    
' → logprob: -10.867935180664062
    8. '\n' → logprob: -10.867935180664062
    9. '       ' → logprob: -11.242935180664062
    10. ' ' → logprob: -11.617935180664062

Token 153: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.37261492013931274
    2. ' -=' → logprob: -1.872614860534668
    3. '-=' → logprob: -1.872614860534668
    4. ' -' → logprob: -5.622614860534668
    5. ' ' → logprob: -12.497614860534668
    6. '   ' → logprob: -13.372614860534668
    7. '--' → logprob: -13.497614860534668
    8. ')' → logprob: -13.622614860534668
    9. '>-' → logprob: -13.872614860534668
    10. '<|end|>' → logprob: -14.622614860534668

Token 154: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -16.251325607299805
    4. '```' → logprob: -17.751325607299805
    5. ' ' → logprob: -18.313825607299805
    6. '  ' → logprob: -18.501325607299805
    7. '...' → logprob: -19.251325607299805
    8. '１' → logprob: -19.626325607299805
    9. '
' → logprob: -19.626325607299805
    10. '    ' → logprob: -19.751325607299805

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.625045776367188
    4. '```' → logprob: -18.375045776367188
    5. '
' → logprob: -18.500045776367188
    6. '  ' → logprob: -18.562545776367188
    7. '<|end|>' → logprob: -20.312545776367188
    8. '    ' → logprob: -20.375045776367188
    9. '１' → logprob: -20.500045776367188
    10. '۱' → logprob: -20.562545776367188

Token 156: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015070192515850067
    2. '
' → logprob: -4.265069961547852
    3. '   ' → logprob: -7.140069961547852
    4. 'for' → logprob: -9.890069961547852
    5. ' print' → logprob: -10.140069961547852
    6. '    
' → logprob: -11.140069961547852
    7. '```' → logprob: -12.640069961547852
    8. '  
' → logprob: -13.890069961547852
    9. ' 
' → logprob: -14.015069961547852
    10. '	print' → logprob: -14.515069961547852

Token 157: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03318765386939049
    2. '   ' → logprob: -3.5331876277923584
    3. 'for' → logprob: -5.7831878662109375
    4. '
' → logprob: -8.908187866210938
    5. '    
' → logprob: -9.408187866210938
    6. 'else' → logprob: -9.783187866210938
    7. ' print' → logprob: -10.283187866210938
    8. 'if' → logprob: -10.908187866210938
    9. '```' → logprob: -11.158187866210938
    10. ' for' → logprob: -12.533187866210938

Token 158: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023310469463467598
    2. 'print' → logprob: -3.773310422897339
    3. ' for' → logprob: -10.398310661315918
    4. 'else' → logprob: -10.648310661315918
    5. '   ' → logprob: -11.898310661315918
    6. 'if' → logprob: -12.898310661315918
    7. '
' → logprob: -14.398310661315918
    8. '```' → logprob: -14.648310661315918
    9. '    
' → logprob: -15.148310661315918
    10. ' print' → logprob: -15.773310661315918

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45347511768341064
    2. ' =' → logprob: -1.0784751176834106
    3. ' <' → logprob: -4.953474998474121
    4. ' ' → logprob: -4.953474998474121
    5. ' +=' → logprob: -5.328474998474121
    6. '<' → logprob: -6.703474998474121
    7. '+=' → logprob: -6.703474998474121
    8. ' -=' → logprob: -7.078474998474121
    9. ' >' → logprob: -8.078474998474121
    10. ')' → logprob: -8.078474998474121

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11895246058702469
    2. ' ' → logprob: -2.368952512741089
    3. 'len' → logprob: -4.36895227432251
    4. ' len' → logprob: -5.49395227432251
    5. 'N' → logprob: -6.99395227432251
    6. ' N' → logprob: -7.24395227432251
    7. '1' → logprob: -8.993952751159668
    8. '   ' → logprob: -11.618952751159668
    9. 'n' → logprob: -12.118952751159668
    10. '  ' → logprob: -12.743952751159668

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0351124070584774
    2. 'len' → logprob: -3.5351123809814453
    3. 'N' → logprob: -5.785112380981445
    4. ' ' → logprob: -6.535112380981445
    5. '1' → logprob: -7.535112380981445
    6. ' len' → logprob: -8.910112380981445
    7. 'ans' → logprob: -10.160112380981445
    8. ' N' → logprob: -10.785112380981445
    9. '2' → logprob: -10.785112380981445
    10. 'n' → logprob: -10.910112380981445

Token 162: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5608109831809998
    2. 'while' → logprob: -1.5608110427856445
    3. '<|end|>' → logprob: -1.5608110427856445
    4. ' while' → logprob: -5.0608110427856445
    5. '   ' → logprob: -7.4358110427856445
    6. ' 
' → logprob: -7.5608110427856445
    7. ' ' → logprob: -7.8108110427856445
    8. '<|end|>' → logprob: -8.185811042785645
    9. '```' → logprob: -8.435811042785645
    10. '	while' → logprob: -8.560811042785645

Token 163: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.042508743703365326
    2. ' while' → logprob: -4.167508602142334
    3. '<|end|>' → logprob: -4.292508602142334
    4. '
' → logprob: -4.667508602142334
    5. ' ' → logprob: -6.667508602142334
    6. '   ' → logprob: -7.542508602142334
    7. 'print' → logprob: -8.292509078979492
    8. ' 
' → logprob: -8.667509078979492
    9. '```' → logprob: -8.917509078979492
    10. '' → logprob: -9.167509078979492

Token 164: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.003097977489233017
    2. ' while' → logprob: -6.378098011016846
    3. '
' → logprob: -6.628098011016846
    4. 'n' → logprob: -10.628097534179688
    5. 'if' → logprob: -11.378097534179688
    6. 'N' → logprob: -12.003097534179688
    7. 'print' → logprob: -12.128097534179688
    8. 'for' → logprob: -12.253097534179688
    9. 'len' → logprob: -12.378097534179688
    10. '```' → logprob: -12.753097534179688

Token 165: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12710511684417725
    2. ' i' → logprob: -2.127105236053467
    3. 'len' → logprob: -9.127104759216309
    4. 'N' → logprob: -10.502104759216309
    5. ' len' → logprob: -10.877104759216309
    6. ' ' → logprob: -11.877104759216309
    7. ' N' → logprob: -12.252104759216309
    8. 'True' → logprob: -13.002104759216309
    9. '   ' → logprob: -13.127104759216309
    10. 'ans' → logprob: -13.252104759216309

Token 166: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6974900364875793
    2. ' <' → logprob: -0.6974900364875793
    3. '<len' → logprob: -5.447490215301514
    4. '<N' → logprob: -11.197489738464355
    5. ' ' → logprob: -11.947489738464355
    6. 'len' → logprob: -13.447489738464355
    7. '<n' → logprob: -13.447489738464355
    8. ' len' → logprob: -13.447489738464355
    9. '<size' → logprob: -14.697489738464355
    10. ' N' → logprob: -14.947489738464355

Token 167: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6328420639038086
    2. 'N' → logprob: -0.7578420639038086
    3. ' len' → logprob: -8.632842063903809
    4. ' N' → logprob: -9.882842063903809
    5. 'n' → logprob: -11.632842063903809
    6. '(len' → logprob: -13.632842063903809
    7. ' ' → logprob: -13.882842063903809
    8. '   ' → logprob: -14.007842063903809
    9. 'Len' → logprob: -15.257842063903809
    10. 'l' → logprob: -15.257842063903809

Token 168: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0014935573562979698
    2. 'ans' → logprob: -6.751493453979492
    3. '(op' → logprob: -8.126493453979492
    4. ' ans' → logprob: -11.501493453979492
    5. '(my' → logprob: -12.501493453979492
    6. ' (' → logprob: -12.626493453979492
    7. '(' → logprob: -12.626493453979492
    8. '(answer' → logprob: -13.001493453979492
    9. '(an' → logprob: -13.876493453979492
    10. '(b' → logprob: -14.251493453979492

Token 169: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06369706243276596
    2. '):' → logprob: -2.813697099685669
    3. ')' → logprob: -7.18869686126709
    4. ' and' → logprob: -8.31369686126709
    5. ':' → logprob: -8.43869686126709
    6. '   ' → logprob: -8.81369686126709
    7. ' ):
' → logprob: -8.93869686126709
    8. 'and' → logprob: -9.18869686126709
    9. ':
' → logprob: -9.81369686126709
    10. '():
' → logprob: -10.56369686126709

Token 170: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11595440655946732
    2. '   ' → logprob: -2.9909543991088867
    3. ' print' → logprob: -2.9909543991088867
    4. '
' → logprob: -4.990954399108887
    5. '       ' → logprob: -6.990954399108887
    6. '```' → logprob: -7.615954399108887
    7. '\n' → logprob: -7.990954399108887
    8. '    
' → logprob: -9.240954399108887
    9. '\' → logprob: -9.740954399108887
    10. ' if' → logprob: -9.865954399108887

Token 171: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005436192732304335
    2. ' print' → logprob: -7.750543594360352
    3. '   ' → logprob: -9.250543594360352
    4. '       ' → logprob: -11.125543594360352
    5. '#print' → logprob: -14.250543594360352
    6. '```' → logprob: -14.625543594360352
    7. '	print' → logprob: -14.875543594360352
    8. '
' → logprob: -15.250543594360352
    9. 'pr' → logprob: -16.62554359436035
    10. 'prit' → logprob: -16.75054359436035

Token 172: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0005579164135269821
    2. '(' → logprob: -7.500557899475098
    3. 'ans' → logprob: -12.750557899475098
    4. '(f' → logprob: -14.625557899475098
    5. '(op' → logprob: -14.875557899475098
    6. '('' → logprob: -15.125557899475098
    7. '(
' → logprob: -15.875557899475098
    8. '	ans' → logprob: -15.875557899475098
    9. ' ans' → logprob: -16.000558853149414
    10. '("' → logprob: -16.000558853149414

Token 173: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000442351185483858
    2. '[' → logprob: -8.375442504882812
    3. '(i' → logprob: -8.500442504882812
    4. '()[' → logprob: -12.875442504882812
    5. ')' → logprob: -13.250442504882812
    6. '[
' → logprob: -13.500442504882812
    7. '(' → logprob: -13.500442504882812
    8. '\[' → logprob: -15.125442504882812
    9. '   ' → logprob: -15.375442504882812
    10. '()' → logprob: -15.375442504882812

Token 174: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010677010286599398
    2. ')
' → logprob: -7.501067638397217
    3. ' )' → logprob: -8.501068115234375
    4. '))' → logprob: -8.876068115234375
    5. '())' → logprob: -9.126068115234375
    6. ',' → logprob: -10.501068115234375
    7. '])' → logprob: -11.001068115234375
    8. '()' → logprob: -12.126068115234375
    9. '})' → logprob: -12.626068115234375
    10. '),' → logprob: -13.376068115234375

Token 175: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03149706870317459
    2. '   ' → logprob: -3.781497001647949
    3. '       ' → logprob: -6.031497001647949
    4. '\n' → logprob: -6.656497001647949
    5. '<|end|>' → logprob: -6.656497001647949
    6. '    
' → logprob: -7.156497001647949
    7. '```' → logprob: -7.156497001647949
    8. ' 
' → logprob: -7.531497001647949
    9. 'i' → logprob: -8.40649700164795
    10. '  
' → logprob: -8.78149700164795

Token 176: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00028159678913652897
    2. ' i' → logprob: -8.25028133392334
    3. '
' → logprob: -10.87528133392334
    4. '```' → logprob: -14.37528133392334
    5. '   ' → logprob: -14.87528133392334
    6. '	i' → logprob: -15.50028133392334
    7. ' 
' → logprob: -15.87528133392334
    8. '    
' → logprob: -16.750282287597656
    9. '\n' → logprob: -17.375282287597656
    10. '(i' → logprob: -17.500282287597656

Token 177: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10817624628543854
    2. '+' → logprob: -2.3581762313842773
    3. ' +=' → logprob: -4.858176231384277
    4. '++' → logprob: -9.108176231384277
    5. '<|end|>' → logprob: -10.108176231384277
    6. '=' → logprob: -12.233176231384277
    7. '1' → logprob: -12.233176231384277
    8. '+="' → logprob: -12.733176231384277
    9. '+='' → logprob: -12.733176231384277
    10. '+++' → logprob: -13.233176231384277

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006282062386162579
    2. ' ' → logprob: -7.3756279945373535
    3. '   ' → logprob: -13.375628471374512
    4. '```' → logprob: -16.500627517700195
    5. '  ' → logprob: -16.813127517700195
    6. ' ' → logprob: -17.375627517700195
    7. '１' → logprob: -18.000627517700195
    8. '    ' → logprob: -18.438127517700195
    9. '
' → logprob: -18.625627517700195
    10. '<|end|>' → logprob: -18.688127517700195

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -17.625003814697266
    4. '   ' → logprob: -17.875003814697266
    5. '１' → logprob: -19.937503814697266
    6. '  ' → logprob: -20.000003814697266
    7. '
' → logprob: -20.125003814697266
    8. '+' → logprob: -20.562503814697266
    9. '۱' → logprob: -20.750003814697266
    10. '१' → logprob: -21.062503814697266

Token 180: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0030342787504196167
    2. ' else' → logprob: -5.8780341148376465
    3. '<|end|>' → logprob: -8.878034591674805
    4. '```' → logprob: -10.253034591674805
    5. '
' → logprob: -10.378034591674805
    6. 'elif' → logprob: -11.003034591674805
    7. '#else' → logprob: -13.378034591674805
    8. '#' → logprob: -13.753034591674805
    9. '_else' → logprob: -14.378034591674805
    10. '[' → logprob: -14.378034591674805

Token 181: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021080365404486656
    2. ':
' → logprob: -3.896080255508423
    3. ' :' → logprob: -7.646080493927002
    4. ' :
' → logprob: -9.896080017089844
    5. '   ' → logprob: -11.646080017089844
    6. ' print' → logprob: -14.521080017089844
    7. ':
' → logprob: -15.396080017089844
    8. ':

' → logprob: -15.896080017089844
    9. 'print' → logprob: -16.271080017089844
    10. '    ' → logprob: -16.896080017089844

Token 183: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09447457641363144
    2. ' print' → logprob: -2.4694745540618896
    3. '   ' → logprob: -5.219474792480469
    4. '-' → logprob: -9.719474792480469
    5. '```' → logprob: -10.594474792480469
    6. ' -' → logprob: -11.969474792480469
    7. '    ' → logprob: -12.094474792480469
    8. '-print' → logprob: -12.219474792480469
    9. '	print' → logprob: -13.094474792480469
    10. '    
' → logprob: -13.594474792480469

Token 184: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00026050140149891376
    2. ' print' → logprob: -8.375260353088379
    3. '-' → logprob: -10.750260353088379
    4. '   ' → logprob: -12.625260353088379
    5. '-print' → logprob: -12.625260353088379
    6. '```' → logprob: -13.375260353088379
    7. '``' → logprob: -16.125261306762695
    8. ' -' → logprob: -16.500261306762695
    9. '    ' → logprob: -17.125261306762695
    10. '
' → logprob: -17.125261306762695

Token 185: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.009569436311721802
    2. '(' → logprob: -4.7595696449279785
    3. '-' → logprob: -7.0095696449279785
    4. '("' → logprob: -10.25956916809082
    5. '("-' → logprob: -11.75956916809082
    6. '(
' → logprob: -12.13456916809082
    7. '('' → logprob: -13.50956916809082
    8. '0' → logprob: -15.00956916809082
    9. ' (-' → logprob: -15.38456916809082
    10. '   ' → logprob: -15.88456916809082

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '2' → logprob: -18.875
    4. '4' → logprob: -19.25
    5. '```' → logprob: -19.625
    6. '3' → logprob: -20.0
    7. '   ' → logprob: -20.125
    8. '１' → logprob: -20.5
    9. '``' → logprob: -21.0625
    10. '5' → logprob: -21.125

Token 187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.375
    3. ')`' → logprob: -17.125
    4. ' )' → logprob: -17.75
    5. '`)' → logprob: -18.25
    6. '))' → logprob: -18.75
    7. '）' → logprob: -20.25
    8. '')' → logprob: -20.25
    9. '```' → logprob: -20.25
    10. ')#' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 185
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 154
Précision stricte (1ère position): 36.22%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 83.24%
================================================================================
