================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    # Import the 'sys' module to access system-specific parameters and functions.
    import sys
    # Import 'sqrt' function from the 'math' module to compute square roots.
    from math import sqrt
    # Override built-in input() with sys.stdin.readline for efficient input reading.
    input = sys.stdin.readline

    # Define a constant 'mod' for modulo operations to avoid integer overflow.
    mod = 1000000007

    # Read a line from standard input using input(), split it into tokens, convert to int, and unpack into N and K.
    N, K = map(int, input().split())

    # Calculate the floor value of the square root of N. This will be used to partition our data for efficiency.
    n = int(sqrt(N))

    # Initialize a 2D list (K+1 rows, 2*n+1 columns) used for dynamic programming (DP).
    # Each element in this table will be an integer initially set to 0.
    # dp[i][j] will represent the number of certain objects (depending on the problem) for stage i and parameter j.
    dp = [[0] * (2*n+1) for _ in range(K+1)]

    # Set the base case of the DP: stage 0 and index 1 is initialized to 1.
    # In most DP problems, the base case represents one way to assemble or choose from nothing.
    dp[0][1] = 1

    # Initialize a list 'num' of size (n+1), to store counts of how many numbers in [1, N] have the same floor division result.
    num = [0] * (n+1)

    # Loop from 1 to n-1 (inclusive: range(1, n)), and compute the number of integers x in [1, N] such that N // x = i.
    # This works because floor division decreases as x increases.
    for i in range(1, n):
        num[i] = N // i - N // (i+1)

    # For i == n, the previous formula would involve division by n+1, which might miss some values,
    # so we handle it specially.
    num[n] = N // n - n

    # Begin DP transitions; repeat K times, for each stage of the process.
    for i in range(K):
        # For efficiency, alias/slice two parts of the DP row: cs and cs2.
        # cs will point to the first n+1 elements of the current row (dp[i][0], ..., dp[i][n]).
        cs = dp[i][:n+1]
        # cs2 will point to the remaining elements, starting from dp[i][n+1] to the end.
        cs2 = dp[i][n+1:]

        # Compute prefix sums for 'cs'. For each index from 1 to n, accumulate the values, modulo mod.
        # Prefix sums help in efficiently computing range sums in DP transitions.
        for j in range(1, n+1):
            cs[j] = (cs[j] + cs[j-1]) % mod

        # Similarly, compute prefix sums over 'cs2' for indices 1 to n-1.
        for j in range(1, n):
            cs2[j] = (cs2[j] + cs2[j-1]) % mod

        # Now, update the next DP stage (dp[i+1]) based on the current prefix sums.
        for j in range(1, n+1):
            # Update negative indices from the end: -j means the j-th from the end of list.
            # This state is computed by multiplying the prefix sum up to index j by num[j], all modulo mod.
            dp[i+1][-j] = (cs[j] * num[j]) % mod
            # Update positive indices, possibly referring to "large class" states.
            # The value is the prefix sum from cs2 at position -j plus the total sum up to cs[n], all modulo mod.
            dp[i+1][j] = (cs2[-j] + cs[n]) % mod

    # After all DP stages, sum up all values in the last row of DP table to get the answer.
    ans = 0
    for a in dp[-1]:
        ans = (ans + a) % mod

    # Print the final answer. In contests, output must be precise, so we use print().
    print(ans)

# Standard "main" guard in Python to ensure that main() only runs when this script is executed directly,
# and not when imported as a module in another program.
if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8402498960494995
    2. '   ' → logprob: -0.8402498960494995
    3. '\n' → logprob: -2.840250015258789
    4. '```' → logprob: -3.840250015258789
    5. ''' → logprob: -4.340250015258789
    6. '    
' → logprob: -4.465250015258789
    7. ' ' → logprob: -4.965250015258789
    8. '(' → logprob: -5.340250015258789
    9. '    ' → logprob: -5.465250015258789
    10. ' 
' → logprob: -5.715250015258789

Token 4: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8913612365722656
    2. '   ' → logprob: -1.0163612365722656
    3. 'pass' → logprob: -1.7663612365722656
    4. 'return' → logprob: -3.2663612365722656
    5. '```' → logprob: -5.141361236572266
    6. '#' (adapté à ' #') → logprob: -6.016361236572266
    7. ' pass' → logprob: -6.016361236572266
    8. '    ' → logprob: -6.266361236572266
    9. '\' → logprob: -6.516361236572266
    10. '    
' → logprob: -7.016361236572266

Token 5: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14805200695991516
    2. '   ' → logprob: -2.8980519771575928
    3. '#' → logprob: -3.2730519771575928
    4. '    ' → logprob: -3.5230519771575928
    5. ' pass' → logprob: -5.273052215576172
    6. '  ' → logprob: -5.898052215576172
    7. '     ' → logprob: -6.023052215576172
    8. 'pass' → logprob: -6.773052215576172
    9. ' #' → logprob: -7.398052215576172
    10. '_' → logprob: -7.773052215576172

Token 6: ' the' (ID: 290)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.40868741273880005
    2. ' ' → logprob: -1.7836873531341553
    3. '    ' → logprob: -2.4086873531341553
    4. ' import' → logprob: -3.7836873531341553
    5. ' numpy' → logprob: -4.658687591552734
    6. '(' → logprob: -5.158687591552734
    7. ' math' → logprob: -5.533687591552734
    8. 'import' → logprob: -5.658687591552734
    9. ' pandas' → logprob: -5.908687591552734
    10. '   ' → logprob: -6.033687591552734

Token 7: ' '' (ID: 461)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.10576120764017105
    2. ' sys' → logprob: -3.8557612895965576
    3. ' math' → logprob: -3.9807612895965576
    4. ' requests' → logprob: -4.1057610511779785
    5. 'os' → logprob: -4.6057610511779785
    6. ' csv' → logprob: -4.7307610511779785
    7. 'requests' → logprob: -4.7307610511779785
    8. ' pandas' → logprob: -5.7307610511779785
    9. ' json' → logprob: -6.3557610511779785
    10. ' necessary' → logprob: -6.4807610511779785

Token 8: 'sys' (ID: 17324)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.27745872735977173
    2. 'sys' → logprob: -2.152458667755127
    3. 'math' → logprob: -2.527458667755127
    4. 'csv' → logprob: -3.902458667755127
    5. 'requests' → logprob: -4.527458667755127
    6. 'json' → logprob: -5.402458667755127
    7. 'random' → logprob: -6.027458667755127
    8. 'arg' → logprob: -6.277458667755127
    9. 'p' → logprob: -6.402458667755127
    10. 'numpy' → logprob: -7.027458667755127

Token 9: ''' (ID: 6)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009829641319811344
    2. 'import' → logprob: -5.259829521179199
    3. ' import' → logprob: -6.384829521179199
    4. ' .' → logprob: -7.259829521179199
    5. '.import' → logprob: -7.259829521179199
    6. ')' → logprob: -7.384829521179199
    7. '.argv' → logprob: -8.7598295211792
    8. '```' → logprob: -8.8848295211792
    9. ' ' → logprob: -9.2598295211792
    10. '.stdout' → logprob: -9.5098295211792

Token 10: ' module' (ID: 8827)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23911140859127045
    2. ' import' → logprob: -1.8641114234924316
    3. ' .' → logprob: -3.9891114234924316
    4. 'import' → logprob: -3.9891114234924316
    5. ' ' → logprob: -4.489111423492432
    6. ' module' → logprob: -5.489111423492432
    7. '.import' → logprob: -5.489111423492432
    8. '```' → logprob: -7.489111423492432
    9. ' sys' → logprob: -9.989110946655273
    10. 'module' → logprob: -9.989110946655273

Token 11: ' to' (ID: 316)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1616211235523224
    2. ' import' → logprob: -2.53662109375
    3. '   ' → logprob: -2.78662109375
    4. '```' → logprob: -4.91162109375
    5. '.import' → logprob: -8.41162109375
    6. '	import' → logprob: -8.91162109375
    7. ' sys' → logprob: -8.91162109375
    8. ' ' → logprob: -9.03662109375
    9. '`' → logprob: -9.66162109375
    10. '    
' → logprob: -9.78662109375

Token 12: ' access' (ID: 3158)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.050797563046216965
    2. 'import' → logprob: -3.925797462463379
    3. ' ' → logprob: -4.050797462463379
    4. ' use' → logprob: -5.800797462463379
    5. ' provide' → logprob: -5.925797462463379
    6. '.' → logprob: -6.675797462463379
    7. ' enable' → logprob: -6.800797462463379
    8. ' be' → logprob: -7.175797462463379
    9. ' allow' → logprob: -7.550797462463379
    10. ' get' → logprob: -7.925797462463379

Token 13: ' system' (ID: 2420)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.01291843131184578
    2. ' argv' → logprob: -4.637918472290039
    3. ' system' → logprob: -6.512918472290039
    4. 'sys' → logprob: -7.012918472290039
    5. 'argv' → logprob: -7.887918472290039
    6. '.argv' → logprob: -8.387918472290039
    7. ' import' → logprob: -10.262918472290039
    8. ' the' → logprob: -10.512918472290039
    9. '=sys' → logprob: -10.637918472290039
    10. ' modules' → logprob: -11.137918472290039

Token 14: '-specific' (ID: 31999)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.028481466695666313
    2. ' .' → logprob: -4.403481483459473
    3. '.argv' → logprob: -5.153481483459473
    4. 'import' → logprob: -5.653481483459473
    5. ' import' → logprob: -6.403481483459473
    6. '.import' → logprob: -6.903481483459473
    7. '```' → logprob: -7.028481483459473
    8. '.stdin' → logprob: -7.028481483459473
    9. ' ' → logprob: -8.028481483459473
    10. '.exit' → logprob: -8.028481483459473

Token 15: ' parameters' (ID: 9621)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.037273213267326355
    2. '```' → logprob: -4.537273406982422
    3. 'import' → logprob: -4.662273406982422
    4. ' .' → logprob: -5.662273406982422
    5. ' import' → logprob: -6.037273406982422
    6. '.import' → logprob: -6.412273406982422
    7. '.stdin' → logprob: -6.412273406982422
    8. '.argv' → logprob: -6.537273406982422
    9. '.system' → logprob: -6.787273406982422
    10. ''s' → logprob: -7.287273406982422

Token 16: ' and' (ID: 326)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7257571220397949
    2. '```' → logprob: -1.350757122039795
    3. '.' → logprob: -2.100757122039795
    4. '   ' → logprob: -2.725757122039795
    5. '<|end|>' → logprob: -3.600757122039795
    6. ' and' → logprob: -4.100757122039795
    7. '<|end|>' → logprob: -4.725757122039795
    8. ' import' → logprob: -5.350757122039795
    9. '.import' → logprob: -5.850757122039795
    10. ',' → logprob: -6.350757122039795

Token 17: ' functions' (ID: 9964)
  Prédit: ' argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' argv' → logprob: -0.702210009098053
    2. 'argv' → logprob: -1.4522099494934082
    3. ' modules' → logprob: -2.202209949493408
    4. ' arguments' → logprob: -2.452209949493408
    5. ' functions' → logprob: -3.327209949493408
    6. '   ' → logprob: -4.077209949493408
    7. 'modules' → logprob: -5.327209949493408
    8. 'arguments' → logprob: -5.327209949493408
    9. '.argv' → logprob: -5.827209949493408
    10. ' import' → logprob: -6.327209949493408

Token 18: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.774879515171051
    2. '```' → logprob: -1.1498794555664062
    3. 'import' → logprob: -2.3998794555664062
    4. '\n' → logprob: -2.6498794555664062
    5. '
' → logprob: -3.2748794555664062
    6. '\' → logprob: -4.524879455566406
    7. '    
' → logprob: -4.899879455566406
    8. '``' → logprob: -6.024879455566406
    9. ' import' → logprob: -7.274879455566406
    10. '' → logprob: -8.274879455566406

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1142379567027092
    2. 'import' → logprob: -2.4892380237579346
    3. '```' → logprob: -4.1142377853393555
    4. '    
' → logprob: -5.2392377853393555
    5. '\n' → logprob: -6.7392377853393555
    6. ' import' → logprob: -7.2392377853393555
    7. '
' → logprob: -7.6142377853393555
    8. '\' → logprob: -8.739237785339355
    9. ' ' → logprob: -8.989237785339355
    10. '`' → logprob: -9.239237785339355

Token 20: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27754271030426025
    2. 'import' (adapté à ' import') → logprob: -1.5275427103042603
    3. ' import' → logprob: -3.9025425910949707
    4. '```' → logprob: -5.652542591094971
    5. '    
' → logprob: -6.652542591094971
    6. '
' → logprob: -9.152543067932129
    7. '	import' → logprob: -9.652543067932129
    8. '\n' → logprob: -9.902543067932129
    9. '``' → logprob: -11.152543067932129
    10. ' 
' → logprob: -11.527543067932129

Token 21: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00011522514978423715
    2. ' ' → logprob: -9.375115394592285
    3. 'sys' → logprob: -10.625115394592285
    4. ' system' → logprob: -13.125115394592285
    5. ' ' → logprob: -13.250115394592285
    6. ' os' → logprob: -13.875115394592285
    7. '	sys' → logprob: -14.375115394592285
    8. '=sys' → logprob: -15.125115394592285
    9. ' space' → logprob: -15.250115394592285
    10. '_sys' → logprob: -16.37511444091797

Token 22: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9700897932052612
    2. '
' → logprob: -1.3450897932052612
    3. '<|end|>' → logprob: -1.5950897932052612
    4. 'newline' → logprob: -2.595089912414551
    5. '\' → logprob: -3.220089912414551
    6. '\n' → logprob: -3.845089912414551
    7. '<|end|>' → logprob: -4.845089912414551
    8. '' → logprob: -5.595089912414551
    9. '.readline' → logprob: -6.470089912414551
    10. '```' → logprob: -6.595089912414551

Token 23: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2804683446884155
    2. '<|end|>' → logprob: -1.6554683446884155
    3. '\n' → logprob: -4.530468463897705
    4. 'newline' → logprob: -4.655468463897705
    5. '<|end|>' → logprob: -4.905468463897705
    6. '   ' → logprob: -5.030468463897705
    7. '    
' → logprob: -5.155468463897705
    8. '.' → logprob: -5.405468463897705
    9. '' → logprob: -6.030468463897705
    10. '\' → logprob: -6.655468463897705

Token 24: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.786793053150177
    2. '
' → logprob: -1.6617929935455322
    3. '    
' → logprob: -2.4117929935455322
    4. '.' → logprob: -2.6617929935455322
    5. 'newline' → logprob: -2.9117929935455322
    6. ' ' → logprob: -3.5367929935455322
    7. '<|end|>' → logprob: -3.6617929935455322
    8. '\' → logprob: -4.036793231964111
    9. '\n' → logprob: -4.286793231964111
    10. '    ' → logprob: -4.536793231964111

Token 25: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4077884256839752
    2. '.' → logprob: -2.0327885150909424
    3. '   ' → logprob: -2.1577885150909424
    4. '    ' → logprob: -3.4077885150909424
    5. '  ' → logprob: -4.407788276672363
    6. ' .' → logprob: -4.532788276672363
    7. ' sys' → logprob: -4.782788276672363
    8. 'import' → logprob: -5.282788276672363
    9. ' ' → logprob: -6.032788276672363
    10. ' import' → logprob: -6.032788276672363

Token 26: ' '' (ID: 461)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00048501143464818597
    2. 'os' → logprob: -8.12548542022705
    3. ' math' → logprob: -9.00048542022705
    4. ' json' → logprob: -10.87548542022705
    5. ' argparse' → logprob: -11.25048542022705
    6. ' random' → logprob: -11.50048542022705
    7. ' time' → logprob: -12.25048542022705
    8. ' datetime' → logprob: -12.50048542022705
    9. '	os' → logprob: -12.75048542022705
    10. 'math' → logprob: -13.50048542022705

Token 27: 'sqrt' (ID: 64991)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.1138288825750351
    2. ' os' → logprob: -2.2388288974761963
    3. ' argparse' → logprob: -7.363828659057617
    4. 'arg' → logprob: -8.613828659057617
    5. 'math' → logprob: -9.988828659057617
    6. 'json' → logprob: -9.988828659057617
    7. ' getopt' → logprob: -10.863828659057617
    8. 'time' → logprob: -11.113828659057617
    9. ' time' → logprob: -11.488828659057617
    10. ' json' → logprob: -11.863828659057617

Token 28: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13855428993701935
    2. ')' → logprob: -2.263554334640503
    3. '<|end|>' → logprob: -4.263554096221924
    4. 'from' → logprob: -5.263554096221924
    5. '<|end|>' → logprob: -6.263554096221924
    6. ' (' → logprob: -6.263554096221924
    7. ',' → logprob: -7.263554096221924
    8. ' from' → logprob: -7.513554096221924
    9. '```' → logprob: -8.388554573059082
    10. '(s' → logprob: -8.763554573059082

Token 29: ' function' (ID: 1114)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.7945287227630615
    2. 'from' → logprob: -1.2945287227630615
    3. '(' → logprob: -1.4195287227630615
    4. ' (' → logprob: -4.419528961181641
    5. '<|end|>' → logprob: -4.794528961181641
    6. ',' → logprob: -4.919528961181641
    7. '(s' → logprob: -6.794528961181641
    8. '(math' → logprob: -6.919528961181641
    9. '<|end|>' → logprob: -7.044528961181641
    10. ')' → logprob: -8.04452896118164

Token 30: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.10310669988393784
    2. 'from' → logprob: -2.353106737136841
    3. '<|end|>' → logprob: -5.978106498718262
    4. '	from' → logprob: -8.478106498718262
    5. '<|end|>' → logprob: -9.228106498718262
    6. '(' → logprob: -11.103106498718262
    7. '   ' → logprob: -11.603106498718262
    8. ',' → logprob: -11.728106498718262
    9. ' ' → logprob: -12.228106498718262
    10. '(from' → logprob: -12.478106498718262

Token 31: ' the' (ID: 290)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0004307884373702109
    2. 'math' → logprob: -7.750430583953857
    3. '_math' → logprob: -17.500431060791016
    4. '.math' → logprob: -18.125431060791016
    5. '(math' → logprob: -18.125431060791016
    6. '   ' → logprob: -18.375431060791016
    7. ' maths' → logprob: -18.375431060791016
    8. ' the' → logprob: -18.500431060791016
    9. 'cmath' → logprob: -18.625431060791016
    10. ' mathematics' → logprob: -19.000431060791016

Token 32: ' '' (ID: 461)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.02324594371020794
    2. 'math' → logprob: -3.7732460498809814
    3. 'cmath' → logprob: -15.648245811462402
    4. '_math' → logprob: -16.14824676513672
    5. '.math' → logprob: -17.02324676513672
    6. 'import' → logprob: -17.52324676513672
    7. '(math' → logprob: -17.52324676513672
    8. '   ' → logprob: -18.02324676513672
    9. ' maths' → logprob: -18.64824676513672
    10. 'm' → logprob: -18.64824676513672

Token 33: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0002613358374219388
    2. ' math' → logprob: -8.250261306762695
    3. 'cmath' → logprob: -16.250261306762695
    4. 'mat' → logprob: -19.250261306762695
    5. '(math' → logprob: -20.375261306762695
    6. '_math' → logprob: -20.750261306762695
    7. '.math' → logprob: -21.875261306762695
    8. 'm' → logprob: -22.000261306762695
    9. '   ' → logprob: -22.125261306762695
    10. 'import' → logprob: -22.375261306762695

Token 34: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.43871185183525085
    2. ' module' → logprob: -2.5637118816375732
    3. '```' → logprob: -2.5637118816375732
    4. ' import' → logprob: -3.1887118816375732
    5. 'module' → logprob: -3.1887118816375732
    6. '<|end|>' → logprob: -3.4387118816375732
    7. 'import' → logprob: -3.8137118816375732
    8. ' '' → logprob: -4.188711643218994
    9. '<|end|>' → logprob: -4.563711643218994
    10. '')' → logprob: -4.813711643218994

Token 35: ' module' (ID: 8827)
  Prédit: ' module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' module' → logprob: -0.4340501129627228
    2. ' import' → logprob: -1.3090500831604004
    3. 'import' → logprob: -3.4340500831604004
    4. ' math' → logprob: -3.9340500831604004
    5. 'module' → logprob: -4.4340500831604
    6. '.' → logprob: -4.9340500831604
    7. ' library' → logprob: -5.1840500831604
    8. '.math' → logprob: -7.0590500831604
    9. ' ' → logprob: -7.1840500831604
    10. 'cmath' → logprob: -7.1840500831604

Token 36: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.47678181529045105
    2. ' from' → logprob: -0.9767818450927734
    3. '   ' → logprob: -6.101781845092773
    4. '
' → logprob: -8.726781845092773
    5. '	from' → logprob: -8.851781845092773
    6. ',' → logprob: -9.851781845092773
    7. '```' → logprob: -10.726781845092773
    8. '    
' → logprob: -10.726781845092773
    9. 'import' → logprob: -11.601781845092773
    10. ' for' → logprob: -11.851781845092773

Token 37: ' compute' (ID: 23864)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4248955249786377
    2. ' calculate' → logprob: -1.1748955249786377
    3. ' compute' → logprob: -4.674895286560059
    4. ' ' → logprob: -4.924895286560059
    5. ' provide' → logprob: -5.174895286560059
    6. ' sqrt' → logprob: -5.174895286560059
    7. ' use' → logprob: -5.674895286560059
    8. ' import' → logprob: -6.424895286560059
    9. ' perform' → logprob: -6.549895286560059
    10. ' be' → logprob: -7.674895286560059

Token 38: ' square' (ID: 13749)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.10112398117780685
    2. ' sqrt' → logprob: -3.2261240482330322
    3. ' the' → logprob: -3.6011240482330322
    4. ' square' → logprob: -3.7261240482330322
    5. ' ' → logprob: -5.726123809814453
    6. 's' → logprob: -7.726123809814453
    7. 'sqrt' → logprob: -7.851123809814453
    8. ' a' → logprob: -8.101123809814453
    9. 'math' → logprob: -8.226123809814453
    10. 'square' → logprob: -9.476123809814453

Token 39: ' roots' (ID: 29895)
  Prédit: '_root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.5695003271102905
    2. ' root' → logprob: -1.1945003271102905
    3. '_ro' → logprob: -2.94450044631958
    4. ' roots' → logprob: -3.44450044631958
    5. '_' → logprob: -3.56950044631958
    6. 'root' → logprob: -4.06950044631958
    7. 'roots' → logprob: -7.31950044631958
    8. 'r' → logprob: -8.319499969482422
    9. '-root' → logprob: -8.694499969482422
    10. '_r' → logprob: -9.069499969482422

Token 40: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3641766309738159
    2. ' from' → logprob: -1.739176630973816
    3. 'from' → logprob: -2.4891767501831055
    4. '
' → logprob: -3.7391767501831055
    5. '<|end|>' → logprob: -5.1141767501831055
    6. '.' → logprob: -5.2391767501831055
    7. '    
' → logprob: -5.2391767501831055
    8. '<|end|>' → logprob: -5.9891767501831055
    9. '```' → logprob: -7.4891767501831055
    10. '	from' → logprob: -7.6141767501831055

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4407553970813751
    2. 'from' → logprob: -1.3157553672790527
    3. ' from' → logprob: -2.4407553672790527
    4. '```' → logprob: -7.565755367279053
    5. '	from' → logprob: -8.065755844116211
    6. '    
' → logprob: -8.690755844116211
    7. '
' → logprob: -10.815755844116211
    8. '    ' → logprob: -11.440755844116211
    9. '  
' → logprob: -11.690755844116211
    10. ' ' → logprob: -11.690755844116211

Token 42: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.3146685063838959
    2. 'from' (adapté à ' from') → logprob: -1.3146685361862183
    3. '   ' → logprob: -7.189668655395508
    4. ' math' → logprob: -8.064668655395508
    5. ' sqrt' → logprob: -8.314668655395508
    6. 'sqrt' → logprob: -10.564668655395508
    7. '	from' → logprob: -10.939668655395508
    8. 'math' → logprob: -11.064668655395508
    9. 'import' → logprob: -11.814668655395508
    10. ' ' → logprob: -11.939668655395508

Token 43: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -7.3458322731312364e-06
    2. 'math' → logprob: -12.000007629394531
    3. ' ' → logprob: -14.250007629394531
    4. ' ' → logprob: -15.000007629394531
    5. ' maths' → logprob: -16.25000762939453
    6. '_math' → logprob: -17.37500762939453
    7. '.math' → logprob: -17.62500762939453
    8. '(math' → logprob: -18.37500762939453
    9. ' mathematics' → logprob: -19.12500762939453
    10. ' ma' → logprob: -19.37500762939453

Token 44: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.009134110063314438
    2. 'import' → logprob: -4.759134292602539
    3. ' ' → logprob: -7.634134292602539
    4. '	import' → logprob: -10.759134292602539
    5. ' im' → logprob: -12.509134292602539
    6. ' sqrt' → logprob: -13.009134292602539
    7. '.' → logprob: -13.634134292602539
    8. ' imports' → logprob: -13.634134292602539
    9. '_import' → logprob: -13.634134292602539
    10. ' importar' → logprob: -14.009134292602539

Token 45: ' sqrt' (ID: 44237)
  Prédit: ' sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.002482553943991661
    2. 'sqrt' → logprob: -6.0024824142456055
    3. 's' → logprob: -13.127482414245605
    4. ' ' → logprob: -13.377482414245605
    5. ' ' → logprob: -13.752482414245605
    6. '.sqrt' → logprob: -14.127482414245605
    7. 'qrt' → logprob: -14.127482414245605
    8. '	s' → logprob: -14.877482414245605
    9. ' s' → logprob: -16.627483367919922
    10. ' sq' → logprob: -17.002483367919922

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3174705505371094
    2. '   ' → logprob: -1.9424705505371094
    3. '<|end|>' → logprob: -2.4424705505371094
    4. '    
' → logprob: -3.4424705505371094
    5. '<|end|>' → logprob: -5.567470550537109
    6. '  
' → logprob: -6.817470550537109
    7. '\n' → logprob: -6.817470550537109
    8. '

' → logprob: -7.442470550537109
    9. '\' → logprob: -7.567470550537109
    10. 'n' → logprob: -7.692470550537109

Token 47: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.74550461769104
    2. '   ' → logprob: -1.12050461769104
    3. '    
' → logprob: -1.87050461769104
    4. '\' → logprob: -4.495504379272461
    5. '  
' → logprob: -4.620504379272461
    6. ' 
' → logprob: -5.245504379272461
    7. '<|end|>' → logprob: -5.495504379272461
    8. ' ' → logprob: -5.870504379272461
    9. '   
' → logprob: -6.120504379272461
    10. '' → logprob: -6.370504379272461

Token 48: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2551004886627197
    2. '\' → logprob: -1.3801004886627197
    3. '
' → logprob: -1.7551004886627197
    4. '    
' → logprob: -2.1301004886627197
    5. '\n' → logprob: -2.6301004886627197
    6. 'n' → logprob: -3.0051004886627197
    7. ' ' → logprob: -4.380100250244141
    8. '  
' → logprob: -4.630100250244141
    9. ' 
' → logprob: -5.255100250244141
    10. '   
' → logprob: -5.505100250244141

Token 49: ' Override' (ID: 87603)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22123393416404724
    2. ' ' → logprob: -2.09623384475708
    3. 'n' → logprob: -3.84623384475708
    4. '    
' → logprob: -5.22123384475708
    5. 'input' → logprob: -5.34623384475708
    6. ' try' → logprob: -5.59623384475708
    7. ' input' → logprob: -5.59623384475708
    8. '    ' → logprob: -5.59623384475708
    9. ' 
' → logprob: -5.97123384475708
    10. '  ' → logprob: -6.09623384475708

Token 50: ' built' (ID: 8113)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7728111147880554
    2. '(' → logprob: -0.8978111147880554
    3. ' input' → logprob: -3.7728111743927
    4. ' sys' → logprob: -3.7728111743927
    5. ' the' → logprob: -4.272810935974121
    6. ' (' → logprob: -4.272810935974121
    7. '(s' → logprob: -4.522810935974121
    8. '   ' → logprob: -5.022810935974121
    9. 's' → logprob: -5.397810935974121
    10. '()' → logprob: -5.522810935974121

Token 51: '-in' (ID: 4200)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.124105304479599
    2. '_' → logprob: -2.874105215072632
    3. '-' → logprob: -3.624105215072632
    4. '-in' → logprob: -4.374105453491211
    5. 'in' → logprob: -5.624105453491211
    6. '   ' → logprob: -5.999105453491211
    7. '-ins' → logprob: -6.124105453491211
    8. '__' → logprob: -6.124105453491211
    9. 'a' → logprob: -6.624105453491211
    10. ' ' → logprob: -6.749105453491211

Token 52: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.17945265769958496
    2. ' print' → logprob: -2.804452657699585
    3. 'input' → logprob: -3.304452657699585
    4. 'print' → logprob: -3.804452657699585
    5. '(' → logprob: -4.429452896118164
    6. ' ' → logprob: -4.679452896118164
    7. ' open' → logprob: -5.429452896118164
    8. ' pow' → logprob: -5.554452896118164
    9. ' max' → logprob: -5.679452896118164
    10. '(input' → logprob: -6.054452896118164

Token 53: '()' (ID: 416)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11847566068172455
    2. '(' → logprob: -2.4934756755828857
    3. '()' → logprob: -4.493475437164307
    4. '_' → logprob: -5.118475437164307
    5. '=' → logprob: -5.618475437164307
    6. ' ' → logprob: -5.618475437164307
    7. 's' → logprob: -6.868475437164307
    8. 'def' → logprob: -7.493475437164307
    9. '_data' → logprob: -7.993475437164307
    10. '<|end|>' → logprob: -7.993475437164307

Token 54: ' with' (ID: 483)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009450407698750496
    2. '(
' → logprob: -5.509450435638428
    3. ' =' → logprob: -6.509450435638428
    4. 'def' → logprob: -7.134450435638428
    5. '_' → logprob: -7.259450435638428
    6. ' (' → logprob: -7.384450435638428
    7. ' ' → logprob: -8.25944995880127
    8. '<|end|>' → logprob: -8.50944995880127
    9. '()' → logprob: -8.88444995880127
    10. 's' → logprob: -9.00944995880127

Token 55: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31808972358703613
    2. ' sys' → logprob: -1.6930897235870361
    3. ' raw' → logprob: -3.318089723587036
    4. 'input' → logprob: -3.318089723587036
    5. 'sys' → logprob: -5.068089485168457
    6. ' lambda' → logprob: -5.318089485168457
    7. 'raw' → logprob: -6.193089485168457
    8. 'lambda' → logprob: -7.443089485168457
    9. ' open' → logprob: -7.943089485168457
    10. ' ' → logprob: -8.318089485168457

Token 56: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0011683182092383504
    2. '.stdout' → logprob: -7.376168251037598
    3. ' .' → logprob: -8.251168251037598
    4. '.' → logprob: -8.501168251037598
    5. '.argv' → logprob: -10.251168251037598
    6. '.stderr' → logprob: -11.751168251037598
    7. '.std' → logprob: -11.876168251037598
    8. ' stdin' → logprob: -12.126168251037598
    9. 'stdin' → logprob: -12.126168251037598
    10. '.input' → logprob: -12.376168251037598

Token 57: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.011543826200067997
    2. '.' → logprob: -5.0115437507629395
    3. '.read' → logprob: -5.6365437507629395
    4. ' =' → logprob: -7.1365437507629395
    5. '=' → logprob: -8.511544227600098
    6. 'read' → logprob: -9.386544227600098
    7. ' .' → logprob: -9.636544227600098
    8. ' readline' → logprob: -9.761544227600098
    9. '<|end|>' → logprob: -11.136544227600098
    10. '.readlines' → logprob: -11.761544227600098

Token 58: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2218102067708969
    2. '
' → logprob: -2.8468101024627686
    3. '   ' → logprob: -3.8468101024627686
    4. ' =' → logprob: -4.221810340881348
    5. '<|end|>' → logprob: -4.471810340881348
    6. '(' → logprob: -4.596810340881348
    7. '  ' → logprob: -4.721810340881348
    8. ' ' → logprob: -4.721810340881348
    9. '    
' → logprob: -4.721810340881348
    10. ')' → logprob: -4.721810340881348

Token 59: ' efficient' (ID: 12430)
  Prédit: ' faster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faster' → logprob: -0.018086956813931465
    2. ' input' → logprob: -4.393086910247803
    3. ' fast' → logprob: -5.393086910247803
    4. 'input' → logprob: -8.268087387084961
    5. ' efficiency' → logprob: -8.268087387084961
    6. ' better' → logprob: -8.643087387084961
    7. ' speed' → logprob: -9.268087387084961
    8. ' more' → logprob: -9.643087387084961
    9. 'fast' → logprob: -10.018087387084961
    10. ' efficient' → logprob: -10.143087387084961

Token 60: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.005267668981105089
    2. 'input' → logprob: -5.38026762008667
    3. '()' → logprob: -7.88026762008667
    4. '_input' → logprob: -9.005268096923828
    5. ' reading' → logprob: -10.130268096923828
    6. '(input' → logprob: -10.380268096923828
    7. ' user' → logprob: -10.755268096923828
    8. ' faster' → logprob: -11.755268096923828
    9. ' ' → logprob: -12.005268096923828
    10. ' line' → logprob: -12.505268096923828

Token 61: ' reading' (ID: 6085)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3388751149177551
    2. '
' → logprob: -1.8388750553131104
    3. '<|end|>' → logprob: -3.7138750553131104
    4. '   ' → logprob: -3.8388750553131104
    5. ')' → logprob: -3.9638750553131104
    6. '    
' → logprob: -4.4638752937316895
    7. '(' → logprob: -4.8388752937316895
    8. '\n' → logprob: -4.9638752937316895
    9. '<|end|>' → logprob: -4.9638752937316895
    10. '()
' → logprob: -4.9638752937316895

Token 62: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.58437579870224
    2. '()' → logprob: -1.9593758583068848
    3. '   ' → logprob: -2.2093758583068848
    4. '    
' → logprob: -2.3343758583068848
    5. '\n' → logprob: -3.3343758583068848
    6. '()
' → logprob: -4.709375858306885
    7. ' =' → logprob: -4.834375858306885
    8. '\' → logprob: -4.959375858306885
    9. '  
' → logprob: -4.959375858306885
    10. '(' → logprob: -4.959375858306885

Token 63: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.8135372996330261
    2. '   ' → logprob: -1.188537359237671
    3. ' 
' → logprob: -2.188537359237671
    4. '  
' → logprob: -3.313537359237671
    5. '   
' → logprob: -3.813537359237671
    6. '
' → logprob: -4.063537120819092
    7. ' ' → logprob: -4.313537120819092
    8. '\' → logprob: -4.313537120819092
    9. '    ' → logprob: -4.688537120819092
    10. 'input' → logprob: -4.813537120819092

Token 64: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4402259290218353
    2. 'input' (adapté à ' input') → logprob: -1.0652259588241577
    3. '   ' → logprob: -4.815226078033447
    4. ' sys' → logprob: -6.065226078033447
    5. 'sys' → logprob: -8.440225601196289
    6. ' ' → logprob: -8.565225601196289
    7. '    ' → logprob: -8.690225601196289
    8. ' readline' → logprob: -9.440225601196289
    9. '    
' → logprob: -9.565225601196289
    10. 'import' → logprob: -9.815225601196289

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5479356646537781
    2. '(' → logprob: -1.5479357242584229
    3. '=' → logprob: -1.7979357242584229
    4. '()' → logprob: -3.547935724258423
    5. ')' → logprob: -5.922935485839844
    6. ' (' → logprob: -6.672935485839844
    7. '.' → logprob: -6.797935485839844
    8. ':' → logprob: -7.047935485839844
    9. '.readline' → logprob: -7.047935485839844
    10. ' ' → logprob: -7.172935485839844

Token 66: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2519518733024597
    2. 'sys' → logprob: -1.5019519329071045
    3. '	sys' → logprob: -11.001952171325684
    4. '=sys' → logprob: -12.376952171325684
    5. '(sys' → logprob: -13.501952171325684
    6. ' ' → logprob: -15.626952171325684
    7. 'input' → logprob: -16.001951217651367
    8. '   ' → logprob: -16.751951217651367
    9. '_sys' → logprob: -17.126951217651367
    10. '/sys' → logprob: -17.251951217651367

Token 67: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.52919222577475e-05
    2. '.' → logprob: -9.875075340270996
    3. '.stdout' → logprob: -11.250075340270996
    4. '.readline' → logprob: -11.625075340270996
    5. 'stdin' → logprob: -13.750075340270996
    6. ' .' → logprob: -14.875075340270996
    7. '(stdin' → logprob: -15.625075340270996
    8. '.stderr' → logprob: -15.750075340270996
    9. '.std' → logprob: -15.875075340270996
    10. ' stdin' → logprob: -17.50007438659668

Token 68: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.537868779967539e-06
    2. '.' → logprob: -12.125008583068848
    3. '.read' → logprob: -13.250008583068848
    4. '.readlines' → logprob: -14.000008583068848
    5. '.stdin' → logprob: -15.000008583068848
    6. ' .' → logprob: -16.25000762939453
    7. ' readline' → logprob: -18.25000762939453
    8. '.write' → logprob: -19.75000762939453
    9. '.urlopen' → logprob: -19.87500762939453
    10. '.reader' → logprob: -20.12500762939453

Token 69: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8715642094612122
    2. '   ' → logprob: -1.1215641498565674
    3. '()' → logprob: -2.3715641498565674
    4. '    
' → logprob: -2.7465641498565674
    5. '()
' → logprob: -3.9965641498565674
    6. '<|end|>' → logprob: -4.1215643882751465
    7. '(' → logprob: -4.2465643882751465
    8. '\n' → logprob: -4.6215643882751465
    9. '(
' → logprob: -4.7465643882751465
    10. ' ' → logprob: -4.9965643882751465

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0438418947160244
    2. '    
' → logprob: -3.16884183883667
    3. '
' → logprob: -8.043842315673828
    4. 'n' → logprob: -8.918842315673828
    5. '(n' → logprob: -9.418842315673828
    6. '    
    
' → logprob: -9.793842315673828
    7. 'def' → logprob: -10.168842315673828
    8. 'a' → logprob: -10.293842315673828
    9. '()' → logprob: -10.668842315673828
    10. '    ' → logprob: -10.918842315673828

Token 71: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4157244861125946
    2. 'n' → logprob: -1.165724515914917
    3. 'number' → logprob: -4.915724277496338
    4. 'a' → logprob: -5.165724277496338
    5. 'num' → logprob: -5.665724277496338
    6. 'x' → logprob: -5.790724277496338
    7. '    
' → logprob: -6.415724277496338
    8. 'try' → logprob: -6.415724277496338
    9. '#' (adapté à ' #') → logprob: -6.915724277496338
    10. 'for' → logprob: -7.290724277496338

Token 72: ' Define' (ID: 38966)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6609281897544861
    2. ' n' → logprob: -0.9109281897544861
    3. '   ' → logprob: -3.410928249359131
    4. '#' → logprob: -3.660928249359131
    5. ' #' → logprob: -4.660928249359131
    6. 'num' → logprob: -5.660928249359131
    7. 'number' → logprob: -6.410928249359131
    8. ' number' → logprob: -6.660928249359131
    9. ' num' → logprob: -6.785928249359131
    10. ' try' → logprob: -7.035928249359131

Token 73: ' a' (ID: 261)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9793123602867126
    2. ' a' → logprob: -1.2293124198913574
    3. 'n' → logprob: -2.7293124198913574
    4. '(' → logprob: -3.1043124198913574
    5. 'a' → logprob: -3.2293124198913574
    6. '(n' → logprob: -3.4793124198913574
    7. '()' → logprob: -4.354312419891357
    8. ' an' → logprob: -4.354312419891357
    9. 'def' → logprob: -4.479312419891357
    10. ' number' → logprob: -4.604312419891357

Token 74: ' constant' (ID: 9594)
  Prédit: ' function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.0889393612742424
    2. ' list' → logprob: -3.5889394283294678
    3. ' number' → logprob: -3.7139394283294678
    4. 'n' → logprob: -5.088939189910889
    5. ' variable' → logprob: -5.213939189910889
    6. 'def' → logprob: -5.338939189910889
    7. ' def' → logprob: -6.088939189910889
    8. ' valid' → logprob: -6.463939189910889
    9. ' n' → logprob: -6.588939189910889
    10. ' helper' → logprob: -6.838939189910889

Token 75: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5953696966171265
    2. '   ' → logprob: -1.8453696966171265
    3. 'S' → logprob: -2.470369815826416
    4. ')' → logprob: -2.845369815826416
    5. '_' → logprob: -3.220369815826416
    6. 'MAX' → logprob: -4.220369815826416
    7. '_MAX' → logprob: -4.595369815826416
    8. ',' → logprob: -4.970369815826416
    9. '()' → logprob: -4.970369815826416
    10. 'SPACE' → logprob: -5.220369815826416

Token 76: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.0386238098144531
    2. 'EPS' → logprob: -1.2886238098144531
    3. ' MOD' → logprob: -2.413623809814453
    4. 'INF' → logprob: -2.788623809814453
    5. 'MAX' → logprob: -3.038623809814453
    6. 'N' → logprob: -3.163623809814453
    7. ' EPS' → logprob: -3.413623809814453
    8. ' INF' → logprob: -3.663623809814453
    9. 'PI' → logprob: -4.163623809814453
    10. ' N' → logprob: -4.288623809814453

Token 77: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4543040692806244
    2. ' =' → logprob: -1.0793040990829468
    3. '=' → logprob: -4.579304218292236
    4. 'ulus' → logprob: -5.329304218292236
    5. ' ='' → logprob: -5.454304218292236
    6. '='' → logprob: -6.329304218292236
    7. '_value' → logprob: -7.329304218292236
    8. ''''' → logprob: -7.829304218292236
    9. '```' → logprob: -8.204303741455078
    10. '<|end|>' → logprob: -8.454303741455078

Token 78: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011114790104329586
    2. '=' → logprob: -4.511114597320557
    3. ' ' → logprob: -10.261115074157715
    4. '   ' → logprob: -11.261115074157715
    5. ' =
' → logprob: -11.511115074157715
    6. ':' → logprob: -12.386115074157715
    7. ',' → logprob: -13.136115074157715
    8. '<|end|>' → logprob: -13.386115074157715
    9. '  ' → logprob: -14.761115074157715
    10. ' ,' → logprob: -15.386115074157715

Token 79: ' modulo' (ID: 112372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12090413272380829
    2. ' the' → logprob: -2.3709042072296143
    3. '10' → logprob: -4.245903968811035
    4. '100' → logprob: -5.620903968811035
    5. ' a' → logprob: -6.495903968811035
    6. ' modulus' → logprob: -7.745903968811035
    7. 'the' → logprob: -9.120903968811035
    8. '1' → logprob: -9.120903968811035
    9. ' mod' → logprob: -9.995903968811035
    10. '998' → logprob: -9.995903968811035

Token 80: ' operations' (ID: 12084)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027687041088938713
    2. '=' → logprob: -3.6526870727539062
    3. ' ' → logprob: -6.777687072753906
    4. '<|end|>' → logprob: -10.027687072753906
    5. '_value' → logprob: -10.277687072753906
    6. '_space' → logprob: -10.402687072753906
    7. '  ' → logprob: -10.777687072753906
    8. '_' → logprob: -10.777687072753906
    9. ',' → logprob: -11.277687072753906
    10. 'space' → logprob: -11.277687072753906

Token 81: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09390302747488022
    2. '=' → logprob: -2.593903064727783
    3. '   ' → logprob: -4.468903064727783
    4. ':' → logprob: -5.968903064727783
    5. '(' → logprob: -8.343902587890625
    6. ',' → logprob: -8.593902587890625
    7. ' ' → logprob: -8.718902587890625
    8. ' :' → logprob: -9.093902587890625
    9. 'mod' → logprob: -10.093902587890625
    10. ' =
' → logprob: -10.343902587890625

Token 82: ' avoid' (ID: 8397)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30677294731140137
    2. '10' → logprob: -1.4317729473114014
    3. ' prevent' → logprob: -4.4317731857299805
    4. '100' → logprob: -4.5567731857299805
    5. '```' → logprob: -6.9317731857299805
    6. '1' → logprob: -8.05677318572998
    7. ' ensure' → logprob: -8.30677318572998
    8. ' avoid' → logprob: -8.68177318572998
    9. '109' → logprob: -8.80677318572998
    10. 'prevent' → logprob: -9.05677318572998

Token 83: ' integer' (ID: 16336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00687450310215354
    2. '10' → logprob: -5.1318745613098145
    3. ' large' → logprob: -7.1318745613098145
    4. ' ' → logprob: -10.006874084472656
    5. ' the' → logprob: -10.381874084472656
    6. '1' → logprob: -11.131874084472656
    7. '100' → logprob: -11.256874084472656
    8. '```' → logprob: -12.006874084472656
    9. ' integer' → logprob: -12.381874084472656
    10. ' int' → logprob: -12.631874084472656

Token 84: ' overflow' (ID: 28614)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9200224876403809
    2. ' _' → logprob: -1.1700224876403809
    3. ' overflow' → logprob: -1.7950224876403809
    4. ' ' → logprob: -3.170022487640381
    5. '<|end|>' → logprob: -3.170022487640381
    6. 'overflow' → logprob: -4.670022487640381
    7. '<|end|>' → logprob: -4.920022487640381
    8. ' ' → logprob: -4.920022487640381
    9. 's' → logprob: -5.670022487640381
    10. ' ```' → logprob: -6.045022487640381

Token 85: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.327856183052063
    2. '=' → logprob: -1.327856183052063
    3. ' ' → logprob: -5.452856063842773
    4. '   ' → logprob: -5.577856063842773
    5. ':' → logprob: -6.577856063842773
    6. 'mod' → logprob: -6.827856063842773
    7. ' =
' → logprob: -7.577856063842773
    8. ',' → logprob: -7.577856063842773
    9. '(mod' → logprob: -7.577856063842773
    10. '<|end|>' → logprob: -7.702856063842773

Token 86: '   ' (ID: 271)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3446938991546631
    2. ' 
' → logprob: -2.219693899154663
    3. ' mod' → logprob: -2.719693899154663
    4. '   ' → logprob: -2.844693899154663
    5. ' =' → logprob: -4.094694137573242
    6. '    
' → logprob: -4.219694137573242
    7. '
' → logprob: -4.469694137573242
    8. '(mod' → logprob: -5.969694137573242
    9. '  
' → logprob: -6.219694137573242
    10. '_mod' → logprob: -6.344694137573242

Token 87: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.7825953364372253
    2. 'mod' (adapté à ' mod') → logprob: -0.7825953364372253
    3. ' ' → logprob: -2.53259539604187
    4. ' 
' → logprob: -5.532595157623291
    5. ' =' → logprob: -7.407595157623291
    6. '32' → logprob: -7.782595157623291
    7. '_mod' → logprob: -9.03259563446045
    8. '	mod' → logprob: -9.03259563446045
    9. '     
' → logprob: -9.15759563446045
    10. '  
' → logprob: -9.40759563446045

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004629245959222317
    2. '=' → logprob: -5.379629135131836
    3. ' ' → logprob: -12.254629135131836
    4. ' =
' → logprob: -12.879629135131836
    5. ' =)' → logprob: -14.254629135131836
    6. ' ,' → logprob: -15.254629135131836
    7. ',' → logprob: -15.379629135131836
    8. '  ' → logprob: -16.004629135131836
    9. ')' → logprob: -16.254629135131836
    10. '.' → logprob: -16.379629135131836

Token 89: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5647009015083313
    2. '10' → logprob: -1.3147008419036865
    3. '100' → logprob: -1.8147008419036865
    4. '1' → logprob: -10.564701080322266
    5. '998' → logprob: -13.564701080322266
    6. 'int' → logprob: -14.314701080322266
    7. '```' → logprob: -15.564701080322266
    8. ' int' → logprob: -15.939701080322266
    9. '   ' → logprob: -16.064701080322266
    10. '123' → logprob: -16.314701080322266

Token 90: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.036229267716407776
    2. ' ' → logprob: -4.036229133605957
    3. '100' → logprob: -4.036229133605957
    4. '1' → logprob: -8.286229133605957
    5. '109' → logprob: -14.911229133605957
    6. '998' → logprob: -15.411229133605957
    7. 'int' → logprob: -16.036230087280273
    8. '123' → logprob: -16.911230087280273
    9. '101' → logprob: -17.161230087280273
    10. '104' → logprob: -17.286230087280273

Token 91: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.007915709167718887
    2. '9' → logprob: -4.882915496826172
    3. '0' → logprob: -9.007915496826172
    4. '09' → logprob: -9.132915496826172
    5. '07' → logprob: -10.882915496826172
    6. '007' → logprob: -11.132915496826172
    7. '009' → logprob: -11.257915496826172
    8. '7' → logprob: -11.257915496826172
    9. '00' → logprob: -11.632915496826172
    10. '+' → logprob: -12.382915496826172

Token 92: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.008273418992757797
    2. '7' → logprob: -4.883273601531982
    3. '007' → logprob: -8.383273124694824
    4. '0' → logprob: -8.758273124694824
    5. '07' → logprob: -9.258273124694824
    6. '+' → logprob: -9.383273124694824
    7. '19' → logprob: -9.508273124694824
    8. '00' → logprob: -11.258273124694824
    9. '9' → logprob: -11.883273124694824
    10. ' ' → logprob: -12.758273124694824

Token 93: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.088346359931165e-07
    2. '9' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '+' → logprob: -15.500000953674316
    5. '```' → logprob: -19.5
    6. '７' → logprob: -19.875
    7. '07' → logprob: -20.0
    8. '0' → logprob: -20.625
    9. ' +' → logprob: -20.625
    10. '79' → logprob: -20.625

Token 94: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039762675762176514
    2. '<|end|>' → logprob: -3.4147627353668213
    3. '   ' → logprob: -6.414762496948242
    4. '

' → logprob: -6.789762496948242
    5. '    
' → logprob: -6.789762496948242
    6. '<|end|>' → logprob: -7.039762496948242
    7. '\n' → logprob: -7.789762496948242
    8. '
    
' → logprob: -8.289762496948242
    9. '' → logprob: -8.914762496948242
    10. '  
' → logprob: -9.039762496948242

Token 95: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.156595841050148
    2. '   ' → logprob: -2.0315959453582764
    3. '    
' → logprob: -4.781595706939697
    4. '<|end|>' → logprob: -6.156595706939697
    5. '

' → logprob: -7.281595706939697
    6. '  
' → logprob: -7.781595706939697
    7. ' 
' → logprob: -8.031596183776855
    8. '\n' → logprob: -8.031596183776855
    9. ' ' → logprob: -8.156596183776855
    10. '#' → logprob: -8.156596183776855

Token 96: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8412331342697144
    2. 'n' → logprob: -1.3412331342697144
    3. '
' → logprob: -1.5912331342697144
    4. '   ' → logprob: -2.966233253479004
    5. ' ' → logprob: -3.466233253479004
    6. '    
' → logprob: -5.341233253479004
    7. 'a' → logprob: -6.091233253479004
    8. 'x' → logprob: -6.091233253479004
    9. '<|end|>' → logprob: -6.216233253479004
    10. '  ' → logprob: -6.841233253479004

Token 97: ' Read' (ID: 5405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04053991287946701
    2. '#' → logprob: -4.415539741516113
    3. 'N' → logprob: -4.415539741516113
    4. ' n' → logprob: -5.290539741516113
    5. 't' → logprob: -5.665539741516113
    6. 'T' → logprob: -5.790539741516113
    7. ' #' → logprob: -7.415539741516113
    8. 'a' → logprob: -7.540539741516113
    9. '   ' → logprob: -7.790539741516113
    10. 'A' → logprob: -7.915539741516113

Token 98: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17597979307174683
    2. '(' → logprob: -1.9259798526763916
    3. ' ()' → logprob: -4.8009796142578125
    4. ' (' → logprob: -5.9259796142578125
    5. ' ' → logprob: -6.3009796142578125
    6. ')' → logprob: -6.9259796142578125
    7. ' )' → logprob: -7.6759796142578125
    8. ' a' → logprob: -8.050979614257812
    9. ' input' → logprob: -9.050979614257812
    10. ',' → logprob: -9.050979614257812

Token 99: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.46794113516807556
    2. '()' → logprob: -1.217941164970398
    3. ' ' → logprob: -3.7179410457611084
    4. ' n' → logprob: -4.0929412841796875
    5. ' number' → logprob: -4.0929412841796875
    6. '(n' → logprob: -4.5929412841796875
    7. '(' → logprob: -5.9679412841796875
    8. ' single' → logprob: -5.9679412841796875
    9. ' line' → logprob: -6.4679412841796875
    10. 'number' → logprob: -7.3429412841796875

Token 100: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002263046189909801
    2. '(' → logprob: -9.750226020812988
    3. '()
' → logprob: -10.000226020812988
    4. '().' → logprob: -10.250226020812988
    5. ' =' → logprob: -10.375226020812988
    6. ' ()' → logprob: -11.000226020812988
    7. '=' → logprob: -11.500226020812988
    8. ',' → logprob: -12.125226020812988
    9. '   ' → logprob: -12.125226020812988
    10. ')' → logprob: -12.500226020812988

Token 101: ' standard' (ID: 7024)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.010203412733972073
    2. 'input' → logprob: -4.6352033615112305
    3. ' sys' → logprob: -8.26020336151123
    4. 'sys' → logprob: -9.63520336151123
    5. ' the' → logprob: -9.76020336151123
    6. ' stdin' → logprob: -10.13520336151123
    7. 'stdin' → logprob: -10.88520336151123
    8. ' standard' → logprob: -12.13520336151123
    9. ' ' → logprob: -14.51020336151123
    10. 'the' → logprob: -15.01020336151123

Token 102: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.28248924016952515
    2. 'input' → logprob: -1.40748929977417
    3. '()' → logprob: -6.90748929977417
    4. '   ' → logprob: -9.032488822937012
    5. ' ' → logprob: -10.032488822937012
    6. '(input' → logprob: -10.157488822937012
    7. 'in' → logprob: -10.407488822937012
    8. '()
' → logprob: -10.532488822937012
    9. '(stdin' → logprob: -10.657488822937012
    10. '().' → logprob: -10.782488822937012

Token 103: ' using' (ID: 2360)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015871046343818307
    2. '().' → logprob: -6.7515869140625
    3. '()
' → logprob: -8.5015869140625
    4. '(' → logprob: -9.7515869140625
    5. ',' → logprob: -9.7515869140625
    6. '   ' → logprob: -10.1265869140625
    7. ')' → logprob: -10.7515869140625
    8. ' ()' → logprob: -11.3765869140625
    9. '()

' → logprob: -12.2515869140625
    10. '()\' → logprob: -12.2515869140625

Token 104: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31907862424850464
    2. ' input' → logprob: -1.3190786838531494
    3. '()' → logprob: -5.19407844543457
    4. '()
' → logprob: -9.81907844543457
    5. '(input' → logprob: -9.94407844543457
    6. ' ' → logprob: -10.69407844543457
    7. '   ' → logprob: -10.69407844543457
    8. ')' → logprob: -10.94407844543457
    9. ' ()' → logprob: -11.06907844543457
    10. ' the' → logprob: -11.06907844543457

Token 105: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002312145894393325
    2. '().' → logprob: -6.127312183380127
    3. '()
' → logprob: -9.252311706542969
    4. '(' → logprob: -10.752311706542969
    5. '()

' → logprob: -12.627311706542969
    6. ' ()' → logprob: -12.877311706542969
    7. '()`' → logprob: -14.002311706542969
    8. '())' → logprob: -14.127311706542969
    9. '()\' → logprob: -14.252311706542969
    10. '(),' → logprob: -14.752311706542969

Token 106: ' split' (ID: 12648)
  Prédit: ' strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strip' → logprob: -0.2925117015838623
    2. 'rstrip' → logprob: -2.0425117015838623
    3. 'strip' → logprob: -2.6675117015838623
    4. ' split' → logprob: -4.542511940002441
    5. ')' → logprob: -4.667511940002441
    6. '.strip' → logprob: -4.917511940002441
    7. 'split' → logprob: -5.292511940002441
    8. '().' → logprob: -5.542511940002441
    9. ' and' → logprob: -5.667511940002441
    10. ' n' → logprob: -6.042511940002441

Token 107: ' it' (ID: 480)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03387989103794098
    2. '().' → logprob: -3.4088799953460693
    3. '(' → logprob: -8.658880233764648
    4. '('' → logprob: -10.783880233764648
    5. '(),' → logprob: -11.158880233764648
    6. '()
' → logprob: -11.533880233764648
    7. ' ()' → logprob: -12.283880233764648
    8. ')' → logprob: -12.908880233764648
    9. '())' → logprob: -12.908880233764648
    10. '()[' → logprob: -13.158880233764648

Token 108: ' into' (ID: 1511)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4041641354560852
    2. '().' → logprob: -1.5291640758514404
    3. '.' → logprob: -2.2791640758514404
    4. ')' → logprob: -4.9041643142700195
    5. '.split' → logprob: -5.5291643142700195
    6. ',' → logprob: -7.2791643142700195
    7. '(' → logprob: -8.15416431427002
    8. '.strip' → logprob: -8.40416431427002
    9. ').' → logprob: -8.52916431427002
    10. ' .' → logprob: -8.77916431427002

Token 109: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.9852972030639648
    2. ' integers' → logprob: -1.2352972030639648
    3. ' tokens' → logprob: -1.7352972030639648
    4. ' a' → logprob: -2.610297203063965
    5. 'a' → logprob: -3.610297203063965
    6. 'numbers' → logprob: -3.860297203063965
    7. ' numbers' → logprob: -3.860297203063965
    8. 'list' → logprob: -5.360297203063965
    9. 'inte' → logprob: -5.610297203063965
    10. ' list' → logprob: -6.235297203063965

Token 110: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03608473390340805
    2. '().' → logprob: -3.5360846519470215
    3. '(' → logprob: -5.7860846519470215
    4. '(),' → logprob: -6.5360846519470215
    5. ',' → logprob: -6.6610846519470215
    6. '   ' → logprob: -8.16108512878418
    7. '.' → logprob: -9.28608512878418
    8. ')' → logprob: -10.28608512878418
    9. '('' → logprob: -10.28608512878418
    10. '()
' → logprob: -11.03608512878418

Token 111: ' convert' (ID: 8452)
  Prédit: ' strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strip' → logprob: -0.8450251221656799
    2. ' and' → logprob: -1.7200250625610352
    3. 'strip' → logprob: -1.8450250625610352
    4. ' map' → logprob: -1.9700250625610352
    5. 'rstrip' → logprob: -4.220025062561035
    6. 'map' → logprob: -4.470025062561035
    7. '   ' → logprob: -4.470025062561035
    8. 'split' → logprob: -4.595025062561035
    9. '()' → logprob: -4.720025062561035
    10. '.strip' → logprob: -5.095025062561035

Token 112: ' to' (ID: 316)
  Prédit: ' them'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' them' → logprob: -0.8807222843170166
    2. ' to' → logprob: -1.5057222843170166
    3. ',' → logprob: -1.6307222843170166
    4. ' ' → logprob: -2.8807222843170166
    5. '   ' → logprob: -3.2557222843170166
    6. '(' → logprob: -4.0057220458984375
    7. ' each' → logprob: -4.5057220458984375
    8. ' the' → logprob: -4.8807220458984375
    9. 'to' → logprob: -5.1307220458984375
    10. ' into' → logprob: -5.2557220458984375

Token 113: ' int' (ID: 677)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.02867157757282257
    2. 'int' → logprob: -4.153671741485596
    3. ' int' → logprob: -4.778671741485596
    4. 'inte' → logprob: -6.653671741485596
    5. ' a' → logprob: -6.903671741485596
    6. ' list' → logprob: -7.028671741485596
    7. 'ints' → logprob: -7.653671741485596
    8. 'list' → logprob: -8.153671264648438
    9. ' ints' → logprob: -9.778671264648438
    10. ' map' → logprob: -10.028671264648438

Token 114: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1585809886455536
    2. '(' → logprob: -2.658581018447876
    3. ',' → logprob: -3.158581018447876
    4. '(),' → logprob: -3.408581018447876
    5. ')' → logprob: -8.283580780029297
    6. '().' → logprob: -8.408580780029297
    7. '   ' → logprob: -8.783580780029297
    8. '[' → logprob: -9.283580780029297
    9. '();' → logprob: -10.283580780029297
    10. '(
' → logprob: -10.533580780029297

Token 115: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07993417233228683
    2. ' ' → logprob: -2.8299341201782227
    3. ',' → logprob: -5.329934120178223
    4. 'and' → logprob: -5.579934120178223
    5. ' ,' → logprob: -5.579934120178223
    6. ' then' → logprob: -5.954934120178223
    7. '   ' → logprob: -7.579934120178223
    8. ' a' → logprob: -7.704934120178223
    9. '<|end|>' → logprob: -7.829934120178223
    10. '[' → logprob: -8.204934120178223

Token 116: ' unpack' (ID: 61704)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.046423062682151794
    2. 'map' → logprob: -3.7964229583740234
    3. ' store' → logprob: -4.421422958374023
    4. ' assign' → logprob: -5.671422958374023
    5. 'assign' → logprob: -5.796422958374023
    6. ' unpack' → logprob: -6.421422958374023
    7. ' list' → logprob: -6.921422958374023
    8. 'store' → logprob: -7.171422958374023
    9. ' convert' → logprob: -8.421422958374023
    10. 'list' → logprob: -8.421422958374023

Token 117: ' into' (ID: 1511)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016999363899230957
    2. '(' → logprob: -4.516999244689941
    3. '(*' → logprob: -5.391999244689941
    4. '(*)' → logprob: -7.266999244689941
    5. ' ()' → logprob: -8.516999244689941
    6. '   ' → logprob: -8.891999244689941
    7. ',' → logprob: -9.641999244689941
    8. '().' → logprob: -9.891999244689941
    9. ' (' → logprob: -9.891999244689941
    10. '*' → logprob: -10.391999244689941

Token 118: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8862668871879578
    2. 'a' → logprob: -1.1362669467926025
    3. ' a' → logprob: -1.7612669467926025
    4. 'n' → logprob: -2.3862669467926025
    5. 'x' → logprob: -7.386266708374023
    6. ' N' → logprob: -7.636266708374023
    7. ' two' → logprob: -8.011266708374023
    8. ' x' → logprob: -8.011266708374023
    9. ' ' → logprob: -8.261266708374023
    10. 'N' → logprob: -8.386266708374023

Token 119: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010699364356696606
    2. ' ,' → logprob: -5.010699272155762
    3. '(' → logprob: -6.385699272155762
    4. ',N' → logprob: -6.635699272155762
    5. '(N' → logprob: -7.635699272155762
    6. '(),' → logprob: -9.010699272155762
    7. '()' → logprob: -9.260699272155762
    8. ',n' → logprob: -9.510699272155762
    9. ' (' → logprob: -9.635699272155762
    10. '   ' → logprob: -9.885699272155762

Token 120: ' K' (ID: 658)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.21821565926074982
    2. 'M' → logprob: -2.2182157039642334
    3. ' K' → logprob: -2.5932157039642334
    4. 'K' → logprob: -4.468215465545654
    5. ' ' → logprob: -7.218215465545654
    6. ' Q' → logprob: -9.218215942382812
    7. 'Q' → logprob: -9.593215942382812
    8. 'x' → logprob: -10.968215942382812
    9. ' T' → logprob: -11.718215942382812
    10. ' x' → logprob: -11.718215942382812

Token 121: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18997962772846222
    2. '(' → logprob: -1.8149796724319458
    3. '   ' → logprob: -4.939979553222656
    4. ',' → logprob: -6.439979553222656
    5. ')' → logprob: -7.689979553222656
    6. '()
' → logprob: -8.314979553222656
    7. '(
' → logprob: -8.564979553222656
    8. ':' → logprob: -8.814979553222656
    9. '().' → logprob: -10.064979553222656
    10. '(N' → logprob: -10.189979553222656

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0413850545883179
    2. '    
' → logprob: -1.5413850545883179
    3. '(N' → logprob: -2.0413851737976074
    4. '  
' → logprob: -2.2913851737976074
    5. ' 
' → logprob: -2.9163851737976074
    6. ' N' → logprob: -3.0413851737976074
    7. '   
' → logprob: -3.7913851737976074
    8. 'N' → logprob: -4.416385173797607
    9. ' ' → logprob: -4.541385173797607
    10. '(' → logprob: -4.541385173797607

Token 123: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0629005879163742
    2. ' N' → logprob: -2.8129005432128906
    3. 'n' → logprob: -8.31290054321289
    4. '(N' → logprob: -8.56290054321289
    5. '(' → logprob: -9.43790054321289
    6. '   ' → logprob: -9.56290054321289
    7. '    
' → logprob: -10.18790054321289
    8. ' (' → logprob: -10.31290054321289
    9. 'input' → logprob: -10.31290054321289
    10. ' ' → logprob: -10.43790054321289

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.350386295001954e-05
    2. ',K' → logprob: -9.625073432922363
    3. ' ,' → logprob: -12.000073432922363
    4. ',
' → logprob: -14.250073432922363
    5. ',k' → logprob: -15.000073432922363
    6. ',N' → logprob: -15.750073432922363
    7. '‌,' → logprob: -17.37507438659668
    8. ',\
' → logprob: -17.50007438659668
    9. ',

' → logprob: -17.87507438659668
    10. ',int' → logprob: -18.25007438659668

Token 125: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.04087892919778824
    2. ' ' → logprob: -3.290879011154175
    3. 'K' → logprob: -5.915878772735596
    4. ' ' → logprob: -9.165879249572754
    5. 'space' → logprob: -11.165879249572754
    6. '  ' → logprob: -12.290879249572754
    7. ' space' → logprob: -12.415879249572754
    8. ' 
' → logprob: -13.165879249572754
    9. '<|end|>' → logprob: -13.165879249572754
    10. ')' → logprob: -14.290879249572754

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300239682197571
    2. '=' → logprob: -3.1680023670196533
    3. ' ' → logprob: -13.793002128601074
    4. ' =
' → logprob: -14.293002128601074
    5. ',' → logprob: -14.668002128601074
    6. '=int' → logprob: -14.793002128601074
    7. '=input' → logprob: -15.418002128601074
    8. ')' → logprob: -15.668002128601074
    9. ' =
' → logprob: -16.04300308227539
    10. ' ' → logprob: -16.16800308227539

Token 127: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.001147837145254016
    2. 'map' → logprob: -6.876147747039795
    3. ' list' → logprob: -9.626148223876953
    4. ' ' → logprob: -10.376148223876953
    5. ' input' → logprob: -11.376148223876953
    6. '	map' → logprob: -13.251148223876953
    7. ' ' → logprob: -13.376148223876953
    8. ' m' → logprob: -13.876148223876953
    9. ' tuple' → logprob: -14.376148223876953
    10. 'input' → logprob: -14.626148223876953

Token 128: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07934511452913284
    2. '(' → logprob: -2.579345226287842
    3. '(input' → logprob: -7.829345226287842
    4. '(list' → logprob: -10.579344749450684
    5. '(lambda' → logprob: -11.079344749450684
    6. '(str' → logprob: -12.079344749450684
    7. ' (' → logprob: -12.704344749450684
    8. '(
' → logprob: -12.954344749450684
    9. 'int' → logprob: -13.579344749450684
    10. '(tuple' → logprob: -13.704344749450684

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0059885201044380665
    2. ',input' → logprob: -5.380988597869873
    3. '(input' → logprob: -7.505988597869873
    4. 'input' → logprob: -7.630988597869873
    5. ')' → logprob: -8.380988121032715
    6. '(' → logprob: -9.630988121032715
    7. ' ,' → logprob: -10.630988121032715
    8. ' input' → logprob: -12.255988121032715
    9. '   ' → logprob: -12.505988121032715
    10. ' (' → logprob: -13.630988121032715

Token 130: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2519323229789734
    2. 'input' → logprob: -1.5019323825836182
    3. '(input' → logprob: -13.501932144165039
    4. ')' → logprob: -13.876932144165039
    5. ' ' → logprob: -14.501932144165039
    6. '	input' → logprob: -15.501932144165039
    7. ' ' → logprob: -16.37693214416504
    8. ',input' → logprob: -16.75193214416504
    9. '_input' → logprob: -17.00193214416504
    10. '=input' → logprob: -17.12693214416504

Token 131: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003096023283433169
    2. '()' → logprob: -8.125309944152832
    3. '())' → logprob: -11.625309944152832
    4. ')' → logprob: -13.000309944152832
    5. ' ().' → logprob: -13.625309944152832
    6. '()
' → logprob: -13.875309944152832
    7. '(' → logprob: -16.750308990478516
    8. ' ()' → logprob: -17.375308990478516
    9. '().
' → logprob: -17.875308990478516
    10. '	' → logprob: -18.000308990478516

Token 132: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.39278268814086914
    2. 'strip' → logprob: -1.1427826881408691
    3. 'rstrip' → logprob: -5.142782688140869
    4. 'read' → logprob: -10.267782211303711
    5. ')' → logprob: -11.142782211303711
    6. ' split' → logprob: -13.392782211303711
    7. '().' → logprob: -14.267782211303711
    8. ' strip' → logprob: -14.392782211303711
    9. '(split' → logprob: -15.267782211303711
    10. ').' → logprob: -16.01778221130371

Token 133: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02149791456758976
    2. ')' → logprob: -4.02149772644043
    3. '()))' → logprob: -6.77149772644043
    4. '()' → logprob: -6.77149772644043
    5. '))' → logprob: -6.89649772644043
    6. '())
' → logprob: -10.39649772644043
    7. '(' → logprob: -12.64649772644043
    8. ' ())' → logprob: -13.02149772644043
    9. '()))
' → logprob: -14.02149772644043
    10. ' )' → logprob: -15.27149772644043

Token 134: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07221642881631851
    2. '<|end|>' → logprob: -3.197216510772705
    3. ' 
' → logprob: -5.197216510772705
    4. '\n' → logprob: -5.322216510772705
    5. '   ' → logprob: -5.322216510772705
    6. '  
' → logprob: -5.572216510772705
    7. '    
' → logprob: -5.822216510772705
    8. ')' → logprob: -6.322216510772705
    9. ' ' → logprob: -6.697216510772705
    10. '#' → logprob: -6.822216510772705

Token 135: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.45597851276397705
    2. 'A' → logprob: -2.2059783935546875
    3. 'result' → logprob: -2.7059783935546875
    4. 'a' → logprob: -2.8309783935546875
    5. ')' → logprob: -3.4559783935546875
    6. 'x' → logprob: -4.7059783935546875
    7. 'numbers' → logprob: -4.8309783935546875
    8. 's' → logprob: -4.9559783935546875
    9. '   ' → logprob: -5.0809783935546875
    10. 'n' → logprob: -5.4559783935546875

Token 136: ' Calculate' (ID: 38942)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9801582098007202
    2. '#' → logprob: -2.2301583290100098
    3. 'arr' → logprob: -2.2301583290100098
    4. ' result' → logprob: -2.7301583290100098
    5. ' dp' → logprob: -2.9801583290100098
    6. 'result' → logprob: -2.9801583290100098
    7. ' numbers' → logprob: -3.1051583290100098
    8. ' arr' → logprob: -3.3551583290100098
    9. ' A' → logprob: -4.10515832901001
    10. 'A' → logprob: -4.23015832901001

Token 137: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3660566806793213
    2. ' max' → logprob: -2.2410566806793213
    3. ' factorial' → logprob: -2.3660566806793213
    4. 'factor' → logprob: -2.6160566806793213
    5. ' ' → logprob: -2.7410566806793213
    6. '(' → logprob: -3.1160566806793213
    7. 'pow' → logprob: -3.3660566806793213
    8. ' ans' → logprob: -3.4910566806793213
    9. ' (' → logprob: -3.4910566806793213
    10. 'result' → logprob: -3.6160566806793213

Token 138: ' floor' (ID: 8350)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.789145588874817
    2. 'result' → logprob: -1.789145588874817
    3. ' factorial' → logprob: -2.4141454696655273
    4. ' maximum' → logprob: -2.5391454696655273
    5. 'max' → logprob: -2.6641454696655273
    6. ' number' → logprob: -2.6641454696655273
    7. 'maximum' → logprob: -2.9141454696655273
    8. ' sum' → logprob: -3.0391454696655273
    9. 'sum' → logprob: -3.1641454696655273
    10. 'factor' → logprob: -3.4141454696655273

Token 139: ' value' (ID: 1432)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5266964435577393
    2. '(' → logprob: -1.2766964435577393
    3. 's' → logprob: -3.5266964435577393
    4. ' value' → logprob: -3.7766964435577393
    5. ' division' → logprob: -4.02669620513916
    6. '(s' → logprob: -4.02669620513916
    7. '(N' → logprob: -4.27669620513916
    8. '   ' → logprob: -4.77669620513916
    9. '((' → logprob: -5.15169620513916
    10. 'value' → logprob: -5.77669620513916

Token 140: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2041187584400177
    2. '   ' → logprob: -2.0791187286376953
    3. '(' → logprob: -3.2041187286376953
    4. 'of' → logprob: -4.204118728637695
    5. 's' → logprob: -6.829118728637695
    6. '(N' → logprob: -6.829118728637695
    7. '(s' → logprob: -7.079118728637695
    8. '((' → logprob: -7.329118728637695
    9. ' (' → logprob: -9.204118728637695
    10. '    ' → logprob: -9.829118728637695

Token 141: ' the' (ID: 290)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.08907458931207657
    2. ' sqrt' → logprob: -2.8390746116638184
    3. 'K' → logprob: -4.464074611663818
    4. 'N' → logprob: -4.714074611663818
    5. '(s' → logprob: -6.089074611663818
    6. ' K' → logprob: -6.714074611663818
    7. ' N' → logprob: -7.089074611663818
    8. ' (' → logprob: -7.464074611663818
    9. 's' → logprob: -7.839074611663818
    10. '(N' → logprob: -8.08907413482666

Token 142: ' square' (ID: 13749)
  Prédit: ' square'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' square' → logprob: -0.273237019777298
    2. 'square' → logprob: -2.1482369899749756
    3. 'sqrt' → logprob: -2.3982369899749756
    4. ' sqrt' → logprob: -4.898237228393555
    5. ' division' → logprob: -5.023237228393555
    6. ' N' → logprob: -5.273237228393555
    7. 's' → logprob: -5.648237228393555
    8. 'N' → logprob: -5.898237228393555
    9. 'K' → logprob: -5.898237228393555
    10. ' K' → logprob: -6.523237228393555

Token 143: ' root' (ID: 6577)
  Prédit: ' root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.3146410882472992
    2. 'root' → logprob: -1.3146411180496216
    3. '_root' → logprob: -6.689640998840332
    4. 't' → logprob: -9.564640998840332
    5. '-root' → logprob: -10.564640998840332
    6. ' ' → logprob: -11.314640998840332
    7. '```' → logprob: -11.689640998840332
    8. '   ' → logprob: -12.314640998840332
    9. '(root' → logprob: -13.064640998840332
    10. '	root' → logprob: -13.064640998840332

Token 144: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8001163601875305
    2. '(N' → logprob: -0.9251163601875305
    3. ' of' → logprob: -2.0501163005828857
    4. '   ' → logprob: -4.175116539001465
    5. '(K' → logprob: -5.050116539001465
    6. ' (' → logprob: -6.175116539001465
    7. 'of' → logprob: -8.050116539001465
    8. ',' → logprob: -8.050116539001465
    9. ')' → logprob: -8.425116539001465
    10. '(
' → logprob: -8.675116539001465

Token 145: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22535809874534607
    2. ' N' → logprob: -1.7253581285476685
    3. 'K' → logprob: -4.100358009338379
    4. ' K' → logprob: -4.975358009338379
    5. ' ' → logprob: -9.225358009338379
    6. '(N' → logprob: -9.975358009338379
    7. '(' → logprob: -10.850358009338379
    8. '(K' → logprob: -11.475358009338379
    9. ' (' → logprob: -12.350358009338379
    10. ' ' → logprob: -13.350358009338379

Token 146: '.' (ID: 13)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0407586544752121
    2. '(N' → logprob: -3.7907586097717285
    3. '   ' → logprob: -4.1657586097717285
    4. ')' → logprob: -7.0407586097717285
    5. '(
' → logprob: -8.165759086608887
    6. ' (' → logprob: -8.165759086608887
    7. ',' → logprob: -8.665759086608887
    8. 's' → logprob: -9.790759086608887
    9. '    ' → logprob: -10.290759086608887
    10. ' ' → logprob: -10.415759086608887

Token 147: ' This' (ID: 1328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.332157015800476
    2. 'n' → logprob: -1.957157015800476
    3. ' s' → logprob: -1.957157015800476
    4. ' n' → logprob: -2.3321571350097656
    5. ' sq' → logprob: -3.0821571350097656
    6. 'sq' → logprob: -3.2071571350097656
    7. '   ' → logprob: -3.3321571350097656
    8. 'sqrt' → logprob: -3.4571571350097656
    9. ' sqrt' → logprob: -3.5821571350097656
    10. ' root' → logprob: -3.7071571350097656

Token 148: ' will' (ID: 738)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1400284320116043
    2. ' is' → logprob: -2.515028476715088
    3. '<|end|>' → logprob: -3.640028476715088
    4. ' will' → logprob: -5.140028476715088
    5. '<|end|>' → logprob: -6.140028476715088
    6. ' space' → logprob: -6.515028476715088
    7. ' N' → logprob: -6.515028476715088
    8. '  ' → logprob: -6.640028476715088
    9. ',' → logprob: -6.765028476715088
    10. ')' → logprob: -7.015028476715088

Token 149: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5896023511886597
    2. ' ' → logprob: -1.3396023511886597
    3. ' provide' → logprob: -1.8396023511886597
    4. ' help' → logprob: -4.339602470397949
    5. '<|end|>' → logprob: -5.589602470397949
    6. ' determine' → logprob: -6.089602470397949
    7. ' continue' → logprob: -6.589602470397949
    8. '  ' → logprob: -7.089602470397949
    9. ' give' → logprob: -7.464602470397949
    10. ' serve' → logprob: -7.964602470397949

Token 150: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -1.4898138046264648
    2. ' int' → logprob: -1.6148138046264648
    3. ' sqrt' → logprob: -1.7398138046264648
    4. ' ' → logprob: -2.114813804626465
    5. ' n' → logprob: -2.489813804626465
    6. ' i' → logprob: -2.739813804626465
    7. ' N' → logprob: -3.614813804626465
    8. ' the' → logprob: -3.614813804626465
    9. 'int' → logprob: -3.989813804626465
    10. 's' → logprob: -3.989813804626465

Token 151: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7484937906265259
    2. ' for' → logprob: -0.7484937906265259
    3. '<|end|>' → logprob: -3.3734936714172363
    4. 'for' → logprob: -5.373493671417236
    5. ' ' → logprob: -5.498493671417236
    6. ' as' → logprob: -5.873493671417236
    7. 'to' → logprob: -5.998493671417236
    8. ' the' → logprob: -6.248493671417236
    9. ' in' → logprob: -6.873493671417236
    10. '<|end|>' → logprob: -7.123493671417236

Token 152: ' partition' (ID: 31512)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.18859374523162842
    2. '<|end|>' → logprob: -2.688593864440918
    3. 'range' → logprob: -3.313593864440918
    4. ' find' → logprob: -3.813593864440918
    5. ' determine' → logprob: -4.438593864440918
    6. ' ' → logprob: -4.688593864440918
    7. ' identify' → logprob: -4.938593864440918
    8. ' evaluate' → logprob: -5.938593864440918
    9. ' iterate' → logprob: -6.313593864440918
    10. ' calculate' → logprob: -6.313593864440918

Token 153: ' our' (ID: 1039)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.05560106039047241
    2. ' N' → logprob: -3.680601119995117
    3. 'the' → logprob: -4.430601119995117
    4. '<|end|>' → logprob: -4.430601119995117
    5. 'N' → logprob: -5.430601119995117
    6. '<|end|>' → logprob: -8.305601119995117
    7. ' numbers' → logprob: -8.555601119995117
    8. ' ' → logprob: -9.680601119995117
    9. ' ranges' → logprob: -9.680601119995117
    10. ' a' → logprob: -11.555601119995117

Token 154: ' data' (ID: 1238)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.07405447959899902
    2. ' range' → logprob: -3.574054479598999
    3. 'search' → logprob: -4.324054718017578
    4. ' problem' → logprob: -4.449054718017578
    5. ' loop' → logprob: -4.949054718017578
    6. ' loops' → logprob: -5.324054718017578
    7. 'range' → logprob: -6.824054718017578
    8. ' number' → logprob: -6.824054718017578
    9. ' factor' → logprob: -7.074054718017578
    10. ' iteration' → logprob: -7.324054718017578

Token 155: ' for' (ID: 395)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.37876808643341064
    2. ',' → logprob: -1.7537680864334106
    3. ' for' → logprob: -2.753767967224121
    4. '   ' → logprob: -3.503767967224121
    5. ')' → logprob: -3.753767967224121
    6. 's' → logprob: -5.253767967224121
    7. ' into' → logprob: -5.628767967224121
    8. 'for' → logprob: -5.878767967224121
    9. ' to' → logprob: -6.253767967224121
    10. '_' → logprob: -6.753767967224121

Token 156: ' efficiency' (ID: 17456)
  Prédit: ' efficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' efficient' → logprob: -0.6831809282302856
    2. ' optimization' → logprob: -1.5581809282302856
    3. ' the' → logprob: -2.058180809020996
    4. ' factor' → logprob: -2.933180809020996
    5. ' iteration' → logprob: -3.683180809020996
    6. ' processing' → logprob: -4.433180809020996
    7. ' divis' → logprob: -4.683180809020996
    8. ' searching' → logprob: -4.933180809020996
    9. ' further' → logprob: -5.183180809020996
    10. ' sieve' → logprob: -5.183180809020996

Token 157: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30332455039024353
    2. '   ' → logprob: -1.803324580192566
    3. ')' → logprob: -2.5533244609832764
    4. ',' → logprob: -4.3033246994018555
    5. 's' → logprob: -6.9283246994018555
    6. '_' → logprob: -7.4283246994018555
    7. ':' → logprob: -7.8033246994018555
    8. '<|end|>' → logprob: -7.9283246994018555
    9. ' ' → logprob: -8.053324699401855
    10. 'n' → logprob: -8.178324699401855

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8574722409248352
    2. ' 
' → logprob: -1.8574721813201904
    3. ' ' → logprob: -1.9824721813201904
    4. 's' → logprob: -2.4824721813201904
    5. 'n' → logprob: -3.1074721813201904
    6. '  
' → logprob: -3.4824721813201904
    7. '    
' → logprob: -3.6074721813201904
    8. '<|end|>' → logprob: -3.8574721813201904
    9. '   
' → logprob: -4.7324724197387695
    10. 'sqrt' → logprob: -5.2324724197387695

Token 159: ' n' (ID: 297)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.045032024383545
    2. 'limit' → logprob: -2.170032024383545
    3. 'root' → logprob: -2.295032024383545
    4. 'sqrt' → logprob: -2.545032024383545
    5. 'm' → logprob: -2.670032024383545
    6. 'sq' → logprob: -2.795032024383545
    7. ' root' → logprob: -3.170032024383545
    8. ' block' → logprob: -3.170032024383545
    9. ' max' → logprob: -3.170032024383545
    10. 's' → logprob: -3.170032024383545

Token 160: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3718242049217224
    2. '_s' → logprob: -1.3718242645263672
    3. '_root' → logprob: -3.496824264526367
    4. ' =' → logprob: -4.871824264526367
    5. '=' → logprob: -5.496824264526367
    6. 'sqrt' → logprob: -6.121824264526367
    7. '_=' → logprob: -6.121824264526367
    8. 's' → logprob: -6.371824264526367
    9. '_floor' → logprob: -6.496824264526367
    10. 'r' → logprob: -6.621824264526367

Token 161: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.003509080270305276
    2. 'int' → logprob: -5.753509044647217
    3. ' ' → logprob: -8.753509521484375
    4. ' sqrt' → logprob: -8.753509521484375
    5. 'sqrt' → logprob: -12.503509521484375
    6. '	int' → logprob: -12.753509521484375
    7. '  ' → logprob: -13.003509521484375
    8. ' floor' → logprob: -13.253509521484375
    9. ' ' → logprob: -13.253509521484375
    10. '```' → logprob: -14.253509521484375

Token 162: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.12703467905521393
    2. '(' → logprob: -2.1270346641540527
    3. 'sqrt' → logprob: -10.002035140991211
    4. ' (' → logprob: -10.502035140991211
    5. '(
' → logprob: -10.627035140991211
    6. 's' → logprob: -12.627035140991211
    7. ' sqrt' → logprob: -13.127035140991211
    8. ')' → logprob: -14.127035140991211
    9. '.sqrt' → logprob: -14.252035140991211
    10. '(pow' → logprob: -14.877035140991211

Token 163: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -4.11996734328568e-05
    2. 'q' → logprob: -10.625041007995605
    3. 'qr' → logprob: -11.750041007995605
    4. 'qt' → logprob: -12.125041007995605
    5. 'rt' → logprob: -13.875041007995605
    6. '(' → logprob: -14.875041007995605
    7. '(q' → logprob: -15.000041007995605
    8. ')' → logprob: -15.125041007995605
    9. 'sqrt' → logprob: -15.125041007995605
    10. 'ql' → logprob: -15.250041007995605

Token 164: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0011378349736332893
    2. '(' → logprob: -6.876137733459473
    3. ' (' → logprob: -10.126137733459473
    4. '(
' → logprob: -10.376137733459473
    5. ')' → logprob: -11.501137733459473
    6. ')(' → logprob: -11.626137733459473
    7. '(n' → logprob: -11.626137733459473
    8. 'N' → logprob: -12.751137733459473
    9. '
' → logprob: -13.751137733459473
    10. '```' → logprob: -14.751137733459473

Token 165: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011667684884741902
    2. ')' → logprob: -6.876166820526123
    3. ' ))' → logprob: -9.876166343688965
    4. '))+' → logprob: -10.001166343688965
    5. '))
' → logprob: -10.501166343688965
    6. ')))' → logprob: -12.626166343688965
    7. ' ' → logprob: -13.126166343688965
    8. '))-' → logprob: -14.001166343688965
    9. '))

' → logprob: -14.126166343688965
    10. '));' → logprob: -14.501166343688965

Token 166: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3173704147338867
    2. '   ' → logprob: -1.6923704147338867
    3. '<|end|>' → logprob: -2.6923704147338867
    4. '    
' → logprob: -4.192370414733887
    5. ')' → logprob: -6.067370414733887
    6. '  
' → logprob: -7.067370414733887
    7. '\n' → logprob: -7.692370414733887
    8. ' 
' → logprob: -7.692370414733887
    9. '<|end|>' → logprob: -7.942370414733887
    10. '   
' → logprob: -9.692370414733887

Token 167: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0961461290717125
    2. '<|end|>' → logprob: -2.9711461067199707
    3. '   ' → logprob: -4.221146106719971
    4. ')' → logprob: -4.971146106719971
    5. '    
' → logprob: -5.096146106719971
    6. '  
' → logprob: -5.346146106719971
    7. ' 
' → logprob: -6.096146106719971
    8. '\n' → logprob: -6.221146106719971
    9. ' ' → logprob: -6.471146106719971
    10. '   
' → logprob: -8.221146583557129

Token 168: ' Initialize' (ID: 19496)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7348085045814514
    2. '#' → logprob: -1.6098084449768066
    3. ' dp' → logprob: -2.7348084449768066
    4. ' #' → logprob: -2.9848084449768066
    5. 'arr' → logprob: -3.4848084449768066
    6. ' arr' → logprob: -3.8598084449768066
    7. 'result' → logprob: -4.109808444976807
    8. ' result' → logprob: -4.359808444976807
    9. 'd' → logprob: -4.734808444976807
    10. 'for' → logprob: -4.734808444976807

Token 169: ' a' (ID: 261)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.1505800485610962
    2. ' dp' → logprob: -1.2755800485610962
    3. 'dp' → logprob: -1.9005800485610962
    4. ' a' → logprob: -2.9005799293518066
    5. ' an' → logprob: -2.9005799293518066
    6. ' result' → logprob: -3.0255799293518066
    7. 'ans' → logprob: -3.1505799293518066
    8. 'result' → logprob: -4.525579929351807
    9. ' answer' → logprob: -5.150579929351807
    10. 'a' → logprob: -5.400579929351807

Token 170: ' ' (ID: 220)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.8642602562904358
    2. 'dp' → logprob: -0.9892602562904358
    3. ' list' → logprob: -1.739260196685791
    4. 'list' → logprob: -4.239260196685791
    5. 'lst' → logprob: -5.739260196685791
    6. '_list' → logprob: -6.739260196685791
    7. ' result' → logprob: -6.739260196685791
    8. '[]' → logprob: -6.864260196685791
    9. 'result' → logprob: -6.989260196685791
    10. ' defaultdict' → logprob: -6.989260196685791

Token 171: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05089568719267845
    2. 'result' → logprob: -4.050895690917969
    3. 'list' → logprob: -4.675895690917969
    4. 'default' → logprob: -4.800895690917969
    5. 'lst' → logprob: -5.925895690917969
    6. '[' → logprob: -6.175895690917969
    7. '[]' → logprob: -6.175895690917969
    8. 'counter' → logprob: -6.925895690917969
    9. 'count' → logprob: -7.050895690917969
    10. 'ans' → logprob: -7.050895690917969

Token 172: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.1398760825395584
    2. 'd' → logprob: -2.639876127243042
    3. '-dimensional' → logprob: -4.014875888824463
    4. '[' → logprob: -4.264875888824463
    5. '   ' → logprob: -5.389875888824463
    6. '-' → logprob: -5.514875888824463
    7. ' =' → logprob: -5.514875888824463
    8. '[]' → logprob: -6.014875888824463
    9. ' -' → logprob: -6.389875888824463
    10. '[]
' → logprob: -6.639875888824463

Token 173: ' list' (ID: 1562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5035789012908936
    2. ' dp' → logprob: -2.2535789012908936
    3. ' array' → logprob: -2.5035789012908936
    4. ' list' → logprob: -3.0035789012908936
    5. 'dp' → logprob: -3.1285789012908936
    6. '[' → logprob: -3.3785789012908936
    7. '_' → logprob: -4.128579139709473
    8. 'array' → logprob: -4.128579139709473
    9. ' [' → logprob: -4.503579139709473
    10. ' _' → logprob: -5.003579139709473

Token 174: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4074041843414307
    2. 'dp' → logprob: -2.0324041843414307
    3. '[' → logprob: -2.5324041843414307
    4. '(' → logprob: -2.5324041843414307
    5. '   ' → logprob: -2.7824041843414307
    6. ' dp' → logprob: -3.2824041843414307
    7. 'a' → logprob: -3.4074041843414307
    8. '(matrix' → logprob: -3.6574041843414307
    9. 'result' → logprob: -3.7824041843414307
    10. ' of' → logprob: -3.7824041843414307

Token 175: 'K' (ID: 42)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20449329912662506
    2. ' dp' → logprob: -1.9544932842254639
    3. ')' → logprob: -5.454493522644043
    4. ' ans' → logprob: -5.454493522644043
    5. 'arr' → logprob: -5.579493522644043
    6. 'result' → logprob: -5.829493522644043
    7. ' result' → logprob: -5.829493522644043
    8. 'lst' → logprob: -6.204493522644043
    9. 'matrix' → logprob: -6.204493522644043
    10. ' matrix' → logprob: -6.454493522644043

Token 176: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16289755702018738
    2. ' +' → logprob: -2.2878975868225098
    3. '][' → logprob: -3.4128975868225098
    4. ')[' → logprob: -4.78789758682251
    5. ')' → logprob: -5.28789758682251
    6. ',' → logprob: -6.91289758682251
    7. '[' → logprob: -8.037897109985352
    8. ')][' → logprob: -8.287897109985352
    9. ' ][' → logprob: -8.412897109985352
    10. ']' → logprob: -8.912897109985352

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.500011444091797
    3. '
' → logprob: -14.250011444091797
    4. '2' → logprob: -16.125011444091797
    5. '   ' → logprob: -16.500011444091797
    6. ')' → logprob: -16.625011444091797
    7. '

' → logprob: -17.375011444091797
    8. '+' → logprob: -17.625011444091797
    9. 'n' → logprob: -17.750011444091797
    10. '][' → logprob: -17.875011444091797

Token 178: ' rows' (ID: 13585)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07108446955680847
    2. '][' → logprob: -2.946084499359131
    3. ')[' → logprob: -4.446084499359131
    4. ',' → logprob: -5.821084499359131
    5. ']' → logprob: -8.071084022521973
    6. '][]' → logprob: -8.196084022521973
    7. ' )' → logprob: -8.446084022521973
    8. ')][' → logprob: -8.696084022521973
    9. ' ][' → logprob: -8.946084022521973
    10. ')
' → logprob: -10.321084022521973

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021319855004549026
    2. ')' → logprob: -3.89631986618042
    3. ',[' → logprob: -7.89631986618042
    4. ' ,' → logprob: -8.271319389343262
    5. ' and' → logprob: -10.521319389343262
    6. ',
' → logprob: -10.521319389343262
    7. '][' → logprob: -11.021319389343262
    8. ']' → logprob: -11.271319389343262
    9. ')[' → logprob: -11.396319389343262
    10. 'and' → logprob: -11.521319389343262

Token 180: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.33236709237098694
    2. 'n' → logprob: -1.4573670625686646
    3. ' N' → logprob: -3.582367181777954
    4. 'N' → logprob: -3.832367181777954
    5. ' (' → logprob: -8.707366943359375
    6. '(n' → logprob: -9.207366943359375
    7. ' ' → logprob: -9.457366943359375
    8. ')' → logprob: -9.832366943359375
    9. '2' → logprob: -11.332366943359375
    10. '	n' → logprob: -11.332366943359375

Token 181: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18020574748516083
    2. ' N' → logprob: -2.305205821990967
    3. 'n' → logprob: -3.055205821990967
    4. ' n' → logprob: -4.055205821990967
    5. ' (' → logprob: -8.430205345153809
    6. '(N' → logprob: -8.805205345153809
    7. '(n' → logprob: -9.055205345153809
    8. ')' → logprob: -9.305205345153809
    9. ' ' → logprob: -10.555205345153809
    10. '2' → logprob: -10.555205345153809

Token 182: '*n' (ID: 58470)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.749589741230011
    2. ')' → logprob: -1.3745896816253662
    3. ',' → logprob: -2.499589681625366
    4. '*(' → logprob: -2.624589681625366
    5. '*' → logprob: -2.874589681625366
    6. '*N' → logprob: -3.999589681625366
    7. '*n' → logprob: -4.374589920043945
    8. '][' → logprob: -4.624589920043945
    9. '**' → logprob: -4.999589920043945
    10. ' ' → logprob: -5.499589920043945

Token 183: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3207954466342926
    2. ' +' → logprob: -1.3207954168319702
    3. ')' → logprob: -5.57079553604126
    4. ' columns' → logprob: -5.94579553604126
    5. 'columns' → logprob: -7.94579553604126
    6. ' )' → logprob: -8.070795059204102
    7. ' ' → logprob: -8.945795059204102
    8. '1' → logprob: -10.070795059204102
    9. '```' → logprob: -10.195795059204102
    10. ' rows' → logprob: -10.445795059204102

Token 184: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6554737687110901
    2. '1' → logprob: -0.9054737687110901
    3. ' +' → logprob: -2.6554737091064453
    4. ' ' → logprob: -6.030473709106445
    5. ' columns' → logprob: -6.280473709106445
    6. ')' → logprob: -7.280473709106445
    7. 'columns' → logprob: -8.280473709106445
    8. '[' → logprob: -8.655473709106445
    9. '[N' → logprob: -9.280473709106445
    10. '2' → logprob: -9.280473709106445

Token 185: ' columns' (ID: 15697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1889622062444687
    2. ',' → logprob: -1.9389622211456299
    3. ' columns' → logprob: -4.438961982727051
    4. ' )' → logprob: -5.063961982727051
    5. ' ,' → logprob: -5.313961982727051
    6. 'columns' → logprob: -6.063961982727051
    7. ']' → logprob: -7.063961982727051
    8. '+' → logprob: -7.688961982727051
    9. '[' → logprob: -7.938961982727051
    10. ' ' → logprob: -8.18896198272705

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018817225471138954
    2. ',' → logprob: -4.01881742477417
    3. '   ' → logprob: -8.143816947937012
    4. ' )' → logprob: -8.518816947937012
    5. ')
' → logprob: -9.643816947937012
    6. ' ,' → logprob: -10.268816947937012
    7. ']' → logprob: -10.393816947937012
    8. '[' → logprob: -11.643816947937012
    9. '),' → logprob: -12.143816947937012
    10. '    ' → logprob: -12.768816947937012

Token 187: ' used' (ID: 2061)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.696635365486145
    2. ' dp' → logprob: -1.696635365486145
    3. '   ' → logprob: -2.3216352462768555
    4. '[' → logprob: -2.4466352462768555
    5. ',' → logprob: -3.1966352462768555
    6. ' =' → logprob: -3.6966352462768555
    7. ' [' → logprob: -4.4466352462768555
    8. ' for' → logprob: -5.4466352462768555
    9. '[
' → logprob: -5.5716352462768555
    10. 'matrix' → logprob: -5.5716352462768555

Token 188: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09894218295812607
    2. ' to' → logprob: -2.973942279815674
    3. '<|end|>' → logprob: -4.348942279815674
    4. ' =' → logprob: -4.473942279815674
    5. 'for' → logprob: -4.848942279815674
    6. '=' → logprob: -5.098942279815674
    7. ' ' → logprob: -6.723942279815674
    8. '[' → logprob: -6.723942279815674
    9. ' as' → logprob: -7.348942279815674
    10. '[]' → logprob: -8.098941802978516

Token 189: ' dynamic' (ID: 14012)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.07965878397226334
    2. 'dp' → logprob: -2.9546587467193604
    3. ' dynamic' → logprob: -3.9546587467193604
    4. ' DP' → logprob: -5.4546589851379395
    5. '_dp' → logprob: -7.5796589851379395
    6. 'DP' → logprob: -8.829658508300781
    7. '0' → logprob: -9.454658508300781
    8. ' storing' → logprob: -9.954658508300781
    9. ' [' → logprob: -9.954658508300781
    10. '	dp' → logprob: -10.204658508300781

Token 190: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.0038465093821287155
    2. 'program' → logprob: -6.003846645355225
    3. '_program' → logprob: -6.753846645355225
    4. '_' → logprob: -9.628846168518066
    5. 'Programming' → logprob: -10.378846168518066
    6. ' programmation' → logprob: -10.753846168518066
    7. ' programación' → logprob: -10.878846168518066
    8. ' ' → logprob: -10.878846168518066
    9. '-program' → logprob: -11.628846168518066
    10. ' programação' → logprob: -11.753846168518066

Token 191: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7609473466873169
    2. 'dp' → logprob: -0.8859473466873169
    3. ' dp' → logprob: -2.3859472274780273
    4. ',' → logprob: -4.010947227478027
    5. '_dp' → logprob: -6.135947227478027
    6. ' =' → logprob: -6.260947227478027
    7. '(dp' → logprob: -6.260947227478027
    8. '	dp' → logprob: -6.510947227478027
    9. 'DP' → logprob: -6.885947227478027
    10. '=' → logprob: -8.010947227478027

Token 192: 'DP' (ID: 16851)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.8081626296043396
    2. ')' → logprob: -0.9331626296043396
    3. 'dp' → logprob: -2.3081626892089844
    4. ' to' → logprob: -3.9331626892089844
    5. ' DP' → logprob: -4.308162689208984
    6. ' )' → logprob: -4.558162689208984
    7. ' for' → logprob: -5.433162689208984
    8. ' range' → logprob: -6.058162689208984
    9. '   ' → logprob: -6.058162689208984
    10. 'DP' → logprob: -7.058162689208984

Token 193: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04410666972398758
    2. ' )' → logprob: -3.6691067218780518
    3. ').' → logprob: -4.544106483459473
    4. 'dp' → logprob: -6.294106483459473
    5. ' for' → logprob: -7.169106483459473
    6. ',' → logprob: -7.294106483459473
    7. ' states' → logprob: -7.419106483459473
    8. ' to' → logprob: -7.544106483459473
    9. ' dp' → logprob: -7.794106483459473
    10. '   ' → logprob: -7.919106483459473

Token 194: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.230607807636261
    2. 'dp' → logprob: -1.6056077480316162
    3. '   ' → logprob: -5.980607986450195
    4. ' DP' → logprob: -6.730607986450195
    5. 'DP' → logprob: -7.605607986450195
    6. '	dp' → logprob: -8.230607986450195
    7. '
' → logprob: -8.605607986450195
    8. '_dp' → logprob: -9.355607986450195
    9. '(dp' → logprob: -9.855607986450195
    10. '    
' → logprob: -9.980607986450195

Token 195: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.10557136684656143
    2. 'dp' → logprob: -2.3555712699890137
    3. ' DP' → logprob: -5.730571269989014
    4. 'DP' → logprob: -6.730571269989014
    5. '   ' → logprob: -8.480571746826172
    6. '	dp' → logprob: -9.105571746826172
    7. '_dp' → logprob: -9.230571746826172
    8. ' d' → logprob: -9.605571746826172
    9. 'd' → logprob: -9.855571746826172
    10. ' D' → logprob: -9.855571746826172

Token 196: ' Each' (ID: 11555)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4365719258785248
    2. ' dp' → logprob: -1.0615719556808472
    3. '   ' → logprob: -5.936572074890137
    4. 'DP' → logprob: -6.186572074890137
    5. ' DP' → logprob: -6.311572074890137
    6. '	dp' → logprob: -8.061572074890137
    7. ' f' → logprob: -8.811572074890137
    8. 'd' → logprob: -8.811572074890137
    9. ' ' → logprob: -9.186572074890137
    10. 'D' → logprob: -9.311572074890137

Token 197: ' element' (ID: 3577)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.12024053186178207
    2. 'row' → logprob: -2.6202404499053955
    3. '[' → logprob: -4.120240688323975
    4. ' dp' → logprob: -4.620240688323975
    5. ' [' → logprob: -4.870240688323975
    6. 'dp' → logprob: -5.870240688323975
    7. ' element' → logprob: -6.245240688323975
    8. ' entry' → logprob: -7.995240688323975
    9. '[
' → logprob: -8.620240211486816
    10. '_' → logprob: -8.620240211486816

Token 198: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4655829071998596
    2. ' is' → logprob: -1.4655828475952148
    3. '=' → logprob: -2.090582847595215
    4. '[' → logprob: -4.340582847595215
    5. ' ' → logprob: -7.590582847595215
    6. '=[]' → logprob: -7.590582847595215
    7. ' [' → logprob: -7.965582847595215
    8. ' of' → logprob: -8.090582847595215
    9. ' will' → logprob: -8.215582847595215
    10. ' =[' → logprob: -8.215582847595215

Token 199: ' this' (ID: 495)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.780154287815094
    2. '[' → logprob: -1.1551542282104492
    3. 'range' → logprob: -1.6551542282104492
    4. ' [' → logprob: -4.280154228210449
    5. 'dp' → logprob: -4.405154228210449
    6. ' dp' → logprob: -5.405154228210449
    7. ' the' → logprob: -6.030154228210449
    8. '0' → logprob: -6.780154228210449
    9. 'the' → logprob: -7.030154228210449
    10. '[[' → logprob: -7.905154228210449

Token 200: ' table' (ID: 3293)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.4431065320968628
    2. 'dp' → logprob: -1.8181065320968628
    3. ' list' → logprob: -2.0681066513061523
    4. ' [' → logprob: -2.3181066513061523
    5. '[' → logprob: -2.3181066513061523
    6. ' dp' → logprob: -2.4431066513061523
    7. 'is' → logprob: -3.3181066513061523
    8. ' will' → logprob: -3.5681066513061523
    9. ' DP' → logprob: -3.5681066513061523
    10. ' represents' → logprob: -3.9431066513061523

Token 201: ' will' (ID: 738)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6264152526855469
    2. ' is' → logprob: -0.8764152526855469
    3. '=' → logprob: -3.126415252685547
    4. '[' → logprob: -6.626415252685547
    5. ' ' → logprob: -6.751415252685547
    6. ' will' → logprob: -7.001415252685547
    7. ' represents' → logprob: -7.376415252685547
    8. ' has' → logprob: -8.126415252685547
    9. '=[]' → logprob: -8.751415252685547
    10. '    ' → logprob: -9.126415252685547

Token 202: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0066908677108585835
    2. ' represent' → logprob: -5.881690979003906
    3. 'be' → logprob: -6.131690979003906
    4. ' store' → logprob: -7.756690979003906
    5. ' start' → logprob: -7.756690979003906
    6. 'represent' → logprob: -8.631690979003906
    7. '<|end|>' → logprob: -9.256690979003906
    8. ' ' → logprob: -9.256690979003906
    9. 'start' → logprob: -9.381690979003906
    10. ' contain' → logprob: -9.506690979003906

Token 203: ' an' (ID: 448)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16428367793560028
    2. ' initialized' → logprob: -2.6642837524414062
    3. ' ' → logprob: -3.1642837524414062
    4. ' a' → logprob: -3.6642837524414062
    5. 'initialized' → logprob: -4.914283752441406
    6. 'a' → logprob: -5.664283752441406
    7. ' an' → logprob: -6.789283752441406
    8. 'initial' → logprob: -7.414283752441406
    9. ' False' → logprob: -8.414283752441406
    10. ' [' → logprob: -8.539283752441406

Token 204: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.997705340385437
    2. '0' → logprob: -1.122705340385437
    3. ' int' → logprob: -2.6227054595947266
    4. '[' → logprob: -3.2477054595947266
    5. ' array' → logprob: -3.2477054595947266
    6. ' empty' → logprob: -3.3727054595947266
    7. '[]' → logprob: -3.6227054595947266
    8. 'int' → logprob: -3.6227054595947266
    9. 'integer' → logprob: -3.6227054595947266
    10. ' [' → logprob: -3.9977054595947266

Token 205: ' initially' (ID: 25998)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.376468539237976
    2. ' ' → logprob: -1.501468539237976
    3. '[' → logprob: -1.626468539237976
    4. ',' → logprob: -1.626468539237976
    5. '   ' → logprob: -3.1264686584472656
    6. ' initialized' → logprob: -4.251468658447266
    7. ' representing' → logprob: -4.376468658447266
    8. '.' → logprob: -4.501468658447266
    9. '
' → logprob: -5.251468658447266
    10. ' [' → logprob: -5.251468658447266

Token 206: ' set' (ID: 920)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0654560849070549
    2. '0' → logprob: -3.0654561519622803
    3. ',' → logprob: -4.940455913543701
    4. ' ' → logprob: -6.065455913543701
    5. ' (' → logprob: -6.315455913543701
    6. '(
' → logprob: -6.565455913543701
    7. ')' → logprob: -6.815455913543701
    8. ']' → logprob: -7.190455913543701
    9. '()' → logprob: -7.440455913543701
    10. '=' → logprob: -8.19045639038086

Token 207: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03773859143257141
    2. 'to' → logprob: -3.662738561630249
    3. '0' → logprob: -4.537738800048828
    4. ' ' → logprob: -7.537738800048828
    5. '   ' → logprob: -10.162738800048828
    6. '[' → logprob: -10.787738800048828
    7. '    ' → logprob: -10.912738800048828
    8. ',' → logprob: -11.287738800048828
    9. ')' → logprob: -11.537738800048828
    10. '  ' → logprob: -11.662738800048828

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20141704380512238
    2. ' ' → logprob: -1.701417088508606
    3. ' zero' → logprob: -13.451416969299316
    4. ' ' → logprob: -13.701416969299316
    5. '  ' → logprob: -15.326416969299316
    6. '```' → logprob: -16.076417922973633
    7. ' zeros' → logprob: -16.263917922973633
    8. 'zero' → logprob: -16.451417922973633
    9. '۰' → logprob: -16.451417922973633
    10. ')' → logprob: -16.638917922973633

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033677343162707984
    2. ' ' → logprob: -8.000336647033691
    3. 'zero' → logprob: -14.375336647033691
    4. '```' → logprob: -15.375336647033691
    5. '-' → logprob: -15.500336647033691
    6. ' zero' → logprob: -16.000337600708008
    7. '   ' → logprob: -16.437837600708008
    8. '۰' → logprob: -17.187837600708008
    9. '1' → logprob: -17.500337600708008
    10. '  ' → logprob: -17.500337600708008

Token 210: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7612547278404236
    2. 'dp' → logprob: -0.7612547278404236
    3. ' dp' → logprob: -3.7612547874450684
    4. '
' → logprob: -4.636254787445068
    5. ')' → logprob: -5.011254787445068
    6. 'DP' → logprob: -5.261254787445068
    7. '(dp' → logprob: -5.386254787445068
    8. ',' → logprob: -5.886254787445068
    9. ')
' → logprob: -6.011254787445068
    10. ']' → logprob: -6.136254787445068

Token 211: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.337391197681427
    2. ' dp' → logprob: -1.7123911380767822
    3. '   ' → logprob: -2.3373911380767822
    4. '
' → logprob: -6.087391376495361
    5. 'DP' → logprob: -6.337391376495361
    6. ' DP' → logprob: -6.712391376495361
    7. '	dp' → logprob: -6.837391376495361
    8. '    
' → logprob: -7.587391376495361
    9. '```' → logprob: -8.087390899658203
    10. ' ' → logprob: -8.212390899658203

Token 212: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15617825090885162
    2. ' dp' → logprob: -2.0311782360076904
    3. '   ' → logprob: -5.1561784744262695
    4. 'DP' → logprob: -5.1561784744262695
    5. ' DP' → logprob: -6.7811784744262695
    6. '	dp' → logprob: -8.65617847442627
    7. ' ' → logprob: -9.03117847442627
    8. 'd' → logprob: -9.28117847442627
    9. 'D' → logprob: -9.40617847442627
    10. '_dp' → logprob: -9.90617847442627

Token 213: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10593321174383163
    2. ' dp' → logprob: -2.35593318939209
    3. 'DP' → logprob: -5.85593318939209
    4. '   ' → logprob: -6.35593318939209
    5. ' DP' → logprob: -7.60593318939209
    6. 'd' → logprob: -9.23093318939209
    7. ' ' → logprob: -9.35593318939209
    8. 'D' → logprob: -9.35593318939209
    9. '	dp' → logprob: -9.48093318939209
    10. 'f' → logprob: -10.23093318939209

Token 214: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007912161760032177
    2. '=' → logprob: -4.8829121589660645
    3. ' ' → logprob: -8.257912635803223
    4. '[' → logprob: -10.132912635803223
    5. ' =[' → logprob: -12.882912635803223
    6. '  ' → logprob: -14.382912635803223
    7. '=[' → logprob: -14.507912635803223
    8. ',' → logprob: -14.507912635803223
    9. ' =
' → logprob: -14.632912635803223
    10. '.' → logprob: -14.882912635803223

Token 215: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2528471350669861
    2. ']' → logprob: -1.5028471946716309
    3. ' ][' → logprob: -8.252846717834473
    4. '][]' → logprob: -8.377846717834473
    5. '[i' → logprob: -9.002846717834473
    6. '[' → logprob: -9.252846717834473
    7. ']=' → logprob: -9.627846717834473
    8. '][-' → logprob: -10.502846717834473
    9. '][:' → logprob: -10.877846717834473
    10. ' ]' → logprob: -11.002846717834473

Token 216: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0968954786658287
    2. '0' → logprob: -2.471895456314087
    3. ' j' → logprob: -5.346895694732666
    4. ']' → logprob: -5.971895694732666
    5. ' ' → logprob: -7.971895694732666
    6. '
' → logprob: -9.846895217895508
    7. 'i' → logprob: -10.346895217895508
    8. '][' → logprob: -10.596895217895508
    9. 'k' → logprob: -10.721895217895508
    10. ' ]' → logprob: -11.096895217895508

Token 217: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001000059419311583
    2. ' ]' → logprob: -7.375999927520752
    3. ']=' → logprob: -8.00100040435791
    4. '=' → logprob: -11.12600040435791
    5. ']+=' → logprob: -11.50100040435791
    6. '][' → logprob: -12.50100040435791
    7. '[' → logprob: -13.25100040435791
    8. '[i' → logprob: -13.50100040435791
    9. ')' → logprob: -13.75100040435791
    10. '   ' → logprob: -13.87600040435791

Token 218: ' will' (ID: 738)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869081139564514
    2. ' =' → logprob: -1.1369080543518066
    3. ' ' → logprob: -10.761908531188965
    4. ',' → logprob: -11.636908531188965
    5. ' =[' → logprob: -13.261908531188965
    6. '[' → logprob: -13.636908531188965
    7. '=[]' → logprob: -14.261908531188965
    8. '=[' → logprob: -14.636908531188965
    9. ' =
' → logprob: -14.636908531188965
    10. '0' → logprob: -14.761908531188965

Token 219: ' represent' (ID: 5188)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0694149732589722
    2. '<|end|>' → logprob: -1.0694149732589722
    3. ' =' → logprob: -1.6944149732589722
    4. '[' → logprob: -2.6944150924682617
    5. ']' → logprob: -3.1944150924682617
    6. ' be' → logprob: -5.319415092468262
    7. ' represent' → logprob: -6.069415092468262
    8. ' ' → logprob: -6.444415092468262
    9. '[
' → logprob: -6.444415092468262
    10. 'represent' → logprob: -6.444415092468262

Token 220: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03304268792271614
    2. '0' → logprob: -4.533042907714844
    3. 'the' → logprob: -4.533042907714844
    4. ' ' → logprob: -5.033042907714844
    5. ' i' → logprob: -6.283042907714844
    6. ' number' → logprob: -7.033042907714844
    7. '<|end|>' → logprob: -8.158042907714844
    8. ' how' → logprob: -8.408042907714844
    9. ' (' → logprob: -8.783042907714844
    10. ' a' → logprob: -8.783042907714844

Token 221: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.10101213306188583
    2. 'number' → logprob: -2.7260122299194336
    3. ' maximum' → logprob: -3.9760122299194336
    4. 'maximum' → logprob: -5.476012229919434
    5. 'max' → logprob: -6.226012229919434
    6. ' count' → logprob: -6.351012229919434
    7. ' max' → logprob: -6.726012229919434
    8. 'count' → logprob: -7.101012229919434
    9. ' ways' → logprob: -7.726012229919434
    10. ' i' → logprob: -8.226012229919434

Token 222: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2098647803068161
    2. 'of' → logprob: -3.084864854812622
    3. 's' → logprob: -3.209864854812622
    4. '[' → logprob: -3.584864854812622
    5. ' ' → logprob: -3.584864854812622
    6. '_of' → logprob: -3.709864854812622
    7. '_tokens' → logprob: -4.959864616394043
    8. ' s' → logprob: -6.084864616394043
    9. '=' → logprob: -6.084864616394043
    10. ' =' → logprob: -6.709864616394043

Token 223: ' certain' (ID: 4454)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.10466716438531876
    2. 'ways' → logprob: -2.3546671867370605
    3. ' sequences' → logprob: -5.4796671867370605
    4. 'se' → logprob: -9.854666709899902
    5. ' valid' → logprob: -10.229666709899902
    6. ' subsets' → logprob: -10.229666709899902
    7. ' i' → logprob: -10.479666709899902
    8. ' subse' → logprob: -10.729666709899902
    9. 'Ways' → logprob: -10.979666709899902
    10. 'sub' → logprob: -11.479666709899902

Token 224: ' objects' (ID: 11736)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.17826709151268005
    2. '<|end|>' → logprob: -2.428267002105713
    3. 'ways' → logprob: -4.178267002105713
    4. ' possible' → logprob: -4.803267002105713
    5. '_possible' → logprob: -4.928267002105713
    6. ' choices' → logprob: -5.428267002105713
    7. ' ' → logprob: -5.678267002105713
    8. '<|end|>' → logprob: -5.678267002105713
    9. ' sequences' → logprob: -5.803267002105713
    10. 'Ways' → logprob: -5.803267002105713

Token 225: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.22151538729667664
    2. '[' → logprob: -2.096515417098999
    3. '   ' → logprob: -3.596515417098999
    4. '<|end|>' → logprob: -4.47151517868042
    5. ')' → logprob: -4.84651517868042
    6. ' ' → logprob: -5.47151517868042
    7. '    ' → logprob: -5.72151517868042
    8. ' =' → logprob: -5.72151517868042
    9. ',' → logprob: -5.97151517868042
    10. ' i' → logprob: -6.22151517868042

Token 226: 'depending' (ID: 147682)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17072314023971558
    2. ' )' → logprob: -3.0457231998443604
    3. '[i' → logprob: -3.4207231998443604
    4. ']' → logprob: -4.045722961425781
    5. ' i' → logprob: -4.295722961425781
    6. ' ' → logprob: -5.170722961425781
    7. ' ways' → logprob: -5.295722961425781
    8. '   ' → logprob: -5.420722961425781
    9. '[' → logprob: -5.795722961425781
    10. ',' → logprob: -5.920722961425781

Token 227: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.12304766476154327
    2. ')' → logprob: -2.9980475902557373
    3. 'on' → logprob: -3.1230475902557373
    4. '=' → logprob: -4.623047828674316
    5. ']' → logprob: -4.873047828674316
    6. '   ' → logprob: -6.623047828674316
    7. '    ' → logprob: -7.623047828674316
    8. '<|end|>' → logprob: -7.623047828674316
    9. '[' → logprob: -7.998047828674316
    10. ' )' → logprob: -8.248047828674316

Token 228: ' the' (ID: 290)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.45437127351760864
    2. 'i' → logprob: -1.4543712139129639
    3. ' the' → logprob: -2.204371213912964
    4. ')' → logprob: -4.579371452331543
    5. 'the' → logprob: -5.204371452331543
    6. ' )' → logprob: -6.329371452331543
    7. 'j' → logprob: -6.954371452331543
    8. ' j' → logprob: -7.079371452331543
    9. ' your' → logprob: -8.204371452331543
    10. ' previous' → logprob: -8.579371452331543

Token 229: ' problem' (ID: 4792)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.39887726306915283
    2. 'i' → logprob: -1.2738772630691528
    3. ' previous' → logprob: -4.898877143859863
    4. ' current' → logprob: -5.023877143859863
    5. ' ' → logprob: -5.773877143859863
    6. ' steps' → logprob: -5.773877143859863
    7. ' operations' → logprob: -5.898877143859863
    8. ' j' → logprob: -6.023877143859863
    9. 'previous' → logprob: -6.148877143859863
    10. ')' → logprob: -6.273877143859863

Token 230: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04793727397918701
    2. ']' → logprob: -4.047937393188477
    3. '[i' → logprob: -4.047937393188477
    4. ' )' → logprob: -5.422937393188477
    5. '   ' → logprob: -5.922937393188477
    6. '])' → logprob: -6.297937393188477
    7. ')
' → logprob: -7.922937393188477
    8. '][' → logprob: -8.297937393188477
    9. '[' → logprob: -8.297937393188477
    10. ' for' → logprob: -8.422937393188477

Token 231: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9052774310112
    2. '[i' → logprob: -1.0302774906158447
    3. '=' → logprob: -2.5302774906158447
    4. '   ' → logprob: -2.6552774906158447
    5. '[' → logprob: -3.2802774906158447
    6. ' for' → logprob: -3.5302774906158447
    7. ']' → logprob: -4.905277252197266
    8. 'for' → logprob: -5.405277252197266
    9. ')' → logprob: -6.155277252197266
    10. '[j' → logprob: -6.280277252197266

Token 232: ' stage' (ID: 9402)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.010027104057371616
    2. 'i' → logprob: -4.885026931762695
    3. ' the' → logprob: -6.385026931762695
    4. ' j' → logprob: -8.260026931762695
    5. ' ' → logprob: -9.010026931762695
    6. ' range' → logprob: -9.510026931762695
    7. ' step' → logprob: -9.760026931762695
    8. ' steps' → logprob: -9.760026931762695
    9. 'the' → logprob: -10.135026931762695
    10. 'j' → logprob: -11.260026931762695

Token 233: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.40640249848365784
    2. '[i' → logprob: -1.5314024686813354
    3. ' ' → logprob: -2.656402587890625
    4. ' [' → logprob: -4.281402587890625
    5. '_' → logprob: -4.656402587890625
    6. '[' → logprob: -5.031402587890625
    7. '   ' → logprob: -5.531402587890625
    8. 'i' → logprob: -5.906402587890625
    9. ' _' → logprob: -6.406402587890625
    10. ']' → logprob: -6.531402587890625

Token 234: ' and' (ID: 326)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020063648000359535
    2. ']' → logprob: -4.895063877105713
    3. ' ][' → logprob: -4.895063877105713
    4. '   ' → logprob: -5.770063877105713
    5. '[j' → logprob: -7.895063877105713
    6. '[i' → logprob: -8.145063400268555
    7. '+' → logprob: -8.395063400268555
    8. '[' → logprob: -8.770063400268555
    9. '][]' → logprob: -9.020063400268555
    10. 'and' → logprob: -9.270063400268555

Token 235: ' parameter' (ID: 11047)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3132786154747009
    2. 'j' → logprob: -1.3132786750793457
    3. '	j' → logprob: -12.938278198242188
    4. 'state' → logprob: -13.063278198242188
    5. ' state' → logprob: -13.313278198242188
    6. ' ' → logprob: -13.438278198242188
    7. ' index' → logprob: -13.688278198242188
    8. 'index' → logprob: -13.938278198242188
    9. ' step' → logprob: -13.938278198242188
    10. ' range' → logprob: -14.188278198242188

Token 236: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.03172159940004349
    2. 'j' → logprob: -3.656721591949463
    3. ' =' → logprob: -5.906721591949463
    4. '=' → logprob: -6.281721591949463
    5. '=j' → logprob: -7.781721591949463
    6. '[j' → logprob: -8.906722068786621
    7. ' ' → logprob: -9.531722068786621
    8. 's' → logprob: -10.531722068786621
    9. '   ' → logprob: -10.781722068786621
    10. ' s' → logprob: -10.781722068786621

Token 237: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6117647886276245
    2. '   ' → logprob: -0.8617647886276245
    3. ' =' → logprob: -3.736764907836914
    4. '=' → logprob: -5.986764907836914
    5. ']
' → logprob: -6.611764907836914
    6. ')' → logprob: -6.736764907836914
    7. ' for' → logprob: -6.861764907836914
    8. ' ]' → logprob: -6.986764907836914
    9. '[i' → logprob: -7.236764907836914
    10. '[' → logprob: -7.236764907836914

Token 238: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6210882663726807
    2. '   ' → logprob: -1.2460882663726807
    3. ' dp' → logprob: -1.7460882663726807
    4. '	dp' → logprob: -7.746088027954102
    5. ' ' → logprob: -10.496088027954102
    6. '
' → logprob: -10.621088027954102
    7. '    
' → logprob: -10.746088027954102
    8. '_dp' → logprob: -10.996088027954102
    9. '(dp' → logprob: -11.621088027954102
    10. '```' → logprob: -11.996088027954102

Token 239: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.2258228361606598
    2. ' dp' → logprob: -1.7258228063583374
    3. '   ' → logprob: -3.725822925567627
    4. '	dp' → logprob: -10.975822448730469
    5. '_dp' → logprob: -13.475822448730469
    6. ' ' → logprob: -14.350822448730469
    7. '(dp' → logprob: -14.350822448730469
    8. '```' → logprob: -14.850822448730469
    9. 'DP' → logprob: -15.350822448730469
    10. 'd' → logprob: -15.725822448730469

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03868795186281204
    2. '=' → logprob: -3.2886879444122314
    3. '[' → logprob: -8.163687705993652
    4. '=[' → logprob: -8.788687705993652
    5. '=[[' → logprob: -9.163687705993652
    6. ' =[' → logprob: -10.288687705993652
    7. '[i' → logprob: -10.538687705993652
    8. ' ' → logprob: -10.913687705993652
    9. '   ' → logprob: -11.288687705993652
    10. ')' → logprob: -13.038687705993652

Token 241: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.07892162352800369
    2. ' [[' → logprob: -2.5789215564727783
    3. '[' → logprob: -10.8289213180542
    4. ' [' → logprob: -11.3289213180542
    5. ' ' → logprob: -18.453922271728516
    6. '([[' → logprob: -18.578922271728516
    7. '[
' → logprob: -19.953922271728516
    8. '0' → logprob: -20.203922271728516
    9. '   ' → logprob: -20.328922271728516
    10. '[['' → logprob: -20.453922271728516

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.375011444091797
    4. '۰' → logprob: -19.375011444091797
    5. '０' → logprob: -20.562511444091797
    6. '  ' → logprob: -20.562511444091797
    7. '    ' → logprob: -20.687511444091797
    8. '
' → logprob: -20.812511444091797
    9. '00' → logprob: -20.875011444091797
    10. 'False' → logprob: -21.062511444091797

Token 243: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6328955292701721
    2. ' for' → logprob: -0.8828955292701721
    3. 'for' → logprob: -3.0078954696655273
    4. ']*(' → logprob: -5.882895469665527
    5. ']*' → logprob: -6.007895469665527
    6. ')' → logprob: -8.007895469665527
    7. ' ' → logprob: -9.257895469665527
    8. '	for' → logprob: -9.257895469665527
    9. '   ' → logprob: -9.507895469665527
    10. ' ]' → logprob: -9.757895469665527

Token 244: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47459807991981506
    2. 'for' → logprob: -0.9745980501174927
    3. '   ' → logprob: -7.724597930908203
    4. ']' → logprob: -10.599597930908203
    5. '	for' → logprob: -10.599597930908203
    6. ']*(' → logprob: -11.349597930908203
    7. '       ' → logprob: -12.599597930908203
    8. ' ' → logprob: -12.724597930908203
    9. '           ' → logprob: -13.099597930908203
    10. '    ' → logprob: -13.224597930908203

Token 245: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000526938121765852
    2. '((' → logprob: -7.7505269050598145
    3. ' (' → logprob: -9.375527381896973
    4. '   ' → logprob: -11.500527381896973
    5. '2' → logprob: -14.500527381896973
    6. '       ' → logprob: -15.250527381896973
    7. '     ' → logprob: -15.750527381896973
    8. ' ' → logprob: -16.250526428222656
    9. '  ' → logprob: -16.250526428222656
    10. '    ' → logprob: -16.750526428222656

Token 246: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10023535788059235
    2. '(' → logprob: -2.3502354621887207
    3. ' ' → logprob: -10.975234985351562
    4. ' (' → logprob: -11.975234985351562
    5. '   ' → logprob: -13.100234985351562
    6. '((' → logprob: -13.225234985351562
    7. '(n' → logprob: -14.725234985351562
    8. '[' → logprob: -15.600234985351562
    9. '```' → logprob: -15.850234985351562
    10. '(
' → logprob: -16.225234985351562

Token 247: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.018524713814258575
    2. '*' → logprob: -4.018524646759033
    3. ' *' → logprob: -7.893524646759033
    4. 'n' → logprob: -13.768525123596191
    5. '*
' → logprob: -15.768525123596191
    6. '
' → logprob: -16.393524169921875
    7. '*N' → logprob: -17.143524169921875
    8. '   ' → logprob: -17.393524169921875
    9. ' ' → logprob: -18.018524169921875
    10. '**' → logprob: -18.018524169921875

Token 248: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006720347795635462
    2. ' +' → logprob: -5.006720542907715
    3. '1' → logprob: -12.881720542907715
    4. ')+' → logprob: -14.006720542907715
    5. '+
' → logprob: -14.131720542907715
    6. ')' → logprob: -15.256720542907715
    7. '   ' → logprob: -15.506720542907715
    8. '＋' → logprob: -15.631720542907715
    9. ' ' → logprob: -16.7567195892334
    10. '+)' → logprob: -16.8817195892334

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7372048862162046e-05
    2. ' ' → logprob: -10.625027656555176
    3. '2' → logprob: -13.125027656555176
    4. '   ' → logprob: -15.062527656555176
    5. '
' → logprob: -15.812527656555176
    6. '

' → logprob: -16.68752670288086
    7. '```' → logprob: -16.93752670288086
    8. '+' → logprob: -17.00002670288086
    9. '  ' → logprob: -17.12502670288086
    10. '11' → logprob: -17.18752670288086

Token 250: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.685467764735222e-05
    2. ' )' → logprob: -9.625086784362793
    3. ')]' → logprob: -11.375086784362793
    4. ']' → logprob: -12.500086784362793
    5. 'for' → logprob: -13.125086784362793
    6. ')
' → logprob: -13.625086784362793
    7. ' for' → logprob: -14.125086784362793
    8. '   ' → logprob: -14.625086784362793
    9. '```' → logprob: -15.125086784362793
    10. '))' → logprob: -15.750086784362793

Token 251: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2015550434589386
    2. 'for' → logprob: -1.7015550136566162
    3. ']' → logprob: -9.201555252075195
    4. ')' → logprob: -11.076555252075195
    5. '   ' → logprob: -11.201555252075195
    6. '	for' → logprob: -12.076555252075195
    7. ' ' → logprob: -12.451555252075195
    8. '    ' → logprob: -14.451555252075195
    9. ' ]' → logprob: -15.201555252075195
    10. ')]' → logprob: -15.451555252075195

Token 252: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.22816933691501617
    2. ' i' → logprob: -2.2281694412231445
    3. '_' → logprob: -2.3531694412231445
    4. ' ' → logprob: -7.2281694412231445
    5. 'i' → logprob: -8.478169441223145
    6. ' range' → logprob: -8.478169441223145
    7. ' in' → logprob: -9.728169441223145
    8. '_i' → logprob: -11.728169441223145
    9. ' j' → logprob: -12.353169441223145
    10. '_range' → logprob: -13.728169441223145

Token 253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015238440595567226
    2. 'in' → logprob: -4.265238285064697
    3. 'range' → logprob: -7.015238285064697
    4. ' range' → logprob: -8.765238761901855
    5. ' ' → logprob: -11.265238761901855
    6. 'i' → logprob: -12.390238761901855
    7. ' i' → logprob: -13.515238761901855
    8. '  ' → logprob: -14.890238761901855
    9. '(range' → logprob: -14.890238761901855
    10. '(' → logprob: -15.765238761901855

Token 254: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010392407421022654
    2. ' range' → logprob: -6.876039028167725
    3. '   ' → logprob: -12.751039505004883
    4. ' ' → logprob: -13.251039505004883
    5. '(range' → logprob: -14.376039505004883
    6. '	range' → logprob: -15.126039505004883
    7. '  ' → logprob: -15.251039505004883
    8. '    ' → logprob: -16.001039505004883
    9. 'rang' → logprob: -16.126039505004883
    10. ')' → logprob: -16.251039505004883

Token 255: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.13133801519870758
    2. 'K' → logprob: -2.131338119506836
    3. ' K' → logprob: -6.381338119506836
    4. ' (' → logprob: -6.506338119506836
    5. 'range' → logprob: -7.881338119506836
    6. '(' → logprob: -8.131338119506836
    7. '   ' → logprob: -8.631338119506836
    8. ')' → logprob: -9.131338119506836
    9. '
' → logprob: -9.381338119506836
    10. ' range' → logprob: -9.756338119506836

Token 256: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014585316239390522
    2. ' +' → logprob: -9.00014591217041
    3. '+
' → logprob: -10.75014591217041
    4. ')]' → logprob: -14.75014591217041
    5. '1' → logprob: -15.25014591217041
    6. ')])' → logprob: -16.625144958496094
    7. '＋' → logprob: -16.750144958496094
    8. '   ' → logprob: -16.875144958496094
    9. ')' → logprob: -17.000144958496094
    10. ')+' → logprob: -17.125144958496094

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011272187111899257
    2. ' ' → logprob: -9.125112533569336
    3. '   ' → logprob: -12.750112533569336
    4. ')' → logprob: -15.375112533569336
    5. '2' → logprob: -15.750112533569336
    6. '
' → logprob: -15.875112533569336
    7. '(' → logprob: -16.500112533569336
    8. '  ' → logprob: -16.500112533569336
    9. '```' → logprob: -16.500112533569336
    10. '    ' → logprob: -17.375112533569336

Token 258: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0016024599317461252
    2. ')' → logprob: -6.751602649688721
    3. ']' → logprob: -7.751602649688721
    4. '])' → logprob: -14.376602172851562
    5. ')],' → logprob: -14.626602172851562
    6. ' )' → logprob: -14.876602172851562
    7. ')])' → logprob: -15.751602172851562
    8. ' ]' → logprob: -15.751602172851562
    9. ')]
' → logprob: -16.501602172851562
    10. '])]' → logprob: -17.001602172851562

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005369171965867281
    2. '<|end|>' → logprob: -5.505369186401367
    3. ')' → logprob: -7.755369186401367
    4. '    
' → logprob: -8.005369186401367
    5. '
' → logprob: -8.505369186401367
    6. '[' → logprob: -9.005369186401367
    7. '<|end|>' → logprob: -10.755369186401367
    8. '    ' → logprob: -10.755369186401367
    9. 'dp' → logprob: -10.880369186401367
    10. '\' → logprob: -11.005369186401367

Token 260: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7012239098548889
    2. 'dp' → logprob: -0.8262239098548889
    3. '<|end|>' → logprob: -4.201223850250244
    4. ' ' → logprob: -4.451223850250244
    5. ')' → logprob: -4.951223850250244
    6. '[' → logprob: -5.201223850250244
    7. ' dp' → logprob: -5.326223850250244
    8. '
' → logprob: -5.451223850250244
    9. 'for' → logprob: -5.826223850250244
    10. ' for' → logprob: -5.951223850250244

Token 261: ' Set' (ID: 3957)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.3438327843905427e-05
    2. ' dp' → logprob: -10.75002384185791
    3. '   ' → logprob: -14.00002384185791
    4. 'for' → logprob: -14.62502384185791
    5. '#' → logprob: -14.75002384185791
    6. 'def' → logprob: -16.375022888183594
    7. '	dp' → logprob: -17.375022888183594
    8. '
' → logprob: -17.500022888183594
    9. ' for' → logprob: -17.750022888183594
    10. '```' → logprob: -17.875022888183594

Token 262: ' the' (ID: 290)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.0431099496781826
    2. 'dp' → logprob: -3.168109893798828
    3. '(dp' → logprob: -9.668109893798828
    4. '   ' → logprob: -10.543109893798828
    5. '	dp' → logprob: -11.043109893798828
    6. ' ' → logprob: -13.293109893798828
    7. '_dp' → logprob: -13.793109893798828
    8. ' the' → logprob: -14.168109893798828
    9. '.dp' → logprob: -14.543109893798828
    10. ' ' → logprob: -14.918109893798828

Token 263: ' base' (ID: 3611)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03816404938697815
    2. ' dp' → logprob: -3.2881641387939453
    3. '0' → logprob: -9.663164138793945
    4. ' ' → logprob: -10.163164138793945
    5. '[' → logprob: -12.663164138793945
    6. '	dp' → logprob: -12.663164138793945
    7. 'd' → logprob: -13.288164138793945
    8. 'for' → logprob: -13.538164138793945
    9. 'base' → logprob: -13.538164138793945
    10. '
' → logprob: -13.788164138793945

Token 264: ' case' (ID: 1890)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.2829660475254059
    2. 'dp' → logprob: -1.6579660177230835
    3. ' case' → logprob: -3.407966136932373
    4. 'case' → logprob: -4.032966136932373
    5. '   ' → logprob: -6.157966136932373
    6. '[' → logprob: -6.657966136932373
    7. '_dp' → logprob: -7.532966136932373
    8. ' ' → logprob: -7.907966136932373
    9. '	dp' → logprob: -8.032965660095215
    10. '_case' → logprob: -8.657965660095215

Token 265: ' of' (ID: 328)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09693540632724762
    2. '   ' → logprob: -2.596935510635376
    3. ' dp' → logprob: -4.096935272216797
    4. '(dp' → logprob: -6.971935272216797
    5. '[' → logprob: -9.096935272216797
    6. '	dp' → logprob: -9.596935272216797
    7. '
' → logprob: -10.221935272216797
    8. '    
' → logprob: -10.346935272216797
    9. '_dp' → logprob: -10.596935272216797
    10. '.dp' → logprob: -10.721935272216797

Token 266: ' the' (ID: 290)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.03365756943821907
    2. 'dp' → logprob: -3.4086575508117676
    3. '	dp' → logprob: -12.283658027648926
    4. '(dp' → logprob: -13.033658027648926
    5. ' the' → logprob: -13.158658027648926
    6. '_dp' → logprob: -13.283658027648926
    7. ' ' → logprob: -14.908658027648926
    8. 'the' → logprob: -15.158658027648926
    9. 'd' → logprob: -15.658658027648926
    10. '[' → logprob: -16.28365707397461

Token 267: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1016257032752037
    2. ' dp' → logprob: -2.351625680923462
    3. '0' → logprob: -7.226625919342041
    4. ' first' → logprob: -8.351625442504883
    5. 'd' → logprob: -8.726625442504883
    6. 'first' → logprob: -9.601625442504883
    7. ' ' → logprob: -10.351625442504883
    8. 'DP' → logprob: -10.476625442504883
    9. ' for' → logprob: -10.851625442504883
    10. 'for' → logprob: -11.101625442504883

Token 268: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09657807648181915
    2. ' dp' → logprob: -2.9715781211853027
    3. '[' → logprob: -3.8465781211853027
    4. '   ' → logprob: -3.9715781211853027
    5. '(dp' → logprob: -8.596577644348145
    6. '	dp' → logprob: -8.596577644348145
    7. '
' → logprob: -9.221577644348145
    8. '_dp' → logprob: -9.846577644348145
    9. '.dp' → logprob: -10.221577644348145
    10. ':' → logprob: -10.721577644348145

Token 269: ' stage' (ID: 9402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2520439922809601
    2. ' dp' → logprob: -1.5020439624786377
    3. '   ' → logprob: -9.252043724060059
    4. '	dp' → logprob: -12.502043724060059
    5. '(dp' → logprob: -12.752043724060059
    6. '
' → logprob: -13.002043724060059
    7. ')' → logprob: -13.002043724060059
    8. ']' → logprob: -13.252043724060059
    9. '0' → logprob: -13.627043724060059
    10. ' for' → logprob: -13.877043724060059

Token 270: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5613018274307251
    2. '0' → logprob: -0.9363018274307251
    3. '[' → logprob: -3.4363017082214355
    4. 'dp' → logprob: -5.8113017082214355
    5. ' dp' → logprob: -6.8113017082214355
    6. ' [' → logprob: -7.0613017082214355
    7. '1' → logprob: -9.311302185058594
    8. 's' → logprob: -9.686302185058594
    9. '
' → logprob: -9.811302185058594
    10. '   ' → logprob: -10.061302185058594

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002916499972343445
    2. '[' → logprob: -5.87791633605957
    3. ' ' → logprob: -9.62791633605957
    4. 'dp' → logprob: -10.25291633605957
    5. ' [' → logprob: -12.25291633605957
    6. '1' → logprob: -12.87791633605957
    7. '
' → logprob: -14.37791633605957
    8. '   ' → logprob: -14.37791633605957
    9. '```' → logprob: -14.75291633605957
    10. '][' → logprob: -14.87791633605957

Token 272: ' and' (ID: 326)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2699252963066101
    2. 'dp' → logprob: -2.019925355911255
    3. '[' → logprob: -2.644925355911255
    4. '   ' → logprob: -4.019925117492676
    5. ' dp' → logprob: -4.519925117492676
    6. ',' → logprob: -6.394925117492676
    7. ']' → logprob: -6.769925117492676
    8. ' ][' → logprob: -7.644925117492676
    9. '
' → logprob: -9.144925117492676
    10. ' [' → logprob: -9.644925117492676

Token 273: ' index' (ID: 3472)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15980611741542816
    2. ' ' → logprob: -2.1598060131073
    3. ' n' → logprob: -4.159806251525879
    4. 'n' → logprob: -5.034806251525879
    5. 'dp' → logprob: -5.659806251525879
    6. ' dp' → logprob: -5.909806251525879
    7. '[' → logprob: -6.409806251525879
    8. ' [' → logprob: -7.284806251525879
    9. ' j' → logprob: -7.284806251525879
    10. 'j' → logprob: -7.409806251525879

Token 274: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6084458827972412
    2. '[' → logprob: -1.8584458827972412
    3. ' ' → logprob: -2.483445882797241
    4. ' n' → logprob: -2.608445882797241
    5. ' [' → logprob: -2.858445882797241
    6. '[n' → logprob: -3.233445882797241
    7. 'n' → logprob: -3.608445882797241
    8. '][' → logprob: -4.48344612121582
    9. '   ' → logprob: -5.48344612121582
    10. 'dp' → logprob: -6.73344612121582

Token 275: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6952816843986511
    2. '0' → logprob: -1.070281744003296
    3. '[n' → logprob: -2.070281744003296
    4. ' n' → logprob: -4.070281505584717
    5. '[' → logprob: -4.695281505584717
    6. ' [' → logprob: -5.820281505584717
    7. ' ' → logprob: -6.070281505584717
    8. '1' → logprob: -8.945281982421875
    9. '   ' → logprob: -9.070281982421875
    10. '][' → logprob: -9.070281982421875

Token 276: ' is' (ID: 382)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2764502465724945
    2. '[' → logprob: -2.1514501571655273
    3. '   ' → logprob: -2.2764501571655273
    4. 'dp' → logprob: -4.151450157165527
    5. ']' → logprob: -5.401450157165527
    6. ' ][' → logprob: -7.151450157165527
    7. ' dp' → logprob: -7.526450157165527
    8. '
' → logprob: -7.651450157165527
    9. ' [' → logprob: -8.776450157165527
    10. '    
' → logprob: -9.901450157165527

Token 277: ' initialized' (ID: 40319)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.933301568031311
    2. ' =' → logprob: -1.183301568031311
    3. '1' → logprob: -1.558301568031311
    4. ' ' → logprob: -2.4333014488220215
    5. '    ' → logprob: -6.5583014488220215
    6. '   ' → logprob: -8.30830192565918
    7. 'dp' → logprob: -8.55830192565918
    8. '0' → logprob: -8.80830192565918
    9. ' equal' → logprob: -9.68330192565918
    10. '  ' → logprob: -10.05830192565918

Token 278: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.52543705701828
    2. ' =' → logprob: -0.90043705701828
    3. '   ' → logprob: -7.150436878204346
    4. '[' → logprob: -7.400436878204346
    5. '1' → logprob: -8.275437355041504
    6. ' to' → logprob: -8.650437355041504
    7. ' ' → logprob: -8.775437355041504
    8. '    ' → logprob: -8.775437355041504
    9. ' =
' → logprob: -9.525437355041504
    10. ',' → logprob: -10.275437355041504

Token 279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804665803909302
    2. ' ' → logprob: -3.2880465984344482
    3. '0' → logprob: -13.038046836853027
    4. '   ' → logprob: -14.725546836853027
    5. '...' → logprob: -15.038046836853027
    6. ' ' → logprob: -15.100546836853027
    7. '
' → logprob: -15.163046836853027
    8. 'dp' → logprob: -15.163046836853027
    9. '(' → logprob: -15.413046836853027
    10. ' (' → logprob: -15.663046836853027

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8550976164988242e-05
    2. ' ' → logprob: -11.000018119812012
    3. '0' → logprob: -13.500018119812012
    4. '   ' → logprob: -14.875018119812012
    5. '
' → logprob: -16.750019073486328
    6. '(' → logprob: -17.625019073486328
    7. '2' → logprob: -18.500019073486328
    8. '```' → logprob: -18.625019073486328
    9. 'dp' → logprob: -19.250019073486328
    10. '    ' → logprob: -19.375019073486328

Token 281: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08794793486595154
    2. 'dp' → logprob: -2.8379478454589844
    3. '[' → logprob: -4.712947845458984
    4. '
' → logprob: -5.087947845458984
    5. ' dp' → logprob: -5.212947845458984
    6. '(dp' → logprob: -6.337947845458984
    7. ']' → logprob: -6.587947845458984
    8. '	dp' → logprob: -7.587947845458984
    9. '    
' → logprob: -8.087947845458984
    10. ']
' → logprob: -8.337947845458984

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13055768609046936
    2. 'dp' → logprob: -2.1305577754974365
    3. ' dp' → logprob: -6.130557537078857
    4. '
' → logprob: -7.130557537078857
    5. '(dp' → logprob: -8.380558013916016
    6. '    
' → logprob: -8.630558013916016
    7. '	dp' → logprob: -8.880558013916016
    8. '[' → logprob: -10.505558013916016
    9. ']' → logprob: -10.630558013916016
    10. '  
' → logprob: -11.630558013916016

Token 283: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11047887057065964
    2. '   ' → logprob: -2.3604788780212402
    3. ' dp' → logprob: -4.61047887802124
    4. '	dp' → logprob: -8.735478401184082
    5. '
' → logprob: -9.360478401184082
    6. '(dp' → logprob: -10.985478401184082
    7. '    
' → logprob: -12.610478401184082
    8. '_dp' → logprob: -13.235478401184082
    9. '.dp' → logprob: -13.985478401184082
    10. ' ' → logprob: -14.110478401184082

Token 284: ' In' (ID: 730)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.181867778301239
    2. ' dp' → logprob: -2.181867837905884
    3. '   ' → logprob: -2.931867837905884
    4. '	dp' → logprob: -8.806867599487305
    5. '
' → logprob: -12.806867599487305
    6. '(dp' → logprob: -13.306867599487305
    7. '_dp' → logprob: -13.431867599487305
    8. ' ' → logprob: -13.556867599487305
    9. '    
' → logprob: -14.306867599487305
    10. ' 
' → logprob: -14.431867599487305

Token 285: ' most' (ID: 1645)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.730002760887146
    2. ' dp' → logprob: -0.730002760887146
    3. '[' → logprob: -3.4800028800964355
    4. ' [' → logprob: -6.3550028800964355
    5. ' the' → logprob: -7.3550028800964355
    6. ' code' → logprob: -7.8550028800964355
    7. ' range' → logprob: -8.105002403259277
    8. 'd' → logprob: -8.105002403259277
    9. ' this' → logprob: -8.480002403259277
    10. ' ' → logprob: -8.605002403259277

Token 286: ' DP' (ID: 51992)
  Prédit: ' programming'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' programming' → logprob: -1.605989694595337
    2. '   ' → logprob: -1.855989694595337
    3. 'dp' → logprob: -1.855989694595337
    4. 'python' → logprob: -2.355989694595337
    5. 'Python' → logprob: -2.980989694595337
    6. ' problems' → logprob: -2.980989694595337
    7. 'cases' → logprob: -3.105989694595337
    8. ' cases' → logprob: -3.230989694595337
    9. '_dp' → logprob: -3.230989694595337
    10. '[' → logprob: -3.605989694595337

Token 287: ' problems' (ID: 6840)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30245983600616455
    2. '[i' → logprob: -1.5524598360061646
    3. 'dp' → logprob: -3.552459716796875
    4. '   ' → logprob: -4.927459716796875
    5. ' dp' → logprob: -5.927459716796875
    6. ')' → logprob: -6.177459716796875
    7. 'def' → logprob: -6.302459716796875
    8. '[
' → logprob: -6.927459716796875
    9. ',' → logprob: -6.927459716796875
    10. ']' → logprob: -7.177459716796875

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22480128705501556
    2. '   ' → logprob: -2.2248013019561768
    3. '[' → logprob: -2.9748013019561768
    4. 'dp' → logprob: -3.8498013019561768
    5. ':' → logprob: -4.474801063537598
    6. '
' → logprob: -6.349801063537598
    7. ' dp' → logprob: -6.349801063537598
    8. ')' → logprob: -6.724801063537598
    9. ',
' → logprob: -6.849801063537598
    10. '.' → logprob: -7.349801063537598

Token 289: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2522493600845337
    2. ' dp' → logprob: -1.5022493600845337
    3. '   ' → logprob: -8.752249717712402
    4. '	dp' → logprob: -9.502249717712402
    5. '    ' → logprob: -10.002249717712402
    6. ' ' → logprob: -10.877249717712402
    7. ' ' → logprob: -11.627249717712402
    8. ' this' → logprob: -13.002249717712402
    9. '_dp' → logprob: -13.002249717712402
    10. '  ' → logprob: -13.127249717712402

Token 290: ' base' (ID: 3611)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07623724639415741
    2. ' dp' → logprob: -2.701237201690674
    3. 'base' → logprob: -5.951237201690674
    4. ' base' → logprob: -6.326237201690674
    5. 'starting' → logprob: -7.701237201690674
    6. ' starting' → logprob: -8.326237678527832
    7. 'initial' → logprob: -8.826237678527832
    8. ' initial' → logprob: -9.076237678527832
    9. 'first' → logprob: -9.201237678527832
    10. '0' → logprob: -9.201237678527832

Token 291: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.657635509967804
    2. 'case' → logprob: -1.0326354503631592
    3. '   ' → logprob: -2.407635450363159
    4. '[' → logprob: -3.782635450363159
    5. 'dp' → logprob: -5.657635688781738
    6. '_case' → logprob: -6.282635688781738
    7. '
' → logprob: -6.532635688781738
    8. ' ' → logprob: -6.532635688781738
    9. ' dp' → logprob: -6.657635688781738
    10. ' [' → logprob: -7.157635688781738

Token 292: ' represents' (ID: 18627)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.48474380373954773
    2. ' dp' → logprob: -1.1097438335418701
    3. ' is' → logprob: -3.35974383354187
    4. ' represents' → logprob: -4.359743595123291
    5. '[' → logprob: -6.109743595123291
    6. '   ' → logprob: -6.859743595123291
    7. ',' → logprob: -6.984743595123291
    8. ']' → logprob: -7.484743595123291
    9. '_dp' → logprob: -8.23474407196045
    10. '(dp' → logprob: -8.35974407196045

Token 293: ' one' (ID: 1001)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4499753713607788
    2. 'dp' → logprob: -1.3249753713607788
    3. ' dp' → logprob: -3.3249754905700684
    4. 'the' → logprob: -3.3249754905700684
    5. ' a' → logprob: -4.074975490570068
    6. ' ' → logprob: -6.199975490570068
    7. '1' → logprob: -6.324975490570068
    8. 'a' → logprob: -6.824975490570068
    9. ' an' → logprob: -7.324975490570068
    10. ' initial' → logprob: -7.574975490570068

Token 294: ' way' (ID: 2006)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -1.070932149887085
    2. ' possible' → logprob: -1.195932149887085
    3. 'possible' → logprob: -1.445932149887085
    4. 'valid' → logprob: -2.945932149887085
    5. ' ' → logprob: -4.195932388305664
    6. '
' → logprob: -4.320932388305664
    7. '<|end|>' → logprob: -5.320932388305664
    8. '  
' → logprob: -5.445932388305664
    9. 'state' → logprob: -5.695932388305664
    10. 'way' → logprob: -6.070932388305664

Token 295: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3473050594329834
    2. 'dp' → logprob: -1.9723050594329834
    3. '   ' → logprob: -2.2223050594329834
    4. ' of' → logprob: -3.9723050594329834
    5. 'to' → logprob: -4.7223052978515625
    6. ' dp' → logprob: -4.7223052978515625
    7. ',' → logprob: -5.9723052978515625
    8. '    ' → logprob: -6.4723052978515625
    9. '[' → logprob: -6.8473052978515625
    10. ' ' → logprob: -7.2223052978515625

Token 296: ' assemble' (ID: 57051)
  Prédit: 'ach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ach' → logprob: -1.7352135181427002
    2. 'start' → logprob: -1.9852135181427002
    3. 'do' → logprob: -2.1102135181427
    4. 'initialize' → logprob: -2.1102135181427
    5. ' achieve' → logprob: -2.3602135181427
    6. 'arr' → logprob: -2.6102135181427
    7. ' do' → logprob: -2.8602135181427
    8. ' start' → logprob: -3.7352135181427
    9. 'reach' → logprob: -3.7352135181427
    10. 'form' → logprob: -3.8602135181427

Token 297: ' or' (ID: 503)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.3041995763778687
    2. ' something' → logprob: -1.8041995763778687
    3. 'something' → logprob: -1.9291995763778687
    4. ' an' → logprob: -2.054199695587158
    5. 'the' → logprob: -2.054199695587158
    6. 'dp' → logprob: -2.429199695587158
    7. ' dp' → logprob: -3.554199695587158
    8. 'an' → logprob: -3.679199695587158
    9. ' a' → logprob: -5.054199695587158
    10. 'a' → logprob: -5.929199695587158

Token 298: ' choose' (ID: 5655)
  Prédit: 'ach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.7481132745742798
    2. 'initialize' → logprob: -1.9981132745742798
    3. 'count' → logprob: -2.2481131553649902
    4. 'start' → logprob: -2.3731131553649902
    5. 'reach' → logprob: -2.8731131553649902
    6. ' achieve' → logprob: -2.9981131553649902
    7. 'arr' → logprob: -3.4981131553649902
    8. ' reach' → logprob: -4.49811315536499
    9. 'form' → logprob: -5.24811315536499
    10. 'construct' → logprob: -5.62311315536499

Token 299: ' from' (ID: 591)
  Prédit: ' something'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' something' → logprob: -1.3948274850845337
    2. ' dp' → logprob: -1.3948274850845337
    3. ' the' → logprob: -1.6448274850845337
    4. ' an' → logprob: -2.269827365875244
    5. 'dp' → logprob: -2.519827365875244
    6. 'something' → logprob: -2.894827365875244
    7. 'the' → logprob: -3.644827365875244
    8. ' elements' → logprob: -4.394827365875244
    9. 'an' → logprob: -5.019827365875244
    10. ' that' → logprob: -5.144827365875244

Token 300: ' nothing' (ID: 6939)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0779606103897095
    2. ' the' → logprob: -1.3279606103897095
    3. 'dp' → logprob: -1.8279606103897095
    4. ' dp' → logprob: -3.07796049118042
    5. 'elements' → logprob: -3.20296049118042
    6. ' elements' → logprob: -3.57796049118042
    7. '1' → logprob: -3.57796049118042
    8. 'something' → logprob: -4.07796049118042
    9. 'objects' → logprob: -4.82796049118042
    10. ' one' → logprob: -4.82796049118042

Token 301: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9069269299507141
    2. '.' → logprob: -1.4069268703460693
    3. 'dp' → logprob: -1.5319268703460693
    4. ',' → logprob: -2.6569268703460693
    5. ']' → logprob: -3.7819268703460693
    6. '(dp' → logprob: -3.9069268703460693
    7. ')' → logprob: -4.656927108764648
    8. ' dp' → logprob: -5.406927108764648
    9. '
' → logprob: -6.156927108764648
    10. ',
' → logprob: -7.281927108764648

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39495396614074707
    2. 'dp' → logprob: -1.144953966140747
    3. ' dp' → logprob: -5.019953727722168
    4. '(dp' → logprob: -7.269953727722168
    5. '	dp' → logprob: -8.019953727722168
    6. '    
' → logprob: -8.519953727722168
    7. ']' → logprob: -10.144953727722168
    8. ' ' → logprob: -10.269953727722168
    9. '[' → logprob: -10.269953727722168
    10. '  
' → logprob: -10.644953727722168

Token 303: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.04892422631382942
    2. '   ' → logprob: -3.298924207687378
    3. ' dp' → logprob: -4.548924446105957
    4. '	dp' → logprob: -8.423924446105957
    5. '
' → logprob: -11.048924446105957
    6. '(dp' → logprob: -12.548924446105957
    7. ' ' → logprob: -13.298924446105957
    8. '    
' → logprob: -13.548924446105957
    9. '_dp' → logprob: -13.548924446105957
    10. '  ' → logprob: -14.798924446105957

Token 304: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.723973582556937e-05
    2. ' [' → logprob: -11.375017166137695
    3. '][' → logprob: -12.375017166137695
    4. '\[' → logprob: -15.000017166137695
    5. '```' → logprob: -15.250017166137695
    6. '0' → logprob: -15.250017166137695
    7. ' ' → logprob: -15.875017166137695
    8. '   ' → logprob: -16.125017166137695
    9. '[
' → logprob: -16.375017166137695
    10. '[][' → logprob: -16.375017166137695

Token 305: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '][' → logprob: -16.500003814697266
    4. '[' → logprob: -16.625003814697266
    5. ']' → logprob: -18.375003814697266
    6. '۰' → logprob: -19.500003814697266
    7. ')' → logprob: -19.750003814697266
    8. '```' → logprob: -20.000003814697266
    9. '
' → logprob: -20.125003814697266
    10. '   ' → logprob: -20.187503814697266

Token 306: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007753237732686102
    2. ']' → logprob: -7.375775337219238
    3. ' ][' → logprob: -9.000775337219238
    4. '[' → logprob: -10.625775337219238
    5. ' ]' → logprob: -15.125775337219238
    6. ']
' → logprob: -15.500775337219238
    7. '"][' → logprob: -15.750775337219238
    8. ' ' → logprob: -16.000774383544922
    9. '   ' → logprob: -16.375774383544922
    10. ''][' → logprob: -16.875774383544922

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '0' → logprob: -16.2500057220459
    4. '   ' → logprob: -17.2500057220459
    5. '  ' → logprob: -19.2500057220459
    6. '```' → logprob: -19.5625057220459
    7. ']' → logprob: -19.8125057220459
    8. '۱' → logprob: -20.0000057220459
    9. '    ' → logprob: -20.0625057220459
    10. '１' → logprob: -20.1250057220459

Token 308: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.1424973713001236e-05
    2. ']=' → logprob: -10.500031471252441
    3. ' ]' → logprob: -12.500031471252441
    4. '=' → logprob: -16.250030517578125
    5. ']+=' → logprob: -16.875030517578125
    6. ')' → logprob: -18.250030517578125
    7. ']
' → logprob: -18.875030517578125
    8. '`]' → logprob: -19.625030517578125
    9. '1' → logprob: -19.750030517578125
    10. '']' → logprob: -19.875030517578125

Token 309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '＝' → logprob: -18.643150329589844
    4. ']=' → logprob: -19.643150329589844
    5. ']' → logprob: -19.768150329589844
    6. '=
' → logprob: -19.893150329589844
    7. '1' → logprob: -19.893150329589844
    8. '=

' → logprob: -20.018150329589844
    9. '+=' → logprob: -20.143150329589844
    10. '[' → logprob: -20.268150329589844

Token 310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -18.875
    5. '۱' → logprob: -19.9375
    6. '0' → logprob: -20.0625
    7. '  ' → logprob: -20.4375
    8. '' → logprob: -20.5625
    9. '`' → logprob: -21.0
    10. '１' → logprob: -21.0625

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -19.5
    4. '0' → logprob: -19.75
    5. '１' → logprob: -20.1875
    6. '۱' → logprob: -20.8125
    7. '
' → logprob: -21.0
    8. '

' → logprob: -21.125
    9. '```' → logprob: -21.1875
    10. '' → logprob: -21.5

Token 312: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5185154676437378
    2. 'for' → logprob: -1.2685154676437378
    3. ' for' → logprob: -2.2685155868530273
    4. '
' → logprob: -5.268515586853027
    5. '<|end|>' → logprob: -5.393515586853027
    6. ' ' → logprob: -6.018515586853027
    7. '    
' → logprob: -6.268515586853027
    8. '\n' → logprob: -6.393515586853027
    9. '	for' → logprob: -6.518515586853027
    10. '    ' → logprob: -7.393515586853027

Token 315: ' Initialize' (ID: 19496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038078442215919495
    2. ' for' → logprob: -3.288078546524048
    3. '   ' → logprob: -10.288078308105469
    4. '	for' → logprob: -13.788078308105469
    5. 'f' → logprob: -14.413078308105469
    6. ' ' → logprob: -14.788078308105469
    7. 'from' → logprob: -15.663078308105469
    8. 'i' → logprob: -15.788078308105469
    9. 'fo' → logprob: -16.16307830810547
    10. '
' → logprob: -16.28807830810547

Token 316: ' a' (ID: 261)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.1726161241531372
    2. 'answer' → logprob: -1.6726161241531372
    3. ' answer' → logprob: -2.5476160049438477
    4. ' result' → logprob: -2.9226160049438477
    5. 'result' → logprob: -3.0476160049438477
    6. ' i' → logprob: -3.0476160049438477
    7. 'i' → logprob: -3.1726160049438477
    8. 'res' → logprob: -3.1726160049438477
    9. 'ans' → logprob: -3.4226160049438477
    10. ' res' → logprob: -3.6726160049438477

Token 317: ' list' (ID: 1562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08060043305158615
    2. ' for' → logprob: -2.5806005001068115
    3. ' ' → logprob: -7.705600261688232
    4. 'space' → logprob: -8.70560073852539
    5. '
' → logprob: -8.83060073852539
    6. 'variable' → logprob: -8.95560073852539
    7. 'counter' → logprob: -9.20560073852539
    8. '   ' → logprob: -9.45560073852539
    9. 'or' → logprob: -9.58060073852539
    10. ' 
' → logprob: -9.70560073852539

Token 318: ' '' (ID: 461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03916482254862785
    2. 'dp' → logprob: -4.414165019989014
    3. '=' → logprob: -4.914165019989014
    4. ' of' → logprob: -6.164165019989014
    5. 's' → logprob: -6.289165019989014
    6. '   ' → logprob: -6.289165019989014
    7. '[' → logprob: -6.414165019989014
    8. 'of' → logprob: -6.539165019989014
    9. 'prev' → logprob: -7.039165019989014
    10. ' for' → logprob: -7.039165019989014

Token 319: 'num' (ID: 4571)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.0270965099334717
    2. 'pow' → logprob: -1.6520965099334717
    3. 'dp' → logprob: -2.2770965099334717
    4. 'cnt' → logprob: -3.1520965099334717
    5. 'prefix' → logprob: -3.4020965099334717
    6. 'ans' → logprob: -3.7770965099334717
    7. 'count' → logprob: -3.7770965099334717
    8. 'arr' → logprob: -4.027096748352051
    9. 'prev' → logprob: -4.152096748352051
    10. 'cum' → logprob: -4.152096748352051

Token 320: ''' (ID: 6)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006153696682304144
    2. ']' → logprob: -5.131153583526611
    3. '_s' → logprob: -9.25615406036377
    4. ' =' → logprob: -9.38115406036377
    5. '_counts' → logprob: -11.13115406036377
    6. ' s' → logprob: -11.38115406036377
    7. '=' → logprob: -11.75615406036377
    8. '_list' → logprob: -12.75615406036377
    9. ']=' → logprob: -13.00615406036377
    10. '_nums' → logprob: -14.25615406036377

Token 321: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688018918037415
    2. '=' → logprob: -1.1368801593780518
    3. '[' → logprob: -12.886879920959473
    4. '=[' → logprob: -13.136879920959473
    5. '=[]' → logprob: -13.136879920959473
    6. ' =[' → logprob: -13.636879920959473
    7. ' ' → logprob: -14.261879920959473
    8. ',' → logprob: -15.011879920959473
    9. '   ' → logprob: -16.01188087463379
    10. '=[]
' → logprob: -16.26188087463379

Token 322: ' size' (ID: 2349)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9659774899482727
    2. '0' → logprob: -1.715977430343628
    3. '[n' → logprob: -2.215977430343628
    4. '2' → logprob: -2.340977430343628
    5. ' [' → logprob: -2.590977430343628
    6. 'size' → logprob: -3.215977430343628
    7. 'n' → logprob: -3.215977430343628
    8. ' ' → logprob: -3.965977430343628
    9. ' size' → logprob: -4.215977668762207
    10. ' n' → logprob: -4.590977668762207

Token 323: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2194717973470688
    2. '2' → logprob: -2.3444716930389404
    3. ' (' → logprob: -2.8444716930389404
    4. '(n' → logprob: -3.5944716930389404
    5. 'n' → logprob: -5.3444719314575195
    6. ' ' → logprob: -5.5944719314575195
    7. '(N' → logprob: -5.7194719314575195
    8. 'N' → logprob: -6.0944719314575195
    9. ' n' → logprob: -7.3444719314575195
    10. ' N' → logprob: -7.5944719314575195

Token 324: 'n' (ID: 77)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04094209522008896
    2. 'n' → logprob: -3.4159421920776367
    3. 'N' → logprob: -5.165942192077637
    4. '(' → logprob: -7.290942192077637
    5. ' ' → logprob: -7.540942192077637
    6. ' n' → logprob: -9.040942192077637
    7. '(n' → logprob: -9.665942192077637
    8. '   ' → logprob: -9.915942192077637
    9. '1' → logprob: -10.665942192077637
    10. '3' → logprob: -10.790942192077637

Token 325: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007497096667066216
    2. ' +' → logprob: -7.375749588012695
    3. '*' → logprob: -9.500749588012695
    4. '+n' → logprob: -10.625749588012695
    5. ')' → logprob: -11.250749588012695
    6. '+
' → logprob: -12.625749588012695
    7. '*n' → logprob: -13.500749588012695
    8. '
' → logprob: -13.500749588012695
    9. '2' → logprob: -13.625749588012695
    10. 'n' → logprob: -13.875749588012695

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004965596832334995
    2. '2' → logprob: -5.379965782165527
    3. ' ' → logprob: -8.004965782165527
    4. 'n' → logprob: -12.879965782165527
    5. '   ' → logprob: -13.004965782165527
    6. '
' → logprob: -13.254965782165527
    7. ')' → logprob: -13.879965782165527
    8. '  ' → logprob: -14.254965782165527
    9. '+' → logprob: -14.504965782165527
    10. '3' → logprob: -14.754965782165527

Token 327: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07758722454309464
    2. '+' → logprob: -3.202587127685547
    3. ']' → logprob: -3.452587127685547
    4. ')]' → logprob: -6.827587127685547
    5. ' +' → logprob: -7.077587127685547
    6. ',' → logprob: -8.577587127685547
    7. ')
' → logprob: -9.577587127685547
    8. ' )' → logprob: -9.702587127685547
    9. ')`' → logprob: -11.077587127685547
    10. '   ' → logprob: -11.327587127685547

Token 328: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48216351866722107
    2. '[num' → logprob: -1.9821635484695435
    3. ' [' → logprob: -2.232163429260254
    4. ' num' → logprob: -2.607163429260254
    5. 'num' → logprob: -3.857163429260254
    6. '0' → logprob: -3.982163429260254
    7. ' ' → logprob: -4.982163429260254
    8. ' filled' → logprob: -5.232163429260254
    9. ' with' → logprob: -5.857163429260254
    10. ' =' → logprob: -5.857163429260254

Token 329: ' store' (ID: 4897)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19798333942890167
    2. ' [' → logprob: -1.8229833841323853
    3. '0' → logprob: -4.322983264923096
    4. ' ' → logprob: -5.447983264923096
    5. '   ' → logprob: -9.322983741760254
    6. ' zeros' → logprob: -9.322983741760254
    7. '[num' → logprob: -9.572983741760254
    8. '[]' → logprob: -10.072983741760254
    9. '[n' → logprob: -10.322983741760254
    10. ')' → logprob: -10.697983741760254

Token 330: ' counts' (ID: 28991)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07902087271213531
    2. ' ' → logprob: -2.8290209770202637
    3. '[' → logprob: -4.954020977020264
    4. ' zeros' → logprob: -5.829020977020264
    5. ' [' → logprob: -6.204020977020264
    6. ' n' → logprob: -6.829020977020264
    7. '1' → logprob: -7.579020977020264
    8. 'n' → logprob: -7.579020977020264
    9. ' numbers' → logprob: -7.704020977020264
    10. ' integers' → logprob: -7.704020977020264

Token 331: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2527846395969391
    2. ' of' → logprob: -2.8777847290039062
    3. '=' → logprob: -3.1277847290039062
    4. ' for' → logprob: -3.1277847290039062
    5. '[' → logprob: -3.5027847290039062
    6. '   ' → logprob: -4.377784729003906
    7. '(' → logprob: -4.877784729003906
    8. '()' → logprob: -5.127784729003906
    9. 'of' → logprob: -5.252784729003906
    10. 'for' → logprob: -5.252784729003906

Token 332: ' how' (ID: 1495)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6705944538116455
    2. ' numbers' → logprob: -1.6705944538116455
    3. 'numbers' → logprob: -2.9205944538116455
    4. ' ' → logprob: -3.0455944538116455
    5. ' integers' → logprob: -3.6705944538116455
    6. '1' → logprob: -3.6705944538116455
    7. ' elements' → logprob: -3.7955944538116455
    8. ' i' → logprob: -4.045594215393066
    9. 'i' → logprob: -4.170594215393066
    10. ' N' → logprob: -4.170594215393066

Token 333: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.2816186547279358
    2. 'many' → logprob: -1.406618595123291
    3. 'Many' → logprob: -9.15661907196045
    4. '_many' → logprob: -9.40661907196045
    5. ' elements' → logprob: -10.03161907196045
    6. ' often' → logprob: -10.15661907196045
    7. 'elements' → logprob: -10.53161907196045
    8. '   ' → logprob: -10.78161907196045
    9. ' ' → logprob: -11.03161907196045
    10. '[' → logprob: -11.03161907196045

Token 334: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.6874871850013733
    2. ' integers' → logprob: -1.0624871253967285
    3. 'numbers' → logprob: -2.8124871253967285
    4. 'N' → logprob: -4.0624871253967285
    5. ' times' → logprob: -4.0624871253967285
    6. '<|end|>' → logprob: -4.5624871253967285
    7. ' elements' → logprob: -4.8124871253967285
    8. ' ' → logprob: -5.0624871253967285
    9. ' N' → logprob: -5.4374871253967285
    10. '0' → logprob: -5.6874871253967285

Token 335: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4018947184085846
    2. 'in' → logprob: -2.6518948078155518
    3. ' are' → logprob: -2.9018948078155518
    4. ' can' → logprob: -3.1518948078155518
    5. ' between' → logprob: -3.2768948078155518
    6. 'from' → logprob: -3.7768948078155518
    7. ' have' → logprob: -4.151894569396973
    8. ' from' → logprob: -4.151894569396973
    9. ' that' → logprob: -4.276894569396973
    10. ' within' → logprob: -4.651894569396973

Token 336: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28790587186813354
    2. ' range' → logprob: -1.6629059314727783
    3. '[' → logprob: -3.0379059314727783
    4. 'N' → logprob: -5.162905693054199
    5. '[N' → logprob: -5.787905693054199
    6. '[
' → logprob: -6.787905693054199
    7. 'the' → logprob: -7.537905693054199
    8. ' [' → logprob: -7.537905693054199
    9. 'each' → logprob: -7.662905693054199
    10. '=' → logprob: -8.4129056930542

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1876358985900879
    2. 'N' → logprob: -1.812635898590088
    3. ' ' → logprob: -5.687635898590088
    4. '0' → logprob: -6.437635898590088
    5. ' N' → logprob: -6.562635898590088
    6. 'range' → logprob: -7.187635898590088
    7. ' range' → logprob: -7.937635898590088
    8. '[' → logprob: -8.81263542175293
    9. '   ' → logprob: -9.56263542175293
    10. ']' → logprob: -10.18763542175293

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006300011184066534
    2. ' ,' → logprob: -5.38129997253418
    3. ',n' → logprob: -7.50629997253418
    4. ']' → logprob: -7.63129997253418
    5. ',N' → logprob: -7.75629997253418
    6. ' ' → logprob: -9.38129997253418
    7. ',
' → logprob: -9.38129997253418
    8. '
' → logprob: -11.25629997253418
    9. '..' → logprob: -11.88129997253418
    10. ')' → logprob: -12.25629997253418

Token 339: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12705494463443756
    2. ' N' → logprob: -2.1270549297332764
    3. ' ' → logprob: -10.627055168151855
    4. ',' → logprob: -10.752055168151855
    5. 'n' → logprob: -10.752055168151855
    6. '   ' → logprob: -10.877055168151855
    7. ' n' → logprob: -11.377055168151855
    8. ',N' → logprob: -12.502055168151855
    9. '...' → logprob: -12.627055168151855
    10. ')' → logprob: -12.752055168151855

Token 340: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026468830183148384
    2. '//' → logprob: -6.5026469230651855
    3. ' ]' → logprob: -7.7526469230651855
    4. ')' → logprob: -8.752646446228027
    5. 'that' → logprob: -9.002646446228027
    6. '   ' → logprob: -9.502646446228027
    7. ']
' → logprob: -9.752646446228027
    8. ' that' → logprob: -9.752646446228027
    9. '+' → logprob: -10.127646446228027
    10. 'have' → logprob: -10.252646446228027

Token 341: ' have' (ID: 679)
  Prédit: ' fall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fall' → logprob: -0.07415453344583511
    2. 'fall' → logprob: -3.4491546154022217
    3. ' lie' → logprob: -3.8241546154022217
    4. ' are' → logprob: -4.449154376983643
    5. ' in' → logprob: -6.574154376983643
    6. ' have' → logprob: -7.074154376983643
    7. ' that' → logprob: -7.199154376983643
    8. 'are' → logprob: -7.324154376983643
    9. ' belong' → logprob: -7.449154376983643
    10. ' can' → logprob: -8.0741548538208

Token 342: ' the' (ID: 290)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.7222209572792053
    2. 'a' → logprob: -1.2222208976745605
    3. 'the' → logprob: -2.5972208976745605
    4. ' each' → logprob: -3.3472208976745605
    5. ' a' → logprob: -3.4722208976745605
    6. 'value' → logprob: -3.9722208976745605
    7. 'i' → logprob: -3.9722208976745605
    8. 'exact' → logprob: -4.7222208976745605
    9. ' the' → logprob: -4.8472208976745605
    10. 'div' → logprob: -5.0972208976745605

Token 343: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.1673842817544937
    2. ' same' → logprob: -1.9173842668533325
    3. 'value' → logprob: -5.667384147644043
    4. 'i' → logprob: -6.292384147644043
    5. 'n' → logprob: -7.792384147644043
    6. ' value' → logprob: -7.917384147644043
    7. 'interval' → logprob: -8.042384147644043
    8. 's' → logprob: -8.667384147644043
    9. ' i' → logprob: -9.792384147644043
    10. 'k' → logprob: -9.917384147644043

Token 344: ' floor' (ID: 8350)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.625695526599884
    2. ' value' → logprob: -2.1256954669952393
    3. 'div' → logprob: -2.2506954669952393
    4. 'floor' → logprob: -2.5006954669952393
    5. 'n' → logprob: -3.0006954669952393
    6. 'division' → logprob: -4.000695705413818
    7. ' n' → logprob: -4.125695705413818
    8. ' quotient' → logprob: -4.500695705413818
    9. ' division' → logprob: -4.875695705413818
    10. ' floor' → logprob: -5.000695705413818

Token 345: ' division' (ID: 21629)
  Prédit: ' division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' division' → logprob: -1.5176267623901367
    2. '   ' → logprob: -1.8926267623901367
    3. '(' → logprob: -2.1426267623901367
    4. '(N' → logprob: -2.7676267623901367
    5. 'division' → logprob: -2.7676267623901367
    6. ' of' → logprob: -2.8926267623901367
    7. '(n' → logprob: -2.8926267623901367
    8. 'value' → logprob: -3.1426267623901367
    9. 's' → logprob: -3.1426267623901367
    10. 'div' → logprob: -3.3926267623901367

Token 346: ' result' (ID: 1534)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.7182570099830627
    2. ' value' → logprob: -1.468256950378418
    3. 'value' → logprob: -2.843256950378418
    4. ' result' → logprob: -2.968256950378418
    5. '(n' → logprob: -3.843256950378418
    6. ' ' → logprob: -3.843256950378418
    7. ' n' → logprob: -3.843256950378418
    8. 'by' → logprob: -4.093256950378418
    9. 'result' → logprob: -4.093256950378418
    10. ' values' → logprob: -4.343256950378418

Token 347: '.
' (ID: 558)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.09907735139131546
    2. ' for' → logprob: -2.8490774631500244
    3. ' of' → logprob: -4.724077224731445
    4. 'by' → logprob: -4.724077224731445
    5. '   ' → logprob: -4.849077224731445
    6. 'for' → logprob: -5.474077224731445
    7. ' with' → logprob: -6.349077224731445
    8. ')' → logprob: -7.099077224731445
    9. ',' → logprob: -7.099077224731445
    10. ' ' → logprob: -7.349077224731445

Token 348: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2862160801887512
    2. '[' → logprob: -2.1612160205841064
    3. 'num' → logprob: -3.0362160205841064
    4. '=' → logprob: -3.4112160205841064
    5. ' num' → logprob: -3.6612160205841064
    6. '   ' → logprob: -4.1612162590026855
    7. ' ' → logprob: -5.9112162590026855
    8. '[num' → logprob: -5.9112162590026855
    9. ']' → logprob: -6.9112162590026855
    10. ',' → logprob: -7.0362162590026855

Token 349: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.09261912107467651
    2. ' num' → logprob: -2.5926191806793213
    3. '[num' → logprob: -5.092618942260742
    4. '[' → logprob: -5.342618942260742
    5. ' [' → logprob: -6.092618942260742
    6. '   ' → logprob: -7.842618942260742
    7. '[]' → logprob: -10.967618942260742
    8. '[
' → logprob: -11.217618942260742
    9. '[]
' → logprob: -11.967618942260742
    10. '	num' → logprob: -12.092618942260742

Token 350: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931495666503906
    2. ' =' → logprob: -0.6931495666503906
    3. ' =[' → logprob: -14.06814956665039
    4. '=[' → logprob: -14.56814956665039
    5. '[' → logprob: -14.69314956665039
    6. '＝' → logprob: -15.69314956665039
    7. ' ' → logprob: -15.81814956665039
    8. ' =
' → logprob: -15.81814956665039
    9. '=[]' → logprob: -16.31814956665039
    10. '=
' → logprob: -16.44314956665039

Token 351: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14770828187465668
    2. ' [' → logprob: -2.1477081775665283
    3. '[n' → logprob: -3.8977081775665283
    4. '[N' → logprob: -8.27270793914795
    5. '[i' → logprob: -12.02270793914795
    6. '[(' → logprob: -12.14770793914795
    7. '[]' → logprob: -12.64770793914795
    8. '[num' → logprob: -13.14770793914795
    9. '   ' → logprob: -13.27270793914795
    10. ' ' → logprob: -14.14770793914795

Token 352: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. ']' → logprob: -16.125051498413086
    4. '   ' → logprob: -17.125051498413086
    5. 'N' → logprob: -17.250051498413086
    6. '(' → logprob: -17.625051498413086
    7. ')' → logprob: -17.625051498413086
    8. 'n' → logprob: -17.750051498413086
    9. ' (' → logprob: -18.375051498413086
    10. ' N' → logprob: -19.000051498413086

Token 353: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1994775377388578e-05
    2. ']*' → logprob: -12.375012397766113
    3. ' for' → logprob: -12.625012397766113
    4. '(n' → logprob: -13.250012397766113
    5. 'for' → logprob: -13.625012397766113
    6. ']*(' → logprob: -13.750012397766113
    7. '*' → logprob: -15.750012397766113
    8. ')' → logprob: -15.875012397766113
    9. ' ]' → logprob: -16.250011444091797
    10. ']+' → logprob: -17.125011444091797

Token 354: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.580232560634613
    2. '*(' → logprob: -1.0802326202392578
    3. ' for' → logprob: -3.330232620239258
    4. ']*(' → logprob: -3.705232620239258
    5. 'for' → logprob: -3.830232620239258
    6. ']' → logprob: -4.455232620239258
    7. ' *' → logprob: -5.830232620239258
    8. '(n' → logprob: -6.330232620239258
    9. '+' → logprob: -6.830232620239258
    10. ']*' → logprob: -8.205232620239258

Token 355: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.190178904333152e-05
    2. ' (' → logprob: -10.625031471252441
    3. '(' → logprob: -11.875031471252441
    4. '((' → logprob: -15.000031471252441
    5. '(N' → logprob: -16.625032424926758
    6. 'n' → logprob: -17.250032424926758
    7. '   ' → logprob: -17.625032424926758
    8. '(
' → logprob: -17.875032424926758
    9. '[n' → logprob: -19.000032424926758
    10. '（' → logprob: -19.500032424926758

Token 356: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002520607551559806
    2. '(n' → logprob: -6.002520561218262
    3. ' n' → logprob: -10.127520561218262
    4. ' (' → logprob: -12.877520561218262
    5. '   ' → logprob: -13.377520561218262
    6. '(' → logprob: -14.377520561218262
    7. ')n' → logprob: -16.377521514892578
    8. '[n' → logprob: -16.627521514892578
    9. '
' → logprob: -17.002521514892578
    10. '	n' → logprob: -17.252521514892578

Token 357: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2007883671903983e-05
    2. '1' → logprob: -11.250021934509277
    3. ' +' → logprob: -12.000021934509277
    4. '+
' → logprob: -13.000021934509277
    5. '+n' → logprob: -15.250021934509277
    6. '```' → logprob: -16.375022888183594
    7. '   ' → logprob: -17.375022888183594
    8. '11' → logprob: -17.625022888183594
    9. ')+' → logprob: -17.875022888183594
    10. ']+' → logprob: -18.000022888183594

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.894790981779806e-05
    2. '2' → logprob: -10.625048637390137
    3. ' ' → logprob: -11.125048637390137
    4. '```' → logprob: -12.875048637390137
    5. '
' → logprob: -13.125048637390137
    6. '+' → logprob: -13.375048637390137
    7. '   ' → logprob: -13.625048637390137
    8. '(' → logprob: -15.062548637390137
    9. '

' → logprob: -15.625048637390137
    10. '{' → logprob: -15.625048637390137

Token 359: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5941604690160602e-05
    2. ')
' → logprob: -10.625025749206543
    3. ' )' → logprob: -13.875025749206543
    4. ')

' → logprob: -14.875025749206543
    5. '   ' → logprob: -16.00002670288086
    6. ')
' → logprob: -16.87502670288086
    7. ')`' → logprob: -17.00002670288086
    8. ']' → logprob: -17.50002670288086
    9. '```' → logprob: -17.62502670288086
    10. '),' → logprob: -17.75002670288086

Token 360: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3434543013572693
    2. ' for' → logprob: -1.468454360961914
    3. '   ' → logprob: -2.968454360961914
    4. 'i' → logprob: -4.843454360961914
    5. '<|end|>' → logprob: -7.593454360961914
    6. ' i' → logprob: -8.093454360961914
    7. 'num' → logprob: -9.343454360961914
    8. ')' → logprob: -9.468454360961914
    9. '```' → logprob: -10.093454360961914
    10. '
' → logprob: -11.218454360961914

Token 361: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08622635900974274
    2. 'i' → logprob: -2.711226463317871
    3. ' for' → logprob: -4.336226463317871
    4. 'l' → logprob: -6.711226463317871
    5. 'last' → logprob: -7.836226463317871
    6. '   ' → logprob: -8.211226463317871
    7. 'current' → logprob: -8.336226463317871
    8. 'num' → logprob: -8.461226463317871
    9. ' i' → logprob: -8.461226463317871
    10. 'prev' → logprob: -8.836226463317871

Token 362: ' Loop' (ID: 40095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0038498362991958857
    2. 'i' → logprob: -6.003849983215332
    3. 'last' → logprob: -7.128849983215332
    4. 'prev' → logprob: -8.628849983215332
    5. 'current' → logprob: -9.378849983215332
    6. 'j' → logprob: -9.503849983215332
    7. 'num' → logprob: -9.753849983215332
    8. 'l' → logprob: -9.878849983215332
    9. ' for' → logprob: -10.003849983215332
    10. 'def' → logprob: -11.253849983215332

Token 363: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3825511038303375
    2. ' i' → logprob: -1.8825510740280151
    3. 'for' → logprob: -2.0075511932373047
    4. 'i' → logprob: -3.5075511932373047
    5. '_' → logprob: -7.382551193237305
    6. '   ' → logprob: -8.632551193237305
    7. ' over' → logprob: -9.132551193237305
    8. ' from' → logprob: -9.257551193237305
    9. 'from' → logprob: -9.507551193237305
    10. ' _' → logprob: -9.632551193237305

Token 364: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.042964138090610504
    2. ' ' → logprob: -3.917964220046997
    3. 'i' → logprob: -4.042963981628418
    4. ' i' → logprob: -5.542963981628418
    5. 'n' → logprob: -8.167963981628418
    6. ' n' → logprob: -8.917963981628418
    7. '0' → logprob: -9.042963981628418
    8. 'j' → logprob: -10.042963981628418
    9. 'k' → logprob: -10.792963981628418
    10. 'd' → logprob: -10.917963981628418

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002489926293492317
    2. 'i' → logprob: -6.127490043640137
    3. 'n' → logprob: -8.877490043640137
    4. ' ' → logprob: -9.627490043640137
    5. '0' → logprob: -9.877490043640137
    6. 'k' → logprob: -11.752490043640137
    7. 'd' → logprob: -11.752490043640137
    8. 'j' → logprob: -12.002490043640137
    9. 'l' → logprob: -12.377490043640137
    10. ' i' → logprob: -12.377490043640137

Token 366: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04148752987384796
    2. 'to' → logprob: -3.416487455368042
    3. ',' → logprob: -5.416487693786621
    4. ' ' → logprob: -6.541487693786621
    5. ' for' → logprob: -7.791487693786621
    6. '(' → logprob: -7.916487693786621
    7. '   ' → logprob: -8.416487693786621
    8. ' through' → logprob: -8.416487693786621
    9. ')' → logprob: -8.791487693786621
    10. '<|end|>' → logprob: -9.041487693786621

Token 367: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0021888066548854113
    2. ' n' → logprob: -6.127188682556152
    3. '	n' → logprob: -13.502188682556152
    4. '(n' → logprob: -13.752188682556152
    5. ' ' → logprob: -15.252188682556152
    6. '<|end|>' → logprob: -15.502188682556152
    7. '_n' → logprob: -15.752188682556152
    8. '1' → logprob: -16.25218963623047
    9. ')n' → logprob: -16.62718963623047
    10. 'N' → logprob: -16.87718963623047

Token 368: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7406403422355652
    2. ' for' → logprob: -0.8656403422355652
    3. ',' → logprob: -2.74064040184021
    4. 'for' → logprob: -3.61564040184021
    5. '(' → logprob: -5.865640163421631
    6. ' :' → logprob: -6.490640163421631
    7. '   ' → logprob: -6.490640163421631
    8. ':
' → logprob: -6.990640163421631
    9. ' (' → logprob: -7.115640163421631
    10. ' in' → logprob: -7.240640163421631

Token 369: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5581471920013428
    2. '+' → logprob: -0.9331471920013428
    3. '1' → logprob: -3.9331471920013428
    4. ' n' → logprob: -4.933147430419922
    5. '(n' → logprob: -5.433147430419922
    6. ' +' → logprob: -6.808147430419922
    7. ' ' → logprob: -7.183147430419922
    8. '   ' → logprob: -7.683147430419922
    9. '```' → logprob: -7.808147430419922
    10. ' (' → logprob: -8.933147430419922

Token 370: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42700567841529846
    2. ' for' → logprob: -1.177005648612976
    3. 'for' → logprob: -3.8020057678222656
    4. ':
' → logprob: -4.552005767822266
    5. ',' → logprob: -5.427005767822266
    6. '   ' → logprob: -7.302005767822266
    7. '
' → logprob: -8.302005767822266
    8. '.' → logprob: -8.927005767822266
    9. ' :' → logprob: -8.927005767822266
    10. ' to' → logprob: -8.927005767822266

Token 371: 'inclusive' (ID: 186093)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11716649681329727
    2. ' n' → logprob: -2.367166519165039
    3. ')' → logprob: -4.742166519165039
    4. ')n' → logprob: -5.992166519165039
    5. '1' → logprob: -6.117166519165039
    6. ' )' → logprob: -6.492166519165039
    7. '):' → logprob: -7.617166519165039
    8. ' ' → logprob: -7.992166519165039
    9. '):
' → logprob: -8.367166519165039
    10. '
' → logprob: -8.867166519165039

Token 372: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11035974323749542
    2. ':' → logprob: -2.7353596687316895
    3. '):
' → logprob: -3.3603596687316895
    4. ')' → logprob: -5.8603596687316895
    5. ',' → logprob: -6.3603596687316895
    6. ':
' → logprob: -8.985360145568848
    7. ' ):' → logprob: -9.235360145568848
    8. '   ' → logprob: -10.110360145568848
    9. ' :' → logprob: -11.860360145568848
    10. '1' → logprob: -12.110360145568848

Token 373: ' range' (ID: 3352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5558597445487976
    2. ' n' → logprob: -1.0558598041534424
    3. ')' → logprob: -2.9308598041534424
    4. ' )' → logprob: -4.805859565734863
    5. ')n' → logprob: -5.305859565734863
    6. '):
' → logprob: -5.680859565734863
    7. '1' → logprob: -6.305859565734863
    8. '):' → logprob: -6.555859565734863
    9. ' ' → logprob: -6.805859565734863
    10. '
' → logprob: -6.930859565734863

Token 374: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.77627644513268e-06
    2. '(n' → logprob: -12.375008583068848
    3. ' (' → logprob: -13.250008583068848
    4. '1' → logprob: -13.375008583068848
    5. ',' → logprob: -14.500008583068848
    6. ')' → logprob: -14.875008583068848
    7. '(
' → logprob: -15.875008583068848
    8. '   ' → logprob: -16.125009536743164
    9. ')(' → logprob: -17.750009536743164
    10. ' ' → logprob: -17.750009536743164

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002286886883666739
    2. ' ' → logprob: -8.500228881835938
    3. '   ' → logprob: -11.750228881835938
    4. '(' → logprob: -11.875228881835938
    5. 'n' → logprob: -11.875228881835938
    6. ',' → logprob: -13.500228881835938
    7. '
' → logprob: -13.875228881835938
    8. '```' → logprob: -15.812728881835938
    9. '    ' → logprob: -15.875228881835938
    10. ' n' → logprob: -15.937728881835938

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02756446786224842
    2. ',n' → logprob: -3.777564525604248
    3. ' ,' → logprob: -5.652564525604248
    4. ',
' → logprob: -7.277564525604248
    5. '(n' → logprob: -9.52756404876709
    6. 'n' → logprob: -10.65256404876709
    7. ' ,
' → logprob: -12.15256404876709
    8. '1' → logprob: -13.27756404876709
    9. ')' → logprob: -13.52756404876709
    10. '(' → logprob: -13.77756404876709

Token 377: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048590775579214096
    2. ' n' → logprob: -3.048590660095215
    3. '	n' → logprob: -14.298590660095215
    4. ' ' → logprob: -14.298590660095215
    5. '
' → logprob: -14.423590660095215
    6. '   ' → logprob: -14.548590660095215
    7. ')n' → logprob: -14.548590660095215
    8. ')' → logprob: -15.548590660095215
    9. '```' → logprob: -15.798590660095215
    10. '(n' → logprob: -16.42359161376953

Token 378: ')),' (ID: 12098)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.33273184299468994
    2. '):
' → logprob: -1.33273184299469
    3. ')' → logprob: -4.2077317237854
    4. '+' → logprob: -5.5827317237854
    5. ')):' → logprob: -8.957732200622559
    6. '):

' → logprob: -9.082732200622559
    7. ' ):' → logprob: -9.082732200622559
    8. ':' → logprob: -9.957732200622559
    9. ')):
' → logprob: -10.082732200622559
    10. ' +' → logprob: -10.207732200622559

Token 379: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.44525831937789917
    2. '   ' → logprob: -2.195258378982544
    3. 'for' → logprob: -2.195258378982544
    4. '    ' → logprob: -2.570258378982544
    5. ':' → logprob: -4.195258140563965
    6. '
' → logprob: -4.570258140563965
    7. ' 
' → logprob: -4.820258140563965
    8. ' i' → logprob: -5.945258140563965
    9. ' num' → logprob: -5.945258140563965
    10. ' ' → logprob: -6.070258140563965

Token 380: ' compute' (ID: 23864)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.432808756828308
    2. 'for' → logprob: -1.432808756828308
    3. 'calculate' → logprob: -2.4328088760375977
    4. 'n' → logprob: -2.5578088760375977
    5. ' calculate' → logprob: -2.8078088760375977
    6. ')' → logprob: -2.8078088760375977
    7. 'def' → logprob: -3.5578088760375977
    8. 's' → logprob: -3.9328088760375977
    9. ' i' → logprob: -4.057808876037598
    10. ' n' → logprob: -4.057808876037598

Token 381: ' the' (ID: 290)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.23103870451450348
    2. ' num' → logprob: -1.6060386896133423
    3. '   ' → logprob: -5.356038570404053
    4. ' the' → logprob: -8.606039047241211
    5. '(num' → logprob: -9.106039047241211
    6. 'for' → logprob: -9.356039047241211
    7. ' for' → logprob: -9.606039047241211
    8. 'i' → logprob: -9.731039047241211
    9. ' ' → logprob: -9.731039047241211
    10. '```' → logprob: -9.856039047241211

Token 382: ' number' (ID: 2086)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.12683865427970886
    2. 'count' → logprob: -2.7518386840820312
    3. 'number' → logprob: -4.126838684082031
    4. ' num' → logprob: -4.251838684082031
    5. ' number' → logprob: -5.126838684082031
    6. ' count' → logprob: -5.376838684082031
    7. 'value' → logprob: -6.126838684082031
    8. 'next' → logprob: -6.501838684082031
    9. 'difference' → logprob: -6.501838684082031
    10. 'i' → logprob: -6.626838684082031

Token 383: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.3040391206741333
    2. ' of' → logprob: -2.4290390014648438
    3. '=' → logprob: -2.5540390014648438
    4. 's' → logprob: -3.0540390014648438
    5. ' =' → logprob: -3.8040390014648438
    6. '[' → logprob: -4.804039001464844
    7. 'for' → logprob: -5.054039001464844
    8. '_of' → logprob: -5.929039001464844
    9. '   ' → logprob: -6.429039001464844
    10. ' ' → logprob: -6.554039001464844

Token 384: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.8303182125091553
    2. 'elements' → logprob: -2.2053182125091553
    3. ' elements' → logprob: -2.2053182125091553
    4. 'numbers' → logprob: -2.5803182125091553
    5. 'num' → logprob: -2.7053182125091553
    6. 'inte' → logprob: -2.8303182125091553
    7. 'values' → logprob: -2.8303182125091553
    8. ' numbers' → logprob: -3.7053182125091553
    9. ' values' → logprob: -4.080318450927734
    10. 'i' → logprob: -4.455318450927734

Token 385: ' x' (ID: 1215)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.2378733158111572
    2. 'i' → logprob: -1.4878733158111572
    3. ' i' → logprob: -1.8628733158111572
    4. 'in' → logprob: -1.8628733158111572
    5. '   ' → logprob: -3.1128733158111572
    6. ' ' → logprob: -3.2378733158111572
    7. '=' → logprob: -3.8628733158111572
    8. '[' → logprob: -3.9878733158111572
    9. '[i' → logprob: -4.737873077392578
    10. ' =' → logprob: -4.987873077392578

Token 386: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8046380281448364
    2. ' in' → logprob: -0.9296380281448364
    3. ' such' → logprob: -2.304637908935547
    4. 'such' → logprob: -3.679637908935547
    5. 'for' → logprob: -4.679637908935547
    6. ' that' → logprob: -5.304637908935547
    7. ' for' → logprob: -5.304637908935547
    8. '   ' → logprob: -5.804637908935547
    9. 'that' → logprob: -6.304637908935547
    10. 's' → logprob: -6.429637908935547

Token 387: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5822543501853943
    2. ' range' → logprob: -0.8322543501853943
    3. '[' → logprob: -5.332254409790039
    4. '1' → logprob: -7.457254409790039
    5. ' [' → logprob: -7.957254409790039
    6. 'the' → logprob: -8.957254409790039
    7. ' the' → logprob: -9.207254409790039
    8. ' ' → logprob: -9.707254409790039
    9. '   ' → logprob: -9.707254409790039
    10. 'each' → logprob: -10.707254409790039

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09684981405735016
    2. '(' → logprob: -2.4718499183654785
    3. '(n' → logprob: -6.2218499183654785
    4. 'n' → logprob: -6.3468499183654785
    5. 'range' → logprob: -6.5968499183654785
    6. 'i' → logprob: -7.3468499183654785
    7. '(i' → logprob: -7.7218499183654785
    8. ' ' → logprob: -7.8468499183654785
    9. ']' → logprob: -7.8468499183654785
    10. ',' → logprob: -8.09684944152832

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00828819815069437
    2. '(n' → logprob: -5.883288383483887
    3. ',n' → logprob: -5.883288383483887
    4. ' ,' → logprob: -6.508288383483887
    5. '(' → logprob: -7.633288383483887
    6. '   ' → logprob: -7.883288383483887
    7. ']' → logprob: -9.508288383483887
    8. 'n' → logprob: -9.883288383483887
    9. ',
' → logprob: -10.133288383483887
    10. '(i' → logprob: -10.883288383483887

Token 390: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5592278242111206
    2. 'n' → logprob: -0.9342278242111206
    3. ' n' → logprob: -4.05922794342041
    4. ' N' → logprob: -4.05922794342041
    5. '2' → logprob: -8.18422794342041
    6. ' ' → logprob: -8.30922794342041
    7. '   ' → logprob: -9.05922794342041
    8. '```' → logprob: -9.80922794342041
    9. '
' → logprob: -10.18422794342041
    10. 'i' → logprob: -10.43422794342041

Token 391: ']' (ID: 60)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.523228645324707
    2. ' //' → logprob: -1.523228645324707
    3. ']' → logprob: -2.523228645324707
    4. ' if' → logprob: -2.523228645324707
    5. 'if' → logprob: -4.148228645324707
    6. ' that' → logprob: -5.273228645324707
    7. '   ' → logprob: -5.648228645324707
    8. 'that' → logprob: -6.898228645324707
    9. ' such' → logprob: -7.273228645324707
    10. '#' → logprob: -7.398228645324707

Token 392: ' such' (ID: 2238)
  Prédit: ' such'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.528576135635376
    2. 'such' → logprob: -1.278576135635376
    3. 'for' → logprob: -2.778576135635376
    4. ' for' → logprob: -3.153576135635376
    5. ' that' → logprob: -4.403575897216797
    6. 'that' → logprob: -5.278575897216797
    7. '   ' → logprob: -5.778575897216797
    8. 's' → logprob: -6.528575897216797
    9. 'with' → logprob: -6.528575897216797
    10. ' with' → logprob: -7.528575897216797

Token 393: ' that' (ID: 484)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5247629880905151
    2. 'for' → logprob: -1.7747629880905151
    3. '=' → logprob: -1.8997629880905151
    4. ':' → logprob: -1.8997629880905151
    5. ' in' → logprob: -2.3997631072998047
    6. 'in' → logprob: -3.0247631072998047
    7. ' for' → logprob: -3.2747631072998047
    8. '[' → logprob: -3.5247631072998047
    9. 'range' → logprob: -3.5247631072998047
    10. ' =' → logprob: -4.024763107299805

Token 394: ' N' (ID: 478)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8647205829620361
    2. 'n' → logprob: -2.114720582962036
    3. 'N' → logprob: -2.239720582962036
    4. ' num' → logprob: -2.364720582962036
    5. 'x' → logprob: -2.489720582962036
    6. '   ' → logprob: -3.239720582962036
    7. ' N' → logprob: -3.489720582962036
    8. ' n' → logprob: -3.489720582962036
    9. ' x' → logprob: -3.739720582962036
    10. ' (' → logprob: -4.114720344543457

Token 395: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5783097147941589
    2. '//' → logprob: -0.8283097147941589
    3. '#' → logprob: -7.328309535980225
    4. ' ' → logprob: -8.203310012817383
    5. 'x' → logprob: -8.328310012817383
    6. ' x' → logprob: -8.453310012817383
    7. '   ' → logprob: -8.453310012817383
    8. '/' → logprob: -8.828310012817383
    9. '```' → logprob: -9.078310012817383
    10. '/x' → logprob: -9.328310012817383

Token 396: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027314871549606323
    2. 'i' → logprob: -3.9023149013519287
    3. '(' → logprob: -5.65231466293335
    4. ' x' → logprob: -6.52731466293335
    5. '(x' → logprob: -7.02731466293335
    6. ' (' → logprob: -8.152315139770508
    7. '(i' → logprob: -8.277315139770508
    8. 'j' → logprob: -9.027315139770508
    9. ' i' → logprob: -9.402315139770508
    10. '(n' → logprob: -10.152315139770508

Token 397: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5310034155845642
    2. '==' → logprob: -1.031003475189209
    3. ' >' → logprob: -4.156003475189209
    4. '>' → logprob: -4.281003475189209
    5. ' >=' → logprob: -4.281003475189209
    6. '>=' → logprob: -5.156003475189209
    7. '=' → logprob: -6.281003475189209
    8. ' !=' → logprob: -6.281003475189209
    9. '!=' → logprob: -6.656003475189209
    10. '```' → logprob: -8.15600299835205

Token 398: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11378484964370728
    2. 'N' → logprob: -2.6137847900390625
    3. ' i' → logprob: -3.8637847900390625
    4. 'n' → logprob: -4.7387847900390625
    5. ' N' → logprob: -6.3637847900390625
    6. ' n' → logprob: -7.8637847900390625
    7. 'x' → logprob: -7.8637847900390625
    8. '   ' → logprob: -7.9887847900390625
    9. ' ' → logprob: -8.488784790039062
    10. 'k' → logprob: -8.488784790039062

Token 399: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4495700001716614
    2. 'for' → logprob: -1.3245699405670166
    3. '   ' → logprob: -2.8245699405670166
    4. ':' → logprob: -3.3245699405670166
    5. '	for' → logprob: -7.324570178985596
    6. ' ' → logprob: -9.699569702148438
    7. ' :' → logprob: -10.199569702148438
    8. ':
' → logprob: -10.574569702148438
    9. '.' → logprob: -10.574569702148438
    10. ',' → logprob: -11.574569702148438

Token 400: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6039881110191345
    2. 'for' → logprob: -0.8539881110191345
    3. '   ' → logprob: -3.6039881706237793
    4. '	for' → logprob: -7.853988170623779
    5. '    ' → logprob: -11.603987693786621
    6. '```' → logprob: -11.853987693786621
    7. ' ' → logprob: -11.978987693786621
    8. ':' → logprob: -12.103987693786621
    9. 'range' → logprob: -12.103987693786621
    10. ')' → logprob: -12.478987693786621

Token 401: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25220629572868347
    2. ' for' → logprob: -1.5022063255310059
    3. '   ' → logprob: -8.377205848693848
    4. '	for' → logprob: -10.252205848693848
    5. ')' → logprob: -12.877205848693848
    6. '1' → logprob: -13.377205848693848
    7. ':' → logprob: -13.627205848693848
    8. '```' → logprob: -14.002205848693848
    9. '
' → logprob: -14.127205848693848
    10. ',' → logprob: -14.252205848693848

Token 402: ' This' (ID: 1328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0067182136699557304
    2. ' for' → logprob: -5.006718158721924
    3. '   ' → logprob: -12.881718635559082
    4. 'i' → logprob: -16.256717681884766
    5. '1' → logprob: -16.881717681884766
    6. '	for' → logprob: -17.006717681884766
    7. ')' → logprob: -17.256717681884766
    8. 'range' → logprob: -17.506717681884766
    9. '
' → logprob: -18.131717681884766
    10. ' ' → logprob: -18.506717681884766

Token 403: ' works' (ID: 5882)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6447633504867554
    2. ' for' → logprob: -1.3947633504867554
    3. ' =' → logprob: -2.269763469696045
    4. '=' → logprob: -2.644763469696045
    5. ' is' → logprob: -4.019763469696045
    6. ':' → logprob: -4.144763469696045
    7. ' ' → logprob: -4.769763469696045
    8. '   ' → logprob: -6.144763469696045
    9. ')' → logprob: -6.519763469696045
    10. ' will' → logprob: -6.519763469696045

Token 404: ' because' (ID: 2236)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9807077050209045
    2. ' for' → logprob: -1.2307076454162598
    3. 'for' → logprob: -1.9807076454162598
    4. ' =' → logprob: -1.9807076454162598
    5. '   ' → logprob: -3.3557076454162598
    6. ':' → logprob: -4.23070764541626
    7. 'in' → logprob: -6.23070764541626
    8. ' in' → logprob: -6.35570764541626
    9. ')' → logprob: -6.85570764541626
    10. ' ' → logprob: -7.98070764541626

Token 405: ' floor' (ID: 8350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.2608550786972046
    2. 'num' → logprob: -1.2608550786972046
    3. ' N' → logprob: -1.6358550786972046
    4. ' num' → logprob: -2.135855197906494
    5. 'for' → logprob: -3.010855197906494
    6. ' for' → logprob: -3.635855197906494
    7. 'n' → logprob: -4.385855197906494
    8. ' i' → logprob: -4.510855197906494
    9. 'i' → logprob: -4.885855197906494
    10. ' n' → logprob: -5.010855197906494

Token 406: ' division' (ID: 21629)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0751627683639526
    2. '(' → logprob: -1.4501627683639526
    3. ' division' → logprob: -1.4501627683639526
    4. 'division' → logprob: -2.575162887573242
    5. 'div' → logprob: -3.200162887573242
    6. '(n' → logprob: -3.950162887573242
    7. '(N' → logprob: -4.200162887573242
    8. '_div' → logprob: -5.075162887573242
    9. ' (' → logprob: -5.200162887573242
    10. '=' → logprob: -5.325162887573242

Token 407: ' decreases' (ID: 70943)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4732887744903564
    2. '   ' → logprob: -1.7232887744903564
    3. ' for' → logprob: -2.2232887744903564
    4. '[i' → logprob: -2.7232887744903564
    5. ' ' → logprob: -2.8482887744903564
    6. ' is' → logprob: -2.9732887744903564
    7. ' in' → logprob: -3.2232887744903564
    8. '=' → logprob: -3.4732887744903564
    9. ' =' → logprob: -3.4732887744903564
    10. ' i' → logprob: -3.4732887744903564

Token 408: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.6532549262046814
    2. '   ' → logprob: -2.528254985809326
    3. ' by' → logprob: -2.903254985809326
    4. ' for' → logprob: -3.028254985809326
    5. ' i' → logprob: -3.028254985809326
    6. ' ' → logprob: -3.403254985809326
    7. 'from' → logprob: -3.528254985809326
    8. 'as' → logprob: -3.653254985809326
    9. 'for' → logprob: -3.903254985809326
    10. ',' → logprob: -4.028254985809326

Token 409: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1702011227607727
    2. ' i' → logprob: -1.920201063156128
    3. 'x' → logprob: -5.170201301574707
    4. ' x' → logprob: -6.420201301574707
    5. ' the' → logprob: -7.045201301574707
    6. 'the' → logprob: -7.545201301574707
    7. 'n' → logprob: -8.045201301574707
    8. '   ' → logprob: -8.920201301574707
    9. ' ' → logprob: -8.920201301574707
    10. ' n' → logprob: -9.045201301574707

Token 410: ' increases' (ID: 21073)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3897309899330139
    2. ' increases' → logprob: -1.2647309303283691
    3. 'increments' → logprob: -3.889730930328369
    4. ' increments' → logprob: -4.889730930328369
    5. ')' → logprob: -6.014730930328369
    6. ' in' → logprob: -6.139730930328369
    7. 'i' → logprob: -6.764730930328369
    8. '+=' → logprob: -7.264730930328369
    9. '   ' → logprob: -7.639730930328369
    10. ' ranges' → logprob: -7.764730930328369

Token 411: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7576054334640503
    2. '   ' → logprob: -1.3826054334640503
    3. ':' → logprob: -1.7576054334640503
    4. 'for' → logprob: -2.25760555267334
    5. '	for' → logprob: -6.63260555267334
    6. '.' → logprob: -7.00760555267334
    7. ',' → logprob: -8.00760555267334
    8. ' ' → logprob: -8.38260555267334
    9. ':
' → logprob: -8.63260555267334
    10. ' and' → logprob: -9.38260555267334

Token 412: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6210898160934448
    2. '   ' → logprob: -1.1210898160934448
    3. 'for' → logprob: -1.9960898160934448
    4. '	for' → logprob: -7.496089935302734
    5. '```' → logprob: -8.246089935302734
    6. ' ' → logprob: -11.371089935302734
    7. '<|end|>' → logprob: -11.996089935302734
    8. '    ' → logprob: -12.496089935302734
    9. '``' → logprob: -13.246089935302734
    10. ',' → logprob: -13.371089935302734

Token 413: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25195077061653137
    2. ' for' → logprob: -1.501950740814209
    3. '   ' → logprob: -11.001951217651367
    4. '	for' → logprob: -12.376951217651367
    5. '1' → logprob: -15.626951217651367
    6. '```' → logprob: -15.876951217651367
    7. ' ' → logprob: -16.501951217651367
    8. 'i' → logprob: -16.751951217651367
    9. 'range' → logprob: -16.751951217651367
    10. ')' → logprob: -16.876951217651367

Token 414: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2254481017589569
    2. 'i' → logprob: -1.6004481315612793
    3. ' ' → logprob: -10.975447654724121
    4. '	i' → logprob: -11.725447654724121
    5. '1' → logprob: -12.225447654724121
    6. '   ' → logprob: -13.475447654724121
    7. '(i' → logprob: -14.225447654724121
    8. ' ' → logprob: -14.975447654724121
    9. '```' → logprob: -14.975447654724121
    10. '_i' → logprob: -15.100447654724121

Token 415: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14466723799705505
    2. 'in' → logprob: -2.019667148590088
    3. ' ' → logprob: -6.394667148590088
    4. '1' → logprob: -8.519667625427246
    5. '(' → logprob: -10.394667625427246
    6. ',' → logprob: -11.019667625427246
    7. ')' → logprob: -11.019667625427246
    8. '  ' → logprob: -11.394667625427246
    9. '   ' → logprob: -11.769667625427246
    10. ' i' → logprob: -12.144667625427246

Token 416: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5760821104049683
    2. ' range' → logprob: -0.8260821104049683
    3. '1' → logprob: -9.076082229614258
    4. ' ' → logprob: -10.826082229614258
    5. '(range' → logprob: -11.951082229614258
    6. '	range' → logprob: -13.951082229614258
    7. '(' → logprob: -15.201082229614258
    8. ')' → logprob: -15.326082229614258
    9. '   ' → logprob: -15.701082229614258
    10. '  ' → logprob: -16.076082229614258

Token 417: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014172090217471123
    2. '1' → logprob: -4.264172077178955
    3. ' (' → logprob: -12.264172554016113
    4. ',' → logprob: -13.389172554016113
    5. ' ' → logprob: -13.764172554016113
    6. '   ' → logprob: -14.764172554016113
    7. '(
' → logprob: -15.014172554016113
    8. '[' → logprob: -15.764172554016113
    9. ')' → logprob: -16.389171600341797
    10. '```' → logprob: -17.139171600341797

Token 418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.125016212463379
    3. '   ' → logprob: -14.500016212463379
    4. 'n' → logprob: -14.750016212463379
    5. '(' → logprob: -17.000015258789062
    6. '１' → logprob: -18.312515258789062
    7. '```' → logprob: -18.375015258789062
    8. '  ' → logprob: -18.687515258789062
    9. '2' → logprob: -18.875015258789062
    10. '
' → logprob: -19.125015258789062

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.24179228907451e-05
    2. ',n' → logprob: -10.000061988830566
    3. ' ,' → logprob: -11.000061988830566
    4. ',
' → logprob: -15.875061988830566
    5. 'n' → logprob: -16.875062942504883
    6. '1' → logprob: -17.375062942504883
    7. '   ' → logprob: -18.625062942504883
    8. ',

' → logprob: -19.000062942504883
    9. '(' → logprob: -19.125062942504883
    10. ' ' → logprob: -19.500062942504883

Token 420: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002476604888215661
    2. ' n' → logprob: -6.002476692199707
    3. '	n' → logprob: -14.127476692199707
    4. ' ' → logprob: -16.12747573852539
    5. '   ' → logprob: -16.25247573852539
    6. ')n' → logprob: -17.62747573852539
    7. '```' → logprob: -18.00247573852539
    8. '<n' → logprob: -18.62747573852539
    9. '[n' → logprob: -19.37747573852539
    10. '  ' → logprob: -19.37747573852539

Token 421: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1808532327413559
    2. '+' → logprob: -1.930853247642517
    3. '):
' → logprob: -3.9308531284332275
    4. ' +' → logprob: -7.555853366851807
    5. ' ):' → logprob: -9.180852890014648
    6. ':' → logprob: -9.805852890014648
    7. ')' → logprob: -10.680852890014648
    8. '{' → logprob: -11.055852890014648
    9. '   ' → logprob: -11.305852890014648
    10. ',' → logprob: -11.555852890014648

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5900663733482361
    2. ' num' → logprob: -1.7150664329528809
    3. '   ' → logprob: -1.9650664329528809
    4. 'num' → logprob: -2.090066432952881
    5. '```' → logprob: -7.090066432952881
    6. '	num' → logprob: -7.465066432952881
    7. '
' → logprob: -8.590065956115723
    8. '    ' → logprob: -9.215065956115723
    9. ' ' → logprob: -10.090065956115723
    10. '``' → logprob: -10.465065956115723

Token 423: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.01872679404914379
    2. '   ' → logprob: -4.393726825714111
    3. ' num' → logprob: -5.143726825714111
    4. '       ' → logprob: -8.143726348876953
    5. '	num' → logprob: -10.143726348876953
    6. '           ' → logprob: -11.643726348876953
    7. '
' → logprob: -12.143726348876953
    8. '    
' → logprob: -12.643726348876953
    9. '    ' → logprob: -12.893726348876953
    10. '        
' → logprob: -13.143726348876953

Token 424: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001141526736319065
    2. '[' → logprob: -7.251141548156738
    3. '[n' → logprob: -8.126141548156738
    4. ' [' → logprob: -9.001141548156738
    5. '[num' → logprob: -12.376141548156738
    6. '[N' → logprob: -13.251141548156738
    7. ']' → logprob: -13.626141548156738
    8. '\[' → logprob: -13.751141548156738
    9. ' ' → logprob: -14.376141548156738
    10. '   ' → logprob: -14.626141548156738

Token 425: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028735749423503876
    2. ' =' → logprob: -4.153735637664795
    3. ']' → logprob: -4.403735637664795
    4. ']=' → logprob: -8.153736114501953
    5. ')' → logprob: -9.778736114501953
    6. '=N' → logprob: -10.278736114501953
    7. ')=' → logprob: -12.028736114501953
    8. ']+=' → logprob: -13.278736114501953
    9. '=n' → logprob: -14.278736114501953
    10. ' ' → logprob: -14.403736114501953

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750952497124672
    2. ' =' → logprob: -3.5297510623931885
    3. '=int' → logprob: -16.40475082397461
    4. '+=' → logprob: -16.52975082397461
    5. ',' → logprob: -16.65475082397461
    6. '=

' → logprob: -17.02975082397461
    7. '=num' → logprob: -17.15475082397461
    8. '=
' → logprob: -17.40475082397461
    9. '=N' → logprob: -17.40475082397461
    10. '＝' → logprob: -17.40475082397461

Token 427: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01606721803545952
    2. '(N' → logprob: -4.266067028045654
    3. ' N' → logprob: -6.391067028045654
    4. ' (' → logprob: -8.891067504882812
    5. '((' → logprob: -10.391067504882812
    6. '(' → logprob: -10.516067504882812
    7. ' ' → logprob: -11.141067504882812
    8. '   ' → logprob: -11.891067504882812
    9. '	N' → logprob: -12.766067504882812
    10. 'n' → logprob: -13.141067504882812

Token 428: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5232192277908325
    2. '//' → logprob: -0.8982192277908325
    3. ' ' → logprob: -9.773219108581543
    4. ' //(' → logprob: -11.523219108581543
    5. '   ' → logprob: -12.023219108581543
    6. '#' → logprob: -12.148219108581543
    7. '
' → logprob: -12.273219108581543
    8. ' ' → logprob: -13.023219108581543
    9. '//=' → logprob: -13.023219108581543
    10. ' //
' → logprob: -13.148219108581543

Token 429: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00014776040916331112
    2. '(i' → logprob: -9.375147819519043
    3. '(' → logprob: -9.875147819519043
    4. ' i' → logprob: -12.000147819519043
    5. ' (' → logprob: -12.625147819519043
    6. '   ' → logprob: -13.375147819519043
    7. '((' → logprob: -15.250147819519043
    8. ' ' → logprob: -16.250146865844727
    9. '	i' → logprob: -17.500146865844727
    10. '    ' → logprob: -17.625146865844727

Token 430: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12696895003318787
    2. ' -' → logprob: -2.1269688606262207
    3. '-num' → logprob: -11.126969337463379
    4. '-
' → logprob: -11.751969337463379
    5. '-n' → logprob: -12.001969337463379
    6. '-i' → logprob: -12.876969337463379
    7. '   ' → logprob: -13.001969337463379
    8. ' ' → logprob: -13.126969337463379
    9. '-N' → logprob: -13.376969337463379
    10. '```' → logprob: -14.001969337463379

Token 431: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.3596853831550106e-05
    2. ' N' → logprob: -10.375053405761719
    3. '(N' → logprob: -10.750053405761719
    4. '(' → logprob: -14.625053405761719
    5. '	N' → logprob: -15.750053405761719
    6. ' (' → logprob: -16.00005340576172
    7. '   ' → logprob: -16.00005340576172
    8. ' ' → logprob: -17.62505340576172
    9. '  ' → logprob: -18.37505340576172
    10. '>N' → logprob: -19.25005340576172

Token 432: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00023917861108202487
    2. ' //' → logprob: -8.375239372253418
    3. '//=' → logprob: -12.250239372253418
    4. ' //(' → logprob: -13.125239372253418
    5. '`' → logprob: -14.625239372253418
    6. '```' → logprob: -14.875239372253418
    7. '//#' → logprob: -15.500239372253418
    8. '//'' → logprob: -15.500239372253418
    9. '#' → logprob: -16.1252384185791
    10. '\/\/' → logprob: -16.2502384185791

Token 433: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.9153885558771435e-06
    2. '(' → logprob: -12.375005722045898
    3. ' (' → logprob: -14.375005722045898
    4. '(next' → logprob: -15.000005722045898
    5. '   ' → logprob: -15.125005722045898
    6. '{i' → logprob: -16.0000057220459
    7. '(I' → logprob: -16.2500057220459
    8. '((' → logprob: -16.8750057220459
    9. '(ii' → logprob: -16.8750057220459
    10. '\(' → logprob: -17.2500057220459

Token 434: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.656383680412546e-05
    2. '(' → logprob: -10.875046730041504
    3. 'i' → logprob: -11.250046730041504
    4. ' (' → logprob: -11.500046730041504
    5. '{i' → logprob: -12.625046730041504
    6. '   ' → logprob: -14.750046730041504
    7. '[i' → logprob: -15.250046730041504
    8. '(next' → logprob: -15.875046730041504
    9. '{' → logprob: -16.375045776367188
    10. '(
' → logprob: -16.500045776367188

Token 435: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19763366878032684
    2. 'i' → logprob: -1.8226336240768433
    3. '+i' → logprob: -5.197633743286133
    4. '(i' → logprob: -5.572633743286133
    5. ' +' → logprob: -5.697633743286133
    6. '[i' → logprob: -5.947633743286133
    7. '   ' → logprob: -6.572633743286133
    8. '{i' → logprob: -7.322633743286133
    9. ' i' → logprob: -8.697633743286133
    10. ' ' → logprob: -9.822633743286133

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -15.875001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '{' → logprob: -17.500001907348633
    6. '<|end|>' → logprob: -17.875001907348633
    7. 'i' → logprob: -18.250001907348633
    8. '  ' → logprob: -18.562501907348633
    9. '[' → logprob: -18.625001907348633
    10. '
' → logprob: -18.812501907348633

Token 437: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9385402993066236e-05
    2. ' )' → logprob: -11.625019073486328
    3. ')
' → logprob: -12.000019073486328
    4. '<|end|>' → logprob: -13.750019073486328
    5. '   ' → logprob: -14.125019073486328
    6. '),' → logprob: -14.625019073486328
    7. '```' → logprob: -14.875019073486328
    8. ')#' → logprob: -15.250019073486328
    9. '1' → logprob: -15.375019073486328
    10. ')*' → logprob: -15.500019073486328

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19917738437652588
    2. '<|end|>' → logprob: -2.3241772651672363
    3. ' ' → logprob: -3.3241772651672363
    4. ')' → logprob: -3.5741772651672363
    5. '```' → logprob: -5.574177265167236
    6. '
' → logprob: -5.949177265167236
    7. '  ' → logprob: -6.074177265167236
    8. '    
' → logprob: -6.324177265167236
    9. ' 
' → logprob: -6.324177265167236
    10. '    ' → logprob: -6.449177265167236

Token 439: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.005632489454001188
    2. 'n' → logprob: -6.380632400512695
    3. 'for' → logprob: -6.505632400512695
    4. ' num' → logprob: -6.880632400512695
    5. '```' → logprob: -7.380632400512695
    6. '   ' → logprob: -8.005632400512695
    7. ')' → logprob: -8.505632400512695
    8. ' for' → logprob: -9.380632400512695
    9. '[num' → logprob: -10.130632400512695
    10. '0' → logprob: -10.255632400512695

Token 440: ' For' (ID: 2214)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -9.984787902794778e-05
    2. '#' → logprob: -9.750100135803223
    3. ' num' → logprob: -10.375100135803223
    4. 'for' → logprob: -11.750100135803223
    5. 'i' → logprob: -14.250100135803223
    6. 'n' → logprob: -14.750100135803223
    7. '```' → logprob: -14.875100135803223
    8. '
' → logprob: -15.125100135803223
    9. '   ' → logprob: -16.125099182128906
    10. 'For' → logprob: -16.375099182128906

Token 441: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11340475082397461
    2. ' i' → logprob: -2.2384047508239746
    3. 'n' → logprob: -8.238405227661133
    4. ' n' → logprob: -8.988405227661133
    5. ' ' → logprob: -9.738405227661133
    6. ' the' → logprob: -10.613405227661133
    7. 'j' → logprob: -11.113405227661133
    8. ' num' → logprob: -11.488405227661133
    9. '   ' → logprob: -11.488405227661133
    10. 'the' → logprob: -11.488405227661133

Token 442: ' ==' (ID: 951)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04339752346277237
    2. 'in' → logprob: -3.1683974266052246
    3. ' ' → logprob: -8.668397903442383
    4. 'n' → logprob: -8.793397903442383
    5. ',' → logprob: -10.793397903442383
    6. ' i' → logprob: -11.168397903442383
    7. 'i' → logprob: -11.793397903442383
    8. ' n' → logprob: -12.418397903442383
    9. '0' → logprob: -12.543397903442383
    10. '  ' → logprob: -12.543397903442383

Token 443: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005239087622612715
    2. ' n' → logprob: -5.255239009857178
    3. '   ' → logprob: -13.880239486694336
    4. ' ' → logprob: -13.880239486694336
    5. '1' → logprob: -14.380239486694336
    6. '(n' → logprob: -14.380239486694336
    7. '_n' → logprob: -14.505239486694336
    8. '0' → logprob: -14.505239486694336
    9. '	n' → logprob: -15.005239486694336
    10. 'range' → logprob: -15.630239486694336

Token 444: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3077510595321655
    2. ',' → logprob: -2.057751178741455
    3. ':
' → logprob: -2.057751178741455
    4. 'num' → logprob: -4.807751178741455
    5. '   ' → logprob: -7.432751178741455
    6. ':num' → logprob: -8.932750701904297
    7. '):
' → logprob: -9.182750701904297
    8. ',num' → logprob: -9.557750701904297
    9. ':

' → logprob: -9.682750701904297
    10. '=' → logprob: -9.682750701904297

Token 445: ' the' (ID: 290)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.18002495169639587
    2. ' num' → logprob: -1.8050249814987183
    3. '   ' → logprob: -8.305025100708008
    4. '
' → logprob: -11.430025100708008
    5. '	num' → logprob: -11.680025100708008
    6. '[num' → logprob: -12.430025100708008
    7. ' ' → logprob: -12.805025100708008
    8. '=num' → logprob: -13.930025100708008
    9. '```' → logprob: -14.055025100708008
    10. '    
' → logprob: -14.305025100708008

Token 446: ' previous' (ID: 5880)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.000997082912363112
    2. ' num' → logprob: -7.000997066497803
    3. '#' → logprob: -10.750997543334961
    4. 'remaining' → logprob: -10.875997543334961
    5. 'rest' → logprob: -11.500997543334961
    6. 'n' → logprob: -12.375997543334961
    7. ' remainder' → logprob: -12.500997543334961
    8. 'number' → logprob: -12.625997543334961
    9. ' remaining' → logprob: -13.125997543334961
    10. '```' → logprob: -13.125997543334961

Token 447: ' formula' (ID: 20690)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0008835955522954464
    2. 'value' → logprob: -7.62588357925415
    3. ' num' → logprob: -8.375884056091309
    4. 'i' → logprob: -10.500884056091309
    5. '#' → logprob: -10.875884056091309
    6. '
' → logprob: -11.125884056091309
    7. 'line' → logprob: -11.500884056091309
    8. 'count' → logprob: -11.750884056091309
    9. ' value' → logprob: -11.875884056091309
    10. ' =' → logprob: -12.000884056091309

Token 448: ' would' (ID: 1481)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1500948965549469
    2. '=' → logprob: -2.025094985961914
    3. ' num' → logprob: -5.400094985961914
    4. ':' → logprob: -6.900094985961914
    5. '=num' → logprob: -6.900094985961914
    6. ' =' → logprob: -7.900094985961914
    7. '[num' → logprob: -9.650094985961914
    8. '	num' → logprob: -10.150094985961914
    9. '_num' → logprob: -10.400094985961914
    10. ':num' → logprob: -10.400094985961914

Token 449: ' involve' (ID: 28726)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6153549551963806
    2. 'num' → logprob: -1.1153550148010254
    3. 'count' → logprob: -2.8653550148010254
    4. ' be' → logprob: -3.3653550148010254
    5. 'give' → logprob: -4.490355014801025
    6. '=' → logprob: -5.240355014801025
    7. 'calculate' → logprob: -5.240355014801025
    8. 'not' → logprob: -6.115355014801025
    9. 'assign' → logprob: -6.365355014801025
    10. 'include' → logprob: -6.490355014801025

Token 450: ' division' (ID: 21629)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14524661004543304
    2. ' N' → logprob: -2.6452465057373047
    3. 'num' → logprob: -2.8952465057373047
    4. 'n' → logprob: -5.520246505737305
    5. ' num' → logprob: -5.895246505737305
    6. '0' → logprob: -7.395246505737305
    7. 'all' → logprob: -8.145246505737305
    8. 'i' → logprob: -8.395246505737305
    9. 'the' → logprob: -8.520246505737305
    10. ' ' → logprob: -9.270246505737305

Token 451: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.786020040512085
    2. ' by' → logprob: -1.161020040512085
    3. ',' → logprob: -2.411020040512085
    4. '(N' → logprob: -3.286020040512085
    5. 'N' → logprob: -3.411020040512085
    6. '=' → logprob: -3.661020040512085
    7. '   ' → logprob: -3.786020040512085
    8. 'num' → logprob: -5.536020278930664
    9. ' N' → logprob: -5.661020278930664
    10. '(' → logprob: -6.786020278930664

Token 452: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27778366208076477
    2. '0' → logprob: -2.0277836322784424
    3. '(n' → logprob: -2.6527836322784424
    4. '1' → logprob: -3.6527836322784424
    5. ' n' → logprob: -5.5277838706970215
    6. 'zero' → logprob: -5.6527838706970215
    7. 'i' → logprob: -6.5277838706970215
    8. ' (' → logprob: -6.6527838706970215
    9. '(' → logprob: -6.7777838706970215
    10. 'N' → logprob: -7.4027838706970215

Token 453: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6783995628356934
    2. '+' → logprob: -1.0533995628356934
    3. '=' → logprob: -3.0533995628356934
    4. 'n' → logprob: -3.6783995628356934
    5. 'and' → logprob: -4.178399562835693
    6. 'num' → logprob: -4.553399562835693
    7. ' and' → logprob: -4.803399562835693
    8. '#' → logprob: -5.178399562835693
    9. '.' → logprob: -5.178399562835693
    10. 'plus' → logprob: -5.303399562835693

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001217813478433527
    2. '```' → logprob: -9.6251220703125
    3. ' ' → logprob: -11.1251220703125
    4. '<|end|>' → logprob: -11.2501220703125
    5. 'n' → logprob: -11.3751220703125
    6. '(' → logprob: -12.6251220703125
    7. ')' → logprob: -12.8751220703125
    8. '(n' → logprob: -13.6251220703125
    9. '
' → logprob: -13.8751220703125
    10. 'i' → logprob: -13.8751220703125

Token 455: ',' (ID: 11)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6004729270935059
    2. ',' → logprob: -0.8504729270935059
    3. ' num' → logprob: -4.600472927093506
    4. '=' → logprob: -5.600472927093506
    5. ' =' → logprob: -5.725472927093506
    6. ',
' → logprob: -6.350472927093506
    7. '   ' → logprob: -6.725472927093506
    8. ',num' → logprob: -6.725472927093506
    9. ':' → logprob: -6.850472927093506
    10. ' ,' → logprob: -7.475472927093506

Token 456: ' which' (ID: 1118)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.48945245146751404
    2. ' so' → logprob: -1.1144524812698364
    3. ' num' → logprob: -3.364452362060547
    4. 'so' → logprob: -3.989452362060547
    5. '   ' → logprob: -5.989452362060547
    6. ' but' → logprob: -6.864452362060547
    7. ' which' → logprob: -6.989452362060547
    8. 'which' → logprob: -7.364452362060547
    9. 'but' → logprob: -8.114452362060547
    10. '#' → logprob: -8.864452362060547

Token 457: ' might' (ID: 3572)
  Prédit: 'would'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'would' → logprob: -1.5051825046539307
    2. 'num' → logprob: -1.8801825046539307
    3. 'ex' → logprob: -2.1301825046539307
    4. 'is' → logprob: -2.2551825046539307
    5. '#' → logprob: -2.6301825046539307
    6. ' would' → logprob: -3.1301825046539307
    7. ' is' → logprob: -3.1301825046539307
    8. 'could' → logprob: -3.3801825046539307
    9. 'might' → logprob: -3.5051825046539307
    10. 'may' → logprob: -3.6301825046539307

Token 458: ' miss' (ID: 5141)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.9409907460212708
    2. 'not' → logprob: -1.315990686416626
    3. ' be' → logprob: -2.190990686416626
    4. 'ex' → logprob: -2.690990686416626
    5. 'cause' → logprob: -2.690990686416626
    6. ' not' → logprob: -3.065990686416626
    7. ' cause' → logprob: -3.940990686416626
    8. ' exceed' → logprob: -4.315990924835205
    9. 'overflow' → logprob: -5.565990924835205
    10. 'result' → logprob: -5.690990924835205

Token 459: ' some' (ID: 1236)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'some' → logprob: -0.5784413814544678
    2. 'the' → logprob: -1.9534413814544678
    3. 'N' → logprob: -2.0784413814544678
    4. ' some' → logprob: -2.3284413814544678
    5. ' the' → logprob: -3.7034413814544678
    6. 'numbers' → logprob: -4.203441619873047
    7. 'values' → logprob: -4.828441619873047
    8. ' N' → logprob: -5.078441619873047
    9. ' numbers' → logprob: -5.453441619873047
    10. 'num' → logprob: -5.703441619873047

Token 460: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.8017873167991638
    2. ' values' → logprob: -1.8017873764038086
    3. ' numbers' → logprob: -2.0517873764038086
    4. 'numbers' → logprob: -2.3017873764038086
    5. 'count' → logprob: -3.0517873764038086
    6. ' elements' → logprob: -3.5517873764038086
    7. 'elements' → logprob: -3.6767873764038086
    8. 'num' → logprob: -4.176787376403809
    9. ' part' → logprob: -4.426787376403809
    10. ' integers' → logprob: -5.176787376403809

Token 461: ',
' (ID: 412)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.21035261452198029
    2. '   ' → logprob: -1.9603526592254639
    3. ' num' → logprob: -3.335352659225464
    4. ',' → logprob: -4.835352420806885
    5. '=' → logprob: -5.835352420806885
    6. '=num' → logprob: -7.085352420806885
    7. ' =' → logprob: -7.710352420806885
    8. ',num' → logprob: -7.960352420806885
    9. '.' → logprob: -8.210352897644043
    10. '[num' → logprob: -8.710352897644043

Token 462: '   ' (ID: 271)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.6770681738853455
    2. 'num' → logprob: -0.8020681738853455
    3. '   ' → logprob: -3.1770682334899902
    4. ' so' → logprob: -6.55206823348999
    5. '    ' → logprob: -9.177067756652832
    6. ' ' → logprob: -9.802067756652832
    7. '	num' → logprob: -10.052067756652832
    8. '#' → logprob: -10.677067756652832
    9. 'so' → logprob: -11.052067756652832
    10. '    
' → logprob: -11.302067756652832

Token 463: ' #' (ID: 1069)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.07801016420125961
    2. 'so' → logprob: -2.828010082244873
    3. 'num' → logprob: -4.703010082244873
    4. ' num' → logprob: -5.703010082244873
    5. '   ' → logprob: -5.828010082244873
    6. '    
' → logprob: -9.578010559082031
    7. ')' → logprob: -9.578010559082031
    8. '#' (adapté à ' #') → logprob: -9.578010559082031
    9. ' and' → logprob: -10.078010559082031
    10. 'and' → logprob: -10.203010559082031

Token 464: ' so' (ID: 813)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.020655402913689613
    2. ' num' → logprob: -3.895655393600464
    3. ' so' → logprob: -9.895655632019043
    4. '   ' → logprob: -10.395655632019043
    5. '
' → logprob: -11.520655632019043
    6. 'so' → logprob: -11.645655632019043
    7. '#' → logprob: -12.145655632019043
    8. '	num' → logprob: -13.520655632019043
    9. '    
' → logprob: -14.395655632019043
    10. 'and' → logprob: -14.395655632019043

Token 465: ' we' (ID: 581)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.09804414212703705
    2. ' num' → logprob: -2.5980441570281982
    3. '   ' → logprob: -3.9730441570281982
    4. '
' → logprob: -9.598044395446777
    5. '	num' → logprob: -10.348044395446777
    6. '#' → logprob: -11.223044395446777
    7. '```' → logprob: -11.848044395446777
    8. '    
' → logprob: -11.848044395446777
    9. '  ' → logprob: -12.473044395446777
    10. '[num' → logprob: -12.598044395446777

Token 466: ' handle' (ID: 5318)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6071345210075378
    2. 'num' → logprob: -0.8571345210075378
    3. ' num' → logprob: -4.2321343421936035
    4. ' =' → logprob: -5.9821343421936035
    5. 'set' → logprob: -6.3571343421936035
    6. '=num' → logprob: -6.4821343421936035
    7. '[num' → logprob: -6.4821343421936035
    8. '   ' → logprob: -6.7321343421936035
    9. '+=' → logprob: -6.7321343421936035
    10. 's' → logprob: -6.8571343421936035

Token 467: ' it' (ID: 480)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.10641711950302124
    2. 'the' → logprob: -3.106417179107666
    3. 'it' → logprob: -3.356417179107666
    4. ' num' → logprob: -4.856417179107666
    5. ' it' → logprob: -5.106417179107666
    6. ' the' → logprob: -5.606417179107666
    7. 'that' → logprob: -6.481417179107666
    8. 'this' → logprob: -6.981417179107666
    9. ' that' → logprob: -7.856417179107666
    10. 'n' → logprob: -7.856417179107666

Token 468: ' specially' (ID: 43343)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.35208365321159363
    2. ' num' → logprob: -1.602083683013916
    3. '   ' → logprob: -2.977083683013916
    4. ' separately' → logprob: -4.352083683013916
    5. ' by' → logprob: -4.727083683013916
    6. ' the' → logprob: -5.227083683013916
    7. '=' → logprob: -5.352083683013916
    8. ' as' → logprob: -5.977083683013916
    9. 'by' → logprob: -6.477083683013916
    10. 'the' → logprob: -6.852083683013916

Token 469: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01196996308863163
    2. ':' → logprob: -5.011970043182373
    3. 'num' → logprob: -5.511970043182373
    4. ':
' → logprob: -7.636970043182373
    5. ' num' → logprob: -8.011969566345215
    6. '.' → logprob: -9.261969566345215
    7. '.
' → logprob: -9.511969566345215
    8. ',' → logprob: -10.136969566345215
    9. '    
' → logprob: -10.511969566345215
    10. ' =' → logprob: -10.636969566345215

Token 470: '   ' (ID: 271)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.04051541909575462
    2. '   ' → logprob: -3.540515422821045
    3. ' num' → logprob: -4.540515422821045
    4. '```' → logprob: -10.915514945983887
    5. '[num' → logprob: -11.790514945983887
    6. ' ' → logprob: -11.915514945983887
    7. '	num' → logprob: -12.415514945983887
    8. '  ' → logprob: -14.040514945983887
    9. '_num' → logprob: -15.165514945983887
    10. '
' → logprob: -15.165514945983887

Token 471: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.001839633216150105
    2. ' num' → logprob: -6.501839637756348
    3. '   ' → logprob: -8.001839637756348
    4. '```' → logprob: -13.501839637756348
    5. '	num' → logprob: -15.126839637756348
    6. '[num' → logprob: -15.376839637756348
    7. ' ' → logprob: -15.501839637756348
    8. '
' → logprob: -15.876839637756348
    9. '``' → logprob: -16.87683868408203
    10. '_num' → logprob: -16.87683868408203

Token 472: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.968312951968983e-06
    2. '[' → logprob: -12.000009536743164
    3. '[i' → logprob: -13.125009536743164
    4. ' [' → logprob: -15.000009536743164
    5. '\[' → logprob: -15.250009536743164
    6. '[-' → logprob: -15.625009536743164
    7. '[
' → logprob: -15.625009536743164
    8. '[num' → logprob: -15.875009536743164
    9. '=' → logprob: -16.125009536743164
    10. '```' → logprob: -16.125009536743164

Token 473: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012570773833431304
    2. ']=' → logprob: -9.000125885009766
    3. '=' → logprob: -13.375125885009766
    4. ')' → logprob: -15.375125885009766
    5. ' ]' → logprob: -15.500125885009766
    6. ']=(' → logprob: -15.875125885009766
    7. ']
' → logprob: -16.625125885009766
    8. ']+=' → logprob: -17.375125885009766
    9. ']

' → logprob: -18.000125885009766
    10. '`]' → logprob: -19.250125885009766

Token 474: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815134845674038
    2. ' =' → logprob: -4.01815128326416
    3. '=N' → logprob: -13.51815128326416
    4. '＝' → logprob: -17.268152236938477
    5. '+=' → logprob: -17.768152236938477
    6. '.=' → logprob: -17.768152236938477
    7. '=

' → logprob: -18.018152236938477
    8. '=
' → logprob: -18.393152236938477
    9. ' ' → logprob: -18.768152236938477
    10. ' +=' → logprob: -19.268152236938477

Token 475: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0008190384833142161
    2. ' N' → logprob: -7.125819206237793
    3. ' ' → logprob: -11.375819206237793
    4. '   ' → logprob: -13.375819206237793
    5. '  ' → logprob: -13.875819206237793
    6. '(N' → logprob: -15.125819206237793
    7. '	N' → logprob: -16.500818252563477
    8. 'n' → logprob: -16.500818252563477
    9. '    ' → logprob: -16.625818252563477
    10. ' (' → logprob: -16.750818252563477

Token 476: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1798822432756424
    2. '//' → logprob: -1.804882287979126
    3. ' ' → logprob: -9.179882049560547
    4. '   ' → logprob: -11.304882049560547
    5. '
' → logprob: -12.554882049560547
    6. '```' → logprob: -12.804882049560547
    7. '  ' → logprob: -12.929882049560547
    8. '    ' → logprob: -12.929882049560547
    9. ' ' → logprob: -12.929882049560547
    10. '#' → logprob: -13.179882049560547

Token 477: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00026646157493814826
    2. ' n' → logprob: -8.500266075134277
    3. '(n' → logprob: -10.000266075134277
    4. '(' → logprob: -11.000266075134277
    5. '_n' → logprob: -14.750266075134277
    6. '	n' → logprob: -14.875266075134277
    7. ' (' → logprob: -15.750266075134277
    8. '.n' → logprob: -18.062767028808594
    9. ' ' → logprob: -18.437767028808594
    10. '```' → logprob: -18.500267028808594

Token 478: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.040613286197185516
    2. ' +' → logprob: -3.2906131744384766
    3. ' -' → logprob: -6.915613174438477
    4. '-' → logprob: -7.915613174438477
    5. '
' → logprob: -7.915613174438477
    6. '   ' → logprob: -7.915613174438477
    7. '+
' → logprob: -8.665613174438477
    8. '```' → logprob: -9.290613174438477
    9. ')' → logprob: -10.040613174438477
    10. '+n' → logprob: -10.165613174438477

Token 479: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33935824036598206
    2. 'N' → logprob: -1.4643582105636597
    3. '1' → logprob: -3.714358329772949
    4. '(N' → logprob: -3.839358329772949
    5. '(n' → logprob: -5.464358329772949
    6. '(' → logprob: -5.839358329772949
    7. 'n' → logprob: -5.964358329772949
    8. ' (' → logprob: -8.08935832977295
    9. ' ' → logprob: -8.08935832977295
    10. ' N' → logprob: -8.83935832977295

Token 480: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.032239072024822235
    2. ' +' → logprob: -4.157238960266113
    3. '<|end|>' → logprob: -4.407238960266113
    4. '
' → logprob: -6.657238960266113
    5. ')' → logprob: -7.407238960266113
    6. '*' → logprob: -8.407238960266113
    7. '```' → logprob: -8.407238960266113
    8. '   ' → logprob: -8.782238960266113
    9. '0' → logprob: -8.782238960266113
    10. '<|end|>' → logprob: -8.907238960266113

Token 481: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.008755087852478
    2. '<|end|>' → logprob: -1.008755087852478
    3. '   ' → logprob: -1.633755087852478
    4. '
' → logprob: -2.7587552070617676
    5. ':' → logprob: -5.508755207061768
    6. ' for' → logprob: -6.633755207061768
    7. '+' → logprob: -6.758755207061768
    8. '\n' → logprob: -7.008755207061768
    9. '<|end|>' → logprob: -7.133755207061768
    10. '```' → logprob: -7.258755207061768

Token 482: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8576409220695496
    2. '   ' → logprob: -0.9826409220695496
    3. ' for' → logprob: -1.6076409816741943
    4. '
' → logprob: -7.607640743255615
    5. '<|end|>' → logprob: -8.607641220092773
    6. '    
' → logprob: -8.857641220092773
    7. ')' → logprob: -9.607641220092773
    8. ' ' → logprob: -10.107641220092773
    9. '\n' → logprob: -10.232641220092773
    10. '  ' → logprob: -10.232641220092773

Token 483: ' Begin' (ID: 32775)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016316171968355775
    2. ' for' → logprob: -7.001631736755371
    3. '   ' → logprob: -7.251631736755371
    4. '#' → logprob: -12.126631736755371
    5. 'def' → logprob: -13.376631736755371
    6. '
' → logprob: -14.001631736755371
    7. 'from' → logprob: -14.251631736755371
    8. '```' → logprob: -14.376631736755371
    9. '    
' → logprob: -14.626631736755371
    10. 'dp' → logprob: -15.501631736755371

Token 484: ' DP' (ID: 51992)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12294279038906097
    2. 'for' → logprob: -2.3729426860809326
    3. '   ' → logprob: -3.9979426860809326
    4. ' i' → logprob: -6.247942924499512
    5. ' K' → logprob: -7.122942924499512
    6. ' ' → logprob: -7.497942924499512
    7. ' range' → logprob: -7.872942924499512
    8. '	for' → logprob: -8.372942924499512
    9. 'range' → logprob: -10.122942924499512
    10. '    ' → logprob: -10.247942924499512

Token 485: ' transitions' (ID: 59824)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6244938373565674
    2. 'for' → logprob: -0.8744938373565674
    3. '   ' → logprob: -3.1244938373565674
    4. '
' → logprob: -5.749493598937988
    5. '	for' → logprob: -8.999493598937988
    6. '    
' → logprob: -10.124493598937988
    7. '<|end|>' → logprob: -10.499493598937988
    8. ' 
' → logprob: -11.749493598937988
    9. ' ' → logprob: -11.749493598937988
    10. '  
' → logprob: -11.874493598937988

Token 486: ';' (ID: 26)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7654577493667603
    2. '
' → logprob: -1.1404577493667603
    3. ' for' → logprob: -1.6404577493667603
    4. '   ' → logprob: -3.8904576301574707
    5. '	for' → logprob: -8.640458106994629
    6. '<|end|>' → logprob: -8.640458106994629
    7. '    
' → logprob: -9.015458106994629
    8. '```' → logprob: -9.015458106994629
    9. '\n' → logprob: -9.265458106994629
    10. '  
' → logprob: -10.140458106994629

Token 487: ' repeat' (ID: 22962)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22577735781669617
    2. 'for' → logprob: -1.6007773876190186
    3. '   ' → logprob: -7.9757771492004395
    4. '	for' → logprob: -10.975777626037598
    5. ' 
' → logprob: -14.225777626037598
    6. '```' → logprob: -14.225777626037598
    7. ' ' → logprob: -14.475777626037598
    8. ' i' → logprob: -14.475777626037598
    9. '
' → logprob: -14.600777626037598
    10. '    ' → logprob: -15.225777626037598

Token 488: ' K' (ID: 658)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14320605993270874
    2. 'for' → logprob: -2.3932061195373535
    3. ' K' → logprob: -3.2682061195373535
    4. '   ' → logprob: -6.3932061195373535
    5. 'K' → logprob: -7.0182061195373535
    6. ' ' → logprob: -7.1432061195373535
    7. '_' → logprob: -8.768205642700195
    8. '    ' → logprob: -9.268205642700195
    9. ' i' → logprob: -9.393205642700195
    10. '	for' → logprob: -9.518205642700195

Token 489: ' times' (ID: 4238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3124106824398041
    2. ' for' → logprob: -1.8124107122421265
    3. '+' → logprob: -3.312410593032837
    4. '<|end|>' → logprob: -3.812410593032837
    5. ':' → logprob: -4.187410831451416
    6. '_' → logprob: -4.937410831451416
    7. ' ' → logprob: -4.937410831451416
    8. '   ' → logprob: -4.937410831451416
    9. ')' → logprob: -6.187410831451416
    10. '	for' → logprob: -6.812410831451416

Token 490: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027976643294095993
    2. ' for' → logprob: -3.7779767513275146
    3. 'for' → logprob: -5.5279765129089355
    4. '
' → logprob: -8.152976989746094
    5. '<|end|>' → logprob: -8.652976989746094
    6. '    
' → logprob: -9.152976989746094
    7. ':' → logprob: -9.527976989746094
    8. '	for' → logprob: -10.027976989746094
    9. '.' → logprob: -11.027976989746094
    10. ',' → logprob: -11.027976989746094

Token 491: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40407857298851013
    2. 'for' → logprob: -1.1540786027908325
    3. '   ' → logprob: -4.404078483581543
    4. '
' → logprob: -7.279078483581543
    5. ' and' → logprob: -7.404078483581543
    6. '    
' → logprob: -7.404078483581543
    7. ' 
' → logprob: -7.529078483581543
    8. ' i' → logprob: -7.779078483581543
    9. '    ' → logprob: -8.404078483581543
    10. ' as' → logprob: -8.529078483581543

Token 492: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3497770428657532
    2. ' i' → logprob: -1.2247769832611084
    3. 'k' → logprob: -7.2247772216796875
    4. '_' → logprob: -8.349777221679688
    5. ' k' → logprob: -8.849777221679688
    6. '_i' → logprob: -9.474777221679688
    7. ' _' → logprob: -9.849777221679688
    8. '	i' → logprob: -10.849777221679688
    9. 'j' → logprob: -11.224777221679688
    10. '```' → logprob: -11.349777221679688

Token 493: ' stage' (ID: 9402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34905222058296204
    2. ' i' → logprob: -1.2240521907806396
    3. 'k' → logprob: -8.099052429199219
    4. 'j' → logprob: -9.224052429199219
    5. ' k' → logprob: -9.849052429199219
    6. '_i' → logprob: -9.849052429199219
    7. ' j' → logprob: -10.224052429199219
    8. ' _' → logprob: -11.349052429199219
    9. '	i' → logprob: -11.349052429199219
    10. '_' → logprob: -11.599052429199219

Token 494: ' of' (ID: 328)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5641752481460571
    2. ' i' → logprob: -1.0641752481460571
    3. ' in' → logprob: -2.9391751289367676
    4. 'i' → logprob: -4.189175128936768
    5. 'for' → logprob: -4.439175128936768
    6. '   ' → logprob: -5.314175128936768
    7. ':' → logprob: -7.814175128936768
    8. '```' → logprob: -8.314175605773926
    9. ',' → logprob: -8.939175605773926
    10. 'in' → logprob: -9.064175605773926

Token 495: ' the' (ID: 290)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31796273589134216
    2. ' range' → logprob: -1.8179627656936646
    3. 'i' → logprob: -2.317962646484375
    4. ' i' → logprob: -4.942962646484375
    5. '_' → logprob: -6.442962646484375
    6. 'k' → logprob: -7.442962646484375
    7. ' the' → logprob: -7.442962646484375
    8. 'the' → logprob: -7.817962646484375
    9. ')' → logprob: -8.317962646484375
    10. ' in' → logprob: -9.192962646484375

Token 496: ' process' (ID: 2273)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.432292640209198
    2. 'range' → logprob: -1.0572926998138428
    3. 'K' → logprob: -6.182292461395264
    4. ' K' → logprob: -7.432292461395264
    5. ' in' → logprob: -7.932292461395264
    6. 'dp' → logprob: -8.932292938232422
    7. ' for' → logprob: -9.432292938232422
    8. 'i' → logprob: -9.682292938232422
    9. 'for' → logprob: -9.682292938232422
    10. ' ' → logprob: -9.807292938232422

Token 497: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14435382187366486
    2. ':' → logprob: -2.8943538665771484
    3. ' for' → logprob: -3.0193538665771484
    4. '
' → logprob: -4.269353866577148
    5. 'for' → logprob: -4.769353866577148
    6. ':
' → logprob: -5.394353866577148
    7. ',' → logprob: -6.519353866577148
    8. '<|end|>' → logprob: -7.019353866577148
    9. '    
' → logprob: -8.394353866577148
    10. '```' → logprob: -8.769353866577148

Token 498: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15388734638690948
    2. '   ' → logprob: -2.4038872718811035
    3. 'for' → logprob: -3.1538872718811035
    4. '
' → logprob: -5.4038872718811035
    5. '    
' → logprob: -6.2788872718811035
    6. ' 
' → logprob: -6.4038872718811035
    7. '```' → logprob: -7.0288872718811035
    8. '  
' → logprob: -8.528887748718262
    9. '	for' → logprob: -8.903887748718262
    10. '\n' → logprob: -9.153887748718262

Token 499: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5698635578155518
    2. '   ' → logprob: -0.9448635578155518
    3. 'for' (adapté à ' for') → logprob: -3.6948635578155518
    4. '
' → logprob: -4.069863319396973
    5. '	for' → logprob: -6.694863319396973
    6. '```' → logprob: -7.069863319396973
    7. '    
' → logprob: -7.194863319396973
    8. ' 
' → logprob: -7.569863319396973
    9. '  
' → logprob: -8.819863319396973
    10. '\n' → logprob: -9.444863319396973

Token 500: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47417837381362915
    2. ' i' → logprob: -1.2241783142089844
    3. 'k' → logprob: -2.7241783142089844
    4. ' k' → logprob: -4.099178314208984
    5. ' stage' → logprob: -7.849178314208984
    6. '_i' → logprob: -8.224178314208984
    7. '_' → logprob: -8.474178314208984
    8. 'stage' → logprob: -8.849178314208984
    9. ' _' → logprob: -9.349178314208984
    10. 'j' → logprob: -9.724178314208984

Token 501: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07900887727737427
    2. 'in' → logprob: -2.5790088176727295
    3. ' ' → logprob: -9.954009056091309
    4. '	in' → logprob: -9.954009056091309
    5. '1' → logprob: -11.454009056091309
    6. '0' → logprob: -12.829009056091309
    7. ',' → logprob: -13.329009056091309
    8. '   ' → logprob: -13.329009056091309
    9. '[' → logprob: -13.829009056091309
    10. ')' → logprob: -13.954009056091309

Token 502: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5761191844940186
    2. ' range' → logprob: -0.8261191844940186
    3. ' in' → logprob: -8.951119422912598
    4. 'in' → logprob: -10.076119422912598
    5. ' ' → logprob: -11.951119422912598
    6. '1' → logprob: -14.826119422912598
    7. '(range' → logprob: -14.951119422912598
    8. ')' → logprob: -15.076119422912598
    9. '	range' → logprob: -15.451119422912598
    10. '   ' → logprob: -16.32611846923828

Token 503: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.94859778881073
    2. '(K' → logprob: -0.94859778881073
    3. '1' → logprob: -2.1985979080200195
    4. 'K' → logprob: -2.1985979080200195
    5. ' K' → logprob: -5.6985979080200195
    6. ' (' → logprob: -9.57359790802002
    7. '(
' → logprob: -10.57359790802002
    8. ' ' → logprob: -11.32359790802002
    9. ' in' → logprob: -11.32359790802002
    10. 'in' → logprob: -11.32359790802002

Token 504: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4297168552875519
    2. '):
' → logprob: -1.1797168254852295
    3. '+' → logprob: -3.1797168254852295
    4. ' +' → logprob: -8.554717063903809
    5. '   ' → logprob: -9.804717063903809
    6. '-' → logprob: -10.429717063903809
    7. '):
' → logprob: -10.679717063903809
    8. ' ):' → logprob: -11.429717063903809
    9. '1' → logprob: -11.554717063903809
    10. ':' → logprob: -12.054717063903809

Token 505: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.678965151309967
    2. '   ' → logprob: -1.0539650917053223
    3. '       ' → logprob: -2.0539650917053223
    4. 'for' → logprob: -4.178965091705322
    5. '    ' → logprob: -8.05396556854248
    6. '	for' → logprob: -8.55396556854248
    7. '	   ' → logprob: -9.67896556854248
    8. '```' → logprob: -9.92896556854248
    9. ' ' → logprob: -10.55396556854248
    10. '    
' → logprob: -10.80396556854248

Token 506: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04951844364404678
    2. ' for' → logprob: -3.299518346786499
    3. '   ' → logprob: -4.549518585205078
    4. '       ' → logprob: -7.799518585205078
    5. 'j' → logprob: -8.924518585205078
    6. 's' → logprob: -9.174518585205078
    7. 'sum' → logprob: -10.049518585205078
    8. 'prefix' → logprob: -10.674518585205078
    9. 'cum' → logprob: -10.799518585205078
    10. '	for' → logprob: -11.174518585205078

Token 507: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00030948311905376613
    2. '   ' → logprob: -9.375309944152832
    3. 's' → logprob: -10.125309944152832
    4. 'acc' → logprob: -10.250309944152832
    5. 'prefix' → logprob: -10.250309944152832
    6. ' for' → logprob: -10.375309944152832
    7. 'j' → logprob: -10.500309944152832
    8. 'c' → logprob: -11.625309944152832
    9. 'cum' → logprob: -11.625309944152832
    10. 'sum' → logprob: -11.750309944152832

Token 508: ' efficiency' (ID: 17456)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0160469189286232
    2. ' j' → logprob: -4.14104700088501
    3. 'k' → logprob: -12.016046524047852
    4. 'x' → logprob: -12.766046524047852
    5. 'a' → logprob: -14.391046524047852
    6. 'v' → logprob: -14.516046524047852
    7. '_j' → logprob: -14.516046524047852
    8. '```' → logprob: -15.016046524047852
    9. '	j' → logprob: -15.516046524047852
    10. '   ' → logprob: -15.766046524047852

Token 509: ',' (ID: 11)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4172550141811371
    2. ' in' → logprob: -1.2922550439834595
    3. 'j' → logprob: -2.91725492477417
    4. ' for' → logprob: -4.91725492477417
    5. '   ' → logprob: -5.66725492477417
    6. ',' → logprob: -7.29225492477417
    7. 'for' → logprob: -8.042255401611328
    8. ')' → logprob: -8.542255401611328
    9. ' ' → logprob: -8.667255401611328
    10. 'in' → logprob: -9.917255401611328

Token 510: ' alias' (ID: 26026)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35152095556259155
    2. ' for' → logprob: -1.2265210151672363
    3. 'j' → logprob: -5.851521015167236
    4. ' j' → logprob: -9.226520538330078
    5. '   ' → logprob: -9.601520538330078
    6. '       ' → logprob: -11.101520538330078
    7. '	for' → logprob: -12.476520538330078
    8. ' ' → logprob: -12.976520538330078
    9. '    ' → logprob: -12.976520538330078
    10. ')' → logprob: -14.476520538330078

Token 511: '/s' (ID: 5031)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4409705400466919
    2. 'cur' → logprob: -2.0659704208374023
    3. 'curr' → logprob: -2.8159704208374023
    4. 'row' → logprob: -2.9409704208374023
    5. 'current' → logprob: -3.3159704208374023
    6. 'prev' → logprob: -3.5659704208374023
    7. ' row' → logprob: -4.065970420837402
    8. ' dp' → logprob: -4.190970420837402
    9. ' current' → logprob: -5.190970420837402
    10. '       ' → logprob: -5.565970420837402

Token 512: 'lice' (ID: 7321)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9930614233016968
    2. 'et' → logprob: -1.3680614233016968
    3. 'ys' → logprob: -2.2430615425109863
    4. 't' → logprob: -2.6180615425109863
    5. 'ub' → logprob: -3.3680615425109863
    6. '_' → logprob: -3.4930615425109863
    7. '_=' → logprob: -3.9930615425109863
    8. 'y' → logprob: -4.118061542510986
    9. '=' → logprob: -4.243061542510986
    10. 'td' → logprob: -4.368061542510986

Token 513: ' two' (ID: 1920)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1737123429775238
    2. 'row' → logprob: -2.2987122535705566
    3. 'cur' → logprob: -4.298712253570557
    4. ' dp' → logprob: -4.548712253570557
    5. ' row' → logprob: -4.798712253570557
    6. 'for' → logprob: -4.923712253570557
    7. 'current' → logprob: -5.548712253570557
    8. 'prev' → logprob: -5.548712253570557
    9. '=' → logprob: -5.798712253570557
    10. 'curr' → logprob: -6.048712253570557

Token 514: ' parts' (ID: 7881)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.29722166061401367
    2. ' dp' → logprob: -2.6722216606140137
    3. ' lines' → logprob: -2.7972216606140137
    4. 'rows' → logprob: -3.1722216606140137
    5. ' rows' → logprob: -3.1722216606140137
    6. ' for' → logprob: -4.547221660614014
    7. ' layers' → logprob: -4.922221660614014
    8. 'layers' → logprob: -4.922221660614014
    9. 'lines' → logprob: -5.672221660614014
    10. 'for' → logprob: -5.672221660614014

Token 515: ' of' (ID: 328)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37582001090049744
    2. '(dp' → logprob: -1.6258200407028198
    3. ' dp' → logprob: -3.5008199214935303
    4. '=' → logprob: -3.7508199214935303
    5. ' =' → logprob: -3.7508199214935303
    6. '   ' → logprob: -3.8758199214935303
    7. ' of' → logprob: -4.500820159912109
    8. '_dp' → logprob: -6.125820159912109
    9. '       ' → logprob: -6.250820159912109
    10. 'of' → logprob: -6.375820159912109

Token 516: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012634899467229843
    2. ' dp' → logprob: -4.387634754180908
    3. 'the' → logprob: -9.637635231018066
    4. ' the' → logprob: -10.262635231018066
    5. '(dp' → logprob: -11.262635231018066
    6. '
' → logprob: -12.512635231018066
    7. 'range' → logprob: -13.012635231018066
    8. '   ' → logprob: -13.387635231018066
    9. '	dp' → logprob: -13.512635231018066
    10. ' ' → logprob: -13.637635231018066

Token 517: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0013767797499895096
    2. ' dp' → logprob: -6.626376628875732
    3. 'range' → logprob: -10.62637710571289
    4. '[' → logprob: -12.50137710571289
    5. 'for' → logprob: -12.75137710571289
    6. '   ' → logprob: -12.87637710571289
    7. 'num' → logprob: -13.00137710571289
    8. 'd' → logprob: -13.12637710571289
    9. '```' → logprob: -13.25137710571289
    10. 'prev' → logprob: -13.25137710571289

Token 518: ' row' (ID: 5225)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.5812770128250122
    2. ' =' → logprob: -2.0812768936157227
    3. 'row' → logprob: -2.5812768936157227
    4. '   ' → logprob: -2.5812768936157227
    5. '_row' → logprob: -2.5812768936157227
    6. '=' → logprob: -2.7062768936157227
    7. ' for' → logprob: -2.9562768936157227
    8. ' dp' → logprob: -2.9562768936157227
    9. '[i' → logprob: -3.0812768936157227
    10. '_current' → logprob: -3.5812768936157227

Token 519: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18076886236667633
    2. '=' → logprob: -2.9307689666748047
    3. 'dp' → logprob: -2.9307689666748047
    4. '   ' → logprob: -3.9307689666748047
    5. ' dp' → logprob: -4.305768966674805
    6. '       ' → logprob: -4.555768966674805
    7. ' for' → logprob: -6.180768966674805
    8. ',' → logprob: -6.430768966674805
    9. '0' → logprob: -6.555768966674805
    10. ':' → logprob: -6.805768966674805

Token 520: ' cs' (ID: 14980)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.24048244953155518
    2. 'dp' → logprob: -1.6154824495315552
    3. ' prev' → logprob: -5.615482330322266
    4. ' current' → logprob: -6.365482330322266
    5. 'prev' → logprob: -6.615482330322266
    6. '   ' → logprob: -6.990482330322266
    7. ' row' → logprob: -7.115482330322266
    8. ' curr' → logprob: -7.240482330322266
    9. ' cur' → logprob: -7.365482330322266
    10. ' j' → logprob: -7.365482330322266

Token 521: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08590687066316605
    2. '=' → logprob: -3.085906982421875
    3. ',' → logprob: -4.335906982421875
    4. '   ' → logprob: -4.585906982421875
    5. '0' → logprob: -5.960906982421875
    6. '1' → logprob: -6.210906982421875
    7. 'dp' → logprob: -6.335906982421875
    8. 't' → logprob: -6.460906982421875
    9. ' ' → logprob: -6.585906982421875
    10. 'um' → logprob: -7.210906982421875

Token 522: ' cs' (ID: 14980)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09913338720798492
    2. 'cs' → logprob: -2.5991334915161133
    3. ' dp' → logprob: -5.224133491516113
    4. 'ns' → logprob: -5.849133491516113
    5. 'prev' → logprob: -6.474133491516113
    6. 'c' → logprob: -6.599133491516113
    7. '   ' → logprob: -6.849133491516113
    8. 'ct' → logprob: -7.224133491516113
    9. 'cc' → logprob: -7.349133491516113
    10. 'next' → logprob: -7.599133491516113

Token 523: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10967285186052322
    2. ' =' → logprob: -2.484672784805298
    3. '1' → logprob: -4.984673023223877
    4. 's' → logprob: -5.859673023223877
    5. '_next' → logprob: -6.234673023223877
    6. '2' → logprob: -6.734673023223877
    7. '   ' → logprob: -6.859673023223877
    8. '_' → logprob: -6.984673023223877
    9. '+' → logprob: -7.109673023223877
    10. '0' → logprob: -7.359673023223877

Token 524: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038441915065050125
    2. '=' → logprob: -3.2884418964385986
    3. '   ' → logprob: -8.78844165802002
    4. '    ' → logprob: -9.66344165802002
    5. ',' → logprob: -10.16344165802002
    6. '       ' → logprob: -10.28844165802002
    7. ' ' → logprob: -10.53844165802002
    8. '0' → logprob: -11.03844165802002
    9. '1' → logprob: -11.28844165802002
    10. ' =
' → logprob: -11.78844165802002

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023951753973960876
    2. ' =' → logprob: -4.773951530456543
    3. '=' → logprob: -5.523951530456543
    4. '	' → logprob: -5.648951530456543
    5. '[' → logprob: -6.398951530456543
    6. '        ' → logprob: -7.148951530456543
    7. '   ' → logprob: -7.398951530456543
    8. '        
' → logprob: -7.648951530456543
    9. ' ' → logprob: -7.773951530456543
    10. ' for' → logprob: -7.773951530456543

Token 526: ' #' (ID: 1069)
  Prédit: ' cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cs' → logprob: -0.48023033142089844
    2. 'cs' → logprob: -0.9802303314208984
    3. '       ' → logprob: -5.355230331420898
    4. 'dp' → logprob: -7.605230331420898
    5. ' dp' → logprob: -8.355230331420898
    6. '   ' → logprob: -8.730230331420898
    7. '	cs' → logprob: -9.355230331420898
    8. 's' → logprob: -9.480230331420898
    9. '(cs' → logprob: -9.730230331420898
    10. '[' → logprob: -10.105230331420898

Token 527: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.30764099955558777
    2. ' cs' → logprob: -1.4326410293579102
    3. '       ' → logprob: -3.80764102935791
    4. '   ' → logprob: -5.80764102935791
    5. '	cs' → logprob: -7.80764102935791
    6. ' for' → logprob: -8.55764102935791
    7. 'for' → logprob: -9.18264102935791
    8. '_cs' → logprob: -9.93264102935791
    9. ' ' → logprob: -10.30764102935791
    10. '    ' → logprob: -10.55764102935791

Token 528: ' will' (ID: 738)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08287286758422852
    2. '=' → logprob: -2.5828728675842285
    3. ',' → logprob: -5.5828728675842285
    4. ' ,' → logprob: -9.83287239074707
    5. '   ' → logprob: -10.33287239074707
    6. ' ' → logprob: -10.45787239074707
    7. '1' → logprob: -10.70787239074707
    8. '    ' → logprob: -11.33287239074707
    9. 's' → logprob: -11.58287239074707
    10. '[' → logprob: -11.70787239074707

Token 529: ' point' (ID: 2438)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11553721874952316
    2. ' =' → logprob: -2.240537166595459
    3. 'dp' → logprob: -6.990537166595459
    4. '[' → logprob: -7.740537166595459
    5. ' dp' → logprob: -7.865537166595459
    6. ' be' → logprob: -8.490537643432617
    7. 'cs' → logprob: -8.865537643432617
    8. '=input' → logprob: -8.990537643432617
    9. 'range' → logprob: -9.115537643432617
    10. '=[' → logprob: -9.615537643432617

Token 530: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009216801263391972
    2. 'to' → logprob: -5.259216785430908
    3. ' to' → logprob: -5.884216785430908
    4. ' =' → logprob: -6.759216785430908
    5. 'dp' → logprob: -11.009217262268066
    6. '=
' → logprob: -11.884217262268066
    7. ' dp' → logprob: -12.259217262268066
    8. ' ' → logprob: -14.884217262268066
    9. '	to' → logprob: -15.009217262268066
    10. '_dp' → logprob: -15.134217262268066

Token 531: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.033653419464826584
    2. ' dp' → logprob: -3.408653497695923
    3. '   ' → logprob: -12.658653259277344
    4. '	dp' → logprob: -13.033653259277344
    5. '(dp' → logprob: -14.158653259277344
    6. ' ' → logprob: -15.158653259277344
    7. '
' → logprob: -15.533653259277344
    8. 'the' → logprob: -15.533653259277344
    9. ' the' → logprob: -15.908653259277344
    10. 'd' → logprob: -16.033653259277344

Token 532: ' first' (ID: 1577)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016200585290789604
    2. ' dp' → logprob: -4.516200542449951
    3. 'current' → logprob: -5.641200542449951
    4. ' current' → logprob: -7.141200542449951
    5. 'previous' → logprob: -8.51620101928711
    6. 'i' → logprob: -8.76620101928711
    7. '   ' → logprob: -9.26620101928711
    8. 'next' → logprob: -9.64120101928711
    9. '`' → logprob: -9.89120101928711
    10. 'prev' → logprob: -10.01620101928711

Token 533: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8132048845291138
    2. 'n' → logprob: -2.188204765319824
    3. ' n' → logprob: -2.313204765319824
    4. ' dp' → logprob: -2.438204765319824
    5. 'i' → logprob: -2.813204765319824
    6. ' i' → logprob: -2.813204765319824
    7. ' [' → logprob: -3.563204765319824
    8. '[i' → logprob: -3.813204765319824
    9. ']' → logprob: -4.438204765319824
    10. '[' → logprob: -4.813204765319824

Token 534: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04348369315266609
    2. ' +' → logprob: -3.4184837341308594
    3. ']' → logprob: -5.543483734130859
    4. ' ' → logprob: -6.793483734130859
    5. ')' → logprob: -6.918483734130859
    6. '   ' → logprob: -7.293483734130859
    7. '    ' → logprob: -7.543483734130859
    8. '1' → logprob: -8.41848373413086
    9. '[' → logprob: -8.54348373413086
    10. '```' → logprob: -8.54348373413086

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007030184497125447
    2. ' ' → logprob: -7.375702857971191
    3. 'n' → logprob: -9.625702857971191
    4. ' n' → logprob: -12.000702857971191
    5. '   ' → logprob: -13.375702857971191
    6. '2' → logprob: -14.000702857971191
    7. '  ' → logprob: -14.500702857971191
    8. '    ' → logprob: -15.250702857971191
    9. '```' → logprob: -15.250702857971191
    10. '(n' → logprob: -15.375702857971191

Token 536: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.12217947095632553
    2. 'elements' → logprob: -2.7471795082092285
    3. 'dp' → logprob: -4.4971795082092285
    4. ' dp' → logprob: -4.6221795082092285
    5. ']' → logprob: -5.1221795082092285
    6. ' items' → logprob: -5.6221795082092285
    7. ')' → logprob: -6.1221795082092285
    8. ' positions' → logprob: -6.1221795082092285
    9. ' ' → logprob: -6.2471795082092285
    10. '
' → logprob: -6.2471795082092285

Token 537: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4348892867565155
    2. '=' → logprob: -1.559889316558838
    3. ',' → logprob: -2.809889316558838
    4. '   ' → logprob: -3.684889316558838
    5. '       ' → logprob: -3.934889316558838
    6. '[' → logprob: -5.059889316558838
    7. '[:' → logprob: -5.309889316558838
    8. '[:]' → logprob: -5.684889316558838
    9. '    ' → logprob: -5.809889316558838
    10. '
' → logprob: -6.059889316558838

Token 538: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004102977458387613
    2. ' dp' → logprob: -5.504103183746338
    3. '   ' → logprob: -10.87910270690918
    4. '	dp' → logprob: -13.37910270690918
    5. '(dp' → logprob: -13.87910270690918
    6. 'the' → logprob: -14.00410270690918
    7. '
' → logprob: -14.00410270690918
    8. ' ' → logprob: -14.50410270690918
    9. '```' → logprob: -15.62910270690918
    10. '       ' → logprob: -15.62910270690918

Token 539: ' current' (ID: 2208)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00988794956356287
    2. ' dp' → logprob: -4.634888172149658
    3. 'current' → logprob: -9.6348876953125
    4. ' current' → logprob: -10.5098876953125
    5. '   ' → logprob: -11.7598876953125
    6. 'prev' → logprob: -12.0098876953125
    7. 'previous' → logprob: -12.3848876953125
    8. '(dp' → logprob: -12.6348876953125
    9. '[' → logprob: -12.7598876953125
    10. 'row' → logprob: -13.2598876953125

Token 540: ' row' (ID: 5225)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07950091361999512
    2. ' dp' → logprob: -2.579500913619995
    3. '(dp' → logprob: -8.079501152038574
    4. '   ' → logprob: -8.454501152038574
    5. ' ' → logprob: -11.079501152038574
    6. '	dp' → logprob: -11.204501152038574
    7. ']' → logprob: -11.329501152038574
    8. 'row' → logprob: -11.454501152038574
    9. '`' → logprob: -12.329501152038574
    10. '_dp' → logprob: -12.329501152038574

Token 541: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37990203499794006
    2. ' =' → logprob: -1.7549020051956177
    3. ',' → logprob: -2.3799021244049072
    4. '=' → logprob: -4.129901885986328
    5. '
' → logprob: -4.254901885986328
    6. '   ' → logprob: -5.379901885986328
    7. '[:' → logprob: -5.504901885986328
    8. '[' → logprob: -5.879901885986328
    9. ',
' → logprob: -6.254901885986328
    10. ':' → logprob: -6.254901885986328

Token 542: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25537219643592834
    2. ' dp' → logprob: -1.755372166633606
    3. ')' → logprob: -3.2553722858428955
    4. '0' → logprob: -5.505372047424316
    5. ' )' → logprob: -5.630372047424316
    6. ':' → logprob: -6.630372047424316
    7. ' :' → logprob: -7.005372047424316
    8. '   ' → logprob: -7.130372047424316
    9. '[' → logprob: -8.255372047424316
    10. '```' → logprob: -8.255372047424316

Token 543: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007177923689596355
    2. ')[' → logprob: -8.500718116760254
    3. '[' → logprob: -9.000718116760254
    4. ')' → logprob: -9.375718116760254
    5. ' [' → logprob: -9.375718116760254
    6. '][' → logprob: -9.500718116760254
    7. 'i' → logprob: -9.875718116760254
    8. '
' → logprob: -10.625718116760254
    9. '   ' → logprob: -11.500718116760254
    10. '```' → logprob: -11.750718116760254

Token 544: '][' (ID: 2696)
  Prédit: '][:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][:' → logprob: -0.012518247589468956
    2. '][' → logprob: -5.387518405914307
    3. '])' → logprob: -5.887518405914307
    4. ']' → logprob: -5.887518405914307
    5. '[:' → logprob: -6.262518405914307
    6. ']),' → logprob: -9.012517929077148
    7. '],' → logprob: -9.637517929077148
    8. '   ' → logprob: -9.637517929077148
    9. '[' → logprob: -10.387517929077148
    10. ':' → logprob: -10.387517929077148

Token 545: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07410284876823425
    2. '0' → logprob: -2.6991028785705566
    3. ' :' → logprob: -5.949102878570557
    4. ':n' → logprob: -7.449102878570557
    5. ' ' → logprob: -8.824102401733398
    6. '   ' → logprob: -8.949102401733398
    7. ':j' → logprob: -9.324102401733398
    8. ':index' → logprob: -9.449102401733398
    9. ':end' → logprob: -10.074102401733398
    10. ':
' → logprob: -10.074102401733398

Token 546: '],' (ID: 2155)
  Prédit: ':n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':n' → logprob: -0.6028920412063599
    2. ':' → logprob: -0.8528920412063599
    3. ':i' → logprob: -3.8528919219970703
    4. ' :' → logprob: -5.35289192199707
    5. '])' → logprob: -8.47789192199707
    6. ':j' → logprob: -8.72789192199707
    7. ':]' → logprob: -9.72789192199707
    8. '   ' → logprob: -9.97789192199707
    9. ']' → logprob: -10.22789192199707
    10. ':N' → logprob: -10.97789192199707

Token 547: ' ...,' (ID: 126708)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6031656861305237
    2. ':n' → logprob: -0.8531656861305237
    3. ' :' → logprob: -3.978165626525879
    4. ':i' → logprob: -5.228165626525879
    5. ':j' → logprob: -7.478165626525879
    6. 'dp' → logprob: -7.853165626525879
    7. ':c' → logprob: -7.978165626525879
    8. '1' → logprob: -8.978165626525879
    9. ':num' → logprob: -8.978165626525879
    10. ':s' → logprob: -9.103165626525879

Token 548: ' dp' (ID: 21546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2859911620616913
    2. ' n' → logprob: -1.4109911918640137
    3. 'dp' → logprob: -5.910991191864014
    4. ' dp' → logprob: -7.035991191864014
    5. 'i' → logprob: -7.410991191864014
    6. '   ' → logprob: -8.285990715026855
    7. ' i' → logprob: -8.660990715026855
    8. ' ' → logprob: -9.285990715026855
    9. '    ' → logprob: -10.660990715026855
    10. '  ' → logprob: -10.785990715026855

Token 549: '[i' (ID: 1768)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6436372995376587
    2. 'i' → logprob: -1.8936372995376587
    3. ':n' → logprob: -2.393637180328369
    4. ':i' → logprob: -2.518637180328369
    5. ':' → logprob: -3.018637180328369
    6. '   ' → logprob: -3.018637180328369
    7. ' n' → logprob: -4.018637180328369
    8. '1' → logprob: -4.518637180328369
    9. ' ' → logprob: -4.768637180328369
    10. ' i' → logprob: -5.018637180328369

Token 550: '][' (ID: 2696)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.043561533093452454
    2. ']' → logprob: -3.9185614585876465
    3. 'i' → logprob: -4.6685614585876465
    4. '   ' → logprob: -5.2935614585876465
    5. ' ' → logprob: -6.2935614585876465
    6. ':n' → logprob: -6.5435614585876465
    7. ' n' → logprob: -6.6685614585876465
    8. ':' → logprob: -6.9185614585876465
    9. '][' → logprob: -7.0435614585876465
    10. '])' → logprob: -7.4185614585876465

Token 551: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003017385315615684
    2. ' n' → logprob: -8.375301361083984
    3. '   ' → logprob: -10.125301361083984
    4. ' ' → logprob: -11.125301361083984
    5. '1' → logprob: -12.375301361083984
    6. '```' → logprob: -13.125301361083984
    7. '(n' → logprob: -13.250301361083984
    8. '])' → logprob: -13.875301361083984
    9. ']' → logprob: -14.000301361083984
    10. '  ' → logprob: -14.500301361083984

Token 552: ']).
' (ID: 135644)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14872534573078156
    2. '])' → logprob: -2.3987252712249756
    3. ':' → logprob: -3.7737252712249756
    4. ':n' → logprob: -4.398725509643555
    5. 'n' → logprob: -5.523725509643555
    6. ']' → logprob: -6.148725509643555
    7. ']+' → logprob: -6.648725509643555
    8. ' +' → logprob: -6.773725509643555
    9. '+n' → logprob: -6.898725509643555
    10. ']),' → logprob: -7.023725509643555

Token 553: '       ' (ID: 309)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.9806383848190308
    2. ' cs' → logprob: -0.9806383848190308
    3. '       ' → logprob: -1.9806383848190308
    4. ' =' → logprob: -2.8556385040283203
    5. '   ' → logprob: -3.2306385040283203
    6. '=' → logprob: -4.85563850402832
    7. ',' → logprob: -6.60563850402832
    8. '	cs' → logprob: -6.98063850402832
    9. '[' → logprob: -7.10563850402832
    10. ' ' → logprob: -7.73063850402832

Token 554: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' (adapté à ' cs') → logprob: -0.35069140791893005
    2. ' cs' → logprob: -1.4756914377212524
    3. '   ' → logprob: -3.350691318511963
    4. '       ' → logprob: -3.975691318511963
    5. '[' → logprob: -5.225691318511963
    6. ' =' → logprob: -6.100691318511963
    7. '	cs' → logprob: -6.600691318511963
    8. ',' → logprob: -7.350691318511963
    9. '```' → logprob: -7.850691318511963
    10. '_cs' → logprob: -8.225691795349121

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763190984725952
    2. ' =' → logprob: -0.8263190984725952
    3. ',' → logprob: -8.201318740844727
    4. '   ' → logprob: -9.576318740844727
    5. ' ' → logprob: -11.951318740844727
    6. '       ' → logprob: -12.076318740844727
    7. '=
' → logprob: -12.576318740844727
    8. ' =
' → logprob: -12.826318740844727
    9. '    ' → logprob: -12.951318740844727
    10. '```' → logprob: -13.201318740844727

Token 556: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03365238755941391
    2. ' dp' → logprob: -3.4086523056030273
    3. '	dp' → logprob: -12.533652305603027
    4. '   ' → logprob: -13.283652305603027
    5. '(dp' → logprob: -14.408652305603027
    6. ' ' → logprob: -14.783652305603027
    7. '[' → logprob: -15.408652305603027
    8. 'd' → logprob: -16.908653259277344
    9. '_dp' → logprob: -16.908653259277344
    10. '.dp' → logprob: -17.533653259277344

Token 557: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.00000286102295
    3. 'i' → logprob: -15.37500286102295
    4. '```' → logprob: -15.37500286102295
    5. '[I' → logprob: -15.37500286102295
    6. '[
' → logprob: -15.62500286102295
    7. ' [' → logprob: -17.125003814697266
    8. '[user' → logprob: -17.625003814697266
    9. '\[' → logprob: -17.625003814697266
    10. '[n' → logprob: -18.250003814697266

Token 558: '][:' (ID: 63357)
  Prédit: '][:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][:' → logprob: -0.007239567581564188
    2. '][' → logprob: -5.38223934173584
    3. '[:' → logprob: -6.25723934173584
    4. ']' → logprob: -7.63223934173584
    5. ']
' → logprob: -9.13223934173584
    6. '[' → logprob: -10.00723934173584
    7. '   ' → logprob: -10.00723934173584
    8. ':' → logprob: -12.50723934173584
    9. ' ' → logprob: -12.88223934173584
    10. '       ' → logprob: -13.50723934173584

Token 559: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004688692279160023
    2. '(n' → logprob: -5.379688739776611
    3. '(' → logprob: -9.754688262939453
    4. ' n' → logprob: -11.879688262939453
    5. ' (' → logprob: -13.629688262939453
    6. '   ' → logprob: -13.629688262939453
    7. '
' → logprob: -15.629688262939453
    8. '{' → logprob: -16.004688262939453
    9. ',n' → logprob: -16.254688262939453
    10. ':n' → logprob: -16.254688262939453

Token 560: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.280175097752362e-05
    2. ' +' → logprob: -9.500082969665527
    3. '+n' → logprob: -12.875082969665527
    4. '1' → logprob: -13.250082969665527
    5. '   ' → logprob: -13.500082969665527
    6. '+
' → logprob: -13.875082969665527
    7. ']+' → logprob: -14.750082969665527
    8. '+i' → logprob: -15.625082969665527
    9. '＋' → logprob: -16.00008201599121
    10. '+k' → logprob: -16.37508201599121

Token 561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6537622034084052e-05
    2. ' ' → logprob: -10.87502670288086
    3. '2' → logprob: -11.87502670288086
    4. '+' → logprob: -15.12502670288086
    5. '   ' → logprob: -15.12502670288086
    6. 'None' → logprob: -18.12502670288086
    7. '```' → logprob: -18.37502670288086
    8. '  ' → logprob: -18.50002670288086
    9. '
' → logprob: -18.87502670288086
    10. '１' → logprob: -19.00002670288086

Token 562: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012635369785130024
    2. ']
' → logprob: -4.387635231018066
    3. ']
' → logprob: -9.637635231018066
    4. '   ' → logprob: -10.512635231018066
    5. ' ]' → logprob: -10.762635231018066
    6. '       ' → logprob: -11.887635231018066
    7. ']

' → logprob: -13.012635231018066
    8. ')' → logprob: -14.512635231018066
    9. ' ]
' → logprob: -15.137635231018066
    10. '    ' → logprob: -15.512635231018066

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04262525960803032
    2. '
' → logprob: -3.4176251888275146
    3. '        
' → logprob: -5.667625427246094
    4. ',' → logprob: -6.667625427246094
    5. '<|end|>' → logprob: -7.167625427246094
    6. '  
' → logprob: -7.292625427246094
    7. '   ' → logprob: -7.542625427246094
    8. ' for' → logprob: -8.167625427246094
    9. ' 
' → logprob: -8.292625427246094
    10. ',
' → logprob: -8.667625427246094

Token 564: ' #' (ID: 1069)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.4108039140701294
    2. '       ' → logprob: -1.2858039140701294
    3. ' cs' → logprob: -3.41080379486084
    4. ' for' → logprob: -4.03580379486084
    5. 'for' → logprob: -4.91080379486084
    6. '   ' → logprob: -7.53580379486084
    7. '#' (adapté à ' #') → logprob: -7.78580379486084
    8. '	cs' → logprob: -8.16080379486084
    9. ' ' → logprob: -8.53580379486084
    10. '
' → logprob: -9.03580379486084

Token 565: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.007535056211054325
    2. 'for' → logprob: -5.007534980773926
    3. '   ' → logprob: -8.382534980773926
    4. '       ' → logprob: -8.382534980773926
    5. ' cs' → logprob: -8.632534980773926
    6. ' for' → logprob: -10.882534980773926
    7. 'dp' → logprob: -10.882534980773926
    8. 'next' → logprob: -11.382534980773926
    9. 'cc' → logprob: -11.757534980773926
    10. 'c' → logprob: -11.882534980773926

Token 566: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4444498121738434
    2. '2' → logprob: -1.319449782371521
    3. ' =' → logprob: -2.6944499015808105
    4. '_' → logprob: -4.9444499015808105
    5. '[n' → logprob: -5.0694499015808105
    6. 'n' → logprob: -5.6944499015808105
    7. '=n' → logprob: -6.1944499015808105
    8. 's' → logprob: -6.5694499015808105
    9. '_=' → logprob: -7.1944499015808105
    10. '[' → logprob: -7.1944499015808105

Token 567: ' will' (ID: 738)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687369227409363
    2. '=' → logprob: -1.136873722076416
    3. ' ' → logprob: -13.761873245239258
    4. ',' → logprob: -14.136873245239258
    5. '=
' → logprob: -15.261873245239258
    6. '   ' → logprob: -15.761873245239258
    7. ' ' → logprob: -16.261873245239258
    8. ' =
' → logprob: -16.261873245239258
    9. 's' → logprob: -16.386873245239258
    10. '[' → logprob: -17.511873245239258

Token 568: ' point' (ID: 2438)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12835150957107544
    2. ' dp' → logprob: -2.1283514499664307
    3. '=' → logprob: -6.87835168838501
    4. 'be' → logprob: -9.128351211547852
    5. ' be' → logprob: -9.253351211547852
    6. '	dp' → logprob: -9.503351211547852
    7. ' =' → logprob: -9.753351211547852
    8. '(dp' → logprob: -10.628351211547852
    9. '_dp' → logprob: -11.253351211547852
    10. '   ' → logprob: -11.628351211547852

Token 569: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04972182586789131
    2. 'to' → logprob: -3.0497217178344727
    3. ' dp' → logprob: -7.424721717834473
    4. 'dp' → logprob: -8.174721717834473
    5. '=' → logprob: -8.549721717834473
    6. ' =' → logprob: -10.049721717834473
    7. '   ' → logprob: -11.924721717834473
    8. '(dp' → logprob: -11.924721717834473
    9. ' ' → logprob: -13.424721717834473
    10. 'To' → logprob: -13.799721717834473

Token 570: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.034557025879621506
    2. ' dp' → logprob: -3.4095571041107178
    3. 'the' → logprob: -7.284556865692139
    4. ' the' → logprob: -8.534557342529297
    5. '(dp' → logprob: -11.409557342529297
    6. '	dp' → logprob: -11.659557342529297
    7. ' ' → logprob: -12.784557342529297
    8. '   ' → logprob: -14.159557342529297
    9. '_dp' → logprob: -14.784557342529297
    10. 'd' → logprob: -14.784557342529297

Token 571: ' remaining' (ID: 15448)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001681367284618318
    2. ' dp' → logprob: -6.501681327819824
    3. 'n' → logprob: -10.001681327819824
    4. '2' → logprob: -10.626681327819824
    5. '[i' → logprob: -11.001681327819824
    6. 'rest' → logprob: -11.251681327819824
    7. 's' → logprob: -11.376681327819824
    8. '   ' → logprob: -11.501681327819824
    9. 'next' → logprob: -11.751681327819824
    10. 'i' → logprob: -12.001681327819824

Token 572: ' elements' (ID: 8632)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.6044356226921082
    2. 'n' → logprob: -0.9794356226921082
    3. 'dp' → logprob: -2.854435682296753
    4. ' n' → logprob: -4.354435443878174
    5. 'elements' → logprob: -6.229435443878174
    6. ' dp' → logprob: -6.354435443878174
    7. ' elements' → logprob: -6.729435443878174
    8. '(n' → logprob: -7.479435443878174
    9. ' [' → logprob: -7.604435443878174
    10. 's' → logprob: -8.104435920715332

Token 573: ',' (ID: 11)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.08927814662456512
    2. ' =' → logprob: -2.964278221130371
    3. '=' → logprob: -3.839278221130371
    4. 'dp' → logprob: -5.214278221130371
    5. '   ' → logprob: -6.339278221130371
    6. '[' → logprob: -6.714278221130371
    7. 'n' → logprob: -7.214278221130371
    8. 's' → logprob: -7.214278221130371
    9. ' [' → logprob: -7.214278221130371
    10. '=n' → logprob: -7.714278221130371

Token 574: ' starting' (ID: 8601)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1273203045129776
    2. ' dp' → logprob: -2.1273202896118164
    3. '(dp' → logprob: -9.002320289611816
    4. '2' → logprob: -9.877320289611816
    5. '	dp' → logprob: -10.002320289611816
    6. '   ' → logprob: -10.127320289611816
    7. ' ' → logprob: -10.877320289611816
    8. '[' → logprob: -11.627320289611816
    9. 'which' → logprob: -11.627320289611816
    10. '=' → logprob: -11.627320289611816

Token 575: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07704038172960281
    2. ' from' → logprob: -3.327040433883667
    3. 'at' → logprob: -4.077040195465088
    4. ' at' → logprob: -4.327040195465088
    5. '[n' → logprob: -5.577040195465088
    6. 'n' → logprob: -5.827040195465088
    7. '   ' → logprob: -6.827040195465088
    8. '```' → logprob: -9.577040672302246
    9. '@n' → logprob: -9.827040672302246
    10. '	from' → logprob: -10.827040672302246

Token 576: ' dp' (ID: 21546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005949302110821009
    2. ' n' → logprob: -5.3809494972229
    3. 'dp' → logprob: -6.7559494972229
    4. '1' → logprob: -10.005949020385742
    5. '
' → logprob: -10.130949020385742
    6. '[n' → logprob: -10.880949020385742
    7. '(n' → logprob: -11.005949020385742
    8. '   ' → logprob: -11.130949020385742
    9. '0' → logprob: -11.380949020385742
    10. ' dp' → logprob: -12.255949020385742

Token 577: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016206118743866682
    2. 'i' → logprob: -9.000162124633789
    3. '```' → logprob: -11.500162124633789
    4. '[' → logprob: -11.625162124633789
    5. '[n' → logprob: -12.250162124633789
    6. '   ' → logprob: -12.500162124633789
    7. '{i' → logprob: -13.000162124633789
    8. 'n' → logprob: -13.250162124633789
    9. '`' → logprob: -13.625162124633789
    10. '(i' → logprob: -13.875162124633789

Token 578: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.007250695489346981
    2. '][' → logprob: -5.132250785827637
    3. 'n' → logprob: -7.382250785827637
    4. '[' → logprob: -8.507250785827637
    5. '[:' → logprob: -8.507250785827637
    6. '][:' → logprob: -9.007250785827637
    7. '   ' → logprob: -9.882250785827637
    8. ' [' → logprob: -11.007250785827637
    9. '\[' → logprob: -11.257250785827637
    10. ',n' → logprob: -11.757250785827637

Token 579: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00023631771910004318
    2. ' n' → logprob: -9.000236511230469
    3. '1' → logprob: -10.250236511230469
    4. '   ' → logprob: -10.625236511230469
    5. '0' → logprob: -11.250236511230469
    6. '[n' → logprob: -11.375236511230469
    7. '
' → logprob: -11.500236511230469
    8. '(n' → logprob: -12.375236511230469
    9. ' ' → logprob: -12.375236511230469
    10. '2' → logprob: -13.750236511230469

Token 580: '+' (ID: 10)
  Prédit: ':n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':n' → logprob: -0.3071090579032898
    2. ':]' → logprob: -1.6821091175079346
    3. ':' → logprob: -2.6821091175079346
    4. '+' → logprob: -4.6821088790893555
    5. 'n' → logprob: -8.807108879089355
    6. '+n' → logprob: -8.807108879089355
    7. ']' → logprob: -8.932108879089355
    8. ':]
' → logprob: -9.807108879089355
    9. '[n' → logprob: -9.932108879089355
    10. ':j' → logprob: -10.057108879089355

Token 581: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3232259452342987
    2. ':' → logprob: -1.573225975036621
    3. '+' → logprob: -3.448225975036621
    4. ':n' → logprob: -3.948225975036621
    5. ':]' → logprob: -5.198225975036621
    6. 'n' → logprob: -5.448225975036621
    7. ']' → logprob: -5.823225975036621
    8. '0' → logprob: -6.698225975036621
    9. '```' → logprob: -6.948225975036621
    10. '-' → logprob: -8.073225975036621

Token 582: ']' (ID: 60)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.4217415153980255
    2. ':n' → logprob: -1.1717414855957031
    3. ':' → logprob: -3.671741485595703
    4. ']' → logprob: -4.796741485595703
    5. ' :]' → logprob: -9.171741485595703
    6. 'n' → logprob: -9.296741485595703
    7. ' :' → logprob: -9.296741485595703
    8. ':],' → logprob: -9.296741485595703
    9. ':]
' → logprob: -10.046741485595703
    10. ']:' → logprob: -10.421741485595703

Token 583: ' to' (ID: 316)
  Prédit: ':n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':n' → logprob: -0.6709808111190796
    2. ':' → logprob: -1.0459808111190796
    3. '[n' → logprob: -2.420980930328369
    4. '[:]' → logprob: -3.920980930328369
    5. ':]' → logprob: -4.045980930328369
    6. ']' → logprob: -5.045980930328369
    7. '[:' → logprob: -5.795980930328369
    8. 'n' → logprob: -7.170980930328369
    9. '[' → logprob: -8.045980453491211
    10. ',n' → logprob: -9.045980453491211

Token 584: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.025490637868642807
    2. '2' → logprob: -3.9004905223846436
    3. ' dp' → logprob: -5.400490760803223
    4. '[' → logprob: -8.900490760803223
    5. 'the' → logprob: -8.900490760803223
    6. '`' → logprob: -10.025490760803223
    7. ' ' → logprob: -11.150490760803223
    8. '	dp' → logprob: -11.150490760803223
    9. 'end' → logprob: -11.275490760803223
    10. ']' → logprob: -11.275490760803223

Token 585: ' end' (ID: 1268)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015462874434888363
    2. 'end' → logprob: -7.126546382904053
    3. '(' → logprob: -8.251545906066895
    4. '-' → logprob: -9.001545906066895
    5. ']' → logprob: -9.376545906066895
    6. 'dp' → logprob: -9.501545906066895
    7. 'len' → logprob: -9.626545906066895
    8. '[' → logprob: -10.501545906066895
    9. '`' → logprob: -10.501545906066895
    10. ' ' → logprob: -10.876545906066895

Token 586: '.
' (ID: 558)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.3617244362831116
    2. '=' → logprob: -2.111724376678467
    3. ' =' → logprob: -2.111724376678467
    4. ']' → logprob: -3.861724376678467
    5. '[:' → logprob: -4.361724376678467
    6. 'dp' → logprob: -5.111724376678467
    7. '=n' → logprob: -5.486724376678467
    8. '[' → logprob: -5.861724376678467
    9. '[:]' → logprob: -5.861724376678467
    10. '   ' → logprob: -5.861724376678467

Token 587: '       ' (ID: 309)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.6323211193084717
    2. ' =' → logprob: -2.0073211193084717
    3. '=' → logprob: -2.1323211193084717
    4. ' cs' → logprob: -2.1323211193084717
    5. 'dp' → logprob: -2.7573211193084717
    6. ' dp' → logprob: -4.382321357727051
    7. '[' → logprob: -4.882321357727051
    8. '   ' → logprob: -5.257321357727051
    9. '```' → logprob: -6.007321357727051
    10. '	cs' → logprob: -6.507321357727051

Token 588: ' cs' (ID: 14980)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010055077262222767
    2. ' dp' → logprob: -4.635055065155029
    3. 'cs' (adapté à ' cs') → logprob: -8.260055541992188
    4. ' cs' → logprob: -10.385055541992188
    5. '	dp' → logprob: -12.135055541992188
    6. '   ' → logprob: -14.010055541992188
    7. '[' → logprob: -14.760055541992188
    8. '=' → logprob: -14.760055541992188
    9. '(dp' → logprob: -15.010055541992188
    10. 'd' → logprob: -15.010055541992188

Token 589: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01642540842294693
    2. ' =' → logprob: -4.141425609588623
    3. '=[' → logprob: -9.016425132751465
    4. '2' → logprob: -9.016425132751465
    5. '[' → logprob: -9.891425132751465
    6. '=n' → logprob: -10.141425132751465
    7. '[n' → logprob: -10.766425132751465
    8. '   ' → logprob: -12.016425132751465
    9. '[i' → logprob: -12.141425132751465
    10. '=
' → logprob: -12.516425132751465

Token 590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132636249065399
    2. ' =' → logprob: -1.3132636547088623
    3. '=
' → logprob: -14.438263893127441
    4. '[' → logprob: -15.313263893127441
    5. ' ' → logprob: -15.438263893127441
    6. '   ' → logprob: -16.063262939453125
    7. ' =
' → logprob: -16.188262939453125
    8. ',' → logprob: -16.313262939453125
    9. '=[' → logprob: -16.438262939453125
    10. ')' → logprob: -16.688262939453125

Token 591: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008618474006652832
    2. ' dp' → logprob: -4.758618354797363
    3. '	dp' → logprob: -13.258618354797363
    4. '   ' → logprob: -13.633618354797363
    5. '(dp' → logprob: -14.633618354797363
    6. ' ' → logprob: -15.133618354797363
    7. 'd' → logprob: -16.13361930847168
    8. '  ' → logprob: -17.38361930847168
    9. '[' → logprob: -17.38361930847168
    10. '.dp' → logprob: -17.50861930847168

Token 592: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.500000953674316
    3. '```' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.750001907348633
    5. 'i' → logprob: -17.250001907348633
    6. '[I' → logprob: -17.375001907348633
    7. '[
' → logprob: -18.250001907348633
    8. ' [' → logprob: -18.500001907348633
    9. '\[' → logprob: -18.625001907348633
    10. '{i' → logprob: -19.125001907348633

Token 593: '][' (ID: 2696)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.07726782560348511
    2. '][' → logprob: -2.70226788520813
    3. '[' → logprob: -5.327267646789551
    4. '][:' → logprob: -7.202267646789551
    5. '   ' → logprob: -7.452267646789551
    6. '[:' → logprob: -7.827267646789551
    7. ']' → logprob: -9.07726764678955
    8. '[N' → logprob: -9.20226764678955
    9. ' [' → logprob: -9.45226764678955
    10. '}[' → logprob: -9.57726764678955

Token 594: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008236800786107779
    2. '[n' → logprob: -8.250823974609375
    3. ' n' → logprob: -8.875823974609375
    4. '(n' → logprob: -9.000823974609375
    5. '2' → logprob: -9.125823974609375
    6. ':n' → logprob: -9.500823974609375
    7. '   ' → logprob: -10.000823974609375
    8. '1' → logprob: -11.250823974609375
    9. '
' → logprob: -11.500823974609375
    10. '0' → logprob: -11.500823974609375

Token 595: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.045934516936540604
    2. '[n' → logprob: -3.6709344387054443
    3. '][' → logprob: -4.170934677124023
    4. ':n' → logprob: -6.670934677124023
    5. '+n' → logprob: -7.170934677124023
    6. ']+' → logprob: -7.420934677124023
    7. '][:' → logprob: -7.670934677124023
    8. 'n' → logprob: -7.920934677124023
    9. ']' → logprob: -9.295934677124023
    10. '-n' → logprob: -9.420934677124023

Token 596: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022136986255645752
    2. 'n' → logprob: -3.897136926651001
    3. '+' → logprob: -7.14713716506958
    4. '2' → logprob: -7.77213716506958
    5. '(' → logprob: -9.647136688232422
    6. ':' → logprob: -9.772136688232422
    7. ']+' → logprob: -10.022136688232422
    8. ':n' → logprob: -10.147136688232422
    9. '+n' → logprob: -10.397136688232422
    10. ']' → logprob: -10.897136688232422

Token 597: ':]

' (ID: 170549)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.021460002288222313
    2. ']' → logprob: -3.8964600563049316
    3. ':' → logprob: -7.271460056304932
    4. ' :]' → logprob: -8.896459579467773
    5. ':n' → logprob: -10.146459579467773
    6. '1' → logprob: -11.271459579467773
    7. ':]
' → logprob: -11.771459579467773
    8. ' ]' → logprob: -12.646459579467773
    9. '[:]' → logprob: -12.771459579467773
    10. '+' → logprob: -13.021459579467773

Token 598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26172158122062683
    2. 'for' → logprob: -1.5117216110229492
    3. '   ' → logprob: -5.386721611022949
    4. ' for' → logprob: -5.386721611022949
    5. '        
' → logprob: -9.13672161102295
    6. '	for' → logprob: -9.38672161102295
    7. '           ' → logprob: -9.38672161102295
    8. '
' → logprob: -9.51172161102295
    9. '	' → logprob: -9.76172161102295
    10. '+' → logprob: -10.26172161102295

Token 599: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28900375962257385
    2. 'for' → logprob: -1.5390037298202515
    3. ' for' → logprob: -3.414003849029541
    4. '	' → logprob: -6.789003849029541
    5. '	for' → logprob: -6.789003849029541
    6. '   ' → logprob: -8.164003372192383
    7. '	   ' → logprob: -8.664003372192383
    8. '           ' → logprob: -9.039003372192383
    9. '#' (adapté à ' #') → logprob: -9.164003372192383
    10. '+' → logprob: -9.414003372192383

Token 600: ' Compute' (ID: 45438)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018529583467170596
    2. '       ' → logprob: -7.001852989196777
    3. 'prefix' → logprob: -8.126852989196777
    4. 'j' → logprob: -8.626852989196777
    5. ' for' → logprob: -9.126852989196777
    6. 'from' → logprob: -9.501852989196777
    7. '   ' → logprob: -9.501852989196777
    8. 'acc' → logprob: -10.126852989196777
    9. 'sum' → logprob: -10.251852989196777
    10. '#' → logprob: -10.626852989196777

Token 601: ' prefix' (ID: 18633)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7013875842094421
    2. ' for' → logprob: -0.8263875842094421
    3. 'sum' → logprob: -3.951387643814087
    4. ' sum' → logprob: -4.701387405395508
    5. 'dp' → logprob: -4.951387405395508
    6. ' j' → logprob: -5.576387405395508
    7. 'range' → logprob: -5.576387405395508
    8. '   ' → logprob: -5.576387405395508
    9. ' range' → logprob: -5.701387405395508
    10. 'j' → logprob: -5.826387405395508

Token 602: ' sums' (ID: 73121)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7136848568916321
    2. 's' → logprob: -1.3386847972869873
    3. '_s' → logprob: -2.7136847972869873
    4. '_' → logprob: -2.8386847972869873
    5. '_sum' → logprob: -2.8386847972869873
    6. ' sums' → logprob: -3.0886847972869873
    7. ')' → logprob: -5.213685035705566
    8. '[' → logprob: -5.713685035705566
    9. 'dp' → logprob: -6.213685035705566
    10. '       ' → logprob: -6.213685035705566

Token 603: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49546363949775696
    2. '       ' → logprob: -1.6204636096954346
    3. ' =' → logprob: -2.8704636096954346
    4. '(' → logprob: -3.2454636096954346
    5. '[' → logprob: -3.6204636096954346
    6. 'for' → logprob: -3.9954636096954346
    7. ' for' → logprob: -4.245463848114014
    8. '<|end|>' → logprob: -4.620463848114014
    9. ')' → logprob: -5.245463848114014
    10. ',' → logprob: -5.870463848114014

Token 604: ' '' (ID: 461)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05326176434755325
    2. ' j' → logprob: -3.5532617568969727
    3. 'cs' → logprob: -3.8032617568969727
    4. ' cs' → logprob: -7.803261756896973
    5. '_j' → logprob: -9.553261756896973
    6. 'range' → logprob: -9.678261756896973
    7. 'i' → logprob: -9.803261756896973
    8. '_' → logprob: -9.928261756896973
    9. '```' → logprob: -9.928261756896973
    10. 'prefix' → logprob: -10.178261756896973

Token 605: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.00027921271976083517
    2. 'dp' → logprob: -9.500279426574707
    3. 'j' → logprob: -9.625279426574707
    4. ' cs' → logprob: -10.000279426574707
    5. 'range' → logprob: -10.250279426574707
    6. 'num' → logprob: -10.250279426574707
    7. ')' → logprob: -11.500279426574707
    8. 'c' → logprob: -13.250279426574707
    9. ']' → logprob: -13.250279426574707
    10. '_cs' → logprob: -14.000279426574707

Token 606: ''.' (ID: 6120)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.274181604385376
    2. ' =' → logprob: -1.524181604385376
    3. '
' → logprob: -1.774181604385376
    4. ')' → logprob: -2.524181604385376
    5. '   ' → logprob: -2.774181604385376
    6. '=' → logprob: -2.899181604385376
    7. ')
' → logprob: -3.024181604385376
    8. '[' → logprob: -3.649181604385376
    9. ',' → logprob: -3.899181604385376
    10. '        
' → logprob: -4.774181365966797

Token 607: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13938236236572266
    2. 'for' → logprob: -2.1393823623657227
    3. ' for' → logprob: -5.014382362365723
    4. 'prefix' → logprob: -6.139382362365723
    5. 'psum' → logprob: -6.764382362365723
    6. '   ' → logprob: -7.514382362365723
    7. 'sum' → logprob: -7.639382362365723
    8. 'cum' → logprob: -8.014382362365723
    9. 'cs' → logprob: -8.264382362365723
    10. '```' → logprob: -9.014382362365723

Token 608: ' each' (ID: 2454)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0206774715334177
    2. ' j' → logprob: -4.02067756652832
    3. 'k' → logprob: -6.89567756652832
    4. 'idx' → logprob: -7.39567756652832
    5. '_j' → logprob: -8.27067756652832
    6. 'x' → logprob: -8.64567756652832
    7. ' idx' → logprob: -8.77067756652832
    8. 'i' → logprob: -9.02067756652832
    9. 'index' → logprob: -9.14567756652832
    10. '_index' → logprob: -11.02067756652832

Token 609: ' index' (ID: 3472)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.016388585790991783
    2. ' j' → logprob: -4.141388416290283
    3. 'k' → logprob: -8.516388893127441
    4. 'i' → logprob: -10.016388893127441
    5. '_j' → logprob: -10.516388893127441
    6. 'idx' → logprob: -10.516388893127441
    7. 'index' → logprob: -11.016388893127441
    8. 'x' → logprob: -11.516388893127441
    9. '```' → logprob: -11.641388893127441
    10. '`' → logprob: -12.766388893127441

Token 610: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20399804413318634
    2. 'in' → logprob: -2.20399808883667
    3. 'j' → logprob: -3.57899808883667
    4. '1' → logprob: -4.20399808883667
    5. ' j' → logprob: -4.82899808883667
    6. '[j' → logprob: -5.20399808883667
    7. ',' → logprob: -5.45399808883667
    8. '(j' → logprob: -5.70399808883667
    9. '(' → logprob: -6.20399808883667
    10. '[' → logprob: -6.70399808883667

Token 611: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021836883388459682
    2. '0' → logprob: -6.62718391418457
    3. ' ' → logprob: -7.25218391418457
    4. '   ' → logprob: -9.62718391418457
    5. 'range' → logprob: -9.87718391418457
    6. '2' → logprob: -12.00218391418457
    7. 'j' → logprob: -12.50218391418457
    8. 'i' → logprob: -12.62718391418457
    9. 'n' → logprob: -12.62718391418457
    10. ' range' → logprob: -12.62718391418457

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00857781246304512
    2. '0' → logprob: -5.133577823638916
    3. 'range' → logprob: -6.008577823638916
    4. 'n' → logprob: -9.508577346801758
    5. 'i' → logprob: -10.383577346801758
    6. ' ' → logprob: -10.883577346801758
    7. ' range' → logprob: -10.883577346801758
    8. 'j' → logprob: -11.008577346801758
    9. '2' → logprob: -11.508577346801758
    10. '   ' → logprob: -11.633577346801758

Token 613: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.13417115807533264
    2. ' to' → logprob: -2.1341712474823
    3. ',' → logprob: -5.884171009063721
    4. ':' → logprob: -6.009171009063721
    5. '       ' → logprob: -7.259171009063721
    6. '   ' → logprob: -8.009171485900879
    7. 'in' → logprob: -9.134171485900879
    8. '           ' → logprob: -9.259171485900879
    9. ':
' → logprob: -9.259171485900879
    10. '```' → logprob: -9.259171485900879

Token 614: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004939493257552385
    2. ' n' → logprob: -5.379939556121826
    3. 'len' → logprob: -8.629939079284668
    4. '2' → logprob: -9.004939079284668
    5. ' ' → logprob: -12.129939079284668
    6. '   ' → logprob: -12.379939079284668
    7. '```' → logprob: -13.004939079284668
    8. '
' → logprob: -13.129939079284668
    9. ' len' → logprob: -13.254939079284668
    10. '	n' → logprob: -14.379939079284668

Token 615: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19990085065364838
    2. '[j' → logprob: -3.3249008655548096
    3. '):' → logprob: -3.6999008655548096
    4. '[i' → logprob: -3.9499008655548096
    5. '+' → logprob: -4.0749006271362305
    6. '[' → logprob: -4.0749006271362305
    7. ':
' → logprob: -4.0749006271362305
    8. '[:' → logprob: -4.6999006271362305
    9. ']:' → logprob: -4.6999006271362305
    10. '[n' → logprob: -4.6999006271362305

Token 616: ' accumulate' (ID: 74226)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15658973157405853
    2. '           ' → logprob: -2.6565897464752197
    3. 'cs' → logprob: -2.9065897464752197
    4. ' cs' → logprob: -4.156589508056641
    5. '   ' → logprob: -6.031589508056641
    6. '               ' → logprob: -7.656589508056641
    7. '	cs' → logprob: -7.906589508056641
    8. '```' → logprob: -8.65658950805664
    9. ' for' → logprob: -8.78158950805664
    10. 'for' → logprob: -8.78158950805664

Token 617: ' the' (ID: 290)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.6139795184135437
    2. ' cs' → logprob: -0.8639795184135437
    3. ' +=' → logprob: -4.113979339599609
    4. '+=' → logprob: -4.738979339599609
    5. '   ' → logprob: -5.863979339599609
    6. '=' → logprob: -5.988979339599609
    7. ' =' → logprob: -6.488979339599609
    8. '    ' → logprob: -7.238979339599609
    9. '+' → logprob: -7.613979339599609
    10. '[' → logprob: -7.613979339599609

Token 618: ' values' (ID: 4824)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.039379384368658066
    2. ' cs' → logprob: -3.289379358291626
    3. ' value' → logprob: -8.789379119873047
    4. '   ' → logprob: -8.914379119873047
    5. 'dp' → logprob: -9.039379119873047
    6. '+' → logprob: -9.164379119873047
    7. 'prefix' → logprob: -9.164379119873047
    8. '+=' → logprob: -9.164379119873047
    9. 'value' → logprob: -9.289379119873047
    10. '```' → logprob: -9.289379119873047

Token 619: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34281688928604126
    2. '[j' → logprob: -2.0928168296813965
    3. '[' → logprob: -2.9678168296813965
    4. ':' → logprob: -3.4678168296813965
    5. '           ' → logprob: -3.9678168296813965
    6. '[i' → logprob: -4.3428168296813965
    7. ' in' → logprob: -4.9678168296813965
    8. '=' → logprob: -5.2178168296813965
    9. '+=' → logprob: -5.2178168296813965
    10. ',' → logprob: -5.3428168296813965

Token 620: ' modulo' (ID: 112372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.537152886390686
    2. ' cs' → logprob: -1.787152886390686
    3. ' i' → logprob: -2.4121527671813965
    4. 'cs' → logprob: -2.4121527671813965
    5. ' for' → logprob: -2.5371527671813965
    6. ')' → logprob: -3.1621527671813965
    7. '=' → logprob: -3.4121527671813965
    8. ' j' → logprob: -3.4121527671813965
    9. ' +=' → logprob: -3.4121527671813965
    10. 'for' → logprob: -3.5371527671813965

Token 621: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6370950937271118
    2. 'mod' → logprob: -0.7620950937271118
    3. '(mod' → logprob: -5.637094974517822
    4. '=' → logprob: -8.63709545135498
    5. ' (' → logprob: -8.88709545135498
    6. ' =' → logprob: -9.26209545135498
    7. '	mod' → logprob: -9.26209545135498
    8. ' ' → logprob: -9.38709545135498
    9. '`' → logprob: -9.63709545135498
    10. '   ' → logprob: -10.13709545135498

Token 622: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08858997374773026
    2. '
' → logprob: -3.088589906692505
    3. ':' → logprob: -4.463590145111084
    4. '   ' → logprob: -4.588590145111084
    5. ':
' → logprob: -5.463590145111084
    6. 'for' → logprob: -5.588590145111084
    7. ' for' → logprob: -6.088590145111084
    8. ',' → logprob: -6.838590145111084
    9. '        
' → logprob: -6.838590145111084
    10. '           ' → logprob: -6.963590145111084

Token 623: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8600476980209351
    2. ' for' → logprob: -1.235047698020935
    3. '   ' → logprob: -1.860047698020935
    4. '       ' → logprob: -2.1100478172302246
    5. '[' → logprob: -6.110047817230225
    6. '=' → logprob: -7.235047817230225
    7. '
' → logprob: -7.360047817230225
    8. ' 
' → logprob: -7.485047817230225
    9. '	for' → logprob: -7.485047817230225
    10. '        
' → logprob: -7.735047817230225

Token 624: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8551204204559326
    2. ' for' → logprob: -1.1051204204559326
    3. 'for' → logprob: -1.4801204204559326
    4. '   ' → logprob: -4.480120658874512
    5. '	for' → logprob: -5.855120658874512
    6. '
' → logprob: -7.355120658874512
    7. '           ' → logprob: -8.355120658874512
    8. '	' → logprob: -8.605120658874512
    9. '        
' → logprob: -8.605120658874512
    10. '    ' → logprob: -9.230120658874512

Token 625: ' Prefix' (ID: 121368)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20614498853683472
    2. ' for' → logprob: -1.9561450481414795
    3. '       ' → logprob: -3.2061450481414795
    4. '   ' → logprob: -5.5811448097229
    5. '	for' → logprob: -7.8311448097229
    6. ' ' → logprob: -9.581145286560059
    7. '           ' → logprob: -10.081145286560059
    8. 'j' → logprob: -10.706145286560059
    9. '    ' → logprob: -11.331145286560059
    10. '
' → logprob: -11.331145286560059

Token 626: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9723166227340698
    2. '_s' → logprob: -0.9723166227340698
    3. 'sum' → logprob: -2.9723167419433594
    4. 'cs' → logprob: -3.2223167419433594
    5. '_sum' → logprob: -3.2223167419433594
    6. 'for' → logprob: -3.3473167419433594
    7. ' for' → logprob: -3.7223167419433594
    8. ' =' → logprob: -4.347316741943359
    9. ' sums' → logprob: -4.347316741943359
    10. '_' → logprob: -4.847316741943359

Token 627: ' help' (ID: 1652)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47748008370399475
    2. ' =' → logprob: -2.852480173110962
    3. '[i' → logprob: -3.102480173110962
    4. ':' → logprob: -3.227480173110962
    5. ' for' → logprob: -3.227480173110962
    6. '   ' → logprob: -3.227480173110962
    7. '=' → logprob: -3.227480173110962
    8. '       ' → logprob: -3.477480173110962
    9. 'for' → logprob: -3.977480173110962
    10. '
' → logprob: -3.977480173110962

Token 628: ' in' (ID: 306)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.1822536140680313
    2. ' for' → logprob: -2.55725359916687
    3. 'for' → logprob: -2.80725359916687
    4. ' cs' → logprob: -4.182253837585449
    5. '   ' → logprob: -5.682253837585449
    6. '       ' → logprob: -5.932253837585449
    7. '=' → logprob: -6.432253837585449
    8. ' =' → logprob: -6.932253837585449
    9. '(cs' → logprob: -6.932253837585449
    10. ')' → logprob: -7.182253837585449

Token 629: ' efficiently' (ID: 34229)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.35668906569480896
    2. ' range' → logprob: -1.3566890954971313
    3. '(range' → logprob: -4.231688976287842
    4. '(i' → logprob: -5.106688976287842
    5. 'i' → logprob: -5.481688976287842
    6. 'cs' → logprob: -5.481688976287842
    7. ' calculating' → logprob: -6.106688976287842
    8. 'for' → logprob: -6.606688976287842
    9. 'j' → logprob: -6.731688976287842
    10. 'calcul' → logprob: -6.731688976287842

Token 630: ' computing' (ID: 34349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.137300729751587
    2. 'range' → logprob: -1.762300729751587
    3. 'calcul' → logprob: -2.012300729751587
    4. ' for' → logprob: -2.137300729751587
    5. ' calculating' → logprob: -2.512300729751587
    6. ' range' → logprob: -2.512300729751587
    7. 'cs' → logprob: -3.887300729751587
    8. 'dp' → logprob: -4.637300491333008
    9. '   ' → logprob: -4.762300491333008
    10. ')' → logprob: -4.887300491333008

Token 631: ' range' (ID: 3352)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.14783979952335358
    2. ' cs' → logprob: -2.5228397846221924
    3. '(cs' → logprob: -3.2728397846221924
    4. ' (' → logprob: -5.5228400230407715
    5. 'dp' → logprob: -5.7728400230407715
    6. '(' → logprob: -6.3978400230407715
    7. '   ' → logprob: -6.7728400230407715
    8. ')' → logprob: -6.8978400230407715
    9. 'for' → logprob: -7.0228400230407715
    10. ' the' → logprob: -7.2728400230407715

Token 632: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15734516084194183
    2. ' sums' → logprob: -2.5323450565338135
    3. 'cs' → logprob: -4.157345294952393
    4. '(' → logprob: -4.657345294952393
    5. '_s' → logprob: -4.657345294952393
    6. '   ' → logprob: -4.782345294952393
    7. '(i' → logprob: -4.907345294952393
    8. 'sum' → logprob: -5.282345294952393
    9. '       ' → logprob: -6.032345294952393
    10. '_sum' → logprob: -6.157345294952393

Token 633: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.504831075668335
    2. '[' → logprob: -1.629831075668335
    3. ':' → logprob: -2.004831075668335
    4. '   ' → logprob: -2.379831075668335
    5. '[i' → logprob: -2.379831075668335
    6. 'for' → logprob: -2.879831075668335
    7. '=' → logprob: -3.254831075668335
    8. ' for' → logprob: -3.504831075668335
    9. ' =' → logprob: -3.629831075668335
    10. '
' → logprob: -3.629831075668335

Token 634: ' DP' (ID: 51992)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16235105693340302
    2. ' range' → logprob: -2.162351131439209
    3. 'cs' → logprob: -3.412351131439209
    4. ' cs' → logprob: -6.912351131439209
    5. '   ' → logprob: -8.03735065460205
    6. 'dp' → logprob: -8.41235065460205
    7. 'for' → logprob: -9.41235065460205
    8. '```' → logprob: -9.78735065460205
    9. 'the' → logprob: -10.66235065460205
    10. '       ' → logprob: -10.66235065460205

Token 635: ' transitions' (ID: 59824)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8935479521751404
    2. '   ' → logprob: -1.5185480117797852
    3. '
' → logprob: -1.5185480117797852
    4. ':' → logprob: -2.518548011779785
    5. ' for' → logprob: -3.518548011779785
    6. ':
' → logprob: -4.018548011779785
    7. 'for' → logprob: -4.643548011779785
    8. '=' → logprob: -6.018548011779785
    9. ' =' → logprob: -6.518548011779785
    10. '        
' → logprob: -6.643548011779785

Token 636: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7578075528144836
    2. '   ' → logprob: -1.0078074932098389
    3. '
' → logprob: -2.257807493209839
    4. ' for' → logprob: -3.132807493209839
    5. ':' → logprob: -5.257807731628418
    6. 'for' → logprob: -5.257807731628418
    7. '	for' → logprob: -6.882807731628418
    8. ',' → logprob: -7.007807731628418
    9. '        
' → logprob: -7.132807731628418
    10. '    
' → logprob: -7.382807731628418

Token 637: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9523748755455017
    2. '       ' → logprob: -1.3273749351501465
    3. '   ' → logprob: -1.4523749351501465
    4. 'for' → logprob: -2.2023749351501465
    5. '	for' → logprob: -7.3273749351501465
    6. '           ' → logprob: -7.7023749351501465
    7. '
' → logprob: -7.8273749351501465
    8. '        
' → logprob: -7.9523749351501465
    9. '    
' → logprob: -8.202374458312988
    10. ' 
' → logprob: -8.202374458312988

Token 638: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1326982080936432
    2. '       ' → logprob: -2.3826982975006104
    3. ' for' → logprob: -3.5076982975006104
    4. '   ' → logprob: -6.507698059082031
    5. '	for' → logprob: -7.632698059082031
    6. '
' → logprob: -11.882698059082031
    7. '           ' → logprob: -12.257698059082031
    8. '```' → logprob: -12.382698059082031
    9. '	' → logprob: -12.507698059082031
    10. '        
' → logprob: -13.382698059082031

Token 639: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06256794929504395
    2. ' j' → logprob: -2.812567949295044
    3. '1' → logprob: -8.562567710876465
    4. '_j' → logprob: -9.187567710876465
    5. 'i' → logprob: -9.437567710876465
    6. ' ' → logprob: -9.562567710876465
    7. 'x' → logprob: -10.062567710876465
    8. 'idx' → logprob: -10.187567710876465
    9. '_' → logprob: -10.812567710876465
    10. '   ' → logprob: -11.312567710876465

Token 640: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014350594952702522
    2. 'in' → logprob: -4.264350414276123
    3. '	in' → logprob: -9.389350891113281
    4. '1' → logprob: -9.514350891113281
    5. ' ' → logprob: -11.139350891113281
    6. '_in' → logprob: -12.889350891113281
    7. 'In' → logprob: -13.139350891113281
    8. '(' → logprob: -13.639350891113281
    9. '   ' → logprob: -13.639350891113281
    10. '  ' → logprob: -13.889350891113281

Token 641: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10773985832929611
    2. '1' → logprob: -2.8577399253845215
    3. ' range' → logprob: -3.1077399253845215
    4. ' ' → logprob: -10.232739448547363
    5. '   ' → logprob: -13.607739448547363
    6. '(range' → logprob: -13.982739448547363
    7. '	range' → logprob: -14.857739448547363
    8. '  ' → logprob: -16.48274040222168
    9. '(' → logprob: -16.73274040222168
    10. '0' → logprob: -16.98274040222168

Token 642: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002165299083571881
    2. ' ' → logprob: -8.625216484069824
    3. '(' → logprob: -10.250216484069824
    4. '   ' → logprob: -13.625216484069824
    5. '2' → logprob: -14.750216484069824
    6. '0' → logprob: -16.75021743774414
    7. '[' → logprob: -18.37521743774414
    8. '	' → logprob: -18.62521743774414
    9. ',' → logprob: -19.00021743774414
    10. '
' → logprob: -19.12521743774414

Token 643: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -15.625000953674316
    4. 'n' → logprob: -15.750000953674316
    5. '2' → logprob: -17.625
    6. '0' → logprob: -18.875
    7. '
' → logprob: -19.5
    8. '(' → logprob: -19.625
    9. '    ' → logprob: -20.875
    10. '  ' → logprob: -21.125

Token 644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009824798442423344
    2. ',n' → logprob: -4.634824752807617
    3. ' ,' → logprob: -10.009824752807617
    4. ',j' → logprob: -11.009824752807617
    5. ',
' → logprob: -12.759824752807617
    6. '   ' → logprob: -13.259824752807617
    7. ',len' → logprob: -13.759824752807617
    8. '(n' → logprob: -14.009824752807617
    9. '(' → logprob: -15.759824752807617
    10. '1' → logprob: -15.759824752807617

Token 645: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.306760805164231e-05
    2. ' n' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.12501335144043
    4. '	n' → logprob: -19.50001335144043
    5. '(n' → logprob: -21.75001335144043
    6. ')n' → logprob: -22.50001335144043
    7. '```' → logprob: -22.87501335144043
    8. 'len' → logprob: -22.87501335144043
    9. ' ' → logprob: -23.00001335144043
    10. '
' → logprob: -23.25001335144043

Token 646: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002753981971181929
    2. ' +' → logprob: -8.375275611877441
    3. '+
' → logprob: -10.500275611877441
    4. '+j' → logprob: -12.250275611877441
    5. '+n' → logprob: -12.500275611877441
    6. '):' → logprob: -12.875275611877441
    7. '):
' → logprob: -13.000275611877441
    8. ')+' → logprob: -13.375275611877441
    9. '+)' → logprob: -14.875275611877441
    10. '[' → logprob: -15.375275611877441

Token 647: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011094276793301105
    2. '+' → logprob: -4.511094093322754
    3. 'n' → logprob: -10.261094093322754
    4. '```' → logprob: -12.761094093322754
    5. ' ' → logprob: -12.886094093322754
    6. '   ' → logprob: -13.136094093322754
    7. 'j' → logprob: -13.511094093322754
    8. ')' → logprob: -14.511094093322754
    9. '+
' → logprob: -14.886094093322754
    10. '+)' → logprob: -15.011094093322754

Token 648: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04874803498387337
    2. '):' → logprob: -3.048748016357422
    3. ':' → logprob: -9.423748016357422
    4. '):
' → logprob: -10.548748016357422
    5. ')' → logprob: -10.798748016357422
    6. ':
' → logprob: -10.923748016357422
    7. '       ' → logprob: -11.548748016357422
    8. ' ):
' → logprob: -13.048748016357422
    9. '   ' → logprob: -13.548748016357422
    10. ',' → logprob: -14.173748016357422

Token 649: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021426042541861534
    2. '       ' → logprob: -3.89642596244812
    3. '	       ' → logprob: -7.271426200866699
    4. '```' → logprob: -9.6464262008667
    5. '		' → logprob: -10.0214262008667
    6. 'cs' → logprob: -10.2714262008667
    7. '	   ' → logprob: -11.8964262008667
    8. '	' → logprob: -12.0214262008667
    9. '	cs' → logprob: -12.1464262008667
    10. '               ' → logprob: -12.2714262008667

Token 650: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' (adapté à ' cs') → logprob: -0.060842350125312805
    2. '           ' → logprob: -2.935842275619507
    3. '               ' → logprob: -5.810842514038086
    4. '       ' → logprob: -6.310842514038086
    5. ' cs' → logprob: -7.560842514038086
    6. '   ' → logprob: -7.560842514038086
    7. '	cs' → logprob: -9.935842514038086
    8. ' ' → logprob: -11.685842514038086
    9. '```' → logprob: -11.935842514038086
    10. 'csrf' → logprob: -11.935842514038086

Token 651: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.978233846486546e-05
    2. '[' → logprob: -10.000049591064453
    3. ' [' → logprob: -13.625049591064453
    4. 'j' → logprob: -14.000049591064453
    5. '[i' → logprob: -14.250049591064453
    6. '   ' → logprob: -15.500049591064453
    7. '```' → logprob: -15.500049591064453
    8. '=[' → logprob: -15.625049591064453
    9. '[c' → logprob: -15.625049591064453
    10. '\[' → logprob: -15.875049591064453

Token 652: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.6396423578262329
    2. '+=' → logprob: -1.264642357826233
    3. ']' → logprob: -1.764642357826233
    4. '=' → logprob: -4.139642238616943
    5. ']=' → logprob: -6.264642238616943
    6. ' +=' → logprob: -7.264642238616943
    7. '+' → logprob: -9.264642715454102
    8. '(' → logprob: -9.514642715454102
    9. ']=(' → logprob: -9.514642715454102
    10. ' =' → logprob: -9.764642715454102

Token 653: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3870713710784912
    2. '+=' → logprob: -1.1370713710784912
    3. '%=' → logprob: -9.38707160949707
    4. ' =' → logprob: -9.76207160949707
    5. '=(' → logprob: -10.38707160949707
    6. ' +=' → logprob: -10.88707160949707
    7. ']+=' → logprob: -12.51207160949707
    8. '*=' → logprob: -12.88707160949707
    9. '(' → logprob: -13.51207160949707
    10. '+=(' → logprob: -14.26207160949707

Token 654: ' (' (ID: 350)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.00327729107812047
    2. ' (' → logprob: -6.25327730178833
    3. '(Cs' → logprob: -7.75327730178833
    4. '(c' → logprob: -7.87827730178833
    5. '   ' → logprob: -8.503276824951172
    6. '(' → logprob: -9.253276824951172
    7. '(cx' → logprob: -10.003276824951172
    8. '(cls' → logprob: -10.003276824951172
    9. '(ct' → logprob: -10.378276824951172
    10. '(rs' → logprob: -11.003276824951172

Token 655: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -2.069664333248511e-05
    2. '(cs' → logprob: -11.500020980834961
    3. ' cs' → logprob: -11.875020980834961
    4. '           ' → logprob: -12.875020980834961
    5. '               ' → logprob: -14.875020980834961
    6. '   ' → logprob: -15.000020980834961
    7. '	cs' → logprob: -16.25002098083496
    8. '       ' → logprob: -16.75002098083496
    9. '                   ' → logprob: -17.12502098083496
    10. 'csrf' → logprob: -17.75002098083496

Token 656: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.339278580620885e-06
    2. 'j' → logprob: -13.750001907348633
    3. '[' → logprob: -13.875001907348633
    4. '[js' → logprob: -16.750001907348633
    5. '```' → logprob: -16.875001907348633
    6. '[
' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.250001907348633
    8. ')[' → logprob: -17.250001907348633
    9. '	j' → logprob: -18.000001907348633
    10. '[i' → logprob: -18.375001907348633

Token 657: ']' (ID: 60)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5928495486150496e-05
    2. '-' → logprob: -11.375016212463379
    3. ']' → logprob: -13.250016212463379
    4. '[' → logprob: -13.625016212463379
    5. 'j' → logprob: -13.750016212463379
    6. '[-' → logprob: -15.750016212463379
    7. ']+' → logprob: -16.375015258789062
    8. '   ' → logprob: -17.250015258789062
    9. '[
' → logprob: -17.375015258789062
    10. '[i' → logprob: -17.625015258789062

Token 658: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03370114043354988
    2. ' +' → logprob: -3.408701181411743
    3. '-' → logprob: -10.283700942993164
    4. '+j' → logprob: -11.658700942993164
    5. '[' → logprob: -12.033700942993164
    6. '[j' → logprob: -13.033700942993164
    7. ']+' → logprob: -13.283700942993164
    8. ']' → logprob: -14.158700942993164
    9. ')' → logprob: -15.033700942993164
    10. '	' → logprob: -15.158700942993164

Token 659: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.0002619318547658622
    2. ' cs' → logprob: -8.250262260437012
    3. '   ' → logprob: -15.250262260437012
    4. '	cs' → logprob: -15.625262260437012
    5. '           ' → logprob: -16.625261306762695
    6. ' ' → logprob: -17.500261306762695
    7. 'csrf' → logprob: -17.875261306762695
    8. '(cs' → logprob: -18.000261306762695
    9. '```' → logprob: -18.125261306762695
    10. ' ' → logprob: -18.500261306762695

Token 660: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: 0.0
    2. 'j' → logprob: -17.125
    3. '[' → logprob: -18.375
    4. '   ' → logprob: -19.625
    5. '[
' → logprob: -20.25
    6. '	j' → logprob: -20.375
    7. '```' → logprob: -20.375
    8. '[i' → logprob: -21.0
    9. '[js' → logprob: -21.0
    10. ' [' → logprob: -21.125

Token 661: '-' (ID: 12)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007104054093360901
    2. '-' → logprob: -7.250710487365723
    3. '[-' → logprob: -15.000710487365723
    4. 'j' → logprob: -15.875710487365723
    5. ' -' → logprob: -17.500709533691406
    6. '[' → logprob: -18.000709533691406
    7. '-j' → logprob: -19.000709533691406
    8. '(j' → logprob: -19.000709533691406
    9. '
' → logprob: -19.125709533691406
    10. '[
' → logprob: -19.375709533691406

Token 662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -11.750019073486328
    3. '```' → logprob: -11.875019073486328
    4. '   ' → logprob: -12.875019073486328
    5. ')' → logprob: -14.500019073486328
    6. '
' → logprob: -14.500019073486328
    7. 'j' → logprob: -15.250019073486328
    8. ']' → logprob: -16.000019073486328
    9. '`' → logprob: -16.375019073486328
    10. '  ' → logprob: -16.875019073486328

Token 663: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ')%' → logprob: -12.375006675720215
    3. '])' → logprob: -14.125006675720215
    4. ']' → logprob: -14.375006675720215
    5. ' )' → logprob: -14.500006675720215
    6. ')
' → logprob: -15.500006675720215
    7. '`)' → logprob: -15.625006675720215
    8. '')' → logprob: -16.12500762939453
    9. '[j' → logprob: -17.00000762939453
    10. '),' → logprob: -17.12500762939453

Token 664: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.008934217505156994
    2. ' %' → logprob: -4.883934020996094
    3. ')' → logprob: -6.758934020996094
    4. ')%' → logprob: -8.883934020996094
    5. '
' → logprob: -11.508934020996094
    6. '%
' → logprob: -12.633934020996094
    7. '%n' → logprob: -12.758934020996094
    8. '%c' → logprob: -13.508934020996094
    9. ']' → logprob: -13.633934020996094
    10. ' %=' → logprob: -13.758934020996094

Token 665: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001234428636962548
    2. ' mod' → logprob: -9.000123023986816
    3. '(mod' → logprob: -19.000123977661133
    4. '	mod' → logprob: -20.250123977661133
    5. '```' → logprob: -22.000123977661133
    6. ' ' → logprob: -22.750123977661133
    7. '   ' → logprob: -23.250123977661133
    8. '_mod' → logprob: -23.875123977661133
    9. ' мод' → logprob: -24.000123977661133
    10. 'moder' → logprob: -24.125123977661133

Token 666: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 667: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 668: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013952281326055527
    2. 'for' → logprob: -4.513952255249023
    3. ' for' → logprob: -6.388952255249023
    4. '```' → logprob: -7.263952255249023
    5. '<|end|>' → logprob: -7.888952255249023
    6. '   ' → logprob: -9.263952255249023
    7. '           ' → logprob: -11.013952255249023
    8. '#' (adapté à ' #') → logprob: -11.013952255249023
    9. '
' → logprob: -12.763952255249023
    10. '	for' → logprob: -12.763952255249023

Token 669: ' Similarly' (ID: 65037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010411443654447794
    2. '       ' → logprob: -7.501040935516357
    3. 'cs' → logprob: -8.001041412353516
    4. ' for' → logprob: -10.001041412353516
    5. 'prev' → logprob: -10.251041412353516
    6. '#' → logprob: -10.501041412353516
    7. 'j' → logprob: -11.626041412353516
    8. '   ' → logprob: -12.251041412353516
    9. 'dp' → logprob: -12.376041412353516
    10. 'temp' → logprob: -12.501041412353516

Token 670: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0635339692234993
    2. 'for' → logprob: -2.9385340213775635
    3. ' for' → logprob: -4.813533782958984
    4. '
' → logprob: -8.813533782958984
    5. '           ' → logprob: -8.813533782958984
    6. '   ' → logprob: -9.188533782958984
    7. '      ' → logprob: -10.563533782958984
    8. ',' → logprob: -11.063533782958984
    9. '```' → logprob: -11.063533782958984
    10. '	for' → logprob: -11.438533782958984

Token 671: ' compute' (ID: 23864)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02657928504049778
    2. '       ' → logprob: -3.9015793800354004
    3. ' for' → logprob: -5.1515793800354
    4. '           ' → logprob: -8.526578903198242
    5. '   ' → logprob: -11.026578903198242
    6. '```' → logprob: -12.651578903198242
    7. '	for' → logprob: -12.776578903198242
    8. ' ' → logprob: -13.276578903198242
    9. '      ' → logprob: -13.526578903198242
    10. '               ' → logprob: -13.526578903198242

Token 672: ' prefix' (ID: 18633)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0038104073610156775
    2. ' for' → logprob: -5.753810405731201
    3. '(cs' → logprob: -7.878810405731201
    4. 'cs' → logprob: -8.62881088256836
    5. '       ' → logprob: -11.12881088256836
    6. '   ' → logprob: -11.12881088256836
    7. 'the' → logprob: -11.62881088256836
    8. '(for' → logprob: -11.75381088256836
    9. '(j' → logprob: -12.00381088256836
    10. '```' → logprob: -12.25381088256836

Token 673: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.024843012914061546
    2. '[j' → logprob: -4.649843215942383
    3. ' sums' → logprob: -5.274843215942383
    4. 'cs' → logprob: -5.524843215942383
    5. '[' → logprob: -6.274843215942383
    6. 'sum' → logprob: -6.399843215942383
    7. '_s' → logprob: -6.524843215942383
    8. '       ' → logprob: -7.524843215942383
    9. '   ' → logprob: -9.399843215942383
    10. 'for' → logprob: -9.899843215942383

Token 674: ' over' (ID: 1072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6392335295677185
    2. ' for' → logprob: -1.1392335891723633
    3. '       ' → logprob: -1.8892335891723633
    4. '[' → logprob: -7.889233589172363
    5. '	for' → logprob: -8.389233589172363
    6. '           ' → logprob: -8.889233589172363
    7. '   ' → logprob: -9.264233589172363
    8. '(for' → logprob: -9.389233589172363
    9. '```' → logprob: -10.639233589172363
    10. '(cs' → logprob: -10.639233589172363

Token 675: ' '' (ID: 461)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.005251660477370024
    2. 'range' → logprob: -5.380251884460449
    3. ' cs' → logprob: -7.755251884460449
    4. '(cs' → logprob: -9.13025188446045
    5. ' range' → logprob: -9.50525188446045
    6. '   ' → logprob: -11.50525188446045
    7. 'for' → logprob: -12.38025188446045
    8. '(range' → logprob: -13.13025188446045
    9. '	cs' → logprob: -13.75525188446045
    10. '       ' → logprob: -14.00525188446045

Token 676: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.038174718618392944
    2. 'range' → logprob: -3.288174629211426
    3. 'for' → logprob: -9.913174629211426
    4. ' cs' → logprob: -10.538174629211426
    5. ' range' → logprob: -10.663174629211426
    6. '   ' → logprob: -11.413174629211426
    7. 'dp' → logprob: -12.038174629211426
    8. 'len' → logprob: -12.538174629211426
    9. '(cs' → logprob: -12.663174629211426
    10. '(range' → logprob: -13.163174629211426

Token 677: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009754245402291417
    2. '[j' → logprob: -8.250975608825684
    3. 'for' → logprob: -8.500975608825684
    4. '
' → logprob: -9.125975608825684
    5. '[' → logprob: -9.250975608825684
    6. '   ' → logprob: -9.625975608825684
    7. ')' → logprob: -9.875975608825684
    8. ']' → logprob: -10.125975608825684
    9. '```' → logprob: -10.500975608825684
    10. 'len' → logprob: -11.375975608825684

Token 678: ''' (ID: 6)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0334793329238892
    2. 'for' → logprob: -1.1584793329238892
    3. ' for' → logprob: -1.2834793329238892
    4. '[j' → logprob: -3.1584792137145996
    5. '   ' → logprob: -6.1584792137146
    6. ')' → logprob: -6.2834792137146
    7. '
' → logprob: -6.6584792137146
    8. ',' → logprob: -6.7834792137146
    9. '	for' → logprob: -7.0334792137146
    10. '           ' → logprob: -7.2834792137146

Token 679: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07628119736909866
    2. 'for' → logprob: -3.2012813091278076
    3. ' for' → logprob: -3.4512813091278076
    4. '	for' → logprob: -7.4512810707092285
    5. '	' → logprob: -8.951281547546387
    6. '   ' → logprob: -8.951281547546387
    7. '           ' → logprob: -9.826281547546387
    8. '
' → logprob: -10.201281547546387
    9. '```' → logprob: -10.451281547546387
    10. '        
' → logprob: -10.576281547546387

Token 680: ' indices' (ID: 30378)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1814626008272171
    2. 'range' → logprob: -2.306462526321411
    3. 'len' → logprob: -2.931462526321411
    4. '1' → logprob: -4.80646276473999
    5. ' j' → logprob: -6.18146276473999
    6. 'n' → logprob: -6.93146276473999
    7. ' range' → logprob: -7.30646276473999
    8. '2' → logprob: -7.55646276473999
    9. '   ' → logprob: -8.306462287902832
    10. ' len' → logprob: -8.806462287902832

Token 681: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19598466157913208
    2. 'range' → logprob: -2.0709846019744873
    3. '1' → logprob: -3.6959846019744873
    4. 'for' → logprob: -4.570984840393066
    5. ' range' → logprob: -4.820984840393066
    6. '   ' → logprob: -6.070984840393066
    7. '(range' → logprob: -6.195984840393066
    8. ' ' → logprob: -6.695984840393066
    9. '[' → logprob: -7.445984840393066
    10. 'j' → logprob: -7.695984840393066

Token 682: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4519398510456085
    2. '1' → logprob: -1.0769398212432861
    3. 'range' → logprob: -3.826939821243286
    4. 'for' → logprob: -7.326940059661865
    5. ' range' → logprob: -8.576939582824707
    6. 'len' → logprob: -8.951939582824707
    7. '2' → logprob: -10.201939582824707
    8. '[' → logprob: -10.326939582824707
    9. '0' → logprob: -10.451939582824707
    10. ' ' → logprob: -10.701939582824707

Token 683: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006902746972627938
    2. ' ,' → logprob: -8.000690460205078
    3. ',len' → logprob: -9.250690460205078
    4. '(' → logprob: -9.750690460205078
    5. ',n' → logprob: -9.875690460205078
    6. '   ' → logprob: -10.500690460205078
    7. ' in' → logprob: -10.500690460205078
    8. '(len' → logprob: -10.500690460205078
    9. 'for' → logprob: -10.750690460205078
    10. 'in' → logprob: -11.875690460205078

Token 684: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.14508719742298126
    2. '2' → logprob: -2.145087242126465
    3. 'n' → logprob: -4.395087242126465
    4. ' len' → logprob: -6.020087242126465
    5. '(' → logprob: -6.520087242126465
    6. '   ' → logprob: -7.645087242126465
    7. ' ' → logprob: -8.020087242126465
    8. '(len' → logprob: -8.270087242126465
    9. '1' → logprob: -8.395087242126465
    10. ' n' → logprob: -9.145087242126465

Token 685: '-' (ID: 12)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7917449474334717
    2. ':' → logprob: -1.2917449474334717
    3. '+' → logprob: -2.4167449474334717
    4. 'for' → logprob: -2.7917449474334717
    5. '[j' → logprob: -3.4167449474334717
    6. '           ' → logprob: -3.6667449474334717
    7. ':
' → logprob: -4.041745185852051
    8. '):
' → logprob: -4.666745185852051
    9. '   ' → logprob: -5.041745185852051
    10. '):' → logprob: -5.041745185852051

Token 686: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5299422144889832
    2. '1' → logprob: -0.9049422144889832
    3. '+' → logprob: -5.779942035675049
    4. '```' → logprob: -6.154942035675049
    5. 'len' → logprob: -7.154942035675049
    6. 'range' → logprob: -8.029942512512207
    7. '2' → logprob: -9.029942512512207
    8. 'length' → logprob: -9.529942512512207
    9. '   ' → logprob: -10.029942512512207
    10. 'for' → logprob: -10.279942512512207

Token 687: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003503611544147134
    2. ' for' → logprob: -6.003503799438477
    3. 'for' → logprob: -7.378503799438477
    4. '           ' → logprob: -8.253503799438477
    5. '   ' → logprob: -9.378503799438477
    6. '	' → logprob: -10.878503799438477
    7. '```' → logprob: -11.378503799438477
    8. '	for' → logprob: -11.878503799438477
    9. ':' → logprob: -12.003503799438477
    10. ':
' → logprob: -12.378503799438477

Token 688: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027898045256733894
    2. 'for' → logprob: -4.402897834777832
    3. ' for' → logprob: -4.527897834777832
    4. '	for' → logprob: -6.152897834777832
    5. '	' → logprob: -6.777897834777832
    6. '```' → logprob: -7.277897834777832
    7. '   ' → logprob: -8.402897834777832
    8. '           ' → logprob: -8.402897834777832
    9. '	   ' → logprob: -10.402897834777832
    10. '	       ' → logprob: -11.652897834777832

Token 689: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48121896386146545
    2. 'for' (adapté à ' for') → logprob: -0.9812189340591431
    3. ' for' → logprob: -4.9812188148498535
    4. '	for' → logprob: -8.731219291687012
    5. '   ' → logprob: -9.731219291687012
    6. '	' → logprob: -11.106219291687012
    7. '           ' → logprob: -11.481219291687012
    8. '```' → logprob: -13.106219291687012
    9. '	   ' → logprob: -13.231219291687012
    10. ' ' → logprob: -15.231219291687012

Token 690: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0036025596782565117
    2. ' j' → logprob: -5.628602504730225
    3. 'k' → logprob: -13.378602981567383
    4. '_j' → logprob: -14.503602981567383
    5. '	j' → logprob: -15.253602981567383
    6. '   ' → logprob: -16.003602981567383
    7. 'i' → logprob: -16.128602981567383
    8. ' ' → logprob: -17.128602981567383
    9. '$j' → logprob: -17.128602981567383
    10. '```' → logprob: -17.628602981567383

Token 691: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038183555006980896
    2. 'in' → logprob: -3.2881834506988525
    3. '1' → logprob: -9.413183212280273
    4. ' ' → logprob: -10.663183212280273
    5. '	in' → logprob: -10.913183212280273
    6. ' j' → logprob: -12.413183212280273
    7. 'In' → logprob: -13.288183212280273
    8. '[' → logprob: -13.413183212280273
    9. '```' → logprob: -13.413183212280273
    10. '=' → logprob: -13.663183212280273

Token 692: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009115827269852161
    2. ' range' → logprob: -7.000911712646484
    3. '1' → logprob: -15.625911712646484
    4. '(range' → logprob: -18.500911712646484
    5. '(' → logprob: -18.625911712646484
    6. ' ' → logprob: -19.750911712646484
    7. '	range' → logprob: -20.875911712646484
    8. '   ' → logprob: -21.375911712646484
    9. '  ' → logprob: -22.750911712646484
    10. 'rang' → logprob: -23.375911712646484

Token 693: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011048762127757072
    2. '1' → logprob: -4.511048793792725
    3. ' (' → logprob: -14.511048316955566
    4. '   ' → logprob: -15.386048316955566
    5. ' ' → logprob: -15.636048316955566
    6. '(
' → logprob: -16.886049270629883
    7. '	' → logprob: -18.011049270629883
    8. 'range' → logprob: -19.386049270629883
    9. '[' → logprob: -19.886049270629883
    10. '  ' → logprob: -20.011049270629883

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.625001907348633
    4. '(' → logprob: -17.875001907348633
    5. 'n' → logprob: -17.875001907348633
    6. '2' → logprob: -18.500001907348633
    7. '0' → logprob: -18.750001907348633
    8. '
' → logprob: -19.000001907348633
    9. '  ' → logprob: -20.250001907348633
    10. '	' → logprob: -20.375001907348633

Token 695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036715567694045603
    2. ',n' → logprob: -8.000367164611816
    3. '1' → logprob: -10.500367164611816
    4. ' ,' → logprob: -13.375367164611816
    5. 'n' → logprob: -13.625367164611816
    6. '(n' → logprob: -14.500367164611816
    7. ',
' → logprob: -15.125367164611816
    8. '(' → logprob: -15.125367164611816
    9. '2' → logprob: -15.625367164611816
    10. '0' → logprob: -16.1253662109375

Token 696: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000948141620028764
    2. 'len' → logprob: -7.625947952270508
    3. ' n' → logprob: -7.750947952270508
    4. '2' → logprob: -10.500947952270508
    5. ' len' → logprob: -13.625947952270508
    6. '   ' → logprob: -15.000947952270508
    7. ' ' → logprob: -15.250947952270508
    8. '	n' → logprob: -15.750947952270508
    9. '(n' → logprob: -16.000947952270508
    10. '       ' → logprob: -17.500947952270508

Token 697: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2548326849937439
    2. '):' → logprob: -1.7548327445983887
    3. '):
' → logprob: -3.2548327445983887
    4. '<|end|>' → logprob: -5.004832744598389
    5. ')' → logprob: -5.379832744598389
    6. ':' → logprob: -7.879832744598389
    7. '-' → logprob: -8.00483226776123
    8. '[' → logprob: -8.25483226776123
    9. '```' → logprob: -9.00483226776123
    10. '2' → logprob: -9.50483226776123

Token 698: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021693101152777672
    2. '       ' → logprob: -4.146693229675293
    3. 'cs' → logprob: -5.271693229675293
    4. '   ' → logprob: -8.021693229675293
    5. '               ' → logprob: -9.646693229675293
    6. '	cs' → logprob: -10.146693229675293
    7. '```' → logprob: -10.521693229675293
    8. ' cs' → logprob: -10.896693229675293
    9. '		' → logprob: -11.521693229675293
    10. '	       ' → logprob: -12.021693229675293

Token 699: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' (adapté à ' cs') → logprob: -2.3438327843905427e-05
    2. '           ' → logprob: -11.37502384185791
    3. ' cs' → logprob: -11.87502384185791
    4. '   ' → logprob: -12.87502384185791
    5. '       ' → logprob: -13.25002384185791
    6. '	cs' → logprob: -15.12502384185791
    7. '               ' → logprob: -15.25002384185791
    8. 'csrf' → logprob: -17.500022888183594
    9. '_cs' → logprob: -18.125022888183594
    10. '                   ' → logprob: -18.250022888183594

Token 700: '2' (ID: 17)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002727793762460351
    2. '2' → logprob: -8.250272750854492
    3. '```' → logprob: -12.000272750854492
    4. '[' → logprob: -12.875272750854492
    5. '   ' → logprob: -13.750272750854492
    6. 'j' → logprob: -14.625272750854492
    7. '\[' → logprob: -15.375272750854492
    8. 's' → logprob: -15.375272750854492
    9. '[
' → logprob: -15.875272750854492
    10. '[i' → logprob: -16.250272750854492

Token 701: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.1008713702030946e-06
    2. 'j' → logprob: -13.625001907348633
    3. '[' → logprob: -14.375001907348633
    4. '```' → logprob: -15.375001907348633
    5. '[i' → logprob: -16.875001907348633
    6. '=' → logprob: -17.000001907348633
    7. '\[' → logprob: -17.500001907348633
    8. ' [' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.625001907348633
    10. '=j' → logprob: -18.625001907348633

Token 702: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0879405066370964
    2. ']' → logprob: -2.8379404544830322
    3. ' =' → logprob: -3.7129404544830322
    4. ']=' → logprob: -6.712940692901611
    5. ')' → logprob: -11.462940216064453
    6. ']=(' → logprob: -13.212940216064453
    7. ']+=' → logprob: -13.587940216064453
    8. '[' → logprob: -13.837940216064453
    9. '+=' → logprob: -13.962940216064453
    10. '=(' → logprob: -13.962940216064453

Token 703: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.493430894101039e-05
    2. ' =' → logprob: -9.500075340270996
    3. '+=' → logprob: -16.62507438659668
    4. '=(' → logprob: -18.12507438659668
    5. '%=' → logprob: -18.87507438659668
    6. '   ' → logprob: -20.75007438659668
    7. '[' → logprob: -21.12507438659668
    8. '.=' → logprob: -21.25007438659668
    9. ']=' → logprob: -21.37507438659668
    10. '＝' → logprob: -22.00007438659668

Token 704: ' (' (ID: 350)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.0010041086934506893
    2. ' (' → logprob: -7.501004219055176
    3. '(c' → logprob: -8.001004219055176
    4. '(' → logprob: -9.751004219055176
    5. '(Cs' → logprob: -10.001004219055176
    6. '   ' → logprob: -12.376004219055176
    7. '(cd' → logprob: -13.751004219055176
    8. ' ' → logprob: -13.876004219055176
    9. '(cx' → logprob: -14.001004219055176
    10. '(cp' → logprob: -14.126004219055176

Token 705: 'cs' (ID: 8102)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -6.611323624383658e-05
    2. 'cs' → logprob: -9.750065803527832
    3. ' (' → logprob: -12.000065803527832
    4. '(c' → logprob: -14.125065803527832
    5. '(Cs' → logprob: -15.000065803527832
    6. '	cs' → logprob: -16.25006675720215
    7. '   ' → logprob: -16.37506675720215
    8. ' cs' → logprob: -16.50006675720215
    9. '(css' → logprob: -16.50006675720215
    10. '(cd' → logprob: -16.87506675720215

Token 706: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.070001021027565
    2. '[j' → logprob: -2.6950011253356934
    3. '(j' → logprob: -10.070000648498535
    4. '[' → logprob: -12.195000648498535
    5. 'j' → logprob: -12.320000648498535
    6. '```' → logprob: -12.320000648498535
    7. '[(' → logprob: -13.195000648498535
    8. '   ' → logprob: -13.445000648498535
    9. 'cs' → logprob: -13.695000648498535
    10. '[
' → logprob: -14.320000648498535

Token 707: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.7729658540920354e-05
    2. 'j' → logprob: -10.500027656555176
    3. '[' → logprob: -16.000028610229492
    4. '   ' → logprob: -18.625028610229492
    5. '```' → logprob: -19.250028610229492
    6. '(j' → logprob: -19.375028610229492
    7. '	j' → logprob: -19.875028610229492
    8. '[
' → logprob: -20.125028610229492
    9. '[i' → logprob: -20.250028610229492
    10. '\[' → logprob: -20.875028610229492

Token 708: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38824954628944397
    2. '[j' → logprob: -1.1382495164871216
    3. '[' → logprob: -7.638249397277832
    4. ']+' → logprob: -7.763249397277832
    5. 'j' → logprob: -8.263249397277832
    6. '+' → logprob: -8.763249397277832
    7. '2' → logprob: -10.638249397277832
    8. '   ' → logprob: -12.138249397277832
    9. '```' → logprob: -12.263249397277832
    10. ')' → logprob: -12.638249397277832

Token 709: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00678109610453248
    2. ' +' → logprob: -5.006781101226807
    3. '[j' → logprob: -10.506780624389648
    4. '[' → logprob: -11.006780624389648
    5. '+j' → logprob: -11.131780624389648
    6. '+(' → logprob: -13.381780624389648
    7. '+c' → logprob: -13.756780624389648
    8. '   ' → logprob: -13.881780624389648
    9. '(' → logprob: -13.881780624389648
    10. '```' → logprob: -14.881780624389648

Token 710: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.001502717612311244
    2. ' cs' → logprob: -6.501502513885498
    3. '	cs' → logprob: -15.501502990722656
    4. '   ' → logprob: -16.751502990722656
    5. '(cs' → logprob: -17.376502990722656
    6. 'csrf' → logprob: -17.376502990722656
    7. ' ' → logprob: -17.751502990722656
    8. '_cs' → logprob: -18.501502990722656
    9. 'c' → logprob: -18.626502990722656
    10. 'csr' → logprob: -19.126502990722656

Token 711: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05525019392371178
    2. 'cs' → logprob: -3.0552501678466797
    3. '[j' → logprob: -5.30525016784668
    4. ' cs' → logprob: -6.43025016784668
    5. '[' → logprob: -10.93025016784668
    6. 's' → logprob: -11.43025016784668
    7. '(cs' → logprob: -11.80525016784668
    8. '   ' → logprob: -12.05525016784668
    9. '```' → logprob: -12.05525016784668
    10. 'j' → logprob: -12.43025016784668

Token 712: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0280383548888494e-06
    2. 'j' → logprob: -13.875000953674316
    3. '[' → logprob: -17.250001907348633
    4. '[
' → logprob: -19.500001907348633
    5. '
' → logprob: -20.375001907348633
    6. '```' → logprob: -20.750001907348633
    7. '\[' → logprob: -21.500001907348633
    8. '[i' → logprob: -21.625001907348633
    9. '   ' → logprob: -22.000001907348633
    10. ' [' → logprob: -22.000001907348633

Token 713: '-' (ID: 12)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00016420685278717428
    2. '-' → logprob: -9.250164031982422
    3. 'j' → logprob: -9.625164031982422
    4. '[-' → logprob: -13.750164031982422
    5. '[' → logprob: -14.000164031982422
    6. '1' → logprob: -16.750164031982422
    7. '[i' → logprob: -17.500164031982422
    8. '[
' → logprob: -17.875164031982422
    9. '	j' → logprob: -18.125164031982422
    10. '```' → logprob: -18.500164031982422

Token 714: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '-' → logprob: -14.250001907348633
    3. '0' → logprob: -14.375001907348633
    4. '```' → logprob: -16.000001907348633
    5. ' ' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.625001907348633
    7. ')' → logprob: -17.250001907348633
    8. 'prev' → logprob: -17.875001907348633
    9. '2' → logprob: -18.375001907348633
    10. ']' → logprob: -18.750001907348633

Token 715: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.840432565193623e-05
    2. ')%' → logprob: -9.500088691711426
    3. '           ' → logprob: -12.250088691711426
    4. ' )' → logprob: -12.250088691711426
    5. '       ' → logprob: -13.125088691711426
    6. '   ' → logprob: -14.500088691711426
    7. ']' → logprob: -15.125088691711426
    8. ')
' → logprob: -15.500088691711426
    9. '               ' → logprob: -15.750088691711426
    10. '')' → logprob: -15.875088691711426

Token 716: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10022769868373871
    2. ' %' → logprob: -2.3502275943756104
    3. ')%' → logprob: -11.350227355957031
    4. ')' → logprob: -11.850227355957031
    5. ' ' → logprob: -14.975227355957031
    6. ']%' → logprob: -15.100227355957031
    7. ' ' → logprob: -15.225227355957031
    8. '%
' → logprob: -15.475227355957031
    9. '<|end|>' → logprob: -15.725227355957031
    10. ' %=' → logprob: -15.725227355957031

Token 717: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005530327325686812
    2. ' mod' → logprob: -7.500553131103516
    3. '(mod' → logprob: -19.125553131103516
    4. '	mod' → logprob: -19.500553131103516
    5. ' ' → logprob: -22.000553131103516
    6. 'm' → logprob: -22.125553131103516
    7. '_mod' → logprob: -22.375553131103516
    8. '   ' → logprob: -22.375553131103516
    9. '
' → logprob: -22.500553131103516
    10. '100' → logprob: -22.500553131103516

Token 718: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002458652714267373
    2. '```' → logprob: -6.502458572387695
    3. '<|end|>' → logprob: -7.502458572387695
    4. 'for' → logprob: -8.627458572387695
    5. '   ' → logprob: -9.377458572387695
    6. ' for' → logprob: -9.752458572387695
    7. '
' → logprob: -10.252458572387695
    8. '           ' → logprob: -10.752458572387695
    9. '        
' → logprob: -12.002458572387695
    10. '#' → logprob: -12.127458572387695

Token 720: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05892715975642204
    2. 'for' → logprob: -3.058927059173584
    3. ' for' → logprob: -4.683927059173584
    4. '   ' → logprob: -7.183927059173584
    5. '<|end|>' → logprob: -9.058927536010742
    6. '```' → logprob: -9.433927536010742
    7. '        
' → logprob: -10.558927536010742
    8. '           ' → logprob: -11.183927536010742
    9. '	for' → logprob: -11.308927536010742
    10. '
' → logprob: -11.433927536010742

Token 721: ' Now' (ID: 6549)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007563321851193905
    2. 'dp' → logprob: -5.63256311416626
    3. '       ' → logprob: -6.00756311416626
    4. '#' → logprob: -6.75756311416626
    5. 'next' → logprob: -8.757563591003418
    6. 'new' → logprob: -10.257563591003418
    7. ' for' → logprob: -10.507563591003418
    8. '   ' → logprob: -10.757563591003418
    9. 'tmp' → logprob: -11.257563591003418
    10. 'temp' → logprob: -11.882563591003418

Token 722: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6441774964332581
    2. ' for' → logprob: -0.7691774964332581
    3. 'for' → logprob: -4.894177436828613
    4. '   ' → logprob: -6.519177436828613
    5. '        
' → logprob: -7.269177436828613
    6. '
' → logprob: -7.894177436828613
    7. ',' → logprob: -8.019177436828613
    8. '```' → logprob: -8.269177436828613
    9. '    ' → logprob: -8.394177436828613
    10. '           ' → logprob: -9.019177436828613

Token 723: ' update' (ID: 4027)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5238973498344421
    2. 'for' → logprob: -0.8988973498344421
    3. '       ' → logprob: -7.523897171020508
    4. '#' → logprob: -9.648897171020508
    5. 'j' → logprob: -9.898897171020508
    6. ' j' → logprob: -10.523897171020508
    7. ' #' → logprob: -11.023897171020508
    8. '   ' → logprob: -11.273897171020508
    9. 'prev' → logprob: -12.023897171020508
    10. 'dp' → logprob: -12.023897171020508

Token 724: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3635920584201813
    2. 'for' → logprob: -1.8635920286178589
    3. ' dp' → logprob: -2.4885921478271484
    4. 'dp' → logprob: -3.1135921478271484
    5. '   ' → logprob: -4.238592147827148
    6. '       ' → logprob: -5.988592147827148
    7. ' j' → logprob: -6.488592147827148
    8. ' the' → logprob: -6.613592147827148
    9. 'j' → logprob: -6.863592147827148
    10. 'range' → logprob: -7.988592147827148

Token 725: ' next' (ID: 2613)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016957100888248533
    2. 'dp' → logprob: -9.87516975402832
    3. ' for' → logprob: -10.00016975402832
    4. '   ' → logprob: -10.37516975402832
    5. '```' → logprob: -10.75016975402832
    6. 'next' → logprob: -11.12516975402832
    7. 'j' → logprob: -13.25016975402832
    8. 'i' → logprob: -13.50016975402832
    9. '       ' → logprob: -14.00016975402832
    10. '#' → logprob: -14.00016975402832

Token 726: ' DP' (ID: 51992)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.23121921718120575
    2. '][' → logprob: -3.2312192916870117
    3. '[' → logprob: -3.4812192916870117
    4. ']' → logprob: -3.8562192916870117
    5. '_token' → logprob: -3.8562192916870117
    6. '   ' → logprob: -3.9812192916870117
    7. ' i' → logprob: -3.9812192916870117
    8. 'i' → logprob: -4.606219291687012
    9. ' row' → logprob: -4.981219291687012
    10. ' line' → logprob: -4.981219291687012

Token 727: ' stage' (ID: 9402)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.015110816806554794
    2. '[' → logprob: -4.265110969543457
    3. '   ' → logprob: -7.890110969543457
    4. '[j' → logprob: -8.515110969543457
    5. '[
' → logprob: -9.640110969543457
    6. ' row' → logprob: -9.765110969543457
    7. ' [' → logprob: -10.390110969543457
    8. ']' → logprob: -10.515110969543457
    9. '[row' → logprob: -10.515110969543457
    10. '\[' → logprob: -10.640110969543457

Token 728: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15241855382919312
    2. '   ' → logprob: -2.402418613433838
    3. ' for' → logprob: -3.027418613433838
    4. 'for' → logprob: -7.152418613433838
    5. '[' → logprob: -7.402418613433838
    6. '<|end|>' → logprob: -7.902418613433838
    7. ',' → logprob: -8.65241813659668
    8. '[i' → logprob: -9.52741813659668
    9. '        
' → logprob: -9.77741813659668
    10. '	for' → logprob: -9.90241813659668

Token 729: 'dp' (ID: 19037)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1631663590669632
    2. 'dp' → logprob: -2.4131662845611572
    3. ' i' → logprob: -4.163166522979736
    4. 'for' → logprob: -4.538166522979736
    5. '   ' → logprob: -4.538166522979736
    6. '       ' → logprob: -4.913166522979736
    7. 'range' → logprob: -5.038166522979736
    8. ' range' → logprob: -6.038166522979736
    9. 'j' → logprob: -6.038166522979736
    10. ' dp' → logprob: -6.038166522979736

Token 730: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.203409844194539e-05
    2. ' [' → logprob: -11.000041961669922
    3. '
' → logprob: -12.000041961669922
    4. '   ' → logprob: -12.500041961669922
    5. 'i' → logprob: -13.000041961669922
    6. '][' → logprob: -13.000041961669922
    7. '```' → logprob: -13.000041961669922
    8. '       ' → logprob: -13.250041961669922
    9. ')[' → logprob: -13.625041961669922
    10. '[' → logprob: -13.625041961669922

Token 731: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001606628531590104
    2. '][' → logprob: -7.501606464385986
    3. '+
' → logprob: -7.751606464385986
    4. ' +' → logprob: -8.001606941223145
    5. ']' → logprob: -8.626606941223145
    6. '[' → logprob: -10.751606941223145
    7. '+]' → logprob: -11.001606941223145
    8. '   ' → logprob: -11.251606941223145
    9. ']+' → logprob: -11.251606941223145
    10. '+[' → logprob: -11.376606941223145

Token 732: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002301323926076293
    2. '][' → logprob: -6.502301216125488
    3. ']' → logprob: -7.377301216125488
    4. '
' → logprob: -9.752301216125488
    5. ' ' → logprob: -10.002301216125488
    6. '   ' → logprob: -10.127301216125488
    7. '```' → logprob: -11.252301216125488
    8. '+' → logprob: -12.127301216125488
    9. ' ][' → logprob: -13.377301216125488
    10. '])' → logprob: -13.377301216125488

Token 733: '])' (ID: 4636)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.31491485238075256
    2. '])' → logprob: -1.4399148225784302
    3. ']' → logprob: -3.8149149417877197
    4. '][:' → logprob: -4.939914703369141
    5. ')' → logprob: -6.189914703369141
    6. '])[' → logprob: -6.939914703369141
    7. '       ' → logprob: -8.68991470336914
    8. '   ' → logprob: -8.81491470336914
    9. ')[' → logprob: -8.93991470336914
    10. '],' → logprob: -9.06491470336914

Token 734: ' based' (ID: 4122)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13090485334396362
    2. '   ' → logprob: -2.8809049129486084
    3. ' for' → logprob: -2.8809049129486084
    4. '<|end|>' → logprob: -5.380904674530029
    5. ',' → logprob: -6.755904674530029
    6. 'for' → logprob: -7.005904674530029
    7. '```' → logprob: -7.005904674530029
    8. '[' → logprob: -7.005904674530029
    9. ':' → logprob: -7.755904674530029
    10. ')' → logprob: -7.755904674530029

Token 735: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.376828134059906
    2. 'for' → logprob: -1.6268281936645508
    3. '       ' → logprob: -3.251828193664551
    4. ' on' → logprob: -4.001828193664551
    5. ']' → logprob: -4.376828193664551
    6. '[' → logprob: -4.501828193664551
    7. '   ' → logprob: -4.626828193664551
    8. '[i' → logprob: -5.126828193664551
    9. '[j' → logprob: -5.501828193664551
    10. ')' → logprob: -5.501828193664551

Token 736: ' the' (ID: 290)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.5040784478187561
    2. ' cs' → logprob: -1.6290783882141113
    3. ' the' → logprob: -2.7540783882141113
    4. 'the' → logprob: -3.3790783882141113
    5. 'range' → logprob: -3.3790783882141113
    6. ' range' → logprob: -3.6290783882141113
    7. 'j' → logprob: -4.379078388214111
    8. ' j' → logprob: -4.629078388214111
    9. 'num' → logprob: -5.754078388214111
    10. ' these' → logprob: -5.879078388214111

Token 737: ' current' (ID: 2208)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.2739201784133911
    2. 'dp' → logprob: -2.0239200592041016
    3. 'for' → logprob: -2.7739200592041016
    4. ' for' → logprob: -4.523920059204102
    5. ' cs' → logprob: -4.648920059204102
    6. 'n' → logprob: -5.523920059204102
    7. 'current' → logprob: -5.648920059204102
    8. 'j' → logprob: -5.773920059204102
    9. ' dp' → logprob: -6.273920059204102
    10. 'previous' → logprob: -6.273920059204102

Token 738: ' prefix' (ID: 18633)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.9170453548431396
    2. 'dp' → logprob: -1.1670453548431396
    3. ' row' → logprob: -2.2920453548431396
    4. '[i' → logprob: -2.9170453548431396
    5. 'row' → logprob: -3.2920453548431396
    6. ' line' → logprob: -4.167045593261719
    7. '_dp' → logprob: -4.542045593261719
    8. '   ' → logprob: -4.542045593261719
    9. '[' → logprob: -4.667045593261719
    10. ']' → logprob: -4.917045593261719

Token 739: ' sums' (ID: 73121)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15585514903068542
    2. ' sums' → logprob: -2.780855178833008
    3. 'dp' → logprob: -3.280855178833008
    4. '           ' → logprob: -4.405855178833008
    5. 'sum' → logprob: -5.280855178833008
    6. '   ' → logprob: -5.280855178833008
    7. '_' → logprob: -5.780855178833008
    8. '[j' → logprob: -6.030855178833008
    9. 'for' → logprob: -6.030855178833008
    10. '[' → logprob: -6.030855178833008

Token 740: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1568775475025177
    2. ' for' → logprob: -2.7818775177001953
    3. '   ' → logprob: -3.2818775177001953
    4. '<|end|>' → logprob: -3.6568775177001953
    5. '```' → logprob: -5.406877517700195
    6. '[' → logprob: -5.656877517700195
    7. 'for' → logprob: -5.781877517700195
    8. ',' → logprob: -6.406877517700195
    9. ':' → logprob: -6.531877517700195
    10. '<|end|>' → logprob: -6.781877517700195

Token 741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4058561325073242
    2. '	for' → logprob: -2.155856132507324
    3. ' for' → logprob: -2.655856132507324
    4. '   ' → logprob: -2.905856132507324
    5. 'for' → logprob: -2.905856132507324
    6. '```' → logprob: -3.655856132507324
    7. '[' → logprob: -5.280856132507324
    8. '	' → logprob: -5.655856132507324
    9. '<|end|>' → logprob: -6.280856132507324
    10. '	   ' → logprob: -7.530856132507324

Token 742: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2428796887397766
    2. 'for' (adapté à ' for') → logprob: -2.117879629135132
    3. ' for' → logprob: -2.367879629135132
    4. '	for' → logprob: -6.992879867553711
    5. '   ' → logprob: -7.867879867553711
    6. '```' → logprob: -8.242879867553711
    7. '	   ' → logprob: -9.617879867553711
    8. '	' → logprob: -11.242879867553711
    9. '<|end|>' → logprob: -12.242879867553711
    10. ' ' → logprob: -12.242879867553711

Token 743: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03275061771273613
    2. ' j' → logprob: -3.6577506065368652
    3. 'x' → logprob: -5.907750606536865
    4. 'k' → logprob: -5.907750606536865
    5. 'i' → logprob: -8.407751083374023
    6. 'a' → logprob: -8.532751083374023
    7. 'l' → logprob: -9.282751083374023
    8. ' x' → logprob: -9.407751083374023
    9. 'v' → logprob: -9.532751083374023
    10. ' k' → logprob: -10.032751083374023

Token 744: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038157057017087936
    2. 'in' → logprob: -3.2881569862365723
    3. '	in' → logprob: -9.91315746307373
    4. ' ' → logprob: -10.41315746307373
    5. '1' → logprob: -11.16315746307373
    6. '0' → logprob: -12.53815746307373
    7. ')' → logprob: -12.91315746307373
    8. '   ' → logprob: -12.91315746307373
    9. '    ' → logprob: -13.16315746307373
    10. '	' → logprob: -13.16315746307373

Token 745: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013279760023579001
    2. ' range' → logprob: -6.626327991485596
    3. 'n' → logprob: -14.251327514648438
    4. '(range' → logprob: -14.376327514648438
    5. ' ' → logprob: -15.751327514648438
    6. '   ' → logprob: -15.876327514648438
    7. 'ran' → logprob: -16.376327514648438
    8. 'r' → logprob: -16.751327514648438
    9. 'in' → logprob: -17.376327514648438
    10. '	range' → logprob: -17.376327514648438

Token 746: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5760623216629028
    2. '(' → logprob: -0.8260623216629028
    3. '(len' → logprob: -9.701062202453613
    4. '((' → logprob: -11.076062202453613
    5. '(j' → logprob: -11.201062202453613
    6. '(
' → logprob: -11.326062202453613
    7. '(K' → logprob: -12.326062202453613
    8. '(s' → logprob: -12.326062202453613
    9. '2' → logprob: -12.451062202453613
    10. '1' → logprob: -13.451062202453613

Token 747: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04793204739689827
    2. 'n' → logprob: -3.2979321479797363
    3. '1' → logprob: -5.172932147979736
    4. '0' → logprob: -5.547932147979736
    5. '(' → logprob: -9.172931671142578
    6. 'len' → logprob: -9.422931671142578
    7. 'j' → logprob: -10.047931671142578
    8. '(n' → logprob: -11.047931671142578
    9. '   ' → logprob: -11.922931671142578
    10. ' ' → logprob: -12.172931671142578

Token 748: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009030037908814847
    2. ',n' → logprob: -7.125903129577637
    3. ' ,' → logprob: -9.500903129577637
    4. ',j' → logprob: -11.375903129577637
    5. ',
' → logprob: -12.250903129577637
    6. '(n' → logprob: -12.750903129577637
    7. '   ' → logprob: -13.500903129577637
    8. '(' → logprob: -13.875903129577637
    9. 'n' → logprob: -14.500903129577637
    10. ',len' → logprob: -14.750903129577637

Token 749: ' n' (ID: 297)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09010528773069382
    2. 'n' → logprob: -2.4651052951812744
    3. ' ' → logprob: -7.340105056762695
    4. ' n' → logprob: -8.215105056762695
    5. 'K' → logprob: -8.840105056762695
    6. 'len' → logprob: -10.215105056762695
    7. '(' → logprob: -10.965105056762695
    8. '   ' → logprob: -11.340105056762695
    9. '```' → logprob: -11.840105056762695
    10. 'j' → logprob: -11.965105056762695

Token 750: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.7729658540920354e-05
    2. '+
' → logprob: -11.500027656555176
    3. ' +' → logprob: -11.750027656555176
    4. '+j' → logprob: -12.000027656555176
    5. '+n' → logprob: -12.750027656555176
    6. '[' → logprob: -15.625027656555176
    7. '()+' → logprob: -16.250028610229492
    8. '{' → logprob: -16.875028610229492
    9. ')+' → logprob: -17.125028610229492
    10. '+)' → logprob: -17.125028610229492

Token 751: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009967030957341194
    2. '+' → logprob: -4.634966850280762
    3. '2' → logprob: -8.759966850280762
    4. '```' → logprob: -10.509966850280762
    5. 'n' → logprob: -11.384966850280762
    6. ' ' → logprob: -12.134966850280762
    7. '+
' → logprob: -12.884966850280762
    8. '+j' → logprob: -13.634966850280762
    9. '   ' → logprob: -13.759966850280762
    10. 'j' → logprob: -14.134966850280762

Token 752: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2385522425174713
    2. '):
' → logprob: -1.738552212715149
    3. ':' → logprob: -3.3635523319244385
    4. ':
' → logprob: -7.238552093505859
    5. '       ' → logprob: -7.363552093505859
    6. ')' → logprob: -8.73855209350586
    7. '   ' → logprob: -8.86355209350586
    8. '+' → logprob: -9.73855209350586
    9. '           ' → logprob: -9.86355209350586
    10. ',' → logprob: -11.36355209350586

Token 753: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033785225823521614
    2. '```' → logprob: -6.503378391265869
    3. '           ' → logprob: -7.128378391265869
    4. 'dp' → logprob: -7.503378391265869
    5. '	dp' → logprob: -8.503378868103027
    6. ' dp' → logprob: -8.628378868103027
    7. '   ' → logprob: -10.128378868103027
    8. '(dp' → logprob: -10.378378868103027
    9. '[' → logprob: -11.128378868103027
    10. '	' → logprob: -11.378378868103027

Token 754: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002609548158943653
    2. 'for' → logprob: -6.377609729766846
    3. ' dp' → logprob: -8.002609252929688
    4. '           ' → logprob: -8.127609252929688
    5. 'val' → logprob: -9.877609252929688
    6. 'if' → logprob: -10.002609252929688
    7. '   ' → logprob: -10.377609252929688
    8. 'k' → logprob: -10.752609252929688
    9. '       ' → logprob: -10.877609252929688
    10. 'x' → logprob: -11.127609252929688

Token 755: ' Update' (ID: 9152)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007650045678019524
    2. 'val' → logprob: -5.882649898529053
    3. 'if' → logprob: -6.132649898529053
    4. ' dp' → logprob: -7.007649898529053
    5. 'for' → logprob: -7.382649898529053
    6. '       ' → logprob: -8.507650375366211
    7. '           ' → logprob: -9.007650375366211
    8. 'x' → logprob: -9.132650375366211
    9. 'left' → logprob: -9.257650375366211
    10. '   ' → logprob: -9.507650375366211

Token 756: ' negative' (ID: 12626)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5274596810340881
    2. ' dp' → logprob: -0.9024596810340881
    3. '           ' → logprob: -5.902459621429443
    4. ' for' → logprob: -8.152460098266602
    5. 'for' → logprob: -8.402460098266602
    6. '```' → logprob: -8.777460098266602
    7. '   ' → logprob: -9.027460098266602
    8. '            ' → logprob: -9.402460098266602
    9. '               ' → logprob: -9.402460098266602
    10. '(dp' → logprob: -9.652460098266602

Token 757: ' indices' (ID: 30378)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4124897718429565
    2. '[j' → logprob: -1.7874897718429565
    3. 'dp' → logprob: -2.162489891052246
    4. ']' → logprob: -2.287489891052246
    5. ' dp' → logprob: -2.662489891052246
    6. '[' → logprob: -2.787489891052246
    7. '][' → logprob: -3.287489891052246
    8. '=' → logprob: -3.287489891052246
    9. ' =' → logprob: -3.412489891052246
    10. '           ' → logprob: -3.537489891052246

Token 758: ' from' (ID: 591)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.14512760937213898
    2. '[-' → logprob: -3.145127534866333
    3. ' =' → logprob: -3.895127534866333
    4. '[' → logprob: -4.020127773284912
    5. '-' → logprob: -4.520127773284912
    6. '=' → logprob: -4.770127773284912
    7. '           ' → logprob: -5.145127773284912
    8. ':' → logprob: -5.270127773284912
    9. ' -' → logprob: -5.395127773284912
    10. '   ' → logprob: -5.895127773284912

Token 759: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1267632246017456
    2. 'j' → logprob: -1.1267632246017456
    3. 'n' → logprob: -2.376763343811035
    4. 'dp' → logprob: -2.376763343811035
    5. '-n' → logprob: -2.751763343811035
    6. '-j' → logprob: -3.876763343811035
    7. 'max' → logprob: -4.001763343811035
    8. '-' → logprob: -4.751763343811035
    9. ' j' → logprob: -4.876763343811035
    10. '1' → logprob: -5.001763343811035

Token 760: ' end' (ID: 1268)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5684307813644409
    2. 'n' → logprob: -0.9434307813644409
    3. 'dp' → logprob: -3.4434309005737305
    4. '0' → logprob: -6.3184309005737305
    5. ' j' → logprob: -6.5684309005737305
    6. '(n' → logprob: -6.5684309005737305
    7. ' n' → logprob: -6.8184309005737305
    8. '-j' → logprob: -7.0684309005737305
    9. '```' → logprob: -7.0684309005737305
    10. 'cs' → logprob: -7.3184309005737305

Token 761: ':' (ID: 25)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.3965247869491577
    2. '```' → logprob: -2.1465249061584473
    3. '           ' → logprob: -2.8965249061584473
    4. '[' → logprob: -3.3965249061584473
    5. '[j' → logprob: -3.7715249061584473
    6. '[n' → logprob: -4.271524906158447
    7. '-' → logprob: -4.521524906158447
    8. ':' → logprob: -4.521524906158447
    9. ' =' → logprob: -4.646524906158447
    10. '               ' → logprob: -4.896524906158447

Token 762: ' -' (ID: 533)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.42177295684814453
    2. 'dp' → logprob: -1.2967729568481445
    3. '           ' → logprob: -2.9217729568481445
    4. '               ' → logprob: -4.2967729568481445
    5. '```' → logprob: -6.4217729568481445
    6. ' for' → logprob: -7.6717729568481445
    7. '   ' → logprob: -7.7967729568481445
    8. '	dp' → logprob: -8.421772956848145
    9. '(dp' → logprob: -8.796772956848145
    10. '                   ' → logprob: -9.546772956848145

Token 763: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02273928001523018
    2. '(' → logprob: -4.647739410400391
    3. '(j' → logprob: -5.272739410400391
    4. 'n' → logprob: -5.397739410400391
    5. '(n' → logprob: -6.022739410400391
    6. 'dp' → logprob: -8.64773941040039
    7. '1' → logprob: -8.77273941040039
    8. '   ' → logprob: -9.27273941040039
    9. ' j' → logprob: -9.39773941040039
    10. '2' → logprob: -10.02273941040039

Token 764: ' means' (ID: 4748)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.7234674692153931
    2. ']' → logprob: -1.098467469215393
    3. '][-' → logprob: -2.7234673500061035
    4. '][' → logprob: -2.8484673500061035
    5. '   ' → logprob: -4.7234673500061035
    6. ':' → logprob: -5.3484673500061035
    7. ']=' → logprob: -5.4734673500061035
    8. ' =' → logprob: -5.5984673500061035
    9. '[' → logprob: -5.7234673500061035
    10. ')' → logprob: -5.8484673500061035

Token 765: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6857078671455383
    2. ' dp' → logprob: -1.0607078075408936
    3. ' -' → logprob: -3.3107078075408936
    4. '2' → logprob: -3.8107078075408936
    5. '   ' → logprob: -4.060708045959473
    6. 'n' → logprob: -4.185708045959473
    7. '[-' → logprob: -4.560708045959473
    8. ' n' → logprob: -4.685708045959473
    9. '-' → logprob: -4.685708045959473
    10. ' ' → logprob: -5.185708045959473

Token 766: ' j' (ID: 441)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21403370797634125
    2. 'n' → logprob: -3.214033603668213
    3. '-(' → logprob: -3.714033603668213
    4. ' dp' → logprob: -3.714033603668213
    5. '-n' → logprob: -4.089033603668213
    6. 'j' → logprob: -4.339033603668213
    7. '[-' → logprob: -4.589033603668213
    8. '-' → logprob: -4.839033603668213
    9. '(n' → logprob: -4.964033603668213
    10. '[n' → logprob: -5.464033603668213

Token 767: '-th' (ID: 14928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19665850698947906
    2. '][-' → logprob: -2.0716586112976074
    3. '][' → logprob: -3.5716586112976074
    4. '[-' → logprob: -4.446658611297607
    5. ']*' → logprob: -5.446658611297607
    6. ']-' → logprob: -6.446658611297607
    7. '])' → logprob: -6.821658611297607
    8. '][:' → logprob: -6.821658611297607
    9. '][]' → logprob: -7.571658611297607
    10. '[j' → logprob: -8.07165813446045

Token 768: ' from' (ID: 591)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8478536605834961
    2. '1' → logprob: -1.722853660583496
    3. 'n' → logprob: -1.722853660583496
    4. ']' → logprob: -2.472853660583496
    5. '[-' → logprob: -2.722853660583496
    6. '(' → logprob: -4.347853660583496
    7. 'element' → logprob: -4.722853660583496
    8. '][-' → logprob: -4.847853660583496
    9. '-n' → logprob: -5.097853660583496
    10. '-' → logprob: -5.722853660583496

Token 769: ' the' (ID: 290)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.44319719076156616
    2. 'the' → logprob: -1.193197250366211
    3. '-end' → logprob: -2.943197250366211
    4. '_end' → logprob: -7.318197250366211
    5. ' the' → logprob: -7.568197250366211
    6. ' end' → logprob: -7.693197250366211
    7. 'right' → logprob: -8.568197250366211
    8. 'dp' → logprob: -9.568197250366211
    9. '-right' → logprob: -10.443197250366211
    10. '-' → logprob: -10.568197250366211

Token 770: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.004089085850864649
    2. ' end' → logprob: -5.504088878631592
    3. '-end' → logprob: -12.12908935546875
    4. 'right' → logprob: -12.62908935546875
    5. '_end' → logprob: -13.62908935546875
    6. '	end' → logprob: -15.25408935546875
    7. ''end' → logprob: -15.50408935546875
    8. '.end' → logprob: -16.50408935546875
    9. '[end' → logprob: -16.87908935546875
    10. '(end' → logprob: -16.87908935546875

Token 771: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3189193904399872
    2. ':' → logprob: -2.4439194202423096
    3. '):' → logprob: -2.5689194202423096
    4. ')' → logprob: -3.5689194202423096
    5. ']' → logprob: -4.3189191818237305
    6. '[-' → logprob: -4.5689191818237305
    7. '):
' → logprob: -4.8189191818237305
    8. ']:' → logprob: -5.1939191818237305
    9. ':
' → logprob: -5.1939191818237305
    10. '[' → logprob: -5.3189191818237305

Token 772: ' list' (ID: 1562)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002639582962729037
    2. ' dp' → logprob: -8.500264167785645
    3. 'cs' → logprob: -9.875264167785645
    4. '```' → logprob: -12.625264167785645
    5. '   ' → logprob: -13.000264167785645
    6. '[-' → logprob: -14.125264167785645
    7. ']' → logprob: -14.250264167785645
    8. '
' → logprob: -15.000264167785645
    9. '`' → logprob: -15.250264167785645
    10. '(dp' → logprob: -15.375264167785645

Token 773: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2093569040298462
    2. 'dp' → logprob: -2.4593567848205566
    3. '][' → logprob: -3.9593567848205566
    4. '[-' → logprob: -4.209356784820557
    5. ' dp' → logprob: -4.334356784820557
    6. ']' → logprob: -4.459356784820557
    7. '(dp' → logprob: -4.834356784820557
    8. ',' → logprob: -5.209356784820557
    9. '][-' → logprob: -5.459356784820557
    10. ')' → logprob: -5.584356784820557

Token 774: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10179778933525085
    2. ' dp' → logprob: -3.2267978191375732
    3. '```' → logprob: -3.6017978191375732
    4. 'dp' → logprob: -3.7267978191375732
    5. '               ' → logprob: -5.726797580718994
    6. '[' → logprob: -7.351797580718994
    7. ' for' → logprob: -7.476797580718994
    8. '[-' → logprob: -8.476798057556152
    9. '   ' → logprob: -8.601798057556152
    10. '``' → logprob: -8.851798057556152

Token 775: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10604408383369446
    2. '           ' → logprob: -2.731044054031372
    3. ' dp' → logprob: -3.356044054031372
    4. '               ' → logprob: -7.981044292449951
    5. 'for' → logprob: -9.606043815612793
    6. '   ' → logprob: -9.731043815612793
    7. '```' → logprob: -10.231043815612793
    8. '	dp' → logprob: -10.481043815612793
    9. ' for' → logprob: -10.731043815612793
    10. '(dp' → logprob: -11.481043815612793

Token 776: ' This' (ID: 1328)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13175417482852936
    2. ' dp' → logprob: -2.381754159927368
    3. '           ' → logprob: -3.506754159927368
    4. '```' → logprob: -7.506754398345947
    5. '               ' → logprob: -8.506753921508789
    6. '   ' → logprob: -9.506753921508789
    7. ' for' → logprob: -9.506753921508789
    8. 'for' → logprob: -10.006753921508789
    9. ']' → logprob: -11.006753921508789
    10. '-' → logprob: -11.256753921508789

Token 777: ' state' (ID: 2608)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8552842736244202
    2. 'dp' → logprob: -1.6052842140197754
    3. '[-' → logprob: -1.8552842140197754
    4. ' =' → logprob: -3.1052842140197754
    5. '[' → logprob: -3.2302842140197754
    6. ' dp' → logprob: -3.2302842140197754
    7. '[i' → logprob: -4.105284214019775
    8. '[j' → logprob: -4.105284214019775
    9. '```' → logprob: -4.230284214019775
    10. '[
' → logprob: -5.230284214019775

Token 778: ' is' (ID: 382)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5977239608764648
    2. ' =' → logprob: -1.3477239608764648
    3. '[j' → logprob: -3.347723960876465
    4. 'dp' → logprob: -3.472723960876465
    5. '[i' → logprob: -3.722723960876465
    6. '=' → logprob: -3.722723960876465
    7. '[' → logprob: -4.472723960876465
    8. '   ' → logprob: -4.597723960876465
    9. ' [-' → logprob: -4.597723960876465
    10. '```' → logprob: -4.722723960876465

Token 779: ' computed' (ID: 46716)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3918077051639557
    2. 'dp' → logprob: -1.1418076753616333
    3. ' =' → logprob: -6.641807556152344
    4. '           ' → logprob: -7.016807556152344
    5. '   ' → logprob: -7.891807556152344
    6. '```' → logprob: -8.266807556152344
    7. '=' → logprob: -8.266807556152344
    8. 'n' → logprob: -8.391807556152344
    9. '    ' → logprob: -8.641807556152344
    10. '            ' → logprob: -8.641807556152344

Token 780: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27194830775260925
    2. ' =' → logprob: -2.7719483375549316
    3. 'dp' → logprob: -3.0219483375549316
    4. '           ' → logprob: -3.2719483375549316
    5. '   ' → logprob: -3.7719483375549316
    6. '               ' → logprob: -4.521948337554932
    7. ' dp' → logprob: -4.646948337554932
    8. ']' → logprob: -5.396948337554932
    9. ' by' → logprob: -5.521948337554932
    10. '                   ' → logprob: -5.771948337554932

Token 781: ' multiplying' (ID: 181682)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.4646463096141815
    2. 'dp' → logprob: -1.214646339416504
    3. '(cs' → logprob: -3.964646339416504
    4. ' (' → logprob: -4.214646339416504
    5. 'cs' → logprob: -4.214646339416504
    6. ' dp' → logprob: -4.464646339416504
    7. '(' → logprob: -4.589646339416504
    8. ' cs' → logprob: -6.714646339416504
    9. '(-' → logprob: -6.714646339416504
    10. '   ' → logprob: -7.214646339416504

Token 782: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30303794145584106
    2. 'cs' → logprob: -1.6780378818511963
    3. 'num' → logprob: -2.8030378818511963
    4. ' dp' → logprob: -5.178038120269775
    5. '   ' → logprob: -5.803038120269775
    6. ' cs' → logprob: -5.928038120269775
    7. '(dp' → logprob: -7.178038120269775
    8. 'mod' → logprob: -7.428038120269775
    9. '(cs' → logprob: -8.428037643432617
    10. ' num' → logprob: -8.803037643432617

Token 783: ' prefix' (ID: 18633)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6972260475158691
    2. 'cs' → logprob: -1.4472260475158691
    3. 'num' → logprob: -1.9472260475158691
    4. 'mod' → logprob: -2.197226047515869
    5. ' dp' → logprob: -5.822226047515869
    6. ' cs' → logprob: -6.072226047515869
    7. '-mod' → logprob: -6.447226047515869
    8. '2' → logprob: -6.822226047515869
    9. 'j' → logprob: -6.822226047515869
    10. '-' → logprob: -7.572226047515869

Token 784: ' sum' (ID: 4215)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4782731235027313
    2. '[i' → logprob: -2.3532731533050537
    3. '[' → logprob: -2.4782731533050537
    4. 'dp' → logprob: -2.4782731533050537
    5. '[-' → logprob: -2.7282731533050537
    6. '[n' → logprob: -3.6032731533050537
    7. '```' → logprob: -4.978272914886475
    8. 'sum' → logprob: -5.478272914886475
    9. 'cs' → logprob: -5.978272914886475
    10. 'j' → logprob: -6.478272914886475

Token 785: ' up' (ID: 869)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2407877445220947
    2. '[-' → logprob: -1.6157877445220947
    3. ' of' → logprob: -1.7407877445220947
    4. '[' → logprob: -2.3657877445220947
    5. 'dp' → logprob: -2.9907877445220947
    6. 'cs' → logprob: -3.1157877445220947
    7. 'of' → logprob: -3.2407877445220947
    8. ' dp' → logprob: -3.4907877445220947
    9. '```' → logprob: -4.365787506103516
    10. '[i' → logprob: -4.740787506103516

Token 786: ' to' (ID: 316)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.9572362899780273
    2. '[-' → logprob: -1.0822362899780273
    3. '[n' → logprob: -1.5822362899780273
    4. '[' → logprob: -3.4572362899780273
    5. 'dp' → logprob: -4.332236289978027
    6. '```' → logprob: -4.707236289978027
    7. '           ' → logprob: -5.457236289978027
    8. '   ' → logprob: -5.957236289978027
    9. 'n' → logprob: -6.207236289978027
    10. '[i' → logprob: -6.457236289978027

Token 787: ' index' (ID: 3472)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04271755367517471
    2. 'cs' → logprob: -3.417717456817627
    3. 'n' → logprob: -5.167717456817627
    4. ' j' → logprob: -6.792717456817627
    5. '-j' → logprob: -6.792717456817627
    6. '-n' → logprob: -8.167717933654785
    7. ' cs' → logprob: -8.417717933654785
    8. '```' → logprob: -9.042717933654785
    9. '   ' → logprob: -9.292717933654785
    10. 'mod' → logprob: -9.292717933654785

Token 788: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.43032917380332947
    2. '-j' → logprob: -1.8053292036056519
    3. 'n' → logprob: -2.5553290843963623
    4. '-n' → logprob: -3.1803290843963623
    5. ' -' → logprob: -4.055329322814941
    6. ' j' → logprob: -4.055329322814941
    7. ' n' → logprob: -5.180329322814941
    8. '   ' → logprob: -5.180329322814941
    9. '[-' → logprob: -5.180329322814941
    10. '0' → logprob: -5.430329322814941

Token 789: ' by' (ID: 656)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.0940881967544556
    2. '-' → logprob: -2.094088077545166
    3. '           ' → logprob: -2.219088077545166
    4. '[j' → logprob: -2.344088077545166
    5. ']' → logprob: -2.594088077545166
    6. '][' → logprob: -2.844088077545166
    7. '```' → logprob: -3.469088077545166
    8. '[' → logprob: -3.719088077545166
    9. ')' → logprob: -3.844088077545166
    10. ' of' → logprob: -3.969088077545166

Token 790: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.048911627382040024
    2. ' num' → logprob: -3.0489115715026855
    3. 'cs' → logprob: -8.798912048339844
    4. ' cs' → logprob: -9.298912048339844
    5. '   ' → logprob: -10.923912048339844
    6. 'mod' → logprob: -11.048912048339844
    7. '	num' → logprob: -11.548912048339844
    8. '(num' → logprob: -11.673912048339844
    9. '    ' → logprob: -11.798912048339844
    10. ' ' → logprob: -12.798912048339844

Token 791: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0017286106012761593
    2. '[i' → logprob: -6.626728534698486
    3. '[' → logprob: -8.126729011535645
    4. 'j' → logprob: -10.251729011535645
    5. '[n' → logprob: -10.751729011535645
    6. '[num' → logprob: -11.376729011535645
    7. '```' → logprob: -11.501729011535645
    8. '(j' → logprob: -12.501729011535645
    9. '   ' → logprob: -12.501729011535645
    10. ' [' → logprob: -12.626729011535645

Token 792: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.060383714735507965
    2. '])' → logprob: -3.4353837966918945
    3. '[j' → logprob: -3.6853837966918945
    4. '],' → logprob: -7.5603837966918945
    5. ']*' → logprob: -7.8103837966918945
    6. '           ' → logprob: -9.310383796691895
    7. ']
' → logprob: -10.060383796691895
    8. ')' → logprob: -10.185383796691895
    9. '[' → logprob: -10.185383796691895
    10. '```' → logprob: -10.685383796691895

Token 793: ' all' (ID: 722)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3502786159515381
    2. '           ' → logprob: -2.350278615951538
    3. ' )' → logprob: -3.100278615951538
    4. ' =' → logprob: -3.475278615951538
    5. 'dp' → logprob: -3.600278615951538
    6. '=' → logprob: -3.850278615951538
    7. ' dp' → logprob: -4.475278854370117
    8. ' j' → logprob: -4.975278854370117
    9. ' ' → logprob: -5.475278854370117
    10. 'j' → logprob: -5.600278854370117

Token 794: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.13853664696216583
    2. ')' → logprob: -2.6385366916656494
    3. ')%' → logprob: -3.6385366916656494
    4. ' %' → logprob: -3.8885366916656494
    5. ']' → logprob: -5.76353645324707
    6. 'mod' → logprob: -6.38853645324707
    7. '   ' → logprob: -6.63853645324707
    8. '           ' → logprob: -7.01353645324707
    9. ']%' → logprob: -7.01353645324707
    10. '[j' → logprob: -7.88853645324707

Token 795: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0021347946021705866
    2. '(mod' → logprob: -6.627134799957275
    3. ' mod' → logprob: -7.127134799957275
    4. '
' → logprob: -12.877134323120117
    5. '	mod' → logprob: -13.627134323120117
    6. '`' → logprob: -13.877134323120117
    7. '```' → logprob: -14.627134323120117
    8. '_mod' → logprob: -15.377134323120117
    9. '(' → logprob: -16.877134323120117
    10. '.mod' → logprob: -17.127134323120117

Token 796: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04215005040168762
    2. ')' → logprob: -4.792150020599365
    3. '(dp' → logprob: -5.167150020599365
    4. '[' → logprob: -5.417150020599365
    5. ' =' → logprob: -5.667150020599365
    6. '   ' → logprob: -5.792150020599365
    7. ']' → logprob: -6.042150020599365
    8. ':' → logprob: -6.167150020599365
    9. '               ' → logprob: -6.542150020599365
    10. '       ' → logprob: -6.542150020599365

Token 797: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3503780663013458
    2. 'dp' → logprob: -1.3503780364990234
    3. ' dp' → logprob: -3.4753780364990234
    4. '   ' → logprob: -6.100378036499023
    5. '[-' → logprob: -7.350378036499023
    6. '       ' → logprob: -7.475378036499023
    7. '```' → logprob: -7.600378036499023
    8. '(dp' → logprob: -8.225378036499023
    9. '               ' → logprob: -8.350378036499023
    10. '[' → logprob: -8.600378036499023

Token 798: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03884448856115341
    2. '           ' → logprob: -3.413844585418701
    3. ' dp' → logprob: -5.413844585418701
    4. '	dp' → logprob: -8.288844108581543
    5. '   ' → logprob: -8.538844108581543
    6. '               ' → logprob: -9.288844108581543
    7. '       ' → logprob: -9.538844108581543
    8. '```' → logprob: -9.788844108581543
    9. '(dp' → logprob: -10.288844108581543
    10. '[' → logprob: -12.788844108581543

Token 799: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.069664333248511e-05
    2. '```' → logprob: -12.125020980834961
    3. '[' → logprob: -12.375020980834961
    4. '\[' → logprob: -12.500020980834961
    5. '[j' → logprob: -12.750020980834961
    6. 'i' → logprob: -13.375020980834961
    7. '[I' → logprob: -13.875020980834961
    8. '[
' → logprob: -14.375020980834961
    9. '   ' → logprob: -15.000020980834961
    10. '[next' → logprob: -15.625020980834961

Token 800: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009091231040656567
    2. '][' → logprob: -4.759091377258301
    3. '+i' → logprob: -8.2590913772583
    4. '[i' → logprob: -9.1340913772583
    5. ' +' → logprob: -10.0090913772583
    6. '+
' → logprob: -11.5090913772583
    7. '[' → logprob: -11.5090913772583
    8. '1' → logprob: -11.7590913772583
    9. 'i' → logprob: -12.2590913772583
    10. '   ' → logprob: -12.2590913772583

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.375000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '+' → logprob: -15.500000953674316
    5. '[' → logprob: -16.500001907348633
    6. '   ' → logprob: -17.375001907348633
    7. 'i' → logprob: -18.500001907348633
    8. '１' → logprob: -18.562501907348633
    9. 'next' → logprob: -18.750001907348633
    10. '][' → logprob: -18.750001907348633

Token 802: '][-' (ID: 162298)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022734852973371744
    2. '[j' → logprob: -6.8772735595703125
    3. ']' → logprob: -7.5022735595703125
    4. '[' → logprob: -7.6272735595703125
    5. '][-' → logprob: -8.877273559570312
    6. ' ][' → logprob: -10.627273559570312
    7. '   ' → logprob: -11.377273559570312
    8. '```' → logprob: -12.377273559570312
    9. '[i' → logprob: -12.627273559570312
    10. ')[' → logprob: -12.752273559570312

Token 803: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.875
    3. ' j' → logprob: -16.75
    4. '```' → logprob: -17.25
    5. '   ' → logprob: -17.75
    6. '$j' → logprob: -18.25
    7. '(j' → logprob: -18.875
    8. '	j' → logprob: -19.125
    9. '_j' → logprob: -20.5
    10. '*j' → logprob: -21.5

Token 804: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015229015843942761
    2. ']=' → logprob: -9.125152587890625
    3. ']+=' → logprob: -10.375152587890625
    4. ']=(' → logprob: -12.375152587890625
    5. '=' → logprob: -13.125152587890625
    6. ' ]' → logprob: -13.375152587890625
    7. ')' → logprob: -13.500152587890625
    8. '-' → logprob: -13.625152587890625
    9. '])' → logprob: -14.500152587890625
    10. ']
' → logprob: -14.500152587890625

Token 805: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004485461104195565
    2. ' =' → logprob: -8.250448226928711
    3. '+=' → logprob: -8.750448226928711
    4. '=(' → logprob: -10.500448226928711
    5. ' +=' → logprob: -15.000448226928711
    6. '%=' → logprob: -15.125448226928711
    7. '```' → logprob: -15.750448226928711
    8. ']=' → logprob: -16.62544822692871
    9. ']+=' → logprob: -16.75044822692871
    10. '(' → logprob: -16.75044822692871

Token 806: ' (' (ID: 350)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.007879757322371006
    2. '(num' → logprob: -5.757879734039307
    3. ' (' → logprob: -6.257879734039307
    4. 'cs' → logprob: -6.632879734039307
    5. '(c' → logprob: -7.382879734039307
    6. 'num' → logprob: -7.382879734039307
    7. ' cs' → logprob: -9.132880210876465
    8. '(Cs' → logprob: -10.257880210876465
    9. '   ' → logprob: -11.257880210876465
    10. '(' → logprob: -11.632880210876465

Token 807: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.0026937208604067564
    2. 'num' → logprob: -6.5026936531066895
    3. 'dp' → logprob: -7.5026936531066895
    4. '(cs' → logprob: -7.6276936531066895
    5. ' cs' → logprob: -9.002694129943848
    6. '(' → logprob: -12.002694129943848
    7. '   ' → logprob: -12.127694129943848
    8. '(dp' → logprob: -12.627694129943848
    9. '(num' → logprob: -13.002694129943848
    10. 'c' → logprob: -13.502694129943848

Token 808: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00015955790877342224
    2. 'j' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.87515926361084
    4. '```' → logprob: -15.37515926361084
    5. '[i' → logprob: -16.125160217285156
    6. '[' → logprob: -16.625160217285156
    7. '       ' → logprob: -16.875160217285156
    8. '[n' → logprob: -17.625160217285156
    9. '	j' → logprob: -17.750160217285156
    10. 'dp' → logprob: -17.875160217285156

Token 809: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018570076208561659
    2. '*' → logprob: -7.001856803894043
    3. ']*' → logprob: -7.126856803894043
    4. ' *' → logprob: -9.126856803894043
    5. '-' → logprob: -11.126856803894043
    6. '])' → logprob: -12.626856803894043
    7. ' ]' → logprob: -12.751856803894043
    8. '[' → logprob: -12.751856803894043
    9. '   ' → logprob: -13.376856803894043
    10. ')' → logprob: -13.501856803894043

Token 810: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06200153008103371
    2. '*' → logprob: -2.8120014667510986
    3. '*num' → logprob: -10.81200122833252
    4. ')' → logprob: -12.06200122833252
    5. ' ' → logprob: -12.18700122833252
    6. '*j' → logprob: -14.18700122833252
    7. ' ' → logprob: -14.56200122833252
    8. '%' → logprob: -15.18700122833252
    9. '*object' → logprob: -15.18700122833252
    10. '   ' → logprob: -15.56200122833252

Token 811: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0011703446507453918
    2. ' num' → logprob: -6.7511701583862305
    3. '	num' → logprob: -16.876171112060547
    4. '(num' → logprob: -17.126171112060547
    5. '   ' → logprob: -18.376171112060547
    6. '[num' → logprob: -19.251171112060547
    7. '
' → logprob: -19.251171112060547
    8. '*num' → logprob: -19.751171112060547
    9. '$num' → logprob: -20.126171112060547
    10. ',num' → logprob: -20.126171112060547

Token 812: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1756367712223437e-05
    2. 'j' → logprob: -11.500011444091797
    3. '[' → logprob: -13.750011444091797
    4. '```' → logprob: -15.875011444091797
    5. '[
' → logprob: -16.500011444091797
    6. '\[' → logprob: -17.250011444091797
    7. '[i' → logprob: -17.375011444091797
    8. ')' → logprob: -17.500011444091797
    9. '[js' → logprob: -17.500011444091797
    10. ')[' → logprob: -17.625011444091797

Token 813: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.202475905418396
    2. '])' → logprob: -1.702475905418396
    3. ']' → logprob: -7.0774760246276855
    4. ')%' → logprob: -9.077475547790527
    5. '           ' → logprob: -9.952475547790527
    6. ']%' → logprob: -11.827475547790527
    7. '       ' → logprob: -11.952475547790527
    8. '%' → logprob: -11.952475547790527
    9. ''])' → logprob: -12.077475547790527
    10. ' )' → logprob: -12.327475547790527

Token 814: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38739755749702454
    2. ' %' → logprob: -1.1373975276947021
    3. ')' → logprob: -8.262397766113281
    4. ')%' → logprob: -8.637397766113281
    5. '           ' → logprob: -9.887397766113281
    6. '   ' → logprob: -10.887397766113281
    7. '       ' → logprob: -12.512397766113281
    8. ' ' → logprob: -12.512397766113281
    9. '	' → logprob: -13.512397766113281
    10. ' %=' → logprob: -13.762397766113281

Token 815: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.56102097814437e-05
    2. ' mod' → logprob: -10.000045776367188
    3. '(mod' → logprob: -16.375045776367188
    4. '```' → logprob: -20.375045776367188
    5. '	mod' → logprob: -21.375045776367188
    6. '`' → logprob: -22.875045776367188
    7. ' мод' → logprob: -23.625045776367188
    8. '_mod' → logprob: -24.375045776367188
    9. '100' → logprob: -24.625045776367188
    10. '``' → logprob: -24.875045776367188

Token 816: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 817: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 818: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 819: ' Update' (ID: 9152)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 820: ' positive' (ID: 8841)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0023304554633796215
    2. ' dp' → logprob: -6.377330303192139
    3. 'cs' → logprob: -8.002330780029297
    4. '(dp' → logprob: -9.127330780029297
    5. '           ' → logprob: -9.752330780029297
    6. '```' → logprob: -10.252330780029297
    7. '   ' → logprob: -10.627330780029297
    8. 'dj' → logprob: -11.502330780029297
    9. '[' → logprob: -11.877330780029297
    10. '[j' → logprob: -12.002330780029297

Token 821: ' indices' (ID: 30378)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07820256054401398
    2. 'j' → logprob: -2.953202486038208
    3. ' j' → logprob: -4.828202724456787
    4. 'dp' → logprob: -5.203202724456787
    5. ' [' → logprob: -5.828202724456787
    6. '   ' → logprob: -5.953202724456787
    7. '[' → logprob: -6.203202724456787
    8. ' dp' → logprob: -7.203202724456787
    9. '[i' → logprob: -7.578202724456787
    10. '```' → logprob: -8.453202247619629

Token 822: ',' (ID: 11)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.004522450268268585
    2. '           ' → logprob: -6.004522323608398
    3. '[' → logprob: -6.504522323608398
    4. ' [' → logprob: -8.504522323608398
    5. '   ' → logprob: -8.629522323608398
    6. '[n' → logprob: -9.879522323608398
    7. ' j' → logprob: -10.379522323608398
    8. '[-' → logprob: -10.504522323608398
    9. '            ' → logprob: -11.004522323608398
    10. 'j' → logprob: -11.879522323608398

Token 823: ' possibly' (ID: 14836)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.43634599447250366
    2. 'j' → logprob: -1.3113460540771484
    3. 'dp' → logprob: -3.4363460540771484
    4. '[j' → logprob: -3.8113460540771484
    5. ' dp' → logprob: -3.8113460540771484
    6. '           ' → logprob: -5.311346054077148
    7. '```' → logprob: -6.811346054077148
    8. '            ' → logprob: -7.686346054077148
    9. '   ' → logprob: -8.436346054077148
    10. '    ' → logprob: -8.811346054077148

Token 824: ' referring' (ID: 44209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9906584620475769
    2. ' dp' → logprob: -1.4906585216522217
    3. ' j' → logprob: -1.9906585216522217
    4. 'j' → logprob: -2.2406585216522217
    5. 'cs' → logprob: -3.1156585216522217
    6. ' cs' → logprob: -3.2406585216522217
    7. '[j' → logprob: -3.4906585216522217
    8. '           ' → logprob: -3.7406585216522217
    9. '            ' → logprob: -5.615658283233643
    10. '   ' → logprob: -5.990658283233643

Token 825: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5355172157287598
    2. ' to' → logprob: -0.9105172157287598
    3. 'j' → logprob: -5.78551721572876
    4. '            ' → logprob: -6.03551721572876
    5. '           ' → logprob: -6.28551721572876
    6. 'dp' → logprob: -6.66051721572876
    7. '[j' → logprob: -6.66051721572876
    8. 'n' → logprob: -7.66051721572876
    9. ' j' → logprob: -7.66051721572876
    10. '=' → logprob: -8.410516738891602

Token 826: ' "' (ID: 392)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9690381288528442
    2. 'dp' → logprob: -0.9690381288528442
    3. 'cs' → logprob: -1.7190381288528442
    4. ' j' → logprob: -3.9690380096435547
    5. ' dp' → logprob: -4.219038009643555
    6. 'n' → logprob: -4.344038009643555
    7. ' cs' → logprob: -4.844038009643555
    8. '[j' → logprob: -6.219038009643555
    9. ' n' → logprob: -6.469038009643555
    10. '   ' → logprob: -7.594038009643555

Token 827: 'large' (ID: 32551)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.690933346748352
    2. 'j' → logprob: -1.065933346748352
    3. 'n' → logprob: -2.4409332275390625
    4. 'cs' → logprob: -3.3159332275390625
    5. '-n' → logprob: -4.4409332275390625
    6. '-j' → logprob: -4.8159332275390625
    7. ' dp' → logprob: -6.4409332275390625
    8. '   ' → logprob: -6.4409332275390625
    9. '[j' → logprob: -6.8159332275390625
    10. 'i' → logprob: -6.9409332275390625

Token 828: ' class' (ID: 744)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.39783549308776855
    2. ' j' → logprob: -1.6478354930877686
    3. 'n' → logprob: -2.8978354930877686
    4. ' n' → logprob: -3.6478354930877686
    5. ' indices' → logprob: -4.647835731506348
    6. 'indices' → logprob: -5.022835731506348
    7. 'i' → logprob: -5.147835731506348
    8. '_j' → logprob: -5.897835731506348
    9. ' i' → logprob: -5.897835731506348
    10. '```' → logprob: -6.022835731506348

Token 829: '"' (ID: 1)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.04031551629304886
    2. '[' → logprob: -4.415315628051758
    3. '   ' → logprob: -4.790315628051758
    4. '[n' → logprob: -4.915315628051758
    5. ' j' → logprob: -6.290315628051758
    6. '+' → logprob: -6.290315628051758
    7. ']' → logprob: -6.790315628051758
    8. '```' → logprob: -6.790315628051758
    9. '[-' → logprob: -7.165315628051758
    10. ' [' → logprob: -7.165315628051758

Token 830: ' states' (ID: 9407)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.535642147064209
    2. 'dp' → logprob: -2.035642147064209
    3. 'j' → logprob: -2.285642147064209
    4. '   ' → logprob: -2.285642147064209
    5. ' j' → logprob: -3.285642147064209
    6. ' dp' → logprob: -4.535642147064209
    7. '[n' → logprob: -4.785642147064209
    8. 'indices' → logprob: -5.285642147064209
    9. ' indices' → logprob: -5.410642147064209
    10. '[' → logprob: -5.785642147064209

Token 831: '.
' (ID: 558)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.15617907047271729
    2. '=' → logprob: -2.1561789512634277
    3. '[' → logprob: -4.406178951263428
    4. 'dp' → logprob: -4.906178951263428
    5. '[-' → logprob: -5.406178951263428
    6. ' =' → logprob: -5.781178951263428
    7. '           ' → logprob: -8.031179428100586
    8. ' dp' → logprob: -8.406179428100586
    9. '   ' → logprob: -8.531179428100586
    10. '[i' → logprob: -8.906179428100586

Token 832: '           ' (ID: 352)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1399168074131012
    2. ' dp' → logprob: -2.8899168968200684
    3. '           ' → logprob: -3.1399168968200684
    4. '[j' → logprob: -3.8899168968200684
    5. '   ' → logprob: -4.889916896820068
    6. '[' → logprob: -6.139916896820068
    7. '```' → logprob: -7.389916896820068
    8. '            ' → logprob: -8.38991641998291
    9. '	dp' → logprob: -9.26491641998291
    10. '    ' → logprob: -9.38991641998291

Token 833: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006769483909010887
    2. 'cs' → logprob: -5.13176965713501
    3. ' dp' → logprob: -7.38176965713501
    4. '(dp' → logprob: -9.006769180297852
    5. '           ' → logprob: -9.881769180297852
    6. ' cs' → logprob: -11.381769180297852
    7. '```' → logprob: -11.506769180297852
    8. '(cs' → logprob: -12.006769180297852
    9. '   ' → logprob: -12.131769180297852
    10. '(' → logprob: -12.506769180297852

Token 834: ' The' (ID: 623)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1398757123970427e-05
    2. 'for' → logprob: -12.000011444091797
    3. '           ' → logprob: -12.875011444091797
    4. ' dp' → logprob: -13.500011444091797
    5. '```' → logprob: -14.750011444091797
    6. '   ' → logprob: -15.250011444091797
    7. '       ' → logprob: -15.500011444091797
    8. '	dp' → logprob: -15.750011444091797
    9. '(dp' → logprob: -16.875011444091797
    10. '+' → logprob: -17.125011444091797

Token 835: ' value' (ID: 1432)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009189745411276817
    2. ' dp' → logprob: -5.634189605712891
    3. 'for' → logprob: -6.009189605712891
    4. ' for' → logprob: -7.509189605712891
    5. '+' → logprob: -7.634189605712891
    6. '```' → logprob: -7.759189605712891
    7. 'positive' → logprob: -8.00918960571289
    8. 'code' → logprob: -8.63418960571289
    9. 'j' → logprob: -8.75918960571289
    10. ' code' → logprob: -8.75918960571289

Token 836: ' is' (ID: 382)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4268300235271454
    2. '=' → logprob: -1.6768300533294678
    3. ' dp' → logprob: -2.6768300533294678
    4. ' =' → logprob: -3.9268300533294678
    5. '[i' → logprob: -4.051829814910889
    6. ' is' → logprob: -4.801829814910889
    7. '           ' → logprob: -5.301829814910889
    8. ' for' → logprob: -5.301829814910889
    9. 's' → logprob: -5.301829814910889
    10. '[' → logprob: -5.426829814910889

Token 837: ' the' (ID: 290)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.3457287549972534
    2. ' (' → logprob: -1.4707287549972534
    3. '(dp' → logprob: -2.970728874206543
    4. '(c' → logprob: -5.220728874206543
    5. '           ' → logprob: -6.095728874206543
    6. '(num' → logprob: -7.345728874206543
    7. '(' → logprob: -7.470728874206543
    8. 'cs' → logprob: -7.970728874206543
    9. '(cp' → logprob: -8.095728874206543
    10. '(Cs' → logprob: -8.720728874206543

Token 838: ' prefix' (ID: 18633)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.18646275997161865
    2. '(dp' → logprob: -1.8114627599716187
    3. 'cs' → logprob: -5.936462879180908
    4. 'dp' → logprob: -6.561462879180908
    5. '(cp' → logprob: -7.186462879180908
    6. '(' → logprob: -7.186462879180908
    7. '(c' → logprob: -7.936462879180908
    8. '(num' → logprob: -8.68646240234375
    9. ' (' → logprob: -8.81146240234375
    10. 'num' → logprob: -9.81146240234375

Token 839: ' sum' (ID: 4215)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.48501789569854736
    2. 'sum' → logprob: -1.9850178956985474
    3. '[' → logprob: -2.235017776489258
    4. 'dp' → logprob: -2.235017776489258
    5. '_sum' → logprob: -4.985017776489258
    6. '[i' → logprob: -5.235017776489258
    7. ' dp' → logprob: -5.485017776489258
    8. '```' → logprob: -5.485017776489258
    9. ' sum' → logprob: -5.860017776489258
    10. ' sums' → logprob: -6.485017776489258

Token 840: ' from' (ID: 591)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.12261045724153519
    2. 'cs' → logprob: -3.497610569000244
    3. ' at' → logprob: -4.247610569000244
    4. 'up' → logprob: -4.247610569000244
    5. 'of' → logprob: -4.372610569000244
    6. ' up' → logprob: -4.497610569000244
    7. '```' → logprob: -4.997610569000244
    8. ' of' → logprob: -5.122610569000244
    9. 'dp' → logprob: -5.247610569000244
    10. 'at' → logprob: -5.372610569000244

Token 841: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.004037556238472462
    2. ' cs' → logprob: -6.754037380218506
    3. 'dp' → logprob: -7.129037380218506
    4. 'j' → logprob: -7.754037380218506
    5. '0' → logprob: -8.129037857055664
    6. '-' → logprob: -8.379037857055664
    7. '1' → logprob: -8.379037857055664
    8. '   ' → logprob: -8.754037857055664
    9. '-c' → logprob: -8.754037857055664
    10. '```' → logprob: -8.879037857055664

Token 842: '2' (ID: 17)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.39860865473747253
    2. '2' → logprob: -1.148608684539795
    3. '[n' → logprob: -5.398608684539795
    4. '[' → logprob: -6.398608684539795
    5. 's' → logprob: -6.398608684539795
    6. '[:' → logprob: -7.398608684539795
    7. '[-' → logprob: -7.398608684539795
    8. '   ' → logprob: -7.523608684539795
    9. '```' → logprob: -7.648608684539795
    10. 'n' → logprob: -7.898608684539795

Token 843: ' at' (ID: 540)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.009717502631247044
    2. '[n' → logprob: -4.7597174644470215
    3. '[' → logprob: -7.3847174644470215
    4. '[-' → logprob: -7.8847174644470215
    5. '   ' → logprob: -10.63471794128418
    6. '[len' → logprob: -11.13471794128418
    7. 'j' → logprob: -11.38471794128418
    8. '```' → logprob: -11.63471794128418
    9. 'n' → logprob: -11.88471794128418
    10. '2' → logprob: -12.38471794128418

Token 844: ' position' (ID: 4010)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.027875905856490135
    2. 'n' → logprob: -3.9028759002685547
    3. 'min' → logprob: -5.277875900268555
    4. '[j' → logprob: -6.652875900268555
    5. '-' → logprob: -8.527875900268555
    6. 'max' → logprob: -8.902875900268555
    7. '[n' → logprob: -9.027875900268555
    8. ' j' → logprob: -9.152875900268555
    9. '[-' → logprob: -9.402875900268555
    10. '-j' → logprob: -9.902875900268555

Token 845: ' -' (ID: 533)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01859106309711933
    2. 'n' → logprob: -4.643590927124023
    3. '[j' → logprob: -5.018590927124023
    4. '[n' → logprob: -7.143590927124023
    5. ' j' → logprob: -7.393590927124023
    6. 'min' → logprob: -7.768590927124023
    7. '[-' → logprob: -9.268590927124023
    8. '   ' → logprob: -9.393590927124023
    9. 'max' → logprob: -10.518590927124023
    10. '2' → logprob: -10.518590927124023

Token 846: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.17213015258312225
    2. '(j' → logprob: -2.2971301078796387
    3. '(n' → logprob: -3.0471301078796387
    4. '(' → logprob: -5.047130107879639
    5. 'n' → logprob: -6.922130107879639
    6. ' (' → logprob: -6.922130107879639
    7. ' j' → logprob: -7.672130107879639
    8. '   ' → logprob: -7.922130107879639
    9. '(-' → logprob: -8.422130584716797
    10. '`' → logprob: -8.797130584716797

Token 847: ' plus' (ID: 2932)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.1212395653128624
    2. '[j' → logprob: -2.49623966217041
    3. ']' → logprob: -3.99623966217041
    4. '[' → logprob: -5.49623966217041
    5. ' -' → logprob: -5.87123966217041
    6. ')' → logprob: -6.87123966217041
    7. ' [-' → logprob: -6.87123966217041
    8. '-' → logprob: -7.12123966217041
    9. '][-' → logprob: -7.12123966217041
    10. ' +' → logprob: -7.37123966217041

Token 848: ' the' (ID: 290)
  Prédit: ' cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cs' → logprob: -0.4823875427246094
    2. 'cs' → logprob: -1.1073875427246094
    3. '0' → logprob: -4.607387542724609
    4. ' dp' → logprob: -4.732387542724609
    5. '(cs' → logprob: -5.107387542724609
    6. 'dp' → logprob: -5.107387542724609
    7. 'num' → logprob: -5.232387542724609
    8. ' (' → logprob: -5.232387542724609
    9. '(' → logprob: -5.857387542724609
    10. '1' → logprob: -5.982387542724609

Token 849: ' total' (ID: 3609)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.9178627729415894
    2. 'cs' → logprob: -1.0428627729415894
    3. 'mod' → logprob: -2.667862892150879
    4. 'dp' → logprob: -2.917862892150879
    5. ' cs' → logprob: -3.667862892150879
    6. '(num' → logprob: -4.167862892150879
    7. 'j' → logprob: -4.292862892150879
    8. ' num' → logprob: -4.542862892150879
    9. '0' → logprob: -4.792862892150879
    10. '(cs' → logprob: -4.917862892150879

Token 850: ' sum' (ID: 4215)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.10028376430273056
    2. 'n' → logprob: -3.7252838611602783
    3. 'num' → logprob: -3.7252838611602783
    4. 'sum' → logprob: -4.475283622741699
    5. ' cs' → logprob: -5.100283622741699
    6. '   ' → logprob: -5.100283622741699
    7. '(n' → logprob: -5.850283622741699
    8. ' of' → logprob: -5.975283622741699
    9. 'j' → logprob: -5.975283622741699
    10. 'mod' → logprob: -6.225283622741699

Token 851: ' up' (ID: 869)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.31800350546836853
    2. 'of' → logprob: -2.3180034160614014
    3. 'cs' → logprob: -3.1930034160614014
    4. '           ' → logprob: -3.6930034160614014
    5. '[-' → logprob: -4.1930036544799805
    6. '   ' → logprob: -4.4430036544799805
    7. '[j' → logprob: -4.6930036544799805
    8. ' at' → logprob: -4.8180036544799805
    9. ' =' → logprob: -4.8180036544799805
    10. '=' → logprob: -5.0680036544799805

Token 852: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.08471111208200455
    2. 'j' → logprob: -3.0847110748291016
    3. '[j' → logprob: -3.7097110748291016
    4. '1' → logprob: -5.709711074829102
    5. '[' → logprob: -6.709711074829102
    6. '(j' → logprob: -6.834711074829102
    7. '[n' → logprob: -7.459711074829102
    8. '(' → logprob: -7.584711074829102
    9. '[-' → logprob: -7.584711074829102
    10. 'n' → logprob: -8.084711074829102

Token 853: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.7982940077781677
    2. 'j' → logprob: -1.2982940673828125
    3. 'n' → logprob: -1.2982940673828125
    4. ' cs' → logprob: -6.4232940673828125
    5. ' j' → logprob: -7.2982940673828125
    6. ' n' → logprob: -7.4232940673828125
    7. 'dp' → logprob: -8.298294067382812
    8. '(n' → logprob: -8.673294067382812
    9. '2' → logprob: -9.298294067382812
    10. '(cs' → logprob: -9.673294067382812

Token 854: '[n' (ID: 15433)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.9470192193984985
    2. '2' → logprob: -1.0720192193984985
    3. '[-' → logprob: -1.5720192193984985
    4. '[n' → logprob: -3.072019100189209
    5. '[' → logprob: -4.447019100189209
    6. 'n' → logprob: -6.322019100189209
    7. 's' → logprob: -7.947019100189209
    8. 'j' → logprob: -8.072019577026367
    9. '   ' → logprob: -8.322019577026367
    10. '[len' → logprob: -8.572019577026367

Token 855: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011858172714710236
    2. '])' → logprob: -4.886857986450195
    3. '[j' → logprob: -6.886857986450195
    4. '],' → logprob: -6.886857986450195
    5. '][' → logprob: -7.261857986450195
    6. ']
' → logprob: -7.511857986450195
    7. ']+' → logprob: -8.136857986450195
    8. '```' → logprob: -9.136857986450195
    9. '][-' → logprob: -9.386857986450195
    10. ' ]' → logprob: -9.511857986450195

Token 856: ' all' (ID: 722)
  Prédit: ' cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cs' → logprob: -0.3870476186275482
    2. 'cs' → logprob: -1.6370476484298706
    3. ')' → logprob: -3.137047529220581
    4. 'dp' → logprob: -4.13704776763916
    5. ' dp' → logprob: -4.26204776763916
    6. '(cs' → logprob: -4.51204776763916
    7. '%' → logprob: -5.13704776763916
    8. ' (' → logprob: -5.26204776763916
    9. ' j' → logprob: -5.26204776763916
    10. 'j' → logprob: -5.88704776763916

Token 857: ' modulo' (ID: 112372)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.6546975374221802
    2. '%' → logprob: -1.1546975374221802
    3. ')' → logprob: -3.4046974182128906
    4. '-j' → logprob: -3.4046974182128906
    5. '```' → logprob: -3.4046974182128906
    6. 'mod' → logprob: -4.154697418212891
    7. ' %' → logprob: -4.279697418212891
    8. ')%' → logprob: -4.779697418212891
    9. ']' → logprob: -4.904697418212891
    10. '-' → logprob: -5.904697418212891

Token 858: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.48582130670547485
    2. ' mod' → logprob: -1.73582124710083
    3. ' n' → logprob: -2.73582124710083
    4. 'n' → logprob: -3.48582124710083
    5. 'cs' → logprob: -3.61082124710083
    6. '`' → logprob: -3.73582124710083
    7. ' cs' → logprob: -3.86082124710083
    8. '(n' → logprob: -5.11082124710083
    9. ' j' → logprob: -5.11082124710083
    10. '```' → logprob: -5.36082124710083

Token 859: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4404202997684479
    2. '=' → logprob: -2.065420389175415
    3. '[j' → logprob: -2.315420389175415
    4. '           ' → logprob: -2.440420389175415
    5. ')' → logprob: -3.815420389175415
    6. ' +' → logprob: -5.690420150756836
    7. ']' → logprob: -5.940420150756836
    8. '   ' → logprob: -6.065420150756836
    9. ' +=' → logprob: -6.440420150756836
    10. '+' → logprob: -6.565420150756836

Token 860: '           ' (ID: 352)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.8661430478096008
    2. '=' → logprob: -1.116142988204956
    3. ' =' → logprob: -1.741142988204956
    4. 'dp' → logprob: -3.616142988204956
    5. ' cs' → logprob: -4.241143226623535
    6. '           ' → logprob: -4.491143226623535
    7. '[' → logprob: -4.991143226623535
    8. '[j' → logprob: -5.491143226623535
    9. '```' → logprob: -5.616143226623535
    10. '(dp' → logprob: -5.866143226623535

Token 861: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.028352854773402214
    2. ' dp' → logprob: -3.653352737426758
    3. '           ' → logprob: -6.528352737426758
    4. '(dp' → logprob: -7.903352737426758
    5. '=' → logprob: -9.278352737426758
    6. '	dp' → logprob: -10.653352737426758
    7. ' =' → logprob: -10.778352737426758
    8. 'cs' → logprob: -11.028352737426758
    9. '   ' → logprob: -11.028352737426758
    10. '```' → logprob: -11.903352737426758

Token 862: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.50000286102295
    3. 'i' → logprob: -14.50000286102295
    4. '```' → logprob: -14.62500286102295
    5. '\[' → logprob: -15.75000286102295
    6. '   ' → logprob: -16.000003814697266
    7. '[j' → logprob: -16.500003814697266
    8. '[n' → logprob: -16.875003814697266
    9. ' [' → logprob: -17.250003814697266
    10. '[I' → logprob: -17.375003814697266

Token 863: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12830610573291779
    2. '[i' → logprob: -2.1283061504364014
    3. '[' → logprob: -7.253305912017822
    4. '+i' → logprob: -8.25330638885498
    5. '+[' → logprob: -9.25330638885498
    6. '][' → logprob: -9.37830638885498
    7. '   ' → logprob: -9.50330638885498
    8. '```' → logprob: -10.25330638885498
    9. '[-' → logprob: -10.62830638885498
    10. '-' → logprob: -10.75330638885498

Token 864: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004192844033241272
    2. '+' → logprob: -5.50419282913208
    3. 'n' → logprob: -9.879193305969238
    4. 'j' → logprob: -10.504193305969238
    5. '-' → logprob: -11.504193305969238
    6. '```' → logprob: -11.754193305969238
    7. ' ' → logprob: -12.629193305969238
    8. '+j' → logprob: -13.129193305969238
    9. '2' → logprob: -13.379193305969238
    10. '[' → logprob: -13.754193305969238

Token 865: '][' (ID: 2696)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.057042121887207
    2. '[' → logprob: -1.432042121887207
    3. '[j' → logprob: -1.432042121887207
    4. '[n' → logprob: -2.807042121887207
    5. '][' → logprob: -2.932042121887207
    6. '   ' → logprob: -3.807042121887207
    7. ')[' → logprob: -4.057042121887207
    8. '][-' → logprob: -4.557042121887207
    9. '       ' → logprob: -5.807042121887207
    10. ']' → logprob: -6.182042121887207

Token 866: 'j' (ID: 73)
  Prédit: '-n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-n' → logprob: -0.7896605134010315
    2. 'n' → logprob: -1.1646604537963867
    3. '-j' → logprob: -1.7896604537963867
    4. 'j' → logprob: -2.7896604537963867
    5. '-' → logprob: -6.164660453796387
    6. '-(' → logprob: -7.164660453796387
    7. '(-' → logprob: -7.539660453796387
    8. ' -' → logprob: -7.914660453796387
    9. '   ' → logprob: -8.289660453796387
    10. ' n' → logprob: -8.289660453796387

Token 867: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015869855415076017
    2. ']=' → logprob: -6.5015869140625
    3. '=' → logprob: -10.1265869140625
    4. ' ]' → logprob: -10.3765869140625
    5. '-' → logprob: -12.3765869140625
    6. ']
' → logprob: -12.8765869140625
    7. ')' → logprob: -13.1265869140625
    8. ']+=' → logprob: -13.6265869140625
    9. ']=(' → logprob: -13.8765869140625
    10. ' =' → logprob: -14.2515869140625

Token 868: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008642582222819328
    2. ' =' → logprob: -4.758642673492432
    3. '+=' → logprob: -10.633642196655273
    4. ' +=' → logprob: -14.008642196655273
    5. ']=' → logprob: -14.258642196655273
    6. '%=' → logprob: -14.508642196655273
    7. ']' → logprob: -14.633642196655273
    8. ')' → logprob: -14.633642196655273
    9. '.=' → logprob: -15.383642196655273
    10. ')=' → logprob: -15.508642196655273

Token 869: ' (' (ID: 350)
  Prédit: '(cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cs' → logprob: -0.20457316935062408
    2. ' (' → logprob: -1.704573154449463
    3. '(c' → logprob: -6.704573154449463
    4. '(Cs' → logprob: -7.079573154449463
    5. '   ' → logprob: -8.704573631286621
    6. '(ans' → logprob: -9.079573631286621
    7. '(cd' → logprob: -9.204573631286621
    8. '(s' → logprob: -9.579573631286621
    9. '(' → logprob: -9.829573631286621
    10. '(dp' → logprob: -9.829573631286621

Token 870: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.6331263184547424
    2. '(cs' → logprob: -0.7581263184547424
    3. ' cs' → logprob: -8.758126258850098
    4. '(c' → logprob: -8.758126258850098
    5. '(' → logprob: -9.508126258850098
    6. '(dp' → logprob: -10.258126258850098
    7. ' (' → logprob: -10.258126258850098
    8. 'dp' → logprob: -10.758126258850098
    9. '   ' → logprob: -11.883126258850098
    10. '	cs' → logprob: -12.008126258850098

Token 871: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6020939946174622
    2. '[n' → logprob: -0.8520939946174622
    3. '[j' → logprob: -3.8520939350128174
    4. 'n' → logprob: -5.7270941734313965
    5. 'j' → logprob: -7.4770941734313965
    6. '   ' → logprob: -8.102093696594238
    7. '[' → logprob: -8.602093696594238
    8. '(n' → logprob: -9.727093696594238
    9. '[-' → logprob: -9.852093696594238
    10. '```' → logprob: -10.602093696594238

Token 872: '[-' (ID: 17503)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1319853961467743
    2. '[-' → logprob: -2.6319854259490967
    3. '[n' → logprob: -3.0069854259490967
    4. 'j' → logprob: -6.381985187530518
    5. '[' → logprob: -8.006985664367676
    6. 'n' → logprob: -8.506985664367676
    7. '[len' → logprob: -11.631985664367676
    8. '   ' → logprob: -12.131985664367676
    9. '[max' → logprob: -13.131985664367676
    10. '[min' → logprob: -13.131985664367676

Token 873: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00010187433508690447
    2. '1' → logprob: -9.250102043151855
    3. '(' → logprob: -12.625102043151855
    4. '(j' → logprob: -13.375102043151855
    5. ' j' → logprob: -14.125102043151855
    6. '   ' → logprob: -16.12510108947754
    7. '$j' → logprob: -17.00010108947754
    8. '	j' → logprob: -17.50010108947754
    9. 'n' → logprob: -17.75010108947754
    10. '```' → logprob: -17.87510108947754

Token 874: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31143224239349365
    2. '+' → logprob: -1.6864322423934937
    3. ' +' → logprob: -2.561432361602783
    4. ']+' → logprob: -5.561432361602783
    5. ')' → logprob: -7.811432361602783
    6. '>' → logprob: -8.686431884765625
    7. '
' → logprob: -9.061431884765625
    8. '-' → logprob: -9.061431884765625
    9. ' ' → logprob: -9.186431884765625
    10. '```' → logprob: -9.561431884765625

Token 875: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018155446276068687
    2. '+' → logprob: -4.018155574798584
    3. ' ' → logprob: -12.893155097961426
    4. ' +
' → logprob: -13.268155097961426
    5. ' ' → logprob: -14.143155097961426
    6. '+
' → logprob: -15.768155097961426
    7. '    ' → logprob: -16.268156051635742
    8. ' +
' → logprob: -16.268156051635742
    9. '   ' → logprob: -16.518156051635742
    10. '	' → logprob: -17.268156051635742

Token 876: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.01819828897714615
    2. ' cs' → logprob: -4.018198490142822
    3. '   ' → logprob: -10.643198013305664
    4. 'dp' → logprob: -11.393198013305664
    5. '(cs' → logprob: -12.018198013305664
    6. 'c' → logprob: -13.018198013305664
    7. '	cs' → logprob: -13.518198013305664
    8. ' ' → logprob: -14.268198013305664
    9. '       ' → logprob: -14.518198013305664
    10. '           ' → logprob: -14.643198013305664

Token 877: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.01821245066821575
    2. '[j' → logprob: -4.01821231842041
    3. '[' → logprob: -10.26821231842041
    4. 'n' → logprob: -11.26821231842041
    5. '[-' → logprob: -12.89321231842041
    6. '[N' → logprob: -13.14321231842041
    7. '[
' → logprob: -13.14321231842041
    8. '\[' → logprob: -13.39321231842041
    9. '```' → logprob: -13.51821231842041
    10. '
' → logprob: -13.64321231842041

Token 878: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.26734843850135803
    2. ')' → logprob: -1.6423484086990356
    3. ']' → logprob: -3.642348527908325
    4. '[j' → logprob: -4.267348289489746
    5. ' ])' → logprob: -8.642348289489746
    6. '   ' → logprob: -8.892348289489746
    7. ')%' → logprob: -8.892348289489746
    8. ' )' → logprob: -9.392348289489746
    9. ']%' → logprob: -9.642348289489746
    10. 'j' → logprob: -10.017348289489746

Token 879: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6109239459037781
    2. '%' → logprob: -0.9859239459037781
    3. ')' → logprob: -2.610924005508423
    4. ')%' → logprob: -4.610923767089844
    5. '           ' → logprob: -8.735923767089844
    6. ' )' → logprob: -8.985923767089844
    7. ' ' → logprob: -9.610923767089844
    8. '```' → logprob: -9.610923767089844
    9. '[j' → logprob: -9.735923767089844
    10. ']%' → logprob: -10.485923767089844

Token 880: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10021205991506577
    2. ' mod' → logprob: -2.3502120971679688
    3. '(mod' → logprob: -12.225212097167969
    4. '	mod' → logprob: -15.600212097167969
    5. '```' → logprob: -15.725212097167969
    6. ' ' → logprob: -16.47521209716797
    7. '`' → logprob: -16.97521209716797
    8. ' ' → logprob: -17.60021209716797
    9. '_mod' → logprob: -17.60021209716797
    10. '100' → logprob: -17.72521209716797

Token 881: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 882: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 883: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08733366429805756
    2. '<|end|>' → logprob: -3.0873336791992188
    3. '```' → logprob: -3.7123336791992188
    4. 'return' → logprob: -4.712333679199219
    5. '#' (adapté à ' #') → logprob: -6.712333679199219
    6. ')' → logprob: -7.087333679199219
    7. '
' → logprob: -7.587333679199219
    8. 'K' → logprob: -7.962333679199219
    9. '    
' → logprob: -8.087333679199219
    10. '\n' → logprob: -8.337333679199219

Token 884: ' After' (ID: 6311)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09834540635347366
    2. '   ' → logprob: -2.7233455181121826
    3. 'return' → logprob: -3.8483455181121826
    4. 'result' → logprob: -5.2233452796936035
    5. ' print' → logprob: -7.4733452796936035
    6. 'answer' → logprob: -7.7233452796936035
    7. '```' → logprob: -9.598345756530762
    8. 'ans' → logprob: -9.973345756530762
    9. ' return' → logprob: -10.098345756530762
    10. '#' → logprob: -10.223345756530762

Token 885: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4044570326805115
    2. 'print' → logprob: -1.7794570922851562
    3. '   ' → logprob: -2.9044570922851562
    4. '```' → logprob: -3.0294570922851562
    5. ' for' → logprob: -3.5294570922851562
    6. ' the' → logprob: -4.654457092285156
    7. ' print' → logprob: -5.654457092285156
    8. 'range' → logprob: -5.654457092285156
    9. 'the' → logprob: -5.654457092285156
    10. 'i' → logprob: -5.654457092285156

Token 886: ' DP' (ID: 51992)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5029591917991638
    2. '   ' → logprob: -2.0029592514038086
    3. 'for' → logprob: -2.6279592514038086
    4. '[i' → logprob: -3.0029592514038086
    5. '```' → logprob: -3.6279592514038086
    6. 'iterations' → logprob: -3.6279592514038086
    7. 'the' → logprob: -4.252959251403809
    8. ' i' → logprob: -4.502959251403809
    9. 'K' → logprob: -4.627959251403809
    10. ' the' → logprob: -4.627959251403809

Token 887: ' stages' (ID: 25699)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6330559253692627
    2. '   ' → logprob: -1.3830559253692627
    3. 'for' → logprob: -2.3830559253692627
    4. '[' → logprob: -3.8830559253692627
    5. 'completion' → logprob: -4.383055686950684
    6. ' completion' → logprob: -4.508055686950684
    7. '
' → logprob: -4.633055686950684
    8. 'steps' → logprob: -4.633055686950684
    9. 'iterations' → logprob: -4.633055686950684
    10. ' for' → logprob: -5.258055686950684

Token 888: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04448322951793671
    2. 'return' → logprob: -3.669483184814453
    3. 'result' → logprob: -4.419483184814453
    4. '
' → logprob: -5.669483184814453
    5. 'total' → logprob: -7.169483184814453
    6. ' return' → logprob: -7.544483184814453
    7. '    
' → logprob: -7.669483184814453
    8. 'sum' → logprob: -8.419483184814453
    9. 'for' → logprob: -8.544483184814453
    10. '#' → logprob: -9.169483184814453

Token 889: ' sum' (ID: 4215)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02785121463239193
    2. '   ' → logprob: -3.777851104736328
    3. ' print' → logprob: -6.027851104736328
    4. 'result' → logprob: -6.277851104736328
    5. 'return' → logprob: -9.027851104736328
    6. 'answer' → logprob: -9.902851104736328
    7. '```' → logprob: -10.027851104736328
    8. ' result' → logprob: -10.277851104736328
    9. '
' → logprob: -10.777851104736328
    10. 'ans' → logprob: -11.027851104736328

Token 890: ' up' (ID: 869)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.7289043068885803
    2. '   ' → logprob: -0.9789043068885803
    3. 'dp' → logprob: -2.6039042472839355
    4. 'result' → logprob: -4.2289042472839355
    5. '=' → logprob: -4.3539042472839355
    6. 'all' → logprob: -4.9789042472839355
    7. 'the' → logprob: -5.1039042472839355
    8. ' =' → logprob: -5.2289042472839355
    9. '```' → logprob: -5.2289042472839355
    10. 'for' → logprob: -5.6039042472839355

Token 891: ' all' (ID: 722)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07821203768253326
    2. 'sum' → logprob: -3.203212022781372
    3. '(dp' → logprob: -3.703212022781372
    4. 'result' → logprob: -5.203212261199951
    5. '   ' → logprob: -6.078212261199951
    6. 'return' → logprob: -6.953212261199951
    7. '```' → logprob: -7.953212261199951
    8. 'range' → logprob: -8.453211784362793
    9. '(sum' → logprob: -8.953211784362793
    10. 'res' → logprob: -9.203211784362793

Token 892: ' values' (ID: 4824)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0064388420432806015
    2. '(dp' → logprob: -5.381438732147217
    3. '   ' → logprob: -7.631438732147217
    4. 'values' → logprob: -7.756438732147217
    5. ' dp' → logprob: -8.006439208984375
    6. 'result' → logprob: -8.256439208984375
    7. 'elements' → logprob: -9.506439208984375
    8. 'the' → logprob: -9.756439208984375
    9. 'row' → logprob: -10.006439208984375
    10. 'rows' → logprob: -10.881439208984375

Token 893: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25612109899520874
    2. '(dp' → logprob: -1.7561211585998535
    3. 'dp' → logprob: -3.1311211585998535
    4. '(' → logprob: -5.7561211585998535
    5. '=' → logprob: -6.5061211585998535
    6. 'for' → logprob: -6.7561211585998535
    7. ' =' → logprob: -6.7561211585998535
    8. '(sum' → logprob: -7.8811211585998535
    9. '_' → logprob: -8.131120681762695
    10. 'result' → logprob: -8.381120681762695

Token 894: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.511406809295295e-06
    2. ' dp' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.625006675720215
    4. '(dp' → logprob: -15.125006675720215
    5. '```' → logprob: -17.3750057220459
    6. '	dp' → logprob: -18.1250057220459
    7. '`' → logprob: -18.5000057220459
    8. '
' → logprob: -19.8750057220459
    9. 'sum' → logprob: -20.1250057220459
    10. 'range' → logprob: -20.7500057220459

Token 895: ' last' (ID: 2174)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.1008713702030946e-06
    2. ' dp' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.250001907348633
    4. '```' → logprob: -16.125001907348633
    5. 'final' → logprob: -16.500001907348633
    6. '`' → logprob: -16.875001907348633
    7. '0' → logprob: -17.375001907348633
    8. '(dp' → logprob: -17.625001907348633
    9. 'sum' → logprob: -18.375001907348633
    10. '	dp' → logprob: -18.500001907348633

Token 896: ' row' (ID: 5225)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.055479273200035095
    2. ' dp' → logprob: -3.3054792881011963
    3. '   ' → logprob: -4.305479049682617
    4. '(dp' → logprob: -5.930479049682617
    5. ']' → logprob: -8.055479049682617
    6. '_dp' → logprob: -8.305479049682617
    7. 'row' → logprob: -8.930479049682617
    8. '`' → logprob: -9.555479049682617
    9. '```' → logprob: -9.805479049682617
    10. 'line' → logprob: -9.930479049682617

Token 897: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2093295305967331
    2. '(dp' → logprob: -1.9593294858932495
    3. 'dp' → logprob: -3.334329605102539
    4. ' =' → logprob: -5.459329605102539
    5. '=' → logprob: -5.959329605102539
    6. '(' → logprob: -6.584329605102539
    7. 'sum' → logprob: -7.209329605102539
    8. 'for' → logprob: -7.334329605102539
    9. '(sum' → logprob: -7.334329605102539
    10. ' dp' → logprob: -7.459329605102539

Token 898: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -7.52919222577475e-05
    2. ' dp' → logprob: -9.500075340270996
    3. '(dp' → logprob: -15.500075340270996
    4. '`' → logprob: -17.12507438659668
    5. '```' → logprob: -17.12507438659668
    6. '	dp' → logprob: -18.12507438659668
    7. '   ' → logprob: -18.87507438659668
    8. 'the' → logprob: -19.62507438659668
    9. 'DP' → logprob: -20.00007438659668
    10. '_dp' → logprob: -20.00007438659668

Token 899: ' table' (ID: 3293)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6817000508308411
    2. '   ' → logprob: -0.9317000508308411
    3. 'result' → logprob: -2.9316999912261963
    4. '(dp' → logprob: -3.6816999912261963
    5. ' dp' → logprob: -5.056700229644775
    6. '```' → logprob: -5.931700229644775
    7. ',' → logprob: -5.931700229644775
    8. '
' → logprob: -6.181700229644775
    9. 'sum' → logprob: -7.056700229644775
    10. ' result' → logprob: -7.181700229644775

Token 900: ' to' (ID: 316)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.702631413936615
    2. '   ' → logprob: -0.827631413936615
    3. 'return' → logprob: -3.5776314735412598
    4. 'answer' → logprob: -3.7026314735412598
    5. 'sum' → logprob: -5.07763147354126
    6. 'res' → logprob: -5.82763147354126
    7. '```' → logprob: -6.20263147354126
    8. 'total' → logprob: -7.07763147354126
    9. '
' → logprob: -7.32763147354126
    10. ' result' → logprob: -7.57763147354126

Token 901: ' get' (ID: 717)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.37777021527290344
    2. 'return' → logprob: -1.627770185470581
    3. 'answer' → logprob: -2.877770185470581
    4. '
' → logprob: -4.12777042388916
    5. 'result' → logprob: -4.25277042388916
    6. 'sum' → logprob: -4.62777042388916
    7. ' return' → logprob: -5.00277042388916
    8. 'get' → logprob: -5.25277042388916
    9. 'ans' → logprob: -6.00277042388916
    10. ' answer' → logprob: -6.12777042388916

Token 902: ' the' (ID: 290)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6646515727043152
    2. 'answer' → logprob: -1.66465163230896
    3. 'ans' → logprob: -1.78965163230896
    4. '   ' → logprob: -2.78965163230896
    5. 'result' → logprob: -2.78965163230896
    6. 'the' → logprob: -5.664651393890381
    7. 'print' → logprob: -6.914651393890381
    8. '```' → logprob: -7.289651393890381
    9. '(sum' → logprob: -7.914651393890381
    10. ' sum' → logprob: -8.539651870727539

Token 903: ' answer' (ID: 6052)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6037387251853943
    2. 'answer' → logprob: -0.8537387251853943
    3. 'final' → logprob: -4.603738784790039
    4. 'return' → logprob: -5.103738784790039
    5. 'sum' → logprob: -5.103738784790039
    6. ' answer' → logprob: -6.228738784790039
    7. 'total' → logprob: -6.353738784790039
    8. ' result' → logprob: -6.853738784790039
    9. 'ans' → logprob: -8.353738784790039
    10. '#' → logprob: -9.978738784790039

Token 904: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4685956835746765
    2. 'answer' → logprob: -1.3435957431793213
    3. 'result' → logprob: -2.4685957431793213
    4. '```' → logprob: -5.093595504760742
    5. 'return' → logprob: -5.218595504760742
    6. '
' → logprob: -5.218595504760742
    7. ' =' → logprob: -5.468595504760742
    8. 'ans' → logprob: -5.718595504760742
    9. ' answer' → logprob: -6.968595504760742
    10. 'res' → logprob: -7.468595504760742

Token 905: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0309003591537476
    2. 'answer' → logprob: -1.0309003591537476
    3. 'return' → logprob: -2.280900478363037
    4. 'result' → logprob: -2.405900478363037
    5. 'ans' → logprob: -2.655900478363037
    6. '
' → logprob: -4.905900478363037
    7. '```' → logprob: -4.905900478363037
    8. ' return' → logprob: -6.155900478363037
    9. ' answer' → logprob: -6.280900478363037
    10. ' ans' → logprob: -6.530900478363037

Token 906: ' ans' (ID: 3345)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.5122653841972351
    2. 'ans' (adapté à ' ans') → logprob: -1.2622654438018799
    3. 'result' → logprob: -2.26226544380188
    4. 'return' → logprob: -5.137265205383301
    5. '   ' → logprob: -5.512265205383301
    6. '```' → logprob: -6.137265205383301
    7. 'res' → logprob: -6.762265205383301
    8. 'ret' → logprob: -8.8872652053833
    9. '``' → logprob: -9.0122652053833
    10. '
' → logprob: -9.3872652053833

Token 907: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38705676794052124
    2. '=' → logprob: -1.137056827545166
    3. '   ' → logprob: -9.512056350708008
    4. '```' → logprob: -10.012056350708008
    5. '[' → logprob: -10.262056350708008
    6. ' +=' → logprob: -12.262056350708008
    7. ']' → logprob: -12.387056350708008
    8. ' =
' → logprob: -12.637056350708008
    9. '[]' → logprob: -12.637056350708008
    10. ')' → logprob: -12.637056350708008

Token 908: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.013825777918100357
    2. '0' → logprob: -4.7638258934021
    3. ' sum' → logprob: -5.2638258934021
    4. '(sum' → logprob: -10.888825416564941
    5. ' ' → logprob: -13.263825416564941
    6. '   ' → logprob: -13.763825416564941
    7. '	sum' → logprob: -15.763825416564941
    8. '(' → logprob: -15.888825416564941
    9. '=sum' → logprob: -15.888825416564941
    10. '```' → logprob: -16.013826370239258

Token 909: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -8.44706009957008e-05
    2. '0' → logprob: -9.50008487701416
    3. '(sum' → logprob: -11.62508487701416
    4. ' sum' → logprob: -14.37508487701416
    5. '
' → logprob: -16.875083923339844
    6. '=sum' → logprob: -18.250083923339844
    7. '```' → logprob: -18.375083923339844
    8. 'pow' → logprob: -18.375083923339844
    9. '`' → logprob: -18.500083923339844
    10. '(' → logprob: -18.625083923339844

Token 910: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08710554242134094
    2. '   ' → logprob: -2.8371055126190186
    3. ' for' → logprob: -4.087105751037598
    4. '
' → logprob: -4.837105751037598
    5. '```' → logprob: -9.837105751037598
    6. 'dp' → logprob: -10.587105751037598
    7. '=' → logprob: -11.837105751037598
    8. '    
' → logprob: -12.712105751037598
    9. ' =' → logprob: -12.712105751037598
    10. 'sum' → logprob: -13.212105751037598

Token 911: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07960429787635803
    2. '   ' → logprob: -2.579604387283325
    3. ' for' → logprob: -7.829604148864746
    4. '```' → logprob: -8.329604148864746
    5. '
' → logprob: -9.829604148864746
    6. '	for' → logprob: -11.704604148864746
    7. '``' → logprob: -12.329604148864746
    8. ' ' → logprob: -12.329604148864746
    9. '`' → logprob: -13.204604148864746
    10. '       ' → logprob: -14.329604148864746

Token 912: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008971202187240124
    2. '   ' → logprob: -4.758971214294434
    3. ' for' → logprob: -8.008971214294434
    4. '```' → logprob: -10.758971214294434
    5. '
' → logprob: -13.758971214294434
    6. 'ans' → logprob: -14.133971214294434
    7. '	for' → logprob: -14.258971214294434
    8. '``' → logprob: -15.008971214294434
    9. ' ' → logprob: -16.258970260620117
    10. '  ' → logprob: -16.883970260620117

Token 913: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.052749745547771454
    2. 'val' → logprob: -3.6777496337890625
    3. 'v' → logprob: -3.8027496337890625
    4. 'i' → logprob: -6.5527496337890625
    5. 'value' → logprob: -6.5527496337890625
    6. 'j' → logprob: -7.3027496337890625
    7. ' x' → logprob: -8.677749633789062
    8. ' val' → logprob: -10.052749633789062
    9. 'k' → logprob: -10.177749633789062
    10. 'num' → logprob: -12.802749633789062

Token 914: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14285539090633392
    2. 'in' → logprob: -2.017855405807495
    3. ' ' → logprob: -9.142855644226074
    4. 'i' → logprob: -10.392855644226074
    5. 'a' → logprob: -10.517855644226074
    6. '   ' → logprob: -12.142855644226074
    7. '	in' → logprob: -12.892855644226074
    8. ')' → logprob: -13.517855644226074
    9. '  ' → logprob: -13.517855644226074
    10. ' i' → logprob: -13.892855644226074

Token 915: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32276490330696106
    2. 'range' → logprob: -1.3227648735046387
    3. ' range' → logprob: -4.822764873504639
    4. ' dp' → logprob: -6.572764873504639
    5. '(dp' → logprob: -12.822765350341797
    6. 'd' → logprob: -12.947765350341797
    7. '	dp' → logprob: -13.947765350341797
    8. 're' → logprob: -13.947765350341797
    9. '   ' → logprob: -14.010265350341797
    10. '[' → logprob: -14.260265350341797

Token 916: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.25440776348114014
    2. '[K' → logprob: -1.5044077634811401
    3. '[i' → logprob: -6.87940788269043
    4. '[' → logprob: -7.12940788269043
    5. '[len' → logprob: -7.62940788269043
    6. '[k' → logprob: -9.50440788269043
    7. 'K' → logprob: -10.37940788269043
    8. '```' → logprob: -11.62940788269043
    9. 'i' → logprob: -12.00440788269043
    10. ',K' → logprob: -12.00440788269043

Token 917: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '
' → logprob: -13.75000286102295
    3. '-' → logprob: -14.12500286102295
    4. ' ' → logprob: -14.62500286102295
    5. '```' → logprob: -15.12500286102295
    6. '   ' → logprob: -15.75000286102295
    7. '``' → logprob: -16.625003814697266
    8. 'i' → logprob: -16.687503814697266
    9. 'a' → logprob: -16.812503814697266
    10. ']' → logprob: -16.875003814697266

Token 918: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.4767128825187683
    2. '][' → logprob: -1.226712942123413
    3. ']' → logprob: -2.726712942123413
    4. ']:
' → logprob: -4.851712703704834
    5. ':' → logprob: -5.726712703704834
    6. ']):' → logprob: -5.851712703704834
    7. '][:' → logprob: -6.601712703704834
    8. '):' → logprob: -6.976712703704834
    9. ']:
' → logprob: -7.226712703704834
    10. '   ' → logprob: -7.351712703704834

Token 919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016632776241749525
    2. 'ans' → logprob: -7.2516632080078125
    3. '   ' → logprob: -7.5016632080078125
    4. '```' → logprob: -8.001663208007812
    5. ' ans' → logprob: -10.876663208007812
    6. '           ' → logprob: -11.251663208007812
    7. '(ans' → logprob: -11.251663208007812
    8. '	ans' → logprob: -11.626663208007812
    9. '`' → logprob: -13.376663208007812
    10. '=' → logprob: -13.626663208007812

Token 920: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.006728514563292265
    2. '(ans' → logprob: -5.006728649139404
    3. '       ' → logprob: -12.381728172302246
    4. ' ans' → logprob: -12.506728172302246
    5. '```' → logprob: -13.381728172302246
    6. '   ' → logprob: -13.506728172302246
    7. 'a' → logprob: -13.756728172302246
    8. '(' → logprob: -14.631728172302246
    9. '           ' → logprob: -14.881728172302246
    10. '	ans' → logprob: -15.131728172302246

Token 921: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08984042704105377
    2. '=' → logprob: -2.4648404121398926
    3. '   ' → logprob: -7.589840412139893
    4. ' +=' → logprob: -8.58984088897705
    5. '```' → logprob: -9.21484088897705
    6. ' =' → logprob: -10.21484088897705
    7. '       ' → logprob: -10.58984088897705
    8. ']+=' → logprob: -10.71484088897705
    9. '+' → logprob: -11.58984088897705
    10. '%=' → logprob: -11.83984088897705

Token 922: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00016921341011766344
    2. ' (' → logprob: -8.875168800354004
    3. '(a' → logprob: -11.250168800354004
    4. '(' → logprob: -11.375168800354004
    5. '(ax' → logprob: -13.625168800354004
    6. '   ' → logprob: -14.125168800354004
    7. '(acc' → logprob: -14.250168800354004
    8. '(ast' → logprob: -14.500168800354004
    9. '(answer' → logprob: -14.500168800354004
    10. '(an' → logprob: -14.875168800354004

Token 923: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02324967086315155
    2. '(ans' → logprob: -3.773249626159668
    3. 'a' → logprob: -12.898249626159668
    4. ' ans' → logprob: -13.773249626159668
    5. '	ans' → logprob: -14.898249626159668
    6. '(a' → logprob: -15.523249626159668
    7. '_ans' → logprob: -15.898249626159668
    8. 'ansa' → logprob: -17.398250579833984
    9. 'answer' → logprob: -17.523250579833984
    10. 'Ans' → logprob: -18.023250579833984

Token 924: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04985157772898674
    2. ' +' → logprob: -3.049851655960083
    3. '+a' → logprob: -6.674851417541504
    4. '+A' → logprob: -14.424851417541504
    5. '+
' → logprob: -15.424851417541504
    6. '(ans' → logprob: -16.42485237121582
    7. '```' → logprob: -16.79985237121582
    8. ' ' → logprob: -17.17485237121582
    9. 'a' → logprob: -17.17485237121582
    10. '+b' → logprob: -17.29985237121582

Token 925: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.896309739408025e-07
    2. ' a' → logprob: -14.375000953674316
    3. 'ans' → logprob: -16.625
    4. '(a' → logprob: -19.5
    5. '_a' → logprob: -20.5
    6. '	a' → logprob: -20.875
    7. '   ' → logprob: -21.125
    8. '```' → logprob: -21.375
    9. ')a' → logprob: -22.875
    10. 'а' → logprob: -23.25

Token 926: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3319124011322856e-05
    2. ')%' → logprob: -11.125022888183594
    3. ' )' → logprob: -12.000022888183594
    4. '   ' → logprob: -13.250022888183594
    5. '       ' → logprob: -15.000022888183594
    6. '```' → logprob: -16.500022888183594
    7. '%' → logprob: -16.875022888183594
    8. '+' → logprob: -17.250022888183594
    9. ')
' → logprob: -17.875022888183594
    10. '`)' → logprob: -18.125022888183594

Token 927: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16094177961349487
    2. ' %' → logprob: -1.9109418392181396
    3. ')' → logprob: -7.4109416007995605
    4. ')%' → logprob: -10.285942077636719
    5. '
' → logprob: -10.535942077636719
    6. '```' → logprob: -10.660942077636719
    7. 'ans' → logprob: -11.535942077636719
    8. ' ans' → logprob: -11.660942077636719
    9. '`' → logprob: -12.410942077636719
    10. '(ans' → logprob: -12.910942077636719

Token 928: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -17.5
    3. '100' → logprob: -18.5
    4. '(mod' → logprob: -19.875
    5. '```' → logprob: -21.125
    6. '	mod' → logprob: -23.0
    7. ' мод' → logprob: -25.25
    8. '`' → logprob: -25.25
    9. '0' → logprob: -25.5
    10. '10' → logprob: -25.625

Token 929: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10327249020338058
    2. 'print' → logprob: -2.8532724380493164
    3. '
' → logprob: -3.8532724380493164
    4. '```' → logprob: -4.103272438049316
    5. 'return' → logprob: -5.978272438049316
    6. '    
' → logprob: -8.728272438049316
    7. '``' → logprob: -10.728272438049316
    8. ' print' → logprob: -12.353272438049316
    9. '`' → logprob: -12.353272438049316
    10. ' return' → logprob: -12.478272438049316

Token 930: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004246504511684179
    2. 'return' → logprob: -5.629246711730957
    3. '```' → logprob: -8.004246711730957
    4. '    
' → logprob: -9.004246711730957
    5. '
' → logprob: -9.004246711730957
    6. '	return' → logprob: -10.629246711730957
    7. '<|end|>' → logprob: -10.879246711730957
    8. ' return' → logprob: -11.129246711730957
    9. '`' → logprob: -12.879246711730957
    10. 'print' → logprob: -13.129246711730957

Token 931: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0266448725014925
    2. '   ' → logprob: -3.7766449451446533
    3. 'return' → logprob: -5.776644706726074
    4. '```' → logprob: -8.151644706726074
    5. ' print' → logprob: -12.776644706726074
    6. '	print' → logprob: -13.901644706726074
    7. '
' → logprob: -14.026644706726074
    8. '``' → logprob: -14.401644706726074
    9. '    
' → logprob: -14.526644706726074
    10. '#print' → logprob: -15.776644706726074

Token 932: ' Print' (ID: 13103)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003439222928136587
    2. 'return' → logprob: -5.753439426422119
    3. '   ' → logprob: -8.253438949584961
    4. ' print' → logprob: -14.503438949584961
    5. '```' → logprob: -15.128438949584961
    6. 'pr' → logprob: -16.50343894958496
    7. '#print' → logprob: -16.62843894958496
    8. '
' → logprob: -17.00343894958496
    9. '	print' → logprob: -17.87843894958496
    10. ' return' → logprob: -18.00343894958496

Token 933: ' the' (ID: 290)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.011090856045484543
    2. 'ans' → logprob: -4.5110907554626465
    3. '   ' → logprob: -10.761091232299805
    4. '(' → logprob: -11.011091232299805
    5. '()' → logprob: -12.886091232299805
    6. '(
' → logprob: -14.011091232299805
    7. '	ans' → logprob: -14.636091232299805
    8. '(answer' → logprob: -15.011091232299805
    9. '```' → logprob: -15.011091232299805
    10. '()
' → logprob: -15.136091232299805

Token 934: ' final' (ID: 1721)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.25220128893852234
    2. 'ans' → logprob: -1.5022013187408447
    3. 'answer' → logprob: -8.877201080322266
    4. '(
' → logprob: -9.627201080322266
    5. '(' → logprob: -10.002201080322266
    6. 'result' → logprob: -11.877201080322266
    7. ' ans' → logprob: -12.627201080322266
    8. '   ' → logprob: -13.002201080322266
    9. '()' → logprob: -13.127201080322266
    10. '(answer' → logprob: -13.127201080322266

Token 935: ' answer' (ID: 6052)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.008411500602960587
    2. 'ans' → logprob: -5.008411407470703
    3. '(' → logprob: -6.508411407470703
    4. '(answer' → logprob: -9.258411407470703
    5. 'answer' → logprob: -9.508411407470703
    6. '(
' → logprob: -10.383411407470703
    7. '()' → logprob: -13.633411407470703
    8. 'result' → logprob: -14.258411407470703
    9. ' ans' → logprob: -14.758411407470703
    10. '	ans' → logprob: -15.133411407470703

Token 936: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049017876386642456
    2. 'print' → logprob: -3.049017906188965
    3. '
' → logprob: -8.299017906188965
    4. '```' → logprob: -9.049017906188965
    5. '    
' → logprob: -9.799017906188965
    6. ' print' → logprob: -12.549017906188965
    7. '	print' → logprob: -12.799017906188965
    8. '``' → logprob: -14.174017906188965
    9. '(print' → logprob: -14.799017906188965
    10. '`' → logprob: -15.424017906188965

Token 937: ' In' (ID: 730)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09018077701330185
    2. 'print' → logprob: -2.4651808738708496
    3. '```' → logprob: -7.09018087387085
    4. '    
' → logprob: -8.465180397033691
    5. ' print' → logprob: -9.590180397033691
    6. '
' → logprob: -10.090180397033691
    7. 'input' → logprob: -10.215180397033691
    8. '``' → logprob: -11.090180397033691
    9. '	print' → logprob: -11.340180397033691
    10. '  
' → logprob: -12.090180397033691

Token 938: ' contests' (ID: 76269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.206175684928894
    2. 'main' → logprob: -1.706175684928894
    3. 'range' → logprob: -1.706175684928894
    4. '```' → logprob: -2.7061758041381836
    5. ' range' → logprob: -2.8311758041381836
    6. '()
' → logprob: -3.2061758041381836
    7. '__' → logprob: -3.4561758041381836
    8. ')' → logprob: -3.9561758041381836
    9. 'python' → logprob: -3.9561758041381836
    10. ' main' → logprob: -4.081175804138184

Token 939: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3411019742488861
    2. ':' → logprob: -2.216101884841919
    3. '()' → logprob: -2.216101884841919
    4. '()
' → logprob: -3.466101884841919
    5. 'print' → logprob: -4.341102123260498
    6. '(' → logprob: -4.841102123260498
    7. ',' → logprob: -5.216102123260498
    8. '.' → logprob: -5.341102123260498
    9. ')' → logprob: -5.841102123260498
    10. ':
' → logprob: -6.591102123260498

Token 940: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31418177485466003
    2. '   ' → logprob: -1.3141818046569824
    3. ' print' → logprob: -7.189181804656982
    4. '```' → logprob: -9.564181327819824
    5. 'end' → logprob: -10.064181327819824
    6. 'return' → logprob: -11.064181327819824
    7. '    
' → logprob: -11.439181327819824
    8. ')' → logprob: -12.064181327819824
    9. '    ' → logprob: -12.189181327819824
    10. '
' → logprob: -12.564181327819824

Token 941: ' must' (ID: 2804)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.35602396726608276
    2. '(ans' → logprob: -1.7310240268707275
    3. '(' → logprob: -2.1060240268707275
    4. '(
' → logprob: -7.856023788452148
    5. '()
' → logprob: -8.606023788452148
    6. '("")' → logprob: -10.106023788452148
    7. 'ans' → logprob: -10.981023788452148
    8. '("\' → logprob: -10.981023788452148
    9. '   ' → logprob: -11.356023788452148
    10. '(answer' → logprob: -11.356023788452148

Token 942: ' be' (ID: 413)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012082326225936413
    2. '(' → logprob: -5.012082099914551
    3. 'print' → logprob: -5.887082099914551
    4. ')' → logprob: -6.762082099914551
    5. '()
' → logprob: -7.512082099914551
    6. '   ' → logprob: -8.63708209991455
    7. '()\' → logprob: -9.01208209991455
    8. '```' → logprob: -9.01208209991455
    9. '(print' → logprob: -9.38708209991455
    10. '(
' → logprob: -9.63708209991455

Token 943: ' precise' (ID: 31687)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06349816918373108
    2. 'str' → logprob: -3.8134982585906982
    3. '   ' → logprob: -4.813498020172119
    4. '()' → logprob: -5.063498020172119
    5. '(' → logprob: -5.188498020172119
    6. '```' → logprob: -5.438498020172119
    7. '(ans' → logprob: -5.688498020172119
    8. 'ans' → logprob: -5.813498020172119
    9. ')' → logprob: -5.938498020172119
    10. '(str' → logprob: -6.563498020172119

Token 944: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016240572556853294
    2. 'print' → logprob: -4.14124059677124
    3. '```' → logprob: -9.266240119934082
    4. '
' → logprob: -10.016240119934082
    5. '    
' → logprob: -10.141240119934082
    6. ' print' → logprob: -12.516240119934082
    7. '(' → logprob: -12.641240119934082
    8. '()
' → logprob: -12.766240119934082
    9. '(print' → logprob: -12.766240119934082
    10. '	print' → logprob: -12.891240119934082

Token 945: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02638007327914238
    2. 'print' → logprob: -3.6513800621032715
    3. ' print' → logprob: -9.77638053894043
    4. '```' → logprob: -11.77638053894043
    5. '    
' → logprob: -12.15138053894043
    6. 'end' → logprob: -12.27638053894043
    7. '       ' → logprob: -13.65138053894043
    8. '
' → logprob: -14.02638053894043
    9. '	print' → logprob: -14.27638053894043
    10. '"\' → logprob: -14.65138053894043

Token 946: ' we' (ID: 581)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010530580766499043
    2. '   ' → logprob: -4.760530471801758
    3. ' print' → logprob: -6.260530471801758
    4. '```' → logprob: -12.635530471801758
    5. '
' → logprob: -15.135530471801758
    6. '    
' → logprob: -16.510530471801758
    7. '    ' → logprob: -16.760530471801758
    8. '	print' → logprob: -16.760530471801758
    9. '(print' → logprob: -17.010530471801758
    10. ')' → logprob: -17.260530471801758

Token 947: ' use' (ID: 1199)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006530869286507368
    2. ' print' → logprob: -5.75653076171875
    3. '   ' → logprob: -5.88153076171875
    4. ')' → logprob: -8.38153076171875
    5. '.print' → logprob: -8.50653076171875
    6. '()' → logprob: -10.25653076171875
    7. '(print' → logprob: -10.50653076171875
    8. '_print' → logprob: -11.25653076171875
    9. '#print' → logprob: -11.50653076171875
    10. '```' → logprob: -12.00653076171875

Token 948: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1756367712223437e-05
    2. '   ' → logprob: -11.500011444091797
    3. ' print' → logprob: -14.250011444091797
    4. '```' → logprob: -14.250011444091797
    5. '(print' → logprob: -15.875011444091797
    6. '    
' → logprob: -16.125011444091797
    7. '
' → logprob: -17.250011444091797
    8. '`' → logprob: -17.875011444091797
    9. '``' → logprob: -18.875011444091797
    10. '(' → logprob: -19.125011444091797

Token 949: '().
' (ID: 58434)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0949631929397583
    2. '(' → logprob: -3.0949630737304688
    3. '()' → logprob: -3.0949630737304688
    4. '("")' → logprob: -10.969963073730469
    5. '(
' → logprob: -12.094963073730469
    6. '(answer' → logprob: -12.094963073730469
    7. '(f' → logprob: -13.344963073730469
    8. '("("' → logprob: -13.469963073730469
    9. '("\' → logprob: -13.719963073730469
    10. '("' → logprob: -13.719963073730469

Token 950: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06442216783761978
    2. 'print' → logprob: -2.814422130584717
    3. '```' → logprob: -6.314422130584717
    4. '()' → logprob: -7.814422130584717
    5. '``' → logprob: -9.689422607421875
    6. '()
' → logprob: -10.189422607421875
    7. '    
' → logprob: -10.189422607421875
    8. ' print' → logprob: -10.689422607421875
    9. '\' → logprob: -11.439422607421875
    10. '(print' → logprob: -11.439422607421875

Token 951: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005660186288878322
    2. '   ' → logprob: -7.500566005706787
    3. '```' → logprob: -11.750566482543945
    4. ' print' → logprob: -12.250566482543945
    5. '	print' → logprob: -14.750566482543945
    6. '``' → logprob: -17.250566482543945
    7. '(print' → logprob: -18.125566482543945
    8. '`' → logprob: -18.750566482543945
    9. '    
' → logprob: -19.250566482543945
    10. '
' → logprob: -19.750566482543945

Token 952: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.03582564741373062
    2. '(' → logprob: -3.660825729370117
    3. '()' → logprob: -4.660825729370117
    4. '(
' → logprob: -12.410825729370117
    5. '(answer' → logprob: -12.410825729370117
    6. 'ans' → logprob: -12.910825729370117
    7. ' (' → logprob: -13.160825729370117
    8. '((' → logprob: -13.285825729370117
    9. '('' → logprob: -13.410825729370117
    10. '(sum' → logprob: -13.660825729370117

Token 953: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020090525969862938
    2. '())' → logprob: -4.145090579986572
    3. '()' → logprob: -5.520090579986572
    4. '   ' → logprob: -10.520090103149414
    5. ')
' → logprob: -12.395090103149414
    6. '```' → logprob: -12.895090103149414
    7. '()
' → logprob: -13.020090103149414
    8. ' )' → logprob: -13.645090103149414
    9. '`)' → logprob: -13.895090103149414
    10. '(' → logprob: -14.020090103149414

Token 954: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 955: ' Standard' (ID: 16574)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.250347763299942
    2. '
' → logprob: -1.6253477334976196
    3. '<|end|>' → logprob: -4.37534761428833
    4. 'main' → logprob: -5.00034761428833
    5. '```' → logprob: -5.62534761428833
    6. '(main' → logprob: -8.000348091125488
    7. '\n' → logprob: -8.125348091125488
    8. ' if' → logprob: -8.250348091125488
    9. '()' → logprob: -8.625348091125488
    10. '(
' → logprob: -9.250348091125488

Token 956: ' "' (ID: 392)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006462882738560438
    2. '```' → logprob: -6.256463050842285
    3. '<|end|>' → logprob: -6.756463050842285
    4. '
' → logprob: -6.881463050842285
    5. ' if' → logprob: -6.881463050842285
    6. '()' → logprob: -8.006463050842285
    7. '()
' → logprob: -8.381463050842285
    8. '_' → logprob: -8.631463050842285
    9. '

' → logprob: -8.881463050842285
    10. '\' → logprob: -9.131463050842285

Token 957: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.000000953674316
    3. ' if' → logprob: -15.000000953674316
    4. '__' → logprob: -15.750000953674316
    5. 'python' → logprob: -18.000001907348633
    6. '
' → logprob: -18.125001907348633
    7. '

' → logprob: -20.500001907348633
    8. '``' → logprob: -20.875001907348633
    9. '  
' → logprob: -21.250001907348633
    10. '    
' → logprob: -21.250001907348633

Token 958: '"' (ID: 1)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02065657265484333
    2. '():' → logprob: -4.145656585693359
    3. '()
' → logprob: -6.145656585693359
    4. '_' → logprob: -6.520656585693359
    5. '():
' → logprob: -7.895656585693359
    6. '(' → logprob: -8.77065658569336
    7. '```' → logprob: -9.02065658569336
    8. '()\' → logprob: -9.77065658569336
    9. ':' → logprob: -9.89565658569336
    10. '()`' → logprob: -10.02065658569336

Token 959: ' guard' (ID: 11774)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.805194616317749
    2. 'if' → logprob: -1.055194616317749
    3. '():' → logprob: -2.430194616317749
    4. '():
' → logprob: -3.555194616317749
    5. ':' → logprob: -3.805194616317749
    6. '()
' → logprob: -4.055194854736328
    7. ' if' → logprob: -4.305194854736328
    8. '```' → logprob: -4.430194854736328
    9. '
' → logprob: -5.305194854736328
    10. '<|end|>' → logprob: -5.305194854736328

Token 960: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13911592960357666
    2. 'if' → logprob: -2.264115810394287
    3. '```' → logprob: -4.014115810394287
    4. ':' → logprob: -6.514115810394287
    5. '  
' → logprob: -6.514115810394287
    6. ':
' → logprob: -6.764115810394287
    7. ' 
' → logprob: -6.764115810394287
    8. '``' → logprob: -7.014115810394287
    9. ' if' → logprob: -7.514115810394287
    10. '

' → logprob: -7.889115810394287

Token 961: ' Python' (ID: 26534)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6602532267570496
    2. '__' → logprob: -1.4102532863616943
    3. 'python' → logprob: -2.0352532863616943
    4. '```' → logprob: -2.6602532863616943
    5. 'Python' → logprob: -3.2852532863616943
    6. '``' → logprob: -7.035253047943115
    7. ' Python' → logprob: -8.910253524780273
    8. '
' → logprob: -9.785253524780273
    9. '_python' → logprob: -10.160253524780273
    10. ' if' → logprob: -11.410253524780273

Token 962: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33559250831604004
    2. '
' → logprob: -1.33559250831604
    3. '```' → logprob: -3.83559250831604
    4. '``' → logprob: -8.585592269897461
    5. '

' → logprob: -9.585592269897461
    6. '  
' → logprob: -9.710592269897461
    7. ' if' → logprob: -9.835592269897461
    8. ':' → logprob: -10.210592269897461
    9. ':
' → logprob: -10.460592269897461
    10. ' 
' → logprob: -11.335592269897461

Token 963: ' ensure' (ID: 6757)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01135419774800539
    2. '```' → logprob: -4.511353969573975
    3. 'python' → logprob: -10.011354446411133
    4. '__' → logprob: -10.011354446411133
    5. '``' → logprob: -10.386354446411133
    6. '
' → logprob: -11.011354446411133
    7. 'ensure' → logprob: -11.011354446411133
    8. ' if' → logprob: -11.136354446411133
    9. '>' → logprob: -11.136354446411133
    10. 'define' → logprob: -11.261354446411133

Token 964: ' that' (ID: 484)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001468557515181601
    2. '__' → logprob: -7.251468658447266
    3. '```' → logprob: -7.501468658447266
    4. ' if' → logprob: -8.501468658447266
    5. '``' → logprob: -14.001468658447266
    6. '
' → logprob: -14.126468658447266
    7. 'the' → logprob: -15.001468658447266
    8. 'main' → logprob: -15.251468658447266
    9. '`' → logprob: -15.376468658447266
    10. 'python' → logprob: -15.751468658447266

Token 965: ' main' (ID: 2758)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.023255497217178345
    2. 'if' → logprob: -3.7732555866241455
    3. '```' → logprob: -11.898255348205566
    4. ' __' → logprob: -13.398255348205566
    5. '
' → logprob: -14.398255348205566
    6. 'python' → logprob: -15.148255348205566
    7. 'def' → logprob: -15.398255348205566
    8. 'name' → logprob: -15.648255348205566
    9. 'main' → logprob: -16.023256301879883
    10. '`' → logprob: -16.273256301879883

Token 966: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.035707056522369385
    2. '():' → logprob: -3.4107069969177246
    3. '__' → logprob: -7.285706996917725
    4. '().__' → logprob: -8.035707473754883
    5. '()==' → logprob: -8.035707473754883
    6. '():
' → logprob: -8.160707473754883
    7. '()>' → logprob: -8.535707473754883
    8. '_' → logprob: -10.035707473754883
    9. '```' → logprob: -10.160707473754883
    10. '()">' → logprob: -10.535707473754883

Token 967: ' only' (ID: 1606)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3677253723144531
    2. 'if' → logprob: -1.2427253723144531
    3. '():' → logprob: -4.992725372314453
    4. '():
' → logprob: -5.492725372314453
    5. ':' → logprob: -6.367725372314453
    6. '()
' → logprob: -6.367725372314453
    7. '()==' → logprob: -6.492725372314453
    8. '```' → logprob: -6.492725372314453
    9. ' is' → logprob: -7.992725372314453
    10. '==' → logprob: -8.242725372314453

Token 968: ' runs' (ID: 13719)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.077446348965168
    2. '```' → logprob: -3.202446460723877
    3. '==' → logprob: -3.827446460723877
    4. '__' → logprob: -5.452446460723877
    5. 'is' → logprob: -6.327446460723877
    6. ' if' → logprob: -6.702446460723877
    7. 'def' → logprob: -7.077446460723877
    8. ' ==' → logprob: -7.202446460723877
    9. '.py' → logprob: -7.452446460723877
    10. '()' → logprob: -7.702446460723877

Token 969: ' when' (ID: 1261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003917630296200514
    2. '```' → logprob: -5.878917694091797
    3. ' if' → logprob: -7.753917694091797
    4. '
' → logprob: -7.753917694091797
    5. ':' → logprob: -9.003917694091797
    6. ':
' → logprob: -9.503917694091797
    7. '``' → logprob: -10.253917694091797
    8. '\' → logprob: -12.878917694091797
    9. '<|end|>' → logprob: -13.253917694091797
    10. '\n' → logprob: -13.253917694091797

Token 970: ' this' (ID: 495)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -1.9981420336989686e-05
    2. ' __' → logprob: -11.125020027160645
    3. '```' → logprob: -12.625020027160645
    4. 'name' → logprob: -13.750020027160645
    5. 'if' → logprob: -14.375020027160645
    6. '.__' → logprob: -16.625019073486328
    7. '#__' → logprob: -17.375019073486328
    8. '/__' → logprob: -17.375019073486328
    9. 'the' → logprob: -18.000019073486328
    10. '`' → logprob: -18.000019073486328

Token 971: ' script' (ID: 11713)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.15923160314559937
    2. '__' → logprob: -3.034231662750244
    3. '.py' → logprob: -3.284231662750244
    4. ' is' → logprob: -3.659231662750244
    5. '```' → logprob: -4.159231662750244
    6. 'name' → logprob: -5.034231662750244
    7. 'module' → logprob: -5.534231662750244
    8. '_is' → logprob: -5.659231662750244
    9. ' script' → logprob: -6.659231662750244
    10. '_name' → logprob: -7.034231662750244

Token 972: ' is' (ID: 382)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08498303592205048
    2. '__' → logprob: -3.2099831104278564
    3. ' is' → logprob: -4.334982872009277
    4. ' ==' → logprob: -4.584982872009277
    5. 'is' → logprob: -4.834982872009277
    6. '==' → logprob: -4.959982872009277
    7. '```' → logprob: -6.584982872009277
    8. ' if' → logprob: -6.959982872009277
    9. '==
' → logprob: -9.209982872009277
    10. '_is' → logprob: -9.209982872009277

Token 973: ' executed' (ID: 30830)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.409604012966156
    2. ' run' → logprob: -2.159604072570801
    3. 'execut' → logprob: -2.284604072570801
    4. '__' → logprob: -2.659604072570801
    5. ' executed' → logprob: -3.409604072570801
    6. '_run' → logprob: -4.534604072570801
    7. '```' → logprob: -5.409604072570801
    8. '-run' → logprob: -7.659604072570801
    9. '.run' → logprob: -9.5346040725708
    10. 'the' → logprob: -10.4096040725708

Token 974: ' directly' (ID: 8516)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4521549940109253
    2. '
' → logprob: -1.0771549940109253
    3. ':
' → logprob: -4.577155113220215
    4. ':' → logprob: -5.327155113220215
    5. '```' → logprob: -5.327155113220215
    6. ' if' → logprob: -6.327155113220215
    7. '  
' → logprob: -8.327155113220215
    8. '``' → logprob: -8.327155113220215
    9. '

' → logprob: -8.577155113220215
    10. ' 
' → logprob: -9.202155113220215

Token 975: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04718318581581116
    2. 'if' → logprob: -3.2971832752227783
    3. ':
' → logprob: -5.547183036804199
    4. '```' → logprob: -5.672183036804199
    5. ':' → logprob: -6.922183036804199
    6. '

' → logprob: -7.672183036804199
    7. '``' → logprob: -9.0471830368042
    8. '  
' → logprob: -9.6721830368042
    9. ' 
' → logprob: -10.4221830368042
    10. ' if' → logprob: -10.5471830368042

Token 976: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0087516784551553e-05
    2. '
' → logprob: -12.37501049041748
    3. '```' → logprob: -12.37501049041748
    4. ' if' → logprob: -13.50001049041748
    5. '``' → logprob: -16.250009536743164
    6. '__' → logprob: -17.000009536743164
    7. 'not' → logprob: -17.500009536743164
    8. ' 
' → logprob: -19.000009536743164
    9. '  
' → logprob: -19.125009536743164
    10. '\
' → logprob: -19.375009536743164

Token 977: ' and' (ID: 326)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.253090865968261e-06
    2. '```' → logprob: -12.250009536743164
    3. ' if' → logprob: -12.500009536743164
    4. '
' → logprob: -14.250009536743164
    5. '``' → logprob: -17.375009536743164
    6. '__' → logprob: -18.375009536743164
    7. '#' → logprob: -20.250009536743164
    8. 'not' → logprob: -20.875009536743164
    9. '`' → logprob: -21.250009536743164
    10. '\' → logprob: -22.000009536743164

Token 978: ' not' (ID: 625)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002986256033182144
    2. ' not' → logprob: -6.627986431121826
    3. 'not' → logprob: -6.877986431121826
    4. ' if' → logprob: -8.002985954284668
    5. '__' → logprob: -8.752985954284668
    6. '
' → logprob: -9.127985954284668
    7. '```' → logprob: -10.627985954284668
    8. '\
' → logprob: -14.502985954284668
    9. '``' → logprob: -14.502985954284668
    10. 'def' → logprob: -14.877985954284668

Token 979: ' when' (ID: 1261)
  Prédit: ' when'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' when' → logprob: -0.20693281292915344
    2. 'if' → logprob: -2.081932783126831
    3. 'when' → logprob: -3.456932783126831
    4. ' if' → logprob: -3.706932783126831
    5. ' as' → logprob: -5.20693302154541
    6. ' under' → logprob: -8.33193302154541
    7. 'as' → logprob: -9.58193302154541
    8. 'import' → logprob: -9.70693302154541
    9. '   ' → logprob: -9.83193302154541
    10. 'from' → logprob: -9.95693302154541

Token 980: ' imported' (ID: 44997)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.025915181264281273
    2. 'import' → logprob: -3.9009151458740234
    3. ' __' → logprob: -5.400915145874023
    4. ' imported' → logprob: -7.275915145874023
    5. ' import' → logprob: -9.400915145874023
    6. 'if' → logprob: -10.525915145874023
    7. 'name' → logprob: -10.775915145874023
    8. '```' → logprob: -11.400915145874023
    9. '_import' → logprob: -12.650915145874023
    10. '_name' → logprob: -13.525915145874023

Token 981: ' as' (ID: 472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11201924085617065
    2. '
' → logprob: -2.6120193004608154
    3. ':
' → logprob: -3.8620193004608154
    4. ':

' → logprob: -5.487019062042236
    5. '

' → logprob: -6.237019062042236
    6. ':' → logprob: -6.362019062042236
    7. ' if' → logprob: -6.612019062042236
    8. '```' → logprob: -6.862019062042236
    9. '.
' → logprob: -6.987019062042236
    10. '  
' → logprob: -9.112019538879395

Token 982: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.09013894945383072
    2. 'a' → logprob: -2.4651389122009277
    3. '__' → logprob: -7.090138912200928
    4. ' the' → logprob: -9.090139389038086
    5. 'module' → logprob: -9.215139389038086
    6. ' module' → logprob: -9.590139389038086
    7. ' __' → logprob: -10.215139389038086
    8. 'the' → logprob: -11.340139389038086
    9. 'import' → logprob: -11.590139389038086
    10. '_a' → logprob: -12.215139389038086

Token 983: ' module' (ID: 8827)
  Prédit: ' module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' module' → logprob: -0.1803906112909317
    2. 'module' → logprob: -1.8053905963897705
    3. '__' → logprob: -7.93039083480835
    4. 'import' → logprob: -9.305390357971191
    5. '_module' → logprob: -10.055390357971191
    6. '	module' → logprob: -10.180390357971191
    7. ' __' → logprob: -10.430390357971191
    8. '```' → logprob: -11.055390357971191
    9. ' main' → logprob: -11.305390357971191
    10. '[module' → logprob: -11.305390357971191

Token 984: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26693570613861084
    2. 'if' → logprob: -1.6419357061386108
    3. ':
' → logprob: -3.5169358253479004
    4. '```' → logprob: -5.2669358253479
    5. ':' → logprob: -5.5169358253479
    6. '  
' → logprob: -7.7669358253479
    7. '

' → logprob: -7.7669358253479
    8. ' if' → logprob: -8.141935348510742
    9. '.
' → logprob: -8.766935348510742
    10. ':

' → logprob: -8.891935348510742

Token 985: ' another' (ID: 3613)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.5833778977394104
    2. 'another' → logprob: -0.8333778977394104
    3. ' another' → logprob: -5.458377838134766
    4. ' other' → logprob: -5.958377838134766
    5. '__' → logprob: -7.708377838134766
    6. 'Python' → logprob: -10.083377838134766
    7. 'python' → logprob: -10.083377838134766
    8. 'import' → logprob: -10.833377838134766
    9. ' Python' → logprob: -12.458377838134766
    10. '_other' → logprob: -12.583377838134766

Token 986: ' program' (ID: 2193)
  Prédit: ' script'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' script' → logprob: -0.8805892467498779
    2. '```' → logprob: -1.380589246749878
    3. '.py' → logprob: -1.880589246749878
    4. 'script' → logprob: -2.755589246749878
    5. 'python' → logprob: -2.755589246749878
    6. 'file' → logprob: -3.380589246749878
    7. ' file' → logprob: -4.380589485168457
    8. 'if' → logprob: -5.505589485168457
    9. 'module' → logprob: -6.755589485168457
    10. 'Python' → logprob: -6.880589485168457

Token 987: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6569049954414368
    2. ':
' → logprob: -1.406904935836792
    3. '
' → logprob: -1.656904935836792
    4. ':' → logprob: -3.156904935836792
    5. '```' → logprob: -6.406905174255371
    6. ' if' → logprob: -7.531905174255371
    7. ':

' → logprob: -7.531905174255371
    8. '  
' → logprob: -8.156905174255371
    9. '

' → logprob: -9.156905174255371
    10. '.
' → logprob: -10.031905174255371

Token 988: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014339550398290157
    2. '
' → logprob: -4.264339447021484
    3. '```' → logprob: -8.764339447021484
    4. ' if' → logprob: -11.139339447021484
    5. '``' → logprob: -12.889339447021484
    6. '  
' → logprob: -14.139339447021484
    7. '\n' → logprob: -14.264339447021484
    8. '    
' → logprob: -14.889339447021484
    9. '\
' → logprob: -14.889339447021484
    10. '

' → logprob: -15.139339447021484

Token 989: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11334621161222458
    2. '__' → logprob: -2.2383460998535156
    3. ' ' → logprob: -7.613346099853516
    4. ' ' → logprob: -11.988346099853516
    5. ' True' → logprob: -12.113346099853516
    6. ' ' → logprob: -12.113346099853516
    7. '_' → logprob: -12.238346099853516
    8. ' space' → logprob: -13.988346099853516
    9. '​' → logprob: -13.988346099853516
    10. ' main' → logprob: -14.113346099853516

Token 990: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11824723333120346
    2. '==' → logprob: -2.2432472705841064
    3. ' ==' → logprob: -5.493247032165527
    4. '=="' → logprob: -6.993247032165527
    5. '=='' → logprob: -8.868247032165527
    6. '__.__' → logprob: -9.993247032165527
    7. 'name' → logprob: -10.118247032165527
    8. '=' → logprob: -10.243247032165527
    9. '[' → logprob: -10.743247032165527
    10. ' __' → logprob: -10.743247032165527

Token 991: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005583931924775243
    2. '==' → logprob: -7.500558376312256
    3. '=="' → logprob: -12.500558853149414
    4. ' ==' → logprob: -14.250558853149414
    5. '___' → logprob: -15.625558853149414
    6. '_' → logprob: -15.625558853149414
    7. '__.__' → logprob: -15.625558853149414
    8. '=='' → logprob: -15.750558853149414
    9. '=' → logprob: -15.875558853149414
    10. '===' → logprob: -16.500558853149414

Token 992: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5828690528869629
    2. '__' → logprob: -0.8328690528869629
    3. '=="' → logprob: -5.207869052886963
    4. ' ==' → logprob: -6.832869052886963
    5. '=='' → logprob: -8.207868576049805
    6. '==
' → logprob: -10.207868576049805
    7. '=' → logprob: -10.582868576049805
    8. '===' → logprob: -12.207868576049805
    9. '"' → logprob: -12.832868576049805
    10. '_' → logprob: -13.332868576049805

Token 993: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018154388293623924
    2. ''' → logprob: -4.018154621124268
    3. ' "__' → logprob: -12.64315414428711
    4. '__' → logprob: -13.76815414428711
    5. ' '__' → logprob: -16.51815414428711
    6. ''"' → logprob: -17.01815414428711
    7. '"name' → logprob: -17.51815414428711
    8. '"user' → logprob: -17.51815414428711
    9. '("__' → logprob: -18.26815414428711
    10. '"class' → logprob: -18.39315414428711

Token 994: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1517960956552997e-05
    2. 'name' → logprob: -11.625011444091797
    3. '__' → logprob: -13.000011444091797
    4. '_main' → logprob: -16.000011444091797
    5. 'm' → logprob: -16.375011444091797
    6. ' main' → logprob: -18.500011444091797
    7. '__':
' → logprob: -19.250011444091797
    8. 'ma' → logprob: -19.750011444091797
    9. 'builtin' → logprob: -19.750011444091797
    10. 'maine' → logprob: -19.875011444091797

Token 995: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.00531937787309289
    2. '__' → logprob: -5.380319595336914
    3. '':' → logprob: -7.880319595336914
    4. '':
' → logprob: -8.630319595336914
    5. '_' → logprob: -9.880319595336914
    6. ':' → logprob: -10.130319595336914
    7. '__":
' → logprob: -10.380319595336914
    8. '__:' → logprob: -11.255319595336914
    9. ''' → logprob: -13.130319595336914
    10. '':
' → logprob: -13.255319595336914

Token 996: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2043112963438034
    2. 'main' → logprob: -1.7043112516403198
    3. ' main' → logprob: -6.204311370849609
    4. '	main' → logprob: -7.204311370849609
    5. '    
' → logprob: -9.57931137084961
    6. '```' → logprob: -10.20431137084961
    7. '
' → logprob: -11.70431137084961
    8. '_main' → logprob: -12.32931137084961
    9. '(main' → logprob: -12.57931137084961
    10. '   ' → logprob: -12.82931137084961

Token 997: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -20.5
    3. '	main' → logprob: -24.75
    4. '_main' → logprob: -27.125
    5. '.main' → logprob: -27.375
    6. 'mainwindow' → logprob: -27.5
    7. 'import' → logprob: -27.75
    8. '(main' → logprob: -28.125
    9. 'Main' → logprob: -28.25
    10. '   ' → logprob: -28.5

Token 998: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 996
Tokens correctement prédits (1ère position, stricte): 256
Tokens correctement prédits (1ère position, avec adaptation): 275
Tokens correctement prédits (top 10): 600
Précision stricte (1ère position): 25.70%
Précision adaptée (1ère position): 27.61%
Précision (top 10): 60.24%
================================================================================
