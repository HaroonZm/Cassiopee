================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Définition d'une fonction appelée 'ten_mod' qui prend un argument 'x'
def ten_mod(x):
    # Calcul du reste de la division de x par 10 pour obtenir le chiffre des unités de x
    # Si ce reste est égal à 0, alors on retourne 10, car x est déjà un multiple de 10 et il n'est pas nécessaire d'ajouter des unités pour atteindre le prochain multiple de 10
    # Sinon, on retourne le reste, c'est-à-dire le chiffre des unités de x
    ans = 10 if (x % 10) == 0 else x % 10
    # Retourne la valeur calculée à l'appelant
    return ans

# Lecture d'un nombre entier depuis l'entrée standard et conversion en entier avec la fonction int()
x = int(input())

# Calcul du premier élément de la variable 'ans' qui sera utilisée comme accumulation de la réponse finale
# Si x est divisible par 10 (c'est-à-dire un multiple de 10 : aucune unité restante après division par 10)
# alors ans prend la valeur de x directement car il est déjà un multiple de 10
# Sinon, on divise x par 10 (division entière avec int(x / 10)), puis on multiplie ce résultat par 10 
# pour obtenir la dizaine la plus proche inférieure, puis on ajoute 10 pour obtenir la dizaine supérieure suivante
ans = x if (x % 10) == 0 else int(x / 10) * 10 + 10

# Stocke la valeur initiale de x dans la variable 'last'
last = x

# Débute une boucle for qui itère 5-1 = 4 fois, car un élément a déjà été lu avant la boucle
for i in range(5 - 1):
    # À chaque itération, lit un nouvel entier entier depuis l'entrée standard et assigne à x
    x = int(input())
    # Pour chaque nouvel x, ajoute à 'ans' la même logique de multiple supérieur de 10:
    # si x est déjà un multiple de 10, on ajoute x directement 
    # sinon, on arrondit à la dizaine supérieure en prenant la dizaine inférieure et en ajoutant 10
    ans += x if (x % 10) == 0 else int(x / 10) * 10 + 10
    # Compare le résultat de ten_mod sur la variable 'last' et sur le nouvel x :
    # Si ten_mod(last) est strictement supérieur à ten_mod(x), alors cela signifie que 
    # le chiffre des unités de last est plus grand (ou vaut 10 si last finissait par 0)
    # Dans ce cas, on remplace last par x
    if ten_mod(last) > ten_mod(x):
        last = x

# Après la boucle, on ajuste la valeur finale de 'ans'
# Si le dernier 'last' n'est pas un multiple de 10 (c'est-à-dire (last % 10) != 0),
# alors on soustrait 10 et on ajoute le chiffre des unités de last à ans
# Sinon, on laisse ans inchangé
ans = ans - 10 + (last % 10) if (last % 10) != 0 else ans

# Affiche le résultat final à l'écran avec la fonction print()
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dé' (ID: 27247)
  → Token d'amorce (pas de prédiction)

Token 2: 'fin' (ID: 6994)
  → Token d'amorce (pas de prédiction)

Token 3: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.02890322357416153
    2. 'i' → logprob: -4.403903007507324
    3. 'ition' → logprob: -5.153903007507324
    4. 't' → logprob: -6.528903007507324
    5. 'ini' → logprob: -6.528903007507324
    6. 'ine' → logprob: -6.528903007507324
    7. '#' → logprob: -6.778903007507324
    8. 'in' → logprob: -7.403903007507324
    9. 'init' → logprob: -7.653903007507324
    10. '```' → logprob: -7.778903007507324

Token 4: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8412037491798401
    2. ' ' → logprob: -1.8412036895751953
    3. ' de' → logprob: -2.3412036895751953
    4. ' d' → logprob: -2.4662036895751953
    5. ' :' → logprob: -2.4662036895751953
    6. '_' → logprob: -2.5912036895751953
    7. 's' → logprob: -3.2162036895751953
    8. ' =' → logprob: -5.216203689575195
    9. '```' → logprob: -5.341203689575195
    10. 'd' → logprob: -5.466203689575195

Token 5: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.26994869112968445
    2. '_' → logprob: -2.144948720932007
    3. 'e' → logprob: -2.519948720932007
    4. ' ' → logprob: -3.644948720932007
    5. ''un' → logprob: -5.519948482513428
    6. ''une' → logprob: -6.019948482513428
    7. ' e' → logprob: -6.144948482513428
    8. ' '' → logprob: -6.894948482513428
    9. 'é' → logprob: -7.269948482513428
    10. ''espace' → logprob: -7.394948482513428

Token 6: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.12215784192085266
    2. 'classe' → logprob: -3.3721578121185303
    3. ' ' → logprob: -3.6221578121185303
    4. 'class' → logprob: -3.8721578121185303
    5. 'function' → logprob: -4.372158050537109
    6. 'fon' → logprob: -4.747158050537109
    7. ' fonction' → logprob: -5.247158050537109
    8. 'f' → logprob: -6.247158050537109
    9. ' ' → logprob: -6.747158050537109
    10. '_' → logprob: -7.497158050537109

Token 7: ' appelée' (ID: 179130)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4315634071826935
    2. 'd' → logprob: -1.556563377380371
    3. 'def' → logprob: -2.556563377380371
    4. ' d' → logprob: -3.306563377380371
    5. '_' → logprob: -4.806563377380371
    6. ' de' → logprob: -5.306563377380371
    7. ' ```' → logprob: -6.056563377380371
    8. 's' → logprob: -6.556563377380371
    9. ':' → logprob: -6.556563377380371
    10. ' ' → logprob: -6.681563377380371

Token 8: ' '' (ID: 461)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.8021386861801147
    2. '`' → logprob: -1.5521386861801147
    3. ' ma' → logprob: -2.0521388053894043
    4. '```' → logprob: -2.4271388053894043
    5. 'def' → logprob: -3.4271388053894043
    6. ' `' → logprob: -3.4271388053894043
    7. 'bonjour' → logprob: -4.677138805389404
    8. 'calcul' → logprob: -4.802138805389404
    9. 'sal' → logprob: -5.552138805389404
    10. ' hello' → logprob: -5.552138805389404

Token 9: 'ten' (ID: 1305)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.18851238489151
    2. 'bonjour' → logprob: -2.9385123252868652
    3. 'calcul' → logprob: -3.5635123252868652
    4. 'fonction' → logprob: -3.8135123252868652
    5. 'sal' → logprob: -4.188512325286865
    6. 'def' → logprob: -4.438512325286865
    7. 'hello' → logprob: -5.313512325286865
    8. 'factor' → logprob: -5.313512325286865
    9. 'aj' → logprob: -5.313512325286865
    10. 's' → logprob: -5.313512325286865

Token 10: '_mod' (ID: 15325)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.21660293638706207
    2. 'u' → logprob: -2.4666030406951904
    3. 's' → logprob: -3.2166030406951904
    4. ')' → logprob: -4.716602802276611
    5. 'ure' → logprob: -4.716602802276611
    6. 'r' → logprob: -4.841602802276611
    7. 'tion' → logprob: -4.966602802276611
    8. 'ction' → logprob: -5.091602802276611
    9. 'd' → logprob: -5.091602802276611
    10. 'def' → logprob: -5.216602802276611

Token 11: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.021502818912267685
    2. '_' → logprob: -4.39650297164917
    3. '(' → logprob: -5.52150297164917
    4. 'u' → logprob: -5.64650297164917
    5. '_e' → logprob: -7.14650297164917
    6. ')' → logprob: -8.521502494812012
    7. '```' → logprob: -8.521502494812012
    8. '(e' → logprob: -9.396502494812012
    9. 'a' → logprob: -10.521502494812012
    10. 'ule' → logprob: -11.021502494812012

Token 12: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15922877192497253
    2. '(' → logprob: -2.034228801727295
    3. ' def' → logprob: -5.284228801727295
    4. '```' → logprob: -5.284228801727295
    5. ':' → logprob: -5.909228801727295
    6. 'd' → logprob: -6.284228801727295
    7. ' (' → logprob: -8.284228324890137
    8. ')' → logprob: -8.409228324890137
    9. '()' → logprob: -8.784228324890137
    10. '\' → logprob: -8.909228324890137

Token 13: ' prend' (ID: 37463)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.5658574104309082
    2. ' prend' → logprob: -1.0658574104309082
    3. ' retourne' → logprob: -3.940857410430908
    4. 'calcul' → logprob: -4.565857410430908
    5. 'cal' → logprob: -4.815857410430908
    6. 'calc' → logprob: -5.065857410430908
    7. ' accepte' → logprob: -5.065857410430908
    8. ' calcul' → logprob: -5.190857410430908
    9. ' calculates' → logprob: -5.565857410430908
    10. 'ren' → logprob: -5.940857410430908

Token 14: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8487711548805237
    2. ' un' → logprob: -1.473771095275879
    3. ' en' → logprob: -2.098771095275879
    4. '_' → logprob: -2.098771095275879
    5. 'un' → logprob: -2.973771095275879
    6. ' une' → logprob: -3.973771095275879
    7. 'en' → logprob: -5.723771095275879
    8. 's' → logprob: -5.848771095275879
    9. '(' → logprob: -5.973771095275879
    10. '```' → logprob: -5.973771095275879

Token 15: ' argument' (ID: 10383)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01139580737799406
    2. ' ' → logprob: -5.2613959312438965
    3. 's' → logprob: -6.3863959312438965
    4. 'space' → logprob: -7.0113959312438965
    5. 'es' → logprob: -7.3863959312438965
    6. ' espace' → logprob: -7.3863959312438965
    7. 'e' → logprob: -7.5113959312438965
    8. ' ' → logprob: -8.136395454406738
    9. ' _' → logprob: -8.386395454406738
    10. '_space' → logprob: -8.386395454406738

Token 16: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8617008924484253
    2. '_' → logprob: -1.3617008924484253
    3. 'def' → logprob: -1.8617008924484253
    4. ':' → logprob: -2.611701011657715
    5. '```' → logprob: -4.111701011657715
    6. ' ' → logprob: -4.486701011657715
    7. ')' → logprob: -4.611701011657715
    8. ',' → logprob: -4.611701011657715
    9. 's' → logprob: -4.611701011657715
    10. 'e' → logprob: -4.986701011657715

Token 17: 'x' (ID: 87)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07220201194286346
    2. 'x' → logprob: -2.94720196723938
    3. ' n' → logprob: -4.697202205657959
    4. 'number' → logprob: -5.822202205657959
    5. 'nombre' → logprob: -6.572202205657959
    6. 's' → logprob: -7.072202205657959
    7. ' x' → logprob: -7.072202205657959
    8. 'num' → logprob: -7.322202205657959
    9. 'a' → logprob: -7.822202205657959
    10. ' number' → logprob: -8.3222017288208

Token 18: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0254354327917099
    2. '):' → logprob: -4.400435447692871
    3. '```' → logprob: -5.900435447692871
    4. ':' → logprob: -6.275435447692871
    5. '_' → logprob: -6.400435447692871
    6. 'e' → logprob: -6.525435447692871
    7. ''' → logprob: -6.650435447692871
    8. '')' → logprob: -7.400435447692871
    9. ',' → logprob: -7.400435447692871
    10. '(' → logprob: -7.650435447692871

Token 19: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008741624653339386
    2. 'def' → logprob: -5.258741855621338
    3. '```' → logprob: -6.508741855621338
    4. ' :' → logprob: -6.758741855621338
    5. ':def' → logprob: -7.508741855621338
    6. ',' → logprob: -9.50874137878418
    7. ' def' → logprob: -9.63374137878418
    8. '(' → logprob: -10.25874137878418
    9. ':
' → logprob: -10.63374137878418
    10. '\' → logprob: -10.75874137878418

Token 20: ' ten' (ID: 4325)
  Prédit: ' ten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ten' → logprob: -0.31438955664634705
    2. ' ' → logprob: -1.3143895864486694
    3. ' ' → logprob: -7.064389705657959
    4. 'ten' → logprob: -9.0643892288208
    5. '_' → logprob: -9.1893892288208
    6. '  ' → logprob: -11.1893892288208
    7. ' _' → logprob: -11.1893892288208
    8. ' def' → logprob: -11.4393892288208
    9. ' t' → logprob: -13.0643892288208
    10. ' ‌' → logprob: -13.0643892288208

Token 21: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0010757996933534741
    2. '_' → logprob: -6.876075744628906
    3. ' _' → logprob: -11.126075744628906
    4. '_m' → logprob: -11.126075744628906
    5. '_mode' → logprob: -11.501075744628906
    6. '_Mod' → logprob: -14.001075744628906
    7. '_MOD' → logprob: -14.001075744628906
    8. '_md' → logprob: -14.751075744628906
    9. '_module' → logprob: -15.126075744628906
    10. '__' → logprob: -16.126075744628906

Token 22: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5914329886436462
    2. '(x' → logprob: -0.8414329886436462
    3. ' (' → logprob: -4.216433048248291
    4. '_' → logprob: -8.216432571411133
    5. 'def' → logprob: -9.341432571411133
    6. '(_' → logprob: -10.091432571411133
    7. '```' → logprob: -10.216432571411133
    8. ' ' → logprob: -10.841432571411133
    9. 's' → logprob: -11.091432571411133
    10. '(a' → logprob: -11.341432571411133

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029966961592435837
    2. ')' → logprob: -3.5299670696258545
    3. ':' → logprob: -8.529967308044434
    4. ',' → logprob: -11.904967308044434
    5. '%' → logprob: -12.404967308044434
    6. ' ):' → logprob: -12.904967308044434
    7. '):
' → logprob: -13.904967308044434
    8. ')%' → logprob: -13.904967308044434
    9. '=' → logprob: -14.779967308044434
    10. '),' → logprob: -15.029967308044434

Token 24: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25874897837638855
    2. '   ' → logprob: -1.508749008178711
    3. ' :' → logprob: -5.633749008178711
    4. ':
' → logprob: -6.508749008178711
    5. ' ' → logprob: -7.633749008178711
    6. ':return' → logprob: -8.383749008178711
    7. '):' → logprob: -8.633749008178711
    8. ' return' → logprob: -8.758749008178711
    9. '    ' → logprob: -9.383749008178711
    10. '():' → logprob: -9.758749008178711

Token 25: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07266603410243988
    2. ' return' → logprob: -2.9476659297943115
    3. 'return' → logprob: -4.197666168212891
    4. '    ' → logprob: -7.072666168212891
    5. '```' → logprob: -7.697666168212891
    6. ' ' → logprob: -7.822666168212891
    7. 'r' → logprob: -8.82266616821289
    8. 'x' → logprob: -9.82266616821289
    9. ':return' → logprob: -9.94766616821289
    10. ':' → logprob: -10.07266616821289

Token 26: ' Calcul' (ID: 57243)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23805581033229828
    2. '   ' → logprob: -1.9880558252334595
    3. 'return' → logprob: -2.61305570602417
    4. ' if' → logprob: -7.11305570602417
    5. '    ' → logprob: -7.86305570602417
    6. '```' → logprob: -9.238056182861328
    7. ' ' → logprob: -9.738056182861328
    8. 'if' → logprob: -9.988056182861328
    9. ' ' → logprob: -10.113056182861328
    10. '   ' → logprob: -10.613056182861328

Token 27: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8932721614837646
    2. ' =' → logprob: -1.2682721614837646
    3. 'er' → logprob: -2.1432721614837646
    4. '=' → logprob: -2.3932721614837646
    5. ' %' → logprob: -2.8932721614837646
    6. 'ateur' → logprob: -4.643272399902344
    7. '%' → logprob: -4.768272399902344
    8. ' ' → logprob: -5.268272399902344
    9. 'ation' → logprob: -5.393272399902344
    10. '    ' → logprob: -5.893272399902344

Token 28: ' reste' (ID: 26769)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11862622201442719
    2. ' ' → logprob: -2.368626117706299
    3. 'x' → logprob: -4.243626117706299
    4. '10' → logprob: -6.493626117706299
    5. '   ' → logprob: -7.868626117706299
    6. ' résultat' → logprob: -8.493626594543457
    7. ' retour' → logprob: -8.743626594543457
    8. ' modulo' → logprob: -8.806126594543457
    9. ' return' → logprob: -8.868626594543457
    10. ' %' → logprob: -9.118626594543457

Token 29: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3085935413837433
    2. '   ' → logprob: -2.433593511581421
    3. ' ' → logprob: -2.683593511581421
    4. ' x' → logprob: -3.183593511581421
    5. '    ' → logprob: -4.05859375
    6. ')' → logprob: -4.30859375
    7. ' (' → logprob: -5.05859375
    8. '(x' → logprob: -5.18359375
    9. ' %' → logprob: -5.43359375
    10. ',' → logprob: -5.80859375

Token 30: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3205350637435913
    2. ' la' → logprob: -1.9455350637435913
    3. ' ' → logprob: -2.320535182952881
    4. 'x' → logprob: -3.570535182952881
    5. '10' → logprob: -6.070535182952881
    6. 'division' → logprob: -7.195535182952881
    7. ' dix' → logprob: -7.695535182952881
    8. ' division' → logprob: -7.820535182952881
    9. 'div' → logprob: -8.070534706115723
    10. ' l' → logprob: -8.195534706115723

Token 31: ' division' (ID: 21629)
  Prédit: ' division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' division' → logprob: -0.04144636169075966
    2. 'division' → logprob: -3.2914464473724365
    3. 'div' → logprob: -6.041446208953857
    4. ' div' → logprob: -8.291446685791016
    5. 'x' → logprob: -8.416446685791016
    6. ' ' → logprob: -8.541446685791016
    7. ' x' → logprob: -9.291446685791016
    8. '10' → logprob: -9.916446685791016
    9. '   ' → logprob: -10.041446685791016
    10. ' multiplication' → logprob: -10.041446685791016

Token 32: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08629153668880463
    2. ' ' → logprob: -2.961291551589966
    3. '   ' → logprob: -4.586291313171387
    4. ' x' → logprob: -4.836291313171387
    5. 'de' → logprob: -6.461291313171387
    6. 'eu' → logprob: -6.586291313171387
    7. 'x' → logprob: -6.711291313171387
    8. ')' → logprob: -6.836291313171387
    9. 'e' → logprob: -6.836291313171387
    10. '%' → logprob: -7.086291313171387

Token 33: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07380813360214233
    2. 'x' → logprob: -2.698808193206787
    3. ' ' → logprob: -5.823808193206787
    4. '10' → logprob: -7.198808193206787
    5. '   ' → logprob: -9.573807716369629
    6. ' dix' → logprob: -10.198807716369629
    7. '```' → logprob: -11.573807716369629
    8. ' ' → logprob: -11.823807716369629
    9. '	x' → logprob: -12.198807716369629
    10. ' la' → logprob: -12.198807716369629

Token 34: ' par' (ID: 686)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8874011635780334
    2. ' %' → logprob: -0.8874011635780334
    3. ' par' → logprob: -2.2624011039733887
    4. ' ' → logprob: -3.0124011039733887
    5. '   ' → logprob: -5.012401103973389
    6. '  ' → logprob: -5.637401103973389
    7. 'par' → logprob: -5.762401103973389
    8. '10' → logprob: -6.012401103973389
    9. ' de' → logprob: -6.512401103973389
    10. ')' → logprob: -7.012401103973389

Token 35: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04869024083018303
    2. '10' → logprob: -3.0486903190612793
    3. ' ' → logprob: -9.548689842224121
    4. 'd' → logprob: -12.173689842224121
    5. ' dix' → logprob: -12.423689842224121
    6. '100' → logprob: -12.673689842224121
    7. ' ' → logprob: -12.798689842224121
    8. '```' → logprob: -12.798689842224121
    9. '<|end|>' → logprob: -13.048689842224121
    10. '‌' → logprob: -13.173689842224121

Token 36: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011054190807044506
    2. ' ' → logprob: -4.511054039001465
    3. '1' → logprob: -12.761054039001465
    4. '```' → logprob: -13.636054039001465
    5. ' ' → logprob: -14.386054039001465
    6. '`' → logprob: -14.636054039001465
    7. '100' → logprob: -15.511054039001465
    8. '​' → logprob: -16.26105499267578
    9. '۱۰' → logprob: -16.32355499267578
    10. 'ten' → logprob: -16.32355499267578

Token 37: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02607187256217003
    2. ':' → logprob: -4.401072025299072
    3. ' return' → logprob: -5.276072025299072
    4. ' ' → logprob: -5.901072025299072
    5. ' :' → logprob: -6.276072025299072
    6. '    ' → logprob: -6.776072025299072
    7. 'return' → logprob: -7.651072025299072
    8. ':return' → logprob: -7.901072025299072
    9. '    
' → logprob: -8.026071548461914
    10. '  ' → logprob: -8.651071548461914

Token 38: ' obtenir' (ID: 54423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4489600360393524
    2. ' return' → logprob: -1.1989600658416748
    3. '   ' → logprob: -3.698960065841675
    4. ' )' → logprob: -4.948959827423096
    5. 'return' → logprob: -5.323959827423096
    6. '  ' → logprob: -5.573959827423096
    7. ')' → logprob: -5.573959827423096
    8. ' retourner' → logprob: -5.698959827423096
    9. ' x' → logprob: -5.823959827423096
    10. 'eturn' → logprob: -6.073959827423096

Token 39: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1753297746181488
    2. '10' → logprob: -2.0503296852111816
    3. ' x' → logprob: -4.800329685211182
    4. ' la' → logprob: -4.925329685211182
    5. '   ' → logprob: -5.675329685211182
    6. ' l' → logprob: -5.925329685211182
    7. '  ' → logprob: -6.175329685211182
    8. '0' → logprob: -6.425329685211182
    9. '1' → logprob: -6.550329685211182
    10. ' le' → logprob: -7.050329685211182

Token 40: ' chiffre' (ID: 107420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9450053572654724
    2. ' dernier' → logprob: -1.3200054168701172
    3. ' reste' → logprob: -1.6950054168701172
    4. ' modulo' → logprob: -3.445005416870117
    5. '   ' → logprob: -3.695005416870117
    6. ' module' → logprob: -4.070005416870117
    7. ' chiffre' → logprob: -4.195005416870117
    8. ' résultat' → logprob: -4.445005416870117
    9. ' mod' → logprob: -4.820005416870117
    10. '  ' → logprob: -5.070005416870117

Token 41: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9398082494735718
    2. ' ' → logprob: -1.1898082494735718
    3. '_' → logprob: -2.0648083686828613
    4. 's' → logprob: -2.9398083686828613
    5. 'u' → logprob: -4.064808368682861
    6. '  ' → logprob: -4.064808368682861
    7. ' modulo' → logprob: -4.189808368682861
    8. ' )' → logprob: -4.564808368682861
    9. 'mod' → logprob: -5.189808368682861
    10. ' x' → logprob: -5.189808368682861

Token 42: ' unités' (ID: 176121)
  Prédit: ' unités'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unités' → logprob: -0.13839787244796753
    2. ' unit' → logprob: -2.7633979320526123
    3. ' ' → logprob: -3.6383979320526123
    4. 'unit' → logprob: -4.138397693634033
    5. ' unité' → logprob: -4.138397693634033
    6. ' units' → logprob: -5.638397693634033
    7. 'un' → logprob: -6.263397693634033
    8. 'units' → logprob: -7.138397693634033
    9. ' un' → logprob: -7.888397693634033
    10. ' unidades' → logprob: -9.013398170471191

Token 43: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009638864547014236
    2. ' ' → logprob: -6.009638786315918
    3. ' return' → logprob: -6.009638786315918
    4. ':' → logprob: -6.759638786315918
    5. '    ' → logprob: -7.009638786315918
    6. ')' → logprob: -7.384638786315918
    7. 'return' → logprob: -7.634638786315918
    8. '  ' → logprob: -8.009638786315918
    9. ' :' → logprob: -8.134638786315918
    10. '    
' → logprob: -8.634638786315918

Token 44: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.23454807698726654
    2. ' ' → logprob: -1.7345480918884277
    3. 'x' → logprob: -3.7345480918884277
    4. ' l' → logprob: -4.984548091888428
    5. ' la' → logprob: -7.484548091888428
    6. '  ' → logprob: -7.859548091888428
    7. 'l' → logprob: -7.859548091888428
    8. ' '' → logprob: -8.98454761505127
    9. '1' → logprob: -10.04704761505127
    10. 'a' → logprob: -10.10954761505127

Token 45: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005493664648383856
    2. '    
' → logprob: -6.130493640899658
    3. '\n' → logprob: -6.255493640899658
    4. '    ' → logprob: -8.255494117736816
    5. '
' → logprob: -8.755494117736816
    6. ' return' → logprob: -9.130494117736816
    7. ' ' → logprob: -9.130494117736816
    8. '\' → logprob: -9.380494117736816
    9. '   
' → logprob: -9.380494117736816
    10. ':' → logprob: -9.505494117736816

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001415473292581737
    2. ':' → logprob: -8.126415252685547
    3. ' return' → logprob: -8.126415252685547
    4. '    ' → logprob: -8.126415252685547
    5. ' ' → logprob: -8.376415252685547
    6. 'return' → logprob: -9.376415252685547
    7. ')' → logprob: -9.626415252685547
    8. ':return' → logprob: -10.376415252685547
    9. ' :' → logprob: -10.501415252685547
    10. '  ' → logprob: -10.626415252685547

Token 47: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07366917282342911
    2. 'return' → logprob: -3.573669195175171
    3. ' return' → logprob: -3.573669195175171
    4. 'r' → logprob: -5.198668956756592
    5. '    ' → logprob: -5.448668956756592
    6. ' ' → logprob: -6.323668956756592
    7. '```' → logprob: -7.948668956756592
    8. ' )' → logprob: -8.19866943359375
    9. '    
' → logprob: -8.32366943359375
    10. ':' → logprob: -8.32366943359375

Token 48: ' Si' (ID: 7832)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.565177321434021
    2. '   ' → logprob: -1.190177321434021
    3. 'return' → logprob: -2.0651774406433105
    4. ' ' → logprob: -8.315176963806152
    5. '    ' → logprob: -8.315176963806152
    6. '```' → logprob: -9.815176963806152
    7. ' ```' → logprob: -10.440176963806152
    8. 'r' → logprob: -10.690176963806152
    9. '	return' → logprob: -10.815176963806152
    10. 'eturn' → logprob: -10.815176963806152

Token 49: ' ce' (ID: 2357)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.006433275993913412
    2. 'x' → logprob: -5.131433486938477
    3. ' le' → logprob: -8.631433486938477
    4. ' ' → logprob: -8.756433486938477
    5. ' isinstance' → logprob: -10.131433486938477
    6. ' ' → logprob: -10.381433486938477
    7. '  ' → logprob: -10.756433486938477
    8. ' (' → logprob: -11.256433486938477
    9. '   ' → logprob: -11.256433486938477
    10. 'le' → logprob: -11.631433486938477

Token 50: ' reste' (ID: 26769)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.35659003257751465
    2. 'st' → logprob: -2.7315900325775146
    3. 'n' → logprob: -2.8565900325775146
    4. ' n' → logprob: -2.8565900325775146
    5. ' x' → logprob: -3.8565900325775146
    6. 's' → logprob: -3.9815900325775146
    7. 't' → logprob: -4.231590270996094
    8. 'est' → logprob: -4.356590270996094
    9. 'u' → logprob: -4.981590270996094
    10. '#' → logprob: -5.356590270996094

Token 51: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3357548713684082
    2. ' ==' → logprob: -1.4607548713684082
    3. '==' → logprob: -3.710754871368408
    4. ' ' → logprob: -4.460754871368408
    5. 'est' → logprob: -4.960754871368408
    6. ' %' → logprob: -5.835754871368408
    7. ' is' → logprob: -6.460754871368408
    8. '%' → logprob: -6.710754871368408
    9. ' vaut' → logprob: -7.085754871368408
    10. 's' → logprob: -7.585754871368408

Token 52: ' égal' (ID: 15059)
  Prédit: ' égal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.09789130836725235
    2. '0' → logprob: -3.597891330718994
    3. ' différent' → logprob: -3.847891330718994
    4. ' ' → logprob: -4.222891330718994
    5. ' nul' → logprob: -4.722891330718994
    6. ' supérieur' → logprob: -4.972891330718994
    7. ' zéro' → logprob: -5.097891330718994
    8. ' ég' → logprob: -6.597891330718994
    9. ' divisible' → logprob: -6.597891330718994
    10. ' inférieur' → logprob: -7.097891330718994

Token 53: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.014647964388132095
    2. ' ' → logprob: -4.639647960662842
    3. 'à' → logprob: -5.764647960662842
    4. ' a' → logprob: -7.264647960662842
    5. '0' → logprob: -8.0146484375
    6. ' to' → logprob: -8.3896484375
    7. 'to' → logprob: -9.2646484375
    8. '  ' → logprob: -9.5146484375
    9. 'a' → logprob: -9.8896484375
    10. 's' → logprob: -10.1396484375

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012556977570056915
    2. '0' → logprob: -4.387557029724121
    3. '1' → logprob: -11.012557029724121
    4. '10' → logprob: -11.262557029724121
    5. ' ' → logprob: -12.387557029724121
    6. '5' → logprob: -12.887557029724121
    7. '  ' → logprob: -13.075057029724121
    8. ' x' → logprob: -13.637557029724121
    9. '```' → logprob: -13.637557029724121
    10. '9' → logprob: -13.700057029724121

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08056677132844925
    2. ' ' → logprob: -2.580566883087158
    3. '10' → logprob: -6.955566883087158
    4. '1' → logprob: -7.955566883087158
    5. '5' → logprob: -8.70556640625
    6. '9' → logprob: -9.20556640625
    7. '```' → logprob: -10.76806640625
    8. 'x' → logprob: -10.83056640625
    9. ' x' → logprob: -11.76806640625
    10. '(' → logprob: -12.14306640625

Token 56: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13703754544258118
    2. ' :' → logprob: -2.512037515640259
    3. ',' → logprob: -3.137037515640259
    4. '   ' → logprob: -6.262037754058838
    5. ' ,' → logprob: -7.637037754058838
    6. ' :
' → logprob: -7.762037754058838
    7. ':
' → logprob: -8.01203727722168
    8. ':return' → logprob: -8.63703727722168
    9. '    ' → logprob: -8.76203727722168
    10. '       ' → logprob: -10.63703727722168

Token 57: ' alors' (ID: 17971)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.11571775376796722
    2. '     
' → logprob: -2.740717649459839
    3. '    
' → logprob: -4.240717887878418
    4. '   ' → logprob: -4.365717887878418
    5. ' ' → logprob: -4.865717887878418
    6. ' return' → logprob: -5.365717887878418
    7. ' 
' → logprob: -6.490717887878418
    8. '       ' → logprob: -7.365717887878418
    9. '  ' → logprob: -7.365717887878418
    10. '     ' → logprob: -7.740717887878418

Token 58: ' on' (ID: 402)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7009334564208984
    2. '   ' → logprob: -1.0759334564208984
    3. ' return' → logprob: -2.2009334564208984
    4. '    
' → logprob: -4.075933456420898
    5. '     
' → logprob: -4.700933456420898
    6. ' ' → logprob: -4.950933456420898
    7. 'return' → logprob: -5.075933456420898
    8. ' ' → logprob: -6.325933456420898
    9. ' 
' → logprob: -6.700933456420898
    10. '   ' → logprob: -6.700933456420898

Token 59: ' retourne' (ID: 178818)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5745819807052612
    2. ' retourne' → logprob: -1.0745819807052612
    3. '   ' → logprob: -3.449582099914551
    4. ' ' → logprob: -4.074582099914551
    5. 'return' → logprob: -4.199582099914551
    6. ' ' → logprob: -4.449582099914551
    7. ' retourner' → logprob: -4.699582099914551
    8. '_return' → logprob: -6.574582099914551
    9. '_' → logprob: -6.574582099914551
    10. ' ren' → logprob: -6.949582099914551

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13771554827690125
    2. '10' → logprob: -2.5127155780792236
    3. '1' → logprob: -4.0127153396606445
    4. ' x' → logprob: -4.2627153396606445
    5. 'x' → logprob: -4.3877153396606445
    6. '0' → logprob: -6.7627153396606445
    7. '   ' → logprob: -7.8877153396606445
    8. ' ' → logprob: -8.262715339660645
    9. '```' → logprob: -8.512715339660645
    10. ' True' → logprob: -8.512715339660645

Token 61: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8685115575790405
    2. 'x' → logprob: -1.1185115575790405
    3. '0' → logprob: -2.11851167678833
    4. '1' → logprob: -2.36851167678833
    5. ' ' → logprob: -3.49351167678833
    6. ' x' → logprob: -4.86851167678833
    7. '   ' → logprob: -8.368511199951172
    8. '```' → logprob: -8.368511199951172
    9. 'le' → logprob: -8.493511199951172
    10. ''' → logprob: -8.618511199951172

Token 62: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060863323509693146
    2. ':' → logprob: -3.4358632564544678
    3. '
' → logprob: -3.8108632564544678
    4. '    
' → logprob: -6.185863494873047
    5. '\n' → logprob: -6.685863494873047
    6. '```' → logprob: -7.810863494873047
    7. '   
' → logprob: -8.560863494873047
    8. ' :' → logprob: -8.685863494873047
    9. ':
' → logprob: -9.185863494873047
    10. ' 
' → logprob: -9.310863494873047

Token 63: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011645073536783457
    2. '    
' → logprob: -8.126164436340332
    3. ' else' → logprob: -8.501164436340332
    4. ' ' → logprob: -9.126164436340332
    5. 'return' → logprob: -9.126164436340332
    6. '    ' → logprob: -9.501164436340332
    7. '  ' → logprob: -9.501164436340332
    8. ' return' → logprob: -9.501164436340332
    9. ' sinon' → logprob: -10.001164436340332
    10. 'else' → logprob: -10.376164436340332

Token 64: ' x' (ID: 1215)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.2729295492172241
    2. ' le' → logprob: -1.2729295492172241
    3. ' x' → logprob: -1.2729295492172241
    4. 'x' → logprob: -2.1479296684265137
    5. 'le' → logprob: -3.6479296684265137
    6. ' the' → logprob: -5.647929668426514
    7. ' ' → logprob: -5.897929668426514
    8. ' la' → logprob: -6.022929668426514
    9. '10' → logprob: -6.897929668426514
    10. ' cela' → logprob: -7.022929668426514

Token 65: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07939565926790237
    2. '%' → logprob: -2.5793957710266113
    3. '<|end|>' → logprob: -8.579395294189453
    4. ' ' → logprob: -8.829395294189453
    5. 's' → logprob: -10.454395294189453
    6. ' mod' → logprob: -11.079395294189453
    7. 'mod' → logprob: -11.204395294189453
    8. ' )' → logprob: -11.204395294189453
    9. ' ' → logprob: -11.454395294189453
    10. ' a' → logprob: -11.704395294189453

Token 66: ' déjà' (ID: 21229)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.07876672595739365
    2. ' un' → logprob: -2.8287668228149414
    3. ' multiple' → logprob: -5.453766822814941
    4. 'div' → logprob: -5.453766822814941
    5. 'un' → logprob: -5.453766822814941
    6. 'multiple' → logprob: -6.578766822814941
    7. ' une' → logprob: -7.578766822814941
    8. ' ' → logprob: -8.078766822814941
    9. '<|end|>' → logprob: -8.703766822814941
    10. 'multip' → logprob: -8.828766822814941

Token 67: ' un' (ID: 537)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.22925128042697906
    2. ' un' → logprob: -2.6042513847351074
    3. 'div' → logprob: -2.7292513847351074
    4. ' multiple' → logprob: -3.4792513847351074
    5. 'un' → logprob: -3.9792513847351074
    6. 'multiple' → logprob: -4.604251384735107
    7. '```' → logprob: -7.104251384735107
    8. ' a' → logprob: -7.229251384735107
    9. '   ' → logprob: -7.354251384735107
    10. '%' → logprob: -7.729251384735107

Token 68: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.23143546283245087
    2. 'multiple' → logprob: -1.6064354181289673
    3. 'ultiple' → logprob: -6.606435298919678
    4. 'multip' → logprob: -6.981435298919678
    5. '```' → logprob: -7.356435298919678
    6. ' ' → logprob: -7.606435298919678
    7. '_multiple' → logprob: -7.731435298919678
    8. 'nombre' → logprob: -7.856435298919678
    9. ' nombre' → logprob: -8.231435775756836
    10. 'ch' → logprob: -8.606435775756836

Token 69: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04611986130475998
    2. '   ' → logprob: -3.6711199283599854
    3. '    ' → logprob: -4.671119689941406
    4. ' of' → logprob: -5.671119689941406
    5. 'de' → logprob: -5.671119689941406
    6. ' ' → logprob: -6.671119689941406
    7. '  ' → logprob: -7.296119689941406
    8. '    
' → logprob: -8.296119689941406
    9. ' des' → logprob: -8.421119689941406
    10. '<|end|>' → logprob: -9.046119689941406

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.633842408657074
    2. '10' → logprob: -0.758842408657074
    3. 'd' → logprob: -7.133842468261719
    4. ' dix' → logprob: -7.883842468261719
    5. ' ' → logprob: -9.883842468261719
    6. '```' → logprob: -12.508842468261719
    7. ' diez' → logprob: -13.008842468261719
    8. '1' → logprob: -13.133842468261719
    9. 'l' → logprob: -13.758842468261719
    10. ' ten' → logprob: -14.383842468261719

Token 71: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0834863930940628
    2. ' ' → logprob: -2.583486318588257
    3. 'd' → logprob: -5.458486557006836
    4. ' dix' → logprob: -8.083486557006836
    5. '```' → logprob: -11.708486557006836
    6. ' diez' → logprob: -12.833486557006836
    7. ' ' → logprob: -13.083486557006836
    8. '  ' → logprob: -14.208486557006836
    9. ' d' → logprob: -14.333486557006836
    10. 'ten' → logprob: -14.583486557006836

Token 72: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016390221193432808
    2. '
' → logprob: -4.891390323638916
    3. '\n' → logprob: -5.141390323638916
    4. '    
' → logprob: -6.141390323638916
    5. '\' → logprob: -8.766389846801758
    6. '```' → logprob: -8.766389846801758
    7. '   
' → logprob: -9.016389846801758
    8. ':' → logprob: -9.516389846801758
    9. '    ' → logprob: -9.641389846801758
    10. ' 
' → logprob: -9.891389846801758

Token 73: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0988205671310425
    2. ' on' → logprob: -1.3488205671310425
    3. ' x' → logprob: -2.598820686340332
    4. 'on' → logprob: -2.723820686340332
    5. ' return' → logprob: -2.723820686340332
    6. 'x' → logprob: -3.723820686340332
    7. '```' → logprob: -3.848820686340332
    8. '10' → logprob: -3.973820686340332
    9. 'return' → logprob: -4.223820686340332
    10. 'le' → logprob: -4.848820686340332

Token 74: ' n' (ID: 297)
  Prédit: ' faut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.22736530005931854
    2. 'f' → logprob: -1.852365255355835
    3. ' faudrait' → logprob: -4.102365493774414
    4. 's' → logprob: -4.477365493774414
    5. ' faudra' → logprob: -5.227365493774414
    6. ' est' → logprob: -6.102365493774414
    7. 'n' → logprob: -6.227365493774414
    8. '   ' → logprob: -6.227365493774414
    9. ' n' → logprob: -6.602365493774414
    10. ' doit' → logprob: -6.852365493774414

Token 75: ''est' (ID: 6616)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2278052717447281
    2. ' faut' → logprob: -2.3528053760528564
    3. 's' → logprob: -3.1028053760528564
    4. 'n' → logprob: -3.9778053760528564
    5. 'est' → logprob: -4.977805137634277
    6. ' f' → logprob: -5.102805137634277
    7. ''' → logprob: -5.227805137634277
    8. ' a' → logprob: -5.602805137634277
    9. 'a' → logprob: -5.852805137634277
    10. ''s' → logprob: -5.977805137634277

Token 76: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.18054834008216858
    2. 'pas' → logprob: -1.8055483102798462
    3. '<|end|>' → logprob: -8.305548667907715
    4. 's' → logprob: -8.680548667907715
    5. ' donc' → logprob: -8.930548667907715
    6. '_pas' → logprob: -9.180548667907715
    7. ' rien' → logprob: -11.180548667907715
    8. ' plus' → logprob: -11.305548667907715
    9. 'plus' → logprob: -11.305548667907715
    10. ' jamais' → logprob: -11.680548667907715

Token 77: ' nécessaire' (ID: 43098)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.4519903063774109
    2. ' nécessaire' → logprob: -2.0769903659820557
    3. ' pas' → logprob: -3.0769903659820557
    4. ' possible' → logprob: -3.5769903659820557
    5. '0' → logprob: -3.5769903659820557
    6. 'possible' → logprob: -3.8269903659820557
    7. ' préférable' → logprob: -4.451990127563477
    8. 'div' → logprob: -4.451990127563477
    9. ' souhait' → logprob: -4.576990127563477
    10. 'pas' → logprob: -4.701990127563477

Token 78: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9527018070220947
    2. ' de' → logprob: -1.0777018070220947
    3. ' d' → logprob: -1.5777018070220947
    4. '    ' → logprob: -3.7027018070220947
    5. 'd' → logprob: -3.8277018070220947
    6. '  ' → logprob: -4.577701568603516
    7. 'de' → logprob: -5.202701568603516
    8. ' ' → logprob: -5.952701568603516
    9. ' to' → logprob: -7.452701568603516
    10. 'def' → logprob: -7.577701568603516

Token 79: ''aj' (ID: 116735)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14891508221626282
    2. ''aj' → logprob: -3.1489150524139404
    3. ''aller' → logprob: -3.2739150524139404
    4. ''effect' → logprob: -4.5239152908325195
    5. ''é' → logprob: -4.7739152908325195
    6. ''' → logprob: -4.7739152908325195
    7. ' e' → logprob: -4.8989152908325195
    8. 'é' → logprob: -5.6489152908325195
    9. ''avoir' → logprob: -6.1489152908325195
    10. 'a' → logprob: -6.1489152908325195

Token 80: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.04397696629166603
    2. 'uster' → logprob: -3.1689770221710205
    3. '```' → logprob: -8.668976783752441
    4. 'ou' → logprob: -9.043976783752441
    5. '   ' → logprob: -9.418976783752441
    6. '#' → logprob: -9.418976783752441
    7. '_outer' → logprob: -9.918976783752441
    8. '>' → logprob: -10.043976783752441
    9. '

' → logprob: -10.043976783752441
    10. 'oute' → logprob: -10.043976783752441

Token 81: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43008771538734436
    2. '1' → logprob: -1.305087685585022
    3. '10' → logprob: -2.6800878047943115
    4. ' rien' → logprob: -5.680087566375732
    5. '   ' → logprob: -6.180087566375732
    6. ' quoi' → logprob: -6.430087566375732
    7. '    ' → logprob: -7.430087566375732
    8. '  ' → logprob: -7.680087566375732
    9. ' a' → logprob: -7.930087566375732
    10. 'r' → logprob: -8.43008804321289

Token 82: ' unités' (ID: 176121)
  Prédit: ' unités'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unités' → logprob: -0.15309573709964752
    2. 'unit' → logprob: -3.1530957221984863
    3. ' unité' → logprob: -3.6530957221984863
    4. ' unit' → logprob: -3.6530957221984863
    5. '0' → logprob: -4.403095722198486
    6. ' ' → logprob: -4.403095722198486
    7. ' choses' → logprob: -5.403095722198486
    8. 'un' → logprob: -5.528095722198486
    9. '10' → logprob: -5.653095722198486
    10. '1' → logprob: -5.903095722198486

Token 83: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051542382687330246
    2. '
' → logprob: -3.176542282104492
    3. '    
' → logprob: -5.676542282104492
    4. '\n' → logprob: -6.176542282104492
    5. ' 
' → logprob: -6.926542282104492
    6. '```' → logprob: -7.676542282104492
    7. '\' → logprob: -7.801542282104492
    8. '   
' → logprob: -8.176542282104492
    9. '    ' → logprob: -8.426542282104492
    10. ':' → logprob: -8.801542282104492

Token 84: ' atteindre' (ID: 95734)
  Prédit: ' atteindre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' atteindre' → logprob: -0.6841952800750732
    2. ' obtenir' → logprob: -1.3091952800750732
    3. ' que' → logprob: -2.6841952800750732
    4. 'ob' → logprob: -4.059195518493652
    5. ' le' → logprob: -4.059195518493652
    6. ' arriver' → logprob: -4.684195518493652
    7. 'pass' → logprob: -4.684195518493652
    8. ' rendre' → logprob: -4.809195518493652
    9. ' avoir' → logprob: -4.934195518493652
    10. ' y' → logprob: -4.934195518493652

Token 85: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07270194590091705
    2. '10' → logprob: -2.697701930999756
    3. ' le' → logprob: -6.447701930999756
    4. 'le' → logprob: -7.697701930999756
    5. ' la' → logprob: -8.072702407836914
    6. '1' → logprob: -9.322702407836914
    7. ' ce' → logprob: -9.822702407836914
    8. '```' → logprob: -9.947702407836914
    9. ' ' → logprob: -10.072702407836914
    10. ' une' → logprob: -10.197702407836914

Token 86: ' prochain' (ID: 52413)
  Prédit: ' multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -1.0501317977905273
    2. 'multiple' → logprob: -1.0501317977905273
    3. ' prochain' → logprob: -2.0501317977905273
    4. 'pro' → logprob: -2.6751317977905273
    5. '10' → logprob: -3.3001317977905273
    6. ' suivant' → logprob: -3.5501317977905273
    7. ' ' → logprob: -5.050131797790527
    8. 'su' → logprob: -5.175131797790527
    9. 'd' → logprob: -5.300131797790527
    10. ' dix' → logprob: -5.425131797790527

Token 87: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.26859915256500244
    2. 'multiple' → logprob: -2.018599033355713
    3. '10' → logprob: -2.518599033355713
    4. 'multip' → logprob: -5.018599033355713
    5. ' ' → logprob: -5.143599033355713
    6. '0' → logprob: -6.268599033355713
    7. '_multiple' → logprob: -6.393599033355713
    8. 'ultiple' → logprob: -6.518599033355713
    9. '<|end|>' → logprob: -6.768599033355713
    10. '```' → logprob: -7.143599033355713

Token 88: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012270280160009861
    2. '10' → logprob: -5.137270450592041
    3. '    
' → logprob: -6.387270450592041
    4. '  ' → logprob: -6.887270450592041
    5. '    ' → logprob: -7.137270450592041
    6. ' ' → logprob: -7.387270450592041
    7. ',' → logprob: -7.762270450592041
    8. '```' → logprob: -8.512269973754883
    9. '
' → logprob: -8.637269973754883
    10. '0' → logprob: -8.762269973754883

Token 89: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28559648990631104
    2. '10' → logprob: -1.410596489906311
    3. ' dix' → logprob: -5.5355963706970215
    4. 'd' → logprob: -8.03559684753418
    5. ' ' → logprob: -9.91059684753418
    6. '1' → logprob: -10.41059684753418
    7. '```' → logprob: -10.66059684753418
    8. 'l' → logprob: -10.91059684753418
    9. '100' → logprob: -12.34809684753418
    10. ' x' → logprob: -12.41059684753418

Token 90: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01164740789681673
    2. ' ' → logprob: -5.0116472244262695
    3. 'd' → logprob: -5.5116472244262695
    4. ' dix' → logprob: -7.2616472244262695
    5. '1' → logprob: -9.01164722442627
    6. '```' → logprob: -10.51164722442627
    7. ' ' → logprob: -12.01164722442627
    8. '0' → logprob: -12.51164722442627
    9. '１０' → logprob: -12.94914722442627
    10. 'l' → logprob: -13.44914722442627

Token 91: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31032559275627136
    2. '
' → logprob: -1.5603256225585938
    3. '\n' → logprob: -3.3103256225585938
    4. '    
' → logprob: -4.810325622558594
    5. ':' → logprob: -5.560325622558594
    6. ' 
' → logprob: -6.060325622558594
    7. '\' → logprob: -6.560325622558594
    8. '```' → logprob: -6.810325622558594
    9. '   
' → logprob: -7.185325622558594
    10. '    ' → logprob: -7.310325622558594

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04697813466191292
    2. '
' → logprob: -3.171978235244751
    3. '    
' → logprob: -6.671977996826172
    4. '```' → logprob: -7.171977996826172
    5. '\n' → logprob: -7.671977996826172
    6. '    ' → logprob: -7.921977996826172
    7. ' 
' → logprob: -8.171977996826172
    8. '\' → logprob: -9.171977996826172
    9. ':' → logprob: -9.171977996826172
    10. 'n' → logprob: -9.671977996826172

Token 93: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003879173193126917
    2. 'r' → logprob: -7.128879070281982
    3. '    ' → logprob: -7.253879070281982
    4. ' return' → logprob: -7.503879070281982
    5. 'return' → logprob: -7.628879070281982
    6. '
' → logprob: -8.50387954711914
    7. ' if' → logprob: -8.62887954711914
    8. '```' → logprob: -8.75387954711914
    9. '    
' → logprob: -9.00387954711914
    10. 'if' → logprob: -9.12887954711914

Token 94: ' Sinon' (ID: 154924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03332556039094925
    2. ' remainder' → logprob: -4.033325672149658
    3. ' if' → logprob: -5.908325672149658
    4. ' r' → logprob: -6.158325672149658
    5. ' rest' → logprob: -6.408325672149658
    6. 'rest' → logprob: -6.408325672149658
    7. 'r' → logprob: -6.408325672149658
    8. ' return' → logprob: -6.658325672149658
    9. 're' → logprob: -6.908325672149658
    10. 'reste' → logprob: -7.033325672149658

Token 95: ',' (ID: 11)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.28518128395080566
    2. '   ' → logprob: -1.6601812839508057
    3. ' return' → logprob: -4.160181045532227
    4. '    
' → logprob: -4.410181045532227
    5. '     
' → logprob: -4.535181045532227
    6. '
' → logprob: -5.285181045532227
    7. 'return' → logprob: -5.785181045532227
    8. '       ' → logprob: -5.910181045532227
    9. ' 
' → logprob: -5.910181045532227
    10. ',' → logprob: -6.785181045532227

Token 96: ' on' (ID: 402)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.12195020169019699
    2. ' return' → logprob: -2.371950149536133
    3. '   ' → logprob: -4.621950149536133
    4. 'return' → logprob: -4.996950149536133
    5. '    ' → logprob: -6.621950149536133
    6. '     
' → logprob: -7.371950149536133
    7. '    ' → logprob: -7.371950149536133
    8. '   ' → logprob: -7.496950149536133
    9. ' ' → logprob: -7.621950149536133
    10. '     ' → logprob: -8.121950149536133

Token 97: ' retourne' (ID: 178818)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33385854959487915
    2. ' return' → logprob: -1.7088584899902344
    3. ' retourne' → logprob: -2.9588584899902344
    4. 'return' → logprob: -3.0838584899902344
    5. '    ' → logprob: -5.833858489990234
    6. '  ' → logprob: -6.958858489990234
    7. ' retourner' → logprob: -8.083858489990234
    8. ' retour' → logprob: -8.958858489990234
    9. ' ' → logprob: -9.083858489990234
    10. '       ' → logprob: -9.583858489990234

Token 98: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03575766459107399
    2. '10' → logprob: -3.6607577800750732
    3. ' (' → logprob: -4.785757541656494
    4. '(' → logprob: -8.035758018493652
    5. ' ' → logprob: -8.160758018493652
    6. '   ' → logprob: -8.910758018493652
    7. '```' → logprob: -9.785758018493652
    8. ' x' → logprob: -10.160758018493652
    9. 's' → logprob: -10.660758018493652
    10. '  ' → logprob: -10.660758018493652

Token 99: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.1656978577375412
    2. ' nombre' → logprob: -3.4156978130340576
    3. '   ' → logprob: -3.9156978130340576
    4. 're' → logprob: -4.415698051452637
    5. 'reste' → logprob: -4.540698051452637
    6. ' résultat' → logprob: -4.665698051452637
    7. '10' → logprob: -4.790698051452637
    8. ' ' → logprob: -4.790698051452637
    9. '```' → logprob: -5.040698051452637
    10. ' code' → logprob: -5.165698051452637

Token 100: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10240849107503891
    2. ' :' → logprob: -3.4774084091186523
    3. '    ' → logprob: -3.7274084091186523
    4. ' ' → logprob: -4.227408409118652
    5. ':' → logprob: -4.477408409118652
    6. '_' → logprob: -5.727408409118652
    7. ')' → logprob: -5.852408409118652
    8. ' :
' → logprob: -6.602408409118652
    9. ' =' → logprob: -7.227408409118652
    10. 's' → logprob: -7.352408409118652

Token 101: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04283851757645607
    2. '    ' → logprob: -3.9178385734558105
    3. 'return' → logprob: -5.4178385734558105
    4. ' return' → logprob: -5.5428385734558105
    5. ' ' → logprob: -5.7928385734558105
    6. ':' → logprob: -6.0428385734558105
    7. ':return' → logprob: -6.1678385734558105
    8. ' x' → logprob: -6.5428385734558105
    9. '       ' → logprob: -6.7928385734558105
    10. '  ' → logprob: -7.0428385734558105

Token 102: ''est' (ID: 6616)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.03475508838891983
    2. 'e' → logprob: -3.659754991531372
    3. 'es' → logprob: -5.284755229949951
    4. 'ela' → logprob: -7.284755229949951
    5. '   ' → logprob: -7.784755229949951
    6. 'el' → logprob: -8.159754753112793
    7. 'omme' → logprob: -8.159754753112793
    8. 'ont' → logprob: -8.784754753112793
    9. ''est' → logprob: -8.909754753112793
    10. 'a' → logprob: -9.034754753112793

Token 103: '-à' (ID: 56297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9064083695411682
    2. ' ' → logprob: -1.4064083099365234
    3. '    ' → logprob: -2.0314083099365234
    4. 'x' → logprob: -2.5314083099365234
    5. '10' → logprob: -3.6564083099365234
    6. ' x' → logprob: -3.6564083099365234
    7. ' l' → logprob: -4.531408309936523
    8. '-à' → logprob: -4.531408309936523
    9. '  ' → logprob: -4.906408309936523
    10. 'l' → logprob: -5.031408309936523

Token 104: '-dire' (ID: 76064)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8268610239028931
    2. 'x' → logprob: -1.576861023902893
    3. ' ' → logprob: -1.826861023902893
    4. '0' → logprob: -2.7018609046936035
    5. 'l' → logprob: -3.3268609046936035
    6. '10' → logprob: -3.8268609046936035
    7. ' x' → logprob: -4.7018609046936035
    8. '    ' → logprob: -5.0768609046936035
    9. '  ' → logprob: -5.2018609046936035
    10. '       ' → logprob: -5.5768609046936035

Token 105: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7503727674484253
    2. ' x' → logprob: -1.3753727674484253
    3. '10' → logprob: -1.8753727674484253
    4. '   ' → logprob: -2.500372886657715
    5. 'x' → logprob: -3.500372886657715
    6. '    ' → logprob: -5.250372886657715
    7. ' ' → logprob: -6.750372886657715
    8. ' (' → logprob: -7.250372886657715
    9. '```' → logprob: -7.500372886657715
    10. '(' → logprob: -7.750372886657715

Token 106: ' chiffre' (ID: 107420)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1492056846618652
    2. '10' → logprob: -1.2742056846618652
    3. ' ' → logprob: -1.6492056846618652
    4. 'x' → logprob: -3.0242056846618652
    5. ' code' → logprob: -3.5242056846618652
    6. ' reste' → logprob: -3.5242056846618652
    7. ' modulo' → logprob: -3.5242056846618652
    8. ' nombre' → logprob: -3.8992056846618652
    9. '   ' → logprob: -4.649205684661865
    10. 's' → logprob: -5.524205684661865

Token 107: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4134880304336548
    2. ' des' → logprob: -1.7884880304336548
    3. '_des' → logprob: -2.5384879112243652
    4. '_' → logprob: -2.9134879112243652
    5. 'des' → logprob: -4.413487911224365
    6. '    ' → logprob: -5.038487911224365
    7. ' ' → logprob: -5.788487911224365
    8. ')' → logprob: -6.163487911224365
    9. '  ' → logprob: -6.288487911224365
    10. '_rest' → logprob: -6.413487911224365

Token 108: ' unités' (ID: 176121)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.210317924618721
    2. ' unités' → logprob: -1.7103179693222046
    3. ' unit' → logprob: -5.210318088531494
    4. 'units' → logprob: -5.960318088531494
    5. 'un' → logprob: -8.335317611694336
    6. 'd' → logprob: -8.460317611694336
    7. ' units' → logprob: -8.585317611694336
    8. ' unité' → logprob: -8.960317611694336
    9. ' unidades' → logprob: -11.585317611694336
    10. ' dizaines' → logprob: -11.960317611694336

Token 109: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004331845324486494
    2. ':' → logprob: -5.504332065582275
    3. ' return' → logprob: -10.004331588745117
    4. ':return' → logprob: -10.004331588745117
    5. ':
' → logprob: -10.129331588745117
    6. 'return' → logprob: -10.254331588745117
    7. ' ' → logprob: -10.629331588745117
    8. '    ' → logprob: -11.379331588745117
    9. '  ' → logprob: -11.629331588745117
    10. '```' → logprob: -12.129331588745117

Token 110: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03807706758379936
    2. 'x' → logprob: -3.2880771160125732
    3. ' l' → logprob: -11.788077354431152
    4. ' ' → logprob: -11.788077354431152
    5. ' ' → logprob: -12.288077354431152
    6. '10' → logprob: -12.413077354431152
    7. 'l' → logprob: -12.413077354431152
    8. ' la' → logprob: -12.913077354431152
    9. '	x' → logprob: -13.038077354431152
    10. '(x' → logprob: -13.538077354431152

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012441592989489436
    2. ':' → logprob: -6.876244068145752
    3. '
' → logprob: -10.00124454498291
    4. ' return' → logprob: -10.25124454498291
    5. ':return' → logprob: -10.25124454498291
    6. '```' → logprob: -11.12624454498291
    7. 'return' → logprob: -11.25124454498291
    8. ':
' → logprob: -11.50124454498291
    9. '    ' → logprob: -11.50124454498291
    10. '   ' → logprob: -11.62624454498291

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.718606891809031e-05
    2. ' return' → logprob: -11.250066757202148
    3. ':' → logprob: -11.500066757202148
    4. 'return' → logprob: -11.750066757202148
    5. '```' → logprob: -12.000066757202148
    6. '
' → logprob: -12.125066757202148
    7. '    
' → logprob: -12.250066757202148
    8. '   ' → logprob: -12.375066757202148
    9. ':return' → logprob: -12.500066757202148
    10. ' ' → logprob: -12.750066757202148

Token 113: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024093042593449354
    2. 'return' → logprob: -6.8774094581604
    3. ' return' → logprob: -7.0024094581604
    4. ' if' → logprob: -8.627408981323242
    5. 'if' → logprob: -9.252408981323242
    6. ' remainder' → logprob: -9.502408981323242
    7. '```' → logprob: -10.377408981323242
    8. 'rest' → logprob: -10.502408981323242
    9. 'r' → logprob: -11.002408981323242
    10. '  ' → logprob: -12.002408981323242

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234723091125488
    2. '=' → logprob: -0.8984723091125488
    3. 'er' → logprob: -8.64847183227539
    4. ':' → logprob: -9.52347183227539
    5. 'or' → logprob: -10.64847183227539
    6. '   ' → logprob: -10.77347183227539
    7. ' ' → logprob: -11.52347183227539
    8. ' ' → logprob: -12.02347183227539
    9. 'ar' → logprob: -12.14847183227539
    10. 'space' → logprob: -12.52347183227539

Token 115: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3869855999946594
    2. 'x' → logprob: -1.1369855403900146
    3. '10' → logprob: -9.511985778808594
    4. ' ' → logprob: -10.386985778808594
    5. '   ' → logprob: -11.761985778808594
    6. ' ' → logprob: -14.511985778808594
    7. '	x' → logprob: -14.511985778808594
    8. '(x' → logprob: -14.636985778808594
    9. '0' → logprob: -15.386985778808594
    10. '  ' → logprob: -16.261985778808594

Token 116: '10' (ID: 702)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002491118386387825
    2. ' x' → logprob: -6.002490997314453
    3. '10' → logprob: -11.127490997314453
    4. ' ' → logprob: -15.002490997314453
    5. '   ' → logprob: -15.252490997314453
    6. '(x' → logprob: -16.002490997314453
    7. '0' → logprob: -17.127490997314453
    8. '	x' → logprob: -18.127490997314453
    9. 'abs' → logprob: -19.002490997314453
    10. '%x' → logprob: -19.252490997314453

Token 117: ' if' (ID: 538)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5254073739051819
    2. ' if' → logprob: -1.150407314300537
    3. 'if' → logprob: -3.025407314300537
    4. '-' → logprob: -3.775407314300537
    5. ' %' → logprob: -4.150407314300537
    6. '%' → logprob: -5.525407314300537
    7. ' ' → logprob: -7.900407314300537
    8. 'x' → logprob: -8.775407791137695
    9. ' x' → logprob: -8.775407791137695
    10. '   ' → logprob: -9.400407791137695

Token 118: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.001354402513243258
    2. 'x' → logprob: -6.626354217529297
    3. ' ' → logprob: -10.876354217529297
    4. ' (' → logprob: -11.626354217529297
    5. '(x' → logprob: -14.876354217529297
    6. '	x' → logprob: -15.876354217529297
    7. ' ' → logprob: -16.501354217529297
    8. '(' → logprob: -18.001354217529297
    9. '  ' → logprob: -18.001354217529297
    10. '   ' → logprob: -18.751354217529297

Token 119: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023246875032782555
    2. ' x' → logprob: -3.7732467651367188
    3. '(x' → logprob: -14.398246765136719
    4. ' ' → logprob: -14.773246765136719
    5. '   ' → logprob: -15.773246765136719
    6. ')x' → logprob: -16.14824676513672
    7. ')' → logprob: -16.39824676513672
    8. '	x' → logprob: -17.14824676513672
    9. '10' → logprob: -17.64824676513672
    10. '  ' → logprob: -18.39824676513672

Token 120: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.018273791298270226
    2. '%' → logprob: -4.018273830413818
    3. ' ' → logprob: -9.01827335357666
    4. ' ' → logprob: -13.26827335357666
    5. '%x' → logprob: -14.89327335357666
    6. ')' → logprob: -15.26827335357666
    7. ' )' → logprob: -16.268274307250977
    8. ' %
' → logprob: -16.518274307250977
    9. ' %)' → logprob: -16.893274307250977
    10. '%i' → logprob: -17.143274307250977

Token 121: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.25193047523498535
    2. ' ' → logprob: -1.5019304752349854
    3. ')' → logprob: -13.876930236816406
    4. '<|end|>' → logprob: -15.626930236816406
    5. '  ' → logprob: -16.876930236816406
    6. ' ten' → logprob: -17.001930236816406
    7. '```' → logprob: -17.126930236816406
    8. '   ' → logprob: -17.501930236816406
    9. '20' → logprob: -17.751930236816406
    10. '۱۰' → logprob: -17.876930236816406

Token 122: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -18.125015258789062
    4. ')' → logprob: -19.000015258789062
    5. '100' → logprob: -19.750015258789062
    6. '۱۰' → logprob: -20.000015258789062
    7. '1' → logprob: -20.250015258789062
    8. '0' → logprob: -20.500015258789062
    9. 'ten' → logprob: -20.750015258789062
    10. 'x' → logprob: -20.875015258789062

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6750633120536804
    2. '==' → logprob: -0.9250633120536804
    3. ')==' → logprob: -2.675063371658325
    4. ' ==' → logprob: -3.675063371658325
    5. ' )' → logprob: -9.550063133239746
    6. '()==' → logprob: -10.300063133239746
    7. '()' → logprob: -12.425063133239746
    8. ']==' → logprob: -12.675063133239746
    9. ' ' → logprob: -13.550063133239746
    10. '=' → logprob: -13.800063133239746

Token 124: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519958019256592
    2. ' ==' → logprob: -1.5019958019256592
    3. ')==' → logprob: -10.501996040344238
    4. '==
' → logprob: -11.251996040344238
    5. ' ' → logprob: -11.501996040344238
    6. ')' → logprob: -11.751996040344238
    7. '()==' → logprob: -12.876996040344238
    8. ']==' → logprob: -13.251996040344238
    9. '=' → logprob: -13.501996040344238
    10. '===' → logprob: -14.751996040344238

Token 125: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132616877555847
    2. ' ' → logprob: -1.3132617473602295
    3. ' ' → logprob: -17.688261032104492
    4. '  ' → logprob: -18.063261032104492
    5. '   ' → logprob: -18.188261032104492
    6. '۰' → logprob: -19.438261032104492
    7. '=' → logprob: -19.688261032104492
    8. '00' → logprob: -19.875761032104492
    9. '<|end|>' → logprob: -19.875761032104492
    10. '```' → logprob: -19.938261032104492

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '<|end|>' → logprob: -16.375179290771484
    4. '   ' → logprob: -18.500179290771484
    5. '۰' → logprob: -19.250179290771484
    6. '  ' → logprob: -19.625179290771484
    7. '```' → logprob: -19.875179290771484
    8. '[' → logprob: -20.625179290771484
    9. '10' → logprob: -21.000179290771484
    10. ' ' → logprob: -21.062679290771484

Token 127: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.1602308303117752
    2. 'else' → logprob: -1.9102308750152588
    3. '	else' → logprob: -12.66023063659668
    4. '   ' → logprob: -12.91023063659668
    5. ' ' → logprob: -15.53523063659668
    6. '    ' → logprob: -16.03523063659668
    7. '

' → logprob: -16.03523063659668
    8. '_else' → logprob: -16.66023063659668
    9. ' ' → logprob: -16.78523063659668
    10. ')' → logprob: -16.78523063659668

Token 128: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02437775954604149
    2. '(x' → logprob: -4.149377822875977
    3. ' x' → logprob: -4.899377822875977
    4. ' (' → logprob: -7.149377822875977
    5. '(' → logprob: -9.649377822875977
    6. '10' → logprob: -12.149377822875977
    7. ' ' → logprob: -13.399377822875977
    8. '   ' → logprob: -15.274377822875977
    9. '	x' → logprob: -15.274377822875977
    10. '  ' → logprob: -15.524377822875977

Token 129: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2519538402557373
    2. ' %' → logprob: -1.5019538402557373
    3. '%x' → logprob: -11.626954078674316
    4. ' ' → logprob: -11.626954078674316
    5. '   ' → logprob: -13.001954078674316
    6. ' ' → logprob: -13.751954078674316
    7. '10' → logprob: -14.126954078674316
    8. '
' → logprob: -14.376954078674316
    9. '<|end|>' → logprob: -15.251954078674316
    10. ')' → logprob: -15.376954078674316

Token 130: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0028049908578395844
    2. ' ' → logprob: -5.877804756164551
    3. '```' → logprob: -16.002805709838867
    4. '100' → logprob: -18.002805709838867
    5. ' ' → logprob: -18.377805709838867
    6. '  ' → logprob: -18.377805709838867
    7. '۱۰' → logprob: -18.752805709838867
    8. '1' → logprob: -18.752805709838867
    9. '   ' → logprob: -19.002805709838867
    10. '１０' → logprob: -20.002805709838867

Token 131: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -18.75
    4. '۱۰' → logprob: -19.375
    5. '１０' → logprob: -19.875
    6. '१०' → logprob: -20.0
    7. '1' → logprob: -20.5
    8. '১০' → logprob: -21.0
    9. 'ten' → logprob: -21.0
    10. '100' → logprob: -21.0

Token 132: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018594922497868538
    2. '
' → logprob: -4.768594741821289
    3. 'return' → logprob: -4.768594741821289
    4. ' return' → logprob: -6.768594741821289
    5. '    
' → logprob: -8.768594741821289
    6. '	return' → logprob: -9.393594741821289
    7. '<|end|>' → logprob: -10.893594741821289
    8. ':return' → logprob: -11.643594741821289
    9. '\n' → logprob: -12.393594741821289
    10. '  
' → logprob: -12.643594741821289

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004695341922342777
    2. 'return' → logprob: -5.504695415496826
    3. ' return' → logprob: -7.754695415496826
    4. '
' → logprob: -9.004694938659668
    5. '	return' → logprob: -10.004694938659668
    6. '    
' → logprob: -11.629694938659668
    7. '<|end|>' → logprob: -12.129694938659668
    8. ':return' → logprob: -13.379694938659668
    9. ')' → logprob: -13.629694938659668
    10. ' ' → logprob: -14.379694938659668

Token 134: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009019162505865097
    2. 'return' → logprob: -4.759019374847412
    3. ' return' → logprob: -8.009018898010254
    4. '
' → logprob: -10.259018898010254
    5. '    
' → logprob: -11.009018898010254
    6. '	return' → logprob: -11.009018898010254
    7. '<|end|>' → logprob: -13.384018898010254
    8. ':return' → logprob: -14.384018898010254
    9. ' ' → logprob: -14.884018898010254
    10. '  ' → logprob: -15.259018898010254

Token 135: ' Retour' (ID: 146830)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05251041799783707
    2. ' return' → logprob: -3.5525104999542236
    3. '   ' → logprob: -3.8025104999542236
    4. 'ret' → logprob: -9.052510261535645
    5. ' ' → logprob: -11.177510261535645
    6. '  ' → logprob: -11.427510261535645
    7. 're' → logprob: -11.552510261535645
    8. ':return' → logprob: -11.552510261535645
    9. ' retour' → logprob: -11.677510261535645
    10. '	return' → logprob: -12.052510261535645

Token 136: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7060886025428772
    2. 'ner' → logprob: -0.7060886025428772
    3. '   ' → logprob: -4.831088542938232
    4. 'ne' → logprob: -5.456088542938232
    5. ' n' → logprob: -7.956088542938232
    6. ' ans' → logprob: -9.83108901977539
    7. 'nera' → logprob: -9.83108901977539
    8. 'r' → logprob: -10.33108901977539
    9. 'ns' → logprob: -10.33108901977539
    10. ' ner' → logprob: -11.08108901977539

Token 137: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.00011343709047650918
    2. 'ans' → logprob: -9.125113487243652
    3. '(ans' → logprob: -12.625113487243652
    4. '	ans' → logprob: -14.000113487243652
    5. ' ' → logprob: -15.125113487243652
    6. '_ans' → logprob: -18.125112533569336
    7. ' an' → logprob: -18.625112533569336
    8. ' ' → logprob: -18.750112533569336
    9. 'Ans' → logprob: -19.000112533569336
    10. ' answer' → logprob: -19.000112533569336

Token 138: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08178002387285233
    2. ' ans' → logprob: -2.581779956817627
    3. '   ' → logprob: -7.206779956817627
    4. 'answer' → logprob: -7.706779956817627
    5. 'val' → logprob: -8.206780433654785
    6. 'return' → logprob: -8.331780433654785
    7. ' ' → logprob: -8.581780433654785
    8. ' return' → logprob: -8.581780433654785
    9. '(ans' → logprob: -8.706780433654785
    10. ' valeur' → logprob: -8.956780433654785

Token 139: ' calcul' (ID: 7559)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.006344310939311981
    2. '   ' → logprob: -5.631344318389893
    3. 'ans' → logprob: -6.631344318389893
    4. ' return' → logprob: -7.131344318389893
    5. '(ans' → logprob: -8.006343841552734
    6. '    
' → logprob: -9.631343841552734
    7. '	ans' → logprob: -9.631343841552734
    8. ' ' → logprob: -10.506343841552734
    9. 'return' → logprob: -10.631343841552734
    10. ' 
' → logprob: -10.881343841552734

Token 140: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0043311333283782005
    2. 'é' → logprob: -5.754331111907959
    3. 'ee' → logprob: -7.379331111907959
    4. 'e' → logprob: -7.629331111907959
    5. 'er' → logprob: -10.129331588745117
    6. 'è' → logprob: -14.254331588745117
    7. '   ' → logprob: -14.254331588745117
    8. 'ate' → logprob: -14.379331588745117
    9. 'ation' → logprob: -15.129331588745117
    10. 'ed' → logprob: -16.004331588745117

Token 141: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6415519714355469
    2. '   ' → logprob: -0.7665519714355469
    3. 'return' → logprob: -5.516551971435547
    4. ' return' → logprob: -6.016551971435547
    5. '    
' → logprob: -6.391551971435547
    6. '  
' → logprob: -8.516551971435547
    7. ' 
' → logprob: -8.516551971435547
    8. '<|end|>' → logprob: -8.766551971435547
    9. '   
' → logprob: -9.766551971435547
    10. '	return' → logprob: -9.891551971435547

Token 142: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.45802101492881775
    2. ' la' → logprob: -1.4580210447311401
    3. 'l' → logprob: -2.4580209255218506
    4. '   ' → logprob: -4.95802116394043
    5. 'return' → logprob: -5.08302116394043
    6. 'ans' → logprob: -5.33302116394043
    7. '10' → logprob: -5.83302116394043
    8. ' l' → logprob: -5.83302116394043
    9. ' ' → logprob: -5.95802116394043
    10. 'x' → logprob: -5.95802116394043

Token 143: ''appel' (ID: 172839)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00618047546595335
    2. 'return' → logprob: -5.881180286407471
    3. 'e' → logprob: -6.506180286407471
    4. 'igne' → logprob: -6.756180286407471
    5. 'x' → logprob: -8.131180763244629
    6. ''utilisateur' → logprob: -9.506180763244629
    7. ' return' → logprob: -10.131180763244629
    8. 'à' → logprob: -10.756180763244629
    9. ''extérieur' → logprob: -10.756180763244629
    10. 'ans' → logprob: -10.881180763244629

Token 144: 'ant' (ID: 493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7433105111122131
    2. ' return' → logprob: -0.7433105111122131
    3. 'return' → logprob: -3.9933104515075684
    4. '<|end|>' → logprob: -4.618310451507568
    5. ' ans' → logprob: -4.993310451507568
    6. ' x' → logprob: -5.868310451507568
    7. 'er' → logprob: -6.618310451507568
    8. ' ' → logprob: -6.743310451507568
    9. ':return' → logprob: -7.118310451507568
    10. 's' → logprob: -7.368310451507568

Token 145: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060368333011865616
    2. '
' → logprob: -2.935368299484253
    3. 'return' → logprob: -5.685368537902832
    4. ' return' → logprob: -6.435368537902832
    5. '    
' → logprob: -7.810368537902832
    6. '	return' → logprob: -11.185368537902832
    7. '\n' → logprob: -11.185368537902832
    8. ' 
' → logprob: -11.560368537902832
    9. '<|end|>' → logprob: -11.810368537902832
    10. '  
' → logprob: -12.310368537902832

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01023633312433958
    2. 'return' → logprob: -5.1352362632751465
    3. '
' → logprob: -5.7602362632751465
    4. '    
' → logprob: -7.1352362632751465
    5. ' return' → logprob: -8.010236740112305
    6. '	return' → logprob: -11.760236740112305
    7. '   
' → logprob: -12.760236740112305
    8. '  
' → logprob: -13.010236740112305
    9. ' 
' → logprob: -13.260236740112305
    10. '\n' → logprob: -13.635236740112305

Token 147: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20265093445777893
    2. ' return' → logprob: -1.7026509046554565
    3. '   ' → logprob: -7.077651023864746
    4. ' ans' → logprob: -8.077651023864746
    5. 'ans' → logprob: -9.452651023864746
    6. '	return' → logprob: -14.077651023864746
    7. '    
' → logprob: -14.077651023864746
    8. ':return' → logprob: -14.452651023864746
    9. '
' → logprob: -14.577651023864746
    10. '{return' → logprob: -14.702651023864746

Token 148: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.023252932354807854
    2. 'ans' → logprob: -3.7732529640197754
    3. '(ans' → logprob: -11.898252487182617
    4. ' ' → logprob: -14.648252487182617
    5. '	ans' → logprob: -15.273252487182617
    6. '_ans' → logprob: -17.398252487182617
    7. ' ' → logprob: -18.648252487182617
    8. 'Ans' → logprob: -19.398252487182617
    9. ' Ans' → logprob: -19.648252487182617
    10. 'space' → logprob: -19.648252487182617

Token 149: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5249700546264648
    2. '<|end|>' → logprob: -1.0249700546264648
    3. '\n' → logprob: -3.399970054626465
    4. ' ' → logprob: -5.649970054626465
    5. 'newline' → logprob: -5.774970054626465
    6. ')' → logprob: -6.274970054626465
    7. '```' → logprob: -6.399970054626465
    8. '(' → logprob: -6.649970054626465
    9. '<|end|>' → logprob: -6.899970054626465
    10. '[' → logprob: -7.149970054626465

Token 150: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' Lecture' (ID: 106534)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.256290078163147
    2. 'def' → logprob: -1.381290078163147
    3. ' ' → logprob: -1.506290078163147
    4. '#' → logprob: -2.2562899589538574
    5. '10' → logprob: -2.5062899589538574
    6. 'ten' → logprob: -4.631289958953857
    7. ' x' → logprob: -5.131289958953857
    8. 'print' → logprob: -5.131289958953857
    9. '[' → logprob: -5.256289958953857
    10. ' ten' → logprob: -5.631289958953857

Token 152: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4531971216201782
    2. '(' → logprob: -1.2031971216201782
    3. ' (' → logprob: -3.5781970024108887
    4. 'input' → logprob: -4.078197002410889
    5. ' ' → logprob: -5.578197002410889
    6. ' input' → logprob: -5.828197002410889
    7. '(input' → logprob: -6.078197002410889
    8. 's' → logprob: -6.203197002410889
    9. '(
' → logprob: -6.203197002410889
    10. 'int' → logprob: -6.328197002410889

Token 153: ''un' (ID: 9788)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2732173204421997
    2. '(' → logprob: -1.7732173204421997
    3. ' ' → logprob: -4.27321720123291
    4. 'a' → logprob: -4.27321720123291
    5. 'e' → logprob: -4.52321720123291
    6. '_' → logprob: -5.02321720123291
    7. 'une' → logprob: -5.39821720123291
    8. ' input' → logprob: -5.39821720123291
    9. 'input' → logprob: -5.64821720123291
    10. ' a' → logprob: -6.64821720123291

Token 154: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.713953971862793
    2. ' ' → logprob: -1.088953971862793
    3. 'nombre' → logprob: -2.463953971862793
    4. ' entier' → logprob: -3.213953971862793
    5. ' =' → logprob: -4.213953971862793
    6. ' input' → logprob: -4.588953971862793
    7. 'n' → logprob: -4.963953971862793
    8. ' ent' → logprob: -6.213953971862793
    9. ' number' → logprob: -6.338953971862793
    10. '=' → logprob: -6.463953971862793

Token 155: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5488436818122864
    2. '()' → logprob: -1.0488436222076416
    3. 'x' → logprob: -3.6738436222076416
    4. 'user' → logprob: -4.173843860626221
    5. '(' → logprob: -4.798843860626221
    6. 'number' → logprob: -5.173843860626221
    7. 'num' → logprob: -5.298843860626221
    8. 's' → logprob: -5.798843860626221
    9. 'nombre' → logprob: -5.798843860626221
    10. 'a' → logprob: -6.548843860626221

Token 156: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5313447117805481
    2. '()' → logprob: -1.1563446521759033
    3. 'x' → logprob: -2.9063446521759033
    4. '(' → logprob: -3.6563446521759033
    5. 'number' → logprob: -5.531344890594482
    6. 'user' → logprob: -5.656344890594482
    7. 'nombre' → logprob: -5.781344890594482
    8. 'num' → logprob: -6.656344890594482
    9. '()
' → logprob: -6.656344890594482
    10. 's' → logprob: -7.406344890594482

Token 157: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.41451889276504517
    2. 'l' → logprob: -1.6645188331604004
    3. ' l' → logprob: -2.1645188331604004
    4. 'input' → logprob: -3.4145188331604004
    5. ' ' → logprob: -6.5395188331604
    6. '=input' → logprob: -8.289519309997559
    7. ' ' → logprob: -8.789519309997559
    8. ' la' → logprob: -9.164519309997559
    9. 'la' → logprob: -9.289519309997559
    10. '_' → logprob: -9.414519309997559

Token 158: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.7426762580871582
    2. 'a' → logprob: -1.4926762580871582
    3. ''utilisateur' → logprob: -1.8676762580871582
    4. 'input' → logprob: -2.242676258087158
    5. ''' → logprob: -4.242676258087158
    6. 'entrée' → logprob: -4.367676258087158
    7. 'e' → logprob: -5.742676258087158
    8. 'es' → logprob: -5.867676258087158
    9. ' input' → logprob: -6.492676258087158
    10. 'u' → logprob: -7.117676258087158

Token 159: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13348878920078278
    2. 'x' → logprob: -2.133488893508911
    3. 'user' → logprob: -6.383488655090332
    4. 'input' → logprob: -6.508488655090332
    5. 'number' → logprob: -6.633488655090332
    6. 'num' → logprob: -7.383488655090332
    7. 'nombre' → logprob: -7.633488655090332
    8. 's' → logprob: -8.008488655090332
    9. 'a' → logprob: -9.383488655090332
    10. 'value' → logprob: -9.758488655090332

Token 160: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04461514577269554
    2. 'x' → logprob: -3.2946150302886963
    3. 'number' → logprob: -5.919615268707275
    4. '
' → logprob: -6.294615268707275
    5. 'num' → logprob: -7.044615268707275
    6. 'input' → logprob: -8.294614791870117
    7. 'nombre' → logprob: -8.544614791870117
    8. ' 
' → logprob: -8.794614791870117
    9. 'user' → logprob: -8.919614791870117
    10. '\n' → logprob: -9.794614791870117

Token 161: ' conversion' (ID: 22165)
  Prédit: ' stockage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stockage' → logprob: -0.5868178009986877
    2. ' stock' → logprob: -1.961817741394043
    3. ' input' → logprob: -2.961817741394043
    4. ' ' → logprob: -3.211817741394043
    5. ' l' → logprob: -3.586817741394043
    6. ' ' → logprob: -4.211817741394043
    7. 'input' → logprob: -4.336817741394043
    8. 's' → logprob: -4.336817741394043
    9. ' conversion' → logprob: -4.586817741394043
    10. ' le' → logprob: -4.711817741394043

Token 162: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14062663912773132
    2. '(input' → logprob: -2.8906266689300537
    3. 'input' → logprob: -3.3906266689300537
    4. 'int' → logprob: -3.7656266689300537
    5. '(int' → logprob: -4.640626430511475
    6. ' input' → logprob: -5.140626430511475
    7. ' (' → logprob: -6.890626430511475
    8. '=input' → logprob: -7.015626430511475
    9. '()' → logprob: -7.640626430511475
    10. ' int' → logprob: -8.390626907348633

Token 163: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2605056166648865
    2. 'int' → logprob: -1.5105056762695312
    3. ' entier' → logprob: -5.135505676269531
    4. 'ent' → logprob: -6.260505676269531
    5. ' ent' → logprob: -7.635505676269531
    6. ' integer' → logprob: -9.010505676269531
    7. ' un' → logprob: -9.885505676269531
    8. ' ' → logprob: -10.260505676269531
    9. '=int' → logprob: -10.260505676269531
    10. ' ' → logprob: -12.010505676269531

Token 164: ' avec' (ID: 3937)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4799887239933014
    2. 'n' → logprob: -0.979988694190979
    3. 'number' → logprob: -5.7299885749816895
    4. 'num' → logprob: -6.7299885749816895
    5. ' x' → logprob: -7.2299885749816895
    6. 'nombre' → logprob: -7.7299885749816895
    7. ' n' → logprob: -9.354989051818848
    8. 'user' → logprob: -9.729989051818848
    9. ' number' → logprob: -10.104989051818848
    10. 'numero' → logprob: -10.604989051818848

Token 165: ' la' (ID: 557)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07767105102539062
    2. 'input' → logprob: -2.9526710510253906
    3. ' la' → logprob: -4.327671051025391
    4. ' int' → logprob: -4.952671051025391
    5. 'int' → logprob: -6.577671051025391
    6. ' ' → logprob: -7.827671051025391
    7. ' ' → logprob: -9.20267105102539
    8. ' l' → logprob: -9.32767105102539
    9. ' une' → logprob: -9.32767105102539
    10. '=input' → logprob: -9.70267105102539

Token 166: ' fonction' (ID: 17610)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7002283930778503
    2. 'int' → logprob: -1.0752284526824951
    3. ' input' → logprob: -2.075228452682495
    4. ' int' → logprob: -3.325228452682495
    5. '=input' → logprob: -8.700228691101074
    6. '=int' → logprob: -8.950228691101074
    7. 'entrée' → logprob: -9.075228691101074
    8. ' ' → logprob: -9.200228691101074
    9. 'split' → logprob: -9.825228691101074
    10. 'prompt' → logprob: -10.700228691101074

Token 167: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3656628727912903
    2. 'input' → logprob: -1.3656628131866455
    3. ' int' → logprob: -3.3656628131866455
    4. ' input' → logprob: -4.115663051605225
    5. '(int' → logprob: -8.990662574768066
    6. '(input' → logprob: -10.240662574768066
    7. '=int' → logprob: -10.740662574768066
    8. '=input' → logprob: -12.115662574768066
    9. '```' → logprob: -12.865662574768066
    10. '<int' → logprob: -12.990662574768066

Token 168: '()
' (ID: 1234)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31712815165519714
    2. 'n' → logprob: -1.3171281814575195
    3. 'number' → logprob: -6.3171281814575195
    4. 'num' → logprob: -6.5671281814575195
    5. 'nombre' → logprob: -7.6921281814575195
    6. ' x' → logprob: -9.81712818145752
    7. ' n' → logprob: -10.31712818145752
    8. 'user' → logprob: -10.69212818145752
    9. 'numero' → logprob: -10.81712818145752
    10. 'a' → logprob: -11.06712818145752

Token 169: 'x' (ID: 87)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3359983563423157
    2. 'x' → logprob: -1.335998296737671
    3. 'number' → logprob: -4.46099853515625
    4. 'num' → logprob: -4.71099853515625
    5. 'nombre' → logprob: -6.46099853515625
    6. ' n' → logprob: -8.83599853515625
    7. ' x' → logprob: -9.71099853515625
    8. 'user' → logprob: -10.33599853515625
    9. 'numero' → logprob: -10.46099853515625
    10. 'val' → logprob: -10.71099853515625

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059296246618032455
    2. '=' → logprob: -5.130929470062256
    3. ' ' → logprob: -14.880929946899414
    4. '=int' → logprob: -15.130929946899414
    5. '=input' → logprob: -15.880929946899414
    6. ' =
' → logprob: -16.630929946899414
    7. ',' → logprob: -16.630929946899414
    8. ' ' → logprob: -16.755929946899414
    9. ')' → logprob: -17.755929946899414
    10. '.' → logprob: -17.755929946899414

Token 171: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009118211455643177
    2. ' int' → logprob: -7.000911712646484
    3. 'input' → logprob: -14.875911712646484
    4. '=int' → logprob: -19.500911712646484
    5. '<int' → logprob: -19.750911712646484
    6. '[int' → logprob: -19.750911712646484
    7. '(int' → logprob: -19.875911712646484
    8. '	int' → logprob: -20.500911712646484
    9. ' ' → logprob: -20.500911712646484
    10. '   ' → logprob: -21.750911712646484

Token 172: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003179975086823106
    2. '(' → logprob: -5.753180027008057
    3. 'input' → logprob: -13.128179550170898
    4. '(
' → logprob: -15.628179550170898
    5. ' (' → logprob: -15.878179550170898
    6. '()' → logprob: -17.0031795501709
    7. '=input' → logprob: -17.2531795501709
    8. '(

' → logprob: -18.1281795501709
    9. '(raw' → logprob: -19.3781795501709
    10. '<input' → logprob: -19.3781795501709

Token 173: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0813729539513588
    2. '()' → logprob: -2.5813729763031006
    3. '(' → logprob: -6.4563727378845215
    4. '("' → logprob: -7.5813727378845215
    5. '('' → logprob: -9.20637321472168
    6. '(""))' → logprob: -9.33137321472168
    7. '("("' → logprob: -9.58137321472168
    8. '()))' → logprob: -10.58137321472168
    9. '();)' → logprob: -10.95637321472168
    10. '(">' → logprob: -11.08137321472168

Token 174: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008535855449736118
    2. 'result' → logprob: -7.500853538513184
    3. 'if' → logprob: -9.125853538513184
    4. '
' → logprob: -9.375853538513184
    5. '#' → logprob: -10.375853538513184
    6. ' print' → logprob: -10.750853538513184
    7. 'ans' → logprob: -11.750853538513184
    8. 'r' → logprob: -12.000853538513184
    9. 'next' → logprob: -12.250853538513184
    10. '10' → logprob: -12.500853538513184

Token 175: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008482214179821312
    2. 'result' → logprob: -7.250848293304443
    3. '#' → logprob: -9.375847816467285
    4. ' print' → logprob: -11.125847816467285
    5. 'pr' → logprob: -11.500847816467285
    6. 'prin' → logprob: -11.500847816467285
    7. 'if' → logprob: -12.500847816467285
    8. 'y' → logprob: -12.625847816467285
    9. 'res' → logprob: -12.750847816467285
    10. 'r' → logprob: -12.875847816467285

Token 176: ' du' (ID: 1462)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20131683349609375
    2. '_' → logprob: -3.4513168334960938
    3. ' =' → logprob: -3.5763168334960938
    4. ' result' → logprob: -3.7013168334960938
    5. 'mod' → logprob: -3.7013168334960938
    6. ' de' → logprob: -4.576316833496094
    7. 'res' → logprob: -5.076316833496094
    8. ' y' → logprob: -5.326316833496094
    9. 'r' → logprob: -5.326316833496094
    10. 'x' → logprob: -5.451316833496094

Token 177: ' premier' (ID: 15506)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.18153785169124603
    2. 'res' → logprob: -2.9315378665924072
    3. 'print' → logprob: -3.6815378665924072
    4. 'ten' → logprob: -3.9315378665924072
    5. 'mod' → logprob: -4.181537628173828
    6. 'r' → logprob: -4.431537628173828
    7. 'reste' → logprob: -4.431537628173828
    8. 'rés' → logprob: -4.556537628173828
    9. 'rest' → logprob: -5.056537628173828
    10. 're' → logprob: -5.556537628173828

Token 178: ' élément' (ID: 99627)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.5167498588562012
    2. ' multiple' → logprob: -1.8917498588562012
    3. 'multip' → logprob: -2.266749858856201
    4. '_' → logprob: -2.516749858856201
    5. '_multiple' → logprob: -3.391749858856201
    6. 'x' → logprob: -5.266749858856201
    7. 'next' → logprob: -5.766749858856201
    8. 'mult' → logprob: -5.891749858856201
    9. ' prochain' → logprob: -6.141749858856201
    10. ' ' → logprob: -6.266749858856201

Token 179: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23546957969665527
    2. '_' → logprob: -1.7354695796966553
    3. '_mod' → logprob: -4.860469818115234
    4. '=' → logprob: -4.985469818115234
    5. '_de' → logprob: -5.360469818115234
    6. ' de' → logprob: -5.610469818115234
    7. ' _' → logprob: -5.985469818115234
    8. '_next' → logprob: -6.485469818115234
    9. ' ' → logprob: -6.610469818115234
    10. 'de' → logprob: -7.235469818115234

Token 180: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.32528769969940186
    2. 'x' → logprob: -3.0752878189086914
    3. 'la' → logprob: -3.2002878189086914
    4. 'range' → logprob: -3.2002878189086914
    5. 'ten' → logprob: -3.4502878189086914
    6. ' x' → logprob: -3.5752878189086914
    7. ' ten' → logprob: -3.8252878189086914
    8. 'the' → logprob: -4.200287818908691
    9. 's' → logprob: -4.700287818908691
    10. ' ' → logprob: -4.700287818908691

Token 181: ' variable' (ID: 11076)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5141652822494507
    2. 'liste' → logprob: -1.6391652822494507
    3. 'list' → logprob: -2.2641654014587402
    4. 'sequence' → logprob: -2.5141654014587402
    5. 'tuple' → logprob: -2.7641654014587402
    6. 'suite' → logprob: -2.8891654014587402
    7. ' sequence' → logprob: -3.2641654014587402
    8. ' tableau' → logprob: -3.6391654014587402
    9. 'x' → logprob: -3.7641654014587402
    10. 'lst' → logprob: -3.8891654014587402

Token 182: ' '' (ID: 461)
  Prédit: ' suivant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivant' → logprob: -0.6006559133529663
    2. ' sequence' → logprob: -2.600656032562256
    3. 's' → logprob: -2.850656032562256
    4. 'result' → logprob: -2.975656032562256
    5. ' ten' → logprob: -3.350656032562256
    6. ' result' → logprob: -3.475656032562256
    7. 'sequence' → logprob: -3.850656032562256
    8. 'next' → logprob: -4.100656032562256
    9. ' next' → logprob: -4.225656032562256
    10. 'x' → logprob: -4.225656032562256

Token 183: 'ans' (ID: 616)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20400415360927582
    2. 'result' → logprob: -2.8290040493011475
    3. 'ten' → logprob: -3.4540040493011475
    4. 'range' → logprob: -4.079004287719727
    5. 'sequence' → logprob: -4.454004287719727
    6. 's' → logprob: -4.954004287719727
    7. 'output' → logprob: -5.329004287719727
    8. ' x' → logprob: -5.454004287719727
    9. 'liste' → logprob: -5.454004287719727
    10. 't' → logprob: -5.704004287719727

Token 184: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03734419122338295
    2. 's' → logprob: -4.537343978881836
    3. ' ' → logprob: -4.537343978881836
    4. '=' → logprob: -4.787343978881836
    5. ')' → logprob: -5.412343978881836
    6. '_' → logprob: -6.912343978881836
    7. ',' → logprob: -8.162343978881836
    8. '[]' → logprob: -8.662343978881836
    9. '_s' → logprob: -8.912343978881836
    10. ' )' → logprob: -9.037343978881836

Token 185: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008895344100892544
    2. '=' → logprob: -4.758895397186279
    3. 's' → logprob: -8.883894920349121
    4. ',' → logprob: -9.258894920349121
    5. ' ' → logprob: -11.008894920349121
    6. ' ' → logprob: -12.383894920349121
    7. 'mod' → logprob: -12.883894920349121
    8. '_' → logprob: -13.008894920349121
    9. 'next' → logprob: -13.008894920349121
    10. ' ,' → logprob: -13.258894920349121

Token 186: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2831662595272064
    2. '=' → logprob: -1.7831662893295288
    3. 's' → logprob: -3.0331661701202393
    4. ' est' → logprob: -4.658166408538818
    5. ' sera' → logprob: -5.408166408538818
    6. ' représente' → logprob: -6.033166408538818
    7. ' correspond' → logprob: -6.158166408538818
    8. 'est' → logprob: -6.408166408538818
    9. ' contient' → logprob: -6.408166408538818
    10. 'n' → logprob: -7.033166408538818

Token 187: ' utilisée' (ID: 106548)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.23073521256446838
    2. ' ten' → logprob: -2.4807353019714355
    3. 'x' → logprob: -2.8557353019714355
    4. ' ' → logprob: -3.6057353019714355
    5. 'ten' → logprob: -3.8557353019714355
    6. '10' → logprob: -4.6057353019714355
    7. ' la' → logprob: -6.7307353019714355
    8. ' le' → logprob: -7.2307353019714355
    9. ' utilisé' → logprob: -7.6057353019714355
    10. ' calcul' → logprob: -7.7307353019714355

Token 188: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43305081129074097
    2. ' =' → logprob: -1.0580508708953857
    3. 'for' → logprob: -6.683050632476807
    4. 'pour' → logprob: -6.808050632476807
    5. ' pour' → logprob: -7.808050632476807
    6. 's' → logprob: -8.183051109313965
    7. '[]' → logprob: -8.183051109313965
    8. '_' → logprob: -8.683051109313965
    9. '=[]' → logprob: -8.683051109313965
    10. ',' → logprob: -8.808051109313965

Token 189: ' accumulation' (ID: 70787)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.42326217889785767
    2. 'x' → logprob: -2.548262119293213
    3. 'result' → logprob: -2.798262119293213
    4. '[' → logprob: -3.048262119293213
    5. 'range' → logprob: -3.548262119293213
    6. 'liste' → logprob: -4.048262119293213
    7. 'output' → logprob: -4.173262119293213
    8. 'une' → logprob: -4.423262119293213
    9. 'abs' → logprob: -4.548262119293213
    10. '10' → logprob: -4.673262119293213

Token 190: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005930813029408455
    2. '=' → logprob: -5.3809309005737305
    3. 's' → logprob: -7.3809309005737305
    4. ',' → logprob: -8.00593090057373
    5. ' =
' → logprob: -9.13093090057373
    6. ' ' → logprob: -9.63093090057373
    7. '_' → logprob: -10.50593090057373
    8. ' de' → logprob: -11.38093090057373
    9. ' ' → logprob: -11.38093090057373
    10. 'total' → logprob: -11.50593090057373

Token 191: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6750719547271729
    2. '10' → logprob: -1.5500719547271729
    3. '[]' → logprob: -2.925071954727173
    4. '0' → logprob: -3.300071954727173
    5. '[' → logprob: -3.425071954727173
    6. '(x' → logprob: -3.925071954727173
    7. '[x' → logprob: -4.050071716308594
    8. '1' → logprob: -4.425071716308594
    9. 'l' → logprob: -4.425071716308594
    10. 'abs' → logprob: -4.675071716308594

Token 192: ' réponse' (ID: 50332)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2590428590774536
    2. 'ten' → logprob: -1.5090428590774536
    3. 'result' → logprob: -1.7590428590774536
    4. '10' → logprob: -1.8840428590774536
    5. '[]' → logprob: -4.009042739868164
    6. '[' → logprob: -4.009042739868164
    7. 'total' → logprob: -4.009042739868164
    8. 'sum' → logprob: -4.134042739868164
    9. 's' → logprob: -4.509042739868164
    10. 'rés' → logprob: -4.634042739868164

Token 193: ' finale' (ID: 37759)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04899994656443596
    2. '=' → logprob: -3.2990000247955322
    3. 'ans' → logprob: -5.298999786376953
    4. '%' → logprob: -6.798999786376953
    5. ' ans' → logprob: -6.923999786376953
    6. 's' → logprob: -7.048999786376953
    7. 'mod' → logprob: -7.673999786376953
    8. ',' → logprob: -7.673999786376953
    9. ' %' → logprob: -7.798999786376953
    10. '10' → logprob: -7.923999786376953

Token 194: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07533441483974457
    2. ' ans' → logprob: -3.450334310531616
    3. '%' → logprob: -4.575334548950195
    4. '
' → logprob: -4.700334548950195
    5. ' =' → logprob: -4.825334548950195
    6. '(ans' → logprob: -6.075334548950195
    7. ' %' → logprob: -6.325334548950195
    8. '=' → logprob: -6.450334548950195
    9. 's' → logprob: -6.700334548950195
    10. 'mod' → logprob: -7.200334548950195

Token 195: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01783803477883339
    2. '10' → logprob: -4.642838001251221
    3. 'x' → logprob: -6.267838001251221
    4. 'res' → logprob: -7.267838001251221
    5. 'a' → logprob: -7.392838001251221
    6. '(' → logprob: -7.392838001251221
    7. 'ten' → logprob: -7.517838001251221
    8. '(ans' → logprob: -7.517838001251221
    9. 'result' → logprob: -7.767838001251221
    10. 'abs' → logprob: -7.767838001251221

Token 196: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01868373714387417
    2. ' ans' → logprob: -4.268683910369873
    3. 'a' → logprob: -6.893683910369873
    4. 'res' → logprob: -7.768683910369873
    5. 'result' → logprob: -7.768683910369873
    6. 'total' → logprob: -8.018683433532715
    7. 'd' → logprob: -8.393683433532715
    8. 'answer' → logprob: -8.643683433532715
    9. 'ten' → logprob: -8.768683433532715
    10. 's' → logprob: -8.768683433532715

Token 197: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7575955986976624
    2. ' (' → logprob: -1.1325955390930176
    3. ' ten' → logprob: -2.1325955390930176
    4. 'x' → logprob: -3.2575955390930176
    5. '(x' → logprob: -3.7575955390930176
    6. ' ' → logprob: -4.382595539093018
    7. '(' → logprob: -4.507595539093018
    8. 'ten' → logprob: -5.507595539093018
    9. '10' → logprob: -8.007596015930176
    10. ' ' → logprob: -9.195096015930176

Token 198: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.09604628384113312
    2. '%' → logprob: -2.471046209335327
    3. ' ==' → logprob: -6.221046447753906
    4. ' <' → logprob: -6.471046447753906
    5. ' <=' → logprob: -6.846046447753906
    6. ' >' → logprob: -7.596046447753906
    7. '==' → logprob: -7.721046447753906
    8. ' ' → logprob: -7.971046447753906
    9. '<' → logprob: -8.346046447753906
    10. '>' → logprob: -8.346046447753906

Token 199: ' divisible' (ID: 167813)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6057183742523193
    2. ' ' → logprob: -1.6057183742523193
    3. '1' → logprob: -2.2307183742523193
    4. ' divisible' → logprob: -2.6057183742523193
    5. '10' → logprob: -3.2307183742523193
    6. '100' → logprob: -4.480718612670898
    7. 'x' → logprob: -5.105718612670898
    8. ' x' → logprob: -5.480718612670898
    9. 'ten' → logprob: -5.605718612670898
    10. 'div' → logprob: -6.855718612670898

Token 200: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1842556893825531
    2. 'par' → logprob: -1.8092557191848755
    3. ' ' → logprob: -6.559255599975586
    4. ' (' → logprob: -7.184255599975586
    5. ')' → logprob: -7.934255599975586
    6. ' x' → logprob: -7.934255599975586
    7. '(' → logprob: -8.184255599975586
    8. '_par' → logprob: -8.309255599975586
    9. ' ' → logprob: -8.434255599975586
    10. '(x' → logprob: -9.059255599975586

Token 201: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018708305433392525
    2. ' ' → logprob: -4.143708229064941
    3. '5' → logprob: -7.018708229064941
    4. '2' → logprob: -7.143708229064941
    5. '3' → logprob: -7.393708229064941
    6. '4' → logprob: -9.268708229064941
    7. '100' → logprob: -9.393708229064941
    8. '7' → logprob: -10.018708229064941
    9. '11' → logprob: -10.268708229064941
    10. '20' → logprob: -10.768708229064941

Token 202: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007232757634483278
    2. '5' → logprob: -8.125722885131836
    3. ' ' → logprob: -8.375722885131836
    4. '2' → logprob: -9.500722885131836
    5. '3' → logprob: -10.000722885131836
    6. '100' → logprob: -11.000722885131836
    7. '4' → logprob: -11.375722885131836
    8. '20' → logprob: -11.625722885131836
    9. '7' → logprob: -11.875722885131836
    10. '11' → logprob: -12.000722885131836

Token 203: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032356567680835724
    2. ':
' → logprob: -4.0323567390441895
    3. ' and' → logprob: -5.2823567390441895
    4. ',' → logprob: -5.7823567390441895
    5. ' :' → logprob: -5.7823567390441895
    6. '==' → logprob: -7.5323567390441895
    7. ' ==' → logprob: -7.7823567390441895
    8. 'and' → logprob: -8.157356262207031
    9. 'else' → logprob: -8.157356262207031
    10. '):' → logprob: -8.282356262207031

Token 204: 'c' (ID: 66)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4946272075176239
    2. ' x' → logprob: -1.1196272373199463
    3. '(x' → logprob: -3.2446272373199463
    4. ' (' → logprob: -3.7446272373199463
    5. '10' → logprob: -7.869626998901367
    6. '(' → logprob: -7.994626998901367
    7. ')' → logprob: -8.494626998901367
    8. ' ' → logprob: -8.994626998901367
    9. '   ' → logprob: -10.369626998901367
    10. ')x' → logprob: -10.994626998901367

Token 205: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9560715556144714
    2. 'x' → logprob: -1.4560716152191162
    3. '#' → logprob: -2.206071615219116
    4. ''est' → logprob: -2.831071615219116
    5. ')' → logprob: -3.081071615219116
    6. '),' → logprob: -3.831071615219116
    7. 'u' → logprob: -4.081071376800537
    8. ',' → logprob: -4.206071376800537
    9. 'es' → logprob: -4.456071376800537
    10. '=' → logprob: -4.456071376800537

Token 206: '-à' (ID: 56297)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5862573385238647
    2. ' que' → logprob: -1.5862573385238647
    3. 'x' → logprob: -2.4612574577331543
    4. '   ' → logprob: -3.7112574577331543
    5. ')' → logprob: -3.8362574577331543
    6. '(x' → logprob: -3.8362574577331543
    7. ' ' → logprob: -4.461257457733154
    8. ' )' → logprob: -4.461257457733154
    9. ' not' → logprob: -4.586257457733154
    10. ' à' → logprob: -4.586257457733154

Token 207: '-dire' (ID: 76064)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3190813958644867
    2. '0' → logprob: -2.0690813064575195
    3. 'True' → logprob: -2.6940813064575195
    4. ' False' → logprob: -3.0690813064575195
    5. 'x' → logprob: -4.0690813064575195
    6. ' True' → logprob: -4.6940813064575195
    7. 'int' → logprob: -6.9440813064575195
    8. '10' → logprob: -7.0690813064575195
    9. '100' → logprob: -7.1940813064575195
    10. 'div' → logprob: -7.3190813064575195

Token 208: ' un' (ID: 537)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7483632564544678
    2. 'x' → logprob: -1.3733632564544678
    3. '(x' → logprob: -2.2483632564544678
    4. ' ten' → logprob: -2.4983632564544678
    5. ' (' → logprob: -2.7483632564544678
    6. 'ten' → logprob: -4.123363494873047
    7. '(' → logprob: -5.873363494873047
    8. ' ' → logprob: -6.873363494873047
    9. '10' → logprob: -7.373363494873047
    10. ' ' → logprob: -7.498363494873047

Token 209: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.47789666056632996
    2. 'multiple' → logprob: -1.1028966903686523
    3. 'x' → logprob: -3.6028966903686523
    4. ' x' → logprob: -5.102896690368652
    5. 'nombre' → logprob: -5.852896690368652
    6. 'mod' → logprob: -6.352896690368652
    7. '#' → logprob: -6.477896690368652
    8. ' nombre' → logprob: -6.477896690368652
    9. 'multip' → logprob: -6.602896690368652
    10. '(x' → logprob: -7.352896690368652

Token 210: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.023860614746809006
    2. ')' → logprob: -4.523860454559326
    3. 'de' → logprob: -4.648860454559326
    4. '   ' → logprob: -6.398860454559326
    5. ' of' → logprob: -7.523860454559326
    6. '10' → logprob: -7.898860454559326
    7. '  ' → logprob: -8.648860931396484
    8. 'def' → logprob: -9.648860931396484
    9. ' ' → logprob: -9.898860931396484
    10. '    ' → logprob: -10.273860931396484

Token 211: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023604966700077057
    2. ' ' → logprob: -3.7736048698425293
    3. 'x' → logprob: -9.023605346679688
    4. ' x' → logprob: -9.273605346679688
    5. ' ' → logprob: -10.398605346679688
    6. 'd' → logprob: -10.648605346679688
    7. ' dix' → logprob: -11.023605346679688
    8. '
' → logprob: -11.398605346679688
    9. '1' → logprob: -11.523605346679688
    10. ')' → logprob: -11.773605346679688

Token 212: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005305619910359383
    2. ' ' → logprob: -5.255305767059326
    3. 'd' → logprob: -10.255305290222168
    4. 'x' → logprob: -11.630305290222168
    5. ' dix' → logprob: -12.005305290222168
    6. '1' → logprob: -12.505305290222168
    7. ' x' → logprob: -12.630305290222168
    8. ' ' → logprob: -12.630305290222168
    9. 'ten' → logprob: -13.005305290222168
    10. '5' → logprob: -13.130305290222168

Token 213: ' :' (ID: 712)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.45055702328681946
    2. ')' → logprob: -1.825556993484497
    3. '):' → logprob: -2.075556993484497
    4. ' and' → logprob: -3.450556993484497
    5. ' ),' → logprob: -3.575556993484497
    6. '):
' → logprob: -4.950557231903076
    7. ' ):' → logprob: -5.825557231903076
    8. ' )' → logprob: -6.200557231903076
    9. ':' → logprob: -6.450557231903076
    10. 'and' → logprob: -6.825557231903076

Token 214: ' aucune' (ID: 51173)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.21727149188518524
    2. ' ten' → logprob: -2.092271566390991
    3. 'x' → logprob: -2.967271566390991
    4. ' (' → logprob: -4.717271327972412
    5. '(x' → logprob: -5.717271327972412
    6. 'ten' → logprob: -5.967271327972412
    7. '10' → logprob: -6.092271327972412
    8. ')' → logprob: -6.717271327972412
    9. ' ' → logprob: -7.092271327972412
    10. '(' → logprob: -7.592271327972412

Token 215: ' unité' (ID: 181741)
  Prédit: ' unité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unité' → logprob: -0.8394282460212708
    2. ')' → logprob: -2.089428186416626
    3. '10' → logprob: -2.839428186416626
    4. '   ' → logprob: -3.589428186416626
    5. ' addition' → logprob: -3.714428186416626
    6. '%' → logprob: -3.839428186416626
    7. ' ' → logprob: -3.964428186416626
    8. 'rem' → logprob: -4.089428424835205
    9. 'mod' → logprob: -4.089428424835205
    10. ' modification' → logprob: -4.589428424835205

Token 216: ' restante' (ID: 130202)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.43957000970840454
    2. ' à' → logprob: -1.9395699501037598
    3. ' ),' → logprob: -2.3145699501037598
    4. ')' → logprob: -3.3145699501037598
    5. ' ' → logprob: -3.5645699501037598
    6. ' n' → logprob: -4.18956995010376
    7. ' ou' → logprob: -5.06456995010376
    8. '   ' → logprob: -5.43956995010376
    9. 's' → logprob: -5.93956995010376
    10. ' or' → logprob: -5.93956995010376

Token 217: ' après' (ID: 16460)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.056133050471544266
    2. ' ),' → logprob: -3.5561330318450928
    3. '):' → logprob: -4.306133270263672
    4. ')' → logprob: -4.931133270263672
    5. ' and' → logprob: -6.681133270263672
    6. ',' → logprob: -6.681133270263672
    7. '):
' → logprob: -7.306133270263672
    8. ' or' → logprob: -7.806133270263672
    9. 'and' → logprob: -8.306133270263672
    10. ' ' → logprob: -8.681133270263672

Token 218: ' division' (ID: 21629)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6498843431472778
    2. 'division' → logprob: -2.1498842239379883
    3. ' division' → logprob: -2.2748842239379883
    4. ' x' → logprob: -2.5248842239379883
    5. 'la' → logprob: -2.7748842239379883
    6. 'x' → logprob: -3.7748842239379883
    7. 'div' → logprob: -3.7748842239379883
    8. ' ' → logprob: -4.149884223937988
    9. 'mod' → logprob: -4.649884223937988
    10. ')' → logprob: -4.774884223937988

Token 219: ' par' (ID: 686)
  Prédit: ' ),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ),' → logprob: -0.6500034928321838
    2. '),' → logprob: -0.7750034928321838
    3. ' par' → logprob: -4.525003433227539
    4. ')' → logprob: -5.775003433227539
    5. ' )' → logprob: -6.650003433227539
    6. 'par' → logprob: -7.150003433227539
    7. ' ),
' → logprob: -8.150003433227539
    8. '   ' → logprob: -8.400003433227539
    9. '#' → logprob: -8.900003433227539
    10. ' by' → logprob: -9.525003433227539

Token 220: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0890083983540535
    2. ' ' → logprob: -2.464008331298828
    3. '   ' → logprob: -11.214008331298828
    4. 'd' → logprob: -11.464008331298828
    5. ' ' → logprob: -11.839008331298828
    6. ' x' → logprob: -12.089008331298828
    7. ' dix' → logprob: -12.089008331298828
    8. '100' → logprob: -12.089008331298828
    9. 'x' → logprob: -12.339008331298828
    10. '  ' → logprob: -12.964008331298828

Token 221: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04859565943479538
    2. ' ' → logprob: -3.048595666885376
    3. ')' → logprob: -13.798595428466797
    4. 'x' → logprob: -14.048595428466797
    5. ' ' → logprob: -14.048595428466797
    6. ' x' → logprob: -14.111095428466797
    7. '```' → logprob: -14.236095428466797
    8. '100' → logprob: -14.361095428466797
    9. '   ' → logprob: -14.423595428466797
    10. 'd' → logprob: -14.986095428466797

Token 222: ')
' (ID: 446)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.09113975614309311
    2. ')' → logprob: -2.966139793395996
    3. '):' → logprob: -3.591139793395996
    4. '):
' → logprob: -5.466139793395996
    5. ' ),' → logprob: -5.966139793395996
    6. ',' → logprob: -8.091139793395996
    7. ' or' → logprob: -8.341139793395996
    8. ' and' → logprob: -9.216139793395996
    9. ':' → logprob: -9.216139793395996
    10. '   ' → logprob: -9.341139793395996

Token 223: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09497035294771194
    2. 'if' → logprob: -2.844970464706421
    3. ' ans' → logprob: -4.094970226287842
    4. 'print' → logprob: -5.844970226287842
    5. '(ans' → logprob: -6.344970226287842
    6. ' if' → logprob: -6.344970226287842
    7. '10' → logprob: -6.719970226287842
    8. ':' → logprob: -6.719970226287842
    9. 'res' → logprob: -7.094970226287842
    10. 'x' → logprob: -7.344970226287842

Token 224: ' alors' (ID: 17971)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.30838724970817566
    2. ' ans' → logprob: -1.808387279510498
    3. 'if' → logprob: -2.933387279510498
    4. ' if' → logprob: -4.183387279510498
    5. 'print' → logprob: -4.808387279510498
    6. '10' → logprob: -5.433387279510498
    7. '(ans' → logprob: -6.183387279510498
    8. ')' → logprob: -6.183387279510498
    9. 'x' → logprob: -6.558387279510498
    10. ',' → logprob: -6.558387279510498

Token 225: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0756201520562172
    2. 'ans' → logprob: -2.825620174407959
    3. 'print' → logprob: -5.075620174407959
    4. ' print' → logprob: -5.200620174407959
    5. ' x' → logprob: -7.450620174407959
    6. '   ' → logprob: -8.0756196975708
    7. 'x' → logprob: -8.3256196975708
    8. '(ans' → logprob: -8.4506196975708
    9. '10' → logprob: -8.7006196975708
    10. ' ' → logprob: -9.5756196975708

Token 226: ' prend' (ID: 37463)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002489214763045311
    2. '=' → logprob: -6.00248908996582
    3. 's' → logprob: -12.12748908996582
    4. ',' → logprob: -12.50248908996582
    5. ' ' → logprob: -13.12748908996582
    6. ' +=' → logprob: -14.50248908996582
    7. '1' → logprob: -15.50248908996582
    8. ' ' → logprob: -15.50248908996582
    9. ' is' → logprob: -15.62748908996582
    10. '<|end|>' → logprob: -15.62748908996582

Token 227: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0900896787643433
    2. '10' → logprob: -1.3400896787643433
    3. ' x' → logprob: -1.4650896787643433
    4. 'x' → logprob: -2.715089797973633
    5. ' =' → logprob: -3.090089797973633
    6. '0' → logprob: -3.965089797973633
    7. '=' → logprob: -4.715089797973633
    8. '1' → logprob: -5.090089797973633
    9. ' la' → logprob: -5.090089797973633
    10. '100' → logprob: -6.215089797973633

Token 228: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7903802990913391
    2. '0' → logprob: -1.1653802394866943
    3. '10' → logprob: -2.1653802394866943
    4. 'x' → logprob: -2.6653802394866943
    5. 'value' → logprob: -3.6653802394866943
    6. ' x' → logprob: -4.665380477905273
    7. ' ' → logprob: -5.540380477905273
    8. ' valeur' → logprob: -5.790380477905273
    9. '1' → logprob: -5.915380477905273
    10. 'd' → logprob: -7.415380477905273

Token 229: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.941161036491394
    2. '10' → logprob: -1.441161036491394
    3. ' x' → logprob: -1.941161036491394
    4. '0' → logprob: -2.0661611557006836
    5. 'x' → logprob: -2.4411611557006836
    6. ' ten' → logprob: -5.316161155700684
    7. 'ten' → logprob: -5.691161155700684
    8. '1' → logprob: -5.816161155700684
    9. '100' → logprob: -6.566161155700684
    10. ' (' → logprob: -6.816161155700684

Token 230: ' x' (ID: 1215)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.18653638660907745
    2. ' ' → logprob: -2.5615363121032715
    3. '0' → logprob: -3.0615363121032715
    4. 'ten' → logprob: -3.5615363121032715
    5. 'x' → logprob: -4.8115363121032715
    6. ' x' → logprob: -5.1865363121032715
    7. ' ten' → logprob: -5.6865363121032715
    8. '100' → logprob: -8.06153678894043
    9. '1' → logprob: -8.81153678894043
    10. '   ' → logprob: -11.06153678894043

Token 231: ' directement' (ID: 52317)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07670170813798904
    2. 'if' → logprob: -3.2017016410827637
    3. ' =' → logprob: -3.5767016410827637
    4. '
' → logprob: -5.576701641082764
    5. '=' → logprob: -7.951701641082764
    6. 'else' → logprob: -8.076702117919922
    7. 'ans' → logprob: -8.326702117919922
    8. ' else' → logprob: -8.701702117919922
    9. '   ' → logprob: -9.451702117919922
    10. ' //' → logprob: -10.076702117919922

Token 232: ' car' (ID: 1669)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2799905836582184
    2. 'ans' → logprob: -1.529990553855896
    3. 'if' → logprob: -3.7799906730651855
    4. ' if' → logprob: -6.2799906730651855
    5. ' ans' → logprob: -6.7799906730651855
    6. ' =' → logprob: -7.4049906730651855
    7. '  
' → logprob: -8.279990196228027
    8. '   ' → logprob: -8.529990196228027
    9. '
' → logprob: -8.529990196228027
    10. '(ans' → logprob: -9.279990196228027

Token 233: ' il' (ID: 1793)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.21689528226852417
    2. 'x' → logprob: -1.716895341873169
    3. '0' → logprob: -4.59189510345459
    4. ' ' → logprob: -5.71689510345459
    5. '10' → logprob: -6.71689510345459
    6. ' (' → logprob: -8.84189510345459
    7. ' ans' → logprob: -9.46689510345459
    8. '1' → logprob: -9.59189510345459
    9. ' on' → logprob: -9.59189510345459
    10. '   ' → logprob: -9.59189510345459

Token 234: ' est' (ID: 893)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11764148622751236
    2. ' est' → logprob: -2.6176414489746094
    3. 'n' → logprob: -4.117641448974609
    4. ' is' → logprob: -5.367641448974609
    5. '%' → logprob: -5.742641448974609
    6. ' ne' → logprob: -5.742641448974609
    7. ' ' → logprob: -6.742641448974609
    8. 's' → logprob: -6.742641448974609
    9. ' reste' → logprob: -6.867641448974609
    10. ' faut' → logprob: -7.117641448974609

Token 235: ' déjà' (ID: 21229)
  Prédit: ' déjà'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déjà' → logprob: -0.4631810784339905
    2. 'dé' → logprob: -1.2131810188293457
    3. ' divisible' → logprob: -3.8381810188293457
    4. 'le' → logprob: -4.463181018829346
    5. 'exact' → logprob: -4.713181018829346
    6. ' le' → logprob: -4.713181018829346
    7. ' dé' → logprob: -5.463181018829346
    8. 'd' → logprob: -5.463181018829346
    9. ' un' → logprob: -5.963181018829346
    10. ' already' → logprob: -6.463181018829346

Token 236: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5931503772735596
    2. ' un' → logprob: -1.7181503772735596
    3. ' divisible' → logprob: -2.4681503772735596
    4. 'multiple' → logprob: -2.8431503772735596
    5. 'le' → logprob: -2.9681503772735596
    6. 'div' → logprob: -3.2181503772735596
    7. ' multiple' → logprob: -4.7181501388549805
    8. 'x' → logprob: -4.9681501388549805
    9. 'multip' → logprob: -4.9681501388549805
    10. ' le' → logprob: -5.8431501388549805

Token 237: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.1819799691438675
    2. ' multiple' → logprob: -1.806980013847351
    3. 'multip' → logprob: -6.306980133056641
    4. '10' → logprob: -9.93198013305664
    5. 'mult' → logprob: -9.93198013305664
    6. ' ' → logprob: -10.18198013305664
    7. 'nombre' → logprob: -10.30698013305664
    8. 'ultiple' → logprob: -10.55698013305664
    9. 'x' → logprob: -11.05698013305664
    10. '_multiple' → logprob: -11.11948013305664

Token 238: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.05522865429520607
    2. 'de' → logprob: -3.8052287101745605
    3. '   ' → logprob: -4.4302287101745605
    4. '10' → logprob: -5.4302287101745605
    5. ' of' → logprob: -5.5552287101745605
    6. '_de' → logprob: -5.6802287101745605
    7. ' =' → logprob: -6.0552287101745605
    8. '=' → logprob: -6.1802287101745605
    9. ' ' → logprob: -6.9302287101745605
    10. ' x' → logprob: -7.5552287101745605

Token 239: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.029842009767889977
    2. ' ' → logprob: -3.529841899871826
    3. 'd' → logprob: -10.779842376708984
    4. ' x' → logprob: -11.029842376708984
    5. 'x' → logprob: -11.529842376708984
    6. ' dix' → logprob: -11.529842376708984
    7. '1' → logprob: -11.779842376708984
    8. ' ' → logprob: -11.904842376708984
    9. '```' → logprob: -12.279842376708984
    10. 'ten' → logprob: -13.092342376708984

Token 240: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0017123052384704351
    2. ' ' → logprob: -6.376712322235107
    3. 'd' → logprob: -12.37671184539795
    4. '1' → logprob: -13.37671184539795
    5. 'ten' → logprob: -14.00171184539795
    6. '0' → logprob: -14.00171184539795
    7. '```' → logprob: -14.12671184539795
    8. 'x' → logprob: -14.37671184539795
    9. ' ' → logprob: -15.12671184539795
    10. 'l' → logprob: -15.37671184539795

Token 241: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09499821066856384
    2. 'ans' → logprob: -2.7199981212615967
    3. 'else' → logprob: -4.844998359680176
    4. ' =' → logprob: -5.344998359680176
    5. ' ans' → logprob: -5.344998359680176
    6. 'if' → logprob: -6.094998359680176
    7. ' if' → logprob: -6.969998359680176
    8. '    
' → logprob: -7.094998359680176
    9. '	ans' → logprob: -7.594998359680176
    10. '_ans' → logprob: -7.594998359680176

Token 242: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03723381832242012
    2. 'if' → logprob: -3.412233829498291
    3. '
' → logprob: -5.787233829498291
    4. ' ans' → logprob: -8.287233352661133
    5. ' if' → logprob: -9.412233352661133
    6. '   ' → logprob: -9.912233352661133
    7. '	ans' → logprob: -10.662233352661133
    8. '(ans' → logprob: -10.787233352661133
    9. 'x' → logprob: -11.537233352661133
    10. '#' → logprob: -11.537233352661133

Token 243: ' Sinon' (ID: 154924)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08031059056520462
    2. 'if' → logprob: -2.580310583114624
    3. ' ans' → logprob: -7.455310821533203
    4. ' if' → logprob: -7.580310821533203
    5. '
' → logprob: -8.330310821533203
    6. '   ' → logprob: -10.830310821533203
    7. '(ans' → logprob: -11.455310821533203
    8. 'else' → logprob: -11.580310821533203
    9. ' 
' → logprob: -11.830310821533203
    10. 'elif' → logprob: -11.830310821533203

Token 244: ',' (ID: 11)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.20470111072063446
    2. ':' → logprob: -2.2047011852264404
    3. '   ' → logprob: -3.0797011852264404
    4. ':
' → logprob: -4.079700946807861
    5. ' :
' → logprob: -5.829700946807861
    6. ' :' → logprob: -5.954700946807861
    7. ' x' → logprob: -6.454700946807861
    8. 'ans' → logprob: -6.579700946807861
    9. ' 
' → logprob: -7.204700946807861
    10. '
' → logprob: -7.579700946807861

Token 245: ' on' (ID: 402)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0026030067820101976
    2. 'ans' → logprob: -6.127603054046631
    3. '   ' → logprob: -8.502602577209473
    4. ' x' → logprob: -9.502602577209473
    5. '	ans' → logprob: -9.502602577209473
    6. '(ans' → logprob: -10.627602577209473
    7. 'x' → logprob: -10.752602577209473
    8. ' ' → logprob: -12.502602577209473
    9. '    ' → logprob: -12.627602577209473
    10. '_ans' → logprob: -12.752602577209473

Token 246: ' div' (ID: 4223)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.09305759519338608
    2. '   ' → logprob: -3.093057632446289
    3. 'ans' → logprob: -4.218057632446289
    4. ' x' → logprob: -5.218057632446289
    5. ' #' → logprob: -5.718057632446289
    6. ' ajoute' → logprob: -5.718057632446289
    7. 'x' → logprob: -5.968057632446289
    8. ' +=' → logprob: -6.093057632446289
    9. ' continue' → logprob: -6.468057632446289
    10. '    ' → logprob: -6.718057632446289

Token 247: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.25880780816078186
    2. 'ide' → logprob: -1.8838077783584595
    3. '   ' → logprob: -3.508807897567749
    4. 'x' → logprob: -4.25880765914917
    5. 'isible' → logprob: -4.75880765914917
    6. 'ision' → logprob: -5.75880765914917
    7. 'ent' → logprob: -5.75880765914917
    8. 'iding' → logprob: -6.00880765914917
    9. 'ides' → logprob: -6.00880765914917
    10. 'er' → logprob: -6.25880765914917

Token 248: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25241008400917053
    2. 'x' → logprob: -1.5024100542068481
    3. ' (' → logprob: -8.252409934997559
    4. '(x' → logprob: -8.752409934997559
    5. '(' → logprob: -10.377409934997559
    6. ' ' → logprob: -10.877409934997559
    7. 'int' → logprob: -13.127409934997559
    8. ',' → logprob: -13.502409934997559
    9. '(
' → logprob: -13.627409934997559
    10. ')' → logprob: -13.752409934997559

Token 249: ' par' (ID: 686)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5444065928459167
    2. 'x' → logprob: -1.6694066524505615
    3. ' //' → logprob: -2.7944066524505615
    4. ' ' → logprob: -2.7944066524505615
    5. '   ' → logprob: -2.9194066524505615
    6. ' #' → logprob: -3.4194066524505615
    7. '#' → logprob: -4.794406414031982
    8. ' (' → logprob: -5.294406414031982
    9. ' =' → logprob: -6.169406414031982
    10. '  ' → logprob: -6.794406414031982

Token 250: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.42871055006980896
    2. ' ' → logprob: -1.0537105798721313
    3. ' x' → logprob: -12.3037109375
    4. ' ' → logprob: -13.1787109375
    5. 'x' → logprob: -13.4287109375
    6. '100' → logprob: -14.1787109375
    7. '1' → logprob: -15.4287109375
    8. '  ' → logprob: -15.4287109375
    9. ' ten' → logprob: -16.0537109375
    10. 'd' → logprob: -16.1787109375

Token 251: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.016037186607718468
    2. ' ' → logprob: -4.1410369873046875
    3. ' ' → logprob: -13.641036987304688
    4. 'd' → logprob: -15.016036987304688
    5. ' dix' → logprob: -15.141036987304688
    6. '  ' → logprob: -15.641036987304688
    7. 'x' → logprob: -15.641036987304688
    8. 'ten' → logprob: -16.016036987304688
    9. ' x' → logprob: -16.016036987304688
    10. '```' → logprob: -16.266036987304688

Token 252: ' (' (ID: 350)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.17287853360176086
    2. ')' → logprob: -2.7978785037994385
    3. ' ' → logprob: -3.2978785037994385
    4. ' //
' → logprob: -3.4228785037994385
    5. ' )' → logprob: -4.297878742218018
    6. '   ' → logprob: -5.922878742218018
    7. '//' → logprob: -6.047878742218018
    8. 'x' → logprob: -6.172878742218018
    9. ' x' → logprob: -6.172878742218018
    10. ' #' → logprob: -6.922878742218018

Token 253: 'division' (ID: 50596)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4994170367717743
    2. ' ' → logprob: -1.3744170665740967
    3. ')' → logprob: -2.3744170665740967
    4. ' )' → logprob: -3.7494170665740967
    5. ' x' → logprob: -4.124416828155518
    6. 'x' → logprob: -5.499416828155518
    7. '   ' → logprob: -7.499416828155518
    8. ' ),' → logprob: -7.874416828155518
    9. '),' → logprob: -7.999416828155518
    10. ' //' → logprob: -8.374417304992676

Token 254: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.5984947085380554
    2. ' )' → logprob: -1.5984947681427002
    3. ')' → logprob: -1.8484947681427002
    4. ' //' → logprob: -2.5984947681427
    5. '   ' → logprob: -5.098494529724121
    6. ' ' → logprob: -6.223494529724121
    7. ' entier' → logprob: -6.473494529724121
    8. ' ' → logprob: -7.098494529724121
    9. 'integer' → logprob: -7.223494529724121
    10. ' ,' → logprob: -7.473494529724121

Token 255: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10431891679763794
    2. ' )' → logprob: -2.354318857192993
    3. '),' → logprob: -6.604319095611572
    4. ',' → logprob: -6.729319095611572
    5. ' //' → logprob: -7.229319095611572
    6. ' ),' → logprob: -7.979319095611572
    7. ')
' → logprob: -9.354318618774414
    8. '//' → logprob: -9.854318618774414
    9. ')//' → logprob: -9.979318618774414
    10. ' ,' → logprob: -10.104318618774414

Token 256: ' int' (ID: 677)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5223463773727417
    2. 'x' → logprob: -2.1473464965820312
    3. '//' → logprob: -2.5223464965820312
    4. ' //' → logprob: -2.6473464965820312
    5. '10' → logprob: -2.8973464965820312
    6. ')' → logprob: -3.2723464965820312
    7. ' )' → logprob: -3.2723464965820312
    8. ' ' → logprob: -5.022346496582031
    9. ' ' → logprob: -8.022346496582031
    10. '   ' → logprob: -9.022346496582031

Token 257: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6693466305732727
    2. '()' → logprob: -1.419346570968628
    3. ')' → logprob: -1.919346570968628
    4. '())' → logprob: -2.919346570968628
    5. '(' → logprob: -3.169346570968628
    6. 'div' → logprob: -6.794346809387207
    7. 'x' → logprob: -7.669346809387207
    8. 'division' → logprob: -7.919346809387207
    9. '()),' → logprob: -8.169346809387207
    10. ' )' → logprob: -8.294346809387207

Token 258: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8893199563026428
    2. ' //' → logprob: -1.264319896697998
    3. '//' → logprob: -1.389319896697998
    4. ' /' → logprob: -3.764319896697998
    5. '/' → logprob: -3.889319896697998
    6. '()' → logprob: -5.014319896697998
    7. ')//' → logprob: -5.389319896697998
    8. ' ' → logprob: -7.139319896697998
    9. ' )' → logprob: -7.514319896697998
    10. '(x' → logprob: -8.014320373535156

Token 259: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0024758970830589533
    2. ' ' → logprob: -6.002475738525391
    3. ')' → logprob: -15.87747573852539
    4. ' ' → logprob: -17.12747573852539
    5. '  ' → logprob: -19.37747573852539
    6. '```' → logprob: -19.62747573852539
    7. '۱۰' → logprob: -20.50247573852539
    8. '
' → logprob: -20.87747573852539
    9. '1' → logprob: -21.00247573852539
    10. '>' → logprob: -21.12747573852539

Token 260: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. ')' → logprob: -16.00037956237793
    4. '```' → logprob: -17.62537956237793
    5. '  ' → logprob: -18.25037956237793
    6. ' ' → logprob: -18.50037956237793
    7. 'x' → logprob: -18.75037956237793
    8. '(' → logprob: -18.87537956237793
    9. '1' → logprob: -19.37537956237793
    10. '   ' → logprob: -19.50037956237793

Token 261: ')),' (ID: 12098)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38773155212402344
    2. '))' → logprob: -1.1377315521240234
    3. '))
' → logprob: -8.512731552124023
    4. ' )' → logprob: -8.637731552124023
    5. ')))' → logprob: -8.762731552124023
    6. ' ))' → logprob: -9.262731552124023
    7. ')+' → logprob: -9.387731552124023
    8. ')),' → logprob: -9.887731552124023
    9. ')
' → logprob: -10.137731552124023
    10. '),' → logprob: -11.762731552124023

Token 262: ' puis' (ID: 18766)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9470012187957764
    2. ' ans' → logprob: -1.0720012187957764
    3. ' puis' → logprob: -2.1970012187957764
    4. 'x' → logprob: -3.1970012187957764
    5. '10' → logprob: -3.5720012187957764
    6. 'ans' → logprob: -4.1970014572143555
    7. ' et' → logprob: -4.4470014572143555
    8. ' ' → logprob: -4.4470014572143555
    9. ' then' → logprob: -4.9470014572143555
    10. ' ten' → logprob: -5.0720014572143555

Token 263: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5481892824172974
    2. 'on' → logprob: -1.2981892824172974
    3. ' x' → logprob: -2.798189163208008
    4. '10' → logprob: -3.423189163208008
    5. 'x' → logprob: -3.798189163208008
    6. ' ajoute' → logprob: -5.048189163208008
    7. ' (' → logprob: -5.423189163208008
    8. 'ans' → logprob: -5.423189163208008
    9. ' ' → logprob: -5.673189163208008
    10. ' ans' → logprob: -6.423189163208008

Token 264: ' multipl' (ID: 44269)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.5088788270950317
    2. '10' → logprob: -1.7588788270950317
    3. '+' → logprob: -1.8838788270950317
    4. ' multipl' → logprob: -2.008878707885742
    5. 'mult' → logprob: -3.008878707885742
    6. 'multiply' → logprob: -3.008878707885742
    7. 'add' → logprob: -3.133878707885742
    8. 'x' → logprob: -3.883878707885742
    9. ' ajoute' → logprob: -4.133878707885742
    10. ' +=' → logprob: -4.133878707885742

Token 265: 'ie' (ID: 396)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -1.3419699668884277
    2. 'e' → logprob: -2.0919699668884277
    3. 'er' → logprob: -2.2169699668884277
    4. 'ipl' → logprob: -2.5919699668884277
    5. 'ied' → logprob: -2.7169699668884277
    6. 'ie' → logprob: -3.0919699668884277
    7. '=' → logprob: -3.3419699668884277
    8. 'ier' → logprob: -3.3419699668884277
    9. 'ies' → logprob: -3.7169699668884277
    10. '*' → logprob: -3.7169699668884277

Token 266: ' ce' (ID: 2357)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.98859041929245
    2. ' par' → logprob: -0.98859041929245
    3. '10' → logprob: -1.9885904788970947
    4. 'par' → logprob: -3.2385904788970947
    5. '(x' → logprob: -3.4885904788970947
    6. '(ans' → logprob: -4.238590240478516
    7. ' ans' → logprob: -4.613590240478516
    8. ' (' → logprob: -4.613590240478516
    9. 'ans' → logprob: -5.238590240478516
    10. ' ' → logprob: -6.488590240478516

Token 267: ' résultat' (ID: 62556)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.833914875984192
    2. ' ans' → logprob: -1.958914875984192
    3. ' par' → logprob: -2.0839147567749023
    4. ' *' → logprob: -2.0839147567749023
    5. ' ' → logprob: -2.3339147567749023
    6. ')' → logprob: -2.4589147567749023
    7. ' x' → logprob: -2.4589147567749023
    8. '*' → logprob: -3.2089147567749023
    9. 'ans' → logprob: -3.7089147567749023
    10. 'x' → logprob: -3.9589147567749023

Token 268: ' par' (ID: 686)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.5448569059371948
    2. ' +' → logprob: -1.6698569059371948
    3. '   ' → logprob: -2.2948570251464844
    4. ' par' → logprob: -2.2948570251464844
    5. '+' → logprob: -2.5448570251464844
    6. '*' → logprob: -3.0448570251464844
    7. ' ' → logprob: -3.1698570251464844
    8. ')' → logprob: -3.1698570251464844
    9. ' *' → logprob: -3.2948570251464844
    10. '(' → logprob: -3.4198570251464844

Token 269: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.007606866303831339
    2. ' ' → logprob: -4.8826069831848145
    3. ' ' → logprob: -15.132606506347656
    4. '```' → logprob: -15.882606506347656
    5. '  ' → logprob: -16.132606506347656
    6. '   ' → logprob: -16.632606506347656
    7. '
' → logprob: -17.007606506347656
    8. ' diez' → logprob: -17.132606506347656
    9. '1' → logprob: -17.632606506347656
    10. '۱۰' → logprob: -17.757606506347656

Token 270: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '  ' → logprob: -17.750059127807617
    4. '   ' → logprob: -17.750059127807617
    5. '```' → logprob: -18.500059127807617
    6. ' ' → logprob: -18.625059127807617
    7. '100' → logprob: -18.625059127807617
    8. '
' → logprob: -19.187559127807617
    9. '۱۰' → logprob: -19.187559127807617
    10. '1' → logprob: -19.250059127807617

Token 271: ' 
' (ID: 793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20328442752361298
    2. '*' → logprob: -2.328284502029419
    3. 'ans' → logprob: -3.578284502029419
    4. ' +' → logprob: -3.953284502029419
    5. ' ans' → logprob: -4.32828426361084
    6. '   ' → logprob: -4.95328426361084
    7. 'x' → logprob: -4.95328426361084
    8. ',' → logprob: -6.32828426361084
    9. ')' → logprob: -6.45328426361084
    10. ' x' → logprob: -6.57828426361084

Token 272: '#' (ID: 2)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.40225908160209656
    2. '+' → logprob: -1.402259111404419
    3. '   ' → logprob: -4.02725887298584
    4. ' ans' → logprob: -4.15225887298584
    5. 'ans' → logprob: -4.65225887298584
    6. '+
' → logprob: -5.15225887298584
    7. ' if' → logprob: -5.27725887298584
    8. 'if' → logprob: -5.40225887298584
    9. ' +
' → logprob: -5.52725887298584
    10. ')' → logprob: -5.65225887298584

Token 273: ' pour' (ID: 1930)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20455849170684814
    2. '+' → logprob: -1.7045584917068481
    3. '   ' → logprob: -6.954558372497559
    4. ' plus' → logprob: -7.329558372497559
    5. ' ans' → logprob: -8.079558372497559
    6. ' ' → logprob: -8.704558372497559
    7. ' +
' → logprob: -8.954558372497559
    8. ' if' → logprob: -8.954558372497559
    9. ',' → logprob: -9.204558372497559
    10. 'plus' → logprob: -9.579558372497559

Token 274: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.1577696055173874
    2. ' x' → logprob: -3.4077696800231934
    3. 'x' → logprob: -3.6577696800231934
    4. '10' → logprob: -4.157769680023193
    5. ' arr' → logprob: -4.282769680023193
    6. ' garantir' → logprob: -4.907769680023193
    7. 'arr' → logprob: -5.032769680023193
    8. ' créer' → logprob: -5.532769680023193
    9. ' align' → logprob: -5.532769680023193
    10. ' récupérer' → logprob: -5.907769680023193

Token 275: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.918411135673523
    2. ' le' → logprob: -1.168411135673523
    3. ' l' → logprob: -2.4184112548828125
    4. ' x' → logprob: -2.5434112548828125
    5. 'le' → logprob: -3.2934112548828125
    6. ' une' → logprob: -3.7934112548828125
    7. ' la' → logprob: -3.9184112548828125
    8. 'x' → logprob: -4.5434112548828125
    9. ' the' → logprob: -4.7934112548828125
    10. ' ' → logprob: -4.7934112548828125

Token 276: ' dizaine' (ID: 162763)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.9891491532325745
    2. 'plus' → logprob: -1.1141490936279297
    3. 'prem' → logprob: -1.6141490936279297
    4. ' multiple' → logprob: -2.9891490936279297
    5. 'pro' → logprob: -3.3641490936279297
    6. ' plus' → logprob: -4.86414909362793
    7. 'nombre' → logprob: -5.36414909362793
    8. 'multip' → logprob: -7.11414909362793
    9. ' premier' → logprob: -7.36414909362793
    10. 'prox' → logprob: -7.48914909362793

Token 277: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.17761513590812683
    2. ' =' → logprob: -1.9276151657104492
    3. '=' → logprob: -4.677615165710449
    4. ' ans' → logprob: -5.302615165710449
    5. '10' → logprob: -7.302615165710449
    6. '*' → logprob: -7.552615165710449
    7. 's' → logprob: -7.802615165710449
    8. '(ans' → logprob: -7.802615165710449
    9. '_ans' → logprob: -8.55261516571045
    10. '   ' → logprob: -9.30261516571045

Token 278: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.048766426742076874
    2. ' plus' → logprob: -3.6737663745880127
    3. 'pl' → logprob: -5.173766613006592
    4. 's' → logprob: -5.423766613006592
    5. '_plus' → logprob: -5.423766613006592
    6. 'ss' → logprob: -5.923766613006592
    7. 'Plus' → logprob: -6.173766613006592
    8. '+' → logprob: -7.298766613006592
    9. 'su' → logprob: -7.923766613006592
    10. '   ' → logprob: -8.298766136169434

Token 279: ' proche' (ID: 61089)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.0014039215166121721
    2. ' proche' → logprob: -7.12640380859375
    3. 'prox' → logprob: -8.00140380859375
    4. 'près' → logprob: -9.12640380859375
    5. 'import' → logprob: -9.12640380859375
    6. '_pro' → logprob: -11.12640380859375
    7. ' proches' → logprob: -11.62640380859375
    8. 'plus' → logprob: -12.12640380859375
    9. 'pr' → logprob: -12.37640380859375
    10. ' prox' → logprob: -13.62640380859375

Token 280: ' inf' (ID: 5603)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2443934977054596
    2. ' -' → logprob: -1.8693934679031372
    3. ' ans' → logprob: -2.9943935871124268
    4. ',' → logprob: -6.369393348693848
    5. '10' → logprob: -6.369393348693848
    6. '-' → logprob: -6.494393348693848
    7. 'x' → logprob: -6.744393348693848
    8. ' +' → logprob: -6.744393348693848
    9. '(ans' → logprob: -6.744393348693848
    10. '*' → logprob: -6.994393348693848

Token 281: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.0015786595176905394
    2. 'érieur' → logprob: -6.5015788078308105
    3. 'érie' → logprob: -11.001578330993652
    4. 'erie' → logprob: -11.251578330993652
    5. 'é' → logprob: -11.501578330993652
    6. 'érieurs' → logprob: -11.501578330993652
    7. 'érieures' → logprob: -11.876578330993652
    8. 'è' → logprob: -12.376578330993652
    9. 'éri' → logprob: -12.876578330993652
    10. '#' → logprob: -12.876578330993652

Token 282: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.24614278972148895
    2. ')' → logprob: -2.246142864227295
    3. ' ans' → logprob: -3.371142864227295
    4. ',' → logprob: -3.746142864227295
    5. 'x' → logprob: -4.121142864227295
    6. ' ' → logprob: -4.496142864227295
    7. '(ans' → logprob: -4.871142864227295
    8. '   ' → logprob: -4.996142864227295
    9. ' )' → logprob: -6.371142864227295
    10. '_ans' → logprob: -6.621142864227295

Token 283: ' puis' (ID: 18766)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2384706735610962
    2. ' ans' → logprob: -1.2384706735610962
    3. 'x' → logprob: -1.6134706735610962
    4. ' x' → logprob: -2.8634705543518066
    5. ')' → logprob: -3.1134705543518066
    6. '   ' → logprob: -3.7384705543518066
    7. ' puis' → logprob: -3.9884705543518066
    8. ' and' → logprob: -4.113470554351807
    9. 'ens' → logprob: -4.488470554351807
    10. '10' → logprob: -5.113470554351807

Token 284: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1523926705121994
    2. 'on' → logprob: -2.777392625808716
    3. '+' → logprob: -3.402392625808716
    4. ' ans' → logprob: -3.777392625808716
    5. '10' → logprob: -4.402392864227295
    6. ' +' → logprob: -5.652392864227295
    7. 'ans' → logprob: -5.777392864227295
    8. ' plus' → logprob: -6.902392864227295
    9. ' ' → logprob: -7.652392864227295
    10. ' x' → logprob: -7.777392864227295

Token 285: ' ajoute' (ID: 91611)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03444889932870865
    2. ' +' → logprob: -3.7844488620758057
    3. ' plus' → logprob: -5.659449100494385
    4. ' ajouter' → logprob: -6.284449100494385
    5. ' ajoute' → logprob: -6.659449100494385
    6. ' +=' → logprob: -6.659449100494385
    7. ' add' → logprob: -6.784449100494385
    8. '10' → logprob: -7.534449100494385
    9. ' ' → logprob: -7.784449100494385
    10. '+=' → logprob: -8.159448623657227

Token 286: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6158109903335571
    2. '(' → logprob: -1.2408109903335571
    3. 'ten' → logprob: -1.8658109903335571
    4. ' ' → logprob: -4.990810871124268
    5. ' (' → logprob: -5.115810871124268
    6. ' ten' → logprob: -5.865810871124268
    7. '   ' → logprob: -9.615811347961426
    8. '{' → logprob: -10.365811347961426
    9. '1' → logprob: -10.365811347961426
    10. '```' → logprob: -10.615811347961426

Token 287: '10' (ID: 702)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.556049644947052
    2. '10' → logprob: -1.4310495853424072
    3. '(' → logprob: -1.6810495853424072
    4. ' (' → logprob: -7.556049823760986
    5. ' ten' → logprob: -7.806049823760986
    6. ' ' → logprob: -8.681049346923828
    7. 'ans' → logprob: -9.306049346923828
    8. '   ' → logprob: -9.806049346923828
    9. '1' → logprob: -11.681049346923828
    10. '{' → logprob: -12.681049346923828

Token 288: ' pour' (ID: 1930)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.024025075137615204
    2. '-' → logprob: -3.8990249633789062
    3. ' ans' → logprob: -7.149024963378906
    4. '
' → logprob: -7.649024963378906
    5. 'ans' → logprob: -7.899024963378906
    6. ' if' → logprob: -8.149024963378906
    7. '#' → logprob: -8.524024963378906
    8. ' *' → logprob: -8.524024963378906
    9. '*(' → logprob: -8.524024963378906
    10. '-(' → logprob: -8.649024963378906

Token 289: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.05666632577776909
    2. ' atteindre' → logprob: -3.181666374206543
    3. 'ob' → logprob: -5.431666374206543
    4. ' arriver' → logprob: -6.181666374206543
    5. 'arr' → logprob: -6.556666374206543
    6. ''obtenir' → logprob: -6.931666374206543
    7. ' get' → logprob: -7.681666374206543
    8. ' avoir' → logprob: -7.681666374206543
    9. ' y' → logprob: -7.931666374206543
    10. ')' → logprob: -8.181666374206543

Token 290: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.23273321986198425
    2. ' le' → logprob: -2.8577332496643066
    3. ' the' → logprob: -3.3577332496643066
    4. ' l' → logprob: -3.4827332496643066
    5. 'the' → logprob: -3.6077332496643066
    6. '10' → logprob: -4.232733249664307
    7. ' (' → logprob: -4.857733249664307
    8. 'l' → logprob: -5.107733249664307
    9. 'le' → logprob: -5.232733249664307
    10. '(next' → logprob: -5.482733249664307

Token 291: ' dizaine' (ID: 162763)
  Prédit: ' multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.7899114489555359
    2. ' prochain' → logprob: -0.9149114489555359
    3. 'multiple' → logprob: -2.7899115085601807
    4. 'pro' → logprob: -3.0399115085601807
    5. ' next' → logprob: -4.164911270141602
    6. 'next' → logprob: -4.914911270141602
    7. ' prochaine' → logprob: -5.789911270141602
    8. ' suivant' → logprob: -6.164911270141602
    9. 'prox' → logprob: -6.539911270141602
    10. 'multip' → logprob: -6.914911270141602

Token 292: ' supérieure' (ID: 106336)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.3710342347621918
    2. ' -' → logprob: -2.3710341453552246
    3. 'ans' → logprob: -2.7460341453552246
    4. '   ' → logprob: -3.2460341453552246
    5. ' supérieure' → logprob: -3.7460341453552246
    6. ' *' → logprob: -4.121034145355225
    7. '*(' → logprob: -4.621034145355225
    8. '*' → logprob: -4.996034145355225
    9. 'next' → logprob: -5.121034145355225
    10. ' ' → logprob: -5.121034145355225

Token 293: ' suivante' (ID: 107439)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.27697932720184326
    2. '
' → logprob: -2.401979446411133
    3. ' ans' → logprob: -2.401979446411133
    4. '+' → logprob: -4.276979446411133
    5. ' +' → logprob: -4.401979446411133
    6. 'result' → logprob: -4.776979446411133
    7. 'if' → logprob: -5.026979446411133
    8. '(ans' → logprob: -5.026979446411133
    9. ' if' → logprob: -5.651979446411133
    10. ' =' → logprob: -6.026979446411133

Token 294: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004005145747214556
    2. '
' → logprob: -6.254004955291748
    3. ' ans' → logprob: -6.504004955291748
    4. 'if' → logprob: -8.004005432128906
    5. '(ans' → logprob: -8.629005432128906
    6. '_ans' → logprob: -11.004005432128906
    7. '	ans' → logprob: -11.254005432128906
    8. '10' → logprob: -11.754005432128906
    9. 'answer' → logprob: -12.504005432128906
    10. ' if' → logprob: -12.629005432128906

Token 295: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.35109636187553406
    2. 'if' → logprob: -1.2260963916778564
    3. '
' → logprob: -6.726096153259277
    4. ' if' → logprob: -7.101096153259277
    5. ' ans' → logprob: -8.101096153259277
    6. '(ans' → logprob: -8.601096153259277
    7. ' =' → logprob: -10.726096153259277
    8. '=
' → logprob: -10.726096153259277
    9. '=' → logprob: -10.726096153259277
    10. '#' → logprob: -11.476096153259277

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602296084165573
    2. '=' → logprob: -1.9102295637130737
    3. '=int' → logprob: -12.535229682922363
    4. ' =
' → logprob: -14.410229682922363
    5. '=

' → logprob: -14.535229682922363
    6. ' ' → logprob: -16.035228729248047
    7. '=
' → logprob: -16.035228729248047
    8. '=x' → logprob: -16.160228729248047
    9. 'x' → logprob: -16.285228729248047
    10. '＝' → logprob: -16.535228729248047

Token 297: ' x' (ID: 1215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6989830732345581
    2. '(x' → logprob: -1.198983073234558
    3. 'x' → logprob: -2.1989831924438477
    4. ' x' → logprob: -2.8239831924438477
    5. '((' → logprob: -4.573983192443848
    6. '10' → logprob: -5.073983192443848
    7. '(' → logprob: -5.323983192443848
    8. ' ' → logprob: -5.573983192443848
    9. ' ((' → logprob: -5.823983192443848
    10. '(int' → logprob: -6.573983192443848

Token 298: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48322004079818726
    2. 'if' → logprob: -1.108220100402832
    3. ' -' → logprob: -3.358220100402832
    4. '-' → logprob: -5.108220100402832
    5. '+' → logprob: -5.483220100402832
    6. '//' → logprob: -5.733220100402832
    7. '
' → logprob: -5.733220100402832
    8. ' +' → logprob: -6.733220100402832
    9. ' //' → logprob: -8.233220100402832
    10. ' ' → logprob: -10.233220100402832

Token 299: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6302082538604736
    2. ' (' → logprob: -1.5052082538604736
    3. ' x' → logprob: -1.7552082538604736
    4. 'x' → logprob: -2.6302082538604736
    5. '(' → logprob: -7.5052080154418945
    6. ' ' → logprob: -10.005208015441895
    7. ' ten' → logprob: -12.130208015441895
    8. '10' → logprob: -12.505208015441895
    9. ' ' → logprob: -13.130208015441895
    10. '%' → logprob: -13.755208015441895

Token 300: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0014227337669581175
    2. '(x' → logprob: -6.626422882080078
    3. ' x' → logprob: -9.251422882080078
    4. ' (' → logprob: -15.001422882080078
    5. '(' → logprob: -15.376422882080078
    6. '10' → logprob: -15.376422882080078
    7. '   ' → logprob: -17.376422882080078
    8. ' ' → logprob: -18.001422882080078
    9. ')x' → logprob: -18.001422882080078
    10. '	x' → logprob: -18.376422882080078

Token 301: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16026028990745544
    2. '%' → logprob: -1.9102603197097778
    3. ' ' → logprob: -10.785260200500488
    4. ')' → logprob: -11.285260200500488
    5. ' ' → logprob: -13.785260200500488
    6. ')%' → logprob: -14.160260200500488
    7. '   ' → logprob: -14.785260200500488
    8. '[' → logprob: -15.535260200500488
    9. ' %)' → logprob: -16.035261154174805
    10. ' )' → logprob: -16.160261154174805

Token 302: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1269291490316391
    2. ' ' → logprob: -2.1269290447235107
    3. '```' → logprob: -15.12692928314209
    4. '   ' → logprob: -15.37692928314209
    5. '  ' → logprob: -15.87692928314209
    6. ')' → logprob: -15.87692928314209
    7. '100' → logprob: -17.001928329467773
    8. ' ' → logprob: -17.189428329467773
    9. ' ten' → logprob: -17.564428329467773
    10. '0' → logprob: -17.564428329467773

Token 303: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '0' → logprob: -18.000017166137695
    4. '```' → logprob: -18.000017166137695
    5. '100' → logprob: -19.000017166137695
    6. '   ' → logprob: -19.375017166137695
    7. ')' → logprob: -19.750017166137695
    8. '  ' → logprob: -20.250017166137695
    9. '۱۰' → logprob: -20.750017166137695
    10. '1' → logprob: -21.125017166137695

Token 304: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03167194500565529
    2. ')==' → logprob: -3.5316720008850098
    3. '==' → logprob: -6.28167200088501
    4. ' ==' → logprob: -10.156671524047852
    5. ' )' → logprob: -11.531671524047852
    6. ')!=' → logprob: -14.906671524047852
    7. ')=' → logprob: -15.531671524047852
    8. ']==' → logprob: -16.28167152404785
    9. '```' → logprob: -17.53167152404785
    10. ')

' → logprob: -17.78167152404785

Token 305: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02326062321662903
    2. ' ==' → logprob: -3.7732605934143066
    3. ')==' → logprob: -11.898261070251465
    4. ')' → logprob: -12.648261070251465
    5. '==
' → logprob: -12.898261070251465
    6. '!=' → logprob: -13.898261070251465
    7. 'else' → logprob: -14.648261070251465
    8. ']==' → logprob: -15.273261070251465
    9. '=' → logprob: -15.398261070251465
    10. '()==' → logprob: -15.773261070251465

Token 306: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '=' → logprob: -18.375335693359375
    4. '00' → logprob: -19.000335693359375
    5. '   ' → logprob: -19.000335693359375
    6. '```' → logprob: -19.125335693359375
    7. '۰' → logprob: -19.812835693359375
    8. '==' → logprob: -20.000335693359375
    9. '  ' → logprob: -20.062835693359375
    10. '10' → logprob: -20.125335693359375

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '10' → logprob: -17.375036239624023
    4. '=' → logprob: -17.875036239624023
    5. '00' → logprob: -18.250036239624023
    6. '   ' → logprob: -18.375036239624023
    7. '```' → logprob: -18.562536239624023
    8. '۰' → logprob: -18.875036239624023
    9. '<|end|>' → logprob: -19.062536239624023
    10. '  ' → logprob: -19.562536239624023

Token 308: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.061967913061380386
    2. ' else' → logprob: -2.8119678497314453
    3. '	else' → logprob: -16.436967849731445
    4. '+' → logprob: -17.186967849731445
    5. '   ' → logprob: -17.436967849731445
    6. '_else' → logprob: -17.686967849731445
    7. ' ' → logprob: -17.936967849731445
    8. '
' → logprob: -18.061967849731445
    9. '

' → logprob: -18.186967849731445
    10. ' ' → logprob: -18.311967849731445

Token 309: ' int' (ID: 677)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.588349461555481
    2. ' (' → logprob: -1.213349461555481
    3. '((' → logprob: -1.963349461555481
    4. '(ans' → logprob: -5.588349342346191
    5. 'int' → logprob: -6.338349342346191
    6. '(' → logprob: -7.713349342346191
    7. '10' → logprob: -7.838349342346191
    8. ' ((' → logprob: -8.338349342346191
    9. ' ' → logprob: -8.463349342346191
    10. '(((' → logprob: -8.963349342346191

Token 310: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003199730417691171
    2. '(' → logprob: -8.125320434570312
    3. '((' → logprob: -10.750320434570312
    4. ' (' → logprob: -13.125320434570312
    5. 'x' → logprob: -15.000320434570312
    6. '(int' → logprob: -16.500320434570312
    7. '(input' → logprob: -18.375320434570312
    8. '(
' → logprob: -19.500320434570312
    9. '(abs' → logprob: -19.625320434570312
    10. ' ' → logprob: -20.000320434570312

Token 311: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.31400036811828613
    2. '/' → logprob: -1.3140003681182861
    3. '(x' → logprob: -7.564000129699707
    4. '(' → logprob: -8.689000129699707
    5. ' (' → logprob: -11.189000129699707
    6. ')' → logprob: -11.564000129699707
    7. '   ' → logprob: -11.689000129699707
    8. ' ' → logprob: -12.064000129699707
    9. '()' → logprob: -12.064000129699707
    10. '/x' → logprob: -13.564000129699707

Token 312: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۱۰' → logprob: -18.25002098083496
    4. '１０' → logprob: -19.75002098083496
    5. ')' → logprob: -20.25002098083496
    6. '  ' → logprob: -20.50002098083496
    7. '   ' → logprob: -20.75002098083496
    8. ' ' → logprob: -20.75002098083496
    9. '```' → logprob: -21.00002098083496
    10. '1' → logprob: -21.00002098083496

Token 313: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '۱۰' → logprob: -19.125
    4. '１０' → logprob: -20.75
    5. '1' → logprob: -20.875
    6. '१०' → logprob: -21.75
    7. '
' → logprob: -21.875
    8. '```' → logprob: -22.375
    9. '(' → logprob: -22.625
    10. '   ' → logprob: -22.75

Token 314: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013834515120834112
    2. ')*' → logprob: -6.626383304595947
    3. ')+' → logprob: -10.126383781433105
    4. ' )' → logprob: -11.751383781433105
    5. '   ' → logprob: -11.751383781433105
    6. '*' → logprob: -14.376383781433105
    7. ' +' → logprob: -14.751383781433105
    8. '+' → logprob: -14.876383781433105
    9. '()' → logprob: -15.376383781433105
    10. '(x' → logprob: -17.12638282775879

Token 315: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3884482681751251
    2. '*' → logprob: -1.1384482383728027
    3. ')' → logprob: -6.638448238372803
    4. '10' → logprob: -9.263448715209961
    5. ')*' → logprob: -9.388448715209961
    6. '   ' → logprob: -10.513448715209961
    7. '+' → logprob: -11.388448715209961
    8. ' +' → logprob: -11.513448715209961
    9. '()' → logprob: -11.638448715209961
    10. ' ' → logprob: -11.763448715209961

Token 316: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -18.000911712646484
    4. '```' → logprob: -18.625911712646484
    5. '۱۰' → logprob: -18.625911712646484
    6. '	' → logprob: -18.750911712646484
    7. ' ' → logprob: -18.750911712646484
    8. '  ' → logprob: -19.250911712646484
    9. '１０' → logprob: -19.625911712646484
    10. '1' → logprob: -20.125911712646484

Token 317: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۱۰' → logprob: -19.250001907348633
    4. '１０' → logprob: -20.000001907348633
    5. '```' → logprob: -20.375001907348633
    6. '   ' → logprob: -20.500001907348633
    7. '  ' → logprob: -21.375001907348633
    8. '1' → logprob: -21.500001907348633
    9. '१०' → logprob: -21.625001907348633
    10. '`' → logprob: -22.250001907348633

Token 318: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740890562534332
    2. ' +' → logprob: -0.9740890264511108
    3. '10' → logprob: -11.849088668823242
    4. '+
' → logprob: -13.099088668823242
    5. ' +
' → logprob: -13.349088668823242
    6. '()+' → logprob: -15.099088668823242
    7. ' plus' → logprob: -15.599088668823242
    8. ')+' → logprob: -16.099088668823242
    9. '＋' → logprob: -16.349088668823242
    10. '   ' → logprob: -16.474088668823242

Token 319: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.875045776367188
    4. '1' → logprob: -20.125045776367188
    5. '```' → logprob: -21.125045776367188
    6. '۱۰' → logprob: -21.875045776367188
    7. '１０' → logprob: -22.625045776367188
    8. ' ' → logprob: -23.250045776367188
    9. '  ' → logprob: -23.500045776367188
    10. '	' → logprob: -23.625045776367188

Token 320: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '1' → logprob: -18.25
    4. '```' → logprob: -21.75
    5. '   ' → logprob: -22.625
    6. '۱۰' → logprob: -22.875
    7. '0' → logprob: -23.625
    8. '１０' → logprob: -23.875
    9. '`' → logprob: -24.875
    10. '१०' → logprob: -25.0

Token 321: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14636461436748505
    2. '
' → logprob: -2.396364688873291
    3. 'if' → logprob: -4.271364688873291
    4. '+' → logprob: -4.646364688873291
    5. '#' → logprob: -4.646364688873291
    6. 'while' → logprob: -6.146364688873291
    7. '<|end|>' → logprob: -6.146364688873291
    8. 'ans' → logprob: -6.271364688873291
    9. '10' → logprob: -7.021364688873291
    10. ' +' → logprob: -7.771364688873291

Token 322: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3065311014652252
    2. 'ans' → logprob: -1.6815310716629028
    3. 'if' → logprob: -2.9315311908721924
    4. '+' → logprob: -5.556530952453613
    5. 'for' → logprob: -5.556530952453613
    6. 'while' → logprob: -5.556530952453613
    7. '#' → logprob: -5.806530952453613
    8. 'rest' → logprob: -5.931530952453613
    9. 'unit' → logprob: -6.556530952453613
    10. 'units' → logprob: -6.681530952453613

Token 323: ' Stock' (ID: 16382)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0308752059936523
    2. 'while' → logprob: -1.1558752059936523
    3. 'print' → logprob: -1.6558752059936523
    4. 'if' → logprob: -3.2808752059936523
    5. 'for' → logprob: -3.7808752059936523
    6. 'unit' → logprob: -4.280875205993652
    7. 'diff' → logprob: -4.405875205993652
    8. 'rest' → logprob: -4.780875205993652
    9. 'units' → logprob: -4.780875205993652
    10. 'result' → logprob: -5.030875205993652

Token 324: 'e' (ID: 68)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.18173368275165558
    2. 'er' → logprob: -1.8067337274551392
    3. 'e' → logprob: -6.93173360824585
    4. 'é' → logprob: -7.68173360824585
    5. '=' → logprob: -8.056734085083008
    6. '#' → logprob: -9.306734085083008
    7. ' =' → logprob: -10.681734085083008
    8. 'ation' → logprob: -10.931734085083008
    9. 'ée' → logprob: -11.181734085083008
    10. '_' → logprob: -11.431734085083008

Token 325: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4000106453895569
    2. ' =' → logprob: -2.650010585784912
    3. ' la' → logprob: -2.775010585784912
    4. ' ' → logprob: -3.150010585784912
    5. '10' → logprob: -3.525010585784912
    6. ' le' → logprob: -4.150010585784912
    7. 'le' → logprob: -4.775010585784912
    8. ' _' → logprob: -4.775010585784912
    9. 'ten' → logprob: -4.900010585784912
    10. '_value' → logprob: -5.150010585784912

Token 326: ' valeur' (ID: 41664)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.7001111507415771
    2. 'rest' → logprob: -2.450111150741577
    3. 'unit' → logprob: -2.700111150741577
    4. 'ans' → logprob: -2.825111150741577
    5. 'result' → logprob: -3.200111150741577
    6. 'units' → logprob: -3.200111150741577
    7. 'rem' → logprob: -3.325111150741577
    8. ' mod' → logprob: -3.450111150741577
    9. 'reste' → logprob: -4.200111389160156
    10. ' remainder' → logprob: -4.325111389160156

Token 327: ' initial' (ID: 4871)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5783566236495972
    2. '=' → logprob: -1.8283566236495972
    3. ' +=' → logprob: -2.8283567428588867
    4. 'de' → logprob: -3.0783567428588867
    5. 'rest' → logprob: -3.2033567428588867
    6. '+=' → logprob: -3.9533567428588867
    7. '_rest' → logprob: -4.203356742858887
    8. '_de' → logprob: -4.203356742858887
    9. '_mod' → logprob: -4.328356742858887
    10. 'du' → logprob: -4.328356742858887

Token 328: 'e' (ID: 68)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7217548489570618
    2. ' =' → logprob: -1.096754789352417
    3. ' +=' → logprob: -2.971754789352417
    4. '=' → logprob: -3.346754789352417
    5. 'e' → logprob: -3.346754789352417
    6. '_mod' → logprob: -4.221755027770996
    7. 's' → logprob: -5.221755027770996
    8. 'x' → logprob: -5.471755027770996
    9. ' ' → logprob: -5.596755027770996
    10. '+=' → logprob: -5.721755027770996

Token 329: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47424477338790894
    2. 'initial' → logprob: -1.4742448329925537
    3. 'prev' → logprob: -3.7242448329925537
    4. 'val' → logprob: -3.7242448329925537
    5. 'original' → logprob: -4.349244594573975
    6. 'rest' → logprob: -4.474244594573975
    7. 'ans' → logprob: -4.724244594573975
    8. 'tmp' → logprob: -5.099244594573975
    9. 's' → logprob: -5.099244594573975
    10. 'temp' → logprob: -5.224244594573975

Token 330: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1273195594549179
    2. 'ans' → logprob: -2.127319574356079
    3. '10' → logprob: -8.8773193359375
    4. 'ten' → logprob: -9.1273193359375
    5. ' x' → logprob: -10.2523193359375
    6. '(ans' → logprob: -11.3773193359375
    7. 'y' → logprob: -11.7523193359375
    8. ' ans' → logprob: -11.7523193359375
    9. 'answer' → logprob: -11.7523193359375
    10. 'a' → logprob: -12.0023193359375

Token 331: ' dans' (ID: 2671)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -1.2761704921722412
    2. 'x' → logprob: -1.5261704921722412
    3. 'old' → logprob: -2.026170492172241
    4. 'prev' → logprob: -2.276170492172241
    5. 'original' → logprob: -2.776170492172241
    6. 'init' → logprob: -3.026170492172241
    7. 'val' → logprob: -3.276170492172241
    8. 'orig' → logprob: -3.401170492172241
    9. 'y' → logprob: -3.776170492172241
    10. 's' → logprob: -3.901170492172241

Token 332: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7132970094680786
    2. 'prev' → logprob: -0.9632970094680786
    3. 'temp' → logprob: -3.088296890258789
    4. 'original' → logprob: -3.713296890258789
    5. 'tmp' → logprob: -4.088296890258789
    6. 'y' → logprob: -4.588296890258789
    7. 'initial' → logprob: -4.713296890258789
    8. 'previous' → logprob: -5.588296890258789
    9. 'orig' → logprob: -5.588296890258789
    10. 'old' → logprob: -5.713296890258789

Token 333: ' variable' (ID: 11076)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.177819848060608
    2. 'variable' → logprob: -1.802819848060608
    3. 'x' → logprob: -1.927819848060608
    4. 'tmp' → logprob: -2.9278197288513184
    5. 'temp' → logprob: -2.9278197288513184
    6. 'val' → logprob: -3.1778197288513184
    7. 'diff' → logprob: -3.1778197288513184
    8. 'previous' → logprob: -3.3028197288513184
    9. 'result' → logprob: -3.5528197288513184
    10. 'ans' → logprob: -3.6778197288513184

Token 334: ' '' (ID: 461)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9311003088951111
    2. 'initial' → logprob: -2.056100368499756
    3. 'original' → logprob: -2.306100368499756
    4. 'tmp' → logprob: -2.931100368499756
    5. 'orig' → logprob: -2.931100368499756
    6. 'x' → logprob: -3.056100368499756
    7. 'temp' → logprob: -3.431100368499756
    8. 'init' → logprob: -3.681100368499756
    9. 'a' → logprob: -3.806100368499756
    10. 'res' → logprob: -3.806100368499756

Token 335: 'last' (ID: 6684)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3772420287132263
    2. 'tmp' → logprob: -2.627242088317871
    3. 'temp' → logprob: -3.377242088317871
    4. 'y' → logprob: -3.502242088317871
    5. 'ans' → logprob: -3.752242088317871
    6. 'res' → logprob: -4.002242088317871
    7. 'start' → logprob: -4.252242088317871
    8. 'initial' → logprob: -4.377242088317871
    9. 'orig' → logprob: -4.502242088317871
    10. 'val' → logprob: -4.627242088317871

Token 336: ''
' (ID: 2207)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09890740364789963
    2. '_x' → logprob: -2.973907470703125
    3. '_val' → logprob: -3.348907470703125
    4. '_value' → logprob: -5.848907470703125
    5. 'x' → logprob: -6.473907470703125
    6. ')' → logprob: -6.598907470703125
    7. '_ans' → logprob: -7.598907470703125
    8. ' =' → logprob: -8.473907470703125
    9. 'e' → logprob: -8.598907470703125
    10. '_)' → logprob: -8.973907470703125

Token 337: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.0280383548888494e-06
    2. ' last' → logprob: -13.875000953674316
    3. 'x' → logprob: -18.000001907348633
    4. '
' → logprob: -20.625001907348633
    5. '	last' → logprob: -20.750001907348633
    6. '_last' → logprob: -21.000001907348633
    7. 'Last' → logprob: -21.750001907348633
    8. '#' → logprob: -22.000001907348633
    9. '(last' → logprob: -22.125001907348633
    10. '```' → logprob: -23.000001907348633

Token 338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020774602890015
    2. '=' → logprob: -2.350207805633545
    3. ',' → logprob: -14.100207328796387
    4. ' ' → logprob: -15.475207328796387
    5. '=x' → logprob: -16.850208282470703
    6. ')' → logprob: -17.600208282470703
    7. ' =
' → logprob: -17.725208282470703
    8. 'x' → logprob: -17.975208282470703
    9. ' ' → logprob: -18.725208282470703
    10. '_' → logprob: -19.600208282470703

Token 339: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017050558235496283
    2. ' x' → logprob: -6.376705169677734
    3. '10' → logprob: -13.376705169677734
    4. 'ans' → logprob: -13.751705169677734
    5. '0' → logprob: -15.626705169677734
    6. ' ans' → logprob: -16.501705169677734
    7. '   ' → logprob: -17.376705169677734
    8. ' ' → logprob: -17.626705169677734
    9. '(x' → logprob: -18.126705169677734
    10. '	x' → logprob: -18.501705169677734

Token 340: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06913633644580841
    2. 'while' → logprob: -3.444136381149292
    3. '#' → logprob: -4.569136142730713
    4. '\n' → logprob: -5.444136142730713
    5. 'if' → logprob: -5.694136142730713
    6. '<|end|>' → logprob: -5.819136142730713
    7. '+' → logprob: -5.944136142730713
    8. '
' → logprob: -6.069136142730713
    9. '+
' → logprob: -6.694136142730713
    10. 'for' → logprob: -6.694136142730713

Token 341: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14676368236541748
    2. 'for' → logprob: -2.146763801574707
    3. 'i' → logprob: -5.271763801574707
    4. '
' → logprob: -5.396763801574707
    5. 'n' → logprob: -5.521763801574707
    6. 'ans' → logprob: -5.896763801574707
    7. 'if' → logprob: -7.146763801574707
    8. ' while' → logprob: -7.646763801574707
    9. 'result' → logprob: -8.271763801574707
    10. '#' → logprob: -8.271763801574707

Token 342: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12275944650173187
    2. 'while' → logprob: -2.2477593421936035
    3. 'n' → logprob: -5.3727593421936035
    4. 'i' → logprob: -5.4977593421936035
    5. 'ans' → logprob: -7.6227593421936035
    6. '#' → logprob: -9.247759819030762
    7. 'result' → logprob: -9.372759819030762
    8. 'x' → logprob: -9.872759819030762
    9. 'count' → logprob: -9.997759819030762
    10. 'if' → logprob: -10.372759819030762

Token 343: 'b' (ID: 65)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.1277424693107605
    2. 'f' → logprob: -2.1277425289154053
    3. 'fi' → logprob: -7.252742290496826
    4. '#' → logprob: -10.252742767333984
    5. 'fn' → logprob: -10.502742767333984
    6. 'fil' → logprob: -10.627742767333984
    7. ' finition' → logprob: -12.002742767333984
    8. 'fen' → logprob: -13.252742767333984
    9. '```' → logprob: -13.627742767333984
    10. 'if' → logprob: -13.627742767333984

Token 344: 'ute' (ID: 1331)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.0015812820056453347
    2. 'uter' → logprob: -7.501581192016602
    3. '#' → logprob: -8.126581192016602
    4. 'ute' → logprob: -8.501581192016602
    5. 'f' → logprob: -8.876581192016602
    6. 'uts' → logprob: -9.751581192016602
    7. 'utt' → logprob: -9.876581192016602
    8. 'utin' → logprob: -10.376581192016602
    9. '```' → logprob: -10.501581192016602
    10. 'ug' → logprob: -10.626581192016602

Token 345: ' une' (ID: 2463)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7400486469268799
    2. ' for' → logprob: -1.1150486469268799
    3. 'for' → logprob: -2.24004864692688
    4. 'while' → logprob: -2.86504864692688
    5. ' a' → logprob: -4.115048408508301
    6. ' i' → logprob: -5.115048408508301
    7. '_' → logprob: -5.865048408508301
    8. '
' → logprob: -6.490048408508301
    9. ' la' → logprob: -7.365048408508301
    10. 'i' → logprob: -7.615048408508301

Token 346: ' boucle' (ID: 174211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.043355632573366165
    2. ' while' → logprob: -3.168355703353882
    3. 'bou' → logprob: -8.668355941772461
    4. 'for' → logprob: -8.793355941772461
    5. ' boucle' → logprob: -10.793355941772461
    6. ' for' → logprob: -12.168355941772461
    7. 'wh' → logprob: -12.793355941772461
    8. '
' → logprob: -13.668355941772461
    9. 'b' → logprob: -14.168355941772461
    10. 'import' → logprob: -14.918355941772461

Token 347: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0052470373921096325
    2. ' while' → logprob: -5.255247116088867
    3. 'for' → logprob: -11.255247116088867
    4. ' for' → logprob: -16.380247116088867
    5. '
' → logprob: -16.880247116088867
    6. '#' → logprob: -17.130247116088867
    7. 'wh' → logprob: -17.630247116088867
    8. 't' → logprob: -18.255247116088867
    9. '	while' → logprob: -18.255247116088867
    10. 'While' → logprob: -18.255247116088867

Token 348: ' qui' (ID: 2780)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15480934083461761
    2. ' _' → logprob: -2.4048092365264893
    3. '_' → logprob: -3.4048092365264893
    4. 'i' → logprob: -4.404809474945068
    5. ' in' → logprob: -5.154809474945068
    6. ' for' → logprob: -6.779809474945068
    7. ' range' → logprob: -8.02980899810791
    8. 'for' → logprob: -8.52980899810791
    9. 'in' → logprob: -9.02980899810791
    10. ' ' → logprob: -9.77980899810791

Token 349: ' it' (ID: 480)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7853774428367615
    2. 'for' → logprob: -1.4103775024414062
    3. ' for' → logprob: -1.5353775024414062
    4. 'range' → logprob: -3.1603775024414062
    5. '_' → logprob: -3.4103775024414062
    6. ' _' → logprob: -5.535377502441406
    7. ' i' → logprob: -5.785377502441406
    8. ' in' → logprob: -6.785377502441406
    9. 'in' → logprob: -7.410377502441406
    10. 'i' → logprob: -8.035377502441406

Token 350: 'ère' (ID: 4346)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02762441523373127
    2. 'ère' → logprob: -4.277624607086182
    3. ' range' → logprob: -4.652624607086182
    4. 'er' → logprob: -6.777624607086182
    5. '_range' → logprob: -6.902624607086182
    6. '(range' → logprob: -7.152624607086182
    7. 'Range' → logprob: -7.902624607086182
    8. 'é' → logprob: -9.152624130249023
    9. '-range' → logprob: -9.402624130249023
    10. 'ere' → logprob: -9.777624130249023

Token 351: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.579149603843689
    2. '_' → logprob: -1.454149603843689
    3. ' in' → logprob: -1.954149603843689
    4. ' _' → logprob: -3.3291497230529785
    5. ' range' → logprob: -4.3291497230529785
    6. 'i' → logprob: -4.5791497230529785
    7. 'range' → logprob: -5.9541497230529785
    8. 'in' → logprob: -6.5791497230529785
    9. ' ' → logprob: -7.8291497230529785
    10. ' for' → logprob: -7.8291497230529785

Token 352: '5' (ID: 20)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11852394789457321
    2. 'i' → logprob: -2.4935238361358643
    3. 'range' → logprob: -3.7435238361358643
    4. 'in' → logprob: -5.493524074554443
    5. ' i' → logprob: -7.618524074554443
    6. ' in' → logprob: -8.368523597717285
    7. ' _' → logprob: -8.618523597717285
    8. ' range' → logprob: -8.868523597717285
    9. '_i' → logprob: -9.618523597717285
    10. 'for' → logprob: -9.993523597717285

Token 353: '-' (ID: 12)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07552045583724976
    2. ' i' → logprob: -3.3255205154418945
    3. ' in' → logprob: -4.7005205154418945
    4. ' range' → logprob: -4.7005205154418945
    5. '_' → logprob: -4.9505205154418945
    6. ' ' → logprob: -5.2005205154418945
    7. ' ' → logprob: -5.9505205154418945
    8. 'range' → logprob: -6.4505205154418945
    9. ' times' → logprob: -7.0755205154418945
    10. ' __' → logprob: -8.700520515441895

Token 354: '1' (ID: 16)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.724092960357666
    2. 'range' → logprob: -0.724092960357666
    3. ' _' → logprob: -4.599092960357666
    4. '_' → logprob: -4.849092960357666
    5. ' ' → logprob: -5.599092960357666
    6. '_range' → logprob: -6.474092960357666
    7. '1' → logprob: -6.599092960357666
    8. ' in' → logprob: -7.599092960357666
    9. '(range' → logprob: -7.724092960357666
    10. '  ' → logprob: -7.849092960357666

Token 355: ' =' (ID: 314)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.1059249639511108
    2. ' times' → logprob: -1.3559249639511108
    3. 'range' → logprob: -1.8559249639511108
    4. ' fois' → logprob: -2.6059250831604004
    5. ' in' → logprob: -2.8559250831604004
    6. ' _' → logprob: -4.1059250831604
    7. '(range' → logprob: -4.1059250831604
    8. '_' → logprob: -4.2309250831604
    9. 'times' → logprob: -4.2309250831604
    10. ' ' → logprob: -4.6059250831604

Token 356: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3902825713157654
    2. '1' → logprob: -1.7652826309204102
    3. ' ' → logprob: -1.8902826309204102
    4. '5' → logprob: -7.51528263092041
    5. ')' → logprob: -8.51528263092041
    6. '(' → logprob: -9.51528263092041
    7. 'range' → logprob: -10.01528263092041
    8. '9' → logprob: -10.39028263092041
    9. '<|end|>' → logprob: -11.39028263092041
    10. '0' → logprob: -11.51528263092041

Token 357: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004825081559829414
    2. '4' → logprob: -7.750482559204102
    3. ' ' → logprob: -9.875482559204102
    4. '   ' → logprob: -16.3754825592041
    5. ')' → logprob: -16.6254825592041
    6. '```' → logprob: -16.7504825592041
    7. '6' → logprob: -17.6254825592041
    8. '
' → logprob: -18.0004825592041
    9. '3' → logprob: -18.1254825592041
    10. '2' → logprob: -18.2504825592041

Token 358: ' fois' (ID: 14697)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.26953524351119995
    2. ' fois' → logprob: -1.6445353031158447
    3. 'times' → logprob: -4.394535064697266
    4. ' range' → logprob: -4.769535064697266
    5. ' for' → logprob: -4.769535064697266
    6. 'range' → logprob: -5.269535064697266
    7. 'fois' → logprob: -5.769535064697266
    8. 'for' → logprob: -6.894535064697266
    9. ' _' → logprob: -7.019535064697266
    10. ' in' → logprob: -7.144535064697266

Token 359: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38691839575767517
    2. ' for' → logprob: -1.1369184255599976
    3. 'range' → logprob: -10.136918067932129
    4. ' range' → logprob: -12.761918067932129
    5. '_for' → logprob: -13.761918067932129
    6. '
' → logprob: -13.886918067932129
    7. '	for' → logprob: -14.511918067932129
    8. ' in' → logprob: -14.761918067932129
    9. 'in' → logprob: -14.886918067932129
    10. '_' → logprob: -14.886918067932129

Token 360: ' car' (ID: 1669)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1676473319530487
    2. ' _' → logprob: -2.417647361755371
    3. ' for' → logprob: -3.542647361755371
    4. '_' → logprob: -4.292647361755371
    5. 'range' → logprob: -4.417647361755371
    6. 'for' → logprob: -5.417647361755371
    7. ' i' → logprob: -5.542647361755371
    8. ' ' → logprob: -6.917647361755371
    9. ' in' → logprob: -7.292647361755371
    10. '   ' → logprob: -8.542647361755371

Token 361: ' un' (ID: 537)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6090598106384277
    2. '_' → logprob: -1.1090598106384277
    3. ' _' → logprob: -2.3590598106384277
    4. ' range' → logprob: -3.8590598106384277
    5. 'i' → logprob: -4.984059810638428
    6. 'range' → logprob: -6.109059810638428
    7. ' ' → logprob: -6.984059810638428
    8. ' for' → logprob: -8.609060287475586
    9. ' ' → logprob: -8.984060287475586
    10. ' x' → logprob: -9.484060287475586

Token 362: ' élément' (ID: 99627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09605192393064499
    2. ' range' → logprob: -3.2210519313812256
    3. 'for' → logprob: -3.8460519313812256
    4. 'e' → logprob: -4.5960516929626465
    5. 'range' → logprob: -4.8460516929626465
    6. '_' → logprob: -4.9710516929626465
    7. ' espace' → logprob: -6.2210516929626465
    8. ' space' → logprob: -7.7210516929626465
    9. 's' → logprob: -7.8460516929626465
    10. 'n' → logprob: -7.9710516929626465

Token 363: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7177879214286804
    2. 'for' → logprob: -1.0927879810333252
    3. 'range' → logprob: -2.217787981033325
    4. ' range' → logprob: -3.092787981033325
    5. 's' → logprob: -4.842787742614746
    6. ' in' → logprob: -5.217787742614746
    7. '_' → logprob: -5.592787742614746
    8. '_range' → logprob: -6.342787742614746
    9. 'in' → logprob: -6.592787742614746
    10. '	range' → logprob: -7.967787742614746

Token 364: ' déjà' (ID: 21229)
  Prédit: ' été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.43315988779067993
    2. ' déjà' → logprob: -1.9331598281860352
    3. 'range' → logprob: -2.683159828186035
    4. ' for' → logprob: -2.808159828186035
    5. 'for' → logprob: -3.183159828186035
    6. ' range' → logprob: -4.433159828186035
    7. 'n' → logprob: -5.183159828186035
    8. ' partir' → logprob: -5.808159828186035
    9. ' already' → logprob: -6.558159828186035
    10. ' compris' → logprob: -6.558159828186035

Token 365: ' été' (ID: 9799)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.43754228949546814
    2. ' été' → logprob: -1.5625423192977905
    3. 'été' → logprob: -2.687542200088501
    4. ' range' → logprob: -3.937542200088501
    5. 'être' → logprob: -4.31254243850708
    6. 'been' → logprob: -4.31254243850708
    7. ' been' → logprob: -4.68754243850708
    8. '#' → logprob: -4.68754243850708
    9. 'for' → logprob: -5.56254243850708
    10. ' être' → logprob: -6.56254243850708

Token 366: ' lu' (ID: 8620)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0217472314834595
    2. 'calcul' → logprob: -1.2717472314834595
    3. 'aj' → logprob: -2.02174711227417
    4. 'range' → logprob: -2.52174711227417
    5. ' calcul' → logprob: -3.39674711227417
    6. ' ajouté' → logprob: -3.77174711227417
    7. ' génér' → logprob: -3.89674711227417
    8. 'trait' → logprob: -4.02174711227417
    9. 'pris' → logprob: -4.27174711227417
    10. 'comp' → logprob: -4.52174711227417

Token 367: ' avant' (ID: 13339)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006715967319905758
    2. ' for' → logprob: -5.006715774536133
    3. 'range' → logprob: -14.631715774536133
    4. '
' → logprob: -15.631715774536133
    5. 'in' → logprob: -16.756715774536133
    6. '_for' → logprob: -18.631715774536133
    7. ' range' → logprob: -18.881715774536133
    8. ' in' → logprob: -18.881715774536133
    9. 'pour' → logprob: -19.131715774536133
    10. '```' → logprob: -19.131715774536133

Token 368: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011052302084863186
    2. ' for' → logprob: -4.511052131652832
    3. '
' → logprob: -12.511052131652832
    4. 'range' → logprob: -14.386052131652832
    5. 'in' → logprob: -16.01105308532715
    6. '```' → logprob: -17.88605308532715
    7. ' 
' → logprob: -18.01105308532715
    8. '_for' → logprob: -18.01105308532715
    9. '	for' → logprob: -18.38605308532715
    10. ' range' → logprob: -18.76105308532715

Token 369: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009139076806604862
    2. 'range' → logprob: -4.759139060974121
    3. 'bou' → logprob: -8.134139060974121
    4. 'loop' → logprob: -8.884139060974121
    5. ' for' → logprob: -9.759139060974121
    6. ' boucle' → logprob: -10.634139060974121
    7. 'r' → logprob: -12.759139060974121
    8. 'b' → logprob: -13.259139060974121
    9. '```' → logprob: -13.509139060974121
    10. 'rang' → logprob: -13.634139060974121

Token 370: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.1888679839321412e-05
    2. ' for' → logprob: -10.750021934509277
    3. '
' → logprob: -14.875021934509277
    4. '```' → logprob: -20.12502098083496
    5. '	for' → logprob: -21.87502098083496
    6. 'range' → logprob: -21.87502098083496
    7. 'in' → logprob: -22.12502098083496
    8. '``' → logprob: -22.37502098083496
    9. '#' → logprob: -22.75002098083496
    10. 'from' → logprob: -22.75002098083496

Token 371: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029752103611826897
    2. ' for' → logprob: -3.529752016067505
    3. '
' → logprob: -13.904751777648926
    4. 'range' → logprob: -15.029751777648926
    5. '```' → logprob: -15.904751777648926
    6. 'in' → logprob: -15.904751777648926
    7. ' 
' → logprob: -16.779752731323242
    8. '_for' → logprob: -17.029752731323242
    9. ' in' → logprob: -17.779752731323242
    10. ' range' → logprob: -17.904752731323242

Token 372: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20383761823177338
    2. ' _' → logprob: -2.2038376331329346
    3. '_' → logprob: -2.7038376331329346
    4. 'i' → logprob: -4.9538373947143555
    5. '_i' → logprob: -11.203837394714355
    6. ' ' → logprob: -11.828837394714355
    7. '	i' → logprob: -14.703837394714355
    8. ' ' → logprob: -15.078837394714355
    9. ' _
' → logprob: -15.953837394714355
    10. '_=' → logprob: -15.953837394714355

Token 373: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03373940661549568
    2. 'in' → logprob: -3.4087393283843994
    3. ' ' → logprob: -9.40873908996582
    4. '	in' → logprob: -13.15873908996582
    5. ',' → logprob: -13.40873908996582
    6. '1' → logprob: -13.53373908996582
    7. ' ' → logprob: -14.15873908996582
    8. ' i' → logprob: -14.40873908996582
    9. '  ' → logprob: -14.65873908996582
    10. '_' → logprob: -14.72123908996582

Token 374: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014170562848448753
    2. 'range' → logprob: -4.2641706466674805
    3. ' ' → logprob: -12.63917064666748
    4. ' in' → logprob: -12.76417064666748
    5. '(range' → logprob: -14.51417064666748
    6. '	range' → logprob: -15.26417064666748
    7. '1' → logprob: -17.139169692993164
    8. 'in' → logprob: -17.264169692993164
    9. '(' → logprob: -17.264169692993164
    10. ' xrange' → logprob: -17.639169692993164

Token 375: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.842555426876061e-06
    2. '1' → logprob: -12.375004768371582
    3. ' (' → logprob: -14.625004768371582
    4. '2' → logprob: -18.3750057220459
    5. '(
' → logprob: -19.0000057220459
    6. '   ' → logprob: -20.2500057220459
    7. '4' → logprob: -20.2500057220459
    8. ',' → logprob: -20.3750057220459
    9. '	' → logprob: -21.3750057220459
    10. '5' → logprob: -22.2500057220459

Token 376: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.747814349073451e-05
    2. '4' → logprob: -11.750017166137695
    3. ' ' → logprob: -11.875017166137695
    4. '5' → logprob: -13.375017166137695
    5. '   ' → logprob: -14.125017166137695
    6. '2' → logprob: -15.000017166137695
    7. '(' → logprob: -17.625017166137695
    8. '１' → logprob: -19.250017166137695
    9. '  ' → logprob: -19.750017166137695
    10. '    ' → logprob: -19.750017166137695

Token 377: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16585634648799896
    2. '-' → logprob: -2.16585636138916
    3. '):' → logprob: -3.41585636138916
    4. '1' → logprob: -6.04085636138916
    5. '):
' → logprob: -6.66585636138916
    6. ' ):' → logprob: -7.04085636138916
    7. ')' → logprob: -8.04085636138916
    8. ' ' → logprob: -8.04085636138916
    9. '   ' → logprob: -9.91585636138916
    10. '[' → logprob: -10.79085636138916

Token 378: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.125032424926758
    4. ')' → logprob: -18.625032424926758
    5. '  ' → logprob: -18.750032424926758
    6. '    ' → logprob: -19.375032424926758
    7. '	' → logprob: -20.375032424926758
    8. '১' → logprob: -21.375032424926758
    9. ' ' → logprob: -21.500032424926758
    10. ',' → logprob: -21.500032424926758

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.875004768371582
    4. ')' → logprob: -19.125003814697266
    5. '  ' → logprob: -20.250003814697266
    6. '    ' → logprob: -20.750003814697266
    7. '
' → logprob: -20.750003814697266
    8. '	' → logprob: -21.250003814697266
    9. '       ' → logprob: -22.125003814697266
    10. '```' → logprob: -22.125003814697266

Token 380: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003013809327967465
    2. ' ):' → logprob: -8.250301361083984
    3. '):
' → logprob: -10.375301361083984
    4. ')' → logprob: -12.125301361083984
    5. ':' → logprob: -13.125301361083984
    6. '():' → logprob: -14.000301361083984
    7. '):
' → logprob: -15.125301361083984
    8. '):

' → logprob: -16.500301361083984
    9. ' :' → logprob: -17.000301361083984
    10. '}:' → logprob: -17.125301361083984

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047662947326898575
    2. ':' → logprob: -3.4226629734039307
    3. ':
' → logprob: -4.547662734985352
    4. '    
' → logprob: -6.297662734985352
    5. '):
' → logprob: -8.297662734985352
    6. '```' → logprob: -8.297662734985352
    7. '
' → logprob: -8.547662734985352
    8. ' x' → logprob: -8.672662734985352
    9. '<|end|>' → logprob: -9.047662734985352
    10. ' :
' → logprob: -9.172662734985352

Token 382: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012078535510227084
    2. 'n' → logprob: -7.3762078285217285
    3. 'x' → logprob: -8.626208305358887
    4. 'y' → logprob: -8.876208305358887
    5. ' x' → logprob: -8.876208305358887
    6. '    
' → logprob: -10.376208305358887
    7. ' n' → logprob: -10.501208305358887
    8. ' y' → logprob: -10.626208305358887
    9. '	n' → logprob: -12.126208305358887
    10. 'a' → logprob: -12.501208305358887

Token 383: ' À' (ID: 27643)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8921062350273132
    2. 'y' → logprob: -1.017106294631958
    3. 'x' → logprob: -2.142106294631958
    4. 'a' → logprob: -2.392106294631958
    5. ' y' → logprob: -5.142106056213379
    6. 'num' → logprob: -6.392106056213379
    7. ' n' → logprob: -6.642106056213379
    8. 'next' → logprob: -6.642106056213379
    9. 'val' → logprob: -6.892106056213379
    10. 'v' → logprob: -6.892106056213379

Token 384: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04508232697844505
    2. ' x' → logprob: -3.6700823307037354
    3. '#' → logprob: -5.045082092285156
    4. ' ' → logprob: -6.295082092285156
    5. 'n' → logprob: -6.420082092285156
    6. 'last' → logprob: -6.420082092285156
    7. 'val' → logprob: -6.545082092285156
    8. 'l' → logprob: -6.670082092285156
    9. 'i' → logprob: -7.545082092285156
    10. 'c' → logprob: -7.920082092285156

Token 385: ' it' (ID: 480)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11380942165851593
    2. 'n' → logprob: -2.86380934715271
    3. 'val' → logprob: -3.98880934715271
    4. 'new' → logprob: -4.613809585571289
    5. ' x' → logprob: -4.738809585571289
    6. '
' → logprob: -5.613809585571289
    7. 'nou' → logprob: -5.988809585571289
    8. 'num' → logprob: -6.613809585571289
    9. ' new' → logprob: -6.738809585571289
    10. 'value' → logprob: -6.863809585571289

Token 386: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.20173510909080505
    2. 'er' → logprob: -1.7017351388931274
    3. 'ér' → logprob: -8.951735496520996
    4. 'éré' → logprob: -9.326735496520996
    5. 'é' → logprob: -10.076735496520996
    6. 'érer' → logprob: -10.701735496520996
    7. 'ère' → logprob: -10.951735496520996
    8. 'érations' → logprob: -12.326735496520996
    9. 'érêt' → logprob: -12.826735496520996
    10. 'èr' → logprob: -13.326735496520996

Token 387: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009103399701416492
    2. '    
' → logprob: -5.759103298187256
    3. ' x' → logprob: -6.384103298187256
    4. ':' → logprob: -6.884103298187256
    5. ',' → logprob: -7.134103298187256
    6. '
' → logprob: -7.759103298187256
    7. '    ' → logprob: -7.884103298187256
    8. ':
' → logprob: -7.884103298187256
    9. '       ' → logprob: -8.259103775024414
    10. 'n' → logprob: -9.009103775024414

Token 388: ' lit' (ID: 11980)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6806530356407166
    2. 'n' → logprob: -1.4306530952453613
    3. 'y' → logprob: -2.3056530952453613
    4. ' x' → logprob: -3.0556530952453613
    5. 'a' → logprob: -3.3056530952453613
    6. ' y' → logprob: -3.5556530952453613
    7. ' n' → logprob: -3.8056530952453613
    8. '   ' → logprob: -4.805653095245361
    9. 'num' → logprob: -5.930653095245361
    10. 'val' → logprob: -6.430653095245361

Token 389: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.018514178693294525
    2. ' une' → logprob: -5.268514156341553
    3. 'a' → logprob: -6.018514156341553
    4. ' ' → logprob: -6.143514156341553
    5. ' x' → logprob: -6.393514156341553
    6. 'x' → logprob: -6.643514156341553
    7. ' a' → logprob: -6.643514156341553
    8. 'un' → logprob: -6.768514156341553
    9. '   ' → logprob: -7.268514156341553
    10. ' new' → logprob: -7.768514156341553

Token 390: ' nouvel' (ID: 76298)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18216806650161743
    2. 'n' → logprob: -2.1821680068969727
    3. 'nombre' → logprob: -3.6821680068969727
    4. 'new' → logprob: -5.057168006896973
    5. ' x' → logprob: -5.182168006896973
    6. 'ent' → logprob: -5.307168006896973
    7. ' new' → logprob: -5.432168006896973
    8. 'nou' → logprob: -5.932168006896973
    9. ' nombre' → logprob: -6.807168006896973
    10. 'y' → logprob: -7.057168006896973

Token 391: ' entier' (ID: 80473)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.27945300936698914
    2. ' x' → logprob: -1.7794530391693115
    3. ' nombre' → logprob: -3.0294530391693115
    4. 'nombre' → logprob: -4.154452800750732
    5. ' ' → logprob: -5.529452800750732
    6. ' entier' → logprob: -6.279452800750732
    7. 'ent' → logprob: -6.654452800750732
    8. 'entrée' → logprob: -7.029452800750732
    9. 'e' → logprob: -7.404452800750732
    10. '_nombre' → logprob: -7.904452800750732

Token 392: ' entier' (ID: 80473)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.320318341255188
    2. '=' → logprob: -2.0703182220458984
    3. '   ' → logprob: -2.1953182220458984
    4. 'x' → logprob: -3.5703182220458984
    5. ',' → logprob: -5.945318222045898
    6. '    ' → logprob: -6.195318222045898
    7. ' x' → logprob: -6.695318222045898
    8. 'n' → logprob: -6.820318222045898
    9. '()' → logprob: -8.570318222045898
    10. '(x' → logprob: -8.820318222045898

Token 393: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4429834485054016
    2. '()' → logprob: -1.9429833889007568
    3. 'x' → logprob: -2.067983388900757
    4. ' =' → logprob: -3.942983388900757
    5. '(x' → logprob: -4.192983627319336
    6. '()
' → logprob: -5.192983627319336
    7. ',' → logprob: -5.192983627319336
    8. '    ' → logprob: -5.317983627319336
    9. ' x' → logprob: -5.442983627319336
    10. '=' → logprob: -5.567983627319336

Token 394: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.024708589538931847
    2. ' input' → logprob: -3.7747085094451904
    3. 'int' → logprob: -7.0247087478637695
    4. 'l' → logprob: -7.7747087478637695
    5. '(input' → logprob: -9.52470874786377
    6. '   ' → logprob: -10.52470874786377
    7. '()' → logprob: -11.14970874786377
    8. '=input' → logprob: -11.27470874786377
    9. ' l' → logprob: -11.89970874786377
    10. 'x' → logprob: -12.27470874786377

Token 395: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1848541498184204
    2. ''entrée' → logprob: -2.434854030609131
    3. 'entrée' → logprob: -2.559854030609131
    4. 'e' → logprob: -6.434854030609131
    5. 'a' → logprob: -7.434854030609131
    6. ' input' → logprob: -7.559854030609131
    7. '
' → logprob: -8.184854507446289
    8. 'es' → logprob: -8.559854507446289
    9. '(input' → logprob: -8.684854507446289
    10. '   ' → logprob: -9.559854507446289

Token 396: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011864188127219677
    2. '()
' → logprob: -6.751186370849609
    3. '())' → logprob: -12.87618637084961
    4. ' ()' → logprob: -12.87618637084961
    5. ')' → logprob: -13.00118637084961
    6. '()
' → logprob: -13.00118637084961
    7. '(' → logprob: -13.87618637084961
    8. '().' → logprob: -13.87618637084961
    9. 'x' → logprob: -14.12618637084961
    10. '=' → logprob: -14.25118637084961

Token 397: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002569237258285284
    2. 'n' → logprob: -6.502569198608398
    3. 'x' → logprob: -7.252569198608398
    4. ',' → logprob: -8.877569198608398
    5. ' x' → logprob: -9.502569198608398
    6. ' =' → logprob: -10.252569198608398
    7. '    ' → logprob: -10.502569198608398
    8. 'new' → logprob: -11.002569198608398
    9. '	x' → logprob: -11.252569198608398
    10. 'a' → logprob: -11.377569198608398

Token 398: ' ass' (ID: 1680)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14396598935127258
    2. 'x' → logprob: -2.01896595954895
    3. ' ' → logprob: -8.393965721130371
    4. ' 
' → logprob: -8.643965721130371
    5. 'int' → logprob: -9.018965721130371
    6. '    ' → logprob: -9.143965721130371
    7. ' int' → logprob: -9.268965721130371
    8. '   ' → logprob: -9.268965721130371
    9. 'n' → logprob: -9.768965721130371
    10. ' =' → logprob: -9.893965721130371

Token 399: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.07108302414417267
    2. 'ign' → logprob: -2.6960830688476562
    3. 'igned' → logprob: -8.196083068847656
    4. '#' → logprob: -8.446083068847656
    5. '   ' → logprob: -8.821083068847656
    6. 'ig' → logprob: -9.071083068847656
    7. 'eg' → logprob: -9.571083068847656
    8. 'i' → logprob: -9.571083068847656
    9. 'ert' → logprob: -9.946083068847656
    10. 'e' → logprob: -10.321083068847656

Token 400: ' à' (ID: 1221)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4771044850349426
    2. '   ' → logprob: -1.4771044254302979
    3. ' x' → logprob: -2.352104425430298
    4. 'y' → logprob: -4.852104663848877
    5. 'l' → logprob: -5.102104663848877
    6. ' la' → logprob: -5.352104663848877
    7. '()' → logprob: -5.352104663848877
    8. 'a' → logprob: -5.352104663848877
    9. ' y' → logprob: -5.602104663848877
    10. 'last' → logprob: -5.602104663848877

Token 401: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002208069898188114
    2. ' x' → logprob: -7.002208232879639
    3. 'last' → logprob: -7.002208232879639
    4. 'n' → logprob: -8.37720775604248
    5. 'a' → logprob: -10.12720775604248
    6. 'y' → logprob: -10.37720775604248
    7. 'val' → logprob: -10.87720775604248
    8. 'new' → logprob: -11.12720775604248
    9. 'tmp' → logprob: -11.37720775604248
    10. 'num' → logprob: -11.87720775604248

Token 402: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0662323608994484
    2. '=' → logprob: -3.441232442855835
    3. '   ' → logprob: -3.441232442855835
    4. 'x' → logprob: -10.566232681274414
    5. '=int' → logprob: -12.441232681274414
    6. ' =
' → logprob: -12.816232681274414
    7. '=
' → logprob: -13.316232681274414
    8. '
' → logprob: -14.441232681274414
    9. ' x' → logprob: -14.691232681274414
    10. ' ' → logprob: -15.316232681274414

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15137191116809845
    2. 'x' → logprob: -2.526371955871582
    3. ' =' → logprob: -3.151371955871582
    4. '
' → logprob: -4.276371955871582
    5. ' x' → logprob: -6.026371955871582
    6. '=' → logprob: -6.776371955871582
    7. '	x' → logprob: -8.651371955871582
    8. '    
' → logprob: -9.776371955871582
    9. '=x' → logprob: -11.526371955871582
    10. ' =
' → logprob: -11.901371955871582

Token 404: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.012363903224468231
    2. ' x' → logprob: -4.512363910675049
    3. '   ' → logprob: -6.637363910675049
    4. '	x' → logprob: -12.38736343383789
    5. '
' → logprob: -14.76236343383789
    6. '    
' → logprob: -15.88736343383789
    7. ' 
' → logprob: -16.63736343383789
    8. '    ' → logprob: -17.51236343383789
    9. ' =' → logprob: -17.51236343383789
    10. ' ' → logprob: -17.51236343383789

Token 405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022859513759613
    2. ' =' → logprob: -1.9102286100387573
    3. '=int' → logprob: -12.410228729248047
    4. '   ' → logprob: -15.785228729248047
    5. ' ' → logprob: -16.785228729248047
    6. '=

' → logprob: -16.785228729248047
    7. '=input' → logprob: -17.410228729248047
    8. '=
' → logprob: -18.785228729248047
    9. '＝' → logprob: -18.910228729248047
    10. ' ' → logprob: -18.910228729248047

Token 406: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061967797577381134
    2. ' int' → logprob: -2.8119678497314453
    3. '=int' → logprob: -17.186967849731445
    4. '(int' → logprob: -17.311967849731445
    5. '   ' → logprob: -17.561967849731445
    6. '[int' → logprob: -17.811967849731445
    7. '<int' → logprob: -18.061967849731445
    8. '	int' → logprob: -18.561967849731445
    9. ' ' → logprob: -19.436967849731445
    10. ':int' → logprob: -19.561967849731445

Token 407: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.125000953674316
    3. 'input' → logprob: -15.375000953674316
    4. ' (' → logprob: -19.000001907348633
    5. '=input' → logprob: -19.000001907348633
    6. '(
' → logprob: -19.750001907348633
    7. ' input' → logprob: -19.875001907348633
    8. ',input' → logprob: -21.000001907348633
    9. '<input' → logprob: -21.625001907348633
    10. '[input' → logprob: -22.125001907348633

Token 408: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00023560250701848418
    2. '()' → logprob: -8.500235557556152
    3. ')' → logprob: -10.500235557556152
    4. ' ())' → logprob: -12.875235557556152
    5. '())
' → logprob: -13.375235557556152
    6. '();)' → logprob: -15.500235557556152
    7. '(' → logprob: -15.875235557556152
    8. '()))' → logprob: -17.00023651123047
    9. '())

' → logprob: -17.12523651123047
    10. '()
' → logprob: -17.25023651123047

Token 409: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.862962229410186e-05
    2. '    
' → logprob: -9.625078201293945
    3. '
' → logprob: -12.000078201293945
    4. 'if' → logprob: -13.375078201293945
    5. '#' → logprob: -13.500078201293945
    6. '<|end|>' → logprob: -13.875078201293945
    7. 'ans' → logprob: -14.250078201293945
    8. '```' → logprob: -14.375078201293945
    9. '  
' → logprob: -14.625078201293945
    10. '   
' → logprob: -15.375078201293945

Token 410: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05179789289832115
    2. 'ans' → logprob: -3.801797866821289
    3. 'if' → logprob: -4.051797866821289
    4. '#' (adapté à ' #') → logprob: -5.051797866821289
    5. 'mod' → logprob: -5.926797866821289
    6. 'diff' → logprob: -7.301797866821289
    7. ' if' → logprob: -7.926797866821289
    8. ' ans' → logprob: -9.051797866821289
    9. 'rem' → logprob: -9.926797866821289
    10. ' #' → logprob: -10.051797866821289

Token 411: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.474717915058136
    2. 'ans' → logprob: -1.3497178554534912
    3. 'diff' → logprob: -3.224717855453491
    4. 'd' → logprob: -3.849717855453491
    5. 'mod' → logprob: -3.974717855453491
    6. 'delta' → logprob: -4.97471809387207
    7. 'last' → logprob: -5.09971809387207
    8. 'tmp' → logprob: -5.47471809387207
    9. 'm' → logprob: -5.47471809387207
    10. 'temp' → logprob: -5.72471809387207

Token 412: ' chaque' (ID: 21194)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20696695148944855
    2. ' ans' → logprob: -1.7069669961929321
    3. '(ans' → logprob: -6.581966876983643
    4. 'val' → logprob: -6.956966876983643
    5. 'last' → logprob: -6.956966876983643
    6. 'diff' → logprob: -7.956966876983643
    7. 'if' → logprob: -7.956966876983643
    8. ' last' → logprob: -8.7069673538208
    9. 'i' → logprob: -8.7069673538208
    10. 'x' → logprob: -8.9569673538208

Token 413: ' nouvel' (ID: 76298)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7658028602600098
    2. 'ans' → logprob: -1.2658028602600098
    3. ' if' → logprob: -2.2658028602600098
    4. 'if' → logprob: -2.2658028602600098
    5. 'diff' → logprob: -4.26580286026001
    6. 'val' → logprob: -4.76580286026001
    7. 'difference' → logprob: -6.14080286026001
    8. 'unit' → logprob: -6.26580286026001
    9. ' diff' → logprob: -6.39080286026001
    10. ' multiple' → logprob: -6.64080286026001

Token 414: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8050459623336792
    2. 'if' → logprob: -1.8050459623336792
    3. ' if' → logprob: -2.3050460815429688
    4. 'ans' → logprob: -2.3050460815429688
    5. ' ans' → logprob: -2.6800460815429688
    6. ' x' → logprob: -2.8050460815429688
    7. ' multiple' → logprob: -4.930046081542969
    8. 'multiple' → logprob: -4.930046081542969
    9. 'val' → logprob: -5.055046081542969
    10. 'mod' → logprob: -5.430046081542969

Token 415: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1465352326631546
    2. ',' → logprob: -2.6465351581573486
    3. 'if' → logprob: -3.5215351581573486
    4. ' if' → logprob: -3.8965351581573486
    5. ':' → logprob: -5.021535396575928
    6. '
' → logprob: -5.271535396575928
    7. '    
' → logprob: -6.896535396575928
    8. ' ,' → logprob: -7.396535396575928
    9. ':
' → logprob: -7.521535396575928
    10. 'ans' → logprob: -7.771535396575928

Token 416: ' ajoute' (ID: 91611)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.27090761065483093
    2. 'if' → logprob: -1.6459076404571533
    3. '   ' → logprob: -3.8959076404571533
    4. ' ans' → logprob: -4.145907402038574
    5. ' if' → logprob: -4.895907402038574
    6. 'last' → logprob: -8.270907402038574
    7. 'diff' → logprob: -8.645907402038574
    8. '	ans' → logprob: -9.895907402038574
    9. 'mod' → logprob: -10.020907402038574
    10. ' ' → logprob: -10.395907402038574

Token 417: ' à' (ID: 1221)
  Prédit: ' ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ten' → logprob: -0.6581196188926697
    2. ' ans' → logprob: -1.7831196784973145
    3. ' (' → logprob: -2.4081196784973145
    4. 'ten' → logprob: -2.5331196784973145
    5. '10' → logprob: -2.9081196784973145
    6. '(ans' → logprob: -3.4081196784973145
    7. ' ' → logprob: -3.9081196784973145
    8. '(' → logprob: -4.0331196784973145
    9. ' abs' → logprob: -5.0331196784973145
    10. 'ans' → logprob: -5.2831196784973145

Token 418: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0031949470285326242
    2. ' ans' → logprob: -5.753194808959961
    3. '(ans' → logprob: -11.253194808959961
    4. '	ans' → logprob: -13.003194808959961
    5. 'last' → logprob: -15.003194808959961
    6. 'ann' → logprob: -15.503194808959961
    7. '`' → logprob: -15.628194808959961
    8. ' ' → logprob: -16.00319480895996
    9. 'x' → logprob: -16.00319480895996
    10. '   ' → logprob: -16.12819480895996

Token 419: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001664717128733173
    2. ' ans' → logprob: -8.750166893005371
    3. '(ans' → logprob: -13.375166893005371
    4. '	ans' → logprob: -13.375166893005371
    5. 'last' → logprob: -14.000166893005371
    6. '`' → logprob: -14.125166893005371
    7. 'x' → logprob: -14.125166893005371
    8. '   ' → logprob: -14.375166893005371
    9. ' ' → logprob: -14.375166893005371
    10. 'ann' → logprob: -15.250166893005371

Token 420: ''' (ID: 6)
  Prédit: ' ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ten' → logprob: -0.6037204265594482
    2. ' ' → logprob: -1.9787204265594482
    3. '10' → logprob: -2.2287204265594482
    4. ' la' → logprob: -3.1037204265594482
    5. ' (' → logprob: -3.2287204265594482
    6. 'ten' → logprob: -3.4787204265594482
    7. ' the' → logprob: -3.6037204265594482
    8. ' le' → logprob: -4.103720664978027
    9. ' +' → logprob: -4.353720664978027
    10. '+' → logprob: -4.478720664978027

Token 421: ' la' (ID: 557)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.09395170211792
    2. ' +' → logprob: -1.46895170211792
    3. ' ten' → logprob: -1.96895170211792
    4. ' -' → logprob: -2.21895170211792
    5. ' +=' → logprob: -3.46895170211792
    6. 'ten' → logprob: -3.46895170211792
    7. '+=' → logprob: -3.59395170211792
    8. '-' → logprob: -3.71895170211792
    9. '10' → logprob: -3.84395170211792
    10. '   ' → logprob: -4.21895170211792

Token 422: ' même' (ID: 9679)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.27776792645454407
    2. '10' → logprob: -1.5277678966522217
    3. '(' → logprob: -3.9027678966522217
    4. ' ten' → logprob: -6.152768135070801
    5. ' ' → logprob: -6.277768135070801
    6. ' (' → logprob: -7.652768135070801
    7. 'abs' → logprob: -8.4027681350708
    8. 'x' → logprob: -8.6527681350708
    9. '   ' → logprob: -9.0277681350708
    10. '(x' → logprob: -9.7777681350708

Token 423: ' logique' (ID: 115350)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.09808887541294098
    2. ' ten' → logprob: -3.0980889797210693
    3. '10' → logprob: -3.4730889797210693
    4. ' ' → logprob: -5.34808874130249
    5. 'value' → logprob: -6.34808874130249
    6. 'space' → logprob: -6.59808874130249
    7. ' +' → logprob: -6.59808874130249
    8. '+' → logprob: -6.59808874130249
    9. ' value' → logprob: -6.59808874130249
    10. 'val' → logprob: -7.09808874130249

Token 424: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45565295219421387
    2. ' (' → logprob: -2.580652952194214
    3. '10' → logprob: -2.955652952194214
    4. '   ' → logprob: -2.955652952194214
    5. ' =' → logprob: -3.330652952194214
    6. ' ans' → logprob: -3.455652952194214
    7. ' ten' → logprob: -3.580652952194214
    8. ' x' → logprob: -4.205653190612793
    9. '=' → logprob: -4.205653190612793
    10. '(' → logprob: -4.455653190612793

Token 425: ' multiple' (ID: 7598)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5840357542037964
    2. '(x' → logprob: -1.0840357542037964
    3. ' (' → logprob: -2.334035873413086
    4. '10' → logprob: -6.334035873413086
    5. '(ans' → logprob: -6.334035873413086
    6. '(int' → logprob: -7.209035873413086
    7. 'x' → logprob: -7.334035873413086
    8. '(t' → logprob: -7.459035873413086
    9. '(abs' → logprob: -7.584035873413086
    10. 'ten' → logprob: -7.959035873413086

Token 426: ' supérieur' (ID: 98491)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.028424574062228203
    2. 'de' → logprob: -4.2784247398376465
    3. '_de' → logprob: -4.5284247398376465
    4. '_' → logprob: -6.6534247398376465
    5. '   ' → logprob: -7.5284247398376465
    6. '10' → logprob: -7.6534247398376465
    7. ' if' → logprob: -8.028424263000488
    8. ' of' → logprob: -8.278424263000488
    9. ' ' → logprob: -8.653424263000488
    10. 's' → logprob: -9.778424263000488

Token 427: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10169000923633575
    2. 'if' → logprob: -3.7266900539398193
    3. '(' → logprob: -4.10168981552124
    4. ' de' → logprob: -4.47668981552124
    5. '10' → logprob: -4.60168981552124
    6. ' (' → logprob: -4.72668981552124
    7. '   ' → logprob: -4.72668981552124
    8. ' ' → logprob: -5.22668981552124
    9. '(x' → logprob: -6.35168981552124
    10. '+' → logprob: -6.47668981552124

Token 428: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08125107735395432
    2. ' ' → logprob: -2.5812511444091797
    3. ' dix' → logprob: -6.08125114440918
    4. 'd' → logprob: -9.83125114440918
    5. ' x' → logprob: -11.70625114440918
    6. 'x' → logprob: -12.70625114440918
    7. '(' → logprob: -13.08125114440918
    8. ' dizaine' → logprob: -13.20625114440918
    9. '(x' → logprob: -13.70625114440918
    10. ' ten' → logprob: -13.70625114440918

Token 429: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006336372345685959
    2. 'd' → logprob: -5.131336212158203
    3. ' ' → logprob: -8.006336212158203
    4. ' dix' → logprob: -9.881336212158203
    5. 'x' → logprob: -11.506336212158203
    6. '(' → logprob: -12.006336212158203
    7. 'ten' → logprob: -12.506336212158203
    8. '(x' → logprob: -13.381336212158203
    9. '１０' → logprob: -15.131336212158203
    10. ' (' → logprob: -15.506336212158203

Token 430: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06600316613912582
    2. '   ' → logprob: -3.3160030841827393
    3. ' ans' → logprob: -4.316003322601318
    4. 'if' → logprob: -5.441003322601318
    5. ' +' → logprob: -5.941003322601318
    6. '(ans' → logprob: -5.941003322601318
    7. 'ans' → logprob: -6.816003322601318
    8. ' ' → logprob: -6.941003322601318
    9. ' -' → logprob: -6.941003322601318
    10. ' (' → logprob: -7.941003322601318

Token 431: '   ' (ID: 271)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.19371497631073
    2. ' ans' → logprob: -1.19371497631073
    3. ' (' → logprob: -1.69371497631073
    4. '10' → logprob: -2.4437150955200195
    5. ' ' → logprob: -2.8187150955200195
    6. 'int' → logprob: -3.8187150955200195
    7. '(' → logprob: -4.4437150955200195
    8. 'ans' → logprob: -4.5687150955200195
    9. '(ans' → logprob: -5.1937150955200195
    10. '   ' → logprob: -5.3187150955200195

Token 432: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2905368506908417
    2. ' ans' → logprob: -1.790536880493164
    3. '(ans' → logprob: -3.040536880493164
    4. '(' → logprob: -4.165536880493164
    5. ' (' → logprob: -4.540536880493164
    6. '10' → logprob: -4.790536880493164
    7. ' ' → logprob: -7.040536880493164
    8. 'int' → logprob: -7.915536880493164
    9. '(x' → logprob: -7.915536880493164
    10. 'x' → logprob: -8.415536880493164

Token 433: ' si' (ID: 1784)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2065747231245041
    2. ' ans' → logprob: -1.7065746784210205
    3. '   ' → logprob: -5.5815749168396
    4. '(ans' → logprob: -7.4565749168396
    5. 'if' → logprob: -7.7065749168396
    6. ' if' → logprob: -8.331574440002441
    7. '	ans' → logprob: -9.956574440002441
    8. ' (' → logprob: -10.956574440002441
    9. '10' → logprob: -11.706574440002441
    10. 'x' → logprob: -11.831574440002441

Token 434: ' x' (ID: 1215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5569159984588623
    2. '(x' → logprob: -0.9319159984588623
    3. 'x' → logprob: -3.9319159984588623
    4. ' x' → logprob: -4.306916236877441
    5. '(' → logprob: -9.181916236877441
    6. '   ' → logprob: -10.806916236877441
    7. ' ' → logprob: -11.181916236877441
    8. '  ' → logprob: -12.681916236877441
    9. '10' → logprob: -14.431916236877441
    10. '	x' → logprob: -14.869416236877441

Token 435: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.05489389970898628
    2. '%' → logprob: -2.929893970489502
    3. ' ' → logprob: -11.804893493652344
    4. '   ' → logprob: -13.554893493652344
    5. ' is' → logprob: -14.179893493652344
    6. 'if' → logprob: -14.679893493652344
    7. ' ' → logprob: -14.804893493652344
    8. ' if' → logprob: -14.804893493652344
    9. '%s' → logprob: -16.054893493652344
    10. '%x' → logprob: -16.554893493652344

Token 436: ' déjà' (ID: 21229)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.10576754063367844
    2. 'div' → logprob: -2.4807674884796143
    3. '(' → logprob: -4.980767726898193
    4. ' (' → logprob: -5.480767726898193
    5. '%' → logprob: -5.855767726898193
    6. '(x' → logprob: -7.105767726898193
    7. '(div' → logprob: -7.480767726898193
    8. ' multiple' → logprob: -7.855767726898193
    9. ' div' → logprob: -7.855767726898193
    10. 'multiple' → logprob: -8.730767250061035

Token 437: ' un' (ID: 537)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7979719638824463
    2. ' divisible' → logprob: -0.7979719638824463
    3. ' (' → logprob: -2.5479719638824463
    4. 'div' → logprob: -4.047971725463867
    5. '(' → logprob: -6.172971725463867
    6. '%' → logprob: -7.297971725463867
    7. ' div' → logprob: -8.172971725463867
    8. '(div' → logprob: -8.547971725463867
    9. ' x' → logprob: -8.672971725463867
    10. 'x' → logprob: -8.797971725463867

Token 438: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.3282831311225891
    2. ' multiple' → logprob: -1.3282830715179443
    3. '%' → logprob: -4.953283309936523
    4. '10' → logprob: -4.953283309936523
    5. 'multip' → logprob: -7.828283309936523
    6. ' ' → logprob: -8.828283309936523
    7. ' %' → logprob: -9.578283309936523
    8. '%d' → logprob: -9.828283309936523
    9. '_multiple' → logprob: -10.453283309936523
    10. '0' → logprob: -11.203283309936523

Token 439: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.016673624515533447
    2. 'de' → logprob: -4.141673564910889
    3. '   ' → logprob: -7.641673564910889
    4. '%' → logprob: -9.141674041748047
    5. ' ' → logprob: -11.141674041748047
    6. '_de' → logprob: -11.516674041748047
    7. ' of' → logprob: -11.891674041748047
    8. '  ' → logprob: -12.016674041748047
    9. '10' → logprob: -12.391674041748047
    10. 'def' → logprob: -13.141674041748047

Token 440: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06993810087442398
    2. ' ' → logprob: -2.6949381828308105
    3. ' ' → logprob: -15.319937705993652
    4. ' ten' → logprob: -15.319937705993652
    5. 'ten' → logprob: -15.569937705993652
    6. '   ' → logprob: -15.694937705993652
    7. ' dix' → logprob: -15.819937705993652
    8. 'd' → logprob: -15.944937705993652
    9. '```' → logprob: -15.944937705993652
    10. ' diez' → logprob: -16.19493865966797

Token 441: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00023166877508629113
    2. ' ' → logprob: -8.375231742858887
    3. '0' → logprob: -15.375231742858887
    4. '```' → logprob: -15.375231742858887
    5. '   ' → logprob: -15.500231742858887
    6. 'x' → logprob: -16.00023078918457
    7. '100' → logprob: -16.25023078918457
    8. 'ten' → logprob: -16.37523078918457
    9. 'd' → logprob: -16.75023078918457
    10. '  ' → logprob: -17.12523078918457

Token 442: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08786823600530624
    2. ':
' → logprob: -2.9628682136535645
    3. '   ' → logprob: -4.3378682136535645
    4. ',' → logprob: -4.5878682136535645
    5. ' else' → logprob: -4.9628682136535645
    6. ' :' → logprob: -7.0878682136535645
    7. 'else' → logprob: -7.2128682136535645
    8. ')' → logprob: -8.837868690490723
    9. '):' → logprob: -9.087868690490723
    10. '):
' → logprob: -9.212868690490723

Token 443: ' on' (ID: 402)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1094873771071434
    2. 'ans' → logprob: -2.609487295150757
    3. '   ' → logprob: -3.609487295150757
    4. '(ans' → logprob: -6.484487533569336
    5. ' x' → logprob: -6.984487533569336
    6. '	ans' → logprob: -8.734487533569336
    7. '10' → logprob: -8.859487533569336
    8. 'x' → logprob: -9.234487533569336
    9. ' ' → logprob: -9.859487533569336
    10. ' (' → logprob: -10.109487533569336

Token 444: ' ajoute' (ID: 91611)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.601540207862854
    2. 'ans' → logprob: -0.976540207862854
    3. ' x' → logprob: -3.2265400886535645
    4. '(ans' → logprob: -3.7265400886535645
    5. 'x' → logprob: -5.2265400886535645
    6. '   ' → logprob: -5.4765400886535645
    7. '10' → logprob: -7.4765400886535645
    8. '	ans' → logprob: -7.9765400886535645
    9. ' (' → logprob: -8.726540565490723
    10. '(x' → logprob: -9.226540565490723

Token 445: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20148146152496338
    2. ' x' → logprob: -1.7014814615249634
    3. '10' → logprob: -9.701481819152832
    4. '(x' → logprob: -12.701481819152832
    5. '0' → logprob: -13.076481819152832
    6. ' ' → logprob: -14.076481819152832
    7. '   ' → logprob: -14.326481819152832
    8. '	x' → logprob: -16.826480865478516
    9. '20' → logprob: -16.951480865478516
    10. ' (' → logprob: -16.951480865478516

Token 446: ' directement' (ID: 52317)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005139119457453489
    2. 'else' → logprob: -5.755139350891113
    3. ' else' → logprob: -6.380139350891113
    4. ',' → logprob: -9.005139350891113
    5. ' if' → logprob: -11.005139350891113
    6. '    ' → logprob: -11.005139350891113
    7. '<|end|>' → logprob: -11.005139350891113
    8. ')' → logprob: -11.380139350891113
    9. '  ' → logprob: -11.755139350891113
    10. ';' → logprob: -11.755139350891113

Token 447: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03892463818192482
    2. ' else' → logprob: -3.6639246940612793
    3. 'else' → logprob: -4.413924694061279
    4. ',' → logprob: -8.913924217224121
    5. '+' → logprob: -10.038924217224121
    6. ' +' → logprob: -10.163924217224121
    7. '    
' → logprob: -10.538924217224121
    8. ' elif' → logprob: -10.788924217224121
    9. ' ans' → logprob: -10.913924217224121
    10. 'elif' → logprob: -11.038924217224121

Token 448: '   ' (ID: 271)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3787304759025574
    2. 'else' → logprob: -1.6287305355072021
    3. '   ' → logprob: -2.128730535507202
    4. ',' → logprob: -10.378730773925781
    5. '    ' → logprob: -11.003730773925781
    6. ' ans' → logprob: -11.128730773925781
    7. '  ' → logprob: -12.128730773925781
    8. '	else' → logprob: -12.128730773925781
    9. ' ' → logprob: -12.503730773925781
    10. '+' → logprob: -12.816230773925781

Token 449: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3648967146873474
    2. ' else' → logprob: -1.3648967742919922
    3. '   ' → logprob: -2.989896774291992
    4. '	else' → logprob: -11.864896774291992
    5. 'elif' → logprob: -11.989896774291992
    6. 'ans' → logprob: -12.364896774291992
    7. '+' → logprob: -12.614896774291992
    8. ' ans' → logprob: -12.989896774291992
    9. '    ' → logprob: -12.989896774291992
    10. ',' → logprob: -13.739896774291992

Token 450: ' sinon' (ID: 52915)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6336744427680969
    2. 'else' → logprob: -0.8836744427680969
    3. '   ' → logprob: -2.883674383163452
    4. 'elif' → logprob: -8.883674621582031
    5. ' elif' → logprob: -10.883674621582031
    6. '	else' → logprob: -11.758674621582031
    7. '    ' → logprob: -13.883674621582031
    8. '  ' → logprob: -13.883674621582031
    9. ',' → logprob: -14.133674621582031
    10. ' ' → logprob: -14.258674621582031

Token 451: ',' (ID: 11)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.021456731483340263
    2. 'ans' → logprob: -4.146456718444824
    3. '   ' → logprob: -5.771456718444824
    4. ':' → logprob: -6.896456718444824
    5. '    ' → logprob: -7.771456718444824
    6. '(ans' → logprob: -8.021456718444824
    7. ' ' → logprob: -8.396456718444824
    8. ' int' → logprob: -9.271456718444824
    9. '  ' → logprob: -10.146456718444824
    10. '	ans' → logprob: -10.271456718444824

Token 452: ' on' (ID: 402)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9063239693641663
    2. ' int' → logprob: -1.0313239097595215
    3. ' ans' → logprob: -1.7813239097595215
    4. 'ans' → logprob: -2.6563239097595215
    5. '   ' → logprob: -7.7813239097595215
    6. '10' → logprob: -9.28132438659668
    7. '           ' → logprob: -9.53132438659668
    8. '       ' → logprob: -9.65632438659668
    9. '    ' → logprob: -9.90632438659668
    10. '(int' → logprob: -10.53132438659668

Token 453: ' arr' (ID: 1724)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.049229204654693604
    2. ' ans' → logprob: -3.049229145050049
    3. '(ans' → logprob: -8.049229621887207
    4. 'add' → logprob: -8.924229621887207
    5. '	ans' → logprob: -9.799229621887207
    6. 'aj' → logprob: -10.299229621887207
    7. ' +=' → logprob: -10.674229621887207
    8. '+=' → logprob: -11.049229621887207
    9. ' add' → logprob: -11.049229621887207
    10. '10' → logprob: -11.549229621887207

Token 454: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.03638457879424095
    2. 'ondi' → logprob: -3.5363845825195312
    3. 'onde' → logprob: -5.036384582519531
    4. 'ive' → logprob: -10.411384582519531
    5. 'ondes' → logprob: -10.536384582519531
    6. 'ondissement' → logprob: -11.536384582519531
    7. 'ont' → logprob: -11.661384582519531
    8. 'onte' → logprob: -11.786384582519531
    9. 'on' → logprob: -11.911384582519531
    10. '\' → logprob: -12.411384582519531

Token 455: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.3819732666015625
    2. '(x' → logprob: -1.6319732666015625
    3. 'is' → logprob: -2.2569732666015625
    4. 'e' → logprob: -5.3819732666015625
    5. 'x' → logprob: -5.5069732666015625
    6. 'i' → logprob: -5.7569732666015625
    7. 'ir' → logprob: -5.7569732666015625
    8. '(' → logprob: -7.3819732666015625
    9. '(it' → logprob: -7.8819732666015625
    10. 'er' → logprob: -8.006973266601562

Token 456: ' à' (ID: 1221)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.18408991396427155
    2. '(x' → logprob: -2.8090898990631104
    3. 'int' → logprob: -3.0590898990631104
    4. ' int' → logprob: -3.5590898990631104
    5. 'x' → logprob: -4.3090901374816895
    6. ' (' → logprob: -4.6840901374816895
    7. '(' → logprob: -5.4340901374816895
    8. ' x' → logprob: -6.0590901374816895
    9. 'up' → logprob: -6.3090901374816895
    10. ' up' → logprob: -7.3090901374816895

Token 457: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22084660828113556
    2. ' int' → logprob: -1.7208466529846191
    3. '(int' → logprob: -4.095846652984619
    4. ' (' → logprob: -6.095846652984619
    5. '(x' → logprob: -9.095846176147461
    6. '(' → logprob: -9.845846176147461
    7. '10' → logprob: -9.970846176147461
    8. ' x' → logprob: -10.095846176147461
    9. 'x' → logprob: -10.220846176147461
    10. '((' → logprob: -10.970846176147461

Token 458: ' dizaine' (ID: 162763)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10070984810590744
    2. 'x' → logprob: -3.100709915161133
    3. '(x' → logprob: -3.600709915161133
    4. '(int' → logprob: -4.475709915161133
    5. ' int' → logprob: -5.225709915161133
    6. ' x' → logprob: -5.850709915161133
    7. ' (' → logprob: -5.850709915161133
    8. '((' → logprob: -8.350709915161133
    9. 'next' → logprob: -8.600709915161133
    10. '10' → logprob: -8.850709915161133

Token 459: ' supérieure' (ID: 106336)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.7411791086196899
    2. ' supérieure' → logprob: -0.8661791086196899
    3. '   ' → logprob: -2.8661789894104004
    4. 'super' → logprob: -3.3661789894104004
    5. ' sup' → logprob: -5.1161789894104
    6. ' supérieur' → logprob: -6.2411789894104
    7. '+' → logprob: -6.8661789894104
    8. '       ' → logprob: -7.3661789894104
    9. '_sup' → logprob: -7.4911789894104
    10. 'su' → logprob: -7.8661789894104

Token 460: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2304319143295288
    2. ' ans' → logprob: -1.7304319143295288
    3. '(ans' → logprob: -2.3554320335388184
    4. ' x' → logprob: -2.3554320335388184
    5. ' =' → logprob: -2.6054320335388184
    6. ' +=' → logprob: -2.8554320335388184
    7. 'ans' → logprob: -3.1054320335388184
    8. ' (' → logprob: -3.2304320335388184
    9. ' +' → logprob: -3.6054320335388184
    10. '+' → logprob: -4.105432033538818

Token 461: ' prenant' (ID: 140375)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1454620510339737
    2. '(int' → logprob: -2.2704620361328125
    3. ' int' → logprob: -4.7704620361328125
    4. '(' → logprob: -5.1454620361328125
    5. 'ans' → logprob: -5.2704620361328125
    6. 'x' → logprob: -5.7704620361328125
    7. '(ans' → logprob: -5.7704620361328125
    8. '10' → logprob: -6.0204620361328125
    9. '(x' → logprob: -6.3954620361328125
    10. '((' → logprob: -7.2704620361328125

Token 462: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03172910585999489
    2. ' int' → logprob: -3.781729221343994
    3. '(int' → logprob: -4.781729221343994
    4. ' (' → logprob: -10.156728744506836
    5. '   ' → logprob: -10.781728744506836
    6. '10' → logprob: -12.656728744506836
    7. '(' → logprob: -13.531728744506836
    8. ' ' → logprob: -14.656728744506836
    9. '  ' → logprob: -14.906728744506836
    10. '[int' → logprob: -15.281728744506836

Token 463: ' dizaine' (ID: 162763)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005025609862059355
    2. ' int' → logprob: -6.255025386810303
    3. '(x' → logprob: -6.755025386810303
    4. '(int' → logprob: -7.005025386810303
    5. 'x' → logprob: -7.380025386810303
    6. '10' → logprob: -8.755025863647461
    7. 'next' → logprob: -9.880025863647461
    8. '((' → logprob: -10.005025863647461
    9. ' (' → logprob: -10.505025863647461
    10. ' x' → logprob: -10.630025863647461

Token 464: ' inf' (ID: 5603)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -1.0373766422271729
    2. '   ' → logprob: -2.037376642227173
    3. ' inf' → logprob: -2.037376642227173
    4. '(x' → logprob: -2.037376642227173
    5. ' x' → logprob: -2.037376642227173
    6. ' supérieure' → logprob: -3.662376642227173
    7. 'inf' → logprob: -4.287376403808594
    8. 'x' → logprob: -4.537376403808594
    9. ' ' → logprob: -4.537376403808594
    10. '       ' → logprob: -4.787376403808594

Token 465: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.0047170608304440975
    2. 'érieur' → logprob: -5.879716873168945
    3. 'er' → logprob: -7.129716873168945
    4. '   ' → logprob: -8.254716873168945
    5. '(' → logprob: -8.379716873168945
    6. '((' → logprob: -9.129716873168945
    7. 'érie' → logprob: -9.754716873168945
    8. 'ère' → logprob: -10.004716873168945
    9. 'érée' → logprob: -10.004716873168945
    10. '+' → logprob: -10.379716873168945

Token 466: ' et' (ID: 859)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14760850369930267
    2. '*' → logprob: -2.022608518600464
    3. '(x' → logprob: -6.022608280181885
    4. ')' → logprob: -6.897608280181885
    5. '   ' → logprob: -7.522608280181885
    6. ' //' → logprob: -8.647608757019043
    7. '*x' → logprob: -9.147608757019043
    8. '//' → logprob: -9.272608757019043
    9. ' ' → logprob: -9.272608757019043
    10. '```' → logprob: -9.397608757019043

Token 467: ' en' (ID: 469)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3992822468280792
    2. '   ' → logprob: -2.024282217025757
    3. '10' → logprob: -2.524282217025757
    4. ' +' → logprob: -2.649282217025757
    5. 'aj' → logprob: -3.649282217025757
    6. 'adding' → logprob: -4.774282455444336
    7. ' ajout' → logprob: -5.649282455444336
    8. ' ' → logprob: -6.274282455444336
    9. ' adding' → logprob: -6.274282455444336
    10. ' x' → logprob: -6.524282455444336

Token 468: ' ajout' (ID: 64605)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.35962414741516113
    2. 'adding' → logprob: -1.8596241474151611
    3. ' ajout' → logprob: -2.359624147415161
    4. '+' → logprob: -3.984624147415161
    5. '10' → logprob: -4.234623908996582
    6. ' adding' → logprob: -4.984623908996582
    7. 'add' → logprob: -6.109623908996582
    8. 'addition' → logprob: -6.109623908996582
    9. '   ' → logprob: -6.359623908996582
    10. ''aj' → logprob: -6.484623908996582

Token 469: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.005901895929127932
    2. '   ' → logprob: -5.25590181350708
    3. ' ant' → logprob: -8.005902290344238
    4. '+' → logprob: -8.755902290344238
    5. '10' → logprob: -9.630902290344238
    6. 'er' → logprob: -10.880902290344238
    7. ' ' → logprob: -11.005902290344238
    8. '.ant' → logprob: -11.130902290344238
    9. '_ant' → logprob: -11.130902290344238
    10. '  ' → logprob: -11.630902290344238

Token 470: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007102862582542002
    2. ' ' → logprob: -7.250710487365723
    3. '1' → logprob: -16.125709533691406
    4. '```' → logprob: -16.125709533691406
    5. '   ' → logprob: -16.875709533691406
    6. '+' → logprob: -17.375709533691406
    7. ' +' → logprob: -17.750709533691406
    8. '`' → logprob: -18.500709533691406
    9. '
' → logprob: -18.750709533691406
    10. ' dix' → logprob: -18.875709533691406

Token 471: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.250005722045898
    3. '```' → logprob: -14.625005722045898
    4. '   ' → logprob: -18.2500057220459
    5. ' dix' → logprob: -18.8750057220459
    6. '`' → logprob: -19.2500057220459
    7. 'd' → logprob: -19.5000057220459
    8. '1' → logprob: -19.6250057220459
    9. '``' → logprob: -20.1250057220459
    10. '１０' → logprob: -20.1250057220459

Token 472: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022708738688379526
    2. ' +' → logprob: -7.002270698547363
    3. ' ans' → logprob: -7.502270698547363
    4. 'ans' → logprob: -8.252270698547363
    5. ' if' → logprob: -8.752270698547363
    6. '
' → logprob: -9.252270698547363
    7. '+' → logprob: -9.502270698547363
    8. ' +=' → logprob: -10.002270698547363
    9. '	ans' → logprob: -10.127270698547363
    10. '    
' → logprob: -10.252270698547363

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00100422790274024
    2. 'ans' → logprob: -7.126004219055176
    3. ' ans' → logprob: -8.876004219055176
    4. '
' → logprob: -10.126004219055176
    5. '    
' → logprob: -11.501004219055176
    6. '	ans' → logprob: -12.626004219055176
    7. '(ans' → logprob: -13.376004219055176
    8. ' if' → logprob: -13.501004219055176
    9. '```' → logprob: -13.751004219055176
    10. '       ' → logprob: -14.626004219055176

Token 474: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18431013822555542
    2. 'ans' (adapté à ' ans') → logprob: -1.9343101978302002
    3. ' ans' → logprob: -3.8093101978302
    4. '
' → logprob: -6.934309959411621
    5. '	ans' → logprob: -7.684309959411621
    6. '(ans' → logprob: -9.309309959411621
    7. '    
' → logprob: -10.059309959411621
    8. ' if' → logprob: -10.559309959411621
    9. 'if' → logprob: -11.184309959411621
    10. '_ans' → logprob: -12.434309959411621

Token 475: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04860621318221092
    2. '+=' → logprob: -3.0486061573028564
    3. '=' → logprob: -11.673605918884277
    4. ' =' → logprob: -11.798605918884277
    5. '   ' → logprob: -13.673605918884277
    6. '	' → logprob: -14.173605918884277
    7. '+=(' → logprob: -15.173605918884277
    8. '+' → logprob: -15.298605918884277
    9. ']+=' → logprob: -15.923605918884277
    10. ' ' → logprob: -16.173606872558594

Token 476: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6327840089797974
    2. ' x' → logprob: -0.7577840089797974
    3. '(x' → logprob: -9.132783889770508
    4. ' ' → logprob: -10.507783889770508
    5. ' (' → logprob: -10.632783889770508
    6. '   ' → logprob: -11.257783889770508
    7. '10' → logprob: -12.632783889770508
    8. '(' → logprob: -12.757783889770508
    9. '0' → logprob: -12.882783889770508
    10. '  ' → logprob: -13.757783889770508

Token 477: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.029786018654704094
    2. 'if' → logprob: -3.5297861099243164
    3. ' +' → logprob: -10.779786109924316
    4. '+' → logprob: -11.654786109924316
    5. ' ' → logprob: -12.654786109924316
    6. '	if' → logprob: -13.279786109924316
    7. '%' → logprob: -15.029786109924316
    8. '   ' → logprob: -15.529786109924316
    9. ' -' → logprob: -16.27978515625
    10. ' ' → logprob: -16.40478515625

Token 478: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4288409650325775
    2. ' (' → logprob: -1.0538409948349
    3. 'x' → logprob: -9.428840637207031
    4. '(' → logprob: -10.428840637207031
    5. ' x' → logprob: -10.553840637207031
    6. ' ' → logprob: -12.803840637207031
    7. '   ' → logprob: -14.053840637207031
    8. '  ' → logprob: -14.803840637207031
    9. ' ' → logprob: -16.92884063720703
    10. '((' → logprob: -17.24134063720703

Token 479: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0051047299057245255
    2. ' x' → logprob: -5.6301045417785645
    3. '(x' → logprob: -6.5051045417785645
    4. ' (' → logprob: -12.130105018615723
    5. ' ' → logprob: -14.130105018615723
    6. '   ' → logprob: -14.755105018615723
    7. '(' → logprob: -15.005105018615723
    8. '%x' → logprob: -15.255105018615723
    9. '	x' → logprob: -16.255104064941406
    10. ')x' → logprob: -16.255104064941406

Token 480: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2519325911998749
    2. '%' → logprob: -1.5019326210021973
    3. ' ' → logprob: -12.751932144165039
    4. ' ' → logprob: -15.126932144165039
    5. ' %
' → logprob: -16.25193214416504
    6. '[' → logprob: -16.87693214416504
    7. ')' → logprob: -17.37693214416504
    8. '%
' → logprob: -17.50193214416504
    9. '%s' → logprob: -18.12693214416504
    10. '   ' → logprob: -18.18943214416504

Token 481: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0028052295092493296
    2. ' ' → logprob: -5.877805233001709
    3. '   ' → logprob: -16.002805709838867
    4. '  ' → logprob: -16.377805709838867
    5. '```' → logprob: -16.877805709838867
    6. ')' → logprob: -17.002805709838867
    7. '0' → logprob: -17.252805709838867
    8. '==' → logprob: -18.377805709838867
    9. ' ten' → logprob: -18.565305709838867
    10. '=' → logprob: -18.565305709838867

Token 482: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00013095269969198853
    2. '0' → logprob: -9.125130653381348
    3. ' ' → logprob: -10.750130653381348
    4. '```' → logprob: -15.125130653381348
    5. '==' → logprob: -16.375131607055664
    6. '   ' → logprob: -16.750131607055664
    7. '=' → logprob: -17.500131607055664
    8. '100' → logprob: -17.750131607055664
    9. '
' → logprob: -18.250131607055664
    10. '  ' → logprob: -18.500131607055664

Token 483: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007163942791521549
    2. ')==' → logprob: -5.007164001464844
    3. '==' → logprob: -7.757164001464844
    4. ' ==' → logprob: -11.257164001464844
    5. ' )' → logprob: -11.882164001464844
    6. '0' → logprob: -14.382164001464844
    7. ')=' → logprob: -16.382164001464844
    8. '```' → logprob: -16.632164001464844
    9. '[' → logprob: -17.007164001464844
    10. ']==' → logprob: -17.132164001464844

Token 484: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0486510694026947
    2. ' ==' → logprob: -3.0486509799957275
    3. ')==' → logprob: -10.173650741577148
    4. ')' → logprob: -10.923650741577148
    5. '()==' → logprob: -12.923650741577148
    6. '==
' → logprob: -13.798650741577148
    7. '=' → logprob: -13.798650741577148
    8. '```' → logprob: -14.173650741577148
    9. '0' → logprob: -14.298650741577148
    10. ']==' → logprob: -14.298650741577148

Token 485: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043138445471413434
    2. ' ' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.875431060791016
    4. '=' → logprob: -16.250431060791016
    5. '  ' → logprob: -16.875431060791016
    6. '==' → logprob: -17.125431060791016
    7. '10' → logprob: -17.437931060791016
    8. '```' → logprob: -17.687931060791016
    9. 's' → logprob: -17.875431060791016
    10. '00' → logprob: -18.000431060791016

Token 486: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -16.87500762939453
    4. '10' → logprob: -16.87500762939453
    5. '=' → logprob: -18.00000762939453
    6. '==' → logprob: -18.00000762939453
    7. '00' → logprob: -18.25000762939453
    8. '```' → logprob: -18.25000762939453
    9. '۰' → logprob: -19.43750762939453
    10. '[' → logprob: -19.68750762939453

Token 487: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6931482553482056
    2. 'else' → logprob: -0.6931482553482056
    3. '	else' → logprob: -13.818148612976074
    4. '_else' → logprob: -16.443147659301758
    5. ' ' → logprob: -16.818147659301758
    6. '<|end|>' → logprob: -17.818147659301758
    7. 'elses' → logprob: -17.943147659301758
    8. '```' → logprob: -18.193147659301758
    9. '+' → logprob: -18.443147659301758
    10. ' ' → logprob: -18.943147659301758

Token 488: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011118091642856598
    2. '(int' → logprob: -4.761117935180664
    3. ' int' → logprob: -6.011117935180664
    4. ' (' → logprob: -10.011117935180664
    5. '((' → logprob: -13.136117935180664
    6. '   ' → logprob: -14.136117935180664
    7. ' ' → logprob: -14.636117935180664
    8. '[int' → logprob: -14.636117935180664
    9. '  ' → logprob: -15.261117935180664
    10. '(' → logprob: -15.511117935180664

Token 489: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0011728443205356598
    2. '(' → logprob: -6.75117301940918
    3. 'x' → logprob: -13.37617301940918
    4. ' (' → logprob: -13.87617301940918
    5. '((' → logprob: -16.87617301940918
    6. '(
' → logprob: -19.62617301940918
    7. '(int' → logprob: -20.62617301940918
    8. '/' → logprob: -20.87617301940918
    9. '(i' → logprob: -20.87617301940918
    10. '(input' → logprob: -21.00117301940918

Token 490: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0877796858549118
    2. ' /' → logprob: -2.5877797603607178
    3. '(x' → logprob: -5.212779521942139
    4. '(' → logprob: -5.712779521942139
    5. 'x' → logprob: -9.837779998779297
    6. ' (' → logprob: -10.462779998779297
    7. '/x' → logprob: -11.462779998779297
    8. ')' → logprob: -12.837779998779297
    9. '(/' → logprob: -13.337779998779297
    10. '[' → logprob: -14.087779998779297

Token 491: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '  ' → logprob: -20.1250057220459
    4. '   ' → logprob: -20.1250057220459
    5. '۱۰' → logprob: -21.0000057220459
    6. '１０' → logprob: -22.1250057220459
    7. '```' → logprob: -22.3750057220459
    8. '१०' → logprob: -23.5000057220459
    9. '    ' → logprob: -23.6250057220459
    10. '১০' → logprob: -24.0000057220459

Token 492: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.1250057220459
    4. '  ' → logprob: -20.0000057220459
    5. ')' → logprob: -20.8750057220459
    6. '۱۰' → logprob: -21.2500057220459
    7. '1' → logprob: -21.6250057220459
    8. '     ' → logprob: -21.7500057220459
    9. '```' → logprob: -22.0000057220459
    10. '    ' → logprob: -22.1250057220459

Token 493: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001427538663847372
    2. ')*' → logprob: -8.875143051147461
    3. ' )' → logprob: -13.000143051147461
    4. '   ' → logprob: -14.625143051147461
    5. '()' → logprob: -15.875143051147461
    6. '*' → logprob: -16.87514305114746
    7. ')+' → logprob: -18.37514305114746
    8. '）' → logprob: -19.00014305114746
    9. '0' → logprob: -19.25014305114746
    10. '())' → logprob: -19.50014305114746

Token 494: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08080023527145386
    2. ' *' → logprob: -3.0808002948760986
    3. ')' → logprob: -3.7058002948760986
    4. ')*' → logprob: -4.9558000564575195
    5. '   ' → logprob: -10.33080005645752
    6. '10' → logprob: -10.83080005645752
    7. '*)' → logprob: -11.70580005645752
    8. ' ' → logprob: -12.08080005645752
    9. '()*' → logprob: -13.08080005645752
    10. '1' → logprob: -13.45580005645752

Token 495: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.625003814697266
    4. '```' → logprob: -20.125003814697266
    5. '۱۰' → logprob: -20.125003814697266
    6. '１０' → logprob: -20.500003814697266
    7. '  ' → logprob: -21.750003814697266
    8. '100' → logprob: -22.375003814697266
    9. '1' → logprob: -22.500003814697266
    10. '१०' → logprob: -22.500003814697266

Token 496: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۱۰' → logprob: -18.125
    4. '1' → logprob: -18.875
    5. '１０' → logprob: -19.375
    6. '100' → logprob: -19.625
    7. '101' → logprob: -19.625
    8. '```' → logprob: -19.75
    9. '१०' → logprob: -20.0
    10. '১০' → logprob: -20.875

Token 497: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193965435028076
    2. '+' → logprob: -1.5019396543502808
    3. '   ' → logprob: -11.62693977355957
    4. '＋' → logprob: -14.75193977355957
    5. '       ' → logprob: -15.37693977355957
    6. ' +
' → logprob: -15.50193977355957
    7. '    ' → logprob: -15.75193977355957
    8. '10' → logprob: -15.87693977355957
    9. ' ' → logprob: -16.25193977355957
    10. ' +=' → logprob: -16.25193977355957

Token 498: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -20.62507438659668
    4. '   ' → logprob: -20.75007438659668
    5. '1' → logprob: -21.87507438659668
    6. '  ' → logprob: -23.00007438659668
    7. '۱۰' → logprob: -23.12507438659668
    8. ' ' → logprob: -23.50007438659668
    9. '	' → logprob: -23.87507438659668
    10. '１０' → logprob: -24.00007438659668

Token 499: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -20.875
    4. '۱۰' → logprob: -22.625
    5. '   ' → logprob: -22.875
    6. '１０' → logprob: -23.125
    7. '1' → logprob: -23.625
    8. '' → logprob: -25.125
    9. '१०' → logprob: -25.25
    10. '  ' → logprob: -25.375

Token 500: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3539107143878937
    2. '<|end|>' → logprob: -1.7289106845855713
    3. '   ' → logprob: -2.4789106845855713
    4. '    
' → logprob: -4.35391092300415
    5. 'print' → logprob: -5.22891092300415
    6. '  
' → logprob: -5.47891092300415
    7. 'last' → logprob: -5.72891092300415
    8. '```' → logprob: -6.10391092300415
    9. '+' → logprob: -6.47891092300415
    10. '<|end|>' → logprob: -6.97891092300415

Token 501: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07517485320568085
    2. '<|end|>' → logprob: -2.8251748085021973
    3. '```' → logprob: -5.325174808502197
    4. '   ' → logprob: -6.325174808502197
    5. '#' → logprob: -6.575174808502197
    6. '    
' → logprob: -6.700174808502197
    7. '  
' → logprob: -6.825174808502197
    8. '

' → logprob: -7.075174808502197
    9. 'last' → logprob: -7.950174808502197
    10. 'if' → logprob: -8.450175285339355

Token 502: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023971077054739
    2. 'last' → logprob: -4.148971080780029
    3. '#' (adapté à ' #') → logprob: -5.023971080780029
    4. '```' → logprob: -7.523971080780029
    5. '    
' → logprob: -8.023970603942871
    6. 'if' → logprob: -9.023970603942871
    7. '<|end|>' → logprob: -9.398970603942871
    8. 'print' → logprob: -9.523970603942871
    9. '    ' → logprob: -9.648970603942871
    10. '
' → logprob: -10.023970603942871

Token 503: ' Compare' (ID: 38200)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.23822088539600372
    2. 'if' → logprob: -1.6132209300994873
    3. '   ' → logprob: -4.988220691680908
    4. '#' → logprob: -5.238220691680908
    5. 'ans' → logprob: -8.363221168518066
    6. 'print' → logprob: -8.863221168518066
    7. 'diff' → logprob: -9.363221168518066
    8. ' last' → logprob: -9.863221168518066
    9. ' if' → logprob: -10.488221168518066
    10. 'answer' → logprob: -11.613221168518066

Token 504: ' le' (ID: 505)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.5256343483924866
    2. ' last' → logprob: -1.4006342887878418
    3. '(last' → logprob: -2.400634288787842
    4. 'if' → logprob: -3.400634288787842
    5. ' if' → logprob: -3.525634288787842
    6. '   ' → logprob: -5.025634288787842
    7. 'abs' → logprob: -7.025634288787842
    8. 'x' → logprob: -7.400634288787842
    9. ' x' → logprob: -8.275634765625
    10. '(' → logprob: -9.025634765625

Token 505: ' résultat' (ID: 62556)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17794695496559143
    2. 'last' → logprob: -2.5529470443725586
    3. 'diff' → logprob: -3.1779470443725586
    4. ' if' → logprob: -3.5529470443725586
    5. 'difference' → logprob: -5.177947044372559
    6. 'éc' → logprob: -5.802947044372559
    7. 'mod' → logprob: -6.677947044372559
    8. 'current' → logprob: -6.927947044372559
    9. '```' → logprob: -7.052947044372559
    10. ' last' → logprob: -7.177947044372559

Token 506: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.717490017414093
    2. ' =' → logprob: -1.7174899578094482
    3. '=' → logprob: -1.9674899578094482
    4. 'if' → logprob: -2.3424899578094482
    5. '   ' → logprob: -2.4674899578094482
    6. '+=' → logprob: -5.842490196228027
    7. ' +=' → logprob: -6.092490196228027
    8. ' between' → logprob: -6.342490196228027
    9. '>=' → logprob: -7.467490196228027
    10. 'between' → logprob: -7.717490196228027

Token 507: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.28324466943740845
    2. 'abs' → logprob: -2.4082446098327637
    3. 'last' → logprob: -2.6582446098327637
    4. 'x' → logprob: -2.9082446098327637
    5. ' ten' → logprob: -4.033244609832764
    6. ' abs' → logprob: -5.908244609832764
    7. ' last' → logprob: -6.033244609832764
    8. '(' → logprob: -6.158244609832764
    9. '(x' → logprob: -6.283244609832764
    10. ' x' → logprob: -6.283244609832764

Token 508: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.007568649481981993
    2. '(x' → logprob: -5.132568836212158
    3. '(' → logprob: -7.132568836212158
    4. '_' → logprob: -7.257568836212158
    5. '(last' → logprob: -9.632568359375
    6. '_(' → logprob: -10.507568359375
    7. 'mod' → logprob: -10.882568359375
    8. '(_' → logprob: -12.382568359375
    9. '_last' → logprob: -12.507568359375
    10. '_MOD' → logprob: -13.382568359375

Token 509: ' sur' (ID: 1512)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3137710392475128
    2. '(last' → logprob: -1.3137710094451904
    3. '(' → logprob: -8.06377124786377
    4. 'x' → logprob: -8.68877124786377
    5. 'last' → logprob: -11.18877124786377
    6. '(next' → logprob: -13.31377124786377
    7. '((' → logprob: -13.68877124786377
    8. ' (' → logprob: -13.68877124786377
    9. '(old' → logprob: -13.93877124786377
    10. '(abs' → logprob: -13.93877124786377

Token 510: ' la' (ID: 557)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.3238157033920288
    2. '(x' → logprob: -2.0738158226013184
    3. 'x' → logprob: -2.3238158226013184
    4. 'last' → logprob: -2.9488158226013184
    5. '(' → logprob: -7.698815822601318
    6. ' x' → logprob: -9.57381534576416
    7. ' last' → logprob: -9.82381534576416
    8. ' (' → logprob: -11.94881534576416
    9. '```' → logprob: -12.19881534576416
    10. '[last' → logprob: -12.32381534576416

Token 511: ' variable' (ID: 11076)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.055192895233631134
    2. 'x' → logprob: -2.9301929473876953
    3. ' last' → logprob: -9.055192947387695
    4. '(last' → logprob: -9.680192947387695
    5. 'new' → logprob: -9.930192947387695
    6. 'previous' → logprob: -10.680192947387695
    7. 'dern' → logprob: -11.180192947387695
    8. '```' → logprob: -11.305192947387695
    9. '[last' → logprob: -11.555192947387695
    10. 'old' → logprob: -12.180192947387695

Token 512: ' '' (ID: 461)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.07235382497310638
    2. 'last' → logprob: -3.1973538398742676
    3. '(x' → logprob: -4.072353839874268
    4. 'x' → logprob: -4.447353839874268
    5. '(' → logprob: -8.94735336303711
    6. ' last' → logprob: -10.44735336303711
    7. '(ans' → logprob: -12.44735336303711
    8. ' x' → logprob: -12.57235336303711
    9. '[last' → logprob: -13.57235336303711
    10. 'dern' → logprob: -13.69735336303711

Token 513: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.1141805425286293
    2. 'x' → logprob: -2.239180564880371
    3. ' last' → logprob: -6.739180564880371
    4. ' x' → logprob: -8.864180564880371
    5. '(last' → logprob: -11.114180564880371
    6. '   ' → logprob: -12.614180564880371
    7. 'ans' → logprob: -13.676680564880371
    8. '[last' → logprob: -13.739180564880371
    9. '	last' → logprob: -13.801680564880371
    10. ' ' → logprob: -13.926680564880371

Token 514: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17705725133419037
    2. ',' → logprob: -2.0520572662353516
    3. '   ' → logprob: -4.677057266235352
    4. '()' → logprob: -5.427057266235352
    5. ' ,' → logprob: -5.927057266235352
    6. ' )' → logprob: -5.927057266235352
    7. '(x' → logprob: -6.302057266235352
    8. '(last' → logprob: -6.302057266235352
    9. ',last' → logprob: -6.427057266235352
    10. ' -' → logprob: -6.677057266235352

Token 515: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.134371280670166
    2. '>' → logprob: -1.759371280670166
    3. ' >' → logprob: -2.009371280670166
    4. 'if' → logprob: -2.634371280670166
    5. ' if' → logprob: -3.259371280670166
    6. '<' → logprob: -3.259371280670166
    7. ' <' → logprob: -3.634371280670166
    8. '+' → logprob: -3.634371280670166
    9. '   ' → logprob: -3.759371280670166
    10. '()' → logprob: -4.259371280670166

Token 516: ' sur' (ID: 1512)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.14316031336784363
    2. ' ten' → logprob: -2.018160343170166
    3. '   ' → logprob: -9.143159866333008
    4. ' x' → logprob: -9.268159866333008
    5. 'x' → logprob: -9.518159866333008
    6. ' ' → logprob: -9.643159866333008
    7. '10' → logprob: -10.518159866333008
    8. 'space' → logprob: -11.143159866333008
    9. ' ' → logprob: -11.268159866333008
    10. 'the' → logprob: -11.393159866333008

Token 517: ' le' (ID: 505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.010802914388477802
    2. '(x' → logprob: -4.635802745819092
    3. ' x' → logprob: -6.885802745819092
    4. '   ' → logprob: -11.63580322265625
    5. 'last' → logprob: -12.26080322265625
    6. 'la' → logprob: -12.51080322265625
    7. 'l' → logprob: -12.76080322265625
    8. '	x' → logprob: -13.76080322265625
    9. '(' → logprob: -14.13580322265625
    10. 'ten' → logprob: -14.26080322265625

Token 518: ' nouvel' (ID: 76298)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001415618316968903
    2. ' x' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.500141143798828
    4. 'ten' → logprob: -15.375141143798828
    5. 'new' → logprob: -15.625141143798828
    6. ' ' → logprob: -16.125141143798828
    7. '
' → logprob: -16.375141143798828
    8. '	x' → logprob: -16.500141143798828
    9. '`' → logprob: -16.625141143798828
    10. '(x' → logprob: -16.750141143798828

Token 519: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00020413640595506877
    2. ' x' → logprob: -8.500204086303711
    3. '(x' → logprob: -14.875204086303711
    4. '	x' → logprob: -15.125204086303711
    5. '   ' → logprob: -17.50020408630371
    6. ' ' → logprob: -17.62520408630371
    7. 'last' → logprob: -18.50020408630371
    8. '_x' → logprob: -19.50020408630371
    9. '"x' → logprob: -20.25020408630371
    10. ',x' → logprob: -20.62520408630371

Token 520: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08691979199647903
    2. ' if' → logprob: -2.9619197845458984
    3. ' ==' → logprob: -4.461919784545898
    4. ' !=' → logprob: -5.211919784545898
    5. '==' → logprob: -5.836919784545898
    6. ' <=' → logprob: -6.336919784545898
    7. 'if' → logprob: -6.336919784545898
    8. ',' → logprob: -6.461919784545898
    9. '<|end|>' → logprob: -6.461919784545898
    10. '!=' → logprob: -7.211919784545898

Token 521: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008532303385436535
    2. ' if' → logprob: -4.883532524108887
    3. 'if' → logprob: -7.383532524108887
    4. '       ' → logprob: -9.758532524108887
    5. '	if' → logprob: -10.508532524108887
    6. '    ' → logprob: -10.633532524108887
    7. '<|end|>' → logprob: -10.633532524108887
    8. ':' → logprob: -10.883532524108887
    9. '```' → logprob: -11.133532524108887
    10. '.' → logprob: -11.383532524108887

Token 522: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5010805130004883
    2. ' if' → logprob: -1.0010805130004883
    3. '   ' → logprob: -3.6260805130004883
    4. '	if' → logprob: -12.001080513000488
    5. 'diff' → logprob: -12.126080513000488
    6. '```' → logprob: -12.751080513000488
    7. ' ' → logprob: -13.001080513000488
    8. '    ' → logprob: -13.626080513000488
    9. 'last' → logprob: -14.376080513000488
    10. '  ' → logprob: -14.376080513000488

Token 523: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04918823391199112
    2. ' if' → logprob: -3.0491881370544434
    3. '   ' → logprob: -7.424188137054443
    4. 'diff' → logprob: -13.424188613891602
    5. '	if' → logprob: -13.924188613891602
    6. ' ' → logprob: -14.049188613891602
    7. 'last' → logprob: -15.424188613891602
    8. '```' → logprob: -15.924188613891602
    9. 'while' → logprob: -16.1741886138916
    10. 'print' → logprob: -16.4241886138916

Token 524: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.04337960109114647
    2. ' ten' → logprob: -3.168379545211792
    3. '(' → logprob: -8.793379783630371
    4. '   ' → logprob: -8.793379783630371
    5. ' ' → logprob: -10.168379783630371
    6. '  ' → logprob: -11.793379783630371
    7. ' (' → logprob: -11.793379783630371
    8. '10' → logprob: -12.168379783630371
    9. '    ' → logprob: -13.105879783630371
    10. 'abs' → logprob: -13.605879783630371

Token 525: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.735893965815194e-05
    2. '(last' → logprob: -11.375017166137695
    3. '(x' → logprob: -12.625017166137695
    4. 'last' → logprob: -14.250017166137695
    5. '(' → logprob: -14.625017166137695
    6. 'mod' → logprob: -14.875017166137695
    7. '_MOD' → logprob: -15.250017166137695
    8. '_' → logprob: -15.750017166137695
    9. '_last' → logprob: -15.875017166137695
    10. '(mod' → logprob: -15.875017166137695

Token 526: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.20145270228385925
    2. '(x' → logprob: -1.7014527320861816
    3. '(' → logprob: -10.951452255249023
    4. 'last' → logprob: -11.326452255249023
    5. 'x' → logprob: -11.826452255249023
    6. '(next' → logprob: -14.326452255249023
    7. '(new' → logprob: -14.826452255249023
    8. '(old' → logprob: -15.326452255249023
    9. '(left' → logprob: -15.451452255249023
    10. '(y' → logprob: -16.076452255249023

Token 527: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012373795732855797
    2. '())' → logprob: -4.887373924255371
    3. ')>' → logprob: -6.387373924255371
    4. '()' → logprob: -6.512373924255371
    5. ' )' → logprob: -6.887373924255371
    6. '()>' → logprob: -8.887373924255371
    7. '>' → logprob: -9.387373924255371
    8. ')!=' → logprob: -9.512373924255371
    9. ' >' → logprob: -10.012373924255371
    10. '(x' → logprob: -10.262373924255371

Token 528: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5556249618530273
    2. '<' → logprob: -1.4306249618530273
    3. ' >' → logprob: -2.3056249618530273
    4. ' <' → logprob: -3.0556249618530273
    5. '()' → logprob: -4.430624961853027
    6. '()>' → logprob: -4.430624961853027
    7. '()<' → logprob: -5.305624961853027
    8. '==' → logprob: -5.555624961853027
    9. '!=' → logprob: -6.180624961853027
    10. ' ==' → logprob: -6.680624961853027

Token 529: ' strict' (ID: 12035)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.27210670709609985
    2. '>' → logprob: -1.897106647491455
    3. ' <' → logprob: -3.022106647491455
    4. ' >' → logprob: -3.397106647491455
    5. '<=' → logprob: -6.397106647491455
    6. 'ten' → logprob: -7.147106647491455
    7. '==' → logprob: -7.522106647491455
    8. '>=' → logprob: -7.522106647491455
    9. ' <=' → logprob: -7.772106647491455
    10. '!=' → logprob: -7.897106647491455

Token 530: 'ement' (ID: 962)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7836925387382507
    2. '>' → logprob: -0.7836925387382507
    3. 'ement' → logprob: -2.5336925983428955
    4. ' >' → logprob: -5.658692359924316
    5. ' <' → logprob: -6.408692359924316
    6. 'ly' → logprob: -6.658692359924316
    7. 'lement' → logprob: -7.783692359924316
    8. '><' → logprob: -9.783692359924316
    9. 'ment' → logprob: -10.033692359924316
    10. ')' → logprob: -10.158692359924316

Token 531: ' supérieur' (ID: 98491)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03527146205306053
    2. '<' → logprob: -3.535271406173706
    3. 'greater' → logprob: -5.535271644592285
    4. ' >' → logprob: -6.660271644592285
    5. ' greater' → logprob: -8.910271644592285
    6. ' supérieur' → logprob: -9.785271644592285
    7. ' <' → logprob: -9.910271644592285
    8. 'sup' → logprob: -11.410271644592285
    9. 'less' → logprob: -12.160271644592285
    10. '>)' → logprob: -12.535271644592285

Token 532: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.043458592146635056
    2. '   ' → logprob: -4.043458461761475
    3. ' à' → logprob: -4.043458461761475
    4. ',' → logprob: -6.293458461761475
    5. ' (' → logprob: -6.668458461761475
    6. '>' → logprob: -6.918458461761475
    7. '(x' → logprob: -7.043458461761475
    8. ' >' → logprob: -7.168458461761475
    9. 'à' → logprob: -7.543458461761475
    10. ' to' → logprob: -7.668458461761475

Token 533: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.016049619764089584
    2. ' ten' → logprob: -4.141049385070801
    3. '   ' → logprob: -12.3910493850708
    4. ' ' → logprob: -12.5160493850708
    5. ' ' → logprob: -12.7660493850708
    6. '  ' → logprob: -13.6410493850708
    7. '10' → logprob: -14.1410493850708
    8. '    ' → logprob: -14.8910493850708
    9. '```' → logprob: -14.8910493850708
    10. '     ' → logprob: -15.5160493850708

Token 534: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.128163257315464e-07
    2. 'mod' → logprob: -15.875
    3. '_MOD' → logprob: -16.25
    4. '_' → logprob: -17.625
    5. ' _' → logprob: -17.625
    6. 'omod' → logprob: -19.0
    7. '_Mod' → logprob: -19.625
    8. '._' → logprob: -19.75
    9. '_m' → logprob: -19.875
    10. 'Mod' → logprob: -20.625

Token 535: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003208037815056741
    2. 'x' → logprob: -8.125320434570312
    3. '(' → logprob: -10.625320434570312
    4. ' (' → logprob: -15.250320434570312
    5. ' x' → logprob: -16.125320434570312
    6. '(last' → logprob: -17.375320434570312
    7. '(new' → logprob: -17.750320434570312
    8. 'new' → logprob: -18.625320434570312
    9. '(
' → logprob: -19.250320434570312
    10. 'last' → logprob: -19.375320434570312

Token 536: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04541479051113129
    2. ')' → logprob: -3.170414686203003
    3. '):
' → logprob: -6.170414924621582
    4. '   ' → logprob: -8.795414924621582
    5. ' and' → logprob: -10.295414924621582
    6. ' ):' → logprob: -10.295414924621582
    7. ':' → logprob: -10.545414924621582
    8. ',' → logprob: -10.670414924621582
    9. '),' → logprob: -11.045414924621582
    10. '):

' → logprob: -12.045414924621582

Token 537: ' alors' (ID: 17971)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3134413957595825
    2. '   ' → logprob: -1.4384413957595825
    3. '\n' → logprob: -4.063441276550293
    4. ':' → logprob: -4.813441276550293
    5. '    ' → logprob: -5.813441276550293
    6. 'if' → logprob: -7.313441276550293
    7. ' if' → logprob: -7.938441276550293
    8. 'continue' → logprob: -7.938441276550293
    9. ' continue' → logprob: -8.438441276550293
    10. '\' → logprob: -8.438441276550293

Token 538: ' cela' (ID: 17542)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.06790140271186829
    2. 'ans' → logprob: -3.817901372909546
    3. '   ' → logprob: -3.942901372909546
    4. 'break' → logprob: -4.192901611328125
    5. ' last' → logprob: -4.817901611328125
    6. ' ans' → logprob: -7.317901611328125
    7. ' break' → logprob: -8.692901611328125
    8. 'print' → logprob: -9.942901611328125
    9. '	last' → logprob: -9.942901611328125
    10. '	ans' → logprob: -10.192901611328125

Token 539: ' signifie' (ID: 81149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1303407996892929
    2. '       ' → logprob: -2.755340814590454
    3. ':' → logprob: -3.380340814590454
    4. '#' → logprob: -4.630340576171875
    5. ' continue' → logprob: -5.755340576171875
    6. 'continue' → logprob: -5.755340576171875
    7. '    ' → logprob: -6.005340576171875
    8. 'break' → logprob: -6.255340576171875
    9. ' #' → logprob: -7.380340576171875
    10. '```' → logprob: -7.380340576171875

Token 540: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2465004026889801
    2. '       ' → logprob: -1.6215003728866577
    3. '    ' → logprob: -4.246500492095947
    4. '    
' → logprob: -6.121500492095947
    5. '<|end|>' → logprob: -6.996500492095947
    6. '     ' → logprob: -7.121500492095947
    7. ' that' → logprob: -7.371500492095947
    8. '        
' → logprob: -7.746500492095947
    9. '\n' → logprob: -7.871500492095947
    10. ' que' → logprob: -8.871500015258789

Token 541: ' 
' (ID: 793)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.08142372965812683
    2. '   ' → logprob: -3.206423759460449
    3. 'ans' → logprob: -3.581423759460449
    4. ' last' → logprob: -4.831423759460449
    5. ' ans' → logprob: -7.081423759460449
    6. '#' → logprob: -7.456423759460449
    7. '    
' → logprob: -8.95642375946045
    8. '10' → logprob: -9.58142375946045
    9. '	ans' → logprob: -9.83142375946045
    10. '	last' → logprob: -10.20642375946045

Token 542: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16634239256381989
    2. 'last' → logprob: -2.2913424968719482
    3. '       ' → logprob: -3.0413424968719482
    4. ' last' → logprob: -5.791342258453369
    5. '#' → logprob: -7.541342258453369
    6. '    ' → logprob: -8.291342735290527
    7. '	last' → logprob: -8.916342735290527
    8. '\t' → logprob: -9.041342735290527
    9. '   ' → logprob: -10.041342735290527
    10. 'break' → logprob: -10.541342735290527

Token 543: ' #' (ID: 1069)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.36432328820228577
    2. '   ' → logprob: -1.4893232583999634
    3. 'ans' → logprob: -2.864323377609253
    4. ' last' → logprob: -4.614323139190674
    5. '#' (adapté à ' #') → logprob: -5.364323139190674
    6. ' ans' → logprob: -6.239323139190674
    7. 'break' → logprob: -6.489323139190674
    8. '       ' → logprob: -6.614323139190674
    9. 'x' → logprob: -6.739323139190674
    10. 'ten' → logprob: -7.489323139190674

Token 544: ' le' (ID: 505)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.02991906926035881
    2. 'ten' → logprob: -4.154919147491455
    3. ' last' → logprob: -5.029919147491455
    4. '   ' → logprob: -5.779919147491455
    5. 'ans' → logprob: -6.529919147491455
    6. '#' → logprob: -7.029919147491455
    7. ' ten' → logprob: -7.029919147491455
    8. 'x' → logprob: -7.279919147491455
    9. '10' → logprob: -9.279918670654297
    10. ' ans' → logprob: -10.404918670654297

Token 545: ' chiffre' (ID: 107420)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.06087476387619972
    2. ' last' → logprob: -3.1858747005462646
    3. 'break' → logprob: -4.810874938964844
    4. 'ans' → logprob: -5.560874938964844
    5. '   ' → logprob: -6.310874938964844
    6. 'x' → logprob: -6.310874938964844
    7. '\n' → logprob: -7.685874938964844
    8. ' ans' → logprob: -7.810874938964844
    9. '#' → logprob: -8.560874938964844
    10. 'continue' → logprob: -8.560874938964844

Token 546: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.18738359212875366
    2. '   ' → logprob: -2.3123836517333984
    3. 'des' → logprob: -3.9373836517333984
    4. '_' → logprob: -4.187383651733398
    5. 's' → logprob: -4.312383651733398
    6. ' s' → logprob: -5.187383651733398
    7. ' ' → logprob: -5.812383651733398
    8. '_des' → logprob: -5.937383651733398
    9. ' _' → logprob: -6.437383651733398
    10. ' x' → logprob: -6.562383651733398

Token 547: ' unités' (ID: 176121)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.2402387410402298
    2. 'x' → logprob: -2.240238666534424
    3. ' unités' → logprob: -2.865238666534424
    4. 'units' → logprob: -3.740238666534424
    5. ' x' → logprob: -3.865238666534424
    6. ' unit' → logprob: -5.490238666534424
    7. ' units' → logprob: -7.490238666534424
    8. 'un' → logprob: -8.865239143371582
    9. ' ' → logprob: -9.115239143371582
    10. ' unidades' → logprob: -9.240239143371582

Token 548: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12104546278715134
    2. ':' → logprob: -2.9960453510284424
    3. '>' → logprob: -3.4960453510284424
    4. ' >' → logprob: -4.4960455894470215
    5. ' de' → logprob: -5.2460455894470215
    6. ')' → logprob: -5.2460455894470215
    7. ' est' → logprob: -6.1210455894470215
    8. ',' → logprob: -6.2460455894470215
    9. ' of' → logprob: -6.8710455894470215
    10. '#' → logprob: -7.1210455894470215

Token 549: ' last' (ID: 2174)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015047288499772549
    2. 'last' → logprob: -4.640047073364258
    3. ' x' → logprob: -5.265047073364258
    4. ' last' → logprob: -9.140047073364258
    5. ' ' → logprob: -15.640047073364258
    6. '	x' → logprob: -15.890047073364258
    7. 'new' → logprob: -16.265047073364258
    8. '```' → logprob: -16.765047073364258
    9. '[last' → logprob: -16.765047073364258
    10. '   ' → logprob: -16.890047073364258

Token 550: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05716599151492119
    2. '>' → logprob: -2.93216609954834
    3. '   ' → logprob: -6.93216609954834
    4. ')>' → logprob: -8.18216609954834
    5. ' <' → logprob: -8.30716609954834
    6. ':' → logprob: -8.43216609954834
    7. ')' → logprob: -8.80716609954834
    8. ' !=' → logprob: -9.68216609954834
    9. ' ' → logprob: -9.80716609954834
    10. '">' → logprob: -10.05716609954834

Token 551: ' plus' (ID: 2932)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -1.2307541370391846
    2. 'plus' → logprob: -1.3557541370391846
    3. 'sup' → logprob: -2.1057541370391846
    4. 'strict' → logprob: -2.3557541370391846
    5. 'greater' → logprob: -2.3557541370391846
    6. '>' → logprob: -2.9807541370391846
    7. ' plus' → logprob: -3.4807541370391846
    8. 'x' → logprob: -3.6057541370391846
    9. 'larg' → logprob: -5.6057538986206055
    10. ' greater' → logprob: -5.6057538986206055

Token 552: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.005548320710659027
    2. 'gr' → logprob: -6.130548477172852
    3. 'é' → logprob: -7.005548477172852
    4. ' grand' → logprob: -7.255548477172852
    5. ' élevé' → logprob: -7.255548477172852
    6. 'import' → logprob: -8.630548477172852
    7. 'ele' → logprob: -8.755548477172852
    8. 'large' → logprob: -9.005548477172852
    9. 'great' → logprob: -9.255548477172852
    10. 'haut' → logprob: -9.505548477172852

Token 553: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09520059078931808
    2. ' than' → logprob: -3.220200538635254
    3. ':' → logprob: -3.470200538635254
    4. ' or' → logprob: -4.845200538635254
    5. ' and' → logprob: -5.345200538635254
    6. '       ' → logprob: -6.095200538635254
    7. ',' → logprob: -6.720200538635254
    8. '    ' → logprob: -6.845200538635254
    9. '<|end|>' → logprob: -7.220200538635254
    10. '  ' → logprob: -8.095200538635254

Token 554: 'ou' (ID: 283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008637497201561928
    2. '   ' → logprob: -5.133637428283691
    3. ' )' → logprob: -7.133637428283691
    4. ' or' → logprob: -7.383637428283691
    5. ' than' → logprob: -7.758637428283691
    6. '<|end|>' → logprob: -8.008637428283691
    7. ')x' → logprob: -9.258637428283691
    8. '),' → logprob: -9.633637428283691
    9. '#' → logprob: -9.758637428283691
    10. 'than' → logprob: -10.133637428283691

Token 555: ' vaut' (ID: 83004)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.9603701829910278
    2. '<|end|>' → logprob: -1.5853701829910278
    3. ')' → logprob: -1.9603701829910278
    4. 'x' → logprob: -2.2103700637817383
    5. 'equal' → logprob: -3.8353700637817383
    6. '>' → logprob: -4.335370063781738
    7. 'ten' → logprob: -4.585370063781738
    8. '>)' → logprob: -4.710370063781738
    9. '```' → logprob: -4.835370063781738
    10. ' equal' → logprob: -4.835370063781738

Token 556: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43457385897636414
    2. '10' → logprob: -2.1845738887786865
    3. 'x' → logprob: -2.3095738887786865
    4. '0' → logprob: -2.4345738887786865
    5. '```' → logprob: -4.309573650360107
    6. ' ' → logprob: -4.559573650360107
    7. 'strict' → logprob: -4.684573650360107
    8. 'than' → logprob: -5.809573650360107
    9. 'plus' → logprob: -5.809573650360107
    10. ' )' → logprob: -6.434573650360107

Token 557: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3449764549732208
    2. 'x' → logprob: -1.7199764251708984
    3. '10' → logprob: -3.0949764251708984
    4. ')' → logprob: -3.3449764251708984
    5. '```' → logprob: -4.094976425170898
    6. '1' → logprob: -5.094976425170898
    7. ' ' → logprob: -5.594976425170898
    8. 'ten' → logprob: -6.844976425170898
    9. 'more' → logprob: -7.469976425170898
    10. 'zero' → logprob: -7.844976425170898

Token 558: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006561310030519962
    2. ' )' → logprob: -5.631561279296875
    3. '   ' → logprob: -6.256561279296875
    4. '),' → logprob: -7.006561279296875
    5. ' que' → logprob: -10.756561279296875
    6. ' than' → logprob: -10.881561279296875
    7. ')
' → logprob: -11.006561279296875
    8. '):
' → logprob: -11.131561279296875
    9. '):' → logprob: -11.256561279296875
    10. ' ),' → logprob: -12.006561279296875

Token 559: ' last' (ID: 2174)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.2644450068473816
    2. 'last' → logprob: -1.5144450664520264
    3. 'x' → logprob: -5.264444828033447
    4. ' last' → logprob: -5.639444828033447
    5. ' ten' → logprob: -6.014444828033447
    6. '10' → logprob: -8.514445304870605
    7. '(last' → logprob: -8.889445304870605
    8. ' x' → logprob: -9.014445304870605
    9. 'dern' → logprob: -9.139445304870605
    10. 'le' → logprob: -9.514445304870605

Token 560: ' fin' (ID: 2131)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.0019166469573975
    2. '%' → logprob: -1.1269166469573975
    3. ')' → logprob: -2.0019166469573975
    4. ' %' → logprob: -2.5019166469573975
    5. '>' → logprob: -2.6269166469573975
    6. ' )' → logprob: -5.126916885375977
    7. '   ' → logprob: -5.376916885375977
    8. ')>' → logprob: -5.751916885375977
    9. ')%' → logprob: -7.001916885375977
    10. '%)' → logprob: -7.501916885375977

Token 561: 'issait' (ID: 93767)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.03352685645222664
    2. 't' → logprob: -4.40852689743042
    3. 'issait' → logprob: -4.65852689743042
    4. 'ait' → logprob: -6.15852689743042
    5. '```' → logprob: -6.40852689743042
    6. 'i' → logprob: -6.40852689743042
    7. 'issant' → logprob: -7.03352689743042
    8. ')' → logprob: -7.03352689743042
    9. 's' → logprob: -7.53352689743042
    10. 'uit' → logprob: -8.158526420593262

Token 562: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.05117831006646156
    2. ' par' → logprob: -3.051178216934204
    3. ')' → logprob: -6.551178455352783
    4. 'sur' → logprob: -7.051178455352783
    5. 'avec' → logprob: -9.801177978515625
    6. 'à' → logprob: -10.051177978515625
    7. '_par' → logprob: -10.551177978515625
    8. 'by' → logprob: -11.176177978515625
    9. 'en' → logprob: -11.176177978515625
    10. '10' → logprob: -11.426177978515625

Token 563: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -11.250020027160645
    3. '10' → logprob: -12.750020027160645
    4. 'zero' → logprob: -13.375020027160645
    5. '000' → logprob: -13.875020027160645
    6. ' zéro' → logprob: -14.125020027160645
    7. '```' → logprob: -15.250020027160645
    8. 'un' → logprob: -15.750020027160645
    9. ')' → logprob: -16.25002098083496
    10. ''' → logprob: -16.25002098083496

Token 564: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.2020991056924686e-05
    2. 'zero' → logprob: -11.250032424926758
    3. ' ' → logprob: -11.500032424926758
    4. ' zéro' → logprob: -13.000032424926758
    5. '10' → logprob: -13.250032424926758
    6. '...' → logprob: -13.875032424926758
    7. '```' → logprob: -14.375032424926758
    8. ')' → logprob: -14.500032424926758
    9. '000' → logprob: -14.625032424926758
    10. ' zero' → logprob: -14.750032424926758

Token 565: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006713124457746744
    2. '   ' → logprob: -6.006712913513184
    3. ' )' → logprob: -6.631712913513184
    4. '):' → logprob: -6.631712913513184
    5. '),' → logprob: -7.131712913513184
    6. '):
' → logprob: -7.256712913513184
    7. '):

' → logprob: -10.881712913513184
    8. ',' → logprob: -11.381712913513184
    9. ')
' → logprob: -11.631712913513184
    10. '    ' → logprob: -12.006712913513184

Token 566: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01758049800992012
    2. '       ' → logprob: -4.392580509185791
    3. ':' → logprob: -5.392580509185791
    4. ',' → logprob: -9.142580032348633
    5. ':
' → logprob: -9.142580032348633
    6. '\n' → logprob: -9.517580032348633
    7. '    
' → logprob: -10.142580032348633
    8. '	' → logprob: -10.392580032348633
    9. '\' → logprob: -10.767580032348633
    10. '
' → logprob: -11.142580032348633

Token 567: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11534741520881653
    2. '       ' → logprob: -3.240347385406494
    3. ':' → logprob: -3.365347385406494
    4. ' or' → logprob: -4.115347385406494
    5. ' and' → logprob: -4.490347385406494
    6. ' :' → logprob: -6.115347385406494
    7. ' if' → logprob: -6.365347385406494
    8. '    ' → logprob: -6.740347385406494
    9. 'and' → logprob: -6.865347385406494
    10. '):' → logprob: -7.615347385406494

Token 568: ' Dans' (ID: 22082)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09059690684080124
    2. '       ' → logprob: -2.465596914291382
    3. ' if' → logprob: -6.590596675872803
    4. '    ' → logprob: -9.340597152709961
    5. 'if' → logprob: -9.590597152709961
    6. '    
' → logprob: -10.465597152709961
    7. '   ' → logprob: -11.090597152709961
    8. '           ' → logprob: -11.215597152709961
    9. '```' → logprob: -11.465597152709961
    10. '
' → logprob: -11.840597152709961

Token 569: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3234803080558777
    2. ' x' → logprob: -1.9484803676605225
    3. 'x' → logprob: -2.8234803676605225
    4. ' last' → logprob: -3.5734803676605225
    5. 'last' → logprob: -4.073480129241943
    6. ' that' → logprob: -4.573480129241943
    7. '    ' → logprob: -4.823480129241943
    8. ' la' → logprob: -6.073480129241943
    9. ' not' → logprob: -6.198480129241943
    10. 'that' → logprob: -6.573480129241943

Token 570: ' cas' (ID: 2108)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7487181425094604
    2. 'if' → logprob: -0.8737181425094604
    3. '   ' → logprob: -2.62371826171875
    4. ' cas' → logprob: -4.37371826171875
    5. ' code' → logprob: -5.12371826171875
    6. ':' → logprob: -5.49871826171875
    7. ' continue' → logprob: -5.99871826171875
    8. 'continue' → logprob: -6.24871826171875
    9. 'contin' → logprob: -6.49871826171875
    10. '       ' → logprob: -6.49871826171875

Token 571: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4410606920719147
    2. '   ' → logprob: -1.0660606622695923
    3. ':' → logprob: -4.566060543060303
    4. ':
' → logprob: -6.941060543060303
    5. ',' → logprob: -8.066061019897461
    6. '    ' → logprob: -8.941061019897461
    7. ' :' → logprob: -8.941061019897461
    8. '        
' → logprob: -9.691061019897461
    9. ' :
' → logprob: -9.816061019897461
    10. '     ' → logprob: -10.191061019897461

Token 572: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35591262578964233
    2. 'last' → logprob: -1.355912685394287
    3. ' last' → logprob: -3.230912685394287
    4. '       ' → logprob: -6.605912685394287
    5. 'ans' → logprob: -8.355912208557129
    6. 'break' → logprob: -8.855912208557129
    7. ' ans' → logprob: -9.105912208557129
    8. ' if' → logprob: -9.605912208557129
    9. '	last' → logprob: -9.605912208557129
    10. 'if' → logprob: -9.730912208557129

Token 573: ' rem' (ID: 1662)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7837656140327454
    2. '   ' → logprob: -0.9087656140327454
    3. ' last' → logprob: -2.9087655544281006
    4. 'ans' → logprob: -3.0337655544281006
    5. 'last' → logprob: -4.03376579284668
    6. '    ' → logprob: -4.90876579284668
    7. '       ' → logprob: -4.90876579284668
    8. '	ans' → logprob: -6.65876579284668
    9. 'break' → logprob: -6.90876579284668
    10. ' break' → logprob: -7.28376579284668

Token 574: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.021004263311624527
    2. 'et' → logprob: -4.6460041999816895
    3. 'placer' → logprob: -4.6460041999816895
    4. 'ets' → logprob: -7.6460041999816895
    5. 'onte' → logprob: -8.521004676818848
    6. 'p' → logprob: -8.646004676818848
    7. 'onter' → logprob: -8.646004676818848
    8. 'placement' → logprob: -9.146004676818848
    9. 'places' → logprob: -9.771004676818848
    10. 'pla' → logprob: -9.771004676818848

Token 575: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.43057355284690857
    2. 'last' → logprob: -1.055573582649231
    3. '   ' → logprob: -6.930573463439941
    4. ' ans' → logprob: -7.930573463439941
    5. ' x' → logprob: -8.180573463439941
    6. 'ans' → logprob: -9.305573463439941
    7. 'x' → logprob: -9.555573463439941
    8. ' la' → logprob: -10.055573463439941
    9. '(last' → logprob: -11.055573463439941
    10. '	last' → logprob: -11.180573463439941

Token 576: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008639508858323097
    2. '=' → logprob: -4.758639335632324
    3. '=x' → logprob: -12.008639335632324
    4. ',' → logprob: -12.133639335632324
    5. '<|end|>' → logprob: -12.258639335632324
    6. ' ' → logprob: -13.008639335632324
    7. '   ' → logprob: -13.258639335632324
    8. 'x' → logprob: -13.508639335632324
    9. ' x' → logprob: -13.883639335632324
    10. '    ' → logprob: -15.008639335632324

Token 577: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029750604182481766
    2. ' x' → logprob: -3.5297505855560303
    3. '	x' → logprob: -16.65475082397461
    4. 'last' → logprob: -17.15475082397461
    5. ' ' → logprob: -17.77975082397461
    6. '(x' → logprob: -18.02975082397461
    7. '   ' → logprob: -18.77975082397461
    8. ' last' → logprob: -19.77975082397461
    9. '    ' → logprob: -20.65475082397461
    10. '10' → logprob: -21.02975082397461

Token 578: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000919200771022588
    2. '       ' → logprob: -7.875919342041016
    3. '
' → logprob: -8.500919342041016
    4. '<|end|>' → logprob: -8.625919342041016
    5. ' if' → logprob: -9.375919342041016
    6. '    
' → logprob: -10.625919342041016
    7. '    ' → logprob: -11.000919342041016
    8. 'if' → logprob: -12.125919342041016
    9. '	if' → logprob: -12.250919342041016
    10. '<|end|>' → logprob: -12.500919342041016

Token 579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.380904672667384e-05
    2. '    
' → logprob: -11.125033378601074
    3. 'if' → logprob: -11.875033378601074
    4. '```' → logprob: -12.000033378601074
    5. '
' → logprob: -13.125033378601074
    6. '	if' → logprob: -13.500033378601074
    7. '       ' → logprob: -13.750033378601074
    8. ' if' → logprob: -13.875033378601074
    9. '   ' → logprob: -15.375033378601074
    10. '<|end|>' → logprob: -16.00003433227539

Token 580: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019471932318992913
    2. 'if' (adapté à ' if') → logprob: -9.000194549560547
    3. ' if' → logprob: -10.000194549560547
    4. '    
' → logprob: -11.625194549560547
    5. '	if' → logprob: -11.875194549560547
    6. '```' → logprob: -12.750194549560547
    7. '       ' → logprob: -13.125194549560547
    8. '<|end|>' → logprob: -13.250194549560547
    9. '
' → logprob: -14.000194549560547
    10. '\' → logprob: -14.375194549560547

Token 581: ' ten' (ID: 4325)
  Prédit: ' ten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ten' → logprob: -0.023287637159228325
    2. 'ten' → logprob: -3.773287534713745
    3. '(' → logprob: -11.023287773132324
    4. ' ' → logprob: -11.273287773132324
    5. ' (' → logprob: -12.148287773132324
    6. ' ' → logprob: -12.273287773132324
    7. '10' → logprob: -14.148287773132324
    8. '   ' → logprob: -14.773287773132324
    9. ' tens' → logprob: -14.898287773132324
    10. '  ' → logprob: -15.148287773132324

Token 582: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.128163257315464e-07
    2. '_MOD' → logprob: -16.75
    3. ' _' → logprob: -17.0
    4. '_' → logprob: -17.125
    5. 'mod' → logprob: -17.375
    6. '_m' → logprob: -17.875
    7. '_mode' → logprob: -18.625
    8. '_Mod' → logprob: -18.875
    9. 'last' → logprob: -19.375
    10. 'Mod' → logprob: -20.0

Token 583: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -2.0100624169572257e-05
    2. '(' → logprob: -10.875020027160645
    3. '(x' → logprob: -14.125020027160645
    4. ' (' → logprob: -15.000020027160645
    5. 'last' → logprob: -16.87502098083496
    6. ',last' → logprob: -17.00002098083496
    7. '[last' → logprob: -17.50002098083496
    8. ' last' → logprob: -17.87502098083496
    9. '(l' → logprob: -18.00002098083496
    10. '(left' → logprob: -18.50002098083496

Token 584: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018458699923940003
    2. ')>' → logprob: -9.125185012817383
    3. ' )' → logprob: -9.500185012817383
    4. '   ' → logprob: -15.375185012817383
    5. '()' → logprob: -16.000185012817383
    6. '())' → logprob: -16.125185012817383
    7. '>' → logprob: -16.125185012817383
    8. '>)' → logprob: -16.625185012817383
    9. '(x' → logprob: -16.750185012817383
    10. ' ' → logprob: -17.125185012817383

Token 585: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.005932589527219534
    2. '>' → logprob: -5.130932807922363
    3. ' ' → logprob: -13.005932807922363
    4. ' <' → logprob: -13.880932807922363
    5. ' >
' → logprob: -15.755932807922363
    6. ' ' → logprob: -16.255931854248047
    7. '   ' → logprob: -16.380931854248047
    8. ' >
' → logprob: -16.380931854248047
    9. ')' → logprob: -16.505931854248047
    10. '<|end|>' → logprob: -16.755931854248047

Token 586: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.386962354183197
    2. ' ten' → logprob: -1.1369624137878418
    3. 'x' → logprob: -10.136961936950684
    4. ' x' → logprob: -10.386961936950684
    5. '10' → logprob: -11.511961936950684
    6. '(x' → logprob: -11.761961936950684
    7. '(' → logprob: -14.011961936950684
    8. ' ' → logprob: -14.386961936950684
    9. '.ten' → logprob: -14.636961936950684
    10. ' ' → logprob: -15.261961936950684

Token 587: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.7432603272027336e-06
    2. 'mod' → logprob: -13.625001907348633
    3. '_' → logprob: -15.625001907348633
    4. '(x' → logprob: -16.375001907348633
    5. ' _' → logprob: -16.375001907348633
    6. 'omod' → logprob: -17.000001907348633
    7. '_MOD' → logprob: -17.125001907348633
    8. '_Mod' → logprob: -19.250001907348633
    9. '__' → logprob: -19.375001907348633
    10. '	mod' → logprob: -19.500001907348633

Token 588: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.000007629394531
    3. ' (' → logprob: -13.625007629394531
    4. 'x' → logprob: -14.750007629394531
    5. '(
' → logprob: -19.75000762939453
    6. '(new' → logprob: -21.12500762939453
    7. ' x' → logprob: -21.25000762939453
    8. '(next' → logprob: -21.25000762939453
    9. '(last' → logprob: -21.25000762939453
    10. ' ' → logprob: -22.37500762939453

Token 589: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036791712045669556
    2. '):
' → logprob: -5.628679275512695
    3. ':' → logprob: -10.253679275512695
    4. ')' → logprob: -10.378679275512695
    5. '   ' → logprob: -12.003679275512695
    6. ' ):' → logprob: -12.253679275512695
    7. '):
' → logprob: -13.628679275512695
    8. '():' → logprob: -15.503679275512695
    9. '):

' → logprob: -15.503679275512695
    10. ''):' → logprob: -16.628679275512695

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005803893320262432
    2. '   ' → logprob: -5.505804061889648
    3. ' last' → logprob: -7.255804061889648
    4. '	last' → logprob: -8.380804061889648
    5. '```' → logprob: -8.630804061889648
    6. 'last' → logprob: -8.755804061889648
    7. '(last' → logprob: -9.130804061889648
    8. '[last' → logprob: -9.255804061889648
    9. '        
' → logprob: -9.380804061889648
    10. '    
' → logprob: -10.255804061889648

Token 591: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.8175926208496094
    2. 'last' (adapté à ' last') → logprob: -0.8175926208496094
    3. '   ' → logprob: -2.3175926208496094
    4. '	last' → logprob: -4.192592620849609
    5. '       ' → logprob: -5.692592620849609
    6. '(last' → logprob: -12.19259262084961
    7. '[last' → logprob: -12.31759262084961
    8. '    ' → logprob: -12.81759262084961
    9. ',last' → logprob: -12.94259262084961
    10. '   ' → logprob: -13.06759262084961

Token 592: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895386755466461
    2. '=' → logprob: -2.463953971862793
    3. '   ' → logprob: -11.838953971862793
    4. ' ' → logprob: -12.213953971862793
    5. '    ' → logprob: -13.963953971862793
    6. ',' → logprob: -15.213953971862793
    7. ' =
' → logprob: -15.713953971862793
    8. '<|end|>' → logprob: -15.713953971862793
    9. '  ' → logprob: -16.088953018188477
    10. ' =)' → logprob: -16.338953018188477

Token 593: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47407862544059753
    2. 'x' → logprob: -0.9740786552429199
    3. '	x' → logprob: -13.474078178405762
    4. ' ' → logprob: -16.599079132080078
    5. ' ' → logprob: -16.849079132080078
    6. '(x' → logprob: -17.849079132080078
    7. ')x' → logprob: -18.599079132080078
    8. '_x' → logprob: -18.599079132080078
    9. '{x' → logprob: -19.349079132080078
    10. ''x' → logprob: -19.349079132080078

Token 594: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01726173609495163
    2. '<|end|>' → logprob: -4.892261505126953
    3. ')' → logprob: -5.017261505126953
    4. '#' → logprob: -6.392261505126953
    5. '
' → logprob: -7.267261505126953
    6. ' print' → logprob: -9.267261505126953
    7. 'if' → logprob: -9.642261505126953
    8. '  
' → logprob: -9.642261505126953
    9. '```' → logprob: -9.767261505126953
    10. 'ans' → logprob: -9.767261505126953

Token 595: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011188744247192517
    2. '#' → logprob: -9.62511157989502
    3. 'ans' → logprob: -10.87511157989502
    4. ' print' → logprob: -11.25011157989502
    5. '
' → logprob: -11.75011157989502
    6. 'if' → logprob: -13.00011157989502
    7. '```' → logprob: -13.37511157989502
    8. ')' → logprob: -14.25011157989502
    9. '#print' → logprob: -14.37511157989502
    10. 'last' → logprob: -15.12511157989502

Token 596: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018225446343421936
    2. 'ans' → logprob: -4.01822566986084
    3. '#' → logprob: -10.14322566986084
    4. 'if' → logprob: -10.39322566986084
    5. '#print' → logprob: -13.14322566986084
    6. 'answer' → logprob: -13.76822566986084
    7. 'for' → logprob: -14.51822566986084
    8. ' print' → logprob: -14.64322566986084
    9. '```' → logprob: -14.76822566986084
    10. '(ans' → logprob: -15.64322566986084

Token 597: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13595978915691376
    2. '#' → logprob: -2.3859598636627197
    3. 'ans' → logprob: -3.8859598636627197
    4. 'last' → logprob: -5.135959625244141
    5. 'if' → logprob: -5.260959625244141
    6. 'for' → logprob: -6.760959625244141
    7. ' print' → logprob: -7.635959625244141
    8. 'la' → logprob: -7.635959625244141
    9. 'aj' → logprob: -8.01095962524414
    10. ' #' → logprob: -8.38595962524414

Token 598: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5421240329742432
    2. 'print' → logprob: -0.9171240329742432
    3. '#' → logprob: -4.167123794555664
    4. 'if' → logprob: -6.042123794555664
    5. ' for' → logprob: -7.542123794555664
    6. 'last' → logprob: -8.667123794555664
    7. '```' → logprob: -9.792123794555664
    8. '#print' → logprob: -10.042123794555664
    9. ' print' → logprob: -10.167123794555664
    10. ' #' → logprob: -10.917123794555664

Token 599: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3219946026802063
    2. 'ans' → logprob: -1.3219945430755615
    3. '#' → logprob: -5.446994781494141
    4. 'if' → logprob: -5.446994781494141
    5. '#print' → logprob: -10.57199478149414
    6. '(ans' → logprob: -11.32199478149414
    7. ' ans' → logprob: -11.94699478149414
    8. 'answer' → logprob: -12.19699478149414
    9. '```' → logprob: -12.44699478149414
    10. ' print' → logprob: -12.69699478149414

Token 600: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01125613134354353
    2. 'print' → logprob: -4.511256217956543
    3. '#' → logprob: -8.636256217956543
    4. 'if' → logprob: -10.886256217956543
    5. ' ans' → logprob: -12.136256217956543
    6. '(ans' → logprob: -13.136256217956543
    7. '#print' → logprob: -13.886256217956543
    8. 'answer' → logprob: -14.011256217956543
    9. '	ans' → logprob: -14.011256217956543
    10. '   ' → logprob: -14.886256217956543

Token 601: ' ajuste' (ID: 94049)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015195594169199467
    2. 'ans' → logprob: -4.390195369720459
    3. ' print' → logprob: -6.265195369720459
    4. '#' → logprob: -7.515195369720459
    5. ' ans' → logprob: -8.640195846557617
    6. '#print' → logprob: -10.515195846557617
    7. 'if' → logprob: -11.390195846557617
    8. '(ans' → logprob: -12.765195846557617
    9. ' #' → logprob: -12.890195846557617
    10. 'printf' → logprob: -13.265195846557617

Token 602: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005264237988740206
    2. ' ans' → logprob: -5.2552642822265625
    3. '(ans' → logprob: -10.505264282226562
    4. '	ans' → logprob: -12.880264282226562
    5. '#' → logprob: -15.380264282226562
    6. '-' → logprob: -16.130264282226562
    7. '_ans' → logprob: -16.630264282226562
    8. '   ' → logprob: -16.755264282226562
    9. 'answer' → logprob: -17.005264282226562
    10. 'Ans' → logprob: -17.380264282226562

Token 603: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.5120287066092715e-05
    2. ' ans' → logprob: -10.625035285949707
    3. 'answer' → logprob: -12.000035285949707
    4. 'print' → logprob: -12.500035285949707
    5. '	ans' → logprob: -15.125035285949707
    6. '_ans' → logprob: -15.250035285949707
    7. '(ans' → logprob: -15.375035285949707
    8. '#' → logprob: -15.875035285949707
    9. 'final' → logprob: -17.37503433227539
    10. 'val' → logprob: -17.50003433227539

Token 604: ' finale' (ID: 37759)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004999874625355005
    2. 'final' → logprob: -5.37999963760376
    3. ' ans' → logprob: -8.880000114440918
    4. 'de' → logprob: -9.380000114440918
    5. 'd' → logprob: -9.505000114440918
    6. ' finale' → logprob: -10.255000114440918
    7. '(ans' → logprob: -11.130000114440918
    8. '_ans' → logprob: -11.255000114440918
    9. '	ans' → logprob: -11.630000114440918
    10. '#' → logprob: -13.005000114440918

Token 605: ' de' (ID: 334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.001333932508714497
    2. '-' → logprob: -7.251333713531494
    3. '-=' → logprob: -8.126334190368652
    4. ' ans' → logprob: -8.501334190368652
    5. ' -=' → logprob: -9.501334190368652
    6. '(ans' → logprob: -10.376334190368652
    7. '	ans' → logprob: -12.126334190368652
    8. '_ans' → logprob: -12.126334190368652
    9. '-
' → logprob: -12.251334190368652
    10. '=' → logprob: -13.751334190368652

Token 606: ' '' (ID: 461)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.704273118884885e-07
    2. ' ans' → logprob: -14.375000953674316
    3. '(ans' → logprob: -17.125
    4. '	ans' → logprob: -17.25
    5. '#' → logprob: -18.375
    6. 'answer' → logprob: -19.125
    7. '   ' → logprob: -19.375
    8. 'ann' → logprob: -20.375
    9. 'a' → logprob: -20.625
    10. '
' → logprob: -20.75

Token 607: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.088346359931165e-07
    2. ' ans' → logprob: -14.250000953674316
    3. '(ans' → logprob: -16.875
    4. '	ans' → logprob: -16.875
    5. 'ann' → logprob: -17.375
    6. 'last' → logprob: -17.875
    7. '
' → logprob: -18.5
    8. 'answer' → logprob: -18.625
    9. '   ' → logprob: -19.125
    10. '#' → logprob: -19.25

Token 608: ''
' (ID: 2207)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.21334132552146912
    2. ' -=' → logprob: -1.7133413553237915
    3. '-' → logprob: -4.463341236114502
    4. '=' → logprob: -8.46334171295166
    5. '+=' → logprob: -9.46334171295166
    6. ' -' → logprob: -10.58834171295166
    7. ' =' → logprob: -12.33834171295166
    8. 'ans' → logprob: -12.58834171295166
    9. ' +=' → logprob: -12.58834171295166
    10. '   ' → logprob: -13.08834171295166

Token 609: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011689811013638973
    2. '-=' → logprob: -4.51168966293335
    3. '-' → logprob: -8.011690139770508
    4. ' -=' → logprob: -8.761690139770508
    5. ' ans' → logprob: -9.261690139770508
    6. '(ans' → logprob: -10.136690139770508
    7. '=' → logprob: -12.011690139770508
    8. '_ans' → logprob: -12.386690139770508
    9. '	ans' → logprob: -12.761690139770508
    10. 'print' → logprob: -12.761690139770508

Token 610: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -5.796184723294573e-06
    2. '-=' → logprob: -12.750005722045898
    3. ' ans' → logprob: -13.375005722045898
    4. '(ans' → logprob: -14.375005722045898
    5. '-' → logprob: -14.875005722045898
    6. '	ans' → logprob: -16.2500057220459
    7. ' -=' → logprob: -16.3750057220459
    8. '=' → logprob: -17.1250057220459
    9. '_ans' → logprob: -17.5000057220459
    10. 'print' → logprob: -17.7500057220459

Token 611: ' le' (ID: 505)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.09561670571565628
    2. 'last' → logprob: -2.5956168174743652
    3. ' ten' → logprob: -4.845616817474365
    4. '(' → logprob: -5.720616817474365
    5. ' last' → logprob: -6.095616817474365
    6. 'ans' → logprob: -6.970616817474365
    7. '(last' → logprob: -7.095616817474365
    8. 'x' → logprob: -7.345616817474365
    9. '(x' → logprob: -8.470616340637207
    10. ' (' → logprob: -8.720616340637207

Token 612: ' dernier' (ID: 27982)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.18324795365333557
    2. 'last' → logprob: -2.6832480430603027
    3. ' ten' → logprob: -3.0582480430603027
    4. ' last' → logprob: -3.1832480430603027
    5. 'ans' → logprob: -5.933248043060303
    6. 'len' → logprob: -6.183248043060303
    7. ' ans' → logprob: -6.308248043060303
    8. 'x' → logprob: -6.308248043060303
    9. ' x' → logprob: -7.058248043060303
    10. '10' → logprob: -8.433247566223145

Token 613: ' '' (ID: 461)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.1918832063674927
    2. 'if' → logprob: -1.6918832063674927
    3. 'token' → logprob: -1.6918832063674927
    4. ' if' → logprob: -2.566883087158203
    5. '   ' → logprob: -3.691883087158203
    6. 'x' → logprob: -3.816883087158203
    7. 'e' → logprob: -4.316883087158203
    8. ' ' → logprob: -4.316883087158203
    9. 'line' → logprob: -4.441883087158203
    10. ' token' → logprob: -4.441883087158203

Token 614: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.026060255244374275
    2. 'x' → logprob: -4.651060104370117
    3. ' last' → logprob: -5.151060104370117
    4. 'ans' → logprob: -5.651060104370117
    5. 'ten' → logprob: -5.901060104370117
    6. 'mod' → logprob: -6.901060104370117
    7. 'if' → logprob: -7.401060104370117
    8. '=' → logprob: -7.526060104370117
    9. ' x' → logprob: -8.401060104370117
    10. ')' → logprob: -8.651060104370117

Token 615: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.057513702660799026
    2. ' '' → logprob: -3.18251371383667
    3. '%'' → logprob: -5.55751371383667
    4. '%' → logprob: -6.05751371383667
    5. ''est' → logprob: -6.80751371383667
    6. ''''' → logprob: -6.93251371383667
    7. ')'' → logprob: -7.05751371383667
    8. ''s' → logprob: -7.43251371383667
    9. ' %' → logprob: -7.80751371383667
    10. ''a' → logprob: -8.182513236999512

Token 616: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6489664316177368
    2. ' n' → logprob: -1.6489664316177368
    3. '==' → logprob: -1.7739664316177368
    4. '!=' → logprob: -2.1489663124084473
    5. ' !=' → logprob: -2.6489663124084473
    6. 'a' → logprob: -2.6489663124084473
    7. ' ==' → logprob: -3.0239663124084473
    8. ' a' → logprob: -3.2739663124084473
    9. 'token' → logprob: -3.7739663124084473
    10. 'est' → logprob: -4.148966312408447

Token 617: ''est' (ID: 6616)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6834213733673096
    2. ''est' → logprob: -0.9334213733673096
    3. 'e' → logprob: -3.4334213733673096
    4. ''a' → logprob: -3.5584213733673096
    5. 'a' → logprob: -4.3084211349487305
    6. ''était' → logprob: -4.8084211349487305
    7. ''' → logprob: -5.1834211349487305
    8. 'est' → logprob: -5.5584211349487305
    9. '#' → logprob: -6.5584211349487305
    10. ''%' → logprob: -6.5584211349487305

Token 618: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.26285579800605774
    2. ' pas' → logprob: -2.0128557682037354
    3. 'x' → logprob: -2.3878557682037354
    4. ' x' → logprob: -6.2628560066223145
    5. 'last' → logprob: -6.3878560066223145
    6. '=' → logprob: -6.5128560066223145
    7. 'equal' → logprob: -9.012855529785156
    8. 'None' → logprob: -9.387855529785156
    9. ' equal' → logprob: -9.637855529785156
    10. ' =' → logprob: -10.137855529785156

Token 619: ' un' (ID: 537)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09111244231462479
    2. 'ans' → logprob: -3.0911123752593994
    3. 'last' → logprob: -3.8411123752593994
    4. ' x' → logprob: -4.0911126136779785
    5. ' ans' → logprob: -6.2161126136779785
    6. ' last' → logprob: -7.2161126136779785
    7. 'equal' → logprob: -8.46611213684082
    8. 'None' → logprob: -8.59111213684082
    9. '=' → logprob: -9.21611213684082
    10. ' equal' → logprob: -9.34111213684082

Token 620: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.06401366740465164
    2. ' multiple' → logprob: -2.814013719558716
    3. 'multip' → logprob: -6.314013481140137
    4. '10' → logprob: -9.189013481140137
    5. 'x' → logprob: -10.314013481140137
    6. 'ultiple' → logprob: -10.439013481140137
    7. ' ' → logprob: -10.939013481140137
    8. '0' → logprob: -11.689013481140137
    9. 'mult' → logprob: -11.814013481140137
    10. '#' → logprob: -11.814013481140137

Token 621: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.38709819316864014
    2. 'de' → logprob: -1.1370981931686401
    3. '   ' → logprob: -8.51209831237793
    4. ' of' → logprob: -11.51209831237793
    5. '_de' → logprob: -11.88709831237793
    6. 'd' → logprob: -13.26209831237793
    7. 'of' → logprob: -13.63709831237793
    8. '#' → logprob: -13.63709831237793
    9. '%' → logprob: -14.13709831237793
    10. 'def' → logprob: -14.26209831237793

Token 622: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1128358319401741
    2. ' ' → logprob: -2.2378358840942383
    3. '```' → logprob: -12.487835884094238
    4. ' ten' → logprob: -12.987835884094238
    5. 'ten' → logprob: -13.112835884094238
    6. '0' → logprob: -14.050335884094238
    7. '100' → logprob: -14.300335884094238
    8. ' ' → logprob: -14.612835884094238
    9. '   ' → logprob: -14.675335884094238
    10. '`' → logprob: -15.112835884094238

Token 623: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0010513884481042624
    2. ' ' → logprob: -6.876051425933838
    3. '```' → logprob: -11.50105094909668
    4. 'ten' → logprob: -12.75105094909668
    5. '#' → logprob: -14.12605094909668
    6. '100' → logprob: -14.25105094909668
    7. 'x' → logprob: -14.25105094909668
    8. ' ten' → logprob: -14.37605094909668
    9. '0' → logprob: -14.62605094909668
    10. 'd' → logprob: -15.00105094909668

Token 624: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3918806314468384
    2. ':
' → logprob: -1.1418806314468384
    3. '   ' → logprob: -6.266880512237549
    4. ' and' → logprob: -6.516880512237549
    5. 'and' → logprob: -7.391880512237549
    6. 'ans' → logprob: -7.641880512237549
    7. ' ans' → logprob: -8.891880989074707
    8. ',' → logprob: -9.141880989074707
    9. ' :' → logprob: -9.516880989074707
    10. ' :
' → logprob: -9.891880989074707

Token 625: 'c' (ID: 66)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.9734230041503906
    2. ' (' → logprob: -1.2234230041503906
    3. 'x' → logprob: -1.4734230041503906
    4. ' x' → logprob: -3.2234230041503906
    5. '(' → logprob: -3.9734230041503906
    6. '%' → logprob: -4.473423004150391
    7. ')' → logprob: -4.723423004150391
    8. 'ten' → logprob: -5.098423004150391
    9. 'last' → logprob: -5.473423004150391
    10. '(last' → logprob: -6.473423004150391

Token 626: ''est' (ID: 6616)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.6389055252075195
    2. '%' → logprob: -1.7639055252075195
    3. 'e' → logprob: -1.7639055252075195
    4. ''' → logprob: -1.8889055252075195
    5. ')' → logprob: -2.3889055252075195
    6. ''est' → logprob: -2.6389055252075195
    7. 'x' → logprob: -2.7639055252075195
    8. '#' → logprob: -3.0139055252075195
    9. '   ' → logprob: -5.5139055252075195
    10. '),' → logprob: -5.5139055252075195

Token 627: '-à' (ID: 56297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.227985143661499
    2. '-à' → logprob: -1.852985143661499
    3. ' x' → logprob: -2.352985143661499
    4. 'not' → logprob: -2.352985143661499
    5. ' pas' → logprob: -2.727985143661499
    6. '   ' → logprob: -2.852985143661499
    7. 'x' → logprob: -3.102985143661499
    8. ')' → logprob: -3.227985143661499
    9. 'à' → logprob: -3.352985143661499
    10. ' False' → logprob: -4.102985382080078

Token 628: '-dire' (ID: 76064)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6883313655853271
    2. '10' → logprob: -1.9383313655853271
    3. 'x' → logprob: -2.063331365585327
    4. 'pas' → logprob: -2.688331365585327
    5. ' ' → logprob: -3.563331365585327
    6. '#' → logprob: -3.563331365585327
    7. 'not' → logprob: -3.938331365585327
    8. '=' → logprob: -4.063331604003906
    9. ' x' → logprob: -4.313331604003906
    10. ' pas' → logprob: -4.438331604003906

Token 629: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8710393309593201
    2. ' last' → logprob: -1.7460393905639648
    3. '(last' → logprob: -2.246039390563965
    4. '(x' → logprob: -2.496039390563965
    5. '(' → logprob: -2.621039390563965
    6. 'last' → logprob: -2.871039390563965
    7. ' x' → logprob: -3.621039390563965
    8. '(ans' → logprob: -3.746039390563965
    9. 'x' → logprob: -4.121039390563965
    10. '   ' → logprob: -4.871039390563965

Token 630: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.013350334949791431
    2. ' last' → logprob: -5.013350486755371
    3. 'ten' → logprob: -5.763350486755371
    4. 'ans' → logprob: -6.263350486755371
    5. 'x' → logprob: -6.638350486755371
    6. '(last' → logprob: -9.513350486755371
    7. ' x' → logprob: -9.763350486755371
    8. ' ten' → logprob: -9.763350486755371
    9. ' ans' → logprob: -10.013350486755371
    10. '(ans' → logprob: -12.013350486755371

Token 631: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.43097174167633057
    2. '%' → logprob: -1.0559717416763306
    3. ')' → logprob: -6.180971622467041
    4. '   ' → logprob: -9.8059720993042
    5. ')%' → logprob: -9.8059720993042
    6. '#' → logprob: -10.6809720993042
    7. '%)' → logprob: -11.0559720993042
    8. ' ' → logprob: -11.1809720993042
    9. ' %)' → logprob: -11.3059720993042
    10. ' )' → logprob: -11.4309720993042

Token 632: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004424659069627523
    2. ' ' → logprob: -5.504424571990967
    3. ')' → logprob: -8.004425048828125
    4. ' )' → logprob: -12.879425048828125
    5. ')!=' → logprob: -13.004425048828125
    6. ' !=' → logprob: -13.379425048828125
    7. '```' → logprob: -13.504425048828125
    8. '!=' → logprob: -13.504425048828125
    9. '   ' → logprob: -13.754425048828125
    10. ')>' → logprob: -14.379425048828125

Token 633: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.019237768370658e-05
    2. ' ' → logprob: -9.375090599060059
    3. ')' → logprob: -12.375090599060059
    4. '```' → logprob: -14.750090599060059
    5. 'last' → logprob: -15.250090599060059
    6. '   ' → logprob: -15.750090599060059
    7. '!' → logprob: -16.750089645385742
    8. '100' → logprob: -17.125089645385742
    9. ' ' → logprob: -17.625089645385742
    10. '`' → logprob: -17.750089645385742

Token 634: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012903552269563079
    2. ')!=' → logprob: -6.751290321350098
    3. '!=' → logprob: -10.126290321350098
    4. ' )' → logprob: -10.251290321350098
    5. ' !=' → logprob: -10.251290321350098
    6. '())' → logprob: -12.876290321350098
    7. '()' → logprob: -13.001290321350098
    8. '   ' → logprob: -13.376290321350098
    9. ')>' → logprob: -14.001290321350098
    10. '))' → logprob: -14.626290321350098

Token 635: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02492372691631317
    2. ' !=' → logprob: -4.649923801422119
    3. '!=' → logprob: -4.774923801422119
    4. ')!=' → logprob: -5.024923801422119
    5. '   ' → logprob: -11.024923324584961
    6. ' )' → logprob: -11.274923324584961
    7. ')>' → logprob: -13.149923324584961
    8. '>' → logprob: -13.274923324584961
    9. '```' → logprob: -13.399923324584961
    10. '#' → logprob: -13.399923324584961

Token 636: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003936152206733823
    2. ' ' → logprob: -7.875393390655518
    3. ')' → logprob: -11.375393867492676
    4. '10' → logprob: -13.625393867492676
    5. '=' → logprob: -14.500393867492676
    6. '   ' → logprob: -15.625393867492676
    7. '==' → logprob: -17.50039291381836
    8. '```' → logprob: -17.50039291381836
    9. '),' → logprob: -17.87539291381836
    10. ' )' → logprob: -17.87539291381836

Token 637: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.375041007995605
    3. '10' → logprob: -11.625041007995605
    4. '```' → logprob: -14.875041007995605
    5. ')' → logprob: -15.125041007995605
    6. '   ' → logprob: -15.625041007995605
    7. '=' → logprob: -15.750041007995605
    8. '  ' → logprob: -17.562541961669922
    9. '``' → logprob: -17.562541961669922
    10. 'last' → logprob: -17.875041961669922

Token 638: '),
' (ID: 2313)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.27927911281585693
    2. '):' → logprob: -1.529279112815857
    3. ':' → logprob: -4.2792792320251465
    4. ')' → logprob: -5.2792792320251465
    5. '   ' → logprob: -5.4042792320251465
    6. ':
' → logprob: -6.1542792320251465
    7. '),' → logprob: -7.5292792320251465
    8. ' ):
' → logprob: -7.7792792320251465
    9. '):
' → logprob: -9.154278755187988
    10. ' and' → logprob: -9.279278755187988

Token 639: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007585220970213413
    2. ' ans' → logprob: -5.507585048675537
    3. 'ans' → logprob: -6.257585048675537
    4. ':' → logprob: -6.632585048675537
    5. '	ans' → logprob: -9.007585525512695
    6. '(ans' → logprob: -10.007585525512695
    7. '       ' → logprob: -10.132585525512695
    8. ':
' → logprob: -11.007585525512695
    9. '#' → logprob: -11.382585525512695
    10. '):' → logprob: -11.632585525512695

Token 640: ' alors' (ID: 17971)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7336859107017517
    2. '   ' → logprob: -1.2336859703063965
    3. 'ans' → logprob: -1.4836859703063965
    4. '	ans' → logprob: -6.6086859703063965
    5. '(ans' → logprob: -7.8586859703063965
    6. '#' → logprob: -9.983685493469238
    7. '_ans' → logprob: -11.483685493469238
    8. '```' → logprob: -11.983685493469238
    9. ')' → logprob: -12.108685493469238
    10. '       ' → logprob: -12.233685493469238

Token 641: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0018653334118425846
    2. ' ans' → logprob: -6.501865386962891
    3. '   ' → logprob: -8.00186538696289
    4. '	ans' → logprob: -10.62686538696289
    5. '(ans' → logprob: -12.50186538696289
    6. '  ' → logprob: -16.87686538696289
    7. ' ' → logprob: -17.25186538696289
    8. '_ans' → logprob: -17.37686538696289
    9. '```' → logprob: -18.12686538696289
    10. '#' → logprob: -18.37686538696289

Token 642: ' sou' (ID: 4069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05912673845887184
    2. '-=' → logprob: -3.309126853942871
    3. ' ans' → logprob: -4.184126853942871
    4. ' -=' → logprob: -5.684126853942871
    5. '   ' → logprob: -6.559126853942871
    6. '-' → logprob: -7.559126853942871
    7. '(ans' → logprob: -8.809126853942871
    8. '	ans' → logprob: -9.434126853942871
    9. '+=' → logprob: -11.059126853942871
    10. '=' → logprob: -11.184126853942871

Token 643: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.06699621677398682
    2. 'stract' → logprob: -2.8169960975646973
    3. 'tra' → logprob: -5.691996097564697
    4. 'tr' → logprob: -7.566996097564697
    5. 'straction' → logprob: -8.066996574401855
    6. 't' → logprob: -8.191996574401855
    7. 'str' → logprob: -8.191996574401855
    8. 'tract' → logprob: -9.191996574401855
    9. '#' → logprob: -10.191996574401855
    10. 'trait' → logprob: -10.816996574401855

Token 644: 'it' (ID: 278)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.7724073529243469
    2. 'it' → logprob: -1.3974072933197021
    3. 't' → logprob: -2.022407293319702
    4. 'cte' → logprob: -3.022407293319702
    5. 'stract' → logprob: -3.522407293319702
    6. 'tract' → logprob: -4.022407531738281
    7. '   ' → logprob: -4.022407531738281
    8. 'tre' → logprob: -4.522407531738281
    9. 'tra' → logprob: -5.022407531738281
    10. '#' → logprob: -5.647407531738281

Token 645: ' ' (ID: 220)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.007195774000138044
    2. ' ten' → logprob: -5.007195949554443
    3. '10' → logprob: -7.882195949554443
    4. '   ' → logprob: -9.632195472717285
    5. ' ' → logprob: -11.507195472717285
    6. '(' → logprob: -11.507195472717285
    7. '1' → logprob: -11.507195472717285
    8. ' (' → logprob: -13.132195472717285
    9. 'last' → logprob: -13.882195472717285
    10. '```' → logprob: -13.882195472717285

Token 646: '10' (ID: 702)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.00018530222587287426
    2. '10' → logprob: -9.250185012817383
    3. ' ten' → logprob: -9.375185012817383
    4. '(' → logprob: -12.875185012817383
    5. '1' → logprob: -14.000185012817383
    6. ' ' → logprob: -15.000185012817383
    7. '   ' → logprob: -15.000185012817383
    8. ' (' → logprob: -16.875185012817383
    9. 'tent' → logprob: -16.875185012817383
    10. 'last' → logprob: -17.125185012817383

Token 647: ' et' (ID: 859)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1283126026391983
    2. '   ' → logprob: -2.378312587738037
    3. '-' → logprob: -3.628312587738037
    4. 'from' → logprob: -8.003313064575195
    5. ' from' → logprob: -8.253313064575195
    6. ' ans' → logprob: -8.503313064575195
    7. ':' → logprob: -9.503313064575195
    8. ' if' → logprob: -9.503313064575195
    9. 'ans' → logprob: -10.003313064575195
    10. '(ans' → logprob: -10.128313064575195

Token 648: ' on' (ID: 402)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.11092739552259445
    2. '+' → logprob: -3.3609273433685303
    3. ' ten' → logprob: -3.3609273433685303
    4. 'ans' → logprob: -3.8609273433685303
    5. ' ans' → logprob: -5.860927581787109
    6. ' +' → logprob: -6.110927581787109
    7. 'print' → logprob: -6.360927581787109
    8. '10' → logprob: -6.485927581787109
    9. '   ' → logprob: -6.735927581787109
    10. '+=' → logprob: -6.735927581787109

Token 649: ' ajoute' (ID: 91611)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1995273232460022
    2. '+' → logprob: -2.0745272636413574
    3. ' ans' → logprob: -3.3245272636413574
    4. '+=' → logprob: -4.574527263641357
    5. ' +=' → logprob: -5.574527263641357
    6. ' +' → logprob: -6.574527263641357
    7. 'aj' → logprob: -6.824527263641357
    8. 'add' → logprob: -7.449527263641357
    9. 'plus' → logprob: -7.449527263641357
    10. '(ans' → logprob: -7.449527263641357

Token 650: ' le' (ID: 505)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.03567830100655556
    2. 'last' → logprob: -4.035678386688232
    3. ' ten' → logprob: -4.410678386688232
    4. '(' → logprob: -5.785678386688232
    5. ' last' → logprob: -6.785678386688232
    6. ' (' → logprob: -7.410678386688232
    7. '10' → logprob: -8.410677909851074
    8. '(last' → logprob: -9.035677909851074
    9. '   ' → logprob: -10.535677909851074
    10. ' ' → logprob: -11.035677909851074

Token 651: ' chiffre' (ID: 107420)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.3174420893192291
    2. 'ten' → logprob: -1.3174420595169067
    3. '(last' → logprob: -5.942441940307617
    4. ' last' → logprob: -6.567441940307617
    5. ' ten' → logprob: -9.692441940307617
    6. '(' → logprob: -10.567441940307617
    7. 'x' → logprob: -10.817441940307617
    8. '10' → logprob: -11.567441940307617
    9. '[last' → logprob: -12.192441940307617
    10. 'len' → logprob: -12.442441940307617

Token 652: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.5180716514587402
    2. 'last' → logprob: -1.2680716514587402
    3. ' des' → logprob: -3.1430716514587402
    4. ' last' → logprob: -3.7680716514587402
    5. '(last' → logprob: -4.01807165145874
    6. 'ans' → logprob: -4.51807165145874
    7. '   ' → logprob: -5.39307165145874
    8. 's' → logprob: -5.39307165145874
    9. 'unit' → logprob: -6.26807165145874
    10. 'd' → logprob: -6.26807165145874

Token 653: ' unités' (ID: 176121)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.829034149646759
    2. 'units' → logprob: -0.829034149646759
    3. 'last' → logprob: -2.0790340900421143
    4. ' unités' → logprob: -6.579034328460693
    5. 'der' → logprob: -7.829034328460693
    6. 'x' → logprob: -9.829033851623535
    7. 'un' → logprob: -10.204033851623535
    8. ' units' → logprob: -10.329033851623535
    9. ' last' → logprob: -10.829033851623535
    10. 'dern' → logprob: -11.204033851623535

Token 654: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6491524577140808
    2. 'ans' → logprob: -1.7741525173187256
    3. ' -' → logprob: -2.2741525173187256
    4. 'last' → logprob: -3.1491525173187256
    5. '(ans' → logprob: -3.2741525173187256
    6. ' ans' → logprob: -3.3991525173187256
    7. ' last' → logprob: -4.0241522789001465
    8. ':' → logprob: -4.5241522789001465
    9. ' of' → logprob: -4.7741522789001465
    10. ' +' → logprob: -4.8991522789001465

Token 655: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0017255148850381374
    2. ' last' → logprob: -6.376725673675537
    3. 'ten' → logprob: -11.126725196838379
    4. '(last' → logprob: -11.876725196838379
    5. 'x' → logprob: -14.251725196838379
    6. '	last' → logprob: -15.501725196838379
    7. 'las' → logprob: -15.751725196838379
    8. 'la' → logprob: -15.751725196838379
    9. '
' → logprob: -15.876725196838379
    10. ' ten' → logprob: -16.126726150512695

Token 656: ' à' (ID: 1221)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009461626410484314
    2. ' if' → logprob: -4.884461402893066
    3. '
' → logprob: -7.384461402893066
    4. '-' → logprob: -7.509461402893066
    5. '   ' → logprob: -8.259461402893066
    6. 'ans' → logprob: -8.509461402893066
    7. ' -=' → logprob: -9.884461402893066
    8. ' -' → logprob: -10.384461402893066
    9. '(ans' → logprob: -10.384461402893066
    10. '-(' → logprob: -10.884461402893066

Token 657: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.465036105713807e-06
    2. ' ans' → logprob: -12.000007629394531
    3. 'last' → logprob: -14.000007629394531
    4. '(ans' → logprob: -14.875007629394531
    5. '	ans' → logprob: -17.25000762939453
    6. '   ' → logprob: -17.37500762939453
    7. '#' → logprob: -19.62500762939453
    8. '10' → logprob: -19.62500762939453
    9. 'ann' → logprob: -20.25000762939453
    10. '_ans' → logprob: -20.37500762939453

Token 658: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.73183855926618e-05
    2. ' if' → logprob: -10.125077247619629
    3. '   ' → logprob: -10.875077247619629
    4. 'ans' → logprob: -11.500077247619629
    5. '
' → logprob: -12.000077247619629
    6. '```' → logprob: -14.125077247619629
    7. '#' → logprob: -14.625077247619629
    8. '    
' → logprob: -14.875077247619629
    9. '  
' → logprob: -16.125078201293945
    10. '(ans' → logprob: -16.375078201293945

Token 659: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02005220577120781
    2. ' if' → logprob: -4.520052433013916
    3. '
' → logprob: -5.895052433013916
    4. '   ' → logprob: -5.895052433013916
    5. '```' → logprob: -6.395052433013916
    6. 'ans' → logprob: -6.645052433013916
    7. '\n' → logprob: -8.645051956176758
    8. '``' → logprob: -9.770051956176758
    9. '    
' → logprob: -9.770051956176758
    10. '(ans' → logprob: -9.895051956176758

Token 660: ' Sinon' (ID: 154924)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00011939727846765891
    2. ' if' → logprob: -9.25011920928955
    3. '
' → logprob: -10.75011920928955
    4. '```' → logprob: -13.87511920928955
    5. '   ' → logprob: -14.75011920928955
    6. '    
' → logprob: -15.75011920928955
    7. 'last' → logprob: -16.250120162963867
    8. '#' → logprob: -16.750120162963867
    9. '``' → logprob: -17.125120162963867
    10. '  
' → logprob: -17.875120162963867

Token 661: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32184064388275146
    2. ':' → logprob: -2.196840763092041
    3. ':
' → logprob: -2.196840763092041
    4. 'else' → logprob: -3.571840763092041
    5. 'if' → logprob: -3.946840763092041
    6. 'ans' → logprob: -6.071840763092041
    7. '#' → logprob: -6.571840763092041
    8. '(ans' → logprob: -7.696840763092041
    9. '    
' → logprob: -7.946840763092041
    10. ' if' → logprob: -8.196840286254883

Token 662: ' on' (ID: 402)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.4279817044734955
    2. '   ' → logprob: -2.0529816150665283
    3. 'ans' → logprob: -2.0529816150665283
    4. ' pass' → logprob: -2.6779816150665283
    5. ' ans' → logprob: -4.177981853485107
    6. 'print' → logprob: -5.427981853485107
    7. '(ans' → logprob: -6.427981853485107
    8. '#' → logprob: -7.177981853485107
    9. 'else' → logprob: -8.55298137664795
    10. 'last' → logprob: -9.30298137664795

Token 663: ' laisse' (ID: 66691)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.5723143815994263
    2. ' pass' → logprob: -1.0723143815994263
    3. 'print' → logprob: -3.6973142623901367
    4. 'continue' → logprob: -4.322314262390137
    5. '+=' → logprob: -4.447314262390137
    6. 'subtract' → logprob: -4.572314262390137
    7. '#' → logprob: -5.197314262390137
    8. ' +=' → logprob: -5.322314262390137
    9. ' subtract' → logprob: -5.322314262390137
    10. 'ans' → logprob: -5.322314262390137

Token 664: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03476947918534279
    2. ' ans' → logprob: -3.4097695350646973
    3. '(ans' → logprob: -7.284769535064697
    4. '   ' → logprob: -7.909769535064697
    5. '	ans' → logprob: -10.659769058227539
    6. '#' → logprob: -11.034769058227539
    7. 'pas' → logprob: -11.534769058227539
    8. ' ' → logprob: -12.784769058227539
    9. 'pass' → logprob: -13.034769058227539
    10. '_ans' → logprob: -13.034769058227539

Token 665: ' inch' (ID: 23594)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20858493447303772
    2. ' -=' → logprob: -2.583585023880005
    3. '
' → logprob: -2.958585023880005
    4. ' +=' → logprob: -3.458585023880005
    5. ' if' → logprob: -4.083584785461426
    6. ' =' → logprob: -5.708584785461426
    7. '   ' → logprob: -5.708584785461426
    8. '+=' → logprob: -6.708584785461426
    9. '=' → logprob: -7.083584785461426
    10. '-=' → logprob: -7.208584785461426

Token 666: 'angé' (ID: 119992)
  Prédit: 'angé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angé' → logprob: -0.020675014704465866
    2. 'ang' → logprob: -3.89567494392395
    3. 'anger' → logprob: -10.645674705505371
    4. 'anged' → logprob: -10.770674705505371
    5. '#' → logprob: -11.020674705505371
    6. 'and' → logprob: -11.770674705505371
    7. 'a' → logprob: -11.770674705505371
    8. 'angement' → logprob: -11.770674705505371
    9. 'ange' → logprob: -11.895674705505371
    10. 'anch' → logprob: -12.270674705505371

Token 667: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.7697225252486533e-06
    2. '
' → logprob: -13.250003814697266
    3. '```' → logprob: -13.625003814697266
    4. ' if' → logprob: -14.250003814697266
    5. '``' → logprob: -17.250003814697266
    6. 'ans' → logprob: -17.375003814697266
    7. '#' → logprob: -18.125003814697266
    8. '    
' → logprob: -18.375003814697266
    9. '  
' → logprob: -18.750003814697266
    10. '   ' → logprob: -18.875003814697266

Token 668: 'ans' (ID: 616)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00030304977553896606
    2. '
' → logprob: -8.750303268432617
    3. '```' → logprob: -9.625303268432617
    4. ' if' → logprob: -10.125303268432617
    5. 'ans' → logprob: -10.375303268432617
    6. '``' → logprob: -12.875303268432617
    7. '  
' → logprob: -13.125303268432617
    8. ' 
' → logprob: -13.500303268432617
    9. '    
' → logprob: -14.250303268432617
    10. '\n' → logprob: -15.750303268432617

Token 669: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5648896098136902
    2. '=' → logprob: -1.689889669418335
    3. ' +=' → logprob: -2.689889669418335
    4. ' =' → logprob: -2.814889669418335
    5. '<|end|>' → logprob: -2.939889669418335
    6. ' ' → logprob: -4.189889430999756
    7. '-' → logprob: -4.689889430999756
    8. ' %=' → logprob: -4.939889430999756
    9. '%=' → logprob: -5.064889430999756
    10. ',' → logprob: -5.314889430999756

Token 670: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.008669407106935978
    2. ' ans' → logprob: -4.758669376373291
    3. '(ans' → logprob: -9.88366985321045
    4. '   ' → logprob: -13.13366985321045
    5. '	ans' → logprob: -14.00866985321045
    6. ' ' → logprob: -15.13366985321045
    7. '(' → logprob: -15.63366985321045
    8. '0' → logprob: -15.75866985321045
    9. 'ann' → logprob: -16.258668899536133
    10. ' (' → logprob: -16.633668899536133

Token 671: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01815907657146454
    2. '-' → logprob: -4.018158912658691
    3. ' if' → logprob: -12.518158912658691
    4. '+' → logprob: -13.143158912658691
    5. 'if' → logprob: -13.393158912658691
    6. ' +' → logprob: -13.643158912658691
    7. ' ' → logprob: -14.893158912658691
    8. '-if' → logprob: -15.268158912658691
    9. ' ' → logprob: -16.518159866333008
    10. ' -
' → logprob: -16.518159866333008

Token 672: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '(' → logprob: -18.0
    4. '   ' → logprob: -19.875
    5. '１０' → logprob: -20.375
    6. 'ten' → logprob: -20.625
    7. '۱۰' → logprob: -21.375
    8. '```' → logprob: -22.5
    9. ' (' → logprob: -22.75
    10. '十' → logprob: -23.5

Token 673: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '(' → logprob: -17.75
    4. 'ten' → logprob: -18.875
    5. '   ' → logprob: -19.875
    6. '１０' → logprob: -20.625
    7. 'if' → logprob: -20.75
    8. '۱۰' → logprob: -21.5
    9. '```' → logprob: -21.875
    10. '十' → logprob: -22.0

Token 674: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132949769496918
    2. ' +' → logprob: -1.3132950067520142
    3. 'if' → logprob: -10.563295364379883
    4. ' if' → logprob: -12.188295364379883
    5. '＋' → logprob: -13.938295364379883
    6. '+
' → logprob: -14.813295364379883
    7. '   ' → logprob: -15.438295364379883
    8. '+=' → logprob: -16.313295364379883
    9. '+(' → logprob: -16.313295364379883
    10. '+y' → logprob: -16.313295364379883

Token 675: ' (' (ID: 350)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.723741352558136
    2. 'last' → logprob: -1.0987412929534912
    3. 'ten' → logprob: -1.7237412929534912
    4. '(' → logprob: -5.72374153137207
    5. ' last' → logprob: -10.47374153137207
    6. ' (' → logprob: -10.59874153137207
    7. '[last' → logprob: -11.59874153137207
    8. ' ten' → logprob: -11.84874153137207
    9. '(x' → logprob: -11.84874153137207
    10. '10' → logprob: -12.47374153137207

Token 676: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0008263026247732341
    2. 'ten' → logprob: -7.750826358795166
    3. '(last' → logprob: -8.000825881958008
    4. ' last' → logprob: -9.750825881958008
    5. '(' → logprob: -13.625825881958008
    6. 'int' → logprob: -15.500825881958008
    7. '10' → logprob: -15.625825881958008
    8. '[last' → logprob: -16.000825881958008
    9. ' (' → logprob: -16.375825881958008
    10. '	last' → logprob: -16.625825881958008

Token 677: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3134005069732666
    2. ' %' → logprob: -1.3134005069732666
    3. ')' → logprob: -8.938400268554688
    4. ')%' → logprob: -12.813400268554688
    5. '()' → logprob: -13.563400268554688
    6. ' ' → logprob: -13.813400268554688
    7. ' ' → logprob: -14.063400268554688
    8. '()%' → logprob: -14.063400268554688
    9. 'ten' → logprob: -15.688400268554688
    10. '   ' → logprob: -16.188400268554688

Token 678: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '100' → logprob: -19.6250057220459
    4. '```' → logprob: -20.1250057220459
    5. '۱۰' → logprob: -20.7500057220459
    6. ')' → logprob: -21.7500057220459
    7. '१०' → logprob: -21.8750057220459
    8. '１０' → logprob: -22.0000057220459
    9. '   ' → logprob: -22.3750057220459
    10. 'ten' → logprob: -22.3750057220459

Token 679: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '100' → logprob: -19.625001907348633
    4. '```' → logprob: -19.750001907348633
    5. 'last' → logprob: -19.875001907348633
    6. 'ten' → logprob: -20.500001907348633
    7. '۱۰' → logprob: -20.625001907348633
    8. '१०' → logprob: -21.000001907348633
    9. '１０' → logprob: -21.375001907348633
    10. '   ' → logprob: -21.500001907348633

Token 680: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. ' )' → logprob: -12.625009536743164
    3. 'if' → logprob: -13.000009536743164
    4. ' if' → logprob: -13.375009536743164
    5. ')
' → logprob: -13.500009536743164
    6. '))' → logprob: -15.000009536743164
    7. ')#' → logprob: -15.500009536743164
    8. '()' → logprob: -16.750009536743164
    9. '#' → logprob: -17.500009536743164
    10. '())' → logprob: -17.625009536743164

Token 681: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.40105292201042175
    2. '<|end|>' → logprob: -1.2760529518127441
    3. '
' → logprob: -3.026052951812744
    4. '#' → logprob: -6.901052951812744
    5. '```' → logprob: -7.276052951812744
    6. ')' → logprob: -8.401052474975586
    7. '\n' → logprob: -8.526052474975586
    8. ' print' → logprob: -8.651052474975586
    9. 'return' → logprob: -9.401052474975586
    10. '<|end|>' → logprob: -9.401052474975586

Token 682: ' (' (ID: 350)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.0007830646354705095
    2. 'last' → logprob: -7.2507829666137695
    3. ' (' → logprob: -9.62578296661377
    4. ' last' → logprob: -13.00078296661377
    5. 'not' → logprob: -13.25078296661377
    6. '(not' → logprob: -13.37578296661377
    7. '[last' → logprob: -14.12578296661377
    8. ' ' → logprob: -15.62578296661377
    9. '(len' → logprob: -16.250783920288086
    10. '   ' → logprob: -16.375783920288086

Token 683: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.000192812061868608
    2. ' last' → logprob: -9.250192642211914
    3. '(last' → logprob: -9.250192642211914
    4. '   ' → logprob: -15.750192642211914
    5. '	last' → logprob: -16.000192642211914
    6. '[last' → logprob: -16.250192642211914
    7. 'not' → logprob: -16.750192642211914
    8. 'ans' → logprob: -16.875192642211914
    9. '(' → logprob: -17.250192642211914
    10. '_last' → logprob: -17.500192642211914

Token 684: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16023458540439606
    2. ' %' → logprob: -1.9102345705032349
    3. ')' → logprob: -12.160234451293945
    4. '   ' → logprob: -13.660234451293945
    5. ' ' → logprob: -13.785234451293945
    6. '[' → logprob: -13.910234451293945
    7. ')%' → logprob: -14.160234451293945
    8. '```' → logprob: -15.285234451293945
    9. ' ' → logprob: -15.410234451293945
    10. '()%' → logprob: -15.910234451293945

Token 685: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -18.500030517578125
    4. '>' → logprob: -19.625030517578125
    5. '   ' → logprob: -19.625030517578125
    6. ')' → logprob: -20.125030517578125
    7. '  ' → logprob: -20.375030517578125
    8. '۱۰' → logprob: -21.125030517578125
    9. '`' → logprob: -21.375030517578125
    10. ' ten' → logprob: -21.375030517578125

Token 686: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -16.375036239624023
    4. '0' → logprob: -17.625036239624023
    5. ')' → logprob: -18.375036239624023
    6. '>' → logprob: -18.875036239624023
    7. '   ' → logprob: -19.125036239624023
    8. '100' → logprob: -19.125036239624023
    9. '  ' → logprob: -19.500036239624023
    10. '!' → logprob: -19.875036239624023

Token 687: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014958873391151428
    2. '!=' → logprob: -4.88995885848999
    3. ')!=' → logprob: -5.13995885848999
    4. ' !=' → logprob: -7.13995885848999
    5. '()' → logprob: -7.63995885848999
    6. '()!=' → logprob: -8.764959335327148
    7. ' )' → logprob: -10.639959335327148
    8. '())' → logprob: -12.014959335327148
    9. '0' → logprob: -12.889959335327148
    10. '   ' → logprob: -13.389959335327148

Token 688: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03484040126204491
    2. '()!=' → logprob: -3.7848403453826904
    3. ' !=' → logprob: -4.7848405838012695
    4. '()' → logprob: -5.7848405838012695
    5. ')!=' → logprob: -9.65984058380127
    6. ')' → logprob: -11.53484058380127
    7. 'else' → logprob: -12.03484058380127
    8. '!' → logprob: -12.15984058380127
    9. '0' → logprob: -12.65984058380127
    10. '!==' → logprob: -13.15984058380127

Token 689: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015908108616713434
    2. ' ' → logprob: -8.75015926361084
    3. '10' → logprob: -14.75015926361084
    4. '   ' → logprob: -16.750158309936523
    5. '=' → logprob: -17.375158309936523
    6. '```' → logprob: -17.875158309936523
    7. '  ' → logprob: -18.437658309936523
    8. '00' → logprob: -18.687658309936523
    9. '۰' → logprob: -18.750158309936523
    10. ' ' → logprob: -19.312658309936523

Token 690: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.7994282795116305e-05
    2. '10' → logprob: -10.12504768371582
    3. ' ' → logprob: -11.75004768371582
    4. '```' → logprob: -17.50004768371582
    5. '   ' → logprob: -17.62504768371582
    6. '=' → logprob: -19.43754768371582
    7. '  ' → logprob: -19.81254768371582
    8. '۰' → logprob: -19.87504768371582
    9. '00' → logprob: -20.00004768371582
    10. '``' → logprob: -20.31254768371582

Token 691: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.69315105676651
    2. 'else' → logprob: -0.69315105676651
    3. '```' → logprob: -13.693151473999023
    4. ' ' → logprob: -14.693151473999023
    5. '	else' → logprob: -14.818151473999023
    6. '#' → logprob: -14.943151473999023
    7. '+' → logprob: -15.068151473999023
    8. '﻿' → logprob: -15.443151473999023
    9. '0' → logprob: -15.693151473999023
    10. '.' → logprob: -15.818151473999023

Token 692: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9361264946837764e-07
    2. ' ans' → logprob: -16.25
    3. '(ans' → logprob: -21.75
    4. '	ans' → logprob: -22.125
    5. '   ' → logprob: -24.125
    6. 'Ans' → logprob: -25.875
    7. 'ann' → logprob: -25.875
    8. 'a' → logprob: -26.5
    9. 'anst' → logprob: -26.625
    10. '_ans' → logprob: -26.875

Token 693: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 694: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 695: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.75
    3. '#print' → logprob: -19.25
    4. '#' → logprob: -20.375
    5. 'Print' → logprob: -23.875
    6. '```' → logprob: -24.25
    7. '
' → logprob: -25.125
    8. 'printf' → logprob: -25.625
    9. '(print' → logprob: -25.625
    10. '	print' → logprob: -25.75

Token 696: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.07206802815198898
    2. 'ich' → logprob: -3.572067975997925
    3. 'iche' → logprob: -3.572067975997925
    4. 'ichage' → logprob: -4.697068214416504
    5. '#' → logprob: -5.822068214416504
    6. 'print' → logprob: -6.947068214416504
    7. 'ic' → logprob: -8.447068214416504
    8. 'iché' → logprob: -10.572068214416504
    9. 'cher' → logprob: -11.072068214416504
    10. 'ichier' → logprob: -11.447068214416504

Token 697: ' le' (ID: 505)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00043102685594931245
    2. 'ans' → logprob: -7.750431060791016
    3. '(' → logprob: -14.875431060791016
    4. 'print' → logprob: -17.500431060791016
    5. '	ans' → logprob: -19.750431060791016
    6. '(abs' → logprob: -19.750431060791016
    7. ' ans' → logprob: -20.750431060791016
    8. '(answer' → logprob: -21.375431060791016
    9. '(print' → logprob: -21.875431060791016
    10. '_ans' → logprob: -22.125431060791016

Token 698: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001589618914294988
    2. '(ans' → logprob: -8.75015926361084
    3. 'final' → logprob: -15.50015926361084
    4. ' ans' → logprob: -15.62515926361084
    5. 'result' → logprob: -16.875158309936523
    6. 's' → logprob: -18.125158309936523
    7. 'print' → logprob: -18.125158309936523
    8. '	ans' → logprob: -18.375158309936523
    9. 'answer' → logprob: -18.500158309936523
    10. 'total' → logprob: -19.000158309936523

Token 699: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -15.250000953674316
    3. '(print' → logprob: -15.250000953674316
    4. '```' → logprob: -16.0
    5. '
' → logprob: -16.625
    6. '(' → logprob: -18.125
    7. '``' → logprob: -19.75
    8. '#print' → logprob: -20.25
    9. '
' → logprob: -20.75
    10. 'ans' → logprob: -20.875

Token 700: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.25
    3. ' print' → logprob: -17.75
    4. '
' → logprob: -20.25
    5. '``' → logprob: -21.25
    6. '(print' → logprob: -23.0
    7. '#print' → logprob: -24.875
    8. '
' → logprob: -24.875
    9. '.print' → logprob: -25.5
    10. 'Print' → logprob: -25.625

Token 701: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00024358915106859058
    2. 'la' → logprob: -8.625243186950684
    3. 'l' → logprob: -10.375243186950684
    4. 'ans' → logprob: -10.750243186950684
    5. 'stdout' → logprob: -12.250243186950684
    6. 'output' → logprob: -13.000243186950684
    7. ' print' → logprob: -14.000243186950684
    8. '#' → logprob: -14.875243186950684
    9. '(print' → logprob: -15.000243186950684
    10. '(ans' → logprob: -15.125243186950684

Token 702: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.2865932583808899
    2. 'a' → logprob: -1.7865931987762451
    3. 'é' → logprob: -3.036593198776245
    4. 'e' → logprob: -4.161593437194824
    5. 'print' → logprob: -5.161593437194824
    6. '’écran' → logprob: -5.411593437194824
    7. 'stdout' → logprob: -5.536593437194824
    8. ''é' → logprob: -6.786593437194824
    9. 'i' → logprob: -7.411593437194824
    10. 'screen' → logprob: -8.161593437194824

Token 703: ' avec' (ID: 3937)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. ' print' → logprob: -19.25
    4. '``' → logprob: -21.125
    5. '
' → logprob: -21.5
    6. '(print' → logprob: -24.875
    7. '#print' → logprob: -25.125
    8. '`' → logprob: -26.375
    9. '.print' → logprob: -26.5
    10. '	print' → logprob: -26.75

Token 704: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '(print' → logprob: -16.0
    3. ' print' → logprob: -17.75
    4. '#print' → logprob: -22.75
    5. 'ans' → logprob: -23.0
    6. '```' → logprob: -23.875
    7. '(' → logprob: -24.25
    8. '	print' → logprob: -24.375
    9. 'pr' → logprob: -24.875
    10. '   ' → logprob: -24.875

Token 705: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. 'prin' → logprob: -22.0
    4. '#print' → logprob: -22.875
    5. 'pr' → logprob: -23.125
    6. '(print' → logprob: -23.5
    7. 'r' → logprob: -23.75
    8. '
' → logprob: -24.625
    9. 'println' → logprob: -24.625
    10. 'Print' → logprob: -25.0

Token 706: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. '(print' → logprob: -17.25
    4. '```' → logprob: -19.25
    5. '`' → logprob: -24.75
    6. '#print' → logprob: -24.875
    7. 'printf' → logprob: -25.25
    8. '``' → logprob: -25.25
    9. 'prin' → logprob: -25.375
    10. '	print' → logprob: -25.625

Token 707: '()
' (ID: 1234)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '(print' → logprob: -15.25
    3. ' print' → logprob: -16.0
    4. '```' → logprob: -18.25
    5. 'ans' → logprob: -20.625
    6. '(' → logprob: -22.375
    7. '(ans' → logprob: -22.5
    8. 'Print' → logprob: -23.125
    9. '.print' → logprob: -23.25
    10. '#print' → logprob: -23.375

Token 708: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.0
    3. ' print' → logprob: -20.875
    4. 'pr' → logprob: -23.0
    5. '``' → logprob: -23.875
    6. '(print' → logprob: -24.75
    7. '#print' → logprob: -26.5
    8. '	print' → logprob: -27.0
    9. 'python' → logprob: -27.0
    10. 'println' → logprob: -27.0

Token 709: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0019398193107917905
    2. '(' → logprob: -6.25193977355957
    3. '()' → logprob: -11.50193977355957
    4. ' (' → logprob: -14.62693977355957
    5. 'ans' → logprob: -14.87693977355957
    6. '(abs' → logprob: -16.50193977355957
    7. '(
' → logprob: -16.62693977355957
    8. '((' → logprob: -17.00193977355957
    9. '('' → logprob: -17.87693977355957
    10. '(answer' → logprob: -18.00193977355957

Token 710: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.500000953674316
    3. '())' → logprob: -16.125
    4. '))' → logprob: -16.25
    5. ')`' → logprob: -17.0
    6. ')
' → logprob: -17.125
    7. '()' → logprob: -17.25
    8. ')}' → logprob: -19.75
    9. ')#' → logprob: -20.0
    10. '(' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 708
Tokens correctement prédits (1ère position, stricte): 185
Tokens correctement prédits (1ère position, avec adaptation): 187
Tokens correctement prédits (top 10): 423
Précision stricte (1ère position): 26.13%
Précision adaptée (1ère position): 26.41%
Précision (top 10): 59.75%
================================================================================
