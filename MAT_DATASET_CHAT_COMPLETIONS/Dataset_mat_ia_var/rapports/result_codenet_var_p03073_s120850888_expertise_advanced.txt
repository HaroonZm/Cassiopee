================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import cycle

S = input()
alternators = (cycle((0, 1)), cycle((1, 0)))
counts = [
    sum(int(ch) == next(pattern) for ch in S)
    for pattern in alternators
]
print(len(S) - max(counts))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' cycle' (ID: 15839)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.1201567649841309
    2. 'com' → logprob: -1.2451567649841309
    3. 'count' → logprob: -1.7451567649841309
    4. 'per' → logprob: -2.370156764984131
    5. 'cycle' → logprob: -3.245156764984131
    6. ' permutations' → logprob: -3.620156764984131
    7. ' product' → logprob: -4.245156764984131
    8. 'group' → logprob: -4.245156764984131
    9. 'chain' → logprob: -4.495156764984131
    10. ' cycle' → logprob: -5.370156764984131

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -4.23917081207037e-05
    2. '\(' → logprob: -11.500041961669922
    3. '(
' → logprob: -11.875041961669922
    4. ',' → logprob: -12.000041961669922
    5. '()' → logprob: -12.375041961669922
    6. '.' → logprob: -12.500041961669922
    7. '```' → logprob: -13.125041961669922
    8. ' (' → logprob: -13.500041961669922
    9. '`' → logprob: -13.500041961669922
    10. ':' → logprob: -13.500041961669922

Token 5: 'S' (ID: 50)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005183627945370972
    2. ',' → logprob: -8.125518798828125
    3. '.' → logprob: -9.500518798828125
    4. ':' → logprob: -10.125518798828125
    5. 'a' → logprob: -10.625518798828125
    6. '(
' → logprob: -11.000518798828125
    7. '\(' → logprob: -11.375518798828125
    8. '```' → logprob: -11.500518798828125
    9. '\' → logprob: -12.125518798828125
    10. '[' → logprob: -12.125518798828125

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2103124856948853
    2. 'tring' → logprob: -1.4603124856948853
    3. 'e' → logprob: -1.7103124856948853
    4. '=' → logprob: -1.9603124856948853
    5. 'S' → logprob: -3.7103123664855957
    6. '(' → logprob: -4.085312366485596
    7. ':' → logprob: -4.210312366485596
    8. 't' → logprob: -4.335312366485596
    9. 'entence' → logprob: -4.335312366485596
    10. 'T' → logprob: -4.585312366485596

Token 7: ' input' (ID: 3422)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.49484920501708984
    2. 'cycle' → logprob: -1.9948492050170898
    3. ' [' → logprob: -2.49484920501709
    4. ' "' → logprob: -2.74484920501709
    5. '"' → logprob: -3.36984920501709
    6. ' '' → logprob: -3.74484920501709
    7. '[' → logprob: -4.24484920501709
    8. ' ' → logprob: -4.49484920501709
    9. ''' → logprob: -5.24484920501709
    10. 'range' → logprob: -5.61984920501709

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004189946048427373
    2. ')' → logprob: -9.000418663024902
    3. '('' → logprob: -9.000418663024902
    4. '("("' → logprob: -9.375418663024902
    5. '(
' → logprob: -10.750418663024902
    6. ' (' → logprob: -11.375418663024902
    7. '()' → logprob: -11.625418663024902
    8. ''' → logprob: -11.875418663024902
    9. '```' → logprob: -11.875418663024902
    10. '`' → logprob: -12.250418663024902

Token 9: 'altern' (ID: 71871)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03425964340567589
    2. ' for' → logprob: -3.909259557723999
    3. 'result' → logprob: -5.409259796142578
    4. ':' → logprob: -6.159259796142578
    5. 's' → logprob: -6.784259796142578
    6. 'c' → logprob: -7.284259796142578
    7. 'output' → logprob: -7.284259796142578
    8. '[' → logprob: -7.659259796142578
    9. 'print' → logprob: -7.659259796142578
    10. ')' → logprob: -7.909259796142578

Token 10: 'ators' (ID: 4840)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.005674456711858511
    2. 'ating' → logprob: -5.255674362182617
    3. 'ately' → logprob: -9.005674362182617
    4. 'at' → logprob: -9.255674362182617
    5. 'ext' → logprob: -9.505674362182617
    6. 'e' → logprob: -9.755674362182617
    7. 'a' → logprob: -10.255674362182617
    8. 'ator' → logprob: -11.505674362182617
    9. '=' → logprob: -12.005674362182617
    10. 'et' → logprob: -12.380674362182617

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04474454000592232
    2. '=' → logprob: -3.1697444915771484
    3. '.' → logprob: -6.669744491577148
    4. '(' → logprob: -8.669744491577148
    5. '_' → logprob: -9.044744491577148
    6. ' ' → logprob: -9.669744491577148
    7. 's' → logprob: -10.544744491577148
    8. '[' → logprob: -10.544744491577148
    9. ')' → logprob: -11.294744491577148
    10. '_cycle' → logprob: -11.419744491577148

Token 12: ' (' (ID: 350)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.38848596811294556
    2. ' cycle' → logprob: -1.1384859085083008
    3. '[' → logprob: -7.013485908508301
    4. ' list' → logprob: -8.6384859085083
    5. ' [' → logprob: -8.6384859085083
    6. 'list' → logprob: -8.8884859085083
    7. '[]' → logprob: -9.5134859085083
    8. ' ' → logprob: -10.5134859085083
    9. 'cycler' → logprob: -11.0134859085083
    10. 'cycled' → logprob: -11.1384859085083

Token 13: 'cycle' (ID: 24879)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4514998197555542
    2. '0' → logprob: -1.8264998197555542
    3. ''a' → logprob: -2.7014999389648438
    4. ''S' → logprob: -3.0764999389648438
    5. ''i' → logprob: -3.2014999389648438
    6. '1' → logprob: -3.3264999389648438
    7. 'cycle' → logprob: -3.3264999389648438
    8. '"' → logprob: -3.4514999389648438
    9. ')' → logprob: -3.5764999389648438
    10. ''s' → logprob: -3.8264999389648438

Token 14: '((' (ID: 2054)
  Prédit: '([''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(['' → logprob: -0.7281997203826904
    2. '(('' → logprob: -1.9781997203826904
    3. '([' → logprob: -2.1031997203826904
    4. '('' → logprob: -2.1031997203826904
    5. '((' → logprob: -2.4781997203826904
    6. '(S' → logprob: -3.6031997203826904
    7. '(' → logprob: -3.9781997203826904
    8. '(["' → logprob: -6.7281999588012695
    9. '(("' → logprob: -6.9781999588012695
    10. '("("' → logprob: -7.6031999588012695

Token 15: '0' (ID: 15)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -0.8881872296333313
    2. ''' → logprob: -1.1381871700286865
    3. '0' → logprob: -2.5131871700286865
    4. 'S' → logprob: -3.0131871700286865
    5. 'True' → logprob: -3.3881871700286865
    6. '"S' → logprob: -3.8881871700286865
    7. '"' → logprob: -4.263187408447266
    8. ''a' → logprob: -4.263187408447266
    9. ''A' → logprob: -4.388187408447266
    10. 's' → logprob: -5.263187408447266

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.668304245569743e-05
    2. ' ,' → logprob: -10.375046730041504
    3. ',)' → logprob: -12.000046730041504
    4. '1' → logprob: -12.625046730041504
    5. ',),' → logprob: -13.000046730041504
    6. ',
' → logprob: -14.375046730041504
    7. ')))' → logprob: -14.875046730041504
    8. ',))
' → logprob: -14.875046730041504
    9. ',

' → logprob: -15.125046730041504
    10. ',,' → logprob: -15.375046730041504

Token 17: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22578126192092896
    2. ' ' → logprob: -1.6007812023162842
    3. '2' → logprob: -8.475781440734863
    4. '  ' → logprob: -10.100781440734863
    5. '3' → logprob: -10.538281440734863
    6. '4' → logprob: -10.600781440734863
    7. '9' → logprob: -11.600781440734863
    8. '   ' → logprob: -11.725781440734863
    9. '0' → logprob: -11.975781440734863
    10. ')))' → logprob: -11.975781440734863

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018727132119238377
    2. ' ' → logprob: -6.501872539520264
    3. '2' → logprob: -8.126873016357422
    4. ')))' → logprob: -11.251873016357422
    5. '0' → logprob: -11.439373016357422
    6. 'S' → logprob: -12.001873016357422
    7. '3' → logprob: -12.126873016357422
    8. '-' → logprob: -12.189373016357422
    9. '  ' → logprob: -12.189373016357422
    10. '4' → logprob: -12.501873016357422

Token 19: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.444023460149765
    2. ')))' → logprob: -1.0690234899520874
    3. ')),' → logprob: -4.319023609161377
    4. ')' → logprob: -7.319023609161377
    5. '),' → logprob: -7.819023609161377
    6. '))),' → logprob: -8.194023132324219
    7. '))
' → logprob: -8.569023132324219
    8. ')))
' → logprob: -8.819023132324219
    9. '))))' → logprob: -9.444023132324219
    10. ')),
' → logprob: -9.694023132324219

Token 20: ' cycle' (ID: 15839)
  Prédit: ' cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.12720872461795807
    2. 'cycle' → logprob: -2.127208709716797
    3. '    ' → logprob: -8.877208709716797
    4. ' ' → logprob: -9.877208709716797
    5. '   ' → logprob: -11.002208709716797
    6. '        ' → logprob: -11.002208709716797
    7. '  ' → logprob: -11.502208709716797
    8. ')' → logprob: -12.127208709716797
    9. '      ' → logprob: -12.564708709716797
    10. '     ' → logprob: -12.564708709716797

Token 21: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00042209390085190535
    2. '(' → logprob: -8.000422477722168
    3. '([' → logprob: -10.625422477722168
    4. '(([' → logprob: -10.750422477722168
    5. '(('' → logprob: -11.375422477722168
    6. '((-' → logprob: -11.750422477722168
    7. ' ((' → logprob: -11.875422477722168
    8. '(()' → logprob: -12.375422477722168
    9. '```' → logprob: -13.375422477722168
    10. '(({' → logprob: -13.375422477722168

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03185982257127762
    2. '0' → logprob: -3.781859874725342
    3. ''' → logprob: -5.031859874725342
    4. '2' → logprob: -6.906859874725342
    5. ' ' → logprob: -7.781859874725342
    6. ''A' → logprob: -9.469359397888184
    7. '"' → logprob: -9.594359397888184
    8. '-' → logprob: -9.594359397888184
    9. ''S' → logprob: -10.031859397888184
    10. ''a' → logprob: -10.094359397888184

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019115038448944688
    2. ' ,' → logprob: -6.376911640167236
    3. '0' → logprob: -8.626911163330078
    4. ')))' → logprob: -11.751911163330078
    5. ',
' → logprob: -12.001911163330078
    6. '))' → logprob: -12.376911163330078
    7. ' ' → logprob: -12.501911163330078
    8. '2' → logprob: -13.251911163330078
    9. '1' → logprob: -13.751911163330078
    10. ')' → logprob: -13.751911163330078

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.474160373210907
    2. ' ' → logprob: -0.974160373210907
    3. '2' → logprob: -9.974160194396973
    4. '1' → logprob: -11.099160194396973
    5. '  ' → logprob: -12.661660194396973
    6. '))' → logprob: -12.661660194396973
    7. ')' → logprob: -12.911660194396973
    8. ' ))' → logprob: -13.286660194396973
    9. '   ' → logprob: -13.599160194396973
    10. ' ' → logprob: -13.724160194396973

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033805906772613525
    2. ' ' → logprob: -3.4088058471679688
    3. '2' → logprob: -9.533805847167969
    4. '1' → logprob: -10.283805847167969
    5. '))' → logprob: -10.533805847167969
    6. ')' → logprob: -12.221305847167969
    7. '  ' → logprob: -12.346305847167969
    8. ')))' → logprob: -12.471305847167969
    9. ' ))' → logprob: -12.783805847167969
    10. '   ' → logprob: -13.346305847167969

Token 26: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.08972513675689697
    2. '))' → logprob: -2.4647250175476074
    3. ')' → logprob: -7.339725017547607
    4. ')),' → logprob: -9.464725494384766
    5. ')))
' → logprob: -10.964725494384766
    6. '))))' → logprob: -11.464725494384766
    7. '),' → logprob: -11.589725494384766
    8. ')));' → logprob: -12.089725494384766
    9. ')))

' → logprob: -12.714725494384766
    10. ' ' → logprob: -12.964725494384766

Token 27: 'counts' (ID: 99089)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1558973789215088
    2. 'for' → logprob: -1.4058973789215088
    3. 'i' → logprob: -1.6558973789215088
    4. 'output' → logprob: -2.655897378921509
    5. 'idx' → logprob: -3.530897378921509
    6. ' for' → logprob: -3.905897378921509
    7. ')' → logprob: -4.28089714050293
    8. 'res' → logprob: -4.40589714050293
    9. '[' → logprob: -4.78089714050293
    10. 's' → logprob: -4.90589714050293

Token 28: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0060397121123969555
    2. '=' → logprob: -5.631039619445801
    3. ' =' → logprob: -6.506039619445801
    4. '_' → logprob: -7.381039619445801
    5. '\[' → logprob: -9.8810396194458
    6. '.' → logprob: -10.5060396194458
    7. ',' → logprob: -10.5060396194458
    8. ' ' → logprob: -10.6310396194458
    9. '<|end|>' → logprob: -10.6310396194458
    10. '```' → logprob: -10.7560396194458

Token 29: ' [
' (ID: 4240)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2600788176059723
    2. ' [' → logprob: -1.51007878780365
    3. '(' → logprob: -5.8850789070129395
    4. '{' → logprob: -6.7600789070129395
    5. ' (' → logprob: -6.7600789070129395
    6. '[{' → logprob: -6.7600789070129395
    7. ' [{' → logprob: -7.1350789070129395
    8. '({' → logprob: -7.6350789070129395
    9. ' {' → logprob: -8.760078430175781
    10. '([' → logprob: -9.260078430175781

Token 30: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04757905751466751
    2. '[' → logprob: -3.922579050064087
    3. '{' → logprob: -4.547579288482666
    4. ' ' → logprob: -5.922579288482666
    5. 'sum' → logprob: -6.172579288482666
    6. ' [' → logprob: -6.797579288482666
    7. '[S' → logprob: -6.797579288482666
    8. 'S' → logprob: -6.922579288482666
    9. '[s' → logprob: -6.922579288482666
    10. '{}' → logprob: -7.047579288482666

Token 31: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03516431525349617
    2. '{' → logprob: -4.6601643562316895
    3. '[' → logprob: -4.6601643562316895
    4. 'sum' (adapté à ' sum') → logprob: -5.9101643562316895
    5. '{}' → logprob: -6.0351643562316895
    6. ' ' → logprob: -6.9101643562316895
    7. 'len' → logprob: -7.1601643562316895
    8. '[]' → logprob: -7.2851643562316895
    9. '1' → logprob: -7.4101643562316895
    10. '(' → logprob: -7.4101643562316895

Token 32: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16016967594623566
    2. '((' → logprob: -2.7851696014404297
    3. '(next' → logprob: -2.9101696014404297
    4. '(s' → logprob: -4.28516960144043
    5. '(c' → logprob: -5.16016960144043
    6. '(x' → logprob: -5.66016960144043
    7. '(a' → logprob: -6.16016960144043
    8. '(
' → logprob: -6.91016960144043
    9. '(((' → logprob: -7.28516960144043
    10. '(map' → logprob: -7.66016960144043

Token 33: '(ch' (ID: 15574)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.6398513317108154
    2. '(c' → logprob: -1.1398513317108154
    3. '(ch' → logprob: -2.5148513317108154
    4. '(x' → logprob: -4.2648515701293945
    5. '(d' → logprob: -4.3898515701293945
    6. '(s' → logprob: -4.6398515701293945
    7. '(char' → logprob: -4.7648515701293945
    8. '(a' → logprob: -4.8898515701293945
    9. 'S' → logprob: -5.1398515701293945
    10. '(next' → logprob: -5.1398515701293945

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003640107112005353
    2. ' ==' → logprob: -6.628640174865723
    3. '==' → logprob: -6.878640174865723
    4. '))' → logprob: -7.628640174865723
    5. ')==' → logprob: -8.128640174865723
    6. 'el' → logprob: -8.753640174865723
    7. ')*' → logprob: -9.753640174865723
    8. 'ex' → logprob: -10.503640174865723
    9. ')+' → logprob: -10.503640174865723
    10. '[' → logprob: -11.128640174865723

Token 35: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0303752422332764
    2. '(next' → logprob: -1.0303752422332764
    3. ' ==' → logprob: -2.0303752422332764
    4. ' for' → logprob: -2.6553752422332764
    5. '==' → logprob: -2.9053752422332764
    6. 'for' → logprob: -4.9053754806518555
    7. ' next' → logprob: -5.1553754806518555
    8. '[next' → logprob: -5.5303754806518555
    9. '(ch' → logprob: -5.7803754806518555
    10. 'next' → logprob: -6.0303754806518555

Token 36: ' next' (ID: 2613)
  Prédit: 'alt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alt' → logprob: -0.9952996969223022
    2. 'next' → logprob: -1.1202996969223022
    3. 'a' → logprob: -2.245299816131592
    4. ' alt' → logprob: -2.620299816131592
    5. ' next' → logprob: -2.620299816131592
    6. 'n' → logprob: -4.245299816131592
    7. ' a' → logprob: -4.870299816131592
    8. ' nxt' → logprob: -5.495299816131592
    9. 'x' → logprob: -5.745299816131592
    10. 'i' → logprob: -5.870299816131592

Token 37: '(pattern' (ID: 62660)
  Prédit: '(al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(al' → logprob: -0.33597901463508606
    2. 'alt' → logprob: -2.4609789848327637
    3. 'altern' → logprob: -2.4609789848327637
    4. '(' → logprob: -3.2109789848327637
    5. '(a' → logprob: -3.2109789848327637
    6. 'a' → logprob: -4.335978984832764
    7. 'alts' → logprob: -4.460978984832764
    8. ' alt' → logprob: -5.835978984832764
    9. 'al' → logprob: -5.835978984832764
    10. ' altern' → logprob: -6.710978984832764

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002300608903169632
    2. '))' → logprob: -6.50230073928833
    3. ')
' → logprob: -9.252300262451172
    4. 'for' → logprob: -9.627300262451172
    5. '[i' → logprob: -9.752300262451172
    6. 's' → logprob: -9.752300262451172
    7. '[' → logprob: -10.002300262451172
    8. '[count' → logprob: -10.377300262451172
    9. '())' → logprob: -10.502300262451172
    10. '(' → logprob: -10.502300262451172

Token 39: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14620725810527802
    2. 'for' → logprob: -2.021207332611084
    3. ')' → logprob: -6.271207332611084
    4. '   ' → logprob: -7.271207332611084
    5. ' ' → logprob: -7.521207332611084
    6. '(ch' → logprob: -9.021206855773926
    7. '  ' → logprob: -9.396206855773926
    8. ' in' → logprob: -10.521206855773926
    9. '(' → logprob: -10.646206855773926
    10. '    ' → logprob: -11.146206855773926

Token 40: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.7891469597816467
    2. ' ch' → logprob: -0.9141469597816467
    3. 'S' → logprob: -2.664146900177002
    4. ' S' → logprob: -3.664146900177002
    5. 's' → logprob: -3.789146900177002
    6. ' s' → logprob: -3.914146900177002
    7. '_' → logprob: -5.789146900177002
    8. ' range' → logprob: -7.539146900177002
    9. ' line' → logprob: -7.914146900177002
    10. 'range' → logprob: -8.03914737701416

Token 41: ' in' (ID: 306)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.036486994475126266
    2. 'S' → logprob: -3.536487102508545
    3. ' in' → logprob: -5.036487102508545
    4. 's' → logprob: -10.036486625671387
    5. ',' → logprob: -10.286486625671387
    6. ')' → logprob: -10.411486625671387
    7. ' s' → logprob: -10.536486625671387
    8. ' ' → logprob: -10.911486625671387
    9. ' ,' → logprob: -10.911486625671387
    10. 'in' → logprob: -11.036486625671387

Token 42: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.020608922466635704
    2. ' S' → logprob: -3.895608901977539
    3. ' ' → logprob: -10.520608901977539
    4. 's' → logprob: -11.020608901977539
    5. ')' → logprob: -12.020608901977539
    6. '   ' → logprob: -12.145608901977539
    7. '  ' → logprob: -13.458108901977539
    8. ' s' → logprob: -13.645608901977539
    9. 'range' → logprob: -13.645608901977539
    10. ' range' → logprob: -14.020608901977539

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35539525747299194
    2. ')
' → logprob: -1.2303953170776367
    3. '[' → logprob: -5.230395317077637
    4. ' ' → logprob: -7.730395317077637
    5. '   ' → logprob: -8.105395317077637
    6. ')
' → logprob: -8.230395317077637
    7. ' )' → logprob: -9.105395317077637
    8. '),
' → logprob: -9.605395317077637
    9. ' if' → logprob: -9.855395317077637
    10. ' )
' → logprob: -10.105395317077637

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5341106057167053
    2. ')' → logprob: -1.0341105461120605
    3. '[' → logprob: -3.0341105461120605
    4. ')
' → logprob: -5.2841105461120605
    5. 'for' → logprob: -6.1591105461120605
    6. ' for' → logprob: -7.0341105461120605
    7. ' ' → logprob: -7.2841105461120605
    8. ']' → logprob: -7.6591105461120605
    9. '       ' → logprob: -8.659111022949219
    10. '[count' → logprob: -9.034111022949219

Token 45: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5734686255455017
    2. ')' → logprob: -0.9484686255455017
    3. 'for' (adapté à ' for') → logprob: -3.3234686851501465
    4. ' for' → logprob: -4.9484686851501465
    5. ')
' → logprob: -5.9484686851501465
    6. ' ' → logprob: -6.3234686851501465
    7. '       ' → logprob: -7.9484686851501465
    8. ']' → logprob: -8.073468208312988
    9. '[' → logprob: -8.073468208312988
    10. ',' → logprob: -8.823468208312988

Token 46: ' pattern' (ID: 8302)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'altern' → logprob: -0.07553903013467789
    2. ' altern' → logprob: -3.3255391120910645
    3. 'pattern' → logprob: -3.4505391120910645
    4. ' pattern' → logprob: -5.7005391120910645
    5. 'range' → logprob: -7.0755391120910645
    6. ' range' → logprob: -7.9505391120910645
    7. 'alter' → logprob: -9.075538635253906
    8. 'enumer' → logprob: -9.450538635253906
    9. '_' → logprob: -10.075538635253906
    10. ' alternating' → logprob: -10.200538635253906

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027417292818427086
    2. 'in' → logprob: -3.6524171829223633
    3. 's' → logprob: -6.902417182922363
    4. 'altern' → logprob: -9.527417182922363
    5. ')' → logprob: -10.652417182922363
    6. ' altern' → logprob: -12.402417182922363
    7. ' )' → logprob: -13.277417182922363
    8. ' ' → logprob: -13.777417182922363
    9. 'alt' → logprob: -14.652417182922363
    10. '   ' → logprob: -14.714917182922363

Token 48: ' altern' (ID: 7310)
  Prédit: 'altern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'altern' → logprob: -0.004626052919775248
    2. ' altern' → logprob: -5.379626274108887
    3. 'Altern' → logprob: -13.379626274108887
    4. 'alter' → logprob: -13.379626274108887
    5. ' alternating' → logprob: -13.754626274108887
    6. ' alternativ' → logprob: -14.504626274108887
    7. 'alternate' → logprob: -14.879626274108887
    8. 'al' → logprob: -15.004626274108887
    9. '   ' → logprob: -15.879626274108887
    10. 'alt' → logprob: -16.50462532043457

Token 49: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -3.128163257315464e-07
    2. 'ATORS' → logprob: -15.125
    3. 'ator' → logprob: -17.25
    4. '   ' → logprob: -19.875
    5. 'actors' → logprob: -20.125
    6. 'atores' → logprob: -20.375
    7. '-' → logprob: -20.75
    8. 'a' → logprob: -21.0
    9. 'aters' → logprob: -21.125
    10. 'ors' → logprob: -21.5

Token 50: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003165122354403138
    2. ')' → logprob: -5.878165245056152
    3. ')]' → logprob: -8.003165245056152
    4. ']
' → logprob: -11.003165245056152
    5. '])' → logprob: -12.503165245056152
    6. ' ]' → logprob: -12.503165245056152
    7. ']
' → logprob: -15.003165245056152
    8. ']

' → logprob: -15.003165245056152
    9. '   ' → logprob: -15.503165245056152
    10. '`]' → logprob: -15.628165245056152

Token 51: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014599967980757356
    2. ')' → logprob: -6.751460075378418
    3. ')]' → logprob: -8.251460075378418
    4. '])' → logprob: -11.626460075378418
    5. ' ]' → logprob: -11.626460075378418
    6. ']
' → logprob: -11.876460075378418
    7. '   ' → logprob: -13.376460075378418
    8. ']
' → logprob: -14.501460075378418
    9. ']

' → logprob: -14.626460075378418
    10. '`]' → logprob: -15.126460075378418

Token 52: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18426799774169922
    2. 'if' → logprob: -2.684267997741699
    3. 'max' → logprob: -3.684267997741699
    4. 'best' → logprob: -3.809267997741699
    5. ')' → logprob: -3.934267997741699
    6. 'min' → logprob: -4.934267997741699
    7. ']' → logprob: -5.059267997741699
    8. '[' → logprob: -5.184267997741699
    9. 'idx' → logprob: -5.434267997741699
    10. 'result' → logprob: -5.809267997741699

Token 53: '(len' (ID: 14990)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.66392582654953
    2. '(' → logprob: -0.78892582654953
    3. '(count' → logprob: -4.163925647735596
    4. '(sum' → logprob: -4.288925647735596
    5. '(*' → logprob: -7.538925647735596
    6. '(min' → logprob: -7.663925647735596
    7. '()' → logprob: -9.038926124572754
    8. '(len' → logprob: -9.288926124572754
    9. '("("' → logprob: -9.538926124572754
    10. '('' → logprob: -9.663926124572754

Token 54: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0022419660817831755
    2. '(' → logprob: -6.252242088317871
    3. 'S' → logprob: -8.627242088317871
    4. '(set' → logprob: -10.002242088317871
    5. ')' → logprob: -10.502242088317871
    6. '(count' → logprob: -10.752242088317871
    7. '(s' → logprob: -11.377242088317871
    8. 's' → logprob: -11.752242088317871
    9. '([' → logprob: -12.127242088317871
    10. '(
' → logprob: -13.002242088317871

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.092860646545887
    2. '))' → logprob: -2.467860698699951
    3. '-' → logprob: -6.592860698699951
    4. ' -' → logprob: -6.967860698699951
    5. '),' → logprob: -7.342860698699951
    6. ' )' → logprob: -7.842860698699951
    7. ')-' → logprob: -8.342860221862793
    8. ',' → logprob: -8.967860221862793
    9. ' ))' → logprob: -9.717860221862793
    10. ')))' → logprob: -10.092860221862793

Token 56: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038176555186510086
    2. '-' → logprob: -4.038176536560059
    3. '))' → logprob: -4.288176536560059
    4. ' -' → logprob: -5.538176536560059
    5. ' )' → logprob: -7.038176536560059
    6. '%' → logprob: -7.538176536560059
    7. ')))' → logprob: -8.288176536560059
    8. '-)' → logprob: -8.913176536560059
    9. ' ' → logprob: -9.413176536560059
    10. ',' → logprob: -10.538176536560059

Token 57: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6120671033859253
    2. ' max' → logprob: -1.1120671033859253
    3. 'min' → logprob: -2.362067222595215
    4. ' min' → logprob: -3.362067222595215
    5. ' ' → logprob: -13.112067222595215
    6. '   ' → logprob: -14.987067222595215
    7. ')' → logprob: -15.112067222595215
    8. '	max' → logprob: -15.237067222595215
    9. '(max' → logprob: -15.362067222595215
    10. 'counts' → logprob: -15.362067222595215

Token 58: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.00012415809032972902
    2. '(' → logprob: -9.000123977661133
    3. '(
' → logprob: -14.625123977661133
    4. '(max' → logprob: -16.000123977661133
    5. 'counts' → logprob: -16.625123977661133
    6. ' counts' → logprob: -16.875123977661133
    7. '(cnt' → logprob: -17.625123977661133
    8. '(c' → logprob: -18.250123977661133
    9. ' (' → logprob: -18.750123977661133
    10. ')' → logprob: -19.625123977661133

Token 59: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8908587662735954e-05
    2. 'counts' → logprob: -11.500019073486328
    3. '(count' → logprob: -11.750019073486328
    4. ')' → logprob: -15.625019073486328
    5. 'count' → logprob: -15.750019073486328
    6. ' counts' → logprob: -15.750019073486328
    7. 'S' → logprob: -16.000019073486328
    8. 'ts' → logprob: -16.375019073486328
    9. '(s' → logprob: -16.500019073486328
    10. 'ount' → logprob: -16.750019073486328

Token 60: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20142386853694916
    2. ')' → logprob: -1.7014238834381104
    3. ')))' → logprob: -11.826423645019531
    4. '))
' → logprob: -13.576423645019531
    5. ')
' → logprob: -14.326423645019531
    6. '])' → logprob: -15.201423645019531
    7. ' ))' → logprob: -15.326423645019531
    8. ' )' → logprob: -15.576423645019531
    9. '})' → logprob: -15.701423645019531
    10. ')}' → logprob: -16.32642364501953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 58
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 45
Précision stricte (1ère position): 36.21%
Précision adaptée (1ère position): 36.21%
Précision (top 10): 77.59%
================================================================================
