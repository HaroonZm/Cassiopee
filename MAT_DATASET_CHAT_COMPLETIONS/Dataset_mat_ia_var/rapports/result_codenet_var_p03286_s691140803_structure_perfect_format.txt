================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
ans = []
if n == 0:
    print(0)
    exit()
while not (n == 0):
    amari = -(n % (-2))
    shou = (n - amari) // (-2)
    n = shou
    ans.append(str(amari))
ans = [ans[-i - 1] for i in range(len(ans))]
print(''.join(ans))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'ans' (ID: 616)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2358773797750473
    2. ' =' → logprob: -1.9858773946762085
    3. '+' → logprob: -3.610877275466919
    4. ' +=' → logprob: -3.860877275466919
    5. '+=' → logprob: -4.360877513885498
    6. '[' → logprob: -5.235877513885498
    7. '_' → logprob: -5.485877513885498
    8. ' ' → logprob: -6.985877513885498
    9. '.' → logprob: -7.860877513885498
    10. '*' → logprob: -8.11087703704834

Token 7: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1066814735531807
    2. ' ' → logprob: -3.6066815853118896
    3. 'n' → logprob: -3.6066815853118896
    4. '"' → logprob: -3.8566815853118896
    5. ' n' → logprob: -4.3566813468933105
    6. ''' → logprob: -4.7316813468933105
    7. '1' → logprob: -6.2316813468933105
    8. 'sum' → logprob: -7.7316813468933105
    9. ' "' → logprob: -7.9816813468933105
    10. ' '' → logprob: -8.481681823730469

Token 8: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012672807089984417
    2. ' for' → logprob: -5.3876729011535645
    3. '```' → logprob: -5.8876729011535645
    4. '\n' → logprob: -6.7626729011535645
    5. '
' → logprob: -7.0126729011535645
    6. '\' → logprob: -7.3876729011535645
    7. ')' → logprob: -7.8876729011535645
    8. ''' → logprob: -7.8876729011535645
    9. 'i' → logprob: -8.012672424316406
    10. '`' → logprob: -8.262672424316406

Token 9: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007457899395376444
    2. 'n' → logprob: -5.007457733154297
    3. ' ' → logprob: -7.507457733154297
    4. ' ' → logprob: -8.632457733154297
    5. ' not' → logprob: -11.382457733154297
    6. ' ' → logprob: -14.632457733154297
    7. '_' → logprob: -15.007457733154297
    8. ' len' → logprob: -15.132457733154297
    9. '  ' → logprob: -15.257457733154297
    10. ' (' → logprob: -15.382457733154297

Token 10: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17583154141902924
    2. ' ' → logprob: -2.5508315563201904
    3. '>' → logprob: -2.8008315563201904
    4. ' ==' → logprob: -4.925831317901611
    5. ' >=' → logprob: -5.175831317901611
    6. ' <' → logprob: -5.925831317901611
    7. ' <=' → logprob: -6.300831317901611
    8. '%' → logprob: -6.425831317901611
    9. ' %' → logprob: -6.425831317901611
    10. '==' → logprob: -7.300831317901611

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6165796518325806
    2. '0' → logprob: -0.8665796518325806
    3. '1' → logprob: -3.241579532623291
    4. '2' → logprob: -8.49158000946045
    5. '3' → logprob: -8.74158000946045
    6. '4' → logprob: -8.86658000946045
    7. ''' → logprob: -8.99158000946045
    8. '"' → logprob: -10.11658000946045
    9. '5' → logprob: -10.99158000946045
    10. ' '' → logprob: -12.36658000946045

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21513554453849792
    2. '1' → logprob: -2.3401355743408203
    3. ' ' → logprob: -2.3401355743408203
    4. '2' → logprob: -7.34013557434082
    5. '3' → logprob: -8.46513557434082
    6. '4' → logprob: -10.21513557434082
    7. '5' → logprob: -10.96513557434082
    8. '7' → logprob: -11.96513557434082
    9. '  ' → logprob: -12.71513557434082
    10. '100' → logprob: -12.84013557434082

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.885492621222511e-05
    2. ' :' → logprob: -9.750068664550781
    3. ':
' → logprob: -11.625068664550781
    4. ':return' → logprob: -14.750068664550781
    5. ':**' → logprob: -15.125068664550781
    6. '':'' → logprob: -15.250068664550781
    7. '':' → logprob: -15.375068664550781
    8. '):' → logprob: -16.25006866455078
    9. ':

' → logprob: -17.00006866455078
    10. ',' → logprob: -17.25006866455078

Token 14: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0950349569320679
    2. ' 
' → logprob: -1.5950349569320679
    3. '\' → logprob: -1.8450349569320679
    4. ' ' → logprob: -2.3450350761413574
    5. '\n' → logprob: -2.9700350761413574
    6. ' \' → logprob: -3.0950350761413574
    7. ' ans' → logprob: -3.7200350761413574
    8. '     
' → logprob: -3.9700350761413574
    9. '    ' → logprob: -4.720035076141357
    10. ' print' → logprob: -4.720035076141357

Token 15: ' print' (ID: 2123)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.012105177156627178
    2. 'ans' → logprob: -4.7621049880981445
    3. ' print' → logprob: -6.2621049880981445
    4. ' pass' → logprob: -7.3871049880981445
    5. 'print' (adapté à ' print') → logprob: -8.262104988098145
    6. ' ' → logprob: -8.762104988098145
    7. ' 
' → logprob: -9.262104988098145
    8. '(ans' → logprob: -9.262104988098145
    9. ' \' → logprob: -9.762104988098145
    10. '0' → logprob: -10.012104988098145

Token 16: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11757025867700577
    2. '()' → logprob: -2.242570161819458
    3. '('' → logprob: -6.242570400238037
    4. '("' → logprob: -6.367570400238037
    5. '0' → logprob: -7.992570400238037
    6. '("")' → logprob: -7.992570400238037
    7. '(None' → logprob: -8.992569923400879
    8. '(n' → logprob: -9.367569923400879
    9. '(False' → logprob: -9.617569923400879
    10. '(True' → logprob: -9.992569923400879

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04204364866018295
    2. '"' → logprob: -3.542043685913086
    3. ''' → logprob: -4.667043685913086
    4. ')' → logprob: -7.042043685913086
    5. '1' → logprob: -7.292043685913086
    6. ' ' → logprob: -7.667043685913086
    7. '")' → logprob: -8.042043685913086
    8. 'n' → logprob: -8.417043685913086
    9. 'ans' → logprob: -9.292043685913086
    10. '')' → logprob: -10.542043685913086

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2603901015827432e-05
    2. ')
' → logprob: -10.750022888183594
    3. '')' → logprob: -14.500022888183594
    4. '`)' → logprob: -15.125022888183594
    5. '")' → logprob: -16.000022888183594
    6. ' )' → logprob: -16.125022888183594
    7. '))' → logprob: -17.000022888183594
    8. ')

' → logprob: -17.250022888183594
    9. '```' → logprob: -17.250022888183594
    10. '）' → logprob: -17.500022888183594

Token 19: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.052306123077869415
    2. '\n' → logprob: -3.1773061752319336
    3. '
' → logprob: -5.677306175231934
    4. 'elif' → logprob: -5.802306175231934
    5. '```' → logprob: -6.927306175231934
    6. ' else' → logprob: -6.927306175231934
    7. '\' → logprob: -7.802306175231934
    8. '    
' → logprob: -9.052306175231934
    9. ' 
' → logprob: -9.677306175231934
    10. 'for' → logprob: -9.927306175231934

Token 20: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08024699985980988
    2. '\n' → logprob: -2.705246925354004
    3. '
' → logprob: -5.580246925354004
    4. 'elif' → logprob: -5.705246925354004
    5. ' else' → logprob: -6.205246925354004
    6. '\' → logprob: -7.580246925354004
    7. '```' → logprob: -7.955246925354004
    8. '    
' → logprob: -9.330246925354004
    9. ' 
' → logprob: -10.080246925354004
    10. 'exit' (adapté à ' exit') → logprob: -10.330246925354004

Token 21: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04346931725740433
    2. '()
' → logprob: -3.1684694290161133
    3. '(' → logprob: -8.418469429016113
    4. '()

' → logprob: -9.043469429016113
    5. '(
' → logprob: -9.668469429016113
    6. '()\' → logprob: -10.293469429016113
    7. '()`' → logprob: -11.043469429016113
    8. '()
' → logprob: -11.543469429016113
    9. '```' → logprob: -13.543469429016113
    10. ' ()' → logprob: -13.793469429016113

Token 22: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5224035382270813
    2. '\n' → logprob: -1.1474034786224365
    3. '\' → logprob: -3.5224034786224365
    4. '
' → logprob: -3.7724034786224365
    5. ' 
' → logprob: -4.397403717041016
    6. ' for' → logprob: -4.647403717041016
    7. '```' → logprob: -5.272403717041016
    8. 'else' → logprob: -6.147403717041016
    9. 'while' → logprob: -6.897403717041016
    10. '\r' → logprob: -6.897403717041016

Token 23: ' not' (ID: 625)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.000431861262768507
    2. 'n' → logprob: -7.750432014465332
    3. ' ' → logprob: -14.000432014465332
    4. ' ' → logprob: -16.000431060791016
    5. ' True' → logprob: -16.375431060791016
    6. ' not' → logprob: -17.000431060791016
    7. '(n' → logprob: -17.625431060791016
    8. '	n' → logprob: -17.625431060791016
    9. '_' → logprob: -18.375431060791016
    10. '_n' → logprob: -18.750431060791016

Token 24: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.024108055979013443
    2. 'n' → logprob: -4.024107933044434
    3. ' (' → logprob: -5.899107933044434
    4. '(n' → logprob: -6.774107933044434
    5. ' ' → logprob: -6.899107933044434
    6. ')' → logprob: -7.774107933044434
    7. ' ans' → logprob: -8.399107933044434
    8. '_' → logprob: -9.024107933044434
    9. '(' → logprob: -9.899107933044434
    10. ' )' → logprob: -10.649107933044434

Token 25: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2547479569911957
    2. ' n' → logprob: -1.504747986793518
    3. ')' → logprob: -7.3797478675842285
    4. '(n' → logprob: -7.5047478675842285
    5. ' (' → logprob: -7.5047478675842285
    6. 'ans' → logprob: -8.129748344421387
    7. ' ans' → logprob: -8.504748344421387
    8. 'len' → logprob: -9.004748344421387
    9. '(' → logprob: -9.129748344421387
    10. ' ' → logprob: -9.504748344421387

Token 26: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31602174043655396
    2. '==' → logprob: -1.6910216808319092
    3. ' ' → logprob: -3.191021680831909
    4. '%' → logprob: -3.816021680831909
    5. ' %' → logprob: -4.691021919250488
    6. ' <=' → logprob: -4.941021919250488
    7. ')' → logprob: -6.066021919250488
    8. '<=' → logprob: -6.066021919250488
    9. ' )' → logprob: -6.316021919250488
    10. ' <' → logprob: -8.566021919250488

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03548894077539444
    2. '0' → logprob: -3.7854888439178467
    3. '1' → logprob: -4.410489082336426
    4. '  ' → logprob: -11.660489082336426
    5. ')' → logprob: -12.410489082336426
    6. '   ' → logprob: -13.347989082336426
    7. ' )' → logprob: -13.597989082336426
    8. ' ' → logprob: -13.972989082336426
    9. '```' → logprob: -14.660489082336426
    10. '=' → logprob: -14.722989082336426

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.319550484418869
    2. ' ' → logprob: -1.8195505142211914
    3. '1' → logprob: -2.1945505142211914
    4. '  ' → logprob: -11.819550514221191
    5. '   ' → logprob: -12.569550514221191
    6. ')' → logprob: -13.007050514221191
    7. '-' → logprob: -14.382050514221191
    8. ' ' → logprob: -14.694550514221191
    9. '    ' → logprob: -14.757050514221191
    10. '(' → logprob: -15.132050514221191

Token 29: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.31205421686172485
    2. ' and' → logprob: -1.56205415725708
    3. '):' → logprob: -3.31205415725708
    4. ')' → logprob: -4.31205415725708
    5. ' ):' → logprob: -5.43705415725708
    6. ' ' → logprob: -6.56205415725708
    7. ' )' → logprob: -6.68705415725708
    8. 'and' → logprob: -7.06205415725708
    9. 'or' → logprob: -7.93705415725708
    10. '   ' → logprob: -9.437054634094238

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10053261369466782
    2. '    
' → logprob: -2.6005325317382812
    3. ' 
' → logprob: -4.850532531738281
    4. '
' → logprob: -5.725532531738281
    5. '```' → logprob: -6.100532531738281
    6. '<|end|>' → logprob: -6.225532531738281
    7. '     
' → logprob: -6.600532531738281
    8. '\n' → logprob: -7.100532531738281
    9. '    ' → logprob: -7.100532531738281
    10. 'n' → logprob: -7.225532531738281

Token 31: ' am' (ID: 939)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.04891946539282799
    2. ' n' → logprob: -3.423919439315796
    3. ' ' → logprob: -4.798919677734375
    4. '   ' → logprob: -6.048919677734375
    5. ' 
' → logprob: -6.423919677734375
    6. '    ' → logprob: -6.798919677734375
    7. ' `' → logprob: -7.798919677734375
    8. ' ```' → logprob: -8.173919677734375
    9. '```' → logprob: -8.298919677734375
    10. '(ans' → logprob: -9.048919677734375

Token 32: 'ari' (ID: 1683)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.32979437708854675
    2. 't' → logprob: -1.8297944068908691
    3. 'od' → logprob: -2.329794406890869
    4. 'nt' → logprob: -5.204794406890869
    5. 's' → logprob: -5.579794406890869
    6. '.append' → logprob: -6.079794406890869
    7. '   ' → logprob: -6.704794406890869
    8. '=' → logprob: -6.829794406890869
    9. ' =' → logprob: -6.954794406890869
    10. 'o' → logprob: -7.079794406890869

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16122642159461975
    2. '=' → logprob: -1.9112263917922974
    3. ' ' → logprob: -7.036226272583008
    4. ',' → logprob: -10.286226272583008
    5. ')' → logprob: -10.661226272583008
    6. '_' → logprob: -11.161226272583008
    7. '%' → logprob: -11.661226272583008
    8. '  ' → logprob: -11.911226272583008
    9. 's' → logprob: -12.036226272583008
    10. ' %=' → logprob: -12.036226272583008

Token 34: ' -(' (ID: 66319)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06994055211544037
    2. 'n' → logprob: -2.6949405670166016
    3. '	n' → logprob: -13.694940567016602
    4. ' ' → logprob: -13.819940567016602
    5. '(n' → logprob: -14.444940567016602
    6. ')' → logprob: -14.819940567016602
    7. ')n' → logprob: -15.319940567016602
    8. ',n' → logprob: -15.694940567016602
    9. '"' → logprob: -15.819940567016602
    10. ' ' → logprob: -16.1949405670166

Token 35: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0036897400859743357
    2. ' n' → logprob: -5.628689765930176
    3. '-n' → logprob: -10.378689765930176
    4. '-' → logprob: -10.503689765930176
    5. ')n' → logprob: -11.628689765930176
    6. ' -' → logprob: -11.878689765930176
    7. '(n' → logprob: -12.378689765930176
    8. '1' → logprob: -13.128689765930176
    9. ' ' → logprob: -13.253689765930176
    10. ')' → logprob: -13.628689765930176

Token 36: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.08928784728050232
    2. ' %' → logprob: -2.464287757873535
    3. ')' → logprob: -8.714287757873535
    4. '%)' → logprob: -9.464287757873535
    5. ' %)' → logprob: -10.589287757873535
    6. '%i' → logprob: -10.964287757873535
    7. ' )' → logprob: -11.214287757873535
    8. ' ' → logprob: -11.464287757873535
    9. ' ' → logprob: -11.714287757873535
    10. ')%' → logprob: -11.839287757873535

Token 37: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5230513215065002
    2. '2' → logprob: -1.0230512619018555
    3. '10' → logprob: -3.2730512619018555
    4. '3' → logprob: -6.2730512619018555
    5. '7' → logprob: -6.2730512619018555
    6. '(-' → logprob: -6.5230512619018555
    7. '1' → logprob: -7.0230512619018555
    8. ' -' → logprob: -7.1480512619018555
    9. '4' → logprob: -7.2730512619018555
    10. '5' → logprob: -7.2730512619018555

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01858684979379177
    2. '3' → logprob: -4.1435866355896
    3. '10' → logprob: -6.7685866355896
    4. '1' → logprob: -7.3935866355896
    5. '4' → logprob: -8.518587112426758
    6. '5' → logprob: -8.643587112426758
    7. '7' → logprob: -9.518587112426758
    8. '6' → logprob: -9.643587112426758
    9. '-' → logprob: -9.643587112426758
    10. '8' → logprob: -9.643587112426758

Token 39: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003229756373912096
    2. ')' → logprob: -6.25322961807251
    3. '))
' → logprob: -6.87822961807251
    4. ' ))' → logprob: -8.628230094909668
    5. ')))' → logprob: -9.628230094909668
    6. '))

' → logprob: -11.003230094909668
    7. ' ' → logprob: -13.253230094909668
    8. ')
' → logprob: -13.378230094909668
    9. '))
' → logprob: -13.503230094909668
    10. ' ))
' → logprob: -13.878230094909668

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2933481931686401
    2. ')
' → logprob: -1.4183481931686401
    3. '   ' → logprob: -1.7933481931686401
    4. ')' → logprob: -1.9183481931686401
    5. '\n' → logprob: -2.7933483123779297
    6. 'if' → logprob: -3.6683483123779297
    7. ' if' → logprob: -3.6683483123779297
    8. ' ans' → logprob: -4.29334831237793
    9. 'n' → logprob: -4.41834831237793
    10. '    
' → logprob: -5.29334831237793

Token 41: ' sh' (ID: 641)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5839490294456482
    2. '   ' → logprob: -2.083949089050293
    3. ' ' → logprob: -3.083949089050293
    4. 'n' → logprob: -3.208949089050293
    5. ' 
' → logprob: -3.333949089050293
    6. '<|end|>' → logprob: -3.333949089050293
    7. '\n' → logprob: -3.708949089050293
    8. ',' → logprob: -3.833949089050293
    9. ')
' → logprob: -4.208949089050293
    10. '[' → logprob: -4.208949089050293

Token 42: 'ou' (ID: 283)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5576737523078918
    2. 'ift' → logprob: -0.9326737523078918
    3. 'if' → logprob: -3.932673692703247
    4. 'n' → logprob: -5.807673931121826
    5. 'int' → logprob: -5.807673931121826
    6. '=' → logprob: -6.057673931121826
    7. 'e' → logprob: -6.557673931121826
    8. 'u' → logprob: -6.807673931121826
    9. 'elif' → logprob: -7.932673931121826
    10. 'ifts' → logprob: -8.432673454284668

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09031715244054794
    2. '=' → logprob: -2.4653172492980957
    3. 't' → logprob: -8.465316772460938
    4. 'r' → logprob: -8.715316772460938
    5. 's' → logprob: -9.090316772460938
    6. 'n' → logprob: -9.215316772460938
    7. 'div' → logprob: -9.215316772460938
    8. 'ri' → logprob: -9.340316772460938
    9. '   ' → logprob: -9.340316772460938
    10. '＝' → logprob: -9.590316772460938

Token 44: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2515425384044647
    2. ' n' → logprob: -1.751542568206787
    3. '(n' → logprob: -3.626542568206787
    4. 'n' → logprob: -3.876542568206787
    5. ' ' → logprob: -7.876542568206787
    6. ' -' → logprob: -8.126542091369629
    7. '(' → logprob: -8.376542091369629
    8. '-n' → logprob: -8.751542091369629
    9. '-' → logprob: -9.251542091369629
    10. '-(' → logprob: -9.376542091369629

Token 45: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10177300870418549
    2. ' n' → logprob: -2.6017730236053467
    3. '(n' → logprob: -4.101772785186768
    4. ' (' → logprob: -5.476772785186768
    5. '-n' → logprob: -6.601772785186768
    6. '-(' → logprob: -8.351773262023926
    7. '-' → logprob: -9.101773262023926
    8. '   ' → logprob: -10.351773262023926
    9. ' ' → logprob: -10.351773262023926
    10. '(' → logprob: -10.351773262023926

Token 46: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.26149389147758484
    2. '-' → logprob: -1.5114939212799072
    3. ' //' → logprob: -5.761493682861328
    4. ' ' → logprob: -6.136493682861328
    5. ')' → logprob: -6.761493682861328
    6. ' +' → logprob: -7.011493682861328
    7. '+' → logprob: -7.136493682861328
    8. '    ' → logprob: -7.636493682861328
    9. ' am' → logprob: -8.261493682861328
    10. ' )' → logprob: -8.511493682861328

Token 47: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0699549987912178
    2. ' am' → logprob: -2.6949551105499268
    3. '   ' → logprob: -11.819954872131348
    4. ')' → logprob: -12.194954872131348
    5. '(am' → logprob: -12.819954872131348
    6. '  ' → logprob: -13.819954872131348
    7. 'amn' → logprob: -14.569954872131348
    8. 'a' → logprob: -15.319954872131348
    9. ' ' → logprob: -15.569954872131348
    10. '    ' → logprob: -15.944954872131348

Token 48: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.0006205809186212718
    2. 'ri' → logprob: -8.50062084197998
    3. 'ar' → logprob: -8.75062084197998
    4. 'り' → logprob: -9.12562084197998
    5. '   ' → logprob: -10.37562084197998
    6. 'r' → logprob: -11.25062084197998
    7. 'wari' → logprob: -11.25062084197998
    8. 'a' → logprob: -11.75062084197998
    9. 'ARI' → logprob: -11.75062084197998
    10. 'yari' → logprob: -11.87562084197998

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008523935684934258
    2. ')//' → logprob: -7.625852584838867
    3. ' )' → logprob: -8.000852584838867
    4. '   ' → logprob: -11.000852584838867
    5. ' ' → logprob: -12.125852584838867
    6. '）' → logprob: -13.250852584838867
    7. ')
' → logprob: -13.750852584838867
    8. '    ' → logprob: -14.250852584838867
    9. '")' → logprob: -14.500852584838867
    10. '')' → logprob: -14.500852584838867

Token 50: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.21560688316822052
    2. '//' → logprob: -1.965606927871704
    3. ')' → logprob: -3.590606927871704
    4. '   ' → logprob: -3.965606927871704
    5. ' ' → logprob: -5.965606689453125
    6. ' /' → logprob: -6.840606689453125
    7. '    ' → logprob: -7.215606689453125
    8. '/' → logprob: -7.340606689453125
    9. '  ' → logprob: -7.590606689453125
    10. '
' → logprob: -7.965606689453125

Token 51: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012710662558674812
    2. '(-' → logprob: -7.0012712478637695
    3. '2' → logprob: -8.25127124786377
    4. ' -' → logprob: -9.25127124786377
    5. '[-' → logprob: -14.12627124786377
    6. ' (-' → logprob: -14.50127124786377
    7. '   ' → logprob: -14.87627124786377
    8. ' ' → logprob: -15.25127124786377
    9. '  ' → logprob: -15.37627124786377
    10. '```' → logprob: -15.87627124786377

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -14.875003814697266
    4. '   ' → logprob: -15.625003814697266
    5. '<|end|>' → logprob: -16.125003814697266
    6. '```' → logprob: -16.500003814697266
    7. '２' → logprob: -17.000003814697266
    8. '۲' → logprob: -17.625003814697266
    9. '  ' → logprob: -17.750003814697266
    10. '
' → logprob: -17.750003814697266

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003612662898376584
    2. ')
' → logprob: -5.628612518310547
    3. '   ' → logprob: -11.753612518310547
    4. ')
' → logprob: -12.878612518310547
    5. ' )' → logprob: -14.003612518310547
    6. '))' → logprob: -14.878612518310547
    7. ')

' → logprob: -15.128612518310547
    8. ')n' → logprob: -15.128612518310547
    9. ')`' → logprob: -15.253612518310547
    10. '),' → logprob: -16.503612518310547

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022307325154542923
    2. '
' → logprob: -4.022307395935059
    3. '    
' → logprob: -6.272307395935059
    4. 'ans' → logprob: -7.147307395935059
    5. 'n' → logprob: -7.522307395935059
    6. '\n' → logprob: -7.522307395935059
    7. '```' → logprob: -8.897307395935059
    8. ' ans' → logprob: -9.147307395935059
    9. ' 
' → logprob: -10.647307395935059
    10. '	ans' → logprob: -10.897307395935059

Token 55: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7592593431472778
    2. 'ans' → logprob: -0.8842593431472778
    3. ' ans' → logprob: -2.1342592239379883
    4. 'n' (adapté à ' n') → logprob: -7.884259223937988
    5. '
' → logprob: -9.509259223937988
    6. ' n' → logprob: -9.634259223937988
    7. '	ans' → logprob: -9.884259223937988
    8. '(ans' → logprob: -10.634259223937988
    9. '    
' → logprob: -11.259259223937988
    10. '```' → logprob: -11.759259223937988

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. '＝' → logprob: -16.001930236816406
    4. ' -=' → logprob: -17.501930236816406
    5. 's' → logprob: -17.626930236816406
    6. '=}' → logprob: -17.751930236816406
    7. ' ' → logprob: -18.001930236816406
    8. '=end' → logprob: -18.251930236816406
    9. '=s' → logprob: -18.751930236816406
    10. '-=' → logprob: -18.876930236816406

Token 57: ' sh' (ID: 641)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.0013266648165881634
    2. ' sh' → logprob: -6.626326560974121
    3. '	sh' → logprob: -14.626326560974121
    4. '(sh' → logprob: -15.376326560974121
    5. 's' → logprob: -18.376327514648438
    6. 'sho' → logprob: -18.626327514648438
    7. ' ' → logprob: -18.751327514648438
    8. '_sh' → logprob: -19.001327514648438
    9. '```' → logprob: -19.001327514648438
    10. 'shu' → logprob: -19.376327514648438

Token 58: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.002261355984956026
    2. 'o' → logprob: -6.752261161804199
    3. 'u' → logprob: -6.877261161804199
    4. 'う' → logprob: -11.2522611618042
    5. 'oui' → logprob: -11.8772611618042
    6. '```' → logprob: -12.3772611618042
    7. 'i' → logprob: -12.5022611618042
    8. 'oi' → logprob: -12.8772611618042
    9. 'n' → logprob: -13.0022611618042
    10. 'you' → logprob: -13.3772611618042

Token 59: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005975929088890553
    2. ' ans' → logprob: -8.250597953796387
    3. 'ans' → logprob: -9.000597953796387
    4. '    
' → logprob: -9.375597953796387
    5. '	ans' → logprob: -10.375597953796387
    6. '```' → logprob: -10.750597953796387
    7. '
' → logprob: -11.125597953796387
    8. '(ans' → logprob: -11.250597953796387
    9. ')' → logprob: -11.375597953796387
    10. '[' → logprob: -11.500597953796387

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013808291405439377
    2. '```' → logprob: -7.376380920410156
    3. ' ans' → logprob: -8.001380920410156
    4. '    
' → logprob: -8.626380920410156
    5. '	ans' → logprob: -9.751380920410156
    6. 'ans' → logprob: -10.376380920410156
    7. '   ' → logprob: -10.376380920410156
    8. '``' → logprob: -10.626380920410156
    9. '  ' → logprob: -10.876380920410156
    10. '[' → logprob: -11.001380920410156

Token 61: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.029128100723028183
    2. ' ans' → logprob: -3.779128074645996
    3. '   ' → logprob: -5.154128074645996
    4. '	ans' → logprob: -9.654128074645996
    5. '(ans' → logprob: -10.904128074645996
    6. '```' → logprob: -12.654128074645996
    7. '_ans' → logprob: -13.529128074645996
    8. ' ' → logprob: -14.779128074645996
    9. 'am' → logprob: -14.779128074645996
    10. 'answer' → logprob: -15.154128074645996

Token 62: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006737984716892242
    2. '.' → logprob: -5.006738185882568
    3. '.app' → logprob: -11.38173770904541
    4. '.ap' → logprob: -11.75673770904541
    5. 'append' → logprob: -13.25673770904541
    6. '.Append' → logprob: -14.50673770904541
    7. '.extend' → logprob: -14.75673770904541
    8. ' .' → logprob: -15.00673770904541
    9. '_append' → logprob: -15.63173770904541
    10. '.add' → logprob: -16.381738662719727

Token 63: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.4771438539028168
    2. '(am' → logprob: -0.9771438837051392
    3. '(' → logprob: -6.10214376449585
    4. '('' → logprob: -7.22714376449585
    5. 'str' → logprob: -9.977144241333008
    6. 'am' → logprob: -10.852144241333008
    7. '(chr' → logprob: -11.477144241333008
    8. '((' → logprob: -11.977144241333008
    9. '(abs' → logprob: -13.352144241333008
    10. '(a' → logprob: -13.477144241333008

Token 64: '(am' (ID: 158066)
  Prédit: '(am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(am' → logprob: -0.00016098834748845547
    2. '(' → logprob: -8.750161170959473
    3. 'am' → logprob: -14.125161170959473
    4. ' (' → logprob: -14.625161170959473
    5. ')' → logprob: -14.750161170959473
    6. ')(' → logprob: -15.000161170959473
    7. '(abs' → logprob: -15.500161170959473
    8. '(an' → logprob: -16.125160217285156
    9. '(a' → logprob: -16.375160217285156
    10. '(im' → logprob: -17.375160217285156

Token 65: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.00015633940347470343
    2. 'arri' → logprob: -10.25015640258789
    3. 'a' → logprob: -10.50015640258789
    4. 'り' → logprob: -11.25015640258789
    5. '   ' → logprob: -11.62515640258789
    6. ')' → logprob: -11.87515640258789
    7. '1' → logprob: -12.12515640258789
    8. 'ri' → logprob: -12.12515640258789
    9. 'n' → logprob: -12.25015640258789
    10. 'b' → logprob: -12.37515640258789

Token 66: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04859191179275513
    2. '))' → logprob: -3.0485918521881104
    3. ')))' → logprob: -12.548591613769531
    4. ')
' → logprob: -14.548591613769531
    5. '))
' → logprob: -15.798591613769531
    6. ' )' → logprob: -16.04859161376953
    7. ')`' → logprob: -16.54859161376953
    8. '])' → logprob: -17.04859161376953
    9. '）' → logprob: -17.92359161376953
    10. ' ))' → logprob: -18.04859161376953

Token 67: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019483357667922974
    2. 'ans' → logprob: -4.01948356628418
    3. '```' → logprob: -8.14448356628418
    4. '(ans' → logprob: -8.26948356628418
    5. 'for' → logprob: -8.51948356628418
    6. '''.' → logprob: -9.14448356628418
    7. '.' → logprob: -9.26948356628418
    8. '[::-' → logprob: -9.51948356628418
    9. ')' → logprob: -10.14448356628418
    10. '``' → logprob: -10.64448356628418

Token 68: ' =' (ID: 314)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.36053770780563354
    2. '.reverse' → logprob: -1.3605377674102783
    3. '.' → logprob: -3.1105377674102783
    4. '[:]' → logprob: -7.485537528991699
    5. '.join' → logprob: -7.610537528991699
    6. '[' → logprob: -8.6105375289917
    7. 'reverse' → logprob: -9.7355375289917
    8. '.
' → logprob: -9.8605375289917
    9. '_reverse' → logprob: -9.8605375289917
    10. '[
' → logprob: -9.9855375289917

Token 69: ' [' (ID: 723)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11460816115140915
    2. '''.' → logprob: -2.2396080493927
    3. ' ''.' → logprob: -7.364608287811279
    4. '"' → logprob: -7.489608287811279
    5. ' ans' → logprob: -7.864608287811279
    6. '(ans' → logprob: -9.739607810974121
    7. ''' → logprob: -10.114607810974121
    8. '	ans' → logprob: -10.114607810974121
    9. '[::-' → logprob: -10.739607810974121
    10. '''' → logprob: -10.864607810974121

Token 70: 'ans' (ID: 616)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8182471394538879
    2. 'ans' → logprob: -1.4432470798492432
    3. 'str' → logprob: -2.443247079849243
    4. 's' → logprob: -3.068247079849243
    5. 'i' → logprob: -3.193247079849243
    6. 're' → logprob: -3.318247079849243
    7. '::-' → logprob: -3.568247079849243
    8. ''' → logprob: -3.818247079849243
    9. ']' → logprob: -4.568247318267822
    10. 'a' → logprob: -5.068247318267822

Token 71: '[-' (ID: 17503)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.046883050352334976
    2. '[-' → logprob: -3.2968831062316895
    3. '::-' → logprob: -5.7968831062316895
    4. '[' → logprob: -6.1718831062316895
    5. '-' → logprob: -6.4218831062316895
    6. '.reverse' → logprob: -7.6718831062316895
    7. ')' → logprob: -8.421882629394531
    8. '[len' → logprob: -8.796882629394531
    9. '   ' → logprob: -8.796882629394531
    10. ')][' → logprob: -9.046882629394531

Token 72: 'i' (ID: 72)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '2' → logprob: -11.625012397766113
    3. ' ' → logprob: -13.250012397766113
    4. '１' → logprob: -15.375012397766113
    5. '   ' → logprob: -15.562512397766113
    6. '  ' → logprob: -15.750012397766113
    7. '3' → logprob: -16.062511444091797
    8. '0' → logprob: -16.250011444091797
    9. '

' → logprob: -16.812511444091797
    10. '10' → logprob: -16.812511444091797

Token 73: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07633190602064133
    2. '1' → logprob: -3.576331853866577
    3. '])' → logprob: -3.826331853866577
    4. 'nd' → logprob: -4.076332092285156
    5. '-' → logprob: -5.451332092285156
    6. 'nt' → logprob: -7.576332092285156
    7. ')' → logprob: -7.701332092285156
    8. 'for' → logprob: -8.451332092285156
    9. 'n' → logprob: -8.701332092285156
    10. 'x' → logprob: -8.826332092285156

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.249780638725497e-05
    2. ' ' → logprob: -10.375032424926758
    3. '2' → logprob: -14.500032424926758
    4. '   ' → logprob: -14.625032424926758
    5. '  ' → logprob: -16.000032424926758
    6. '])' → logprob: -16.375032424926758
    7. '-' → logprob: -17.125032424926758
    8. ']' → logprob: -17.250032424926758
    9. '１' → logprob: -17.375032424926758
    10. '```' → logprob: -18.187532424926758

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. ' ' → logprob: -10.875020980834961
    3. '2' → logprob: -14.750020980834961
    4. '])' → logprob: -14.875020980834961
    5. ']' → logprob: -15.000020980834961
    6. '   ' → logprob: -15.125020980834961
    7. '-' → logprob: -15.625020980834961
    8. '  ' → logprob: -15.937520980834961
    9. '```' → logprob: -17.00002098083496
    10. '１' → logprob: -17.18752098083496

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009287334396503866
    2. ')]' → logprob: -7.37592887878418
    3. ')' → logprob: -8.62592887878418
    4. '])' → logprob: -9.50092887878418
    5. ' ]' → logprob: -10.75092887878418
    6. 'for' → logprob: -11.50092887878418
    7. ' for' → logprob: -11.75092887878418
    8. ']]' → logprob: -12.00092887878418
    9. ' ' → logprob: -13.87592887878418
    10. ']
' → logprob: -14.75092887878418

Token 77: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21718524396419525
    2. 'for' → logprob: -1.8421852588653564
    3. ']' → logprob: -3.3421852588653564
    4. ')' → logprob: -7.092185020446777
    5. ' ' → logprob: -7.842185020446777
    6. ' i' → logprob: -9.717185020446777
    7. ' ]' → logprob: -10.092185020446777
    8. '	for' → logprob: -11.342185020446777
    9. ')]' → logprob: -11.717185020446777
    10. '])' → logprob: -12.092185020446777

Token 78: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.059159088879823685
    2. 'i' → logprob: -3.05915904045105
    3. ' range' → logprob: -4.559159278869629
    4. ' i' → logprob: -10.059159278869629
    5. ' ' → logprob: -13.809159278869629
    6. '(range' → logprob: -14.059159278869629
    7. '	range' → logprob: -15.309159278869629
    8. '(i' → logprob: -15.559159278869629
    9. 'r' → logprob: -17.309158325195312
    10. '[i' → logprob: -17.684158325195312

Token 79: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10024570673704147
    2. 'range' → logprob: -2.350245714187622
    3. '(range' → logprob: -10.225245475769043
    4. ' ' → logprob: -13.725245475769043
    5. '	range' → logprob: -13.725245475769043
    6. ' xrange' → logprob: -14.350245475769043
    7. '  ' → logprob: -18.35024642944336
    8. '_range' → logprob: -18.47524642944336
    9. ' ran' → logprob: -18.72524642944336
    10. '.range' → logprob: -19.35024642944336

Token 80: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033558503491804004
    2. ' range' → logprob: -8.000335693359375
    3. ' ' → logprob: -16.375335693359375
    4. '(range' → logprob: -18.000335693359375
    5. '	range' → logprob: -18.500335693359375
    6. '   ' → logprob: -18.625335693359375
    7. '  ' → logprob: -19.375335693359375
    8. 'ran' → logprob: -20.750335693359375
    9. '
' → logprob: -21.750335693359375
    10. 'list' → logprob: -21.875335693359375

Token 81: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -7.696077227592468e-05
    2. 'len' → logprob: -9.500077247619629
    3. '(' → logprob: -13.750077247619629
    4. ' len' → logprob: -13.875077247619629
    5. ' (' → logprob: -17.375076293945312
    6. '	len' → logprob: -17.500076293945312
    7. ',len' → logprob: -17.500076293945312
    8. '<len' → logprob: -18.500076293945312
    9. '[len' → logprob: -18.875076293945312
    10. '=len' → logprob: -19.250076293945312

Token 82: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.0921942703134846e-05
    2. 'ans' → logprob: -12.00001049041748
    3. '(' → logprob: -12.37501049041748
    4. '(
' → logprob: -16.375011444091797
    5. ' ans' → logprob: -16.500011444091797
    6. '	ans' → logprob: -16.625011444091797
    7. '(arr' → logprob: -16.875011444091797
    8. '(answer' → logprob: -17.750011444091797
    9. '(a' → logprob: -17.875011444091797
    10. '(an' → logprob: -18.125011444091797

Token 83: '))]
' (ID: 53695)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007641770876944065
    2. ')]' → logprob: -4.882641792297363
    3. ')' → logprob: -11.132641792297363
    4. ' ))' → logprob: -11.632641792297363
    5. ')])' → logprob: -12.507641792297363
    6. '))]
' → logprob: -12.882641792297363
    7. '])]' → logprob: -13.007641792297363
    8. ')))' → logprob: -13.257641792297363
    9. '-' → logprob: -14.632641792297363
    10. ' ' → logprob: -14.757641792297363

Token 84: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.85104202805087e-05
    2. ' print' → logprob: -10.375078201293945
    3. '
' → logprob: -10.750078201293945
    4. 'for' → logprob: -11.375078201293945
    5. ')
' → logprob: -12.375078201293945
    6. '```' → logprob: -12.750078201293945
    7. ')' → logprob: -13.250078201293945
    8. ']' → logprob: -13.750078201293945
    9. 'pr' → logprob: -14.375078201293945
    10. '0' → logprob: -14.625078201293945

Token 85: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.34699350595474243
    2. '(' → logprob: -1.7219934463500977
    3. '("' → logprob: -2.2219934463500977
    4. '("("' → logprob: -5.221993446350098
    5. '"' → logprob: -7.971993446350098
    6. '(ans' → logprob: -8.971993446350098
    7. '("")' → logprob: -10.221993446350098
    8. '(('' → logprob: -10.471993446350098
    9. '(int' → logprob: -10.846993446350098
    10. ' (' → logprob: -10.846993446350098

Token 86: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0020824549719691277
    2. ''.' → logprob: -6.877082347869873
    3. ''' → logprob: -8.002082824707031
    4. ')' → logprob: -8.627082824707031
    5. ' ''.' → logprob: -8.752082824707031
    6. '"' → logprob: -8.877082824707031
    7. '.join' → logprob: -9.627082824707031
    8. '''' → logprob: -9.752082824707031
    9. 'join' → logprob: -10.002082824707031
    10. '('' → logprob: -10.752082824707031

Token 87: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -9.088346359931165e-07
    2. 'j' → logprob: -14.375000953674316
    3. 'jo' → logprob: -15.750000953674316
    4. '(join' → logprob: -17.5
    5. '.' → logprob: -17.75
    6. ' join' → logprob: -17.875
    7. 'strip' → logprob: -18.0
    8. '/j' → logprob: -18.375
    9. '.join' → logprob: -18.5
    10. '``' → logprob: -19.375

Token 88: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.512236498361744e-07
    2. 'ans' → logprob: -15.125000953674316
    3. '(' → logprob: -15.875000953674316
    4. ')' → logprob: -18.25
    5. '(answer' → logprob: -18.25
    6. ' (' → logprob: -18.875
    7. '	ans' → logprob: -20.25
    8. '(args' → logprob: -20.75
    9. ' ans' → logprob: -20.875
    10. '_ans' → logprob: -21.125

Token 89: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02324652671813965
    2. ')' → logprob: -3.7732465267181396
    3. ')))' → logprob: -14.273246765136719
    4. '))
' → logprob: -15.023246765136719
    5. ')
' → logprob: -17.02324676513672
    6. '])' → logprob: -17.64824676513672
    7. ''))' → logprob: -17.77324676513672
    8. ' ))' → logprob: -17.89824676513672
    9. '),' → logprob: -18.52324676513672
    10. ')}' → logprob: -18.89824676513672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 87
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 68
Précision stricte (1ère position): 43.68%
Précision adaptée (1ère position): 44.83%
Précision (top 10): 78.16%
================================================================================
