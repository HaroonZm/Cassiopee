================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def _m(i=input):
    a,b=(*i().split(),)
    z=[b,a]
    print("".join(z))
_m()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' _' (ID: 1175)
  → Token d'amorce (pas de prédiction)

Token 2: 'm' (ID: 76)
  → Token d'amorce (pas de prédiction)

Token 3: '(i' (ID: 3649)
  Prédit: 'ethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ethod' → logprob: -0.12333012372255325
    2. '_' → logprob: -3.3733301162719727
    3. '_m' → logprob: -3.9983301162719727
    4. 'e' → logprob: -4.373330116271973
    5. '__' → logprob: -4.873330116271973
    6. 'odule' → logprob: -5.123330116271973
    7. 'atch' → logprob: -5.123330116271973
    8. '```' → logprob: -5.248330116271973
    9. 'odel' → logprob: -5.498330116271973
    10. 'eth' → logprob: -5.873330116271973

Token 4: '=input' (ID: 87911)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01795477792620659
    2. ',' → logprob: -5.1429548263549805
    3. 'n' → logprob: -5.2679548263549805
    4. ')' → logprob: -5.6429548263549805
    5. ')n' → logprob: -6.2679548263549805
    6. '_' → logprob: -7.8929548263549805
    7. 'f' → logprob: -8.26795482635498
    8. ' ):' → logprob: -9.14295482635498
    9. ',n' → logprob: -9.26795482635498
    10. '):
' → logprob: -9.51795482635498

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21599453687667847
    2. ')' → logprob: -1.8409945964813232
    3. ',' → logprob: -3.7159945964813232
    4. '):
' → logprob: -5.215994358062744
    5. '"):' → logprob: -6.590994358062744
    6. '_' → logprob: -7.090994358062744
    7. ')):' → logprob: -7.215994358062744
    8. '(' → logprob: -7.465994358062744
    9. ''):' → logprob: -7.465994358062744
    10. ' ):' → logprob: -8.340994834899902

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15144824981689453
    2. '.' → logprob: -3.0264482498168945
    3. ' :' → logprob: -3.2764482498168945
    4. '():' → logprob: -3.7764482498168945
    5. '(' → logprob: -4.2764482498168945
    6. '):' → logprob: -5.4014482498168945
    7. '_' → logprob: -5.5264482498168945
    8. ')' → logprob: -6.2764482498168945
    9. ' (' → logprob: -6.4014482498168945
    10. ',' → logprob: -7.0264482498168945

Token 7: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2536253035068512
    2. '(' → logprob: -3.0036253929138184
    3. '_' → logprob: -3.0036253929138184
    4. ' (' → logprob: -3.6286253929138184
    5. ')' → logprob: -3.7536253929138184
    6. '   ' → logprob: -4.253625392913818
    7. '.' → logprob: -4.253625392913818
    8. ' )' → logprob: -5.128625392913818
    9. '    ' → logprob: -5.503625392913818
    10. ''' → logprob: -5.628625392913818

Token 8: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7431656718254089
    2. 'r' → logprob: -1.7431657314300537
    3. 's' → logprob: -2.4931657314300537
    4. '[' → logprob: -2.6181657314300537
    5. '.' → logprob: -2.9931657314300537
    6. ' =' → logprob: -3.1181657314300537
    7. ',' → logprob: -3.7431657314300537
    8. ' ' → logprob: -3.8681657314300537
    9. '(' → logprob: -4.243165493011475
    10. 'rg' → logprob: -4.493165493011475

Token 9: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5953536033630371
    2. ' =' → logprob: -0.8453536033630371
    3. ',' → logprob: -3.970353603363037
    4. ' ,' → logprob: -9.095354080200195
    5. ')' → logprob: -9.470354080200195
    6. '[' → logprob: -9.845354080200195
    7. ',c' → logprob: -10.095354080200195
    8. '<|end|>' → logprob: -11.095354080200195
    9. ' ' → logprob: -11.345354080200195
    10. '  ' → logprob: -12.345354080200195

Token 10: '(*' (ID: 9000)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20837347209453583
    2. 'i' → logprob: -2.458373546600342
    3. ' ' → logprob: -2.708373546600342
    4. '1' → logprob: -3.958373546600342
    5. ' i' → logprob: -4.458373546600342
    6. 'b' → logprob: -5.833373546600342
    7. 'm' → logprob: -7.583373546600342
    8. ' b' → logprob: -7.958373546600342
    9. '(' → logprob: -8.083373069763184
    10. 'a' → logprob: -8.208373069763184

Token 11: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005118715576827526
    2. ' i' → logprob: -5.3801188468933105
    3. 'next' → logprob: -9.130118370056152
    4. '(i' → logprob: -9.380118370056152
    5. ' ' → logprob: -9.505118370056152
    6. ')' → logprob: -10.130118370056152
    7. ' next' → logprob: -10.380118370056152
    8. 'm' → logprob: -10.630118370056152
    9. '  ' → logprob: -11.380118370056152
    10. '   ' → logprob: -11.505118370056152

Token 12: '().' (ID: 1454)
  Prédit: ',)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',)' → logprob: -0.6088384389877319
    2. ',' → logprob: -1.233838438987732
    3. ')' → logprob: -2.3588385581970215
    4. '(),' → logprob: -3.3588385581970215
    5. ',),' → logprob: -4.1088385581970215
    6. '.split' → logprob: -5.3588385581970215
    7. '())' → logprob: -5.4838385581970215
    8. '),' → logprob: -5.8588385581970215
    9. '[:' → logprob: -6.4838385581970215
    10. ',i' → logprob: -7.2338385581970215

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.007515407633036375
    2. 'strip' → logprob: -5.0075154304504395
    3. '__' → logprob: -7.3825154304504395
    4. 'replace' → logprob: -9.382514953613281
    5. 'partition' → logprob: -10.382514953613281
    6. '.split' → logprob: -11.007514953613281
    7. ' split' → logprob: -11.632514953613281
    8. 'rstrip' → logprob: -11.757514953613281
    9. 'spl' → logprob: -12.132514953613281
    10. 'sp' → logprob: -12.382514953613281

Token 14: '(),' (ID: 2547)
  Prédit: '(',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(','' → logprob: -0.3656516969203949
    2. '())' → logprob: -1.8656517267227173
    3. '(),' → logprob: -2.1156516075134277
    4. '(',' → logprob: -4.365651607513428
    5. '()' → logprob: -4.490651607513428
    6. '(","' → logprob: -6.490651607513428
    7. '('' → logprob: -6.490651607513428
    8. '(' → logprob: -6.740651607513428
    9. '(',',' → logprob: -6.865651607513428
    10. '(",' → logprob: -6.990651607513428

Token 15: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39966124296188354
    2. '0' → logprob: -2.1496613025665283
    3. '*' → logprob: -2.5246613025665283
    4. '1' → logprob: -3.2746613025665283
    5. '*c' → logprob: -4.024661064147949
    6. 'int' → logprob: -4.399661064147949
    7. '2' → logprob: -4.524661064147949
    8. '*a' → logprob: -4.774661064147949
    9. 'c' → logprob: -5.024661064147949
    10. '*i' → logprob: -5.024661064147949

Token 16: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5082228183746338
    2. ' ' → logprob: -2.133222818374634
    3. ',' → logprob: -2.383222818374634
    4. '\n' → logprob: -2.758222818374634
    5. ':' → logprob: -3.133222818374634
    6. '=' → logprob: -3.883222818374634
    7. '   ' → logprob: -4.383222579956055
    8. '<|end|>' → logprob: -4.758222579956055
    9. '
' → logprob: -5.633222579956055
    10. '  ' → logprob: -5.633222579956055

Token 17: ' z' (ID: 579)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0765568017959595
    2. '=' → logprob: -1.4515568017959595
    3. ')' → logprob: -2.20155668258667
    4. '+' → logprob: -2.32655668258667
    5. '\n' → logprob: -2.57655668258667
    6. ',' → logprob: -3.45155668258667
    7. ':' → logprob: -4.07655668258667
    8. 'c' → logprob: -4.20155668258667
    9. ' =' → logprob: -4.32655668258667
    10. '*' → logprob: -4.45155668258667

Token 18: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07775852084159851
    2. ' =' → logprob: -3.202758550643921
    3. ',' → logprob: -3.952758550643921
    4. 'x' → logprob: -6.577758312225342
    5. '_' → logprob: -6.827758312225342
    6. ',a' → logprob: -6.827758312225342
    7. 'a' → logprob: -6.827758312225342
    8. '[' → logprob: -6.827758312225342
    9. '=a' → logprob: -6.827758312225342
    10. '.' → logprob: -7.077758312225342

Token 19: 'b' (ID: 65)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3695610463619232
    2. 'a' → logprob: -1.9945610761642456
    3. '0' → logprob: -2.369560956954956
    4. '1' → logprob: -4.494561195373535
    5. '(int' → logprob: -4.619561195373535
    6. 'ord' → logprob: -4.744561195373535
    7. 'len' → logprob: -4.744561195373535
    8. 'b' → logprob: -4.869561195373535
    9. '*' → logprob: -5.119561195373535
    10. 'i' → logprob: -5.494561195373535

Token 20: ',a' (ID: 26776)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4502178728580475
    2. '[' → logprob: -1.950217843055725
    3. ',' → logprob: -2.7002179622650146
    4. 'for' → logprob: -3.4502179622650146
    5. '.count' → logprob: -3.9502179622650146
    6. ',a' → logprob: -4.0752177238464355
    7. '+' → logprob: -4.3252177238464355
    8. ' for' → logprob: -4.8252177238464355
    9. ')' → logprob: -5.2002177238464355
    10. '==' → logprob: -5.3252177238464355

Token 21: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003977800370194018
    2. ')]' → logprob: -8.250397682189941
    3. ' ]' → logprob: -9.750397682189941
    4. ')' → logprob: -10.000397682189941
    5. '])' → logprob: -11.125397682189941
    6. ']
' → logprob: -11.750397682189941
    7. ',' → logprob: -12.625397682189941
    8. '],' → logprob: -13.250397682189941
    9. '`]' → logprob: -14.250397682189941
    10. '   ' → logprob: -14.375397682189941

Token 22: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4658021032810211
    2. '<|end|>' → logprob: -1.9658020734786987
    3. '[' → logprob: -2.4658021926879883
    4. '+' → logprob: -2.5908021926879883
    5. '.' → logprob: -4.090802192687988
    6. '=' → logprob: -4.340802192687988
    7. ' ' → logprob: -4.590802192687988
    8. ']' → logprob: -4.965802192687988
    9. ',' → logprob: -4.965802192687988
    10. '(' → logprob: -5.715802192687988

Token 23: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.566548228263855
    2. '(*' → logprob: -1.066548228263855
    3. '(z' → logprob: -2.4415483474731445
    4. '()' → logprob: -7.8165483474731445
    5. '('' → logprob: -8.316548347473145
    6. '(a' → logprob: -8.316548347473145
    7. '(*)' → logprob: -9.316548347473145
    8. '(*(' → logprob: -9.941548347473145
    9. '(len' → logprob: -10.066548347473145
    10. '((' → logprob: -10.316548347473145

Token 25: '".' (ID: 4050)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2398097515106201
    2. 'z' → logprob: -1.7398097515106201
    3. '".' → logprob: -1.9898097515106201
    4. 'a' → logprob: -2.73980975151062
    5. '")' → logprob: -2.86480975151062
    6. '{' → logprob: -3.23980975151062
    7. '[' → logprob: -3.61480975151062
    8. '*b' → logprob: -3.73980975151062
    9. '[b' → logprob: -3.73980975151062
    10. '"' → logprob: -3.86480975151062

Token 26: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0001137947037932463
    2. ' join' → logprob: -10.000113487243652
    3. 'format' → logprob: -10.625113487243652
    4. 'startswith' → logprob: -11.125113487243652
    5. 'strip' → logprob: -11.750113487243652
    6. 'replace' → logprob: -11.875113487243652
    7. 'concat' → logprob: -12.500113487243652
    8. 'j' → logprob: -13.375113487243652
    9. 'extend' → logprob: -13.375113487243652
    10. 'expand' → logprob: -13.750113487243652

Token 27: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.00012475410767365247
    2. 'z' → logprob: -9.62512493133545
    3. '(' → logprob: -9.87512493133545
    4. ' z' → logprob: -12.87512493133545
    5. '[z' → logprob: -13.50012493133545
    6. ')' → logprob: -13.75012493133545
    7. '([' → logprob: -14.62512493133545
    8. '	z' → logprob: -15.00012493133545
    9. ' (' → logprob: -15.12512493133545
    10. '(b' → logprob: -15.87512493133545

Token 28: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.012558743357658386
    2. ')' → logprob: -4.387558937072754
    3. ')))' → logprob: -10.637558937072754
    4. '])' → logprob: -11.387558937072754
    5. '))
' → logprob: -12.012558937072754
    6. '[' → logprob: -13.512558937072754
    7. ' ))' → logprob: -13.512558937072754
    8. '   ' → logprob: -13.887558937072754
    9. ' ' → logprob: -14.262558937072754
    10. ')]' → logprob: -14.387558937072754

Token 29: '_m' (ID: 1285)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02766500599682331
    2. '(' → logprob: -3.65266489982605
    3. '[' → logprob: -7.777665138244629
    4. '<|end|>' → logprob: -8.402665138244629
    5. '#' → logprob: -8.652665138244629
    6. ' ' → logprob: -9.277665138244629
    7. '()' → logprob: -9.402665138244629
    8. '```' → logprob: -9.777665138244629
    9. '(
' → logprob: -10.152665138244629
    10. '\' → logprob: -10.277665138244629

Token 30: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02121751569211483
    2. '(' → logprob: -3.8962175846099854
    3. '())' → logprob: -7.396217346191406
    4. ')' → logprob: -10.771217346191406
    5. '()
' → logprob: -12.021217346191406
    6. '()

' → logprob: -12.521217346191406
    7. '(
' → logprob: -12.646217346191406
    8. '();' → logprob: -12.896217346191406
    9. '()]' → logprob: -13.146217346191406
    10. '()?>' → logprob: -13.271217346191406


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 28
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 14
Précision stricte (1ère position): 21.43%
Précision adaptée (1ère position): 21.43%
Précision (top 10): 50.00%
================================================================================
