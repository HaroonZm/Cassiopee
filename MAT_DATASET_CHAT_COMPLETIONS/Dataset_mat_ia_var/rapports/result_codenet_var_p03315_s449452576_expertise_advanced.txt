================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter
S = input()
c = Counter(S)
print(c['+'] - c['-'])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.8961017202818766e-05
    2. '\(' → logprob: -10.375059127807617
    3. ' (' → logprob: -11.500059127807617
    4. '()' → logprob: -12.625059127807617
    5. '\' → logprob: -12.875059127807617
    6. '(
' → logprob: -12.875059127807617
    7. 'a' → logprob: -12.875059127807617
    8. '```' → logprob: -14.000059127807617
    9. '\n' → logprob: -14.125059127807617
    10. '.' → logprob: -14.250059127807617

Token 5: 'S' (ID: 50)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003792350646108389
    2. '```' → logprob: -7.2537922859191895
    3. 'a' → logprob: -7.5037922859191895
    4. '\n' → logprob: -7.7537922859191895
    5. '(
' → logprob: -7.8787922859191895
    6. '.' → logprob: -8.003792762756348
    7. '\(' → logprob: -8.128792762756348
    8. 'import' → logprob: -8.378792762756348
    9. '\' → logprob: -8.753792762756348
    10. 'newline' → logprob: -8.878792762756348

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7653512358665466
    2. '(' → logprob: -1.2653512954711914
    3. ''' → logprob: -2.8903512954711914
    4. '=' → logprob: -3.1403512954711914
    5. 'e' → logprob: -3.1403512954711914
    6. '.' → logprob: -3.3903512954711914
    7. 'et' → logprob: -4.390351295471191
    8. 'tring' → logprob: -4.765351295471191
    9. 't' → logprob: -5.015351295471191
    10. '"' → logprob: -5.140351295471191

Token 7: ' input' (ID: 3422)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9615924954414368
    2. '"' → logprob: -1.086592435836792
    3. ' "' → logprob: -1.961592435836792
    4. ' '' → logprob: -2.211592435836792
    5. ' Counter' → logprob: -4.211592674255371
    6. ' ' → logprob: -5.086592674255371
    7. 'Counter' → logprob: -6.461592674255371
    8. ''S' → logprob: -6.461592674255371
    9. 'input' → logprob: -6.461592674255371
    10. ''s' → logprob: -6.836592674255371

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007470945129171014
    2. '('' → logprob: -8.375746726989746
    3. '()' → logprob: -8.500746726989746
    4. ''' → logprob: -9.250746726989746
    5. '("("' → logprob: -9.750746726989746
    6. '`' → logprob: -10.000746726989746
    7. ')' → logprob: -10.500746726989746
    8. '(
' → logprob: -10.750746726989746
    9. '```' → logprob: -10.875746726989746
    10. '"' → logprob: -11.125746726989746

Token 9: 'c' (ID: 66)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.41919827461242676
    2. 'c' → logprob: -2.0441982746124268
    3. 'count' → logprob: -2.0441982746124268
    4. 'C' → logprob: -3.2941982746124268
    5. 'counts' → logprob: -3.7941982746124268
    6. 'result' → logprob: -4.919198036193848
    7. 'Counter' → logprob: -5.294198036193848
    8. ')' → logprob: -5.669198036193848
    9. '(' → logprob: -5.919198036193848
    10. 'cnt' → logprob: -6.794198036193848

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5517421960830688
    2. ' =' → logprob: -1.6767421960830688
    3. 'ounter' → logprob: -1.9267421960830688
    4. '.' → logprob: -3.0517420768737793
    5. 'ount' → logprob: -3.6767420768737793
    6. 'o' → logprob: -4.301742076873779
    7. '(' → logprob: -6.176742076873779
    8. ' ' → logprob: -6.801742076873779
    9. '[' → logprob: -6.926742076873779
    10. 't' → logprob: -8.551742553710938

Token 11: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.5759587287902832
    2. ' Counter' → logprob: -0.8259587287902832
    3. '.Counter' → logprob: -11.575958251953125
    4. ' counter' → logprob: -12.200958251953125
    5. ' ' → logprob: -12.950958251953125
    6. 'counter' → logprob: -13.575958251953125
    7. '_counter' → logprob: -14.200958251953125
    8. 'C' → logprob: -15.450958251953125
    9. 'Counters' → logprob: -16.575958251953125
    10. ' c' → logprob: -16.950958251953125

Token 12: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.4741729497909546
    2. '(' → logprob: -0.9741729497909546
    3. '(s' → logprob: -9.724172592163086
    4. '()' → logprob: -10.599172592163086
    5. '((' → logprob: -12.974172592163086
    6. '('' → logprob: -13.099172592163086
    7. '(
' → logprob: -13.349172592163086
    8. '(C' → logprob: -13.599172592163086
    9. '("("' → logprob: -14.349172592163086
    10. ' (' → logprob: -14.724172592163086

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.081584716506768e-05
    2. '[' → logprob: -12.125020980834961
    3. '))' → logprob: -12.250020980834961
    4. '(' → logprob: -12.625020980834961
    5. ' )' → logprob: -12.875020980834961
    6. '`)' → logprob: -13.750020980834961
    7. ')`' → logprob: -14.000020980834961
    8. 'S' → logprob: -14.625020980834961
    9. '())' → logprob: -14.750020980834961
    10. '()' → logprob: -14.875020980834961

Token 14: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2687203884124756
    2. 'm' → logprob: -1.6437203884124756
    3. '.' → logprob: -1.7687203884124756
    4. 'print' → logprob: -2.1437203884124756
    5. '(' → logprob: -2.2687203884124756
    6. '[' → logprob: -3.0187203884124756
    7. ')' → logprob: -4.018720626831055
    8. 'p' → logprob: -4.018720626831055
    9. '=' → logprob: -4.893720626831055
    10. 'a' → logprob: -4.893720626831055

Token 15: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.117345684382599e-05
    2. '(c' → logprob: -11.500020980834961
    3. '('' → logprob: -12.000020980834961
    4. '((' → logprob: -13.750020980834961
    5. '("("' → logprob: -14.125020980834961
    6. '()' → logprob: -14.250020980834961
    7. '(S' → logprob: -14.500020980834961
    8. ' (' → logprob: -14.750020980834961
    9. '(C' → logprob: -15.000020980834961
    10. '(
' → logprob: -15.375020980834961

Token 16: '['' (ID: 1181)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029345564544200897
    2. '[' → logprob: -5.877934455871582
    3. '.)' → logprob: -9.877934455871582
    4. '`)' → logprob: -10.252934455871582
    5. '))' → logprob: -11.127934455871582
    6. '.' → logprob: -11.502934455871582
    7. ' )' → logprob: -11.877934455871582
    8. '')' → logprob: -12.877934455871582
    9. ')`' → logprob: -13.127934455871582
    10. ').' → logprob: -13.252934455871582

Token 17: '+' (ID: 10)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.017919180914759636
    2. 'A' → logprob: -4.892919063568115
    3. ')' → logprob: -5.642919063568115
    4. '('' → logprob: -7.017919063568115
    5. 'c' → logprob: -7.017919063568115
    6. 'R' → logprob: -7.267919063568115
    7. ' '' → logprob: -8.017919540405273
    8. 's' → logprob: -8.142919540405273
    9. 'r' → logprob: -8.142919540405273
    10. 'h' → logprob: -8.142919540405273

Token 18: '']' (ID: 1089)
  Prédit: ''])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.11731152981519699
    2. '']' → logprob: -3.367311477661133
    3. '+' → logprob: -3.492311477661133
    4. '1' → logprob: -3.992311477661133
    5. ''+' → logprob: -4.742311477661133
    6. '-' → logprob: -4.867311477661133
    7. ''-' → logprob: -4.867311477661133
    8. ''' → logprob: -5.992311477661133
    9. '])' → logprob: -8.867311477661133
    10. '"])' → logprob: -9.117311477661133

Token 19: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012664210516959429
    2. '])' → logprob: -7.1262664794921875
    3. '))' → logprob: -8.376266479492188
    4. '')' → logprob: -8.751266479492188
    5. '`)' → logprob: -10.626266479492188
    6. '+)' → logprob: -11.001266479492188
    7. ' )' → logprob: -11.626266479492188
    8. '+' → logprob: -11.876266479492188
    9. ''])' → logprob: -12.126266479492188
    10. ']' → logprob: -12.501266479492188

Token 20: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.010465104132890701
    2. '1' → logprob: -4.635465145111084
    3. ' c' → logprob: -7.260465145111084
    4. ' ' → logprob: -12.760464668273926
    5. ')' → logprob: -14.010464668273926
    6. '	c' → logprob: -14.885464668273926
    7. '-' → logprob: -15.447964668273926
    8. ')c' → logprob: -15.697964668273926
    9. '   ' → logprob: -15.760464668273926
    10. 'counter' → logprob: -15.947964668273926

Token 21: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0011845153057947755
    2. '[' → logprob: -7.876184463500977
    3. ''-' → logprob: -7.876184463500977
    4. '['_' → logprob: -8.001184463500977
    5. ''' → logprob: -10.626184463500977
    6. ''+' → logprob: -11.126184463500977
    7. '('-' → logprob: -11.251184463500977
    8. '[['' → logprob: -12.001184463500977
    9. ')' → logprob: -12.501184463500977
    10. '["' → logprob: -12.626184463500977

Token 22: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31332966685295105
    2. ''-' → logprob: -1.3133296966552734
    3. '"-' → logprob: -10.563329696655273
    4. ''' → logprob: -10.813329696655273
    5. '-'' → logprob: -12.438329696655273
    6. ' '-' → logprob: -12.938329696655273
    7. ''])' → logprob: -13.063329696655273
    8. '('-' → logprob: -13.063329696655273
    9. '']' → logprob: -13.313329696655273
    10. '1' → logprob: -13.688329696655273

Token 23: ''])' (ID: 11775)
  Prédit: ''])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.020365526899695396
    2. ')' → logprob: -4.6453657150268555
    3. '1' → logprob: -5.2703657150268555
    4. '']' → logprob: -5.3953657150268555
    5. '])' → logprob: -8.145365715026855
    6. ''' → logprob: -8.520365715026855
    7. '+' → logprob: -8.770365715026855
    8. '0' → logprob: -10.145365715026855
    9. '"])' → logprob: -10.395365715026855
    10. '-' → logprob: -10.520365715026855


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 21
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 13
Précision stricte (1ère position): 23.81%
Précision adaptée (1ère position): 23.81%
Précision (top 10): 61.90%
================================================================================
