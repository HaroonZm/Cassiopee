================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = input().split()
ans = 0
for a in A:
    num = int(a)
    while num % 2 == 0:
        ans = ans + 1
        num = num // 2
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5316423177719116
    2. ')' → logprob: -0.9066423177719116
    3. '()' → logprob: -5.156642436981201
    4. '())' → logprob: -6.656642436981201
    5. '(
' → logprob: -7.656642436981201
    6. '```' → logprob: -8.781641960144043
    7. '))' → logprob: -8.906641960144043
    8. '")' → logprob: -9.406641960144043
    9. '')' → logprob: -9.531641960144043
    10. '(

' → logprob: -9.906641960144043

Token 5: 'A' (ID: 32)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8320107460021973
    2. 'for' → logprob: -1.8320107460021973
    3. 'a' → logprob: -2.0820107460021973
    4. 's' → logprob: -2.2070107460021973
    5. '*' → logprob: -2.5820107460021973
    6. ''' → logprob: -2.8320107460021973
    7. '#' → logprob: -3.2070107460021973
    8. ')' → logprob: -3.2070107460021973
    9. 'i' → logprob: -3.3320107460021973
    10. 'x' → logprob: -3.3320107460021973

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008640571613796055
    2. '\[' → logprob: -8.375864028930664
    3. '[]' → logprob: -8.625864028930664
    4. '.' → logprob: -9.250864028930664
    5. '[A' → logprob: -9.375864028930664
    6. '[i' → logprob: -9.500864028930664
    7. '[:]' → logprob: -10.125864028930664
    8. ')' → logprob: -10.250864028930664
    9. '+' → logprob: -10.750864028930664
    10. '=' → logprob: -11.250864028930664

Token 7: ' input' (ID: 3422)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8719586730003357
    2. ' []' → logprob: -1.3719587326049805
    3. 'list' → logprob: -1.9969587326049805
    4. '[]' → logprob: -2.2469587326049805
    5. ' [' → logprob: -2.7469587326049805
    6. '[' → logprob: -4.6219587326049805
    7. '[int' → logprob: -4.7469587326049805
    8. '[input' → logprob: -5.9969587326049805
    9. '[list' → logprob: -7.2469587326049805
    10. 'input' → logprob: -7.9969587326049805

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031911435071378946
    2. ''' → logprob: -6.253190994262695
    3. '('' → logprob: -7.378190994262695
    4. '()' → logprob: -8.628190994262695
    5. '"' → logprob: -8.878190994262695
    6. '(
' → logprob: -9.503190994262695
    7. ')' → logprob: -9.753190994262695
    8. '[' → logprob: -10.128190994262695
    9. '("("' → logprob: -10.253190994262695
    10. '```' → logprob: -10.378190994262695

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00248849974013865
    2. 'strip' → logprob: -6.002488613128662
    3. 'rstrip' → logprob: -11.752488136291504
    4. ' split' → logprob: -13.002488136291504
    5. 'replace' → logprob: -13.252488136291504
    6. 'spl' → logprob: -14.377488136291504
    7. 'rs' → logprob: -15.627488136291504
    8. 's' → logprob: -15.627488136291504
    9. 'sp' → logprob: -17.37748908996582
    10. '(split' → logprob: -17.62748908996582

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07300695031881332
    2. '()' → logprob: -2.6980068683624268
    3. '('' → logprob: -6.323007106781006
    4. '("("' → logprob: -7.073007106781006
    5. '(
' → logprob: -9.448006629943848
    6. '(

' → logprob: -9.948006629943848
    7. '(`' → logprob: -10.073006629943848
    8. '"' → logprob: -10.198006629943848
    9. '("' → logprob: -10.323006629943848
    10. ' (' → logprob: -10.448006629943848

Token 11: 'ans' (ID: 616)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.36614614725112915
    2. 'for' → logprob: -1.3661460876464844
    3. 'a' → logprob: -3.4911460876464844
    4. 'B' → logprob: -4.991146087646484
    5. 'result' → logprob: -5.366146087646484
    6. 's' → logprob: -5.866146087646484
    7. 'count' → logprob: -6.866146087646484
    8. 'c' → logprob: -6.991146087646484
    9. 'S' → logprob: -6.991146087646484
    10. 'ans' → logprob: -7.491146087646484

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.696783721446991
    2. ' =' → logprob: -1.1967837810516357
    3. '_' → logprob: -1.6967837810516357
    4. '[' → logprob: -4.321783542633057
    5. ' +=' → logprob: -7.571783542633057
    6. '[:]' → logprob: -7.571783542633057
    7. '_=' → logprob: -8.196784019470215
    8. '+=' → logprob: -8.321784019470215
    9. '.' → logprob: -8.321784019470215
    10. '.append' → logprob: -8.446784019470215

Token 13: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21636849641799927
    2. ' ' → logprob: -2.0913684368133545
    3. ''' → logprob: -3.7163684368133545
    4. '"' → logprob: -4.091368675231934
    5. '[]' → logprob: -4.466368675231934
    6. ' []' → logprob: -4.841368675231934
    7. '[' → logprob: -5.216368675231934
    8. 'len' → logprob: -6.966368675231934
    9. ' [' → logprob: -7.341368675231934
    10. '[int' → logprob: -7.716368675231934

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43823865056037903
    2. '[]' → logprob: -1.3132386207580566
    3. '[' → logprob: -3.6882386207580566
    4. '"' → logprob: -4.063238620758057
    5. ''' → logprob: -4.188238620758057
    6. 'set' → logprob: -5.563238620758057
    7. 'A' → logprob: -5.563238620758057
    8. 'len' → logprob: -5.688238620758057
    9. ''A' → logprob: -5.813238620758057
    10. 'sum' → logprob: -6.063238620758057

Token 15: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48077794909477234
    2. ' for' → logprob: -1.8557779788970947
    3. ' ' → logprob: -1.9807779788970947
    4. '<|end|>' → logprob: -3.3557779788970947
    5. ' 
' → logprob: -3.4807779788970947
    6. '
' → logprob: -4.355777740478516
    7. '\n' → logprob: -5.105777740478516
    8. '\' → logprob: -6.605777740478516
    9. '  
' → logprob: -8.355777740478516
    10. '' → logprob: -8.605777740478516

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.8828707804204896e-05
    2. ' for' → logprob: -10.000048637390137
    3. '```' → logprob: -13.000048637390137
    4. '\n' → logprob: -14.500048637390137
    5. '`' → logprob: -15.250048637390137
    6. '\' → logprob: -16.375049591064453
    7. '
' → logprob: -16.625049591064453
    8. 'i' → logprob: -17.125049591064453
    9. '``' → logprob: -17.250049591064453
    10. '' → logprob: -17.375049591064453

Token 17: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14479969441890717
    2. ' i' → logprob: -2.0197997093200684
    3. '  ' → logprob: -6.769799709320068
    4. 'i' → logprob: -7.144799709320068
    5. '_' → logprob: -9.14479923248291
    6. ' _' → logprob: -10.39479923248291
    7. ' ‌' → logprob: -10.51979923248291
    8. ' ' → logprob: -11.89479923248291
    9. ' )' → logprob: -12.76979923248291
    10. ' N' → logprob: -13.39479923248291

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1749294251203537
    2. ' ' → logprob: -2.17492938041687
    3. 'in' → logprob: -3.29992938041687
    4. '[' → logprob: -4.924929618835449
    5. '  ' → logprob: -6.549929618835449
    6. '_' → logprob: -7.924929618835449
    7. ' a' → logprob: -9.17492961883545
    8. '<|end|>' → logprob: -9.17492961883545
    9. ',' → logprob: -9.29992961883545
    10. ' ,' → logprob: -9.42492961883545

Token 19: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018150413408875465
    2. ' A' → logprob: -4.018150329589844
    3. 'a' → logprob: -15.643150329589844
    4. 'range' → logprob: -15.893150329589844
    5. ' ' → logprob: -16.143150329589844
    6. ' range' → logprob: -16.643150329589844
    7. '	A' → logprob: -18.018150329589844
    8. '   ' → logprob: -18.643150329589844
    9. 'map' → logprob: -18.893150329589844
    10. '  ' → logprob: -19.143150329589844

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000474521511932835
    2. ' :' → logprob: -7.750474452972412
    3. ':
' → logprob: -10.87547492980957
    4. '[:]' → logprob: -11.75047492980957
    5. ':**' → logprob: -12.37547492980957
    6. '[:' → logprob: -13.00047492980957
    7. '+:' → logprob: -13.25047492980957
    8. '[' → logprob: -13.37547492980957
    9. '':' → logprob: -13.62547492980957
    10. '=' → logprob: -14.12547492980957

Token 21: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2655075192451477
    2. ' ans' → logprob: -2.265507459640503
    3. ' ' → logprob: -3.140507459640503
    4. '   ' → logprob: -3.515507459640503
    5. ' a' → logprob: -4.015507698059082
    6. 'if' → logprob: -4.765507698059082
    7. 'a' → logprob: -4.765507698059082
    8. '    ' → logprob: -4.765507698059082
    9. 'ans' → logprob: -5.140507698059082
    10. 'int' → logprob: -6.390507698059082

Token 22: ' num' (ID: 2269)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7742778658866882
    2. ' ans' → logprob: -1.024277925491333
    3. 'if' → logprob: -2.149277925491333
    4. ' if' → logprob: -2.774277925491333
    5. '   ' → logprob: -7.774277687072754
    6. 'a' → logprob: -9.149277687072754
    7. 'int' → logprob: -9.149277687072754
    8. ' a' → logprob: -9.899277687072754
    9. 'num' (adapté à ' num') → logprob: -9.899277687072754
    10. ' val' → logprob: -10.149277687072754

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021876806393265724
    2. '=' → logprob: -4.146876811981201
    3. '_' → logprob: -5.271876811981201
    4. '=int' → logprob: -7.771876811981201
    5. ')' → logprob: -9.646876335144043
    6. ',' → logprob: -10.396876335144043
    7. ' +=' → logprob: -10.521876335144043
    8. '  ' → logprob: -10.771876335144043
    9. 's' → logprob: -11.021876335144043
    10. ' ' → logprob: -11.271876335144043

Token 24: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519413232803345
    2. ' int' → logprob: -1.5019413232803345
    3. '   ' → logprob: -12.626941680908203
    4. '0' → logprob: -12.751941680908203
    5. 'float' → logprob: -13.126941680908203
    6. ' float' → logprob: -13.876941680908203
    7. 'a' → logprob: -13.876941680908203
    8. ' ' → logprob: -14.001941680908203
    9. '(int' → logprob: -14.876941680908203
    10. '	int' → logprob: -15.626941680908203

Token 25: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.251949667930603
    2. '(a' → logprob: -1.501949667930603
    3. 'a' → logprob: -11.626949310302734
    4. '('' → logprob: -11.751949310302734
    5. '(
' → logprob: -13.876949310302734
    6. ' (' → logprob: -13.876949310302734
    7. '()' → logprob: -14.751949310302734
    8. '(A' → logprob: -15.251949310302734
    9. ' ' → logprob: -15.501949310302734
    10. '(

' → logprob: -15.626949310302734

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013905855303164572
    2. ' )' → logprob: -9.375139236450195
    3. ')
' → logprob: -10.500139236450195
    4. '+' → logprob: -11.625139236450195
    5. '**' → logprob: -12.375139236450195
    6. ')**' → logprob: -12.625139236450195
    7. '))' → logprob: -12.875139236450195
    8. '*' → logprob: -14.125139236450195
    9. '`)' → logprob: -14.125139236450195
    10. '+)' → logprob: -14.250139236450195

Token 27: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7026289105415344
    2. '   ' → logprob: -1.4526288509368896
    3. '+' → logprob: -2.5776288509368896
    4. 'if' → logprob: -2.7026288509368896
    5. ' ' → logprob: -2.9526288509368896
    6. '<|end|>' → logprob: -3.5776288509368896
    7. '    ' → logprob: -3.7026288509368896
    8. '```' → logprob: -4.952629089355469
    9. '    
' → logprob: -5.702629089355469
    10. ')' → logprob: -5.827629089355469

Token 28: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13701105117797852
    2. 'if' → logprob: -2.3870110511779785
    3. ' ans' → logprob: -4.0120110511779785
    4. ' ' → logprob: -4.3870110511779785
    5. 'ans' → logprob: -6.0120110511779785
    6. '   ' → logprob: -7.1370110511779785
    7. '```' → logprob: -7.7620110511779785
    8. '    ' → logprob: -8.26201057434082
    9. ' while' → logprob: -8.63701057434082
    10. '+' → logprob: -8.63701057434082

Token 29: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.0028332918882369995
    2. 'num' → logprob: -5.877833366394043
    3. ' ' → logprob: -11.127833366394043
    4. '(num' → logprob: -11.502833366394043
    5. '	num' → logprob: -13.377833366394043
    6. '<num' → logprob: -14.252833366394043
    7. ' n' → logprob: -15.627833366394043
    8. ' (' → logprob: -15.877833366394043
    9. '<|end|>' → logprob: -15.877833366394043
    10. ',num' → logprob: -16.002832412719727

Token 30: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16398827731609344
    2. '%' → logprob: -1.9139882326126099
    3. ' >' → logprob: -5.91398811340332
    4. '>' → logprob: -7.03898811340332
    5. ' ' → logprob: -8.78898811340332
    6. ' &' → logprob: -11.53898811340332
    7. ' ' → logprob: -11.78898811340332
    8. ' %=' → logprob: -12.53898811340332
    9. ' !=' → logprob: -14.28898811340332
    10. '%s' → logprob: -14.53898811340332

Token 31: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02939668856561184
    2. ' ' → logprob: -3.6543967723846436
    3. '3' → logprob: -6.9043965339660645
    4. '26' → logprob: -6.9043965339660645
    5. '5' → logprob: -7.5293965339660645
    6. '10' → logprob: -7.9043965339660645
    7. '6' → logprob: -9.154397010803223
    8. '4' → logprob: -10.779397010803223
    9. '7' → logprob: -11.279397010803223
    10. '25' → logprob: -12.529397010803223

Token 32: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015158153837546706
    2. '3' → logprob: -6.626515865325928
    3. '5' → logprob: -9.37651538848877
    4. '10' → logprob: -10.00151538848877
    5. ' ' → logprob: -10.50151538848877
    6. '26' → logprob: -11.62651538848877
    7. '6' → logprob: -12.00151538848877
    8. '   ' → logprob: -12.37651538848877
    9. '4' → logprob: -12.62651538848877
    10. '7' → logprob: -13.00151538848877

Token 33: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16231954097747803
    2. '==' → logprob: -1.912319540977478
    3. '=' → logprob: -6.912319660186768
    4. ' ' → logprob: -7.662319660186768
    5. ' =' → logprob: -8.03731918334961
    6. '0' → logprob: -8.28731918334961
    7. '<|end|>' → logprob: -10.91231918334961
    8. ')==' → logprob: -11.41231918334961
    9. ')' → logprob: -11.66231918334961
    10. ' ' → logprob: -12.53731918334961

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3132617771625519
    2. '0' → logprob: -1.3132617473602295
    3. '<|end|>' → logprob: -16.938261032104492
    4. ' ' → logprob: -17.313261032104492
    5. '```' → logprob: -17.438261032104492
    6. '  ' → logprob: -17.563261032104492
    7. '=' → logprob: -18.313261032104492
    8. ' 

' → logprob: -18.563261032104492
    9. '۰' → logprob: -19.313261032104492
    10. '1' → logprob: -19.563261032104492

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '۰' → logprob: -18.875709533691406
    4. '  ' → logprob: -19.250709533691406
    5. '```' → logprob: -20.125709533691406
    6. '2' → logprob: -20.250709533691406
    7. '<|end|>' → logprob: -20.500709533691406
    8. '    ' → logprob: -20.625709533691406
    9. '   ' → logprob: -20.625709533691406
    10. '０' → logprob: -20.750709533691406

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001478796184528619
    2. ' :' → logprob: -9.750147819519043
    3. ':
' → logprob: -10.375147819519043
    4. ' and' → logprob: -10.625147819519043
    5. '):' → logprob: -10.750147819519043
    6. '<|end|>' → logprob: -11.875147819519043
    7. 'and' → logprob: -13.125147819519043
    8. ':**' → logprob: -14.250147819519043
    9. '   ' → logprob: -14.500147819519043
    10. ',' → logprob: -14.875147819519043

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08294166624546051
    2. ' ' → logprob: -3.832941770553589
    3. '   ' → logprob: -3.832941770553589
    4. '    ' → logprob: -4.20794153213501
    5. ' num' → logprob: -4.45794153213501
    6. 'num' → logprob: -5.08294153213501
    7. '        ' → logprob: -6.33294153213501
    8. ' ' → logprob: -7.83294153213501
    9. '<|end|>' → logprob: -7.83294153213501
    10. '```' → logprob: -8.332942008972168

Token 38: ' ans' (ID: 3345)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.1371941715478897
    2. 'num' → logprob: -2.5121941566467285
    3. ' ' → logprob: -4.0121941566467285
    4. '       ' → logprob: -4.3871941566467285
    5. '        ' → logprob: -4.8871941566467285
    6. ' ans' → logprob: -5.1371941566467285
    7. '           ' → logprob: -6.6371941566467285
    8. 'ans' (adapté à ' ans') → logprob: -7.2621941566467285
    9. '    ' → logprob: -8.137194633483887
    10. ' ' → logprob: -8.512194633483887

Token 39: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0431458055973053
    2. '+=' → logprob: -3.1681458950042725
    3. '+' → logprob: -9.043146133422852
    4. ' ' → logprob: -11.918146133422852
    5. '   ' → logprob: -11.918146133422852
    6. ']+=' → logprob: -12.293146133422852
    7. '    ' → logprob: -13.168146133422852
    8. '+='' → logprob: -13.293146133422852
    9. ' +' → logprob: -13.418146133422852
    10. '=' → logprob: -13.668146133422852

Token 40: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.07023406773805618
    2. 'ans' → logprob: -2.6952340602874756
    3. '(ans' → logprob: -8.695234298706055
    4. '	ans' → logprob: -9.195234298706055
    5. ' ' → logprob: -11.695234298706055
    6. '+' → logprob: -11.945234298706055
    7. '1' → logprob: -12.320234298706055
    8. '_ans' → logprob: -12.820234298706055
    9. '2' → logprob: -13.320234298706055
    10. '        ' → logprob: -13.820234298706055

Token 41: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38694024085998535
    2. '+' → logprob: -1.1369402408599854
    3. ' ' → logprob: -9.636940002441406
    4. ' plus' → logprob: -13.636940002441406
    5. ' ' → logprob: -13.761940002441406
    6. ' +
' → logprob: -14.136940002441406
    7. ' +=' → logprob: -15.261940002441406
    8. '1' → logprob: -15.511940002441406
    9. '＋' → logprob: -16.386940002441406
    10. '        ' → logprob: -16.636940002441406

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14267577230930328
    2. ' ' → logprob: -2.0176758766174316
    3. '   ' → logprob: -14.767675399780273
    4. '    ' → logprob: -15.767675399780273
    5. '  ' → logprob: -17.392675399780273
    6. '2' → logprob: -17.392675399780273
    7. ' ' → logprob: -17.580175399780273
    8. '       ' → logprob: -18.392675399780273
    9. '１' → logprob: -18.517675399780273
    10. '```' → logprob: -18.517675399780273

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.625261306762695
    4. '１' → logprob: -18.750261306762695
    5. '  ' → logprob: -19.187761306762695
    6. '```' → logprob: -19.875261306762695
    7. ' ' → logprob: -20.250261306762695
    8. '2' → logprob: -20.500261306762695
    9. '१' → logprob: -20.750261306762695
    10. '١' → logprob: -20.875261306762695

Token 44: '
' (ID: 198)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.9830448031425476
    2. '
' → logprob: -1.3580448627471924
    3. '       ' → logprob: -1.4830448627471924
    4. '    
' → logprob: -2.9830448627471924
    5. ' 
' → logprob: -3.7330448627471924
    6. 'num' → logprob: -4.108044624328613
    7. '     
' → logprob: -4.233044624328613
    8. '```' → logprob: -5.108044624328613
    9. '         
' → logprob: -5.233044624328613
    10. '            
' → logprob: -5.483044624328613

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5678582191467285
    2. 'num' → logprob: -1.1928582191467285
    3. ' num' → logprob: -2.4428582191467285
    4. '   ' → logprob: -3.3178582191467285
    5. '        
' → logprob: -6.0678582191467285
    6. '    
' → logprob: -6.9428582191467285
    7. '```' → logprob: -7.0678582191467285
    8. '    ' → logprob: -7.3178582191467285
    9. '	num' → logprob: -7.4428582191467285
    10. '
' → logprob: -7.9428582191467285

Token 46: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.12712180614471436
    2. ' num' → logprob: -2.127121925354004
    3. '   ' → logprob: -9.252121925354004
    4. '```' → logprob: -9.752121925354004
    5. '	num' → logprob: -11.127121925354004
    6. '       ' → logprob: -11.252121925354004
    7. '    ' → logprob: -12.502121925354004
    8. '``' → logprob: -13.002121925354004
    9. ' ' → logprob: -13.127121925354004
    10. '_num' → logprob: -14.002121925354004

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.603488564491272
    2. '//=' → logprob: -1.353488564491272
    3. ' =' → logprob: -1.728488564491272
    4. ' //' → logprob: -4.103488445281982
    5. '//' → logprob: -7.853488445281982
    6. ' ' → logprob: -9.10348892211914
    7. ' /=' → logprob: -9.85348892211914
    8. '/=' → logprob: -9.97848892211914
    9. ' >>=' → logprob: -10.10348892211914
    10. '```' → logprob: -10.85348892211914

Token 48: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.4740775227546692
    2. ' num' → logprob: -0.9740775227546692
    3. '	num' → logprob: -15.599077224731445
    4. ' ' → logprob: -16.099077224731445
    5. '(num' → logprob: -16.599077224731445
    6. 'int' → logprob: -16.599077224731445
    7. '=num' → logprob: -17.099077224731445
    8. '[num' → logprob: -17.724077224731445
    9. 'n' → logprob: -17.849077224731445
    10. ',num' → logprob: -17.849077224731445

Token 49: ' //' (ID: 602)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.7491506934165955
    2. 'num' → logprob: -1.1241507530212402
    3. ' ' → logprob: -2.2491507530212402
    4. '2' → logprob: -2.6241507530212402
    5. '/' → logprob: -4.12415075302124
    6. ' //' → logprob: -5.62415075302124
    7. ' /' → logprob: -6.12415075302124
    8. '//' → logprob: -6.87415075302124
    9. '20' → logprob: -8.374150276184082
    10. ' ' → logprob: -8.624150276184082

Token 50: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -15.125075340270996
    4. '   ' → logprob: -16.25007438659668
    5. '  ' → logprob: -18.25007438659668
    6. '    ' → logprob: -18.87507438659668
    7. '>' → logprob: -19.68757438659668
    8. '２' → logprob: -19.81257438659668
    9. '``' → logprob: -20.00007438659668
    10. '۲' → logprob: -20.00007438659668

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '２' → logprob: -19.500001907348633
    6. '  ' → logprob: -19.875001907348633
    7. '۲' → logprob: -19.875001907348633
    8. '२' → logprob: -20.937501907348633
    9. '<|end|>' → logprob: -21.000001907348633
    10. '২' → logprob: -21.000001907348633

Token 52: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0075093829073011875
    2. '\n' → logprob: -6.132509231567383
    3. '```' → logprob: -6.132509231567383
    4. '<|end|>' → logprob: -6.132509231567383
    5. '#' → logprob: -8.007509231567383
    6. '
' → logprob: -8.632509231567383
    7. ' print' → logprob: -8.882509231567383
    8. '\' → logprob: -9.007509231567383
    9. '#print' → logprob: -9.882509231567383
    10. ')' → logprob: -10.132509231567383

Token 53: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.066919301403686e-05
    2. '```' → logprob: -10.125090599060059
    3. ' print' → logprob: -10.500090599060059
    4. '<|end|>' → logprob: -11.375090599060059
    5. '#' → logprob: -12.500090599060059
    6. '
' → logprob: -12.750090599060059
    7. '#print' → logprob: -13.500090599060059
    8. '\n' → logprob: -13.625090599060059
    9. 'return' → logprob: -14.375090599060059
    10. '\' → logprob: -14.625090599060059

Token 54: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20154686272144318
    2. '(ans' → logprob: -1.7015469074249268
    3. '('' → logprob: -9.701546669006348
    4. '()' → logprob: -9.826546669006348
    5. 'ans' → logprob: -11.701546669006348
    6. '("' → logprob: -12.701546669006348
    7. '("("' → logprob: -12.701546669006348
    8. '(
' → logprob: -13.951546669006348
    9. '(answer' → logprob: -14.201546669006348
    10. '(`' → logprob: -14.201546669006348

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -16.125
    3. '')' → logprob: -16.625
    4. ')
' → logprob: -16.75
    5. ')`' → logprob: -17.0
    6. ' )' → logprob: -17.25
    7. '`)' → logprob: -18.5
    8. '）' → logprob: -19.25
    9. '")' → logprob: -19.625
    10. ')**' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 53
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 44
Précision stricte (1ère position): 35.85%
Précision adaptée (1ère position): 37.74%
Précision (top 10): 83.02%
================================================================================
