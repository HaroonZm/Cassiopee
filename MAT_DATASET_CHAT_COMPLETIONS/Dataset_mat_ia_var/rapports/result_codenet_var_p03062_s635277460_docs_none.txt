================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
*A, = map(int, input().split())
aA = [abs(a) for a in A]
asum = sum(aA)
c = sum(a < 0 for a in A)
if c % 2:
    print(asum - min(aA) * 2)
else:
    print(asum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00021831797494087368
    2. '('' → logprob: -9.125218391418457
    3. '(N' → logprob: -10.125218391418457
    4. '(
' → logprob: -10.500218391418457
    5. ''' → logprob: -10.750218391418457
    6. '```' → logprob: -12.000218391418457
    7. '("("' → logprob: -12.375218391418457
    8. '`' → logprob: -12.750218391418457
    9. '(`' → logprob: -13.625218391418457
    10. ')' → logprob: -13.875218391418457

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: '*A' (ID: 166365)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8320107460021973
    2. 'for' → logprob: -1.8320107460021973
    3. 'a' → logprob: -2.0820107460021973
    4. 's' → logprob: -2.2070107460021973
    5. '*' → logprob: -2.5820107460021973
    6. ''' → logprob: -2.8320107460021973
    7. '#' → logprob: -3.2070107460021973
    8. ')' → logprob: -3.2070107460021973
    9. 'i' → logprob: -3.3320107460021973
    10. 'x' → logprob: -3.3320107460021973

Token 6: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36957094073295593
    2. ' =' → logprob: -1.6195709705352783
    3. '*' → logprob: -2.8695709705352783
    4. '[' → logprob: -3.6195709705352783
    5. 'for' → logprob: -4.994570732116699
    6. '**' → logprob: -5.494570732116699
    7. '*=' → logprob: -6.119570732116699
    8. '+' → logprob: -6.619570732116699
    9. 'range' → logprob: -6.619570732116699
    10. '.' → logprob: -6.869570732116699

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18365617096424103
    2. ' =' → logprob: -1.8086562156677246
    3. ' ' → logprob: -6.558656215667725
    4. ')' → logprob: -7.308656215667725
    5. ',' → logprob: -7.308656215667725
    6. '*' → logprob: -8.058655738830566
    7. '[' → logprob: -8.058655738830566
    8. 'input' → logprob: -9.558655738830566
    9. '*=' → logprob: -9.808655738830566
    10. '=[]' → logprob: -10.183655738830566

Token 8: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0048164804466068745
    2. ' map' → logprob: -5.37981653213501
    3. 'range' → logprob: -9.254816055297852
    4. 'input' → logprob: -9.504816055297852
    5. 'list' → logprob: -10.879816055297852
    6. '(map' → logprob: -12.879816055297852
    7. 'int' → logprob: -13.254816055297852
    8. '[' → logprob: -14.504816055297852
    9. '	map' → logprob: -14.504816055297852
    10. ' range' → logprob: -15.004816055297852

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12277979403734207
    2. '(' → logprob: -2.2477798461914062
    3. '(input' → logprob: -5.122779846191406
    4. '<|end|>' → logprob: -6.622779846191406
    5. '(str' → logprob: -7.247779846191406
    6. '[int' → logprob: -7.622779846191406
    7. '(lambda' → logprob: -7.872779846191406
    8. 'int' → logprob: -8.497779846191406
    9. '<int' → logprob: -8.872779846191406
    10. '(range' → logprob: -8.872779846191406

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0027733708266168833
    2. ',input' → logprob: -6.627773284912109
    3. ')' → logprob: -7.252773284912109
    4. '(' → logprob: -7.627773284912109
    5. 'input' → logprob: -8.50277328491211
    6. ',' → logprob: -10.75277328491211
    7. ' input' → logprob: -11.62777328491211
    8. ')(' → logprob: -12.50277328491211
    9. '=input' → logprob: -12.62777328491211
    10. '```' → logprob: -13.00277328491211

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08900784701108932
    2. ' input' → logprob: -2.46400785446167
    3. ' ' → logprob: -10.464007377624512
    4. 'range' → logprob: -11.089007377624512
    5. ')' → logprob: -11.464007377624512
    6. '(input' → logprob: -12.214007377624512
    7. '[input' → logprob: -13.089007377624512
    8. ',input' → logprob: -13.214007377624512
    9. '=input' → logprob: -13.839007377624512
    10. 'list' → logprob: -14.464007377624512

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.30729249119758606
    2. '()' → logprob: -1.5572924613952637
    3. '().' → logprob: -2.9322924613952637
    4. ')' → logprob: -8.182292938232422
    5. '());' → logprob: -9.807292938232422
    6. '()))' → logprob: -10.057292938232422
    7. ' ())' → logprob: -10.182292938232422
    8. '(' → logprob: -10.432292938232422
    9. '()
' → logprob: -10.932292938232422
    10. '();)' → logprob: -11.057292938232422

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012964145571459085
    2. 'strip' → logprob: -9.000129699707031
    3. ' split' → logprob: -12.875129699707031
    4. 'rstrip' → logprob: -13.250129699707031
    5. ')' → logprob: -14.000129699707031
    6. '(split' → logprob: -14.500129699707031
    7. 'read' → logprob: -14.750129699707031
    8. 'spl' → logprob: -16.87512969970703
    9. '```' → logprob: -17.62512969970703
    10. 'plit' → logprob: -18.37512969970703

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.020328611135482788
    2. ')' → logprob: -4.270328521728516
    3. '()' → logprob: -5.145328521728516
    4. '()))' → logprob: -9.020328521728516
    5. '(' → logprob: -9.395328521728516
    6. '))' → logprob: -9.895328521728516
    7. ' ())' → logprob: -10.770328521728516
    8. '())
' → logprob: -11.395328521728516
    9. '`)' → logprob: -11.395328521728516
    10. '(),' → logprob: -12.395328521728516

Token 15: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33698737621307373
    2. 's' → logprob: -2.2119874954223633
    3. 'A' → logprob: -2.3369874954223633
    4. 'a' → logprob: -3.5869874954223633
    5. 'c' → logprob: -4.586987495422363
    6. 'count' → logprob: -5.336987495422363
    7. 'C' → logprob: -5.336987495422363
    8. 'sorted' → logprob: -5.836987495422363
    9. 'sum' → logprob: -5.961987495422363
    10. '```' → logprob: -5.961987495422363

Token 16: 'A' (ID: 32)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9158039093017578
    2. '[' → logprob: -1.1658039093017578
    3. '*' → logprob: -1.5408039093017578
    4. 's' → logprob: -3.665803909301758
    5. ' =' → logprob: -4.415803909301758
    6. '[A' → logprob: -4.915803909301758
    7. '[i' → logprob: -5.415803909301758
    8. '=' → logprob: -5.540803909301758
    9. '[n' → logprob: -6.040803909301758
    10. '_*' → logprob: -6.290803909301758

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16032597422599792
    2. '*' → logprob: -3.0353260040283203
    3. '[*' → logprob: -3.7853260040283203
    4. '.' → logprob: -4.03532600402832
    5. '[A' → logprob: -4.53532600402832
    6. '[i' → logprob: -4.53532600402832
    7. 's' → logprob: -5.16032600402832
    8. '[a' → logprob: -5.41032600402832
    9. '[:]' → logprob: -5.91032600402832
    10. '[::-' → logprob: -6.03532600402832

Token 18: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1279257535934448
    2. ' []' → logprob: -1.6279257535934448
    3. ' [' → logprob: -2.5029258728027344
    4. ' ' → logprob: -2.6279258728027344
    5. ' sorted' → logprob: -2.6279258728027344
    6. 'sorted' → logprob: -3.1279258728027344
    7. '[' → logprob: -3.3779258728027344
    8. 'A' → logprob: -3.3779258728027344
    9. ' A' → logprob: -3.6279258728027344
    10. '[A' → logprob: -3.8779258728027344

Token 19: 'abs' (ID: 6071)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014139998704195023
    2. 'A' → logprob: -4.8891401290893555
    3. '*A' → logprob: -5.2641401290893555
    4. '*' → logprob: -7.1391401290893555
    5. '*)' → logprob: -9.389140129089355
    6. '[A' → logprob: -9.389140129089355
    7. 'a' → logprob: -9.639140129089355
    8. '1' → logprob: -9.764140129089355
    9. ' ' → logprob: -10.014140129089355
    10. ']' → logprob: -10.139140129089355

Token 20: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5021991729736328
    2. '(a' → logprob: -1.7521991729736328
    3. '(A' → logprob: -2.002199172973633
    4. '(' → logprob: -2.627199172973633
    5. '(i' → logprob: -4.377199172973633
    6. '(ai' → logprob: -7.752199172973633
    7. '(*' → logprob: -7.877199172973633
    8. '(N' → logprob: -8.752199172973633
    9. 'x' → logprob: -9.002199172973633
    10. 'A' → logprob: -9.127199172973633

Token 21: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5353788733482361
    2. ' -' → logprob: -1.9103789329528809
    3. '-A' → logprob: -2.035378932952881
    4. '-i' → logprob: -2.160378932952881
    5. ')' → logprob: -4.785378932952881
    6. '-a' → logprob: -5.035378932952881
    7. '-N' → logprob: -6.660378932952881
    8. '[i' → logprob: -6.910378932952881
    9. '-n' → logprob: -7.285378932952881
    10. ')]' → logprob: -7.285378932952881

Token 22: ' for' (ID: 395)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.27199509739875793
    2. ' -' → logprob: -1.7719950675964355
    3. ' for' → logprob: -3.6469950675964355
    4. ')' → logprob: -3.7719950675964355
    5. '-a' → logprob: -4.2719950675964355
    6. '-A' → logprob: -5.7719950675964355
    7. 'for' → logprob: -7.0219950675964355
    8. ')]' → logprob: -8.646995544433594
    9. '-)' → logprob: -8.646995544433594
    10. '-i' → logprob: -8.771995544433594

Token 23: ' a' (ID: 261)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2538940906524658
    2. 'A' → logprob: -1.5038940906524658
    3. ' ' → logprob: -6.628893852233887
    4. '*A' → logprob: -7.503893852233887
    5. 'a' → logprob: -10.253893852233887
    6. ' a' → logprob: -10.503893852233887
    7. '	A' → logprob: -11.628893852233887
    8. '  ' → logprob: -11.878893852233887
    9. '_A' → logprob: -12.753893852233887
    10. '*' → logprob: -13.253893852233887

Token 24: ' in' (ID: 306)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6370507478713989
    2. ' A' → logprob: -0.7620507478713989
    3. ' ' → logprob: -5.887050628662109
    4. ' in' → logprob: -7.137050628662109
    5. '*A' → logprob: -7.262050628662109
    6. 'a' → logprob: -9.51205062866211
    7. ' a' → logprob: -10.38705062866211
    8. '  ' → logprob: -11.26205062866211
    9. '	A' → logprob: -11.38705062866211
    10. '_A' → logprob: -11.63705062866211

Token 25: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.018609551712870598
    2. '*A' → logprob: -4.518609523773193
    3. ' A' → logprob: -4.893609523773193
    4. 'a' → logprob: -10.893610000610352
    5. ' ' → logprob: -11.018610000610352
    6. '	A' → logprob: -14.268610000610352
    7. ' *' → logprob: -14.643610000610352
    8. '_A' → logprob: -14.768610000610352
    9. '  ' → logprob: -14.768610000610352
    10. '   ' → logprob: -14.893610000610352

Token 26: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00263249222189188
    2. ')]' → logprob: -6.0026326179504395
    3. '])' → logprob: -9.377632141113281
    4. ' ]' → logprob: -10.752632141113281
    5. '])]' → logprob: -11.502632141113281
    6. '()]' → logprob: -11.627632141113281
    7. ']
' → logprob: -11.627632141113281
    8. ')' → logprob: -11.877632141113281
    9. '`]' → logprob: -12.002632141113281
    10. ']*' → logprob: -13.752632141113281

Token 27: 'as' (ID: 288)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06287270784378052
    2. '<|end|>' → logprob: -3.8128726482391357
    3. 'a' → logprob: -5.062872886657715
    4. '[' → logprob: -5.187872886657715
    5. ')' → logprob: -5.437872886657715
    6. '```' → logprob: -5.687872886657715
    7. '
' → logprob: -6.312872886657715
    8. ' 
' → logprob: -6.437872886657715
    9. '.' → logprob: -6.437872886657715
    10. '+' → logprob: -6.437872886657715

Token 28: 'um' (ID: 394)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26248764991760254
    2. 'c' → logprob: -1.8874876499176025
    3. 'a' → logprob: -3.1374876499176025
    4. 'um' → logprob: -3.8874876499176025
    5. 'sum' → logprob: -4.887487411499023
    6. 'u' → logprob: -6.137487411499023
    7. 't' → logprob: -7.137487411499023
    8. 'A' → logprob: -7.262487411499023
    9. 'm' → logprob: -7.262487411499023
    10. 'orted' → logprob: -7.637487411499023

Token 29: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7025190591812134
    2. '_' → logprob: -1.0775190591812134
    3. ' =' → logprob: -1.8275190591812134
    4. 's' → logprob: -6.577518939971924
    5. '_=' → logprob: -6.952518939971924
    6. '=sum' → logprob: -8.077519416809082
    7. ' ' → logprob: -8.327519416809082
    8. '_sum' → logprob: -8.827519416809082
    9. ' +=' → logprob: -9.827519416809082
    10. 'sum' → logprob: -10.327519416809082

Token 30: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.4771116077899933
    2. 'sum' → logprob: -0.9771115779876709
    3. '0' → logprob: -5.85211181640625
    4. ' ' → logprob: -8.97711181640625
    5. 'a' → logprob: -11.72711181640625
    6. ' a' → logprob: -11.97711181640625
    7. '(sum' → logprob: -12.10211181640625
    8. '	sum' → logprob: -12.60211181640625
    9. '=sum' → logprob: -12.72711181640625
    10. ' abs' → logprob: -14.72711181640625

Token 31: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006817316170781851
    2. '(' → logprob: -5.00681734085083
    3. '(as' → logprob: -10.006816864013672
    4. '(A' → logprob: -11.006816864013672
    5. '((' → logprob: -11.381816864013672
    6. '(_' → logprob: -11.381816864013672
    7. '(abs' → logprob: -11.881816864013672
    8. 'a' → logprob: -13.131816864013672
    9. ' (' → logprob: -13.756816864013672
    10. '(ai' → logprob: -13.756816864013672

Token 32: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7016799449920654
    2. 'a' → logprob: -0.7016799449920654
    3. 's' → logprob: -5.0766801834106445
    4. ')' → logprob: -6.3266801834106445
    5. '(a' → logprob: -8.201680183410645
    6. '_a' → logprob: -9.826680183410645
    7. '(' → logprob: -10.326680183410645
    8. ')a' → logprob: -10.576680183410645
    9. '[' → logprob: -11.326680183410645
    10. '(s' → logprob: -11.701680183410645

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012047011114191264
    2. '+' → logprob: -10.750120162963867
    3. '))' → logprob: -10.875120162963867
    4. 'a' → logprob: -11.125120162963867
    5. '()' → logprob: -11.500120162963867
    6. ' )' → logprob: -11.500120162963867
    7. ')
' → logprob: -12.000120162963867
    8. ')a' → logprob: -12.000120162963867
    9. ')+' → logprob: -12.125120162963867
    10. '())' → logprob: -12.375120162963867

Token 34: 'c' (ID: 66)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.590120255947113
    2. '-' → logprob: -2.215120315551758
    3. 'a' → logprob: -2.840120315551758
    4. '#' → logprob: -2.965120315551758
    5. '*' → logprob: -2.965120315551758
    6. '
' → logprob: -3.590120315551758
    7. '/' → logprob: -3.590120315551758
    8. '<|end|>' → logprob: -3.715120315551758
    9. ' ' → logprob: -4.340120315551758
    10. '%' → logprob: -4.590120315551758

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4794330596923828
    2. '=' → logprob: -1.8544330596923828
    3. 'um' → logprob: -1.9794330596923828
    4. 'ount' → logprob: -2.104433059692383
    5. 'umsum' → logprob: -2.229433059692383
    6. 'nt' → logprob: -2.604433059692383
    7. 'c' → logprob: -2.979433059692383
    8. 'ur' → logprob: -3.604433059692383
    9. 'sum' → logprob: -4.479433059692383
    10. 'o' → logprob: -4.604433059692383

Token 36: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07754088938236237
    2. '[' → logprob: -2.702540874481201
    3. ' ' → logprob: -6.077540874481201
    4. '[a' → logprob: -6.327540874481201
    5. 'a' → logprob: -6.577540874481201
    6. ' [' → logprob: -6.702540874481201
    7. 'as' → logprob: -8.45254135131836
    8. '[N' → logprob: -8.95254135131836
    9. '[min' → logprob: -9.32754135131836
    10. '[int' → logprob: -9.57754135131836

Token 37: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6097812652587891
    2. '(' → logprob: -0.9847812652587891
    3. '(A' → logprob: -3.234781265258789
    4. '(abs' → logprob: -3.984781265258789
    5. '([' → logprob: -4.359781265258789
    6. '(min' → logprob: -5.484781265258789
    7. 'a' → logprob: -6.484781265258789
    8. '(c' → logprob: -6.609781265258789
    9. '((' → logprob: -7.109781265258789
    10. '(range' → logprob: -7.359781265258789

Token 38: ' <' (ID: 464)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.34966257214546204
    2. ')' → logprob: -1.5996625423431396
    3. '[:' → logprob: -3.2246625423431396
    4. '[a' → logprob: -3.9746625423431396
    5. '[' → logprob: -4.724662780761719
    6. 'A' → logprob: -5.099662780761719
    7. '[A' → logprob: -5.099662780761719
    8. '[:-' → logprob: -5.599662780761719
    9. ')>' → logprob: -6.474662780761719
    10. '(a' → logprob: -6.974662780761719

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014891654253006
    2. ' ' → logprob: -1.7014892101287842
    3. '-' → logprob: -10.701489448547363
    4. '  ' → logprob: -11.826489448547363
    5. 'a' → logprob: -11.826489448547363
    6. '1' → logprob: -12.201489448547363
    7. 'A' → logprob: -12.388989448547363
    8. ' -' → logprob: -12.513989448547363
    9. '=' → logprob: -12.638989448547363
    10. '>' → logprob: -12.763989448547363

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003837213444057852
    2. ' ' → logprob: -7.8753838539123535
    3. '-' → logprob: -13.750383377075195
    4. 'a' → logprob: -14.000383377075195
    5. '1' → logprob: -14.250383377075195
    6. '=' → logprob: -15.250383377075195
    7. '  ' → logprob: -15.375383377075195
    8. '>' → logprob: -15.625383377075195
    9. 'A' → logprob: -16.000383377075195
    10. 'c' → logprob: -16.375383377075195

Token 41: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39279499650001526
    2. ')' → logprob: -1.2677949666976929
    3. 'for' → logprob: -3.1427950859069824
    4. ' )' → logprob: -9.017794609069824
    5. ' ' → logprob: -9.892794609069824
    6. '  ' → logprob: -11.642794609069824
    7. '	for' → logprob: -12.142794609069824
    8. 'a' → logprob: -12.267794609069824
    9. ',' → logprob: -12.517794609069824
    10. '),' → logprob: -12.517794609069824

Token 42: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5761428475379944
    2. ' A' → logprob: -0.8261428475379944
    3. '*A' → logprob: -9.576143264770508
    4. ' ' → logprob: -9.701143264770508
    5. 'a' → logprob: -10.201143264770508
    6. '	A' → logprob: -11.326143264770508
    7. ' a' → logprob: -11.701143264770508
    8. '  ' → logprob: -12.451143264770508
    9. ' ' → logprob: -12.701143264770508
    10. '   ' → logprob: -13.451143264770508

Token 43: ' in' (ID: 306)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.38695019483566284
    2. 'A' → logprob: -1.1369502544403076
    3. ' ' → logprob: -10.386950492858887
    4. ')' → logprob: -10.886950492858887
    5. '*A' → logprob: -11.261950492858887
    6. ' in' → logprob: -11.636950492858887
    7. ' )' → logprob: -13.886950492858887
    8. ' ' → logprob: -13.886950492858887
    9. ' a' → logprob: -14.011950492858887
    10. '  ' → logprob: -14.261950492858887

Token 44: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03807775676250458
    2. ' A' → logprob: -3.2880778312683105
    3. ' ' → logprob: -11.163077354431152
    4. '*A' → logprob: -11.288077354431152
    5. 'a' → logprob: -12.288077354431152
    6. '	A' → logprob: -13.163077354431152
    7. '   ' → logprob: -14.163077354431152
    8. ')' → logprob: -14.288077354431152
    9. '  ' → logprob: -14.788077354431152
    10. ' ' → logprob: -15.163077354431152

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.876193169271573e-05
    2. ')
' → logprob: -9.625088691711426
    3. ' )' → logprob: -11.625088691711426
    4. ')c' → logprob: -11.875088691711426
    5. '))' → logprob: -13.375088691711426
    6. ')a' → logprob: -13.625088691711426
    7. ')`' → logprob: -14.500088691711426
    8. ')

' → logprob: -14.625088691711426
    9. ')
' → logprob: -14.750088691711426
    10. ')**' → logprob: -14.875088691711426

Token 46: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8629452586174011
    2. '
' → logprob: -1.112945318222046
    3. 'if' → logprob: -2.737945318222046
    4. '\n' → logprob: -3.487945318222046
    5. 'n' → logprob: -3.987945318222046
    6. ' if' → logprob: -4.112945079803467
    7. '+
' → logprob: -4.112945079803467
    8. '%' → logprob: -4.112945079803467
    9. '<|end|>' → logprob: -4.112945079803467
    10. '*' → logprob: -4.487945079803467

Token 47: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08439189940690994
    2. ' asum' → logprob: -3.2093918323516846
    3. ' ' → logprob: -4.084392070770264
    4. ' as' → logprob: -4.334392070770264
    5. ' a' → logprob: -5.209392070770264
    6. ' not' → logprob: -6.459392070770264
    7. '  ' → logprob: -7.334392070770264
    8. ' (' → logprob: -7.584392070770264
    9. ' abs' → logprob: -7.709392070770264
    10. 'c' → logprob: -8.084391593933105

Token 48: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.917086660861969
    2. ' %' → logprob: -1.1670866012573242
    3. ' >' → logprob: -2.292086601257324
    4. '==' → logprob: -2.542086601257324
    5. '>' → logprob: -2.917086601257324
    6. ' ==' → logprob: -3.042086601257324
    7. ' ' → logprob: -6.667086601257324
    8. ' !=' → logprob: -6.667086601257324
    9. '!=' → logprob: -6.792086601257324
    10. '=' → logprob: -7.167086601257324

Token 49: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25199633836746216
    2. ' ' → logprob: -1.5019962787628174
    3. '>' → logprob: -11.501996040344238
    4. '  ' → logprob: -11.564496040344238
    5. '<|end|>' → logprob: -11.939496040344238
    6. '```' → logprob: -12.001996040344238
    7. ' ' → logprob: -13.126996040344238
    8. '202' → logprob: -13.189496040344238
    9. '_' → logprob: -13.189496040344238
    10. '...' → logprob: -13.439496040344238

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011839192593470216
    2. ' ' → logprob: -6.751183986663818
    3. '```' → logprob: -13.31368350982666
    4. '  ' → logprob: -14.06368350982666
    5. '22' → logprob: -14.18868350982666
    6. '4' → logprob: -14.18868350982666
    7. '202' → logprob: -14.31368350982666
    8. '20' → logprob: -14.37618350982666
    9. '=' → logprob: -14.43868350982666
    10. '   ' → logprob: -14.50118350982666

Token 51: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22954846918582916
    2. '==' → logprob: -1.729548454284668
    3. ' !=' → logprob: -4.354548454284668
    4. ':' → logprob: -4.729548454284668
    5. ' ' → logprob: -6.354548454284668
    6. '=' → logprob: -6.354548454284668
    7. '!=' → logprob: -6.354548454284668
    8. ' >' → logprob: -8.604548454284668
    9. ' :' → logprob: -8.729548454284668
    10. '>' → logprob: -8.854548454284668

Token 52: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.482245534658432
    2. 'print' → logprob: -1.2322455644607544
    3. 'as' → logprob: -3.232245445251465
    4. 'if' → logprob: -4.107245445251465
    5. 'min' → logprob: -4.357245445251465
    6. ' a' → logprob: -4.607245445251465
    7. ' ' → logprob: -5.607245445251465
    8. 'A' → logprob: -5.982245445251465
    9. '   ' → logprob: -6.232245445251465
    10. ' print' → logprob: -6.857245445251465

Token 53: ' print' (ID: 2123)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3424399495124817
    2. 'print' (adapté à ' print') → logprob: -1.842439889907837
    3. 'as' → logprob: -2.467439889907837
    4. 'if' → logprob: -3.467439889907837
    5. 'min' → logprob: -4.842440128326416
    6. 'A' → logprob: -5.092440128326416
    7. ' a' → logprob: -8.217439651489258
    8. 'ans' → logprob: -8.967439651489258
    9. '   ' → logprob: -9.217439651489258
    10. '*' → logprob: -9.342439651489258

Token 54: '(as' (ID: 67370)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6359190940856934
    2. '(as' → logprob: -0.8859190940856934
    3. '(min' → logprob: -2.8859190940856934
    4. '('' → logprob: -7.510919094085693
    5. 'as' → logprob: -8.010919570922852
    6. '(a' → logprob: -8.260919570922852
    7. '(abs' → logprob: -8.260919570922852
    8. '("' → logprob: -8.260919570922852
    9. '(sum' → logprob: -8.635919570922852
    10. '(max' → logprob: -8.760919570922852

Token 55: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0006260605878196657
    2. 'u' → logprob: -7.750626087188721
    3. 'sum' → logprob: -8.625625610351562
    4. 'a' → logprob: -13.000625610351562
    5. '   ' → logprob: -13.375625610351562
    6. '*' → logprob: -13.500625610351562
    7. 'us' → logprob: -13.750625610351562
    8. 'ум' → logprob: -13.875625610351562
    9. '_sum' → logprob: -14.125625610351562
    10. 'up' → logprob: -14.375625610351562

Token 56: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4763680100440979
    2. '-' → logprob: -0.9763680100440979
    3. ')' → logprob: -6.476367950439453
    4. '-)' → logprob: -8.976367950439453
    5. '-min' → logprob: -9.226367950439453
    6. '-end' → logprob: -9.351367950439453
    7. ' ' → logprob: -9.476367950439453
    8. '  ' → logprob: -9.726367950439453
    9. ',' → logprob: -9.726367950439453
    10. '   ' → logprob: -9.851367950439453

Token 57: ' min' (ID: 1349)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021588457748293877
    2. ' ' → logprob: -3.8965885639190674
    3. 'min' → logprob: -7.146588325500488
    4. ' min' → logprob: -9.146588325500488
    5. '   ' → logprob: -9.646588325500488
    6. 'max' → logprob: -10.396588325500488
    7. ')' → logprob: -10.521588325500488
    8. '  ' → logprob: -11.646588325500488
    9. '```' → logprob: -12.271588325500488
    10. '0' → logprob: -12.896588325500488

Token 58: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00018244501552544534
    2. '(' → logprob: -8.875182151794434
    3. 'a' → logprob: -11.000182151794434
    4. '(A' → logprob: -11.500182151794434
    5. ')' → logprob: -12.625182151794434
    6. '(_' → logprob: -12.625182151794434
    7. '(abs' → logprob: -12.875182151794434
    8. '([' → logprob: -13.625182151794434
    9. '((' → logprob: -14.125182151794434
    10. '(`' → logprob: -14.250182151794434

Token 59: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006027388386428356
    2. '(a' → logprob: -5.3810272216796875
    3. '_a' → logprob: -7.6310272216796875
    4. ')' → logprob: -7.7560272216796875
    5. ' a' → logprob: -8.006027221679688
    6. 'A' → logprob: -10.006027221679688
    7. ')a' → logprob: -10.006027221679688
    8. '[a' → logprob: -10.381027221679688
    9. 'al' → logprob: -11.756027221679688
    10. '	a' → logprob: -12.131027221679688

Token 60: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20442995429039001
    2. ')' → logprob: -2.454429864883423
    3. '))' → logprob: -2.954429864883423
    4. '()*' → logprob: -3.579429864883423
    5. ')*' → logprob: -4.704430103302002
    6. '()' → logprob: -5.454430103302002
    7. ' *' → logprob: -6.079430103302002
    8. '*))' → logprob: -7.079430103302002
    9. '(*' → logprob: -7.454430103302002
    10. '*)' → logprob: -7.579430103302002

Token 61: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.022807570174336433
    2. ' *' → logprob: -4.022807598114014
    3. ')' → logprob: -5.397807598114014
    4. ')*' → logprob: -9.272807121276855
    5. '*)' → logprob: -11.272807121276855
    6. '**' → logprob: -12.272807121276855
    7. '()*' → logprob: -13.022807121276855
    8. '2' → logprob: -13.397807121276855
    9. ',' → logprob: -13.897807121276855
    10. '))' → logprob: -14.147807121276855

Token 62: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002338144404347986
    2. ' ' → logprob: -8.37523365020752
    3. '*' → logprob: -13.37523365020752
    4. '   ' → logprob: -14.25023365020752
    5. '202' → logprob: -15.00023365020752
    6. '  ' → logprob: -15.87523365020752
    7. '200' → logprob: -16.000234603881836
    8. '20' → logprob: -16.125234603881836
    9. ')' → logprob: -16.875234603881836
    10. '```' → logprob: -16.937734603881836

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.684157026233152e-05
    2. '*' → logprob: -10.125077247619629
    3. ' ' → logprob: -10.250077247619629
    4. '   ' → logprob: -14.375077247619629
    5. '  ' → logprob: -15.750077247619629
    6. '```' → logprob: -16.500076293945312
    7. '20' → logprob: -16.625076293945312
    8. ' *' → logprob: -16.750076293945312
    9. '202' → logprob: -16.875076293945312
    10. '200' → logprob: -17.250076293945312

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. ')
' → logprob: -12.625007629394531
    3. '`)' → logprob: -13.500007629394531
    4. '))' → logprob: -13.750007629394531
    5. ' )' → logprob: -13.750007629394531
    6. ')`' → logprob: -15.250007629394531
    7. '')' → logprob: -15.500007629394531
    8. '）' → logprob: -15.500007629394531
    9. '```' → logprob: -16.62500762939453
    10. ')")' → logprob: -17.12500762939453

Token 65: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.005637581925839186
    2. ' else' → logprob: -5.2556376457214355
    3. '\n' → logprob: -8.630637168884277
    4. '<|end|>' → logprob: -9.255637168884277
    5. '
' → logprob: -9.755637168884277
    6. '```' → logprob: -10.255637168884277
    7. ')' → logprob: -11.005637168884277
    8. '_else' → logprob: -12.630637168884277
    9. 'elif' → logprob: -12.880637168884277
    10. 'e' → logprob: -13.005637168884277

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011228336952626705
    2. '   ' → logprob: -7.501122951507568
    3. ':
' → logprob: -7.501122951507568
    4. ' :' → logprob: -11.12612247467041
    5. ' :
' → logprob: -14.12612247467041
    6. ',' → logprob: -14.87612247467041
    7. '):' → logprob: -15.25112247467041
    8. '  ' → logprob: -15.50112247467041
    9. '    ' → logprob: -15.50112247467041
    10. '       ' → logprob: -15.75112247467041

Token 67: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3140432834625244
    2. '   ' → logprob: -1.5640432834625244
    3. 'print' → logprob: -2.8140432834625244
    4. '    ' → logprob: -8.439043045043945
    5. '	print' → logprob: -11.189043045043945
    6. '(print' → logprob: -11.189043045043945
    7. ' ' → logprob: -12.814043045043945
    8. '   ' → logprob: -12.939043045043945
    9. '_print' → logprob: -13.064043045043945
    10. ' prints' → logprob: -13.314043045043945

Token 68: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5759804844856262
    2. ' print' → logprob: -0.8259804844856262
    3. '   ' → logprob: -10.200980186462402
    4. '    ' → logprob: -13.200980186462402
    5. '	print' → logprob: -14.325980186462402
    6. ' ' → logprob: -14.325980186462402
    7. '(print' → logprob: -15.200980186462402
    8. '.print' → logprob: -15.575980186462402
    9. '```' → logprob: -15.950980186462402
    10. '_print' → logprob: -16.07598114013672

Token 69: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -0.0007118358626030385
    2. '(' → logprob: -7.250711917877197
    3. 'as' → logprob: -13.625711441040039
    4. ' (' → logprob: -14.500711441040039
    5. '(a' → logprob: -16.50071144104004
    6. '()' → logprob: -17.50071144104004
    7. '((' → logprob: -17.87571144104004
    8. '(abs' → logprob: -18.00071144104004
    9. '(os' → logprob: -18.37571144104004
    10. '(sum' → logprob: -18.50071144104004

Token 70: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -4.320199877838604e-07
    2. 'u' → logprob: -14.875
    3. 'ум' → logprob: -16.75
    4. 'us' → logprob: -17.25
    5. 'sum' → logprob: -18.0
    6. ' um' → logprob: -18.375
    7. '(' → logprob: -18.375
    8. '_um' → logprob: -19.125
    9. 'umā' → logprob: -19.25
    10. 'umption' → logprob: -19.25

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ' )' → logprob: -12.000006675720215
    3. ')
' → logprob: -16.00000762939453
    4. '*' → logprob: -16.12500762939453
    5. '))' → logprob: -16.25000762939453
    6. '}' → logprob: -16.50000762939453
    7. '```' → logprob: -17.00000762939453
    8. '-' → logprob: -17.12500762939453
    9. '）' → logprob: -17.62500762939453
    10. '+' → logprob: -18.00000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 69
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 57
Précision stricte (1ère position): 27.54%
Précision adaptée (1ère position): 28.99%
Précision (top 10): 82.61%
================================================================================
