================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(eval("input()"))
A = [*map(int, eval("input()").split())]

B = [*map(lambda ix: A[ix]-ix, range(N))]
for _ in range(len(B)):
    for j in range(N-1):
        if B[j] > B[j+1]:
            B[j], B[j+1] = B[j+1], B[j]
b = B[(N>>1)]-bool(int('1'))

ans = sum(abs(A[k] - (b + k + True)) for k in range(N))
print(f"{ans}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(eval' (ID: 126973)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04313426837325096
    2. '('' → logprob: -3.2931342124938965
    3. '("("' → logprob: -5.4181342124938965
    4. '()' → logprob: -8.793134689331055
    5. '(input' → logprob: -8.793134689331055
    6. '(eval' → logprob: -9.418134689331055
    7. '(
' → logprob: -9.793134689331055
    8. ')' → logprob: -9.793134689331055
    9. '(open' → logprob: -10.793134689331055
    10. ''' → logprob: -11.043134689331055

Token 5: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004013934172689915
    2. ''' → logprob: -6.129014015197754
    3. '"))' → logprob: -7.504014015197754
    4. '(input' → logprob: -7.629014015197754
    5. '")' → logprob: -8.379014015197754
    6. '"' → logprob: -9.004014015197754
    7. '''' → logprob: -9.129014015197754
    8. ' input' → logprob: -9.254014015197754
    9. '0' → logprob: -10.629014015197754
    10. '"""' → logprob: -11.004014015197754

Token 6: '()' (ID: 416)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.246148705482483
    2. ')' → logprob: -1.746148705482483
    3. '())' → logprob: -1.746148705482483
    4. '()' → logprob: -2.1211485862731934
    5. '"))' → logprob: -2.3711485862731934
    6. '")' → logprob: -3.1211485862731934
    7. '(""))' → logprob: -3.4961485862731934
    8. '(' → logprob: -3.6211485862731934
    9. '()))' → logprob: -3.6211485862731934
    10. '))' → logprob: -4.371148586273193

Token 7: '"))
' (ID: 10990)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12213335931301117
    2. ')' → logprob: -2.372133255004883
    3. '"))' → logprob: -3.872133255004883
    4. ')))' → logprob: -7.247133255004883
    5. '")' → logprob: -9.872133255004883
    6. ')")' → logprob: -9.997133255004883
    7. '()))' → logprob: -11.372133255004883
    8. ''))' → logprob: -11.872133255004883
    9. '[' → logprob: -11.997133255004883
    10. '")))' → logprob: -12.122133255004883

Token 8: 'A' (ID: 32)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3850196897983551
    2. '+' → logprob: -1.5100196599960327
    3. '#' → logprob: -3.7600197792053223
    4. '\n' → logprob: -3.7600197792053223
    5. '*' → logprob: -3.8850197792053223
    6. '\' → logprob: -5.010019779205322
    7. '**' → logprob: -5.385019779205322
    8. '+
' → logprob: -5.385019779205322
    9. '```' → logprob: -5.510019779205322
    10. '(' → logprob: -5.635019779205322

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004371609538793564
    2. '.' → logprob: -6.379371643066406
    3. '=' → logprob: -7.504371643066406
    4. '[]' → logprob: -7.754371643066406
    5. '[A' → logprob: -8.004371643066406
    6. ' =' → logprob: -8.254371643066406
    7. '+' → logprob: -8.379371643066406
    8. 'A' → logprob: -8.629371643066406
    9. '\[' → logprob: -9.004371643066406
    10. '.append' → logprob: -9.254371643066406

Token 10: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.5216445922851562
    2. '[' → logprob: -1.8966445922851562
    3. 'list' → logprob: -2.0216445922851562
    4. '[]' → logprob: -2.0216445922851562
    5. ' []' → logprob: -2.0216445922851562
    6. ' [' → logprob: -2.2716445922851562
    7. '[input' → logprob: -2.8966445922851562
    8. ' list' → logprob: -3.1466445922851562
    9. 'eval' → logprob: -4.396644592285156
    10. '[list' → logprob: -4.521644592285156

Token 11: '*' (ID: 9)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39315253496170044
    2. 'int' → logprob: -1.1431524753570557
    3. ']' → logprob: -6.143152713775635
    4. ')' → logprob: -6.518152713775635
    5. 'input' → logprob: -7.518152713775635
    6. 'eval' → logprob: -7.518152713775635
    7. ']int' → logprob: -7.643152713775635
    8. 'i' → logprob: -7.893152713775635
    9. ' int' → logprob: -8.018152236938477
    10. ' ' → logprob: -8.893152236938477

Token 12: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.31443971395492554
    2. 'range' → logprob: -1.3144397735595703
    3. 'input' → logprob: -8.06443977355957
    4. '(map' → logprob: -8.31443977355957
    5. ' range' → logprob: -8.43943977355957
    6. ' map' → logprob: -8.81443977355957
    7. '(range' → logprob: -9.18943977355957
    8. 'eval' → logprob: -9.56443977355957
    9. 'iter' → logprob: -10.06443977355957
    10. 'int' → logprob: -10.43943977355957

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12709030508995056
    2. '(' → logprob: -2.1270902156829834
    3. '(
' → logprob: -9.252090454101562
    4. '(eval' → logprob: -10.752090454101562
    5. '(str' → logprob: -11.252090454101562
    6. 'int' → logprob: -11.752090454101562
    7. ' (' → logprob: -11.877090454101562
    8. '(float' → logprob: -12.377090454101562
    9. '(lambda' → logprob: -12.752090454101562
    10. '```' → logprob: -13.127090454101562

Token 14: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.35579177737236023
    2. ',input' → logprob: -2.1057918071746826
    3. '(eval' → logprob: -2.2307918071746826
    4. ',' → logprob: -3.1057918071746826
    5. '(' → logprob: -3.7307918071746826
    6. 'input' → logprob: -7.4807915687561035
    7. 'eval' → logprob: -8.480792045593262
    8. ' (' → logprob: -8.605792045593262
    9. ' ,' → logprob: -8.605792045593262
    10. '(),' → logprob: -10.230792045593262

Token 15: ' eval' (ID: 29383)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03506959229707718
    2. 'eval' → logprob: -3.660069704055786
    3. ' input' → logprob: -4.910069465637207
    4. '(eval' → logprob: -7.535069465637207
    5. ' eval' → logprob: -7.785069465637207
    6. '(input' → logprob: -8.160069465637207
    7. ')' → logprob: -10.910069465637207
    8. 'open' → logprob: -10.910069465637207
    9. ' ' → logprob: -11.035069465637207
    10. '<input' → logprob: -11.285069465637207

Token 16: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.09476369619369507
    2. '("("' → logprob: -2.59476375579834
    3. '(' → logprob: -4.84476375579834
    4. '(input' → logprob: -5.09476375579834
    5. '("(' → logprob: -6.84476375579834
    6. '('' → logprob: -7.46976375579834
    7. '("""' → logprob: -10.71976375579834
    8. '(("' → logprob: -10.84476375579834
    9. '(
' → logprob: -10.96976375579834
    10. ' ("' → logprob: -11.21976375579834

Token 17: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03300970420241356
    2. '(input' → logprob: -3.7830097675323486
    3. '"' → logprob: -4.9080095291137695
    4. '("' → logprob: -6.2830095291137695
    5. ' input' → logprob: -8.15800952911377
    6. '")' → logprob: -9.90800952911377
    7. '(' → logprob: -10.03300952911377
    8. ',input' → logprob: -10.78300952911377
    9. ')' → logprob: -11.40800952911377
    10. '<input' → logprob: -11.78300952911377

Token 18: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004271427169442177
    2. '()))' → logprob: -5.504271507263184
    3. '().' → logprob: -9.254271507263184
    4. '())))' → logprob: -10.004271507263184
    5. '()"' → logprob: -10.129271507263184
    6. '())' → logprob: -12.754271507263184
    7. '()`' → logprob: -13.379271507263184
    8. '`()' → logprob: -13.504271507263184
    9. '"' → logprob: -14.004271507263184
    10. '"))' → logprob: -14.254271507263184

Token 19: '").' (ID: 3172)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002600387902930379
    2. '()))' → logprob: -6.752600193023682
    3. '()' → logprob: -6.877600193023682
    4. '"))' → logprob: -8.37760066986084
    5. '))' → logprob: -10.00260066986084
    6. '.split' → logprob: -10.37760066986084
    7. '())' → logprob: -10.50260066986084
    8. ')' → logprob: -10.87760066986084
    9. '.' → logprob: -11.00260066986084
    10. '())))' → logprob: -11.25260066986084

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009187239338643849
    2. 'strip' → logprob: -7.000918865203857
    3. 'rstrip' → logprob: -12.5009183883667
    4. ' split' → logprob: -12.8759183883667
    5. 'spl' → logprob: -14.6259183883667
    6. 's' → logprob: -15.2509183883667
    7. '(split' → logprob: -15.8759183883667
    8. 'replace' → logprob: -17.125919342041016
    9. ')' → logprob: -17.375919342041016
    10. '.split' → logprob: -17.500919342041016

Token 21: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3681025207042694
    2. '()))' → logprob: -1.8681025505065918
    3. '("' → logprob: -2.743102550506592
    4. '('' → logprob: -2.868102550506592
    5. '()' → logprob: -3.618102550506592
    6. '(' → logprob: -5.743102550506592
    7. '("("' → logprob: -6.618102550506592
    8. '(""))' → logprob: -7.368102550506592
    9. '())))' → logprob: -8.868102073669434
    10. '()]' → logprob: -9.243102073669434

Token 22: ']

' (ID: 3144)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00223185564391315
    2. ')' → logprob: -6.377232074737549
    3. ']' → logprob: -7.627232074737549
    4. ')])' → logprob: -11.25223159790039
    5. '))' → logprob: -11.75223159790039
    6. '')]' → logprob: -11.75223159790039
    7. '])]' → logprob: -12.12723159790039
    8. '")]' → logprob: -13.25223159790039
    9. '])' → logprob: -13.50223159790039
    10. '`]' → logprob: -13.62723159790039

Token 23: 'B' (ID: 33)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1449271440505981
    2. '#' → logprob: -1.2699271440505981
    3. '[' → logprob: -1.7699271440505981
    4. ')' → logprob: -1.8949271440505981
    5. ']' → logprob: -4.144927024841309
    6. '
' → logprob: -4.394927024841309
    7. ' ' → logprob: -4.519927024841309
    8. 'if' → logprob: -4.769927024841309
    9. 'i' → logprob: -5.644927024841309
    10. 'for' → logprob: -5.769927024841309

Token 24: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08521688729524612
    2. '.' → logprob: -2.960216999053955
    3. '=' → logprob: -4.210216999053955
    4. ' =' → logprob: -4.585216999053955
    5. '_' → logprob: -6.460216999053955
    6. '[:]' → logprob: -6.835216999053955
    7. '+' → logprob: -7.710216999053955
    8. ' ' → logprob: -7.710216999053955
    9. ')' → logprob: -8.460216522216797
    10. '[]' → logprob: -8.710216522216797

Token 25: ' [' (ID: 723)
  Prédit: '[*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[*' → logprob: -0.871051013469696
    2. '[' → logprob: -1.1210510730743408
    3. ' [' → logprob: -1.4960510730743408
    4. 'A' → logprob: -3.996051073074341
    5. '[A' → logprob: -5.371050834655762
    6. 'sorted' → logprob: -5.996050834655762
    7. '[]' → logprob: -6.246050834655762
    8. ' A' → logprob: -6.996050834655762
    9. ' []' → logprob: -7.496050834655762
    10. ' sorted' → logprob: -7.621050834655762

Token 26: '*' (ID: 9)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045798588544130325
    2. 'A' → logprob: -4.1707987785339355
    3. 'a' → logprob: -4.1707987785339355
    4. 'x' → logprob: -5.1707987785339355
    5. '*' → logprob: -6.2957987785339355
    6. ' ' → logprob: -6.2957987785339355
    7. 'i' → logprob: -6.9207987785339355
    8. ' A' → logprob: -7.4207987785339355
    9. ' a' → logprob: -7.6707987785339355
    10. ' x' → logprob: -7.6707987785339355

Token 27: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0007935435860417783
    2. ' map' → logprob: -7.25079345703125
    3. 'range' → logprob: -10.12579345703125
    4. 'A' → logprob: -11.25079345703125
    5. 'int' → logprob: -11.37579345703125
    6. '(map' → logprob: -11.50079345703125
    7. '	map' → logprob: -13.50079345703125
    8. 'input' → logprob: -13.75079345703125
    9. ' ' → logprob: -13.87579345703125
    10. 'ma' → logprob: -14.50079345703125

Token 28: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006793171167373657
    2. '(' → logprob: -5.006793022155762
    3. '<int' → logprob: -9.756793022155762
    4. 'int' → logprob: -12.381793022155762
    5. '(lambda' → logprob: -12.631793022155762
    6. ',int' → logprob: -12.756793022155762
    7. ' (' → logprob: -13.131793022155762
    8. ']int' → logprob: -13.131793022155762
    9. '=int' → logprob: -13.381793022155762
    10. '[int' → logprob: -13.631793022155762

Token 29: ' ix' (ID: 44402)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47427910566329956
    2. ' x' → logprob: -0.9742791056632996
    3. 'a' → logprob: -9.099279403686523
    4. ' a' → logprob: -10.224279403686523
    5. ' ' → logprob: -11.599279403686523
    6. 'i' → logprob: -11.724279403686523
    7. 'n' → logprob: -12.349279403686523
    8. ' n' → logprob: -12.599279403686523
    9. ' t' → logprob: -12.724279403686523
    10. 's' → logprob: -12.724279403686523

Token 30: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07309538125991821
    2. ' :' → logprob: -2.8230953216552734
    3. ',' → logprob: -4.698095321655273
    4. ':(' → logprob: -7.323095321655273
    5. ':i' → logprob: -7.573095321655273
    6. ':x' → logprob: -8.448095321655273
    7. ':,' → logprob: -9.448095321655273
    8. ' ,' → logprob: -9.448095321655273
    9. ',:' → logprob: -9.698095321655273
    10. ',i' → logprob: -9.948095321655273

Token 31: ' A' (ID: 355)
  Prédit: ' ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ix' → logprob: -0.6069740653038025
    2. ' A' → logprob: -1.6069741249084473
    3. 'A' → logprob: -1.8569741249084473
    4. 'ix' → logprob: -2.8569741249084473
    5. '(ix' → logprob: -4.606974124908447
    6. ' (' → logprob: -4.731974124908447
    7. 'x' → logprob: -5.356974124908447
    8. '(A' → logprob: -5.731974124908447
    9. 'int' → logprob: -5.981974124908447
    10. ' ' → logprob: -6.231974124908447

Token 32: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.02242949604988098
    2. '[' → logprob: -4.022429466247559
    3. '.index' → logprob: -7.022429466247559
    4. '[index' → logprob: -7.397429466247559
    5. '[i' → logprob: -7.647429466247559
    6. '.__' → logprob: -8.022429466247559
    7. '[]' → logprob: -8.397429466247559
    8. '[:' → logprob: -8.522429466247559
    9. '[int' → logprob: -8.897429466247559
    10. '[len' → logprob: -8.897429466247559

Token 33: ']-' (ID: 27107)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07867174595594406
    2. '-' → logprob: -3.45367169380188
    3. ' +' → logprob: -3.45367169380188
    4. '],' → logprob: -5.203671932220459
    5. '*' → logprob: -6.328671932220459
    6. ' ' → logprob: -6.703671932220459
    7. ']' → logprob: -6.703671932220459
    8. ']+' → logprob: -6.828671932220459
    9. ' -' → logprob: -7.078671932220459
    10. '**' → logprob: -8.5786714553833

Token 34: 'ix' (ID: 1128)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7116337418556213
    2. 'A' → logprob: -0.9616337418556213
    3. 'B' → logprob: -3.8366336822509766
    4. ' A' → logprob: -3.8366336822509766
    5. ' ' → logprob: -3.9616336822509766
    6. '(A' → logprob: -4.086633682250977
    7. ' (' → logprob: -4.086633682250977
    8. '(' → logprob: -4.961633682250977
    9. '(ix' → logprob: -5.211633682250977
    10. 'ix' → logprob: -5.586633682250977

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007937820046208799
    2. ' ,' → logprob: -7.875793933868408
    3. ')' → logprob: -9.12579345703125
    4. ')]' → logprob: -9.37579345703125
    5. '),' → logprob: -9.75079345703125
    6. ',B' → logprob: -10.12579345703125
    7. ' ' → logprob: -10.50079345703125
    8. ',A' → logprob: -10.75079345703125
    9. '+' → logprob: -10.87579345703125
    10. '   ' → logprob: -12.25079345703125

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759555697441101
    2. 'range' → logprob: -0.8259555697441101
    3. ' ' → logprob: -11.700955390930176
    4. '	range' → logprob: -12.700955390930176
    5. '(range' → logprob: -12.950955390930176
    6. ')' → logprob: -14.325955390930176
    7. ' xrange' → logprob: -14.700955390930176
    8. '  ' → logprob: -14.950955390930176
    9. '   ' → logprob: -15.200955390930176
    10. 'rang' → logprob: -15.325955390930176

Token 37: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.1460057944059372
    2. '(len' → logprob: -2.021005868911743
    3. '(' → logprob: -5.771005630493164
    4. '(n' → logprob: -8.896005630493164
    5. 'len' → logprob: -10.271005630493164
    6. 'N' → logprob: -10.396005630493164
    7. '(
' → logprob: -12.896005630493164
    8. '(A' → logprob: -14.521005630493164
    9. '(

' → logprob: -14.521005630493164
    10. '((' → logprob: -14.646005630493164

Token 38: '))]
' (ID: 53695)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006896786508150399
    2. ')]' → logprob: -7.375689506530762
    3. ')' → logprob: -10.500689506530762
    4. ')))' → logprob: -11.375689506530762
    5. '))]
' → logprob: -11.375689506530762
    6. ' ))' → logprob: -12.250689506530762
    7. ')])' → logprob: -12.750689506530762
    8. '),' → logprob: -13.500689506530762
    9. '])]' → logprob: -13.500689506530762
    10. ' ' → logprob: -14.875689506530762

Token 39: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8507591485977173
    2. ')' → logprob: -1.3507591485977173
    3. ']' → logprob: -1.7257591485977173
    4. '<|end|>' → logprob: -3.3507590293884277
    5. ' ' → logprob: -4.100759029388428
    6. ')
' → logprob: -4.350759029388428
    7. '*' → logprob: -4.975759029388428
    8. '\n' → logprob: -4.975759029388428
    9. 'B' → logprob: -5.100759029388428
    10. ' 
' → logprob: -5.100759029388428

Token 40: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2651008367538452
    2. ' ix' → logprob: -1.6401008367538452
    3. '_' → logprob: -4.140100955963135
    4. ' ' → logprob: -4.640100955963135
    5. ' _' → logprob: -5.015100955963135
    6. 'i' → logprob: -5.640100955963135
    7. 'ix' → logprob: -6.640100955963135
    8. ' idx' → logprob: -7.390100955963135
    9. '_i' → logprob: -8.390100479125977
    10. ' x' → logprob: -8.640100479125977

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16089215874671936
    2. 'in' → logprob: -1.910892128944397
    3. ' ' → logprob: -8.035892486572266
    4. '_' → logprob: -8.535892486572266
    5. ' _' → logprob: -9.660892486572266
    6. '  ' → logprob: -9.910892486572266
    7. 'range' → logprob: -11.535892486572266
    8. ',' → logprob: -12.035892486572266
    9. 'n' → logprob: -12.535892486572266
    10. '_in' → logprob: -13.285892486572266

Token 42: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5231800675392151
    2. 'range' → logprob: -0.8981800675392151
    3. 'B' → logprob: -10.39818000793457
    4. ' B' → logprob: -11.39818000793457
    5. '0' → logprob: -12.89818000793457
    6. '(range' → logprob: -13.02318000793457
    7. 'A' → logprob: -13.02318000793457
    8. '	range' → logprob: -13.39818000793457
    9. ' ' → logprob: -13.64818000793457
    10. ' A' → logprob: -13.77318000793457

Token 43: '(len' (ID: 14990)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.02058054879307747
    2. '(' → logprob: -3.895580530166626
    3. 'N' → logprob: -11.270580291748047
    4. '(n' → logprob: -11.645580291748047
    5. '(
' → logprob: -12.520580291748047
    6. '(int' → logprob: -12.520580291748047
    7. '(B' → logprob: -12.645580291748047
    8. ' (' → logprob: -13.145580291748047
    9. '()' → logprob: -14.145580291748047
    10. '(A' → logprob: -14.145580291748047

Token 44: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.02467578649520874
    2. '(A' → logprob: -3.7746758460998535
    3. '(' → logprob: -6.6496758460998535
    4. '(N' → logprob: -10.149675369262695
    5. 'B' → logprob: -10.274675369262695
    6. '(s' → logprob: -11.149675369262695
    7. ')' → logprob: -11.649675369262695
    8. '(S' → logprob: -12.274675369262695
    9. 'A' → logprob: -12.399675369262695
    10. '(C' → logprob: -12.649675369262695

Token 45: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.06308191269636154
    2. '):' → logprob: -3.063081979751587
    3. '))' → logprob: -4.938081741333008
    4. ')' → logprob: -5.688081741333008
    5. '-' → logprob: -5.938081741333008
    6. ')):
' → logprob: -7.688081741333008
    7. ':' → logprob: -8.688081741333008
    8. ')-' → logprob: -9.063081741333008
    9. ' -' → logprob: -9.188081741333008
    10. ' ):' → logprob: -9.688081741333008

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01640968956053257
    2. ' B' → logprob: -5.266409873962402
    3. '    
' → logprob: -5.766409873962402
    4. 'B' → logprob: -6.266409873962402
    5. ' for' → logprob: -6.391409873962402
    6. ' if' → logprob: -7.141409873962402
    7. '<|end|>' → logprob: -7.516409873962402
    8. ' 
' → logprob: -7.766409873962402
    9. '    ' → logprob: -8.016409873962402
    10. ' ' → logprob: -8.266409873962402

Token 47: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46169424057006836
    2. 'B' → logprob: -2.2116942405700684
    3. 'print' → logprob: -2.5866942405700684
    4. ' B' → logprob: -3.3366942405700684
    5. 'i' → logprob: -3.5866942405700684
    6. ' for' → logprob: -3.8366942405700684
    7. 'for' (adapté à ' for') → logprob: -3.8366942405700684
    8. ' print' → logprob: -4.086694240570068
    9. ' i' → logprob: -4.211694240570068
    10. 'max' → logprob: -4.336694240570068

Token 48: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3933946192264557
    2. ' i' → logprob: -2.143394708633423
    3. '_' → logprob: -2.893394708633423
    4. ' _' → logprob: -3.143394708633423
    5. ' N' → logprob: -3.268394708633423
    6. ' j' → logprob: -3.518394708633423
    7. ' len' → logprob: -4.268394470214844
    8. ' range' → logprob: -5.143394470214844
    9. 'N' → logprob: -5.393394470214844
    10. 'j' → logprob: -5.518394470214844

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07094722241163254
    2. 'in' → logprob: -2.6959471702575684
    3. ' ' → logprob: -7.570947170257568
    4. 'range' → logprob: -8.570947647094727
    5. '+' → logprob: -9.320947647094727
    6. ' range' → logprob: -9.445947647094727
    7. '  ' → logprob: -9.820947647094727
    8. '   ' → logprob: -10.070947647094727
    9. '	in' → logprob: -11.445947647094727
    10. ',' → logprob: -11.445947647094727

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740941822528839
    2. 'range' → logprob: -0.9740941524505615
    3. '(range' → logprob: -11.97409439086914
    4. ' ' → logprob: -12.47409439086914
    5. '	range' → logprob: -12.72409439086914
    6. '   ' → logprob: -13.09909439086914
    7. ' xrange' → logprob: -14.09909439086914
    8. 'ange' → logprob: -15.22409439086914
    9. '  ' → logprob: -15.72409439086914
    10. '_range' → logprob: -15.72409439086914

Token 51: '(N' (ID: 10564)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.5676454305648804
    2. '(N' → logprob: -1.0676454305648804
    3. '(' → logprob: -2.44264554977417
    4. '(_' → logprob: -6.44264554977417
    5. '(n' → logprob: -8.192645072937012
    6. '(j' → logprob: -8.442645072937012
    7. 'len' → logprob: -9.317645072937012
    8. '1' → logprob: -9.817645072937012
    9. '(i' → logprob: -9.942645072937012
    10. '_' → logprob: -9.942645072937012

Token 52: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11371239274740219
    2. '):' → logprob: -2.9887123107910156
    3. ' -' → logprob: -3.1137123107910156
    4. '):
' → logprob: -4.488712310791016
    5. '   ' → logprob: -6.738712310791016
    6. ' ' → logprob: -9.488712310791016
    7. ' ):' → logprob: -9.613712310791016
    8. ')' → logprob: -9.863712310791016
    9. '1' → logprob: -10.738712310791016
    10. '):
' → logprob: -11.488712310791016

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000333320174831897
    2. ' ' → logprob: -8.125333786010742
    3. '-' → logprob: -10.625333786010742
    4. '   ' → logprob: -11.625333786010742
    5. '  ' → logprob: -13.625333786010742
    6. '2' → logprob: -14.250333786010742
    7. ' -' → logprob: -14.375333786010742
    8. ')' → logprob: -14.625333786010742
    9. '    ' → logprob: -14.875333786010742
    10. '_' → logprob: -16.000333786010742

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2225421816110611
    2. '):
' → logprob: -1.8475421667099
    3. '-' → logprob: -3.7225422859191895
    4. ' -' → logprob: -4.2225422859191895
    5. '):
' → logprob: -6.8475422859191895
    6. ' ):' → logprob: -6.8475422859191895
    7. ')' → logprob: -8.222541809082031
    8. '   ' → logprob: -8.347541809082031
    9. ' ):
' → logprob: -8.972541809082031
    10. ' ' → logprob: -9.222541809082031

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004331845324486494
    2. '    ' → logprob: -6.754332065582275
    3. '<|end|>' → logprob: -6.879332065582275
    4. ' if' → logprob: -7.004332065582275
    5. ' ' → logprob: -7.754332065582275
    6. '   ' → logprob: -8.379331588745117
    7. '        ' → logprob: -9.254331588745117
    8. '        
' → logprob: -9.629331588745117
    9. '```' → logprob: -9.629331588745117
    10. 'if' → logprob: -9.754331588745117

Token 56: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08877705782651901
    2. 'if' (adapté à ' if') → logprob: -2.8387770652770996
    3. '           ' → logprob: -3.7137770652770996
    4. '   ' → logprob: -6.4637770652771
    5. ' ' → logprob: -8.338776588439941
    6. '	if' → logprob: -9.338776588439941
    7. '       ' → logprob: -9.963776588439941
    8. '```' → logprob: -10.338776588439941
    9. '    ' → logprob: -10.838776588439941
    10. '<|end|>' → logprob: -11.588776588439941

Token 57: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6931820511817932
    2. ' B' → logprob: -0.6931820511817932
    3. '   ' → logprob: -11.693181991577148
    4. '    ' → logprob: -12.193181991577148
    5. '(B' → logprob: -12.193181991577148
    6. ' ' → logprob: -12.693181991577148
    7. '	B' → logprob: -12.693181991577148
    8. 'abs' → logprob: -12.943181991577148
    9. '>B' → logprob: -13.193181991577148
    10. ' abs' → logprob: -13.193181991577148

Token 58: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.002015121281147003
    2. '[' → logprob: -6.252015113830566
    3. '>' → logprob: -9.877015113830566
    4. ' [' → logprob: -11.252015113830566
    5. '[i' → logprob: -12.127015113830566
    6. '>[' → logprob: -12.252015113830566
    7. ' >' → logprob: -12.502015113830566
    8. 'j' → logprob: -12.877015113830566
    9. '```' → logprob: -13.752015113830566
    10. ']' → logprob: -14.252015113830566

Token 59: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04885191097855568
    2. ' >' → logprob: -3.04885196685791
    3. '>B' → logprob: -9.04885196685791
    4. '<' → logprob: -9.67385196685791
    5. ')' → logprob: -10.17385196685791
    6. ' <' → logprob: -11.42385196685791
    7. ' ' → logprob: -11.79885196685791
    8. ')>' → logprob: -12.29885196685791
    9. '>b' → logprob: -12.67385196685791
    10. '+' → logprob: -12.79885196685791

Token 60: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16051016747951508
    2. ' >' → logprob: -1.9105101823806763
    3. '<' → logprob: -8.535510063171387
    4. ' <' → logprob: -9.910510063171387
    5. ' ' → logprob: -10.785510063171387
    6. '>B' → logprob: -11.285510063171387
    7. '>b' → logprob: -13.910510063171387
    8. '>`' → logprob: -14.785510063171387
    9. '><' → logprob: -14.910510063171387
    10. '```' → logprob: -14.910510063171387

Token 61: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12695960700511932
    2. ' B' → logprob: -2.1269595623016357
    3. '>B' → logprob: -11.251959800720215
    4. ' ' → logprob: -12.126959800720215
    5. '0' → logprob: -12.251959800720215
    6. '	B' → logprob: -13.251959800720215
    7. '   ' → logprob: -13.376959800720215
    8. '<|end|>' → logprob: -13.751959800720215
    9. '           ' → logprob: -14.376959800720215
    10. '       ' → logprob: -14.376959800720215

Token 62: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00012523093027994037
    2. 'j' → logprob: -9.62512493133545
    3. '[' → logprob: -9.87512493133545
    4. '+' → logprob: -12.75012493133545
    5. '+j' → logprob: -13.37512493133545
    6. '	j' → logprob: -14.12512493133545
    7. '```' → logprob: -14.12512493133545
    8. '[
' → logprob: -14.25012493133545
    9. ' j' → logprob: -14.87512493133545
    10. '[js' → logprob: -15.87512493133545

Token 63: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001028523431159556
    2. ' +' → logprob: -7.376028537750244
    3. '+j' → logprob: -8.001028060913086
    4. '1' → logprob: -9.876028060913086
    5. ']' → logprob: -12.751028060913086
    6. '+]' → logprob: -12.876028060913086
    7. '[j' → logprob: -13.251028060913086
    8. '+
' → logprob: -13.251028060913086
    9. ']+' → logprob: -13.251028060913086
    10. ' ' → logprob: -14.126028060913086

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -11.125027656555176
    3. '   ' → logprob: -12.125027656555176
    4. '```' → logprob: -12.625027656555176
    5. '0' → logprob: -13.937527656555176
    6. ')' → logprob: -14.250027656555176
    7. '2' → logprob: -15.000027656555176
    8. 'j' → logprob: -15.125027656555176
    9. '  ' → logprob: -15.375027656555176
    10. '`' → logprob: -15.437527656555176

Token 65: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018994679674506187
    2. '):
' → logprob: -4.1439948081970215
    3. ' ):' → logprob: -6.3939948081970215
    4. ':' → logprob: -7.0189948081970215
    5. ')' → logprob: -8.643994331359863
    6. ' ):
' → logprob: -9.893994331359863
    7. ']:' → logprob: -9.893994331359863
    8. '):
' → logprob: -9.893994331359863
    9. '):

' → logprob: -11.643994331359863
    10. '<|end|>' → logprob: -11.768994331359863

Token 66: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031338706612586975
    2. ' ' → logprob: -7.003133773803711
    3. '#' → logprob: -8.003133773803711
    4. ' B' → logprob: -8.128133773803711
    5. '            
' → logprob: -8.378133773803711
    6. ',' → logprob: -8.503133773803711
    7. '<|end|>' → logprob: -8.753133773803711
    8. ' 
' → logprob: -8.878133773803711
    9. '               ' → logprob: -9.128133773803711
    10. '       ' → logprob: -9.753133773803711

Token 67: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.6333644986152649
    2. ' B' → logprob: -0.7583644986152649
    3. '           ' → logprob: -7.258364677429199
    4. '               ' → logprob: -10.1333646774292
    5. '```' → logprob: -12.5083646774292
    6. 'A' → logprob: -12.7583646774292
    7. '            ' → logprob: -12.7583646774292
    8. ' A' → logprob: -13.6333646774292
    9. 'b' → logprob: -13.6333646774292
    10. '   ' → logprob: -13.8833646774292

Token 68: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004598631348926574
    2. '[' → logprob: -8.500459671020508
    3. ',j' → logprob: -8.500459671020508
    4. ',' → logprob: -10.000459671020508
    5. 'j' → logprob: -12.500459671020508
    6. '```' → logprob: -14.000459671020508
    7. '.swap' → logprob: -14.000459671020508
    8. '.' → logprob: -14.250459671020508
    9. '[
' → logprob: -15.750459671020508
    10. 'swap' → logprob: -15.875459671020508

Token 69: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.07541677355766296
    2. ']' → logprob: -2.7004168033599854
    3. ' ],' → logprob: -5.575416564941406
    4. '>,' → logprob: -7.325416564941406
    5. ',' → logprob: -8.200416564941406
    6. ' ]' → logprob: -8.450416564941406
    7. '>' → logprob: -8.700416564941406
    8. '+' → logprob: -9.075416564941406
    9. ']>' → logprob: -9.700416564941406
    10. ''],' → logprob: -10.575416564941406

Token 70: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.47411900758743286
    2. 'B' → logprob: -0.9741190075874329
    3. '           ' → logprob: -11.099119186401367
    4. ' ' → logprob: -11.849119186401367
    5. '            ' → logprob: -11.849119186401367
    6. '<|end|>' → logprob: -11.849119186401367
    7. '    ' → logprob: -13.474119186401367
    8. '        ' → logprob: -14.099119186401367
    9. '	B' → logprob: -14.349119186401367
    10. '   ' → logprob: -14.349119186401367

Token 71: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00018280261429026723
    2. '+' → logprob: -9.37518310546875
    3. '[' → logprob: -9.37518310546875
    4. 'j' → logprob: -12.12518310546875
    5. '[
' → logprob: -13.50018310546875
    6. '```' → logprob: -13.50018310546875
    7. '][' → logprob: -13.62518310546875
    8. '+j' → logprob: -14.50018310546875
    9. '+[' → logprob: -14.87518310546875
    10. '>[' → logprob: -15.37518310546875

Token 72: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005406428826972842
    2. '+j' → logprob: -8.000540733337402
    3. ' +' → logprob: -8.750540733337402
    4. '+]' → logprob: -10.250540733337402
    5. '1' → logprob: -12.375540733337402
    6. '+B' → logprob: -13.250540733337402
    7. ']' → logprob: -13.750540733337402
    8. '[j' → logprob: -14.125540733337402
    9. '+"]' → logprob: -14.125540733337402
    10. '   ' → logprob: -14.500540733337402

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.875000953674316
    3. '0' → logprob: -15.000000953674316
    4. '<|end|>' → logprob: -15.125000953674316
    5. '```' → logprob: -16.437501907348633
    6. 's' → logprob: -16.937501907348633
    7. '`' → logprob: -17.500001907348633
    8. ']' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '[' → logprob: -18.250001907348633

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00874895229935646
    2. '=' → logprob: -5.383749008178711
    3. ']=' → logprob: -5.508749008178711
    4. ' ]' → logprob: -10.758749008178711
    5. '<|end|>' → logprob: -11.133749008178711
    6. ' =' → logprob: -11.383749008178711
    7. '>' → logprob: -12.383749008178711
    8. ')' → logprob: -12.508749008178711
    9. '+' → logprob: -12.883749008178711
    10. ' ' → logprob: -13.258749008178711

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018155209720134735
    2. ' =' → logprob: -4.018155097961426
    3. ',' → logprob: -12.893155097961426
    4. '=
' → logprob: -13.268155097961426
    5. '=B' → logprob: -15.143155097961426
    6. '=

' → logprob: -15.268155097961426
    7. '<|end|>' → logprob: -15.893155097961426
    8. ' ' → logprob: -16.518156051635742
    9. ' =
' → logprob: -16.768156051635742
    10. '.=' → logprob: -16.893156051635742

Token 76: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4740781784057617
    2. ' B' → logprob: -0.9740781784057617
    3. '<|end|>' → logprob: -14.599078178405762
    4. ' ' → logprob: -15.349078178405762
    5. '	B' → logprob: -15.599078178405762
    6. '>B' → logprob: -16.599079132080078
    7. ' ' → logprob: -17.099079132080078
    8. '           ' → logprob: -17.724079132080078
    9. '```' → logprob: -17.849079132080078
    10. '(B' → logprob: -17.849079132080078

Token 77: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.306760805164231e-05
    2. '[' → logprob: -11.37501335144043
    3. 'j' → logprob: -13.62501335144043
    4. '[
' → logprob: -16.12501335144043
    5. '```' → logprob: -16.87501335144043
    6. ' ' → logprob: -17.12501335144043
    7. ' [' → logprob: -17.37501335144043
    8. '	j' → logprob: -17.37501335144043
    9. '[i' → logprob: -17.50001335144043
    10. ',j' → logprob: -17.50001335144043

Token 78: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.133198283147067e-05
    2. '+j' → logprob: -11.000051498413086
    3. '[j' → logprob: -11.000051498413086
    4. '+,' → logprob: -11.875051498413086
    5. '],' → logprob: -12.375051498413086
    6. ' +' → logprob: -13.125051498413086
    7. '1' → logprob: -13.875051498413086
    8. ',j' → logprob: -14.125051498413086
    9. ',' → logprob: -14.375051498413086
    10. '+B' → logprob: -14.750051498413086

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.047134305234067e-05
    2. ' ' → logprob: -10.625030517578125
    3. '<|end|>' → logprob: -13.750030517578125
    4. '0' → logprob: -13.875030517578125
    5. '146' → logprob: -14.375030517578125
    6. '+' → logprob: -14.750030517578125
    7. '11' → logprob: -14.937530517578125
    8. '   ' → logprob: -15.312530517578125
    9. '14' → logprob: -15.750030517578125
    10. '41' → logprob: -15.937530517578125

Token 80: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005669722449965775
    2. '],' → logprob: -8.375567436218262
    3. ' ,' → logprob: -8.375567436218262
    4. ']' → logprob: -9.750567436218262
    5. ',B' → logprob: -10.625567436218262
    6. ',j' → logprob: -11.500567436218262
    7. '<|end|>' → logprob: -12.750567436218262
    8. 'B' → logprob: -13.000567436218262
    9. '   ' → logprob: -13.500567436218262
    10. ' ' → logprob: -13.625567436218262

Token 81: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00317783304490149
    2. ' B' → logprob: -5.753177642822266
    3. '<|end|>' → logprob: -16.378177642822266
    4. ' ' → logprob: -18.128177642822266
    5. '	B' → logprob: -18.628177642822266
    6. 'b' → logprob: -19.753177642822266
    7. '```' → logprob: -19.878177642822266
    8. '>B' → logprob: -19.878177642822266
    9. ' ' → logprob: -20.378177642822266
    10. '_B' → logprob: -20.503177642822266

Token 82: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.7159857786027715e-05
    2. '[' → logprob: -10.125046730041504
    3. 'j' → logprob: -12.625046730041504
    4. '[
' → logprob: -13.500046730041504
    5. '```' → logprob: -13.500046730041504
    6. '[js' → logprob: -15.000046730041504
    7. '   ' → logprob: -16.37504768371582
    8. '<|end|>' → logprob: -16.50004768371582
    9. ']' → logprob: -16.75004768371582
    10. '	j' → logprob: -16.87504768371582

Token 83: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3524668514728546
    2. ')' → logprob: -1.2274668216705322
    3. '<|end|>' → logprob: -5.602467060089111
    4. ')]' → logprob: -8.977466583251953
    5. '}' → logprob: -9.602466583251953
    6. ']
' → logprob: -9.727466583251953
    7. ')
' → logprob: -10.602466583251953
    8. '<|end|>' → logprob: -11.352466583251953
    9. '```' → logprob: -11.852466583251953
    10. '']' → logprob: -12.602466583251953

Token 84: 'b' (ID: 65)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.151289939880371
    2. '#' → logprob: -1.401289939880371
    3. ')' → logprob: -1.901289939880371
    4. '[' → logprob: -2.651289939880371
    5. 'B' → logprob: -2.901289939880371
    6. ']' → logprob: -3.151289939880371
    7. '```' → logprob: -3.776289939880371
    8. '<|end|>' → logprob: -3.901289939880371
    9. 'A' → logprob: -4.276289939880371
    10. ' ' → logprob: -4.276289939880371

Token 85: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2719106078147888
    2. 'r' → logprob: -2.6469106674194336
    3. 'u' → logprob: -3.3969106674194336
    4. ']' → logprob: -3.8969106674194336
    5. '[]' → logprob: -4.021910667419434
    6. 'reak' → logprob: -4.146910667419434
    7. 'print' → logprob: -4.646910667419434
    8. '-' → logprob: -5.021910667419434
    9. '[i' → logprob: -5.021910667419434
    10. '[:]' → logprob: -5.146910667419434

Token 86: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.141598179936409
    2. ' B' → logprob: -2.2665982246398926
    3. '0' → logprob: -4.516598224639893
    4. '[' → logprob: -4.891598224639893
    5. '[]' → logprob: -6.391598224639893
    6. ' [' → logprob: -6.516598224639893
    7. 'max' → logprob: -6.766598224639893
    8. ' ' → logprob: -6.891598224639893
    9. '[B' → logprob: -6.891598224639893
    10. 'len' → logprob: -7.141598224639893

Token 87: '[(' (ID: 20542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4559068977832794
    2. '<|end|>' → logprob: -1.705906867980957
    3. '.' → logprob: -2.080906867980957
    4. '[:]' → logprob: -3.955906867980957
    5. '```' → logprob: -5.455906867980957
    6. 'b' → logprob: -5.580906867980957
    7. '#' → logprob: -5.580906867980957
    8. '[-' → logprob: -5.705906867980957
    9. '[::-' → logprob: -5.830906867980957
    10. ')' → logprob: -5.955906867980957

Token 88: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03514198586344719
    2. 'len' → logprob: -3.410141944885254
    3. ' N' → logprob: -6.660141944885254
    4. ' len' → logprob: -9.410141944885254
    5. '0' → logprob: -10.410141944885254
    6. '(len' → logprob: -10.410141944885254
    7. ')' → logprob: -10.910141944885254
    8. '(N' → logprob: -11.160141944885254
    9. 'n' → logprob: -11.285141944885254
    10. ' (' → logprob: -12.035141944885254

Token 89: '>>' (ID: 3920)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030226415023207664
    2. '//' → logprob: -3.905226469039917
    3. ' -' → logprob: -5.280226230621338
    4. ')//' → logprob: -5.780226230621338
    5. ')' → logprob: -6.655226230621338
    6. ' //' → logprob: -9.280226707458496
    7. '1' → logprob: -10.530226707458496
    8. ' )' → logprob: -11.155226707458496
    9. ' ' → logprob: -11.280226707458496
    10. '−' → logprob: -12.905226707458496

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.875016212463379
    3. '```' → logprob: -13.062516212463379
    4. '   ' → logprob: -13.562516212463379
    5. '2' → logprob: -14.062516212463379
    6. '' → logprob: -14.437516212463379
    7. '0' → logprob: -14.687516212463379
    8. ' ' → logprob: -14.750016212463379
    9. '' → logprob: -14.937516212463379
    10. '``' → logprob: -15.187516212463379

Token 91: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0026283347979187965
    2. ')' → logprob: -6.002628326416016
    3. ']' → logprob: -9.127628326416016
    4. ' )' → logprob: -10.752628326416016
    5. ')]
' → logprob: -12.127628326416016
    6. ')-' → logprob: -12.752628326416016
    7. ')]

' → logprob: -12.752628326416016
    8. '1' → logprob: -13.252628326416016
    9. ')//' → logprob: -13.502628326416016
    10. ')+' → logprob: -13.627628326416016

Token 92: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: 'bool' (ID: 9037)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3433976471424103
    2. '(N' → logprob: -1.718397617340088
    3. '0' → logprob: -2.843397617340088
    4. 'B' → logprob: -3.843397617340088
    5. 'N' → logprob: -4.968397617340088
    6. '(B' → logprob: -4.968397617340088
    7. '(' → logprob: -5.468397617340088
    8. '((' → logprob: -6.343397617340088
    9. ' ' → logprob: -6.343397617340088
    10. ' (' → logprob: -6.593397617340088

Token 94: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.509000301361084
    2. '(B' → logprob: -1.509000301361084
    3. '(b' → logprob: -1.884000301361084
    4. '(A' → logprob: -4.634000301361084
    5. '((' → logprob: -5.134000301361084
    6. '(N' → logprob: -5.384000301361084
    7. '(len' → logprob: -6.009000301361084
    8. '(a' → logprob: -6.884000301361084
    9. '(not' → logprob: -7.634000301361084
    10. '(n' → logprob: -8.134000778198242

Token 95: '('' (ID: 706)
  Prédit: '(eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(eval' → logprob: -1.1989127397537231
    2. '(' → logprob: -1.4489127397537231
    3. '(input' → logprob: -1.6989127397537231
    4. '(A' → logprob: -2.3239126205444336
    5. '("' → logprob: -2.5739126205444336
    6. '('' → logprob: -3.1989126205444336
    7. '(B' → logprob: -3.1989126205444336
    8. '(b' → logprob: -4.323912620544434
    9. ')' → logprob: -5.948912620544434
    10. '(N' → logprob: -6.323912620544434

Token 96: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5493000149726868
    2. '(input' → logprob: -2.424299955368042
    3. '(eval' → logprob: -2.549299955368042
    4. '(' → logprob: -2.924299955368042
    5. 'eval' → logprob: -2.924299955368042
    6. 'A' → logprob: -3.299299955368042
    7. 'B' → logprob: -3.924299955368042
    8. '0' → logprob: -4.049300193786621
    9. '('' → logprob: -4.174300193786621
    10. '(A' → logprob: -4.424300193786621

Token 97: ''))

' (ID: 58153)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7486827969551086
    2. '1' → logprob: -1.3736827373504639
    3. ''' → logprob: -2.623682737350464
    4. ''))' → logprob: -3.373682737350464
    5. '000' → logprob: -3.623682737350464
    6. '01' → logprob: -3.623682737350464
    7. '111' → logprob: -3.748682737350464
    8. '00' → logprob: -3.998682737350464
    9. '010' → logprob: -3.998682737350464
    10. '')' → logprob: -5.248682975769043

Token 98: 'ans' (ID: 616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5110262036323547
    2. '=' → logprob: -1.01102614402771
    3. '(' → logprob: -3.63602614402771
    4. '_' → logprob: -5.386026382446289
    5. ')' → logprob: -6.136026382446289
    6. 's' → logprob: -7.386026382446289
    7. ' ' → logprob: -7.386026382446289
    8. ''' → logprob: -8.386026382446289
    9. '[' → logprob: -8.886026382446289
    10. ' +=' → logprob: -9.011026382446289

Token 100: ' sum' (ID: 4215)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.8103731274604797
    2. 'b' → logprob: -1.310373067855835
    3. ' ' → logprob: -2.810373067855835
    4. '0' → logprob: -2.935373067855835
    5. ' abs' → logprob: -3.435373067855835
    6. 'abs' → logprob: -3.560373067855835
    7. ' B' → logprob: -3.935373067855835
    8. ''' → logprob: -4.435373306274414
    9. 'B' → logprob: -4.435373306274414
    10. ' max' → logprob: -4.685373306274414

Token 101: '(abs' (ID: 71957)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6077477931976318
    2. '(x' → logprob: -1.8577477931976318
    3. '(B' → logprob: -2.357747793197632
    4. '(abs' → logprob: -2.607747793197632
    5. '(b' → logprob: -2.982747793197632
    6. '(i' → logprob: -2.982747793197632
    7. '([' → logprob: -4.482748031616211
    8. '(A' → logprob: -5.232748031616211
    9. '(a' → logprob: -5.357748031616211
    10. '((' → logprob: -6.107748031616211

Token 102: '(A' (ID: 10706)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.0181431770324707
    2. '(B' → logprob: -1.0181431770324707
    3. '(x' → logprob: -1.6431431770324707
    4. '(A' → logprob: -3.2681431770324707
    5. '(a' → logprob: -3.5181431770324707
    6. '(i' → logprob: -4.893143177032471
    7. '((' → logprob: -5.143143177032471
    8. '(' → logprob: -6.393143177032471
    9. '(v' → logprob: -8.518142700195312
    10. '(ai' → logprob: -8.643142700195312

Token 103: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003131784324068576
    2. '[j' → logprob: -8.500312805175781
    3. '[ix' → logprob: -9.250312805175781
    4. '[' → logprob: -12.625312805175781
    5. '[idx' → logprob: -12.625312805175781
    6. '[k' → logprob: -12.875312805175781
    7. '[x' → logprob: -13.500312805175781
    8. '[_' → logprob: -14.375312805175781
    9. '[n' → logprob: -14.750312805175781
    10. '[ii' → logprob: -15.000312805175781

Token 104: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17041294276714325
    2. ' -' → logprob: -2.420413017272949
    3. '-b' → logprob: -3.295413017272949
    4. '-k' → logprob: -3.545413017272949
    5. ')' → logprob: -7.420413017272949
    6. ']-' → logprob: -7.920413017272949
    7. ']' → logprob: -8.17041301727295
    8. ')-' → logprob: -8.79541301727295
    9. '-(' → logprob: -9.29541301727295
    10. '-)' → logprob: -9.67041301727295

Token 105: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2629607319831848
    2. ' -' → logprob: -1.63796067237854
    3. '-b' → logprob: -4.137960910797119
    4. '-k' → logprob: -4.512960910797119
    5. '-(' → logprob: -4.637960910797119
    6. ' -(' → logprob: -9.887960433959961
    7. '-B' → logprob: -10.012960433959961
    8. ')-(' → logprob: -10.512960433959961
    9. ' ' → logprob: -11.387960433959961
    10. 'b' → logprob: -11.387960433959961

Token 106: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.3939167559146881
    2. '(k' → logprob: -1.1439167261123657
    3. ' (' → logprob: -6.143916606903076
    4. 'b' → logprob: -6.518916606903076
    5. '(' → logprob: -6.768916606903076
    6. '((' → logprob: -7.143916606903076
    7. '(B' → logprob: -7.268916606903076
    8. 'k' → logprob: -8.018917083740234
    9. '(A' → logprob: -8.893917083740234
    10. '(j' → logprob: -9.393917083740234

Token 107: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11717572063207626
    2. 'k' → logprob: -2.367175817489624
    3. '(k' → logprob: -4.367175579071045
    4. '(b' → logprob: -5.617175579071045
    5. 'B' → logprob: -8.867176055908203
    6. ' b' → logprob: -9.242176055908203
    7. ' (' → logprob: -10.242176055908203
    8. ')b' → logprob: -10.242176055908203
    9. '(' → logprob: -10.492176055908203
    10. ')' → logprob: -10.617176055908203

Token 108: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7511647939682007
    2. '+k' → logprob: -0.7511647939682007
    3. ' +' → logprob: -2.8761649131774902
    4. '+j' → logprob: -12.376164436340332
    5. ')' → logprob: -13.001164436340332
    6. ' ' → logprob: -13.001164436340332
    7. '+
' → logprob: -13.501164436340332
    8. 'k' → logprob: -13.626164436340332
    9. '+b' → logprob: -14.126164436340332
    10. ')+' → logprob: -14.251164436340332

Token 109: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.7697225252486533e-06
    2. ' k' → logprob: -12.625003814697266
    3. '1' → logprob: -15.625003814697266
    4. ')' → logprob: -16.375003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '+k' → logprob: -17.000003814697266
    7. ' ' → logprob: -18.375003814697266
    8. '	k' → logprob: -18.375003814697266
    9. '(k' → logprob: -18.875003814697266
    10. '
' → logprob: -18.875003814697266

Token 110: ' +' (ID: 659)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00031854258850216866
    2. '))
' → logprob: -9.00031852722168
    3. ')' → logprob: -9.37531852722168
    4. ')))' → logprob: -9.87531852722168
    5. ' ))' → logprob: -10.62531852722168
    6. ' ' → logprob: -11.87531852722168
    7. '1' → logprob: -12.12531852722168
    8. ''))' → logprob: -12.62531852722168
    9. '**' → logprob: -12.87531852722168
    10. '```' → logprob: -13.37531852722168

Token 111: ' True' (ID: 6432)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01782175712287426
    2. '))' → logprob: -4.267821788787842
    3. ' ' → logprob: -5.892821788787842
    4. ')' → logprob: -7.517821788787842
    5. '0' → logprob: -8.642821311950684
    6. ' ))' → logprob: -9.767821311950684
    7. ')))' → logprob: -10.767821311950684
    8. ''))' → logprob: -11.392821311950684
    9. '))
' → logprob: -11.517821311950684
    10. '  ' → logprob: -11.642821311950684

Token 112: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0018343955744057894
    2. ')))' → logprob: -6.876834392547607
    3. '))
' → logprob: -7.876834392547607
    4. ')' → logprob: -8.626834869384766
    5. ' ))' → logprob: -10.126834869384766
    6. ' ' → logprob: -10.251834869384766
    7. '1' → logprob: -10.501834869384766
    8. ')))
' → logprob: -10.876834869384766
    9. '(k' → logprob: -11.001834869384766
    10. '**' → logprob: -11.126834869384766

Token 113: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010270876373397186
    2. 'for' → logprob: -9.625102996826172
    3. ' for' → logprob: -10.750102996826172
    4. ' )' → logprob: -11.625102996826172
    5. ')
' → logprob: -13.125102996826172
    6. '))' → logprob: -13.625102996826172
    7. 'k' → logprob: -14.625102996826172
    8. ' k' → logprob: -14.875102996826172
    9. ' ' → logprob: -15.000102996826172
    10. '[k' → logprob: -15.125102996826172

Token 114: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.19405989348888397
    2. ' range' → logprob: -2.3190598487854004
    3. 'k' → logprob: -2.6940598487854004
    4. 'range' → logprob: -4.5690598487854
    5. ' ' → logprob: -10.694060325622559
    6. '(range' → logprob: -11.569060325622559
    7. ' xrange' → logprob: -12.569060325622559
    8. '<|end|>' → logprob: -13.069060325622559
    9. ')' → logprob: -13.194060325622559
    10. '	k' → logprob: -13.444060325622559

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03967560827732086
    2. 'in' → logprob: -3.289675712585449
    3. ' range' → logprob: -6.789675712585449
    4. 'range' → logprob: -8.03967571258545
    5. '<|end|>' → logprob: -8.66467571258545
    6. ')' → logprob: -12.41467571258545
    7. '(range' → logprob: -12.41467571258545
    8. ' ' → logprob: -13.53967571258545
    9. '	range' → logprob: -13.66467571258545
    10. ' xrange' → logprob: -14.28967571258545

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759432315826416
    2. ' range' → logprob: -0.8259432315826416
    3. '(range' → logprob: -12.950942993164062
    4. '	range' → logprob: -13.825942993164062
    5. ')' → logprob: -15.325942993164062
    6. ' xrange' → logprob: -16.325942993164062
    7. ' ' → logprob: -16.575942993164062
    8. '.range' → logprob: -17.200942993164062
    9. 'rang' → logprob: -17.450942993164062
    10. 'Range' → logprob: -18.450942993164062

Token 117: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00010008628305513412
    2. '(' → logprob: -9.375100135803223
    3. 'N' → logprob: -11.375100135803223
    4. '(n' → logprob: -13.250100135803223
    5. '(len' → logprob: -14.125100135803223
    6. '(
' → logprob: -14.625100135803223
    7. ' (' → logprob: -15.250100135803223
    8. ')' → logprob: -15.625100135803223
    9. ' N' → logprob: -15.875100135803223
    10. '   ' → logprob: -16.875099182128906

Token 118: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001872094871941954
    2. '))' → logprob: -8.625186920166016
    3. ')
' → logprob: -12.250186920166016
    4. ' )' → logprob: -14.375186920166016
    5. ')}' → logprob: -14.375186920166016
    6. ')))' → logprob: -15.375186920166016
    7. ')`' → logprob: -15.500186920166016
    8. ')**' → logprob: -15.625186920166016
    9. ')#' → logprob: -16.125186920166016
    10. ')return' → logprob: -16.375186920166016

Token 119: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0021268262062221766
    2. '<|end|>' → logprob: -6.502126693725586
    3. '
' → logprob: -8.002126693725586
    4. ')' → logprob: -8.877126693725586
    5. ' print' → logprob: -9.627126693725586
    6. '#' → logprob: -10.752126693725586
    7. '\n' → logprob: -10.752126693725586
    8. '#print' → logprob: -11.877126693725586
    9. '(print' → logprob: -12.127126693725586
    10. 'p' → logprob: -12.752126693725586

Token 120: '(f' (ID: 1526)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.4741440713405609
    2. '(' → logprob: -0.9741441011428833
    3. '('' → logprob: -11.224143981933594
    4. ' (' → logprob: -11.474143981933594
    5. '(abs' → logprob: -11.724143981933594
    6. '("("' → logprob: -11.974143981933594
    7. '(answer' → logprob: -12.099143981933594
    8. 'ans' → logprob: -12.724143981933594
    9. '(`' → logprob: -12.724143981933594
    10. '()' → logprob: -12.724143981933594

Token 121: '"{' (ID: 27510)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.536523699760437
    2. ')' → logprob: -2.0365238189697266
    3. '{' → logprob: -2.2865238189697266
    4. '"' → logprob: -3.2865238189697266
    5. '")' → logprob: -3.5365238189697266
    6. '(' → logprob: -3.5365238189697266
    7. '"{' → logprob: -3.7865238189697266
    8. 'ans' → logprob: -3.9115238189697266
    9. '({' → logprob: -4.536523818969727
    10. '{})' → logprob: -4.911523818969727

Token 122: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001895935565698892
    2. ' ans' → logprob: -9.250189781188965
    3. 'b' → logprob: -9.750189781188965
    4. '(ans' → logprob: -11.125189781188965
    5. ''' → logprob: -12.375189781188965
    6. 'a' → logprob: -12.750189781188965
    7. 'abs' → logprob: -12.875189781188965
    8. 'round' → logprob: -13.375189781188965
    9. '	ans' → logprob: -13.375189781188965
    10. 'int' → logprob: -13.625189781188965

Token 123: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.00025394887779839337
    2. '}' → logprob: -9.375253677368164
    3. '})' → logprob: -9.375253677368164
    4. ')")' → logprob: -10.250253677368164
    5. '")' → logprob: -10.750253677368164
    6. ')}' → logprob: -11.625253677368164
    7. '}")
' → logprob: -12.125253677368164
    8. ')' → logprob: -12.500253677368164
    9. '}')' → logprob: -12.875253677368164
    10. ' }' → logprob: -13.000253677368164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 121
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 42.98%
Précision adaptée (1ère position): 43.80%
Précision (top 10): 76.03%
================================================================================
