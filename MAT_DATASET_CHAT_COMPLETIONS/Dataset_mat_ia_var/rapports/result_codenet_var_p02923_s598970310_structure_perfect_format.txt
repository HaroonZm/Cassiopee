================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
h = list(map(int, input().split()))
ans = 0
cnt = 0
for i in range(1, n):
    if h[i] <= h[i - 1]:
        cnt += 1
    else:
        ans = max(ans, cnt)
        cnt = 0
print(max(ans, cnt))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 'h' (ID: 71)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16065798699855804
    2. 'e' → logprob: -2.4106578826904297
    3. '[i' → logprob: -3.1606578826904297
    4. 'i' → logprob: -5.28565788269043
    5. 'a' → logprob: -6.16065788269043
    6. ' =' → logprob: -6.16065788269043
    7. '=' → logprob: -6.66065788269043
    8. '[e' → logprob: -6.78565788269043
    9. 't' → logprob: -7.41065788269043
    10. ')' → logprob: -7.41065788269043

Token 7: ' list' (ID: 1562)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1551450490951538
    2. ' n' → logprob: -1.5301450490951538
    3. ' ' → logprob: -2.0301451683044434
    4. 'n' → logprob: -2.1551451683044434
    5. ' []' → logprob: -2.4051451683044434
    6. ' [' → logprob: -3.2801451683044434
    7. '[]' → logprob: -3.6551451683044434
    8. '1' → logprob: -4.030145168304443
    9. 'int' → logprob: -4.530145168304443
    10. ' int' → logprob: -4.655145168304443

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006367852329276502
    2. '(range' → logprob: -7.875636577606201
    3. '()' → logprob: -10.00063705444336
    4. '(input' → logprob: -10.62563705444336
    5. '("("' → logprob: -10.75063705444336
    6. '('' → logprob: -11.12563705444336
    7. '(
' → logprob: -11.12563705444336
    8. '(h' → logprob: -11.12563705444336
    9. '((' → logprob: -11.25063705444336
    10. '(open' → logprob: -11.25063705444336

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6044569611549377
    2. '(int' → logprob: -0.8544569611549377
    3. '(str' → logprob: -3.729456901550293
    4. '(input' → logprob: -6.354456901550293
    5. '(lambda' → logprob: -6.854456901550293
    6. 'int' → logprob: -7.729456901550293
    7. '(eval' → logprob: -8.229456901550293
    8. ')' → logprob: -8.979456901550293
    9. '<int' → logprob: -9.729456901550293
    10. '```' → logprob: -10.104456901550293

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01215958222746849
    2. '(' → logprob: -4.51215934753418
    3. ',input' → logprob: -7.51215934753418
    4. ')' → logprob: -9.01215934753418
    5. '))' → logprob: -9.01215934753418
    6. '(int' → logprob: -9.51215934753418
    7. ',' → logprob: -10.01215934753418
    8. '=input' → logprob: -10.38715934753418
    9. '(eval' → logprob: -10.38715934753418
    10. 'input' → logprob: -10.63715934753418

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008660659193992615
    2. ' input' → logprob: -4.758660793304443
    3. '(input' → logprob: -10.008660316467285
    4. ',input' → logprob: -14.258660316467285
    5. '=input' → logprob: -15.383660316467285
    6. ')' → logprob: -16.1336612701416
    7. '	input' → logprob: -16.7586612701416
    8. '<input' → logprob: -17.1336612701416
    9. '[input' → logprob: -18.2586612701416
    10. ' ' → logprob: -18.3836612701416

Token 12: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.8897342085838318
    2. '()))' → logprob: -0.8897342085838318
    3. '()' → logprob: -1.8897342681884766
    4. '())' → logprob: -3.7647342681884766
    5. '()));' → logprob: -6.139734268188477
    6. '))' → logprob: -7.139734268188477
    7. '(' → logprob: -7.889734268188477
    8. ')' → logprob: -8.264734268188477
    9. '());' → logprob: -8.889734268188477
    10. '()>' → logprob: -9.014734268188477

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00021438424300868064
    2. 'strip' → logprob: -8.500214576721191
    3. 'rstrip' → logprob: -11.625214576721191
    4. ' split' → logprob: -13.375214576721191
    5. '(split' → logprob: -15.000214576721191
    6. 'spl' → logprob: -16.625213623046875
    7. ')' → logprob: -17.500213623046875
    8. 's' → logprob: -18.875213623046875
    9. 'read' → logprob: -19.375213623046875
    10. 'startswith' → logprob: -19.625213623046875

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3810763657093048
    2. '()))' → logprob: -1.8810763359069824
    3. ')' → logprob: -2.0060763359069824
    4. '())' → logprob: -3.7560763359069824
    5. '(' → logprob: -5.506076335906982
    6. '()' → logprob: -6.256076335906982
    7. ')))' → logprob: -8.50607681274414
    8. '('' → logprob: -8.75607681274414
    9. ''))' → logprob: -9.25607681274414
    10. '(','' → logprob: -10.75607681274414

Token 15: 'ans' (ID: 616)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3950692415237427
    2. 'c' → logprob: -1.8950692415237427
    3. 'm' → logprob: -2.020069122314453
    4. 'h' → logprob: -2.020069122314453
    5. 'd' → logprob: -2.395069122314453
    6. 'dp' → logprob: -2.520069122314453
    7. 'a' → logprob: -3.145069122314453
    8. 's' → logprob: -3.520069122314453
    9. 'count' → logprob: -4.145069122314453
    10. 'for' → logprob: -4.270069122314453

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8196940422058105
    2. ' =' → logprob: -1.0696940422058105
    3. '=' → logprob: -1.5696940422058105
    4. '[' → logprob: -5.0696940422058105
    5. '_=' → logprob: -7.6946940422058105
    6. ' ' → logprob: -8.194694519042969
    7. '(' → logprob: -8.319694519042969
    8. '[:]' → logprob: -8.569694519042969
    9. 's' → logprob: -9.069694519042969
    10. ' +=' → logprob: -9.069694519042969

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13682037591934204
    2. ' ' → logprob: -2.2618203163146973
    3. ' h' → logprob: -5.261820316314697
    4. 'h' → logprob: -5.386820316314697
    5. '[' → logprob: -5.386820316314697
    6. ' [' → logprob: -5.761820316314697
    7. ' n' → logprob: -6.511820316314697
    8. 'n' → logprob: -6.886820316314697
    9. 'max' → logprob: -7.011820316314697
    10. ' max' → logprob: -7.136820316314697

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0758264809846878
    2. 'max' → logprob: -2.950826406478882
    3. '[' → logprob: -4.825826644897461
    4. 'h' → logprob: -4.950826644897461
    5. '[max' → logprob: -6.825826644897461
    6. 'n' → logprob: -6.950826644897461
    7. '[]' → logprob: -7.075826644897461
    8. '[h' → logprob: -7.200826644897461
    9. 'len' → logprob: -7.575826644897461
    10. '-' → logprob: -8.200826644897461

Token 19: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6111108064651489
    2. 'for' → logprob: -0.9861108064651489
    3. '
' → logprob: -2.8611106872558594
    4. '\n' → logprob: -4.111110687255859
    5. ' 
' → logprob: -5.611110687255859
    6. ' ' → logprob: -5.861110687255859
    7. '' → logprob: -6.611110687255859
    8. '\' → logprob: -7.236110687255859
    9. '<|end|>' → logprob: -7.736110687255859
    10. 'i' → logprob: -8.11111068725586

Token 20: 'cnt' (ID: 33160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005537479883059859
    2. '```' → logprob: -8.250554084777832
    3. ' for' → logprob: -9.000554084777832
    4. 'i' → logprob: -9.125554084777832
    5. '``' → logprob: -10.500554084777832
    6. 'prev' → logprob: -11.500554084777832
    7. 'd' → logprob: -11.750554084777832
    8. 'max' → logprob: -12.250554084777832
    9. 'b' → logprob: -13.500554084777832
    10. 'h' → logprob: -13.625554084777832

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13688983023166656
    2. '=' → logprob: -2.761889934539795
    3. ' +=' → logprob: -2.886889934539795
    4. '_' → logprob: -5.011889934539795
    5. ' ' → logprob: -7.011889934539795
    6. '+=' → logprob: -7.386889934539795
    7. '+' → logprob: -7.886889934539795
    8. ')' → logprob: -9.636889457702637
    9. '_space' → logprob: -10.011889457702637
    10. '  ' → logprob: -10.136889457702637

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08011806011199951
    2. ' ' → logprob: -2.580118179321289
    3. '1' → logprob: -6.705118179321289
    4. ' ' → logprob: -14.705118179321289
    5. '  ' → logprob: -14.955118179321289
    6. ')' → logprob: -15.080118179321289
    7. '```' → logprob: -15.080118179321289
    8. '`' → logprob: -15.767618179321289
    9. 'n' → logprob: -16.14261817932129
    10. '   ' → logprob: -16.20511817932129

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007267155218869448
    2. '1' → logprob: -5.007266998291016
    3. ' ' → logprob: -7.507266998291016
    4. 'h' → logprob: -14.569766998291016
    5. '-' → logprob: -14.819766998291016
    6. 'n' → logprob: -14.882266998291016
    7. '[' → logprob: -15.694766998291016
    8. 'a' → logprob: -16.194766998291016
    9. ' ' → logprob: -16.319766998291016
    10. '2' → logprob: -16.632266998291016

Token 24: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06231653690338135
    2. ' for' → logprob: -2.812316417694092
    3. '\n' → logprob: -8.56231689453125
    4. '
' → logprob: -9.43731689453125
    5. '```' → logprob: -9.56231689453125
    6. '<|end|>' → logprob: -12.68731689453125
    7. '\' → logprob: -13.68731689453125
    8. '	for' → logprob: -13.93731689453125
    9. 'n' → logprob: -14.31231689453125
    10. '' → logprob: -14.31231689453125

Token 25: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004147376399487257
    2. ' for' → logprob: -5.504147529602051
    3. '```' → logprob: -10.25414752960205
    4. '\n' → logprob: -10.50414752960205
    5. '\' → logprob: -12.87914752960205
    6. '
' → logprob: -13.25414752960205
    7. '' → logprob: -14.87914752960205
    8. '`' → logprob: -14.87914752960205
    9. 'f' → logprob: -15.37914752960205
    10. 'n' → logprob: -15.62914752960205

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16448169946670532
    2. 'i' → logprob: -1.9144816398620605
    3. ' h' → logprob: -5.9144816398620605
    4. ' x' → logprob: -7.4144816398620605
    5. 'h' → logprob: -7.9144816398620605
    6. 'x' → logprob: -8.164482116699219
    7. ' ' → logprob: -8.539482116699219
    8. ' v' → logprob: -10.539482116699219
    9. ' _' → logprob: -11.289482116699219
    10. '_' → logprob: -11.539482116699219

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023908568546175957
    2. 'in' → logprob: -3.7739086151123047
    3. ' ' → logprob: -7.523908615112305
    4. '  ' → logprob: -9.773908615112305
    5. '+' → logprob: -10.773908615112305
    6. '	in' → logprob: -11.773908615112305
    7. ' <' → logprob: -12.523908615112305
    8. ')' → logprob: -12.773908615112305
    9. '_' → logprob: -12.898908615112305
    10. '   ' → logprob: -13.023908615112305

Token 28: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03972442075610161
    2. ' range' → logprob: -3.289724349975586
    3. 'h' → logprob: -6.539724349975586
    4. ' h' → logprob: -8.414724349975586
    5. ' ' → logprob: -12.039724349975586
    6. '(range' → logprob: -12.914724349975586
    7. '   ' → logprob: -13.414724349975586
    8. ')' → logprob: -13.789724349975586
    9. 'n' → logprob: -13.789724349975586
    10. 'r' → logprob: -14.039724349975586

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2147483378648758
    2. '(len' → logprob: -1.7147483825683594
    3. '(n' → logprob: -4.339748382568359
    4. ' (' → logprob: -8.96474838256836
    5. '(range' → logprob: -9.58974838256836
    6. '(
' → logprob: -13.08974838256836
    7. '(i' → logprob: -13.46474838256836
    8. '((' → logprob: -13.46474838256836
    9. '(length' → logprob: -13.58974838256836
    10. ' ' → logprob: -13.83974838256836

Token 30: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2587529420852661
    2. '1' → logprob: -1.5087529420852661
    3. 'len' → logprob: -5.008752822875977
    4. ' n' → logprob: -9.508752822875977
    5. '0' → logprob: -11.008752822875977
    6. '(n' → logprob: -11.508752822875977
    7. ' len' → logprob: -12.258752822875977
    8. ' ' → logprob: -12.383752822875977
    9. '   ' → logprob: -12.758752822875977
    10. '(' → logprob: -13.008752822875977

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07247180491685867
    2. ' ,' → logprob: -3.197471857070923
    3. ',n' → logprob: -3.822471857070923
    4. ',len' → logprob: -5.572471618652344
    5. '(n' → logprob: -7.322471618652344
    6. ')' → logprob: -7.447471618652344
    7. '(len' → logprob: -7.697471618652344
    8. '(' → logprob: -7.697471618652344
    9. ' n' → logprob: -8.072471618652344
    10. '):' → logprob: -8.072471618652344

Token 32: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010095883626490831
    2. 'len' → logprob: -7.126009464263916
    3. ' n' → logprob: -8.501009941101074
    4. ' len' → logprob: -13.251009941101074
    5. ')n' → logprob: -16.751008987426758
    6. '1' → logprob: -17.376008987426758
    7. ')' → logprob: -17.751008987426758
    8. '   ' → logprob: -18.001008987426758
    9. '	n' → logprob: -18.126008987426758
    10. 'length' → logprob: -18.501008987426758

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001649220648687333
    2. '):
' → logprob: -9.625164985656738
    3. ' ):' → logprob: -9.625164985656738
    4. ')' → logprob: -11.125164985656738
    5. ':' → logprob: -11.375164985656738
    6. ',' → logprob: -13.125164985656738
    7. '+' → logprob: -13.500164985656738
    8. '():' → logprob: -13.750164985656738
    9. '}:' → logprob: -14.500164985656738
    10. '):

' → logprob: -15.250164985656738

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1210397481918335
    2. ' ' → logprob: -2.496039867401123
    3. ':' → logprob: -4.621039867401123
    4. ' if' → logprob: -4.746039867401123
    5. '```' → logprob: -5.371039867401123
    6. '    ' → logprob: -5.496039867401123
    7. '<|end|>' → logprob: -7.121039867401123
    8. '  ' → logprob: -7.246039867401123
    9. ' 
' → logprob: -7.246039867401123
    10. '    
' → logprob: -7.996039867401123

Token 35: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.38750478625297546
    2. ' if' → logprob: -1.1375048160552979
    3. '   ' → logprob: -8.387504577636719
    4. '    ' → logprob: -8.762504577636719
    5. ' ' → logprob: -9.137504577636719
    6. '```' → logprob: -9.387504577636719
    7. '	if' → logprob: -10.387504577636719
    8. 'If' → logprob: -11.762504577636719
    9. '       ' → logprob: -12.012504577636719
    10. '  ' → logprob: -13.137504577636719

Token 36: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04865493252873421
    2. ' h' → logprob: -3.0486550331115723
    3. '   ' → logprob: -9.923654556274414
    4. ' ' → logprob: -11.923654556274414
    5. '(h' → logprob: -12.173654556274414
    6. '	h' → logprob: -13.173654556274414
    7. 'abs' → logprob: -13.423654556274414
    8. '    ' → logprob: -13.923654556274414
    9. '[h' → logprob: -13.923654556274414
    10. '  ' → logprob: -14.423654556274414

Token 37: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013527374248951674
    2. '[' → logprob: -6.626352787017822
    3. '[h' → logprob: -10.626352310180664
    4. '[ii' → logprob: -14.751352310180664
    5. '[I' → logprob: -15.126352310180664
    6. '\[' → logprob: -15.126352310180664
    7. '[n' → logprob: -15.126352310180664
    8. '[index' → logprob: -15.501352310180664
    9. '[j' → logprob: -15.501352310180664
    10. ' [' → logprob: -15.876352310180664

Token 38: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.18366500735282898
    2. ']' → logprob: -2.0586650371551514
    3. ']>=' → logprob: -4.058664798736572
    4. '>=' → logprob: -4.558664798736572
    5. ']>' → logprob: -5.433664798736572
    6. ' >' → logprob: -5.433664798736572
    7. '">' → logprob: -6.808664798736572
    8. ' >=' → logprob: -7.183664798736572
    9. ']==' → logprob: -7.558664798736572
    10. ' ' → logprob: -7.933664798736572

Token 39: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.8624757528305054
    2. '>=' → logprob: -0.9874757528305054
    3. ' <=' → logprob: -2.362475872039795
    4. ' >=' → logprob: -2.987475872039795
    5. '==' → logprob: -3.362475872039795
    6. '>' → logprob: -4.612475872039795
    7. '<' → logprob: -4.987475872039795
    8. ' ==' → logprob: -4.987475872039795
    9. '```' → logprob: -6.737475872039795
    10. ' <' → logprob: -7.112475872039795

Token 40: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0003815756645053625
    2. ' h' → logprob: -7.8753814697265625
    3. '   ' → logprob: -14.250381469726562
    4. '	h' → logprob: -14.625381469726562
    5. ' ' → logprob: -16.125381469726562
    6. '```' → logprob: -16.125381469726562
    7. '`' → logprob: -17.250381469726562
    8. ' ' → logprob: -17.250381469726562
    9. '  ' → logprob: -17.375381469726562
    10. '[h' → logprob: -17.625381469726562

Token 41: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.000007629394531
    3. ' [' → logprob: -15.000007629394531
    4. 'i' → logprob: -15.375007629394531
    5. '[j' → logprob: -15.750007629394531
    6. '```' → logprob: -16.00000762939453
    7. '[h' → logprob: -16.37500762939453
    8. '[
' → logprob: -16.87500762939453
    9. '   ' → logprob: -17.37500762939453
    10. '[s' → logprob: -17.87500762939453

Token 42: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0053176009096205235
    2. '-' → logprob: -5.255317687988281
    3. '[' → logprob: -9.505317687988281
    4. '```' → logprob: -12.505317687988281
    5. '[-' → logprob: -13.755317687988281
    6. '   ' → logprob: -13.880317687988281
    7. ' -' → logprob: -14.005317687988281
    8. '1' → logprob: -14.505317687988281
    9. '[j' → logprob: -14.505317687988281
    10. '[index' → logprob: -14.630317687988281

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.500012397766113
    3. ']' → logprob: -14.000012397766113
    4. '```' → logprob: -14.625012397766113
    5. '   ' → logprob: -15.312512397766113
    6. ')' → logprob: -15.500012397766113
    7. '`' → logprob: -15.875012397766113
    8. '  ' → logprob: -17.125011444091797
    9. '`)' → logprob: -17.187511444091797
    10. '])' → logprob: -17.500011444091797

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. ']' → logprob: -17.4375
    4. '```' → logprob: -17.875
    5. '１' → logprob: -17.9375
    6. '१' → logprob: -18.3125
    7. '۱' → logprob: -18.625
    8. '১' → logprob: -18.875
    9. '2' → logprob: -19.0
    10. '0' → logprob: -19.125

Token 45: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11677858233451843
    2. ':' → logprob: -2.241778612136841
    3. '):
' → logprob: -5.616778373718262
    4. ')' → logprob: -8.991778373718262
    5. ':
' → logprob: -8.991778373718262
    6. ' ):' → logprob: -10.491778373718262
    7. '):
' → logprob: -11.616778373718262
    8. '       ' → logprob: -11.741778373718262
    9. '   ' → logprob: -11.866778373718262
    10. ']:' → logprob: -12.491778373718262

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04068814218044281
    2. ':' → logprob: -3.2906880378723145
    3. '   ' → logprob: -6.5406880378723145
    4. ':
' → logprob: -7.4156880378723145
    5. '<|end|>' → logprob: -9.415688514709473
    6. '\n' → logprob: -9.540688514709473
    7. '
' → logprob: -9.665688514709473
    8. '        
' → logprob: -9.665688514709473
    9. '	' → logprob: -9.790688514709473
    10. '```' → logprob: -10.290688514709473

Token 47: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.012157111428678036
    2. ' cnt' → logprob: -4.512156963348389
    3. '	cnt' → logprob: -7.762156963348389
    4. '       ' → logprob: -8.137157440185547
    5. '   ' → logprob: -8.637157440185547
    6. '```' → logprob: -9.262157440185547
    7. '
' → logprob: -10.262157440185547
    8. '[cnt' → logprob: -10.512157440185547
    9. 'count' → logprob: -11.512157440185547
    10. '_cnt' → logprob: -11.637157440185547

Token 48: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0877785012125969
    2. '+' → logprob: -3.3377785682678223
    3. '+=' → logprob: -3.5877785682678223
    4. ' =' → logprob: -4.087778568267822
    5. '=' → logprob: -6.087778568267822
    6. ' +' → logprob: -6.337778568267822
    7. ' ' → logprob: -10.462778091430664
    8. '++' → logprob: -11.837778091430664
    9. '<|end|>' → logprob: -12.837778091430664
    10. '0' → logprob: -13.462778091430664

Token 49: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.75009536743164
    4. '１' → logprob: -19.00009536743164
    5. '0' → logprob: -19.25009536743164
    6. '+' → logprob: -20.18759536743164
    7. ' ' → logprob: -20.75009536743164
    8. '  ' → logprob: -20.93759536743164
    9. '१' → logprob: -21.12509536743164
    10. '۱' → logprob: -21.18759536743164

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -15.375005722045898
    4. '１' → logprob: -18.3125057220459
    5. '-' → logprob: -18.5000057220459
    6. '+' → logprob: -19.3750057220459
    7. '   ' → logprob: -19.5000057220459
    8. '11' → logprob: -19.8125057220459
    9. 'a' → logprob: -20.2500057220459
    10. '```' → logprob: -20.2500057220459

Token 51: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26840466260910034
    2. 'else' → logprob: -1.5184047222137451
    3. ' else' → logprob: -4.143404483795166
    4. '	else' → logprob: -8.018404960632324
    5. '```' → logprob: -9.268404960632324
    6. '       ' → logprob: -11.518404960632324
    7. '    
' → logprob: -11.768404960632324
    8. ')' → logprob: -12.143404960632324
    9. '<|end|>' → logprob: -12.393404960632324
    10. '_else' → logprob: -12.768404960632324

Token 52: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1927655041217804
    2. ' else' → logprob: -1.942765474319458
    3. '   ' → logprob: -3.442765474319458
    4. '	else' → logprob: -10.317765235900879
    5. '```' → logprob: -12.442765235900879
    6. '_else' → logprob: -13.567765235900879
    7. ')' → logprob: -13.817765235900879
    8. ' ' → logprob: -14.442765235900879
    9. '  ' → logprob: -14.817765235900879
    10. 'elif' → logprob: -14.942765235900879

Token 53: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2016926407814026
    2. ' else' → logprob: -1.7016925811767578
    3. '   ' → logprob: -8.201692581176758
    4. '	else' → logprob: -12.451692581176758
    5. '```' → logprob: -14.576692581176758
    6. ' ' → logprob: -15.451692581176758
    7. '_else' → logprob: -15.826692581176758
    8. 'elif' → logprob: -16.076692581176758
    9. '       ' → logprob: -16.451692581176758
    10. ')' → logprob: -16.826692581176758

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028773918747901917
    2. ':
' → logprob: -5.877877235412598
    3. '   ' → logprob: -10.252877235412598
    4. '       ' → logprob: -10.627877235412598
    5. ' :' → logprob: -11.752877235412598
    6. ':
' → logprob: -13.877877235412598
    7. ' :
' → logprob: -14.127877235412598
    8. '<|end|>' → logprob: -14.252877235412598
    9. '    ' → logprob: -14.502877235412598
    10. ':

' → logprob: -14.752877235412598

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06615224480628967
    2. '   ' → logprob: -3.316152334213257
    3. 'cnt' → logprob: -4.066152095794678
    4. ' cnt' → logprob: -5.441152095794678
    5. '
' → logprob: -5.566152095794678
    6. '    
' → logprob: -6.816152095794678
    7. '```' → logprob: -8.066152572631836
    8. '``' → logprob: -8.691152572631836
    9. '        
' → logprob: -8.941152572631836
    10. '    ' → logprob: -9.191152572631836

Token 56: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4600299596786499
    2. 'ans' (adapté à ' ans') → logprob: -1.21002995967865
    3. ' cnt' → logprob: -3.7100300788879395
    4. 'cnt' → logprob: -3.7100300788879395
    5. ' if' → logprob: -4.7100300788879395
    6. '
' → logprob: -4.9600300788879395
    7. '   ' → logprob: -6.3350300788879395
    8. ' 
' → logprob: -6.7100300788879395
    9. 'if' → logprob: -7.0850300788879395
    10. '       ' → logprob: -7.3350300788879395

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002746742684394121
    2. ' +=' → logprob: -6.00274658203125
    3. '=' → logprob: -8.25274658203125
    4. '+=' → logprob: -12.00274658203125
    5. ' ' → logprob: -13.50274658203125
    6. ' +' → logprob: -13.87774658203125
    7. '+' → logprob: -14.12774658203125
    8. '=max' → logprob: -14.37774658203125
    9. 'max' → logprob: -15.12774658203125
    10. ' >' → logprob: -15.75274658203125

Token 58: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07889044284820557
    2. ' max' → logprob: -2.578890323638916
    3. 'cnt' → logprob: -15.078890800476074
    4. '	max' → logprob: -15.578890800476074
    5. '(max' → logprob: -16.203889846801758
    6. '=max' → logprob: -17.703889846801758
    7. '[max' → logprob: -17.828889846801758
    8. ' ' → logprob: -18.203889846801758
    9. ' cnt' → logprob: -18.328889846801758
    10. '   ' → logprob: -18.578889846801758

Token 59: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47435182332992554
    2. '(ans' → logprob: -0.9743518233299255
    3. '(cnt' → logprob: -8.22435188293457
    4. ' (' → logprob: -13.34935188293457
    5. '(
' → logprob: -13.59935188293457
    6. '(count' → logprob: -13.72435188293457
    7. '(answer' → logprob: -14.09935188293457
    8. 'ans' → logprob: -14.47435188293457
    9. '(

' → logprob: -14.59935188293457
    10. '(max' → logprob: -14.72435188293457

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011367550177965313
    2. ' ,' → logprob: -9.500113487243652
    3. ',c' → logprob: -10.375113487243652
    4. 'cnt' → logprob: -12.375113487243652
    5. '(cnt' → logprob: -13.000113487243652
    6. '	cnt' → logprob: -15.000113487243652
    7. '[cnt' → logprob: -15.250113487243652
    8. ' cnt' → logprob: -15.750113487243652
    9. '，' → logprob: -16.62511444091797
    10. ' ' → logprob: -16.62511444091797

Token 61: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.03805262967944145
    2. 'cnt' → logprob: -3.288052558898926
    3. '	cnt' → logprob: -11.788052558898926
    4. '(cnt' → logprob: -12.788052558898926
    5. '[cnt' → logprob: -14.163052558898926
    6. '_cnt' → logprob: -16.788053512573242
    7. ' ' → logprob: -17.288053512573242
    8. ' ' → logprob: -17.413053512573242
    9. ' ctr' → logprob: -18.163053512573242
    10. ')' → logprob: -18.538053512573242

Token 62: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06214895099401474
    2. ')' → logprob: -2.8121490478515625
    3. ')
' → logprob: -9.062149047851562
    4. ' )
' → logprob: -9.812149047851562
    5. ')

' → logprob: -12.812149047851562
    6. '       ' → logprob: -12.937149047851562
    7. '
' → logprob: -13.437149047851562
    8. ')\' → logprob: -13.937149047851562
    9. ' )' → logprob: -14.187149047851562
    10. '）
' → logprob: -14.562149047851562

Token 63: '       ' (ID: 309)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.10766643285751343
    2. '       ' → logprob: -2.482666492462158
    3. '   ' → logprob: -4.357666492462158
    4. '	cnt' → logprob: -5.232666492462158
    5. ' cnt' → logprob: -9.107666015625
    6. '```' → logprob: -9.357666015625
    7. '[cnt' → logprob: -9.857666015625
    8. '	   ' → logprob: -10.357666015625
    9. '
' → logprob: -11.107666015625
    10. '           ' → logprob: -11.232666015625

Token 64: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0001017551330733113
    2. ' cnt' → logprob: -9.250102043151855
    3. '	cnt' → logprob: -12.375102043151855
    4. '   ' → logprob: -14.000102043151855
    5. '       ' → logprob: -15.000102043151855
    6. '[cnt' → logprob: -16.50010108947754
    7. '(cnt' → logprob: -16.87510108947754
    8. 'count' → logprob: -17.25010108947754
    9. '0' → logprob: -17.25010108947754
    10. '_cnt' → logprob: -17.87510108947754

Token 65: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889363914728165
    2. ' =' → logprob: -2.5788936614990234
    3. '0' → logprob: -12.578893661499023
    4. '＝' → logprob: -14.703893661499023
    5. '<|end|>' → logprob: -16.828893661499023
    6. ' ' → logprob: -16.953893661499023
    7. '.=' → logprob: -17.828893661499023
    8. 's' → logprob: -18.078893661499023
    9. ' =)' → logprob: -18.703893661499023
    10. '=}' → logprob: -18.828893661499023

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '۰' → logprob: -19.500003814697266
    4. '０' → logprob: -19.875003814697266
    5. '000' → logprob: -20.750003814697266
    6. '1' → logprob: -21.125003814697266
    7. '00' → logprob: -21.500003814697266
    8. '   ' → logprob: -21.875003814697266
    9. '०' → logprob: -22.000003814697266
    10. '০' → logprob: -22.125003814697266

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -18.75
    4. '０' → logprob: -18.875
    5. '000' → logprob: -19.0
    6. '00' → logprob: -19.875
    7. '০' → logprob: -20.375
    8. '०' → logprob: -20.5
    9. '   ' → logprob: -21.125
    10. '1' → logprob: -21.125

Token 68: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0025839817244559526
    2. 'print' → logprob: -6.002583980560303
    3. '
' → logprob: -9.377584457397461
    4. '```' → logprob: -11.627584457397461
    5. ' ans' → logprob: -12.127584457397461
    6. '(ans' → logprob: -12.502584457397461
    7. 'else' → logprob: -13.377584457397461
    8. 'answer' → logprob: -13.502584457397461
    9. 'a' → logprob: -14.377584457397461
    10. '0' → logprob: -15.002584457397461

Token 69: 'print' (ID: 1598)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.023261552676558495
    2. 'print' → logprob: -3.773261547088623
    3. '```' → logprob: -12.023262023925781
    4. 'else' → logprob: -12.898262023925781
    5. '(ans' → logprob: -12.898262023925781
    6. ' ans' → logprob: -13.273262023925781
    7. 'answer' → logprob: -13.523262023925781
    8. '
' → logprob: -14.273262023925781
    9. 'a' → logprob: -14.648262023925781
    10. '#' → logprob: -14.898262023925781

Token 70: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20155026018619537
    2. '(ans' → logprob: -1.7015502452850342
    3. '(max' → logprob: -9.326550483703613
    4. '()' → logprob: -10.451550483703613
    5. '('' → logprob: -11.326550483703613
    6. '("("' → logprob: -13.701550483703613
    7. 'ans' → logprob: -13.951550483703613
    8. '(len' → logprob: -13.951550483703613
    9. '(answer' → logprob: -14.201550483703613
    10. '(
' → logprob: -14.451550483703613

Token 71: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.03864792734384537
    2. '(' → logprob: -3.2886478900909424
    3. '(cnt' → logprob: -7.4136481285095215
    4. ')' → logprob: -13.288647651672363
    5. ' (' → logprob: -14.913647651672363
    6. '(answer' → logprob: -15.288647651672363
    7. '(

' → logprob: -15.663647651672363
    8. '(count' → logprob: -15.788647651672363
    9. '(nums' → logprob: -16.03864860534668
    10. '(
' → logprob: -16.03864860534668

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1160349458805285e-05
    2. ',c' → logprob: -11.625011444091797
    3. ' ,' → logprob: -13.125011444091797
    4. '(cnt' → logprob: -16.375011444091797
    5. ',
' → logprob: -17.250011444091797
    6. '，' → logprob: -18.625011444091797
    7. ')' → logprob: -18.875011444091797
    8. ',

' → logprob: -19.250011444091797
    9. '[cnt' → logprob: -19.250011444091797
    10. ',max' → logprob: -20.125011444091797

Token 73: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.023246875032782555
    2. ' cnt' → logprob: -3.7732467651367188
    3. '(cnt' → logprob: -13.898246765136719
    4. '	cnt' → logprob: -15.023246765136719
    5. '[cnt' → logprob: -16.89824676513672
    6. '_cnt' → logprob: -18.02324676513672
    7. 'cn' → logprob: -19.64824676513672
    8. 'count' → logprob: -19.64824676513672
    9. ' ' → logprob: -19.89824676513672
    10. 'c' → logprob: -20.27324676513672

Token 74: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25193139910697937
    2. ')' → logprob: -1.5019314289093018
    3. ')))' → logprob: -13.876931190490723
    4. '))
' → logprob: -14.501931190490723
    5. ')
' → logprob: -15.376931190490723
    6. '})' → logprob: -16.12693214416504
    7. ')}' → logprob: -16.25193214416504
    8. '),' → logprob: -16.50193214416504
    9. '])' → logprob: -16.62693214416504
    10. ' )' → logprob: -16.75193214416504


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 72
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 62
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 43.06%
Précision (top 10): 86.11%
================================================================================
