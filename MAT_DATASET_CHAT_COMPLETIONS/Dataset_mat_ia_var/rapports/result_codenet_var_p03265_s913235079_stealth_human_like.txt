================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# petit script qui fait des calculs, c'est magique !
a, b, c, d = map(int, input().split())
# quelques manipulations arithmétiques bizarres
x1 = c + b - d
x2 = d - a + c  # hmm, est-ce la meilleure façon ?
x3 = a + b - d
x4 = b - a + c  # à revoir peut-être
print(x1, x2, x3, x4)
# pas sûr que ça serve à grand chose mais bon
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' petit' (ID: 20577)
  → Token d'amorce (pas de prédiction)

Token 2: ' script' (ID: 11713)
  → Token d'amorce (pas de prédiction)

Token 3: ' qui' (ID: 2780)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11017908155918121
    2. '\' → logprob: -2.7351791858673096
    3. '```' → logprob: -4.2351789474487305
    4. '#' → logprob: -4.3601789474487305
    5. ':' → logprob: -6.6101789474487305
    6. ' ' → logprob: -6.7351789474487305
    7. 'print' → logprob: -6.7351789474487305
    8. ''' → logprob: -6.8601789474487305
    9. ' \' → logprob: -6.9851789474487305
    10. '`' → logprob: -6.9851789474487305

Token 4: ' fait' (ID: 7473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07371025532484055
    2. ' calc' → logprob: -4.3237104415893555
    3. 's' → logprob: -4.8237104415893555
    4. ' crée' → logprob: -4.8237104415893555
    5. ' permet' → logprob: -5.0737104415893555
    6. ' va' → logprob: -5.5737104415893555
    7. ' test' → logprob: -6.0737104415893555
    8. ' ```' → logprob: -6.3237104415893555
    9. ' ' → logprob: -6.4487104415893555
    10. ' a' → logprob: -6.5737104415893555

Token 5: ' des' (ID: 731)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.9592974781990051
    2. 'un' → logprob: -1.4592974185943604
    3. ' ' → logprob: -2.4592974185943604
    4. ' ' → logprob: -3.0842974185943604
    5. '```' → logprob: -3.4592974185943604
    6. '   ' → logprob: -3.5842974185943604
    7. ':' → logprob: -3.5842974185943604
    8. 'l' → logprob: -3.7092974185943604
    9. 'la' → logprob: -4.0842976570129395
    10. ' une' → logprob: -4.0842976570129395

Token 6: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.7945107221603394
    2. 'trait' → logprob: -2.169510841369629
    3. 'tr' → logprob: -2.919510841369629
    4. 'actions' → logprob: -3.169510841369629
    5. '```' → logprob: -3.419510841369629
    6. 'import' → logprob: -3.419510841369629
    7. 't' → logprob: -3.919510841369629
    8. 'transform' → logprob: -4.044510841369629
    9. 'tests' → logprob: -4.169510841369629
    10. 'pet' → logprob: -4.294510841369629

Token 7: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013787579722702503
    2. 'a' → logprob: -4.763787746429443
    3. '_' → logprob: -6.013787746429443
    4. '#' → logprob: -6.638787746429443
    5. ' ' → logprob: -7.388787746429443
    6. 'e' → logprob: -8.138787269592285
    7. '\' → logprob: -9.388787269592285
    8. 'u' → logprob: -9.388787269592285
    9. '.' → logprob: -9.888787269592285
    10. 'atrice' → logprob: -10.013787269592285

Token 8: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.23488812148571014
    2. '\' → logprob: -1.8598880767822266
    3. '#' → logprob: -3.2348880767822266
    4. '```' → logprob: -5.734888076782227
    5. ' ' → logprob: -6.234888076782227
    6. '' → logprob: -6.984888076782227
    7. '  
' → logprob: -7.109888076782227
    8. 'print' → logprob: -7.234888076782227
    9. 'import' → logprob: -7.234888076782227
    10. ' 
' → logprob: -7.359888076782227

Token 9: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41732025146484375
    2. 's' → logprob: -1.9173202514648438
    3. '\n' → logprob: -2.9173202514648438
    4. 'import' → logprob: -3.1673202514648438
    5. 'def' → logprob: -3.6673202514648438
    6. '\' → logprob: -4.042320251464844
    7. 'print' → logprob: -4.417320251464844
    8. '#' → logprob: -4.792320251464844
    9. 'a' → logprob: -5.292320251464844
    10. ' \' → logprob: -5.792320251464844

Token 10: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5272625684738159
    2. 'o' → logprob: -1.277262568473816
    3. 'a' → logprob: -3.0272626876831055
    4. 'u' → logprob: -4.5272626876831055
    5. '=' → logprob: -4.7772626876831055
    6. 'e' → logprob: -4.7772626876831055
    7. ' =' → logprob: -5.0272626876831055
    8. '_' → logprob: -5.1522626876831055
    9. ' ' → logprob: -5.1522626876831055
    10. '+' → logprob: -5.1522626876831055

Token 11: ' magique' (ID: 154560)
  Prédit: ' simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' simple' → logprob: -0.17533347010612488
    2. ' ' → logprob: -3.3003334999084473
    3. 'simple' → logprob: -3.3003334999084473
    4. ' une' → logprob: -4.175333499908447
    5. ' un' → logprob: -4.550333499908447
    6. ' super' → logprob: -4.675333499908447
    7. ' bien' → logprob: -4.800333499908447
    8. ' facile' → logprob: -5.175333499908447
    9. ' très' → logprob: -5.300333499908447
    10. '```' → logprob: -5.675333499908447

Token 12: ' !
' (ID: 27498)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7902681231498718
    2. '#' → logprob: -1.1652681827545166
    3. '\n' → logprob: -2.1652681827545166
    4. 'def' → logprob: -3.9152681827545166
    5. 'print' → logprob: -4.0402679443359375
    6. '!' → logprob: -4.2902679443359375
    7. 'import' → logprob: -4.2902679443359375
    8. 'd' → logprob: -4.6652679443359375
    9. '_' → logprob: -5.1652679443359375
    10. ':' → logprob: -5.1652679443359375

Token 13: 'a' (ID: 64)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1196218729019165
    2. '\n' → logprob: -1.2446218729019165
    3. '\' → logprob: -1.3696218729019165
    4. '```' → logprob: -3.244621753692627
    5. 'd' → logprob: -3.994621753692627
    6. ' 
' → logprob: -4.494621753692627
    7. 'p' → logprob: -4.619621753692627
    8. 'a' → logprob: -4.744621753692627
    9. '
' → logprob: -4.744621753692627
    10. '' → logprob: -4.744621753692627

Token 14: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.640661358833313
    2. '+' → logprob: -1.265661358833313
    3. ' =' → logprob: -1.890661358833313
    4. ' ' → logprob: -3.5156612396240234
    5. 'd' → logprob: -5.515661239624023
    6. ' +' → logprob: -6.140661239624023
    7. 'a' → logprob: -6.140661239624023
    8. ',' → logprob: -7.765661239624023
    9. ' +=' → logprob: -7.765661239624023
    10. '[' → logprob: -8.390661239624023

Token 15: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2016519010066986
    2. ' b' → logprob: -1.701651930809021
    3. ' ' → logprob: -8.826651573181152
    4. '=' → logprob: -9.826651573181152
    5. ' =' → logprob: -10.701651573181152
    6. 'space' → logprob: -11.826651573181152
    7. '_' → logprob: -13.076651573181152
    8. '_b' → logprob: -13.201651573181152
    9. '=b' → logprob: -14.076651573181152
    10. '  ' → logprob: -14.326651573181152

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009236282669007778
    2. '=' → logprob: -4.8842363357543945
    3. ',' → logprob: -6.6342363357543945
    4. ' ,' → logprob: -8.759236335754395
    5. ' ' → logprob: -9.509236335754395
    6. ')' → logprob: -10.259236335754395
    7. 's' → logprob: -11.384236335754395
    8. '<|end|>' → logprob: -11.384236335754395
    9. '[' → logprob: -12.259236335754395
    10. ' +=' → logprob: -12.634236335754395

Token 17: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.09236610680818558
    2. 'c' → logprob: -2.8423662185668945
    3. ' ' → logprob: -4.3423662185668945
    4. ' =' → logprob: -4.4673662185668945
    5. '=' → logprob: -5.2173662185668945
    6. '=c' → logprob: -11.842366218566895
    7. ',' → logprob: -12.342366218566895
    8. '_c' → logprob: -12.467366218566895
    9. ' ' → logprob: -12.967366218566895
    10. '"' → logprob: -13.092366218566895

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005716211744584143
    2. '=' → logprob: -7.5005717277526855
    3. ',' → logprob: -11.500571250915527
    4. ' ' → logprob: -12.625571250915527
    5. '<|end|>' → logprob: -13.000571250915527
    6. 's' → logprob: -14.000571250915527
    7. ')' → logprob: -14.000571250915527
    8. ' ,' → logprob: -15.250571250915527
    9. ' =
' → logprob: -15.750571250915527
    10. '<|end|>' → logprob: -16.000572204589844

Token 19: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.19994720816612244
    2. ' =' → logprob: -2.3249471187591553
    3. ' ' → logprob: -3.0749471187591553
    4. 'd' → logprob: -3.3249471187591553
    5. '=' → logprob: -6.824947357177734
    6. 's' → logprob: -9.949947357177734
    7. ' "' → logprob: -10.824947357177734
    8. ',' → logprob: -11.074947357177734
    9. '  ' → logprob: -11.199947357177734
    10. '_d' → logprob: -11.324947357177734

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012789567932486534
    2. '=' → logprob: -4.387789726257324
    3. ',' → logprob: -8.262789726257324
    4. ' ' → logprob: -11.262789726257324
    5. ' ,' → logprob: -13.137789726257324
    6. ')' → logprob: -13.637789726257324
    7. 'e' → logprob: -14.262789726257324
    8. ',e' → logprob: -14.262789726257324
    9. '<|end|>' → logprob: -14.637789726257324
    10. ' =
' → logprob: -14.700289726257324

Token 21: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009799530729651451
    2. '1' → logprob: -5.009799480438232
    3. '5' → logprob: -6.759799480438232
    4. '0' → logprob: -6.884799480438232
    5. '2' → logprob: -7.759799480438232
    6. '10' → logprob: -8.38479995727539
    7. '4' → logprob: -8.75979995727539
    8. '3' → logprob: -10.13479995727539
    9. ' [' → logprob: -11.13479995727539
    10. ' (' → logprob: -11.50979995727539

Token 22: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6079282760620117
    2. '(int' → logprob: -1.2329282760620117
    3. '(lambda' → logprob: -1.9829282760620117
    4. '(str' → logprob: -4.107928276062012
    5. '<|end|>' → logprob: -4.857928276062012
    6. '()' → logprob: -7.107928276062012
    7. '(
' → logprob: -8.982928276062012
    8. '(None' → logprob: -9.107928276062012
    9. '(input' → logprob: -9.107928276062012
    10. 'int' → logprob: -9.357928276062012

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04961201921105385
    2. '(' → logprob: -3.674612045288086
    3. ')' → logprob: -4.049612045288086
    4. 'input' → logprob: -5.299612045288086
    5. '<|end|>' → logprob: -8.424612045288086
    6. ' input' → logprob: -9.924612045288086
    7. ')(' → logprob: -10.049612045288086
    8. '=input' → logprob: -10.424612045288086
    9. '<|end|>' → logprob: -10.549612045288086
    10. '('' → logprob: -10.549612045288086

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47418978810310364
    2. ' input' → logprob: -0.9741897583007812
    3. '(input' → logprob: -9.349189758300781
    4. ')' → logprob: -10.974189758300781
    5. '=input' → logprob: -13.349189758300781
    6. ' )' → logprob: -13.349189758300781
    7. '	input' → logprob: -13.599189758300781
    8. ',input' → logprob: -13.724189758300781
    9. '```' → logprob: -13.849189758300781
    10. ' ' → logprob: -14.224189758300781

Token 25: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18372522294521332
    2. '())' → logprob: -2.308725118637085
    3. '(' → logprob: -3.808725118637085
    4. '().' → logprob: -3.933725118637085
    5. '()>' → logprob: -4.683725357055664
    6. '(()' → logprob: -5.183725357055664
    7. '());' → logprob: -5.308725357055664
    8. '()">' → logprob: -7.058725357055664
    9. '(),' → logprob: -7.433725357055664
    10. '('' → logprob: -7.558725357055664

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.829823102336377e-05
    2. 'strip' → logprob: -9.25009822845459
    3. ' split' → logprob: -13.87509822845459
    4. 'rstrip' → logprob: -14.12509822845459
    5. '(split' → logprob: -14.75009822845459
    6. 'spl' → logprob: -16.375099182128906
    7. 's' → logprob: -18.125099182128906
    8. 'read' → logprob: -18.875099182128906
    9. '```' → logprob: -19.125099182128906
    10. 'replace' → logprob: -19.125099182128906

Token 27: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3670491874217987
    2. ')' → logprob: -1.242049217224121
    3. '))' → logprob: -5.117049217224121
    4. '()))' → logprob: -5.242049217224121
    5. '()' → logprob: -5.367049217224121
    6. '(' → logprob: -6.742049217224121
    7. '('' → logprob: -7.242049217224121
    8. '(','' → logprob: -7.742049217224121
    9. ' ())' → logprob: -10.992049217224121
    10. '')' → logprob: -10.992049217224121

Token 28: '#' (ID: 2)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9269457459449768
    2. ')' → logprob: -1.676945686340332
    3. '#' → logprob: -1.926945686340332
    4. '+' → logprob: -2.301945686340332
    5. '<|end|>' → logprob: -3.176945686340332
    6. 'print' → logprob: -3.551945686340332
    7. 's' → logprob: -3.676945686340332
    8. ',' → logprob: -3.926945686340332
    9. 'result' → logprob: -4.301945686340332
    10. 'a' → logprob: -4.801945686340332

Token 29: ' quelques' (ID: 17687)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5629456639289856
    2. 'if' → logprob: -2.062945604324341
    3. 'result' → logprob: -2.312945604324341
    4. ' ' → logprob: -3.312945604324341
    5. 'print' → logprob: -3.687945604324341
    6. ' if' → logprob: -3.687945604324341
    7. '#' → logprob: -4.06294584274292
    8. 's' → logprob: -4.18794584274292
    9. ')' → logprob: -4.18794584274292
    10. ' e' → logprob: -4.31294584274292

Token 30: ' manip' (ID: 20526)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7547941207885742
    2. 'calcul' → logprob: -1.3797941207885742
    3. ' calculations' → logprob: -2.504794120788574
    4. ' ' → logprob: -2.754794120788574
    5. ' calcul' → logprob: -3.379794120788574
    6. '+' → logprob: -3.879794120788574
    7. ' espaces' → logprob: -4.379794120788574
    8. 's' → logprob: -4.629794120788574
    9. '<|end|>' → logprob: -4.879794120788574
    10. ' +' → logprob: -5.129794120788574

Token 31: 'ulations' (ID: 14571)
  Prédit: 'ulations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulations' → logprob: -0.0015446186298504472
    2. 'ul' → logprob: -7.50154447555542
    3. 'ulation' → logprob: -7.87654447555542
    4. 's' → logprob: -8.501544952392578
    5. 'u' → logprob: -8.626544952392578
    6. 'utations' → logprob: -10.376544952392578
    7. 'uls' → logprob: -10.376544952392578
    8. '```' → logprob: -10.376544952392578
    9. '#' → logprob: -10.501544952392578
    10. 'ulat' → logprob: -10.626544952392578

Token 32: ' ar' (ID: 646)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: 'ith' (ID: 437)
  Prédit: 'ith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ith' → logprob: -0.00015276329941116273
    2. 'i' → logprob: -9.250152587890625
    3. 'ithmetic' → logprob: -10.250152587890625
    4. 'it' → logprob: -11.250152587890625
    5. 'th' → logprob: -13.875152587890625
    6. '**' → logprob: -14.000152587890625
    7. '```' → logprob: -14.125152587890625
    8. '[i' → logprob: -14.375152587890625
    9. '   ' → logprob: -14.375152587890625
    10. 'itm' → logprob: -14.500152587890625

Token 34: 'mé' (ID: 35328)
  Prédit: 'mé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mé' → logprob: -0.42152631282806396
    2. 'm' → logprob: -1.171526312828064
    3. 'étiques' → logprob: -3.5465264320373535
    4. 'th' → logprob: -6.0465264320373535
    5. 'met' → logprob: -6.5465264320373535
    6. 'ématiques' → logprob: -7.0465264320373535
    7. 'é' → logprob: -9.296525955200195
    8. 'мет' → logprob: -9.796525955200195
    9. 'hé' → logprob: -9.921525955200195
    10. 'meth' → logprob: -9.921525955200195

Token 35: 'tiques' (ID: 60539)
  Prédit: 'tiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tiques' → logprob: -0.003309842897579074
    2. 'ti' → logprob: -6.128309726715088
    3. 't' → logprob: -7.003309726715088
    4. '#' → logprob: -9.503310203552246
    5. '```' → logprob: -10.503310203552246
    6. 'ques' → logprob: -11.128310203552246
    7. 'étiques' → logprob: -11.253310203552246
    8. '\' → logprob: -11.628310203552246
    9. 'miques' → logprob: -11.628310203552246
    10. '1' → logprob: -11.753310203552246

Token 36: ' b' (ID: 287)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: 'izar' (ID: 6552)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3212202191352844
    2. ' +' → logprob: -1.8212201595306396
    3. ' ' → logprob: -3.0712201595306396
    4. ' *' → logprob: -3.3212201595306396
    5. '*' → logprob: -3.8212201595306396
    6. '-' → logprob: -5.821220397949219
    7. ' +=' → logprob: -6.321220397949219
    8. ',' → logprob: -6.946220397949219
    9. ' ,' → logprob: -7.196220397949219
    10. '_' → logprob: -7.946220397949219

Token 38: 'res' (ID: 430)
  Prédit: 'ques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.25320348143577576
    2. 'es' → logprob: -2.6282033920288086
    3. 'les' → logprob: -3.0032033920288086
    4. 'ales' → logprob: -3.2532033920288086
    5. 'li' → logprob: -3.5032033920288086
    6. 'a' → logprob: -4.378203392028809
    7. 'l' → logprob: -4.628203392028809
    8. 'q' → logprob: -5.878203392028809
    9. '``' → logprob: -6.503203392028809
    10. 'iques' → logprob: -6.628203392028809

Token 39: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7879180908203125
    2. 'a' → logprob: -2.0379180908203125
    3. '<|end|>' → logprob: -2.0379180908203125
    4. '#' → logprob: -3.1629180908203125
    5. ' ' → logprob: -3.2879180908203125
    6. '*' → logprob: -3.2879180908203125
    7. ')' → logprob: -3.7879180908203125
    8. ':' → logprob: -4.0379180908203125
    9. '+' → logprob: -4.1629180908203125
    10. 'd' → logprob: -4.4129180908203125

Token 40: 'x' (ID: 87)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6519021987915039
    2. 'result' → logprob: -0.9019021987915039
    3. 'a' → logprob: -3.526902198791504
    4. ',' → logprob: -4.401902198791504
    5. 's' → logprob: -4.901902198791504
    6. '
' → logprob: -5.776902198791504
    7. 'n' → logprob: -5.776902198791504
    8. 'print' → logprob: -5.901902198791504
    9. ' 
' → logprob: -6.151902198791504
    10. 'r' → logprob: -6.151902198791504

Token 41: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03511667251586914
    2. '=' → logprob: -4.035116672515869
    3. ',' → logprob: -4.285116672515869
    4. ' +=' → logprob: -6.535116672515869
    5. '+' → logprob: -7.535116672515869
    6. ' ,' → logprob: -8.410116195678711
    7. '1' → logprob: -8.535116195678711
    8. '_' → logprob: -8.535116195678711
    9. ' ' → logprob: -8.785116195678711
    10. '.' → logprob: -9.285116195678711

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4167850613594055
    2. ',' → logprob: -1.1667850017547607
    3. ' ,' → logprob: -4.04178524017334
    4. '=' → logprob: -4.66678524017334
    5. ' ' → logprob: -6.91678524017334
    6. '+' → logprob: -7.41678524017334
    7. ' +' → logprob: -7.54178524017334
    8. ' +=' → logprob: -9.29178524017334
    9. '_' → logprob: -10.04178524017334
    10. '1' → logprob: -10.54178524017334

Token 43: ' c' (ID: 274)
  Prédit: ' (-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (-' → logprob: -0.8087359666824341
    2. ' (' → logprob: -1.558735966682434
    3. '(-' → logprob: -1.558735966682434
    4. '(a' → logprob: -2.9337358474731445
    5. 'a' → logprob: -3.1837358474731445
    6. ' a' → logprob: -3.8087358474731445
    7. '(' → logprob: -4.4337358474731445
    8. ' -' → logprob: -6.6837358474731445
    9. ' b' → logprob: -6.9337358474731445
    10. 'b' → logprob: -7.3087358474731445

Token 44: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.907513439655304
    2. '+' → logprob: -1.2825133800506592
    3. '*' → logprob: -1.7825133800506592
    4. ' *' → logprob: -2.407513380050659
    5. ' -' → logprob: -3.782513380050659
    6. '-' → logprob: -4.032513618469238
    7. ' /' → logprob: -4.407513618469238
    8. '/' → logprob: -5.407513618469238
    9. '**' → logprob: -6.407513618469238
    10. ' ' → logprob: -7.657513618469238

Token 45: ' b' (ID: 287)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.83395916223526
    2. ' a' → logprob: -1.5839591026306152
    3. 'a' → logprob: -1.9589591026306152
    4. 'd' → logprob: -2.2089591026306152
    5. ' b' → logprob: -2.9589591026306152
    6. ' (' → logprob: -3.7089591026306152
    7. 'b' → logprob: -4.083959102630615
    8. ' ' → logprob: -4.833959102630615
    9. '(a' → logprob: -5.708959102630615
    10. '4' → logprob: -6.708959102630615

Token 46: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5472886562347412
    2. ' *' → logprob: -1.4222886562347412
    3. '-' → logprob: -2.797288656234741
    4. ' ' → logprob: -2.922288656234741
    5. '+' → logprob: -3.547288656234741
    6. ' -' → logprob: -3.922288656234741
    7. ' +' → logprob: -4.54728889465332
    8. '  
' → logprob: -6.79728889465332
    9. '**' → logprob: -6.79728889465332
    10. '<|end|>' → logprob: -6.79728889465332

Token 47: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.807889997959137
    2. ' a' → logprob: -0.932889997959137
    3. ' d' → logprob: -2.182889938354492
    4. 'd' → logprob: -3.182889938354492
    5. ' ' → logprob: -5.432889938354492
    6. '1' → logprob: -6.432889938354492
    7. ' (' → logprob: -8.932889938354492
    8. '4' → logprob: -9.182889938354492
    9. '2' → logprob: -9.307889938354492
    10. '(a' → logprob: -10.057889938354492

Token 48: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0255119800567627
    2. '+' → logprob: -1.2755119800567627
    3. 'x' → logprob: -1.2755119800567627
    4. ' +' → logprob: -3.4005119800567627
    5. ' ' → logprob: -4.150511741638184
    6. ' *' → logprob: -4.275511741638184
    7. '<|end|>' → logprob: -5.275511741638184
    8. '**' → logprob: -5.900511741638184
    9. '#' → logprob: -6.275511741638184
    10. ')' → logprob: -6.775511741638184

Token 49: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14602124691009521
    2. '+' → logprob: -2.6460213661193848
    3. '*' → logprob: -2.8960213661193848
    4. '
' → logprob: -5.396021366119385
    5. '+
' → logprob: -6.896021366119385
    6. '**' → logprob: -7.146021366119385
    7. '#' → logprob: -7.271021366119385
    8. '-' → logprob: -7.896021366119385
    9. ' +' → logprob: -8.021020889282227
    10. ')' → logprob: -8.146020889282227

Token 50: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03550342842936516
    2. '2' → logprob: -3.660503387451172
    3. '*' → logprob: -4.910503387451172
    4. '+' → logprob: -7.535503387451172
    5. '/' → logprob: -7.785503387451172
    6. ' *' → logprob: -8.285503387451172
    7. '-' → logprob: -9.160503387451172
    8. 'a' → logprob: -9.285503387451172
    9. '**' → logprob: -9.410503387451172
    10. 'c' → logprob: -10.035503387451172

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03837423399090767
    2. '=' → logprob: -3.288374185562134
    3. ' ' → logprob: -8.038373947143555
    4. '_' → logprob: -13.288373947143555
    5. '*' → logprob: -13.663373947143555
    6. ',' → logprob: -13.663373947143555
    7. ' *' → logprob: -13.788373947143555
    8. ' +=' → logprob: -14.413373947143555
    9. 'x' → logprob: -14.538373947143555
    10. ')' → logprob: -14.663373947143555

Token 52: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0528809130191803
    2. ' a' → logprob: -3.0528810024261475
    3. 'c' → logprob: -6.802880764007568
    4. '(a' → logprob: -6.927880764007568
    5. 'b' → logprob: -7.427880764007568
    6. ' (' → logprob: -7.802880764007568
    7. '(' → logprob: -8.052881240844727
    8. ' c' → logprob: -8.427881240844727
    9. 'd' → logprob: -8.427881240844727
    10. ' b' → logprob: -8.802881240844727

Token 53: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9271324872970581
    2. ' +' → logprob: -1.052132487297058
    3. '*' → logprob: -2.4271326065063477
    4. ' *' → logprob: -2.6771326065063477
    5. '+' → logprob: -3.0521326065063477
    6. '-' → logprob: -3.3021326065063477
    7. ' ' → logprob: -4.427132606506348
    8. '**' → logprob: -7.052132606506348
    9. ' /' → logprob: -7.802132606506348
    10. '/' → logprob: -8.927132606506348

Token 54: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05723477154970169
    2. 'c' → logprob: -3.307234764099121
    3. 'b' → logprob: -4.307234764099121
    4. ' a' → logprob: -5.432234764099121
    5. ' c' → logprob: -7.557234764099121
    6. ' b' → logprob: -8.682234764099121
    7. '(a' → logprob: -9.057234764099121
    8. '(' → logprob: -9.182234764099121
    9. ' (' → logprob: -9.807234764099121
    10. '(c' → logprob: -9.932234764099121

Token 55: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2128840535879135
    2. '
' → logprob: -2.712883949279785
    3. ' +' → logprob: -3.212883949279785
    4. '<|end|>' → logprob: -3.837883949279785
    5. '+
' → logprob: -3.962883949279785
    6. '#' → logprob: -4.212883949279785
    7. '*' → logprob: -4.587883949279785
    8. ' 
' → logprob: -5.212883949279785
    9. 'x' → logprob: -5.337883949279785
    10. ' ' → logprob: -5.337883949279785

Token 56: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12402106821537018
    2. ' c' → logprob: -2.374021053314209
    3. 'b' → logprob: -3.999021053314209
    4. ' b' → logprob: -5.874021053314209
    5. 'a' → logprob: -6.749021053314209
    6. '1' → logprob: -7.499021053314209
    7. 'x' → logprob: -7.999021053314209
    8. ' a' → logprob: -8.999021530151367
    9. ' ' → logprob: -9.124021530151367
    10. ' x' → logprob: -9.874021530151367

Token 57: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.43371349573135376
    2. '
' → logprob: -1.808713436126709
    3. 'x' → logprob: -2.183713436126709
    4. '#' → logprob: -3.433713436126709
    5. '+' → logprob: -4.308713436126709
    6. ' 
' → logprob: -4.933713436126709
    7. '<|end|>' → logprob: -4.933713436126709
    8. '*' → logprob: -5.808713436126709
    9. '+
' → logprob: -5.808713436126709
    10. ' print' → logprob: -6.433713436126709

Token 58: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9584001898765564
    2. 'x' → logprob: -1.5834002494812012
    3. '+' → logprob: -1.7084002494812012
    4. 'print' → logprob: -1.8334002494812012
    5. '#' → logprob: -3.208400249481201
    6. '*' → logprob: -4.833400249481201
    7. '+
' → logprob: -4.958400249481201
    8. '<|end|>' → logprob: -5.208400249481201
    9. '\n' → logprob: -6.083400249481201
    10. ' 
' → logprob: -6.708400249481201

Token 59: ' hmm' (ID: 186402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2798461616039276
    2. '<|end|>' → logprob: -2.52984619140625
    3. '
' → logprob: -2.77984619140625
    4. '+' → logprob: -3.02984619140625
    5. ' 
' → logprob: -4.40484619140625
    6. '*' → logprob: -4.40484619140625
    7. '#' → logprob: -4.90484619140625
    8. ' ' → logprob: -4.90484619140625
    9. '+
' → logprob: -5.52984619140625
    10. ' x' → logprob: -6.15484619140625

Token 61: ' est' (ID: 893)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1740567684173584
    2. ' b' → logprob: -1.4240567684173584
    3. ' ' → logprob: -1.9240567684173584
    4. ' a' → logprob: -2.1740567684173584
    5. 'x' → logprob: -2.5490567684173584
    6. ' d' → logprob: -2.7990567684173584
    7. 'a' → logprob: -3.7990567684173584
    8. 'b' → logprob: -4.2990570068359375
    9. '1' → logprob: -5.2990570068359375
    10. ' c' → logprob: -5.9240570068359375

Token 62: '-ce' (ID: 35404)
  Prédit: '-ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ce' → logprob: -0.07550719380378723
    2. '-' → logprob: -2.825507164001465
    3. ' ce' → logprob: -4.700507164001465
    4. 'ce' → logprob: -5.825507164001465
    5. '-il' → logprob: -7.575507164001465
    6. ' ' → logprob: -7.950507164001465
    7. 'p' → logprob: -8.700507164001465
    8. '=' → logprob: -9.700507164001465
    9. 'e' → logprob: -9.950507164001465
    10. 'c' → logprob: -10.200507164001465

Token 63: ' la' (ID: 557)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.639189600944519
    2. ' que' → logprob: -0.889189600944519
    3. 'qu' → logprob: -4.139189720153809
    4. ' qu' → logprob: -4.889189720153809
    5. '-' → logprob: -5.264189720153809
    6. 'c' → logprob: -5.264189720153809
    7. ' ' → logprob: -5.389189720153809
    8. 'b' → logprob: -5.764189720153809
    9. '```' → logprob: -6.014189720153809
    10. 'ce' → logprob: -6.514189720153809

Token 64: ' meilleure' (ID: 52387)
  Prédit: ' bonne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bonne' → logprob: -0.8337288498878479
    2. 'bonne' → logprob: -1.7087287902832031
    3. ' fin' → logprob: -2.458728790283203
    4. 'fin' → logprob: -2.583728790283203
    5. 'bon' → logprob: -3.333728790283203
    6. ' ' → logprob: -3.333728790283203
    7. 'b' → logprob: -3.708728790283203
    8. 'v' → logprob: -3.833728790283203
    9. 'ligne' → logprob: -4.583728790283203
    10. ' ligne' → logprob: -4.583728790283203

Token 65: ' façon' (ID: 33381)
  Prédit: 'option'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'option' → logprob: -0.49191588163375854
    2. ' option' → logprob: -2.3669159412384033
    3. ' façon' → logprob: -2.9919159412384033
    4. ' solution' → logprob: -3.3669159412384033
    5. 'appro' → logprob: -3.4919159412384033
    6. 'solution' → logprob: -3.6169159412384033
    7. ' ' → logprob: -3.8669159412384033
    8. 'man' → logprob: -3.9919159412384033
    9. ' approche' → logprob: -3.9919159412384033
    10. '_' → logprob: -3.9919159412384033

Token 66: ' ?
' (ID: 19740)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.017671853303909302
    2. ' d' → logprob: -5.017672061920166
    3. ' de' → logprob: -5.267672061920166
    4. 'de' → logprob: -5.767672061920166
    5. 'd' → logprob: -7.142672061920166
    6. ' ?' → logprob: -7.517672061920166
    7. '<|end|>' → logprob: -7.892672061920166
    8. ' ' → logprob: -8.017671585083008
    9. 'x' → logprob: -8.767671585083008
    10. ')' → logprob: -9.642671585083008

Token 67: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3316730260848999
    2. '?' → logprob: -2.4566731452941895
    3. '\n' → logprob: -2.4566731452941895
    4. '+' → logprob: -3.7066731452941895
    5. '
' → logprob: -3.8316731452941895
    6. '*' → logprob: -4.0816731452941895
    7. '#' → logprob: -4.4566731452941895
    8. '+
' → logprob: -4.5816731452941895
    9. '\' → logprob: -5.3316731452941895
    10. '<|end|>' → logprob: -5.4566731452941895

Token 68: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009844583692029119
    2. '2' → logprob: -7.0009846687316895
    3. '+' → logprob: -10.625984191894531
    4. ' ' → logprob: -10.625984191894531
    5. '3' → logprob: -11.250984191894531
    6. 's' → logprob: -13.125984191894531
    7. '*' → logprob: -13.563484191894531
    8. '_' → logprob: -13.688484191894531
    9. ' +' → logprob: -13.688484191894531
    10. '=' → logprob: -14.250984191894531

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03810448944568634
    2. '=' → logprob: -3.28810453414917
    3. ' ' → logprob: -9.788104057312012
    4. ' +=' → logprob: -13.663104057312012
    5. 'x' → logprob: -13.788104057312012
    6. '_' → logprob: -14.163104057312012
    7. 'a' → logprob: -14.288104057312012
    8. '1' → logprob: -14.788104057312012
    9. ' ' → logprob: -15.038104057312012
    10. ',' → logprob: -15.163104057312012

Token 70: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2690194547176361
    2. ' a' → logprob: -1.7690194845199585
    3. 'b' → logprob: -3.269019365310669
    4. ' b' → logprob: -3.894019365310669
    5. '(a' → logprob: -5.894019603729248
    6. ' (' → logprob: -6.269019603729248
    7. 'x' → logprob: -7.269019603729248
    8. ' x' → logprob: -8.14401912689209
    9. 'd' → logprob: -8.26901912689209
    10. ' d' → logprob: -8.39401912689209

Token 71: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.129060760140419
    2. '+' → logprob: -3.129060745239258
    3. '*' → logprob: -3.379060745239258
    4. ' *' → logprob: -3.504060745239258
    5. ' ' → logprob: -4.504060745239258
    6. ' -' → logprob: -6.379060745239258
    7. '-' → logprob: -8.504060745239258
    8. '**' → logprob: -9.254060745239258
    9. ' ' → logprob: -11.129060745239258
    10. '*b' → logprob: -11.441560745239258

Token 72: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25428253412246704
    2. ' b' → logprob: -1.5042824745178223
    3. ' ' → logprob: -6.879282474517822
    4. ' d' → logprob: -8.12928295135498
    5. ' c' → logprob: -8.37928295135498
    6. 'c' → logprob: -8.62928295135498
    7. 'd' → logprob: -8.87928295135498
    8. '  ' → logprob: -9.37928295135498
    9. '   ' → logprob: -9.62928295135498
    10. ' x' → logprob: -10.00428295135498

Token 73: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6307404041290283
    2. ' +' → logprob: -1.2557404041290283
    3. ' *' → logprob: -2.2557404041290283
    4. '*' → logprob: -3.0057404041290283
    5. '-' → logprob: -4.255740165710449
    6. '+' → logprob: -4.505740165710449
    7. ' ' → logprob: -5.880740165710449
    8. ' /' → logprob: -8.63074016571045
    9. '**' → logprob: -9.25574016571045
    10. '#' → logprob: -10.00574016571045

Token 74: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01275978796184063
    2. ' c' → logprob: -4.637759685516357
    3. 'd' → logprob: -5.887759685516357
    4. 'x' → logprob: -9.387760162353516
    5. ' d' → logprob: -9.762760162353516
    6. '1' → logprob: -10.512760162353516
    7. ' ' → logprob: -10.762760162353516
    8. 'a' → logprob: -11.637760162353516
    9. '2' → logprob: -11.762760162353516
    10. '	c' → logprob: -11.762760162353516

Token 75: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15242767333984375
    2. '+' → logprob: -2.9024276733398438
    3. '
' → logprob: -3.2774276733398438
    4. '<|end|>' → logprob: -3.9024276733398438
    5. '*' → logprob: -4.777427673339844
    6. '#' → logprob: -5.777427673339844
    7. '+
' → logprob: -5.777427673339844
    8. '\n' → logprob: -5.902427673339844
    9. ' ' → logprob: -6.277427673339844
    10. ' x' → logprob: -6.527427673339844

Token 76: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17488208413124084
    2. '
' → logprob: -2.424882173538208
    3. '+' → logprob: -3.049882173538208
    4. '*' → logprob: -5.049881935119629
    5. '#' → logprob: -5.424881935119629
    6. 'print' → logprob: -5.549881935119629
    7. '
' → logprob: -6.174881935119629
    8. '<|end|>' → logprob: -6.549881935119629
    9. '+
' → logprob: -7.174881935119629
    10. '\n' → logprob: -7.174881935119629

Token 77: '4' (ID: 19)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5214855074882507
    2. '2' → logprob: -1.1464855670928955
    3. '4' → logprob: -2.5214855670928955
    4. '3' → logprob: -4.896485328674316
    5. '+' → logprob: -7.646485328674316
    6. ' ' → logprob: -8.646485328674316
    7. '_' → logprob: -10.646485328674316
    8. '*' → logprob: -11.146485328674316
    9. ')' → logprob: -11.271485328674316
    10. ' +' → logprob: -11.458985328674316

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04304143786430359
    2. '=' → logprob: -3.168041467666626
    3. ' ' → logprob: -10.543041229248047
    4. 'x' → logprob: -12.918041229248047
    5. '4' → logprob: -13.043041229248047
    6. '0' → logprob: -13.418041229248047
    7. '_' → logprob: -13.418041229248047
    8. '1' → logprob: -13.543041229248047
    9. 'a' → logprob: -13.918041229248047
    10. ' +=' → logprob: -13.918041229248047

Token 79: ' b' (ID: 287)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.603285014629364
    2. 'c' → logprob: -1.3532850742340088
    3. ' b' → logprob: -2.853285074234009
    4. 'a' → logprob: -3.353285074234009
    5. 'b' → logprob: -3.478285074234009
    6. ' a' → logprob: -3.478285074234009
    7. ' d' → logprob: -3.728285074234009
    8. 'd' → logprob: -4.60328483581543
    9. ' x' → logprob: -6.47828483581543
    10. 'x' → logprob: -6.85328483581543

Token 80: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4175125062465668
    2. ' *' → logprob: -1.2925125360488892
    3. '*' → logprob: -3.4175124168395996
    4. '+' → logprob: -4.1675124168396
    5. ' -' → logprob: -4.4175124168396
    6. ' ' → logprob: -5.2925124168396
    7. '-' → logprob: -7.4175124168396
    8. '**' → logprob: -8.167512893676758
    9. '<|end|>' → logprob: -8.917512893676758
    10. '  ' → logprob: -10.042512893676758

Token 81: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08912965655326843
    2. 'a' → logprob: -2.964129686355591
    3. ' c' → logprob: -3.464129686355591
    4. ' a' → logprob: -6.714129447937012
    5. 'd' → logprob: -7.339129447937012
    6. 'x' → logprob: -8.464129447937012
    7. ' d' → logprob: -9.714129447937012
    8. ' ' → logprob: -9.839129447937012
    9. '	c' → logprob: -10.214129447937012
    10. '1' → logprob: -10.839129447937012

Token 82: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1329185664653778
    2. '+' → logprob: -2.1329185962677
    3. ' -' → logprob: -6.007918357849121
    4. ' *' → logprob: -6.882918357849121
    5. ' ' → logprob: -7.007918357849121
    6. '*' → logprob: -7.132918357849121
    7. '-' → logprob: -8.007918357849121
    8. ' +
' → logprob: -9.257918357849121
    9. '#' → logprob: -9.382918357849121
    10. '+c' → logprob: -9.632918357849121

Token 83: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014269989915192127
    2. ' c' → logprob: -4.389269828796387
    3. 'd' → logprob: -6.389269828796387
    4. ' d' → logprob: -10.139269828796387
    5. 'x' → logprob: -11.389269828796387
    6. 'a' → logprob: -11.764269828796387
    7. '1' → logprob: -12.139269828796387
    8. ' ' → logprob: -12.264269828796387
    9. 'b' → logprob: -12.389269828796387
    10. '	c' → logprob: -13.139269828796387

Token 84: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19975684583187103
    2. '#' → logprob: -2.5747568607330322
    3. '
' → logprob: -3.1997568607330322
    4. 'print' → logprob: -3.1997568607330322
    5. '+' → logprob: -4.949756622314453
    6. ' ' → logprob: -5.949756622314453
    7. '<|end|>' → logprob: -5.949756622314453
    8. 'if' → logprob: -6.574756622314453
    9. '+
' → logprob: -6.574756622314453
    10. '  
' → logprob: -6.699756622314453

Token 85: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7621636390686035
    2. '#' → logprob: -1.5121636390686035
    3. 'print' → logprob: -1.6371636390686035
    4. '
' → logprob: -2.3871636390686035
    5. '+' → logprob: -4.7621636390686035
    6. ' 
' → logprob: -5.7621636390686035
    7. '<|end|>' → logprob: -6.1371636390686035
    8. '  
' → logprob: -6.3871636390686035
    9. 'if' → logprob: -6.3871636390686035
    10. '+
' → logprob: -6.6371636390686035

Token 86: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0156011581420898
    2. 'x' → logprob: -1.8906011581420898
    3. '#' → logprob: -2.14060115814209
    4. ' 
' → logprob: -2.51560115814209
    5. 'd' → logprob: -2.89060115814209
    6. '
' → logprob: -3.26560115814209
    7. '<|end|>' → logprob: -3.26560115814209
    8. '4' → logprob: -3.64060115814209
    9. '+' → logprob: -3.64060115814209
    10. ' x' → logprob: -3.89060115814209

Token 87: ' revoir' (ID: 136174)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.109736204147339
    2. ' revoir' → logprob: -2.109736204147339
    3. ' continuer' → logprob: -2.734736204147339
    4. ' voir' → logprob: -2.859736204147339
    5. ' ' → logprob: -3.234736204147339
    6. 'l' → logprob: -3.234736204147339
    7. 'd' → logprob: -3.359736204147339
    8. ' refaire' → logprob: -3.484736204147339
    9. ' ce' → logprob: -3.609736204147339
    10. ' suivre' → logprob: -3.609736204147339

Token 88: ' peut' (ID: 9216)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3091275990009308
    2. 'print' → logprob: -2.0591275691986084
    3. '
' → logprob: -2.9341275691986084
    4. '#' → logprob: -3.3091275691986084
    5. 'if' → logprob: -3.5591275691986084
    6. ' 
' → logprob: -5.5591278076171875
    7. '+
' → logprob: -5.8091278076171875
    8. '\n' → logprob: -6.3091278076171875
    9. '+' → logprob: -6.4341278076171875
    10. '#
' → logprob: -6.8091278076171875

Token 89: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.6169835925102234
    2. '-être' → logprob: -0.8669835925102234
    3. 'e' → logprob: -3.866983652114868
    4. 'ètre' → logprob: -5.366983413696289
    5. '#' → logprob: -5.491983413696289
    6. 'êt' → logprob: -6.241983413696289
    7. 'etre' → logprob: -6.241983413696289
    8. 'ê' → logprob: -6.616983413696289
    9. 'plement' → logprob: -7.116983413696289
    10. 'ablement' → logprob: -7.741983413696289

Token 90: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2329430878162384
    2. '#' → logprob: -2.232943058013916
    3. '
' → logprob: -2.982943058013916
    4. 'print' → logprob: -3.982943058013916
    5. '+' → logprob: -5.107943058013916
    6. '\n' → logprob: -5.232943058013916
    7. '<|end|>' → logprob: -5.232943058013916
    8. ' ' → logprob: -6.107943058013916
    9. ' 
' → logprob: -6.232943058013916
    10. '  
' → logprob: -6.482943058013916

Token 91: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4623931348323822
    2. 'x' → logprob: -1.2123931646347046
    3. '
' → logprob: -3.712393045425415
    4. '#' → logprob: -3.837393045425415
    5. 'if' → logprob: -4.337393283843994
    6. '+' → logprob: -5.212393283843994
    7. ' 
' → logprob: -6.337393283843994
    8. '+
' → logprob: -6.462393283843994
    9. '  
' → logprob: -7.087393283843994
    10. '*' → logprob: -7.712393283843994

Token 92: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017121860291808844
    2. '(x' → logprob: -6.376712322235107
    3. '('' → logprob: -12.62671184539795
    4. '("("' → logprob: -13.12671184539795
    5. '((' → logprob: -13.50171184539795
    6. '()' → logprob: -13.75171184539795
    7. '(a' → logprob: -14.25171184539795
    8. '(
' → logprob: -14.50171184539795
    9. ' (' → logprob: -14.50171184539795
    10. '(

' → logprob: -16.001712799072266

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002707529056351632
    2. '4' → logprob: -8.62527084350586
    3. '3' → logprob: -9.62527084350586
    4. '2' → logprob: -10.62527084350586
    5. ')' → logprob: -14.12527084350586
    6. ' ' → logprob: -17.56277084350586
    7. '"' → logprob: -17.62527084350586
    8. 'x' → logprob: -17.68777084350586
    9. '１' → logprob: -18.06277084350586
    10. '```' → logprob: -18.68777084350586

Token 94: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005718595930375159
    2. ',' → logprob: -7.8755717277526855
    3. ' )' → logprob: -8.625572204589844
    4. '+' → logprob: -12.875572204589844
    5. ',)' → logprob: -12.875572204589844
    6. '),' → logprob: -13.625572204589844
    7. '))' → logprob: -13.750572204589844
    8. ',x' → logprob: -14.000572204589844
    9. ' ,' → logprob: -14.250572204589844
    10. ')
' → logprob: -14.375572204589844

Token 95: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18301072716712952
    2. ' x' → logprob: -1.8080106973648071
    3. ' ' → logprob: -6.058010578155518
    4. ')' → logprob: -7.683010578155518
    5. ',' → logprob: -8.683011054992676
    6. ' ,' → logprob: -9.183011054992676
    7. ''' → logprob: -9.433011054992676
    8. '"' → logprob: -10.183011054992676
    9. ',x' → logprob: -10.808011054992676
    10. '  ' → logprob: -10.933011054992676

Token 96: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007650759653188288
    2. '3' → logprob: -7.375764846801758
    3. '1' → logprob: -9.125764846801758
    4. '4' → logprob: -10.500764846801758
    5. '23' → logprob: -14.375764846801758
    6. ' ' → logprob: -14.625764846801758
    7. ')' → logprob: -15.938264846801758
    8. 'y' → logprob: -16.125764846801758
    9. 'u' → logprob: -16.313264846801758
    10. ',' → logprob: -16.313264846801758

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002075933152809739
    2. ',x' → logprob: -9.375207901000977
    3. ' ,' → logprob: -9.500207901000977
    4. ')' → logprob: -10.000207901000977
    5. 'x' → logprob: -13.500207901000977
    6. ' x' → logprob: -14.375207901000977
    7. '4' → logprob: -16.625207901000977
    8. ' ' → logprob: -16.750207901000977
    9. ' )' → logprob: -17.500207901000977
    10. 's' → logprob: -17.625207901000977

Token 98: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011050296947360039
    2. ' x' → logprob: -4.511050224304199
    3. ' ' → logprob: -13.6360502243042
    4. ')' → logprob: -14.2610502243042
    5. ',' → logprob: -16.011051177978516
    6. '"' → logprob: -16.011051177978516
    7. ''' → logprob: -16.636051177978516
    8. ' ' → logprob: -17.136051177978516
    9. ',x' → logprob: -17.636051177978516
    10. ' ,' → logprob: -17.761051177978516

Token 99: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0013270224444568157
    2. '4' → logprob: -6.626327037811279
    3. '1' → logprob: -14.001326560974121
    4. ' ' → logprob: -16.001327514648438
    5. ')' → logprob: -16.626327514648438
    6. '2' → logprob: -17.626327514648438
    7. '３' → logprob: -17.626327514648438
    8. '۳' → logprob: -18.126327514648438
    9. '_' → logprob: -18.251327514648438
    10. '٣' → logprob: -18.376327514648438

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006880098371766508
    2. ' ,' → logprob: -7.750688076019287
    3. ')' → logprob: -8.750687599182129
    4. ',x' → logprob: -9.250687599182129
    5. 'x' → logprob: -13.375687599182129
    6. '4' → logprob: -14.875687599182129
    7. ' x' → logprob: -15.625687599182129
    8. ' )' → logprob: -15.750687599182129
    9. ',)' → logprob: -16.375688552856445
    10. ',y' → logprob: -16.500688552856445

Token 101: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003184959525242448
    2. ' x' → logprob: -5.753184795379639
    3. ')' → logprob: -12.003185272216797
    4. ',' → logprob: -14.503185272216797
    5. ' ' → logprob: -15.628185272216797
    6. '"' → logprob: -15.878185272216797
    7. ',x' → logprob: -15.878185272216797
    8. ''' → logprob: -16.128185272216797
    9. ' ,' → logprob: -16.378185272216797
    10. ' )' → logprob: -17.503185272216797

Token 102: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. '' → logprob: -17.875
    3. ')' → logprob: -18.375
    4. '４' → logprob: -18.625
    5. '_' → logprob: -18.625
    6. '۴' → logprob: -18.75
    7. ' ' → logprob: -19.0
    8. '٤' → logprob: -19.0
    9. '1' → logprob: -19.125
    10. '৪' → logprob: -19.75

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.625000953674316
    3. '))' → logprob: -15.000000953674316
    4. ')`' → logprob: -16.500001907348633
    5. '`)' → logprob: -16.875001907348633
    6. '')' → logprob: -17.500001907348633
    7. '")' → logprob: -18.625001907348633
    8. ')
' → logprob: -19.125001907348633
    9. '),' → logprob: -19.375001907348633
    10. ',' → logprob: -19.375001907348633

Token 104: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' pas' (ID: 2173)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: ' sûr' (ID: 46415)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4694819450378418
    2. ' ' → logprob: -1.5944819450378418
    3. '#' → logprob: -2.219481945037842
    4. '.' → logprob: -4.469481945037842
    5. '!' → logprob: -4.594481945037842
    6. 's' → logprob: -4.844481945037842
    7. '<|end|>' → logprob: -4.844481945037842
    8. 'r' → logprob: -6.094481945037842
    9. 'f' → logprob: -6.344481945037842
    10. 'er' → logprob: -6.344481945037842

Token 107: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' ça' (ID: 13590)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.4566020965576172
    2. ' c' → logprob: -2.206602096557617
    3. ' x' → logprob: -2.456602096557617
    4. 'x' → logprob: -2.956602096557617
    5. 'c' → logprob: -3.456602096557617
    6. 'ce' → logprob: -3.581602096557617
    7. ' le' → logprob: -3.831602096557617
    8. 'a' → logprob: -5.206602096557617
    9. ' ça' → logprob: -5.331602096557617
    10. ' cela' → logprob: -5.706602096557617

Token 109: ' serve' (ID: 10505)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.4788292944431305
    2. ' marche' → logprob: -1.978829264640808
    3. ' fonctionne' → logprob: -2.2288293838500977
    4. 'mar' → logprob: -2.8538293838500977
    5. 'so' → logprob: -3.7288293838500977
    6. 'f' → logprob: -4.228829383850098
    7. ' fasse' → logprob: -4.478829383850098
    8. ' soit' → logprob: -4.853829383850098
    9. 'march' → logprob: -5.728829383850098
    10. 'ait' → logprob: -6.353829383850098

Token 110: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' grand' (ID: 6363)
  Prédit: 'quel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quel' → logprob: -0.33014926314353943
    2. 'grand' → logprob: -1.3301492929458618
    3. 'quoi' → logprob: -4.580149173736572
    4. ' grand' → logprob: -5.455149173736572
    5. ' quelque' → logprob: -7.830149173736572
    6. ' ' → logprob: -8.08014965057373
    7. 'q' → logprob: -8.20514965057373
    8. '```' → logprob: -8.33014965057373
    9. 'r' → logprob: -8.45514965057373
    10. 'quo' → logprob: -8.70514965057373

Token 112: ' chose' (ID: 15505)
  Prédit: '-ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ch' → logprob: -0.7799173593521118
    2. 'ch' → logprob: -1.5299173593521118
    3. ' chose' → logprob: -1.7799173593521118
    4. ''ch' → logprob: -2.4049172401428223
    5. '-' → logprob: -3.1549172401428223
    6. ' ' → logprob: -5.029917240142822
    7. 'cho' → logprob: -6.029917240142822
    8. 'chos' → logprob: -6.154917240142822
    9. '’ch' → logprob: -6.154917240142822
    10. '```' → logprob: -6.279917240142822

Token 113: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: ' bon' (ID: 4846)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5709293484687805
    2. 'print' → logprob: -1.0709292888641357
    3. ' c' → logprob: -2.6959292888641357
    4. ' on' → logprob: -4.945929527282715
    5. 'c' → logprob: -5.570929527282715
    6. '#' → logprob: -5.695929527282715
    7. ' #' → logprob: -6.070929527282715
    8. 'pass' → logprob: -6.570929527282715
    9. ' je' → logprob: -6.695929527282715
    10. ' pass' → logprob: -7.195929527282715


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 112
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 25.89%
Précision adaptée (1ère position): 25.89%
Précision (top 10): 62.50%
================================================================================
