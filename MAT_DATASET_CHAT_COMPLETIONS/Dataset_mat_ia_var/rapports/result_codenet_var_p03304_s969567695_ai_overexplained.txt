================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir trois entiers séparés par des espaces et les assigner
# aux variables n, m et d après les avoir convertis en entiers.
n, m, d = map(int, input().split())

# Calculer la valeur (n - d), qui va servir pour vérifier une condition et pour des calculs.
# Cela représente la différence entre n et d.
diff = n - d

# Calculer la valeur (1 + d), qui sera aussi utilisée dans la comparaison de conditions.
min_val = 1 + d

# Vérifier si la différence (n - d) est inférieure à (1 + d).
if diff < min_val:
    # Si la condition est vraie, calculer une expression "ex" :
    # - Multiplier diff par 2
    # - Diviser le résultat par n au carré (n ** 2)
    # Cela pourrait par exemple représenter une probabilité ou une moyenne pondérée.
    ex = (2 * diff) / (n ** 2)
    # Multiplier l'expression "ex" par (m - 1) pour obtenir le résultat final "ans".
    ans = ex * (m - 1)
# Si la condition précédente n'est pas vérifiée, exécuter le bloc else
else:
    # Calculer "ex" exactement comme précédemment :
    # - Multiplier la différence diff par 2 (pour doubler)
    # - Diviser par n au carré, pour normaliser par rapport à n.
    ex = 2 * diff / (n ** 2)
    # Vérifier si d est égal à 0.
    if d == 0:
        # Si d vaut 0, calculer ans différemment :
        # - Multiplier ex par (m - 1)
        # - Puis diviser par 2 (équivaut à prendre la moitié du résultat précédent).
        ans = ex * (m - 1) / 2
    else:
        # Si d n'est pas zéro, alors ans est simplement ex multiplié par (m - 1)
        ans = ex * (m - 1)

# Afficher la valeur finale de ans à l'utilisateur.
# Il s'agit d'un nombre à virgule flottante représentant le résultat du calcul précédent.
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10969100892543793
    2. ' ' → logprob: -2.8596909046173096
    3. ':' → logprob: -4.234691143035889
    4. '```' → logprob: -4.984691143035889
    5. ' à' → logprob: -5.484691143035889
    6. ''' → logprob: -5.484691143035889
    7. ' d' → logprob: -6.109691143035889
    8. ' de' → logprob: -6.359691143035889
    9. ' a' → logprob: -6.609691143035889
    10. 's' → logprob: -6.609691143035889

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1835603415966034
    2. 'util' → logprob: -1.9335603713989258
    3. 'user' → logprob: -4.183560371398926
    4. ' l' → logprob: -5.558560371398926
    5. 'u' → logprob: -5.808560371398926
    6. 'us' → logprob: -7.433560371398926
    7. ' user' → logprob: -9.433560371398926
    8. 'un' → logprob: -9.433560371398926
    9. 'input' → logprob: -10.933560371398926
    10. 'client' → logprob: -11.058560371398926

Token 5: ''utilisateur' (ID: 140803)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8029055595397949
    2. ''utilisateur' → logprob: -0.9279055595397949
    3. ' utilisateur' → logprob: -2.552905559539795
    4. 'u' → logprob: -3.052905559539795
    5. '’utilisateur' → logprob: -3.802905559539795
    6. 'a' → logprob: -5.302905559539795
    7. '_util' → logprob: -6.552905559539795
    8. ''' → logprob: -7.552905559539795
    9. 'user' → logprob: -7.552905559539795
    10. ' user' → logprob: -8.427906036376953

Token 6: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9538620114326477
    2. ' ' → logprob: -1.703861951828003
    3. 's' → logprob: -1.953861951828003
    4. 'input' → logprob: -2.453861951828003
    5. 'name' → logprob: -3.578861951828003
    6. '=' → logprob: -3.953861951828003
    7. ' =' → logprob: -4.203862190246582
    8. '=input' → logprob: -4.453862190246582
    9. ',' → logprob: -4.703862190246582
    10. '#' → logprob: -4.828862190246582

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03353216126561165
    2. ' saisir' → logprob: -4.03353214263916
    3. 'entr' → logprob: -4.53353214263916
    4. 'r' → logprob: -5.90853214263916
    5. '```' → logprob: -7.65853214263916
    6. ' entrer' → logprob: -8.28353214263916
    7. 'contin' → logprob: -8.78353214263916
    8. '#' → logprob: -8.78353214263916
    9. 'input' → logprob: -8.90853214263916
    10. 'entrée' → logprob: -9.15853214263916

Token 8: ' trois' (ID: 25564)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026280203834176064
    2. '_' → logprob: -3.901280164718628
    3. ''' → logprob: -6.526280403137207
    4. ' :' → logprob: -6.776280403137207
    5. 's' → logprob: -7.401280403137207
    6. ':' → logprob: -7.776280403137207
    7. ' un' → logprob: -7.901280403137207
    8. ' ' → logprob: -8.026280403137207
    9. ' =' → logprob: -8.776280403137207
    10. 'u' → logprob: -8.901280403137207

Token 9: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.5758891701698303
    2. ' ' → logprob: -1.0758891105651855
    3. ' espaces' → logprob: -2.5758891105651855
    4. ' mots' → logprob: -4.7008891105651855
    5. ' nombre' → logprob: -6.0758891105651855
    6. ' numbers' → logprob: -6.4508891105651855
    7. ' espace' → logprob: -6.4508891105651855
    8. ' valeurs' → logprob: -6.8258891105651855
    9. ' variables' → logprob: -7.3258891105651855
    10. ' ent' → logprob: -7.3258891105651855

Token 10: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.012488815933465958
    2. 'i' → logprob: -5.012488842010498
    3. 'r' → logprob: -5.387488842010498
    4. 'ières' → logprob: -7.887488842010498
    5. '```' → logprob: -8.26248836517334
    6. 'ier' → logprob: -8.76248836517334
    7. 'rs' → logprob: -8.88748836517334
    8. 'ri' → logprob: -9.51248836517334
    9. 'ié' → logprob: -10.51248836517334
    10. 'ers' → logprob: -10.51248836517334

Token 11: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1819302886724472
    2. 'a' → logprob: -2.3069303035736084
    3. '\n' → logprob: -3.5569303035736084
    4. 'x' → logprob: -4.056930065155029
    5. '\' → logprob: -5.181930065155029
    6. 'ent' → logprob: -5.556930065155029
    7. '```' → logprob: -5.931930065155029
    8. 'i' → logprob: -6.431930065155029
    9. 'e' → logprob: -6.931930065155029
    10. '`' → logprob: -7.056930065155029

Token 12: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0008912135381251574
    2. 'é' → logprob: -7.500891208648682
    3. 'es' → logprob: -8.87589168548584
    4. '```' → logprob: -9.12589168548584
    5. 'ément' → logprob: -9.75089168548584
    6. 'ès' → logprob: -11.50089168548584
    7. 'ées' → logprob: -11.75089168548584
    8. 's' → logprob: -11.87589168548584
    9. '#' → logprob: -13.00089168548584
    10. 'er' → logprob: -14.37589168548584

Token 13: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.4610128104686737
    2. 'es' → logprob: -1.711012840270996
    3. 's' → logprob: -2.336012840270996
    4. ' par' → logprob: -2.461012840270996
    5. '```' → logprob: -6.586012840270996
    6. 'e' → logprob: -6.711012840270996
    7. ',' → logprob: -6.836012840270996
    8. 'és' → logprob: -6.961012840270996
    9. ' ' → logprob: -7.711012840270996
    10. '_par' → logprob: -7.961012840270996

Token 14: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.7450914978981018
    2. ' des' → logprob: -1.370091438293457
    3. 'un' → logprob: -1.745091438293457
    4. 'une' → logprob: -2.620091438293457
    5. 'es' → logprob: -4.370091438293457
    6. ' un' → logprob: -5.870091438293457
    7. '```' → logprob: -6.620091438293457
    8. 'esp' → logprob: -6.870091438293457
    9. 'spaces' → logprob: -6.870091438293457
    10. ''' → logprob: -7.370091438293457

Token 15: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.5497417449951172
    2. ' espaces' → logprob: -0.9247417449951172
    3. ''esp' → logprob: -4.174741744995117
    4. 'es' → logprob: -5.174741744995117
    5. 'spaces' → logprob: -5.799741744995117
    6. '_' → logprob: -6.924741744995117
    7. ''espace' → logprob: -7.424741744995117
    8. '’esp' → logprob: -8.799741744995117
    9. '```' → logprob: -9.299741744995117
    10. 'paces' → logprob: -9.799741744995117

Token 16: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34242913126945496
    2. 'ent' → logprob: -2.3424291610717773
    3. 'input' → logprob: -3.0924291610717773
    4. 'user' → logprob: -3.3424291610717773
    5. 'a' → logprob: -3.5924291610717773
    6. 'e' → logprob: -3.8424291610717773
    7. 'numbers' → logprob: -3.8424291610717773
    8. 'x' → logprob: -4.467429161071777
    9. 'nums' → logprob: -5.092429161071777
    10. 'entr' → logprob: -5.592429161071777

Token 17: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9565789103507996
    2. ' ' → logprob: -1.7065789699554443
    3. 's' → logprob: -2.0815789699554443
    4. ' continuer' → logprob: -3.8315789699554443
    5. 'r' → logprob: -3.9565789699554443
    6. ' récupérer' → logprob: -3.9565789699554443
    7. ' afficher' → logprob: -4.081578731536865
    8. 'les' → logprob: -4.081578731536865
    9. 'e' → logprob: -4.331578731536865
    10. ' lire' → logprob: -4.706578731536865

Token 18: ' assign' (ID: 14975)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.9849026799201965
    2. 'stock' → logprob: -1.2349026203155518
    3. 'aff' → logprob: -1.7349026203155518
    4. 'st' → logprob: -2.6099026203155518
    5. 'mettre' → logprob: -3.7349026203155518
    6. 'assign' → logprob: -4.734902858734131
    7. 'split' → logprob: -4.859902858734131
    8. 'val' → logprob: -5.359902858734131
    9. 'ent' → logprob: -5.609902858734131
    10. 'r' → logprob: -5.609902858734131

Token 19: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0018305847188457847
    2. 'r' → logprob: -6.376830577850342
    3. 'és' → logprob: -9.7518310546875
    4. 'é' → logprob: -10.0018310546875
    5. 's' → logprob: -11.7518310546875
    6. ' er' → logprob: -12.7518310546875
    7. 'e' → logprob: -13.0018310546875
    8. '=' → logprob: -13.2518310546875
    9. 'es' → logprob: -13.2518310546875
    10. '```' → logprob: -13.5018310546875

Token 20: '
' (ID: 198)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.6005148887634277
    2. 'user' → logprob: -1.8505148887634277
    3. 'a' → logprob: -1.9755148887634277
    4. 'n' → logprob: -1.9755148887634277
    5. 's' → logprob: -2.6005148887634277
    6. 'input' → logprob: -2.9755148887634277
    7. ':' → logprob: -3.4755148887634277
    8. '_' → logprob: -3.8505148887634277
    9. 'i' → logprob: -3.9755148887634277
    10. ' =' → logprob: -4.225514888763428

Token 21: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9888732433319092
    2. 'ent' → logprob: -1.2388732433319092
    3. 'user' → logprob: -2.613873243331909
    4. 's' → logprob: -2.613873243331909
    5. 'a' → logprob: -2.988873243331909
    6. 'x' → logprob: -3.363873243331909
    7. 'i' → logprob: -3.988873243331909
    8. 'numbers' → logprob: -4.363873481750488
    9. 'nombre' → logprob: -4.863873481750488
    10. ' :' → logprob: -5.113873481750488

Token 22: ' aux' (ID: 5850)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4905223548412323
    2. 'n' → logprob: -1.2405223846435547
    3. 'numbers' → logprob: -2.9905223846435547
    4. 'nums' → logprob: -4.490522384643555
    5. 'val' → logprob: -4.740522384643555
    6. 'user' → logprob: -4.990522384643555
    7. 's' → logprob: -5.240522384643555
    8. 'nombre' → logprob: -5.490522384643555
    9. 'a' → logprob: -5.740522384643555
    10. 'input' → logprob: -6.490522384643555

Token 23: ' variables' (ID: 13955)
  Prédit: ' variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.07930469512939453
    2. 'variables' → logprob: -2.7043046951293945
    3. ' trois' → logprob: -5.3293046951293945
    4. 'ent' → logprob: -6.0793046951293945
    5. ' nombres' → logprob: -7.5793046951293945
    6. 'tro' → logprob: -8.079304695129395
    7. ' ent' → logprob: -8.329304695129395
    8. 'a' → logprob: -8.454304695129395
    9. ' a' → logprob: -8.579304695129395
    10. '3' → logprob: -9.329304695129395

Token 24: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7042511701583862
    2. 'a' → logprob: -1.3292511701583862
    3. 'ent' → logprob: -2.204251289367676
    4. 'x' → logprob: -2.329251289367676
    5. 'e' → logprob: -4.954251289367676
    6. 'user' → logprob: -5.579251289367676
    7. '```' → logprob: -5.579251289367676
    8. 'numbers' → logprob: -5.704251289367676
    9. 'v' → logprob: -5.954251289367676
    10. 'nombre' → logprob: -6.454251289367676

Token 25: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7161453366279602
    2. ' =' → logprob: -1.0911452770233154
    3. '=' → logprob: -2.8411452770233154
    4. 's' → logprob: -3.4661452770233154
    5. ',' → logprob: -3.5911452770233154
    6. ' ' → logprob: -3.8411452770233154
    7. '_' → logprob: -4.5911455154418945
    8. 'i' → logprob: -4.8411455154418945
    9. ' n' → logprob: -4.9661455154418945
    10. ' )' → logprob: -6.0911455154418945

Token 26: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2371024638414383
    2. ' m' → logprob: -1.7371025085449219
    3. 'p' → logprob: -4.487102508544922
    4. 'a' → logprob: -4.487102508544922
    5. 'x' → logprob: -5.487102508544922
    6. 'k' → logprob: -5.987102508544922
    7. ' p' → logprob: -6.112102508544922
    8. 'r' → logprob: -7.237102508544922
    9. ' a' → logprob: -7.237102508544922
    10. 'n' → logprob: -7.862102508544922

Token 27: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009530111216008663
    2. ',' → logprob: -5.009530067443848
    3. ' n' → logprob: -6.134530067443848
    4. 's' → logprob: -8.884530067443848
    5. ' =' → logprob: -9.009530067443848
    6. '```' → logprob: -9.759530067443848
    7. 'x' → logprob: -9.884530067443848
    8. ',n' → logprob: -10.009530067443848
    9. '_' → logprob: -10.384530067443848
    10. '=' → logprob: -10.384530067443848

Token 28: ' d' (ID: 272)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5219132304191589
    2. ' p' → logprob: -1.1469132900238037
    3. 'o' → logprob: -3.0219132900238037
    4. ' o' → logprob: -3.8969132900238037
    5. 'k' → logprob: -4.771913051605225
    6. ' k' → logprob: -5.646913051605225
    7. 'l' → logprob: -5.771913051605225
    8. ' ' → logprob: -6.521913051605225
    9. ' l' → logprob: -6.646913051605225
    10. 'a' → logprob: -7.646913051605225

Token 29: ' après' (ID: 16460)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.584861744660884e-05
    2. '#' → logprob: -11.125045776367188
    3. 'i' → logprob: -12.125045776367188
    4. '```' → logprob: -12.125045776367188
    5. ' ' → logprob: -12.375045776367188
    6. '=' → logprob: -12.875045776367188
    7. 'input' → logprob: -13.375045776367188
    8. ' n' → logprob: -13.500045776367188
    9. 'u' → logprob: -13.750045776367188
    10. 'x' → logprob: -13.750045776367188

Token 30: ' les' (ID: 1341)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00179668131750077
    2. ' ' → logprob: -7.126796722412109
    3. ' n' → logprob: -8.00179672241211
    4. ',' → logprob: -8.87679672241211
    5. 'i' → logprob: -9.12679672241211
    6. 's' → logprob: -9.37679672241211
    7. '#' → logprob: -9.37679672241211
    8. '_' → logprob: -9.75179672241211
    9. ':' → logprob: -10.37679672241211
    10. '```' → logprob: -10.87679672241211

Token 31: ' avoir' (ID: 16595)
  Prédit: ' instructions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' instructions' → logprob: -1.2591662406921387
    2. 'val' → logprob: -2.0091662406921387
    3. 'qu' → logprob: -2.5091662406921387
    4. 'quel' → logprob: -2.8841662406921387
    5. ' ' → logprob: -3.1341662406921387
    6. ' espaces' → logprob: -3.2591662406921387
    7. ' quelles' → logprob: -3.6341662406921387
    8. ' cons' → logprob: -3.6341662406921387
    9. 'instructions' → logprob: -3.7591662406921387
    10. ' =' → logprob: -3.8841662406921387

Token 32: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.31945374608039856
    2. 'int' → logprob: -2.444453716278076
    3. 'transform' → logprob: -3.319453716278076
    4. '#' → logprob: -3.444453716278076
    5. 'r' → logprob: -3.944453716278076
    6. 's' → logprob: -3.944453716278076
    7. 'split' → logprob: -4.319453716278076
    8. 'valid' → logprob: -4.819453716278076
    9. 'tr' → logprob: -4.944453716278076
    10. 'val' → logprob: -5.069453716278076

Token 33: 'is' (ID: 276)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05626467242836952
    2. 'r' → logprob: -3.181264638900757
    3. 'ir' → logprob: -4.931264877319336
    4. 'e' → logprob: -6.056264877319336
    5. 'a' → logprob: -6.431264877319336
    6. '#' → logprob: -7.806264877319336
    7. ' i' → logprob: -7.931264877319336
    8. 's' → logprob: -8.056264877319336
    9. 'is' → logprob: -8.431264877319336
    10. 'u' → logprob: -8.556264877319336

Token 34: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00017421995289623737
    2. ' n' → logprob: -9.625174522399902
    3. '=' → logprob: -10.500174522399902
    4. ',' → logprob: -11.125174522399902
    5. ':' → logprob: -11.375174522399902
    6. 's' → logprob: -11.375174522399902
    7. 'x' → logprob: -11.625174522399902
    8. '#' → logprob: -11.625174522399902
    9. ' =' → logprob: -12.250174522399902
    10. ' ' → logprob: -12.750174522399902

Token 35: ' ent' (ID: 1121)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.0591362714767456
    2. 'int' → logprob: -1.3091362714767456
    3. 'ent' → logprob: -1.5591362714767456
    4. ' ent' → logprob: -1.8091362714767456
    5. ' integers' → logprob: -5.559136390686035
    6. ' ' → logprob: -5.934136390686035
    7. ' nombres' → logprob: -7.559136390686035
    8. 'inte' → logprob: -7.684136390686035
    9. ' entier' → logprob: -7.684136390686035
    10. '```' → logprob: -8.184136390686035

Token 36: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25395306944847107
    2. 'iers' → logprob: -1.5039530992507935
    3. 'ier' → logprob: -6.878952980041504
    4. 'e' → logprob: -7.503952980041504
    5. 'ié' → logprob: -8.753952980041504
    6. 'ière' → logprob: -9.628952980041504
    7. '```' → logprob: -9.628952980041504
    8. 't' → logprob: -10.378952980041504
    9. 'ières' → logprob: -11.128952980041504
    10. 'a' → logprob: -11.128952980041504

Token 37: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.723352049040841e-06
    2. '#' → logprob: -12.625004768371582
    3. '```' → logprob: -14.375004768371582
    4. ' n' → logprob: -15.750004768371582
    5. 'i' → logprob: -16.000003814697266
    6. ' ' → logprob: -16.250003814697266
    7. '

' → logprob: -16.500003814697266
    8. 'x' → logprob: -16.625003814697266
    9. 'input' → logprob: -16.625003814697266
    10. '-' → logprob: -16.875003814697266

Token 38: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.896309739408025e-07
    2. ' n' → logprob: -15.375000953674316
    3. '```' → logprob: -15.375000953674316
    4. '#' → logprob: -15.625000953674316
    5. 'x' → logprob: -18.375
    6. '\n' → logprob: -19.5
    7. 's' → logprob: -19.625
    8. ',' → logprob: -19.625
    9. ''''' → logprob: -19.625
    10. ' ' → logprob: -19.75

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005844878032803535
    2. ' ,' → logprob: -7.625584602355957
    3. ',m' → logprob: -9.625584602355957
    4. ' =' → logprob: -10.750584602355957
    5. ',n' → logprob: -13.250584602355957
    6. 's' → logprob: -13.250584602355957
    7. ',s' → logprob: -13.375584602355957
    8. '=' → logprob: -13.500584602355957
    9. ',v' → logprob: -14.750584602355957
    10. ',d' → logprob: -14.875584602355957

Token 40: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.07900578528642654
    2. 'm' → logprob: -2.579005718231201
    3. ' ' → logprob: -9.32900619506836
    4. '<|end|>' → logprob: -11.45400619506836
    5. ' ' → logprob: -11.95400619506836
    6. '  ' → logprob: -12.32900619506836
    7. ' =' → logprob: -13.32900619506836
    8. '	m' → logprob: -14.45400619506836
    9. ' ' → logprob: -14.70400619506836
    10. ',' → logprob: -14.82900619506836

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038264848990365863
    2. ' ,' → logprob: -8.000382423400879
    3. ' =' → logprob: -10.125382423400879
    4. '=' → logprob: -12.875382423400879
    5. ',d' → logprob: -12.875382423400879
    6. ',m' → logprob: -13.875382423400879
    7. ',n' → logprob: -15.625382423400879
    8. 'd' → logprob: -15.875382423400879
    9. '<|end|>' → logprob: -15.875382423400879
    10. 's' → logprob: -16.500383377075195

Token 42: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0336686372756958
    2. 'd' → logprob: -3.4086685180664062
    3. ' ' → logprob: -10.783668518066406
    4. ' and' → logprob: -14.533668518066406
    5. ' ' → logprob: -14.658668518066406
    6. '	d' → logprob: -15.408668518066406
    7. ' =' → logprob: -15.533668518066406
    8. '  ' → logprob: -16.033668518066406
    9. ' 
' → logprob: -16.033668518066406
    10. ',' → logprob: -16.033668518066406

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693145871162415
    2. '=' → logprob: -2.1269314289093018
    3. '=input' → logprob: -13.376931190490723
    4. ',' → logprob: -13.626931190490723
    5. '=int' → logprob: -15.626931190490723
    6. 's' → logprob: -16.12693214416504
    7. ' ' → logprob: -16.50193214416504
    8. ' ' → logprob: -16.50193214416504
    9. ' =
' → logprob: -16.75193214416504
    10. '.' → logprob: -17.25193214416504

Token 44: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6932400465011597
    2. ' map' → logprob: -0.6932400465011597
    3. 'input' → logprob: -9.81824016571045
    4. ' input' → logprob: -11.06824016571045
    5. 'int' → logprob: -11.19324016571045
    6. 'list' → logprob: -12.69324016571045
    7. ' list' → logprob: -13.06824016571045
    8. ' [' → logprob: -14.19324016571045
    9. ' int' → logprob: -14.56824016571045
    10. '[' → logprob: -14.56824016571045

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1293967217206955
    2. '(' → logprob: -2.129396677017212
    3. '(input' → logprob: -6.129396915435791
    4. '(str' → logprob: -8.379396438598633
    5. 'int' → logprob: -10.629396438598633
    6. '(
' → logprob: -10.879396438598633
    7. '(lambda' → logprob: -12.254396438598633
    8. '<int' → logprob: -13.004396438598633
    9. ' (' → logprob: -13.254396438598633
    10. 'input' → logprob: -13.254396438598633

Token 46: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0075259399600327015
    2. 'input' → logprob: -5.50752592086792
    3. '(' → logprob: -5.75752592086792
    4. ')' → logprob: -8.507526397705078
    5. ' (' → logprob: -10.007526397705078
    6. ',input' → logprob: -10.882526397705078
    7. ' input' → logprob: -12.007526397705078
    8. '=input' → logprob: -12.757526397705078
    9. '('' → logprob: -13.132526397705078
    10. ')(' → logprob: -13.757526397705078

Token 47: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006719640456140041
    2. ' input' → logprob: -5.006719589233398
    3. '(input' → logprob: -12.631719589233398
    4. ')' → logprob: -14.631719589233398
    5. '<input' → logprob: -15.131719589233398
    6. '=input' → logprob: -16.3817195892334
    7. '[input' → logprob: -16.6317195892334
    8. '	input' → logprob: -16.6317195892334
    9. ' ' → logprob: -16.7567195892334
    10. ',input' → logprob: -16.8817195892334

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.16663165390491486
    2. '()' → logprob: -2.0416316986083984
    3. '())' → logprob: -4.416631698608398
    4. '(' → logprob: -4.916631698608398
    5. '('' → logprob: -6.416631698608398
    6. '(()' → logprob: -7.166631698608398
    7. '('').' → logprob: -7.541631698608398
    8. '(input' → logprob: -8.541631698608398
    9. ')' → logprob: -8.541631698608398
    10. '()(' → logprob: -9.291631698608398

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005544631858356297
    2. 'strip' → logprob: -7.50055456161499
    3. ' split' → logprob: -14.000554084777832
    4. ')' → logprob: -15.000554084777832
    5. 'rstrip' → logprob: -16.00055503845215
    6. 'spl' → logprob: -16.25055503845215
    7. '.split' → logprob: -17.25055503845215
    8. '(split' → logprob: -17.50055503845215
    9. 's' → logprob: -18.37555503845215
    10. '```' → logprob: -18.62555503845215

Token 50: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01863248087465763
    2. '()))' → logprob: -4.518632411956787
    3. ')' → logprob: -5.268632411956787
    4. '()' → logprob: -6.393632411956787
    5. '))' → logprob: -8.143632888793945
    6. '('' → logprob: -8.518632888793945
    7. ' ())' → logprob: -9.018632888793945
    8. '(' → logprob: -9.268632888793945
    9. '(','' → logprob: -12.143632888793945
    10. '()),' → logprob: -13.143632888793945

Token 51: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.535176694393158
    2. ')' → logprob: -0.910176694393158
    3. '(' → logprob: -5.660176753997803
    4. '<|end|>' → logprob: -6.285176753997803
    5. '())' → logprob: -6.410176753997803
    6. '()
' → logprob: -6.535176753997803
    7. '#' → logprob: -6.785176753997803
    8. ' )' → logprob: -6.910176753997803
    9. '```' → logprob: -7.535176753997803
    10. ' ' → logprob: -8.785176277160645

Token 52: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27413007616996765
    2. ' if' → logprob: -2.14913010597229
    3. '#' → logprob: -2.39913010597229
    4. 'print' → logprob: -4.024129867553711
    5. 'for' → logprob: -4.649129867553711
    6. ' for' → logprob: -6.524129867553711
    7. 'result' → logprob: -6.649129867553711
    8. ' #' → logprob: -7.399129867553711
    9. ' print' → logprob: -7.774129867553711
    10. 's' → logprob: -8.399129867553711

Token 53: 'er' (ID: 259)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08413758128881454
    2. '_' → logprob: -3.3341376781463623
    3. 's' → logprob: -3.3341376781463623
    4. '()' → logprob: -5.584137439727783
    5. '(n' → logprob: -6.084137439727783
    6. 'n' → logprob: -6.709137439727783
    7. ')' → logprob: -8.084137916564941
    8. 'u' → logprob: -8.459137916564941
    9. '#' → logprob: -8.584137916564941
    10. 'er' → logprob: -8.959137916564941

Token 54: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07173266261816025
    2. '(n' → logprob: -3.946732759475708
    3. 'le' → logprob: -4.696732521057129
    4. ' la' → logprob: -4.946732521057129
    5. 'n' → logprob: -4.946732521057129
    6. '_' → logprob: -5.321732521057129
    7. 's' → logprob: -5.696732521057129
    8. 'l' → logprob: -5.946732521057129
    9. 'la' → logprob: -6.071732521057129
    10. ' (' → logprob: -6.071732521057129

Token 55: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3531605303287506
    2. 'val' → logprob: -2.3531606197357178
    3. 'distance' → logprob: -2.8531606197357178
    4. ' somme' → logprob: -3.1031606197357178
    5. 'diff' → logprob: -3.1031606197357178
    6. 'surface' → logprob: -4.603160381317139
    7. 'pu' → logprob: -4.728160381317139
    8. 'plus' → logprob: -4.978160381317139
    9. 'prob' → logprob: -5.353160381317139
    10. ' valeur' → logprob: -5.728160381317139

Token 56: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3710726797580719
    2. '(' → logprob: -1.6210726499557495
    3. ' =' → logprob: -3.746072769165039
    4. '=' → logprob: -3.746072769165039
    5. 'min' → logprob: -4.121072769165039
    6. 's' → logprob: -4.496072769165039
    7. '(max' → logprob: -4.746072769165039
    8. '_max' → logprob: -4.996072769165039
    9. ' maximale' → logprob: -5.371072769165039
    10. '_' → logprob: -5.371072769165039

Token 57: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26749977469444275
    2. '(n' → logprob: -2.2674996852874756
    3. 'm' → logprob: -2.7674996852874756
    4. '(m' → logprob: -4.142499923706055
    5. ' (' → logprob: -4.517499923706055
    6. 'd' → logprob: -4.642499923706055
    7. ' n' → logprob: -5.142499923706055
    8. '(' → logprob: -5.267499923706055
    9. 'abs' → logprob: -5.642499923706055
    10. ')' → logprob: -5.767499923706055

Token 58: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7016521692276001
    2. ' +' → logprob: -1.0766521692276
    3. '-' → logprob: -2.8266520500183105
    4. ' -' → logprob: -3.2016520500183105
    5. '+d' → logprob: -3.7016520500183105
    6. '*' → logprob: -4.0766520500183105
    7. '+m' → logprob: -4.9516520500183105
    8. ' *' → logprob: -5.3266520500183105
    9. '**' → logprob: -5.3266520500183105
    10. '+n' → logprob: -6.9516520500183105

Token 59: ' d' (ID: 272)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.40965136885643005
    2. 'm' → logprob: -1.6596513986587524
    3. ' d' → logprob: -2.784651279449463
    4. 'd' → logprob: -3.284651279449463
    5. '1' → logprob: -3.784651279449463
    6. ' ' → logprob: -3.784651279449463
    7. '3' → logprob: -7.909651279449463
    8. '2' → logprob: -8.159651756286621
    9. ' (' → logprob: -8.659651756286621
    10. '(m' → logprob: -9.284651756286621

Token 60: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008199290372431278
    2. ' )' → logprob: -5.133199214935303
    3. ')**' → logprob: -6.258199214935303
    4. '-' → logprob: -9.258199691772461
    5. '+' → logprob: -9.758199691772461
    6. ' -' → logprob: -9.883199691772461
    7. '*' → logprob: -10.383199691772461
    8. ')*' → logprob: -10.633199691772461
    9. ')^' → logprob: -10.758199691772461
    10. ' +' → logprob: -11.008199691772461

Token 61: ' qui' (ID: 2780)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8800662755966187
    2. ')' → logprob: -1.6300662755966187
    3. '2' → logprob: -2.380066394805908
    4. '**' → logprob: -2.880066394805908
    5. 'm' → logprob: -3.005066394805908
    6. ' *' → logprob: -3.130066394805908
    7. ' ' → logprob: -3.380066394805908
    8. ' m' → logprob: -3.505066394805908
    9. ' (' → logprob: -3.755066394805908
    10. ' **' → logprob: -4.005066394805908

Token 62: ' va' (ID: 3423)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.29443874955177307
    2. ' **' → logprob: -1.5444387197494507
    3. ')' → logprob: -4.04443883895874
    4. '*' → logprob: -4.16943883895874
    5. ' *' → logprob: -5.79443883895874
    6. '>' → logprob: -6.04443883895874
    7. ' ' → logprob: -7.66943883895874
    8. ' )' → logprob: -8.044438362121582
    9. ')**' → logprob: -8.294438362121582
    10. ' vaut' → logprob: -8.419438362121582

Token 63: ' servir' (ID: 42557)
  Prédit: ' servir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' servir' → logprob: -0.3216838538646698
    2. ' être' → logprob: -1.8216838836669922
    3. 'être' → logprob: -3.196683883666992
    4. ')' → logprob: -4.571683883666992
    5. '=' → logprob: -4.821683883666992
    6. '<|end|>' → logprob: -5.321683883666992
    7. ' ensuite' → logprob: -5.446683883666992
    8. ' représ' → logprob: -5.446683883666992
    9. ' permettre' → logprob: -5.821683883666992
    10. ' =' → logprob: -5.821683883666992

Token 64: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4703274667263031
    2. ' à' → logprob: -1.5953274965286255
    3. ' ' → logprob: -2.470327377319336
    4. 'de' → logprob: -2.845327377319336
    5. ' au' → logprob: -4.470327377319336
    6. 'à' → logprob: -4.970327377319336
    7. 'au' → logprob: -5.595327377319336
    8. '```' → logprob: -6.095327377319336
    9. ')' → logprob: -7.095327377319336
    10. '  ' → logprob: -7.220327377319336

Token 65: ' vérifier' (ID: 93671)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.731115996837616
    2. ' l' → logprob: -2.1061160564422607
    3. 'la' → logprob: -2.2311160564422607
    4. 'm' → logprob: -2.2311160564422607
    5. ' la' → logprob: -2.4811160564422607
    6. 'le' → logprob: -3.1061160564422607
    7. ' m' → logprob: -3.9811160564422607
    8. ' ' → logprob: -4.606115818023682
    9. ' le' → logprob: -4.731115818023682
    10. 'n' → logprob: -5.356115818023682

Token 66: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2588530778884888
    2. ')' → logprob: -1.5088530778884888
    3. ' l' → logprob: -1.7588530778884888
    4. ' if' → logprob: -2.383852958679199
    5. ' si' → logprob: -3.258852958679199
    6. 's' → logprob: -3.383852958679199
    7. 'n' → logprob: -3.633852958679199
    8. 'le' → logprob: -3.758852958679199
    9. ' ' → logprob: -3.758852958679199
    10. 'si' → logprob: -4.383852958679199

Token 67: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.07404284924268723
    2. ' condition' → logprob: -2.824042797088623
    3. 'cond' → logprob: -5.949042797088623
    4. 'prem' → logprob: -6.449042797088623
    5. 'égalité' → logprob: -6.574042797088623
    6. 'possible' → logprob: -7.199042797088623
    7. 'fois' → logprob: -7.324042797088623
    8. 'part' → logprob: -7.449042797088623
    9. ' ' → logprob: -7.574042797088623
    10. 'contr' → logprob: -8.199043273925781

Token 68: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7641412019729614
    2. ' ' → logprob: -1.7641412019729614
    3. 'if' → logprob: -2.139141082763672
    4. '>' → logprob: -2.514141082763672
    5. '-' → logprob: -3.264141082763672
    6. '<|end|>' → logprob: -3.764141082763672
    7. '(' → logprob: -3.889141082763672
    8. '```' → logprob: -4.139141082763672
    9. ' )' → logprob: -4.389141082763672
    10. ' (' → logprob: -5.139141082763672

Token 69: ' pour' (ID: 1930)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.4829875230789185
    2. ' effectuer' → logprob: -2.107987403869629
    3. ' n' → logprob: -2.232987403869629
    4. 'm' → logprob: -3.107987403869629
    5. ' stock' → logprob: -3.232987403869629
    6. ' calcul' → logprob: -3.232987403869629
    7. ' continuer' → logprob: -3.232987403869629
    8. 'n' → logprob: -3.232987403869629
    9. ' affect' → logprob: -3.357987403869629
    10. ' afficher' → logprob: -3.482987403869629

Token 70: ' des' (ID: 731)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.4009772539138794
    2. ' le' → logprob: -1.7759772539138794
    3. ' m' → logprob: -2.02597713470459
    4. ' l' → logprob: -2.27597713470459
    5. ' effectuer' → logprob: -2.27597713470459
    6. ' la' → logprob: -2.65097713470459
    7. 'l' → logprob: -2.90097713470459
    8. ' calcul' → logprob: -3.02597713470459
    9. ' afficher' → logprob: -4.52597713470459
    10. ' d' → logprob: -4.77597713470459

Token 71: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.8529689908027649
    2. 'calcul' → logprob: -1.1029689311981201
    3. ' opérations' → logprob: -1.9779689311981201
    4. 'aff' → logprob: -3.72796893119812
    5. ' calculations' → logprob: -4.852969169616699
    6. ')' → logprob: -4.977969169616699
    7. '_' → logprob: -5.102969169616699
    8. ' espaces' → logprob: -5.102969169616699
    9. 's' → logprob: -5.477969169616699
    10. 'n' → logprob: -5.602969169616699

Token 72: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00027099132421426475
    2. 'es' → logprob: -9.00027084350586
    3. 'ations' → logprob: -9.75027084350586
    4. 'atrices' → logprob: -9.87527084350586
    5. 'us' → logprob: -10.75027084350586
    6. '#' → logprob: -11.62527084350586
    7. 'ulations' → logprob: -13.62527084350586
    8. 'atrice' → logprob: -13.87527084350586
    9. 'ules' → logprob: -13.87527084350586
    10. '```' → logprob: -14.37527084350586

Token 73: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14915160834789276
    2. '<|end|>' → logprob: -2.399151563644409
    3. '*' → logprob: -3.899151563644409
    4. ' )' → logprob: -4.899151802062988
    5. ' ' → logprob: -5.524151802062988
    6. '-' → logprob: -5.649151802062988
    7. '**' → logprob: -5.649151802062988
    8. '<|end|>' → logprob: -6.524151802062988
    9. ' -' → logprob: -6.649151802062988
    10. ' *' → logprob: -6.774151802062988

Token 74: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9442300796508789
    2. '**' → logprob: -1.819230079650879
    3. ' ' → logprob: -1.944230079650879
    4. '<|end|>' → logprob: -1.944230079650879
    5. '-' → logprob: -3.194230079650879
    6. 'n' → logprob: -3.819230079650879
    7. '*' → logprob: -3.819230079650879
    8. '#' → logprob: -4.319230079650879
    9. ' )' → logprob: -4.694230079650879
    10. '```' → logprob: -4.819230079650879

Token 75: ' Cela' (ID: 44403)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5642674565315247
    2. ')' → logprob: -1.4392673969268799
    3. 'v' → logprob: -2.68926739692688
    4. 'result' → logprob: -3.56426739692688
    5. 'val' → logprob: -4.189267635345459
    6. ' )' → logprob: -4.814267635345459
    7. ' (' → logprob: -4.814267635345459
    8. ' ' → logprob: -4.939267635345459
    9. 'if' → logprob: -5.189267635345459
    10. 'value' → logprob: -5.189267635345459

Token 76: ' représente' (ID: 88912)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3613176345825195
    2. ' -' → logprob: -2.1113176345825195
    3. ' va' → logprob: -2.2363176345825195
    4. ' vaut' → logprob: -2.3613176345825195
    5. 'n' → logprob: -2.8613176345825195
    6. ' n' → logprob: -3.1113176345825195
    7. ')' → logprob: -3.4863176345825195
    8. ' sert' → logprob: -3.6113176345825195
    9. ' serv' → logprob: -3.7363176345825195
    10. ' =' → logprob: -3.8613176345825195

Token 77: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7450423836708069
    2. ' l' → logprob: -0.8700423836708069
    3. ' une' → logprob: -3.120042324066162
    4. 'l' → logprob: -3.995042324066162
    5. ' un' → logprob: -3.995042324066162
    6. ' le' → logprob: -4.245042324066162
    7. 'la' → logprob: -5.620042324066162
    8. 'le' → logprob: -5.870042324066162
    9. 'une' → logprob: -6.745042324066162
    10. ' ' → logprob: -7.620042324066162

Token 78: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5313670635223389
    2. 'val' → logprob: -1.4063670635223389
    3. 'distance' → logprob: -2.406367063522339
    4. 'quant' → logprob: -4.781367301940918
    5. 'base' → logprob: -4.781367301940918
    6. 'nombre' → logprob: -4.906367301940918
    7. 'difference' → logprob: -4.906367301940918
    8. ' différence' → logprob: -5.031367301940918
    9. '"' → logprob: -5.156367301940918
    10. 'pl' → logprob: -5.656367301940918

Token 79: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.17118261754512787
    2. ' between' → logprob: -2.296182632446289
    3. 'entre' → logprob: -3.796182632446289
    4. 'n' → logprob: -4.546182632446289
    5. '<|end|>' → logprob: -5.296182632446289
    6. ' n' → logprob: -5.546182632446289
    7. 'between' → logprob: -5.546182632446289
    8. ' =' → logprob: -5.546182632446289
    9. ' ' → logprob: -5.796182632446289
    10. ')' → logprob: -6.921182632446289

Token 80: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.21192646026611328
    2. 'n' → logprob: -1.7119264602661133
    3. 'l' → logprob: -5.711926460266113
    4. ' les' → logprob: -6.461926460266113
    5. ' l' → logprob: -6.461926460266113
    6. 'les' → logprob: -6.961926460266113
    7. ' ' → logprob: -6.961926460266113
    8. 'le' → logprob: -7.211926460266113
    9. ' la' → logprob: -8.461926460266113
    10. ' le' → logprob: -8.586926460266113

Token 81: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.0836591050028801
    2. 'et' → logprob: -2.5836591720581055
    3. ' and' → logprob: -6.2086591720581055
    4. ' ' → logprob: -7.3336591720581055
    5. '-' → logprob: -7.4586591720581055
    6. ' -' → logprob: -7.9586591720581055
    7. '<|end|>' → logprob: -7.9586591720581055
    8. 'and' → logprob: -9.083659172058105
    9. ',' → logprob: -9.208659172058105
    10. ')' → logprob: -9.208659172058105

Token 82: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4753607511520386
    2. 'd' → logprob: -0.9753607511520386
    3. 'm' → logprob: -7.350360870361328
    4. ' m' → logprob: -7.850360870361328
    5. ' ' → logprob: -8.975360870361328
    6. 'n' → logprob: -10.225360870361328
    7. ' n' → logprob: -10.725360870361328
    8. '	d' → logprob: -10.725360870361328
    9. 'l' → logprob: -11.225360870361328
    10. 's' → logprob: -12.475360870361328

Token 83: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6315039992332458
    2. 'diff' → logprob: -1.7565040588378906
    3. 'result' → logprob: -3.0065040588378906
    4. 'n' → logprob: -3.2565040588378906
    5. 'val' → logprob: -3.5065040588378906
    6. ' ' → logprob: -3.5065040588378906
    7. '-' → logprob: -3.8815040588378906
    8. 'res' → logprob: -4.256504058837891
    9. '_' → logprob: -4.256504058837891
    10. '_diff' → logprob: -4.756504058837891

Token 84: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.26373255252838135
    2. 'x' → logprob: -2.763732433319092
    3. 'difference' → logprob: -2.888732433319092
    4. 'val' → logprob: -3.263732433319092
    5. 'v' → logprob: -3.513732433319092
    6. 'result' → logprob: -4.638732433319092
    7. 'delta' → logprob: -5.013732433319092
    8. 'n' → logprob: -5.263732433319092
    9. 'res' → logprob: -5.263732433319092
    10. 'r' → logprob: -5.638732433319092

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09437120705842972
    2. '=' → logprob: -2.4693713188171387
    3. 'er' → logprob: -5.719371318817139
    4. '_' → logprob: -6.344371318817139
    5. ')' → logprob: -9.34437084197998
    6. 'érence' → logprob: -9.59437084197998
    7. ',' → logprob: -10.34437084197998
    8. 'e' → logprob: -10.34437084197998
    9. 'é' → logprob: -10.59437084197998
    10. ' ' → logprob: -10.59437084197998

Token 86: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2016024887561798
    2. 'n' → logprob: -1.7016024589538574
    3. '(n' → logprob: -9.326602935791016
    4. ' (' → logprob: -9.326602935791016
    5. '	n' → logprob: -12.326602935791016
    6. ' ' → logprob: -12.826602935791016
    7. '(' → logprob: -13.576602935791016
    8. ' ' → logprob: -13.576602935791016
    9. ')' → logprob: -15.451602935791016
    10. ')n' → logprob: -15.576602935791016

Token 87: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008860845118761063
    2. '-' → logprob: -4.758861064910889
    3. ' ' → logprob: -8.38386058807373
    4. ' ' → logprob: -12.00886058807373
    5. '<|end|>' → logprob: -12.50886058807373
    6. ' -
' → logprob: -13.63386058807373
    7. ')' → logprob: -13.75886058807373
    8. '-d' → logprob: -14.25886058807373
    9. '"' → logprob: -14.25886058807373
    10. '_' → logprob: -14.63386058807373

Token 88: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.474087119102478
    2. 'd' → logprob: -0.974087119102478
    3. '	d' → logprob: -12.09908676147461
    4. ' ' → logprob: -12.84908676147461
    5. ' ' → logprob: -13.72408676147461
    6. '_d' → logprob: -14.97408676147461
    7. ' д' → logprob: -15.84908676147461
    8. '1' → logprob: -16.72408676147461
    9. ')d' → logprob: -17.09908676147461
    10. '	' → logprob: -17.47408676147461

Token 89: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8029548525810242
    2. 'if' → logprob: -0.9279548525810242
    3. '#' → logprob: -2.302954912185669
    4. '

' → logprob: -4.55295467376709
    5. ' 
' → logprob: -5.05295467376709
    6. ' if' → logprob: -5.05295467376709
    7. '' → logprob: -5.30295467376709
    8. ',' → logprob: -5.30295467376709
    9. '.' → logprob: -5.55295467376709
    10. '<|end|>' → logprob: -5.67795467376709

Token 90: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6729020476341248
    2. '
' → logprob: -1.0479021072387695
    3. '#' → logprob: -2.4229021072387695
    4. 'i' → logprob: -3.9229021072387695
    5. '<|end|>' → logprob: -5.0479021072387695
    6. '' → logprob: -5.2979021072387695
    7. ' if' → logprob: -5.4229021072387695
    8. ' 
' → logprob: -6.1729021072387695
    9. '

' → logprob: -6.2979021072387695
    10. '\n' → logprob: -6.5479021072387695

Token 91: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22844600677490234
    2. '#' → logprob: -1.6034460067749023
    3. ' if' → logprob: -6.478446006774902
    4. 'Si' → logprob: -7.603446006774902
    5. 'm' → logprob: -7.978446006774902
    6. 'result' → logprob: -8.228446006774902
    7. 'v' → logprob: -9.478446006774902
    8. 'Calcul' → logprob: -9.728446006774902
    9. 'si' → logprob: -10.103446006774902
    10. 'for' → logprob: -10.603446006774902

Token 92: 'er' (ID: 259)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2538269758224487
    2. 'er' → logprob: -1.6288269758224487
    3. 'u' → logprob: -1.6288269758224487
    4. '=' → logprob: -1.7538269758224487
    5. 'e' → logprob: -2.8788270950317383
    6. '_' → logprob: -3.1288270950317383
    7. ' =' → logprob: -4.628827095031738
    8. ',' → logprob: -4.753827095031738
    9. 'a' → logprob: -4.753827095031738
    10. '.' → logprob: -5.128827095031738

Token 93: ' la' (ID: 557)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.7828659415245056
    2. '(' → logprob: -1.4078660011291504
    3. 'm' → logprob: -1.6578660011291504
    4. ' (' → logprob: -2.9078660011291504
    5. ' la' → logprob: -3.6578660011291504
    6. 'l' → logprob: -5.28286600112915
    7. ' ' → logprob: -5.28286600112915
    8. ' l' → logprob: -5.40786600112915
    9. ' le' → logprob: -6.28286600112915
    10. '(m' → logprob: -6.40786600112915

Token 94: ' valeur' (ID: 41664)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2981790602207184
    2. 'v' → logprob: -1.798179030418396
    3. 's' → logprob: -2.6731791496276855
    4. 'val' → logprob: -5.4231791496276855
    5. 'p' → logprob: -5.5481791496276855
    6. 'r' → logprob: -6.1731791496276855
    7. 'b' → logprob: -6.4231791496276855
    8. '.' → logprob: -6.9231791496276855
    9. ' m' → logprob: -6.9231791496276855
    10. ' valeur' → logprob: -6.9231791496276855

Token 95: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0597763061523438
    2. '(' → logprob: -1.1847763061523438
    3. 'm' → logprob: -1.6847763061523438
    4. ' m' → logprob: -2.5597763061523438
    5. ' *' → logprob: -4.309776306152344
    6. '*' → logprob: -4.434776306152344
    7. '_' → logprob: -4.559776306152344
    8. ' ' → logprob: -5.059776306152344
    9. '**' → logprob: -5.184776306152344
    10. '(m' → logprob: -5.184776306152344

Token 96: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.047029659152030945
    2. ' m' → logprob: -3.172029733657837
    3. 'n' → logprob: -6.797029495239258
    4. 'd' → logprob: -7.047029495239258
    5. 'diff' → logprob: -7.547029495239258
    6. ')' → logprob: -7.922029495239258
    7. '(m' → logprob: -8.047029495239258
    8. '(' → logprob: -8.797029495239258
    9. ' n' → logprob: -8.797029495239258
    10. ' (' → logprob: -8.797029495239258

Token 97: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6056679487228394
    2. '+' → logprob: -1.7306679487228394
    3. ' /' → logprob: -2.105668067932129
    4. ' -' → logprob: -2.605668067932129
    5. '-' → logprob: -3.480668067932129
    6. '/' → logprob: -4.105668067932129
    7. ' *' → logprob: -4.730668067932129
    8. ')' → logprob: -4.730668067932129
    9. '*' → logprob: -4.855668067932129
    10. '+m' → logprob: -6.105668067932129

Token 98: ' d' (ID: 272)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.422281414270401
    2. 'm' → logprob: -1.1722813844680786
    3. ' diff' → logprob: -4.047281265258789
    4. 'diff' → logprob: -4.672281265258789
    5. ' d' → logprob: -5.547281265258789
    6. 'd' → logprob: -6.672281265258789
    7. ' ' → logprob: -6.672281265258789
    8. ' n' → logprob: -7.172281265258789
    9. 'n' → logprob: -8.422281265258789
    10. ')' → logprob: -9.297281265258789

Token 99: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1569846272468567
    2. ' )' → logprob: -2.406984567642212
    3. ' +' → logprob: -3.531984567642212
    4. '+' → logprob: -4.656984806060791
    5. ' -' → logprob: -4.656984806060791
    6. '*' → logprob: -6.281984806060791
    7. ')**' → logprob: -6.656984806060791
    8. '-' → logprob: -6.906984806060791
    9. ' *' → logprob: -7.031984806060791
    10. ')*' → logprob: -8.031984329223633

Token 100: ' qui' (ID: 2780)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' sera' (ID: 15511)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.13238625228405
    2. '<|end|>' → logprob: -3.2573862075805664
    3. '#' → logprob: -3.3823862075805664
    4. ' #' → logprob: -3.6323862075805664
    5. ')' → logprob: -4.757386207580566
    6. ' ' → logprob: -6.132386207580566
    7. '<|end|>' → logprob: -6.132386207580566
    8. ' vont' → logprob: -6.257386207580566
    9. ' est' → logprob: -6.632386207580566
    10. ' sera' → logprob: -6.882386207580566

Token 102: ' aussi' (ID: 9894)
  Prédit: ' utilisée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.004789664875715971
    2. ' utilisé' → logprob: -5.75478982925415
    3. 'util' → logprob: -7.12978982925415
    4. ' utile' → logprob: -8.504789352416992
    5. ' stock' → logprob: -8.879789352416992
    6. ' used' → logprob: -9.129789352416992
    7. ' utilis' → logprob: -9.504789352416992
    8. ' utilisées' → logprob: -9.754789352416992
    9. ' utilisés' → logprob: -10.129789352416992
    10. 'stock' → logprob: -10.754789352416992

Token 103: ' utilisée' (ID: 106548)
  Prédit: ' utilisée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.009424660354852676
    2. 'util' → logprob: -5.634424686431885
    3. ' utilisé' → logprob: -5.634424686431885
    4. ' utile' → logprob: -6.759424686431885
    5. ' utilis' → logprob: -8.884424209594727
    6. ' used' → logprob: -9.009424209594727
    7. ' utilisées' → logprob: -9.259424209594727
    8. 'utile' → logprob: -9.509424209594727
    9. '
' → logprob: -9.634424209594727
    10. ' utilisés' → logprob: -9.759424209594727

Token 104: ' dans' (ID: 2671)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6808327436447144
    2. ')' → logprob: -1.0558327436447144
    3. ' *' → logprob: -2.555832862854004
    4. ' ' → logprob: -3.555832862854004
    5. '<|end|>' → logprob: -4.305832862854004
    6. ' )' → logprob: -4.680832862854004
    7. '+' → logprob: -5.305832862854004
    8. '.' → logprob: -6.055832862854004
    9. '#' → logprob: -6.430832862854004
    10. ',' → logprob: -6.805832862854004

Token 105: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7160624861717224
    2. ' des' → logprob: -1.7160625457763672
    3. 'les' → logprob: -2.466062545776367
    4. 'l' → logprob: -2.591062545776367
    5. ' l' → logprob: -2.966062545776367
    6. ' la' → logprob: -3.591062545776367
    7. 'le' → logprob: -3.716062545776367
    8. 'la' → logprob: -3.966062545776367
    9. ' une' → logprob: -4.216062545776367
    10. ' le' → logprob: -4.341062545776367

Token 106: ' comparaison' (ID: 170508)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.47030800580978394
    2. 'condition' → logprob: -1.5953080654144287
    3. 'calcul' → logprob: -2.4703080654144287
    4. ' suite' → logprob: -3.3453080654144287
    5. '#' → logprob: -4.09530782699585
    6. 'form' → logprob: -4.84530782699585
    7. 'print' → logprob: -5.59530782699585
    8. 'expression' → logprob: -5.59530782699585
    9. ' condition' → logprob: -5.59530782699585
    10. 's' → logprob: -5.72030782699585

Token 107: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0577983856201172
    2. '*' → logprob: -1.0577983856201172
    3. '+' → logprob: -2.307798385620117
    4. ' *' → logprob: -2.557798385620117
    5. 'diff' → logprob: -3.182798385620117
    6. '.' → logprob: -3.557798385620117
    7. '*(' → logprob: -4.307798385620117
    8. ' +' → logprob: -4.432798385620117
    9. '1' → logprob: -5.307798385620117
    10. ' )' → logprob: -5.307798385620117

Token 108: ' conditions' (ID: 6409)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2849414348602295
    2. 'la' → logprob: -1.6599414348602295
    3. ' l' → logprob: -3.5349414348602295
    4. ' la' → logprob: -4.409941673278809
    5. 'des' → logprob: -5.909941673278809
    6. 'les' → logprob: -6.159941673278809
    7. 'diff' → logprob: -6.409941673278809
    8. 'd' → logprob: -6.784941673278809
    9. ' certaines' → logprob: -6.784941673278809
    10. 's' → logprob: -7.034941673278809

Token 109: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4590809643268585
    2. '<|end|>' → logprob: -1.2090809345245361
    3. '*' → logprob: -4.084081172943115
    4. '+' → logprob: -4.209081172943115
    5. '.' → logprob: -4.834081172943115
    6. ' ' → logprob: -4.959081172943115
    7. '<|end|>' → logprob: -4.959081172943115
    8. ' )' → logprob: -5.209081172943115
    9. ' *' → logprob: -5.834081172943115
    10. ' +' → logprob: -6.334081172943115

Token 110: 'min' (ID: 1493)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.389432430267334
    2. 'plus' → logprob: -1.639432430267334
    3. 'one' → logprob: -1.764432430267334
    4. 'sum' → logprob: -2.514432430267334
    5. 'diff' → logprob: -2.889432430267334
    6. 'comp' → logprob: -3.014432430267334
    7. 's' → logprob: -3.514432430267334
    8. 'v' → logprob: -3.639432430267334
    9. 'p' → logprob: -3.889432430267334
    10. 'inc' → logprob: -4.139432430267334

Token 111: '_val' (ID: 13694)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14797797799110413
    2. '_val' → logprob: -2.0229780673980713
    3. '_diff' → logprob: -5.772977828979492
    4. '_value' → logprob: -6.897977828979492
    5. 'val' → logprob: -8.147977828979492
    6. 'imum' → logprob: -8.147977828979492
    7. '_d' → logprob: -9.272977828979492
    8. 'us' → logprob: -9.272977828979492
    9. '(' → logprob: -9.647977828979492
    10. '_=' → logprob: -10.397977828979492

Token 112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09252651780843735
    2. ' =' → logprob: -2.467526435852051
    3. 'ue' → logprob: -6.342526435852051
    4. '_' → logprob: -6.717526435852051
    5. ',' → logprob: -8.09252643585205
    6. 'uer' → logprob: -8.96752643585205
    7. ' ' → logprob: -9.84252643585205
    8. 'u' → logprob: -9.84252643585205
    9. '_val' → logprob: -10.84252643585205
    10. '+' → logprob: -11.84252643585205

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07000456750392914
    2. ' ' → logprob: -2.695004463195801
    3. '(' → logprob: -9.6950044631958
    4. ' (' → logprob: -11.9450044631958
    5. ' ' → logprob: -15.9450044631958
    6. '+' → logprob: -17.945005416870117
    7. '  ' → logprob: -18.070005416870117
    8. '１' → logprob: -18.445005416870117
    9. 'int' → logprob: -18.695005416870117
    10. '   ' → logprob: -19.320005416870117

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022523177904076874
    2. '(' → logprob: -8.625225067138672
    3. ' ' → logprob: -10.000225067138672
    4. ' (' → logprob: -15.500225067138672
    5. '+' → logprob: -18.375225067138672
    6. '１' → logprob: -19.000225067138672
    7. '```' → logprob: -19.500225067138672
    8. '(
' → logprob: -19.625225067138672
    9. 'int' → logprob: -19.875225067138672
    10. '`' → logprob: -20.125225067138672

Token 115: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1002078503370285
    2. ' +' → logprob: -2.350207805633545
    3. '+
' → logprob: -14.850208282470703
    4. ' plus' → logprob: -15.475208282470703
    5. '+d' → logprob: -15.725208282470703
    6. ' ' → logprob: -15.725208282470703
    7. ' +
' → logprob: -16.350208282470703
    8. '＋' → logprob: -16.475208282470703
    9. ' ' → logprob: -18.100208282470703
    10. '+n' → logprob: -18.100208282470703

Token 116: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20141372084617615
    2. ' d' → logprob: -1.7014137506484985
    3. '	d' → logprob: -15.076414108276367
    4. '_d' → logprob: -16.076414108276367
    5. ')d' → logprob: -16.826414108276367
    6. ' ' → logprob: -17.451414108276367
    7. ' ' → logprob: -17.701414108276367
    8. '*d' → logprob: -18.701414108276367
    9. '"d' → logprob: -19.951414108276367
    10. '.d' → logprob: -19.951414108276367

Token 117: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6799179911613464
    2. '<|end|>' → logprob: -0.8049179911613464
    3. '#' → logprob: -4.304917812347412
    4. ')' → logprob: -4.804917812347412
    5. 'if' → logprob: -5.054917812347412
    6. ' ' → logprob: -5.554917812347412
    7. '\n' → logprob: -5.929917812347412
    8. 'n' → logprob: -6.304917812347412
    9. '

' → logprob: -6.429917812347412
    10. ' 
' → logprob: -6.429917812347412

Token 118: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.182663232088089
    2. '
' → logprob: -2.0576632022857666
    3. '#' → logprob: -3.8076632022857666
    4. ' if' → logprob: -5.307663440704346
    5. '<|end|>' → logprob: -5.307663440704346
    6. 'n' → logprob: -5.807663440704346
    7. 'i' → logprob: -6.807663440704346
    8. ',' → logprob: -7.682663440704346
    9. ' 
' → logprob: -7.807663440704346
    10. '\n' → logprob: -8.307662963867188

Token 119: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1898118257522583
    2. '#' → logprob: -1.8148118257522583
    3. ' if' → logprob: -4.689811706542969
    4. 'Si' → logprob: -8.814811706542969
    5. 'for' → logprob: -8.939811706542969
    6. 'result' → logprob: -9.064811706542969
    7. '
' → logprob: -9.064811706542969
    8. ' #' → logprob: -9.689811706542969
    9. 'condition' → logprob: -9.939811706542969
    10. 'while' → logprob: -10.189811706542969

Token 120: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.00026181264547631145
    2. 'if' → logprob: -8.750262260437012
    3. 'ifer' → logprob: -10.500262260437012
    4. '#' → logprob: -10.625262260437012
    5. 'ify' → logprob: -10.750262260437012
    6. 'ifiez' → logprob: -11.625262260437012
    7. 'ifie' → logprob: -12.125262260437012
    8. 'IFIER' → logprob: -12.500262260437012
    9. '

' → logprob: -12.750262260437012
    10. 'ifi' → logprob: -13.000262260437012

Token 121: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5947024822235107
    2. ' si' → logprob: -0.9697024822235107
    3. 'if' → logprob: -2.7197024822235107
    4. 'si' → logprob: -6.46970272064209
    5. ' la' → logprob: -6.84470272064209
    6. ':' → logprob: -7.96970272064209
    7. ' que' → logprob: -9.46970272064209
    8. 'diff' → logprob: -9.71970272064209
    9. 'le' → logprob: -10.96970272064209
    10. ' ' → logprob: -11.34470272064209

Token 122: ' la' (ID: 557)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.17718225717544556
    2. 'diff' → logprob: -1.9271821975708008
    3. ' n' → logprob: -4.302182197570801
    4. 'n' → logprob: -6.677182197570801
    5. ' m' → logprob: -7.177182197570801
    6. ' min' → logprob: -8.1771821975708
    7. ' (' → logprob: -8.3021821975708
    8. 'min' → logprob: -8.5521821975708
    9. '(diff' → logprob: -8.5521821975708
    10. ' d' → logprob: -9.4271821975708

Token 123: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4293173551559448
    2. ' valeur' → logprob: -1.6793173551559448
    3. ' diff' → logprob: -2.5543174743652344
    4. 'val' → logprob: -3.0543174743652344
    5. 'condition' → logprob: -4.429317474365234
    6. ' condition' → logprob: -4.429317474365234
    7. ' différence' → logprob: -4.929317474365234
    8. ' variable' → logprob: -6.679317474365234
    9. 'difference' → logprob: -7.054317474365234
    10. ' somme' → logprob: -7.054317474365234

Token 124: ' (' (ID: 350)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.0111876726150513
    2. ' >=' → logprob: -1.3861876726150513
    3. ' <' → logprob: -1.7611876726150513
    4. ' >' → logprob: -2.3861875534057617
    5. '>' → logprob: -3.1361875534057617
    6. '>=' → logprob: -3.6361875534057617
    7. '<' → logprob: -4.136187553405762
    8. ' <=' → logprob: -4.136187553405762
    9. ' diff' → logprob: -4.511187553405762
    10. ' ' → logprob: -5.511187553405762

Token 125: 'n' (ID: 77)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4746403992176056
    2. ' diff' → logprob: -0.9746403694152832
    3. ')' → logprob: -8.474640846252441
    4. ' ' → logprob: -9.224640846252441
    5. ' n' → logprob: -9.599640846252441
    6. 'n' → logprob: -10.224640846252441
    7. ' >=' → logprob: -10.474640846252441
    8. '	diff' → logprob: -10.599640846252441
    9. '>' → logprob: -10.849640846252441
    10. ' est' → logprob: -11.349640846252441

Token 126: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8370245099067688
    2. '-' → logprob: -1.712024450302124
    3. ' >=' → logprob: -2.212024450302124
    4. ' <' → logprob: -2.587024450302124
    5. ')' → logprob: -3.087024450302124
    6. '>=' → logprob: -3.212024450302124
    7. ' >' → logprob: -3.337024450302124
    8. '>' → logprob: -3.587024450302124
    9. '<' → logprob: -3.712024450302124
    10. 'diff' → logprob: -3.837024450302124

Token 127: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.35405707359313965
    2. ' d' → logprob: -1.3540570735931396
    3. 'diff' → logprob: -3.4790570735931396
    4. ' diff' → logprob: -4.729057312011719
    5. ' ' → logprob: -8.854057312011719
    6. ')' → logprob: -9.229057312011719
    7. 'dif' → logprob: -11.354057312011719
    8. '	diff' → logprob: -11.979057312011719
    9. '>' → logprob: -12.291557312011719
    10. '	d' → logprob: -12.666557312011719

Token 128: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005222494248300791
    2. ' )' → logprob: -5.380222320556641
    3. ')>=' → logprob: -8.50522232055664
    4. '>=' → logprob: -9.13022232055664
    5. '>' → logprob: -9.25522232055664
    6. ')>' → logprob: -9.50522232055664
    7. ' >=' → logprob: -10.00522232055664
    8. '<' → logprob: -11.00522232055664
    9. ')<' → logprob: -11.38022232055664
    10. ' >' → logprob: -11.38022232055664

Token 129: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8948240876197815
    2. ' >' → logprob: -1.3948240280151367
    3. ' <=' → logprob: -2.2698240280151367
    4. ' <' → logprob: -2.3948240280151367
    5. '>=' → logprob: -2.6448240280151367
    6. '>' → logprob: -3.1448240280151367
    7. '<=' → logprob: -4.144824028015137
    8. '<' → logprob: -4.394824028015137
    9. ' ==' → logprob: -5.769824028015137
    10. ' ' → logprob: -6.269824028015137

Token 130: ' inf' (ID: 5603)
  Prédit: ' supérieure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieure' → logprob: -0.39860799908638
    2. 'strict' → logprob: -2.0236079692840576
    3. ' strict' → logprob: -2.5236079692840576
    4. ' inf' → logprob: -3.3986079692840576
    5. ' supérieur' → logprob: -3.8986079692840576
    6. '>' → logprob: -4.523608207702637
    7. ' >=' → logprob: -4.523608207702637
    8. 'inf' → logprob: -4.898608207702637
    9. ' strictly' → logprob: -5.023608207702637
    10. 'sup' → logprob: -5.273608207702637

Token 131: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.011999296024441719
    2. 'érieur' → logprob: -4.761999130249023
    3. 'erie' → logprob: -6.261999130249023
    4. 'érie' → logprob: -6.636999130249023
    5. 'é' → logprob: -9.886999130249023
    6. 'éri' → logprob: -10.261999130249023
    7. '>' → logprob: -11.386999130249023
    8. 'er' → logprob: -11.511999130249023
    9. 'érieurs' → logprob: -11.511999130249023
    10. 'érieures' → logprob: -11.511999130249023

Token 132: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.054737720638513565
    2. 'à' → logprob: -3.6797378063201904
    3. ' or' → logprob: -4.304737567901611
    4. ' ou' → logprob: -5.304737567901611
    5. ' to' → logprob: -5.679737567901611
    6. ' a' → logprob: -6.429737567901611
    7. 'min' → logprob: -6.929737567901611
    8. ' ' → logprob: -7.054737567901611
    9. 'au' → logprob: -7.054737567901611
    10. 'ou' → logprob: -7.554737567901611

Token 133: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.23398853838443756
    2. ' min' → logprob: -1.6089885234832764
    3. 'm' → logprob: -5.8589887619018555
    4. ' m' → logprob: -5.8589887619018555
    5. '0' → logprob: -6.7339887619018555
    6. ' ' → logprob: -7.4839887619018555
    7. '1' → logprob: -7.8589887619018555
    8. ' n' → logprob: -8.108988761901855
    9. ' d' → logprob: -9.108988761901855
    10. 'n' → logprob: -9.108988761901855

Token 134: '1' (ID: 16)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.15425390005111694
    2. ' min' → logprob: -2.1542539596557617
    3. 'm' → logprob: -4.154253959655762
    4. ' m' → logprob: -4.654253959655762
    5. '1' → logprob: -6.904253959655762
    6. ' ' → logprob: -8.029253959655762
    7. ' n' → logprob: -8.654253959655762
    8. 'n' → logprob: -9.404253959655762
    9. '0' → logprob: -10.529253959655762
    10. ' d' → logprob: -10.654253959655762

Token 135: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.225937619805336
    2. '+' → logprob: -1.6009376049041748
    3. ' or' → logprob: -7.975937843322754
    4. ')' → logprob: -8.975937843322754
    5. ' ' → logprob: -11.475937843322754
    6. '+m' → logprob: -11.725937843322754
    7. '):' → logprob: -12.725937843322754
    8. ' )' → logprob: -12.850937843322754
    9. ' -' → logprob: -12.850937843322754
    10. ':' → logprob: -12.975937843322754

Token 136: ' d' (ID: 272)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7222166657447815
    2. ' m' → logprob: -1.2222166061401367
    3. ' d' → logprob: -2.0972166061401367
    4. 'd' → logprob: -2.4722166061401367
    5. 'min' → logprob: -4.722216606140137
    6. ' min' → logprob: -5.722216606140137
    7. ' ' → logprob: -8.597216606140137
    8. ')' → logprob: -10.347216606140137
    9. 'diff' → logprob: -10.534716606140137
    10. '```' → logprob: -10.909716606140137

Token 137: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2221282571554184
    2. ')' → logprob: -1.7221282720565796
    3. ' ):' → logprob: -4.347128391265869
    4. ':' → logprob: -5.097128391265869
    5. ' )' → logprob: -6.722128391265869
    6. ' :' → logprob: -8.847127914428711
    7. ' or' → logprob: -10.347127914428711
    8. '):
' → logprob: -10.722127914428711
    9. ' ' → logprob: -10.847127914428711
    10. ',' → logprob: -11.972127914428711

Token 138: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.97155623533763e-05
    2. ' if' → logprob: -9.500089645385742
    3. '
' → logprob: -11.125089645385742
    4. '```' → logprob: -16.750089645385742
    5. 'If' → logprob: -17.000089645385742
    6. ':' → logprob: -17.750089645385742
    7. 'ifs' → logprob: -17.875089645385742
    8. ';if' → logprob: -17.875089645385742
    9. 'i' → logprob: -18.375089645385742
    10. ':
' → logprob: -18.625089645385742

Token 139: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.0021913025993853807
    2. 'diff' → logprob: -6.127191066741943
    3. '	diff' → logprob: -12.377191543579102
    4. ' ' → logprob: -13.752191543579102
    5. '(diff' → logprob: -14.752191543579102
    6. ' dif' → logprob: -15.127191543579102
    7. ' ' → logprob: -15.752191543579102
    8. '_diff' → logprob: -18.3771915435791
    9. '.diff' → logprob: -19.0021915435791
    10. 'Diff' → logprob: -19.6271915435791

Token 140: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.001930301426909864
    2. '<' → logprob: -6.251930236816406
    3. ' <=' → logprob: -13.626930236816406
    4. ' ' → logprob: -15.126930236816406
    5. ' <",' → logprob: -16.501930236816406
    6. ')' → logprob: -17.126930236816406
    7. ' >=' → logprob: -17.376930236816406
    8. ' ' → logprob: -17.376930236816406
    9. ' >' → logprob: -17.751930236816406
    10. '.' → logprob: -18.376930236816406

Token 141: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.008614926598966122
    2. ' min' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.883614540100098
    4. 'm' → logprob: -16.633615493774414
    5. '	min' → logprob: -16.633615493774414
    6. '1' → logprob: -17.008615493774414
    7. '=min' → logprob: -17.633615493774414
    8. '(min' → logprob: -18.133615493774414
    9. 'max' → logprob: -18.633615493774414
    10. '```' → logprob: -18.758615493774414

Token 142: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -13.750001907348633
    3. 'val' → logprob: -15.250001907348633
    4. ' _' → logprob: -17.000001907348633
    5. '_VAL' → logprob: -18.375001907348633
    6. '__' → logprob: -18.750001907348633
    7. 'al' → logprob: -19.000001907348633
    8. '\' → logprob: -19.000001907348633
    9. '_va' → logprob: -19.250001907348633
    10. '_var' → logprob: -19.500001907348633

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.543733904138207e-05
    2. ' :' → logprob: -9.62509536743164
    3. ':
' → logprob: -10.50009536743164
    4. ':**' → logprob: -14.25009536743164
    5. ' and' → logprob: -14.37509536743164
    6. '):' → logprob: -14.87509536743164
    7. ' or' → logprob: -16.75009536743164
    8. ',' → logprob: -16.75009536743164
    9. ':

' → logprob: -17.00009536743164
    10. '():' → logprob: -17.12509536743164

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030632872134447098
    2. ':' → logprob: -4.030632972717285
    3. '
' → logprob: -5.530632972717285
    4. 'print' → logprob: -5.655632972717285
    5. '    
' → logprob: -5.905632972717285
    6. ' print' → logprob: -7.155632972717285
    7. '\n' → logprob: -7.405632972717285
    8. '	print' → logprob: -8.905632972717285
    9. '   ' → logprob: -9.155632972717285
    10. ':
' → logprob: -9.405632972717285

Token 145: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.33858031034469604
    2. 'print' → logprob: -1.3385803699493408
    3. '   ' → logprob: -3.713580369949341
    4. '    ' → logprob: -8.088580131530762
    5. ' pass' → logprob: -9.088580131530762
    6. ' ' → logprob: -10.088580131530762
    7. '    
' → logprob: -10.963580131530762
    8. 'pass' → logprob: -10.963580131530762
    9. 'n' → logprob: -11.088580131530762
    10. '#' (adapté à ' #') → logprob: -11.088580131530762

Token 146: ' Si' (ID: 7832)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1272658407688141
    2. 'print' → logprob: -2.1272659301757812
    3. ' pass' → logprob: -8.877265930175781
    4. '   ' → logprob: -9.377265930175781
    5. '#' → logprob: -10.252265930175781
    6. ' #' → logprob: -11.127265930175781
    7. ' n' → logprob: -11.377265930175781
    8. 'pass' → logprob: -11.502265930175781
    9. ' prin' → logprob: -12.127265930175781
    10. ' ' → logprob: -12.377265930175781

Token 147: ' la' (ID: 557)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.4122544527053833
    2. ' print' → logprob: -1.6622544527053833
    3. '   ' → logprob: -1.9122544527053833
    4. ' n' → logprob: -2.2872543334960938
    5. 'True' → logprob: -2.2872543334960938
    6. ' diff' → logprob: -2.7872543334960938
    7. '    ' → logprob: -2.9122543334960938
    8. 'n' → logprob: -3.6622543334960938
    9. 'print' → logprob: -3.6622543334960938
    10. 'diff' → logprob: -3.6622543334960938

Token 148: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12541896104812622
    2. ' print' → logprob: -2.7504189014434814
    3. 'diff' → logprob: -3.5004189014434814
    4. '   ' → logprob: -4.6254191398620605
    5. 'n' → logprob: -5.7504191398620605
    6. ' diff' → logprob: -6.8754191398620605
    7. 'difference' → logprob: -6.8754191398620605
    8. '#' → logprob: -7.0004191398620605
    9. ':' → logprob: -7.1254191398620605
    10. 'pass' → logprob: -7.1254191398620605

Token 149: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10345426201820374
    2. ' :' → logprob: -2.978454351425171
    3. '   ' → logprob: -3.228454351425171
    4. '    ' → logprob: -5.353454113006592
    5. ' print' → logprob: -6.728454113006592
    6. ':
' → logprob: -7.728454113006592
    7. ' est' → logprob: -7.978454113006592
    8. ' ' → logprob: -8.22845458984375
    9. ' :
' → logprob: -9.22845458984375
    10. ' n' → logprob: -9.22845458984375

Token 150: ' vraie' (ID: 105841)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.35156750679016113
    2. ' True' → logprob: -1.2265675067901611
    3. 'v' → logprob: -6.851567268371582
    4. ' vraie' → logprob: -6.851567268371582
    5. 'V' → logprob: -7.476567268371582
    6. '   ' → logprob: -8.226567268371582
    7. ' V' → logprob: -10.101567268371582
    8. 'true' → logprob: -10.101567268371582
    9. ' ' → logprob: -10.476567268371582
    10. ' vrai' → logprob: -10.976567268371582

Token 151: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05777791887521744
    2. '   ' → logprob: -3.5577778816223145
    3. ':
' → logprob: -3.9327778816223145
    4. ',' → logprob: -5.5577778816223145
    5. '
' → logprob: -6.5577778816223145
    6. ' :' → logprob: -6.9327778816223145
    7. 'print' → logprob: -7.3077778816223145
    8. ' print' → logprob: -8.057778358459473
    9. ' :
' → logprob: -8.432778358459473
    10. '       ' → logprob: -9.182778358459473

Token 152: ' calcul' (ID: 7559)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.12921078503131866
    2. 'print' → logprob: -2.1292107105255127
    3. '   ' → logprob: -6.629210948944092
    4. ' result' → logprob: -7.629210948944092
    5. 'result' → logprob: -9.004210472106934
    6. ' pass' → logprob: -9.379210472106934
    7. ' n' → logprob: -10.254210472106934
    8. ' resultat' → logprob: -10.504210472106934
    9. '    
' → logprob: -10.754210472106934
    10. '    ' → logprob: -10.754210472106934

Token 153: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -4.5252596464706585e-05
    2. '   ' → logprob: -10.750044822692871
    3. 'ate' → logprob: -11.375044822692871
    4. 'ons' → logprob: -12.125044822692871
    5. '#' → logprob: -13.000044822692871
    6. 'print' → logprob: -13.250044822692871
    7. '       ' → logprob: -14.500044822692871
    8. 'r' → logprob: -14.875044822692871
    9. 'e' → logprob: -15.000044822692871
    10. 'ter' → logprob: -15.500044822692871

Token 154: ' une' (ID: 2463)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.108054280281067
    2. ' (' → logprob: -1.358054280281067
    3. ' m' → logprob: -1.858054280281067
    4. ' la' → logprob: -2.9830541610717773
    5. 'n' → logprob: -3.4830541610717773
    6. ' diff' → logprob: -3.4830541610717773
    7. 'diff' → logprob: -4.108054161071777
    8. 'm' → logprob: -4.108054161071777
    9. ' d' → logprob: -4.233054161071777
    10. ' ' → logprob: -4.483054161071777

Token 155: ' expression' (ID: 12973)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.04098626226186752
    2. 's' → logprob: -4.290986061096191
    3. 'diff' → logprob: -4.540986061096191
    4. '   ' → logprob: -5.665986061096191
    5. 'result' → logprob: -6.040986061096191
    6. 'print' → logprob: -6.790986061096191
    7. ' valeur' → logprob: -6.915986061096191
    8. '_val' → logprob: -7.290986061096191
    9. 'expression' → logprob: -7.290986061096191
    10. 'difference' → logprob: -7.415986061096191

Token 156: ' "' (ID: 392)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06705440580844879
    2. '   ' → logprob: -3.817054510116577
    3. ':' → logprob: -3.942054510116577
    4. '=' → logprob: -4.317054271697998
    5. ' :' → logprob: -5.942054271697998
    6. 'diff' → logprob: -6.442054271697998
    7. '    ' → logprob: -6.692054271697998
    8. ' (' → logprob: -6.942054271697998
    9. '(n' → logprob: -7.442054271697998
    10. '(' → logprob: -7.442054271697998

Token 157: 'ex' (ID: 490)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9973257780075073
    2. 'result' → logprob: -2.497325897216797
    3. '(n' → logprob: -2.747325897216797
    4. 'n' → logprob: -2.747325897216797
    5. ' diff' → logprob: -2.747325897216797
    6. 'diff' → logprob: -2.747325897216797
    7. ' n' → logprob: -2.997325897216797
    8. 'd' → logprob: -3.372325897216797
    9. ' m' → logprob: -3.497325897216797
    10. '(m' → logprob: -3.497325897216797

Token 158: '"' (ID: 1)
  Prédit: 'pression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pression' → logprob: -0.2277359962463379
    2. 'p' → logprob: -1.852735996246338
    3. 'pr' → logprob: -3.227735996246338
    4. 'ponent' → logprob: -6.227735996246338
    5. '1' → logprob: -7.227735996246338
    6. 'prim' → logprob: -7.227735996246338
    7. 'pres' → logprob: -7.352735996246338
    8. 'prime' → logprob: -7.602735996246338
    9. 'press' → logprob: -7.727735996246338
    10. ' =' → logprob: -8.10273551940918

Token 159: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005254507064819336
    2. '=' → logprob: -5.255254745483398
    3. '   ' → logprob: -12.005254745483398
    4. ' =
' → logprob: -12.005254745483398
    5. '_' → logprob: -12.630254745483398
    6. ' ' → logprob: -13.505254745483398
    7. ' ' → logprob: -14.255254745483398
    8. ':' → logprob: -14.630254745483398
    9. ' =
' → logprob: -14.880254745483398
    10. '  ' → logprob: -14.880254745483398

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8986526727676392
    2. ' (' → logprob: -1.6486526727676392
    3. ' ex' → logprob: -1.7736526727676392
    4. ' n' → logprob: -2.2736525535583496
    5. '    ' → logprob: -2.7736525535583496
    6. 'ex' → logprob: -3.5236525535583496
    7. 'n' → logprob: -4.77365255355835
    8. '(' → logprob: -5.64865255355835
    9. '    
' → logprob: -5.89865255355835
    10. '     
' → logprob: -5.89865255355835

Token 161: ' #' (ID: 1069)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.2324615716934204
    2. ' (' → logprob: -1.4824615716934204
    3. ' ex' → logprob: -2.107461452484131
    4. ' n' → logprob: -2.232461452484131
    5. 'n' → logprob: -2.482461452484131
    6. '(n' → logprob: -2.982461452484131
    7. 'd' → logprob: -3.607461452484131
    8. 'm' → logprob: -3.982461452484131
    9. ' m' → logprob: -4.107461452484131
    10. ' d' → logprob: -4.232461452484131

Token 162: ' -' (ID: 533)
  Prédit: ' ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.6202337145805359
    2. 'ex' → logprob: -0.8702337145805359
    3. ' result' → logprob: -4.245233535766602
    4. '   ' → logprob: -4.495233535766602
    5. 'result' → logprob: -4.745233535766602
    6. ' n' → logprob: -6.120233535766602
    7. ' (' → logprob: -6.495233535766602
    8. 'n' → logprob: -6.995233535766602
    9. ' m' → logprob: -7.120233535766602
    10. ' ' → logprob: -7.620233535766602

Token 163: ' Mult' (ID: 15431)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6144315600395203
    2. ' ex' → logprob: -0.8644315600395203
    3. ' (' → logprob: -4.489431381225586
    4. ' n' → logprob: -5.114431381225586
    5. '   ' → logprob: -5.489431381225586
    6. 'n' → logprob: -5.739431381225586
    7. '(' → logprob: -6.739431381225586
    8. ' m' → logprob: -6.739431381225586
    9. 'result' → logprob: -6.864431381225586
    10. '((' → logprob: -6.989431381225586

Token 164: 'iplier' (ID: 30777)
  Prédit: 'iplier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iplier' → logprob: -0.6236757636070251
    2. 'ipl' → logprob: -1.24867582321167
    3. 'ip' → logprob: -1.87367582321167
    4. 'ex' → logprob: -5.37367582321167
    5. '(' → logprob: -5.74867582321167
    6. ' (' → logprob: -6.49867582321167
    7. ' ex' → logprob: -6.49867582321167
    8. '*' → logprob: -6.49867582321167
    9. '   ' → logprob: -6.49867582321167
    10. '(n' → logprob: -6.87367582321167

Token 165: ' diff' (ID: 8868)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.8911942839622498
    2. ' n' → logprob: -1.1411943435668945
    3. ' (' → logprob: -2.2661943435668945
    4. 'diff' → logprob: -3.2661943435668945
    5. ' diff' → logprob: -3.2661943435668945
    6. 'n' → logprob: -3.5161943435668945
    7. 'm' → logprob: -3.7661943435668945
    8. ' d' → logprob: -4.6411943435668945
    9. '(n' → logprob: -4.8911943435668945
    10. '(diff' → logprob: -5.5161943435668945

Token 166: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04529871046543121
    2. ' par' → logprob: -3.5452988147735596
    3. '*' → logprob: -4.2952985763549805
    4. ' by' → logprob: -7.1702985763549805
    5. ',' → logprob: -7.5452985763549805
    6. 'par' → logprob: -8.79529857635498
    7. 'by' → logprob: -9.17029857635498
    8. '   ' → logprob: -9.54529857635498
    9. ' ' → logprob: -9.67029857635498
    10. ' ,' → logprob: -10.92029857635498

Token 167: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7681016325950623
    2. ' m' → logprob: -0.8931016325950623
    3. ' (' → logprob: -3.393101692199707
    4. '(m' → logprob: -3.518101692199707
    5. '2' → logprob: -4.518101692199707
    6. '(' → logprob: -4.518101692199707
    7. ' diff' → logprob: -5.018101692199707
    8. 'diff' → logprob: -5.018101692199707
    9. '(n' → logprob: -5.143101692199707
    10. ' n' → logprob: -5.268101692199707

Token 168: '2' (ID: 17)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.09053287655115128
    2. ' m' → logprob: -3.0905327796936035
    3. '(m' → logprob: -4.2155327796936035
    4. '2' → logprob: -4.7155327796936035
    5. 'diff' → logprob: -5.2155327796936035
    6. '(' → logprob: -5.7155327796936035
    7. 'd' → logprob: -6.3405327796936035
    8. 'n' → logprob: -6.4655327796936035
    9. ' (' → logprob: -6.4655327796936035
    10. '(n' → logprob: -6.8405327796936035

Token 169: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07943253964185715
    2. '*' → logprob: -2.579432487487793
    3. ' *
' → logprob: -8.704432487487793
    4. ' ' → logprob: -8.954432487487793
    5. ')' → logprob: -9.579432487487793
    6. ' )' → logprob: -10.454432487487793
    7. '
' → logprob: -10.579432487487793
    8. ',' → logprob: -10.954432487487793
    9. 'diff' → logprob: -10.954432487487793
    10. '<|end|>' → logprob: -11.204432487487793

Token 170: '   ' (ID: 271)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.578953206539154
    2. '*' → logprob: -0.828953206539154
    3. ',' → logprob: -6.453953266143799
    4. ' *
' → logprob: -7.703953266143799
    5. '   ' → logprob: -8.20395278930664
    6. '*
' → logprob: -9.07895278930664
    7. '.' → logprob: -9.20395278930664
    8. ')' → logprob: -9.45395278930664
    9. ':' → logprob: -9.57895278930664
    10. ' ,' → logprob: -9.95395278930664

Token 171: ' #' (ID: 1069)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3877508044242859
    2. '*' → logprob: -1.1377508640289307
    3. ')' → logprob: -8.262750625610352
    4. '<|end|>' → logprob: -8.387750625610352
    5. ',' → logprob: -8.887750625610352
    6. ' ' → logprob: -9.887750625610352
    7. ' *
' → logprob: -10.012750625610352
    8. '<|end|>' → logprob: -10.512750625610352
    9. 'diff' → logprob: -10.762750625610352
    10. '   ' → logprob: -11.012750625610352

Token 172: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.35473495721817017
    2. '*' → logprob: -1.4797348976135254
    3. ' *
' → logprob: -3.7297348976135254
    4. '   ' → logprob: -4.479734897613525
    5. 'ex' → logprob: -4.729734897613525
    6. ' ex' → logprob: -4.854734897613525
    7. 'diff' → logprob: -5.104734897613525
    8. '*
' → logprob: -5.479734897613525
    9. '2' → logprob: -5.604734897613525
    10. ',' → logprob: -6.729734897613525

Token 173: ' Div' (ID: 12302)
  Prédit: ' ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.6305802464485168
    2. ' diff' → logprob: -2.130580186843872
    3. 'ex' → logprob: -2.255580186843872
    4. '2' → logprob: -2.880580186843872
    5. ' ' → logprob: -3.005580186843872
    6. '*' → logprob: -3.130580186843872
    7. 'diff' → logprob: -3.505580186843872
    8. ' *' → logprob: -3.880580186843872
    9. ' (' → logprob: -4.630580425262451
    10. '+' → logprob: -5.505580425262451

Token 174: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.00041279601282440126
    2. 'isé' → logprob: -8.750412940979004
    3. 'er' → logprob: -9.125412940979004
    4. 'ider' → logprob: -10.375412940979004
    5. '#' → logprob: -10.375412940979004
    6. 'user' → logprob: -10.625412940979004
    7. 'ise' → logprob: -11.000412940979004
    8. 'isez' → logprob: -11.500412940979004
    9. '*' → logprob: -11.750412940979004
    10. 'id' → logprob: -12.625412940979004

Token 175: ' le' (ID: 505)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.19713813066482544
    2. ' diff' → logprob: -1.9471380710601807
    3. ' par' → logprob: -3.6971380710601807
    4. '(diff' → logprob: -5.82213830947876
    5. ' by' → logprob: -6.19713830947876
    6. ' (' → logprob: -6.19713830947876
    7. ' /' → logprob: -6.57213830947876
    8. '/' → logprob: -7.07213830947876
    9. 'par' → logprob: -7.57213830947876
    10. 'ex' → logprob: -8.072137832641602

Token 176: ' résultat' (ID: 62556)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5512675046920776
    2. ' diff' → logprob: -1.9262675046920776
    3. 'ex' → logprob: -2.301267623901367
    4. ' ex' → logprob: -2.676267623901367
    5. '*' → logprob: -4.176267623901367
    6. ' /' → logprob: -4.301267623901367
    7. ' result' → logprob: -4.551267623901367
    8. ' by' → logprob: -4.551267623901367
    9. ')' → logprob: -4.676267623901367
    10. ' par' → logprob: -4.801267623901367

Token 177: ' par' (ID: 686)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.62256920337677
    2. 'diff' → logprob: -1.99756920337677
    3. ' by' → logprob: -2.1225690841674805
    4. '/' → logprob: -2.3725690841674805
    5. 'by' → logprob: -2.9975690841674805
    6. ' //' → logprob: -3.3725690841674805
    7. '//' → logprob: -4.9975690841674805
    8. '2' → logprob: -5.2475690841674805
    9. ')' → logprob: -5.4975690841674805
    10. ',' → logprob: -5.7475690841674805

Token 178: ' n' (ID: 297)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.4048691987991333
    2. ' min' → logprob: -1.6548691987991333
    3. ' m' → logprob: -1.6548691987991333
    4. 'm' → logprob: -2.4048690795898438
    5. '3' → logprob: -2.7798690795898438
    6. '(' → logprob: -2.9048690795898438
    7. ' ' → logprob: -3.0298690795898438
    8. ' (' → logprob: -3.1548690795898438
    9. '2' → logprob: -3.2798690795898438
    10. ' n' → logprob: -4.279869079589844

Token 179: ' au' (ID: 2791)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5202623605728149
    2. '*' → logprob: -1.520262360572815
    3. 'ex' → logprob: -2.8952622413635254
    4. ' ex' → logprob: -2.8952622413635254
    5. ' /' → logprob: -3.1452622413635254
    6. '/' → logprob: -5.145262241363525
    7. ' *
' → logprob: -5.270262241363525
    8. ' /
' → logprob: -5.520262241363525
    9. '/ex' → logprob: -5.520262241363525
    10. '   ' → logprob: -5.645262241363525

Token 180: ' carré' (ID: 191546)
  Prédit: 'près'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'près' → logprob: -0.3565240204334259
    2. '2' → logprob: -2.6065239906311035
    3. 'float' → logprob: -2.9815239906311035
    4. 'n' → logprob: -3.6065239906311035
    5. '#' → logprob: -3.8565239906311035
    6. '**' → logprob: -4.2315239906311035
    7. '*' → logprob: -4.7315239906311035
    8. 'r' → logprob: -4.8565239906311035
    9. 'div' → logprob: -4.8565239906311035
    10. 'return' → logprob: -4.8565239906311035

Token 181: ' (' (ID: 350)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.1770566701889038
    2. ' ex' → logprob: -1.3020566701889038
    3. '*' → logprob: -1.8020566701889038
    4. ' /' → logprob: -2.6770567893981934
    5. ' *' → logprob: -2.8020567893981934
    6. 'diff' → logprob: -3.9270567893981934
    7. ' (' → logprob: -4.302056789398193
    8. '/' → logprob: -4.302056789398193
    9. '(' → logprob: -4.802056789398193
    10. '.' → logprob: -4.927056789398193

Token 182: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7027918100357056
    2. ' (' → logprob: -1.9527918100357056
    3. 'n' → logprob: -2.202791690826416
    4. ' )' → logprob: -2.327791690826416
    5. ' n' → logprob: -2.827791690826416
    6. '(n' → logprob: -3.577791690826416
    7. '**' → logprob: -3.952791690826416
    8. '2' → logprob: -3.952791690826416
    9. '(' → logprob: -5.077791690826416
    10. ')**' → logprob: -5.202791690826416

Token 183: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02368343248963356
    2. ' **' → logprob: -3.773683547973633
    3. '*' → logprob: -8.023683547973633
    4. ' *' → logprob: -10.398683547973633
    5. '**)' → logprob: -10.523683547973633
    6. ')' → logprob: -10.648683547973633
    7. ')**' → logprob: -11.148683547973633
    8. ' ' → logprob: -12.023683547973633
    9. ' **)' → logprob: -12.773683547973633
    10. ' ' → logprob: -13.523683547973633

Token 184: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004625937435775995
    2. ' ' → logprob: -5.3796257972717285
    3. '   ' → logprob: -13.504626274108887
    4. ')' → logprob: -13.504626274108887
    5. '  ' → logprob: -14.129626274108887
    6. '```' → logprob: -14.129626274108887
    7. ' ' → logprob: -15.129626274108887
    8. '**' → logprob: -15.254626274108887
    9. '²' → logprob: -15.379626274108887
    10. '
' → logprob: -15.879626274108887

Token 185: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002647927321959287
    2. ' ' → logprob: -8.250265121459961
    3. '```' → logprob: -13.625265121459961
    4. '   ' → logprob: -14.250265121459961
    5. ')' → logprob: -14.500265121459961
    6. '  ' → logprob: -15.000265121459961
    7. '²' → logprob: -15.500265121459961
    8. '**' → logprob: -16.37526512145996
    9. '
' → logprob: -16.62526512145996
    10. ' ' → logprob: -16.68776512145996

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016293596709147096
    2. ' )' → logprob: -6.50162935256958
    3. ')
' → logprob: -10.001629829406738
    4. '   ' → logprob: -10.876629829406738
    5. '*' → logprob: -11.376629829406738
    6. '**' → logprob: -11.876629829406738
    7. '))' → logprob: -11.876629829406738
    8. ')*' → logprob: -12.001629829406738
    9. ')**' → logprob: -12.001629829406738
    10. '):' → logprob: -12.626629829406738

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49849218130111694
    2. 'ex' → logprob: -1.3734922409057617
    3. ':' → logprob: -2.4984922409057617
    4. ' ex' → logprob: -4.123492240905762
    5. '
' → logprob: -4.373492240905762
    6. '*' → logprob: -5.123492240905762
    7. ')' → logprob: -5.498492240905762
    8. '    
' → logprob: -5.873492240905762
    9. '2' → logprob: -6.623492240905762
    10. ':
' → logprob: -6.748492240905762

Token 188: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31629347801208496
    2. 'ex' → logprob: -1.691293478012085
    3. '   ' → logprob: -3.066293478012085
    4. ' :' → logprob: -4.066293716430664
    5. ':
' → logprob: -4.941293716430664
    6. ' ex' → logprob: -5.191293716430664
    7. '*' → logprob: -5.566293716430664
    8. ' *' → logprob: -5.941293716430664
    9. '2' → logprob: -6.191293716430664
    10. ' :
' → logprob: -7.816293716430664

Token 189: ' Cela' (ID: 44403)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.1214703693985939
    2. ' ex' → logprob: -2.3714704513549805
    3. '   ' → logprob: -3.8714704513549805
    4. '2' → logprob: -10.12147045135498
    5. '    
' → logprob: -10.37147045135498
    6. '	ex' → logprob: -10.37147045135498
    7. '```' → logprob: -10.99647045135498
    8. ':' → logprob: -11.37147045135498
    9. ' ' → logprob: -11.37147045135498
    10. '
' → logprob: -11.99647045135498

Token 190: ' pourrait' (ID: 39622)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3812393546104431
    2. '=' → logprob: -1.631239414215088
    3. ' =' → logprob: -3.381239414215088
    4. 'ex' → logprob: -3.381239414215088
    5. ' est' → logprob: -4.506239414215088
    6. '*' → logprob: -5.006239414215088
    7. ' ex' → logprob: -5.006239414215088
    8. ')' → logprob: -5.256239414215088
    9. ' :' → logprob: -5.381239414215088
    10. '#' → logprob: -6.131239414215088

Token 191: ' par' (ID: 686)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.30199676752090454
    2. ' ' → logprob: -2.6769967079162598
    3. ' donner' → logprob: -3.0519967079162598
    4. ' représ' → logprob: -3.1769967079162598
    5. 'être' → logprob: -3.9269967079162598
    6. '*' → logprob: -4.55199670791626
    7. ' continuer' → logprob: -4.67699670791626
    8. ' be' → logprob: -5.30199670791626
    9. ' servir' → logprob: -5.42699670791626
    10. ' rendre' → logprob: -5.67699670791626

Token 192: ' exemple' (ID: 26320)
  Prédit: 'rait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rait' → logprob: -0.9904892444610596
    2. 'ce' → logprob: -2.1154892444610596
    3. 'ra' → logprob: -2.4904892444610596
    4. 'fois' → logprob: -2.6154892444610596
    5. 'être' → logprob: -3.2404892444610596
    6. 't' → logprob: -3.3654892444610596
    7. '```' → logprob: -3.4904892444610596
    8. ' représ' → logprob: -3.6154892444610596
    9. 'aitre' → logprob: -3.7404892444610596
    10. 'raî' → logprob: -3.7404892444610596

Token 193: ' représ' (ID: 31534)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -1.005028247833252
    2. ' représ' → logprob: -1.255028247833252
    3. 'être' → logprob: -2.130028247833252
    4. ' servir' → logprob: -2.505028247833252
    5. 're' → logprob: -2.880028247833252
    6. 'serv' → logprob: -4.255028247833252
    7. 'repr' → logprob: -4.630028247833252
    8. '   ' → logprob: -4.880028247833252
    9. ' res' → logprob: -5.255028247833252
    10. 'represent' → logprob: -5.505028247833252

Token 194: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.00012892624363303185
    2. 'ent' → logprob: -9.500128746032715
    3. 'ente' → logprob: -11.875128746032715
    4. 'iter' → logprob: -12.125128746032715
    5. 'e' → logprob: -12.250128746032715
    6. 'eter' → logprob: -12.500128746032715
    7. 'er' → logprob: -12.625128746032715
    8. ' enter' → logprob: -12.750128746032715
    9. 'anter' → logprob: -12.750128746032715
    10. '```' → logprob: -12.875128746032715

Token 195: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5984583497047424
    2. ' diff' → logprob: -1.7234582901000977
    3. 'diff' → logprob: -2.3484582901000977
    4. 'une' → logprob: -2.3484582901000977
    5. ' un' → logprob: -3.3484582901000977
    6. ' (' → logprob: -4.223458290100098
    7. '(diff' → logprob: -4.723458290100098
    8. ' la' → logprob: -5.098458290100098
    9. '2' → logprob: -5.223458290100098
    10. 'un' → logprob: -5.473458290100098

Token 196: ' prob' (ID: 4921)
  Prédit: ' fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fraction' → logprob: -1.213332176208496
    2. 'fraction' → logprob: -1.588332176208496
    3. ' proportion' → logprob: -2.088332176208496
    4. ' expression' → logprob: -2.463332176208496
    5. ' valeur' → logprob: -3.088332176208496
    6. 'ex' → logprob: -3.713332176208496
    7. 'pro' → logprob: -3.713332176208496
    8. 'prob' → logprob: -3.838332176208496
    9. ' ' → logprob: -4.213332176208496
    10. 'expression' → logprob: -4.338332176208496

Token 197: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.006300126668065786
    2. 'abil' → logprob: -5.38129997253418
    3. 'alité' → logprob: -7.63129997253418
    4. 'a' → logprob: -7.75629997253418
    5. 'ab' → logprob: -8.00629997253418
    6. '(' → logprob: -9.25629997253418
    7. '#' → logprob: -10.00629997253418
    8. '-' → logprob: -10.00629997253418
    9. 'ability' → logprob: -10.63129997253418
    10. 'abilidade' → logprob: -10.75629997253418

Token 198: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8277760744094849
    2. 'ex' → logprob: -0.9527760744094849
    3. ':' → logprob: -2.0777759552001953
    4. ' ex' → logprob: -3.5777759552001953
    5. ' :' → logprob: -4.827775955200195
    6. ':
' → logprob: -5.952775955200195
    7. ',' → logprob: -5.952775955200195
    8. '*' → logprob: -6.202775955200195
    9. '.' → logprob: -6.202775955200195
    10. ')' → logprob: -6.952775955200195

Token 199: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.06739525496959686
    2. ' un' → logprob: -2.9423952102661133
    3. 'une' → logprob: -4.567395210266113
    4. 'un' → logprob: -6.317395210266113
    5. ' a' → logprob: -9.817395210266113
    6. ' (' → logprob: -10.817395210266113
    7. ''une' → logprob: -10.817395210266113
    8. ' ' → logprob: -10.942395210266113
    9. ' des' → logprob: -11.317395210266113
    10. ')' → logprob: -11.442395210266113

Token 200: ' moyenne' (ID: 57480)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2766430079936981
    2. 'fraction' → logprob: -2.2766430377960205
    3. ' valeur' → logprob: -3.5266430377960205
    4. 'quant' → logprob: -4.151642799377441
    5. 'mes' → logprob: -4.151642799377441
    6. 'pro' → logprob: -4.276642799377441
    7. 'prob' → logprob: -4.526642799377441
    8. ' fraction' → logprob: -4.526642799377441
    9. ' mesure' → logprob: -4.651642799377441
    10. ' proportion' → logprob: -4.901642799377441

Token 201: ' pond' (ID: 42367)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44643986225128174
    2. 'ex' → logprob: -1.1964398622512817
    3. ':' → logprob: -3.321439743041992
    4. ' ex' → logprob: -4.321439743041992
    5. ':
' → logprob: -5.571439743041992
    6. ' :' → logprob: -6.446439743041992
    7. ' :
' → logprob: -7.321439743041992
    8. '
' → logprob: -7.571439743041992
    9. '*' → logprob: -7.821439743041992
    10. '    
' → logprob: -8.446439743041992

Token 202: 'érée' (ID: 113219)
  Prédit: 'érée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érée' → logprob: -0.00021450345229823142
    2. 'ér' → logprob: -9.250214576721191
    3. 'é' → logprob: -10.125214576721191
    4. 'érées' → logprob: -10.750214576721191
    5. 'éré' → logprob: -11.500214576721191
    6. '=' → logprob: -12.125214576721191
    7. 'rée' → logprob: -12.125214576721191
    8. 'érale' → logprob: -12.375214576721191
    9. '(' → logprob: -12.875214576721191
    10. '__' → logprob: -13.000214576721191

Token 203: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17894631624221802
    2. ':' → logprob: -2.0539462566375732
    3. 'ex' → logprob: -3.8039462566375732
    4. ':
' → logprob: -4.928946495056152
    5. ' ex' → logprob: -5.928946495056152
    6. ' :' → logprob: -6.553946495056152
    7. ' :
' → logprob: -7.553946495056152
    8. '	ex' → logprob: -7.928946495056152
    9. ',' → logprob: -9.053946495056152
    10. '
' → logprob: -9.178946495056152

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011278177611529827
    2. 'ex' → logprob: -4.63627815246582
    3. ' ex' → logprob: -6.76127815246582
    4. ':' → logprob: -8.76127815246582
    5. '	ex' → logprob: -9.51127815246582
    6. '    
' → logprob: -10.01127815246582
    7. ':
' → logprob: -10.38627815246582
    8. '
' → logprob: -11.13627815246582
    9. '   ' → logprob: -11.13627815246582
    10. '       ' → logprob: -11.76127815246582

Token 205: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' (adapté à ' ex') → logprob: -0.2548519968986511
    2. '   ' → logprob: -1.504852056503296
    3. ' ex' → logprob: -5.879851818084717
    4. '	ex' → logprob: -9.504852294921875
    5. '    
' → logprob: -10.504852294921875
    6. '   ' → logprob: -12.254852294921875
    7. '  ' → logprob: -12.754852294921875
    8. '    ' → logprob: -12.879852294921875
    9. '_ex' → logprob: -13.004852294921875
    10. ' ' → logprob: -13.379852294921875

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014731764793396
    2. '=' → logprob: -1.7014732360839844
    3. ' ' → logprob: -10.201473236083984
    4. '   ' → logprob: -11.326473236083984
    5. '_' → logprob: -12.826473236083984
    6. ' =
' → logprob: -13.076473236083984
    7. 's' → logprob: -13.451473236083984
    8. ' ' → logprob: -14.201473236083984
    9. 'x' → logprob: -14.576473236083984
    10. '  ' → logprob: -14.576473236083984

Token 207: ' (' (ID: 350)
  Prédit: '(diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.2397221326828003
    2. 'diff' → logprob: -2.61472225189209
    3. ' (' → logprob: -2.73972225189209
    4. '(' → logprob: -2.86472225189209
    5. '2' → logprob: -4.48972225189209
    6. ' diff' → logprob: -4.98972225189209
    7. ' ' → logprob: -8.61472225189209
    8. '(d' → logprob: -9.36472225189209
    9. '((' → logprob: -10.61472225189209
    10. '   ' → logprob: -10.61472225189209

Token 208: '2' (ID: 17)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.01678381860256195
    2. ' diff' → logprob: -4.141783714294434
    3. '2' → logprob: -7.266783714294434
    4. '(diff' → logprob: -10.391783714294434
    5. '   ' → logprob: -11.516783714294434
    6. ' ' → logprob: -12.016783714294434
    7. '	diff' → logprob: -12.766783714294434
    8. ' (' → logprob: -14.766783714294434
    9. '(' → logprob: -15.266783714294434
    10. '  ' → logprob: -15.766783714294434

Token 209: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023255610838532448
    2. '*' → logprob: -3.7732555866241455
    3. ' ' → logprob: -11.898255348205566
    4. ')' → logprob: -13.023255348205566
    5. ' ' → logprob: -14.398255348205566
    6. '   ' → logprob: -15.398255348205566
    7. 'diff' → logprob: -15.398255348205566
    8. ' )' → logprob: -17.023256301879883
    9. '    ' → logprob: -17.773256301879883
    10. '  ' → logprob: -17.960756301879883

Token 210: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.42872223258018494
    2. ' diff' → logprob: -1.0537222623825073
    3. '	diff' → logprob: -11.053722381591797
    4. '(diff' → logprob: -13.178722381591797
    5. ')' → logprob: -13.928722381591797
    6. ' ' → logprob: -14.303722381591797
    7. ' dif' → logprob: -14.553722381591797
    8. '   ' → logprob: -14.678722381591797
    9. '_diff' → logprob: -15.053722381591797
    10. '.diff' → logprob: -15.053722381591797

Token 211: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012283235555514693
    2. ' )' → logprob: -6.751228332519531
    3. ')/(' → logprob: -10.251228332519531
    4. ' /' → logprob: -11.126228332519531
    5. '   ' → logprob: -12.251228332519531
    6. ')/' → logprob: -13.001228332519531
    7. '/' → logprob: -15.251228332519531
    8. '')' → logprob: -15.751228332519531
    9. ' ' → logprob: -15.751228332519531
    10. '")' → logprob: -16.62622833251953

Token 212: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.01440406497567892
    2. '/' → logprob: -4.264404296875
    3. '/(' → logprob: -8.764404296875
    4. ' ' → logprob: -9.889404296875
    5. ' /(' → logprob: -11.014404296875
    6. ' /
' → logprob: -11.889404296875
    7. '   ' → logprob: -12.389404296875
    8. '/n' → logprob: -13.014404296875
    9. ' ' → logprob: -13.389404296875
    10. ')' → logprob: -14.139404296875

Token 213: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47467002272605896
    2. '(n' → logprob: -0.9746700525283813
    3. ' n' → logprob: -8.09967041015625
    4. 'n' → logprob: -8.47467041015625
    5. '(' → logprob: -9.47467041015625
    6. ' ' → logprob: -13.22467041015625
    7. '   ' → logprob: -14.09967041015625
    8. '((' → logprob: -15.09967041015625
    9. '
' → logprob: -15.47467041015625
    10. ',' → logprob: -15.97467041015625

Token 214: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37453508377075195
    2. ' n' → logprob: -1.249535083770752
    3. '(n' → logprob: -3.749535083770752
    4. ' (' → logprob: -6.124535083770752
    5. '(' → logprob: -10.749534606933594
    6. '   ' → logprob: -11.874534606933594
    7. ' ' → logprob: -12.999534606933594
    8. '	n' → logprob: -13.624534606933594
    9. ')' → logprob: -13.999534606933594
    10. ')n' → logprob: -14.124534606933594

Token 215: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.38691475987434387
    2. ' **' → logprob: -1.1369147300720215
    3. '2' → logprob: -11.63691520690918
    4. ')' → logprob: -11.63691520690918
    5. '*' → logprob: -11.63691520690918
    6. ' ' → logprob: -11.76191520690918
    7. ' ' → logprob: -12.51191520690918
    8. ' *' → logprob: -13.01191520690918
    9. ')**' → logprob: -13.38691520690918
    10. ' **)' → logprob: -14.01191520690918

Token 216: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018151111900806427
    2. ' ' → logprob: -4.01815128326416
    3. '   ' → logprob: -15.01815128326416
    4. '  ' → logprob: -15.39315128326416
    5. '```' → logprob: -15.76815128326416
    6. ' ' → logprob: -16.018150329589844
    7. ')' → logprob: -16.143150329589844
    8. '²' → logprob: -16.393150329589844
    9. '۲' → logprob: -16.893150329589844
    10. '
' → logprob: -17.205650329589844

Token 217: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.875035285949707
    4. '```' → logprob: -17.125036239624023
    5. '  ' → logprob: -18.000036239624023
    6. '²' → logprob: -19.125036239624023
    7. '۲' → logprob: -19.125036239624023
    8. '(' → logprob: -20.062536239624023
    9. '    ' → logprob: -20.125036239624023
    10. '２' → logprob: -20.187536239624023

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ')
' → logprob: -11.75001049041748
    3. ' )' → logprob: -13.12501049041748
    4. '   ' → logprob: -15.12501049041748
    5. '<|end|>' → logprob: -16.125011444091797
    6. ')

' → logprob: -16.625011444091797
    7. ')#' → logprob: -17.000011444091797
    8. '}' → logprob: -17.250011444091797
    9. ')...' → logprob: -17.250011444091797
    10. '):' → logprob: -17.500011444091797

Token 219: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.17963753640651703
    2. '   ' → logprob: -1.9296375513076782
    3. ' else' → logprob: -4.429637432098389
    4. '    
' → logprob: -6.304637432098389
    5. 'elif' → logprob: -6.304637432098389
    6. '<|end|>' → logprob: -6.679637432098389
    7. ')' → logprob: -7.179637432098389
    8. '
' → logprob: -7.304637432098389
    9. ':' → logprob: -7.929637432098389
    10. '.' → logprob: -8.554637908935547

Token 220: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6750322580337524
    2. 'else' → logprob: -1.1750322580337524
    3. '
' → logprob: -2.675032138824463
    4. ':' → logprob: -2.925032138824463
    5. '<|end|>' → logprob: -4.050032138824463
    6. ')' → logprob: -4.175032138824463
    7. '    
' → logprob: -4.425032138824463
    8. ' else' → logprob: -5.300032138824463
    9. 'elif' → logprob: -5.675032138824463
    10. '#' (adapté à ' #') → logprob: -6.550032138824463

Token 221: ' Mult' (ID: 15431)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.698184609413147
    2. 'print' → logprob: -0.698184609413147
    3. 'else' → logprob: -5.948184490203857
    4. ' print' → logprob: -6.073184490203857
    5. '#' → logprob: -10.698184967041016
    6. '    
' → logprob: -10.823184967041016
    7. 'elif' → logprob: -11.073184967041016
    8. ' else' → logprob: -11.448184967041016
    9. '	print' → logprob: -11.573184967041016
    10. ' ' → logprob: -11.948184967041016

Token 222: 'iplier' (ID: 30777)
  Prédit: 'iplier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iplier' → logprob: -0.057271137833595276
    2. 'ex' → logprob: -3.8072712421417236
    3. ' ex' → logprob: -4.0572710037231445
    4. 'ip' → logprob: -4.9322710037231445
    5. '   ' → logprob: -6.1822710037231445
    6. 'er' → logprob: -6.4322710037231445
    7. 'plier' → logprob: -6.4322710037231445
    8. 'ipl' → logprob: -6.8072710037231445
    9. 'tip' → logprob: -7.9322710037231445
    10. 'iple' → logprob: -8.307271003723145

Token 223: ' l' (ID: 305)
  Prédit: ' ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.0716148167848587
    2. 'ex' → logprob: -2.6966147422790527
    3. ' m' → logprob: -7.821614742279053
    4. ' la' → logprob: -8.196615219116211
    5. ' d' → logprob: -8.696615219116211
    6. ' l' → logprob: -8.946615219116211
    7. '	ex' → logprob: -8.946615219116211
    8. '(ex' → logprob: -9.071615219116211
    9. '   ' → logprob: -9.696615219116211
    10. ' par' → logprob: -9.696615219116211

Token 224: ''ex' (ID: 23472)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6329319477081299
    2. ' ex' → logprob: -0.7579319477081299
    3. '	ex' → logprob: -9.38293170928955
    4. ' ' → logprob: -10.50793170928955
    5. '   ' → logprob: -10.75793170928955
    6. 'e' → logprob: -10.75793170928955
    7. '=' → logprob: -10.75793170928955
    8. ' ' → logprob: -10.88293170928955
    9. '(ex' → logprob: -11.00793170928955
    10. 'diff' → logprob: -11.13293170928955

Token 225: 'pression' (ID: 4521)
  Prédit: 'pression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pression' → logprob: -0.4315861761569977
    2. 'ex' → logprob: -1.1815861463546753
    3. ' ex' → logprob: -4.181586265563965
    4. '=' → logprob: -4.806586265563965
    5. ' =' → logprob: -5.306586265563965
    6. '*' → logprob: -5.931586265563965
    7. 'e' → logprob: -6.431586265563965
    8. 'x' → logprob: -6.681586265563965
    9. '(ex' → logprob: -6.681586265563965
    10. 'pr' → logprob: -6.806586265563965

Token 226: ' "' (ID: 392)
  Prédit: ' ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.32037872076034546
    2. ' par' → logprob: -1.9453787803649902
    3. 'ex' → logprob: -2.3203787803649902
    4. '   ' → logprob: -3.5703787803649902
    5. 'par' → logprob: -6.82037878036499
    6. '	ex' → logprob: -6.82037878036499
    7. ' ' → logprob: -7.32037878036499
    8. '  ' → logprob: -7.69537878036499
    9. '(ex' → logprob: -7.82037878036499
    10. '*' → logprob: -8.570378303527832

Token 227: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0002678920282050967
    2. ' ex' → logprob: -8.25026798248291
    3. '	ex' → logprob: -12.87526798248291
    4. '(ex' → logprob: -13.00026798248291
    5. '   ' → logprob: -13.87526798248291
    6. ''ex' → logprob: -15.37526798248291
    7. ')' → logprob: -16.125267028808594
    8. 'e' → logprob: -16.687767028808594
    9. '.ex' → logprob: -16.937767028808594
    10. '(' → logprob: -16.937767028808594

Token 228: '"' (ID: 1)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023319782689213753
    2. ')' → logprob: -4.398319721221924
    3. '*' → logprob: -4.773319721221924
    4. '<|end|>' → logprob: -7.148319721221924
    5. ' )' → logprob: -7.273319721221924
    6. ' *=' → logprob: -7.898319721221924
    7. ' ' → logprob: -8.773320198059082
    8. '   ' → logprob: -9.523320198059082
    9. ',' → logprob: -10.023320198059082
    10. '<|end|>' → logprob: -10.023320198059082

Token 229: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6562377214431763
    2. '*' → logprob: -1.2812377214431763
    3. ' *=' → logprob: -1.6562377214431763
    4. '*=' → logprob: -4.781237602233887
    5. '   ' → logprob: -6.031237602233887
    6. 'ex' → logprob: -7.781237602233887
    7. '=' → logprob: -8.031237602233887
    8. ',' → logprob: -8.031237602233887
    9. ' ex' → logprob: -8.281237602233887
    10. ' ' → logprob: -8.781237602233887

Token 230: ' (' (ID: 350)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.2099151313304901
    2. 'm' → logprob: -1.8349151611328125
    3. ' d' → logprob: -4.0849151611328125
    4. 'd' → logprob: -5.3349151611328125
    5. ' (' → logprob: -6.3349151611328125
    6. ' n' → logprob: -6.8349151611328125
    7. '(' → logprob: -6.8349151611328125
    8. ' ' → logprob: -7.0849151611328125
    9. ' diff' → logprob: -7.3349151611328125
    10. '2' → logprob: -7.5849151611328125

Token 231: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08276335895061493
    2. ' m' → logprob: -3.582763433456421
    3. 'd' → logprob: -3.957763433456421
    4. '(' → logprob: -4.582763195037842
    5. 'min' → logprob: -5.332763195037842
    6. 'diff' → logprob: -5.457763195037842
    7. '(m' → logprob: -5.707763195037842
    8. 'n' → logprob: -5.957763195037842
    9. '1' → logprob: -6.707763195037842
    10. '2' → logprob: -6.707763195037842

Token 232: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.45603904128074646
    2. ')' → logprob: -1.2060390710830688
    3. ' )' → logprob: -2.8310389518737793
    4. '*' → logprob: -4.956038951873779
    5. ' ' → logprob: -7.706038951873779
    6. '   ' → logprob: -8.956039428710938
    7. ' ' → logprob: -10.081039428710938
    8. ' -' → logprob: -10.081039428710938
    9. ' +' → logprob: -10.456039428710938
    10. ' *)' → logprob: -10.456039428710938

Token 233: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9179161787033081
    2. 'd' → logprob: -1.292916178703308
    3. ' d' → logprob: -1.667916178703308
    4. ' ' → logprob: -3.0429162979125977
    5. 'min' → logprob: -3.7929162979125977
    6. 'diff' → logprob: -3.7929162979125977
    7. ' diff' → logprob: -4.042916297912598
    8. ' min' → logprob: -4.042916297912598
    9. ' ex' → logprob: -5.917916297912598
    10. '2' → logprob: -6.292916297912598

Token 234: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4137132167816162
    2. '1' → logprob: -1.5387132167816162
    3. 'diff' → logprob: -3.038713216781616
    4. ' d' → logprob: -3.538713216781616
    5. 'min' → logprob: -3.538713216781616
    6. ' diff' → logprob: -5.163713455200195
    7. ' ' → logprob: -5.663713455200195
    8. ' min' → logprob: -6.038713455200195
    9. 'ex' → logprob: -6.163713455200195
    10. 'm' → logprob: -6.538713455200195

Token 235: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045164540642872453
    2. ' )' → logprob: -8.250452041625977
    3. '   ' → logprob: -9.250452041625977
    4. ')*' → logprob: -10.000452041625977
    5. ')
' → logprob: -10.500452041625977
    6. '*' → logprob: -12.250452041625977
    7. ')

' → logprob: -13.000452041625977
    8. '),' → logprob: -13.125452041625977
    9. ' *' → logprob: -13.625452041625977
    10. ')...' → logprob: -13.875452041625977

Token 236: ' pour' (ID: 1930)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0015146232908591628
    2. '*' → logprob: -7.251514434814453
    3. '   ' → logprob: -7.251514434814453
    4. '*(' → logprob: -9.501514434814453
    5. ')' → logprob: -12.126514434814453
    6. ' *
' → logprob: -12.501514434814453
    7. ' ' → logprob: -13.126514434814453
    8. '
' → logprob: -13.126514434814453
    9. 'ex' → logprob: -13.501514434814453
    10. '  ' → logprob: -13.626514434814453

Token 237: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.04231472685933113
    2. ' )' → logprob: -3.9173147678375244
    3. ')' → logprob: -4.292314529418945
    4. ' m' → logprob: -5.542314529418945
    5. ' continuer' → logprob: -6.917314529418945
    6. ' obten' → logprob: -7.542314529418945
    7. ' calcul' → logprob: -7.792314529418945
    8. ' get' → logprob: -7.917314529418945
    9. ' obtener' → logprob: -8.042314529418945
    10. ' créer' → logprob: -8.792314529418945

Token 238: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05510466545820236
    2. ' m' → logprob: -3.8051047325134277
    3. '(m' → logprob: -4.305104732513428
    4. 'm' → logprob: -4.805104732513428
    5. '(' → logprob: -5.430104732513428
    6. ')' → logprob: -6.180104732513428
    7. 'ex' → logprob: -6.305104732513428
    8. ' ex' → logprob: -7.930104732513428
    9. ' )' → logprob: -8.18010425567627
    10. ' la' → logprob: -8.93010425567627

Token 239: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.8569101691246033
    2. 'result' → logprob: -1.106910228729248
    3. ' result' → logprob: -2.106910228729248
    4. ' resultat' → logprob: -2.856910228729248
    5. 'rés' → logprob: -3.981910228729248
    6. 'res' → logprob: -4.606910228729248
    7. 'ex' → logprob: -4.731910228729248
    8. 'val' → logprob: -5.356910228729248
    9. ' nombre' → logprob: -6.106910228729248
    10. 'nombre' → logprob: -6.231910228729248

Token 240: ' final' (ID: 1721)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0059287971816957
    2. '   ' → logprob: -5.880928993225098
    3. '*' → logprob: -6.130928993225098
    4. 'result' → logprob: -7.755928993225098
    5. '<|end|>' → logprob: -8.755928993225098
    6. '*(' → logprob: -9.505928993225098
    7. ',' → logprob: -9.755928993225098
    8. '<|end|>' → logprob: -10.380928993225098
    9. ')' → logprob: -10.505928993225098
    10. ' *
' → logprob: -10.630928993225098

Token 241: ' "' (ID: 392)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4592337906360626
    2. '   ' → logprob: -1.5842337608337402
    3. 'result' → logprob: -1.9592337608337402
    4. '*' → logprob: -4.08423376083374
    5. ' result' → logprob: -5.70923376083374
    6. 'final' → logprob: -7.33423376083374
    7. '
' → logprob: -7.83423376083374
    8. '    
' → logprob: -8.584234237670898
    9. ' *
' → logprob: -9.209234237670898
    10. 'res' → logprob: -9.209234237670898

Token 242: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.40525296330451965
    2. ' result' → logprob: -1.9052529335021973
    3. 'res' → logprob: -2.5302529335021973
    4. 'ex' → logprob: -3.1552529335021973
    5. ' res' → logprob: -3.6552529335021973
    6. ' resultat' → logprob: -5.155252933502197
    7. ' ex' → logprob: -5.280252933502197
    8. 'r' → logprob: -5.530252933502197
    9. 'val' → logprob: -5.780252933502197
    10. 'x' → logprob: -6.405252933502197

Token 243: '".
' (ID: 26880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1557079404592514
    2. ')
' → logprob: -2.405707836151123
    3. '   ' → logprob: -3.405707836151123
    4. '*' → logprob: -4.655707836151123
    5. ' *' → logprob: -4.905707836151123
    6. ')*' → logprob: -6.280707836151123
    7. ' )' → logprob: -7.530707836151123
    8. ')
' → logprob: -7.905707836151123
    9. ' )
' → logprob: -7.905707836151123
    10. 'ans' → logprob: -8.905708312988281

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6980010271072388
    2. ' ans' → logprob: -1.3230010271072388
    3. 'ans' → logprob: -1.4480010271072388
    4. '	ans' → logprob: -7.073000907897949
    5. '(ans' → logprob: -9.57300090789795
    6. '    
' → logprob: -9.69800090789795
    7. '
' → logprob: -10.44800090789795
    8. '  ' → logprob: -12.07300090789795
    9. '_ans' → logprob: -12.32300090789795
    10. ' 
' → logprob: -12.32300090789795

Token 245: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.12387783825397491
    2. ' ans' → logprob: -2.498877763748169
    3. '   ' → logprob: -3.373877763748169
    4. '	ans' → logprob: -9.87387752532959
    5. '(ans' → logprob: -11.24887752532959
    6. 'answer' → logprob: -12.99887752532959
    7. '    
' → logprob: -13.12387752532959
    8. '_ans' → logprob: -13.49887752532959
    9. '  ' → logprob: -13.62387752532959
    10. '
' → logprob: -13.62387752532959

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193077325820923
    2. '=' → logprob: -1.5019307136535645
    3. ' =
' → logprob: -14.501931190490723
    4. ',' → logprob: -14.876931190490723
    5. '   ' → logprob: -15.626931190490723
    6. ' ' → logprob: -15.751931190490723
    7. ')' → logprob: -16.251930236816406
    8. ' =
' → logprob: -16.376930236816406
    9. '＝' → logprob: -16.876930236816406
    10. '=

' → logprob: -17.001930236816406

Token 247: ' ex' (ID: 513)
  Prédit: ' ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.632871150970459
    2. 'ex' → logprob: -0.757871150970459
    3. '(ex' → logprob: -8.382871627807617
    4. ' (' → logprob: -10.507871627807617
    5. '   ' → logprob: -12.257871627807617
    6. '	ex' → logprob: -12.382871627807617
    7. '(' → logprob: -12.882871627807617
    8. 'ans' → logprob: -13.882871627807617
    9. ' ans' → logprob: -14.257871627807617
    10. ' ' → logprob: -14.632871627807617

Token 248: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023250136524438858
    2. '*' → logprob: -3.773250102996826
    3. ' ' → logprob: -13.148250579833984
    4. '*(' → logprob: -13.273250579833984
    5. '   ' → logprob: -14.148250579833984
    6. ' ' → logprob: -16.023250579833984
    7. ')' → logprob: -16.898250579833984
    8. ' *
' → logprob: -17.648250579833984
    9. ',' → logprob: -17.648250579833984
    10. '  ' → logprob: -17.898250579833984

Token 249: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16022665798664093
    2. '(m' → logprob: -1.9102267026901245
    3. '(' → logprob: -12.910226821899414
    4. ' ' → logprob: -18.285226821899414
    5. '(M' → logprob: -18.535226821899414
    6. ',' → logprob: -18.535226821899414
    7. ' m' → logprob: -19.035226821899414
    8. '   ' → logprob: -19.160226821899414
    9. ' ' → logprob: -19.160226821899414
    10. '(n' → logprob: -19.785226821899414

Token 250: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011437171138823032
    2. ' m' → logprob: -4.511436939239502
    3. '(m' → logprob: -7.886436939239502
    4. ' (' → logprob: -11.26143741607666
    5. '(' → logprob: -15.13643741607666
    6. '   ' → logprob: -15.63643741607666
    7. ')m' → logprob: -16.261436462402344
    8. '	m' → logprob: -17.261436462402344
    9. ')' → logprob: -17.511436462402344
    10. ' ' → logprob: -18.761436462402344

Token 251: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0017086135921999812
    2. '-' → logprob: -6.376708507537842
    3. ' ' → logprob: -12.001708984375
    4. ' ' → logprob: -16.126708984375
    5. ')' → logprob: -16.251708984375
    6. '   ' → logprob: -17.251708984375
    7. ' -
' → logprob: -17.376708984375
    8. ' −' → logprob: -18.626708984375
    9. '−' → logprob: -19.001708984375
    10. '  ' → logprob: -19.251708984375

Token 252: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01416398212313652
    2. ' ' → logprob: -4.264163970947266
    3. '<|end|>' → logprob: -15.514163970947266
    4. '   ' → logprob: -16.139163970947266
    5. ' ' → logprob: -16.264163970947266
    6. '	' → logprob: -17.014163970947266
    7. '  ' → logprob: -17.826663970947266
    8. '۱' → logprob: -17.826663970947266
    9. '
' → logprob: -18.139163970947266
    10. '１' → logprob: -18.389163970947266

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.000030517578125
    4. '<|end|>' → logprob: -17.750030517578125
    5. '
' → logprob: -18.250030517578125
    6. '  ' → logprob: -18.375030517578125
    7. '```' → logprob: -18.875030517578125
    8. '１' → logprob: -19.500030517578125
    9. '۱' → logprob: -19.687530517578125
    10. ')' → logprob: -19.750030517578125

Token 254: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -14.375001907348633
    4. ')

' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.625001907348633
    6. ')`' → logprob: -18.250001907348633
    7. ')#' → logprob: -18.625001907348633
    8. '}' → logprob: -18.750001907348633
    9. '))' → logprob: -18.875001907348633
    10. '),' → logprob: -19.000001907348633

Token 255: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09973474591970444
    2. '   ' → logprob: -3.0997347831726074
    3. '<|end|>' → logprob: -3.3497347831726074
    4. 'print' → logprob: -5.349734783172607
    5. ')' → logprob: -5.349734783172607
    6. ' else' → logprob: -6.224734783172607
    7. 'elif' → logprob: -6.599734783172607
    8. '```' → logprob: -6.974734783172607
    9. '
' → logprob: -7.974734783172607
    10. '    
' → logprob: -8.34973430633545

Token 256: ' Si' (ID: 7832)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.975612187583465e-05
    2. ' else' → logprob: -10.500029563903809
    3. 'elif' → logprob: -13.125029563903809
    4. '```' → logprob: -17.000030517578125
    5. 'elser' → logprob: -17.625030517578125
    6. '_else' → logprob: -17.750030517578125
    7. 'els' → logprob: -17.875030517578125
    8. 'elses' → logprob: -18.250030517578125
    9. 'el' → logprob: -19.625030517578125
    10. '	else' → logprob: -19.750030517578125

Token 257: ' la' (ID: 557)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.6303492784500122
    2. ' not' → logprob: -1.0053492784500122
    3. ' else' → logprob: -3.1303491592407227
    4. 'diff' → logprob: -3.5053491592407227
    5. 'else' → logprob: -3.8803491592407227
    6. 'not' → logprob: -5.255349159240723
    7. ' n' → logprob: -7.755349159240723
    8. ' d' → logprob: -7.755349159240723
    9. ' elif' → logprob: -8.380349159240723
    10. 'd' → logprob: -8.630349159240723

Token 258: ' condition' (ID: 7060)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.24583610892295837
    2. 'diff' → logprob: -2.370836019515991
    3. ' diff' → logprob: -2.495836019515991
    4. ' else' → logprob: -3.620836019515991
    5. ' not' → logprob: -5.37083625793457
    6. 'elif' → logprob: -5.49583625793457
    7. ' condition' → logprob: -5.87083625793457
    8. 'not' → logprob: -6.62083625793457
    9. 'n' → logprob: -6.74583625793457
    10. 'condition' → logprob: -8.49583625793457

Token 259: ' précédente' (ID: 177319)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.07217072695493698
    2. ' else' → logprob: -2.9471707344055176
    3. ':' → logprob: -4.072170734405518
    4. 'elif' → logprob: -10.19717025756836
    5. '_else' → logprob: -10.69717025756836
    6. 'e' → logprob: -11.57217025756836
    7. ' :' → logprob: -11.69717025756836
    8. ':
' → logprob: -12.07217025756836
    9. ' is' → logprob: -12.57217025756836
    10. ' est' → logprob: -12.57217025756836

Token 260: ' n' (ID: 297)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02271457202732563
    2. ':' → logprob: -4.272714614868164
    3. ' else' → logprob: -4.772714614868164
    4. 'elif' → logprob: -10.147714614868164
    5. ':
' → logprob: -11.272714614868164
    6. '_else' → logprob: -12.522714614868164
    7. 'e' → logprob: -14.522714614868164
    8. ' :' → logprob: -15.022714614868164
    9. 'elser' → logprob: -15.897714614868164
    10. 'elses' → logprob: -15.897714614868164

Token 261: ''est' (ID: 6616)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5798094868659973
    2. 'elif' → logprob: -1.7048094272613525
    3. 'pas' → logprob: -1.9548094272613525
    4. ' else' → logprob: -3.3298094272613525
    5. 'e' → logprob: -3.4548094272613525
    6. ''est' → logprob: -3.9548094272613525
    7. ' pas' → logprob: -4.079809665679932
    8. 'o' → logprob: -5.704809665679932
    9. 'est' → logprob: -5.954809665679932
    10. ' elif' → logprob: -6.704809665679932

Token 262: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.01054768543690443
    2. ' pas' → logprob: -4.885547637939453
    3. '#' → logprob: -6.010547637939453
    4. 't' → logprob: -8.885547637939453
    5. 'v' → logprob: -9.010547637939453
    6. 'not' → logprob: -9.760547637939453
    7. 'else' → logprob: -9.885547637939453
    8. 'Pas' → logprob: -11.135547637939453
    9. '_pas' → logprob: -11.385547637939453
    10. 'p' → logprob: -11.385547637939453

Token 263: ' vér' (ID: 42524)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.10259193927049637
    2. 'v' → logprob: -2.6025919914245605
    3. ' pas' → logprob: -3.9775919914245605
    4. '#' → logprob: -6.4775919914245605
    5. 'respect' → logprob: -6.9775919914245605
    6. 'True' → logprob: -7.2275919914245605
    7. 'true' → logprob: -8.102591514587402
    8. ' rempl' → logprob: -8.227591514587402
    9. 's' → logprob: -8.477591514587402
    10. ' respect' → logprob: -8.602591514587402

Token 264: 'ifiée' (ID: 88506)
  Prédit: 'ifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.16817663609981537
    2. 'ifiée' → logprob: -2.0431766510009766
    3. 'ifi' → logprob: -4.418176651000977
    4. 'if' → logprob: -5.168176651000977
    5. 'f' → logprob: -6.168176651000977
    6. 'fi' → logprob: -6.668176651000977
    7. 'ifiable' → logprob: -6.793176651000977
    8. 'pas' → logprob: -6.793176651000977
    9. 'ie' → logprob: -7.668176651000977
    10. 'ue' → logprob: -8.543176651000977

Token 265: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.13049021363258362
    2. ':' → logprob: -2.130490303039551
    3. ' else' → logprob: -5.755490303039551
    4. 'elif' → logprob: -8.38049030303955
    5. ':
' → logprob: -8.75549030303955
    6. '_else' → logprob: -13.38049030303955
    7. ' :' → logprob: -14.50549030303955
    8. ',' → logprob: -15.13049030303955
    9. 'elser' → logprob: -15.13049030303955
    10. ' elif' → logprob: -15.25549030303955

Token 266: ' ex' (ID: 513)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0009313485352322459
    2. ':' → logprob: -7.375931262969971
    3. 'elif' → logprob: -8.625931739807129
    4. ' else' → logprob: -9.000931739807129
    5. ':
' → logprob: -13.750931739807129
    6. 'els' → logprob: -14.875931739807129
    7. '   ' → logprob: -15.250931739807129
    8. 'e' → logprob: -16.750930786132812
    9. 'elser' → logprob: -16.750930786132812
    10. '```' → logprob: -16.750930786132812

Token 267: 'éc' (ID: 5675)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4749577045440674
    2. ' =' → logprob: -0.9749577045440674
    3. 'else' → logprob: -7.474957466125488
    4. ':' → logprob: -8.599957466125488
    5. ' else' → logprob: -9.849957466125488
    6. '   ' → logprob: -10.099957466125488
    7. 'e' → logprob: -11.724957466125488
    8. 'lse' → logprob: -11.974957466125488
    9. ',' → logprob: -12.099957466125488
    10. 'elif' → logprob: -12.724957466125488

Token 268: 'uter' (ID: 23469)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7236946821212769
    2. 'else' → logprob: -1.3486946821212769
    3. 'ecut' → logprob: -2.2236948013305664
    4. 'e' → logprob: -2.8486948013305664
    5. 'ecute' → logprob: -3.5986948013305664
    6. 'éc' → logprob: -4.223694801330566
    7. 'uter' → logprob: -4.848694801330566
    8. 'é' → logprob: -4.848694801330566
    9. 'ec' → logprob: -5.223694801330566
    10. 'ect' → logprob: -5.348694801330566

Token 269: ' le' (ID: 505)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002780273789539933
    2. 'else' → logprob: -6.627780437469482
    3. ':
' → logprob: -6.627780437469482
    4. ' :' → logprob: -9.627779960632324
    5. '   ' → logprob: -10.752779960632324
    6. ' else' → logprob: -11.002779960632324
    7. ' la' → logprob: -12.502779960632324
    8. 'le' → logprob: -12.627779960632324
    9. 'une' → logprob: -12.627779960632324
    10. ' une' → logprob: -12.752779960632324

Token 270: ' bloc' (ID: 51218)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.005555436015129089
    2. ' else' → logprob: -5.505555629730225
    3. 'elif' → logprob: -7.505555629730225
    4. ':' → logprob: -7.630555629730225
    5. '```' → logprob: -8.130555152893066
    6. 'e' → logprob: -9.380555152893066
    7. 'el' → logprob: -11.130555152893066
    8. 's' → logprob: -12.005555152893066
    9. 'es' → logprob: -12.255555152893066
    10. 'els' → logprob: -12.380555152893066

Token 271: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02684149518609047
    2. ' else' → logprob: -3.651841402053833
    3. ':' → logprob: -7.651841640472412
    4. '   ' → logprob: -10.526841163635254
    5. '_else' → logprob: -10.651841163635254
    6. 'elif' → logprob: -11.401841163635254
    7. '```' → logprob: -13.901841163635254
    8. '	else' → logprob: -14.151841163635254
    9. 'elses' → logprob: -14.401841163635254
    10. 'elser' → logprob: -14.526841163635254

Token 272: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010222526267170906
    2. ':
' → logprob: -4.760222434997559
    3. 'else' → logprob: -6.510222434997559
    4. ' else' → logprob: -9.135222434997559
    5. ' :' → logprob: -11.885222434997559
    6. '   ' → logprob: -12.885222434997559
    7. ' :
' → logprob: -14.260222434997559
    8. ':

' → logprob: -15.760222434997559
    9. 'elif' → logprob: -15.760222434997559
    10. '_else' → logprob: -16.635223388671875

Token 273: 'else' (ID: 2807)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32254621386528015
    2. 'else' → logprob: -1.3225462436676025
    3. ':
' → logprob: -5.072546005249023
    4. ' else' → logprob: -5.822546005249023
    5. '   ' → logprob: -12.072546005249023
    6. '_else' → logprob: -12.947546005249023
    7. 'elif' → logprob: -13.072546005249023
    8. ' :' → logprob: -13.447546005249023
    9. '	else' → logprob: -13.822546005249023
    10. ':

' → logprob: -14.322546005249023

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31332242488861084
    2. ':
' → logprob: -1.3133224248886108
    3. '   ' → logprob: -10.188322067260742
    4. ' :
' → logprob: -11.188322067260742
    5. ' :' → logprob: -11.938322067260742
    6. ':
' → logprob: -13.438322067260742
    7. ':

' → logprob: -14.063322067260742
    8. '):
' → logprob: -15.563322067260742
    9. ':\' → logprob: -16.438322067260742
    10. '=' → logprob: -17.188322067260742

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013846398796886206
    2. 'ans' → logprob: -6.626384735107422
    3. ' ans' → logprob: -10.751384735107422
    4. ':' → logprob: -10.876384735107422
    5. '
' → logprob: -12.251384735107422
    6. '    
' → logprob: -13.001384735107422
    7. '   ' → logprob: -13.126384735107422
    8. '(ans' → logprob: -13.251384735107422
    9. '	ans' → logprob: -13.251384735107422
    10. ':
' → logprob: -13.251384735107422

Token 276: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.48920413851737976
    2. '   ' → logprob: -0.9892041683197021
    3. ' ans' → logprob: -4.489203929901123
    4. 'ex' → logprob: -6.114203929901123
    5. '#' (adapté à ' #') → logprob: -7.114203929901123
    6. 'diff' → logprob: -8.489204406738281
    7. '	ans' → logprob: -8.989204406738281
    8. '
' → logprob: -9.364204406738281
    9. '(ans' → logprob: -9.739204406738281
    10. '```' → logprob: -9.864204406738281

Token 277: ' Calcul' (ID: 57243)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09003785997629166
    2. '#' → logprob: -2.9650378227233887
    3. 'ex' → logprob: -3.4650378227233887
    4. '   ' → logprob: -6.090037822723389
    5. 'diff' → logprob: -7.215037822723389
    6. '
' → logprob: -10.090038299560547
    7. ' ans' → logprob: -10.340038299560547
    8. 'result' → logprob: -10.715038299560547
    9. '```' → logprob: -10.715038299560547
    10. 'answer' → logprob: -11.090038299560547

Token 278: 'er' (ID: 259)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3500903844833374
    2. ' =' → logprob: -2.350090503692627
    3. ':' → logprob: -2.600090503692627
    4. 'er' → logprob: -2.600090503692627
    5. '=' → logprob: -3.100090503692627
    6. '    ' → logprob: -5.850090503692627
    7. ' :' → logprob: -6.975090503692627
    8. '#' → logprob: -7.100090503692627
    9. '  ' → logprob: -7.350090503692627
    10. '    
' → logprob: -8.850090026855469

Token 279: ' "' (ID: 392)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1176166832447052
    2. 'ex' → logprob: -2.992616653442383
    3. '   ' → logprob: -3.742616653442383
    4. ' ans' → logprob: -4.117616653442383
    5. '(' → logprob: -5.242616653442383
    6. 'diff' → logprob: -5.367616653442383
    7. '(ans' → logprob: -5.492616653442383
    8. 'd' → logprob: -6.242616653442383
    9. ' ex' → logprob: -6.992616653442383
    10. '
' → logprob: -7.367616653442383

Token 280: 'ex' (ID: 490)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.45058473944664
    2. 'ex' → logprob: -1.2005847692489624
    3. 'diff' → logprob: -3.200584650039673
    4. 'd' → logprob: -4.825584888458252
    5. '(ans' → logprob: -5.825584888458252
    6. '(' → logprob: -6.075584888458252
    7. ' ans' → logprob: -6.075584888458252
    8. '(n' → logprob: -6.950584888458252
    9. 'n' → logprob: -7.200584888458252
    10. '(d' → logprob: -7.325584888458252

Token 281: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01681511662900448
    2. '=' → logprob: -4.266815185546875
    3. '"' → logprob: -6.141815185546875
    4. ' ="' → logprob: -7.766815185546875
    5. ' ' → logprob: -10.891815185546875
    6. ' "' → logprob: -11.516815185546875
    7. '="' → logprob: -11.516815185546875
    8. '   ' → logprob: -11.891815185546875
    9. ')' → logprob: -12.266815185546875
    10. 'ex' → logprob: -12.641815185546875

Token 282: ' exactement' (ID: 108701)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012513063848018646
    2. '=' → logprob: -4.387513160705566
    3. '   ' → logprob: -13.137513160705566
    4. ' ' → logprob: -14.637513160705566
    5. ' =(' → logprob: -15.137513160705566
    6. ' ' → logprob: -16.13751220703125
    7. '```' → logprob: -16.38751220703125
    8. ' =
' → logprob: -16.51251220703125
    9. 'ex' → logprob: -16.51251220703125
    10. ',' → logprob: -16.63751220703125

Token 283: ' comme' (ID: 7971)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.041386429220438004
    2. 'ex' → logprob: -3.416386365890503
    3. ' =' → logprob: -5.041386604309082
    4. '   ' → logprob: -7.291386604309082
    5. '=(' → logprob: -8.666386604309082
    6. ' ex' → logprob: -8.916386604309082
    7. '(ex' → logprob: -9.166386604309082
    8. 'diff' → logprob: -9.541386604309082
    9. '(' → logprob: -10.541386604309082
    10. ':' → logprob: -11.666386604309082

Token 284: ' précéd' (ID: 55435)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012781796976923943
    2. ' (' → logprob: -4.512781620025635
    3. 'diff' → logprob: -6.512781620025635
    4. '   ' → logprob: -9.637782096862793
    5. 'dans' → logprob: -10.012782096862793
    6. '2' → logprob: -10.137782096862793
    7. 'ex' → logprob: -10.512782096862793
    8. ' diff' → logprob: -11.012782096862793
    9. 'avant' → logprob: -11.262782096862793
    10. ' dans' → logprob: -12.137782096862793

Token 285: 'emment' (ID: 58019)
  Prédit: 'emment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emment' → logprob: -0.41268396377563477
    2. 'ent' → logprob: -1.6626839637756348
    3. 'ement' → logprob: -1.9126839637756348
    4. 'ément' → logprob: -8.412683486938477
    5. 'ment' → logprob: -8.912683486938477
    6. 'ument' → logprob: -9.037683486938477
    7. 'iment' → logprob: -9.162683486938477
    8. 'ente' → logprob: -9.287683486938477
    9. 'e' → logprob: -10.162683486938477
    10. '#' → logprob: -10.412683486938477

Token 286: ' ' (ID: 5310)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6125284433364868
    2. '   ' → logprob: -0.8625284433364868
    3. 'ex' → logprob: -3.6125283241271973
    4. '=' → logprob: -5.737528324127197
    5. ' =' → logprob: -5.737528324127197
    6. ':
' → logprob: -6.237528324127197
    7. ' ex' → logprob: -7.737528324127197
    8. ' :' → logprob: -10.362528800964355
    9. ',' → logprob: -11.237528800964355
    10. '(ex' → logprob: -11.487528800964355

Token 287: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20919647812843323
    2. 'ex' → logprob: -2.2091965675354004
    3. ' =' → logprob: -3.4591965675354004
    4. ':' → logprob: -3.7091965675354004
    5. '=' → logprob: -4.0841965675354
    6. ' ex' → logprob: -5.2091965675354
    7. '(ex' → logprob: -8.209196090698242
    8. ':
' → logprob: -8.709196090698242
    9. '	ex' → logprob: -10.084196090698242
    10. ' :' → logprob: -10.084196090698242

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08850476145744324
    2. 'ex' → logprob: -2.7135047912597656
    3. ' ex' → logprob: -4.213504791259766
    4. '(' → logprob: -5.963504791259766
    5. ' (' → logprob: -7.463504791259766
    6. '(ex' → logprob: -8.713504791259766
    7. '```' → logprob: -8.838504791259766
    8. '       ' → logprob: -9.963504791259766
    9. 'diff' → logprob: -10.838504791259766
    10. '    ' → logprob: -10.963504791259766

Token 289: ' #' (ID: 1069)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0381159670650959
    2. ' ex' → logprob: -3.538115978240967
    3. '   ' → logprob: -5.038115978240967
    4. '(' → logprob: -6.413115978240967
    5. ' (' → logprob: -9.038115501403809
    6. '(ex' → logprob: -9.413115501403809
    7. '	ex' → logprob: -13.038115501403809
    8. '(
' → logprob: -14.538115501403809
    9. 'diff' → logprob: -14.913115501403809
    10. '```' → logprob: -15.163115501403809

Token 290: ' -' (ID: 533)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0022147269919514656
    2. '   ' → logprob: -6.6272149085998535
    3. '(' → logprob: -7.3772149085998535
    4. ' ex' → logprob: -8.627214431762695
    5. 'diff' → logprob: -9.877214431762695
    6. '(ex' → logprob: -10.502214431762695
    7. ' (' → logprob: -13.127214431762695
    8. '       ' → logprob: -14.002214431762695
    9. '```' → logprob: -14.002214431762695
    10. '	ex' → logprob: -14.627214431762695

Token 291: ' Mult' (ID: 15431)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.2557559907436371
    2. '(' → logprob: -1.5057560205459595
    3. 'diff' → logprob: -6.25575590133667
    4. ' ex' → logprob: -6.63075590133667
    5. '2' → logprob: -8.380756378173828
    6. ' (' → logprob: -8.755756378173828
    7. '(ex' → logprob: -9.130756378173828
    8. '   ' → logprob: -9.880756378173828
    9. ' diff' → logprob: -11.380756378173828
    10. ' ' → logprob: -12.005756378173828

Token 292: 'iplier' (ID: 30777)
  Prédit: 'iplier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iplier' → logprob: -0.03004111908376217
    2. 'ip' → logprob: -3.780041217803955
    3. '(' → logprob: -5.655041217803955
    4. '2' → logprob: -6.155041217803955
    5. 'plier' → logprob: -7.780041217803955
    6. '*' → logprob: -8.280040740966797
    7. '*(' → logprob: -8.655040740966797
    8. 'ipl' → logprob: -8.905040740966797
    9. 'tip' → logprob: -9.655040740966797
    10. 'pliquer' → logprob: -10.655040740966797

Token 293: ' la' (ID: 557)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.35102134943008423
    2. ' diff' → logprob: -1.2260212898254395
    3. '(' → logprob: -6.8510212898254395
    4. '2' → logprob: -7.1010212898254395
    5. '(diff' → logprob: -8.101021766662598
    6. ' (' → logprob: -8.601021766662598
    7. '   ' → logprob: -9.226021766662598
    8. ' ' → logprob: -9.851021766662598
    9. 'd' → logprob: -10.976021766662598
    10. '	diff' → logprob: -11.601021766662598

Token 294: ' différence' (ID: 79196)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1857597380876541
    2. ' diff' → logprob: -2.4357597827911377
    3. '2' → logprob: -2.8107597827911377
    4. '(' → logprob: -4.185759544372559
    5. 'd' → logprob: -5.310759544372559
    6. ' (' → logprob: -7.560759544372559
    7. '(diff' → logprob: -7.685759544372559
    8. ' d' → logprob: -8.810759544372559
    9. ' ' → logprob: -8.810759544372559
    10. '(n' → logprob: -8.935759544372559

Token 295: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6155737638473511
    2. ' diff' → logprob: -1.240573763847351
    3. ' par' → logprob: -1.990573763847351
    4. '(diff' → logprob: -3.9905738830566406
    5. 'par' → logprob: -5.490573883056641
    6. '   ' → logprob: -5.490573883056641
    7. ' (' → logprob: -5.615573883056641
    8. ' ' → logprob: -7.365573883056641
    9. ',' → logprob: -7.490573883056641
    10. '*' → logprob: -7.490573883056641

Token 296: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1647191345691681
    2. 'par' → logprob: -1.9147191047668457
    3. '*' → logprob: -5.664719104766846
    4. '   ' → logprob: -7.789719104766846
    5. ' *' → logprob: -8.039719581604004
    6. ' ' → logprob: -9.289719581604004
    7. ')' → logprob: -9.289719581604004
    8. ' by' → logprob: -10.664719581604004
    9. 'by' → logprob: -10.914719581604004
    10. 'diff' → logprob: -11.289719581604004

Token 297: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0812671110033989
    2. 'd' → logprob: -3.9562671184539795
    3. '1' → logprob: -4.2062668800354
    4. '(' → logprob: -4.3312668800354
    5. '3' → logprob: -4.8312668800354
    6. 'm' → logprob: -4.9562668800354
    7. '(n' → logprob: -5.2062668800354
    8. 'n' → logprob: -5.7062668800354
    9. ' ' → logprob: -5.8312668800354
    10. '(m' → logprob: -6.7062668800354

Token 298: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01363377645611763
    2. '1' → logprob: -5.763633728027344
    3. 'd' → logprob: -5.763633728027344
    4. '(' → logprob: -6.263633728027344
    5. 'm' → logprob: -6.263633728027344
    6. ' ' → logprob: -6.888633728027344
    7. '3' → logprob: -7.138633728027344
    8. 'n' → logprob: -7.513633728027344
    9. '(n' → logprob: -7.513633728027344
    10. '0' → logprob: -8.263633728027344

Token 299: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10591252148151398
    2. ')' → logprob: -2.730912446975708
    3. '*' → logprob: -3.855912446975708
    4. ' *' → logprob: -4.855912685394287
    5. 'diff' → logprob: -5.730912685394287
    6. '#' → logprob: -7.230912685394287
    7. ' /' → logprob: -7.480912685394287
    8. '
' → logprob: -7.605912685394287
    9. ')
' → logprob: -8.355912208557129
    10. ' )' → logprob: -8.355912208557129

Token 300: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009866109117865562
    2. ')
' → logprob: -5.384866237640381
    3. ' )' → logprob: -5.759866237640381
    4. '   ' → logprob: -6.509866237640381
    5. ' )
' → logprob: -9.009865760803223
    6. '#' → logprob: -9.134865760803223
    7. ')
' → logprob: -9.384865760803223
    8. 'diff' → logprob: -9.509865760803223
    9. '*' → logprob: -10.134865760803223
    10. ')#' → logprob: -10.634865760803223

Token 301: ' doub' (ID: 12198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6419368982315063
    2. ' n' → logprob: -1.3919368982315063
    3. '(n' → logprob: -2.141936779022217
    4. ')' → logprob: -3.141936779022217
    5. ' (' → logprob: -3.266936779022217
    6. '(' → logprob: -5.016936779022217
    7. 'diff' → logprob: -5.391936779022217
    8. ')n' → logprob: -5.641936779022217
    9. '2' → logprob: -6.016936779022217
    10. ' )' → logprob: -6.141936779022217

Token 302: 'ler' (ID: 1639)
  Prédit: 'ler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.01656564325094223
    2. 'le' → logprob: -4.141565799713135
    3. 'lé' → logprob: -8.641565322875977
    4. 'lée' → logprob: -9.266565322875977
    5. 'l' → logprob: -9.766565322875977
    6. 'la' → logprob: -10.141565322875977
    7. '*' → logprob: -10.766565322875977
    8. '#' → logprob: -10.766565322875977
    9. ')' → logprob: -11.141565322875977
    10. 'fois' → logprob: -11.266565322875977

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02651880495250225
    2. ' )' → logprob: -4.026518821716309
    3. 'diff' → logprob: -5.151518821716309
    4. '   ' → logprob: -7.026518821716309
    5. ' diff' → logprob: -7.151518821716309
    6. '*)' → logprob: -8.651518821716309
    7. '*' → logprob: -9.151518821716309
    8. 'n' → logprob: -9.526518821716309
    9. ' ' → logprob: -9.776518821716309
    10. ' la' → logprob: -9.776518821716309

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1288965791463852
    2. 'ex' → logprob: -2.128896474838257
    3. ' ex' → logprob: -7.253896713256836
    4. ')' → logprob: -7.628896713256836
    5. '*' → logprob: -8.128896713256836
    6. 'diff' → logprob: -8.753896713256836
    7. '```' → logprob: -8.878896713256836
    8. ',' → logprob: -9.253896713256836
    9. '  ' → logprob: -11.378896713256836
    10. '	ex' → logprob: -11.628896713256836

Token 305: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061594389379024506
    2. 'diff' → logprob: -3.8115944862365723
    3. ')' → logprob: -3.9365944862365723
    4. '*' → logprob: -4.561594486236572
    5. '#' (adapté à ' #') → logprob: -6.061594486236572
    6. ' *' → logprob: -6.311594486236572
    7. ' /' → logprob: -6.561594486236572
    8. ' diff' → logprob: -7.061594486236572
    9. ' )' → logprob: -8.561594009399414
    10. ' (' → logprob: -8.686594009399414

Token 306: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49043405055999756
    2. ' ex' → logprob: -1.8654340505599976
    3. 'ex' → logprob: -2.115434169769287
    4. ' /' → logprob: -2.365434169769287
    5. ')' → logprob: -4.990434169769287
    6. 'diff' → logprob: -5.365434169769287
    7. ' diff' → logprob: -6.240434169769287
    8. '/' → logprob: -6.865434169769287
    9. '```' → logprob: -7.115434169769287
    10. ' *' → logprob: -7.865434169769287

Token 307: ' Div' (ID: 12302)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1906644105911255
    2. ' n' → logprob: -1.9406644105911255
    3. 'diff' → logprob: -1.9406644105911255
    4. ' (' → logprob: -2.065664291381836
    5. 'n' → logprob: -2.190664291381836
    6. 'div' → logprob: -2.815664291381836
    7. ' diff' → logprob: -2.815664291381836
    8. ' div' → logprob: -3.690664291381836
    9. ' /' → logprob: -4.940664291381836
    10. 'd' → logprob: -5.190664291381836

Token 308: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.01302587240934372
    2. 'ider' → logprob: -4.388025760650635
    3. 'er' → logprob: -8.138026237487793
    4. '(' → logprob: -9.388026237487793
    5. 'idir' → logprob: -10.638026237487793
    6. 'irer' → logprob: -11.138026237487793
    7. 'ir' → logprob: -11.138026237487793
    8. 'id' → logprob: -11.388026237487793
    9. 'ier' → logprob: -11.763026237487793
    10. '#' → logprob: -11.763026237487793

Token 309: ' par' (ID: 686)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8435824513435364
    2. '(n' → logprob: -1.5935823917388916
    3. ' (' → logprob: -1.7185823917388916
    4. '(diff' → logprob: -2.5935823917388916
    5. '(' → logprob: -2.7185823917388916
    6. ' diff' → logprob: -3.5935823917388916
    7. ' par' → logprob: -4.718582630157471
    8. 'par' → logprob: -5.593582630157471
    9. 'n' → logprob: -5.718582630157471
    10. ' n' → logprob: -7.468582630157471

Token 310: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9402332901954651
    2. '(n' → logprob: -0.9402332901954651
    3. ' (' → logprob: -2.3152332305908203
    4. ' n' → logprob: -2.6902332305908203
    5. '(' → logprob: -3.9402332305908203
    6. 'diff' → logprob: -4.06523323059082
    7. '((' → logprob: -5.56523323059082
    8. ' diff' → logprob: -5.94023323059082
    9. 'min' → logprob: -6.06523323059082
    10. '(m' → logprob: -6.44023323059082

Token 311: ' au' (ID: 2791)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.575967013835907
    2. '**' → logprob: -0.825967013835907
    3. ' ' → logprob: -11.700966835021973
    4. '_' → logprob: -12.575966835021973
    5. ' **)' → logprob: -12.950966835021973
    6. '```' → logprob: -12.950966835021973
    7. ' ' → logprob: -13.200966835021973
    8. '*' → logprob: -13.450966835021973
    9. '²' → logprob: -13.575966835021973
    10. '2' → logprob: -13.575966835021973

Token 312: ' carré' (ID: 191546)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016285846009850502
    2. ' ' → logprob: -4.1412858963012695
    3. '**' → logprob: -8.76628589630127
    4. '(' → logprob: -9.39128589630127
    5. ' (' → logprob: -12.26628589630127
    6. '²' → logprob: -12.64128589630127
    7. '```' → logprob: -13.76628589630127
    8. ' **' → logprob: -14.01628589630127
    9. '3' → logprob: -14.64128589630127
    10. ' deux' → logprob: -14.76628589630127

Token 313: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8491563200950623
    2. ')' → logprob: -0.9741563200950623
    3. '**' → logprob: -2.599156379699707
    4. '   ' → logprob: -3.099156379699707
    5. ':' → logprob: -3.224156379699707
    6. ' (' → logprob: -3.974156379699707
    7. '```' → logprob: -5.474156379699707
    8. '):' → logprob: -5.599156379699707
    9. '(' → logprob: -5.724156379699707
    10. ')**' → logprob: -6.474156379699707

Token 314: ' pour' (ID: 1930)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8356623649597168
    2. 'n' → logprob: -0.9606623649597168
    3. '(n' → logprob: -2.710662364959717
    4. '(' → logprob: -2.960662364959717
    5. ' n' → logprob: -2.960662364959717
    6. '   ' → logprob: -4.960662364959717
    7. '(
' → logprob: -5.460662364959717
    8. ' (
' → logprob: -7.085662364959717
    9. ')' → logprob: -8.085662841796875
    10. '#' → logprob: -8.085662841796875

Token 315: ' normal' (ID: 6078)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.139060616493225
    2. 'n' → logprob: -1.264060616493225
    3. '(n' → logprob: -1.264060616493225
    4. ' (' → logprob: -2.6390604972839355
    5. '(' → logprob: -3.3890604972839355
    6. '2' → logprob: -6.1390604972839355
    7. 'maint' → logprob: -6.5140604972839355
    8. 'diff' → logprob: -7.1390604972839355
    9. ')' → logprob: -7.3890604972839355
    10. ' ' → logprob: -7.5140604972839355

Token 316: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.012118961662054062
    2. 'al' → logprob: -5.012118816375732
    3. 'er' → logprob: -5.387118816375732
    4. 'érer' → logprob: -7.887118816375732
    5. 'is' → logprob: -8.51211929321289
    6. 'isé' → logprob: -9.01211929321289
    7. 'ér' → logprob: -10.38711929321289
    8. '**' → logprob: -11.51211929321289
    9. 'izer' → logprob: -11.76211929321289
    10. '```' → logprob: -11.76211929321289

Token 317: ' par' (ID: 686)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.4344644546508789
    2. '(n' → logprob: -1.434464454650879
    3. 'diff' → logprob: -3.684464454650879
    4. ')' → logprob: -3.809464454650879
    5. '(ex' → logprob: -3.809464454650879
    6. ':' → logprob: -4.434464454650879
    7. ' (' → logprob: -4.809464454650879
    8. '(' → logprob: -5.184464454650879
    9. '   ' → logprob: -5.184464454650879
    10. 'n' → logprob: -5.309464454650879

Token 318: ' rapport' (ID: 20847)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7053136229515076
    2. 'n' → logprob: -0.8303136229515076
    3. ' (' → logprob: -3.5803136825561523
    4. '2' → logprob: -3.7053136825561523
    5. ' n' → logprob: -5.205313682556152
    6. '(' → logprob: -5.580313682556152
    7. '**' → logprob: -5.830313682556152
    8. '```' → logprob: -5.955313682556152
    9. ')' → logprob: -6.080313682556152
    10. 'le' → logprob: -9.080313682556152

Token 319: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.24634192883968353
    2. 'à' → logprob: -1.6213419437408447
    3. '(n' → logprob: -4.371341705322266
    4. 'n' → logprob: -5.621341705322266
    5. 'au' → logprob: -6.371341705322266
    6. ')' → logprob: -7.496341705322266
    7. '#' → logprob: -7.621341705322266
    8. '```' → logprob: -7.871341705322266
    9. ''à' → logprob: -8.246341705322266
    10. ' au' → logprob: -8.246341705322266

Token 320: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22327421605587006
    2. ' n' → logprob: -1.9732742309570312
    3. '(n' → logprob: -3.3482742309570312
    4. ' (' → logprob: -3.9732742309570312
    5. '2' → logprob: -6.223274230957031
    6. ')' → logprob: -6.598274230957031
    7. ' ' → logprob: -6.723274230957031
    8. '(' → logprob: -6.973274230957031
    9. '   ' → logprob: -7.223274230957031
    10. '```' → logprob: -7.348274230957031

Token 321: '.
' (ID: 558)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.9459459185600281
    2. ')' → logprob: -1.0709459781646729
    3. '(n' → logprob: -2.070945978164673
    4. 'ex' → logprob: -2.945945978164673
    5. ')
' → logprob: -3.695945978164673
    6. '   ' → logprob: -3.695945978164673
    7. 'n' → logprob: -4.695945739746094
    8. ')**' → logprob: -4.820945739746094
    9. ':' → logprob: -4.945945739746094
    10. '```' → logprob: -5.445945739746094

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04746231436729431
    2. 'ex' → logprob: -3.172462224960327
    3. ' ex' → logprob: -5.422462463378906
    4. '```' → logprob: -10.547462463378906
    5. '	ex' → logprob: -12.172462463378906
    6. ' ' → logprob: -13.547462463378906
    7. ':' → logprob: -14.047462463378906
    8. '.ex' → logprob: -14.047462463378906
    9. '  ' → logprob: -14.297462463378906
    10. '       ' → logprob: -14.547462463378906

Token 323: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' (adapté à ' ex') → logprob: -0.01236401591449976
    2. '   ' → logprob: -4.512363910675049
    3. ' ex' → logprob: -6.637363910675049
    4. '	ex' → logprob: -13.012364387512207
    5. '```' → logprob: -13.637364387512207
    6. ' ' → logprob: -14.762364387512207
    7. 'else' → logprob: -15.137364387512207
    8. '.ex' → logprob: -15.387364387512207
    9. '  ' → logprob: -15.387364387512207
    10. '(ex' → logprob: -16.51236343383789

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28115314245224
    2. '=' → logprob: -1.4061532020568848
    3. ')' → logprob: -14.406152725219727
    4. '=

' → logprob: -14.531152725219727
    5. ' ' → logprob: -14.781152725219727
    6. ',' → logprob: -14.906152725219727
    7. ' =(' → logprob: -15.156152725219727
    8. ' =
' → logprob: -15.156152725219727
    9. '=(' → logprob: -15.906152725219727
    10. '   ' → logprob: -16.031152725219727

Token 325: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020555783063173294
    2. ' (' → logprob: -3.8955557346343994
    3. '2' → logprob: -11.39555549621582
    4. ' ' → logprob: -13.14555549621582
    5. '   ' → logprob: -15.14555549621582
    6. 'diff' → logprob: -15.39555549621582
    7. '  ' → logprob: -16.64555549621582
    8. '((' → logprob: -16.77055549621582
    9. '0' → logprob: -17.02055549621582
    10. '
' → logprob: -17.14555549621582

Token 326: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010342398309148848
    2. ' (' → logprob: -9.625102996826172
    3. '2' → logprob: -10.250102996826172
    4. 'diff' → logprob: -13.875102996826172
    5. '(diff' → logprob: -15.500102996826172
    6. ' ' → logprob: -15.500102996826172
    7. '(n' → logprob: -15.625102996826172
    8. '((' → logprob: -15.625102996826172
    9. '0' → logprob: -16.250102996826172
    10. '   ' → logprob: -16.500102996826172

Token 327: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1269330382347107
    2. '*' → logprob: -2.1269330978393555
    3. '*(' → logprob: -13.876933097839355
    4. ')' → logprob: -14.126933097839355
    5. '**' → logprob: -14.126933097839355
    6. ' ' → logprob: -14.251933097839355
    7. ' **' → logprob: -14.501933097839355
    8. ' ' → logprob: -14.751933097839355
    9. ',' → logprob: -15.876933097839355
    10. '   ' → logprob: -16.00193214416504

Token 328: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.11399196088314056
    2. ' diff' → logprob: -2.2389919757843018
    3. '(diff' → logprob: -6.988991737365723
    4. 'd' → logprob: -9.238991737365723
    5. ' (' → logprob: -9.488991737365723
    6. '	diff' → logprob: -10.988991737365723
    7. '(n' → logprob: -11.488991737365723
    8. '(' → logprob: -11.738991737365723
    9. ' d' → logprob: -11.738991737365723
    10. ' n' → logprob: -12.113991737365723

Token 329: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.47615519165992737
    2. '/' → logprob: -0.976155161857605
    3. '/(' → logprob: -6.3511552810668945
    4. '   ' → logprob: -8.476155281066895
    5. ' /(' → logprob: -10.226155281066895
    6. ')' → logprob: -10.726155281066895
    7. '  ' → logprob: -11.101155281066895
    8. '/n' → logprob: -11.601155281066895
    9. '```' → logprob: -12.101155281066895
    10. '(' → logprob: -12.101155281066895

Token 330: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.029811127111315727
    2. ' (' → logprob: -3.529811143875122
    3. '(' → logprob: -9.904810905456543
    4. 'n' → logprob: -11.529810905456543
    5. ' n' → logprob: -14.029810905456543
    6. '((' → logprob: -17.40481185913086
    7. ' ' → logprob: -18.15481185913086
    8. '(
' → logprob: -18.40481185913086
    9. '
' → logprob: -18.52981185913086
    10. ',' → logprob: -18.65481185913086

Token 331: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47860175371170044
    2. '(n' → logprob: -0.9786017537117004
    3. '(' → logprob: -5.603601932525635
    4. ' n' → logprob: -7.728601932525635
    5. ' (' → logprob: -7.853601932525635
    6. '```' → logprob: -14.353601455688477
    7. ')' → logprob: -14.853601455688477
    8. '**' → logprob: -15.228601455688477
    9. ')n' → logprob: -16.228601455688477
    10. '(
' → logprob: -16.978601455688477

Token 332: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0560089647769928
    2. '2' → logprob: -3.05600905418396
    3. ' **' → logprob: -5.056008815765381
    4. ' ' → logprob: -7.056008815765381
    5. '*' → logprob: -8.931009292602539
    6. ')' → logprob: -11.431009292602539
    7. ' ' → logprob: -12.181009292602539
    8. '(' → logprob: -12.556009292602539
    9. '²' → logprob: -13.056009292602539
    10. '```' → logprob: -13.306009292602539

Token 333: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001238004770129919
    2. ' ' → logprob: -9.000123977661133
    3. '(' → logprob: -16.125123977661133
    4. '²' → logprob: -16.750123977661133
    5. '   ' → logprob: -16.750123977661133
    6. ')' → logprob: -17.000123977661133
    7. '```' → logprob: -17.375123977661133
    8. '۲' → logprob: -18.437623977661133
    9. ' ' → logprob: -18.562623977661133
    10. '**' → logprob: -18.562623977661133

Token 334: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '۲' → logprob: -16.87507438659668
    4. '   ' → logprob: -17.37507438659668
    5. '²' → logprob: -17.62507438659668
    6. '２' → logprob: -17.75007438659668
    7. '```' → logprob: -17.93757438659668
    8. '२' → logprob: -19.12507438659668
    9. '  ' → logprob: -19.31257438659668
    10. '٢' → logprob: -19.50007438659668

Token 335: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006731830071657896
    2. '   ' → logprob: -5.381731986999512
    3. ')
' → logprob: -6.256731986999512
    4. ' )' → logprob: -9.006731986999512
    5. 'else' → logprob: -10.881731986999512
    6. '*' → logprob: -11.006731986999512
    7. ')*' → logprob: -11.631731986999512
    8. ')

' → logprob: -12.381731986999512
    9. ')
' → logprob: -12.756731986999512
    10. ' ' → logprob: -12.756731986999512

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01821327395737171
    2. 'ans' → logprob: -4.018213272094727
    3. ' ans' → logprob: -10.518213272094727
    4. '	ans' → logprob: -11.143213272094727
    5. '    
' → logprob: -11.393213272094727
    6. '```' → logprob: -12.393213272094727
    7. '(ans' → logprob: -13.393213272094727
    8. '
' → logprob: -14.018213272094727
    9. '   ' → logprob: -14.143213272094727
    10. '       ' → logprob: -14.268213272094727

Token 337: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22549928724765778
    2. 'ans' → logprob: -1.6004992723464966
    3. ' ans' → logprob: -9.975499153137207
    4. '	ans' → logprob: -10.475499153137207
    5. '    
' → logprob: -13.100499153137207
    6. '(ans' → logprob: -13.225499153137207
    7. 'answer' → logprob: -13.600499153137207
    8. '#' (adapté à ' #') → logprob: -13.850499153137207
    9. '       ' → logprob: -13.850499153137207
    10. '```' → logprob: -14.225499153137207

Token 338: ' Vér' (ID: 159169)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00011009939044015482
    2. '#' → logprob: -10.250109672546387
    3. '   ' → logprob: -10.375109672546387
    4. 'if' → logprob: -10.375109672546387
    5. 'ex' → logprob: -12.625109672546387
    6. ' ans' → logprob: -12.750109672546387
    7. '	ans' → logprob: -14.125109672546387
    8. 'print' → logprob: -14.250109672546387
    9. '(ans' → logprob: -14.250109672546387
    10. '
' → logprob: -14.375109672546387

Token 339: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.022698141634464264
    2. 'if' → logprob: -4.022697925567627
    3. 'ifiez' → logprob: -6.272697925567627
    4. 'f' → logprob: -6.397697925567627
    5. '   ' → logprob: -7.897697925567627
    6. 'fi' → logprob: -9.022698402404785
    7. 'ifi' → logprob: -9.022698402404785
    8. 'ifie' → logprob: -9.772698402404785
    9. 'IFIER' → logprob: -9.897698402404785
    10. 'ify' → logprob: -10.022698402404785

Token 340: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2525220513343811
    2. 'if' → logprob: -1.5025219917297363
    3. '   ' → logprob: -8.002522468566895
    4. 'diff' → logprob: -8.502522468566895
    5. ' d' → logprob: -11.002522468566895
    6. ' diff' → logprob: -11.627522468566895
    7. 'd' → logprob: -11.877522468566895
    8. ' m' → logprob: -12.002522468566895
    9. ':' → logprob: -12.377522468566895
    10. ' whether' → logprob: -13.127522468566895

Token 341: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.557072103023529
    2. 'm' → logprob: -1.0570721626281738
    3. 'diff' → logprob: -2.932072162628174
    4. 'ans' → logprob: -4.432072162628174
    5. '(m' → logprob: -5.432072162628174
    6. 'ex' → logprob: -6.182072162628174
    7. ' d' → logprob: -6.307072162628174
    8. ' m' → logprob: -6.432072162628174
    9. 'n' → logprob: -6.432072162628174
    10. ' diff' → logprob: -7.057072162628174

Token 342: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6217318177223206
    2. ' >' → logprob: -1.7467317581176758
    3. ' ==' → logprob: -2.246731758117676
    4. ' <=' → logprob: -2.621731758117676
    5. ' >=' → logprob: -2.621731758117676
    6. '>' → logprob: -4.621731758117676
    7. '==' → logprob: -4.621731758117676
    8. '<' → logprob: -4.746731758117676
    9. ' !=' → logprob: -5.996731758117676
    10. ' ' → logprob: -6.121731758117676

Token 343: ' égal' (ID: 15059)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0420602560043335
    2. ' >' → logprob: -1.6670602560043335
    3. '<' → logprob: -2.167060375213623
    4. ' <' → logprob: -2.292060375213623
    5. ' >=' → logprob: -2.917060375213623
    6. '==' → logprob: -3.042060375213623
    7. '>=' → logprob: -3.542060375213623
    8. '0' → logprob: -3.792060375213623
    9. ' ==' → logprob: -3.792060375213623
    10. '<=' → logprob: -4.042060375213623

Token 344: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5582461953163147
    2. ' ' → logprob: -2.30824613571167
    3. '1' → logprob: -2.43324613571167
    4. ' n' → logprob: -2.80824613571167
    5. ' d' → logprob: -2.80824613571167
    6. 'd' → logprob: -3.18324613571167
    7. ' m' → logprob: -3.55824613571167
    8. 'n' → logprob: -3.80824613571167
    9. 'm' → logprob: -4.55824613571167
    10. ' to' → logprob: -5.80824613571167

Token 345: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08668447285890579
    2. '1' → logprob: -2.961684465408325
    3. 'm' → logprob: -3.711684465408325
    4. 'n' → logprob: -5.461684703826904
    5. ' ' → logprob: -7.086684703826904
    6. 'min' → logprob: -7.211684703826904
    7. ' m' → logprob: -8.086684226989746
    8. '2' → logprob: -8.836684226989746
    9. ' n' → logprob: -9.211684226989746
    10. 'diff' → logprob: -9.211684226989746

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24047158658504486
    2. 'm' → logprob: -2.115471601486206
    3. '1' → logprob: -2.615471601486206
    4. 'n' → logprob: -4.115471363067627
    5. 'min' → logprob: -5.865471363067627
    6. '2' → logprob: -8.615471839904785
    7. 'diff' → logprob: -8.740471839904785
    8. '(' → logprob: -8.865471839904785
    9. '(n' → logprob: -8.990471839904785
    10. '(m' → logprob: -9.240471839904785

Token 347: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10112709552049637
    2. '   ' → logprob: -3.2261271476745605
    3. 'if' → logprob: -3.6011271476745605
    4. ' and' → logprob: -4.6011271476745605
    5. ' if' → logprob: -4.8511271476745605
    6. ':
' → logprob: -4.8511271476745605
    7. 'and' → logprob: -5.8511271476745605
    8. '==' → logprob: -8.226126670837402
    9. '.' → logprob: -8.851126670837402
    10. ' or' → logprob: -9.851126670837402

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012533784843981266
    2. ' if' → logprob: -5.137533664703369
    3. 'if' → logprob: -5.512533664703369
    4. ':' → logprob: -6.012533664703369
    5. '```' → logprob: -9.887534141540527
    6. ':
' → logprob: -11.012534141540527
    7. '    
' → logprob: -11.262534141540527
    8. ' and' → logprob: -12.137534141540527
    9. '
' → logprob: -12.137534141540527
    10. '	if' → logprob: -13.012534141540527

Token 349: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1130446344614029
    2. 'if' (adapté à ' if') → logprob: -2.3630447387695312
    3. ' if' → logprob: -4.363044738769531
    4. ':' → logprob: -11.113044738769531
    5. '	if' → logprob: -14.238044738769531
    6. '```' → logprob: -15.113044738769531
    7. 'If' → logprob: -16.36304473876953
    8. '    
' → logprob: -16.36304473876953
    9. '       ' → logprob: -16.86304473876953
    10. '
' → logprob: -16.86304473876953

Token 350: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.029751067981123924
    2. 'd' → logprob: -3.5297510623931885
    3. '	d' → logprob: -15.27975082397461
    4. ' ' → logprob: -15.77975082397461
    5. '   ' → logprob: -16.40475082397461
    6. ' ' → logprob: -17.15475082397461
    7. '0' → logprob: -17.40475082397461
    8. '(d' → logprob: -17.77975082397461
    9. '_d' → logprob: -19.02975082397461
    10. '  ' → logprob: -19.40475082397461

Token 351: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026345934718847275
    2. '==' → logprob: -3.65134596824646
    3. ' !=' → logprob: -10.276346206665039
    4. ' >' → logprob: -12.276346206665039
    5. '=' → logprob: -13.526346206665039
    6. ' =' → logprob: -13.651346206665039
    7. '>' → logprob: -14.026346206665039
    8. ' ' → logprob: -14.026346206665039
    9. ' ' → logprob: -14.401346206665039
    10. ':' → logprob: -14.776346206665039

Token 352: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. '1' → logprob: -18.01104736328125
    4. '<|end|>' → logprob: -19.76104736328125
    5. '   ' → logprob: -20.63604736328125
    6. '=' → logprob: -20.76104736328125
    7. '۰' → logprob: -21.01104736328125
    8. ' ' → logprob: -21.13604736328125
    9. '  ' → logprob: -21.38604736328125
    10. '2' → logprob: -22.51104736328125

Token 353: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '1' → logprob: -18.625011444091797
    4. '   ' → logprob: -20.875011444091797
    5. 'n' → logprob: -21.375011444091797
    6. '  ' → logprob: -21.625011444091797
    7. '۰' → logprob: -21.625011444091797
    8. '<|end|>' → logprob: -21.625011444091797
    9. '```' → logprob: -22.375011444091797
    10. '2' → logprob: -23.250011444091797

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10022079944610596
    2. ':
' → logprob: -2.3502206802368164
    3. '   ' → logprob: -11.975220680236816
    4. '       ' → logprob: -12.475220680236816
    5. ' and' → logprob: -13.725220680236816
    6. ':
' → logprob: -13.850220680236816
    7. '):
' → logprob: -14.100220680236816
    8. ':

' → logprob: -15.350220680236816
    9. '):' → logprob: -15.600220680236816
    10. ' :' → logprob: -15.725220680236816

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5853138566017151
    2. '   ' → logprob: -0.8353138566017151
    3. ':' → logprob: -5.58531379699707
    4. '
' → logprob: -5.71031379699707
    5. ':
' → logprob: -6.46031379699707
    6. 'ans' → logprob: -8.33531379699707
    7. '    
' → logprob: -8.46031379699707
    8. '        
' → logprob: -9.33531379699707
    9. ' ans' → logprob: -10.33531379699707
    10. '):
' → logprob: -10.71031379699707

Token 356: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1762274205684662
    2. '   ' → logprob: -2.301227331161499
    3. '       ' → logprob: -3.426227331161499
    4. ' ans' → logprob: -3.926227331161499
    5. '
' → logprob: -4.801227569580078
    6. '	ans' → logprob: -7.801227569580078
    7. '#' (adapté à ' #') → logprob: -8.051227569580078
    8. '    
' → logprob: -9.676227569580078
    9. '           ' → logprob: -9.926227569580078
    10. '        
' → logprob: -10.051227569580078

Token 357: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0012584454379975796
    2. ' ans' → logprob: -6.876258373260498
    3. '   ' → logprob: -9.126258850097656
    4. '#' → logprob: -9.251258850097656
    5. 'print' → logprob: -11.751258850097656
    6. '	ans' → logprob: -12.126258850097656
    7. '       ' → logprob: -12.376258850097656
    8. 'ex' → logprob: -14.126258850097656
    9. '
' → logprob: -14.251258850097656
    10. '(ans' → logprob: -14.376258850097656

Token 358: ' d' (ID: 272)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.12968522310256958
    2. 'ans' → logprob: -2.254685163497925
    3. '   ' → logprob: -4.629685401916504
    4. '#' → logprob: -5.504685401916504
    5. ' #' → logprob: -7.504685401916504
    6. ' n' → logprob: -7.754685401916504
    7. '(ans' → logprob: -7.754685401916504
    8. ' m' → logprob: -7.879685401916504
    9. '	ans' → logprob: -8.129685401916504
    10. ' ex' → logprob: -8.754685401916504

Token 359: ' vaut' (ID: 83004)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012205868028104305
    2. '   ' → logprob: -4.637206077575684
    3. ':
' → logprob: -7.262206077575684
    4. ' ==' → logprob: -7.387206077575684
    5. '==' → logprob: -7.762206077575684
    6. ' :' → logprob: -8.012206077575684
    7. '       ' → logprob: -8.387206077575684
    8. '=' → logprob: -10.262206077575684
    9. '):' → logprob: -10.637206077575684
    10. '           ' → logprob: -10.887206077575684

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04487219825387001
    2. ' ' → logprob: -3.419872283935547
    3. ' True' → logprob: -5.294872283935547
    4. '1' → logprob: -5.544872283935547
    5. 'True' → logprob: -6.669872283935547
    6. 'n' → logprob: -7.669872283935547
    7. ' n' → logprob: -7.919872283935547
    8. '   ' → logprob: -9.919872283935547
    9. 'm' → logprob: -10.669872283935547
    10. ' m' → logprob: -10.919872283935547

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007879483746364713
    2. ' ' → logprob: -7.375787734985352
    3. '1' → logprob: -8.750787734985352
    4. 'n' → logprob: -13.375787734985352
    5. 'True' → logprob: -14.125787734985352
    6. ' True' → logprob: -15.250787734985352
    7. '   ' → logprob: -15.375787734985352
    8. ' n' → logprob: -16.50078773498535
    9. '  ' → logprob: -16.62578773498535
    10. 'd' → logprob: -16.87578773498535

Token 362: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5251245498657227
    2. ':
' → logprob: -0.9001245498657227
    3. '       ' → logprob: -7.150124549865723
    4. ',' → logprob: -7.400124549865723
    5. '   ' → logprob: -7.900124549865723
    6. ' and' → logprob: -10.025124549865723
    7. ' :
' → logprob: -10.275124549865723
    8. ' :' → logprob: -10.400124549865723
    9. '           ' → logprob: -10.775124549865723
    10. '==' → logprob: -10.900124549865723

Token 363: ' calcul' (ID: 7559)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4780539572238922
    2. ' ans' → logprob: -0.9780539274215698
    3. '   ' → logprob: -5.853054046630859
    4. 'print' → logprob: -7.853054046630859
    5. '	ans' → logprob: -8.47805404663086
    6. '       ' → logprob: -8.85305404663086
    7. '
' → logprob: -9.22805404663086
    8. ' print' → logprob: -9.35305404663086
    9. '#' → logprob: -9.72805404663086
    10. ' ' → logprob: -10.60305404663086

Token 364: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00023512568441219628
    2. 'ons' → logprob: -9.375235557556152
    3. 'r' → logprob: -9.625235557556152
    4. 'ate' → logprob: -9.875235557556152
    5. 'rer' → logprob: -11.375235557556152
    6. 'ler' → logprob: -11.875235557556152
    7. 'uler' → logprob: -13.000235557556152
    8. '#' → logprob: -13.000235557556152
    9. 'print' → logprob: -13.125235557556152
    10. 'uer' → logprob: -13.750235557556152

Token 365: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03028956986963749
    2. ' ans' → logprob: -3.530289649963379
    3. 'ex' → logprob: -8.530289649963379
    4. '	ans' → logprob: -9.155289649963379
    5. '   ' → logprob: -9.405289649963379
    6. '
' → logprob: -9.530289649963379
    7. '0' → logprob: -10.405289649963379
    8. '(ans' → logprob: -11.530289649963379
    9. ' ' → logprob: -12.155289649963379
    10. '1' → logprob: -12.155289649963379

Token 366: ' diff' (ID: 8868)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931495070457458
    2. ' =' → logprob: -0.6931495070457458
    3. '   ' → logprob: -14.19314956665039
    4. '       ' → logprob: -15.31814956665039
    5. ' ' → logprob: -15.44314956665039
    6. 'ans' → logprob: -15.69314956665039
    7. '=
' → logprob: -15.69314956665039
    8. ':' → logprob: -16.19314956665039
    9. '+=' → logprob: -16.69314956665039
    10. 's' → logprob: -16.69314956665039

Token 367: 'é' (ID: 377)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32006725668907166
    2. ' *' → logprob: -1.445067286491394
    3. '=' → logprob: -3.5700671672821045
    4. ' /' → logprob: -5.570067405700684
    5. '*' → logprob: -5.695067405700684
    6. ' -' → logprob: -6.820067405700684
    7. '   ' → logprob: -7.320067405700684
    8. ' +' → logprob: -8.445067405700684
    9. ' *=' → logprob: -8.945067405700684
    10. '-' → logprob: -9.070067405700684

Token 368: 'rem' (ID: 1935)
  Prédit: 'rence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rence' → logprob: -0.6530739665031433
    2. 'r' → logprob: -1.278074026107788
    3. 'rent' → logprob: -2.278074026107788
    4. 'rement' → logprob: -2.653074026107788
    5. 'rer' → logprob: -4.903073787689209
    6. 'ré' → logprob: -5.153073787689209
    7. 'rem' → logprob: -5.528073787689209
    8. '=' → logprob: -6.278073787689209
    9. 'ren' → logprob: -6.278073787689209
    10. 'é' → logprob: -6.903073787689209

Token 369: 'ment' (ID: 508)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.22927364706993103
    2. 'ent' → logprob: -1.9792736768722534
    3. 'ment' → logprob: -2.729273557662964
    4. 'n' → logprob: -7.104273796081543
    5. 'nent' → logprob: -8.479273796081543
    6. 'nte' → logprob: -8.979273796081543
    7. 'rent' → logprob: -9.604273796081543
    8. 'm' → logprob: -10.604273796081543
    9. 'ente' → logprob: -10.604273796081543
    10. 'ents' → logprob: -10.854273796081543

Token 370: ' ' (ID: 5310)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33538326621055603
    2. '=' → logprob: -1.3353832960128784
    3. '       ' → logprob: -3.835383176803589
    4. '   ' → logprob: -8.960383415222168
    5. '           ' → logprob: -9.710383415222168
    6. ':' → logprob: -10.085383415222168
    7. ',' → logprob: -10.835383415222168
    8. '        ' → logprob: -11.960383415222168
    9. '=
' → logprob: -12.335383415222168
    10. 'ans' → logprob: -12.585383415222168

Token 371: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4068492352962494
    2. '=' → logprob: -1.2818492650985718
    3. '       ' → logprob: -2.9068491458892822
    4. '   ' → logprob: -6.781849384307861
    5. ':' → logprob: -8.156848907470703
    6. '           ' → logprob: -8.781848907470703
    7. 'ans' → logprob: -8.906848907470703
    8. ',' → logprob: -9.156848907470703
    9. ' ans' → logprob: -9.406848907470703
    10. '        ' → logprob: -10.406848907470703

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05595417320728302
    2. 'ans' → logprob: -3.0559542179107666
    3. ' ans' → logprob: -5.1809539794921875
    4. '   ' → logprob: -6.4309539794921875
    5. '	ans' → logprob: -9.555953979492188
    6. '(ans' → logprob: -11.430953979492188
    7. '           ' → logprob: -11.805953979492188
    8. '```' → logprob: -12.930953979492188
    9. '        
' → logprob: -13.180953979492188
    10. '    ' → logprob: -13.180953979492188

Token 373: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10673484206199646
    2. ' ans' → logprob: -2.3567347526550293
    3. '   ' → logprob: -5.106734752655029
    4. '       ' → logprob: -8.356735229492188
    5. '	ans' → logprob: -8.606735229492188
    6. '
' → logprob: -10.856735229492188
    7. '(ans' → logprob: -11.731735229492188
    8. 'anst' → logprob: -13.231735229492188
    9. '_ans' → logprob: -14.231735229492188
    10. '  ' → logprob: -14.481735229492188

Token 374: ' -' (ID: 533)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05239119008183479
    2. ' ans' → logprob: -3.052391290664673
    3. '   ' → logprob: -5.677391052246094
    4. '	ans' → logprob: -8.927391052246094
    5. '
' → logprob: -9.052391052246094
    6. '       ' → logprob: -9.302391052246094
    7. 'anst' → logprob: -11.302391052246094
    8. '(ans' → logprob: -11.802391052246094
    9. ' ' → logprob: -13.427391052246094
    10. '
' → logprob: -13.677391052246094

Token 375: ' Mult' (ID: 15431)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006920565385371447
    2. ' ans' → logprob: -5.006920337677002
    3. '   ' → logprob: -9.38192081451416
    4. 'ex' → logprob: -10.00692081451416
    5. '(ans' → logprob: -10.63192081451416
    6. '       ' → logprob: -11.63192081451416
    7. '	ans' → logprob: -11.63192081451416
    8. '#' → logprob: -12.13192081451416
    9. '
' → logprob: -12.13192081451416
    10. 'diff' → logprob: -12.38192081451416

Token 376: 'iplier' (ID: 30777)
  Prédit: 'iplier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iplier' → logprob: -0.039036884903907776
    2. 'plier' → logprob: -3.789036989212036
    3. 'ip' → logprob: -4.414036750793457
    4. 'ipl' → logprob: -6.914036750793457
    5. 'pliquer' → logprob: -6.914036750793457
    6. 'ult' → logprob: -7.289036750793457
    7. 'lier' → logprob: -8.414036750793457
    8. 'ultiply' → logprob: -8.414036750793457
    9. 'ier' → logprob: -9.664036750793457
    10. 'ultip' → logprob: -9.789036750793457

Token 377: ' ex' (ID: 513)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9044294357299805
    2. ' m' → logprob: -1.7794294357299805
    3. 'ex' → logprob: -2.2794294357299805
    4. ' ex' → logprob: -2.5294294357299805
    5. 'diff' → logprob: -2.7794294357299805
    6. ' n' → logprob: -3.4044294357299805
    7. 'n' → logprob: -3.4044294357299805
    8. ' (' → logprob: -3.9044294357299805
    9. '(m' → logprob: -4.0294294357299805
    10. ' ans' → logprob: -4.1544294357299805

Token 378: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6562888026237488
    2. ' par' → logprob: -1.1562888622283936
    3. '*' → logprob: -2.2812888622283936
    4. ' by' → logprob: -2.9062888622283936
    5. 'by' → logprob: -5.2812886238098145
    6. '*(' → logprob: -6.1562886238098145
    7. 'par' → logprob: -6.5312886238098145
    8. ' ans' → logprob: -8.656289100646973
    9. ',' → logprob: -8.781289100646973
    10. 'ans' → logprob: -8.906289100646973

Token 379: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5382535457611084
    2. ' m' → logprob: -1.0382535457611084
    3. ' n' → logprob: -3.6632535457611084
    4. 'n' → logprob: -4.0382537841796875
    5. '1' → logprob: -5.4132537841796875
    6. '2' → logprob: -5.5382537841796875
    7. ' (' → logprob: -5.6632537841796875
    8. '(n' → logprob: -6.1632537841796875
    9. '(m' → logprob: -6.4132537841796875
    10. ' ' → logprob: -6.6632537841796875

Token 380: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.047682713717222214
    2. '(m' → logprob: -3.422682762145996
    3. 'n' → logprob: -5.047682762145996
    4. '(n' → logprob: -5.922682762145996
    5. ' m' → logprob: -6.047682762145996
    6. '1' → logprob: -6.547682762145996
    7. '2' → logprob: -7.922682762145996
    8. '(' → logprob: -8.047682762145996
    9. ' (' → logprob: -8.672682762145996
    10. '   ' → logprob: -10.047682762145996

Token 381: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011959947645664215
    2. '-' → logprob: -4.636960029602051
    3. ')' → logprob: -6.261960029602051
    4. ' )' → logprob: -8.51196002960205
    5. ' ' → logprob: -10.01196002960205
    6. '   ' → logprob: -11.26196002960205
    7. ' +' → logprob: -11.38696002960205
    8. '),' → logprob: -13.07446002960205
    9. '<|end|>' → logprob: -13.13696002960205
    10. ' *' → logprob: -13.26196002960205

Token 382: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062043197453022
    2. ' ' → logprob: -2.8120431900024414
    3. '   ' → logprob: -9.687043190002441
    4. '2' → logprob: -11.687043190002441
    5. '0' → logprob: -13.562043190002441
    6. '  ' → logprob: -13.937043190002441
    7. '```' → logprob: -14.624543190002441
    8. ')' → logprob: -14.874543190002441
    9. ' ' → logprob: -14.937043190002441
    10. '    ' → logprob: -14.937043190002441

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009801892563700676
    2. ' ' → logprob: -4.634801864624023
    3. '   ' → logprob: -10.884801864624023
    4. '2' → logprob: -11.009801864624023
    5. '0' → logprob: -11.759801864624023
    6. ' ' → logprob: -14.322301864624023
    7. '  ' → logprob: -14.509801864624023
    8. '	' → logprob: -15.009801864624023
    9. ')' → logprob: -15.134801864624023
    10. '       ' → logprob: -16.134801864624023

Token 384: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000998986535705626
    2. ' )' → logprob: -7.5009989738464355
    3. '   ' → logprob: -9.375999450683594
    4. '*' → logprob: -9.375999450683594
    5. ' *' → logprob: -9.500999450683594
    6. ')
' → logprob: -9.625999450683594
    7. ' -' → logprob: -10.125999450683594
    8. '-' → logprob: -10.375999450683594
    9. ')*' → logprob: -11.250999450683594
    10. ' +' → logprob: -11.875999450683594

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000573167169932276
    2. '
' → logprob: -8.37557315826416
    3. '*' → logprob: -9.50057315826416
    4. '   ' → logprob: -9.50057315826416
    5. ' *' → logprob: -9.87557315826416
    6. ',' → logprob: -10.37557315826416
    7. ' and' → logprob: -10.62557315826416
    8. ')' → logprob: -11.00057315826416
    9. '        
' → logprob: -11.12557315826416
    10. 'ans' → logprob: -11.37557315826416

Token 386: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008427416905760765
    2. '   ' → logprob: -8.250843048095703
    3. 'ans' → logprob: -8.375843048095703
    4. ' ans' → logprob: -9.000843048095703
    5. '        
' → logprob: -9.250843048095703
    6. '           ' → logprob: -10.125843048095703
    7. '
' → logprob: -10.625843048095703
    8. '*' → logprob: -11.125843048095703
    9. ',' → logprob: -11.375843048095703
    10. ')' → logprob: -12.375843048095703

Token 387: ' -' (ID: 533)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9583954811096191
    2. 'ans' → logprob: -1.0833954811096191
    3. '       ' → logprob: -1.3333954811096191
    4. '   ' → logprob: -4.333395481109619
    5. '	ans' → logprob: -6.958395481109619
    6. '
' → logprob: -9.333395004272461
    7. '(ans' → logprob: -9.333395004272461
    8. '           ' → logprob: -10.208395004272461
    9. ' ' → logprob: -10.833395004272461
    10. 'print' → logprob: -11.145895004272461

Token 388: ' Puis' (ID: 87717)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.536970317363739
    2. 'ans' → logprob: -0.911970317363739
    3. '(ans' → logprob: -5.411970138549805
    4. ' ex' → logprob: -6.036970138549805
    5. 'print' → logprob: -6.161970138549805
    6. 'ex' → logprob: -6.661970138549805
    7. '0' → logprob: -7.536970138549805
    8. ' print' → logprob: -7.661970138549805
    9. ' (' → logprob: -7.911970138549805
    10. ' m' → logprob: -8.036970138549805

Token 389: ' div' (ID: 4223)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9020180106163025
    2. 'ans' → logprob: -1.5270180702209473
    3. ' ex' → logprob: -2.0270180702209473
    4. '*' → logprob: -2.6520180702209473
    5. ' /' → logprob: -3.6520180702209473
    6. ' *' → logprob: -3.9020180702209473
    7. 'ex' → logprob: -3.9020180702209473
    8. ' n' → logprob: -4.402018070220947
    9. '2' → logprob: -4.527018070220947
    10. '+' → logprob: -4.777018070220947

Token 390: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.00034595211036503315
    2. 'ider' → logprob: -8.875346183776855
    3. 'er' → logprob: -9.375346183776855
    4. 'ise' → logprob: -10.500346183776855
    5. 'user' → logprob: -10.750346183776855
    6. '#' → logprob: -11.375346183776855
    7. '```' → logprob: -11.375346183776855
    8. '   ' → logprob: -11.750346183776855
    9. 'id' → logprob: -11.750346183776855
    10. '(' → logprob: -12.750346183776855

Token 391: ' par' (ID: 686)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5517367124557495
    2. ' par' → logprob: -1.6767367124557495
    3. ' ans' → logprob: -2.051736831665039
    4. 'ex' → logprob: -3.176736831665039
    5. 'par' → logprob: -3.426736831665039
    6. '(ans' → logprob: -3.426736831665039
    7. ' ex' → logprob: -7.051736831665039
    8. ' (' → logprob: -8.051736831665039
    9. '(ex' → logprob: -8.676736831665039
    10. 'by' → logprob: -9.551736831665039

Token 392: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5511028170585632
    2. 'n' → logprob: -1.926102876663208
    3. ' n' → logprob: -2.551102876663208
    4. ' ' → logprob: -2.676102876663208
    5. 'm' → logprob: -3.176102876663208
    6. '(n' → logprob: -3.801102876663208
    7. ' m' → logprob: -4.051102638244629
    8. 'd' → logprob: -4.301102638244629
    9. '(' → logprob: -4.301102638244629
    10. ' (' → logprob: -5.051102638244629

Token 393: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5114186406135559
    2. 'n' → logprob: -1.6364185810089111
    3. 'm' → logprob: -2.386418581008911
    4. '(n' → logprob: -3.261418581008911
    5. '(' → logprob: -3.761418581008911
    6. 'd' → logprob: -4.26141881942749
    7. ' n' → logprob: -4.51141881942749
    8. '(m' → logprob: -5.01141881942749
    9. ' ' → logprob: -5.26141881942749
    10. ' m' → logprob: -5.63641881942749

Token 394: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3899737000465393
    2. '
' → logprob: -1.3899736404418945
    3. '   ' → logprob: -3.6399736404418945
    4. 'ans' → logprob: -3.6399736404418945
    5. '        
' → logprob: -5.0149736404418945
    6. ' ans' → logprob: -5.5149736404418945
    7. '(ans' → logprob: -6.0149736404418945
    8. ')
' → logprob: -6.5149736404418945
    9. '    
' → logprob: -6.6399736404418945
    10. '.
' → logprob: -7.1399736404418945

Token 395: 'équ' (ID: 99214)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12017013132572174
    2. '2' → logprob: -2.6201701164245605
    3. ' )' → logprob: -3.2451701164245605
    4. ')
' → logprob: -7.8701701164245605
    5. ' )
' → logprob: -8.120170593261719
    6. '       ' → logprob: -8.870170593261719
    7. '```' → logprob: -8.870170593261719
    8. ' ' → logprob: -8.995170593261719
    9. ' (' → logprob: -8.995170593261719
    10. '   ' → logprob: -10.120170593261719

Token 396: 'iv' (ID: 349)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.23484881222248077
    2. '2' → logprob: -3.359848737716675
    3. 'alité' → logprob: -3.484848737716675
    4. '   ' → logprob: -3.609848737716675
    5. ')' → logprob: -3.734848737716675
    6. 'ally' → logprob: -4.234848976135254
    7. 'a' → logprob: -4.484848976135254
    8. 'ale' → logprob: -4.609848976135254
    9. 'e' → logprob: -4.984848976135254
    10. 'i' → logprob: -4.984848976135254

Token 397: 'aut' (ID: 1828)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.011057606898248196
    2. 'ale' → logprob: -4.886057376861572
    3. ')' → logprob: -6.261057376861572
    4. 'alent' → logprob: -6.886057376861572
    5. 'a' → logprob: -8.01105785369873
    6. 'alité' → logprob: -10.26105785369873
    7. '   ' → logprob: -10.76105785369873
    8. 'alid' → logprob: -11.01105785369873
    9. '*' → logprob: -11.51105785369873
    10. '(' → logprob: -11.63605785369873

Token 398: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09353158622980118
    2. ' )' → logprob: -3.093531608581543
    3. ' to' → logprob: -3.843531608581543
    4. ' by' → logprob: -4.593531608581543
    5. ' /' → logprob: -5.343531608581543
    6. '/' → logprob: -6.468531608581543
    7. '*' → logprob: -6.593531608581543
    8. 'to' → logprob: -6.843531608581543
    9. '   ' → logprob: -6.968531608581543
    10. ' ' → logprob: -7.718531608581543

Token 399: ' prendre' (ID: 24257)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.235782653093338
    2. ' ' → logprob: -1.7357826232910156
    3. ' (' → logprob: -3.6107826232910156
    4. ' )' → logprob: -5.985782623291016
    5. ')' → logprob: -6.485782623291016
    6. ' ans' → logprob: -7.110782623291016
    7. '(' → logprob: -7.485782623291016
    8. ' m' → logprob: -8.610782623291016
    9. '(m' → logprob: -8.735782623291016
    10. '```' → logprob: -8.735782623291016

Token 400: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11334057152271271
    2. ' ' → logprob: -2.2383406162261963
    3. ' ans' → logprob: -7.863340377807617
    4. ' (' → logprob: -10.113340377807617
    5. ')' → logprob: -10.738340377807617
    6. ' )' → logprob: -10.738340377807617
    7. ' ' → logprob: -11.113340377807617
    8. '(' → logprob: -11.738340377807617
    9. 'ans' → logprob: -11.988340377807617
    10. ' m' → logprob: -11.988340377807617

Token 401: ' moitié' (ID: 93216)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13036957383155823
    2. ' ans' → logprob: -2.3803696632385254
    3. 'ans' → logprob: -4.380369663238525
    4. ' ' → logprob: -4.880369663238525
    5. '0' → logprob: -5.505369663238525
    6. '(ans' → logprob: -6.380369663238525
    7. '```' → logprob: -6.505369663238525
    8. '1' → logprob: -7.380369663238525
    9. ' (' → logprob: -7.630369663238525
    10. ' )' → logprob: -7.880369663238525

Token 402: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013230959884822369
    2. ' )' → logprob: -7.001323223114014
    3. ')
' → logprob: -7.876323223114014
    4. ').' → logprob: -12.126322746276855
    5. ' ' → logprob: -12.376322746276855
    6. ')
' → logprob: -12.501322746276855
    7. '**' → logprob: -12.751322746276855
    8. '*' → logprob: -13.001322746276855
    9. ' )
' → logprob: -13.001322746276855
    10. '   ' → logprob: -13.376322746276855

Token 403: ' résultat' (ID: 62556)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2106209546327591
    2. 'ans' → logprob: -2.585620880126953
    3. '(m' → logprob: -3.085620880126953
    4. '(ans' → logprob: -3.460620880126953
    5. ' (' → logprob: -3.710620880126953
    6. ')' → logprob: -4.585620880126953
    7. ' )' → logprob: -7.335620880126953
    8. 'ex' → logprob: -7.460620880126953
    9. 'm' → logprob: -8.085620880126953
    10. '(' → logprob: -8.460620880126953

Token 404: ' précédent' (ID: 128462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034588256385177374
    2. '   ' → logprob: -6.2534589767456055
    3. ')
' → logprob: -6.8784589767456055
    4. ').' → logprob: -8.753458976745605
    5. '       ' → logprob: -9.128458976745605
    6. '```' → logprob: -9.753458976745605
    7. '):' → logprob: -9.878458976745605
    8. ' )' → logprob: -10.003458976745605
    9. '.' → logprob: -10.628458976745605
    10. '**' → logprob: -11.378458976745605

Token 405: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004159837495535612
    2. '   ' → logprob: -6.254159927368164
    3. ')
' → logprob: -6.754159927368164
    4. '):' → logprob: -7.754159927368164
    5. ').' → logprob: -8.129159927368164
    6. '       ' → logprob: -8.504159927368164
    7. ' )' → logprob: -10.129159927368164
    8. '```' → logprob: -10.629159927368164
    9. '):
' → logprob: -10.879159927368164
    10. '.' → logprob: -11.254159927368164

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028476715087890625
    2. '
' → logprob: -6.127847671508789
    3. ':' → logprob: -8.377847671508789
    4. '           ' → logprob: -9.377847671508789
    5. '        
' → logprob: -9.377847671508789
    6. 'ans' → logprob: -9.502847671508789
    7. '   ' → logprob: -9.502847671508789
    8. ':
' → logprob: -11.002847671508789
    9. '```' → logprob: -11.002847671508789
    10. ' ans' → logprob: -11.127847671508789

Token 407: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23321673274040222
    2. 'ans' (adapté à ' ans') → logprob: -2.1082167625427246
    3. ' ans' → logprob: -2.4832167625427246
    4. '           ' → logprob: -6.483216762542725
    5. '   ' → logprob: -6.608216762542725
    6. '	ans' → logprob: -8.858216285705566
    7. '(ans' → logprob: -10.233216285705566
    8. '_ans' → logprob: -11.983216285705566
    9. '        
' → logprob: -12.108216285705566
    10. 'answer' → logprob: -12.483216285705566

Token 408: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313262403011322
    2. '=' → logprob: -1.3132624626159668
    3. ' *=' → logprob: -15.438261985778809
    4. ' ' → logprob: -16.063262939453125
    5. ' =
' → logprob: -16.313262939453125
    6. '＝' → logprob: -16.688262939453125
    7. ' /=' → logprob: -17.188262939453125
    8. ' =(' → logprob: -17.313262939453125
    9. '=

' → logprob: -17.313262939453125
    10. '   ' → logprob: -17.688262939453125

Token 409: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6811976432800293
    2. '(ex' → logprob: -0.9311976432800293
    3. ' ex' → logprob: -2.5561976432800293
    4. ' (' → logprob: -3.8061976432800293
    5. '	ex' → logprob: -10.556198120117188
    6. '   ' → logprob: -11.056198120117188
    7. '(' → logprob: -11.431198120117188
    8. ' ' → logprob: -12.681198120117188
    9. '/ex' → logprob: -12.743698120117188
    10. '_ex' → logprob: -12.868698120117188

Token 410: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2830074727535248
    2. '*' → logprob: -1.4080075025558472
    3. ' /' → logprob: -6.908007621765137
    4. '/' → logprob: -7.158007621765137
    5. '*(' → logprob: -10.158007621765137
    6. ' ' → logprob: -10.658007621765137
    7. ' ' → logprob: -12.283007621765137
    8. '   ' → logprob: -12.658007621765137
    9. ',' → logprob: -12.783007621765137
    10. ' (' → logprob: -14.283007621765137

Token 411: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04858986660838127
    2. '(m' → logprob: -3.0485899448394775
    3. ' ((' → logprob: -13.173589706420898
    4. '((' → logprob: -14.923589706420898
    5. '(' → logprob: -15.423589706420898
    6. '(n' → logprob: -17.7985897064209
    7. '(M' → logprob: -18.4235897064209
    8. ' ' → logprob: -18.5485897064209
    9. ' ' → logprob: -18.5485897064209
    10. ',' → logprob: -19.9235897064209

Token 412: 'm' (ID: 76)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.09061802178621292
    2. ' (' → logprob: -2.465618133544922
    3. 'm' → logprob: -6.590618133544922
    4. ' m' → logprob: -8.465618133544922
    5. '(' → logprob: -9.340618133544922
    6. '((' → logprob: -12.590618133544922
    7. '2' → logprob: -14.840618133544922
    8. ' ((' → logprob: -14.840618133544922
    9. '(
' → logprob: -15.215618133544922
    10. ')' → logprob: -15.215618133544922

Token 413: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04302270710468292
    2. '-' → logprob: -3.168022632598877
    3. ' ' → logprob: -10.793023109436035
    4. ')' → logprob: -13.918023109436035
    5. '   ' → logprob: -14.543023109436035
    6. ' -
' → logprob: -15.168023109436035
    7. '[' → logprob: -15.293023109436035
    8. ' ' → logprob: -15.418023109436035
    9. '```' → logprob: -15.918023109436035
    10. '<|end|>' → logprob: -15.918023109436035

Token 414: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021867838222533464
    2. ' ' → logprob: -6.1271867752075195
    3. '   ' → logprob: -13.87718677520752
    4. '  ' → logprob: -15.50218677520752
    5. '2' → logprob: -16.002187728881836
    6. '```' → logprob: -16.377187728881836
    7. '
' → logprob: -16.627187728881836
    8. '    ' → logprob: -16.752187728881836
    9. '<|end|>' → logprob: -17.252187728881836
    10. ' -' → logprob: -17.377187728881836

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020616286201402545
    2. ' ' → logprob: -8.500205993652344
    3. '-' → logprob: -13.875205993652344
    4. '2' → logprob: -14.000205993652344
    5. '   ' → logprob: -14.875205993652344
    6. '```' → logprob: -16.125205993652344
    7. '
' → logprob: -16.625205993652344
    8. '  ' → logprob: -16.750205993652344
    9. ' -' → logprob: -16.937705993652344
    10. '

' → logprob: -17.937705993652344

Token 416: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3661125600337982
    2. '/' → logprob: -1.6161125898361206
    3. ' /' → logprob: -2.241112470626831
    4. ')/' → logprob: -6.99111270904541
    5. ' )' → logprob: -7.36611270904541
    6. ' ' → logprob: -12.36611270904541
    7. '```' → logprob: -13.61611270904541
    8. ' ' → logprob: -13.74111270904541
    9. '/)' → logprob: -13.86611270904541
    10. ')/(' → logprob: -13.99111270904541

Token 417: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4416852295398712
    2. ' /' → logprob: -1.1916851997375488
    3. ' else' → logprob: -3.816685199737549
    4. 'else' → logprob: -3.816685199737549
    5. '   ' → logprob: -4.941685199737549
    6. '/
' → logprob: -7.316685199737549
    7. ' /
' → logprob: -7.691685199737549
    8. '
' → logprob: -7.816685199737549
    9. 'elif' → logprob: -8.816685676574707
    10. '*' → logprob: -9.566685676574707

Token 418: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6931471824645996
    2. ' ' → logprob: -0.6931471824645996
    3. ' ' → logprob: -16.693147659301758
    4. '   ' → logprob: -17.568147659301758
    5. '```' → logprob: -17.693147659301758
    6. '۲' → logprob: -19.505647659301758
    7. '  ' → logprob: -19.943147659301758
    8. '２' → logprob: -20.005647659301758
    9. '0' → logprob: -20.193147659301758
    10. ' 
' → logprob: -20.505647659301758

Token 419: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.000024795532227
    4. '```' → logprob: -17.375024795532227
    5. '
' → logprob: -18.875024795532227
    6. '  ' → logprob: -19.250024795532227
    7. '۲' → logprob: -19.375024795532227
    8. '２' → logprob: -20.562524795532227
    9. '(' → logprob: -21.187524795532227
    10. '	' → logprob: -21.250024795532227

Token 420: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10968492925167084
    2. ' else' → logprob: -3.234684944152832
    3. '   ' → logprob: -3.484684944152832
    4. '<|end|>' → logprob: -3.484684944152832
    5. '
' → logprob: -6.984684944152832
    6. ')' → logprob: -7.109684944152832
    7. 'elif' → logprob: -7.234684944152832
    8. '	else' → logprob: -8.234684944152832
    9. '<|end|>' → logprob: -8.984684944152832
    10. '\n' → logprob: -9.359684944152832

Token 421: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.35183900594711304
    2. '   ' → logprob: -1.2268390655517578
    3. ' else' → logprob: -6.476839065551758
    4. '<|end|>' → logprob: -6.976839065551758
    5. 'elif' → logprob: -7.101839065551758
    6. '```' → logprob: -10.601839065551758
    7. ')' → logprob: -10.726839065551758
    8. '	else' → logprob: -10.976839065551758
    9. '    
' → logprob: -12.351839065551758
    10. '<|end|>' → logprob: -12.851839065551758

Token 422: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.004371848423033953
    2. ' else' → logprob: -5.629371643066406
    3. '   ' → logprob: -7.379371643066406
    4. 'elif' → logprob: -9.629371643066406
    5. '<|end|>' → logprob: -10.004371643066406
    6. '	else' → logprob: -10.504371643066406
    7. '```' → logprob: -12.629371643066406
    8. ')' → logprob: -12.879371643066406
    9. 'e' → logprob: -14.879371643066406
    10. 'return' → logprob: -15.129371643066406

Token 423: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01136480551213026
    2. ':
' → logprob: -4.636364936828613
    3. '       ' → logprob: -6.636364936828613
    4. '   ' → logprob: -8.136364936828613
    5. ' :' → logprob: -14.011364936828613
    6. ':
' → logprob: -15.386364936828613
    7. ':

' → logprob: -15.386364936828613
    8. '{' → logprob: -15.386364936828613
    9. '):
' → logprob: -15.636364936828613
    10. '
' → logprob: -15.886364936828613

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023653162643313408
    2. '   ' → logprob: -3.773653268814087
    3. ':' → logprob: -8.773653030395508
    4. ' ans' → logprob: -9.273653030395508
    5. 'ans' → logprob: -9.523653030395508
    6. '    ' → logprob: -10.773653030395508
    7. '     ' → logprob: -11.023653030395508
    8. '           ' → logprob: -11.273653030395508
    9. '      ' → logprob: -11.398653030395508
    10. '(ans' → logprob: -11.773653030395508

Token 425: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00027849749312736094
    2. ' ans' → logprob: -8.25027847290039
    3. '   ' → logprob: -11.37527847290039
    4. '       ' → logprob: -12.50027847290039
    5. '	ans' → logprob: -13.50027847290039
    6. '(ans' → logprob: -15.37527847290039
    7. 'ex' → logprob: -15.50027847290039
    8. '#' (adapté à ' #') → logprob: -16.12527847290039
    9. '           ' → logprob: -16.37527847290039
    10. '_ans' → logprob: -19.12527847290039

Token 426: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005070421029813588
    2. '#' → logprob: -8.250507354736328
    3. ' ans' → logprob: -8.625507354736328
    4. '   ' → logprob: -9.875507354736328
    5. '       ' → logprob: -11.750507354736328
    6. '	ans' → logprob: -12.750507354736328
    7. '(ans' → logprob: -13.500507354736328
    8. 'ex' → logprob: -13.625507354736328
    9. '           ' → logprob: -15.250507354736328
    10. 'answer' → logprob: -15.500507354736328

Token 427: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7305777072906494
    2. ' ans' → logprob: -1.2305777072906494
    3. 'd' → logprob: -1.9805777072906494
    4. ' ex' → logprob: -2.9805777072906494
    5. 'ans' → logprob: -3.7305777072906494
    6. 'ex' → logprob: -4.60557746887207
    7. '   ' → logprob: -6.60557746887207
    8. '#' → logprob: -7.73057746887207
    9. ':' → logprob: -7.98057746887207
    10. ' ' → logprob: -8.48057746887207

Token 428: ' n' (ID: 297)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.9196257591247559
    2. ':' → logprob: -1.1696257591247559
    3. '!=' → logprob: -1.7946257591247559
    4. ' ==' → logprob: -2.544625759124756
    5. '==' → logprob: -3.169625759124756
    6. '=' → logprob: -6.294625759124756
    7. ' :' → logprob: -6.919625759124756
    8. ' =' → logprob: -7.794625759124756
    9. '*' → logprob: -8.794626235961914
    10. '   ' → logprob: -9.169626235961914

Token 429: ''est' (ID: 6616)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1629277467727661
    2. '!=' → logprob: -1.9129277467727661
    3. ' n' → logprob: -7.412927627563477
    4. 'est' → logprob: -7.787927627563477
    5. '>' → logprob: -7.912927627563477
    6. ' ==' → logprob: -8.162927627563477
    7. ''est' → logprob: -8.287927627563477
    8. '==' → logprob: -8.537927627563477
    9. '=' → logprob: -8.787927627563477
    10. ' est' → logprob: -9.662927627563477

Token 430: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.07892636209726334
    2. ' pas' → logprob: -2.5789263248443604
    3. '_pas' → logprob: -10.578926086425781
    4. '0' → logprob: -12.203926086425781
    5. 'Pas' → logprob: -13.328926086425781
    6. 'not' → logprob: -13.328926086425781
    7. '>' → logprob: -13.953926086425781
    8. '=' → logprob: -14.328926086425781
    9. '#' → logprob: -14.703926086425781
    10. '   ' → logprob: -15.453926086425781

Token 431: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002830434823408723
    2. '=' → logprob: -6.127830505371094
    3. ' égal' → logprob: -8.627830505371094
    4. 'pas' → logprob: -9.002830505371094
    5. '==' → logprob: -9.002830505371094
    6. ' pas' → logprob: -9.252830505371094
    7. 'égal' → logprob: -10.002830505371094
    8. ' ' → logprob: -10.252830505371094
    9. '1' → logprob: -11.252830505371094
    10. '>' → logprob: -11.377830505371094

Token 432: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13830164074897766
    2. ':
' → logprob: -2.2633016109466553
    3. '       ' → logprob: -4.013301849365234
    4. '           ' → logprob: -5.013301849365234
    5. '   ' → logprob: -8.763301849365234
    6. ',' → logprob: -8.888301849365234
    7. 'ans' → logprob: -9.763301849365234
    8. ':

' → logprob: -11.263301849365234
    9. ':
' → logprob: -11.388301849365234
    10. '#' → logprob: -11.513301849365234

Token 433: ' alors' (ID: 17971)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5457215309143066
    2. 'ans' → logprob: -0.9207215309143066
    3. '   ' → logprob: -3.9207215309143066
    4. '       ' → logprob: -6.295721530914307
    5. '	ans' → logprob: -7.795721530914307
    6. '           ' → logprob: -9.545721054077148
    7. '(ans' → logprob: -9.670721054077148
    8. '
' → logprob: -9.670721054077148
    9. '#' → logprob: -11.045721054077148
    10. ' ' → logprob: -11.795721054077148

Token 434: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7477384209632874
    2. 'ans' → logprob: -1.1227383613586426
    3. '   ' → logprob: -1.7477383613586426
    4. '       ' → logprob: -3.7477383613586426
    5. '	ans' → logprob: -6.497738361358643
    6. '#' → logprob: -6.747738361358643
    7. '(ans' → logprob: -8.2477388381958
    8. '           ' → logprob: -9.2477388381958
    9. ' ' → logprob: -9.2477388381958
    10. ':' → logprob: -9.2477388381958

Token 435: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192955136299133
    2. '=' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.75192928314209
    4. '   ' → logprob: -15.87692928314209
    5. ')' → logprob: -16.751930236816406
    6. ' ' → logprob: -17.501930236816406
    7. ' +=' → logprob: -17.876930236816406
    8. '```' → logprob: -18.001930236816406
    9. '＝' → logprob: -18.126930236816406
    10. '=

' → logprob: -18.501930236816406

Token 436: ' simplement' (ID: 45065)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.18122901022434235
    2. ' ex' → logprob: -1.8062289953231812
    3. '0' → logprob: -7.431229114532471
    4. 'ans' → logprob: -7.931229114532471
    5. ' ans' → logprob: -8.931228637695312
    6. '(ex' → logprob: -9.181228637695312
    7. '=' → logprob: -9.431228637695312
    8. '       ' → logprob: -9.556228637695312
    9. '2' → logprob: -9.806228637695312
    10. '   ' → logprob: -11.181228637695312

Token 437: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.07913202047348022
    2. ' ex' → logprob: -2.579132080078125
    3. '   ' → logprob: -9.329132080078125
    4. '=' → logprob: -10.204132080078125
    5. '(ex' → logprob: -10.454132080078125
    6. 'ans' → logprob: -10.829132080078125
    7. 'equal' → logprob: -11.329132080078125
    8. '0' → logprob: -11.704132080078125
    9. ' equal' → logprob: -11.954132080078125
    10. '2' → logprob: -11.954132080078125

Token 438: ' multip' (ID: 17524)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0020060802344232798
    2. '*' → logprob: -6.2520060539245605
    3. '*(' → logprob: -9.752006530761719
    4. '<|end|>' → logprob: -11.127006530761719
    5. ' ' → logprob: -13.627006530761719
    6. ' *(' → logprob: -13.752006530761719
    7. '       ' → logprob: -14.752006530761719
    8. '```' → logprob: -14.752006530761719
    9. '*object' → logprob: -15.377006530761719
    10. ')' → logprob: -15.627006530761719

Token 439: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.014339192770421505
    2. 'li' → logprob: -4.264338970184326
    3. '*' → logprob: -10.264339447021484
    4. 'l' → logprob: -10.764339447021484
    5. 'lé' → logprob: -11.014339447021484
    6. 'lik' → logprob: -11.264339447021484
    7. '<li' → logprob: -11.764339447021484
    8. '#' → logprob: -11.889339447021484
    9. 'lic' → logprob: -12.514339447021484
    10. 'ly' → logprob: -12.514339447021484

Token 440: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.05610430985689163
    2. '(m' → logprob: -3.0561044216156006
    3. 'par' → logprob: -5.9311041831970215
    4. '*' → logprob: -6.5561041831970215
    5. '*(' → logprob: -6.5561041831970215
    6. ' *' → logprob: -7.6811041831970215
    7. '(par' → logprob: -7.9311041831970215
    8. '       ' → logprob: -8.30610466003418
    9. '(' → logprob: -8.68110466003418
    10. '(ans' → logprob: -9.18110466003418

Token 441: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07262711971998215
    2. '(m' → logprob: -2.697627067565918
    3. ' m' → logprob: -6.072627067565918
    4. 'm' → logprob: -8.197627067565918
    5. '(' → logprob: -9.197627067565918
    6. ' ' → logprob: -13.072627067565918
    7. ' ' → logprob: -13.947627067565918
    8. '1' → logprob: -14.197627067565918
    9. '   ' → logprob: -14.572627067565918
    10. '	m' → logprob: -15.197627067565918

Token 442: 'm' (ID: 76)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.4478546679019928
    2. 'm' → logprob: -1.8228546380996704
    3. ' (' → logprob: -1.8228546380996704
    4. ' m' → logprob: -3.32285475730896
    5. '(' → logprob: -6.322854518890381
    6. '	m' → logprob: -12.197854995727539
    7. '1' → logprob: -12.197854995727539
    8. ' ' → logprob: -12.572854995727539
    9. '```' → logprob: -12.947854995727539
    10. '   ' → logprob: -12.947854995727539

Token 443: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0160620529204607
    2. '-' → logprob: -4.141062259674072
    3. ' ' → logprob: -10.766061782836914
    4. ')' → logprob: -12.266061782836914
    5. '   ' → logprob: -14.016061782836914
    6. ' ' → logprob: -14.266061782836914
    7. '<|end|>' → logprob: -16.141061782836914
    8. '```' → logprob: -16.266061782836914
    9. '  ' → logprob: -16.766061782836914
    10. '       ' → logprob: -16.766061782836914

Token 444: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04306724667549133
    2. ' ' → logprob: -3.168067216873169
    3. '(' → logprob: -10.29306697845459
    4. ' (' → logprob: -11.41806697845459
    5. '-' → logprob: -11.91806697845459
    6. ')' → logprob: -12.54306697845459
    7. ' ' → logprob: -12.66806697845459
    8. ' -' → logprob: -12.91806697845459
    9. ' m' → logprob: -12.91806697845459
    10. 'm' → logprob: -13.91806697845459

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020520923135336488
    2. ' ' → logprob: -8.500205039978027
    3. '-' → logprob: -14.500205039978027
    4. '```' → logprob: -15.125205039978027
    5. '   ' → logprob: -15.375205039978027
    6. ')' → logprob: -15.750205039978027
    7. '2' → logprob: -16.375205993652344
    8. '１' → logprob: -17.125205993652344
    9. '(' → logprob: -17.187705993652344
    10. '  ' → logprob: -17.187705993652344

Token 446: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08006183058023453
    2. '       ' → logprob: -2.830061912536621
    3. '   ' → logprob: -4.830061912536621
    4. '*' → logprob: -5.705061912536621
    5. ' *' → logprob: -5.705061912536621
    6. ').' → logprob: -6.330061912536621
    7. '.' → logprob: -6.955061912536621
    8. ' )' → logprob: -8.580061912536621
    9. '):' → logprob: -9.330061912536621
    10. '        ' → logprob: -9.955061912536621

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06513547152280807
    2. ':' → logprob: -2.8151354789733887
    3. ':
' → logprob: -6.065135478973389
    4. ' ans' → logprob: -8.56513500213623
    5. '           ' → logprob: -8.81513500213623
    6. '```' → logprob: -8.81513500213623
    7. '=' → logprob: -8.94013500213623
    8. 'ans' → logprob: -9.19013500213623
    9. '(ans' → logprob: -10.19013500213623
    10. '   ' → logprob: -10.19013500213623

Token 448: ' ans' (ID: 3345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3884204030036926
    2. 'ans' (adapté à ' ans') → logprob: -1.1384203433990479
    3. ' ans' → logprob: -6.638420581817627
    4. '	ans' → logprob: -9.513420104980469
    5. '(ans' → logprob: -9.763420104980469
    6. '           ' → logprob: -9.763420104980469
    7. '   ' → logprob: -10.138420104980469
    8. '_ans' → logprob: -13.013420104980469
    9. '```' → logprob: -13.388420104980469
    10. 'answer' → logprob: -13.888420104980469

Token 449: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859020933508873
    2. '=' → logprob: -3.0485901832580566
    3. ' *=' → logprob: -13.298590660095215
    4. ' ' → logprob: -14.798590660095215
    5. ')' → logprob: -15.923590660095215
    6. ' ' → logprob: -16.0485897064209
    7. '   ' → logprob: -16.2985897064209
    8. ' =)' → logprob: -16.2985897064209
    9. ' +=' → logprob: -16.5485897064209
    10. '	' → logprob: -16.7985897064209

Token 450: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5759406089782715
    2. ' ex' → logprob: -0.8259406089782715
    3. '(ex' → logprob: -14.57594108581543
    4. '	ex' → logprob: -14.57594108581543
    5. '.ex' → logprob: -16.32594108581543
    6. 'exo' → logprob: -16.57594108581543
    7. ' ' → logprob: -17.32594108581543
    8. '_ex' → logprob: -17.57594108581543
    9. '   ' → logprob: -18.20094108581543
    10. ' ' → logprob: -18.20094108581543

Token 451: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0015246253460645676
    2. '*' → logprob: -6.501524448394775
    3. '*(' → logprob: -10.876524925231934
    4. ' ' → logprob: -13.251524925231934
    5. ' ' → logprob: -14.251524925231934
    6. ' *(' → logprob: -14.501524925231934
    7. '```' → logprob: -16.376523971557617
    8. ',' → logprob: -16.501523971557617
    9. ' **' → logprob: -17.001523971557617
    10. '**' → logprob: -17.126523971557617

Token 452: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04868081584572792
    2. '(m' → logprob: -3.0486807823181152
    3. '(' → logprob: -9.298681259155273
    4. '(n' → logprob: -13.798681259155273
    5. ' ' → logprob: -15.548681259155273
    6. ' ' → logprob: -15.923681259155273
    7. ' m' → logprob: -16.048681259155273
    8. ')' → logprob: -16.298681259155273
    9. '1' → logprob: -16.673681259155273
    10. '(M' → logprob: -17.048681259155273

Token 453: 'm' (ID: 76)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.07321592420339584
    2. 'm' → logprob: -3.323215961456299
    3. ' (' → logprob: -3.448215961456299
    4. '(' → logprob: -6.323215961456299
    5. ' m' → logprob: -7.073215961456299
    6. ')' → logprob: -9.57321548461914
    7. '1' → logprob: -10.32321548461914
    8. '(
' → logprob: -11.94821548461914
    9. '2' → logprob: -12.82321548461914
    10. ' ' → logprob: -13.07321548461914

Token 454: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07005825638771057
    2. '-' → logprob: -2.6950583457946777
    3. ')' → logprob: -9.19505786895752
    4. ' ' → logprob: -11.19505786895752
    5. '[' → logprob: -12.69505786895752
    6. ' )' → logprob: -14.19505786895752
    7. ' ' → logprob: -14.57005786895752
    8. '<|end|>' → logprob: -14.57005786895752
    9. ' -
' → logprob: -14.82005786895752
    10. '>' → logprob: -15.19505786895752

Token 455: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -8.500204086303711
    3. '(' → logprob: -15.500204086303711
    4. ')' → logprob: -16.37520408630371
    5. '<|end|>' → logprob: -19.00020408630371
    6. '```' → logprob: -19.25020408630371
    7. ' (' → logprob: -19.50020408630371
    8. '۱' → logprob: -19.62520408630371
    9. ' ' → logprob: -19.62520408630371
    10. '   ' → logprob: -19.87520408630371

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. '(' → logprob: -14.12501049041748
    4. ')' → logprob: -17.750011444091797
    5. 'm' → logprob: -19.250011444091797
    6. ' (' → logprob: -19.750011444091797
    7. '```' → logprob: -19.750011444091797
    8. '   ' → logprob: -20.250011444091797
    9. '<|end|>' → logprob: -21.000011444091797
    10. '  ' → logprob: -21.000011444091797

Token 457: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006631145952269435
    2. '<|end|>' → logprob: -7.6256632804870605
    3. '```' → logprob: -9.875662803649902
    4. ' )' → logprob: -10.500662803649902
    5. ')return' → logprob: -10.875662803649902
    6. '   ' → logprob: -10.875662803649902
    7. ')
' → logprob: -11.375662803649902
    8. '}' → logprob: -11.625662803649902
    9. '**' → logprob: -11.875662803649902
    10. '#' → logprob: -12.125662803649902

Token 458: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005563143640756607
    2. '
' → logprob: -5.255563259124756
    3. ' print' → logprob: -8.380562782287598
    4. ')' → logprob: -10.130562782287598
    5. '#' → logprob: -10.630562782287598
    6. '\n' → logprob: -11.755562782287598
    7. '.print' → logprob: -12.005562782287598
    8. '(print' → logprob: -12.255562782287598
    9. '#print' → logprob: -12.380562782287598
    10. '<|end|>' → logprob: -13.380562782287598

Token 459: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006320207612589002
    2. ' print' → logprob: -7.375631809234619
    3. 'pr' → logprob: -12.875632286071777
    4. 'p' → logprob: -13.375632286071777
    5. '#' → logprob: -14.375632286071777
    6. 'prin' → logprob: -14.750632286071777
    7. 'pri' → logprob: -15.750632286071777
    8. '#print' → logprob: -16.12563133239746
    9. '```' → logprob: -17.00063133239746
    10. 'prit' → logprob: -17.12563133239746

Token 460: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.02199518494307995
    2. '#' → logprob: -3.8969950675964355
    3. 'f' → logprob: -7.2719950675964355
    4. 'ichage' → logprob: -7.8969950675964355
    5. 'iche' → logprob: -8.646995544433594
    6. 'ich' → logprob: -9.646995544433594
    7. '```' → logprob: -10.146995544433594
    8. '   ' → logprob: -10.646995544433594
    9. 'cher' → logprob: -10.896995544433594
    10. '

' → logprob: -11.146995544433594

Token 461: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932259202003479
    2. '(ans' → logprob: -0.6932259202003479
    3. '(int' → logprob: -10.818225860595703
    4. '()' → logprob: -11.193225860595703
    5. '(round' → logprob: -11.443225860595703
    6. '(f' → logprob: -11.943225860595703
    7. '(
' → logprob: -11.943225860595703
    8. '("' → logprob: -12.068225860595703
    9. '(abs' → logprob: -12.818225860595703
    10. '(answer' → logprob: -12.818225860595703

Token 462: ' valeur' (ID: 41664)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.3367372751235962
    2. 'ans' → logprob: -1.9617372751235962
    3. '(' → logprob: -2.2117371559143066
    4. 'result' → logprob: -3.4617371559143066
    5. 'int' → logprob: -6.961737155914307
    6. ' result' → logprob: -7.461737155914307
    7. ')' → logprob: -7.586737155914307
    8. ' ans' → logprob: -7.711737155914307
    9. 'round' → logprob: -7.961737155914307
    10. '()' → logprob: -8.336737632751465

Token 463: ' finale' (ID: 37759)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0024462812580168247
    2. '(' → logprob: -6.252446174621582
    3. 'print' → logprob: -7.752446174621582
    4. 'ans' → logprob: -9.502446174621582
    5. '(print' → logprob: -11.377446174621582
    6. '()' → logprob: -14.127446174621582
    7. '(answer' → logprob: -14.752446174621582
    8. '(abs' → logprob: -15.752446174621582
    9. '(
' → logprob: -16.1274471282959
    10. '(round' → logprob: -16.1274471282959

Token 464: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4855663721391466e-05
    2. ' print' → logprob: -11.500015258789062
    3. '(print' → logprob: -12.875015258789062
    4. '```' → logprob: -14.000015258789062
    5. '(' → logprob: -14.500015258789062
    6. '()
' → logprob: -15.375015258789062
    7. ')' → logprob: -15.625015258789062
    8. '
' → logprob: -16.125015258789062
    9. '()' → logprob: -16.250015258789062
    10. '(ans' → logprob: -16.250015258789062

Token 465: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7048400044441223
    2. ' ans' → logprob: -0.7048400044441223
    3. '(ans' → logprob: -4.454840183258057
    4. '	ans' → logprob: -13.329839706420898
    5. '_ans' → logprob: -14.204839706420898
    6. 'anst' → logprob: -16.9548397064209
    7. ' la' → logprob: -17.0798397064209
    8. 'answer' → logprob: -17.2048397064209
    9. ' ' → logprob: -17.3298397064209
    10. 'int' → logprob: -17.5798397064209

Token 466: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.990154047845863e-05
    2. '
' → logprob: -10.500049591064453
    3. ' print' → logprob: -10.750049591064453
    4. '```' → logprob: -14.125049591064453
    5. ')
' → logprob: -17.875049591064453
    6. '.print' → logprob: -18.375049591064453
    7. '
' → logprob: -18.750049591064453
    8. '``' → logprob: -19.000049591064453
    9. '\n' → logprob: -19.125049591064453
    10. ')' → logprob: -19.375049591064453

Token 467: ' l' (ID: 305)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8240863084793091
    2. '6' → logprob: -2.3240861892700195
    3. '4' → logprob: -2.4490861892700195
    4. '2' → logprob: -2.8240861892700195
    5. 'print' → logprob: -2.9490861892700195
    6. 'pr' → logprob: -2.9490861892700195
    7. '3' → logprob: -3.0740861892700195
    8. 'près' → logprob: -3.0740861892700195
    9. 'la' → logprob: -3.9490861892700195
    10. 'e' → logprob: -4.3240861892700195

Token 468: ''utilisateur' (ID: 140803)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09575027227401733
    2. ''écran' → logprob: -2.470750331878662
    3. 'e' → logprob: -5.720750331878662
    4. ''utilisateur' → logprob: -6.595750331878662
    5. 'é' → logprob: -7.845750331878662
    6. '’écran' → logprob: -7.970750331878662
    7. '#' → logprob: -8.220749855041504
    8. ''é' → logprob: -8.595749855041504
    9. 'eur' → logprob: -9.095749855041504
    10. ''' → logprob: -9.220749855041504

Token 469: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.4894986785948277e-05
    2. ' print' → logprob: -10.500044822692871
    3. '
' → logprob: -11.000044822692871
    4. '```' → logprob: -14.375044822692871
    5. ')
' → logprob: -17.750045776367188
    6. '.print' → logprob: -17.875045776367188
    7. '
' → logprob: -18.250045776367188
    8. '``' → logprob: -18.375045776367188
    9. '`
' → logprob: -18.875045776367188
    10. '(print' → logprob: -19.000045776367188

Token 470: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. '```' → logprob: -20.25
    4. 'pr' → logprob: -26.25
    5. 'prin' → logprob: -26.5
    6. '
' → logprob: -26.5
    7. '#print' → logprob: -26.75
    8. '.print' → logprob: -27.125
    9. 'pri' → logprob: -27.625
    10. 'prit' → logprob: -27.625

Token 471: ' Il' (ID: 5329)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001584850688232109
    2. ' print' → logprob: -8.750158309936523
    3. '```' → logprob: -18.125158309936523
    4. 'pr' → logprob: -19.000158309936523
    5. 'prin' → logprob: -21.000158309936523
    6. 'pri' → logprob: -21.625158309936523
    7. '
' → logprob: -22.125158309936523
    8. 'p' → logprob: -22.250158309936523
    9. '#print' → logprob: -22.375158309936523
    10. '.print' → logprob: -22.625158309936523

Token 472: ' s' (ID: 265)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3113994896411896
    2. ' print' → logprob: -2.186399459838867
    3. ')' → logprob: -2.561399459838867
    4. '=' → logprob: -3.311399459838867
    5. ' =' → logprob: -4.061399459838867
    6. '.' → logprob: -4.561399459838867
    7. '#' → logprob: -5.686399459838867
    8. ',' → logprob: -5.811399459838867
    9. ' ' → logprob: -6.186399459838867
    10. ' )' → logprob: -6.811399459838867

Token 473: ''agit' (ID: 72975)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24559658765792847
    2. '=' → logprob: -1.7455966472625732
    3. '#' → logprob: -4.245596408843994
    4. 'e' → logprob: -4.370596408843994
    5. ' =' → logprob: -5.120596408843994
    6. 'ans' → logprob: -5.995596408843994
    7. ')' → logprob: -6.620596408843994
    8. '#print' → logprob: -6.620596408843994
    9. '   ' → logprob: -6.745596408843994
    10. 'a' → logprob: -6.870596408843994

Token 474: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3138144314289093
    2. ' de' → logprob: -1.688814401626587
    3. 'd' → logprob: -3.188814401626587
    4. 'de' → logprob: -4.063814640045166
    5. 'print' → logprob: -4.188814640045166
    6. ')' → logprob: -4.813814640045166
    7. '(' → logprob: -7.688814640045166
    8. ',' → logprob: -8.063814163208008
    9. '=' → logprob: -8.188814163208008
    10. 'des' → logprob: -8.313814163208008

Token 475: ''un' (ID: 9788)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29946181178092957
    2. ' print' → logprob: -1.549461841583252
    3. ''une' → logprob: -3.924461841583252
    4. ''un' → logprob: -5.049461841583252
    5. ''' → logprob: -5.299461841583252
    6. 'e' → logprob: -5.549461841583252
    7. ' une' → logprob: -5.674461841583252
    8. 'ans' → logprob: -6.299461841583252
    9. 'une' → logprob: -6.674461841583252
    10. ' un' → logprob: -6.674461841583252

Token 476: ' nombre' (ID: 9733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2864275574684143
    2. ' print' → logprob: -1.9114274978637695
    3. 'e' → logprob: -2.5364274978637695
    4. ' résultat' → logprob: -5.1614274978637695
    5. ')' → logprob: -5.6614274978637695
    6. 'f' → logprob: -6.7864274978637695
    7. 'é' → logprob: -7.1614274978637695
    8. 'pr' → logprob: -7.1614274978637695
    9. '
' → logprob: -7.1614274978637695
    10. '```' → logprob: -7.2864274978637695

Token 477: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39507871866226196
    2. 'print' → logprob: -1.5200786590576172
    3. '()' → logprob: -2.645078659057617
    4. ')' → logprob: -3.895078659057617
    5. '.' → logprob: -5.145078659057617
    6. '(
' → logprob: -6.020078659057617
    7. ',' → logprob: -6.520078659057617
    8. '("' → logprob: -6.895078659057617
    9. '=' → logprob: -7.020078659057617
    10. '(print' → logprob: -7.020078659057617

Token 478: ' virg' (ID: 165362)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4979633390903473
    2. 'vir' → logprob: -2.1229634284973145
    3. ' ' → logprob: -3.3729634284973145
    4. '#' → logprob: -3.3729634284973145
    5. 'print' → logprob: -3.4979634284973145
    6. 'aff' → logprob: -3.7479634284973145
    7. 'l' → logprob: -3.7479634284973145
    8. '6' → logprob: -3.8729634284973145
    9. 'f' → logprob: -3.9979634284973145
    10. 'floating' → logprob: -4.7479634284973145

Token 479: 'ule' (ID: 1601)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.14393004775047302
    2. ',' → logprob: -3.268929958343506
    3. 'alez' → logprob: -3.518929958343506
    4. 'le' → logprob: -4.143929958343506
    5. 'g' → logprob: -4.393929958343506
    6. 'er' → logprob: -4.768929958343506
    7. 'lice' → logprob: -5.143929958343506
    8. 'lée' → logprob: -5.643929958343506
    9. 'icale' → logprob: -6.143929958343506
    10. 'rée' → logprob: -6.268929958343506

Token 480: ' flott' (ID: 108700)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3327185809612274
    2. ',' → logprob: -1.7077186107635498
    3. 'f' → logprob: -2.95771861076355
    4. ')' → logprob: -3.45771861076355
    5. '.' → logprob: -4.332718372344971
    6. ':' → logprob: -6.832718372344971
    7. ',
' → logprob: -6.957718372344971
    8. 'e' → logprob: -7.082718372344971
    9. ' print' → logprob: -7.082718372344971
    10. 'float' → logprob: -7.707718372344971

Token 481: 'ante' (ID: 2116)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0087194442749023
    2. 'ère' → logprob: -1.5087194442749023
    3. 'le' → logprob: -2.1337194442749023
    4. 'ale' → logprob: -2.7587194442749023
    5. 'ière' → logprob: -2.7587194442749023
    6. 'ée' → logprob: -3.0087194442749023
    7. 'ante' → logprob: -3.3837194442749023
    8. 'é' → logprob: -3.8837194442749023
    9. 'ile' → logprob: -4.508719444274902
    10. 'ète' → logprob: -5.008719444274902

Token 482: ' représentant' (ID: 136122)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006952775875106454
    2. ' print' → logprob: -8.37569522857666
    3. ')' → logprob: -8.50069522857666
    4. '
' → logprob: -9.25069522857666
    5. '.' → logprob: -9.50069522857666
    6. ',' → logprob: -9.75069522857666
    7. '.print' → logprob: -11.00069522857666
    8. ')
' → logprob: -12.25069522857666
    9. '.
' → logprob: -12.75069522857666
    10. ',
' → logprob: -13.00069522857666

Token 483: ' le' (ID: 505)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.36249709129333496
    2. 'ans' → logprob: -1.612497091293335
    3. ' ans' → logprob: -3.112497091293335
    4. ' la' → logprob: -3.612497091293335
    5. 'la' → logprob: -3.737497091293335
    6. 'le' → logprob: -5.112497329711914
    7. ' le' → logprob: -6.612497329711914
    8. 'une' → logprob: -7.362497329711914
    9. ' une' → logprob: -8.237497329711914
    10. 'l' → logprob: -8.237497329711914

Token 484: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.5517382025718689
    2. 'rés' → logprob: -0.9267382025718689
    3. 'result' → logprob: -3.6767382621765137
    4. ' result' → logprob: -6.426738262176514
    5. ' resultat' → logprob: -7.551738262176514
    6. 'res' → logprob: -8.176737785339355
    7. 'r' → logprob: -8.426737785339355
    8. 'prob' → logprob: -9.176737785339355
    9. 'ans' → logprob: -10.176737785339355
    10. 'Rés' → logprob: -10.926737785339355

Token 485: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002659847668837756
    2. ' print' → logprob: -8.375266075134277
    3. '
' → logprob: -10.500266075134277
    4. ')' → logprob: -13.250266075134277
    5. '.' → logprob: -13.500266075134277
    6. ')
' → logprob: -13.750266075134277
    7. '.print' → logprob: -13.750266075134277
    8. ',' → logprob: -13.875266075134277
    9. '```' → logprob: -14.250266075134277
    10. '.
' → logprob: -14.500266075134277

Token 486: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.5090907216072083
    2. ' calcul' → logprob: -1.1340906620025635
    3. 'ans' → logprob: -2.6340906620025635
    4. 'cal' → logprob: -6.009090900421143
    5. ' ans' → logprob: -6.384090900421143
    6. 'programme' → logprob: -7.884090900421143
    7. 'print' → logprob: -8.634090423583984
    8. 'calc' → logprob: -9.009090423583984
    9. ' résultat' → logprob: -9.134090423583984
    10. ' programme' → logprob: -9.509090423583984

Token 487: ' précédent' (ID: 128462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006184352096170187
    2. '
' → logprob: -7.8756184577941895
    3. ' print' → logprob: -9.125617980957031
    4. ')' → logprob: -9.625617980957031
    5. ')
' → logprob: -10.375617980957031
    6. ',' → logprob: -12.125617980957031
    7. '```' → logprob: -12.125617980957031
    8. '(print' → logprob: -12.250617980957031
    9. '.
' → logprob: -12.375617980957031
    10. '.' → logprob: -12.375617980957031

Token 488: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003700165543705225
    2. '
' → logprob: -8.000370025634766
    3. ' print' → logprob: -10.500370025634766
    4. ')' → logprob: -13.375370025634766
    5. '
' → logprob: -13.625370025634766
    6. ')
' → logprob: -13.625370025634766
    7. '.print' → logprob: -13.750370025634766
    8. '```' → logprob: -14.125370025634766
    9. '.' → logprob: -14.500370025634766
    10. ',' → logprob: -15.125370025634766

Token 489: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.25
    3. ' print' → logprob: -17.0
    4. '``' → logprob: -22.75
    5. 'pr' → logprob: -23.75
    6. '
' → logprob: -24.5
    7. 'prin' → logprob: -25.375
    8. '#print' → logprob: -25.625
    9. 'prit' → logprob: -25.625
    10. '	print' → logprob: -26.0

Token 490: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04864368960261345
    2. '(ans' → logprob: -3.0486435890197754
    3. '()' → logprob: -10.173644065856934
    4. '('' → logprob: -11.548644065856934
    5. '(
' → logprob: -12.423644065856934
    6. ' (' → logprob: -13.048644065856934
    7. '("' → logprob: -13.673644065856934
    8. '(

' → logprob: -14.673644065856934
    9. '("("' → logprob: -15.673644065856934
    10. 'ans' → logprob: -15.673644065856934

Token 491: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -14.875
    3. ')`' → logprob: -17.75
    4. '))' → logprob: -19.375
    5. ')
' → logprob: -20.75
    6. '())' → logprob: -21.0
    7. '()' → logprob: -21.0
    8. ')#' → logprob: -21.25
    9. '),' → logprob: -21.375
    10. ')**' → logprob: -21.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 489
Tokens correctement prédits (1ère position, stricte): 139
Tokens correctement prédits (1ère position, avec adaptation): 143
Tokens correctement prédits (top 10): 296
Précision stricte (1ère position): 28.43%
Précision adaptée (1ère position): 29.24%
Précision (top 10): 60.53%
================================================================================
