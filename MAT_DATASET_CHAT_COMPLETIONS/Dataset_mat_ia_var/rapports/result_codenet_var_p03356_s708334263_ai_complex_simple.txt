================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import itemgetter
from itertools import starmap, groupby, chain, count

# Lecture des entrées et traitements inutiles mais inventifs
n, m = map(int, input().split())
pn = list(map(lambda x: int(x)-1, input().split()))
ls = reduce(lambda l, i: l.__setitem__(pn[i], i) or l, range(n), [-1]*n)

indices = list(range(n))
par = dict(zip(indices, indices))

def trampoline(f):
    def wrap(*args, **kwargs):
        res = f(*args, **kwargs)
        while callable(res):
            res = res()
        return res
    return wrap

@trampoline
def find(x):
    if par[x] == x:
        return x
    else:
        def inner():
            s = find(par[x])
            par[x] = s
            return s
        return inner

def unite(x, y):
    roots = list(map(find, (x, y)))
    min_root = min(roots)
    max_root = max(roots)
    par[max_root] = min_root

# Map + starmap + lambda pour traiter chaque entrée
list(starmap(lambda a, b: unite(ls[a], ls[b]),
    (map(lambda t: tuple(map(lambda x:int(x)-1, t.split())), (input() for _ in range(m))))
))

ans2 = sum(
    map(lambda i: find(ls[pn[i]]) == find(ls[i]), range(n))
)
print(ans2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.5358482003211975
    2. 'partial' → logprob: -1.0358481407165527
    3. 'reduce' → logprob: -3.0358481407165527
    4. ' wraps' → logprob: -5.160848140716553
    5. 'l' → logprob: -5.535848140716553
    6. 'cached' → logprob: -6.910848140716553
    7. 'cache' → logprob: -7.660848140716553
    8. ' partial' → logprob: -8.535848617553711
    9. 'cmp' → logprob: -8.660848617553711
    10. '```' → logprob: -8.785848617553711

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9289020299911499
    2. ' operator' → logprob: -1.42890202999115
    3. ' itertools' → logprob: -1.55390202999115
    4. ' collections' → logprob: -1.92890202999115
    5. ' os' → logprob: -4.9289021492004395
    6. 'operator' → logprob: -7.4289021492004395
    7. ' sys' → logprob: -8.553901672363281
    8. ' typing' → logprob: -8.553901672363281
    9. 'collections' → logprob: -8.928901672363281
    10. 'math' → logprob: -9.053901672363281

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.044668834656476974
    2. 'import' → logprob: -3.6696689128875732
    3. '.' → logprob: -4.169668674468994
    4. ' ' → logprob: -6.044668674468994
    5. ' .' → logprob: -8.419669151306152
    6. '.import' → logprob: -9.169669151306152
    7. '	import' → logprob: -11.419669151306152
    8. '_import' → logprob: -11.544669151306152
    9. '<|end|>' → logprob: -11.794669151306152
    10. ' Import' → logprob: -13.169669151306152

Token 8: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.22591231763362885
    2. ' import' → logprob: -1.97591233253479
    3. ' mul' → logprob: -3.60091233253479
    4. 'add' → logprob: -3.97591233253479
    5. ' ' → logprob: -4.350912094116211
    6. 'import' → logprob: -5.975912094116211
    7. 'mul' → logprob: -6.600912094116211
    8. ' item' → logprob: -8.100912094116211
    9. ' icon' → logprob: -9.475912094116211
    10. ' ad' → logprob: -10.100912094116211

Token 9: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.008991529233753681
    2. 'get' → logprob: -4.758991718292236
    3. 'getitem' → logprob: -8.008991241455078
    4. 'gett' → logprob: -10.258991241455078
    5. 'item' → logprob: -12.258991241455078
    6. 'g' → logprob: -12.883991241455078
    7. 'ge' → logprob: -14.133991241455078
    8. 'gt' → logprob: -15.758991241455078
    9. 'attr' → logprob: -15.758991241455078
    10. 'got' → logprob: -15.758991241455078

Token 10: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5537190437316895
    2. ',' → logprob: -1.8037190437316895
    3. '\n' → logprob: -2.0537190437316895
    4. '\' → logprob: -2.9287190437316895
    5. '(
' → logprob: -3.0537190437316895
    6. ',
' → logprob: -5.1787190437316895
    7. '.' → logprob: -5.3037190437316895
    8. '
' → logprob: -5.8037190437316895
    9. '()' → logprob: -5.8037190437316895
    10. 'newline' → logprob: -6.1787190437316895

Token 11: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3178820610046387
    2. '\n' → logprob: -1.6928820610046387
    3. '(' → logprob: -2.0678820610046387
    4. '
' → logprob: -2.4428820610046387
    5. '\' → logprob: -2.4428820610046387
    6. ',' → logprob: -2.5678820610046387
    7. '(
' → logprob: -2.6928820610046387
    8. '```' → logprob: -3.5678820610046387
    9. '

' → logprob: -4.067882061004639
    10. ',
' → logprob: -4.192882061004639

Token 12: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.09373306483030319
    2. ' collections' → logprob: -2.593733072280884
    3. ' math' → logprob: -4.343732833862305
    4. 'collections' → logprob: -7.343732833862305
    5. ' os' → logprob: -7.593732833862305
    6. ' operator' → logprob: -8.968732833862305
    7. 'math' → logprob: -8.968732833862305
    8. ' heap' → logprob: -9.093732833862305
    9. ' typing' → logprob: -9.343732833862305
    10. ' datetime' → logprob: -10.593732833862305

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.15599703788757324
    2. 'import' → logprob: -2.0309970378875732
    3. '.' → logprob: -4.405997276306152
    4. '.import' → logprob: -7.405997276306152
    5. ' .' → logprob: -8.030997276306152
    6. '	import' → logprob: -10.280997276306152
    7. ' ' → logprob: -10.530997276306152
    8. '_import' → logprob: -11.905997276306152
    9. '.im' → logprob: -11.905997276306152
    10. '<|end|>' → logprob: -12.530997276306152

Token 14: ' st' (ID: 420)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.45717716217041016
    2. 'group' → logprob: -1.0821771621704102
    3. 'is' → logprob: -4.95717716217041
    4. ' is' → logprob: -5.33217716217041
    5. ' chain' → logprob: -5.58217716217041
    6. 'chain' → logprob: -5.70717716217041
    7. 'acc' → logprob: -6.08217716217041
    8. 'count' → logprob: -6.20717716217041
    9. 'product' → logprob: -6.95717716217041
    10. 'com' → logprob: -7.08217716217041

Token 15: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.228587344288826
    2. 'ar' → logprob: -1.6035873889923096
    3. 'art' → logprob: -6.1035871505737305
    4. 'arl' → logprob: -8.10358715057373
    5. 'arp' → logprob: -8.60358715057373
    6. 'ertools' → logprob: -9.47858715057373
    7. 'a' → logprob: -9.60358715057373
    8. 'arts' → logprob: -9.85358715057373
    9. 'arget' → logprob: -9.97858715057373
    10. 'r' → logprob: -10.22858715057373

Token 16: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -5.836499985889532e-05
    2. 'atch' → logprob: -9.7500581741333
    3. 'apse' → logprob: -17.875059127807617
    4. 'app' → logprob: -18.125059127807617
    5. 'ethod' → logprob: -18.125059127807617
    6. '(ap' → logprob: -18.125059127807617
    7. ' ap' → logprob: -18.500059127807617
    8. '_ap' → logprob: -19.375059127807617
    9. '	ap' → logprob: -19.375059127807617
    10. 'ап' → logprob: -19.500059127807617

Token 17: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.359536349773407
    2. '(
' → logprob: -1.9845364093780518
    3. ',' → logprob: -2.1095364093780518
    4. 'def' → logprob: -3.8595364093780518
    5. ',
' → logprob: -5.234536170959473
    6. '\n' → logprob: -5.234536170959473
    7. '\' → logprob: -5.609536170959473
    8. 'import' → logprob: -5.859536170959473
    9. '.' → logprob: -6.609536170959473
    10. '(

' → logprob: -6.984536170959473

Token 18: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -1.0472522974014282
    2. 'group' → logprob: -1.5472522974014282
    3. 'tee' → logprob: -2.2972521781921387
    4. 'acc' → logprob: -2.9222521781921387
    5. 'filter' → logprob: -3.0472521781921387
    6. ' product' → logprob: -3.1722521781921387
    7. 'product' → logprob: -3.4222521781921387
    8. ' tee' → logprob: -3.4222521781921387
    9. 'chain' → logprob: -4.172252178192139
    10. ' chain' → logprob: -4.422252178192139

Token 19: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -5.200166469876422e-06
    2. 'y' → logprob: -12.875004768371582
    3. 'b' → logprob: -13.125004768371582
    4. 'by's' → logprob: -15.000004768371582
    5. 'py' → logprob: -16.0000057220459
    6. 's' → logprob: -16.6250057220459
    7. 'd' → logprob: -17.5000057220459
    8. 'By' → logprob: -17.5000057220459
    9. 'byt' → logprob: -18.3750057220459
    10. 'bys' → logprob: -18.6250057220459

Token 20: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3124912977218628
    2. '(' → logprob: -1.8124912977218628
    3. '\n' → logprob: -1.9374912977218628
    4. ',' → logprob: -2.3124914169311523
    5. '#' → logprob: -2.3124914169311523
    6. '\' → logprob: -3.0624914169311523
    7. 'd' → logprob: -3.4374914169311523
    8. '(
' → logprob: -3.6874914169311523
    9. '
' → logprob: -3.8124914169311523
    10. '' → logprob: -4.312491416931152

Token 21: ' chain' (ID: 13464)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.8651536107063293
    2. 'chain' → logprob: -1.6151535511016846
    3. ' chain' → logprob: -2.3651535511016846
    4. ' accumulate' → logprob: -2.7401535511016846
    5. 'filter' → logprob: -3.1151535511016846
    6. 'count' → logprob: -3.3651535511016846
    7. 'com' → logprob: -3.8651535511016846
    8. 'tee' → logprob: -4.365153789520264
    9. 'take' → logprob: -4.490153789520264
    10. ' is' → logprob: -4.490153789520264

Token 22: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2924400568008423
    2. '(
' → logprob: -2.4174399375915527
    3. 'def' → logprob: -2.4174399375915527
    4. ',' → logprob: -3.9174399375915527
    5. '\' → logprob: -4.167439937591553
    6. 'd' → logprob: -4.917439937591553
    7. '\n' → logprob: -4.917439937591553
    8. '#' → logprob: -5.042439937591553
    9. '```' → logprob: -6.167439937591553
    10. ',
' → logprob: -6.292439937591553

Token 23: ' count' (ID: 3605)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.3691588640213013
    2. 'com' → logprob: -1.4941588640213013
    3. 'tee' → logprob: -1.9941588640213013
    4. ' tee' → logprob: -2.2441587448120117
    5. 'filter' → logprob: -2.7441587448120117
    6. ' is' → logprob: -3.1191587448120117
    7. 'zip' → logprob: -3.4941587448120117
    8. 'is' → logprob: -3.6191587448120117
    9. 'count' → logprob: -3.7441587448120117
    10. 'product' → logprob: -4.119158744812012

Token 24: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9766431450843811
    2. ',' → logprob: -1.1016430854797363
    3. 'def' → logprob: -2.3516430854797363
    4. '(
' → logprob: -2.7266430854797363
    5. '\' → logprob: -3.8516430854797363
    6. '\n' → logprob: -3.9766430854797363
    7. ',
' → logprob: -4.101643085479736
    8. '#' → logprob: -4.101643085479736
    9. ',

' → logprob: -4.726643085479736
    10. '```' → logprob: -4.851643085479736

Token 25: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.35759273171424866
    2. '(' → logprob: -2.357592821121216
    3. '#' → logprob: -2.732592821121216
    4. 'def' → logprob: -3.107592821121216
    5. '(
' → logprob: -4.107592582702637
    6. '=' → logprob: -4.357592582702637
    7. ',' → logprob: -4.482592582702637
    8. '_' → logprob: -4.982592582702637
    9. '`' → logprob: -4.982592582702637
    10. '[' → logprob: -5.482592582702637

Token 26: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3429585695266724
    2. 'def' → logprob: -1.8429585695266724
    3. ' def' → logprob: -1.9679585695266724
    4. 'd' → logprob: -1.9679585695266724
    5. ' #' → logprob: -3.592958450317383
    6. ' data' → logprob: -4.030458450317383
    7. ' The' → logprob: -4.092958450317383
    8. 'D' → logprob: -4.217958450317383
    9. '#' → logprob: -4.342958450317383
    10. 'Define' → logprob: -4.405458450317383

Token 27: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7104479074478149
    2. '_' → logprob: -0.9604479074478149
    3. 's' → logprob: -2.9604477882385254
    4. ' ' → logprob: -3.3354477882385254
    5. '(' → logprob: -3.9604477882385254
    6. '=' → logprob: -4.710447788238525
    7. '.' → logprob: -6.335447788238525
    8. ',' → logprob: -6.460447788238525
    9. 'def' → logprob: -6.460447788238525
    10. ':' → logprob: -6.960447788238525

Token 28: ' entr' (ID: 7072)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.1725250780582428
    2. ' ' → logprob: -1.9225250482559204
    3. ' fichiers' → logprob: -4.922524929046631
    4. ' data' → logprob: -6.422524929046631
    5. ' donnée' → logprob: -7.422524929046631
    6. ' fichier' → logprob: -7.547524929046631
    7. 'd' → logprob: -7.547524929046631
    8. ' lignes' → logprob: -8.047525405883789
    9. ' donn' → logprob: -8.422525405883789
    10. ' f' → logprob: -9.297525405883789

Token 29: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.00017040544480551034
    2. 'és' → logprob: -9.250170707702637
    3. 'ée' → logprob: -9.750170707702637
    4. 'é' → logprob: -12.125170707702637
    5. 'êtes' → logprob: -12.250170707702637
    6. 'ees' → logprob: -12.250170707702637
    7. 'etes' → logprob: -15.500170707702637
    8. 'es' → logprob: -15.750170707702637
    9. 'éis' → logprob: -16.12516975402832
    10. 'ê' → logprob: -16.87516975402832

Token 30: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6550928354263306
    2. 'n' → logprob: -1.4050928354263306
    3. 'data' → logprob: -1.9050928354263306
    4. 'inputs' → logprob: -3.905092716217041
    5. '_' → logprob: -4.280092716217041
    6. '(' → logprob: -4.405092716217041
    7. 'input' → logprob: -5.280092716217041
    8. '[' → logprob: -5.405092716217041
    9. '\n' → logprob: -5.405092716217041
    10. 'entries' → logprob: -5.780092716217041

Token 31: ' traitements' (ID: 158417)
  Prédit: ' traitement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traitement' → logprob: -0.8986015319824219
    2. ' initial' → logprob: -2.523601531982422
    3. ' transformation' → logprob: -2.898601531982422
    4. 'initial' → logprob: -3.023601531982422
    5. ' création' → logprob: -3.398601531982422
    6. ' préparation' → logprob: -3.523601531982422
    7. ' conversion' → logprob: -3.773601531982422
    8. ' tri' → logprob: -4.023601531982422
    9. ' stockage' → logprob: -4.023601531982422
    10. 'trans' → logprob: -4.148601531982422

Token 32: ' inutil' (ID: 154055)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.11246166378259659
    2. 'inputs' → logprob: -3.237461566925049
    3. 'n' → logprob: -3.612461566925049
    4. 'entries' → logprob: -4.737461566925049
    5. 'input' → logprob: -5.237461566925049
    6. ' data' → logprob: -5.612461566925049
    7. 'lines' → logprob: -5.612461566925049
    8. 'd' → logprob: -5.612461566925049
    9. 'def' → logprob: -6.112461566925049
    10. '\' → logprob: -6.487461566925049

Token 33: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10141375660896301
    2. 'és' → logprob: -4.226413726806641
    3. 'isés' → logprob: -4.476413726806641
    4. 'e' → logprob: -4.601413726806641
    5. 'aires' → logprob: -4.601413726806641
    6. 's' → logprob: -5.101413726806641
    7. '```' → logprob: -5.351413726806641
    8. 'isées' → logprob: -5.476413726806641
    9. '#' → logprob: -5.726413726806641
    10. 'ès' → logprob: -5.851413726806641

Token 34: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3286879062652588
    2. 's' → logprob: -1.5786879062652588
    3. 'data' → logprob: -1.9536879062652588
    4. 'n' → logprob: -2.328687906265259
    5. '_' → logprob: -3.328687906265259
    6. 'inputs' → logprob: -3.453687906265259
    7. '\n' → logprob: -3.453687906265259
    8. ':' → logprob: -3.703687906265259
    9. ',' → logprob: -3.703687906265259
    10. '\' → logprob: -3.953687906265259

Token 35: ' invent' (ID: 20420)
  Prédit: ' nécessaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nécessaires' → logprob: -0.9972926378250122
    2. 'prés' → logprob: -2.9972925186157227
    3. 'import' → logprob: -3.1222925186157227
    4. 'in' → logprob: -3.2472925186157227
    5. ' utiles' → logprob: -3.4972925186157227
    6. 'ob' → logprob: -3.6222925186157227
    7. ' inclus' → logprob: -3.7472925186157227
    8. ' présents' → logprob: -3.7472925186157227
    9. 'sym' → logprob: -3.8722925186157227
    10. 'compl' → logprob: -4.184792518615723

Token 36: 'ifs' (ID: 14119)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8690576553344727
    2. 'ées' → logprob: -1.7440576553344727
    3. 'és' → logprob: -1.7440576553344727
    4. 'é' → logprob: -2.1190576553344727
    5. 'aires' → logprob: -3.7440576553344727
    6. 'a' → logprob: -3.9940576553344727
    7. 'ent' → logprob: -4.369057655334473
    8. 'aire' → logprob: -4.869057655334473
    9. 'r' → logprob: -5.244057655334473
    10. '```' → logprob: -5.369057655334473

Token 37: '
' (ID: 198)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8091487884521484
    2. 's' → logprob: -2.1841487884521484
    3. 'inputs' → logprob: -2.1841487884521484
    4. ':' → logprob: -2.3091487884521484
    5. 'n' → logprob: -2.8091487884521484
    6. ',' → logprob: -3.5591487884521484
    7. 'def' → logprob: -3.8091487884521484
    8. 'input' → logprob: -3.8091487884521484
    9. '\' → logprob: -4.434148788452148
    10. '#' → logprob: -4.559148788452148

Token 38: 'n' (ID: 77)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.615597665309906
    2. 's' → logprob: -2.490597724914551
    3. '
' → logprob: -2.615597724914551
    4. '#' → logprob: -2.615597724914551
    5. ',' → logprob: -3.615597724914551
    6. '' → logprob: -3.740597724914551
    7. 'def' → logprob: -3.740597724914551
    8. 'n' → logprob: -3.865597724914551
    9. '\n' → logprob: -3.990597724914551
    10. 'inputs' → logprob: -4.240597724914551

Token 39: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03645009547472
    2. '=' → logprob: -3.536450147628784
    3. ',' → logprob: -5.411449909210205
    4. ' ' → logprob: -6.286449909210205
    5. ' ,' → logprob: -8.286450386047363
    6. '  ' → logprob: -10.411450386047363
    7. '=int' → logprob: -11.036450386047363
    8. 'space' → logprob: -11.536450386047363
    9. ' ' → logprob: -11.661450386047363
    10. '_' → logprob: -11.911450386047363

Token 40: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.8637490272521973
    2. ' ' → logprob: -1.3637490272521973
    3. ' =' → logprob: -1.7387490272521973
    4. ' k' → logprob: -2.9887490272521973
    5. 'm' → logprob: -3.3637490272521973
    6. '=' → logprob: -4.363749027252197
    7. ' _' → logprob: -5.238749027252197
    8. '  ' → logprob: -5.238749027252197
    9. ' s' → logprob: -5.238749027252197
    10. ' t' → logprob: -5.613749027252197

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2814496159553528
    2. '=' → logprob: -1.406449556350708
    3. ',' → logprob: -8.156449317932129
    4. ')' → logprob: -12.656449317932129
    5. '=input' → logprob: -12.656449317932129
    6. ' ' → logprob: -13.406449317932129
    7. '=int' → logprob: -13.906449317932129
    8. ' =
' → logprob: -14.531449317932129
    9. '<|end|>' → logprob: -14.531449317932129
    10. '=

' → logprob: -14.656449317932129

Token 42: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.024492591619491577
    2. ' ' → logprob: -3.8994925022125244
    3. 'map' → logprob: -5.7744927406311035
    4. ' input' → logprob: -7.5244927406311035
    5. ' int' → logprob: -9.524492263793945
    6. '0' → logprob: -9.524492263793945
    7. '10' → logprob: -10.149492263793945
    8. ' list' → logprob: -10.524492263793945
    9. '5' → logprob: -11.149492263793945
    10. ' [' → logprob: -11.274492263793945

Token 43: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030833017081022263
    2. '(int' → logprob: -4.1558332443237305
    3. '(lambda' → logprob: -4.4058332443237305
    4. '(str' → logprob: -6.2808332443237305
    5. '<|end|>' → logprob: -8.15583324432373
    6. '(
' → logprob: -8.53083324432373
    7. ' (' → logprob: -11.28083324432373
    8. '(input' → logprob: -11.65583324432373
    9. '(operator' → logprob: -11.65583324432373
    10. 'lambda' → logprob: -12.03083324432373

Token 44: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.48796001076698303
    2. ',' → logprob: -1.7379599809646606
    3. ',input' → logprob: -1.9879599809646606
    4. 'input' → logprob: -3.36296010017395
    5. ')' → logprob: -3.36296010017395
    6. '(' → logprob: -6.237959861755371
    7. '(),' → logprob: -7.112959861755371
    8. '),' → logprob: -7.487959861755371
    9. '=input' → logprob: -8.362959861755371
    10. ' input' → logprob: -8.362959861755371

Token 45: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4289795458316803
    2. 'input' → logprob: -1.053979516029358
    3. ')' → logprob: -8.678979873657227
    4. ' )' → logprob: -10.178979873657227
    5. ' ' → logprob: -10.303979873657227
    6. '	input' → logprob: -11.678979873657227
    7. ',input' → logprob: -11.803979873657227
    8. '(input' → logprob: -11.928979873657227
    9. '=input' → logprob: -12.553979873657227
    10. '```' → logprob: -13.178979873657227

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.017755474895238876
    2. '())' → logprob: -4.517755508422852
    3. '()' → logprob: -5.017755508422852
    4. ')' → logprob: -10.767755508422852
    5. '(' → logprob: -10.767755508422852
    6. '());' → logprob: -12.392755508422852
    7. '('' → logprob: -13.142755508422852
    8. '()))' → logprob: -13.142755508422852
    9. '();)' → logprob: -13.142755508422852
    10. '(()' → logprob: -13.392755508422852

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.949026571121067e-05
    2. 'strip' → logprob: -9.250099182128906
    3. ' split' → logprob: -13.750099182128906
    4. '(split' → logprob: -14.000099182128906
    5. 'rstrip' → logprob: -14.000099182128906
    6. 'spl' → logprob: -15.375099182128906
    7. 'read' → logprob: -15.500099182128906
    8. ')' → logprob: -15.625099182128906
    9. '```' → logprob: -17.875099182128906
    10. 's' → logprob: -18.750099182128906

Token 48: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04805022478103638
    2. '))' → logprob: -3.2980501651763916
    3. '())' → logprob: -4.673050403594971
    4. '()' → logprob: -7.923050403594971
    5. '),' → logprob: -9.673049926757812
    6. '(' → logprob: -9.923049926757812
    7. '()))' → logprob: -9.923049926757812
    8. '('' → logprob: -10.923049926757812
    9. ')(' → logprob: -11.048049926757812
    10. ')))' → logprob: -11.548049926757812

Token 49: 'pn' (ID: 25801)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4037773907184601
    2. 'data' → logprob: -2.1537773609161377
    3. 'n' → logprob: -2.5287773609161377
    4. ')' → logprob: -3.5287773609161377
    5. '\n' → logprob: -3.7787773609161377
    6. 'a' → logprob: -4.403777599334717
    7. ' 
' → logprob: -4.528777599334717
    8. 's' → logprob: -4.778777599334717
    9. ',' → logprob: -5.028777599334717
    10. '[' → logprob: -5.278777599334717

Token 50: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5021741986274719
    2. 'umbers' → logprob: -1.7521741390228271
    3. ' =' → logprob: -2.502174139022827
    4. 'ums' → logprob: -2.627174139022827
    5. '=' → logprob: -3.252174139022827
    6. 'um' → logprob: -4.377174377441406
    7. 'ames' → logprob: -5.377174377441406
    8. 'odes' → logprob: -6.502174377441406
    9. 'ext' → logprob: -6.627174377441406
    10. '_' → logprob: -6.752174377441406

Token 51: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4534626305103302
    2. ' list' → logprob: -1.0784626007080078
    3. '[' → logprob: -4.453462600708008
    4. ' [' → logprob: -4.828462600708008
    5. '[list' → logprob: -6.078462600708008
    6. '[]' → logprob: -6.828462600708008
    7. ' []' → logprob: -7.703462600708008
    8. 'map' → logprob: -8.453462600708008
    9. '[int' → logprob: -8.828462600708008
    10. ' map' → logprob: -8.828462600708008

Token 52: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2525562047958374
    2. '(' → logprob: -1.5025562047958374
    3. '(range' → logprob: -7.877556324005127
    4. '(input' → logprob: -9.252555847167969
    5. '(chain' → logprob: -9.627555847167969
    6. '(int' → logprob: -10.377555847167969
    7. '(filter' → logprob: -11.002555847167969
    8. '()' → logprob: -11.627555847167969
    9. 'map' → logprob: -12.002555847167969
    10. '(
' → logprob: -12.252555847167969

Token 53: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04307352378964424
    2. '(' → logprob: -3.1680734157562256
    3. '(
' → logprob: -10.918073654174805
    4. 'int' → logprob: -10.918073654174805
    5. '<int' → logprob: -11.668073654174805
    6. '(lambda' → logprob: -11.668073654174805
    7. ')' → logprob: -12.043073654174805
    8. '[int' → logprob: -12.543073654174805
    9. ',int' → logprob: -12.793073654174805
    10. '(str' → logprob: -13.043073654174805

Token 54: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3887622654438019
    2. 'x' → logprob: -1.1387622356414795
    3. ' s' → logprob: -7.638762474060059
    4. 's' → logprob: -8.263762474060059
    5. 'int' → logprob: -8.638762474060059
    6. ' f' → logprob: -8.888762474060059
    7. '_' → logprob: -9.263762474060059
    8. ' a' → logprob: -9.388762474060059
    9. ' i' → logprob: -9.638762474060059
    10. ' int' → logprob: -9.638762474060059

Token 55: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04049377515912056
    2. ':int' → logprob: -3.2904937267303467
    3. ' :' → logprob: -6.290493965148926
    4. ',' → logprob: -8.665493965148926
    5. ',int' → logprob: -8.915493965148926
    6. '=int' → logprob: -9.540493965148926
    7. ':x' → logprob: -9.790493965148926
    8. 'int' → logprob: -10.540493965148926
    9. ':
' → logprob: -10.915493965148926
    10. ':n' → logprob: -10.915493965148926

Token 56: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6865724325180054
    2. ' int' → logprob: -0.8115724325180054
    3. ' x' → logprob: -3.686572551727295
    4. 'x' → logprob: -4.061572551727295
    5. '(int' → logprob: -5.811572551727295
    6. ' ord' → logprob: -6.561572551727295
    7. 'len' → logprob: -7.749072551727295
    8. ' (' → logprob: -7.811572551727295
    9. ' tuple' → logprob: -7.811572551727295
    10. 'ord' → logprob: -7.874072551727295

Token 57: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07897152751684189
    2. '(' → logprob: -2.5789716243743896
    3. ')' → logprob: -10.578971862792969
    4. ',' → logprob: -10.703971862792969
    5. '(
' → logprob: -11.828971862792969
    6. ' (' → logprob: -12.203971862792969
    7. 'x' → logprob: -12.203971862792969
    8. ')(' → logprob: -12.953971862792969
    9. '(input' → logprob: -12.953971862792969
    10. '((' → logprob: -13.078971862792969

Token 58: ')-' (ID: 14080)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7686026096343994
    2. '(x' → logprob: -1.8936026096343994
    3. ')' → logprob: -2.0186026096343994
    4. ',' → logprob: -2.6436026096343994
    5. ':' → logprob: -3.0186026096343994
    6. ')+' → logprob: -3.2686026096343994
    7. '+' → logprob: -3.5186026096343994
    8. '*' → logprob: -4.01860237121582
    9. ')-' → logprob: -4.89360237121582
    10. '-' → logprob: -4.89360237121582

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031923281494528055
    2. ' ' → logprob: -5.75319242477417
    3. '2' → logprob: -12.128191947937012
    4. '0' → logprob: -13.003191947937012
    5. '4' → logprob: -13.628191947937012
    6. '3' → logprob: -13.815691947937012
    7. '5' → logprob: -14.378191947937012
    8. '   ' → logprob: -14.753191947937012
    9. '7' → logprob: -15.253191947937012
    10. '9' → logprob: -15.378191947937012

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005331709049642086
    2. ',input' → logprob: -5.255331516265869
    3. 'input' → logprob: -10.255331993103027
    4. ',p' → logprob: -10.755331993103027
    5. ' ,' → logprob: -11.255331993103027
    6. ')' → logprob: -11.755331993103027
    7. ',x' → logprob: -12.630331993103027
    8. ',int' → logprob: -12.755331993103027
    9. ',map' → logprob: -12.755331993103027
    10. ',n' → logprob: -13.755331993103027

Token 61: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011057492345571518
    2. ' input' → logprob: -4.511057376861572
    3. 'range' → logprob: -11.88605785369873
    4. '(input' → logprob: -13.76105785369873
    5. '	input' → logprob: -15.01105785369873
    6. ' ' → logprob: -15.38605785369873
    7. '<input' → logprob: -15.38605785369873
    8. ')' → logprob: -15.88605785369873
    9. ' range' → logprob: -16.011056900024414
    10. '[input' → logprob: -16.011056900024414

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003919463779311627
    2. '()' → logprob: -7.875391960144043
    3. '(' → logprob: -11.500391960144043
    4. ' ().' → logprob: -14.750391960144043
    5. '())' → logprob: -14.875391960144043
    6. '()
' → logprob: -15.125391960144043
    7. ')' → logprob: -15.750391960144043
    8. '()-' → logprob: -15.875391960144043
    9. '()

' → logprob: -16.750391006469727
    10. '()))' → logprob: -16.750391006469727

Token 63: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.4034345187828876e-05
    2. 'strip' → logprob: -11.00002384185791
    3. ' split' → logprob: -11.87502384185791
    4. '(split' → logprob: -15.12502384185791
    5. 'rstrip' → logprob: -16.500024795532227
    6. 'spl' → logprob: -17.375024795532227
    7. 'replace' → logprob: -18.500024795532227
    8. 's' → logprob: -20.000024795532227
    9. '.split' → logprob: -20.500024795532227
    10. ' ' → logprob: -20.875024795532227

Token 64: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5774437189102173
    2. '()))' → logprob: -1.0774437189102173
    3. ')' → logprob: -2.8274435997009277
    4. '())' → logprob: -3.5774435997009277
    5. '()' → logprob: -4.702443599700928
    6. '(' → logprob: -6.327443599700928
    7. '),' → logprob: -10.077444076538086
    8. '()));' → logprob: -10.202444076538086
    9. '(),' → logprob: -10.577444076538086
    10. '()))
' → logprob: -10.577444076538086

Token 65: 'ls' (ID: 3973)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5868946313858032
    2. '
' → logprob: -1.9618946313858032
    3. 'n' → logprob: -2.5868945121765137
    4. 'p' → logprob: -2.5868945121765137
    5. 'm' → logprob: -3.5868945121765137
    6. ')
' → logprob: -4.336894512176514
    7. 'a' → logprob: -4.461894512176514
    8. '#' → logprob: -4.461894512176514
    9. '[' → logprob: -4.586894512176514
    10. 'pn' → logprob: -4.711894512176514

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1627642661333084
    2. ' =' → logprob: -2.537764310836792
    3. 't' → logprob: -2.787764310836792
    4. 's' → logprob: -5.287764072418213
    5. '_' → logprob: -6.787764072418213
    6. ',' → logprob: -6.787764072418213
    7. 'a' → logprob: -8.287764549255371
    8. '=[]' → logprob: -8.287764549255371
    9. 'e' → logprob: -8.537764549255371
    10. 'ist' → logprob: -8.662764549255371

Token 67: ' reduce' (ID: 10389)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.2468934953212738
    2. '[' → logprob: -1.7468935251235962
    3. 'list' → logprob: -3.8718934059143066
    4. '[]' → logprob: -4.746893405914307
    5. ' [' → logprob: -5.621893405914307
    6. '[input' → logprob: -5.871893405914307
    7. '[int' → logprob: -6.371893405914307
    8. '[str' → logprob: -6.996893405914307
    9. '[count' → logprob: -7.246893405914307
    10. '[[' → logprob: -7.371893405914307

Token 68: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39082127809524536
    2. '(lambda' → logprob: -1.1408212184906006
    3. '(operator' → logprob: -5.64082145690918
    4. '(list' → logprob: -8.51582145690918
    5. '(item' → logprob: -9.89082145690918
    6. '(
' → logprob: -10.01582145690918
    7. '((' → logprob: -10.01582145690918
    8. '(chain' → logprob: -10.39082145690918
    9. '(int' → logprob: -11.64082145690918
    10. '(op' → logprob: -13.14082145690918

Token 69: ' l' (ID: 305)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.1607043743133545
    2. 'lambda' → logprob: -2.0357043743133545
    3. ' a' → logprob: -5.035704612731934
    4. ' x' → logprob: -6.035704612731934
    5. '(lambda' → logprob: -6.160704612731934
    6. ' list' → logprob: -6.160704612731934
    7. 'a' → logprob: -7.035704612731934
    8. ',' → logprob: -7.285704612731934
    9. ' acc' → logprob: -7.660704612731934
    10. 'x' → logprob: -7.785704612731934

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010859280824661255
    2. ',x' → logprob: -4.760859489440918
    3. ',l' → logprob: -7.135859489440918
    4. ',y' → logprob: -8.510859489440918
    5. ',a' → logprob: -8.510859489440918
    6. ',i' → logprob: -8.510859489440918
    7. ',s' → logprob: -8.760859489440918
    8. 'ist' → logprob: -8.885859489440918
    9. 's' → logprob: -9.010859489440918
    10. 'ambda' → logprob: -9.885859489440918

Token 71: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3972110152244568
    2. 'a' → logprob: -2.7722110748291016
    3. 'i' → logprob: -2.8972110748291016
    4. ' x' → logprob: -3.0222110748291016
    5. 's' → logprob: -3.6472110748291016
    6. 'y' → logprob: -3.6472110748291016
    7. 'r' → logprob: -4.022211074829102
    8. 'c' → logprob: -4.647211074829102
    9. ' i' → logprob: -4.647211074829102
    10. ' a' → logprob: -4.897211074829102

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008925211732275784
    2. ' :' → logprob: -7.500892639160156
    3. ',' → logprob: -9.250892639160156
    4. 's' → logprob: -9.500892639160156
    5. ':list' → logprob: -10.375892639160156
    6. ':(' → logprob: -10.750892639160156
    7. ':l' → logprob: -11.250892639160156
    8. 'st' → logprob: -11.500892639160156
    9. ':[' → logprob: -11.625892639160156
    10. ':i' → logprob: -11.750892639160156

Token 73: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.69933021068573
    2. ' l' → logprob: -0.69933021068573
    3. '[l' → logprob: -6.4493303298950195
    4. ' [' → logprob: -6.5743303298950195
    5. '[' → logprob: -6.8243303298950195
    6. ' (' → logprob: -7.6993303298950195
    7. '(' → logprob: -7.9493303298950195
    8. 'chain' → logprob: -8.57433032989502
    9. ' ' → logprob: -8.82433032989502
    10. '(l' → logprob: -8.94933032989502

Token 74: '.__' (ID: 10210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2845061421394348
    2. '+[' → logprob: -2.15950608253479
    3. ' +' → logprob: -2.40950608253479
    4. '.append' → logprob: -4.284506320953369
    5. '[:' → logprob: -4.409506320953369
    6. ' if' → logprob: -5.159506320953369
    7. '|' → logprob: -6.034506320953369
    8. '[:-' → logprob: -6.284506320953369
    9. 'if' → logprob: -6.659506320953369
    10. '+i' → logprob: -6.784506320953369

Token 75: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7851932048797607
    2. 'getitem' → logprob: -0.9101932048797607
    3. 'add' → logprob: -2.5351932048797607
    4. 'i' → logprob: -2.9101932048797607
    5. 'or' → logprob: -5.78519344329834
    6. 'sets' → logprob: -6.53519344329834
    7. 'ior' → logprob: -6.78519344329834
    8. 'imul' → logprob: -7.78519344329834
    9. 'mul' → logprob: -8.16019344329834
    10. 'contains' → logprob: -8.28519344329834

Token 76: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.0002067588793579489
    2. 'attr' → logprob: -8.62520694732666
    3. 'ite' → logprob: -11.00020694732666
    4. 'it' → logprob: -11.50020694732666
    5. 'getitem' → logprob: -15.50020694732666
    6. 'itm' → logprob: -16.750205993652344
    7. 'add' → logprob: -17.000205993652344
    8. 'i' → logprob: -17.500205993652344
    9. '__' → logprob: -18.000205993652344
    10. '__(' → logprob: -18.250205993652344

Token 77: '__(' (ID: 8241)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.23030059039592743
    2. '(' → logprob: -1.6053005456924438
    3. '<|end|>' → logprob: -5.605300426483154
    4. '((' → logprob: -6.980300426483154
    5. '(
' → logprob: -9.605300903320312
    6. '([' → logprob: -9.730300903320312
    7. '<|end|>' → logprob: -10.730300903320312
    8. '(p' → logprob: -10.980300903320312
    9. '(item' → logprob: -11.105300903320312
    10. ' (' → logprob: -11.230300903320312

Token 78: 'pn' (ID: 25801)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.21868029236793518
    2. '(p' → logprob: -1.8436802625656128
    3. '(' → logprob: -3.4686803817749023
    4. 'pn' → logprob: -5.718680381774902
    5. 'i' → logprob: -6.718680381774902
    6. '(n' → logprob: -7.343680381774902
    7. '(
' → logprob: -7.593680381774902
    8. '(m' → logprob: -8.093680381774902
    9. ')' → logprob: -9.093680381774902
    10. '(ls' → logprob: -9.093680381774902

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008399999933317304
    2. '[' → logprob: -7.125840187072754
    3. '[
' → logprob: -11.000840187072754
    4. '(i' → logprob: -11.875840187072754
    5. '[n' → logprob: -12.875840187072754
    6. '[int' → logprob: -13.375840187072754
    7. ')' → logprob: -13.750840187072754
    8. '[index' → logprob: -13.750840187072754
    9. '[I' → logprob: -14.000840187072754
    10. 'i' → logprob: -14.125840187072754

Token 80: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010745354928076267
    2. ',i' → logprob: -4.760745525360107
    3. ' ,' → logprob: -7.510745525360107
    4. '),' → logprob: -8.13574504852295
    5. ',n' → logprob: -8.26074504852295
    6. '],' → logprob: -8.38574504852295
    7. ')' → logprob: -8.88574504852295
    8. ',p' → logprob: -9.38574504852295
    9. '(i' → logprob: -9.38574504852295
    10. ' ' → logprob: -9.63574504852295

Token 81: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.030252324417233467
    2. ' i' → logprob: -3.53025221824646
    3. ')' → logprob: -9.280252456665039
    4. 'm' → logprob: -9.405252456665039
    5. 'n' → logprob: -9.655252456665039
    6. ' ' → logprob: -9.655252456665039
    7. '<|end|>' → logprob: -10.280252456665039
    8. '	i' → logprob: -10.405252456665039
    9. ' m' → logprob: -10.655252456665039
    10. 'count' → logprob: -10.780252456665039

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15477584302425385
    2. ',' → logprob: -2.154775857925415
    3. '),' → logprob: -3.654775857925415
    4. ')+' → logprob: -6.904775619506836
    5. ' or' → logprob: -8.904775619506836
    6. ' ,' → logprob: -9.279775619506836
    7. ' )' → logprob: -9.529775619506836
    8. ')
' → logprob: -10.029775619506836
    9. ' if' → logprob: -10.654775619506836
    10. ',n' → logprob: -10.779775619506836

Token 83: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00209006923250854
    2. ' ,' → logprob: -6.877089977264404
    3. ' if' → logprob: -8.002090454101562
    4. ',[' → logprob: -8.252090454101562
    5. 'if' → logprob: -9.377090454101562
    6. ',p' → logprob: -9.627090454101562
    7. ',n' → logprob: -10.002090454101562
    8. ' or' → logprob: -10.127090454101562
    9. ',list' → logprob: -10.127090454101562
    10. ')' → logprob: -10.252090454101562

Token 84: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.34962621331214905
    2. ' l' → logprob: -1.2246261835098267
    3. 'ls' → logprob: -7.099626064300537
    4. ' ls' → logprob: -9.099626541137695
    5. '[' → logprob: -9.724626541137695
    6. ' [' → logprob: -10.349626541137695
    7. ' ' → logprob: -10.599626541137695
    8. '[l' → logprob: -10.662126541137695
    9. 'list' → logprob: -10.787126541137695
    10. 'lst' → logprob: -11.474626541137695

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004265965893864632
    2. ',[' → logprob: -6.004265785217285
    3. ' if' → logprob: -8.004265785217285
    4. ' ,' → logprob: -8.004265785217285
    5. ',list' → logprob: -8.629265785217285
    6. 'if' → logprob: -8.879265785217285
    7. 'range' → logprob: -9.004265785217285
    8. '(range' → logprob: -9.004265785217285
    9. '[' → logprob: -9.504265785217285
    10. 'list' → logprob: -9.754265785217285

Token 86: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18570023775100708
    2. ' range' → logprob: -1.8107001781463623
    3. '[' → logprob: -5.435700416564941
    4. ' [' → logprob: -6.935700416564941
    5. 'list' → logprob: -8.310700416564941
    6. '(range' → logprob: -8.685700416564941
    7. ' list' → logprob: -10.060700416564941
    8. '	range' → logprob: -10.435700416564941
    9. ' ' → logprob: -10.810700416564941
    10. '[p' → logprob: -10.935700416564941

Token 87: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.025120900943875313
    2. '(m' → logprob: -3.900120973587036
    3. '(' → logprob: -5.400120735168457
    4. '(
' → logprob: -10.150120735168457
    5. '(len' → logprob: -12.025120735168457
    6. 'n' → logprob: -13.275120735168457
    7. 'm' → logprob: -13.775120735168457
    8. ')(' → logprob: -13.900120735168457
    9. '(

' → logprob: -13.900120735168457
    10. ')n' → logprob: -14.025120735168457

Token 88: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.015198642387986183
    2. ',' → logprob: -4.390198707580566
    3. ')' → logprob: -6.140198707580566
    4. ' ),' → logprob: -8.390198707580566
    5. '],' → logprob: -9.015198707580566
    6. '))' → logprob: -9.265198707580566
    7. ',),' → logprob: -10.390198707580566
    8. '[' → logprob: -11.640198707580566
    9. '[n' → logprob: -11.890198707580566
    10. ' ,' → logprob: -11.890198707580566

Token 89: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026430686935782433
    2. '[n' → logprob: -3.776430606842041
    3. ' [' → logprob: -6.276430606842041
    4. '[m' → logprob: -7.276430606842041
    5. '[-' → logprob: -8.0264310836792
    6. '[list' → logprob: -8.7764310836792
    7. '[p' → logprob: -10.2764310836792
    8. '[len' → logprob: -10.5264310836792
    9. 'list' → logprob: -11.4014310836792
    10. '[]' → logprob: -11.5264310836792

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016635251813568175
    2. '(' → logprob: -10.250165939331055
    3. '-' → logprob: -10.250165939331055
    4. 'n' → logprob: -10.500165939331055
    5. '<|end|>' → logprob: -11.250165939331055
    6. '2' → logprob: -11.500165939331055
    7. ' ' → logprob: -12.125165939331055
    8. '999' → logprob: -12.500165939331055
    9. '(n' → logprob: -12.750165939331055
    10. 'inf' → logprob: -13.000165939331055

Token 91: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.4758090674877167
    2. ']' → logprob: -0.9758090972900391
    3. ' for' → logprob: -7.475809097290039
    4. ',' → logprob: -7.600809097290039
    5. ']*(' → logprob: -8.600809097290039
    6. 'n' → logprob: -8.850809097290039
    7. '*n' → logprob: -9.475809097290039
    8. ',n' → logprob: -9.600809097290039
    9. ' ]' → logprob: -9.725809097290039
    10. 'for' → logprob: -10.225809097290039

Token 92: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003832445072475821
    2. ' n' → logprob: -7.875383377075195
    3. '(n' → logprob: -13.750383377075195
    4. 'm' → logprob: -14.125383377075195
    5. ')n' → logprob: -14.250383377075195
    6. '<|end|>' → logprob: -14.250383377075195
    7. '	n' → logprob: -16.875383377075195
    8. '(' → logprob: -18.750383377075195
    9. ',n' → logprob: -19.250383377075195
    10. ')' → logprob: -19.375383377075195

Token 93: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029279827140271664
    2. ')
' → logprob: -8.250292778015137
    3. '))' → logprob: -11.500292778015137
    4. ' )' → logprob: -11.500292778015137
    5. ')

' → logprob: -12.625292778015137
    6. ')n' → logprob: -13.000292778015137
    7. ')
' → logprob: -13.375292778015137
    8. ')`' → logprob: -13.875292778015137
    9. '),' → logprob: -14.500292778015137
    10. ');' → logprob: -15.000292778015137

Token 94: 'indices' (ID: 30992)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7049890756607056
    2. 's' → logprob: -2.704988956451416
    3. 'i' → logprob: -2.829988956451416
    4. '#' → logprob: -3.204988956451416
    5. ']' → logprob: -3.204988956451416
    6. 'n' → logprob: -3.329988956451416
    7. 'p' → logprob: -3.329988956451416
    8. 'for' → logprob: -3.579988956451416
    9. 'ls' → logprob: -4.079988956451416
    10. 'a' → logprob: -4.079988956451416

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4724552035331726
    2. '_' → logprob: -1.5974552631378174
    3. '=' → logprob: -1.8474552631378174
    4. '(' → logprob: -4.597455024719238
    5. 's' → logprob: -6.097455024719238
    6. '<|end|>' → logprob: -7.222455024719238
    7. ' ' → logprob: -7.472455024719238
    8. ',' → logprob: -8.097455024719238
    9. ')' → logprob: -8.222455024719238
    10. '[' → logprob: -8.597455024719238

Token 96: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2595123052597046
    2. 'list' → logprob: -1.6345123052597046
    3. '[i' → logprob: -2.134512424468994
    4. 'sorted' → logprob: -2.384512424468994
    5. 'chain' → logprob: -3.134512424468994
    6. 'filter' → logprob: -3.259512424468994
    7. '[n' → logprob: -3.384512424468994
    8. '[list' → logprob: -3.509512424468994
    9. '[]' → logprob: -3.634512424468994
    10. '[item' → logprob: -3.634512424468994

Token 97: '(range' (ID: 50017)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.911626935005188
    2. '(st' → logprob: -1.661626935005188
    3. '(map' → logprob: -1.661626935005188
    4. '(range' → logprob: -2.5366268157958984
    5. '(filter' → logprob: -2.6616268157958984
    6. '(' → logprob: -2.9116268157958984
    7. '(group' → logprob: -4.661626815795898
    8. '(item' → logprob: -5.536626815795898
    9. '(sorted' → logprob: -8.161626815795898
    10. '(count' → logprob: -8.286626815795898

Token 98: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.47683098912239075
    2. '(n' → logprob: -0.9768309593200684
    3. '(' → logprob: -5.976830959320068
    4. 'm' → logprob: -9.101831436157227
    5. 'n' → logprob: -10.601831436157227
    6. '(len' → logprob: -10.851831436157227
    7. '(
' → logprob: -11.476831436157227
    8. ')' → logprob: -11.476831436157227
    9. '(s' → logprob: -12.101831436157227
    10. ')m' → logprob: -12.226831436157227

Token 99: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003066479926928878
    2. '))
' → logprob: -6.378066539764404
    3. ',' → logprob: -8.253066062927246
    4. ' ))' → logprob: -8.253066062927246
    5. '))

' → logprob: -8.503066062927246
    6. ')' → logprob: -8.878066062927246
    7. ')))' → logprob: -9.378066062927246
    8. '+' → logprob: -9.503066062927246
    9. '-' → logprob: -9.503066062927246
    10. '+m' → logprob: -10.128066062927246

Token 100: 'par' (ID: 796)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -1.3381426334381104
    2. 'for' → logprob: -2.0881426334381104
    3. 'pn' → logprob: -2.9631426334381104
    4. 'p' → logprob: -2.9631426334381104
    5. 'res' → logprob: -3.2131426334381104
    6. 'ls' → logprob: -3.5881426334381104
    7. 'sorted' → logprob: -3.5881426334381104
    8. 'group' → logprob: -3.7131426334381104
    9. 'm' → logprob: -3.8381426334381104
    10. 'k' → logprob: -3.9631426334381104

Token 101: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.756891131401062
    2. 'ents' → logprob: -1.131891131401062
    3. 'ent' → logprob: -1.756891131401062
    4. 'ts' → logprob: -3.5068912506103516
    5. 'r' → logprob: -6.756891250610352
    6. 'nts' → logprob: -6.881891250610352
    7. 'ty' → logprob: -7.006891250610352
    8. 'd' → logprob: -7.631891250610352
    9. 'nt' → logprob: -7.631891250610352
    10. ')' → logprob: -8.881891250610352

Token 102: ' dict' (ID: 11878)
  Prédit: ' [-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [-' → logprob: -1.3604176044464111
    2. ' [' → logprob: -1.4854176044464111
    3. ' list' → logprob: -1.7354176044464111
    4. '[-' → logprob: -1.9854176044464111
    5. 'list' → logprob: -2.235417604446411
    6. '[' → logprob: -3.485417604446411
    7. '[n' → logprob: -3.860417604446411
    8. ' indices' → logprob: -3.985417604446411
    9. 'indices' → logprob: -4.235417366027832
    10. ' n' → logprob: -6.235417366027832

Token 103: '(zip' (ID: 87520)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0053184316493570805
    2. '((' → logprob: -6.255318641662598
    3. '()
' → logprob: -7.255318641662598
    4. '([(' → logprob: -7.505318641662598
    5. '(zip' → logprob: -7.505318641662598
    6. '.from' → logprob: -7.755318641662598
    7. '(' → logprob: -8.130318641662598
    8. '(en' → logprob: -8.505318641662598
    9. '())' → logprob: -8.630318641662598
    10. '(indices' → logprob: -8.880318641662598

Token 104: '(indices' (ID: 161036)
  Prédit: '(indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -0.01160262618213892
    2. '(p' → logprob: -4.761602401733398
    3. '(ls' → logprob: -6.636602401733398
    4. '(' → logprob: -7.136602401733398
    5. '(range' → logprob: -7.136602401733398
    6. '(ind' → logprob: -10.761602401733398
    7. 'indices' → logprob: -10.761602401733398
    8. '(ids' → logprob: -11.511602401733398
    9. '(
' → logprob: -12.136602401733398
    10. ' (' → logprob: -12.261602401733398

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013936885632574558
    2. ' ,' → logprob: -4.513936996459961
    3. '(indices' → logprob: -6.263936996459961
    4. 'indices' → logprob: -7.263936996459961
    5. ' indices' → logprob: -9.263936996459961
    6. ',n' → logprob: -10.138936996459961
    7. '   ' → logprob: -10.263936996459961
    8. ',p' → logprob: -10.763936996459961
    9. '),' → logprob: -11.138936996459961
    10. '(' → logprob: -11.513936996459961

Token 106: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.2354286015033722
    2. ' indices' → logprob: -2.86042857170105
    3. '[' → logprob: -3.48542857170105
    4. 'range' → logprob: -3.48542857170105
    5. 'chain' → logprob: -3.73542857170105
    6. 'map' → logprob: -4.360428810119629
    7. 'count' → logprob: -4.360428810119629
    8. 'ls' → logprob: -4.485428810119629
    9. 'pn' → logprob: -5.235428810119629
    10. '(indices' → logprob: -5.860428810119629

Token 107: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00014180023572407663
    2. '))
' → logprob: -9.125142097473145
    3. ' ))' → logprob: -10.750142097473145
    4. '))

' → logprob: -12.250142097473145
    5. '()))' → logprob: -13.125142097473145
    6. ')' → logprob: -13.125142097473145
    7. ')))' → logprob: -13.625142097473145
    8. '));' → logprob: -14.875142097473145
    9. '))
' → logprob: -15.625142097473145
    10. '),' → logprob: -16.250141143798828

Token 108: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23277629911899567
    2. 'for' → logprob: -1.6077762842178345
    3. 'rank' → logprob: -5.732776165008545
    4. ')' → logprob: -7.232776165008545
    5. 'size' → logprob: -7.857776165008545
    6. 'p' → logprob: -7.857776165008545
    7. 'r' → logprob: -7.982776165008545
    8. '#' → logprob: -7.982776165008545
    9. '_' → logprob: -8.357776641845703
    10. 'q' → logprob: -8.357776641845703

Token 109: ' trampoline' (ID: 162506)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.0010193521156907082
    2. 'find' → logprob: -7.001019477844238
    3. ' def' → logprob: -10.626019477844238
    4. ' union' → logprob: -10.876019477844238
    5. ' par' → logprob: -11.126019477844238
    6. '	find' → logprob: -11.251019477844238
    7. ' ' → logprob: -11.376019477844238
    8. ' get' → logprob: -12.001019477844238
    9. '_find' → logprob: -12.626019477844238
    10. ' fin' → logprob: -13.126019477844238

Token 110: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.6709887385368347
    2. '(func' → logprob: -0.7959887385368347
    3. '(fn' → logprob: -3.7959887981414795
    4. ' (' → logprob: -4.5459885597229
    5. '(function' → logprob: -5.7959885597229
    6. '(fun' → logprob: -7.1709885597229
    7. '(call' → logprob: -7.7959885597229
    8. '(' → logprob: -8.170989036560059
    9. '(lambda' → logprob: -10.670989036560059
    10. '(c' → logprob: -11.795989036560059

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017680400982499123
    2. ',' → logprob: -4.2676801681518555
    3. '):
' → logprob: -6.6426801681518555
    4. ')' → logprob: -6.7676801681518555
    5. '*' → logprob: -8.267680168151855
    6. ' ):' → logprob: -9.017680168151855
    7. '   ' → logprob: -9.142680168151855
    8. '  ' → logprob: -9.517680168151855
    9. 'unction' → logprob: -9.517680168151855
    10. ':' → logprob: -9.517680168151855

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4803771674633026
    2. ' def' → logprob: -0.980377197265625
    3. 'def' → logprob: -5.355377197265625
    4. ' ' → logprob: -7.355377197265625
    5. '
' → logprob: -7.980377197265625
    6. '	def' → logprob: -8.105377197265625
    7. ' f' → logprob: -9.355377197265625
    8. '    
' → logprob: -9.480377197265625
    9. '    ' → logprob: -9.980377197265625
    10. '  ' → logprob: -11.230377197265625

Token 113: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6394875049591064
    2. '   ' → logprob: -1.1394875049591064
    3. 'def' (adapté à ' def') → logprob: -1.8894875049591064
    4. ' while' → logprob: -7.014487266540527
    5. ' ' → logprob: -8.514487266540527
    6. 'while' → logprob: -8.639487266540527
    7. '
' → logprob: -11.639487266540527
    8. '    ' → logprob: -12.389487266540527
    9. '       ' → logprob: -12.389487266540527
    10. '  ' → logprob: -12.514487266540527

Token 114: ' wrap' (ID: 20404)
  Prédit: '*g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*g' → logprob: -0.9222403168678284
    2. ' wrapper' → logprob: -1.1722402572631836
    3. ' inner' → logprob: -2.0472402572631836
    4. ' g' → logprob: -2.7972402572631836
    5. '*' → logprob: -3.6722402572631836
    6. ' wrapped' → logprob: -4.047240257263184
    7. 'wrapper' → logprob: -4.172240257263184
    8. 'g' → logprob: -4.797240257263184
    9. 'inner' → logprob: -4.797240257263184
    10. '*b' → logprob: -4.922240257263184

Token 115: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0007027800311334431
    2. '(f' → logprob: -7.375702857971191
    3. '(fn' → logprob: -10.625702857971191
    4. '(func' → logprob: -11.125702857971191
    5. '   ' → logprob: -11.500702857971191
    6. '(x' → logprob: -11.625702857971191
    7. '(function' → logprob: -11.875702857971191
    8. '(' → logprob: -12.250702857971191
    9. '(args' → logprob: -14.500702857971191
    10. '(line' → logprob: -14.625702857971191

Token 116: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -7.3458322731312364e-06
    2. 'a' → logprob: -12.000007629394531
    3. 'argv' → logprob: -15.125007629394531
    4. ' args' → logprob: -15.500007629394531
    5. '	args' → logprob: -16.00000762939453
    6. '_args' → logprob: -16.25000762939453
    7. '
' → logprob: -16.62500762939453
    8. 'f' → logprob: -16.75000762939453
    9. 'ar' → logprob: -17.00000762939453
    10. ',' → logprob: -17.00000762939453

Token 117: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0982118621468544
    2. '):
' → logprob: -2.4732117652893066
    3. ',' → logprob: -4.723211765289307
    4. '   ' → logprob: -8.223212242126465
    5. '):
' → logprob: -9.848212242126465
    6. ')' → logprob: -11.473212242126465
    7. ':' → logprob: -12.348212242126465
    8. ' ):' → logprob: -12.973212242126465
    9. ' ' → logprob: -13.848212242126465
    10. '):

' → logprob: -14.098212242126465

Token 118: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.14347441494464874
    2. ' **' → logprob: -2.0184743404388428
    3. '   ' → logprob: -7.893474578857422
    4. '    ' → logprob: -9.018474578857422
    5. ' ' → logprob: -9.268474578857422
    6. ' kwargs' → logprob: -10.393474578857422
    7. '  ' → logprob: -10.518474578857422
    8. 'kwargs' → logprob: -10.643474578857422
    9. '
' → logprob: -10.768474578857422
    10. '):
' → logprob: -11.018474578857422

Token 119: 'kwargs' (ID: 19200)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0514746755361557
    2. 'kwargs' → logprob: -3.0514745712280273
    3. ')' → logprob: -7.176474571228027
    4. ' ' → logprob: -7.551474571228027
    5. ',' → logprob: -8.051474571228027
    6. '1' → logprob: -8.801474571228027
    7. '*' → logprob: -8.926474571228027
    8. 'kw' → logprob: -9.176474571228027
    9. '_args' → logprob: -9.176474571228027
    10. '):
' → logprob: -9.176474571228027

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020630644634366035
    2. '):
' → logprob: -3.8956305980682373
    3. ':' → logprob: -10.020630836486816
    4. '   ' → logprob: -10.770630836486816
    5. ')' → logprob: -11.270630836486816
    6. ',' → logprob: -11.770630836486816
    7. '):
' → logprob: -13.645630836486816
    8. '       ' → logprob: -14.270630836486816
    9. ' ):' → logprob: -14.645630836486816
    10. '):

' → logprob: -15.770630836486816

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007862794445827603
    2. ' while' → logprob: -7.625786304473877
    3. '   ' → logprob: -8.625785827636719
    4. ' result' → logprob: -10.250785827636719
    5. 'while' → logprob: -10.375785827636719
    6. 'result' → logprob: -10.500785827636719
    7. '
' → logprob: -11.250785827636719
    8. '           ' → logprob: -11.750785827636719
    9. '     ' → logprob: -13.125785827636719
    10. '      ' → logprob: -14.125785827636719

Token 122: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.5752142071723938
    2. 'result' → logprob: -1.575214147567749
    3. 'while' → logprob: -1.700214147567749
    4. '       ' → logprob: -3.700214147567749
    5. '   ' → logprob: -4.450214385986328
    6. 'ret' → logprob: -4.825214385986328
    7. 'value' → logprob: -6.950214385986328
    8. 'v' → logprob: -7.700214385986328
    9. ' res' → logprob: -7.825214385986328
    10. 'rv' → logprob: -8.075214385986328

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38696640729904175
    2. '=' → logprob: -1.1369664669036865
    3. '=f' → logprob: -9.636966705322266
    4. 'ult' → logprob: -10.511966705322266
    5. '   ' → logprob: -13.761966705322266
    6. ' ' → logprob: -14.636966705322266
    7. '  ' → logprob: -15.136966705322266
    8. ',' → logprob: -15.636966705322266
    9. '	' → logprob: -16.011966705322266
    10. '=res' → logprob: -16.136966705322266

Token 124: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.008631703443825245
    2. ' f' → logprob: -4.758631706237793
    3. 'lambda' → logprob: -11.383631706237793
    4. ' lambda' → logprob: -12.883631706237793
    5. '	f' → logprob: -12.883631706237793
    6. '(f' → logprob: -14.758631706237793
    7. ' ' → logprob: -15.633631706237793
    8. '   ' → logprob: -15.883631706237793
    9. '[f' → logprob: -17.883630752563477
    10. '(lambda' → logprob: -18.008630752563477

Token 125: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -1.8624639324116288e-06
    2. '*' → logprob: -13.375001907348633
    3. '(' → logprob: -15.625001907348633
    4. '
' → logprob: -18.250001907348633
    5. '```' → logprob: -20.000001907348633
    6. 'def' → logprob: -20.250001907348633
    7. ' (*' → logprob: -20.250001907348633
    8. '__(*' → logprob: -20.375001907348633
    9. '   ' → logprob: -21.125001907348633
    10. '(None' → logprob: -21.250001907348633

Token 126: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -1.981667537620524e-06
    2. ' args' → logprob: -13.375001907348633
    3. '(args' → logprob: -16.125001907348633
    4. '	args' → logprob: -16.125001907348633
    5. '*' → logprob: -16.500001907348633
    6. '_args' → logprob: -16.750001907348633
    7. '$args' → logprob: -17.500001907348633
    8. ')' → logprob: -18.500001907348633
    9. '
' → logprob: -18.500001907348633
    10. ',args' → logprob: -18.625001907348633

Token 127: ',' (ID: 11)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.7910044193267822
    2. ',' → logprob: -0.9160044193267822
    3. '_args' → logprob: -2.7910044193267822
    4. ',args' → logprob: -3.5410044193267822
    5. ')' → logprob: -4.166004180908203
    6. 'kwargs' → logprob: -4.416004180908203
    7. '_kwargs' → logprob: -4.541004180908203
    8. '$args' → logprob: -5.041004180908203
    9. '.args' → logprob: -5.291004180908203
    10. '(args' → logprob: -6.916004180908203

Token 128: ' **' (ID: 6240)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.04707447066903114
    2. '*' → logprob: -3.672074556350708
    3. '**' → logprob: -4.047074317932129
    4. 'kwargs' → logprob: -5.922074317932129
    5. ' args' → logprob: -8.297074317932129
    6. '_args' → logprob: -10.422074317932129
    7. '   ' → logprob: -10.672074317932129
    8. '
' → logprob: -10.672074317932129
    9. '$args' → logprob: -10.672074317932129
    10. ')' → logprob: -11.672074317932129

Token 129: 'kwargs' (ID: 19200)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -1.3782830137643032e-05
    2. 'kwargs' → logprob: -11.62501335144043
    3. ' args' → logprob: -12.37501335144043
    4. '_args' → logprob: -15.37501335144043
    5. '(args' → logprob: -16.12501335144043
    6. '
' → logprob: -16.37501335144043
    7. '*' → logprob: -17.00001335144043
    8. ')' → logprob: -17.00001335144043
    9. 'argv' → logprob: -17.00001335144043
    10. '	args' → logprob: -17.37501335144043

Token 130: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1477506458759308
    2. ')
' → logprob: -2.1477506160736084
    3. '
' → logprob: -4.6477508544921875
    4. ')' → logprob: -4.7727508544921875
    5. 'while' → logprob: -6.7727508544921875
    6. ' while' → logprob: -7.3977508544921875
    7. '           ' → logprob: -7.3977508544921875
    8. '               ' → logprob: -9.647750854492188
    9. '   ' → logprob: -9.897750854492188
    10. '()
' → logprob: -11.022750854492188

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010457895696163177
    2. ' while' → logprob: -7.0010457038879395
    3. 'while' → logprob: -9.001046180725098
    4. '   ' → logprob: -11.626046180725098
    5. '	while' → logprob: -14.126046180725098
    6. '           ' → logprob: -14.376046180725098
    7. '<|end|>' → logprob: -15.251046180725098
    8. '
' → logprob: -16.25104522705078
    9. '	' → logprob: -16.50104522705078
    10. ',' → logprob: -16.62604522705078

Token 132: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01964164525270462
    2. 'while' (adapté à ' while') → logprob: -4.144641876220703
    3. ' while' → logprob: -5.644641876220703
    4. '   ' → logprob: -9.769641876220703
    5. '
' → logprob: -12.394641876220703
    6. '	while' → logprob: -12.894641876220703
    7. '           ' → logprob: -15.394641876220703
    8. '    ' → logprob: -15.519641876220703
    9. '      ' → logprob: -15.894641876220703
    10. '     ' → logprob: -16.519641876220703

Token 133: ' callable' (ID: 83676)
  Prédit: 'call'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'call' → logprob: -0.04951060935854912
    2. ' callable' → logprob: -3.0495107173919678
    3. '(call' → logprob: -7.049510478973389
    4. 'res' → logprob: -10.299510955810547
    5. ' call' → logprob: -11.674510955810547
    6. '   ' → logprob: -12.799510955810547
    7. '	call' → logprob: -13.049510955810547
    8. 'has' → logprob: -13.049510955810547
    9. ' ' → logprob: -13.299510955810547
    10. 'is' → logprob: -14.424510955810547

Token 134: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.625
    3. 'res' → logprob: -16.25
    4. ' (' → logprob: -19.5
    5. '=res' → logprob: -20.5
    6. '(
' → logprob: -21.0
    7. '	res' → logprob: -21.375
    8. ',res' → logprob: -21.375
    9. ' res' → logprob: -21.875
    10. '(get' → logprob: -23.5

Token 135: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0015121236210688949
    2. '):' → logprob: -6.501512050628662
    3. ' ):
' → logprob: -12.12651252746582
    4. '):
' → logprob: -13.62651252746582
    5. '   ' → logprob: -14.00151252746582
    6. ':
' → logprob: -14.37651252746582
    7. '       ' → logprob: -14.75151252746582
    8. '():
' → logprob: -14.87651252746582
    9. ')' → logprob: -15.25151252746582
    10. 'res' → logprob: -15.37651252746582

Token 136: '           ' (ID: 352)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5088685750961304
    2. '           ' → logprob: -1.0088685750961304
    3. ' res' → logprob: -3.38386869430542
    4. '
' → logprob: -8.258868217468262
    5. '       ' → logprob: -12.008868217468262
    6. '               ' → logprob: -12.383868217468262
    7. '(res' → logprob: -13.258868217468262
    8. '	res' → logprob: -13.258868217468262
    9. ',res' → logprob: -13.508868217468262
    10. '   ' → logprob: -13.758868217468262

Token 137: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.011099820025265217
    2. ' res' → logprob: -4.511099815368652
    3. '           ' → logprob: -10.136099815368652
    4. '               ' → logprob: -12.136099815368652
    5. '       ' → logprob: -12.636099815368652
    6. '   ' → logprob: -12.886099815368652
    7. '	res' → logprob: -13.761099815368652
    8. '
' → logprob: -15.886099815368652
    9. '                   ' → logprob: -17.51110076904297
    10. '(res' → logprob: -18.01110076904297

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407984733581543
    2. '=' → logprob: -0.9740798473358154
    3. '=res' → logprob: -13.099080085754395
    4. ',' → logprob: -14.599080085754395
    5. '()' → logprob: -16.474079132080078
    6. '=lambda' → logprob: -17.349079132080078
    7. ' ' → logprob: -17.349079132080078
    8. ')' → logprob: -17.599079132080078
    9. '＝' → logprob: -17.599079132080078
    10. 'res' → logprob: -17.599079132080078

Token 139: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.12692873179912567
    2. ' res' → logprob: -2.1269288063049316
    3. '(res' → logprob: -14.376928329467773
    4. '	res' → logprob: -16.376928329467773
    5. '$res' → logprob: -18.501928329467773
    6. 'ress' → logprob: -18.751928329467773
    7. '   ' → logprob: -19.126928329467773
    8. '_res' → logprob: -19.251928329467773
    9. 'resent' → logprob: -19.501928329467773
    10. ' ' → logprob: -20.376928329467773

Token 140: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14331121742725372
    2. '())' → logprob: -2.0183112621307373
    3. '(res' → logprob: -8.143311500549316
    4. '()
' → logprob: -8.768311500549316
    5. '()]' → logprob: -9.768311500549316
    6. '();)' → logprob: -10.518311500549316
    7. '())
' → logprob: -10.768311500549316
    8. 'res' → logprob: -11.143311500549316
    9. '()}' → logprob: -11.643311500549316
    10. '()*' → logprob: -11.893311500549316

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009186678566038609
    2. 'return' → logprob: -4.759186744689941
    3. ' return' → logprob: -7.759186744689941
    4. '   ' → logprob: -9.509186744689941
    5. '           ' → logprob: -9.884186744689941
    6. '
' → logprob: -11.759186744689941
    7. 'def' → logprob: -12.259186744689941
    8. '	return' → logprob: -12.634186744689941
    9. '      ' → logprob: -13.634186744689941
    10. '     ' → logprob: -14.509186744689941

Token 142: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3474900424480438
    2. 'return' (adapté à ' return') → logprob: -1.8474900722503662
    3. '   ' → logprob: -2.597490072250366
    4. ' return' → logprob: -2.972490072250366
    5. '           ' → logprob: -4.597489833831787
    6. '
' → logprob: -9.847490310668945
    7. '    ' → logprob: -10.347490310668945
    8. 'def' → logprob: -10.347490310668945
    9. '	return' → logprob: -10.847490310668945
    10. '      ' → logprob: -11.097490310668945

Token 143: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.10020763427019119
    2. ' res' → logprob: -2.350207567214966
    3. '	res' → logprob: -14.350207328796387
    4. '(res' → logprob: -15.475207328796387
    5. 'ress' → logprob: -16.725208282470703
    6. ' ' → logprob: -16.850208282470703
    7. ' ' → logprob: -17.100208282470703
    8. 're' → logprob: -17.475208282470703
    9. 'rés' → logprob: -17.850208282470703
    10. 'r' → logprob: -17.975208282470703

Token 144: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011335457675158978
    2. '
' → logprob: -5.136335372924805
    3. 'return' → logprob: -5.261335372924805
    4. ' return' → logprob: -9.261335372924805
    5. '       ' → logprob: -10.386335372924805
    6. '    
' → logprob: -10.511335372924805
    7. '	return' → logprob: -10.511335372924805
    8. '<|end|>' → logprob: -12.011335372924805
    9. '        
' → logprob: -12.886335372924805
    10. ' ' → logprob: -13.011335372924805

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006668246816843748
    2. 'return' → logprob: -5.1316680908203125
    3. '
' → logprob: -7.2566680908203125
    4. '    
' → logprob: -11.131668090820312
    5. ' return' → logprob: -11.131668090820312
    6. '	return' → logprob: -13.381668090820312
    7. '  
' → logprob: -14.381668090820312
    8. ' ' → logprob: -14.631668090820312
    9. '  ' → logprob: -14.631668090820312
    10. '       ' → logprob: -14.881668090820312

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024911856278777122
    2. ' return' → logprob: -4.149911880493164
    3. '   ' → logprob: -4.774911880493164
    4. '
' → logprob: -8.524911880493164
    5. ' ' → logprob: -9.274911880493164
    6. '	return' → logprob: -10.024911880493164
    7. 'wrap' → logprob: -10.274911880493164
    8. '  ' → logprob: -10.899911880493164
    9. '    
' → logprob: -12.399911880493164
    10. 'def' → logprob: -12.774911880493164

Token 147: ' wrap' (ID: 20404)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.00026169343618676066
    2. ' wrap' → logprob: -8.250261306762695
    3. 'tr' → logprob: -14.875261306762695
    4. '.wrap' → logprob: -18.875261306762695
    5. 'warp' → logprob: -19.000261306762695
    6. '_wrap' → logprob: -19.375261306762695
    7. 'trap' → logprob: -19.750261306762695
    8. 'wrapper' → logprob: -20.000261306762695
    9. 'truncate' → logprob: -20.750261306762695
    10. 'wr' → logprob: -21.375261306762695

Token 148: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.211755633354187
    2. 'def' → logprob: -2.3367557525634766
    3. '
' → logprob: -2.7117557525634766
    4. '@return' → logprob: -4.336755752563477
    5. '<|end|>' → logprob: -5.836755752563477
    6. ')' → logprob: -6.086755752563477
    7. '@login' → logprob: -6.461755752563477
    8. '@
' → logprob: -6.586755752563477
    9. '    
' → logprob: -7.086755752563477
    10. '@n' → logprob: -7.211755752563477

Token 149: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.012822635471820831
    2. 'def' → logprob: -4.38782262802124
    3. 'class' → logprob: -9.387823104858398
    4. '@get' → logprob: -9.387823104858398
    5. ')' → logprob: -9.887823104858398
    6. '@index' → logprob: -10.512823104858398
    7. '@n' → logprob: -11.637823104858398
    8. '#' → logprob: -11.762823104858398
    9. '@class' → logprob: -12.012823104858398
    10. '@return' → logprob: -12.387823104858398

Token 150: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -2.339278580620885e-06
    2. 'dat' → logprob: -13.750001907348633
    3. 'l' → logprob: -14.750001907348633
    4. 'staticmethod' → logprob: -14.875001907348633
    5. ' trampoline' → logprob: -15.500001907348633
    6. 'trap' → logprob: -16.750001907348633
    7. 'st' → logprob: -17.250001907348633
    8. 'cache' → logprob: -17.625001907348633
    9. 'Tr' → logprob: -17.875001907348633
    10. '(tr' → logprob: -18.250001907348633

Token 151: 'ampoline' (ID: 165483)
  Prédit: 'ampoline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ampoline' → logprob: -0.05056152120232582
    2. 'mp' → logprob: -3.4255614280700684
    3. 'amp' → logprob: -4.550561428070068
    4. '
' → logprob: -6.800561428070068
    5. 'm' → logprob: -6.925561428070068
    6. 'ampo' → logprob: -7.300561428070068
    7. 'pol' → logprob: -7.675561428070068
    8. 'po' → logprob: -7.800561428070068
    9. '```' → logprob: -7.925561428070068
    10. 'p' → logprob: -8.050561904907227

Token 152: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002199144335463643
    2. '
' → logprob: -6.127199172973633
    3. '(def' → logprob: -12.252199172973633
    4. ' def' → logprob: -12.752199172973633
    5. '(' → logprob: -12.752199172973633
    6. '
' → logprob: -14.752199172973633
    7. '<|end|>' → logprob: -14.752199172973633
    8. '(n' → logprob: -14.752199172973633
    9. '('' → logprob: -15.252199172973633
    10. 'async' → logprob: -15.502199172973633

Token 153: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.981667537620524e-06
    2. '
' → logprob: -13.250001907348633
    3. ' def' → logprob: -16.750001907348633
    4. 'async' → logprob: -17.375001907348633
    5. '(def' → logprob: -17.375001907348633
    6. 'lambda' → logprob: -17.875001907348633
    7. '0' → logprob: -18.125001907348633
    8. '#' → logprob: -18.375001907348633
    9. 'd' → logprob: -18.875001907348633
    10. 'de' → logprob: -19.125001907348633

Token 154: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.2490542232990265
    2. 'dfs' → logprob: -1.999054193496704
    3. 'solve' → logprob: -3.624054193496704
    4. 'f' → logprob: -4.624054431915283
    5. 'go' → logprob: -4.624054431915283
    6. ' find' → logprob: -5.249054431915283
    7. 'fix' → logprob: -5.249054431915283
    8. 'root' → logprob: -5.999054431915283
    9. 'search' → logprob: -5.999054431915283
    10. 'get' → logprob: -6.249054431915283

Token 155: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.060957882553339005
    2. '(i' → logprob: -3.685957908630371
    3. '(par' → logprob: -4.060957908630371
    4. '(p' → logprob: -4.685957908630371
    5. '(u' → logprob: -5.935957908630371
    6. '(k' → logprob: -6.185957908630371
    7. '(node' → logprob: -6.435957908630371
    8. '(parent' → logprob: -7.685957908630371
    9. '(key' → logprob: -8.185957908630371
    10. '(a' → logprob: -8.685957908630371

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07003779709339142
    2. '):
' → logprob: -2.695037841796875
    3. ')' → logprob: -9.695037841796875
    4. '):
' → logprob: -10.570037841796875
    5. ' ):' → logprob: -12.445037841796875
    6. '   ' → logprob: -12.695037841796875
    7. '():' → logprob: -13.320037841796875
    8. '):

' → logprob: -13.320037841796875
    9. ':' → logprob: -13.570037841796875
    10. '():
' → logprob: -14.070037841796875

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07108557969331741
    2. ' if' → logprob: -2.6960856914520264
    3. 'if' → logprob: -7.571085453033447
    4. ' par' → logprob: -7.696085453033447
    5. ' p' → logprob: -10.071085929870605
    6. ' return' → logprob: -10.321085929870605
    7. ' global' → logprob: -10.321085929870605
    8. ' while' → logprob: -10.821085929870605
    9. 'par' → logprob: -10.946085929870605
    10. '   ' → logprob: -11.571085929870605

Token 158: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0015095012495294213
    2. 'while' → logprob: -7.501509666442871
    3. 'parent' → logprob: -8.126509666442871
    4. ' if' → logprob: -8.376509666442871
    5. 'return' → logprob: -8.501509666442871
    6. '   ' → logprob: -8.876509666442871
    7. 'p' → logprob: -9.751509666442871
    8. 'par' → logprob: -11.001509666442871
    9. 'px' → logprob: -12.001509666442871
    10. 'global' → logprob: -12.626509666442871

Token 159: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -6.456358823925257e-05
    2. ' par' → logprob: -9.750064849853516
    3. 'x' → logprob: -12.000064849853516
    4. '(par' → logprob: -18.000064849853516
    5. '	par' → logprob: -19.000064849853516
    6. 'parent' → logprob: -21.375064849853516
    7. ' x' → logprob: -21.625064849853516
    8. 'paren' → logprob: -21.750064849853516
    9. '   ' → logprob: -22.000064849853516
    10. 'pa' → logprob: -23.500064849853516

Token 160: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -13.125003814697266
    3. 'x' → logprob: -13.625003814697266
    4. '.get' → logprob: -15.500003814697266
    5. '(x' → logprob: -16.250003814697266
    6. '[i' → logprob: -16.375003814697266
    7. '[parent' → logprob: -16.500003814697266
    8. '[p' → logprob: -16.875003814697266
    9. '.setdefault' → logprob: -17.375003814697266
    10. '{x' → logprob: -17.625003814697266

Token 161: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14528702199459076
    2. ']==' → logprob: -2.770287036895752
    3. '[x' → logprob: -3.145287036895752
    4. '==' → logprob: -3.645287036895752
    5. ']!=' → logprob: -6.270287036895752
    6. '!=' → logprob: -6.645287036895752
    7. ' ==' → logprob: -8.645286560058594
    8. '[' → logprob: -11.020286560058594
    9. ' !=' → logprob: -11.520286560058594
    10. 'x' → logprob: -11.645286560058594

Token 162: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01567181944847107
    2. '[x' → logprob: -4.890671730041504
    3. ' ==' → logprob: -5.140671730041504
    4. '!=' → logprob: -6.140671730041504
    5. ' !=' → logprob: -12.015671730041504
    6. ']==' → logprob: -12.265671730041504
    7. 'x' → logprob: -12.515671730041504
    8. '===' → logprob: -12.765671730041504
    9. '[' → logprob: -12.890671730041504
    10. '=' → logprob: -13.140671730041504

Token 163: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.988221684878226e-06
    2. ' x' → logprob: -11.875006675720215
    3. '	x' → logprob: -20.12500762939453
    4. '   ' → logprob: -20.37500762939453
    5. ' ' → logprob: -20.87500762939453
    6. '
' → logprob: -22.12500762939453
    7. ')x' → logprob: -22.12500762939453
    8. '{x' → logprob: -22.75000762939453
    9. ''x' → logprob: -23.37500762939453
    10. '"x' → logprob: -23.75000762939453

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20229937136173248
    2. ':
' → logprob: -1.7022993564605713
    3. ':return' → logprob: -7.07729959487915
    4. '   ' → logprob: -10.702299118041992
    5. '       ' → logprob: -11.327299118041992
    6. ',' → logprob: -13.202299118041992
    7. ' :' → logprob: -13.702299118041992
    8. 'return' → logprob: -14.077299118041992
    9. '):
' → logprob: -14.202299118041992
    10. ':
' → logprob: -14.327299118041992

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030151354148983955
    2. ' return' → logprob: -3.9051513671875
    3. 'return' → logprob: -4.6551513671875
    4. '	return' → logprob: -10.9051513671875
    5. '   ' → logprob: -11.4051513671875
    6. ':return' → logprob: -11.9051513671875
    7. '	' → logprob: -12.2801513671875
    8. ',' → logprob: -12.5301513671875
    9. '           ' → logprob: -13.4051513671875
    10. '	   ' → logprob: -13.5301513671875

Token 166: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07479219883680344
    2. '       ' → logprob: -3.3247921466827393
    3. ' return' → logprob: -3.3247921466827393
    4. '   ' → logprob: -9.44979190826416
    5. 'x' → logprob: -11.57479190826416
    6. '	return' → logprob: -11.69979190826416
    7. '
' → logprob: -12.44979190826416
    8. ':return' → logprob: -13.82479190826416
    9. ' x' → logprob: -14.07479190826416
    10. ' ' → logprob: -14.57479190826416

Token 167: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004306692280806601
    2. ' x' → logprob: -7.750430583953857
    3. '	x' → logprob: -18.750431060791016
    4. '(x' → logprob: -21.000431060791016
    5. ' ' → logprob: -21.125431060791016
    6. ' ' → logprob: -21.375431060791016
    7. 'par' → logprob: -21.375431060791016
    8. '   ' → logprob: -21.875431060791016
    9. '
' → logprob: -22.125431060791016
    10. '{x' → logprob: -22.750431060791016

Token 168: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007538817590102553
    2. '
' → logprob: -7.250753879547119
    3. '    
' → logprob: -10.375754356384277
    4. 'return' → logprob: -12.000754356384277
    5. 'else' → logprob: -12.625754356384277
    6. ' else' → logprob: -14.625754356384277
    7. ' return' → logprob: -14.625754356384277
    8. '       ' → logprob: -15.000754356384277
    9. '  
' → logprob: -15.000754356384277
    10. '        
' → logprob: -15.375754356384277

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.639096970204264e-05
    2. '
' → logprob: -9.500096321105957
    3. '    
' → logprob: -11.000096321105957
    4. 'return' → logprob: -13.000096321105957
    5. 'else' → logprob: -14.125096321105957
    6. 'def' → logprob: -14.875096321105957
    7. ' return' → logprob: -15.000096321105957
    8. ',' → logprob: -15.375096321105957
    9. ' else' → logprob: -15.375096321105957
    10. '   ' → logprob: -15.625096321105957

Token 170: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024676902685314417
    2. 'def' → logprob: -6.752467632293701
    3. 'return' → logprob: -7.002467632293701
    4. ' return' → logprob: -8.50246810913086
    5. ' def' → logprob: -9.12746810913086
    6. ' par' → logprob: -10.25246810913086
    7. 'par' → logprob: -11.12746810913086
    8. 'else' (adapté à ' else') → logprob: -11.37746810913086
    9. '
' → logprob: -12.37746810913086
    10. '    
' → logprob: -13.00246810913086

Token 171: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12616488337516785
    2. ' lambda' → logprob: -2.2511649131774902
    3. 'lambda' → logprob: -5.37616491317749
    4. '(lambda' → logprob: -5.50116491317749
    5. ' return' → logprob: -5.75116491317749
    6. ':' → logprob: -7.75116491317749
    7. '    ' → logprob: -8.501164436340332
    8. 'return' → logprob: -8.876164436340332
    9. '   ' → logprob: -9.001164436340332
    10. ':
' → logprob: -9.251164436340332

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8007732033729553
    2. ' lambda' → logprob: -0.8007732033729553
    3. 'lambda' → logprob: -2.3007731437683105
    4. '(lambda' → logprob: -6.6757731437683105
    5. '   ' → logprob: -8.300773620605469
    6. '    ' → logprob: -8.800773620605469
    7. ' return' → logprob: -9.425773620605469
    8. 'return' → logprob: -10.425773620605469
    9. '           ' → logprob: -10.675773620605469
    10. '=lambda' → logprob: -10.675773620605469

Token 173: ' def' (ID: 1056)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.010277274996042252
    2. 'return' → logprob: -5.260277271270752
    3. '           ' → logprob: -6.010277271270752
    4. ' lambda' → logprob: -6.760277271270752
    5. '(lambda' → logprob: -6.760277271270752
    6. 'def' (adapté à ' def') → logprob: -8.63527774810791
    7. '       ' → logprob: -10.01027774810791
    8. 'par' → logprob: -11.13527774810791
    9. '=lambda' → logprob: -11.88527774810791
    10. '   ' → logprob: -12.01027774810791

Token 174: ' inner' (ID: 12694)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.015583331696689129
    2. ' lambda' → logprob: -4.515583515167236
    3. '()' → logprob: -6.640583515167236
    4. 'cont' → logprob: -6.765583515167236
    5. '(lambda' → logprob: -7.515583515167236
    6. 'step' → logprob: -8.015583038330078
    7. 'wrap' → logprob: -8.015583038330078
    8. 'next' → logprob: -8.640583038330078
    9. 'continu' → logprob: -9.015583038330078
    10. '_lambda' → logprob: -9.390583038330078

Token 175: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.160291850566864
    2. '():
' → logprob: -1.9102919101715088
    3. 'lambda' → logprob: -10.53529167175293
    4. '()' → logprob: -10.66029167175293
    5. '():
' → logprob: -11.91029167175293
    6. '(lambda' → logprob: -12.16029167175293
    7. ' ():' → logprob: -12.91029167175293
    8. ' lambda' → logprob: -14.28529167175293
    9. '()):
' → logprob: -14.28529167175293
    10. '():

' → logprob: -14.53529167175293

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.57436203956604
    2. ' par' → logprob: -1.19936203956604
    3. 'par' → logprob: -2.07436203956604
    4. '   ' → logprob: -5.199361801147461
    5. '       ' → logprob: -6.199361801147461
    6. 'return' → logprob: -6.574361801147461
    7. ' return' → logprob: -7.949361801147461
    8. '	par' → logprob: -9.074361801147461
    9. '(par' → logprob: -9.074361801147461
    10. 'find' → logprob: -9.449361801147461

Token 177: ' s' (ID: 265)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.11021474748849869
    2. '           ' → logprob: -2.6102147102355957
    3. 'return' → logprob: -4.610214710235596
    4. ' par' → logprob: -4.860214710235596
    5. 'res' → logprob: -4.860214710235596
    6. '   ' → logprob: -6.110214710235596
    7. '       ' → logprob: -6.985214710235596
    8. 'result' → logprob: -7.735214710235596
    9. 'parent' → logprob: -8.110215187072754
    10. 'r' → logprob: -8.485215187072754

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6532612442970276
    2. 'return' → logprob: -1.2782611846923828
    3. '=' → logprob: -2.403261184692383
    4. 'par' → logprob: -2.778261184692383
    5. '   ' → logprob: -4.403261184692383
    6. 'et' → logprob: -4.403261184692383
    7. 'elf' → logprob: -5.028261184692383
    8. 't' → logprob: -6.028261184692383
    9. '=find' → logprob: -6.028261184692383
    10. 'earch' → logprob: -6.403261184692383

Token 179: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0037866546772420406
    2. ' find' → logprob: -5.628786563873291
    3. 'par' → logprob: -8.75378704071045
    4. ' par' → logprob: -11.25378704071045
    5. '           ' → logprob: -11.75378704071045
    6. '(find' → logprob: -13.00378704071045
    7. '   ' → logprob: -13.37878704071045
    8. '       ' → logprob: -13.50378704071045
    9. '	find' → logprob: -13.62878704071045
    10. '=find' → logprob: -15.37878704071045

Token 180: '(par' (ID: 34455)
  Prédit: '(par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(par' → logprob: -5.5577775128767826e-06
    2. 'par' → logprob: -12.875005722045898
    3. '(paren' → logprob: -13.125005722045898
    4. '(' → logprob: -15.250005722045898
    5. '	par' → logprob: -15.500005722045898
    6. ' (' → logprob: -16.0000057220459
    7. '(pa' → logprob: -16.1250057220459
    8. '((' → logprob: -16.7500057220459
    9. '(parent' → logprob: -17.2500057220459
    10. '(p' → logprob: -17.2500057220459

Token 181: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0001222508290084079
    2. '(x' → logprob: -9.7501220703125
    3. 'x' → logprob: -9.8751220703125
    4. '[' → logprob: -11.5001220703125
    5. '{x' → logprob: -14.2501220703125
    6. ')x' → logprob: -14.8751220703125
    7. ')' → logprob: -15.5001220703125
    8. ' x' → logprob: -15.5001220703125
    9. ' [' → logprob: -15.5001220703125
    10. '[
' → logprob: -15.6251220703125

Token 182: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.5435227155685425
    2. ')
' → logprob: -1.0435227155685425
    3. '])' → logprob: -3.043522834777832
    4. ')' → logprob: -4.043522834777832
    5. '())
' → logprob: -6.543522834777832
    6. ' )
' → logprob: -9.418522834777832
    7. '))
' → logprob: -9.793522834777832
    8. '()])
' → logprob: -9.918522834777832
    9. ']' → logprob: -10.043522834777832
    10. ' ])
' → logprob: -10.543522834777832

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031669065356254578
    2. ' par' → logprob: -6.503166675567627
    3. '       ' → logprob: -6.628166675567627
    4. 'par' → logprob: -8.128167152404785
    5. '   ' → logprob: -10.878167152404785
    6. 'return' → logprob: -11.378167152404785
    7. ' return' → logprob: -11.878167152404785
    8. '
' → logprob: -12.503167152404785
    9. ',' → logprob: -14.128167152404785
    10. 'global' → logprob: -14.378167152404785

Token 184: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' (adapté à ' par') → logprob: -0.6498847007751465
    2. ' par' → logprob: -1.0248847007751465
    3. '           ' → logprob: -2.1498847007751465
    4. '       ' → logprob: -6.5248847007751465
    5. '   ' → logprob: -6.8998847007751465
    6. '	par' → logprob: -9.649885177612305
    7. ' ' → logprob: -11.774885177612305
    8. '(par' → logprob: -12.899885177612305
    9. '               ' → logprob: -13.274885177612305
    10. 'return' → logprob: -13.399885177612305

Token 185: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.16160254180431366
    2. '.__' → logprob: -1.91160249710083
    3. '.setdefault' → logprob: -6.78660249710083
    4. '__' → logprob: -9.161602973937988
    5. '.update' → logprob: -9.661602973937988
    6. '[' → logprob: -10.661602973937988
    7. '__.__' → logprob: -10.911602973937988
    8. '__[' → logprob: -11.036602973937988
    9. 'x' → logprob: -11.286602973937988
    10. ').__' → logprob: -12.286602973937988

Token 186: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021509946964215487
    2. ']=' → logprob: -8.500215530395508
    3. '=' → logprob: -11.750215530395508
    4. ' ]' → logprob: -13.000215530395508
    5. ')' → logprob: -13.875215530395508
    6. '[' → logprob: -15.625215530395508
    7. '])' → logprob: -16.125215530395508
    8. ' =' → logprob: -16.375215530395508
    9. 'x' → logprob: -16.875215530395508
    10. ']==' → logprob: -17.125215530395508

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889165729284286
    2. ' =' → logprob: -2.5788917541503906
    3. '=x' → logprob: -13.95389175415039
    4. '[' → logprob: -14.70389175415039
    5. ']' → logprob: -16.32889175415039
    6. '＝' → logprob: -16.32889175415039
    7. '[x' → logprob: -16.32889175415039
    8. ',' → logprob: -16.32889175415039
    9. ']=' → logprob: -16.45389175415039
    10. ' ' → logprob: -16.82889175415039

Token 188: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009115827269852161
    2. ' s' → logprob: -7.000911712646484
    3. 'lambda' → logprob: -19.250911712646484
    4. '(s' → logprob: -19.375911712646484
    5. ' ' → logprob: -20.375911712646484
    6. '_s' → logprob: -20.750911712646484
    7. ' lambda' → logprob: -21.125911712646484
    8. '{s' → logprob: -21.375911712646484
    9. '	s' → logprob: -21.500911712646484
    10. '<|end|>' → logprob: -21.875911712646484

Token 189: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.9054008084349334e-05
    2. 'return' → logprob: -10.375039100646973
    3. '       ' → logprob: -12.375039100646973
    4. ' return' → logprob: -13.250039100646973
    5. '   ' → logprob: -14.375039100646973
    6. '
' → logprob: -14.875039100646973
    7. '          ' → logprob: -15.625039100646973
    8. '	       ' → logprob: -15.750039100646973
    9. ';' → logprob: -15.875039100646973
    10. '               ' → logprob: -16.000038146972656

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011939727846765891
    2. 'return' → logprob: -9.37511920928955
    3. '       ' → logprob: -10.75011920928955
    4. ' return' → logprob: -11.37511920928955
    5. '   ' → logprob: -13.75011920928955
    6. '               ' → logprob: -15.87511920928955
    7. '          ' → logprob: -15.87511920928955
    8. '		' → logprob: -16.250120162963867
    9. '
' → logprob: -16.625120162963867
    10. '	       ' → logprob: -17.250120162963867

Token 191: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4844807982444763
    2. 'return' (adapté à ' return') → logprob: -0.9844807982444763
    3. ' return' → logprob: -5.109480857849121
    4. '       ' → logprob: -5.484480857849121
    5. '   ' → logprob: -8.859480857849121
    6. '               ' → logprob: -11.859480857849121
    7. '          ' → logprob: -12.734480857849121
    8. '         ' → logprob: -12.859480857849121
    9. '	return' → logprob: -13.609480857849121
    10. '
' → logprob: -13.609480857849121

Token 192: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0014359470224007964
    2. ' s' → logprob: -7.12643575668335
    3. 'inner' → logprob: -7.87643575668335
    4. 'lambda' → logprob: -8.501436233520508
    5. 'par' → logprob: -10.251436233520508
    6. 'find' → logprob: -12.251436233520508
    7. ' lambda' → logprob: -12.626436233520508
    8. ' inner' → logprob: -13.001436233520508
    9. '(lambda' → logprob: -14.001436233520508
    10. '(s' → logprob: -14.251436233520508

Token 193: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004849819000810385
    2. '
' → logprob: -5.379849910736084
    3. '   ' → logprob: -9.004849433898926
    4. 'return' → logprob: -9.504849433898926
    5. '           ' → logprob: -10.504849433898926
    6. ')' → logprob: -13.879849433898926
    7. ' return' → logprob: -14.504849433898926
    8. '               ' → logprob: -14.504849433898926
    9. '     ' → logprob: -14.629849433898926
    10. '        
' → logprob: -14.754849433898926

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018824731232598424
    2. '
' → logprob: -6.876882553100586
    3. 'return' → logprob: -7.626882553100586
    4. '   ' → logprob: -8.001882553100586
    5. '           ' → logprob: -10.751882553100586
    6. 'def' → logprob: -13.626882553100586
    7. '        
' → logprob: -13.626882553100586
    8. ' return' → logprob: -14.126882553100586
    9. '               ' → logprob: -14.626882553100586
    10. '     ' → logprob: -14.876882553100586

Token 195: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6323167085647583
    2. 'return' (adapté à ' return') → logprob: -0.8823167085647583
    3. '   ' → logprob: -3.1323165893554688
    4. ' return' → logprob: -4.507316589355469
    5. '           ' → logprob: -9.507316589355469
    6. ' ' → logprob: -10.007316589355469
    7. '    ' → logprob: -11.132316589355469
    8. '	return' → logprob: -11.507316589355469
    9. '     ' → logprob: -11.632316589355469
    10. '  ' → logprob: -11.632316589355469

Token 196: ' inner' (ID: 12694)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -2.15310683415737e-05
    2. ' inner' → logprob: -10.750021934509277
    3. 'inners' → logprob: -17.87502098083496
    4. '(inner' → logprob: -18.87502098083496
    5. 'inline' → logprob: -20.75002098083496
    6. ' ' → logprob: -20.75002098083496
    7. 'inn' → logprob: -21.37502098083496
    8. '   ' → logprob: -21.87502098083496
    9. '.inner' → logprob: -21.87502098083496
    10. 'internal' → logprob: -22.37502098083496

Token 197: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8788412809371948
    2. '<|end|>' → logprob: -0.8788412809371948
    3. '   ' → logprob: -2.1288414001464844
    4. 'return' → logprob: -4.128841400146484
    5. '()' → logprob: -4.253841400146484
    6. '<|end|>' → logprob: -4.753841400146484
    7. 'def' → logprob: -5.753841400146484
    8. '@' → logprob: -6.378841400146484
    9. '}' → logprob: -6.628841400146484
    10. 'find' → logprob: -6.878841400146484

Token 198: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6070569753646851
    2. 'def' → logprob: -1.107056975364685
    3. '@' → logprob: -2.1070570945739746
    4. '<|end|>' → logprob: -6.732057094573975
    5. ')
' → logprob: -8.857056617736816
    6. '
' → logprob: -8.982056617736816
    7. ',' → logprob: -8.982056617736816
    8. '#' → logprob: -9.107056617736816
    9. 'par' → logprob: -9.357056617736816
    10. '),' → logprob: -9.607056617736816

Token 199: ' unite' (ID: 96146)
  Prédit: ' union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.007339684292674065
    2. 'union' → logprob: -5.5073394775390625
    3. ' unite' → logprob: -5.7573394775390625
    4. '_union' → logprob: -10.007339477539062
    5. ' merge' → logprob: -11.007339477539062
    6. 'un' → logprob: -11.882339477539062
    7. ' join' → logprob: -12.132339477539062
    8. ' unify' → logprob: -12.132339477539062
    9. ' ' → logprob: -12.632339477539062
    10. ' un' → logprob: -13.132339477539062

Token 200: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.693391740322113
    2. '(a' → logprob: -0.693391740322113
    3. '(' → logprob: -8.943391799926758
    4. '(u' → logprob: -9.193391799926758
    5. '(p' → logprob: -12.443391799926758
    6. '(l' → logprob: -13.068391799926758
    7. '(A' → logprob: -13.318391799926758
    8. '(i' → logprob: -14.068391799926758
    9. 'def' → logprob: -14.193391799926758
    10. '(left' → logprob: -14.443391799926758

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001422770437784493
    2. ',y' → logprob: -8.875142097473145
    3. ' ,' → logprob: -13.125142097473145
    4. ',x' → logprob: -15.250142097473145
    5. ',
' → logprob: -16.62514305114746
    6. 'y' → logprob: -17.87514305114746
    7. ',Y' → logprob: -18.25014305114746
    8. ',b' → logprob: -18.50014305114746
    9. '_,' → logprob: -18.62514305114746
    10. '1' → logprob: -18.62514305114746

Token 202: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10020710527896881
    2. ' y' → logprob: -2.3502070903778076
    3. '	y' → logprob: -15.225207328796387
    4. ' ' → logprob: -16.10020637512207
    5. '   ' → logprob: -16.60020637512207
    6. '  ' → logprob: -17.72520637512207
    7. '```' → logprob: -18.22520637512207
    8. '    ' → logprob: -18.35020637512207
    9. ' ' → logprob: -18.60020637512207
    10. '
' → logprob: -18.85020637512207

Token 203: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023252584040164948
    2. '):
' → logprob: -3.773252487182617
    3. ')' → logprob: -12.773252487182617
    4. '):
' → logprob: -13.023252487182617
    5. ' ):' → logprob: -13.898252487182617
    6. ':' → logprob: -14.273252487182617
    7. '):

' → logprob: -14.773252487182617
    8. '   ' → logprob: -16.773252487182617
    9. '}:' → logprob: -18.148252487182617
    10. ',' → logprob: -18.148252487182617

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13329192996025085
    2. ' px' → logprob: -3.0082919597625732
    3. 'px' → logprob: -3.3832919597625732
    4. 'def' → logprob: -4.258291721343994
    5. 'rx' → logprob: -4.633291721343994
    6. 'x' → logprob: -5.258291721343994
    7. ' rx' → logprob: -5.258291721343994
    8. ' def' → logprob: -6.133291721343994
    9. ' par' → logprob: -7.258291721343994
    10. ' x' → logprob: -7.383291721343994

Token 205: ' roots' (ID: 29895)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6834369897842407
    2. 'px' → logprob: -1.3084369897842407
    3. 'def' → logprob: -2.558436870574951
    4. 'par' → logprob: -2.558436870574951
    5. 'rx' → logprob: -3.433436870574951
    6. 'a' → logprob: -4.183436870574951
    7. '   ' → logprob: -4.308436870574951
    8. ' px' → logprob: -5.933436870574951
    9. ' par' → logprob: -6.808436870574951
    10. 'root' → logprob: -6.808436870574951

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05511922016739845
    2. ' =' → logprob: -2.930119276046753
    3. 'x' → logprob: -8.555119514465332
    4. '_x' → logprob: -10.930119514465332
    5. '[' → logprob: -11.805119514465332
    6. '(x' → logprob: -12.805119514465332
    7. 'of' → logprob: -12.930119514465332
    8. '=
' → logprob: -12.930119514465332
    9. '.' → logprob: -13.055119514465332
    10. '[x' → logprob: -13.555119514465332

Token 207: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.2240664958953857
    2. '(find' → logprob: -1.7240664958953857
    3. '(list' → logprob: -2.0990664958953857
    4. 'find' → logprob: -2.3490664958953857
    5. 'map' → logprob: -2.3490664958953857
    6. '(map' → logprob: -2.7240664958953857
    7. ' list' → logprob: -3.3490664958953857
    8. ' (' → logprob: -3.3490664958953857
    9. '[' → logprob: -3.5990664958953857
    10. 'tuple' → logprob: -4.349066734313965

Token 208: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00048083928413689137
    2. '({' → logprob: -8.375480651855469
    3. '(set' → logprob: -8.875480651855469
    4. '{' → logprob: -9.750480651855469
    5. 'map' → logprob: -10.500480651855469
    6. '(sorted' → logprob: -11.125480651855469
    7. '(st' → logprob: -12.500480651855469
    8. '([' → logprob: -13.000480651855469
    9. '[' → logprob: -13.375480651855469
    10. '(' → logprob: -13.625480651855469

Token 209: '(find' (ID: 60187)
  Prédit: '(find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(find' → logprob: -0.000923965300898999
    2. 'find' → logprob: -7.000924110412598
    3. '(' → logprob: -11.625924110412598
    4. '   ' → logprob: -12.875924110412598
    5. ' find' → logprob: -14.750924110412598
    6. '(f' → logprob: -15.750924110412598
    7. '(lambda' → logprob: -15.750924110412598
    8. '	find' → logprob: -16.12592315673828
    9. '=find' → logprob: -16.87592315673828
    10. ' (' → logprob: -17.25092315673828

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006070760078728199
    2. ',x' → logprob: -5.131070613861084
    3. ',item' → logprob: -10.006071090698242
    4. ' ,' → logprob: -10.256071090698242
    5. ',y' → logprob: -10.506071090698242
    6. ',int' → logprob: -12.381071090698242
    7. '   ' → logprob: -12.381071090698242
    8. ',p' → logprob: -12.506071090698242
    9. 'lambda' → logprob: -13.131071090698242
    10. ' ' → logprob: -13.131071090698242

Token 211: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.35860416293144226
    2. '[x' → logprob: -1.2336041927337646
    3. ' (' → logprob: -4.8586039543151855
    4. ' [' → logprob: -6.6086039543151855
    5. '[y' → logprob: -7.6086039543151855
    6. '(y' → logprob: -8.858604431152344
    7. '(' → logprob: -8.983604431152344
    8. '[' → logprob: -9.233604431152344
    9. '   ' → logprob: -9.483604431152344
    10. '([' → logprob: -10.358604431152344

Token 212: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00021831797494087368
    2. ' x' → logprob: -8.500218391418457
    3. '(x' → logprob: -11.625218391418457
    4. '[x' → logprob: -12.625218391418457
    5. '   ' → logprob: -13.250218391418457
    6. ')x' → logprob: -15.250218391418457
    7. '	x' → logprob: -15.375218391418457
    8. '[' → logprob: -16.12521743774414
    9. ',x' → logprob: -16.37521743774414
    10. ' ' → logprob: -16.37521743774414

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00784817524254322
    2. ',y' → logprob: -4.882848262786865
    3. ' ,' → logprob: -8.382847785949707
    4. '[' → logprob: -11.507847785949707
    5. ',
' → logprob: -13.257847785949707
    6. '[y' → logprob: -14.382847785949707
    7. 'y' → logprob: -15.382847785949707
    8. ' y' → logprob: -15.882847785949707
    9. ' ' → logprob: -15.882847785949707
    10. '
' → logprob: -16.007848739624023

Token 214: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026310397312045097
    2. ' y' → logprob: -3.651310443878174
    3. '   ' → logprob: -12.026309967041016
    4. 'x' → logprob: -13.776309967041016
    5. ' ' → logprob: -13.901309967041016
    6. '  ' → logprob: -14.401309967041016
    7. '    ' → logprob: -14.526309967041016
    8. '	y' → logprob: -14.776309967041016
    9. ')y' → logprob: -15.901309967041016
    10. ')' → logprob: -16.026309967041016

Token 215: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.013730192556977272
    2. ')))
' → logprob: -4.388730049133301
    3. '))' → logprob: -6.763730049133301
    4. '))
' → logprob: -10.5137300491333
    5. ')' → logprob: -11.0137300491333
    6. ' ' → logprob: -11.7637300491333
    7. ')))

' → logprob: -12.0137300491333
    8. ')))
' → logprob: -12.6387300491333
    9. ')));' → logprob: -13.0137300491333
    10. '   ' → logprob: -14.0137300491333

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11276383697986603
    2. ' if' → logprob: -2.4877638816833496
    3. 'if' → logprob: -3.8627638816833496
    4. 'x' → logprob: -7.23776388168335
    5. '
' → logprob: -7.23776388168335
    6. ' for' → logprob: -8.362763404846191
    7. 'u' → logprob: -8.362763404846191
    8. 'for' → logprob: -9.362763404846191
    9. ',' → logprob: -9.612763404846191
    10. ' ' → logprob: -9.612763404846191

Token 217: ' min' (ID: 1349)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023114683106541634
    2. 'x' → logprob: -4.6481146812438965
    3. 'px' → logprob: -5.0231146812438965
    4. 'par' → logprob: -5.2731146812438965
    5. 'rx' → logprob: -7.2731146812438965
    6. ' if' → logprob: -7.7731146812438965
    7. '   ' → logprob: -8.273115158081055
    8. 'a' → logprob: -9.273115158081055
    9. 'for' → logprob: -10.398115158081055
    10. 'xr' → logprob: -10.898115158081055

Token 218: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.10229551792144775
    2. '_' → logprob: -2.352295398712158
    3. '_ro' → logprob: -6.977295398712158
    4. 'root' → logprob: -7.602295398712158
    5. '_,' → logprob: -8.227295875549316
    6. '_val' → logprob: -9.727295875549316
    7. '_id' → logprob: -10.227295875549316
    8. '_idx' → logprob: -10.227295875549316
    9. 'roots' → logprob: -10.227295875549316
    10. '_r' → logprob: -10.477295875549316

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3813785910606384
    2. '=' → logprob: -1.2563786506652832
    3. '_' → logprob: -4.381378650665283
    4. ',' → logprob: -5.006378650665283
    5. '_root' → logprob: -5.131378650665283
    6. '_,' → logprob: -6.256378650665283
    7. '_val' → logprob: -6.256378650665283
    8. '_idx' → logprob: -6.881378650665283
    9. '_=' → logprob: -7.006378650665283
    10. '=min' → logprob: -7.631378650665283

Token 220: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029751762747764587
    2. ' min' → logprob: -3.529751777648926
    3. '	min' → logprob: -14.779751777648926
    4. '(min' → logprob: -15.029751777648926
    5. 'roots' → logprob: -15.154751777648926
    6. ' roots' → logprob: -16.40475082397461
    7. '   ' → logprob: -16.40475082397461
    8. ' ' → logprob: -16.52975082397461
    9. 'max' → logprob: -17.02975082397461
    10. '=min' → logprob: -18.02975082397461

Token 221: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000565541791729629
    2. 'roots' → logprob: -7.500565528869629
    3. '(*' → logprob: -11.375565528869629
    4. ' roots' → logprob: -14.750565528869629
    5. '(
' → logprob: -15.125565528869629
    6. '(root' → logprob: -15.750565528869629
    7. '*' → logprob: -16.500566482543945
    8. ',' → logprob: -17.125566482543945
    9. '   ' → logprob: -17.375566482543945
    10. '(par' → logprob: -17.625566482543945

Token 222: 'roots' (ID: 83507)
  Prédit: 'roots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -1.0802738870552275e-05
    2. ' roots' → logprob: -11.50001049041748
    3. '(' → logprob: -15.00001049041748
    4. 'root' → logprob: -15.62501049041748
    5. '*' → logprob: -16.250011444091797
    6. '(*' → logprob: -17.125011444091797
    7. '   ' → logprob: -17.750011444091797
    8. ' ' → logprob: -18.625011444091797
    9. 'ro' → logprob: -18.625011444091797
    10. 'r' → logprob: -19.500011444091797

Token 223: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22564418613910675
    2. ')
' → logprob: -1.6006442308425903
    3. '   ' → logprob: -8.9756441116333
    4. ',' → logprob: -10.1006441116333
    5. ' )' → logprob: -10.8506441116333
    6. ' )
' → logprob: -11.3506441116333
    7. ')
' → logprob: -11.4756441116333
    8. '[' → logprob: -11.8506441116333
    9. ')

' → logprob: -12.3506441116333
    10. '))' → logprob: -13.2256441116333

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02348712831735611
    2. 'for' → logprob: -4.273487091064453
    3. 'par' → logprob: -4.898487091064453
    4. ' for' → logprob: -6.523487091064453
    5. ' par' → logprob: -8.023487091064453
    6. 'max' → logprob: -12.023487091064453
    7. '    
' → logprob: -12.148487091064453
    8. 'if' → logprob: -12.523487091064453
    9. 'def' → logprob: -12.648487091064453
    10. '
' → logprob: -12.648487091064453

Token 225: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.901104748249054
    2. 'par' → logprob: -1.0261046886444092
    3. 'max' (adapté à ' max') → logprob: -1.6511046886444092
    4. '   ' → logprob: -3.151104688644409
    5. 'def' → logprob: -7.901104927062988
    6. 'if' → logprob: -8.526104927062988
    7. 'ma' → logprob: -9.901104927062988
    8. ' for' → logprob: -10.651104927062988
    9. 'roots' → logprob: -10.901104927062988
    10. '(par' → logprob: -11.026104927062988

Token 226: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -4.572941179503687e-05
    2. '_ro' → logprob: -10.375045776367188
    3. 'root' → logprob: -11.750045776367188
    4. '(root' → logprob: -12.875045776367188
    5. '_' → logprob: -13.750045776367188
    6. '(_' → logprob: -13.875045776367188
    7. '(' → logprob: -14.250045776367188
    8. 'roots' → logprob: -14.375045776367188
    9. ' root' → logprob: -15.500045776367188
    10. 'Root' → logprob: -15.625045776367188

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935396790504456
    2. ' =' → logprob: -0.6935396790504456
    3. '_root' → logprob: -9.0685396194458
    4. ',' → logprob: -9.0685396194458
    5. '=root' → logprob: -10.0685396194458
    6. 'root' → logprob: -10.1935396194458
    7. ' ' → logprob: -10.5685396194458
    8. '   ' → logprob: -10.8185396194458
    9. 'roots' → logprob: -11.1935396194458
    10. ' roots' → logprob: -12.5685396194458

Token 228: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08045568317174911
    2. 'roots' → logprob: -2.830455780029297
    3. ' max' → logprob: -4.205455780029297
    4. ' roots' → logprob: -5.705455780029297
    5. '(max' → logprob: -9.705455780029297
    6. '   ' → logprob: -12.330455780029297
    7. 'root' → logprob: -12.330455780029297
    8. ' ' → logprob: -12.955455780029297
    9. 'min' → logprob: -13.080455780029297
    10. '[max' → logprob: -14.705455780029297

Token 229: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2810257077217102
    2. 'roots' → logprob: -1.7810256481170654
    3. '_root' → logprob: -2.6560256481170654
    4. '_ro' → logprob: -5.1560258865356445
    5. 'root' → logprob: -8.406025886535645
    6. ' roots' → logprob: -8.531025886535645
    7. '(root' → logprob: -10.281025886535645
    8. '   ' → logprob: -10.906025886535645
    9. 's' → logprob: -11.281025886535645
    10. 'Root' → logprob: -11.906025886535645

Token 230: 'roots' (ID: 83507)
  Prédit: 'roots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -1.4021237802808173e-05
    2. ' roots' → logprob: -11.250014305114746
    3. 'root' → logprob: -14.625014305114746
    4. '(' → logprob: -15.375014305114746
    5. 'ro' → logprob: -16.25001335144043
    6. ')' → logprob: -16.62501335144043
    7. '   ' → logprob: -17.37501335144043
    8. '[' → logprob: -17.75001335144043
    9. '_ro' → logprob: -17.87501335144043
    10. 'roads' → logprob: -18.62501335144043

Token 231: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005296246614307165
    2. ')' → logprob: -5.255296230316162
    3. ')
' → logprob: -10.75529670715332
    4. '   ' → logprob: -11.00529670715332
    5. ' )
' → logprob: -11.25529670715332
    6. ')+' → logprob: -11.88029670715332
    7. ')

' → logprob: -12.75529670715332
    8. '
' → logprob: -14.38029670715332
    9. 'def' → logprob: -15.63029670715332
    10. '))
' → logprob: -16.00529670715332

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17194828391075134
    2. 'par' → logprob: -1.9219483137130737
    3. 'if' → logprob: -5.421948432922363
    4. ' if' → logprob: -5.671948432922363
    5. ' par' → logprob: -5.796948432922363
    6. '
' → logprob: -7.296948432922363
    7. '	par' → logprob: -10.546948432922363
    8. '(par' → logprob: -11.171948432922363
    9. '    
' → logprob: -11.546948432922363
    10. '_par' → logprob: -12.296948432922363

Token 233: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' (adapté à ' par') → logprob: -0.0800756961107254
    2. 'if' → logprob: -2.955075740814209
    3. '   ' → logprob: -3.705075740814209
    4. ' if' → logprob: -9.08007526397705
    5. ' par' → logprob: -9.33007526397705
    6. 'def' → logprob: -10.20507526397705
    7. '
' → logprob: -10.58007526397705
    8. 'for' → logprob: -12.33007526397705
    9. '	par' → logprob: -12.58007526397705
    10. '    
' → logprob: -13.58007526397705

Token 234: '[max' (ID: 84690)
  Prédit: '[max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[max' → logprob: -0.0005955664673820138
    2. '[min' → logprob: -8.500595092773438
    3. '.setdefault' → logprob: -8.625595092773438
    4. '[' → logprob: -9.125595092773438
    5. '.__' → logprob: -9.250595092773438
    6. '.update' → logprob: -13.125595092773438
    7. '```' → logprob: -13.250595092773438
    8. '   ' → logprob: -14.375595092773438
    9. '__[' → logprob: -14.375595092773438
    10. '\[' → logprob: -14.750595092773438

Token 235: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -9.555654105497524e-05
    2. 'root' → logprob: -9.37509536743164
    3. '[root' → logprob: -12.50009536743164
    4. ')_' → logprob: -13.00009536743164
    5. ']_' → logprob: -13.25009536743164
    6. '(root' → logprob: -14.00009536743164
    7. ' root' → logprob: -14.50009536743164
    8. '_ro' → logprob: -14.87509536743164
    9. '```' → logprob: -15.00009536743164
    10. '   ' → logprob: -15.87509536743164

Token 236: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002260283101350069
    2. '=' → logprob: -7.127260208129883
    3. ']=' → logprob: -7.377260208129883
    4. ' ]' → logprob: -7.877260208129883
    5. ' =' → logprob: -7.877260208129883
    6. ')' → logprob: -9.627260208129883
    7. '[' → logprob: -13.002260208129883
    8. ' ' → logprob: -14.002260208129883
    9. ' )' → logprob: -14.377260208129883
    10. '])' → logprob: -14.752260208129883

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575939953327179
    2. ' =' → logprob: -0.825939953327179
    3. '[' → logprob: -15.950940132141113
    4. '=min' → logprob: -15.950940132141113
    5. ']' → logprob: -16.325939178466797
    6. ')' → logprob: -17.075939178466797
    7. ' ' → logprob: -17.450939178466797
    8. '＝' → logprob: -17.575939178466797
    9. '.=' → logprob: -17.825939178466797
    10. ']=' → logprob: -17.825939178466797

Token 238: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.7610454708337784e-05
    2. ' min' → logprob: -10.500027656555176
    3. '	min' → logprob: -19.50002670288086
    4. '[min' → logprob: -19.75002670288086
    5. 'mini' → logprob: -20.75002670288086
    6. '(min' → logprob: -20.75002670288086
    7. 'max' → logprob: -20.75002670288086
    8. '=min' → logprob: -21.12502670288086
    9. '   ' → logprob: -21.37502670288086
    10. '
' → logprob: -22.37502670288086

Token 239: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.0001454955490771681
    2. 'root' → logprob: -8.87514591217041
    3. '_ro' → logprob: -12.50014591217041
    4. '_' → logprob: -14.37514591217041
    5. '(root' → logprob: -15.25014591217041
    6. '(_' → logprob: -15.62514591217041
    7. ' _' → logprob: -15.62514591217041
    8. ' root' → logprob: -16.125144958496094
    9. 'max' → logprob: -16.250144958496094
    10. '```' → logprob: -16.250144958496094

Token 240: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1774158924818039
    2. 'res' → logprob: -3.0524158477783203
    3. 'q' → logprob: -3.1774158477783203
    4. 'k' → logprob: -3.8024158477783203
    5. 'def' → logprob: -4.55241584777832
    6. 'result' → logprob: -4.80241584777832
    7. 'count' → logprob: -5.55241584777832
    8. 'answer' → logprob: -5.67741584777832
    9. 'pairs' → logprob: -5.92741584777832
    10. 'ans' → logprob: -6.17741584777832

Token 242: ' Map' (ID: 7343)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010535882785916328
    2. 'res' → logprob: -6.385535717010498
    3. 'result' → logprob: -6.385535717010498
    4. 'k' → logprob: -7.135535717010498
    5. 'ans' → logprob: -7.385535717010498
    6. 'count' → logprob: -7.510535717010498
    7. 'pairs' → logprob: -7.510535717010498
    8. 'edges' → logprob: -7.635535717010498
    9. 'i' → logprob: -7.635535717010498
    10. 'q' → logprob: -7.760535717010498

Token 243: ' +' (ID: 659)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.619144320487976
    2. '(' → logprob: -2.1191444396972656
    3. 'def' → logprob: -2.1191444396972656
    4. '_' → logprob: -2.2441444396972656
    5. 'ls' → logprob: -2.8691444396972656
    6. ' =' → logprob: -2.8691444396972656
    7. 'for' → logprob: -2.9941444396972656
    8. '(p' → logprob: -3.1191444396972656
    9. 'pn' → logprob: -3.8691444396972656
    10. '=' → logprob: -3.9941444396972656

Token 244: ' st' (ID: 420)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.1899523138999939
    2. '(lambda' → logprob: -3.1899523735046387
    3. 'chain' → logprob: -3.3149523735046387
    4. ' filter' → logprob: -4.064952373504639
    5. 'lambda' → logprob: -4.064952373504639
    6. 'reduce' → logprob: -4.189952373504639
    7. '(filter' → logprob: -4.939952373504639
    8. 'for' → logprob: -5.314952373504639
    9. 'st' → logprob: -5.564952373504639
    10. ' chain' → logprob: -5.564952373504639

Token 245: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.0010713927913457155
    2. 'map' → logprob: -7.001071453094482
    3. 'r' → logprob: -9.501070976257324
    4. 'ar' → logprob: -10.626070976257324
    5. 'art' → logprob: -11.501070976257324
    6. 'rm' → logprob: -11.626070976257324
    7. 'arp' → logprob: -11.751070976257324
    8. 'ermap' → logprob: -12.126070976257324
    9. 'ring' → logprob: -12.376070976257324
    10. '(map' → logprob: -12.501070976257324

Token 246: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.00011915886716451496
    2. 'map' → logprob: -9.87511920928955
    3. '   ' → logprob: -11.12511920928955
    4. 'at' → logprob: -11.37511920928955
    5. 'a' → logprob: -11.75011920928955
    6. 'app' → logprob: -12.00011920928955
    7. 'ar' → logprob: -12.12511920928955
    8. 'def' → logprob: -13.12511920928955
    9. 'ax' → logprob: -13.62511920928955
    10. 'p' → logprob: -13.62511920928955

Token 247: ' +' (ID: 659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.053804636001587
    2. 'for' → logprob: -1.553804636001587
    3. 'un' → logprob: -2.178804636001587
    4. ',' → logprob: -3.428804636001587
    5. '=' → logprob: -3.553804636001587
    6. ' =' → logprob: -3.678804636001587
    7. 'ls' → logprob: -4.053804397583008
    8. '(lambda' → logprob: -4.178804397583008
    9. '#' → logprob: -4.428804397583008
    10. ' for' → logprob: -4.428804397583008

Token 248: ' lambda' (ID: 27871)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filter' → logprob: -0.22102715075016022
    2. 'zip' → logprob: -1.971027135848999
    3. 'chain' → logprob: -3.471027135848999
    4. 'reduce' → logprob: -4.971027374267578
    5. 'group' → logprob: -5.096027374267578
    6. 'st' → logprob: -5.971027374267578
    7. 'enumer' → logprob: -6.221027374267578
    8. ' filter' → logprob: -6.596027374267578
    9. 'map' → logprob: -6.721027374267578
    10. 'lambda' → logprob: -6.846027374267578

Token 249: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5887033343315125
    2. '_' → logprob: -1.9637033939361572
    3. 'un' → logprob: -2.9637033939361572
    4. ' for' → logprob: -3.0887033939361572
    5. 'def' → logprob: -3.0887033939361572
    6. 'res' → logprob: -3.8387033939361572
    7. 'list' → logprob: -4.463703155517578
    8. '_=' → logprob: -4.463703155517578
    9. 'result' → logprob: -4.838703155517578
    10. 'ls' → logprob: -4.838703155517578

Token 250: ' traiter' (ID: 105852)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3578680753707886
    2. '_' → logprob: -1.3578680753707886
    3. 'lambda' → logprob: -3.982868194580078
    4. '_un' → logprob: -4.607868194580078
    5. 'i' → logprob: -5.107868194580078
    6. '(lambda' → logprob: -5.107868194580078
    7. 'combine' → logprob: -6.732868194580078
    8. ' un' → logprob: -7.857868194580078
    9. '_lambda' → logprob: -8.482868194580078
    10. ' lambda' → logprob: -8.732868194580078

Token 251: ' chaque' (ID: 21194)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.055428385734558
    2. '(un' → logprob: -1.180428385734558
    3. '(lambda' → logprob: -2.0554285049438477
    4. 'un' → logprob: -2.5554285049438477
    5. 'range' → logprob: -2.9304285049438477
    6. '(' → logprob: -3.4304285049438477
    7. '(st' → logprob: -4.180428504943848
    8. '(zip' → logprob: -5.305428504943848
    9. 'enumer' → logprob: -5.305428504943848
    10. '(en' → logprob: -5.555428504943848

Token 252: ' entrée' (ID: 95590)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.8903888463973999
    2. '_' → logprob: -1.8903888463974
    3. 'range' → logprob: -2.7653889656066895
    4. 'pair' → logprob: -2.7653889656066895
    5. 'i' → logprob: -3.0153889656066895
    6. '(i' → logprob: -3.3903889656066895
    7. ' pair' → logprob: -3.5153889656066895
    8. '(_,' → logprob: -3.8903889656066895
    9. ' unite' → logprob: -3.8903889656066895
    10. ' i' → logprob: -4.1403889656066895

Token 253: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029274797067046165
    2. ' for' → logprob: -4.779274940490723
    3. '_' → logprob: -4.904274940490723
    4. '
' → logprob: -5.529274940490723
    5. 'range' → logprob: -6.029274940490723
    6. '_
' → logprob: -6.529274940490723
    7. 'input' → logprob: -7.154274940490723
    8. '(range' → logprob: -7.279274940490723
    9. '```' → logprob: -7.404274940490723
    10. 'inputs' → logprob: -7.779274940490723

Token 254: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013335284776985645
    2. '_' → logprob: -5.013335227966309
    3. '[' → logprob: -6.138335227966309
    4. 'list' → logprob: -6.638335227966309
    5. 'def' → logprob: -7.013335227966309
    6. 'un' → logprob: -7.763335227966309
    7. 'pairs' → logprob: -7.888335227966309
    8. 'result' → logprob: -8.513335227966309
    9. 'results' → logprob: -8.763335227966309
    10. '[(' → logprob: -8.763335227966309

Token 255: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0005471954355016351
    2. '(map' → logprob: -8.000547409057617
    3. '(' → logprob: -8.750547409057617
    4. '(chain' → logprob: -10.500547409057617
    5. '(
' → logprob: -10.875547409057617
    6. 'st' → logprob: -13.375547409057617
    7. '((' → logprob: -13.875547409057617
    8. '(filter' → logprob: -14.125547409057617
    9. '=' → logprob: -14.250547409057617
    10. '(it' → logprob: -14.625547409057617

Token 256: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -6.468279752880335e-05
    2. 'map' → logprob: -9.750064849853516
    3. 'ar' → logprob: -12.250064849853516
    4. 'r' → logprob: -14.250064849853516
    5. 'am' → logprob: -15.250064849853516
    6. 'arp' → logprob: -15.375064849853516
    7. '(map' → logprob: -16.375064849853516
    8. 'st' → logprob: -16.750064849853516
    9. 'ap' → logprob: -17.125064849853516
    10. 'ram' → logprob: -17.250064849853516

Token 257: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.009759752079844475
    2. 'map' → logprob: -4.634759902954102
    3. '_map' → logprob: -14.259759902954102
    4. '   ' → logprob: -14.384759902954102
    5. 'app' → logprob: -14.509759902954102
    6. ' map' → logprob: -15.009759902954102
    7. 'am' → logprob: -15.009759902954102
    8. '(map' → logprob: -15.759759902954102
    9. '```' → logprob: -15.759759902954102
    10. 'apply' → logprob: -16.1347599029541

Token 258: '(lambda' (ID: 43341)
  Prédit: '(un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(un' → logprob: -0.05122463405132294
    2. '(lambda' → logprob: -3.051224708557129
    3. '(' → logprob: -6.176224708557129
    4. '(
' → logprob: -8.676224708557129
    5. '((' → logprob: -9.051224708557129
    6. '   ' → logprob: -9.051224708557129
    7. ' (' → logprob: -9.551224708557129
    8. 'un' → logprob: -11.176224708557129
    9. ')' → logprob: -11.426224708557129
    10. '(unit' → logprob: -11.676224708557129

Token 259: ' a' (ID: 261)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.17600609362125397
    2. 'lambda' → logprob: -3.1760060787200928
    3. ' lambda' → logprob: -3.3010060787200928
    4. ' un' → logprob: -3.9260060787200928
    5. ' unite' → logprob: -4.176006317138672
    6. '(lambda' → logprob: -4.676006317138672
    7. '   ' → logprob: -4.801006317138672
    8. '_,' → logprob: -5.051006317138672
    9. 'x' → logprob: -5.551006317138672
    10. 'a' → logprob: -5.551006317138672

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008823268115520477
    2. ',a' → logprob: -5.508823394775391
    3. ',x' → logprob: -6.383823394775391
    4. ',b' → logprob: -6.758823394775391
    5. ' ,' → logprob: -6.883823394775391
    6. ',y' → logprob: -8.13382339477539
    7. 'a' → logprob: -8.50882339477539
    8. ',n' → logprob: -9.25882339477539
    9. 'x' → logprob: -9.38382339477539
    10. ',
' → logprob: -10.38382339477539

Token 261: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002537104592192918
    2. ' b' → logprob: -8.375253677368164
    3. '   ' → logprob: -11.875253677368164
    4. 'a' → logprob: -12.250253677368164
    5. ' ' → logprob: -12.750253677368164
    6. '  ' → logprob: -13.750253677368164
    7. 'x' → logprob: -14.250253677368164
    8. 'p' → logprob: -14.375253677368164
    9. '_b' → logprob: -14.375253677368164
    10. 'v' → logprob: -14.500253677368164

Token 262: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03247635439038277
    2. ' :' → logprob: -3.9074764251708984
    3. ',' → logprob: -4.532476425170898
    4. '   ' → logprob: -7.282476425170898
    5. '=' → logprob: -9.282476425170898
    6. ' ,' → logprob: -9.532476425170898
    7. ' ' → logprob: -10.157476425170898
    8. '  ' → logprob: -10.407476425170898
    9. '    ' → logprob: -10.657476425170898
    10. '       ' → logprob: -10.907476425170898

Token 263: ' unite' (ID: 96146)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.28314274549484253
    2. ' unite' → logprob: -1.4081428050994873
    3. '   ' → logprob: -7.283142566680908
    4. ' un' → logprob: -7.533142566680908
    5. ' unify' → logprob: -8.533143043518066
    6. '(un' → logprob: -8.533143043518066
    7. ' ' → logprob: -8.783143043518066
    8. '  ' → logprob: -9.408143043518066
    9. '	un' → logprob: -10.533143043518066
    10. '    ' → logprob: -10.908143043518066

Token 264: '(ls' (ID: 128476)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00013357517309486866
    2. '(' → logprob: -9.250133514404297
    3. ',' → logprob: -11.375133514404297
    4. 'a' → logprob: -11.500133514404297
    5. ' (' → logprob: -11.500133514404297
    6. ',a' → logprob: -13.375133514404297
    7. ' a' → logprob: -13.750133514404297
    8. '(
' → logprob: -13.875133514404297
    9. '(*' → logprob: -14.500133514404297
    10. ')' → logprob: -14.625133514404297

Token 265: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.014134476892650127
    2. '(a' → logprob: -4.389134407043457
    3. '[b' → logprob: -7.264134407043457
    4. '[' → logprob: -7.764134407043457
    5. 'a' → logprob: -8.264134407043457
    6. ',' → logprob: -9.264134407043457
    7. '[n' → logprob: -10.264134407043457
    8. ',a' → logprob: -10.514134407043457
    9. '```' → logprob: -11.514134407043457
    10. '(' → logprob: -11.889134407043457

Token 266: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.17662031948566437
    2. '[b' → logprob: -1.926620364189148
    3. '[a' → logprob: -4.4266204833984375
    4. '+' → logprob: -6.8016204833984375
    5. '[' → logprob: -7.0516204833984375
    6. 'b' → logprob: -7.6766204833984375
    7. '+b' → logprob: -7.9266204833984375
    8. ',' → logprob: -8.051620483398438
    9. ']' → logprob: -8.176620483398438
    10. ']+' → logprob: -8.301620483398438

Token 267: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.2858574390411377
    2. 'b' → logprob: -1.4108574390411377
    3. ' ls' → logprob: -6.035857200622559
    4. ' b' → logprob: -7.035857200622559
    5. 'bs' → logprob: -7.535857200622559
    6. 'lb' → logprob: -8.410857200622559
    7. '   ' → logprob: -8.660857200622559
    8. ' ' → logprob: -9.035857200622559
    9. 'a' → logprob: -9.160857200622559
    10. '  ' → logprob: -9.535857200622559

Token 268: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.03709713742136955
    2. 'b' → logprob: -3.537097215652466
    3. '[a' → logprob: -5.037096977233887
    4. '[' → logprob: -8.537096977233887
    5. 'a' → logprob: -8.662096977233887
    6. '[n' → logprob: -8.912096977233887
    7. ',b' → logprob: -9.662096977233887
    8. ',' → logprob: -10.037096977233887
    9. '   ' → logprob: -10.037096977233887
    10. '(b' → logprob: -10.412096977233887

Token 269: ']),
' (ID: 34147)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0028803572058677673
    2. '],' → logprob: -6.252880573272705
    3. ',' → logprob: -8.002880096435547
    4. '   ' → logprob: -8.627880096435547
    5. ']),' → logprob: -8.752880096435547
    6. ')' → logprob: -9.627880096435547
    7. ' ),' → logprob: -9.627880096435547
    8. ' ' → logprob: -9.877880096435547
    9. ')),' → logprob: -10.252880096435547
    10. ')],' → logprob: -10.877880096435547

Token 270: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.519766092300415
    2. '(iter' → logprob: -1.394766092300415
    3. '(st' → logprob: -2.769766092300415
    4. '[(' → logprob: -3.269766092300415
    5. '(chain' → logprob: -3.394766092300415
    6. '(range' → logprob: -5.019765853881836
    7. '((' → logprob: -5.144765853881836
    8. '(map' → logprob: -6.144765853881836
    9. '(' → logprob: -6.269765853881836
    10. '(list' → logprob: -6.894765853881836

Token 271: ' (' (ID: 350)
  Prédit: '(iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(iter' → logprob: -1.1884323358535767
    2. '[' → logprob: -1.3134323358535767
    3. '(st' → logprob: -1.3134323358535767
    4. '(chain' → logprob: -2.188432216644287
    5. '[(' → logprob: -4.438432216644287
    6. '(range' → logprob: -4.688432216644287
    7. '((' → logprob: -5.313432216644287
    8. '(map' → logprob: -5.313432216644287
    9. '(filter' → logprob: -6.188432216644287
    10. '(re' → logprob: -6.688432216644287

Token 272: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4740276038646698
    2. 'tuple' → logprob: -1.8490276336669922
    3. '(map' → logprob: -2.099027633666992
    4. '(tuple' → logprob: -3.349027633666992
    5. '(zip' → logprob: -4.099027633666992
    6. 'enumer' → logprob: -4.349027633666992
    7. 'zip' → logprob: -4.474027633666992
    8. ' (' → logprob: -5.849027633666992
    9. '   ' → logprob: -5.974027633666992
    10. '(' → logprob: -6.349027633666992

Token 273: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.12555019557476044
    2. '(tuple' → logprob: -2.7505502700805664
    3. '(int' → logprob: -3.6255502700805664
    4. '(item' → logprob: -4.125550270080566
    5. 'lambda' → logprob: -5.250550270080566
    6. 'tuple' → logprob: -5.875550270080566
    7. 'item' → logprob: -6.625550270080566
    8. '   ' → logprob: -6.625550270080566
    9. '(' → logprob: -8.500550270080566
    10. '(None' → logprob: -9.250550270080566

Token 274: ' t' (ID: 260)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.19468148052692413
    2. 'int' → logprob: -2.319681406021118
    3. 'tuple' → logprob: -3.444681406021118
    4. 'item' → logprob: -3.944681406021118
    5. '   ' → logprob: -4.319681644439697
    6. '(lambda' → logprob: -4.944681644439697
    7. ' lambda' → logprob: -5.569681644439697
    8. '(int' → logprob: -6.819681644439697
    9. ' int' → logprob: -7.569681644439697
    10. ' ' → logprob: -7.819681644439697

Token 275: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008412681519985199
    2. ':int' → logprob: -5.258412837982178
    3. ' :' → logprob: -6.008412837982178
    4. ',' → logprob: -8.88341236114502
    5. 'uple' → logprob: -8.88341236114502
    6. 'int' → logprob: -9.25841236114502
    7. 'lambda' → logprob: -9.38341236114502
    8. ':
' → logprob: -10.00841236114502
    9. '   ' → logprob: -10.25841236114502
    10. 'tuple' → logprob: -10.50841236114502

Token 276: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.006975602358579636
    2. 'lambda' → logprob: -5.3819756507873535
    3. ' tuple' → logprob: -6.2569756507873535
    4. '(tuple' → logprob: -8.506975173950195
    5. '(lambda' → logprob: -9.381975173950195
    6. 'map' → logprob: -9.631975173950195
    7. 'int' → logprob: -10.006975173950195
    8. '   ' → logprob: -11.006975173950195
    9. ' lambda' → logprob: -11.631975173950195
    10. 'input' → logprob: -12.381975173950195

Token 277: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.015470296144485474
    2. '(input' → logprob: -4.390470504760742
    3. '(int' → logprob: -6.015470504760742
    4. '(t' → logprob: -8.015470504760742
    5. '(' → logprob: -9.515470504760742
    6. '(sorted' → logprob: -9.890470504760742
    7. 'map' → logprob: -10.890470504760742
    8. 'input' → logprob: -11.265470504760742
    9. '((' → logprob: -11.765470504760742
    10. '(tuple' → logprob: -12.390470504760742

Token 278: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009264685213565826
    2. 'int' → logprob: -7.000926494598389
    3. '(lambda' → logprob: -12.00092601776123
    4. '   ' → logprob: -12.75092601776123
    5. '[int' → logprob: -13.12592601776123
    6. '(' → logprob: -14.12592601776123
    7. '(str' → logprob: -14.50092601776123
    8. '(input' → logprob: -14.62592601776123
    9. '<int' → logprob: -14.87592601776123
    10. '(
' → logprob: -14.87592601776123

Token 279: ' x' (ID: 1215)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002471732208505273
    2. ' int' → logprob: -6.627471923828125
    3. '(int' → logprob: -6.877471923828125
    4. '   ' → logprob: -9.752471923828125
    5. 'x' → logprob: -11.627471923828125
    6. ' ' → logprob: -11.752471923828125
    7. 'str' → logprob: -12.127471923828125
    8. '	int' → logprob: -12.377471923828125
    9. '
' → logprob: -12.502471923828125
    10. 't' → logprob: -12.502471923828125

Token 280: ':int' (ID: 30362)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8613154292106628
    2. ':int' → logprob: -0.9863154292106628
    3. 'int' → logprob: -1.8613154888153076
    4. '(int' → logprob: -3.1113154888153076
    5. ',int' → logprob: -6.6113152503967285
    6. '=int' → logprob: -7.2363152503967285
    7. '[int' → logprob: -7.3613152503967285
    8. '   ' → logprob: -7.6113152503967285
    9. ',' → logprob: -7.9863152503967285
    10. 't' → logprob: -8.111315727233887

Token 281: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006507210782729089
    2. 'x' → logprob: -7.500650882720947
    3. '(' → logprob: -9.625650405883789
    4. '(input' → logprob: -11.375650405883789
    5. 'input' → logprob: -12.250650405883789
    6. ',' → logprob: -12.375650405883789
    7. ' (' → logprob: -12.750650405883789
    8. '   ' → logprob: -13.375650405883789
    9. '(
' → logprob: -13.375650405883789
    10. ' ' → logprob: -13.625650405883789

Token 282: ')-' (ID: 14080)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2498835325241089
    2. 'input' → logprob: -2.8748836517333984
    3. ',input' → logprob: -2.8748836517333984
    4. '.split' → logprob: -2.9998836517333984
    5. '(),' → logprob: -4.124883651733398
    6. 't' → logprob: -4.499883651733398
    7. ',t' → logprob: -4.499883651733398
    8. '.strip' → logprob: -5.374883651733398
    9. '),' → logprob: -5.874883651733398
    10. ',x' → logprob: -6.249883651733398

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016098834748845547
    2. ' ' → logprob: -8.750161170959473
    3. 't' → logprob: -13.500161170959473
    4. '2' → logprob: -15.000161170959473
    5. 'x' → logprob: -15.500161170959473
    6. '   ' → logprob: -15.625161170959473
    7. '  ' → logprob: -16.375160217285156
    8. ' t' → logprob: -16.750160217285156
    9. 'input' → logprob: -16.750160217285156
    10. '0' → logprob: -17.125160217285156

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013491122052073479
    2. ',input' → logprob: -4.888491153717041
    3. ',t' → logprob: -5.388491153717041
    4. '   ' → logprob: -7.263491153717041
    5. 'input' → logprob: -8.263490676879883
    6. 't' → logprob: -8.888490676879883
    7. '),' → logprob: -9.888490676879883
    8. ' ,' → logprob: -9.888490676879883
    9. ',x' → logprob: -10.513490676879883
    10. '       ' → logprob: -11.388490676879883

Token 285: ' t' (ID: 260)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.021835293620824814
    2. ' input' → logprob: -3.8968353271484375
    3. 't' → logprob: -6.7718353271484375
    4. '   ' → logprob: -9.521835327148438
    5. ' t' → logprob: -9.771835327148438
    6. '(input' → logprob: -12.271835327148438
    7. ' ' → logprob: -13.146835327148438
    8. 'line' → logprob: -13.146835327148438
    9. 'x' → logprob: -13.146835327148438
    10. '       ' → logprob: -13.646835327148438

Token 286: '.split' (ID: 10347)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.742827832698822
    2. 'input' → logprob: -0.867827832698822
    3. ',input' → logprob: -2.492827892303467
    4. ' input' → logprob: -4.242827892303467
    5. '(input' → logprob: -5.617827892303467
    6. '   ' → logprob: -5.867827892303467
    7. ' ,' → logprob: -7.992827892303467
    8. '),' → logprob: -8.742827415466309
    9. '=input' → logprob: -8.742827415466309
    10. ' ' → logprob: -9.992827415466309

Token 287: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7046936750411987
    2. '()),' → logprob: -0.7046936750411987
    3. '())))' → logprob: -5.329693794250488
    4. '()))' → logprob: -6.079693794250488
    5. '())),
' → logprob: -6.454693794250488
    6. '()),
' → logprob: -6.704693794250488
    7. ')),' → logprob: -7.579693794250488
    8. '())))
' → logprob: -8.079693794250488
    9. '()
' → logprob: -8.329693794250488
    10. '('' → logprob: -8.829693794250488

Token 288: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.23897473514080048
    2. '()),' → logprob: -1.613974690437317
    3. '()' → logprob: -5.113974571228027
    4. ')),' → logprob: -5.863974571228027
    5. ')' → logprob: -6.113974571228027
    6. '   ' → logprob: -7.238974571228027
    7. '(),' → logprob: -8.238974571228027
    8. 'input' → logprob: -8.613974571228027
    9. '),
' → logprob: -8.863974571228027
    10. ' ' → logprob: -8.863974571228027

Token 289: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4342588186264038
    2. '   ' → logprob: -1.5592588186264038
    3. '(iter' → logprob: -2.0592589378356934
    4. '(range' → logprob: -2.3092589378356934
    5. '(chain' → logprob: -2.4342589378356934
    6. '(st' → logprob: -2.6842589378356934
    7. ' (' → logprob: -3.1842589378356934
    8. '[input' → logprob: -3.1842589378356934
    9. '(input' → logprob: -3.9342589378356934
    10. 'range' → logprob: -4.684258937835693

Token 290: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21784363687038422
    2. '[input' → logprob: -1.7178436517715454
    3. '(input' → logprob: -4.342843532562256
    4. 'range' → logprob: -7.217843532562256
    5. ' input' → logprob: -7.217843532562256
    6. '   ' → logprob: -7.717843532562256
    7. '[' → logprob: -8.217844009399414
    8. 'chain' → logprob: -8.342844009399414
    9. 'iter' → logprob: -8.467844009399414
    10. '[line' → logprob: -9.217844009399414

Token 291: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016468366084154695
    2. '().' → logprob: -9.125164985656738
    3. 'for' → logprob: -10.000164985656738
    4. '()
' → logprob: -12.625164985656738
    5. '(' → logprob: -13.250164985656738
    6. '())' → logprob: -13.750164985656738
    7. ' ()' → logprob: -13.875164985656738
    8. ')' → logprob: -14.000164985656738
    9. ' for' → logprob: -14.250164985656738
    10. '()))' → logprob: -14.375164985656738

Token 292: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13900235295295715
    2. 'for' → logprob: -2.1390023231506348
    3. ' for' → logprob: -4.889002323150635
    4. '().' → logprob: -5.764002323150635
    5. ')' → logprob: -7.139002323150635
    6. '()))' → logprob: -9.139002799987793
    7. '()
' → logprob: -9.139002799987793
    8. ')))' → logprob: -10.014002799987793
    9. '   ' → logprob: -10.139002799987793
    10. '))' → logprob: -10.264002799987793

Token 293: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1828801929950714
    2. 'range' → logprob: -2.432880163192749
    3. ' range' → logprob: -2.682880163192749
    4. '_m' → logprob: -5.432880401611328
    5. 'm' → logprob: -5.807880401611328
    6. '_range' → logprob: -6.182880401611328
    7. 'in' → logprob: -7.557880401611328
    8. ' in' → logprob: -8.307880401611328
    9. '_in' → logprob: -8.557880401611328
    10. ' _' → logprob: -9.307880401611328

Token 294: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15693989396095276
    2. 'in' → logprob: -2.15693998336792
    3. '_' → logprob: -3.90693998336792
    4. 'range' → logprob: -5.53193998336792
    5. ' range' → logprob: -5.78193998336792
    6. 'm' → logprob: -6.15693998336792
    7. '_in' → logprob: -9.281939506530762
    8. '_m' → logprob: -9.531939506530762
    9. '_range' → logprob: -10.156939506530762
    10. '...' → logprob: -11.031939506530762

Token 295: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01853278838098049
    2. ' range' → logprob: -4.018532752990723
    3. 'count' → logprob: -8.018532752990723
    4. '   ' → logprob: -10.643532752990723
    5. ' ' → logprob: -11.893532752990723
    6. '	range' → logprob: -12.018532752990723
    7. '(range' → logprob: -12.518532752990723
    8. '    ' → logprob: -12.518532752990723
    9. '  ' → logprob: -12.893532752990723
    10. '_' → logprob: -13.393532752990723

Token 296: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0708874836564064
    2. 'm' → logprob: -2.695887565612793
    3. '   ' → logprob: -7.820887565612793
    4. ' m' → logprob: -8.320887565612793
    5. '	m' → logprob: -9.195887565612793
    6. ' (' → logprob: -9.695887565612793
    7. '(' → logprob: -10.570887565612793
    8. '       ' → logprob: -10.695887565612793
    9. '           ' → logprob: -11.070887565612793
    10. '    ' → logprob: -11.195887565612793

Token 297: '))))
' (ID: 55084)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6168844699859619
    2. '))))' → logprob: -0.9918844699859619
    3. ')))' → logprob: -2.491884469985962
    4. ')))))
' → logprob: -5.116884231567383
    5. ')))),' → logprob: -7.991884231567383
    6. ')))));
' → logprob: -8.866884231567383
    7. '))))
' → logprob: -9.241884231567383
    8. ')))
' → logprob: -9.991884231567383
    9. ')' → logprob: -10.241884231567383
    10. '))),' → logprob: -10.866884231567383

Token 298: '))

' (ID: 9746)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.014875131659209728
    2. '))' → logprob: -4.5148749351501465
    3. '))))' → logprob: -5.6398749351501465
    4. '   ' → logprob: -9.014875411987305
    5. ')' → logprob: -9.389875411987305
    6. ')))
' → logprob: -10.264875411987305
    7. ')));' → logprob: -10.889875411987305
    8. ' ' → logprob: -13.014875411987305
    9. '))
' → logprob: -13.639875411987305
    10. '))))
' → logprob: -13.764875411987305

Token 299: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21955977380275726
    2. 'for' → logprob: -2.219559669494629
    3. ')' → logprob: -3.969559669494629
    4. 'result' → logprob: -3.969559669494629
    5. 'count' → logprob: -4.594559669494629
    6. '<|end|>' → logprob: -4.969559669494629
    7. 'n' → logprob: -5.219559669494629
    8. '#' → logprob: -5.344559669494629
    9. 'par' → logprob: -5.344559669494629
    10. 'i' → logprob: -6.344559669494629

Token 300: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1612858772277832
    2. '=' → logprob: -1.9112858772277832
    3. 's' → logprob: -6.911285877227783
    4. 'es' → logprob: -10.661285400390625
    5. '=[]' → logprob: -11.286285400390625
    6. '=[' → logprob: -11.661285400390625
    7. ',' → logprob: -12.536285400390625
    8. ' =[' → logprob: -13.036285400390625
    9. '[:]' → logprob: -13.411285400390625
    10. '_' → logprob: -13.661285400390625

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2529248893260956
    2. '=' → logprob: -1.502924919128418
    3. '=[' → logprob: -8.002924919128418
    4. '=[]' → logprob: -8.002924919128418
    5. 's' → logprob: -9.502924919128418
    6. ',' → logprob: -9.627924919128418
    7. '=[]
' → logprob: -11.002924919128418
    8. '=list' → logprob: -11.252924919128418
    9. '=[[' → logprob: -11.502924919128418
    10. '=len' → logprob: -11.502924919128418

Token 302: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.24398504197597504
    2. 'len' → logprob: -2.4939849376678467
    3. 'max' → logprob: -2.9939849376678467
    4. 'list' → logprob: -3.7439849376678467
    5. ' sum' → logprob: -4.118985176086426
    6. '0' → logprob: -4.743985176086426
    7. 'reduce' → logprob: -4.868985176086426
    8. 'n' → logprob: -5.243985176086426
    9. '[' → logprob: -5.493985176086426
    10. 'sorted' → logprob: -5.993985176086426

Token 303: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6849970817565918
    2. '(par' → logprob: -0.8099970817565918
    3. '(map' → logprob: -4.184997081756592
    4. '(x' → logprob: -4.559997081756592
    5. '(find' → logprob: -4.809997081756592
    6. '((' → logprob: -5.184997081756592
    7. '(p' → logprob: -5.434997081756592
    8. '(i' → logprob: -6.184997081756592
    9. '(a' → logprob: -6.809997081756592
    10. '(int' → logprob: -7.184997081756592

Token 304: '   ' (ID: 271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5275257229804993
    2. 'par' → logprob: -1.9025256633758545
    3. 'find' → logprob: -2.0275256633758545
    4. 'i' → logprob: -3.5275256633758545
    5. '(' → logprob: -3.6525256633758545
    6. 'ls' → logprob: -4.277525901794434
    7. 'int' → logprob: -4.527525901794434
    8. '(par' → logprob: -4.527525901794434
    9. 'all' → logprob: -4.902525901794434
    10. 'x' → logprob: -4.902525901794434

Token 305: ' map' (ID: 4014)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3051739037036896
    2. 'find' → logprob: -2.055173873901367
    3. 'par' → logprob: -2.305173873901367
    4. '(' → logprob: -4.680173873901367
    5. 'int' → logprob: -4.805173873901367
    6. 'i' → logprob: -5.180173873901367
    7. '(par' → logprob: -5.555173873901367
    8. 'ls' → logprob: -6.555173873901367
    9. 'x' → logprob: -6.555173873901367
    10. 'all' → logprob: -6.680173873901367

Token 306: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.015572181902825832
    2. '(
' → logprob: -5.1405720710754395
    3. '(' → logprob: -5.2655720710754395
    4. '(find' → logprob: -5.8905720710754395
    5. 'lambda' → logprob: -7.2655720710754395
    6. '(int' → logprob: -7.7655720710754395
    7. '   ' → logprob: -7.8905720710754395
    8. 'find' → logprob: -9.140572547912598
    9. 'int' → logprob: -10.890572547912598
    10. '(None' → logprob: -11.390572547912598

Token 307: ' i' (ID: 575)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4799093008041382
    2. 'i' → logprob: -1.8549093008041382
    3. ' lambda' → logprob: -2.4799094200134277
    4. 'x' → logprob: -2.8549094200134277
    5. ' x' → logprob: -3.4799094200134277
    6. ' i' → logprob: -3.7299094200134277
    7. 'a' → logprob: -4.104909420013428
    8. '   ' → logprob: -4.979909420013428
    9. ' a' → logprob: -6.104909420013428
    10. '(lambda' → logprob: -6.229909420013428

Token 308: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029813438653945923
    2. ',' → logprob: -3.654813528060913
    3. '   ' → logprob: -6.154813289642334
    4. ' :' → logprob: -7.279813289642334
    5. 'lambda' → logprob: -8.654813766479492
    6. ':
' → logprob: -9.154813766479492
    7. 'i' → logprob: -9.404813766479492
    8. ',i' → logprob: -9.654813766479492
    9. ',
' → logprob: -9.779813766479492
    10. ' i' → logprob: -9.904813766479492

Token 309: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.17610865831375122
    2. 'par' → logprob: -2.3011085987091064
    3. '1' → logprob: -3.3011085987091064
    4. 'i' → logprob: -4.5511088371276855
    5. ' find' → logprob: -5.1761088371276855
    6. 'int' → logprob: -5.8011088371276855
    7. '   ' → logprob: -6.4261088371276855
    8. ' ' → logprob: -6.8011088371276855
    9. ' par' → logprob: -7.3011088371276855
    10. ' i' → logprob: -7.6761088371276855

Token 310: '(ls' (ID: 128476)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001960393972694874
    2. '(ls' → logprob: -6.376960277557373
    3. '(' → logprob: -8.626960754394531
    4. ',' → logprob: -11.376960754394531
    5. '(l' → logprob: -11.501960754394531
    6. '(p' → logprob: -11.751960754394531
    7. ' (' → logprob: -11.876960754394531
    8. ')(' → logprob: -11.876960754394531
    9. '(
' → logprob: -11.876960754394531
    10. '((' → logprob: -12.126960754394531

Token 311: '[p' (ID: 23234)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.515961285913363e-05
    2. '[i' → logprob: -10.750064849853516
    3. '(' → logprob: -11.125064849853516
    4. ')(' → logprob: -11.250064849853516
    5. '),' → logprob: -12.375064849853516
    6. ',' → logprob: -13.250064849853516
    7. ' (' → logprob: -13.250064849853516
    8. ')' → logprob: -13.250064849853516
    9. ',i' → logprob: -13.500064849853516
    10. '(
' → logprob: -13.750064849853516

Token 312: 'n' (ID: 77)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00772941904142499
    2. 'i' → logprob: -4.882729530334473
    3. '(i' → logprob: -10.382729530334473
    4. 'n' → logprob: -10.507729530334473
    5. '[' → logprob: -11.132729530334473
    6. '[n' → logprob: -11.382729530334473
    7. '
' → logprob: -11.632729530334473
    8. ']' → logprob: -11.882729530334473
    9. ' i' → logprob: -12.007729530334473
    10. ')' → logprob: -13.007729530334473

Token 313: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003688245196826756
    2. '(i' → logprob: -8.12536907196045
    3. 'i' → logprob: -11.25036907196045
    4. '[' → logprob: -11.37536907196045
    5. ']' → logprob: -11.75036907196045
    6. '][' → logprob: -11.87536907196045
    7. '[p' → logprob: -12.25036907196045
    8. '])' → logprob: -12.37536907196045
    9. '[n' → logprob: -12.75036907196045
    10. ']),' → logprob: -13.12536907196045

Token 314: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.22321797907352448
    2. '[i' → logprob: -1.7232179641723633
    3. ']))' → logprob: -4.723217964172363
    4. '])[' → logprob: -5.223217964172363
    5. ']),' → logprob: -6.223217964172363
    6. '(i' → logprob: -7.223217964172363
    7. '])+' → logprob: -7.223217964172363
    8. 'i' → logprob: -7.598217964172363
    9. '])]' → logprob: -7.598217964172363
    10. ']' → logprob: -7.723217964172363

Token 315: ' ==' (ID: 951)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07692383229732513
    2. ',' → logprob: -2.7019238471984863
    3. '   ' → logprob: -6.076923847198486
    4. '(' → logprob: -6.701923847198486
    5. ')' → logprob: -6.951923847198486
    6. ',i' → logprob: -6.951923847198486
    7. '==' → logprob: -7.701923847198486
    8. ',
' → logprob: -8.076923370361328
    9. '),' → logprob: -8.576923370361328
    10. '[i' → logprob: -9.201923370361328

Token 316: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.010682274587452412
    2. ' find' → logprob: -4.635682106018066
    3. 'i' → logprob: -7.760682106018066
    4. '   ' → logprob: -8.010682106018066
    5. ' i' → logprob: -10.260682106018066
    6. 'par' → logprob: -10.635682106018066
    7. '  ' → logprob: -10.885682106018066
    8. '    ' → logprob: -11.010682106018066
    9. '
' → logprob: -11.135682106018066
    10. '
' → logprob: -11.385682106018066

Token 317: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -0.11466248333454132
    2. '(i' → logprob: -2.2396624088287354
    3. '(' → logprob: -7.3646626472473145
    4. '(
' → logprob: -8.239662170410156
    5. '(p' → logprob: -8.364662170410156
    6. '   ' → logprob: -8.364662170410156
    7. '(find' → logprob: -8.864662170410156
    8. 'ls' → logprob: -9.739662170410156
    9. '(l' → logprob: -9.864662170410156
    10. '(lst' → logprob: -10.489662170410156

Token 318: '[i' (ID: 1768)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0009955333080142736
    2. '(p' → logprob: -7.250995635986328
    3. '(ls' → logprob: -9.250995635986328
    4. 'i' → logprob: -9.500995635986328
    5. '(' → logprob: -9.750995635986328
    6. '(n' → logprob: -10.750995635986328
    7. '   ' → logprob: -11.750995635986328
    8. ' (' → logprob: -12.375995635986328
    9. '[i' → logprob: -12.750995635986328
    10. '(
' → logprob: -12.875995635986328

Token 319: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.056911978870630264
    2. '),
' → logprob: -2.9319119453430176
    3. '   ' → logprob: -6.806911945343018
    4. ')' → logprob: -7.931911945343018
    5. ' ),' → logprob: -8.306912422180176
    6. ')
' → logprob: -9.681912422180176
    7. ' ' → logprob: -10.056912422180176
    8. '  ' → logprob: -10.431912422180176
    9. '),

' → logprob: -10.431912422180176
    10. '       ' → logprob: -10.931912422180176

Token 320: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14291605353355408
    2. ' range' → logprob: -2.017915964126587
    3. '   ' → logprob: -9.142915725708008
    4. 'indices' → logprob: -9.267915725708008
    5. ' ' → logprob: -10.892915725708008
    6. ' indices' → logprob: -11.892915725708008
    7. '	range' → logprob: -12.392915725708008
    8. '  ' → logprob: -12.642915725708008
    9. ')' → logprob: -13.517915725708008
    10. '(range' → logprob: -13.767915725708008

Token 321: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.029837261885404587
    2. 'n' → logprob: -3.5298373699188232
    3. '(' → logprob: -10.154837608337402
    4. '(
' → logprob: -10.279837608337402
    5. ' n' → logprob: -12.404837608337402
    6. '   ' → logprob: -12.529837608337402
    7. '	n' → logprob: -13.529837608337402
    8. '(len' → logprob: -13.654837608337402
    9. ' (' → logprob: -13.654837608337402
    10. '
' → logprob: -14.154837608337402

Token 322: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13100503385066986
    2. ')' → logprob: -2.131005048751831
    3. ')
' → logprob: -5.631004810333252
    4. '))
' → logprob: -7.881004810333252
    5. ')))' → logprob: -9.25600528717041
    6. '   ' → logprob: -12.38100528717041
    7. '),' → logprob: -13.75600528717041
    8. '));' → logprob: -14.00600528717041
    9. ' ' → logprob: -14.25600528717041
    10. ' ))' → logprob: -14.38100528717041

Token 323: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ')
' → logprob: -11.625014305114746
    3. '))' → logprob: -12.625014305114746
    4. '   ' → logprob: -14.125014305114746
    5. ' )' → logprob: -15.000014305114746
    6. '`)' → logprob: -15.875014305114746
    7. ')`' → logprob: -16.12501335144043
    8. '  ' → logprob: -16.75001335144043
    9. ',)' → logprob: -17.25001335144043
    10. ')

' → logprob: -17.25001335144043

Token 324: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.423219696851447e-05
    2. '
' → logprob: -9.875083923339844
    3. ')' → logprob: -10.625083923339844
    4. ' print' → logprob: -12.375083923339844
    5. ')
' → logprob: -13.000083923339844
    6. '<|end|>' → logprob: -13.875083923339844
    7. '#print' → logprob: -15.250083923339844
    8. 'ans' → logprob: -15.500083923339844
    9. '\n' → logprob: -15.625083923339844
    10. '```' → logprob: -16.375083923339844

Token 325: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0009231308358721435
    2. '(' → logprob: -7.000923156738281
    3. ' (' → logprob: -11.625923156738281
    4. '(len' → logprob: -14.125923156738281
    5. 'ans' → logprob: -14.375923156738281
    6. '(
' → logprob: -14.750923156738281
    7. '('' → logprob: -15.375923156738281
    8. '((' → logprob: -15.500923156738281
    9. '(answer' → logprob: -15.750923156738281
    10. '(int' → logprob: -16.25092315673828

Token 326: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.876193169271573e-05
    2. '(' → logprob: -9.375088691711426
    3. ' ' → logprob: -12.625088691711426
    4. '２' → logprob: -16.000089645385742
    5. '```' → logprob: -16.625089645385742
    6. '۲' → logprob: -16.875089645385742
    7. '_' → logprob: -16.875089645385742
    8. ' (' → logprob: -17.000089645385742
    9. '
' → logprob: -17.125089645385742
    10. ')' → logprob: -17.250089645385742

Token 327: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.490809417096898e-05
    2. '+' → logprob: -11.000055313110352
    3. ' )' → logprob: -11.000055313110352
    4. ')
' → logprob: -12.000055313110352
    5. '
' → logprob: -12.125055313110352
    6. '```' → logprob: -12.125055313110352
    7. '<|end|>' → logprob: -12.875055313110352
    8. '+)' → logprob: -14.625055313110352
    9. '))' → logprob: -15.375055313110352
    10. '`)' → logprob: -16.00005531311035


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 325
Tokens correctement prédits (1ère position, stricte): 131
Tokens correctement prédits (1ère position, avec adaptation): 138
Tokens correctement prédits (top 10): 256
Précision stricte (1ère position): 40.31%
Précision adaptée (1ère position): 42.46%
Précision (top 10): 78.77%
================================================================================
