================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input_list(n):
    """
    Demande à l'utilisateur de saisir n entiers (un par ligne) et retourne ces entiers sous forme de liste.

    Args:
        n (int): Le nombre d'entiers à saisir.

    Returns:
        list of int: La liste des entiers saisis par l'utilisateur.
    """
    input_list = []
    for i in range(n):
        value = int(input())
        input_list.append(value)
    return input_list

def find_two_largest(numbers):
    """
    Trouve les deux plus grandes valeurs distinctes dans une liste d'entiers.

    Args:
        numbers (list of int): La liste des entiers.

    Returns:
        tuple: Un tuple contenant la plus grande valeur et la deuxième plus grande valeur.
    """
    first_max = max(numbers)
    # Création d'une copie de la liste pour éviter de modifier l'originale
    numbers_copy = numbers[:]
    # Suppression d'une occurrence du plus grand élément pour trouver le second
    numbers_copy.remove(first_max)
    second_max = max(numbers_copy)
    return first_max, second_max

def print_results(numbers, first, second):
    """
    Affiche, pour chaque élément de la liste :
      - la deuxième plus grande valeur si l'élément est le plus grand,
      - la plus grande valeur sinon.

    Args:
        numbers (list of int): Liste des entiers à traiter.
        first (int): La plus grande valeur trouvée dans la liste.
        second (int): La deuxième plus grande valeur trouvée dans la liste.
    """
    for value in numbers:
        if value == first:
            print(second)
        else:
            print(first)

def main():
    """
    Point d'entrée principal du script.
    Lit un entier N, puis N entiers, puis affiche pour chaque entier la valeur demandée selon l'énoncé.
    """
    N = int(input())
    ai = get_input_list(N)
    first, second = find_two_largest(ai)
    print_results(ai, first, second)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0049740164540708065
    2. '():' → logprob: -5.629973888397217
    3. '_' → logprob: -6.879973888397217
    4. '()' → logprob: -8.629974365234375
    5. '```' → logprob: -10.004974365234375
    6. '(:' → logprob: -10.629974365234375
    7. '(_' → logprob: -10.754974365234375
    8. '(_:' → logprob: -10.879974365234375
    9. ' (' → logprob: -11.379974365234375
    10. '("("' → logprob: -12.004974365234375

Token 4: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024758940562605858
    2. '_' → logprob: -4.149758815765381
    3. '():' → logprob: -5.399758815765381
    4. '(:' → logprob: -6.149758815765381
    5. '(_:' → logprob: -7.399758815765381
    6. '(_' → logprob: -7.524758815765381
    7. ':' → logprob: -8.024759292602539
    8. '```' → logprob: -8.774759292602539
    9. '[' → logprob: -9.274759292602539
    10. '_:' → logprob: -10.149759292602539

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23034870624542236
    2. ')' → logprob: -1.6053487062454224
    3. '_' → logprob: -5.605348587036133
    4. 'u' → logprob: -7.855348587036133
    5. 's' → logprob: -8.480348587036133
    6. ':' → logprob: -8.730348587036133
    7. ',' → logprob: -9.105348587036133
    8. 'a' → logprob: -9.855348587036133
    9. ')_' → logprob: -10.105348587036133
    10. '[' → logprob: -10.105348587036133

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023883657529950142
    2. '```' → logprob: -4.648883819580078
    3. '   ' → logprob: -5.148883819580078
    4. ':
' → logprob: -5.398883819580078
    5. '\n' → logprob: -7.023883819580078
    6. ':return' → logprob: -7.398883819580078
    7. '    
' → logprob: -7.773883819580078
    8. '():' → logprob: -7.898883819580078
    9. '\' → logprob: -8.273883819580078
    10. ':\' → logprob: -8.523883819580078

Token 7: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4122169613838196
    2. '```' → logprob: -1.6622169017791748
    3. 'return' → logprob: -3.287216901779175
    4. '[' → logprob: -3.412216901779175
    5. ' return' → logprob: -3.787216901779175
    6. '\' → logprob: -4.287217140197754
    7. '`' → logprob: -4.537217140197754
    8. '    ' → logprob: -5.037217140197754
    9. ' ' → logprob: -5.162217140197754
    10. 'input' → logprob: -5.662217140197754

Token 8: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.20443092286586761
    2. ' """' → logprob: -2.9544308185577393
    3. '   ' → logprob: -3.3294308185577393
    4. ''''' → logprob: -3.5794308185577393
    5. 'Generate' → logprob: -4.204431056976318
    6. 'Return' → logprob: -4.579431056976318
    7. 'Returns' → logprob: -4.579431056976318
    8. '""' → logprob: -4.954431056976318
    9. 'T' → logprob: -5.329431056976318
    10. 'r' → logprob: -5.954431056976318

Token 9: ' Dem' (ID: 9458)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Returns' → logprob: -0.9186727404594421
    2. 'Return' → logprob: -1.293672800064087
    3. 'Generate' → logprob: -1.918672800064087
    4. 'Get' → logprob: -2.543672800064087
    5. '"""' → logprob: -3.918672800064087
    6. 'Gener' → logprob: -4.043672561645508
    7. 'T' → logprob: -4.668672561645508
    8. 'Take' → logprob: -4.918672561645508
    9. 'return' → logprob: -5.043672561645508
    10. 'Retrieve' → logprob: -5.043672561645508

Token 10: 'ande' (ID: 4102)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6555959582328796
    2. 'ands' → logprob: -0.7805959582328796
    3. 'onstr' → logprob: -4.030595779418945
    4. 'an' → logprob: -6.280595779418945
    5. '   ' → logprob: -6.280595779418945
    6. ' and' → logprob: -7.655595779418945
    7. 'a' → logprob: -8.030595779418945
    8. 'on' → logprob: -9.030595779418945
    9. '```' → logprob: -9.780595779418945
    10. 'anding' → logprob: -10.155595779418945

Token 11: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2795509099960327
    2. '   ' → logprob: -1.2795509099960327
    3. 's' → logprob: -2.0295510292053223
    4. ' un' → logprob: -2.4045510292053223
    5. ' des' → logprob: -2.4045510292053223
    6. ' à' → logprob: -2.9045510292053223
    7. ' a' → logprob: -4.029551029205322
    8. 'r' → logprob: -4.404551029205322
    9. ' la' → logprob: -4.529551029205322
    10. ' de' → logprob: -4.654551029205322

Token 12: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07010938227176666
    2. ' l' → logprob: -2.6951093673706055
    3. 'util' → logprob: -10.195109367370605
    4. 'user' → logprob: -10.320109367370605
    5. ' user' → logprob: -11.195109367370605
    6. ' utilisateur' → logprob: -11.445109367370605
    7. '   ' → logprob: -11.570109367370605
    8. ' ' → logprob: -11.820109367370605
    9. ''utilisateur' → logprob: -11.945109367370605
    10. ' la' → logprob: -11.945109367370605

Token 13: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.05002961680293083
    2. 'u' → logprob: -3.8000295162200928
    3. 'util' → logprob: -4.300029754638672
    4. '’utilisateur' → logprob: -4.550029754638672
    5. ' utilisateur' → logprob: -6.925029754638672
    6. ''' → logprob: -7.800029754638672
    7. 'a' → logprob: -8.175029754638672
    8. ''util' → logprob: -8.550029754638672
    9. 'é' → logprob: -9.050029754638672
    10. ''u' → logprob: -9.550029754638672

Token 14: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22084136307239532
    2. '   ' → logprob: -2.595841407775879
    3. ' d' → logprob: -2.970841407775879
    4. ' ' → logprob: -3.720841407775879
    5. ' `' → logprob: -4.470841407775879
    6. '    ' → logprob: -4.595841407775879
    7. '```' → logprob: -5.345841407775879
    8. ''' → logprob: -6.095841407775879
    9. ' ```' → logprob: -6.095841407775879
    10. ' des' → logprob: -6.220841407775879

Token 15: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36098191142082214
    2. ' saisir' → logprob: -1.6109819412231445
    3. ' entrer' → logprob: -3.2359819412231445
    4. 'r' → logprob: -3.2359819412231445
    5. 'entr' → logprob: -4.3609819412231445
    6. ' fournir' → logprob: -4.9859819412231445
    7. ' rentrer' → logprob: -5.8609819412231445
    8. '   ' → logprob: -7.2359819412231445
    9. ' sais' → logprob: -8.360981941223145
    10. ' ' → logprob: -8.610981941223145

Token 16: ' n' (ID: 297)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6602671146392822
    2. ' des' → logprob: -1.9102671146392822
    3. 's' → logprob: -2.1602671146392822
    4. ' ' → logprob: -2.1602671146392822
    5. ' une' → logprob: -2.5352671146392822
    6. '   ' → logprob: -4.660266876220703
    7. ' la' → logprob: -5.535266876220703
    8. ' a' → logprob: -6.035266876220703
    9. 'a' → logprob: -7.035266876220703
    10. '  ' → logprob: -7.160266876220703

Token 17: ' ent' (ID: 1121)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.0500820875167847
    2. ' éléments' → logprob: -1.4250820875167847
    3. 'val' → logprob: -1.9250820875167847
    4. ' valeurs' → logprob: -2.300082206726074
    5. ' lignes' → logprob: -3.050082206726074
    6. ' chaînes' → logprob: -3.175082206726074
    7. ' val' → logprob: -3.925082206726074
    8. ' ' → logprob: -4.175082206726074
    9. 'l' → logprob: -5.175082206726074
    10. ' ent' → logprob: -5.300082206726074

Token 18: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.056167080998420715
    2. 'r' → logprob: -3.4311671257019043
    3. 'ières' → logprob: -3.9311671257019043
    4. 'ri' → logprob: -7.181167125701904
    5. 'ries' → logprob: -7.681167125701904
    6. 'ré' → logprob: -8.556166648864746
    7. 'i' → logprob: -8.556166648864746
    8. 'ier' → logprob: -8.681166648864746
    9. 'ités' → logprob: -8.681166648864746
    10. 'ires' → logprob: -8.681166648864746

Token 19: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026180341839790344
    2. '.' → logprob: -4.526180267333984
    3. '\n' → logprob: -5.401180267333984
    4. '    
' → logprob: -6.401180267333984
    5. ',' → logprob: -6.401180267333984
    6. '\' → logprob: -6.901180267333984
    7. 's' → logprob: -7.401180267333984
    8. '
' → logprob: -7.401180267333984
    9. '"""
' → logprob: -7.526180267333984
    10. '```' → logprob: -7.526180267333984

Token 20: 'un' (ID: 373)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15852756798267365
    2. ' )' → logprob: -2.0335276126861572
    3. ').' → logprob: -4.908527374267578
    4. ' ).' → logprob: -6.533527374267578
    5. ' sépar' → logprob: -6.533527374267578
    6. ',' → logprob: -6.908527374267578
    7. 's' → logprob: -7.158527374267578
    8. ' en' → logprob: -7.658527374267578
    9. '),' → logprob: -7.783527374267578
    10. ' ' → logprob: -7.783527374267578

Token 21: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.1546655893325806
    2. ' ' → logprob: -1.4046655893325806
    3. ' à' → logprob: -1.4046655893325806
    4. 'e' → logprob: -1.9046655893325806
    5. 'à' → logprob: -4.279665470123291
    6. 'par' → logprob: -4.404665470123291
    7. ' entier' → logprob: -5.904665470123291
    8. ' a' → logprob: -6.529665470123291
    9. ' )' → logprob: -6.654665470123291
    10. 'a' → logprob: -6.654665470123291

Token 22: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5534587502479553
    2. 'ligne' → logprob: -1.3034586906433105
    3. ' ' → logprob: -2.9284586906433105
    4. 'e' → logprob: -3.4284586906433105
    5. '\n' → logprob: -3.5534586906433105
    6. 'l' → logprob: -4.9284586906433105
    7. ' input' → logprob: -5.4284586906433105
    8. 'n' → logprob: -5.5534586906433105
    9. 'ent' → logprob: -5.6784586906433105
    10. ')' → logprob: -5.8034586906433105

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014448761940002441
    2. ').' → logprob: -7.0014448165893555
    3. '   ' → logprob: -8.126444816589355
    4. ')
' → logprob: -9.001444816589355
    5. '),' → logprob: -9.876444816589355
    6. ' )' → logprob: -11.001444816589355
    7. '):' → logprob: -11.251444816589355
    8. ',' → logprob: -12.126444816589355
    9. ')
' → logprob: -12.126444816589355
    10. '.' → logprob: -12.626444816589355

Token 24: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0200349073857069
    2. '\n' → logprob: -4.7700347900390625
    3. '    
' → logprob: -5.5200347900390625
    4. '
' → logprob: -6.1450347900390625
    5. '"""
' → logprob: -6.5200347900390625
    6. '"' → logprob: -7.2700347900390625
    7. '\' → logprob: -7.5200347900390625
    8. '"""' → logprob: -7.7700347900390625
    9. '  
' → logprob: -8.020034790039062
    10. ' ' → logprob: -8.020034790039062

Token 25: ' retourne' (ID: 178818)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35562875866889954
    2. ' retourne' → logprob: -2.105628728866577
    3. ' les' → logprob: -2.230628728866577
    4. 'ret' → logprob: -3.355628728866577
    5. 'les' → logprob: -4.105628967285156
    6. 'return' → logprob: -5.105628967285156
    7. 'ren' → logprob: -5.980628967285156
    8. ' ren' → logprob: -6.105628967285156
    9. ' returns' → logprob: -6.355628967285156
    10. ' return' → logprob: -6.355628967285156

Token 26: ' ces' (ID: 10532)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1518474519252777
    2. ' une' → logprob: -2.2768473625183105
    3. ' ' → logprob: -4.2768473625183105
    4. 'une' → logprob: -5.0268473625183105
    5. ' a' → logprob: -5.2768473625183105
    6. ' un' → logprob: -5.6518473625183105
    7. 's' → logprob: -5.9018473625183105
    8. ' ' → logprob: -6.9018473625183105
    9. ' l' → logprob: -7.0268473625183105
    10. 'a' → logprob: -7.1518473625183105

Token 27: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08449017256498337
    2. ' ent' → logprob: -3.7094900608062744
    3. ' valeurs' → logprob: -3.8344900608062744
    4. ' éléments' → logprob: -4.4594902992248535
    5. 'ent' → logprob: -5.3344902992248535
    6. ' integers' → logprob: -5.5844902992248535
    7. ' entr' → logprob: -5.9594902992248535
    8. '_' → logprob: -6.0844902992248535
    9. 's' → logprob: -6.7094902992248535
    10. '  ' → logprob: -6.8344902992248535

Token 28: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.28238245844841003
    2. 'i' → logprob: -1.4073824882507324
    3. 'ié' → logprob: -7.407382488250732
    4. 'ier' → logprob: -7.907382488250732
    5. '```' → logprob: -9.407382011413574
    6. 'ières' → logprob: -10.032382011413574
    7. 'ers' → logprob: -10.782382011413574
    8. 'í' → logprob: -10.907382011413574
    9. 'é' → logprob: -11.532382011413574
    10. '   ' → logprob: -11.657382011413574

Token 29: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.02879413031041622
    2. 's' → logprob: -4.028794288635254
    3. '.' → logprob: -5.278794288635254
    4. ' en' → logprob: -5.528794288635254
    5. ' as' → logprob: -7.778794288635254
    6. '```' → logprob: -8.653794288635254
    7. '"""' → logprob: -8.903794288635254
    8. ' under' → logprob: -9.028794288635254
    9. '.
' → logprob: -9.528794288635254
    10. '"""
' → logprob: -9.528794288635254

Token 30: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.010015539824962616
    2. ' form' → logprob: -5.260015487670898
    3. 'forme' → logprob: -5.510015487670898
    4. 'form' → logprob: -7.510015487670898
    5. ' la' → logprob: -9.635015487670898
    6. 'une' → logprob: -10.385015487670898
    7. 'la' → logprob: -10.760015487670898
    8. ' ' → logprob: -11.135015487670898
    9. '   ' → logprob: -11.635015487670898
    10. 'forma' → logprob: -11.885015487670898

Token 31: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.006438484415411949
    2. 'd' → logprob: -5.631438255310059
    3. ' de' → logprob: -5.881438255310059
    4. 'de' → logprob: -10.506438255310059
    5. '   ' → logprob: -11.881438255310059
    6. 's' → logprob: -12.881438255310059
    7. '```' → logprob: -13.631438255310059
    8. ' of' → logprob: -13.881438255310059
    9. '<|end|>' → logprob: -14.756438255310059
    10. 'def' → logprob: -14.756438255310059

Token 32: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.05074997618794441
    2. 'liste' → logprob: -3.1757500171661377
    3. 'une' → logprob: -5.550749778747559
    4. ' list' → logprob: -5.925749778747559
    5. 'list' → logprob: -7.925749778747559
    6. ' une' → logprob: -8.050749778747559
    7. 's' → logprob: -9.175749778747559
    8. 'l' → logprob: -9.550749778747559
    9. 'a' → logprob: -9.675749778747559
    10. ' listes' → logprob: -10.300749778747559

Token 33: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07198472321033478
    2. '\n' → logprob: -3.6969847679138184
    3. '.' → logprob: -4.196984767913818
    4. '    
' → logprob: -5.321984767913818
    5. '  
' → logprob: -5.321984767913818
    6. ':' → logprob: -5.571984767913818
    7. '"""' → logprob: -5.946984767913818
    8. ':
' → logprob: -6.196984767913818
    9. '```' → logprob: -6.321984767913818
    10. ' ' → logprob: -6.571984767913818

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014009768143296242
    2. '"""' → logprob: -4.514009952545166
    3. '```' → logprob: -6.514009952545166
    4. '"""
' → logprob: -7.389009952545166
    5. '"' → logprob: -8.639009475708008
    6. ' """' → logprob: -8.889009475708008
    7. ' ' → logprob: -9.014009475708008
    8. ')' → logprob: -9.264009475708008
    9. ' """
' → logprob: -9.889009475708008
    10. '""' → logprob: -10.139009475708008

Token 35: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008476993069052696
    2. '"""' → logprob: -5.258477210998535
    3. '```' → logprob: -6.258477210998535
    4. '"""
' → logprob: -8.008477210998535
    5. 'result' → logprob: -8.508477210998535
    6. 'inputs' → logprob: -9.133477210998535
    7. 'return' → logprob: -9.133477210998535
    8. 'input' → logprob: -9.508477210998535
    9. '    
' → logprob: -9.508477210998535
    10. 'list' → logprob: -9.758477210998535

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8384621143341064
    2. '   ' → logprob: -1.4634621143341064
    3. ' :' → logprob: -1.7134621143341064
    4. ',' → logprob: -2.8384621143341064
    5. '):' → logprob: -3.3384621143341064
    6. ')' → logprob: -3.4634621143341064
    7. '```' → logprob: -4.463461875915527
    8. '[' → logprob: -4.838461875915527
    9. '[n' → logprob: -5.963461875915527
    10. '(n' → logprob: -6.338461875915527

Token 37: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11412587016820908
    2. ' n' → logprob: -2.239125967025757
    3. ' 
' → logprob: -7.489125728607178
    4. '   ' → logprob: -7.489125728607178
    5. '    ' → logprob: -9.614126205444336
    6. ')' → logprob: -10.739126205444336
    7. ' ' → logprob: -10.864126205444336
    8. '	n' → logprob: -10.864126205444336
    9. ' )' → logprob: -11.364126205444336
    10. '     
' → logprob: -11.864126205444336

Token 38: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.001156770158559084
    2. '   ' → logprob: -6.876156806945801
    3. ' n' → logprob: -9.2511568069458
    4. 'self' → logprob: -11.6261568069458
    5. '       ' → logprob: -11.8761568069458
    6. 'int' → logprob: -12.3761568069458
    7. '```' → logprob: -12.8761568069458
    8. 'num' → logprob: -13.5011568069458
    9. '`' → logprob: -13.6261568069458
    10. '	n' → logprob: -14.7511568069458

Token 39: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8666546940803528
    2. ':' → logprob: -1.366654634475708
    3. '(int' → logprob: -1.491654634475708
    4. '):' → logprob: -3.116654634475708
    5. '   ' → logprob: -3.491654634475708
    6. ':int' → logprob: -5.116654872894287
    7. ')' → logprob: -5.241654872894287
    8. 'int' → logprob: -5.491654872894287
    9. '[int' → logprob: -5.741654872894287
    10. ' :' → logprob: -5.866654872894287

Token 40: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000111768240458332
    2. ')' → logprob: -9.62511157989502
    3. ' int' → logprob: -10.00011157989502
    4. '):' → logprob: -16.250112533569336
    5. ':int' → logprob: -16.750112533569336
    6. ' )' → logprob: -17.125112533569336
    7. '[int' → logprob: -17.375112533569336
    8. ']int' → logprob: -17.500112533569336
    9. '=int' → logprob: -18.250112533569336
    10. 'integer' → logprob: -18.375112533569336

Token 41: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007637627888470888
    2. '):' → logprob: -4.8826375007629395
    3. ' )' → logprob: -10.632637977600098
    4. ' ):' → logprob: -13.507637977600098
    5. '```' → logprob: -13.757637977600098
    6. '[int' → logprob: -14.007637977600098
    7. '   ' → logprob: -14.132637977600098
    8. 'int' → logprob: -14.382637977600098
    9. '):
' → logprob: -14.507637977600098
    10. ':' → logprob: -14.882637977600098

Token 42: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6764732003211975
    2. 'Nombre' → logprob: -1.8014731407165527
    3. ' Nombre' → logprob: -2.5514731407165527
    4. ' Le' → logprob: -2.5514731407165527
    5. ' nombre' → logprob: -3.1764731407165527
    6. 'Le' → logprob: -3.3014731407165527
    7. ' le' → logprob: -3.4264731407165527
    8. ' Number' → logprob: -4.051473140716553
    9. 'Number' → logprob: -4.676473140716553
    10. 'nombre' → logprob: -4.676473140716553

Token 43: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.018439633771777153
    2. 'nombre' → logprob: -4.018439769744873
    3. ' nombres' → logprob: -8.893439292907715
    4. ' ' → logprob: -9.143439292907715
    5. 'n' → logprob: -10.893439292907715
    6. ' number' → logprob: -11.268439292907715
    7. '   ' → logprob: -12.518439292907715
    8. 'Nombre' → logprob: -12.643439292907715
    9. ' n' → logprob: -13.518439292907715
    10. ' nombr' → logprob: -14.018439292907715

Token 44: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.033304229378700256
    2. 'd' → logprob: -4.408304214477539
    3. ' des' → logprob: -4.658304214477539
    4. ' de' → logprob: -5.283304214477539
    5. ')' → logprob: -6.158304214477539
    6. ' ' → logprob: -6.408304214477539
    7. 'des' → logprob: -7.533304214477539
    8. ' )' → logprob: -8.033304214477539
    9. 'de' → logprob: -8.033304214477539
    10. 's' → logprob: -8.408304214477539

Token 45: ''ent' (ID: 53422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11281538009643555
    2. ' ent' → logprob: -2.7378153800964355
    3. '_' → logprob: -3.8628153800964355
    4. 'ent' → logprob: -5.1128153800964355
    5. ')' → logprob: -5.9878153800964355
    6. 'élé' → logprob: -6.1128153800964355
    7. ' )' → logprob: -6.1128153800964355
    8. '  ' → logprob: -6.6128153800964355
    9. ' entier' → logprob: -6.7378153800964355
    10. ' integers' → logprob: -6.9878153800964355

Token 46: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00010866894444916397
    2. 'i' → logprob: -9.25010871887207
    3. 'ier' → logprob: -12.50010871887207
    4. '   ' → logprob: -12.62510871887207
    5. 'ières' → logprob: -13.00010871887207
    6. '```' → logprob: -13.25010871887207
    7. 'ers' → logprob: -14.87510871887207
    8. 'riers' → logprob: -15.37510871887207
    9. '       ' → logprob: -15.62510871887207
    10. 'I' → logprob: -16.62510871887207

Token 47: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5559918880462646
    2. ')' → logprob: -1.1809918880462646
    3. 'à' → logprob: -3.0559918880462646
    4. '   ' → logprob: -3.3059918880462646
    5. ' ' → logprob: -4.555992126464844
    6. ' )' → logprob: -4.930992126464844
    7. '    ' → logprob: -5.180992126464844
    8. 's' → logprob: -5.180992126464844
    9. '```' → logprob: -6.680992126464844
    10. '(s' → logprob: -7.305992126464844

Token 48: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3038657605648041
    2. ' demander' → logprob: -2.303865671157837
    3. ' saisir' → logprob: -2.428865671157837
    4. 'dem' → logprob: -2.803865671157837
    5. 'entr' → logprob: -5.803865909576416
    6. 'l' → logprob: -5.803865909576416
    7. 'r' → logprob: -5.928865909576416
    8. ' lire' → logprob: -5.928865909576416
    9. ' récupérer' → logprob: -7.678865909576416
    10. ' ' → logprob: -7.928865909576416

Token 49: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05176088213920593
    2. '):' → logprob: -3.3017609119415283
    3. '   ' → logprob: -4.426760673522949
    4. '```' → logprob: -6.926760673522949
    5. '):
' → logprob: -8.67676067352295
    6. ')
' → logprob: -9.05176067352295
    7. '"""' → logprob: -9.17676067352295
    8. ')n' → logprob: -9.67676067352295
    9. ')\' → logprob: -10.05176067352295
    10. ' )' → logprob: -10.30176067352295

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.190161794424057
    2. '"""
' → logprob: -2.31516170501709
    3. '"""' → logprob: -3.19016170501709
    4. ')' → logprob: -4.31516170501709
    5. '```' → logprob: -4.44016170501709
    6. ')
' → logprob: -6.06516170501709
    7. 'Returns' → logprob: -6.69016170501709
    8. '    
' → logprob: -6.81516170501709
    9. '
' → logprob: -6.94016170501709
    10. ' """
' → logprob: -7.06516170501709

Token 51: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.719439685344696
    2. 'Returns' (adapté à ' Returns') → logprob: -1.2194397449493408
    3. '"""' → logprob: -1.8444397449493408
    4. '"""
' → logprob: -2.969439744949341
    5. '""' → logprob: -5.844439506530762
    6. ' Returns' → logprob: -6.969439506530762
    7. 'returns' → logprob: -7.094439506530762
    8. 'return' → logprob: -7.219439506530762
    9. '```' → logprob: -7.344439506530762
    10. ')' → logprob: -7.594439506530762

Token 52: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4156167507171631
    2. ':' → logprob: -1.290616750717163
    3. '   ' → logprob: -2.915616750717163
    4. '[List' → logprob: -6.290616989135742
    5. ':list' → logprob: -6.665616989135742
    6. 'List' → logprob: -7.040616989135742
    7. ' List' → logprob: -7.165616989135742
    8. '    ' → logprob: -7.290616989135742
    9. '[' → logprob: -7.540616989135742
    10. '[int' → logprob: -7.665616989135742

Token 53: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2830478847026825
    2. ' List' → logprob: -2.033047914505005
    3. ' list' → logprob: -2.533047914505005
    4. '    ' → logprob: -4.033047676086426
    5. 'List' → logprob: -4.533047676086426
    6. 'list' → logprob: -5.533047676086426
    7. '       ' → logprob: -5.783047676086426
    8. '[List' → logprob: -8.408047676086426
    9. '```' → logprob: -8.658047676086426
    10. ' [' → logprob: -9.533047676086426

Token 54: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.07977568358182907
    2. 'List' → logprob: -2.57977557182312
    3. ' list' → logprob: -7.329775810241699
    4. '   ' → logprob: -8.4547758102417
    5. ' List' → logprob: -11.2047758102417
    6. '       ' → logprob: -13.3297758102417
    7. '[List' → logprob: -14.4547758102417
    8. '```' → logprob: -15.3297758102417
    9. '[list' → logprob: -15.5797758102417
    10. 'liste' → logprob: -16.204774856567383

Token 55: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0021634676959365606
    2. ':' → logprob: -6.252163410186768
    3. '<int' → logprob: -9.502163887023926
    4. ' of' → logprob: -9.502163887023926
    5. 'int' → logprob: -10.252163887023926
    6. '[' → logprob: -10.502163887023926
    7. '```' → logprob: -12.127163887023926
    8. '(int' → logprob: -12.377163887023926
    9. '[List' → logprob: -12.377163887023926
    10. '[Int' → logprob: -13.127163887023926

Token 56: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.014243420213460922
    2. 'int' → logprob: -4.2642436027526855
    3. ' integers' → logprob: -10.139243125915527
    4. ' ints' → logprob: -10.389243125915527
    5. '<int' → logprob: -12.264243125915527
    6. '[int' → logprob: -12.514243125915527
    7. '(int' → logprob: -14.889243125915527
    8. ']int' → logprob: -15.139243125915527
    9. '=int' → logprob: -15.389243125915527
    10. ':int' → logprob: -15.889243125915527

Token 57: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9912264347076416
    2. '[int' → logprob: -1.7412264347076416
    3. ']:' → logprob: -2.1162264347076416
    4. ']' → logprob: -2.1162264347076416
    5. '   ' → logprob: -2.3662264347076416
    6. '```' → logprob: -3.3662264347076416
    7. '):' → logprob: -3.7412264347076416
    8. ':
' → logprob: -3.9912264347076416
    9. '"""' → logprob: -4.6162261962890625
    10. '[' → logprob: -5.1162261962890625

Token 58: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038555359933525324
    2. '[]' → logprob: -6.6288557052612305
    3. '    
' → logprob: -7.7538557052612305
    4. '    ' → logprob: -7.7538557052612305
    5. '[' → logprob: -8.00385570526123
    6. '```' → logprob: -8.12885570526123
    7. '"""' → logprob: -8.37885570526123
    8. ' []' → logprob: -9.37885570526123
    9. '[int' → logprob: -9.62885570526123
    10. 'List' → logprob: -9.87885570526123

Token 59: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.026766283437609673
    2. ' list' → logprob: -3.901766300201416
    3. 'liste' → logprob: -6.151766300201416
    4. ' listes' → logprob: -6.151766300201416
    5. 's' → logprob: -6.901766300201416
    6. ' [' → logprob: -8.151765823364258
    7. ' lista' → logprob: -8.901765823364258
    8. 'list' → logprob: -9.026765823364258
    9. 'Liste' → logprob: -9.026765823364258
    10. ' []' → logprob: -9.901765823364258

Token 60: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.017755592241883278
    2. 'des' → logprob: -5.017755508422852
    3. '<|end|>' → logprob: -5.017755508422852
    4. '[' → logprob: -6.392755508422852
    5. ' of' → logprob: -7.017755508422852
    6. ' de' → logprob: -7.517755508422852
    7. '[int' → logprob: -8.017755508422852
    8. '   ' → logprob: -8.392755508422852
    9. ' complète' → logprob: -9.392755508422852
    10. '_des' → logprob: -9.642755508422852

Token 61: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.2140636444091797
    2. 'ent' → logprob: -1.7140636444091797
    3. ' valeurs' → logprob: -5.08906364440918
    4. ' nombres' → logprob: -5.58906364440918
    5. 'n' → logprob: -7.08906364440918
    6. ' entier' → logprob: -7.33906364440918
    7. ' integers' → logprob: -7.58906364440918
    8. ' n' → logprob: -8.08906364440918
    9. ' ' → logprob: -9.08906364440918
    10. ' éléments' → logprob: -10.08906364440918

Token 62: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.004252677317708731
    2. 'i' → logprob: -5.504252910614014
    3. 'ti' → logprob: -9.754252433776855
    4. 'ières' → logprob: -10.129252433776855
    5. 'ier' → logprob: -10.379252433776855
    6. '```' → logprob: -11.004252433776855
    7. '   ' → logprob: -11.879252433776855
    8. 'ière' → logprob: -12.129252433776855
    9. '       ' → logprob: -13.254252433776855
    10. ' i' → logprob: -13.504252433776855

Token 63: ' sa' (ID: 880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7255138754844666
    2. 's' → logprob: -0.8505138754844666
    3. ' sais' → logprob: -3.8505139350891113
    4. '```' → logprob: -3.8505139350891113
    5. '"""
' → logprob: -4.350513935089111
    6. ' entr' → logprob: -4.975513935089111
    7. '"""' → logprob: -5.225513935089111
    8. ' sa' → logprob: -5.475513935089111
    9. '    
' → logprob: -5.600513935089111
    10. '        
' → logprob: -6.600513935089111

Token 64: 'isis' (ID: 11352)
  Prédit: 'isis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isis' → logprob: -0.0044120787642896175
    2. 'is' → logprob: -5.7544121742248535
    3. 'isi' → logprob: -6.8794121742248535
    4. 'isie' → logprob: -9.004411697387695
    5. 'sis' → logprob: -10.504411697387695
    6. 'i' → logprob: -11.379411697387695
    7. 'ïs' → logprob: -11.879411697387695
    8. 'isir' → logprob: -11.879411697387695
    9. 'ís' → logprob: -12.129411697387695
    10. 'nis' → logprob: -12.254411697387695

Token 65: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014134596101939678
    2. ':' → logprob: -5.639134407043457
    3. ':
' → logprob: -6.264134407043457
    4. '):' → logprob: -6.264134407043457
    5. '```' → logprob: -6.264134407043457
    6. '
' → logprob: -6.389134407043457
    7. '    
' → logprob: -6.889134407043457
    8. ')' → logprob: -7.764134407043457
    9. '    ' → logprob: -7.889134407043457
    10. '\n' → logprob: -8.389134407043457

Token 66: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5772997140884399
    2. ' l' → logprob: -0.8272997140884399
    3. 'util' → logprob: -8.202300071716309
    4. ' utilisateur' → logprob: -8.702300071716309
    5. '	l' → logprob: -8.702300071716309
    6. ' ' → logprob: -8.827300071716309
    7. ''utilisateur' → logprob: -9.202300071716309
    8. '_l' → logprob: -9.327300071716309
    9. '   ' → logprob: -9.452300071716309
    10. 'la' → logprob: -10.202300071716309

Token 67: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.30929604172706604
    2. ''' → logprob: -1.5592960119247437
    3. ''util' → logprob: -3.809296131134033
    4. 'u' → logprob: -4.434296131134033
    5. ''u' → logprob: -4.434296131134033
    6. ''us' → logprob: -5.059296131134033
    7. 'a' → logprob: -6.684296131134033
    8. ''a' → logprob: -6.809296131134033
    9. ''user' → logprob: -7.434296131134033
    10. '’utilisateur' → logprob: -7.934296131134033

Token 68: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03795265778899193
    2. '):' → logprob: -3.6629526615142822
    3. ')' → logprob: -5.287952423095703
    4. ':' → logprob: -6.287952423095703
    5. '
' → logprob: -7.037952423095703
    6. '    
' → logprob: -7.162952423095703
    7. '```' → logprob: -7.287952423095703
    8. '):
' → logprob: -7.412952423095703
    9. '"""' → logprob: -7.537952423095703
    10. ':
' → logprob: -7.912952423095703

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16848129034042358
    2. '"""' → logprob: -1.9184813499450684
    3. '"""
' → logprob: -5.168481349945068
    4. ')' → logprob: -6.668481349945068
    5. '""' → logprob: -7.918481349945068
    6. '```' → logprob: -8.16848087310791
    7. '
' → logprob: -8.66848087310791
    8. '"' → logprob: -8.91848087310791
    9. '    
' → logprob: -9.04348087310791
    10. '\n' → logprob: -10.04348087310791

Token 70: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9544771909713745
    2. '"""' → logprob: -1.0794771909713745
    3. '"""
' (adapté à ' """
') → logprob: -1.3294771909713745
    4. '"' → logprob: -5.829477310180664
    5. '```' → logprob: -5.829477310180664
    6. '""' → logprob: -6.079477310180664
    7. '
' → logprob: -6.954477310180664
    8. '    
' → logprob: -8.079477310180664
    9. '\n' → logprob: -8.204477310180664
    10. '"""

' → logprob: -8.454477310180664

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02408769354224205
    2. 'result' → logprob: -4.899087905883789
    3. 'input' → logprob: -5.524087905883789
    4. 'r' → logprob: -6.274087905883789
    5. '    
' → logprob: -6.274087905883789
    6. 'n' → logprob: -6.399087905883789
    7. '\n' → logprob: -6.774087905883789
    8. ' result' → logprob: -6.899087905883789
    9. ' input' → logprob: -7.024087905883789
    10. '```' → logprob: -7.149087905883789

Token 72: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0051169395446777
    2. 'input' (adapté à ' input') → logprob: -1.3801169395446777
    3. 'result' → logprob: -1.8801169395446777
    4. ' input' → logprob: -2.0051169395446777
    5. ' result' → logprob: -2.5051169395446777
    6. ' lst' → logprob: -5.505116939544678
    7. ' list' → logprob: -6.130116939544678
    8. ' inputs' → logprob: -6.255116939544678
    9. 'inputs' → logprob: -6.630116939544678
    10. 'lst' → logprob: -7.005116939544678

Token 73: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002161444863304496
    2. '_' → logprob: -6.752161502838135
    3. 's' → logprob: -8.252161026000977
    4. '()' → logprob: -8.252161026000977
    5. '('' → logprob: -8.877161026000977
    6. '("' → logprob: -9.252161026000977
    7. '_list' → logprob: -9.502161026000977
    8. '("")' → logprob: -10.127161026000977
    9. '("("' → logprob: -10.252161026000977
    10. '_line' → logprob: -11.502161026000977

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034317582845687866
    2. '=' → logprob: -3.4093174934387207
    3. '=[]' → logprob: -7.784317493438721
    4. '.append' → logprob: -9.159317970275879
    5. '.' → logprob: -9.659317970275879
    6. '[:]' → logprob: -9.909317970275879
    7. '[]' → logprob: -11.659317970275879
    8. 's' → logprob: -11.784317970275879
    9. '.extend' → logprob: -12.284317970275879
    10. '_' → logprob: -12.409317970275879

Token 75: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.01820262521505356
    2. '[]' → logprob: -4.018202781677246
    3. ' [' → logprob: -10.143202781677246
    4. '[' → logprob: -11.268202781677246
    5. ' ' → logprob: -14.893202781677246
    6. ' []
' → logprob: -16.64320182800293
    7. ' [];' → logprob: -16.64320182800293
    8. ' [],' → logprob: -17.39320182800293
    9. '[]}' → logprob: -17.64320182800293
    10. '[]>' → logprob: -17.76820182800293

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02859952487051487
    2. 'for' → logprob: -4.278599739074707
    3. ' for' → logprob: -5.153599739074707
    4. '    
' → logprob: -5.153599739074707
    5. '
' → logprob: -6.028599739074707
    6. '	for' → logprob: -9.403599739074707
    7. '    ' → logprob: -9.778599739074707
    8. '  
' → logprob: -9.778599739074707
    9. '\n' → logprob: -10.153599739074707
    10. '   
' → logprob: -10.278599739074707

Token 77: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4164053797721863
    2. 'for' (adapté à ' for') → logprob: -1.166405439376831
    3. '   ' → logprob: -3.541405439376831
    4. '	for' → logprob: -9.54140567779541
    5. '
' → logprob: -10.66640567779541
    6. '    
' → logprob: -11.04140567779541
    7. '    ' → logprob: -11.79140567779541
    8. '```' → logprob: -12.66640567779541
    9. ' ' → logprob: -13.04140567779541
    10. 'n' → logprob: -13.66640567779541

Token 78: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08609511703252792
    2. ' ' → logprob: -2.586095094680786
    3. ' _' → logprob: -4.961095333099365
    4. '_' → logprob: -8.961094856262207
    5. 'i' → logprob: -10.211094856262207
    6. ' ‌' → logprob: -12.711094856262207
    7. '  ' → logprob: -13.711094856262207
    8. ' ' → logprob: -13.711094856262207
    9. ' ▁' → logprob: -13.961094856262207
    10. ' I' → logprob: -13.961094856262207

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006216724403202534
    2. 'in' → logprob: -5.131216526031494
    3. ' ' → logprob: -8.256217002868652
    4. ' i' → logprob: -11.256217002868652
    5. '  ' → logprob: -12.756217002868652
    6. '   ' → logprob: -13.006217002868652
    7. '_' → logprob: -13.131217002868652
    8. '    ' → logprob: -13.381217002868652
    9. 'range' → logprob: -13.756217002868652
    10. 'n' → logprob: -13.881217002868652

Token 80: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.32257601618766785
    2. ' ' → logprob: -1.3225760459899902
    3. ' n' → logprob: -5.19757604598999
    4. 'n' → logprob: -6.19757604598999
    5. 'range' → logprob: -7.19757604598999
    6. '  ' → logprob: -7.57257604598999
    7. ' in' → logprob: -7.94757604598999
    8. '   ' → logprob: -10.322575569152832
    9. ' r' → logprob: -10.947575569152832
    10. ' space' → logprob: -11.572575569152832

Token 81: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02352823130786419
    2. '(n' → logprob: -4.148528099060059
    3. ' (' → logprob: -4.898528099060059
    4. '(i' → logprob: -12.523528099060059
    5. '(
' → logprob: -12.773528099060059
    6. ' n' → logprob: -14.273528099060059
    7. ' ' → logprob: -14.648528099060059
    8. '(int' → logprob: -15.898528099060059
    9. '(

' → logprob: -16.023529052734375
    10. '(range' → logprob: -16.273529052734375

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0164454597979784
    2. ')' → logprob: -4.141445636749268
    3. ':' → logprob: -8.26644515991211
    4. ' ):' → logprob: -9.39144515991211
    5. '):
' → logprob: -10.51644515991211
    6. '   ' → logprob: -10.64144515991211
    7. '+' → logprob: -11.64144515991211
    8. ',' → logprob: -12.76644515991211
    9. ' ' → logprob: -13.01644515991211
    10. ' )' → logprob: -13.14144515991211

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014598275534808636
    2. '   ' → logprob: -4.889598369598389
    3. '    
' → logprob: -6.014598369598389
    4. '        
' → logprob: -6.389598369598389
    5. ' 
' → logprob: -7.389598369598389
    6. '
' → logprob: -7.764598369598389
    7. '    ' → logprob: -8.01459789276123
    8. '       
' → logprob: -8.38959789276123
    9. '   
' → logprob: -8.38959789276123
    10. '     
' → logprob: -8.51459789276123

Token 84: ' value' (ID: 1432)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0587046146392822
    2. '       ' → logprob: -1.1837046146392822
    3. ' 
' → logprob: -2.6837046146392822
    4. ' input' → logprob: -2.9337046146392822
    5. '        
' → logprob: -3.3087046146392822
    6. '   ' → logprob: -3.5587046146392822
    7. 'n' → logprob: -3.6837046146392822
    8. '    
' → logprob: -3.6837046146392822
    9. 'user' → logprob: -3.6837046146392822
    10. '     
' → logprob: -4.183704376220703

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004649776499718428
    2. '=' → logprob: -5.379649639129639
    3. '_' → logprob: -10.629650115966797
    4. 's' → logprob: -12.754650115966797
    5. '=int' → logprob: -14.379650115966797
    6. ' =
' → logprob: -14.504650115966797
    7. ' ' → logprob: -14.504650115966797
    8. '=input' → logprob: -15.379650115966797
    9. ' ' → logprob: -15.504650115966797
    10. '	' → logprob: -15.754650115966797

Token 86: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.001024831784889102
    2. 'int' → logprob: -7.1260247230529785
    3. ' input' → logprob: -8.876025199890137
    4. ' in' → logprob: -10.001025199890137
    5. ' ' → logprob: -10.376025199890137
    6. '   ' → logprob: -13.501025199890137
    7. '  ' → logprob: -14.001025199890137
    8. ' i' → logprob: -14.751025199890137
    9. '	int' → logprob: -14.751025199890137
    10. '    ' → logprob: -15.251025199890137

Token 87: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.47408756613731384
    2. '(' → logprob: -0.9740875959396362
    3. '(
' → logprob: -11.974087715148926
    4. 'input' → logprob: -12.849087715148926
    5. ' (' → logprob: -14.349087715148926
    6. '(

' → logprob: -14.849087715148926
    7. '(in' → logprob: -15.724087715148926
    8. ' ' → logprob: -16.59908676147461
    9. '()' → logprob: -16.59908676147461
    10. '('' → logprob: -16.84908676147461

Token 88: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17498748004436493
    2. '(' → logprob: -1.9249874353408813
    3. '())' → logprob: -4.424987316131592
    4. '('' → logprob: -7.049987316131592
    5. '("' → logprob: -7.174987316131592
    6. '("("' → logprob: -7.174987316131592
    7. '("")' → logprob: -9.42498779296875
    8. ')' → logprob: -9.67498779296875
    9. '(
' → logprob: -10.42498779296875
    10. '());' → logprob: -11.17498779296875

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008672364987432957
    2. '        
' → logprob: -5.25867223739624
    3. ')' → logprob: -5.88367223739624
    4. 'input' → logprob: -8.883672714233398
    5. '   ' → logprob: -9.008672714233398
    6. '       
' → logprob: -10.008672714233398
    7. '(' → logprob: -10.133672714233398
    8. '    
' → logprob: -10.258672714233398
    9. '\' → logprob: -10.258672714233398
    10. '      ' → logprob: -10.633672714233398

Token 90: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.20152688026428223
    2. ' input' → logprob: -1.8265268802642822
    3. '       ' → logprob: -4.076526641845703
    4. '   ' → logprob: -5.451526641845703
    5. '        
' → logprob: -8.951526641845703
    6. '    
' → logprob: -10.076526641845703
    7. ' 
' → logprob: -10.576526641845703
    8. '_input' → logprob: -10.826526641845703
    9. '    ' → logprob: -11.076526641845703
    10. '	input' → logprob: -11.076526641845703

Token 91: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.574251918005757e-05
    2. '_' → logprob: -10.125055313110352
    3. '_l' → logprob: -11.500055313110352
    4. '_li' → logprob: -13.125055313110352
    5. '_lst' → logprob: -14.500055313110352
    6. ' _' → logprob: -14.500055313110352
    7. ')_' → logprob: -14.625055313110352
    8. '_lista' → logprob: -14.625055313110352
    9. '_value' → logprob: -14.875055313110352
    10. '_lists' → logprob: -15.000055313110352

Token 92: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.16031205654144287
    2. '.' → logprob: -1.9103120565414429
    3. '.Append' → logprob: -10.160311698913574
    4. 'append' → logprob: -10.660311698913574
    5. '.app' → logprob: -11.035311698913574
    6. '<|end|>' → logprob: -13.160311698913574
    7. '_append' → logprob: -13.660311698913574
    8. '.setdefault' → logprob: -13.910311698913574
    9. '.extend' → logprob: -13.910311698913574
    10. '.ap' → logprob: -13.910311698913574

Token 93: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.16023032367229462
    2. '(' → logprob: -1.910230278968811
    3. ' (' → logprob: -12.41023063659668
    4. '(
' → logprob: -14.53523063659668
    5. '(valor' → logprob: -14.78523063659668
    6. '(v' → logprob: -15.03523063659668
    7. '(val' → logprob: -15.91023063659668
    8. '(values' → logprob: -16.16023063659668
    9. '(Value' → logprob: -16.66023063659668
    10. '(user' → logprob: -16.78523063659668

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.570319702499546e-05
    2. ')
' → logprob: -10.625025749206543
    3. ' )' → logprob: -14.000025749206543
    4. '   ' → logprob: -16.500024795532227
    5. '))' → logprob: -16.625024795532227
    6. ')return' → logprob: -16.875024795532227
    7. '[' → logprob: -17.125024795532227
    8. '}' → logprob: -17.375024795532227
    9. '(' → logprob: -17.375024795532227
    10. ']' → logprob: -17.500024795532227

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22026585042476654
    2. '
' → logprob: -2.3452658653259277
    3. '    
' → logprob: -2.9702658653259277
    4. 'return' → logprob: -3.9702658653259277
    5. '\n' → logprob: -4.470265865325928
    6. ' return' → logprob: -4.970265865325928
    7. ' 
' → logprob: -5.220265865325928
    8. '  
' → logprob: -5.470265865325928
    9. '' → logprob: -7.220265865325928
    10. '\' → logprob: -7.345265865325928

Token 96: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2534705102443695
    2. 'return' (adapté à ' return') → logprob: -1.503470540046692
    3. ' return' → logprob: -6.503470420837402
    4. '    
' → logprob: -10.628470420837402
    5. '	return' → logprob: -11.378470420837402
    6. ':return' → logprob: -13.378470420837402
    7. ' ' → logprob: -13.628470420837402
    8. '       ' → logprob: -14.253470420837402
    9. 'r' → logprob: -14.628470420837402
    10. 'ret' → logprob: -14.753470420837402

Token 97: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.016245387494564056
    2. 'input' → logprob: -4.141245365142822
    3. '_input' → logprob: -8.89124584197998
    4. '_' → logprob: -10.26624584197998
    5. '(input' → logprob: -10.89124584197998
    6. ' ' → logprob: -11.39124584197998
    7. ' ' → logprob: -12.64124584197998
    8. ' _' → logprob: -12.76624584197998
    9. '[input' → logprob: -14.14124584197998
    10. '	input' → logprob: -14.39124584197998

Token 98: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.194110756041482e-05
    2. '_' → logprob: -9.875061988830566
    3. '_l' → logprob: -11.750061988830566
    4. '_lst' → logprob: -14.000061988830566
    5. ' _' → logprob: -14.875061988830566
    6. '_li' → logprob: -14.875061988830566
    7. '_lista' → logprob: -15.000061988830566
    8. '_put' → logprob: -16.00006103515625
    9. '_input' → logprob: -16.37506103515625
    10. '_lists' → logprob: -16.62506103515625

Token 99: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6865828633308411
    2. '<|end|>' → logprob: -1.3115828037261963
    3. '```' → logprob: -2.3115828037261963
    4. '
' → logprob: -2.8115828037261963
    5. '\n' → logprob: -3.8115828037261963
    6. '[' → logprob: -4.061583042144775
    7. ' ' → logprob: -5.061583042144775
    8. '\' → logprob: -5.436583042144775
    9. '<|end|>' → logprob: -5.561583042144775
    10. 'newline' → logprob: -5.811583042144775

Token 101: ' find' (ID: 1646)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.561265766620636
    2. '_' → logprob: -1.5612657070159912
    3. ' compute' → logprob: -2.311265707015991
    4. ' sum' → logprob: -3.686265707015991
    5. ' ' → logprob: -3.811265707015991
    6. ' get' → logprob: -4.06126594543457
    7. ' _' → logprob: -4.56126594543457
    8. ' add' → logprob: -4.56126594543457
    9. ' main' → logprob: -4.68626594543457
    10. ' process' → logprob: -5.18626594543457

Token 102: '_two' (ID: 54305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07989565283060074
    2. '_max' → logprob: -2.5798957347869873
    3. ' _' → logprob: -8.079895973205566
    4. '_min' → logprob: -8.829895973205566
    5. '_sum' → logprob: -9.704895973205566
    6. '_missing' → logprob: -9.829895973205566
    7. '_unique' → logprob: -10.079895973205566
    8. '_m' → logprob: -10.329895973205566
    9. '_first' → logprob: -10.454895973205566
    10. '_sub' → logprob: -10.579895973205566

Token 103: '_l' (ID: 1478)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.01676119491457939
    2. '_' → logprob: -4.766761302947998
    3. '_numbers' → logprob: -5.141761302947998
    4. '_small' → logprob: -7.141761302947998
    5. '_max' → logprob: -7.141761302947998
    6. '_s' → logprob: -8.76676082611084
    7. '_indices' → logprob: -9.39176082611084
    8. '_elements' → logprob: -9.51676082611084
    9. '_cl' → logprob: -9.64176082611084
    10. '_l' → logprob: -9.89176082611084

Token 104: 'argest' (ID: 45028)
  Prédit: 'argest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argest' → logprob: -0.16722312569618225
    2. 'ist' → logprob: -2.1672232151031494
    3. 'e' → logprob: -4.41722297668457
    4. 'ong' → logprob: -5.79222297668457
    5. 'ists' → logprob: -5.79222297668457
    6. 'ast' → logprob: -6.04222297668457
    7. 'east' → logprob: -6.16722297668457
    8. 'ocal' → logprob: -6.29222297668457
    9. 'arge' → logprob: -6.41722297668457
    10. 'arges' → logprob: -6.41722297668457

Token 105: '(numbers' (ID: 98592)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1320189237594604
    2. '_' → logprob: -1.1320189237594604
    3. '_numbers' → logprob: -1.7570189237594604
    4. '(_' → logprob: -2.75701904296875
    5. '_elements' → logprob: -2.75701904296875
    6. '_values' → logprob: -4.50701904296875
    7. '_two' → logprob: -4.63201904296875
    8. '_(' → logprob: -5.25701904296875
    9. '<|end|>' → logprob: -5.63201904296875
    10. '(_)' → logprob: -5.88201904296875

Token 106: '):
' (ID: 1883)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8619565367698669
    2. ')' → logprob: -1.2369565963745117
    3. '):' → logprob: -1.7369565963745117
    4. '(numbers' → logprob: -2.6119565963745117
    5. '(nums' → logprob: -4.361956596374512
    6. '(n' → logprob: -4.486956596374512
    7. '_' → logprob: -4.736956596374512
    8. 's' → logprob: -7.861956596374512
    9. ' )' → logprob: -7.986956596374512
    10. ' ):' → logprob: -8.111956596374512

Token 107: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2986193895339966
    2. '(numbers' → logprob: -1.6736193895339966
    3. ':' → logprob: -3.048619270324707
    4. '(n' → logprob: -4.923619270324707
    5. '   ' → logprob: -5.173619270324707
    6. '(nums' → logprob: -5.298619270324707
    7. '(
' → logprob: -6.298619270324707
    8. ' :' → logprob: -6.923619270324707
    9. '_' → logprob: -7.298619270324707
    10. '(:' → logprob: -7.798619270324707

Token 108: ' """
' (ID: 7037)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9612926840782166
    2. '   ' → logprob: -0.9612926840782166
    3. ' 
' → logprob: -2.3362927436828613
    4. '    ' → logprob: -2.9612927436828613
    5. ' numbers' → logprob: -3.8362927436828613
    6. ' """
' → logprob: -3.8362927436828613
    7. ' """' → logprob: -4.711292743682861
    8. ' n' → logprob: -4.836292743682861
    9. ' if' → logprob: -5.086292743682861
    10. 'n' → logprob: -5.586292743682861

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043889936059713364
    2. '"""
' → logprob: -4.293889999389648
    3. '    ' → logprob: -4.543889999389648
    4. '"""' → logprob: -4.918889999389648
    5. ' """
' → logprob: -5.293889999389648
    6. '"' → logprob: -5.418889999389648
    7. 'Initial' → logprob: -6.918889999389648
    8. ' """' → logprob: -7.668889999389648
    9. '  ' → logprob: -9.668889999389648
    10. '#' → logprob: -10.668889999389648

Token 110: ' Trou' (ID: 58947)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34924718737602234
    2. ' """
' → logprob: -1.4742472171783447
    3. ' """' → logprob: -3.4742472171783447
    4. ' if' → logprob: -4.224246978759766
    5. ' 
' → logprob: -5.724246978759766
    6. ' Trou' → logprob: -5.724246978759766
    7. ' La' → logprob: -6.599246978759766
    8. ' Finds' → logprob: -6.974246978759766
    9. '    ' → logprob: -7.099246978759766
    10. ' Si' → logprob: -7.224246978759766

Token 111: 've' (ID: 737)
  Prédit: 've'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -5.574251918005757e-05
    2. 'v' → logprob: -10.750055313110352
    3. '   ' → logprob: -10.750055313110352
    4. 'ver' → logprob: -12.625055313110352
    5. '  ' → logprob: -13.375055313110352
    6. '    ' → logprob: -13.500055313110352
    7. '       ' → logprob: -13.625055313110352
    8. 'vez' → logprob: -13.750055313110352
    9. 'ves' → logprob: -14.375055313110352
    10. '        ' → logprob: -14.375055313110352

Token 112: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2216361165046692
    2. ' ' → logprob: -1.9716360569000244
    3. ' deux' → logprob: -3.2216360569000244
    4. ' the' → logprob: -4.9716362953186035
    5. ' two' → logprob: -5.2216362953186035
    6. '<|end|>' → logprob: -5.9716362953186035
    7. ' la' → logprob: -6.7216362953186035
    8. 'de' → logprob: -7.3466362953186035
    9. ' le' → logprob: -7.4716362953186035
    10. ',' → logprob: -7.7216362953186035

Token 113: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.04894012212753296
    2. 'de' → logprob: -3.0489401817321777
    3. ' deu' → logprob: -8.92393970489502
    4. ' ' → logprob: -9.29893970489502
    5. ' two' → logprob: -9.67393970489502
    6. '_de' → logprob: -11.42393970489502
    7. ' ' → logprob: -11.54893970489502
    8. '2' → logprob: -11.79893970489502
    9. ' deus' → logprob: -12.17393970489502
    10. 'Deux' → logprob: -12.17393970489502

Token 114: ' plus' (ID: 2932)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.476902574300766
    2. ' plus' → logprob: -1.2269026041030884
    3. ' ' → logprob: -3.351902484893799
    4. ' _' → logprob: -4.101902484893799
    5. '<|end|>' → logprob: -4.476902484893799
    6. '_plus' → logprob: -5.476902484893799
    7. 'plus' → logprob: -5.851902484893799
    8. ' largest' → logprob: -6.101902484893799
    9. ' espaces' → logprob: -6.226902484893799
    10. ' meilleurs' → logprob: -6.226902484893799

Token 115: ' grandes' (ID: 16325)
  Prédit: ' grands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grands' → logprob: -0.6924441456794739
    2. ' grandes' → logprob: -1.067444086074829
    3. '_gr' → logprob: -2.192444086074829
    4. ' grans' → logprob: -3.942444086074829
    5. 'gr' → logprob: -4.192444324493408
    6. ' grand' → logprob: -5.067444324493408
    7. '_' → logprob: -5.942444324493408
    8. 'grand' → logprob: -8.19244384765625
    9. ' grande' → logprob: -8.56744384765625
    10. ' gros' → logprob: -9.94244384765625

Token 116: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.030195532366633415
    2. ' ' → logprob: -4.655195713043213
    3. '<|end|>' → logprob: -5.030195713043213
    4. ' nombres' → logprob: -5.280195713043213
    5. 'val' → logprob: -6.280195713043213
    6. ' val' → logprob: -6.405195713043213
    7. ' valeur' → logprob: -6.530195713043213
    8. '_' → logprob: -6.655195713043213
    9. ' éléments' → logprob: -8.030195236206055
    10. ' numbers' → logprob: -8.030195236206055

Token 117: ' distinct' (ID: 16913)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22015441954135895
    2. ' distinct' → logprob: -2.3451545238494873
    3. ' dans' → logprob: -3.7201545238494873
    4. ' _' → logprob: -3.8451545238494873
    5. ' présentes' → logprob: -4.345154285430908
    6. 'dans' → logprob: -4.720154285430908
    7. 'distinct' → logprob: -4.845154285430908
    8. ' ' → logprob: -5.220154285430908
    9. '_d' → logprob: -5.470154285430908
    10. ' parmi' → logprob: -5.470154285430908

Token 118: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.17140640318393707
    2. 'antes' → logprob: -2.2964065074920654
    3. 'entes' → logprob: -3.2964065074920654
    4. ' ' → logprob: -4.421406269073486
    5. ' de' → logprob: -5.921406269073486
    6. ' es' → logprob: -6.046406269073486
    7. 'e' → logprob: -7.046406269073486
    8. '   ' → logprob: -7.546406269073486
    9. 'def' → logprob: -8.671406745910645
    10. 's' → logprob: -8.671406745910645

Token 119: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.6614305973052979
    2. ' présentes' → logprob: -1.4114305973052979
    3. ' de' → logprob: -2.036430597305298
    4. ' ' → logprob: -3.661430597305298
    5. '_' → logprob: -4.036430358886719
    6. 'dans' → logprob: -4.161430358886719
    7. ' d' → logprob: -4.411430358886719
    8. ' des' → logprob: -4.786430358886719
    9. ' (' → logprob: -5.036430358886719
    10. ' présents' → logprob: -5.161430358886719

Token 120: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.09350313991308212
    2. ' une' → logprob: -3.34350323677063
    3. ' numbers' → logprob: -4.093502998352051
    4. '(numbers' → logprob: -4.093502998352051
    5. ' les' → logprob: -5.093502998352051
    6. ' le' → logprob: -5.093502998352051
    7. ' a' → logprob: -5.968502998352051
    8. ' the' → logprob: -5.968502998352051
    9. ' un' → logprob: -6.843502998352051
    10. ' l' → logprob: -6.843502998352051

Token 121: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.27656489610671997
    2. ' ' → logprob: -1.6515648365020752
    3. ' list' → logprob: -3.151564836502075
    4. 'liste' → logprob: -5.526565074920654
    5. ' numbers' → logprob: -6.651565074920654
    6. 'list' → logprob: -7.026565074920654
    7. ' listes' → logprob: -8.151564598083496
    8. ' lista' → logprob: -8.776564598083496
    9. 'numbers' → logprob: -8.901564598083496
    10. ' lists' → logprob: -9.651564598083496

Token 122: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1384271383285522
    2. ''ent' → logprob: -1.2634271383285522
    3. ' ent' → logprob: -2.013427257537842
    4. ' int' → logprob: -2.138427257537842
    5. ' integers' → logprob: -2.513427257537842
    6. ' e' → logprob: -3.638427257537842
    7. ' numbers' → logprob: -4.513427257537842
    8. ' nombres' → logprob: -4.513427257537842
    9. ''' → logprob: -5.388427257537842
    10. ''int' → logprob: -5.763427257537842

Token 124: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -4.286852345103398e-05
    2. 'ier' → logprob: -10.375042915344238
    3. 'ières' → logprob: -11.750042915344238
    4. 'i' → logprob: -13.500042915344238
    5. 'ers' → logprob: -13.625042915344238
    6. '```' → logprob: -15.750042915344238
    7. 'ié' → logprob: -16.125041961669922
    8. ' i' → logprob: -16.125041961669922
    9. '   ' → logprob: -16.250041961669922
    10. 'ieres' → logprob: -16.375041961669922

Token 125: '.

' (ID: 364)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.006770133972168
    2. '(numbers' → logprob: -1.006770133972168
    3. '(n' → logprob: -2.381770133972168
    4. '   ' → logprob: -2.506770133972168
    5. ',' → logprob: -3.631770133972168
    6. ':' → logprob: -3.881770133972168
    7. ' ' → logprob: -4.256770133972168
    8. ' (' → logprob: -4.881770133972168
    9. '(
' → logprob: -5.131770133972168
    10. '_' → logprob: -5.506770133972168

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19993382692337036
    2. ' ' → logprob: -2.8249337673187256
    3. ' 
' → logprob: -3.0749337673187256
    4. '<|end|>' → logprob: -3.5749337673187256
    5. '  
' → logprob: -4.324934005737305
    6. '
' → logprob: -4.324934005737305
    7. '  ' → logprob: -5.449934005737305
    8. '   
' → logprob: -5.574934005737305
    9. '    
' → logprob: -5.699934005737305
    10. 'n' → logprob: -6.199934005737305

Token 127: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08088720589876175
    2. 'def' → logprob: -3.9558873176574707
    3. ' 
' → logprob: -3.9558873176574707
    4. '
' → logprob: -4.455887317657471
    5. ' def' → logprob: -4.580887317657471
    6. ' if' → logprob: -4.830887317657471
    7. 'n' → logprob: -5.705887317657471
    8. '    
' → logprob: -5.705887317657471
    9. '  
' → logprob: -7.330887317657471
    10. ' n' → logprob: -7.330887317657471

Token 128: ':
' (ID: 734)
  Prédit: '(numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.5803292393684387
    2. '   ' → logprob: -1.330329179763794
    3. ',' → logprob: -2.830329179763794
    4. ' (' → logprob: -3.080329179763794
    5. ':' → logprob: -3.580329179763794
    6. ')' → logprob: -4.580329418182373
    7. '(n' → logprob: -4.955329418182373
    8. '):' → logprob: -5.080329418182373
    9. ' :' → logprob: -5.205329418182373
    10. '<|end|>' → logprob: -6.080329418182373

Token 129: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02867087908089161
    2. ' numbers' → logprob: -3.6536707878112793
    3. '    ' → logprob: -7.153670787811279
    4. 'numbers' → logprob: -7.903670787811279
    5. '(numbers' → logprob: -8.028671264648438
    6. ' list' → logprob: -8.528671264648438
    7. ' ' → logprob: -8.903671264648438
    8. '  ' → logprob: -9.153671264648438
    9. '       ' → logprob: -9.528671264648438
    10. ' nums' → logprob: -9.528671264648438

Token 130: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' (adapté à ' numbers') → logprob: -0.023321064189076424
    2. ' numbers' → logprob: -3.7733211517333984
    3. '   ' → logprob: -9.648321151733398
    4. 'list' → logprob: -12.023321151733398
    5. '(numbers' → logprob: -12.773321151733398
    6. 'nums' → logprob: -13.648321151733398
    7. 'n' → logprob: -15.398321151733398
    8. '       ' → logprob: -16.0233211517334
    9. ' list' → logprob: -16.1483211517334
    10. 'lst' → logprob: -16.1483211517334

Token 131: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02579343691468239
    2. ' :' → logprob: -4.025793552398682
    3. '):' → logprob: -5.275793552398682
    4. ' (' → logprob: -6.400793552398682
    5. ')' → logprob: -8.525793075561523
    6. '):
' → logprob: -8.650793075561523
    7. ':list' → logprob: -8.650793075561523
    8. ' ):' → logprob: -9.900793075561523
    9. '<|end|>' → logprob: -10.025793075561523
    10. '   ' → logprob: -10.275793075561523

Token 132: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06200510635972023
    2. ' list' → logprob: -2.812005043029785
    3. '   ' → logprob: -10.562005043029785
    4. 'List' → logprob: -11.937005043029785
    5. ':list' → logprob: -12.812005043029785
    6. '    ' → logprob: -14.562005043029785
    7. ')' → logprob: -14.812005043029785
    8. ' List' → logprob: -15.187005043029785
    9. '=list' → logprob: -15.187005043029785
    10. ' ' → logprob: -15.562005043029785

Token 133: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.28693312406539917
    2. '):' → logprob: -1.411933183670044
    3. ':' → logprob: -5.786932945251465
    4. ' of' → logprob: -6.286932945251465
    5. '<int' → logprob: -8.536932945251465
    6. '):
' → logprob: -8.536932945251465
    7. '[' → logprob: -8.911932945251465
    8. ')' → logprob: -9.161932945251465
    9. '=int' → logprob: -9.661932945251465
    10. ':int' → logprob: -10.161932945251465

Token 134: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006718690041452646
    2. ' int' → logprob: -5.006718635559082
    3. '[int' → logprob: -13.006718635559082
    4. '<int' → logprob: -14.006718635559082
    5. '(int' → logprob: -16.5067195892334
    6. ':int' → logprob: -16.5067195892334
    7. '=int' → logprob: -17.0067195892334
    8. ')' → logprob: -17.0067195892334
    9. ']int' → logprob: -17.0067195892334
    10. ' ' → logprob: -17.2567195892334

Token 135: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003252692986279726
    2. ')' → logprob: -5.8782525062561035
    3. ' ):' → logprob: -7.8782525062561035
    4. '):
' → logprob: -10.128252983093262
    5. ':' → logprob: -11.128252983093262
    6. '   ' → logprob: -11.753252983093262
    7. ' ' → logprob: -12.503252983093262
    8. ' )' → logprob: -14.378252983093262
    9. '[int' → logprob: -14.503252983093262
    10. '  ' → logprob: -14.878252983093262

Token 136: ' La' (ID: 3038)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4401250183582306
    2. ')' → logprob: -2.065124988555908
    3. '<|end|>' → logprob: -2.315124988555908
    4. ' ' → logprob: -3.065124988555908
    5. '    ' → logprob: -3.690124988555908
    6. 'list' → logprob: -3.815124988555908
    7. '   ' → logprob: -3.940124988555908
    8. 'List' → logprob: -5.690124988555908
    9. ' 
' → logprob: -5.940124988555908
    10. '<|end|>' → logprob: -6.565124988555908

Token 137: ' liste' (ID: 31719)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.055293321609497
    2. ' list' → logprob: -1.180293321609497
    3. ' liste' → logprob: -1.430293321609497
    4. 'numbers' → logprob: -3.305293321609497
    5. ' nombres' → logprob: -3.555293321609497
    6. ' listes' → logprob: -4.930293083190918
    7. ' int' → logprob: -5.305293083190918
    8. ' ' → logprob: -5.305293083190918
    9. 'list' → logprob: -5.430293083190918
    10. 'int' → logprob: -5.680293083190918

Token 138: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.15436311066150665
    2. '<|end|>' → logprob: -2.7793631553649902
    3. '[int' → logprob: -3.4043631553649902
    4. ':' → logprob: -3.6543631553649902
    5. ' of' → logprob: -4.52936315536499
    6. 'des' → logprob: -6.15436315536499
    7. ' d' → logprob: -6.40436315536499
    8. ' de' → logprob: -6.77936315536499
    9. '):' → logprob: -7.02936315536499
    10. ')' → logprob: -7.15436315536499

Token 139: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.5295932292938232
    2. ' ent' → logprob: -2.1545932292938232
    3. 'numbers' → logprob: -2.5295932292938232
    4. 'int' → logprob: -2.5295932292938232
    5. 'ent' → logprob: -2.7795932292938232
    6. ' numbers' → logprob: -3.4045932292938232
    7. 'n' → logprob: -3.9045932292938232
    8. ' int' → logprob: -4.279593467712402
    9. ' integers' → logprob: -6.029593467712402
    10. 'nombre' → logprob: -6.404593467712402

Token 140: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0001427538663847372
    2. 'ers' → logprob: -9.125143051147461
    3. 'gers' → logprob: -11.500143051147461
    4. 'ières' → logprob: -12.125143051147461
    5. 'eurs' → logprob: -12.250143051147461
    6. 'i' → logprob: -12.375143051147461
    7. 'ieurs' → logprob: -12.375143051147461
    8. 'ier' → logprob: -13.375143051147461
    9. '   ' → logprob: -14.125143051147461
    10. 'e' → logprob: -14.625143051147461

Token 141: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01848398894071579
    2. ')' → logprob: -4.643484115600586
    3. ' ):' → logprob: -5.268484115600586
    4. '):
' → logprob: -6.143484115600586
    5. '   ' → logprob: -6.768484115600586
    6. ' )' → logprob: -9.143484115600586
    7. ':' → logprob: -9.268484115600586
    8. ' ):
' → logprob: -11.393484115600586
    9. '):
' → logprob: -12.393484115600586
    10. ' :' → logprob: -12.643484115600586

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030171481892466545
    2. 'n' → logprob: -4.6551713943481445
    3. '    
' → logprob: -4.9051713943481445
    4. '    ' → logprob: -5.6551713943481445
    5. ' 
' → logprob: -5.7801713943481445
    6. '
' → logprob: -6.2801713943481445
    7. '   
' → logprob: -7.0301713943481445
    8. ')' → logprob: -7.4051713943481445
    9. '```' → logprob: -7.6551713943481445
    10. '     
' → logprob: -7.9051713943481445

Token 143: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42678266763687134
    2. 'Returns' (adapté à ' Returns') → logprob: -1.6767826080322266
    3. '
' → logprob: -2.4267826080322266
    4. '"""
' → logprob: -3.3017826080322266
    5. '    
' → logprob: -4.926782608032227
    6. ' Returns' → logprob: -5.051782608032227
    7. ' """
' → logprob: -5.176782608032227
    8. 'returns' → logprob: -5.176782608032227
    9. '"""' → logprob: -5.551782608032227
    10. ' 
' → logprob: -6.051782608032227

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6753278970718384
    2. ' =' → logprob: -2.050327777862549
    3. ',' → logprob: -2.300327777862549
    4. ' :' → logprob: -2.925327777862549
    5. '  ' → logprob: -3.300327777862549
    6. '   ' → logprob: -3.800327777862549
    7. '[' → logprob: -3.925327777862549
    8. ' (' → logprob: -4.050327777862549
    9. ' tuple' → logprob: -4.800327777862549
    10. '=' → logprob: -4.925327777862549

Token 145: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6637766361236572
    2. ' tuple' → logprob: -0.9137766361236572
    3. ' None' → logprob: -2.7887766361236572
    4. ' (' → logprob: -4.413776397705078
    5. '    ' → logprob: -5.788776397705078
    6. 'tuple' → logprob: -6.163776397705078
    7. '(tuple' → logprob: -6.413776397705078
    8. '(None' → logprob: -6.788776397705078
    9. ' Tuple' → logprob: -7.038776397705078
    10. 'None' → logprob: -7.288776397705078

Token 146: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' (adapté à ' tuple') → logprob: -0.019291730597615242
    2. ' tuple' → logprob: -4.019291877746582
    3. 'list' → logprob: -6.894291877746582
    4. '   ' → logprob: -9.519291877746582
    5. 'Tuple' → logprob: -10.894291877746582
    6. ' list' → logprob: -11.644291877746582
    7. 'A' → logprob: -11.644291877746582
    8. 'tu' → logprob: -11.769291877746582
    9. '(tuple' → logprob: -12.019291877746582
    10. 'int' → logprob: -13.394291877746582

Token 147: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' Un' (ID: 1367)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08819615095853806
    2. ' None' → logprob: -3.338196039199829
    3. '(None' → logprob: -4.088196277618408
    4. '(int' → logprob: -4.338196277618408
    5. '<|end|>' → logprob: -4.838196277618408
    6. 'None' → logprob: -4.963196277618408
    7. '(' → logprob: -6.838196277618408
    8. '(max' → logprob: -7.713196277618408
    9. ' int' → logprob: -7.963196277618408
    10. ' two' → logprob: -8.08819580078125

Token 149: ' tuple' (ID: 31311)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12503159046173096
    2. ' des' → logprob: -2.6250314712524414
    3. ' tuple' → logprob: -4.875031471252441
    4. ' deux' → logprob: -5.250031471252441
    5. ' space' → logprob: -5.625031471252441
    6. '<|end|>' → logprob: -5.625031471252441
    7. '(' → logprob: -5.750031471252441
    8. ' of' → logprob: -6.000031471252441
    9. '(space' → logprob: -6.000031471252441
    10. ' ' → logprob: -6.000031471252441

Token 150: ' contenant' (ID: 131049)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.27769145369529724
    2. '<|end|>' → logprob: -2.65269136428833
    3. ' des' → logprob: -2.90269136428833
    4. ' contenant' → logprob: -2.90269136428833
    5. ' containing' → logprob: -3.65269136428833
    6. ' of' → logprob: -3.90269136428833
    7. ' de' → logprob: -4.90269136428833
    8. ' consisting' → logprob: -6.40269136428833
    9. ' with' → logprob: -6.40269136428833
    10. '<int' → logprob: -7.02769136428833

Token 151: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1409330517053604
    2. ' les' → logprob: -2.265933036804199
    3. ' deux' → logprob: -4.515933036804199
    4. '(' → logprob: -4.890933036804199
    5. '<|end|>' → logprob: -6.140933036804199
    6. '(None' → logprob: -6.765933036804199
    7. ' la' → logprob: -6.890933036804199
    8. ' two' → logprob: -6.890933036804199
    9. ' ' → logprob: -7.265933036804199
    10. 'de' → logprob: -7.390933036804199

Token 152: ' plus' (ID: 2932)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.8938117027282715
    2. ' plus' → logprob: -1.1438117027282715
    3. 'de' → logprob: -1.7688117027282715
    4. ' two' → logprob: -3.1438117027282715
    5. ' (' → logprob: -4.1438117027282715
    6. 'plus' → logprob: -4.6438117027282715
    7. ' max' → logprob: -5.2688117027282715
    8. '(max' → logprob: -5.3938117027282715
    9. 'max' → logprob: -5.6438117027282715
    10. 'two' → logprob: -5.7688117027282715

Token 153: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.43929323554039
    2. '_gr' → logprob: -1.4392932653427124
    3. '_' → logprob: -2.314293146133423
    4. '_large' → logprob: -5.189293384552002
    5. '_g' → logprob: -5.439293384552002
    6. ' _' → logprob: -5.439293384552002
    7. ' grand' → logprob: -6.314293384552002
    8. ' grandes' → logprob: -6.814293384552002
    9. '_p' → logprob: -7.314293384552002
    10. 'grand' → logprob: -7.814293384552002

Token 154: ' valeur' (ID: 41664)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6379430890083313
    2. '_val' → logprob: -1.8879430294036865
    3. ' ,' → logprob: -2.7629430294036865
    4. '<|end|>' → logprob: -2.8879430294036865
    5. ' valeur' → logprob: -3.0129430294036865
    6. ' _' → logprob: -3.2629430294036865
    7. '_' → logprob: -3.5129430294036865
    8. '_value' → logprob: -3.5129430294036865
    9. ' ' → logprob: -3.8879430294036865
    10. 's' → logprob: -4.137943267822266

Token 155: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18142761290073395
    2. ' ,' → logprob: -1.9314275979995728
    3. ' (' → logprob: -4.181427478790283
    4. ' et' → logprob: -5.681427478790283
    5. '(' → logprob: -7.306427478790283
    6. ' des' → logprob: -7.681427478790283
    7. ' distinct' → logprob: -8.181427955627441
    8. ' and' → logprob: -8.306427955627441
    9. 's' → logprob: -8.806427955627441
    10. 'et' → logprob: -9.681427955627441

Token 156: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.006193506997078657
    2. ' ' → logprob: -5.3811936378479
    3. ' the' → logprob: -7.5061936378479
    4. 'la' → logprob: -8.256193161010742
    5. '<|end|>' → logprob: -8.506193161010742
    6. ' ' → logprob: -8.881193161010742
    7. 'the' → logprob: -9.381193161010742
    8. ' a' → logprob: -9.756193161010742
    9. ' l' → logprob: -9.756193161010742
    10. ',' → logprob: -10.131193161010742

Token 157: ' deuxième' (ID: 51664)
  Prédit: ' deuxième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deuxième' → logprob: -0.4709048271179199
    2. ' seconde' → logprob: -1.84590482711792
    3. 'de' → logprob: -2.22090482711792
    4. ' second' → logprob: -2.34590482711792
    5. ' plus' → logprob: -4.72090482711792
    6. 'second' → logprob: -5.59590482711792
    7. ' ' → logprob: -8.095905303955078
    8. 's' → logprob: -9.470905303955078
    9. ' deux' → logprob: -9.470905303955078
    10. ' suivante' → logprob: -9.845905303955078

Token 158: ' plus' (ID: 2932)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11797426640987396
    2. ' plus' → logprob: -3.117974281311035
    3. 'plus' → logprob: -3.492974281311035
    4. ' _' → logprob: -4.867974281311035
    5. '_plus' → logprob: -4.992974281311035
    6. 'largest' → logprob: -4.992974281311035
    7. '<|end|>' → logprob: -5.242974281311035
    8. '_l' → logprob: -6.492974281311035
    9. ' largest' → logprob: -6.742974281311035
    10. ',' → logprob: -6.742974281311035

Token 159: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.5179529190063477
    2. '_' → logprob: -1.3929529190063477
    3. '_gr' → logprob: -2.5179529190063477
    4. ' _' → logprob: -3.3929529190063477
    5. 'gr' → logprob: -4.767952919006348
    6. '_large' → logprob: -4.767952919006348
    7. ' grand' → logprob: -5.017952919006348
    8. ' grandes' → logprob: -5.267952919006348
    9. 'grand' → logprob: -5.517952919006348
    10. ' large' → logprob: -5.767952919006348

Token 160: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49500027298927307
    2. ' valeur' → logprob: -1.2450002431869507
    3. '_' → logprob: -2.7450003623962402
    4. ' _' → logprob: -4.62000036239624
    5. ' distinct' → logprob: -4.87000036239624
    6. ',' → logprob: -4.87000036239624
    7. ' val' → logprob: -5.37000036239624
    8. ' ,' → logprob: -6.12000036239624
    9. ' value' → logprob: -6.49500036239624
    10. ' valeurs' → logprob: -7.12000036239624

Token 161: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022462252527475357
    2. ' (' → logprob: -4.647462368011475
    3. ' ,' → logprob: -5.397462368011475
    4. '(' → logprob: -6.272462368011475
    5. '(None' → logprob: -6.522462368011475
    6. '   ' → logprob: -6.647462368011475
    7. ',
' → logprob: -6.772462368011475
    8. ' des' → logprob: -6.897462368011475
    9. '(
' → logprob: -8.147461891174316
    10. ' (,' → logprob: -8.897461891174316

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2187070995569229
    2. '
' → logprob: -2.0937070846557617
    3. ' (' → logprob: -4.343707084655762
    4. '(' → logprob: -4.468707084655762
    5. '    
' → logprob: -4.968707084655762
    6. ' 
' → logprob: -4.968707084655762
    7. '\n' → logprob: -4.968707084655762
    8. '(None' → logprob: -5.718707084655762
    9. '_' → logprob: -6.093707084655762
    10. ' or' → logprob: -6.218707084655762

Token 163: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1320401281118393
    2. '
' → logprob: -2.257040023803711
    3. '"""
' (adapté à ' """
') → logprob: -4.507040023803711
    4. '    
' → logprob: -6.132040023803711
    5. '"""' → logprob: -6.382040023803711
    6. ' """
' → logprob: -6.382040023803711
    7. ' or' → logprob: -7.007040023803711
    8. '    ' → logprob: -8.007040023803711
    9. '  
' → logprob: -8.257040023803711
    10. '   
' → logprob: -8.632040023803711

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13813842833042145
    2. ' max' → logprob: -2.76313853263855
    3. 'max' → logprob: -3.26313853263855
    4. ' if' → logprob: -4.513138294219971
    5. ' largest' → logprob: -5.388138294219971
    6. ' first' → logprob: -5.888138294219971
    7. 'largest' → logprob: -6.138138294219971
    8. '    
' → logprob: -6.763138294219971
    9. 'def' → logprob: -7.013138294219971
    10. ' highest' → logprob: -7.138138294219971

Token 165: ' first' (ID: 1577)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5109744668006897
    2. 'if' → logprob: -1.885974407196045
    3. 'max' → logprob: -2.260974407196045
    4. ' max' → logprob: -2.885974407196045
    5. '   ' → logprob: -3.510974407196045
    6. 'largest' → logprob: -4.010974407196045
    7. ' first' → logprob: -4.385974407196045
    8. ' largest' → logprob: -4.510974407196045
    9. 'first' (adapté à ' first') → logprob: -4.760974407196045
    10. ' unique' → logprob: -5.760974407196045

Token 166: '_max' (ID: 13731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3720657229423523
    2. '_max' → logprob: -1.997065782546997
    3. '_' → logprob: -2.747065782546997
    4. ',' → logprob: -2.747065782546997
    5. '_l' → logprob: -3.247065782546997
    6. '=' → logprob: -5.747065544128418
    7. '_val' → logprob: -5.747065544128418
    8. '_large' → logprob: -7.497065544128418
    9. '_num' → logprob: -8.497065544128418
    10. '=None' → logprob: -9.247065544128418

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07697845995426178
    2. ',' → logprob: -2.9519784450531006
    3. '=' → logprob: -3.8269784450531006
    4. ' ,' → logprob: -10.45197868347168
    5. ' ' → logprob: -10.95197868347168
    6. '   ' → logprob: -11.20197868347168
    7. '_' → logprob: -12.32697868347168
    8. 'imum' → logprob: -12.70197868347168
    9. '_val' → logprob: -12.70197868347168
    10. '  ' → logprob: -12.95197868347168

Token 168: ' max' (ID: 2999)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6822879910469055
    2. 'float' → logprob: -0.8072879910469055
    3. ' None' → logprob: -3.6822879314422607
    4. ' float' → logprob: -4.05728816986084
    5. 'second' → logprob: -5.55728816986084
    6. '-' → logprob: -7.18228816986084
    7. ' second' → logprob: -7.43228816986084
    8. '   ' → logprob: -7.93228816986084
    9. 'max' → logprob: -8.05728816986084
    10. ' max' → logprob: -10.55728816986084

Token 169: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.0012510620290413499
    2. '(' → logprob: -7.126251220703125
    3. '([' → logprob: -8.001251220703125
    4. 'numbers' → logprob: -9.626251220703125
    5. ' numbers' → logprob: -11.501251220703125
    6. ' (' → logprob: -11.876251220703125
    7. '(set' → logprob: -12.001251220703125
    8. '(number' → logprob: -12.001251220703125
    9. '(values' → logprob: -12.376251220703125
    10. '()' → logprob: -13.126251220703125

Token 170: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03374343737959862
    2. ')
' → logprob: -3.408743381500244
    3. '   ' → logprob: -9.783743858337402
    4. ' )' → logprob: -10.908743858337402
    5. ' )
' → logprob: -11.408743858337402
    6. ')
' → logprob: -12.408743858337402
    7. ')

' → logprob: -13.033743858337402
    8. ' ' → logprob: -13.158743858337402
    9. ',' → logprob: -13.658743858337402
    10. '[' → logprob: -14.283743858337402

Token 171: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0039222645573318005
    2. '    
' → logprob: -6.378922462463379
    3. '   ' → logprob: -6.753922462463379
    4. ' 
' → logprob: -8.128922462463379
    5. '  
' → logprob: -8.503922462463379
    6. '<|end|>' → logprob: -8.878922462463379
    7. 'second' → logprob: -9.003922462463379
    8. ' second' → logprob: -9.128922462463379
    9. '   
' → logprob: -9.378922462463379
    10. '
' → logprob: -11.003922462463379

Token 172: ' #' (ID: 1069)
  Prédit: ' second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' second' → logprob: -1.054958701133728
    2. ' numbers' → logprob: -1.054958701133728
    3. 'numbers' → logprob: -1.804958701133728
    4. 'second' → logprob: -2.4299588203430176
    5. ' ' → logprob: -3.8049588203430176
    6. ' 
' → logprob: -4.429958820343018
    7. '    
' → logprob: -5.304958820343018
    8. '   ' → logprob: -6.179958820343018
    9. '_second' → logprob: -6.429958820343018
    10. '
' → logprob: -6.429958820343018

Token 173: ' Cré' (ID: 109203)
  Prédit: ' second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.9399325251579285
    2. ' numbers' → logprob: -1.1899325847625732
    3. ' remaining' → logprob: -2.1899325847625732
    4. 'second' → logprob: -2.8149325847625732
    5. ' unique' → logprob: -3.1899325847625732
    6. ' filtered' → logprob: -3.3149325847625732
    7. 'numbers' → logprob: -3.8149325847625732
    8. 'remaining' → logprob: -4.689932346343994
    9. ' try' → logprob: -5.314932346343994
    10. ' rest' → logprob: -5.564932346343994

Token 174: 'ation' (ID: 387)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.017482805997133255
    2. 'ate' → logprob: -4.642482757568359
    3. 'e' → logprob: -5.642482757568359
    4. 'ons' → logprob: -5.767482757568359
    5. 'ation' → logprob: -7.767482757568359
    6. 'ez' → logprob: -9.39248275756836
    7. '   ' → logprob: -9.76748275756836
    8. '#' → logprob: -9.76748275756836
    9. '```' → logprob: -10.14248275756836
    10. 'ér' → logprob: -10.51748275756836

Token 175: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.13998864591121674
    2. ' de' → logprob: -3.639988660812378
    3. '    ' → logprob: -4.014988422393799
    4. ' of' → logprob: -4.014988422393799
    5. ' des' → logprob: -4.389988422393799
    6. ' une' → logprob: -4.389988422393799
    7. '   ' → logprob: -4.514988422393799
    8. ' a' → logprob: -5.139988422393799
    9. ' un' → logprob: -5.389988422393799
    10. ' ' → logprob: -5.389988422393799

Token 176: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.455338716506958
    2. ' une' → logprob: -1.955338716506958
    3. 'e' → logprob: -2.455338716506958
    4. 'une' → logprob: -2.580338716506958
    5. ' a' → logprob: -3.580338716506958
    6. ''un' → logprob: -4.205338478088379
    7. 'a' → logprob: -4.580338478088379
    8. '’une' → logprob: -5.955338478088379
    9. ''' → logprob: -6.205338478088379
    10. ' ' → logprob: -6.830338478088379

Token 177: ' copie' (ID: 134141)
  Prédit: ' copie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' copie' → logprob: -0.7202275395393372
    2. 'liste' → logprob: -1.8452274799346924
    3. 'cop' → logprob: -1.9702274799346924
    4. 'copy' → logprob: -2.3452274799346924
    5. ' liste' → logprob: -2.8452274799346924
    6. 'filtered' → logprob: -3.8452274799346924
    7. ' copy' → logprob: -4.2202277183532715
    8. ' filtered' → logprob: -4.7202277183532715
    9. 's' → logprob: -4.8452277183532715
    10. 'list' → logprob: -6.2202277183532715

Token 178: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.846392810344696
    2. ' copy' → logprob: -2.471392869949341
    3. ' unique' → logprob: -2.471392869949341
    4. ' numbers' → logprob: -2.471392869949341
    5. '   ' → logprob: -2.596392869949341
    6. 'numbers' → logprob: -2.846392869949341
    7. ' des' → logprob: -3.471392869949341
    8. '_copy' → logprob: -3.596392869949341
    9. 'de' → logprob: -3.721392869949341
    10. ' of' → logprob: -3.971392869949341

Token 179: ' la' (ID: 557)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.2821351885795593
    2. 'numbers' → logprob: -1.407135248184204
    3. ' the' → logprob: -7.407135009765625
    4. ' la' → logprob: -8.532135009765625
    5. 'the' → logprob: -9.907135009765625
    6. ' ' → logprob: -10.157135009765625
    7. '(numbers' → logprob: -10.157135009765625
    8. ' [' → logprob: -11.532135009765625
    9. '[' → logprob: -11.657135009765625
    10. 'l' → logprob: -11.782135009765625

Token 180: ' liste' (ID: 31719)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.2169099748134613
    2. ' numbers' → logprob: -1.7169100046157837
    3. ' liste' → logprob: -5.216909885406494
    4. 'liste' → logprob: -5.216909885406494
    5. 'list' → logprob: -5.841909885406494
    6. ' list' → logprob: -7.091909885406494
    7. 'n' → logprob: -8.341910362243652
    8. '(numbers' → logprob: -8.466910362243652
    9. 'lists' → logprob: -9.091910362243652
    10. ' listes' → logprob: -10.466910362243652

Token 181: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0963611602783203
    2. ' sans' → logprob: -1.4713611602783203
    3. ' copy' → logprob: -2.3463611602783203
    4. ' numbers' → logprob: -2.5963611602783203
    5. 's' → logprob: -2.8463611602783203
    6. 'numbers' → logprob: -3.7213611602783203
    7. ' pour' → logprob: -4.09636116027832
    8. ' without' → logprob: -4.22136116027832
    9. ' copie' → logprob: -4.22136116027832
    10. '    
' → logprob: -4.59636116027832

Token 182: ' éviter' (ID: 64013)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.461207628250122
    2. ' retirer' → logprob: -1.461207628250122
    3. ' pouvoir' → logprob: -2.086207628250122
    4. ' éviter' → logprob: -2.211207628250122
    5. ' supprimer' → logprob: -2.336207628250122
    6. 'numbers' → logprob: -2.961207628250122
    7. ' enlever' → logprob: -3.086207628250122
    8. ' ne' → logprob: -3.961207628250122
    9. 'ret' → logprob: -4.586207389831543
    10. 'r' → logprob: -4.711207389831543

Token 183: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.18149222433567047
    2. ' d' → logprob: -2.806492328643799
    3. ' la' → logprob: -3.056492328643799
    4. ' des' → logprob: -4.431492328643799
    5. ' ' → logprob: -4.681492328643799
    6. ' que' → logprob: -4.681492328643799
    7. ' les' → logprob: -5.056492328643799
    8. 'mod' → logprob: -5.056492328643799
    9. 'de' → logprob: -5.431492328643799
    10. '   ' → logprob: -6.431492328643799

Token 184: ' modifier' (ID: 37684)
  Prédit: 'modifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'modifier' → logprob: -0.21024847030639648
    2. 'mod' → logprob: -1.9602484703063965
    3. ' modifier' → logprob: -3.4602484703063965
    4. ' alt' → logprob: -5.5852484703063965
    5. '   ' → logprob: -6.2102484703063965
    6. ' ' → logprob: -6.2102484703063965
    7. 'modify' → logprob: -6.7102484703063965
    8. '    
' → logprob: -6.8352484703063965
    9. ' mod' → logprob: -6.8352484703063965
    10. 'mut' → logprob: -6.9602484703063965

Token 185: ' l' (ID: 305)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.701808512210846
    2. ' the' → logprob: -2.076808452606201
    3. ' l' → logprob: -2.076808452606201
    4. ' la' → logprob: -2.076808452606201
    5. ' original' → logprob: -2.951808452606201
    6. 'numbers' → logprob: -3.201808452606201
    7. ' ' → logprob: -4.201808452606201
    8. 'the' → logprob: -5.076808452606201
    9. 'l' → logprob: -5.201808452606201
    10. 'original' → logprob: -5.826808452606201

Token 186: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23012475669384003
    2. 'e' → logprob: -2.4801247119903564
    3. ' original' → logprob: -3.2301247119903564
    4. ' numbers' → logprob: -3.7301247119903564
    5. 'original' → logprob: -4.1051249504089355
    6. 'numbers' → logprob: -4.2301249504089355
    7. 'es' → logprob: -4.7301249504089355
    8. ' a' → logprob: -4.9801249504089355
    9. '(numbers' → logprob: -5.8551249504089355
    10. ''' → logprob: -6.3551249504089355

Token 187: 'original' (ID: 22155)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.08242256194353104
    2. ' numbers' → logprob: -3.2074224948883057
    3. 'original' → logprob: -3.4574224948883057
    4. ' original' → logprob: -5.082422733306885
    5. 'n' → logprob: -8.207422256469727
    6. ' ' → logprob: -9.082422256469727
    7. '(numbers' → logprob: -9.332422256469727
    8. 'list' → logprob: -9.707422256469727
    9. ' originales' → logprob: -9.957422256469727
    10. 'liste' → logprob: -10.207422256469727

Token 188: 'e' (ID: 68)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1652931421995163
    2. ' numbers' → logprob: -2.9152932167053223
    3. ' copy' → logprob: -3.6652932167053223
    4. '    
' → logprob: -4.290293216705322
    5. ' second' → logprob: -4.415293216705322
    6. '
' → logprob: -4.415293216705322
    7. 'numbers' → logprob: -4.540293216705322
    8. ' temp' → logprob: -5.040293216705322
    9. ' copie' → logprob: -5.915293216705322
    10. ',' → logprob: -6.040293216705322

Token 189: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0767056867480278
    2. ' second' → logprob: -4.076705455780029
    3. '    
' → logprob: -4.451705455780029
    4. '
' → logprob: -4.451705455780029
    5. ' numbers' → logprob: -4.576705455780029
    6. 'numbers' → logprob: -4.701705455780029
    7. ' copy' → logprob: -5.076705455780029
    8. 'second' → logprob: -5.826705455780029
    9. ' copie' → logprob: -7.076705455780029
    10. 'copy' → logprob: -7.201705455780029

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011210862547159195
    2. ' second' → logprob: -5.636210918426514
    3. ' numbers' → logprob: -6.011210918426514
    4. '    
' → logprob: -6.386210918426514
    5. ' copy' → logprob: -6.761210918426514
    6. 'numbers' → logprob: -7.136210918426514
    7. ' filtered' → logprob: -8.136210441589355
    8. 'second' → logprob: -8.636210441589355
    9. '
' → logprob: -8.761210441589355
    10. ' temp' → logprob: -9.136210441589355

Token 191: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.8466840386390686
    2. ' temp' → logprob: -1.2216839790344238
    3. ' second' → logprob: -2.471683979034424
    4. ' copy' → logprob: -2.846683979034424
    5. 'numbers' (adapté à ' numbers') → logprob: -3.096683979034424
    6. '   ' → logprob: -3.471683979034424
    7. 'temp' → logprob: -3.846683979034424
    8. ' filtered' → logprob: -4.096683979034424
    9. 'second' → logprob: -5.221683979034424
    10. ' remaining' → logprob: -5.596683979034424

Token 192: '_copy' (ID: 37283)
  Prédit: '_copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_copy' → logprob: -0.025547241792082787
    2. '_without' → logprob: -3.9005472660064697
    3. '_filtered' → logprob: -6.275547027587891
    4. '_' → logprob: -6.525547027587891
    5. '_temp' → logprob: -6.775547027587891
    6. '_except' → logprob: -9.02554702758789
    7. ' =' → logprob: -9.27554702758789
    8. '_tmp' → logprob: -9.65054702758789
    9. '_no' → logprob: -10.27554702758789
    10. 'copy' → logprob: -10.40054702758789

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326475739479065
    2. '=' → logprob: -1.3132647275924683
    3. ' ' → logprob: -13.813264846801758
    4. '[:]' → logprob: -14.063264846801758
    5. ')' → logprob: -14.563264846801758
    6. '[' → logprob: -15.563264846801758
    7. '.' → logprob: -15.688264846801758
    8. ',' → logprob: -15.813264846801758
    9. 's' → logprob: -16.313264846801758
    10. '_' → logprob: -17.063264846801758

Token 194: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.6964994072914124
    2. 'numbers' → logprob: -0.6964994072914124
    3. '[n' → logprob: -6.446499347686768
    4. ' [' → logprob: -6.571499347686768
    5. '[' → logprob: -8.446499824523926
    6. '(numbers' → logprob: -10.071499824523926
    7. ' list' → logprob: -10.196499824523926
    8. 'list' → logprob: -10.446499824523926
    9. '[number' → logprob: -11.446499824523926
    10. 'number' → logprob: -12.446499824523926

Token 195: '[:' (ID: 7808)
  Prédit: '.copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.015430375933647156
    2. '[:]' → logprob: -4.765430450439453
    3. '.' → logprob: -5.015430450439453
    4. '[:' → logprob: -8.890430450439453
    5. '.remove' → logprob: -11.140430450439453
    6. '[' → logprob: -12.390430450439453
    7. 'copy' → logprob: -13.515430450439453
    8. '.Copy' → logprob: -16.765430450439453
    9. '.replace' → logprob: -17.015430450439453
    10. '.deepcopy' → logprob: -17.265430450439453

Token 196: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3487020432949066
    2. ']
' → logprob: -1.223702073097229
    3. ']

' → logprob: -8.598702430725098
    4. ']
' → logprob: -10.598702430725098
    5. ')' → logprob: -10.723702430725098
    6. '1' → logprob: -11.973702430725098
    7. ')
' → logprob: -12.723702430725098
    8. ' ]' → logprob: -12.848702430725098
    9. ' ]
' → logprob: -13.223702430725098
    10. '
' → logprob: -13.473702430725098

Token 197: '   ' (ID: 271)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5666736364364624
    2. '   ' → logprob: -0.9416736364364624
    3. ' numbers' → logprob: -3.191673755645752
    4. '
' → logprob: -7.066673755645752
    5. '    
' → logprob: -8.191673278808594
    6. '(numbers' → logprob: -9.191673278808594
    7. ' 
' → logprob: -10.441673278808594
    8. '  
' → logprob: -10.441673278808594
    9. ' for' → logprob: -10.691673278808594
    10. '  ' → logprob: -10.879173278808594

Token 198: ' #' (ID: 1069)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.00020127551397308707
    2. ' numbers' → logprob: -8.625201225280762
    3. '   ' → logprob: -10.875201225280762
    4. '(numbers' → logprob: -14.375201225280762
    5. 'while' → logprob: -14.625201225280762
    6. '    
' → logprob: -14.750201225280762
    7. 'number' → logprob: -14.750201225280762
    8. 'for' → logprob: -15.250201225280762
    9. 'remove' → logprob: -15.750201225280762
    10. '#' (adapté à ' #') → logprob: -15.750201225280762

Token 199: ' Supp' (ID: 20631)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.004216709174215794
    2. ' numbers' → logprob: -5.50421667098999
    3. '#' → logprob: -10.129217147827148
    4. '   ' → logprob: -10.504217147827148
    5. 'remove' → logprob: -10.504217147827148
    6. 'while' → logprob: -11.379217147827148
    7. '(numbers' → logprob: -12.004217147827148
    8. 'number' → logprob: -12.691717147827148
    9. 'Remove' → logprob: -12.879217147827148
    10. '    
' → logprob: -12.879217147827148

Token 200: 'ression' (ID: 15210)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.541823148727417
    2. 'rim' → logprob: -1.666823148727417
    3. 'ress' → logprob: -2.416823148727417
    4. 'ression' → logprob: -3.041823148727417
    5. 'primer' → logprob: -3.416823148727417
    6. 'res' → logprob: -4.041823387145996
    7. 'imer' → logprob: -4.541823387145996
    8. '   ' → logprob: -4.666823387145996
    9. 'er' → logprob: -5.666823387145996
    10. 'rem' → logprob: -6.041823387145996

Token 201: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0027098655700684
    2. '   ' → logprob: -1.7527098655700684
    3. ' of' → logprob: -1.7527098655700684
    4. 'de' → logprob: -2.2527098655700684
    5. ' du' → logprob: -2.8777098655700684
    6. ' first' → logprob: -3.6277098655700684
    7. '(numbers' → logprob: -3.6277098655700684
    8. 'numbers' → logprob: -4.002709865570068
    9. 'first' → logprob: -4.127709865570068
    10. ' numbers' → logprob: -4.252709865570068

Token 202: ''une' (ID: 13337)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.5996133685112
    2. ' first' → logprob: -0.8496133685112
    3. ' numbers' → logprob: -4.349613189697266
    4. 'numbers' → logprob: -5.349613189697266
    5. ' ' → logprob: -5.974613189697266
    6. ' the' → logprob: -6.474613189697266
    7. 'e' → logprob: -8.474613189697266
    8. 'the' → logprob: -8.474613189697266
    9. '[first' → logprob: -8.474613189697266
    10. '(numbers' → logprob: -8.599613189697266

Token 203: ' occurrence' (ID: 55807)
  Prédit: ' occurrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occurrence' → logprob: -0.8321100473403931
    2. 'occ' → logprob: -1.207110047340393
    3. 'occur' → logprob: -2.2071099281311035
    4. ' occur' → logprob: -2.5821099281311035
    5. 'instance' → logprob: -3.8321099281311035
    6. ' occurrences' → logprob: -3.9571099281311035
    7. ' instance' → logprob: -4.3321099281311035
    8. ' valeur' → logprob: -5.3321099281311035
    9. 'élé' → logprob: -5.9571099281311035
    10. 'appearance' → logprob: -6.3321099281311035

Token 204: ' du' (ID: 1462)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.6417206525802612
    2. ' de' → logprob: -1.8917206525802612
    3. ' of' → logprob: -2.141720771789551
    4. 'first' → logprob: -2.516720771789551
    5. '   ' → logprob: -2.766720771789551
    6. ' du' → logprob: -3.516720771789551
    7. '    ' → logprob: -4.766720771789551
    8. 'de' → logprob: -5.016720771789551
    9. ' ' → logprob: -5.266720771789551
    10. ' numbers' → logprob: -6.141720771789551

Token 205: ' plus' (ID: 2932)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.04927380383014679
    2. ' first' → logprob: -3.049273729324341
    3. 'prem' → logprob: -7.92427396774292
    4. ' premier' → logprob: -8.424273490905762
    5. 'f' → logprob: -10.299273490905762
    6. 'fir' → logprob: -10.924273490905762
    7. ' ' → logprob: -11.049273490905762
    8. '
' → logprob: -12.174273490905762
    9. 'fi' → logprob: -12.299273490905762
    10. 'max' → logprob: -12.424273490905762

Token 206: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.3679177165031433
    2. 'max' → logprob: -2.117917776107788
    3. 'first' → logprob: -2.617917776107788
    4. 'prem' → logprob: -3.367917776107788
    5. 'large' → logprob: -3.742917776107788
    6. ' grand' → logprob: -3.867917776107788
    7. '   ' → logprob: -4.117917537689209
    8. '_max' → logprob: -4.992917537689209
    9. '_large' → logprob: -5.742917537689209
    10. ' first' → logprob: -5.992917537689209

Token 207: ' élément' (ID: 99627)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.1567680835723877
    2. 'first' → logprob: -2.1567680835723877
    3. ' premier' → logprob: -4.156767845153809
    4. ' ' → logprob: -5.406767845153809
    5. 'max' → logprob: -5.906767845153809
    6. ' max' → logprob: -6.156767845153809
    7. ' value' → logprob: -6.406767845153809
    8. '_' → logprob: -7.281767845153809
    9. 'prem' → logprob: -7.531767845153809
    10. '_max' → logprob: -7.906767845153809

Token 208: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.729651927947998
    2. 'numbers' → logprob: -0.854651927947998
    3. ' numbers' → logprob: -2.604651927947998
    4. '(numbers' → logprob: -4.479651927947998
    5. 'first' → logprob: -6.229651927947998
    6. ' first' → logprob: -6.354651927947998
    7. '
' → logprob: -6.479651927947998
    8. '  ' → logprob: -8.229652404785156
    9. ' for' → logprob: -8.229652404785156
    10. '    
' → logprob: -8.354652404785156

Token 209: ' trouver' (ID: 23195)
  Prédit: ' pouvoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pouvoir' → logprob: -0.7014801502227783
    2. ' numbers' → logprob: -1.9514801502227783
    3. ' trouver' → logprob: -2.3264801502227783
    4. ' permettre' → logprob: -2.5764801502227783
    5. 'tr' → logprob: -2.8264801502227783
    6. 'numbers' → logprob: -3.2014801502227783
    7. 'chercher' → logprob: -3.4514801502227783
    8. 'p' → logprob: -4.576479911804199
    9. 'find' → logprob: -5.201479911804199
    10. 'allow' → logprob: -5.451479911804199

Token 210: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8611382246017456
    2. ' the' → logprob: -1.8611382246017456
    3. 'first' → logprob: -1.8611382246017456
    4. ' first' → logprob: -2.236138343811035
    5. 'second' → logprob: -2.986138343811035
    6. 'the' → logprob: -3.361138343811035
    7. 'la' → logprob: -3.861138343811035
    8. ' le' → logprob: -3.986138343811035
    9. ' second' → logprob: -3.986138343811035
    10. 'le' → logprob: -5.236138343811035

Token 211: ' second' (ID: 3099)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.3245587646961212
    2. 'second' → logprob: -1.5745587348937988
    3. ' deuxième' → logprob: -2.949558734893799
    4. ' second' → logprob: -4.199558734893799
    5. '2' → logprob: -7.324558734893799
    6. 'two' → logprob: -7.824558734893799
    7. ' deux' → logprob: -8.199559211730957
    8. '_second' → logprob: -8.699559211730957
    9. '
' → logprob: -8.824559211730957
    10. '```' → logprob: -8.949559211730957

Token 212: '
' (ID: 198)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.6438015103340149
    2. 'max' → logprob: -1.2688014507293701
    3. 'largest' → logprob: -2.51880145072937
    4. 'first' → logprob: -2.76880145072937
    5. ' max' → logprob: -3.76880145072937
    6. ' first' → logprob: -4.518801689147949
    7. ' largest' → logprob: -4.643801689147949
    8. 'maximum' → logprob: -6.143801689147949
    9. '_first' → logprob: -6.643801689147949
    10. ' maximum' → logprob: -6.893801689147949

Token 213: '   ' (ID: 271)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.2580329179763794
    2. '   ' → logprob: -2.13303279876709
    3. ' numbers' → logprob: -2.38303279876709
    4. ' first' → logprob: -5.00803279876709
    5. 'first' → logprob: -5.13303279876709
    6. '
' → logprob: -6.75803279876709
    7. '(numbers' → logprob: -6.75803279876709
    8. '    
' → logprob: -7.00803279876709
    9. ' for' → logprob: -9.25803279876709
    10. 'tokens' → logprob: -9.50803279876709

Token 214: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' (adapté à ' numbers') → logprob: -0.018221698701381683
    2. ' numbers' → logprob: -4.018221855163574
    3. '   ' → logprob: -9.643221855163574
    4. '(numbers' → logprob: -13.518221855163574
    5. 'number' → logprob: -13.643221855163574
    6. 'if' → logprob: -14.018221855163574
    7. '    
' → logprob: -14.268221855163574
    8. 'n' → logprob: -14.643221855163574
    9. '
' → logprob: -14.768221855163574
    10. 'remove' → logprob: -14.893221855163574

Token 215: '_copy' (ID: 37283)
  Prédit: '_copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_copy' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -15.000000953674316
    3. 'Copy' → logprob: -15.875000953674316
    4. 'copy' → logprob: -16.000001907348633
    5. '_c' → logprob: -16.125001907348633
    6. '_remove' → logprob: -16.375001907348633
    7. '._' → logprob: -16.875001907348633
    8. '_Copy' → logprob: -17.250001907348633
    9. '_COPY' → logprob: -17.500001907348633
    10. ')_' → logprob: -17.500001907348633

Token 216: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0025038402527570724
    2. '.' → logprob: -6.002503871917725
    3. 'remove' → logprob: -10.877503395080566
    4. ' .' → logprob: -11.752503395080566
    5. ' remove' → logprob: -14.627503395080566
    6. '.append' → logprob: -15.502503395080566
    7. ').' → logprob: -15.877503395080566
    8. '.Remove' → logprob: -16.127504348754883
    9. '.rem' → logprob: -16.752504348754883
    10. '.pop' → logprob: -16.752504348754883

Token 217: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.0008456025971099734
    2. 'first' → logprob: -7.125845432281494
    3. '(' → logprob: -10.125845909118652
    4. ' first' → logprob: -14.375845909118652
    5. '[first' → logprob: -15.500845909118652
    6. '(f' → logprob: -16.000844955444336
    7. ' (' → logprob: -16.250844955444336
    8. '(max' → logprob: -16.500844955444336
    9. '	first' → logprob: -16.500844955444336
    10. '(
' → logprob: -17.000844955444336

Token 218: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -8.77627644513268e-06
    2. '_' → logprob: -12.125008583068848
    3. ')_' → logprob: -13.875008583068848
    4. 'max' → logprob: -14.000008583068848
    5. ' _' → logprob: -14.125008583068848
    6. ')' → logprob: -14.375008583068848
    7. '_min' → logprob: -16.750009536743164
    8. '_m' → logprob: -17.000009536743164
    9. '_MAX' → logprob: -17.125009536743164
    10. '_)' → logprob: -17.375009536743164

Token 219: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16025713086128235
    2. ')
' → logprob: -1.91025710105896
    3. '   ' → logprob: -10.785257339477539
    4. ')
' → logprob: -12.285257339477539
    5. ')

' → logprob: -12.660257339477539
    6. ' )
' → logprob: -13.410257339477539
    7. '
' → logprob: -13.535257339477539
    8. ' )' → logprob: -13.785257339477539
    9. ')
/' → logprob: -16.16025733947754
    10. ')`
' → logprob: -17.16025733947754

Token 220: '   ' (ID: 271)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0013355977134779096
    2. 'if' → logprob: -7.376335620880127
    3. '   ' → logprob: -7.626335620880127
    4. 'try' → logprob: -9.126335144042969
    5. ' second' → logprob: -9.126335144042969
    6. '    
' → logprob: -13.376335144042969
    7. '	second' → logprob: -13.751335144042969
    8. ' if' → logprob: -14.751335144042969
    9. 'first' → logprob: -15.626335144042969
    10. 'se' → logprob: -15.626335144042969

Token 221: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' (adapté à ' second') → logprob: -0.0020090530160814524
    2. 'if' → logprob: -6.37700891494751
    3. 'try' → logprob: -8.127009391784668
    4. ' second' → logprob: -12.252009391784668
    5. '   ' → logprob: -13.127009391784668
    6. '#' → logprob: -13.377009391784668
    7. '    
' → logprob: -13.752009391784668
    8. 'se' → logprob: -14.627009391784668
    9. 'sec' → logprob: -14.752009391784668
    10. '	second' → logprob: -14.877009391784668

Token 222: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -7.421908958349377e-05
    2. '_' → logprob: -9.62507438659668
    3. '_second' → logprob: -12.75007438659668
    4. ' _' → logprob: -13.37507438659668
    5. '_min' → logprob: -13.50007438659668
    6. 'max' → logprob: -13.62507438659668
    7. '_best' → logprob: -15.12507438659668
    8. '_large' → logprob: -16.50007438659668
    9. '_val' → logprob: -16.75007438659668
    10. '_m' → logprob: -16.75007438659668

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602250337600708
    2. '=' → logprob: -1.9102250337600708
    3. ' ' → logprob: -14.160224914550781
    4. '_' → logprob: -16.53522491455078
    5. 's' → logprob: -17.28522491455078
    6. ',' → logprob: -17.28522491455078
    7. ' ' → logprob: -17.53522491455078
    8. '=max' → logprob: -17.53522491455078
    9. ' =
' → logprob: -17.66022491455078
    10. ')' → logprob: -18.41022491455078

Token 224: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0019300628919154406
    2. ' max' → logprob: -6.251930236816406
    3. '   ' → logprob: -14.626930236816406
    4. ' ' → logprob: -15.001930236816406
    5. '  ' → logprob: -15.376930236816406
    6. '(max' → logprob: -15.501930236816406
    7. '	max' → logprob: -16.251930236816406
    8. 'maximum' → logprob: -17.251930236816406
    9. 'min' → logprob: -17.501930236816406
    10. '[max' → logprob: -17.751930236816406

Token 225: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -6.0391463193809614e-05
    2. '(' → logprob: -9.750060081481934
    3. 'numbers' → logprob: -13.500060081481934
    4. '(number' → logprob: -14.875060081481934
    5. '(nums' → logprob: -15.875060081481934
    6. ' numbers' → logprob: -16.87506103515625
    7. '(
' → logprob: -17.00006103515625
    8. '(values' → logprob: -17.12506103515625
    9. ' (' → logprob: -17.62506103515625
    10. '(elements' → logprob: -18.75006103515625

Token 226: '_copy' (ID: 37283)
  Prédit: '_copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_copy' → logprob: -0.4832601547241211
    2. '(numbers' → logprob: -0.9832601547241211
    3. '_numbers' → logprob: -5.233260154724121
    4. 'numbers' → logprob: -6.108260154724121
    5. ')' → logprob: -6.608260154724121
    6. 'copy' → logprob: -9.483260154724121
    7. 'Copy' → logprob: -10.233260154724121
    8. '(' → logprob: -10.233260154724121
    9. 's' → logprob: -10.733260154724121
    10. ' numbers' → logprob: -11.358260154724121

Token 227: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.558399319241289e-05
    2. ')
' → logprob: -10.625025749206543
    3. ' )' → logprob: -14.125025749206543
    4. '   ' → logprob: -14.625025749206543
    5. ')return' → logprob: -17.375024795532227
    6. '()' → logprob: -17.625024795532227
    7. ')

' → logprob: -17.875024795532227
    8. '))' → logprob: -17.875024795532227
    9. ' ' → logprob: -18.625024795532227
    10. '())' → logprob: -18.875024795532227

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004240924026817083
    2. 'return' → logprob: -5.504240989685059
    3. ' return' → logprob: -9.004240989685059
    4. '    
' → logprob: -10.629240989685059
    5. '
' → logprob: -11.254240989685059
    6. '	return' → logprob: -13.129240989685059
    7. '  
' → logprob: -16.254240036010742
    8. ')' → logprob: -16.254240036010742
    9. '```' → logprob: -16.879240036010742
    10. '       ' → logprob: -17.004240036010742

Token 229: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3490753769874573
    2. 'return' (adapté à ' return') → logprob: -1.5990753173828125
    3. ' return' → logprob: -2.4740753173828125
    4. '
' → logprob: -5.0990753173828125
    5. '    
' → logprob: -6.4740753173828125
    6. '	return' → logprob: -7.8490753173828125
    7. '  
' → logprob: -9.599075317382812
    8. ')' → logprob: -9.724075317382812
    9. ' ' → logprob: -10.099075317382812
    10. ' 
' → logprob: -10.349075317382812

Token 230: ' first' (ID: 1577)
  Prédit: '(first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.42406409978866577
    2. ' (' → logprob: -1.1740641593933105
    3. 'first' → logprob: -3.6740641593933105
    4. ' first' → logprob: -4.5490641593933105
    5. '(' → logprob: -7.5490641593933105
    6. '   ' → logprob: -11.674063682556152
    7. '[first' → logprob: -11.924063682556152
    8. ' ' → logprob: -12.049063682556152
    9. '	first' → logprob: -13.049063682556152
    10. ' ' → logprob: -13.174063682556152

Token 231: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0001266613689949736
    2. '_' → logprob: -9.000126838684082
    3. ' _' → logprob: -13.500126838684082
    4. 'max' → logprob: -14.375126838684082
    5. ')_' → logprob: -15.000126838684082
    6. '_first' → logprob: -15.500126838684082
    7. '_MAX' → logprob: -15.500126838684082
    8. '_m' → logprob: -16.250125885009766
    9. '_,' → logprob: -16.625125885009766
    10. ',' → logprob: -16.750125885009766

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ',
' → logprob: -12.250005722045898
    3. ' ,' → logprob: -13.875005722045898
    4. ',

' → logprob: -15.875005722045898
    5. 'second' → logprob: -18.2500057220459
    6. ',
' → logprob: -18.6250057220459
    7. '‌,' → logprob: -18.7500057220459
    8. ',\
' → logprob: -18.7500057220459
    9. ',",' → logprob: -19.5000057220459
    10. '','' → logprob: -19.7500057220459

Token 233: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.01816340535879135
    2. 'second' → logprob: -4.018163204193115
    3. ' ' → logprob: -11.893163681030273
    4. '(second' → logprob: -12.768163681030273
    5. '	second' → logprob: -13.518163681030273
    6. ' space' → logprob: -13.893163681030273
    7. ' ' → logprob: -14.143163681030273
    8. 'space' → logprob: -14.768163681030273
    9. '_second' → logprob: -14.893163681030273
    10. '.second' → logprob: -17.143163681030273

Token 234: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00992430467158556
    2. '_' → logprob: -4.634924411773682
    3. ' _' → logprob: -8.759923934936523
    4. '_second' → logprob: -13.384923934936523
    5. '_MAX' → logprob: -13.634923934936523
    6. '_space' → logprob: -13.759923934936523
    7. '_min' → logprob: -13.884923934936523
    8. 'max' → logprob: -14.134923934936523
    9. '_
' → logprob: -14.259923934936523
    10. ')_' → logprob: -14.759923934936523

Token 235: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32376810908317566
    2. '
' → logprob: -1.323768138885498
    3. '<|end|>' → logprob: -4.823768138885498
    4. '

' → logprob: -6.073768138885498
    5. '#' → logprob: -10.44876766204834
    6. '  
' → logprob: -10.82376766204834
    7. '<|end|>' → logprob: -10.94876766204834
    8. '```' → logprob: -11.32376766204834
    9. '\' → logprob: -11.94876766204834
    10. '\n' → logprob: -12.44876766204834

Token 236: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.225939872208983e-05
    2. 'if' → logprob: -10.625032424926758
    3. 'n' → logprob: -12.250032424926758
    4. '#' → logprob: -12.750032424926758
    5. 'numbers' → logprob: -15.750032424926758
    6. 'print' → logprob: -16.625032424926758
    7. '```' → logprob: -17.500032424926758
    8. ' def' → logprob: -17.875032424926758
    9. 'ndef' → logprob: -18.625032424926758
    10. '
' → logprob: -19.000032424926758

Token 237: ' print' (ID: 2123)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5553126335144043
    2. ' main' → logprob: -1.6803126335144043
    3. ' sum' → logprob: -1.6803126335144043
    4. ' max' → logprob: -4.055312633514404
    5. ' calculate' → logprob: -4.555312633514404
    6. ' get' → logprob: -4.805312633514404
    7. 'sum' → logprob: -5.180312633514404
    8. ' is' → logprob: -6.305312633514404
    9. 'find' → logprob: -6.305312633514404
    10. ' compute' → logprob: -6.680312633514404

Token 238: '_results' (ID: 31049)
  Prédit: '_two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.15961560606956482
    2. '_' → logprob: -2.5346155166625977
    3. '(' → logprob: -2.9096155166625977
    4. '_max' → logprob: -5.284615516662598
    5. '_l' → logprob: -5.909615516662598
    6. '_results' → logprob: -6.784615516662598
    7. '_sorted' → logprob: -7.534615516662598
    8. '("_' → logprob: -7.784615516662598
    9. '_result' → logprob: -7.909615516662598
    10. '_sum' → logprob: -8.034615516662598

Token 239: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.48101308941841125
    2. '():' → logprob: -1.1060130596160889
    3. '(' → logprob: -3.231013059616089
    4. '(n' → logprob: -5.356013298034668
    5. '()' → logprob: -6.106013298034668
    6. ' (' → logprob: -6.231013298034668
    7. ' ():' → logprob: -6.481013298034668
    8. '(nums' → logprob: -8.106013298034668
    9. ' ()' → logprob: -8.356013298034668
    10. '(results' → logprob: -8.731013298034668

Token 240: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005328743252903223
    2. '):
' → logprob: -5.25532865524292
    3. ')' → logprob: -9.755329132080078
    4. ' ):' → logprob: -10.505329132080078
    5. ',' → logprob: -12.380329132080078
    6. '):
' → logprob: -13.130329132080078
    7. '):

' → logprob: -13.880329132080078
    8. ':' → logprob: -14.005329132080078
    9. '   ' → logprob: -14.755329132080078
    10. ' ' → logprob: -15.130329132080078

Token 241: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.2452429085969925
    2. ' first' → logprob: -2.7452428340911865
    3. 'two' → logprob: -2.7452428340911865
    4. 'largest' → logprob: -3.3702428340911865
    5. ' two' → logprob: -3.9952428340911865
    6. 'max' → logprob: -4.245243072509766
    7. 'top' → logprob: -4.620243072509766
    8. ' largest' → logprob: -5.245243072509766
    9. ' top' → logprob: -5.745243072509766
    10. ' max' → logprob: -6.245243072509766

Token 242: ',' (ID: 11)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00012630375567823648
    2. ',' → logprob: -9.250125885009766
    3. '_,' → logprob: -11.500125885009766
    4. '_' → logprob: -11.625125885009766
    5. 'max' → logprob: -11.875125885009766
    6. '_l' → logprob: -13.375125885009766
    7. ',_' → logprob: -13.750125885009766
    8. ' _' → logprob: -15.125125885009766
    9. 'Max' → logprob: -15.625125885009766
    10. ',max' → logprob: -15.750125885009766

Token 243: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.02975454181432724
    2. ' second' → logprob: -3.529754638671875
    3. '	second' → logprob: -12.779754638671875
    4. '   ' → logprob: -14.279754638671875
    5. 'seconds' → logprob: -16.404754638671875
    6. '(second' → logprob: -16.529754638671875
    7. '_second' → logprob: -16.904754638671875
    8. ' ' → logprob: -17.029754638671875
    9. 'se' → logprob: -17.029754638671875
    10. 'sec' → logprob: -17.029754638671875

Token 244: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00672922981902957
    2. '):
' → logprob: -5.0067291259765625
    3. ')' → logprob: -11.506729125976562
    4. '):
' → logprob: -12.881729125976562
    5. ':' → logprob: -14.756729125976562
    6. ' ):' → logprob: -15.256729125976562
    7. '   ' → logprob: -15.506729125976562
    8. '():' → logprob: -16.131729125976562
    9. '):

' → logprob: -16.381729125976562
    10. '_' → logprob: -17.506729125976562

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45297935605049133
    2. ':' → logprob: -1.077979326248169
    3. '():' → logprob: -4.702979564666748
    4. ':
' → logprob: -5.327979564666748
    5. '():
' → logprob: -6.077979564666748
    6. '):' → logprob: -6.202979564666748
    7. '(":' → logprob: -6.202979564666748
    8. '(' → logprob: -6.702979564666748
    9. '):
' → logprob: -6.702979564666748
    10. ' :' → logprob: -8.20297908782959

Token 246: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021962920436635613
    2. ':' → logprob: -8.750219345092773
    3. ':
' → logprob: -10.375219345092773
    4. ' print' → logprob: -11.750219345092773
    5. '```' → logprob: -11.875219345092773
    6. 'print' → logprob: -12.125219345092773
    7. '    
' → logprob: -12.750219345092773
    8. 'def' → logprob: -13.500219345092773
    9. '
' → logprob: -13.750219345092773
    10. '):
' → logprob: -14.000219345092773

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001812629052437842
    2. '"""' → logprob: -7.37681245803833
    3. ' """
' → logprob: -7.37681245803833
    4. '"""
' → logprob: -7.75181245803833
    5. ' """' → logprob: -9.376812934875488
    6. '    ' → logprob: -10.376812934875488
    7. '"' → logprob: -11.501812934875488
    8. '""' → logprob: -14.376812934875488
    9. '  ' → logprob: -14.626812934875488
    10. '   ' → logprob: -14.751812934875488

Token 248: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06488502025604248
    2. ' print' → logprob: -3.564885139465332
    3. '"""
' → logprob: -4.314885139465332
    4. ' """
' → logprob: -4.689885139465332
    5. 'print' → logprob: -5.064885139465332
    6. 'Print' → logprob: -6.564885139465332
    7. 'Aff' (adapté à ' Aff') → logprob: -6.564885139465332
    8. '"""' → logprob: -7.314885139465332
    9. ' Aff' → logprob: -7.564885139465332
    10. '
' → logprob: -7.939885139465332

Token 249: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0007406574441120028
    2. 'ic' → logprob: -7.5007405281066895
    3. 'che' → logprob: -9.000741004943848
    4. '   ' → logprob: -10.875741004943848
    5. '
' → logprob: -11.000741004943848
    6. 'ichage' → logprob: -12.125741004943848
    7. '```' → logprob: -12.625741004943848
    8. 'ich' → logprob: -12.750741004943848
    9. '#' → logprob: -12.750741004943848
    10. '\' → logprob: -13.125741004943848

Token 250: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0455422401428223
    2. '(
' → logprob: -1.0455422401428223
    3. '(f' → logprob: -1.4205422401428223
    4. '("' → logprob: -3.5455422401428223
    5. ' les' → logprob: -3.9205422401428223
    6. '(numbers' → logprob: -6.420542240142822
    7. 'f' → logprob: -6.545542240142822
    8. '("""' → logprob: -7.045542240142822
    9. '(len' → logprob: -7.420542240142822
    10. '("""
' → logprob: -7.795542240142822

Token 251: ' pour' (ID: 1930)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.45141541957855225
    2. 'f' → logprob: -1.4514154195785522
    3. ' numbers' → logprob: -2.826415538787842
    4. '   ' → logprob: -3.576415538787842
    5. 'numbers' → logprob: -4.451415538787842
    6. ')' → logprob: -4.576415538787842
    7. ' first' → logprob: -4.951415538787842
    8. '"""
' → logprob: -6.451415538787842
    9. '"' → logprob: -6.576415538787842
    10. ' les' → logprob: -6.576415538787842

Token 252: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.2537340819835663
    2. ' i' → logprob: -2.5037341117858887
    3. ' each' → logprob: -3.0037341117858887
    4. ' number' → logprob: -3.6287341117858887
    5. ' les' → logprob: -4.253734111785889
    6. ' ' → logprob: -4.378734111785889
    7. ' la' → logprob: -4.878734111785889
    8. ' n' → logprob: -5.503734111785889
    9. ' un' → logprob: -5.628734111785889
    10. 'i' → logprob: -5.878734111785889

Token 253: ' élément' (ID: 99627)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.32880574464797974
    2. ' number' → logprob: -1.703805685043335
    3. 'nombre' → logprob: -2.578805685043335
    4. 'number' → logprob: -4.328805923461914
    5. ' valeur' → logprob: -6.203805923461914
    6. ' élément' → logprob: -6.703805923461914
    7. ' value' → logprob: -6.828805923461914
    8. ' ' → logprob: -6.953805923461914
    9. 'élé' → logprob: -6.953805923461914
    10. ' element' → logprob: -7.328805923461914

Token 254: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04911480098962784
    2. ' in' → logprob: -4.67411470413208
    3. ',' → logprob: -4.79911470413208
    4. ' of' → logprob: -5.04911470413208
    5. ' dans' → logprob: -5.04911470413208
    6. ' ,' → logprob: -5.04911470413208
    7. ' numbers' → logprob: -5.54911470413208
    8. ' des' → logprob: -6.29911470413208
    9. 'de' → logprob: -6.29911470413208
    10. ' du' → logprob: -6.92411470413208

Token 255: ' la' (ID: 557)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.20380204916000366
    2. 'numbers' → logprob: -1.7038021087646484
    3. ' la' → logprob: -6.453802108764648
    4. ' the' → logprob: -8.078802108764648
    5. ' range' → logprob: -8.828802108764648
    6. 'range' → logprob: -9.328802108764648
    7. '(numbers' → logprob: -9.453802108764648
    8. ' ' → logprob: -9.453802108764648
    9. 'the' → logprob: -10.203802108764648
    10. 'la' → logprob: -10.453802108764648

Token 256: ' liste' (ID: 31719)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.08680164068937302
    2. ' numbers' → logprob: -3.711801528930664
    3. 'liste' → logprob: -3.711801528930664
    4. 'list' → logprob: -3.836801528930664
    5. ' liste' → logprob: -4.586801528930664
    6. ' list' → logprob: -6.211801528930664
    7. '(numbers' → logprob: -8.711801528930664
    8. 'lista' → logprob: -9.336801528930664
    9. 'n' → logprob: -9.836801528930664
    10. 'lists' → logprob: -10.086801528930664

Token 257: ' :
' (ID: 10039)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20835846662521362
    2. ' ,' → logprob: -2.3333585262298584
    3. ' numbers' → logprob: -2.5833585262298584
    4. 'numbers' → logprob: -4.708358287811279
    5. '(numbers' → logprob: -5.083358287811279
    6. ' de' → logprob: -9.083358764648438
    7. ',
' → logprob: -9.583358764648438
    8. 's' → logprob: -10.083358764648438
    9. ' des' → logprob: -10.208358764648438
    10. '_numbers' → logprob: -10.458358764648438

Token 258: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.699830949306488
    2. ',' → logprob: -0.824830949306488
    3. '    ' → logprob: -3.324831008911133
    4. ' la' → logprob: -4.324831008911133
    5. ' le' → logprob: -5.824831008911133
    6. ' un' → logprob: -5.824831008911133
    7. ' une' → logprob: -5.949831008911133
    8. ' ,' → logprob: -6.199831008911133
    9. ' les' → logprob: -6.949831008911133
    10. ' l' → logprob: -7.574831008911133

Token 259: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.093109369277954
    2. '   ' → logprob: -1.718109369277954
    3. ' la' → logprob: -1.968109369277954
    4. ' le' → logprob: -2.468109369277954
    5. ' son' → logprob: -2.593109369277954
    6. ' une' → logprob: -3.218109369277954
    7. ' sa' → logprob: -3.593109369277954
    8. ' un' → logprob: -3.718109369277954
    9. 'une' → logprob: -3.718109369277954
    10. ' l' → logprob: -4.218109130859375

Token 260: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9713383316993713
    2. ' le' → logprob: -1.9713382720947266
    3. ' sa' → logprob: -1.9713382720947266
    4. ' son' → logprob: -2.7213382720947266
    5. ' Le' → logprob: -3.4713382720947266
    6. ' un' → logprob: -3.4713382720947266
    7. ' l' → logprob: -3.4713382720947266
    8. ' La' → logprob: -3.4713382720947266
    9. ' une' → logprob: -3.7213382720947266
    10. ' s' → logprob: -3.7213382720947266

Token 261: ' deuxième' (ID: 51664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7853958606719971
    2. ' valeur' → logprob: -1.285395860671997
    3. ' plus' → logprob: -1.785395860671997
    4. 'plus' → logprob: -2.785395860671997
    5. ' val' → logprob: -4.660395622253418
    6. ' différence' → logprob: -4.785395622253418
    7. ' position' → logprob: -5.285395622253418
    8. 'position' → logprob: -5.660395622253418
    9. 'distance' → logprob: -6.160395622253418
    10. ' distance' → logprob: -6.535395622253418

Token 262: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.09752728044986725
    2. 'plus' → logprob: -3.722527265548706
    3. ' _' → logprob: -4.097527503967285
    4. ' ' → logprob: -4.347527503967285
    5. '_plus' → logprob: -4.347527503967285
    6. '_' → logprob: -4.722527503967285
    7. ' valeur' → logprob: -5.222527503967285
    8. '_max' → logprob: -5.597527503967285
    9. ' max' → logprob: -6.722527503967285
    10. ' espace' → logprob: -6.847527503967285

Token 263: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.4823492765426636
    2. ' grande' → logprob: -0.9823492765426636
    3. 'grand' → logprob: -5.357349395751953
    4. ' grand' → logprob: -6.357349395751953
    5. '_gr' → logprob: -6.982349395751953
    6. '_' → logprob: -8.357349395751953
    7. ' large' → logprob: -8.857349395751953
    8. 'large' → logprob: -9.107349395751953
    9. ' ' → logprob: -9.232349395751953
    10. ' grandes' → logprob: -10.107349395751953

Token 264: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.004468339029699564
    2. ' ' → logprob: -6.3794684410095215
    3. ' des' → logprob: -6.7544684410095215
    4. 'val' → logprob: -7.1294684410095215
    5. ' value' → logprob: -8.004467964172363
    6. ' val' → logprob: -8.629467964172363
    7. 'value' → logprob: -10.004467964172363
    8. '_val' → logprob: -10.254467964172363
    9. ' plus' → logprob: -10.504467964172363
    10. '   ' → logprob: -11.129467964172363

Token 265: ' si' (ID: 1784)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4690571129322052
    2. ',
' → logprob: -1.9690570831298828
    3. ' ,' → logprob: -2.844057083129883
    4. ' distinct' → logprob: -3.094057083129883
    5. ' (' → logprob: -3.594057083129883
    6. ' plus' → logprob: -4.219057083129883
    7. ' des' → logprob: -4.344057083129883
    8. 'distinct' → logprob: -4.344057083129883
    9. ' parmi' → logprob: -4.469057083129883
    10. ' ,
' → logprob: -4.594057083129883

Token 266: ' l' (ID: 305)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -1.4373923540115356
    2. ' number' → logprob: -1.9373923540115356
    3. 'element' → logprob: -2.062392234802246
    4. 'élé' → logprob: -2.437392234802246
    5. ' nombre' → logprob: -2.562392234802246
    6. ' x' → logprob: -2.687392234802246
    7. 'x' → logprob: -3.312392234802246
    8. 'number' → logprob: -3.312392234802246
    9. ' l' → logprob: -3.937392234802246
    10. 'nombre' → logprob: -3.937392234802246

Token 267: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1260027289390564
    2. 'e' → logprob: -2.751002788543701
    3. 'a' → logprob: -4.501002788543701
    4. ''é' → logprob: -4.501002788543701
    5. 'element' → logprob: -4.876002788543701
    6. 'élé' → logprob: -5.376002788543701
    7. '   ' → logprob: -5.876002788543701
    8. ' élément' → logprob: -6.001002788543701
    9. ' element' → logprob: -6.251002788543701
    10. 'i' → logprob: -6.751002788543701

Token 268: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.02983391284942627
    2. ''' → logprob: -4.904833793640137
    3. 'element' → logprob: -5.154833793640137
    4. 'é' → logprob: -5.529833793640137
    5. ' élément' → logprob: -5.529833793640137
    6. 'nombre' → logprob: -5.779833793640137
    7. 'number' → logprob: -6.904833793640137
    8. 'él' → logprob: -6.904833793640137
    9. 'n' → logprob: -7.029833793640137
    10. 'num' → logprob: -7.654833793640137

Token 269: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.00018244501552544534
    2. 'm' → logprob: -9.500182151794434
    3. 'me' → logprob: -10.750182151794434
    4. '   ' → logprob: -11.000182151794434
    5. 'v' → logprob: -11.375182151794434
    6. 'men' → logprob: -11.500182151794434
    7. ' ment' → logprob: -11.625182151794434
    8. 'ent' → logprob: -12.125182151794434
    9. ' ' → logprob: -12.375182151794434
    10. 'ments' → logprob: -12.750182151794434

Token 270: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.14017081260681152
    2. 'est' → logprob: -2.3901708126068115
    3. ' <' → logprob: -3.7651708126068115
    4. ' is' → logprob: -4.890171051025391
    5. '<' → logprob: -5.640171051025391
    6. ' ==' → logprob: -6.265171051025391
    7. ' n' → logprob: -7.015171051025391
    8. '==' → logprob: -7.515171051025391
    9. ' !=' → logprob: -7.515171051025391
    10. 'n' → logprob: -8.26517105102539

Token 271: ' le' (ID: 505)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.0740728378295898
    2. 'strict' → logprob: -1.6990728378295898
    3. 'égal' → logprob: -2.07407283782959
    4. 'diff' → logprob: -2.44907283782959
    5. ' égal' → logprob: -2.69907283782959
    6. 'different' → logprob: -3.07407283782959
    7. ' différent' → logprob: -3.44907283782959
    8. ' inférieur' → logprob: -3.44907283782959
    9. 'equal' → logprob: -3.57407283782959
    10. ' ég' → logprob: -4.44907283782959

Token 272: ' plus' (ID: 2932)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.2476869821548462
    2. 'first' → logprob: -1.7476869821548462
    3. ' first' → logprob: -3.9976868629455566
    4. ' premier' → logprob: -4.497686862945557
    5. 'maximum' → logprob: -5.122686862945557
    6. 'max' → logprob: -5.247686862945557
    7. 'plus' → logprob: -5.997686862945557
    8. ' plus' → logprob: -7.247686862945557
    9. ' maximum' → logprob: -7.622686862945557
    10. 'largest' → logprob: -8.247687339782715

Token 273: ' grand' (ID: 6363)
  Prédit: ' grand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grand' → logprob: -0.16102977097034454
    2. 'grand' → logprob: -1.9110298156738281
    3. 'gr' → logprob: -8.786029815673828
    4. ' grande' → logprob: -8.786029815673828
    5. ' ' → logprob: -9.161029815673828
    6. '   ' → logprob: -9.411029815673828
    7. 'g' → logprob: -9.786029815673828
    8. '  ' → logprob: -9.911029815673828
    9. '_gr' → logprob: -10.161029815673828
    10. ' grands' → logprob: -10.286029815673828

Token 274: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42741233110427856
    2. '   ' → logprob: -1.4274122714996338
    3. ',
' → logprob: -3.552412271499634
    4. 'else' → logprob: -4.052412509918213
    5. ' else' → logprob: -4.052412509918213
    6. ' ' → logprob: -4.802412509918213
    7. '  ' → logprob: -5.177412509918213
    8. '
' → logprob: -5.177412509918213
    9. 'elif' → logprob: -5.302412509918213
    10. ';' → logprob: -5.802412509918213

Token 275: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04930375516414642
    2. '     ' → logprob: -3.4243037700653076
    3. ' ' → logprob: -4.6743035316467285
    4. '    ' → logprob: -5.9243035316467285
    5. ''' → logprob: -7.1743035316467285
    6. '       ' → logprob: -7.2993035316467285
    7. '  ' → logprob: -7.6743035316467285
    8. ' else' → logprob: -8.674304008483887
    9. '#' → logprob: -8.799304008483887
    10. '\' → logprob: -8.924304008483887

Token 276: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2902906835079193
    2. '     ' → logprob: -1.9152907133102417
    3. ' ' → logprob: -2.290290594100952
    4. 'def' → logprob: -7.165290832519531
    5. '    ' → logprob: -7.540290832519531
    6. '#' → logprob: -7.540290832519531
    7. '  ' → logprob: -7.540290832519531
    8. 'else' → logprob: -8.040290832519531
    9. ' sinon' → logprob: -8.040290832519531
    10. '       ' → logprob: -9.165290832519531

Token 277: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6778550744056702
    2. 'le' → logprob: -2.3028550148010254
    3. '   ' → logprob: -2.4278550148010254
    4. ' sinon' → logprob: -2.5528550148010254
    5. 'la' → logprob: -2.9278550148010254
    6. 'l' → logprob: -3.1778550148010254
    7. '     ' → logprob: -3.3028550148010254
    8. 'sin' → logprob: -4.052855014801025
    9. ' la' → logprob: -4.427855014801025
    10. '  ' → logprob: -4.427855014801025

Token 278: ' plus' (ID: 2932)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.4070872962474823
    2. 'plus' → logprob: -1.9070873260498047
    3. 'de' → logprob: -2.5320873260498047
    4. ' plus' → logprob: -2.7820873260498047
    5. 'first' → logprob: -4.157087326049805
    6. ' premier' → logprob: -4.657087326049805
    7. ' first' → logprob: -5.032087326049805
    8. 'second' → logprob: -5.282087326049805
    9. ' deuxième' → logprob: -6.032087326049805
    10. ' première' → logprob: -6.782087326049805

Token 279: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.05871158838272095
    2. 'gr' → logprob: -3.433711528778076
    3. '_gr' → logprob: -4.433711528778076
    4. ' grand' → logprob: -4.558711528778076
    5. 'grand' → logprob: -6.308711528778076
    6. '_' → logprob: -8.933712005615234
    7. ' grandes' → logprob: -9.058712005615234
    8. ' grands' → logprob: -9.433712005615234
    9. ' grans' → logprob: -9.433712005615234
    10. ' ' → logprob: -9.683712005615234

Token 280: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.036560434848070145
    2. 'val' → logprob: -4.161560535430908
    3. ' value' → logprob: -4.911560535430908
    4. '<|end|>' → logprob: -5.036560535430908
    5. 'value' → logprob: -5.286560535430908
    6. ' val' → logprob: -7.786560535430908
    7. ' ' → logprob: -7.911560535430908
    8. '_value' → logprob: -9.28656005859375
    9. '_val' → logprob: -9.53656005859375
    10. ' plus' → logprob: -10.03656005859375

Token 281: ' sinon' (ID: 52915)
  Prédit: ' sinon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sinon' → logprob: -0.38528645038604736
    2. ' si' → logprob: -1.3852864503860474
    3. ' if' → logprob: -3.260286331176758
    4. '   ' → logprob: -4.635286331176758
    5. ' autrement' → logprob: -5.135286331176758
    6. 'si' → logprob: -5.635286331176758
    7. ' ' → logprob: -5.760286331176758
    8. ' else' → logprob: -6.010286331176758
    9. ' otherwise' → logprob: -6.385286331176758
    10. '<|end|>' → logprob: -6.510286331176758

Token 282: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29189178347587585
    2. '   ' → logprob: -1.6668918132781982
    3. 'def' → logprob: -3.4168918132781982
    4. '.
' → logprob: -3.7918918132781982
    5. '
' → logprob: -5.666891574859619
    6. ':' → logprob: -6.541891574859619
    7. ',' → logprob: -6.916891574859619
    8. '\n' → logprob: -7.291891574859619
    9. ',
' → logprob: -7.541891574859619
    10. '```' → logprob: -7.666891574859619

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0345337800681591
    2. '
' → logprob: -4.034533977508545
    3. 'def' → logprob: -4.909533977508545
    4. '"""
' → logprob: -5.034533977508545
    5. ')
' → logprob: -7.159533977508545
    6. '\n' → logprob: -7.659533977508545
    7. ')' → logprob: -7.659533977508545
    8. '"""' → logprob: -8.159533500671387
    9. ' def' → logprob: -8.659533500671387
    10. '```' → logprob: -10.034533500671387

Token 284: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1695771962404251
    2. 'def' → logprob: -1.9195772409439087
    3. '"""
' → logprob: -5.294577121734619
    4. '
' → logprob: -5.794577121734619
    5. ' def' → logprob: -7.169577121734619
    6. ')
' → logprob: -8.544577598571777
    7. '"""' → logprob: -9.294577598571777
    8. '\n' → logprob: -9.919577598571777
    9. '    
' → logprob: -9.919577598571777
    10. '```' → logprob: -10.669577598571777

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14179734885692596
    2. '   ' → logprob: -3.2667973041534424
    3. '):
' → logprob: -3.2667973041534424
    4. ':
' → logprob: -3.5167973041534424
    5. '):' → logprob: -3.8917973041534424
    6. ')' → logprob: -6.0167975425720215
    7. ' :' → logprob: -7.1417975425720215
    8. '       ' → logprob: -7.2667975425720215
    9. ',' → logprob: -7.7667975425720215
    10. '(' → logprob: -8.266797065734863

Token 286: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018157200887799263
    2. '       ' → logprob: -4.018157005310059
    3. '```' → logprob: -12.893157005310059
    4. '     ' → logprob: -13.518157005310059
    5. ' ' → logprob: -14.268157005310059
    6. 'def' → logprob: -14.643157005310059
    7. '   ' → logprob: -14.643157005310059
    8. '    ' → logprob: -14.893157005310059
    9. 'list' → logprob: -15.268157005310059
    10. 'numbers' → logprob: -15.268157005310059

Token 287: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' (adapté à ' numbers') → logprob: -0.007710850797593594
    2. ' numbers' → logprob: -4.882710933685303
    3. '   ' → logprob: -9.257710456848145
    4. 'self' → logprob: -12.132710456848145
    5. '(numbers' → logprob: -13.882710456848145
    6. ' ' → logprob: -14.507710456848145
    7. 'number' → logprob: -14.757710456848145
    8. 'def' → logprob: -14.757710456848145
    9. '
' → logprob: -15.132710456848145
    10. 'nums' → logprob: -15.507710456848145

Token 288: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7070152163505554
    2. ',' → logprob: -1.2070152759552002
    3. ':' → logprob: -2.3320152759552
    4. ' (' → logprob: -2.4570152759552
    5. '):
' → logprob: -4.457015037536621
    6. '   ' → logprob: -5.207015037536621
    7. ')' → logprob: -5.332015037536621
    8. ' :' → logprob: -6.832015037536621
    9. '<|end|>' → logprob: -7.582015037536621
    10. ' ):' → logprob: -7.707015037536621

Token 289: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.0219828002154827e-05
    2. ' list' → logprob: -10.875020027160645
    3. ')' → logprob: -14.500020027160645
    4. '   ' → logprob: -14.500020027160645
    5. 'List' → logprob: -17.12502098083496
    6. '  ' → logprob: -17.12502098083496
    7. ' ' → logprob: -17.50002098083496
    8. '[list' → logprob: -17.50002098083496
    9. '(list' → logprob: -18.37502098083496
    10. 'lis' → logprob: -18.75002098083496

Token 290: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.015141816809773445
    2. 'of' → logprob: -4.39014196395874
    3. '):' → logprob: -6.39014196395874
    4. ')' → logprob: -7.26514196395874
    5. ',' → logprob: -9.390141487121582
    6. '):
' → logprob: -10.265141487121582
    7. '   ' → logprob: -10.390141487121582
    8. '[int' → logprob: -10.515141487121582
    9. ' de' → logprob: -10.765141487121582
    10. ':' → logprob: -11.140141487121582

Token 291: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804275393486023
    2. ' int' → logprob: -3.2880427837371826
    3. '[int' → logprob: -14.163043022155762
    4. ')' → logprob: -15.163043022155762
    5. ' ' → logprob: -15.913043022155762
    6. '   ' → logprob: -16.288042068481445
    7. 'list' → logprob: -17.663042068481445
    8. '(int' → logprob: -18.038042068481445
    9. '<int' → logprob: -18.288042068481445
    10. '  ' → logprob: -18.288042068481445

Token 292: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001168556627817452
    2. '):
' → logprob: -6.876168727874756
    3. ')' → logprob: -9.001168251037598
    4. ':' → logprob: -12.126168251037598
    5. ' ):' → logprob: -12.501168251037598
    6. '   ' → logprob: -13.126168251037598
    7. '):

' → logprob: -14.376168251037598
    8. '):
' → logprob: -15.501168251037598
    9. '),' → logprob: -16.251169204711914
    10. ' ' → logprob: -16.376169204711914

Token 293: ' Liste' (ID: 61030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002306673675775528
    2. ')' → logprob: -6.7523064613342285
    3. ' list' → logprob: -7.1273064613342285
    4. '       ' → logprob: -9.252306938171387
    5. '```' → logprob: -9.877306938171387
    6. ' la' → logprob: -10.377306938171387
    7. 'List' → logprob: -10.752306938171387
    8. '):
' → logprob: -10.752306938171387
    9. '    ' → logprob: -10.877306938171387
    10. ' ' → logprob: -11.502306938171387

Token 294: ' des' (ID: 731)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1319640874862671
    2. ' des' → logprob: -2.6319642066955566
    3. '[int' → logprob: -3.3819642066955566
    4. '   ' → logprob: -4.381964206695557
    5. ' de' → logprob: -6.256964206695557
    6. '):
' → logprob: -7.131964206695557
    7. '):' → logprob: -7.381964206695557
    8. ')' → logprob: -7.381964206695557
    9. 'des' → logprob: -8.256963729858398
    10. ' d' → logprob: -8.756963729858398

Token 295: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.4934467673301697
    2. 'n' → logprob: -0.9934467673301697
    3. 'ent' → logprob: -4.8684468269348145
    4. ' ent' → logprob: -4.9934468269348145
    5. 'nombre' → logprob: -6.3684468269348145
    6. ' numbers' → logprob: -6.8684468269348145
    7. 'numbers' → logprob: -7.1184468269348145
    8. ' n' → logprob: -7.7434468269348145
    9. 'int' → logprob: -8.243446350097656
    10. 'élé' → logprob: -9.118446350097656

Token 296: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.04822370037436485
    2. 't' → logprob: -3.2982237339019775
    3. 'ières' → logprob: -6.423223495483398
    4. 'ents' → logprob: -6.423223495483398
    5. 'tiers' → logprob: -6.423223495483398
    6. 'ints' → logprob: -6.798223495483398
    7. '   ' → logprob: -7.048223495483398
    8. 'teurs' → logprob: -7.673223495483398
    9. 'ti' → logprob: -7.798223495483398
    10. 'ts' → logprob: -8.173223495483398

Token 297: ' à' (ID: 1221)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.251308798789978
    2. '):' → logprob: -1.751308798789978
    3. '   ' → logprob: -3.3763089179992676
    4. ')' → logprob: -4.251308917999268
    5. '):
' → logprob: -9.12630844116211
    6. '),' → logprob: -10.25130844116211
    7. ')
' → logprob: -10.87630844116211
    8. ' ):
' → logprob: -11.00130844116211
    9. '):

' → logprob: -11.37630844116211
    10. ' ):' → logprob: -11.62630844116211

Token 298: ' traiter' (ID: 105852)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.25947538018226624
    2. 'print' → logprob: -1.6344753503799438
    3. 'tr' → logprob: -4.759475231170654
    4. 'trait' → logprob: -4.884475231170654
    5. 'im' → logprob: -5.009475231170654
    6. ' afficher' → logprob: -5.134475231170654
    7. 'tra' → logprob: -6.009475231170654
    8. ' traiter' → logprob: -7.634475231170654
    9. 'process' → logprob: -8.134475708007812
    10. 'an' → logprob: -8.509475708007812

Token 299: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41566088795661926
    2. ')' → logprob: -1.4156608581542969
    3. '):
' → logprob: -2.665660858154297
    4. ')
' → logprob: -3.790660858154297
    5. '):' → logprob: -5.290660858154297
    6. '       ' → logprob: -9.915660858154297
    7. '```' → logprob: -10.415660858154297
    8. ' ' → logprob: -11.040660858154297
    9. '),' → logprob: -11.290660858154297
    10. '):

' → logprob: -11.790660858154297

Token 300: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001993109006434679
    2. '       ' → logprob: -6.626993179321289
    3. '
' → logprob: -7.376993179321289
    4. ')' → logprob: -11.501993179321289
    5. '    
' → logprob: -11.501993179321289
    6. '```' → logprob: -11.501993179321289
    7. 'def' → logprob: -12.751993179321289
    8. '    ' → logprob: -13.126993179321289
    9. ')
' → logprob: -13.501993179321289
    10. ' def' → logprob: -13.626993179321289

Token 301: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.04325231909751892
    2. ' first' → logprob: -3.2932522296905518
    3. '   ' → logprob: -5.293252468109131
    4. ' ' → logprob: -8.793251991271973
    5. 'def' → logprob: -12.043251991271973
    6. '	first' → logprob: -12.168251991271973
    7. '
' → logprob: -13.043251991271973
    8. '  ' → logprob: -13.293251991271973
    9. '       ' → logprob: -13.668251991271973
    10. 'for' → logprob: -14.668251991271973

Token 302: ' (' (ID: 350)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.42934632301330566
    2. ',' → logprob: -1.0543463230133057
    3. ',
' → logprob: -8.429346084594727
    4. 'max' → logprob: -8.804346084594727
    5. '):' → logprob: -9.679346084594727
    6. ' ,' → logprob: -10.054346084594727
    7. ',max' → logprob: -10.054346084594727
    8. ' (' → logprob: -10.429346084594727
    9. ')' → logprob: -10.804346084594727
    10. '   ' → logprob: -10.929346084594727

Token 303: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00010020548506872728
    2. ' int' → logprob: -9.500100135803223
    3. ')' → logprob: -10.625100135803223
    4. '   ' → logprob: -14.875100135803223
    5. '):' → logprob: -16.12510108947754
    6. ',' → logprob: -16.37510108947754
    7. '  ' → logprob: -16.50010108947754
    8. '):
' → logprob: -16.87510108947754
    9. '[int' → logprob: -16.87510108947754
    10. '(int' → logprob: -17.25010108947754

Token 304: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033573703840374947
    2. ')' → logprob: -6.628357410430908
    3. '):
' → logprob: -6.753357410430908
    4. ',' → logprob: -7.253357410430908
    5. ' ):' → logprob: -9.75335693359375
    6. '   ' → logprob: -10.00335693359375
    7. '),' → logprob: -10.25335693359375
    8. '):

' → logprob: -11.50335693359375
    9. ':' → logprob: -13.12835693359375
    10. ' ' → logprob: -13.75335693359375

Token 305: ' La' (ID: 3038)
  Prédit: ' second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.17312531173229218
    2. 'second' → logprob: -2.2981252670288086
    3. '   ' → logprob: -3.0481252670288086
    4. 'The' → logprob: -5.923125267028809
    5. 'Second' → logprob: -5.923125267028809
    6. ' The' → logprob: -6.423125267028809
    7. ' La' → logprob: -6.423125267028809
    8. 'La' → logprob: -6.673125267028809
    9. ')' → logprob: -8.548125267028809
    10. ' ' → logprob: -8.923125267028809

Token 306: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.08829852938652039
    2. 'de' → logprob: -3.2132985591888428
    3. 'prem' → logprob: -3.9632985591888428
    4. 'largest' → logprob: -4.338298320770264
    5. 'first' → logprob: -5.588298320770264
    6. 'max' → logprob: -5.838298320770264
    7. ' plus' → logprob: -6.338298320770264
    8. '   ' → logprob: -6.338298320770264
    9. 'second' → logprob: -7.088298320770264
    10. 'maximum' → logprob: -7.838298320770264

Token 307: ' grande' (ID: 10094)
  Prédit: '_gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gr' → logprob: -0.06119383126497269
    2. ' grande' → logprob: -3.4361939430236816
    3. '_' → logprob: -4.561193943023682
    4. ' grand' → logprob: -4.561193943023682
    5. ' _' → logprob: -5.936193943023682
    6. '_g' → logprob: -6.811193943023682
    7. '_large' → logprob: -7.311193943023682
    8. 'gr' → logprob: -7.436193943023682
    9. '   ' → logprob: -7.686193943023682
    10. 'grand' → logprob: -7.811193943023682

Token 308: ' valeur' (ID: 41664)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.2677796185016632
    2. '_val' → logprob: -2.142779588699341
    3. ',' → logprob: -3.017779588699341
    4. 'max' → logprob: -3.642779588699341
    5. 'val' → logprob: -4.26777982711792
    6. ')' → logprob: -4.39277982711792
    7. '_value' → logprob: -4.89277982711792
    8. ' ,' → logprob: -6.51777982711792
    9. ' maximale' → logprob: -6.89277982711792
    10. '<|end|>' → logprob: -7.01777982711792

Token 309: ' trouv' (ID: 40254)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5619400143623352
    2. ')
' → logprob: -0.9369400143623352
    3. '   ' → logprob: -3.8119399547576904
    4. ',' → logprob: -4.8119401931762695
    5. ',
' → logprob: -5.5619401931762695
    6. '):
' → logprob: -5.6869401931762695
    7. '):' → logprob: -8.06194019317627
    8. '),' → logprob: -9.18694019317627
    9. '),
' → logprob: -9.56194019317627
    10. ')
' → logprob: -10.93694019317627

Token 310: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00016587569552939385
    2. 'é' → logprob: -9.375165939331055
    3. 'ee' → logprob: -9.875165939331055
    4. 'ue' → logprob: -11.000165939331055
    5. 'e' → logprob: -11.375165939331055
    6. '   ' → logprob: -14.750165939331055
    7. ' é' → logprob: -15.625165939331055
    8. 'née' → logprob: -15.750165939331055
    9. 'uée' → logprob: -16.125165939331055
    10. 'ées' → logprob: -16.125165939331055

Token 311: ' dans' (ID: 2671)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.8429558277130127
    2. '   ' → logprob: -1.2179558277130127
    3. ')
' → logprob: -1.8429558277130127
    4. ',' → logprob: -2.5929558277130127
    5. ')' → logprob: -3.4679558277130127
    6. '):
' → logprob: -5.342955589294434
    7. '       ' → logprob: -6.092955589294434
    8. '),
' → logprob: -6.342955589294434
    9. '),' → logprob: -9.217955589294434
    10. '.' → logprob: -9.342955589294434

Token 312: ' la' (ID: 557)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.011157231405377388
    2. 'la' → logprob: -5.261157035827637
    3. ' numbers' → logprob: -5.386157035827637
    4. ' la' → logprob: -7.261157035827637
    5. '(numbers' → logprob: -7.761157035827637
    6. 'the' → logprob: -8.886157035827637
    7. ' the' → logprob: -10.636157035827637
    8. 'les' → logprob: -11.136157035827637
    9. ')' → logprob: -11.636157035827637
    10. 'l' → logprob: -11.886157035827637

Token 313: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.009756677784025669
    2. ' liste' → logprob: -4.759756565093994
    3. 'list' → logprob: -6.884756565093994
    4. 'numbers' → logprob: -9.509757041931152
    5. 'lista' → logprob: -11.259757041931152
    6. 'lists' → logprob: -11.759757041931152
    7. ')' → logprob: -12.009757041931152
    8. ' list' → logprob: -12.134757041931152
    9. 'Liste' → logprob: -12.509757041931152
    10. '   ' → logprob: -13.384757041931152

Token 314: '.
' (ID: 558)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.022796630859375
    2. ')' → logprob: -1.147796630859375
    3. '   ' → logprob: -1.147796630859375
    4. ',' → logprob: -6.272796630859375
    5. '       ' → logprob: -6.522796630859375
    6. '):
' → logprob: -6.772796630859375
    7. ',
' → logprob: -6.897796630859375
    8. '```' → logprob: -10.272796630859375
    9. '),' → logprob: -10.397796630859375
    10. '),
' → logprob: -10.522796630859375

Token 315: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023170113563537598
    2. ' second' → logprob: -7.002316951751709
    3. 'second' → logprob: -7.377316951751709
    4. '	second' → logprob: -7.752316951751709
    5. '       ' → logprob: -8.002317428588867
    6. '  ' → logprob: -12.002317428588867
    7. '    ' → logprob: -12.877317428588867
    8. ' ' → logprob: -13.002317428588867
    9. '    
' → logprob: -13.377317428588867
    10. '
' → logprob: -14.627317428588867

Token 316: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' (adapté à ' second') → logprob: -0.00045843268162570894
    2. ' second' → logprob: -7.750458240509033
    3. '   ' → logprob: -10.500458717346191
    4. '	second' → logprob: -16.000457763671875
    5. '
' → logprob: -16.750457763671875
    6. '       ' → logprob: -18.000457763671875
    7. 'Second' → logprob: -18.250457763671875
    8. ' ' → logprob: -18.750457763671875
    9. '  ' → logprob: -19.000457763671875
    10. '(second' → logprob: -19.500457763671875

Token 317: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.014627646654844284
    2. '):' → logprob: -4.889627456665039
    3. '(int' → logprob: -5.514627456665039
    4. ')' → logprob: -6.639627456665039
    5. '):
' → logprob: -6.764627456665039
    6. '   ' → logprob: -8.639627456665039
    7. ':' → logprob: -9.639627456665039
    8. 'int' → logprob: -9.889627456665039
    9. ',' → logprob: -10.139627456665039
    10. '):

' → logprob: -10.139627456665039

Token 318: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023250950500369072
    2. ' int' → logprob: -3.7732510566711426
    3. ')' → logprob: -12.898250579833984
    4. '   ' → logprob: -13.773250579833984
    5. '(int' → logprob: -14.273250579833984
    6. '[int' → logprob: -14.648250579833984
    7. '=int' → logprob: -15.148250579833984
    8. ':int' → logprob: -15.273250579833984
    9. '<int' → logprob: -16.148250579833984
    10. '
' → logprob: -16.898250579833984

Token 319: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012913845479488373
    2. '):
' → logprob: -4.762913703918457
    3. ')' → logprob: -5.637913703918457
    4. ':' → logprob: -8.012913703918457
    5. '):

' → logprob: -8.387913703918457
    6. 'int' → logprob: -9.262913703918457
    7. '   ' → logprob: -10.262913703918457
    8. ' ):' → logprob: -11.512913703918457
    9. 'def' → logprob: -11.887913703918457
    10. ':int' → logprob: -11.887913703918457

Token 320: ' La' (ID: 3038)
  Prédit: 'La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'La' → logprob: -0.16337493062019348
    2. ' La' → logprob: -1.913374900817871
    3. '   ' → logprob: -5.913374900817871
    4. ' la' → logprob: -7.913374900817871
    5. 'The' → logprob: -10.288374900817871
    6. ' ' → logprob: -11.038374900817871
    7. 'int' → logprob: -12.038374900817871
    8. 'Le' → logprob: -12.163374900817871
    9. ' int' → logprob: -13.163374900817871
    10. ' The' → logprob: -13.163374900817871

Token 321: ' deuxième' (ID: 51664)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.7505508661270142
    2. ' deuxième' → logprob: -1.2505508661270142
    3. 'de' → logprob: -1.8755508661270142
    4. ' second' → logprob: -2.7505507469177246
    5. 'plus' → logprob: -4.125550746917725
    6. 'second' → logprob: -6.375550746917725
    7. ':' → logprob: -6.750550746917725
    8. ' deux' → logprob: -7.000550746917725
    9. ' ' → logprob: -7.250550746917725
    10. ' two' → logprob: -7.375550746917725

Token 322: ' plus' (ID: 2932)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.7380678653717041
    2. 'plus' → logprob: -1.363067865371704
    3. '_plus' → logprob: -1.738067865371704
    4. ' plus' → logprob: -2.863067865371704
    5. 'max' → logprob: -4.363067626953125
    6. '_l' → logprob: -4.863067626953125
    7. 'largest' → logprob: -4.863067626953125
    8. ' largest' → logprob: -5.488067626953125
    9. ' max' → logprob: -7.988067626953125
    10. '_' → logprob: -9.113067626953125

Token 323: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.047868870198726654
    2. ' grande' → logprob: -3.5478689670562744
    3. 'large' → logprob: -4.672868728637695
    4. 'grand' → logprob: -5.172868728637695
    5. 'largest' → logprob: -6.297868728637695
    6. 'plus' → logprob: -7.922868728637695
    7. 'great' → logprob: -8.797868728637695
    8. 'max' → logprob: -9.422868728637695
    9. ' largest' → logprob: -9.422868728637695
    10. 'larg' → logprob: -9.547868728637695

Token 324: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4821374714374542
    2. ' valeur' → logprob: -0.9821374416351318
    3. 'value' → logprob: -5.232137680053711
    4. ' value' → logprob: -6.857137680053711
    5. '_val' → logprob: -7.107137680053711
    6. ' val' → logprob: -7.607137680053711
    7. '_value' → logprob: -8.732137680053711
    8. ')' → logprob: -9.732137680053711
    9. ' vale' → logprob: -10.232137680053711
    10. 'vale' → logprob: -11.607137680053711

Token 325: ' trouv' (ID: 40254)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024613557383418083
    2. '):' → logprob: -4.149613380432129
    3. '   ' → logprob: -4.774613380432129
    4. '):

' → logprob: -10.274613380432129
    5. 'def' → logprob: -10.649613380432129
    6. ')' → logprob: -10.899613380432129
    7. '):
' → logprob: -12.024613380432129
    8. '
' → logprob: -12.649613380432129
    9. '"):
' → logprob: -12.899613380432129
    10. ' ):
' → logprob: -13.024613380432129

Token 326: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0016382889589294791
    2. 'ee' → logprob: -6.751638412475586
    3. 'ue' → logprob: -7.876638412475586
    4. 'e' → logprob: -9.501638412475586
    5. 'é' → logprob: -11.626638412475586
    6. 'enue' → logprob: -13.626638412475586
    7. 'uée' → logprob: -13.876638412475586
    8. 'ées' → logprob: -14.251638412475586
    9. 'ree' → logprob: -15.001638412475586
    10. 'rée' → logprob: -15.251638412475586

Token 327: ' dans' (ID: 2671)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7708231210708618
    2. '):' → logprob: -0.7708231210708618
    3. ')' → logprob: -2.8958230018615723
    4. '   ' → logprob: -4.020823001861572
    5. ')
' → logprob: -7.770823001861572
    6. '):
' → logprob: -8.39582347869873
    7. ' ):' → logprob: -8.77082347869873
    8. '.' → logprob: -8.89582347869873
    9. '):

' → logprob: -9.39582347869873
    10. ' ):
' → logprob: -9.77082347869873

Token 328: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.10093831270933151
    2. ' la' → logprob: -2.350938320159912
    3. 'the' → logprob: -7.350938320159912
    4. 'numbers' → logprob: -9.975937843322754
    5. ' the' → logprob: -10.600937843322754
    6. 'l' → logprob: -12.100937843322754
    7. ')' → logprob: -12.725937843322754
    8. '(numbers' → logprob: -12.975937843322754
    9. 'liste' → logprob: -13.350937843322754
    10. 'le' → logprob: -13.600937843322754

Token 329: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.14124342799186707
    2. 'list' → logprob: -2.2662434577941895
    3. ' liste' → logprob: -3.7662434577941895
    4. ' list' → logprob: -5.8912434577941895
    5. ')' → logprob: -6.3912434577941895
    6. 'lis' → logprob: -9.391242980957031
    7. 'lista' → logprob: -9.766242980957031
    8. 'lists' → logprob: -10.016242980957031
    9. 'l' → logprob: -10.266242980957031
    10. '   ' → logprob: -10.516242980957031

Token 330: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018625929951667786
    2. '   ' → logprob: -4.018625736236572
    3. '):' → logprob: -7.893625736236572
    4. ')' → logprob: -9.64362621307373
    5. '):

' → logprob: -11.01862621307373
    6. ')
' → logprob: -11.51862621307373
    7. '
' → logprob: -12.14362621307373
    8. '):
' → logprob: -12.89362621307373
    9. ' ):
' → logprob: -13.76862621307373
    10. ' ' → logprob: -14.01862621307373

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02558394894003868
    2. '
' → logprob: -4.775583744049072
    3. ')
' → logprob: -5.150583744049072
    4. 'def' → logprob: -5.150583744049072
    5. '):
' → logprob: -5.900583744049072
    6. '    
' → logprob: -6.775583744049072
    7. ')' → logprob: -6.775583744049072
    8. '"""
' → logprob: -10.02558422088623
    9. '```' → logprob: -10.15058422088623
    10. '  
' → logprob: -10.40058422088623

Token 332: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016007384285330772
    2. '):
' → logprob: -4.641007423400879
    3. ')
' → logprob: -6.141007423400879
    4. '
' → logprob: -6.766007423400879
    5. ')' → logprob: -6.766007423400879
    6. '"""
' (adapté à ' """
') → logprob: -6.891007423400879
    7. 'def' → logprob: -8.016007423400879
    8. '):' → logprob: -8.516007423400879
    9. '"""' → logprob: -9.516007423400879
    10. '    
' → logprob: -9.891007423400879

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008428608998656273
    2. ' for' → logprob: -7.625843048095703
    3. 'for' → logprob: -8.000843048095703
    4. 'def' → logprob: -11.000843048095703
    5. '
' → logprob: -13.000843048095703
    6. '    
' → logprob: -14.750843048095703
    7. '	for' → logprob: -15.250843048095703
    8. ' def' → logprob: -15.875843048095703
    9. '   ' → logprob: -17.375843048095703
    10. '```' → logprob: -17.375843048095703

Token 334: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.811456024646759
    2. 'for' (adapté à ' for') → logprob: -1.0614559650421143
    3. ' for' → logprob: -1.5614559650421143
    4. '	for' → logprob: -12.186455726623535
    5. '
' → logprob: -14.311455726623535
    6. 'def' → logprob: -14.436455726623535
    7. ' ' → logprob: -14.936455726623535
    8. '  ' → logprob: -15.436455726623535
    9. '    
' → logprob: -15.561455726623535
    10. '```' → logprob: -16.18645668029785

Token 335: ' value' (ID: 1432)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.8122474551200867
    2. ' number' → logprob: -1.3122475147247314
    3. 'number' → logprob: -1.5622475147247314
    4. ' num' → logprob: -2.5622475147247314
    5. 'n' → logprob: -9.187247276306152
    6. 'value' → logprob: -11.437247276306152
    7. ' n' → logprob: -12.062247276306152
    8. 'x' → logprob: -12.562247276306152
    9. ' value' → logprob: -13.062247276306152
    10. 'numero' → logprob: -13.562247276306152

Token 336: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0076233032159507275
    2. 'in' → logprob: -4.882623195648193
    3. ' ' → logprob: -11.132623672485352
    4. '  ' → logprob: -14.007623672485352
    5. '   ' → logprob: -14.132623672485352
    6. ',' → logprob: -14.882623672485352
    7. 's' → logprob: -15.507623672485352
    8. '    ' → logprob: -15.632623672485352
    9. '	in' → logprob: -15.882623672485352
    10. ' ' → logprob: -17.13262367248535

Token 337: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.006715967319905758
    2. ' numbers' → logprob: -5.006715774536133
    3. '(numbers' → logprob: -14.881715774536133
    4. 'values' → logprob: -15.881715774536133
    5. 'number' → logprob: -16.256715774536133
    6. 'umbers' → logprob: -18.006715774536133
    7. '_numbers' → logprob: -18.631715774536133
    8. '   ' → logprob: -19.006715774536133
    9. 'range' → logprob: -19.381715774536133
    10. 'n' → logprob: -19.756715774536133

Token 338: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029776757583022118
    2. ':
' → logprob: -3.5297768115997314
    3. '   ' → logprob: -11.654776573181152
    4. '       ' → logprob: -11.779776573181152
    5. '=' → logprob: -13.029776573181152
    6. '():
' → logprob: -13.154776573181152
    7. '):
' → logprob: -13.154776573181152
    8. ' :' → logprob: -13.779776573181152
    9. ',' → logprob: -14.529776573181152
    10. ' :
' → logprob: -14.654776573181152

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005146674811840057
    2. ':' → logprob: -7.875514507293701
    3. '   ' → logprob: -9.87551498413086
    4. '    ' → logprob: -11.00051498413086
    5. '        
' → logprob: -11.00051498413086
    6. '<|end|>' → logprob: -11.50051498413086
    7. '      ' → logprob: -11.62551498413086
    8. ' if' → logprob: -12.12551498413086
    9. '     ' → logprob: -12.37551498413086
    10. '    
' → logprob: -12.50051498413086

Token 340: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.045684151351451874
    2. '       ' → logprob: -3.5456840991973877
    3. 'if' (adapté à ' if') → logprob: -4.170684337615967
    4. '   ' → logprob: -8.170683860778809
    5. ' 
' → logprob: -11.045683860778809
    6. '    ' → logprob: -11.045683860778809
    7. ' ' → logprob: -11.545683860778809
    8. ' i' → logprob: -11.545683860778809
    9. ' print' → logprob: -11.670683860778809
    10. '    
' → logprob: -12.295683860778809

Token 341: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.25193464756011963
    2. 'value' → logprob: -1.5019346475601196
    3. '   ' → logprob: -12.751935005187988
    4. '    ' → logprob: -13.376935005187988
    5. ' ' → logprob: -14.376935005187988
    6. '	value' → logprob: -15.626935005187988
    7. '(value' → logprob: -16.501934051513672
    8. '  ' → logprob: -16.751934051513672
    9. ' ' → logprob: -17.126934051513672
    10. 'v' → logprob: -17.501934051513672

Token 342: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20143067836761475
    2. '==' → logprob: -1.7014306783676147
    3. '=' → logprob: -11.451430320739746
    4. ' ' → logprob: -12.326430320739746
    5. ' =' → logprob: -14.201430320739746
    6. ' is' → logprob: -14.826430320739746
    7. '   ' → logprob: -14.826430320739746
    8. '>' → logprob: -15.951430320739746
    9. '==
' → logprob: -15.951430320739746
    10. ' ' → logprob: -16.451431274414062

Token 343: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.0004307884373702109
    2. ' first' → logprob: -7.750430583953857
    3. ' ' → logprob: -17.000431060791016
    4. '	first' → logprob: -17.625431060791016
    5. 'f' → logprob: -17.875431060791016
    6. '   ' → logprob: -18.000431060791016
    7. 'frist' → logprob: -18.625431060791016
    8. '[first' → logprob: -19.375431060791016
    9. 'First' → logprob: -19.750431060791016
    10. '
' → logprob: -21.000431060791016

Token 344: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01817510649561882
    2. ':
' → logprob: -4.01817512512207
    3. '           ' → logprob: -11.26817512512207
    4. '       ' → logprob: -12.26817512512207
    5. ' :' → logprob: -12.89317512512207
    6. 'print' → logprob: -13.64317512512207
    7. ',' → logprob: -13.64317512512207
    8. ':
' → logprob: -13.64317512512207
    9. ':

' → logprob: -14.39317512512207
    10. ' print' → logprob: -15.14317512512207

Token 345: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26997891068458557
    2. '           ' → logprob: -1.7699788808822632
    3. ' print' → logprob: -3.1449790000915527
    4. '
' → logprob: -4.519979000091553
    5. 'print' → logprob: -4.894979000091553
    6. ':' → logprob: -6.019979000091553
    7. ':
' → logprob: -7.019979000091553
    8. ',' → logprob: -8.019978523254395
    9. '               ' → logprob: -8.394978523254395
    10. '   ' → logprob: -8.394978523254395

Token 346: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.08630771934986115
    2. '           ' → logprob: -2.8363077640533447
    3. '       ' → logprob: -3.8363077640533447
    4. 'print' (adapté à ' print') → logprob: -6.086307525634766
    5. '               ' → logprob: -9.086307525634766
    6. '   ' → logprob: -10.336307525634766
    7. ' ' → logprob: -10.836307525634766
    8. '
' → logprob: -11.961307525634766
    9. '	print' → logprob: -12.086307525634766
    10. ' 
' → logprob: -12.211307525634766

Token 347: '(second' (ID: 78627)
  Prédit: '(second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(second' → logprob: -0.0025635301135480404
    2. '(' → logprob: -6.1275634765625
    3. '("' → logprob: -8.3775634765625
    4. '(f' → logprob: -9.3775634765625
    5. 'second' → logprob: -9.8775634765625
    6. '('' → logprob: -11.6275634765625
    7. '(se' → logprob: -13.5025634765625
    8. '(s' → logprob: -14.5025634765625
    9. '"' → logprob: -14.7525634765625
    10. '(space' → logprob: -15.3775634765625

Token 348: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03714916482567787
    2. ')' → logprob: -3.41214919090271
    3. '       ' → logprob: -5.662148952484131
    4. '   ' → logprob: -11.787149429321289
    5. '           ' → logprob: -12.412149429321289
    6. ')
' → logprob: -12.537149429321289
    7. ' )
' → logprob: -12.912149429321289
    8. 'else' → logprob: -13.287149429321289
    9. ' else' → logprob: -14.537149429321289
    10. ')

' → logprob: -14.787149429321289

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014646274503320456
    2. ' else' → logprob: -7.00146484375
    3. 'else' → logprob: -7.50146484375
    4. '   ' → logprob: -15.00146484375
    5. '           ' → logprob: -16.50146484375
    6. '      ' → logprob: -16.50146484375
    7. '	else' → logprob: -17.12646484375
    8. '	' → logprob: -17.12646484375
    9. '```' → logprob: -17.62646484375
    10. '​' → logprob: -17.75146484375

Token 350: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14426498115062714
    2. 'else' (adapté à ' else') → logprob: -2.3942649364471436
    3. ' else' → logprob: -3.1442649364471436
    4. '	else' → logprob: -13.394265174865723
    5. '   ' → logprob: -13.769265174865723
    6. '      ' → logprob: -14.894265174865723
    7. 'elif' → logprob: -16.394264221191406
    8. '     ' → logprob: -16.519264221191406
    9. '	' → logprob: -16.894264221191406
    10. '    ' → logprob: -17.394264221191406

Token 351: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13366170227527618
    2. ':
' → logprob: -2.5086617469787598
    3. '           ' → logprob: -3.1336617469787598
    4. 'print' → logprob: -10.258661270141602
    5. '       ' → logprob: -10.508661270141602
    6. ' :' → logprob: -10.508661270141602
    7. ' print' → logprob: -10.758661270141602
    8. ' :
' → logprob: -10.758661270141602
    9. '          ' → logprob: -10.758661270141602
    10. '   ' → logprob: -11.883661270141602

Token 352: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1659589409828186
    2. ' print' → logprob: -1.9159588813781738
    3. '           ' → logprob: -5.165958881378174
    4. '       ' → logprob: -11.665959358215332
    5. '   ' → logprob: -13.665959358215332
    6. '	print' → logprob: -14.915959358215332
    7. '          ' → logprob: -15.540959358215332
    8. '.print' → logprob: -15.790959358215332
    9. ' ' → logprob: -16.290958404541016
    10. '         ' → logprob: -16.665958404541016

Token 353: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007107630372047424
    2. ' print' → logprob: -7.250710964202881
    3. '           ' → logprob: -14.000710487365723
    4. '       ' → logprob: -17.75071144104004
    5. '   ' → logprob: -18.87571144104004
    6. '	print' → logprob: -20.50071144104004
    7. '          ' → logprob: -21.00071144104004
    8. '.print' → logprob: -22.00071144104004
    9. '               ' → logprob: -22.12571144104004
    10. '         ' → logprob: -22.37571144104004

Token 354: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -3.881560041918419e-05
    2. '(' → logprob: -10.250039100646973
    3. 'first' → logprob: -12.625039100646973
    4. '(f' → logprob: -17.875038146972656
    5. ' first' → logprob: -18.000038146972656
    6. '	first' → logprob: -18.750038146972656
    7. '[first' → logprob: -19.500038146972656
    8. ' (' → logprob: -19.500038146972656
    9. '(second' → logprob: -19.750038146972656
    10. '(
' → logprob: -19.875038146972656

Token 355: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -15.500000953674316
    4. '<|end|>' → logprob: -15.625000953674316
    5. '       ' → logprob: -17.500001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '')' → logprob: -18.500001907348633
    8. '))' → logprob: -18.625001907348633
    9. '())' → logprob: -18.875001907348633
    10. '),' → logprob: -18.875001907348633

Token 356: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10096784681081772
    2. 'def' → logprob: -2.3509678840637207
    3. 'if' → logprob: -7.225967884063721
    4. 'ndef' → logprob: -10.975967407226562
    5. '#' → logprob: -12.225967407226562
    6. 'num' → logprob: -12.725967407226562
    7. 'numbers' → logprob: -12.725967407226562
    8. 'number' → logprob: -12.975967407226562
    9. '```' → logprob: -13.600967407226562
    10. ' n' → logprob: -14.225967407226562

Token 357: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1002068892121315
    2. ' main' → logprob: -2.3502068519592285
    3. 'run' → logprob: -15.975207328796387
    4. '_main' → logprob: -16.60020637512207
    5. ' run' → logprob: -17.72520637512207
    6. '	main' → logprob: -17.72520637512207
    7. 'def' → logprob: -17.85020637512207
    8. '__' → logprob: -18.72520637512207
    9. 'solve' → logprob: -19.35020637512207
    10. 'process' → logprob: -19.47520637512207

Token 358: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.5358694731257856e-05
    2. '()' → logprob: -10.750035285949707
    3. ' ():' → logprob: -12.250035285949707
    4. '(' → logprob: -12.250035285949707
    5. '():
' → logprob: -12.625035285949707
    6. '()>' → logprob: -14.500035285949707
    7. '_' → logprob: -15.375035285949707
    8. '():
' → logprob: -16.250036239624023
    9. '()">' → logprob: -17.000036239624023
    10. ':' → logprob: -17.125036239624023

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5980614423751831
    2. 'n' → logprob: -0.8480614423751831
    3. ' n' → logprob: -3.8480615615844727
    4. '
' → logprob: -8.348061561584473
    5. '	n' → logprob: -8.723061561584473
    6. '    
' → logprob: -9.348061561584473
    7. '```' → logprob: -10.098061561584473
    8. '(n' → logprob: -11.348061561584473
    9. '_n' → logprob: -12.598061561584473
    10. '  ' → logprob: -12.848061561584473

Token 360: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.024714870378375053
    2. ' n' → logprob: -3.774714946746826
    3. '   ' → logprob: -6.524714946746826
    4. '	n' → logprob: -14.149714469909668
    5. '
' → logprob: -15.399714469909668
    6. '    
' → logprob: -15.649714469909668
    7. '```' → logprob: -15.774714469909668
    8. ' ' → logprob: -16.399715423583984
    9. 'try' → logprob: -16.649715423583984
    10. 'num' → logprob: -16.774715423583984

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7943881154060364
    2. 'n' → logprob: -1.2943880558013916
    3. ' n' → logprob: -1.2943880558013916
    4. '	n' → logprob: -11.669387817382812
    5. ' ' → logprob: -13.919387817382812
    6. '  ' → logprob: -14.044387817382812
    7. '       ' → logprob: -15.294387817382812
    8. '    ' → logprob: -15.294387817382812
    9. '
' → logprob: -15.419387817382812
    10. '    
' → logprob: -15.544387817382812

Token 362: ' Point' (ID: 9971)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11884111911058426
    2. 'n' → logprob: -2.2438411712646484
    3. '   ' → logprob: -5.118841171264648
    4. '	n' → logprob: -12.118841171264648
    5. '    ' → logprob: -13.118841171264648
    6. ' ' → logprob: -13.493841171264648
    7. '#' → logprob: -13.618841171264648
    8. ' #' → logprob: -13.868841171264648
    9. ' number' → logprob: -13.993841171264648
    10. ' num' → logprob: -14.243841171264648

Token 363: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.002127183834090829
    2. 'd' → logprob: -6.252127170562744
    3. '   ' → logprob: -9.377127647399902
    4. ' de' → logprob: -10.002127647399902
    5. ' ' → logprob: -10.752127647399902
    6. '  ' → logprob: -11.752127647399902
    7. '_' → logprob: -12.002127647399902
    8. 'entrée' → logprob: -12.127127647399902
    9. '_d' → logprob: -12.252127647399902
    10. ' final' → logprob: -12.252127647399902

Token 364: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.10052291303873062
    2. 'entrée' → logprob: -2.350522994995117
    3. 'entr' → logprob: -8.475522994995117
    4. ''' → logprob: -10.225522994995117
    5. ''ent' → logprob: -10.725522994995117
    6. '’entrée' → logprob: -10.725522994995117
    7. '_' → logprob: -11.725522994995117
    8. 'ent' → logprob: -11.850522994995117
    9. 'entry' → logprob: -12.100522994995117
    10. 'entrant' → logprob: -12.850522994995117

Token 365: ' principal' (ID: 10589)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.49977919459342957
    2. ' de' → logprob: -0.999779224395752
    3. '   ' → logprob: -4.749779224395752
    4. 'de' → logprob: -5.499779224395752
    5. ':' → logprob: -5.624779224395752
    6. 'def' → logprob: -6.124779224395752
    7. '()' → logprob: -6.374779224395752
    8. 'du' → logprob: -6.499779224395752
    9. ' principal' → logprob: -6.749779224395752
    10. ' pour' → logprob: -7.749779224395752

Token 366: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03029857762157917
    2. ' de' → logprob: -4.155298709869385
    3. ' du' → logprob: -4.780298709869385
    4. '    
' → logprob: -6.405298709869385
    5. 'def' → logprob: -6.780298709869385
    6. '()' → logprob: -7.030298709869385
    7. ':' → logprob: -7.405298709869385
    8. 'de' → logprob: -7.655298709869385
    9. '    ' → logprob: -8.655298233032227
    10. ' pour' → logprob: -8.905298233032227

Token 367: ' script' (ID: 11713)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.07561153173446655
    2. ' programme' → logprob: -2.8256115913391113
    3. 'program' → logprob: -4.325611591339111
    4. ' program' → logprob: -8.450611114501953
    5. 'script' → logprob: -9.700611114501953
    6. ' script' → logprob: -10.825611114501953
    7. 'programma' → logprob: -11.075611114501953
    8. 'programm' → logprob: -11.700611114501953
    9. 'code' → logprob: -13.325611114501953
    10. 'Programme' → logprob: -13.825611114501953

Token 368: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0456143394112587
    2. '(n' → logprob: -4.295614242553711
    3. '():' → logprob: -4.420614242553711
    4. ':' → logprob: -4.670614242553711
    5. '
' → logprob: -6.045614242553711
    6. '():
' → logprob: -6.295614242553711
    7. '    
' → logprob: -6.670614242553711
    8. '()' → logprob: -6.920614242553711
    9. '.' → logprob: -7.170614242553711
    10. ':
' → logprob: -7.295614242553711

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006576580926775932
    2. 'n' → logprob: -5.1315765380859375
    3. ' n' → logprob: -7.3815765380859375
    4. '    
' → logprob: -11.381576538085938
    5. '    ' → logprob: -12.256576538085938
    6. '       ' → logprob: -13.006576538085938
    7. '
' → logprob: -13.631576538085938
    8. '	n' → logprob: -13.631576538085938
    9. '```' → logprob: -13.756576538085938
    10. '(n' → logprob: -13.881576538085938

Token 370: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6413463950157166
    2. 'n' → logprob: -0.7663463950157166
    3. ' n' → logprob: -4.766346454620361
    4. '
' → logprob: -9.141345977783203
    5. '    
' → logprob: -9.891345977783203
    6. '	n' → logprob: -11.266345977783203
    7. '    ' → logprob: -11.891345977783203
    8. ')' → logprob: -12.266345977783203
    9. ' 
' → logprob: -12.516345977783203
    10. '```' → logprob: -12.641345977783203

Token 371: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0693893432617188
    2. '()' → logprob: -1.0693893432617188
    3. ' le' → logprob: -1.3193893432617188
    4. ' n' → logprob: -4.444389343261719
    5. '    ' → logprob: -5.069389343261719
    6. ' la' → logprob: -5.069389343261719
    7. ' l' → logprob: -5.319389343261719
    8. ' un' → logprob: -5.444389343261719
    9. ' ' → logprob: -5.944389343261719
    10. 'n' → logprob: -5.944389343261719

Token 372: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6017109155654907
    2. ' nombre' → logprob: -1.8517109155654907
    3. 'nombre' → logprob: -1.8517109155654907
    4. ' ' → logprob: -2.851710796356201
    5. ' n' → logprob: -3.476710796356201
    6. 'e' → logprob: -3.476710796356201
    7. '   ' → logprob: -5.351710796356201
    8. ' entier' → logprob: -5.851710796356201
    9. 'ent' → logprob: -6.101710796356201
    10. '_nombre' → logprob: -6.351710796356201

Token 373: ' N' (ID: 478)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.29651376605033875
    2. 'n' → logprob: -1.7965137958526611
    3. ' n' → logprob: -2.921513795852661
    4. '(' → logprob: -3.796513795852661
    5. '(n' → logprob: -5.046513557434082
    6. '   ' → logprob: -6.046513557434082
    7. ',' → logprob: -6.296513557434082
    8. ' (' → logprob: -6.921513557434082
    9. ' ' → logprob: -7.171513557434082
    10. ' ()' → logprob: -7.546513557434082

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37536612153053284
    2. ' =' → logprob: -2.3753662109375
    3. '   ' → logprob: -2.5003662109375
    4. '=' → logprob: -3.1253662109375
    5. ' (' → logprob: -3.7503662109375
    6. ':' → logprob: -4.2503662109375
    7. ' ,' → logprob: -4.5003662109375
    8. 'n' → logprob: -5.2503662109375
    9. ',
' → logprob: -5.3753662109375
    10. ' ' → logprob: -5.5003662109375

Token 375: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.5957467555999756
    2. 'n' → logprob: -1.5957467555999756
    3. ' n' → logprob: -1.5957467555999756
    4. '   ' → logprob: -3.7207467555999756
    5. '    ' → logprob: -5.095746994018555
    6. 'p' → logprob: -5.595746994018555
    7. ' crée' → logprob: -5.845746994018555
    8. ' appelle' → logprob: -6.595746994018555
    9. ' ' → logprob: -7.220746994018555
    10. ' then' → logprob: -7.595746994018555

Token 376: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9545975923538208
    2. 'n' → logprob: -1.2045975923538208
    3. '   ' → logprob: -1.3295975923538208
    4. ' numbers' → logprob: -3.7045974731445312
    5. 'numbers' → logprob: -4.079597473144531
    6. '<|end|>' → logprob: -6.079597473144531
    7. '  ' → logprob: -6.329597473144531
    8. ' ' → logprob: -6.829597473144531
    9. '	n' → logprob: -7.204597473144531
    10. '    ' → logprob: -7.329597473144531

Token 377: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.7007268071174622
    2. '<|end|>' → logprob: -0.9507268071174622
    3. ' ' → logprob: -3.2007267475128174
    4. ' integers' → logprob: -3.3257267475128174
    5. ')' → logprob: -4.2007269859313965
    6. 'ent' → logprob: -4.8257269859313965
    7. '<|end|>' → logprob: -5.8257269859313965
    8. ' )' → logprob: -6.3257269859313965
    9. ',' → logprob: -6.3257269859313965
    10. ' entier' → logprob: -6.4507269859313965

Token 378: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -9.491498531133402e-06
    2. 'ier' → logprob: -12.375009536743164
    3. 'ers' → logprob: -12.875009536743164
    4. 'ières' → logprob: -13.750009536743164
    5. '   ' → logprob: -14.250009536743164
    6. 'i' → logprob: -15.125009536743164
    7. 'ieres' → logprob: -15.250009536743164
    8. '```' → logprob: -15.375009536743164
    9. 'ires' → logprob: -16.375009536743164
    10. 'er' → logprob: -17.125009536743164

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15249502658843994
    2. '   ' → logprob: -2.7774949073791504
    3. '<|end|>' → logprob: -3.0274949073791504
    4. '.' → logprob: -4.27749490737915
    5. ')' → logprob: -5.40249490737915
    6. 'n' → logprob: -5.40249490737915
    7. 's' → logprob: -6.27749490737915
    8. ' ' → logprob: -6.52749490737915
    9. '    ' → logprob: -6.90249490737915
    10. ' ,' → logprob: -7.40249490737915

Token 380: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00869529228657484
    2. '<|end|>' → logprob: -6.008695125579834
    3. '    ' → logprob: -6.133695125579834
    4. ' puis' → logprob: -6.383695125579834
    5. ' and' → logprob: -7.383695125579834
    6. ' et' → logprob: -7.633695125579834
    7. ' ' → logprob: -8.258695602416992
    8. '  ' → logprob: -8.258695602416992
    9. ',' → logprob: -8.383695602416992
    10. '    
' → logprob: -8.508695602416992

Token 381: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04814121872186661
    2. 'numbers' → logprob: -4.298141002655029
    3. ' first' → logprob: -5.423141002655029
    4. '    
' → logprob: -5.548141002655029
    5. 'first' → logprob: -5.548141002655029
    6. ' calculates' → logprob: -5.673141002655029
    7. 'def' → logprob: -6.298141002655029
    8. '
' → logprob: -6.298141002655029
    9. ' les' → logprob: -6.423141002655029
    10. 'calcul' → logprob: -6.548141002655029

Token 382: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8716347813606262
    2. ' les' → logprob: -0.9966347813606262
    3. ',' → logprob: -2.6216347217559814
    4. 'les' → logprob: -3.2466347217559814
    5. ' ' → logprob: -3.7466347217559814
    6. '(
' → logprob: -3.9966347217559814
    7. ' la' → logprob: -4.7466349601745605
    8. '("' → logprob: -4.8716349601745605
    9. '   ' → logprob: -4.9966349601745605
    10. 's' → logprob: -5.1216349601745605

Token 383: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.1590844988822937
    2. ' each' → logprob: -2.6590845584869385
    3. ' chacun' → logprob: -3.1590845584869385
    4. 'each' → logprob: -3.7840845584869385
    5. 'ch' → logprob: -5.159084320068359
    6. 'cha' → logprob: -6.284084320068359
    7. ' ' → logprob: -7.159084320068359
    8. ' chacune' → logprob: -7.159084320068359
    9. 'Chaque' → logprob: -7.534084320068359
    10. 'value' → logprob: -7.534084320068359

Token 384: ' entier' (ID: 80473)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.3482540249824524
    2. ' value' → logprob: -1.8482539653778076
    3. ' entier' → logprob: -2.8482539653778076
    4. ' nombre' → logprob: -4.098254203796387
    5. ' élément' → logprob: -4.348254203796387
    6. 'élé' → logprob: -4.473254203796387
    7. 'value' → logprob: -4.598254203796387
    8. ' ' → logprob: -5.223254203796387
    9. ' ent' → logprob: -5.348254203796387
    10. 'val' → logprob: -5.348254203796387

Token 385: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2790122628211975
    2. ' ' → logprob: -1.9040122032165527
    3. ' un' → logprob: -4.029012203216553
    4. ' l' → logprob: -4.029012203216553
    5. ' le' → logprob: -4.154012203216553
    6. '   ' → logprob: -4.654012203216553
    7. '    ' → logprob: -4.779012203216553
    8. ',' → logprob: -4.904012203216553
    9. '  ' → logprob: -5.404012203216553
    10. 's' → logprob: -6.654012203216553

Token 386: ' valeur' (ID: 41664)
  Prédit: ' deuxième'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deuxième' → logprob: -0.3850465416908264
    2. ' plus' → logprob: -2.1350464820861816
    3. 'de' → logprob: -2.7600464820861816
    4. '"' → logprob: -3.2600464820861816
    5. ' ' → logprob: -3.3850464820861816
    6. ' second' → logprob: -3.7600464820861816
    7. ' valeur' → logprob: -4.135046482086182
    8. ' seconde' → logprob: -5.385046482086182
    9. ' de' → logprob: -5.760046482086182
    10. ' "' → logprob: -6.135046482086182

Token 387: ' demand' (ID: 8492)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3180522620677948
    2. '   ' → logprob: -2.693052291870117
    3. 'de' → logprob: -2.693052291870117
    4. ' de' → logprob: -3.818052291870117
    5. ' second' → logprob: -3.943052291870117
    6. ' suivante' → logprob: -4.068052291870117
    7. ' deux' → logprob: -4.568052291870117
    8. ' ' → logprob: -4.818052291870117
    9. ' deuxième' → logprob: -4.818052291870117
    10. ' maximale' → logprob: -5.318052291870117

Token 388: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00350278802216053
    2. 'é' → logprob: -5.75350284576416
    3. 'e' → logprob: -8.12850284576416
    4. 'ee' → logprob: -10.75350284576416
    5. ' é' → logprob: -12.37850284576416
    6. '   ' → logprob: -13.12850284576416
    7. 'è' → logprob: -13.37850284576416
    8. 'É' → logprob: -15.87850284576416
    9. 'ées' → logprob: -16.003501892089844
    10. 'ê' → logprob: -16.878501892089844

Token 389: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0051431539468467236
    2. '    
' → logprob: -6.005143165588379
    3. '
' → logprob: -6.380143165588379
    4. '.' → logprob: -7.755143165588379
    5. '(n' → logprob: -8.380143165588379
    6. '(' → logprob: -9.130143165588379
    7. ':' → logprob: -9.880143165588379
    8. '  
' → logprob: -10.255143165588379
    9. ',' → logprob: -10.630143165588379
    10. '(
' → logprob: -11.380143165588379

Token 390: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11594473570585251
    2. 'la' → logprob: -3.3659446239471436
    3. '   ' → logprob: -4.115944862365723
    4. ' les' → logprob: -4.115944862365723
    5. ' le' → logprob: -4.365944862365723
    6. 'le' → logprob: -4.615944862365723
    7. ' l' → logprob: -4.990944862365723
    8. 'l' → logprob: -4.990944862365723
    9. 'les' → logprob: -5.615944862365723
    10. ' sa' → logprob: -7.115944862365723

Token 391: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.19697310030460358
    2. 'a' → logprob: -2.3219730854034424
    3. 'es' → logprob: -3.4469730854034424
    4. ''' → logprob: -3.6969730854034424
    5. ''exp' → logprob: -5.1969733238220215
    6. '   ' → logprob: -6.3219733238220215
    7. ' logique' → logprob: -6.5719733238220215
    8. 'é' → logprob: -6.5719733238220215
    9. ' la' → logprob: -6.8219733238220215
    10. '
' → logprob: -6.8219733238220215

Token 392: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.11570649594068527
    2. 'alg' → logprob: -3.865706443786621
    3. 'en' → logprob: -4.240706443786621
    4. ''' → logprob: -4.615706443786621
    5. 'instruction' → logprob: -4.865706443786621
    6. '```' → logprob: -4.990706443786621
    7. 'log' → logprob: -5.240706443786621
    8. 'é' → logprob: -5.240706443786621
    9. '"""' → logprob: -5.240706443786621
    10. '"""
' → logprob: -5.365706443786621

Token 393: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.028531864285469055
    2. 'ig' → logprob: -3.903531789779663
    3. 'on' → logprob: -5.153532028198242
    4. 'onc' → logprob: -7.278532028198242
    5. 'um' → logprob: -7.403532028198242
    6. 'non' → logprob: -7.778532028198242
    7. 'once' → logprob: -8.778532028198242
    8. 'oncer' → logprob: -10.028532028198242
    9. 'i' → logprob: -10.403532028198242
    10. 'u' → logprob: -10.903532028198242

Token 394: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004258969333022833
    2. '.' → logprob: -6.12925910949707
    3. '
' → logprob: -6.37925910949707
    4. '.
' → logprob: -9.25425910949707
    5. ':' → logprob: -9.62925910949707
    6. '    
' → logprob: -9.87925910949707
    7. ',' → logprob: -10.00425910949707
    8. '(n' → logprob: -10.37925910949707
    9. 'def' → logprob: -10.87925910949707
    10. '```' → logprob: -10.87925910949707

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008887307718396187
    2. '
' → logprob: -4.75888729095459
    3. '    
' → logprob: -8.63388729095459
    4. 'n' → logprob: -9.50888729095459
    5. '```' → logprob: -11.38388729095459
    6. '\n' → logprob: -12.88388729095459
    7. ')' → logprob: -13.88388729095459
    8. '  
' → logprob: -13.88388729095459
    9. '(n' → logprob: -14.00888729095459
    10. '       ' → logprob: -14.38388729095459

Token 396: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03270043432712555
    2. '
' → logprob: -3.657700538635254
    3. 'n' → logprob: -5.157700538635254
    4. '    
' → logprob: -7.407700538635254
    5. '	n' → logprob: -12.532700538635254
    6. ' n' → logprob: -12.782700538635254
    7. ' 
' → logprob: -13.032700538635254
    8. '  
' → logprob: -13.157700538635254
    9. '   
' → logprob: -13.157700538635254
    10. '\n' → logprob: -13.282700538635254

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1345408409833908
    2. 'n' → logprob: -2.1345407962799072
    3. ' n' → logprob: -4.884541034698486
    4. '	n' → logprob: -11.009540557861328
    5. 'N' → logprob: -12.759540557861328
    6. '    
' → logprob: -14.134540557861328
    7. '
' → logprob: -14.759540557861328
    8. ' N' → logprob: -15.634540557861328
    9. '  ' → logprob: -15.884540557861328
    10. '    ' → logprob: -16.134540557861328

Token 398: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001706367009319365
    2. '   ' → logprob: -6.501706600189209
    3. ' n' → logprob: -8.75170612335205
    4. 'N' (adapté à ' N') → logprob: -10.00170612335205
    5. '    
' → logprob: -15.50170612335205
    6. '	n' → logprob: -15.62670612335205
    7. '
' → logprob: -17.001707077026367
    8. '```' → logprob: -17.251707077026367
    9. 'try' → logprob: -17.376707077026367
    10. ' N' → logprob: -17.751707077026367

Token 399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815205067396164
    2. '=' → logprob: -4.018152236938477
    3. '=int' → logprob: -13.518152236938477
    4. ' ' → logprob: -14.768152236938477
    5. '=input' → logprob: -15.268152236938477
    6. ' =
' → logprob: -17.143152236938477
    7. ',' → logprob: -17.268152236938477
    8. ')' → logprob: -17.393152236938477
    9. '_' → logprob: -17.643152236938477
    10. ' ' → logprob: -17.768152236938477

Token 400: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024756586644798517
    2. ' int' → logprob: -6.002475738525391
    3. ' ' → logprob: -20.50247573852539
    4. '   ' → logprob: -21.00247573852539
    5. '=int' → logprob: -21.25247573852539
    6. '[int' → logprob: -21.37747573852539
    7. '(int' → logprob: -21.87747573852539
    8. '  ' → logprob: -22.00247573852539
    9. '	int' → logprob: -22.25247573852539
    10. '<int' → logprob: -23.00247573852539

Token 401: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0003398726985324174
    2. '(' → logprob: -8.00033950805664
    3. 'input' → logprob: -12.37533950805664
    4. '()' → logprob: -16.25033950805664
    5. ' (' → logprob: -16.50033950805664
    6. '=input' → logprob: -17.75033950805664
    7. ' input' → logprob: -18.00033950805664
    8. '(
' → logprob: -18.25033950805664
    9. ',input' → logprob: -20.25033950805664
    10. '<input' → logprob: -20.37533950805664

Token 402: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02979978546500206
    2. '()' → logprob: -3.529799699783325
    3. '(' → logprob: -10.904799461364746
    4. ')' → logprob: -11.154799461364746
    5. '())
' → logprob: -12.154799461364746
    6. '()
' → logprob: -12.654799461364746
    7. '();)' → logprob: -13.029799461364746
    8. ' ())' → logprob: -13.279799461364746
    9. '().' → logprob: -13.779799461364746
    10. '()>' → logprob: -14.029799461364746

Token 403: '   ' (ID: 271)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.20836427807807922
    2. '   ' → logprob: -2.208364248275757
    3. ' numbers' → logprob: -2.583364248275757
    4. 'input' → logprob: -6.333364486694336
    5. 'n' → logprob: -7.333364486694336
    6. ' input' → logprob: -9.333364486694336
    7. 'inputs' → logprob: -10.208364486694336
    8. 'nums' → logprob: -10.333364486694336
    9. 'values' → logprob: -10.583364486694336
    10. '(numbers' → logprob: -10.708364486694336

Token 404: ' ai' (ID: 8440)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.020098816603422165
    2. ' numbers' → logprob: -4.020098686218262
    3. 'values' → logprob: -7.020098686218262
    4. 'input' → logprob: -7.145098686218262
    5. 'nums' → logprob: -8.645098686218262
    6. '   ' → logprob: -10.645098686218262
    7. 'inputs' → logprob: -10.770098686218262
    8. ' input' → logprob: -11.145098686218262
    9. 'number' → logprob: -11.770098686218262
    10. ' values' → logprob: -11.770098686218262

Token 405: ' =' (ID: 314)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.2191566526889801
    2. 's' → logprob: -1.7191566228866577
    3. ' =' → logprob: -4.844156742095947
    4. '_values' → logprob: -5.344156742095947
    5. 'st' → logprob: -6.219156742095947
    6. 'sts' → logprob: -6.219156742095947
    7. 'nts' → logprob: -7.594156742095947
    8. '=' → logprob: -8.844156265258789
    9. '_numbers' → logprob: -9.719156265258789
    10. '_lst' → logprob: -9.844156265258789

Token 406: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0024756586644798517
    2. ' get' → logprob: -6.002475738525391
    3. '	get' → logprob: -21.25247573852539
    4. '(get' → logprob: -21.62747573852539
    5. '=get' → logprob: -22.25247573852539
    6. '.get' → logprob: -23.00247573852539
    7. '_get' → logprob: -23.25247573852539
    8. '[get' → logprob: -23.37747573852539
    9. ' ' → logprob: -23.75247573852539
    10. ')get' → logprob: -25.62747573852539

Token 407: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.00000286102295
    3. 'input' → logprob: -16.500001907348633
    4. '_inputs' → logprob: -16.875001907348633
    5. '_output' → logprob: -17.250001907348633
    6. '_INPUT' → logprob: -17.500001907348633
    7. '_Input' → logprob: -17.875001907348633
    8. '_in' → logprob: -18.000001907348633
    9. '_a' → logprob: -18.750001907348633
    10. 'Input' → logprob: -18.875001907348633

Token 408: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.87500286102295
    3. '_input' → logprob: -14.37500286102295
    4. ' _' → logprob: -15.50000286102295
    5. '_lst' → logprob: -15.75000286102295
    6. '_lists' → logprob: -16.000001907348633
    7. '_lista' → logprob: -16.125001907348633
    8. '```' → logprob: -16.375001907348633
    9. '_line' → logprob: -16.500001907348633
    10. '_array' → logprob: -16.750001907348633

Token 409: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.52919222577475e-05
    2. '(' → logprob: -9.500075340270996
    3. ' (' → logprob: -14.750075340270996
    4. '(n' → logprob: -18.12507438659668
    5. '(
' → logprob: -19.37507438659668
    6. '(NUM' → logprob: -20.50007438659668
    7. '((' → logprob: -21.00007438659668
    8. ' ' → logprob: -21.37507438659668
    9. 'N' → logprob: -21.75007438659668
    10. '   ' → logprob: -22.12507438659668

Token 410: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009258725331164896
    2. '(N' → logprob: -7.2509260177612305
    3. '(' → logprob: -8.50092601776123
    4. '())' → logprob: -12.12592601776123
    5. '(n' → logprob: -12.25092601776123
    6. ' )' → logprob: -14.25092601776123
    7. ')
' → logprob: -14.50092601776123
    8. '()' → logprob: -14.75092601776123
    9. '))' → logprob: -15.00092601776123
    10. '   ' → logprob: -15.37592601776123

Token 411: '   ' (ID: 271)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.34140780568122864
    2. '   ' → logprob: -1.4664077758789062
    3. ' first' → logprob: -2.8414077758789062
    4. '	first' → logprob: -9.841407775878906
    5. '    
' → logprob: -10.216407775878906
    6. '```' → logprob: -11.216407775878906
    7. '[first' → logprob: -11.841407775878906
    8. 'f' → logprob: -12.091407775878906
    9. '  ' → logprob: -12.091407775878906
    10. ' ' → logprob: -12.716407775878906

Token 412: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.000297685619443655
    2. 'f' → logprob: -8.375297546386719
    3. ' first' → logprob: -9.625297546386719
    4. 'fst' → logprob: -15.000297546386719
    5. 'fi' → logprob: -15.125297546386719
    6. 'largest' → logprob: -15.625297546386719
    7. '   ' → logprob: -16.12529754638672
    8. 'max' → logprob: -16.50029754638672
    9. '    
' → logprob: -17.00029754638672
    10. 'First' → logprob: -17.50029754638672

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013611861504614353
    2. '_max' → logprob: -6.62636137008667
    3. 'max' → logprob: -11.001360893249512
    4. ',max' → logprob: -11.501360893249512
    5. ',_' → logprob: -12.376360893249512
    6. ' ,' → logprob: -13.001360893249512
    7. '_,' → logprob: -13.626360893249512
    8. 'largest' → logprob: -15.626360893249512
    9. 'Max' → logprob: -16.126361846923828
    10. 'a' → logprob: -16.376361846923828

Token 414: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.12692862749099731
    2. ' second' → logprob: -2.1269285678863525
    3. '	second' → logprob: -14.876928329467773
    4. '_second' → logprob: -16.251928329467773
    5. '(second' → logprob: -17.126928329467773
    6. '<|end|>' → logprob: -18.001928329467773
    7. '.second' → logprob: -18.126928329467773
    8. 'Second' → logprob: -20.126928329467773
    9. ' ' → logprob: -20.501928329467773
    10. '第二' → logprob: -21.501928329467773

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132627606391907
    2. '=' → logprob: -1.313262701034546
    3. ',' → logprob: -14.563262939453125
    4. '<|end|>' → logprob: -15.688262939453125
    5. ')' → logprob: -16.188262939453125
    6. '=find' → logprob: -16.313262939453125
    7. '=get' → logprob: -17.188262939453125
    8. ' ' → logprob: -17.313262939453125
    9. '＝' → logprob: -17.688262939453125
    10. 's' → logprob: -17.938262939453125

Token 416: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.061968132853507996
    2. ' find' → logprob: -2.8119680881500244
    3. '(find' → logprob: -14.936967849731445
    4. '	find' → logprob: -16.436967849731445
    5. '=find' → logprob: -17.061967849731445
    6. '_find' → logprob: -19.061967849731445
    7. '.find' → logprob: -19.186967849731445
    8. '   ' → logprob: -19.311967849731445
    9. ' ' → logprob: -19.811967849731445
    10. ')find' → logprob: -19.811967849731445

Token 417: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -1.1637164789135568e-05
    2. 'two' → logprob: -11.375011444091797
    3. '(two' → logprob: -16.625011444091797
    4. 'Two' → logprob: -17.625011444091797
    5. '_TWO' → logprob: -18.250011444091797
    6. ')_' → logprob: -18.500011444091797
    7. '_tw' → logprob: -18.625011444091797
    8. ' two' → logprob: -19.000011444091797
    9. '_t' → logprob: -19.500011444091797
    10. '_second' → logprob: -19.625011444091797

Token 418: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -8.65707261255011e-06
    2. '_two' → logprob: -11.875008583068848
    3. 'largest' → logprob: -13.625008583068848
    4. '_large' → logprob: -14.750008583068848
    5. '_' → logprob: -16.875009536743164
    6. '_max' → logprob: -17.625009536743164
    7. '_t' → logprob: -17.875009536743164
    8. 'two' → logprob: -18.250009536743164
    9. 'Largest' → logprob: -18.375009536743164
    10. '_m' → logprob: -18.625009536743164

Token 419: 'argest' (ID: 45028)
  Prédit: 'argest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argest' → logprob: -0.02327960729598999
    2. 'largest' → logprob: -3.7732796669006348
    3. 'Largest' → logprob: -11.648279190063477
    4. ' largest' → logprob: -12.148279190063477
    5. 'arg' → logprob: -12.273279190063477
    6. 'arges' → logprob: -12.273279190063477
    7. 'arge' → logprob: -12.523279190063477
    8. 'arest' → logprob: -13.648279190063477
    9. 'argent' → logprob: -13.773279190063477
    10. '-largest' → logprob: -13.898279190063477

Token 420: '(ai' (ID: 172264)
  Prédit: '(ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ai' → logprob: -3.650518920039758e-06
    2. '(numbers' → logprob: -12.625003814697266
    3. '(a' → logprob: -15.875003814697266
    4. 'ai' → logprob: -16.125003814697266
    5. '(nums' → logprob: -17.250003814697266
    6. ' ai' → logprob: -19.250003814697266
    7. '_ai' → logprob: -19.375003814697266
    8. '(' → logprob: -19.500003814697266
    9. '.ai' → logprob: -19.750003814697266
    10. ' (' → logprob: -20.750003814697266

Token 421: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013279760023579001
    2. ')
' → logprob: -6.626327991485596
    3. '   ' → logprob: -14.001327514648438
    4. ')
' → logprob: -14.626327514648438
    5. ' )' → logprob: -15.001327514648438
    6. ')

' → logprob: -15.126327514648438
    7. ')`' → logprob: -17.126327514648438
    8. ' ' → logprob: -17.501327514648438
    9. '<|end|>' → logprob: -17.751327514648438
    10. '(' → logprob: -17.876327514648438

Token 422: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10087301582098007
    2. '   ' → logprob: -2.3508729934692383
    3. ' print' → logprob: -7.350872993469238
    4. '	print' → logprob: -11.100872993469238
    5. '
' → logprob: -11.725872993469238
    6. '(print' → logprob: -15.100872993469238
    7. '  ' → logprob: -15.350872993469238
    8. '    
' → logprob: -15.725872993469238
    9. '.print' → logprob: -16.100873947143555
    10. '#print' → logprob: -16.850873947143555

Token 423: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005059692775830626
    2. '   ' → logprob: -7.7505059242248535
    3. ' print' → logprob: -9.500506401062012
    4. '	print' → logprob: -14.750506401062012
    5. '
' → logprob: -18.750505447387695
    6. '.print' → logprob: -19.125505447387695
    7. '(print' → logprob: -19.125505447387695
    8. '  ' → logprob: -19.375505447387695
    9. '_print' → logprob: -19.375505447387695
    10. '```' → logprob: -19.750505447387695

Token 424: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -1.7432603272027336e-06
    2. '(_' → logprob: -14.750001907348633
    3. '_' → logprob: -15.375001907348633
    4. 'Results' → logprob: -15.625001907348633
    5. 'results' → logprob: -15.625001907348633
    6. '```' → logprob: -15.750001907348633
    7. '(' → logprob: -16.000001907348633
    8. 's' → logprob: -16.250001907348633
    9. '_values' → logprob: -16.500001907348633
    10. '_RESULTS' → logprob: -17.125001907348633

Token 425: '(ai' (ID: 172264)
  Prédit: '(ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ai' → logprob: -1.0206720617134124e-05
    2. '(numbers' → logprob: -11.62501049041748
    3. '(' → logprob: -13.75001049041748
    4. ' (' → logprob: -16.250009536743164
    5. '(a' → logprob: -17.000009536743164
    6. ' ai' → logprob: -18.000009536743164
    7. '(nums' → logprob: -18.000009536743164
    8. '.ai' → logprob: -18.500009536743164
    9. '_ai' → logprob: -19.500009536743164
    10. 'ai' → logprob: -19.625009536743164

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014084660506341606
    2. ' ,' → logprob: -9.250141143798828
    3. '(first' → logprob: -10.250141143798828
    4. 'first' → logprob: -11.750141143798828
    5. ' first' → logprob: -14.125141143798828
    6. '[first' → logprob: -14.500141143798828
    7. ')' → logprob: -16.125141143798828
    8. 'First' → logprob: -16.625141143798828
    9. '   ' → logprob: -17.500141143798828
    10. '(' → logprob: -17.875141143798828

Token 427: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.001170225441455841
    2. ' first' → logprob: -6.7511701583862305
    3. '	first' → logprob: -21.126171112060547
    4. '   ' → logprob: -21.376171112060547
    5. '(first' → logprob: -22.126171112060547
    6. ' ' → logprob: -22.501171112060547
    7. '[first' → logprob: -22.751171112060547
    8. 'First' → logprob: -23.501171112060547
    9. '  ' → logprob: -24.251171112060547
    10. '.first' → logprob: -24.376171112060547

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2664456789934775e-06
    2. ' ,' → logprob: -13.625000953674316
    3. ',
' → logprob: -18.875001907348633
    4. ',

' → logprob: -21.250001907348633
    5. ')' → logprob: -21.750001907348633
    6. ',s' → logprob: -22.500001907348633
    7. '‌,' → logprob: -22.625001907348633
    8. '،' → logprob: -22.750001907348633
    9. '2' → logprob: -23.125001907348633
    10. '，' → logprob: -23.500001907348633

Token 429: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.1002068892121315
    2. ' second' → logprob: -2.3502068519592285
    3. '	second' → logprob: -15.975207328796387
    4. '   ' → logprob: -17.10020637512207
    5. '(second' → logprob: -17.85020637512207
    6. ' ' → logprob: -17.97520637512207
    7. 'Second' → logprob: -18.35020637512207
    8. '_second' → logprob: -19.10020637512207
    9. '.second' → logprob: -19.22520637512207
    10. 'se' → logprob: -19.47520637512207

Token 430: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -14.37501335144043
    4. ')

' → logprob: -17.62501335144043
    5. '),' → logprob: -18.87501335144043
    6. ')
' → logprob: -19.25001335144043
    7. ')`' → logprob: -19.62501335144043
    8. '<|end|>' → logprob: -19.87501335144043
    9. '))' → logprob: -20.37501335144043
    10. ')add' → logprob: -20.87501335144043

Token 431: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3135131001472473
    2. 'main' → logprob: -1.3135130405426025
    3. '
' → logprob: -8.438512802124023
    4. ' if' → logprob: -11.563512802124023
    5. '(main' → logprob: -11.813512802124023
    6. '```' → logprob: -11.938512802124023
    7. ' main' → logprob: -12.188512802124023
    8. '#' → logprob: -13.188512802124023
    9. '\n' → logprob: -13.563512802124023
    10. '<|end|>' → logprob: -13.938512802124023

Token 432: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11235810816287994
    2. '__' → logprob: -2.8623580932617188
    3. '_' → logprob: -3.1123580932617188
    4. ' ' → logprob: -5.987358093261719
    5. ' _' → logprob: -7.237358093261719
    6. '_name' → logprob: -7.987358093261719
    7. ' ' → logprob: -8.112358093261719
    8. ' ' → logprob: -8.612358093261719
    9. '​' → logprob: -9.237358093261719
    10. ' ​' → logprob: -9.612358093261719

Token 433: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08719176054000854
    2. ' ==' → logprob: -2.8371918201446533
    3. ' __' → logprob: -3.9621918201446533
    4. '==' → logprob: -5.337191581726074
    5. '.__' → logprob: -8.087191581726074
    6. 'name' → logprob: -8.587191581726074
    7. '_' → logprob: -9.212191581726074
    8. '[' → logprob: -9.337191581726074
    9. '=="' → logprob: -9.587191581726074
    10. '__.' → logprob: -10.087191581726074

Token 434: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.625000953674316
    3. '____' → logprob: -16.125
    4. '__.__' → logprob: -16.125
    5. '___' → logprob: -17.375
    6. '==' → logprob: -17.5
    7. ' __' → logprob: -18.375
    8. '__
' → logprob: -18.625
    9. '______' → logprob: -19.75
    10. '"' → logprob: -19.875

Token 435: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6024543642997742
    2. '__' → logprob: -0.9774543642997742
    3. '==' → logprob: -2.602454423904419
    4. '=="' → logprob: -6.22745418548584
    5. '=='' → logprob: -8.97745418548584
    6. '_' → logprob: -10.35245418548584
    7. '"' → logprob: -11.97745418548584
    8. '=' → logprob: -12.10245418548584
    9. '__.__' → logprob: -12.10245418548584
    10. '___' → logprob: -12.35245418548584

Token 436: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06206818297505379
    2. ''' → logprob: -2.812068223953247
    3. ' "__' → logprob: -9.312067985534668
    4. '__' → logprob: -12.062067985534668
    5. ' '__' → logprob: -12.562067985534668
    6. '"user' → logprob: -15.062067985534668
    7. '"_' → logprob: -15.562067985534668
    8. '"name' → logprob: -16.062068939208984
    9. ''_' → logprob: -17.187068939208984
    10. '("__' → logprob: -17.187068939208984

Token 437: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0564331205387134e-05
    2. '__' → logprob: -11.62501049041748
    3. 'name' → logprob: -13.75001049041748
    4. '_main' → logprob: -15.75001049041748
    5. ' main' → logprob: -16.125011444091797
    6. '"' → logprob: -16.625011444091797
    7. 'ma' → logprob: -16.875011444091797
    8. 'built' → logprob: -17.750011444091797
    9. 'm' → logprob: -17.875011444091797
    10. '主' → logprob: -18.375011444091797

Token 438: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20143117010593414
    2. '__' → logprob: -1.701431155204773
    3. '__':
' → logprob: -11.076431274414062
    4. '__["' → logprob: -13.451431274414062
    5. '__",' → logprob: -15.451431274414062
    6. '__("' → logprob: -15.576431274414062
    7. '__:' → logprob: -15.826431274414062
    8. '"' → logprob: -16.201431274414062
    9. ' "__' → logprob: -16.576431274414062
    10. '_' → logprob: -16.826431274414062

Token 439: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5041608214378357
    2. '"' → logprob: -1.0041608810424805
    3. '__' → logprob: -3.7541608810424805
    4. ''' → logprob: -5.2541608810424805
    5. ' main' → logprob: -7.0041608810424805
    6. '   ' → logprob: -10.12916088104248
    7. '_main' → logprob: -11.37916088104248
    8. ' "__' → logprob: -11.87916088104248
    9. '	main' → logprob: -12.00416088104248
    10. ' __' → logprob: -12.62916088104248

Token 440: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.842555426876061e-06
    2. ' main' → logprob: -12.250004768371582
    3. '	main' → logprob: -18.7500057220459
    4. '   ' → logprob: -20.2500057220459
    5. '_main' → logprob: -22.3750057220459
    6. 'm' → logprob: -22.8750057220459
    7. 'mai' → logprob: -23.3750057220459
    8. '.main' → logprob: -24.0000057220459
    9. '(main' → logprob: -24.1250057220459
    10. 'ma' → logprob: -24.3750057220459

Token 441: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 439
Tokens correctement prédits (1ère position, stricte): 173
Tokens correctement prédits (1ère position, avec adaptation): 187
Tokens correctement prédits (top 10): 352
Précision stricte (1ère position): 39.41%
Précision adaptée (1ère position): 42.60%
Précision (top 10): 80.18%
================================================================================
