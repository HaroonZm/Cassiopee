================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    n = int(input())
    return n

def count_coin(x, op, min_op):
    if x == 0:
        return 0
    if x in min_op:
        return min_op[x]
    min_count = 10000000
    for o in op:
        if x >= o:
            count = 1 + count_coin(x - o, op, min_op)
            if count < min_count:
                min_count = count
    min_op[x] = min_count
    return min_count

def submit():
    n = read_input()
    ops = [1, 6, 9]
    for op in ops[1:]:
        i = 1
        t = op ** i
        while t <= n:
            ops.append(t)
            i += 1
            t = op ** i
    ops = list(set(ops))
    ops.sort(reverse=True)
    print(count_coin(n, ops, {}))

if __name__ == '__main__':
    submit()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9125446677207947
    2. '\' → logprob: -1.2875447273254395
    3. '\n' → logprob: -1.4125447273254395
    4. '   ' → logprob: -3.1625447273254395
    5. '    
' → logprob: -4.9125447273254395
    6. '
' → logprob: -5.1625447273254395
    7. ' 
' → logprob: -5.6625447273254395
    8. '``' → logprob: -5.7875447273254395
    9. ':' → logprob: -6.1625447273254395
    10. ''\' → logprob: -6.6625447273254395

Token 5: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44253385066986084
    2. '```' → logprob: -2.0675339698791504
    3. 'return' → logprob: -2.6925339698791504
    4. '    ' → logprob: -3.3175339698791504
    5. 'input' → logprob: -3.5675339698791504
    6. 'r' → logprob: -3.5675339698791504
    7. '\' → logprob: -4.19253396987915
    8. 'x' → logprob: -4.31753396987915
    9. '       ' → logprob: -4.69253396987915
    10. '`' → logprob: -5.19253396987915

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9738693833351135
    2. ' =' → logprob: -1.2238693237304688
    3. '=' → logprob: -1.9738693237304688
    4. 'u' → logprob: -2.3488693237304688
    5. '   ' → logprob: -3.2238693237304688
    6. ',' → logprob: -4.348869323730469
    7. ' ' → logprob: -5.223869323730469
    8. ')' → logprob: -5.348869323730469
    9. 'umber' → logprob: -5.348869323730469
    10. '  ' → logprob: -5.473869323730469

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0044891079887747765
    2. 'int' → logprob: -5.754488945007324
    3. ' input' → logprob: -7.004488945007324
    4. ' ' → logprob: -7.879488945007324
    5. 'input' → logprob: -10.754488945007324
    6. '=int' → logprob: -14.129488945007324
    7. ' len' → logprob: -14.254488945007324
    8. ' n' → logprob: -15.254488945007324
    9. '0' → logprob: -15.504488945007324
    10. '<int' → logprob: -15.754488945007324

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01828690432012081
    2. '(input' → logprob: -4.01828670501709
    3. 'input' → logprob: -9.76828670501709
    4. ''' → logprob: -10.39328670501709
    5. '('' → logprob: -11.14328670501709
    6. ' (' → logprob: -11.64328670501709
    7. '()' → logprob: -11.89328670501709
    8. '```' → logprob: -12.64328670501709
    9. '`' → logprob: -12.89328670501709
    10. '(
' → logprob: -13.14328670501709

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9443362951278687
    2. '()' → logprob: -1.1943362951278687
    3. '(' → logprob: -1.8193362951278687
    4. ')' → logprob: -1.9443362951278687
    5. '()))' → logprob: -7.319336414337158
    6. '))' → logprob: -7.569336414337158
    7. '('' → logprob: -7.569336414337158
    8. '(
' → logprob: -8.1943359375
    9. '(""))' → logprob: -8.4443359375
    10. '")' → logprob: -9.0693359375

Token 10: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1570384502410889
    2. '
' → logprob: -1.9070384502410889
    3. '   ' → logprob: -2.032038450241089
    4. '    
' → logprob: -2.282038450241089
    5. '\' → logprob: -2.407038450241089
    6. ')' → logprob: -3.157038450241089
    7. ''\' → logprob: -3.282038450241089
    8. '' → logprob: -3.532038450241089
    9. '  
' → logprob: -3.532038450241089
    10. '```' → logprob: -4.032038688659668

Token 11: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5475521087646484
    2. 'data' → logprob: -1.7975521087646484
    3. '    
' → logprob: -2.0475521087646484
    4. '`' → logprob: -3.5475521087646484
    5. 'for' → logprob: -4.297552108764648
    6. '```' → logprob: -4.422552108764648
    7. '\n' → logprob: -4.547552108764648
    8. '\' → logprob: -4.547552108764648
    9. 'return' (adapté à ' return') → logprob: -4.797552108764648
    10. 'r' → logprob: -5.672552108764648

Token 12: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6183024048805237
    2. ' n' → logprob: -0.8683024048805237
    3. ' input' → logprob: -3.993302345275879
    4. 'n' → logprob: -4.493302345275879
    5. 'input' → logprob: -4.993302345275879
    6. '"' → logprob: -6.993302345275879
    7. '  ' → logprob: -7.118302345275879
    8. '    ' → logprob: -7.493302345275879
    9. ' (' → logprob: -7.493302345275879
    10. ''' → logprob: -7.618302345275879

Token 13: '

' (ID: 279)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3133362531661987
    2. '\n' → logprob: -1.4383362531661987
    3. '<|end|>' → logprob: -1.8133362531661987
    4. ')' → logprob: -2.9383363723754883
    5. 'newline' → logprob: -2.9383363723754883
    6. '```' → logprob: -3.0633363723754883
    7. '\' → logprob: -3.0633363723754883
    8. '
' → logprob: -3.0633363723754883
    9. '+' → logprob: -3.9383363723754883
    10. '' → logprob: -4.438336372375488

Token 14: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.818410336971283
    2. '\n' → logprob: -1.0684103965759277
    3. '```' → logprob: -2.4434103965759277
    4. '<|end|>' → logprob: -3.1934103965759277
    5. 'newline' → logprob: -3.9434103965759277
    6. '*' → logprob: -4.193410396575928
    7. '\' → logprob: -4.568410396575928
    8. '#' → logprob: -4.568410396575928
    9. '' → logprob: -5.318410396575928
    10. 'n' → logprob: -5.318410396575928

Token 15: ' count' (ID: 3605)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -1.2697114944458008
    2. ' calculate' → logprob: -1.2697114944458008
    3. ' space' → logprob: -1.5197114944458008
    4. ' ' → logprob: -2.644711494445801
    5. ' process' → logprob: -3.019711494445801
    6. '_' → logprob: -3.894711494445801
    7. ' compute' → logprob: -3.894711494445801
    8. ' main' → logprob: -4.144711494445801
    9. ' add' → logprob: -4.269711494445801
    10. ' write' → logprob: -4.644711494445801

Token 16: '_coin' (ID: 187802)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.027415554970502853
    2. '_elements' → logprob: -4.652415752410889
    3. '_items' → logprob: -5.652415752410889
    4. '_words' → logprob: -5.902415752410889
    5. '_s' → logprob: -6.152415752410889
    6. '(' → logprob: -6.152415752410889
    7. '_occ' → logprob: -6.402415752410889
    8. '_numbers' → logprob: -6.652415752410889
    9. '_spaces' → logprob: -8.02741527557373
    10. '_strings' → logprob: -8.02741527557373

Token 17: '(x' (ID: 4061)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020732590928673744
    2. '_s' → logprob: -3.8957326412200928
    3. '_' → logprob: -8.645732879638672
    4. '(' → logprob: -11.645732879638672
    5. '(s' → logprob: -12.645732879638672
    6. ''s' → logprob: -14.895732879638672
    7. ')' → logprob: -15.770732879638672
    8. '_plural' → logprob: -15.770732879638672
    9. '_(' → logprob: -15.770732879638672
    10. '_sat' → logprob: -15.770732879638672

Token 18: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09182555228471756
    2. ')' → logprob: -3.216825485229492
    3. ',' → logprob: -3.591825485229492
    4. 's' → logprob: -4.091825485229492
    5. ' ):' → logprob: -6.716825485229492
    6. '_' → logprob: -7.341825485229492
    7. ' ' → logprob: -8.716825485229492
    8. '[' → logprob: -8.966825485229492
    9. '(' → logprob: -9.091825485229492
    10. '[]):' → logprob: -9.216825485229492

Token 19: ' op' (ID: 991)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2740069031715393
    2. 'y' → logprob: -2.1490068435668945
    3. ' n' → logprob: -3.5240068435668945
    4. ' coins' → logprob: -3.6490068435668945
    5. ' m' → logprob: -4.3990068435668945
    6. ' coin' → logprob: -4.5240068435668945
    7. ' k' → logprob: -5.1490068435668945
    8. 'coins' → logprob: -5.2740068435668945
    9. 'n' → logprob: -5.3990068435668945
    10. ' c' → logprob: -5.3990068435668945

Token 20: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2411215752363205
    2. ')' → logprob: -2.741121530532837
    3. '):' → logprob: -3.116121530532837
    4. 't' → logprob: -3.241121530532837
    5. 'tion' → logprob: -3.616121530532837
    6. 'en' → logprob: -4.741121768951416
    7. 'er' → logprob: -5.616121768951416
    8. '):
' → logprob: -5.741121768951416
    9. '):

' → logprob: -5.866121768951416
    10. '()):
' → logprob: -6.366121768951416

Token 21: ' min' (ID: 1349)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.050660911947488785
    2. 'y' → logprob: -3.5506608486175537
    3. ' coin' → logprob: -4.800661087036133
    4. ' n' → logprob: -5.425661087036133
    5. ' ' → logprob: -5.425661087036133
    6. ' c' → logprob: -7.425661087036133
    7. ' coins' → logprob: -8.050661087036133
    8. 'n' → logprob: -8.300661087036133
    9. ' value' → logprob: -8.675661087036133
    10. ' a' → logprob: -8.738161087036133

Token 22: '_op' (ID: 20111)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.4232546091079712
    2. '_' → logprob: -1.5482546091079712
    3. '_val' → logprob: -1.5482546091079712
    4. '_coin' → logprob: -1.7982546091079712
    5. '):' → logprob: -3.0482544898986816
    6. 'ut' → logprob: -3.5482544898986816
    7. '_num' → logprob: -3.9232544898986816
    8. '_co' → logprob: -5.048254489898682
    9. '_cnt' → logprob: -5.048254489898682
    10. 's' → logprob: -5.048254489898682

Token 23: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.481616735458374
    2. ')' → logprob: -1.231616735458374
    3. '):' → logprob: -2.606616735458374
    4. 'er' → logprob: -4.731616973876953
    5. '=' → logprob: -6.231616973876953
    6. '):
' → logprob: -7.106616973876953
    7. 'a' → logprob: -7.106616973876953
    8. ''):' → logprob: -7.481616973876953
    9. 'o' → logprob: -7.856616973876953
    10. '()' → logprob: -8.106616973876953

Token 24: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4633146822452545
    2. '(' → logprob: -1.3383146524429321
    3. '   ' → logprob: -2.9633147716522217
    4. '):' → logprob: -3.5883147716522217
    5. '[' → logprob: -4.213314533233643
    6. ' :' → logprob: -4.963314533233643
    7. '():' → logprob: -6.463314533233643
    8. ',' → logprob: -7.088314533233643
    9. '    ' → logprob: -7.338314533233643
    10. ')' → logprob: -7.463314533233643

Token 25: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13676069676876068
    2. ':' → logprob: -2.636760711669922
    3. ' ' → logprob: -3.636760711669922
    4. '    ' → logprob: -4.011760711669922
    5. ')' → logprob: -5.636760711669922
    6. ' :' → logprob: -6.136760711669922
    7. '  ' → logprob: -6.886760711669922
    8. '(' → logprob: -6.886760711669922
    9. ' 
' → logprob: -7.636760711669922
    10. '       ' → logprob: -7.886760711669922

Token 26: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.016647007316350937
    2. ' op' → logprob: -4.641646862030029
    3. 'x' → logprob: -5.141646862030029
    4. ' ' → logprob: -7.516646862030029
    5. ' not' → logprob: -8.016647338867188
    6. ' n' → logprob: -10.016647338867188
    7. 'op' → logprob: -10.766647338867188
    8. ' (' → logprob: -10.891647338867188
    9. ' isinstance' → logprob: -11.266647338867188
    10. ' ' → logprob: -11.391647338867188

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.052786488085985184
    2. ' <=' → logprob: -3.8027865886688232
    3. '==' → logprob: -3.9277865886688232
    4. ' <' → logprob: -5.177786350250244
    5. ' >=' → logprob: -6.427786350250244
    6. ' ' → logprob: -7.177786350250244
    7. ' >' → logprob: -7.427786350250244
    8. '<=' → logprob: -8.052786827087402
    9. ' %' → logprob: -8.927786827087402
    10. '<' → logprob: -9.677786827087402

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17984949052333832
    2. '0' → logprob: -1.8048495054244995
    3. '1' → logprob: -9.429849624633789
    4. '   ' → logprob: -11.554849624633789
    5. '  ' → logprob: -12.242349624633789
    6. ' ' → logprob: -13.554849624633789
    7. 'n' → logprob: -13.867349624633789
    8. '    ' → logprob: -13.929849624633789
    9. ' None' → logprob: -14.304849624633789
    10. ' n' → logprob: -14.554849624633789

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.057957589626312256
    2. ' ' → logprob: -2.932957649230957
    3. '1' → logprob: -5.807957649230957
    4. '   ' → logprob: -10.432957649230957
    5. 'n' → logprob: -11.807957649230957
    6. '  ' → logprob: -12.370457649230957
    7. '2' → logprob: -12.682957649230957
    8. '100' → logprob: -12.745457649230957
    9. '    ' → logprob: -12.870457649230957
    10. ' n' → logprob: -13.557957649230957

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009323021513409913
    2. ':return' → logprob: -7.625932216644287
    3. ' :' → logprob: -8.250932693481445
    4. ' and' → logprob: -9.750932693481445
    5. ' or' → logprob: -10.000932693481445
    6. ':
' → logprob: -10.125932693481445
    7. '   ' → logprob: -10.750932693481445
    8. '):' → logprob: -12.125932693481445
    9. ',' → logprob: -12.375932693481445
    10. '       ' → logprob: -13.125932693481445

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44287633895874023
    2. '    ' → logprob: -2.4428763389587402
    3. '   ' → logprob: -2.4428763389587402
    4. ':' → logprob: -2.9428763389587402
    5. ' ' → logprob: -3.1928763389587402
    6. '<|end|>' → logprob: -3.3178763389587402
    7. ':return' → logprob: -4.31787633895874
    8. '\n' → logprob: -4.44287633895874
    9. ' return' → logprob: -4.81787633895874
    10. ' 
' → logprob: -5.06787633895874

Token 32: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6131512522697449
    2. '       ' → logprob: -0.8631512522697449
    3. '   ' → logprob: -3.9881513118743896
    4. 'return' (adapté à ' return') → logprob: -4.1131510734558105
    5. '    ' → logprob: -6.8631510734558105
    6. ' ' → logprob: -8.363151550292969
    7. ':return' → logprob: -8.988151550292969
    8. '	return' → logprob: -9.738151550292969
    9. ' ' → logprob: -10.613151550292969
    10. '     ' → logprob: -10.613151550292969

Token 33: ' ' (ID: 220)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.021976638585329056
    2. 'min' → logprob: -4.271976470947266
    3. ' ' → logprob: -5.021976470947266
    4. '0' → logprob: -7.146976470947266
    5. ' op' → logprob: -8.271976470947266
    6. ' None' → logprob: -10.396976470947266
    7. ' float' → logprob: -11.021976470947266
    8. 'op' → logprob: -11.146976470947266
    9. ' True' → logprob: -11.271976470947266
    10. ' max' → logprob: -11.396976470947266

Token 34: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11429272592067719
    2. '0' → logprob: -2.614292621612549
    3. 'op' → logprob: -3.364292621612549
    4. '(' → logprob: -9.864293098449707
    5. ' min' → logprob: -9.989293098449707
    6. '(min' → logprob: -10.114293098449707
    7. '1' → logprob: -11.114293098449707
    8. ' ' → logprob: -11.489293098449707
    9. '   ' → logprob: -11.614293098449707
    10. 'True' → logprob: -11.864293098449707

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3868240714073181
    2. '<|end|>' → logprob: -1.261824131011963
    3. '<|end|>' → logprob: -4.136824131011963
    4. '
' → logprob: -4.886824131011963
    5. ')' → logprob: -6.011824131011963
    6. '    
' → logprob: -6.136824131011963
    7. ' ' → logprob: -6.261824131011963
    8. '	elif' → logprob: -6.636824131011963
    9. '  ' → logprob: -6.761824131011963
    10. ',' → logprob: -6.886824131011963

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014300551265478134
    2. '<|end|>' → logprob: -4.639300346374512
    3. '    
' → logprob: -6.264300346374512
    4. ' ' → logprob: -7.514300346374512
    5. '    ' → logprob: -7.889300346374512
    6. ')' → logprob: -8.139300346374512
    7. '\n' → logprob: -8.264300346374512
    8. '<|end|>' → logprob: -8.514300346374512
    9. '  ' → logprob: -9.014300346374512
    10. '
' → logprob: -9.139300346374512

Token 37: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11912994086742401
    2. ' ' → logprob: -3.6191298961639404
    3. ' if' → logprob: -3.6191298961639404
    4. ' elif' → logprob: -4.2441301345825195
    5. 'elif' → logprob: -4.4941301345825195
    6. '    ' → logprob: -5.1191301345825195
    7. 'if' (adapté à ' if') → logprob: -5.1191301345825195
    8. ',' → logprob: -5.4941301345825195
    9. '  ' → logprob: -5.7441301345825195
    10. '
' → logprob: -6.1191301345825195

Token 38: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.36256977915763855
    2. ' op' → logprob: -1.362569808959961
    3. 'x' → logprob: -3.487569808959961
    4. ' min' → logprob: -4.237569808959961
    5. 'op' → logprob: -6.362569808959961
    6. 'min' → logprob: -7.237569808959961
    7. ' n' → logprob: -7.862569808959961
    8. ' ' → logprob: -8.987569808959961
    9. 'n' → logprob: -9.862569808959961
    10. ' not' → logprob: -11.112569808959961

Token 39: ' in' (ID: 306)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10063577443361282
    2. ' ==' → logprob: -3.1006357669830322
    3. '<' → logprob: -3.3506357669830322
    4. ' ' → logprob: -5.475636005401611
    5. ' in' → logprob: -5.475636005401611
    6. ' >' → logprob: -5.850636005401611
    7. ' >=' → logprob: -6.850636005401611
    8. '==' → logprob: -6.975636005401611
    9. '%' → logprob: -7.225636005401611
    10. ' %' → logprob: -7.350636005401611

Token 40: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.006846326403319836
    2. ' op' → logprob: -5.3818464279174805
    3. 'min' → logprob: -6.1318464279174805
    4. ' coin' → logprob: -11.00684642791748
    5. 'op' → logprob: -11.75684642791748
    6. '	min' → logprob: -12.38184642791748
    7. '[min' → logprob: -12.75684642791748
    8. ' ' → logprob: -12.75684642791748
    9. ')' → logprob: -13.25684642791748
    10. ' dp' → logprob: -13.31934642791748

Token 41: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -1.259079363080673e-05
    2. '_' → logprob: -11.875012397766113
    3. '_ops' → logprob: -12.250012397766113
    4. 'op' → logprob: -15.750012397766113
    5. '_opcode' → logprob: -16.00001335144043
    6. '_OP' → logprob: -16.25001335144043
    7. '_opt' → logprob: -16.37501335144043
    8. '_oc' → logprob: -17.00001335144043
    9. ' _' → logprob: -17.25001335144043
    10. '_o' → logprob: -17.37501335144043

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005913979839533567
    2. ' and' → logprob: -7.875591278076172
    3. ' :' → logprob: -9.625591278076172
    4. '.keys' → logprob: -9.750591278076172
    5. '):' → logprob: -10.500591278076172
    6. 'and' → logprob: -11.000591278076172
    7. ':return' → logprob: -11.000591278076172
    8. '<|end|>' → logprob: -11.875591278076172
    9. '   ' → logprob: -12.250591278076172
    10. '>:' → logprob: -12.750591278076172

Token 43: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0066175502724945545
    2. ' and' → logprob: -5.256617546081543
    3. '       ' → logprob: -7.131617546081543
    4. '   ' → logprob: -8.631617546081543
    5. ' :' → logprob: -9.381617546081543
    6. '):' → logprob: -9.381617546081543
    7. ':
' → logprob: -9.381617546081543
    8. ':return' → logprob: -9.506617546081543
    9. 'and' → logprob: -10.631617546081543
    10. '    ' → logprob: -11.131617546081543

Token 44: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29792147874832153
    2. ':' → logprob: -1.4229214191436768
    3. ' return' → logprob: -5.297921657562256
    4. ':return' → logprob: -5.797921657562256
    5. ' :' → logprob: -6.047921657562256
    6. '   ' → logprob: -6.047921657562256
    7. '    ' → logprob: -6.172921657562256
    8. 'return' (adapté à ' return') → logprob: -7.672921657562256
    9. ' ' → logprob: -7.922921657562256
    10. '     ' → logprob: -8.797921180725098

Token 45: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.0008061755215749145
    2. 'min' → logprob: -7.1258063316345215
    3. '	min' → logprob: -14.500805854797363
    4. '(min' → logprob: -15.375805854797363
    5. '[min' → logprob: -15.375805854797363
    6. ' max' → logprob: -15.750805854797363
    7. '```' → logprob: -16.12580680847168
    8. '_min' → logprob: -16.25080680847168
    9. ' ' → logprob: -16.87580680847168
    10. '1' → logprob: -17.25080680847168

Token 46: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -4.320199877838604e-07
    2. 'op' → logprob: -15.625
    3. '_ops' → logprob: -16.375
    4. '_' → logprob: -16.5
    5. '_opt' → logprob: -17.5
    6. '_oper' → logprob: -17.625
    7. '_oc' → logprob: -17.875
    8. '_opcode' → logprob: -18.125
    9. '_operation' → logprob: -19.0
    10. '(op' → logprob: -19.125

Token 47: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.016064399853348732
    2. '[' → logprob: -4.141064167022705
    3. '[
' → logprob: -11.391064643859863
    4. ' [' → logprob: -11.891064643859863
    5. '```' → logprob: -12.766064643859863
    6. '   ' → logprob: -13.016064643859863
    7. '\[' → logprob: -13.766064643859863
    8. '[]' → logprob: -14.016064643859863
    9. 'x' → logprob: -14.016064643859863
    10. '[:]' → logprob: -14.141064643859863

Token 48: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011041370453312993
    2. '])' → logprob: -7.376104354858398
    3. ')' → logprob: -8.001104354858398
    4. ']
' → logprob: -9.751104354858398
    5. ' ]' → logprob: -9.751104354858398
    6. ']+' → logprob: -11.626104354858398
    7. ')]' → logprob: -11.751104354858398
    8. '   ' → logprob: -12.001104354858398
    9. '])
' → logprob: -14.626104354858398
    10. ']

' → logprob: -14.751104354858398

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008092868141829967
    2. '    
' → logprob: -5.133092880249023
    3. '
' → logprob: -7.133092880249023
    4. ' 
' → logprob: -8.633092880249023
    5. '```' → logprob: -9.008092880249023
    6. '\' → logprob: -9.133092880249023
    7. '   
' → logprob: -9.258092880249023
    8. '\n' → logprob: -9.508092880249023
    9. '.' → logprob: -9.633092880249023
    10. ')' → logprob: -9.758092880249023

Token 50: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.9714159965515137
    2. ' res' → logprob: -1.2214159965515137
    3. '   ' → logprob: -2.4714159965515137
    4. 'res' → logprob: -2.8464159965515137
    5. 'min' (adapté à ' min') → logprob: -2.9714159965515137
    6. ' ans' → logprob: -3.2214159965515137
    7. ' result' → logprob: -3.3464159965515137
    8. ' for' → logprob: -4.221415996551514
    9. 'result' → logprob: -4.221415996551514
    10. ' op' → logprob: -5.596415996551514

Token 51: '_count' (ID: 7536)
  Prédit: '_op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.34591957926750183
    2. '_' → logprob: -1.7209196090698242
    3. '_ops' → logprob: -2.345919609069824
    4. '_val' → logprob: -4.595919609069824
    5. '_value' → logprob: -5.845919609069824
    6. '_count' → logprob: -6.470919609069824
    7. '_operations' → logprob: -7.095919609069824
    8. '_cost' → logprob: -7.470919609069824
    9. '_operation' → logprob: -7.470919609069824
    10. 'op' → logprob: -8.470919609069824

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01604105532169342
    2. '=' → logprob: -4.141041278839111
    3. ',' → logprob: -12.516040802001953
    4. '  ' → logprob: -14.516040802001953
    5. '   ' → logprob: -14.516040802001953
    6. ' ' → logprob: -14.641040802001953
    7. '_' → logprob: -15.141040802001953
    8. 's' → logprob: -15.266040802001953
    9. ' =
' → logprob: -15.766040802001953
    10. '```' → logprob: -15.766040802001953

Token 53: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2845745086669922
    2. ' float' → logprob: -1.4095745086669922
    3. '10' → logprob: -6.409574508666992
    4. '100' → logprob: -8.159574508666992
    5. 'x' → logprob: -8.284574508666992
    6. ' ' → logprob: -8.409574508666992
    7. ' x' → logprob: -8.659574508666992
    8. ' min' → logprob: -8.909574508666992
    9. '   ' → logprob: -8.909574508666992
    10. ' None' → logprob: -9.034574508666992

Token 54: '100' (ID: 1353)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.002536782529205084
    2. '10' → logprob: -6.252536773681641
    3. '100' → logprob: -8.12753677368164
    4. ' float' → logprob: -9.12753677368164
    5. 'x' → logprob: -9.62753677368164
    6. '1' → logprob: -9.75253677368164
    7. '999' → logprob: -10.75253677368164
    8. 'min' → logprob: -11.12753677368164
    9. 'int' → logprob: -11.37753677368164
    10. 'None' → logprob: -11.62753677368164

Token 55: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.09781228005886078
    2. '00' → logprob: -2.4728121757507324
    3. '0' → logprob: -4.847812175750732
    4. '001' → logprob: -7.222812175750732
    5. '_' → logprob: -9.34781265258789
    6. ' ' → logprob: -9.47281265258789
    7. '01' → logprob: -9.97281265258789
    8. '1' → logprob: -11.22281265258789
    9. '```' → logprob: -12.47281265258789
    10. '  
' → logprob: -12.59781265258789

Token 56: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009198254905641079
    2. '000' → logprob: -5.009198188781738
    3. '00' → logprob: -6.009198188781738
    4. ' ' → logprob: -11.009198188781738
    5. '<|end|>' → logprob: -12.634198188781738
    6. '  ' → logprob: -13.634198188781738
    7. '
' → logprob: -14.009198188781738
    8. '1' → logprob: -14.884198188781738
    9. '<|end|>' → logprob: -15.384198188781738
    10. ' ' → logprob: -16.009199142456055

Token 57: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6591684818267822
    2. ' for' → logprob: -0.9091684818267822
    3. ' ' → logprob: -2.7841684818267822
    4. '   ' → logprob: -4.659168243408203
    5. '<|end|>' → logprob: -5.534168243408203
    6. '    ' → logprob: -6.784168243408203
    7. ':' → logprob: -7.409168243408203
    8. '  ' → logprob: -7.534168243408203
    9. 'coins' → logprob: -7.784168243408203
    10. ' coin' → logprob: -7.784168243408203

Token 60: ' o' (ID: 293)
  Prédit: ' coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coin' → logprob: -0.5016395449638367
    2. ' i' → logprob: -2.1266396045684814
    3. ' op' → logprob: -2.3766396045684814
    4. 'coin' → logprob: -2.5016396045684814
    5. 'i' → logprob: -3.0016396045684814
    6. ' c' → logprob: -3.3766396045684814
    7. 'c' → logprob: -4.626639366149902
    8. 'op' → logprob: -6.376639366149902
    9. ' d' → logprob: -7.501639366149902
    10. ' ' → logprob: -7.626639366149902

Token 61: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5936327576637268
    2. ' in' → logprob: -0.8436327576637268
    3. 'in' → logprob: -4.218632698059082
    4. 's' → logprob: -6.718632698059082
    5. 'n' → logprob: -7.593632698059082
    6. 'pen' → logprob: -8.218632698059082
    7. 'per' → logprob: -8.718632698059082
    8. ',' → logprob: -8.968632698059082
    9. 'perator' → logprob: -9.093632698059082
    10. 'pt' → logprob: -9.468632698059082

Token 62: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.01281781867146492
    2. ' op' → logprob: -4.387817859649658
    3. '[' → logprob: -8.8878173828125
    4. 'range' → logprob: -9.7628173828125
    5. ' range' → logprob: -10.1378173828125
    6. '	op' → logprob: -10.3878173828125
    7. 'opf' → logprob: -10.8878173828125
    8. 'ops' → logprob: -12.2628173828125
    9. '   ' → logprob: -12.2628173828125
    10. ' [' → logprob: -12.6378173828125

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.68153518543113e-05
    2. 's' → logprob: -10.625057220458984
    3. ':
' → logprob: -10.625057220458984
    4. ' :' → logprob: -12.875057220458984
    5. '):' → logprob: -13.000057220458984
    6. '+:' → logprob: -13.875057220458984
    7. ':**' → logprob: -14.125057220458984
    8. '>:' → logprob: -15.125057220458984
    9. 'es' → logprob: -15.500057220458984
    10. ',' → logprob: -15.750057220458984

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18330681324005127
    2. ':' → logprob: -1.8083068132400513
    3. ' if' → logprob: -7.058306694030762
    4. '   ' → logprob: -7.058306694030762
    5. '    ' → logprob: -7.433306694030762
    6. '<|end|>' → logprob: -7.933306694030762
    7. ',' → logprob: -8.683306694030762
    8. ':
' → logprob: -9.058306694030762
    9. '     ' → logprob: -9.558306694030762
    10. ' :' → logprob: -9.558306694030762

Token 65: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.015908019617199898
    2. '<|end|>' → logprob: -4.890908241271973
    3. '       ' → logprob: -5.140908241271973
    4. 'if' (adapté à ' if') → logprob: -7.390908241271973
    5. ' ' → logprob: -7.390908241271973
    6. ' new' → logprob: -7.515908241271973
    7. '    ' → logprob: -8.015908241271973
    8. ' s' → logprob: -9.765908241271973
    9. '...' → logprob: -10.015908241271973
    10. ' next' → logprob: -10.015908241271973

Token 66: ' x' (ID: 1215)
  Prédit: ' o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.7081592679023743
    2. ' x' → logprob: -1.5831592082977295
    3. 'x' → logprob: -1.8331592082977295
    4. 'o' → logprob: -1.9581592082977295
    5. ' ' → logprob: -7.083159446716309
    6. '	o' → logprob: -9.208159446716309
    7. '  ' → logprob: -10.083159446716309
    8. '   ' → logprob: -10.083159446716309
    9. '	x' → logprob: -11.145659446716309
    10. '(o' → logprob: -11.395659446716309

Token 67: ' >=' (ID: 5064)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1673170328140259
    2. ' -' → logprob: -1.1673170328140259
    3. '>=' → logprob: -1.6673170328140259
    4. ' >=' → logprob: -1.6673170328140259
    5. ' ' → logprob: -9.667317390441895
    6. '<|end|>' → logprob: -12.167317390441895
    7. ']>=' → logprob: -12.292317390441895
    8. ')>=' → logprob: -12.417317390441895
    9. '>' → logprob: -13.417317390441895
    10. '<' → logprob: -13.667317390441895

Token 68: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.6931629776954651
    2. ' o' → logprob: -0.6931629776954651
    3. ' ' → logprob: -11.81816291809082
    4. '	o' → logprob: -12.06816291809082
    5. '   ' → logprob: -14.56816291809082
    6. '    ' → logprob: -15.19316291809082
    7. '<|end|>' → logprob: -15.31816291809082
    8. '  ' → logprob: -15.44316291809082
    9. ''o' → logprob: -15.69316291809082
    10. '0' → logprob: -15.69316291809082

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006101920269429684
    2. ':
' → logprob: -5.131102085113525
    3. ' :' → logprob: -8.881101608276367
    4. ' and' → logprob: -10.756101608276367
    5. ' :
' → logprob: -12.381101608276367
    6. '):' → logprob: -12.756101608276367
    7. '       ' → logprob: -13.506101608276367
    8. ':
' → logprob: -13.881101608276367
    9. ':

' → logprob: -14.131101608276367
    10. ',' → logprob: -14.506101608276367

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5098608136177063
    2. ':' → logprob: -1.0098607540130615
    3. '       ' → logprob: -3.8848607540130615
    4. ':
' → logprob: -5.384860992431641
    5. '<|end|>' → logprob: -5.759860992431641
    6. ' and' → logprob: -6.259860992431641
    7. '<|end|>' → logprob: -6.384860992431641
    8. ' :' → logprob: -7.259860992431641
    9. ',' → logprob: -7.384860992431641
    10. '               ' → logprob: -8.25986099243164

Token 71: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.47897812724113464
    2. ' count' → logprob: -1.103978157043457
    3. '           ' → logprob: -4.728978157043457
    4. ' res' → logprob: -5.228978157043457
    5. 'res' → logprob: -5.478978157043457
    6. ' cnt' → logprob: -5.603978157043457
    7. 'cnt' → logprob: -5.728978157043457
    8. ' c' → logprob: -5.728978157043457
    9. ' min' → logprob: -6.103978157043457
    10. 'c' → logprob: -6.103978157043457

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1292697638273239
    2. '=' → logprob: -2.37926983833313
    3. '_' → logprob: -3.62926983833313
    4. 's' → logprob: -7.129269599914551
    5. '_coin' → logprob: -8.00426959991455
    6. 'ed' → logprob: -8.12926959991455
    7. '_count' → logprob: -8.62926959991455
    8. '_=' → logprob: -8.75426959991455
    9. '   ' → logprob: -9.12926959991455
    10. '_result' → logprob: -10.50426959991455

Token 73: ' ' (ID: 220)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.22679686546325684
    2. 'count' → logprob: -1.6017968654632568
    3. '1' → logprob: -6.726797103881836
    4. ' ' → logprob: -8.726797103881836
    5. '   ' → logprob: -11.476797103881836
    6. '	count' → logprob: -12.726797103881836
    7. ' min' → logprob: -12.726797103881836
    8. '(count' → logprob: -13.351797103881836
    9. '=count' → logprob: -14.101797103881836
    10. 'min' → logprob: -14.226797103881836

Token 74: '1' (ID: 16)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0024239332415163517
    2. '1' → logprob: -6.2524237632751465
    3. ' count' → logprob: -7.6274237632751465
    4. '   ' → logprob: -12.502424240112305
    5. ' ' → logprob: -12.877424240112305
    6. 'min' → logprob: -14.252424240112305
    7. '(count' → logprob: -14.627424240112305
    8. '	count' → logprob: -15.127424240112305
    9. '  ' → logprob: -15.877424240112305
    10. 'coin' → logprob: -15.877424240112305

Token 75: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06197160854935646
    2. '+' → logprob: -2.811971664428711
    3. ' ' → logprob: -13.686971664428711
    4. ' plus' → logprob: -13.811971664428711
    5. ' +
' → logprob: -14.186971664428711
    6. '<|end|>' → logprob: -14.686971664428711
    7. ' ' → logprob: -15.936971664428711
    8. '＋' → logprob: -16.18697166442871
    9. '<|end|>' → logprob: -16.81197166442871
    10. '    ' → logprob: -16.93697166442871

Token 76: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0031777136027812958
    2. ' count' → logprob: -5.753177642822266
    3. '(count' → logprob: -17.378177642822266
    4. '[count' → logprob: -18.128177642822266
    5. '<count' → logprob: -19.128177642822266
    6. '	count' → logprob: -19.253177642822266
    7. '$count' → logprob: -19.878177642822266
    8. ' ' → logprob: -20.003177642822266
    9. 'counts' → logprob: -20.378177642822266
    10. '.count' → logprob: -20.378177642822266

Token 77: '_coin' (ID: 187802)
  Prédit: '_coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coin' → logprob: -8.41866585687967e-06
    2. '_' → logprob: -11.875008583068848
    3. 'coin' → logprob: -13.750008583068848
    4. '_co' → logprob: -15.125008583068848
    5. '```' → logprob: -17.50000762939453
    6. ' coin' → logprob: -18.00000762939453
    7. 'Coin' → logprob: -18.25000762939453
    8. '(x' → logprob: -19.50000762939453
    9. '_token' → logprob: -19.75000762939453
    10. '(' → logprob: -19.87500762939453

Token 78: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006738931406289339
    2. '(' → logprob: -5.006739139556885
    3. '<|end|>' → logprob: -11.256738662719727
    4. '(
' → logprob: -12.006738662719727
    5. '(n' → logprob: -13.256738662719727
    6. '(xs' → logprob: -14.631738662719727
    7. ' (' → logprob: -14.756738662719727
    8. '(nx' → logprob: -14.881738662719727
    9. '(o' → logprob: -15.256738662719727
    10. '((' → logprob: -15.756738662719727

Token 79: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04847743734717369
    2. '-' → logprob: -3.5484774112701416
    3. '-o' → logprob: -4.673477649688721
    4. '-x' → logprob: -5.048477649688721
    5. '(x' → logprob: -6.048477649688721
    6. '(' → logprob: -8.298477172851562
    7. '(o' → logprob: -9.548477172851562
    8. ' (' → logprob: -9.548477172851562
    9. ' ' → logprob: -11.673477172851562
    10. 'x' → logprob: -12.173477172851562

Token 80: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.10024119168519974
    2. ' o' → logprob: -2.350241184234619
    3. '	o' → logprob: -10.475241661071777
    4. '<|end|>' → logprob: -12.975241661071777
    5. '   ' → logprob: -13.475241661071777
    6. ' ' → logprob: -13.975241661071777
    7. '    ' → logprob: -14.350241661071777
    8. '       ' → logprob: -15.225241661071777
    9. ''o' → logprob: -15.600241661071777
    10. '  ' → logprob: -15.975241661071777

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.546478935983032e-05
    2. ' ,' → logprob: -11.000025749206543
    3. ')' → logprob: -12.000025749206543
    4. '   ' → logprob: -13.250025749206543
    5. ',
' → logprob: -14.875025749206543
    6. '       ' → logprob: -16.000024795532227
    7. ',o' → logprob: -16.625024795532227
    8. '    ' → logprob: -17.250024795532227
    9. ' ' → logprob: -17.500024795532227
    10. ',opt' → logprob: -17.625024795532227

Token 82: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.0028115289751440287
    2. 'op' → logprob: -5.877811431884766
    3. '    ' → logprob: -13.127811431884766
    4. '	op' → logprob: -13.377811431884766
    5. '(op' → logprob: -14.252811431884766
    6. '<|end|>' → logprob: -14.877811431884766
    7. ',' → logprob: -15.127811431884766
    8. '        ' → logprob: -15.377811431884766
    9. '```' → logprob: -15.377811431884766
    10. '_op' → logprob: -15.627811431884766

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ',min' → logprob: -13.375001907348633
    3. ' ,' → logprob: -15.125001907348633
    4. ')' → logprob: -17.500001907348633
    5. '),' → logprob: -17.625001907348633
    6. 'min' → logprob: -17.875001907348633
    7. 's' → logprob: -18.500001907348633
    8. ',count' → logprob: -19.000001907348633
    9. ',

' → logprob: -19.125001907348633
    10. '‌,' → logprob: -19.375001907348633

Token 84: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.38687533140182495
    2. 'min' → logprob: -1.1368753910064697
    3. '	min' → logprob: -13.88687515258789
    4. ' ' → logprob: -14.13687515258789
    5. '[min' → logprob: -14.13687515258789
    6. '    ' → logprob: -14.26187515258789
    7. '   ' → logprob: -15.13687515258789
    8. ')' → logprob: -15.38687515258789
    9. ' max' → logprob: -15.88687515258789
    10. 'max' → logprob: -16.13687515258789

Token 85: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -7.107425062713446e-06
    2. 'op' → logprob: -11.875006675720215
    3. '	op' → logprob: -17.00000762939453
    4. ' op' → logprob: -17.62500762939453
    5. 'Op' → logprob: -18.25000762939453
    6. ')' → logprob: -18.25000762939453
    7. '_opt' → logprob: -18.37500762939453
    8. '_opcode' → logprob: -18.37500762939453
    9. '_ops' → logprob: -18.62500762939453
    10. '-op' → logprob: -18.87500762939453

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00983802042901516
    2. ')
' → logprob: -4.634838104248047
    3. ')
' → logprob: -9.634838104248047
    4. '           ' → logprob: -11.759838104248047
    5. '       ' → logprob: -12.134838104248047
    6. ' )' → logprob: -13.759838104248047
    7. ')

' → logprob: -13.884838104248047
    8. '   ' → logprob: -14.009838104248047
    9. '               ' → logprob: -15.509838104248047
    10. ' ' → logprob: -16.509838104248047

Token 87: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5132896900177002
    2. '           ' → logprob: -1.0132896900177002
    3. '       ' → logprob: -4.513289451599121
    4. '<|end|>' → logprob: -4.638289451599121
    5. '
' → logprob: -5.013289451599121
    6. '\n' → logprob: -5.763289451599121
    7. '            
' → logprob: -5.888289451599121
    8. ' 
' → logprob: -7.138289451599121
    9. '        
' → logprob: -7.263289451599121
    10. '<|end|>' → logprob: -7.263289451599121

Token 88: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09784503281116486
    2. 'if' (adapté à ' if') → logprob: -2.5978450775146484
    3. '           ' → logprob: -4.097845077514648
    4. '       ' → logprob: -6.722845077514648
    5. '
' → logprob: -7.722845077514648
    6. '   ' → logprob: -8.097845077514648
    7. '               ' → logprob: -8.972845077514648
    8. ' ' → logprob: -10.972845077514648
    9. '    ' → logprob: -11.347845077514648
    10. '<|end|>' → logprob: -11.597845077514648

Token 89: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.00026646157493814826
    2. 'count' → logprob: -8.250266075134277
    3. '	count' → logprob: -13.000266075134277
    4. '(count' → logprob: -13.250266075134277
    5. ' ' → logprob: -14.125266075134277
    6. '<count' → logprob: -15.625266075134277
    7. '[count' → logprob: -16.500267028808594
    8. '    ' → logprob: -17.000267028808594
    9. '            ' → logprob: -17.375267028808594
    10. '.count' → logprob: -17.625267028808594

Token 90: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0015871046343818307
    2. '<' → logprob: -6.5015869140625
    3. '<|end|>' → logprob: -9.7515869140625
    4. ' ' → logprob: -10.6265869140625
    5. '<|end|>' → logprob: -14.2515869140625
    6. ' <",' → logprob: -14.6265869140625
    7. '  ' → logprob: -15.7515869140625
    8. ' \<' → logprob: -16.1265869140625
    9. ' less' → logprob: -16.3765869140625
    10. '<int' → logprob: -16.5015869140625

Token 91: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.12692958116531372
    2. 'min' → logprob: -2.126929521560669
    3. '	min' → logprob: -14.25192928314209
    4. ' ' → logprob: -15.00192928314209
    5. '=min' → logprob: -15.50192928314209
    6. '_min' → logprob: -16.501930236816406
    7. ' minlength' → logprob: -16.751930236816406
    8. '(min' → logprob: -16.876930236816406
    9. '.min' → logprob: -17.501930236816406
    10. '   ' → logprob: -17.876930236816406

Token 92: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.2729995988775045e-06
    2. 'ount' → logprob: -13.250006675720215
    3. 'count' → logprob: -13.250006675720215
    4. '_' → logprob: -14.000006675720215
    5. '_c' → logprob: -14.250006675720215
    6. '_co' → logprob: -14.625006675720215
    7. '_op' → logprob: -15.250006675720215
    8. ' _' → logprob: -16.2500057220459
    9. '_counts' → logprob: -16.6250057220459
    10. '<count' → logprob: -16.7500057220459

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008163695223629475
    2. ':
' → logprob: -4.883163928985596
    3. '               ' → logprob: -7.883163928985596
    4. '           ' → logprob: -9.133163452148438
    5. ' :' → logprob: -10.133163452148438
    6. '):' → logprob: -11.383163452148438
    7. ' :
' → logprob: -12.508163452148438
    8. '):
' → logprob: -12.633163452148438
    9. '       ' → logprob: -12.758163452148438
    10. ':

' → logprob: -12.883163452148438

Token 94: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004631265066564083
    2. ' min' → logprob: -5.754631042480469
    3. '           ' → logprob: -7.504631042480469
    4. 'min' → logprob: -8.379631042480469
    5. '```' → logprob: -9.129631042480469
    6. '              ' → logprob: -9.254631042480469
    7. ':' → logprob: -9.629631042480469
    8. '                
' → logprob: -9.754631042480469
    9. '(min' → logprob: -9.754631042480469
    10. '_min' → logprob: -10.379631042480469

Token 95: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.10244766622781754
    2. 'min' (adapté à ' min') → logprob: -2.352447748184204
    3. '               ' → logprob: -6.227447509765625
    4. '                   ' → logprob: -8.352447509765625
    5. '   ' → logprob: -11.477447509765625
    6. '	min' → logprob: -11.977447509765625
    7. '_min' → logprob: -12.227447509765625
    8. '           ' → logprob: -13.102447509765625
    9. '(min' → logprob: -14.102447509765625
    10. ' ' → logprob: -14.227447509765625

Token 96: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.610702363715973e-06
    2. '_' → logprob: -12.750009536743164
    3. '_c' → logprob: -13.750009536743164
    4. '_coin' → logprob: -13.750009536743164
    5. '_op' → logprob: -13.875009536743164
    6. ' _' → logprob: -13.875009536743164
    7. '_min' → logprob: -14.375009536743164
    8. '_co' → logprob: -14.875009536743164
    9. '_counts' → logprob: -15.250009536743164
    10. '_code' → logprob: -15.375009536743164

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042984902858734
    2. '=' → logprob: -3.2880430221557617
    3. '=count' → logprob: -14.038043022155762
    4. '               ' → logprob: -15.538043022155762
    5. '                   ' → logprob: -15.788043022155762
    6. '                ' → logprob: -16.038042068481445
    7. '           ' → logprob: -16.163042068481445
    8. '    ' → logprob: -16.538042068481445
    9. ' ' → logprob: -16.538042068481445
    10. '   ' → logprob: -16.788042068481445

Token 98: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2519310414791107
    2. ' count' → logprob: -1.501931071281433
    3. '	count' → logprob: -14.751931190490723
    4. '(count' → logprob: -15.001931190490723
    5. '[count' → logprob: -15.126931190490723
    6. '                ' → logprob: -15.501931190490723
    7. '_count' → logprob: -15.876931190490723
    8. '<count' → logprob: -15.876931190490723
    9. '$count' → logprob: -16.001930236816406
    10. '=count' → logprob: -16.126930236816406

Token 99: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021978624165058136
    2. '
' → logprob: -4.271978855133057
    3. '    
' → logprob: -4.896978855133057
    4. ' min' → logprob: -9.021978378295898
    5. '       ' → logprob: -10.146978378295898
    6. 'min' → logprob: -10.271978378295898
    7. '               ' → logprob: -10.896978378295898
    8. '                
' → logprob: -11.396978378295898
    9. '  
' → logprob: -11.396978378295898
    10. '   
' → logprob: -11.646978378295898

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026264708139933646
    2. '
' → logprob: -9.375262260437012
    3. '    
' → logprob: -9.375262260437012
    4. ' min' → logprob: -10.000262260437012
    5. '       ' → logprob: -10.875262260437012
    6. 'min' → logprob: -11.750262260437012
    7. '```' → logprob: -12.125262260437012
    8. ' return' → logprob: -12.875262260437012
    9. '               ' → logprob: -13.000262260437012
    10. '	min' → logprob: -13.125262260437012

Token 101: ' min' (ID: 1349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14355763792991638
    2. ' min' → logprob: -2.143557548522949
    3. 'min' (adapté à ' min') → logprob: -4.143557548522949
    4. '	min' → logprob: -8.51855754852295
    5. '       ' → logprob: -9.26855754852295
    6. '
' → logprob: -9.76855754852295
    7. ' ' → logprob: -9.89355754852295
    8. '```' → logprob: -9.89355754852295
    9. '(min' → logprob: -10.01855754852295
    10. ' return' → logprob: -10.14355754852295

Token 102: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -5.512236498361744e-07
    2. '_o' → logprob: -15.500000953674316
    3. '_' → logprob: -16.125
    4. '_count' → logprob: -16.875
    5. '_opt' → logprob: -17.0
    6. '_oper' → logprob: -17.75
    7. '_operation' → logprob: -18.125
    8. '_operator' → logprob: -18.25
    9. '_opcode' → logprob: -18.25
    10. '_ops' → logprob: -18.25

Token 103: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.607391408877447e-05
    2. '[' → logprob: -10.250036239624023
    3. '\[' → logprob: -15.250036239624023
    4. ' [' → logprob: -16.000036239624023
    5. 'x' → logprob: -16.500036239624023
    6. '   ' → logprob: -17.000036239624023
    7. '```' → logprob: -17.250036239624023
    8. ' ' → logprob: -17.750036239624023
    9. '[
' → logprob: -17.875036239624023
    10. ' x' → logprob: -17.875036239624023

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019531534053385258
    2. ' ]' → logprob: -8.875195503234863
    3. ']=' → logprob: -9.875195503234863
    4. '=' → logprob: -12.625195503234863
    5. ' =' → logprob: -14.250195503234863
    6. '[' → logprob: -17.000194549560547
    7. ' ' → logprob: -17.375194549560547
    8. ')' → logprob: -17.750194549560547
    9. '"]' → logprob: -17.750194549560547
    10. '']' → logprob: -17.875194549560547

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '＝' → logprob: -16.811967849731445
    4. ' ' → logprob: -18.311967849731445
    5. '=

' → logprob: -18.311967849731445
    6. '   ' → logprob: -18.561967849731445
    7. '[' → logprob: -18.686967849731445
    8. '.=' → logprob: -18.811967849731445
    9. '=
' → logprob: -18.811967849731445
    10. '=min' → logprob: -19.561967849731445

Token 106: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4740770161151886
    2. ' min' → logprob: -0.9740769863128662
    3. '	min' → logprob: -17.974077224731445
    4. '[min' → logprob: -18.724077224731445
    5. '(min' → logprob: -19.474077224731445
    6. '_min' → logprob: -19.974077224731445
    7. ' ' → logprob: -21.599077224731445
    8. '=min' → logprob: -21.599077224731445
    9. ':min' → logprob: -22.349077224731445
    10. ',min' → logprob: -22.599077224731445

Token 107: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -8.77627644513268e-06
    2. '_' → logprob: -12.625008583068848
    3. '_c' → logprob: -13.375008583068848
    4. '_co' → logprob: -13.500008583068848
    5. ' _' → logprob: -13.875008583068848
    6. 'count' → logprob: -14.125008583068848
    7. 'ount' → logprob: -14.750008583068848
    8. '_counts' → logprob: -16.375009536743164
    9. '   ' → logprob: -16.750009536743164
    10. '_cont' → logprob: -16.875009536743164

Token 108: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013762809976469725
    2. 'return' → logprob: -9.125137329101562
    3. ' return' → logprob: -10.500137329101562
    4. '<|end|>' → logprob: -14.750137329101562
    5. '	return' → logprob: -15.000137329101562
    6. '       ' → logprob: -15.625137329101562
    7. ':return' → logprob: -16.125137329101562
    8. '    
' → logprob: -16.500137329101562
    9. '
' → logprob: -16.625137329101562
    10. '  ' → logprob: -17.250137329101562

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00028386167832650244
    2. 'return' → logprob: -8.375284194946289
    3. ' return' → logprob: -10.000284194946289
    4. '	return' → logprob: -12.250284194946289
    5. '       ' → logprob: -14.500284194946289
    6. '    
' → logprob: -14.500284194946289
    7. ':return' → logprob: -14.500284194946289
    8. '```' → logprob: -14.625284194946289
    9. '<|end|>' → logprob: -14.625284194946289
    10. '
' → logprob: -15.500284194946289

Token 110: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04905647039413452
    2. 'return' (adapté à ' return') → logprob: -3.0490565299987793
    3. ' return' → logprob: -7.674056529998779
    4. '	return' → logprob: -12.674056053161621
    5. ':return' → logprob: -14.674056053161621
    6. '       ' → logprob: -15.549056053161621
    7. '```' → logprob: -15.549056053161621
    8. '<|end|>' → logprob: -15.799056053161621
    9. '  ' → logprob: -16.299057006835938
    10. '    
' → logprob: -17.049057006835938

Token 111: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20141352713108063
    2. ' min' → logprob: -1.7014135122299194
    3. '_min' → logprob: -15.95141315460205
    4. '	min' → logprob: -16.451414108276367
    5. '   ' → logprob: -17.451414108276367
    6. '(min' → logprob: -18.201414108276367
    7. '[min' → logprob: -19.326414108276367
    8. '    ' → logprob: -19.576414108276367
    9. '.min' → logprob: -20.326414108276367
    10. ',min' → logprob: -20.451414108276367

Token 112: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0004396095173433423
    2. '_op' → logprob: -7.750439643859863
    3. '_co' → logprob: -12.000439643859863
    4. '_' → logprob: -13.500439643859863
    5. 'count' → logprob: -14.125439643859863
    6. '_counts' → logprob: -15.375439643859863
    7. '_coin' → logprob: -16.000438690185547
    8. '_c' → logprob: -16.000438690185547
    9. 'op' → logprob: -16.125438690185547
    10. '_min' → logprob: -17.000438690185547

Token 113: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6888604164123535
    2. '<|end|>' → logprob: -1.0638604164123535
    3. '
' → logprob: -2.6888604164123535
    4. 'n' → logprob: -4.1888604164123535
    5. '    
' → logprob: -4.5638604164123535
    6. ' ' → logprob: -4.6888604164123535
    7. '```' → logprob: -4.9388604164123535
    8. '\' → logprob: -5.0638604164123535
    9. '<|end|>' → logprob: -5.1888604164123535
    10. '  
' → logprob: -5.1888604164123535

Token 114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0275740884244442
    2. 'op' → logprob: -4.027574062347412
    3. 'coins' → logprob: -5.652574062347412
    4. '<|end|>' → logprob: -5.902574062347412
    5. 'n' → logprob: -7.027574062347412
    6. 'den' → logprob: -7.777574062347412
    7. 'print' → logprob: -8.27757453918457
    8. '  
' → logprob: -8.40257453918457
    9. '    
' → logprob: -8.65257453918457
    10. 'coin' → logprob: -8.65257453918457

Token 115: ' submit' (ID: 14114)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20598162710666656
    2. ' coin' → logprob: -1.9559816122055054
    3. ' solve' → logprob: -4.455981731414795
    4. ' count' → logprob: -4.455981731414795
    5. ' min' → logprob: -4.830981731414795
    6. 'main' → logprob: -4.955981731414795
    7. 'coin' → logprob: -5.955981731414795
    8. ' find' → logprob: -6.830981731414795
    9. ' calculate' → logprob: -7.455981731414795
    10. 'count' → logprob: -8.080981254577637

Token 116: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6593401432037354
    2. '():' → logprob: -0.7843401432037354
    3. '_input' → logprob: -4.784339904785156
    4. '()' → logprob: -5.659339904785156
    5. '_code' → logprob: -5.784339904785156
    6. '_output' → logprob: -5.909339904785156
    7. '_answer' → logprob: -6.159339904785156
    8. '(' → logprob: -6.659339904785156
    9. '():
' → logprob: -6.909339904785156
    10. '_coin' → logprob: -7.284339904785156

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011133047519251704
    2. '<|end|>' → logprob: -7.251113414764404
    3. 'n' → logprob: -9.001112937927246
    4. '    ' → logprob: -9.626112937927246
    5. 'def' → logprob: -10.251112937927246
    6. '    
' → logprob: -10.251112937927246
    7. '(n' → logprob: -10.376112937927246
    8. ' n' → logprob: -11.001112937927246
    9. '
' → logprob: -11.001112937927246
    10. ' op' → logprob: -11.626112937927246

Token 118: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6145962476730347
    2. 'n' (adapté à ' n') → logprob: -1.3645962476730347
    3. '   ' → logprob: -1.6145962476730347
    4. ' x' → logprob: -5.864596366882324
    5. 'x' → logprob: -6.614596366882324
    6. ' op' → logprob: -9.489596366882324
    7. ' ' → logprob: -9.614596366882324
    8. '	n' → logprob: -9.614596366882324
    9. ' coins' → logprob: -9.739596366882324
    10. '    ' → logprob: -9.864596366882324

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00176062504760921
    2. '=' → logprob: -6.501760482788086
    3. ',' → logprob: -8.376760482788086
    4. ' ,' → logprob: -11.751760482788086
    5. ' ' → logprob: -12.001760482788086
    6. ' =
' → logprob: -12.126760482788086
    7. ')' → logprob: -13.001760482788086
    8. '   ' → logprob: -13.251760482788086
    9. '=int' → logprob: -14.001760482788086
    10. '.' → logprob: -14.126760482788086

Token 120: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.44142720103263855
    2. 'read' → logprob: -1.566427230834961
    3. ' int' → logprob: -2.191427230834961
    4. 'int' → logprob: -3.316427230834961
    5. ' ' → logprob: -10.566427230834961
    6. '  ' → logprob: -11.066427230834961
    7. '   ' → logprob: -11.691427230834961
    8. '    ' → logprob: -13.816427230834961
    9. '	read' → logprob: -14.566427230834961
    10. '=int' → logprob: -15.691427230834961

Token 121: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.7372048862162046e-05
    2. '_' → logprob: -10.625027656555176
    3. '_output' → logprob: -14.125027656555176
    4. '_inputs' → logprob: -14.250027656555176
    5. '```' → logprob: -15.000027656555176
    6. '_line' → logprob: -15.375027656555176
    7. '_in' → logprob: -15.375027656555176
    8. ' _' → logprob: -15.625027656555176
    9. '_user' → logprob: -16.25002670288086
    10. '_raw' → logprob: -16.50002670288086

Token 122: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005558936391025782
    2. '()
' → logprob: -7.500555992126465
    3. '()

' → logprob: -13.750555992126465
    4. '()
' → logprob: -14.125555992126465
    5. '()\' → logprob: -14.625555992126465
    6. ' ()' → logprob: -15.750555992126465
    7. '()`' → logprob: -15.875555992126465
    8. '(' → logprob: -16.12555503845215
    9. '())' → logprob: -16.37555503845215
    10. '()<' → logprob: -16.75055503845215

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004985405132174492
    2. ' op' → logprob: -6.504985332489014
    3. '<|end|>' → logprob: -6.754985332489014
    4. 'coins' → logprob: -6.879985332489014
    5. '    ' → logprob: -8.379985809326172
    6. 'op' → logprob: -8.379985809326172
    7. 'coin' → logprob: -8.504985809326172
    8. ' coins' → logprob: -8.754985809326172
    9. '    
' → logprob: -9.254985809326172
    10. ',' → logprob: -9.504985809326172

Token 124: ' ops' (ID: 26973)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.7753129601478577
    2. 'op' → logprob: -0.9003129601478577
    3. 'coins' → logprob: -2.650312900543213
    4. ' coins' → logprob: -4.150312900543213
    5. 'ops' (adapté à ' ops') → logprob: -4.275312900543213
    6. 'coin' → logprob: -4.275312900543213
    7. '   ' → logprob: -4.400312900543213
    8. ' coin' → logprob: -5.525312900543213
    9. ' ops' → logprob: -6.775312900543213
    10. 'options' → logprob: -8.775313377380371

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003186863148584962
    2. '=' → logprob: -5.7531867027282715
    3. 's' → logprob: -12.37818717956543
    4. ',' → logprob: -13.50318717956543
    5. '   ' → logprob: -13.75318717956543
    6. ' =[' → logprob: -14.12818717956543
    7. ' ' → logprob: -15.12818717956543
    8. ' =
' → logprob: -15.12818717956543
    9. '_' → logprob: -15.50318717956543
    10. '[' → logprob: -15.87818717956543

Token 126: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.054896723479032516
    2. ' [' → logprob: -2.929896831512451
    3. ' ' → logprob: -12.054896354675293
    4. '   ' → logprob: -12.429896354675293
    5. '[]' → logprob: -13.804896354675293
    6. '[int' → logprob: -13.929896354675293
    7. '  ' → logprob: -14.429896354675293
    8. ' ' → logprob: -14.554896354675293
    9. '(' → logprob: -15.429896354675293
    10. '[n' → logprob: -15.554896354675293

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01088098343461752
    2. '25' → logprob: -4.760880947113037
    3. '100' → logprob: -6.885880947113037
    4. ' ' → logprob: -7.510880947113037
    5. '50' → logprob: -7.885880947113037
    6. '10' → logprob: -9.010881423950195
    7. '500' → logprob: -9.635881423950195
    8. '5' → logprob: -9.885881423950195
    9. 'i' → logprob: -10.635881423950195
    10. 'int' → logprob: -11.635881423950195

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004707565065473318
    2. ' ,' → logprob: -5.379707336425781
    3. '0' → logprob: -9.879707336425781
    4. ' ' → logprob: -11.629707336425781
    5. ',
' → logprob: -11.754707336425781
    6. '2' → logprob: -12.379707336425781
    7. '6' → logprob: -12.504707336425781
    8. ']' → logprob: -12.879707336425781
    9. '7' → logprob: -13.504707336425781
    10. '   ' → logprob: -14.129707336425781

Token 129: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2955849766731262
    2. ' ' → logprob: -1.4205849170684814
    3. '2' → logprob: -4.9205851554870605
    4. '3' → logprob: -5.1705851554870605
    5. '7' → logprob: -7.6705851554870605
    6. '10' → logprob: -8.045584678649902
    7. '4' → logprob: -8.170584678649902
    8. '6' → logprob: -9.170584678649902
    9. '25' → logprob: -9.670584678649902
    10. '  ' → logprob: -10.545584678649902

Token 130: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.03445649892091751
    2. '3' → logprob: -4.409456729888916
    3. '2' → logprob: -4.534456729888916
    4. '7' → logprob: -5.409456729888916
    5. '4' → logprob: -6.034456729888916
    6. '10' → logprob: -6.534456729888916
    7. '6' → logprob: -6.659456729888916
    8. ' ' → logprob: -7.159456729888916
    9. '25' → logprob: -8.909456253051758
    10. '50' → logprob: -9.659456253051758

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007154120248742402
    2. ' ,' → logprob: -7.625715255737305
    3. ']' → logprob: -8.500715255737305
    4. '9' → logprob: -12.625715255737305
    5. '6' → logprob: -12.875715255737305
    6. '7' → logprob: -13.125715255737305
    7. '8' → logprob: -13.250715255737305
    8. '4' → logprob: -13.500715255737305
    9. '2' → logprob: -13.625715255737305
    10. '23' → logprob: -13.625715255737305

Token 132: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.009672514162957668
    2. ' ' → logprob: -5.13467264175415
    3. '7' → logprob: -7.00967264175415
    4. '10' → logprob: -7.00967264175415
    5. '12' → logprob: -7.63467264175415
    6. '8' → logprob: -7.63467264175415
    7. '   ' → logprob: -7.75967264175415
    8. '15' → logprob: -8.259672164916992
    9. '11' → logprob: -9.634672164916992
    10. '13' → logprob: -9.884672164916992

Token 133: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00037597675691358745
    2. '7' → logprob: -9.250375747680664
    3. '8' → logprob: -9.500375747680664
    4. '10' → logprob: -9.500375747680664
    5. ' ' → logprob: -9.875375747680664
    6. '12' → logprob: -11.125375747680664
    7. '
' → logprob: -11.375375747680664
    8. '

' → logprob: -11.625375747680664
    9. '   ' → logprob: -11.625375747680664
    10. '15' → logprob: -11.750375747680664

Token 134: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026703838258981705
    2. ',' → logprob: -3.6517038345336914
    3. '   ' → logprob: -8.651703834533691
    4. ' ]' → logprob: -8.651703834533691
    5. ']
' → logprob: -10.026703834533691
    6. ')' → logprob: -12.651703834533691
    7. ']

' → logprob: -13.776703834533691
    8. ' ,' → logprob: -14.151703834533691
    9. '       ' → logprob: -14.526703834533691
    10. ',
' → logprob: -14.526703834533691

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006963774096220732
    2. '
' → logprob: -5.256963729858398
    3. '    
' → logprob: -7.006963729858398
    4. '<|end|>' → logprob: -7.631963729858398
    5. '    ' → logprob: -9.506963729858398
    6. 'result' → logprob: -10.881963729858398
    7. '<|end|>' → logprob: -10.881963729858398
    8. 'def' → logprob: -11.006963729858398
    9. '' → logprob: -11.256963729858398
    10. 'count' → logprob: -11.256963729858398

Token 136: ' for' (ID: 395)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1275545358657837
    2. 'min' → logprob: -1.2525545358657837
    3. 'print' → logprob: -1.3775545358657837
    4. ' min' → logprob: -3.002554416656494
    5. ' result' → logprob: -3.252554416656494
    6. '   ' → logprob: -4.252554416656494
    7. ' print' → logprob: -4.377554416656494
    8. 'answer' → logprob: -4.877554416656494
    9. 'res' → logprob: -5.002554416656494
    10. 'count' → logprob: -6.127554416656494

Token 137: ' op' (ID: 991)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0284486785531044
    2. ' x' → logprob: -4.153448581695557
    3. 'i' → logprob: -4.653448581695557
    4. ' _' → logprob: -6.653448581695557
    5. 'x' → logprob: -7.278448581695557
    6. ' ' → logprob: -8.403449058532715
    7. '_' → logprob: -9.278449058532715
    8. ' amount' → logprob: -9.278449058532715
    9. ' op' → logprob: -9.528449058532715
    10. ' coin' → logprob: -10.028449058532715

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00988180935382843
    2. 'in' → logprob: -4.634881973266602
    3. '_' → logprob: -10.259881973266602
    4. ' ' → logprob: -10.259881973266602
    5. '   ' → logprob: -10.884881973266602
    6. '_in' → logprob: -11.384881973266602
    7. '  ' → logprob: -12.009881973266602
    8. 's' → logprob: -12.634881973266602
    9. 'n' → logprob: -13.009881973266602
    10. ' _' → logprob: -13.134881973266602

Token 139: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.7110284566879272
    2. ' range' → logprob: -0.9610284566879272
    3. 'range' → logprob: -2.586028575897217
    4. ' ops' → logprob: -3.086028575897217
    5. '[' → logprob: -5.461028575897217
    6. ' [' → logprob: -7.336028575897217
    7. 'op' → logprob: -8.961028099060059
    8. '   ' → logprob: -9.336028099060059
    9. ' ' → logprob: -9.461028099060059
    10. '(range' → logprob: -11.148528099060059

Token 140: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004090985283255577
    2. ':
' → logprob: -5.504090785980225
    3. ',' → logprob: -12.254091262817383
    4. ' :' → logprob: -12.754091262817383
    5. '):' → logprob: -13.629091262817383
    6. '   ' → logprob: -13.754091262817383
    7. ':

' → logprob: -14.629091262817383
    8. '=' → logprob: -14.629091262817383
    9. '       ' → logprob: -15.129091262817383
    10. '.' → logprob: -15.254091262817383

Token 141: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25217434763908386
    2. ']:' → logprob: -1.8771743774414062
    3. ':]' → logprob: -3.0021743774414062
    4. '1' → logprob: -4.127174377441406
    5. ' :' → logprob: -6.877174377441406
    6. '[' → logprob: -7.252174377441406
    7. ']' → logprob: -7.877174377441406
    8. '):' → logprob: -8.127174377441406
    9. '2' → logprob: -8.252174377441406
    10. ' ' → logprob: -8.252174377441406

Token 142: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003368926409166306
    2. ']:' → logprob: -8.500336647033691
    3. ':]' → logprob: -9.000336647033691
    4. ' :' → logprob: -12.500336647033691
    5. ':],' → logprob: -12.625336647033691
    6. '+:' → logprob: -14.125336647033691
    7. '+' → logprob: -14.500336647033691
    8. '():' → logprob: -15.000336647033691
    9. ',' → logprob: -15.250336647033691
    10. ':].' → logprob: -16.000337600708008

Token 143: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02437148243188858
    2. ']:
' → logprob: -3.774371385574341
    3. ' ]' → logprob: -7.39937162399292
    4. ']' → logprob: -7.77437162399292
    5. ':' → logprob: -9.774371147155762
    6. ']:
' → logprob: -10.399371147155762
    7. ']:

' → logprob: -13.774371147155762
    8. '   ' → logprob: -14.149371147155762
    9. '1' → logprob: -14.524371147155762
    10. ' :' → logprob: -14.649371147155762

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005065702833235264
    2. '<|end|>' → logprob: -5.75506591796875
    3. '
' → logprob: -7.25506591796875
    4. '   ' → logprob: -7.63006591796875
    5. '        
' → logprob: -9.13006591796875
    6. '    ' → logprob: -9.25506591796875
    7. ' ' → logprob: -9.63006591796875
    8. '<|end|>' → logprob: -9.63006591796875
    9. ',' → logprob: -10.00506591796875
    10. ' if' → logprob: -10.13006591796875

Token 145: ' i' (ID: 575)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.3476190567016602
    2. 'print' → logprob: -1.3476190567016602
    3. ' min' → logprob: -1.7226190567016602
    4. '   ' → logprob: -2.22261905670166
    5. ' print' → logprob: -2.72261905670166
    6. ' for' → logprob: -3.34761905670166
    7. ' if' → logprob: -3.72261905670166
    8. '       ' → logprob: -4.34761905670166
    9. ' pass' → logprob: -4.34761905670166
    10. '    ' → logprob: -4.34761905670166

Token 146: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.858097493648529
    2. 'n' → logprob: -0.983097493648529
    3. ' =' → logprob: -1.8580975532531738
    4. '=' → logprob: -3.733097553253174
    5. ' n' → logprob: -4.358097553253174
    6. '   ' → logprob: -5.733097553253174
    7. ' in' → logprob: -6.108097553253174
    8. 'for' → logprob: -6.858097553253174
    9. 'nt' → logprob: -7.358097553253174
    10. ' ' → logprob: -7.983097553253174

Token 147: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0034559965133667
    2. ' ' → logprob: -1.1284559965133667
    3. '0' → logprob: -1.5034559965133667
    4. ' op' → logprob: -3.0034561157226562
    5. 'op' → logprob: -3.6284561157226562
    6. '6' → logprob: -5.753456115722656
    7. 'n' → logprob: -5.878456115722656
    8. ' n' → logprob: -6.128456115722656
    9. '2' → logprob: -6.253456115722656
    10. ' i' → logprob: -8.253456115722656

Token 148: '1' (ID: 16)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3836215138435364
    2. '1' → logprob: -1.5086214542388916
    3. '0' → logprob: -2.7586214542388916
    4. 'n' → logprob: -3.6336214542388916
    5. ' op' → logprob: -5.633621692657471
    6. '6' → logprob: -6.258621692657471
    7. 'i' → logprob: -7.633621692657471
    8. ' ' → logprob: -7.633621692657471
    9. '9' → logprob: -7.758621692657471
    10. '(' → logprob: -9.133621215820312

Token 149: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35296088457107544
    2. '<|end|>' → logprob: -1.6029608249664307
    3. '   ' → logprob: -4.10296106338501
    4. ' 
' → logprob: -4.35296106338501
    5. '+' → logprob: -4.47796106338501
    6. ' ' → logprob: -4.47796106338501
    7. '<|end|>' → logprob: -4.72796106338501
    8. ',' → logprob: -4.97796106338501
    9. '       ' → logprob: -5.10296106338501
    10. ' while' → logprob: -5.22796106338501

Token 150: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09475676715373993
    2. '<|end|>' → logprob: -3.219756841659546
    3. '       ' → logprob: -3.844756841659546
    4. ' 
' → logprob: -4.969756603240967
    5. ' while' → logprob: -4.969756603240967
    6. 'while' → logprob: -5.844756603240967
    7. '<|end|>' → logprob: -6.469756603240967
    8. '   ' → logprob: -6.469756603240967
    9. '	while' → logprob: -6.719756603240967
    10. '    
' → logprob: -6.844756603240967

Token 151: ' t' (ID: 260)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.11896803230047226
    2. 'while' → logprob: -2.3689680099487305
    3. '       ' → logprob: -4.9939680099487305
    4. '   ' → logprob: -5.9939680099487305
    5. '
' → logprob: -6.1189680099487305
    6. ' i' → logprob: -6.2439680099487305
    7. '	while' → logprob: -6.2439680099487305
    8. ' 
' → logprob: -6.9939680099487305
    9. '    ' → logprob: -7.6189680099487305
    10. 'i' → logprob: -8.36896800994873

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16660581529140472
    2. '=' → logprob: -1.916605830192566
    3. 'o' → logprob: -6.4166059494018555
    4. '=i' → logprob: -6.6666059494018555
    5. '       ' → logprob: -7.9166059494018555
    6. 'ime' → logprob: -8.541605949401855
    7. '   ' → logprob: -8.541605949401855
    8. '      ' → logprob: -8.541605949401855
    9. 'okens' → logprob: -8.666605949401855
    10. ' ' → logprob: -8.791605949401855

Token 153: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5225893259048462
    2. 'i' → logprob: -1.7725893259048462
    3. ' op' → logprob: -1.7725893259048462
    4. ' i' → logprob: -3.3975892066955566
    5. '1' → logprob: -4.147589206695557
    6. '0' → logprob: -5.022589206695557
    7. ' ' → logprob: -5.397589206695557
    8. 'ops' → logprob: -6.647589206695557
    9. '<|end|>' → logprob: -7.022589206695557
    10. 'n' → logprob: -7.022589206695557

Token 154: ' **' (ID: 6240)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2912038564682007
    2. '*i' → logprob: -2.2912039756774902
    3. ' *' → logprob: -2.6662039756774902
    4. '*' → logprob: -3.0412039756774902
    5. 'while' → logprob: -4.16620397567749
    6. '**' → logprob: -4.54120397567749
    7. '<|end|>' → logprob: -6.54120397567749
    8. ' while' → logprob: -6.91620397567749
    9. '+' → logprob: -7.16620397567749
    10. '  
' → logprob: -7.16620397567749

Token 155: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16393838822841644
    2. '2' → logprob: -1.9139384031295776
    3. ' i' → logprob: -6.413938522338867
    4. '0' → logprob: -7.163938522338867
    5. '1' → logprob: -7.163938522338867
    6. '(' → logprob: -8.663938522338867
    7. ' ' → logprob: -8.788938522338867
    8. '3' → logprob: -8.913938522338867
    9. '(i' → logprob: -10.538938522338867
    10. '6' → logprob: -11.788938522338867

Token 156: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0489734411239624
    2. '<|end|>' → logprob: -1.2989734411239624
    3. 'while' → logprob: -1.6739734411239624
    4. ' while' → logprob: -2.798973560333252
    5. '       ' → logprob: -2.923973560333252
    6. '<|end|>' → logprob: -3.548973560333252
    7. ' 
' → logprob: -4.548973560333252
    8. '+' → logprob: -4.673973560333252
    9. ' ' → logprob: -5.173973560333252
    10. ',' → logprob: -5.173973560333252

Token 157: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49409082531929016
    2. '<|end|>' → logprob: -1.6190907955169678
    3. '       ' → logprob: -1.7440907955169678
    4. '<|end|>' → logprob: -4.369091033935547
    5. ' 
' → logprob: -6.744091033935547
    6. ' ' → logprob: -7.119091033935547
    7. '        
' → logprob: -7.369091033935547
    8. '  
' → logprob: -7.744091033935547
    9. '
' → logprob: -7.994091033935547
    10. '+' → logprob: -9.119091033935547

Token 158: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.22995813190937042
    2. 'while' (adapté à ' while') → logprob: -1.979958176612854
    3. '       ' → logprob: -3.4799580574035645
    4. '
' → logprob: -3.9799580574035645
    5. '	while' → logprob: -4.6049580574035645
    6. '<|end|>' → logprob: -5.3549580574035645
    7. ' 
' → logprob: -6.7299580574035645
    8. '<|end|>' → logprob: -7.3549580574035645
    9. '   ' → logprob: -7.7299580574035645
    10. ' ' → logprob: -8.604958534240723

Token 159: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.22542612254619598
    2. 't' → logprob: -1.6004260778427124
    3. 'x' → logprob: -12.475425720214844
    4. ' ' → logprob: -12.600425720214844
    5. ' x' → logprob: -13.225425720214844
    6. ' (' → logprob: -14.100425720214844
    7. '   ' → logprob: -14.350425720214844
    8. ' ' → logprob: -14.350425720214844
    9. '(t' → logprob: -14.475425720214844
    10. '    ' → logprob: -14.475425720214844

Token 160: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.001533428207039833
    2. '<=' → logprob: -6.501533508300781
    3. ' <' → logprob: -10.501533508300781
    4. ' ' → logprob: -13.251533508300781
    5. ' *' → logprob: -14.626533508300781
    6. ' <<=' → logprob: -14.751533508300781
    7. ' ≤' → logprob: -15.501533508300781
    8. ' t' → logprob: -15.626533508300781
    9. '*' → logprob: -15.626533508300781
    10. 't' → logprob: -15.751533508300781

Token 161: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759523510932922
    2. 'n' → logprob: -0.8259523510932922
    3. '   ' → logprob: -11.700952529907227
    4. '	n' → logprob: -12.700952529907227
    5. ' ' → logprob: -13.825952529907227
    6. '    ' → logprob: -16.325952529907227
    7. '_n' → logprob: -16.450952529907227
    8. '  ' → logprob: -16.450952529907227
    9. '(n' → logprob: -16.450952529907227
    10. ')n' → logprob: -16.825952529907227

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18011943995952606
    2. ':
' → logprob: -1.8051193952560425
    3. '       ' → logprob: -8.555119514465332
    4. ' and' → logprob: -9.555119514465332
    5. ' :' → logprob: -10.305119514465332
    6. ' :
' → logprob: -10.430119514465332
    7. '):
' → logprob: -11.180119514465332
    8. ':
' → logprob: -11.680119514465332
    9. ':

' → logprob: -11.805119514465332
    10. ',' → logprob: -12.305119514465332

Token 163: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01926039718091488
    2. '
' → logprob: -4.144260406494141
    3. '            
' → logprob: -6.769260406494141
    4. ':
' → logprob: -7.644260406494141
    5. ',' → logprob: -8.26926040649414
    6. ' t' → logprob: -8.51926040649414
    7. ',
' → logprob: -8.64426040649414
    8. '       ' → logprob: -8.64426040649414
    9. '<|end|>' → logprob: -9.39426040649414
    10. ' 
' → logprob: -9.51926040649414

Token 164: ' ops' (ID: 26973)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.0249141454696655
    2. ' i' → logprob: -1.1499141454696655
    3. '           ' → logprob: -1.8999141454696655
    4. 'i' → logprob: -2.774914264678955
    5. 't' → logprob: -2.774914264678955
    6. '       ' → logprob: -3.899914264678955
    7. '               ' → logprob: -5.024914264678955
    8. '   ' → logprob: -5.024914264678955
    9. ' op' → logprob: -5.649914264678955
    10. ' 
' → logprob: -5.899914264678955

Token 165: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04336053878068924
    2. '.' → logprob: -3.168360471725464
    3. ' .' → logprob: -8.043360710144043
    4. '.app' → logprob: -10.668360710144043
    5. '.ap' → logprob: -12.293360710144043
    6. '.insert' → logprob: -12.543360710144043
    7. '           ' → logprob: -12.918360710144043
    8. '[' → logprob: -13.418360710144043
    9. 'append' → logprob: -13.668360710144043
    10. ',' → logprob: -14.668360710144043

Token 166: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00030566859641112387
    2. '(' → logprob: -8.125306129455566
    3. 't' → logprob: -11.625306129455566
    4. ' (' → logprob: -15.000306129455566
    5. ' t' → logprob: -16.00030517578125
    6. '(
' → logprob: -16.37530517578125
    7. '((' → logprob: -16.75030517578125
    8. '(int' → logprob: -17.87530517578125
    9. '	t' → logprob: -18.62530517578125
    10. '(pow' → logprob: -18.75030517578125

Token 167: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.001215356052853167
    2. ')' → logprob: -7.37621545791626
    3. '           ' → logprob: -7.87621545791626
    4. ' )
' → logprob: -8.626214981079102
    5. ')
' → logprob: -10.751214981079102
    6. '               ' → logprob: -12.501214981079102
    7. ')

' → logprob: -13.251214981079102
    8. '       ' → logprob: -13.876214981079102
    9. '                   ' → logprob: -15.001214981079102
    10. ');
' → logprob: -15.626214981079102

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000945876759942621
    2. '       ' → logprob: -7.625946044921875
    3. '   ' → logprob: -8.750946044921875
    4. ',' → logprob: -9.250946044921875
    5. '            
' → logprob: -10.375946044921875
    6. '<|end|>' → logprob: -10.375946044921875
    7. '<|end|>' → logprob: -10.750946044921875
    8. '
' → logprob: -10.875946044921875
    9. '    
' → logprob: -10.875946044921875
    10. '	       ' → logprob: -11.000946044921875

Token 169: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.1286488175392151
    2. ' i' → logprob: -2.1286487579345703
    3. '   ' → logprob: -7.37864875793457
    4. '       ' → logprob: -7.62864875793457
    5. '           ' → logprob: -7.75364875793457
    6. '	i' → logprob: -8.75364875793457
    7. '    ' → logprob: -11.75364875793457
    8. '  ' → logprob: -12.00364875793457
    9. ' ' → logprob: -12.75364875793457
    10. '      ' → logprob: -13.87864875793457

Token 170: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.577200174331665
    2. ' +=' → logprob: -0.827200174331665
    3. '=' → logprob: -6.702199935913086
    4. ' =' → logprob: -10.952199935913086
    5. '+' → logprob: -11.452199935913086
    6. ']+=' → logprob: -13.577199935913086
    7. '<|end|>' → logprob: -13.952199935913086
    8. '   ' → logprob: -15.202199935913086
    9. ' ' → logprob: -15.452199935913086
    10. '<|end|>' → logprob: -15.577199935913086

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.000911712646484
    4. '  ' → logprob: -17.875911712646484
    5. '<|end|>' → logprob: -18.000911712646484
    6. '2' → logprob: -18.188411712646484
    7. '```' → logprob: -18.938411712646484
    8. '
' → logprob: -18.938411712646484
    9. '0' → logprob: -19.625911712646484
    10. '１' → logprob: -19.688411712646484

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.000017166137695
    4. '  ' → logprob: -17.250017166137695
    5. '<|end|>' → logprob: -18.312517166137695
    6. '```' → logprob: -19.062517166137695
    7. '
' → logprob: -19.562517166137695
    8. '0' → logprob: -19.687517166137695
    9. '2' → logprob: -19.937517166137695
    10. '...' → logprob: -20.187517166137695

Token 173: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016414029523730278
    2. '       ' → logprob: -4.391414165496826
    3. ',' → logprob: -6.516414165496826
    4. '   ' → logprob: -7.266414165496826
    5. '
' → logprob: -7.516414165496826
    6. '<|end|>' → logprob: -7.516414165496826
    7. 't' → logprob: -8.266413688659668
    8. '<|end|>' → logprob: -8.641413688659668
    9. '    
' → logprob: -10.516413688659668
    10. '               ' → logprob: -10.891413688659668

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0042145708575844765
    2. '       ' → logprob: -5.754214763641357
    3. ',' → logprob: -7.504214763641357
    4. '   ' → logprob: -8.3792142868042
    5. 't' → logprob: -9.3792142868042
    6. '<|end|>' → logprob: -9.5042142868042
    7. '<|end|>' → logprob: -10.6292142868042
    8. '               ' → logprob: -10.6292142868042
    9. ' t' → logprob: -11.1292142868042
    10. '
' → logprob: -12.5042142868042

Token 175: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.002244342816993594
    2. ' t' → logprob: -6.127244472503662
    3. 'op' → logprob: -9.877243995666504
    4. ' op' → logprob: -11.877243995666504
    5. '           ' → logprob: -15.127243995666504
    6. '`t' → logprob: -15.127243995666504
    7. '       ' → logprob: -16.12724494934082
    8. 'ops' → logprob: -16.25224494934082
    9. '   ' → logprob: -16.25224494934082
    10. '```' → logprob: -16.62724494934082

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. '=
' → logprob: -16.393150329589844
    4. '＝' → logprob: -18.393150329589844
    5. '=

' → logprob: -19.643150329589844
    6. '*=' → logprob: -19.643150329589844
    7. '=int' → logprob: -19.768150329589844
    8. '=}' → logprob: -20.268150329589844
    9. ' =
' → logprob: -20.393150329589844
    10. '+=' → logprob: -20.768150329589844

Token 177: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.25195521116256714
    2. ' op' → logprob: -1.501955270767212
    3. 'pow' → logprob: -10.751955032348633
    4. '(op' → logprob: -13.376955032348633
    5. '	op' → logprob: -14.251955032348633
    6. 'opf' → logprob: -14.251955032348633
    7. ' ' → logprob: -14.376955032348633
    8. 'ops' → logprob: -14.501955032348633
    9. 'int' → logprob: -15.376955032348633
    10. ' pow' → logprob: -15.626955032348633

Token 178: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03374700993299484
    2. ' **' → logprob: -3.4087469577789307
    3. 'i' → logprob: -10.033746719360352
    4. '*i' → logprob: -10.908746719360352
    5. '^' → logprob: -11.158746719360352
    6. '**
' → logprob: -11.158746719360352
    7. ' ' → logprob: -12.408746719360352
    8. ' i' → logprob: -13.158746719360352
    9. '*' → logprob: -13.533746719360352
    10. ' **
' → logprob: -14.033746719360352

Token 179: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.438573680294212e-06
    2. ' i' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.7500057220459
    4. ' ' → logprob: -20.1250057220459
    5. '	i' → logprob: -20.6250057220459
    6. '  ' → logprob: -20.6250057220459
    7. '```' → logprob: -20.6250057220459
    8. '(i' → logprob: -21.1250057220459
    9. '(' → logprob: -21.2500057220459
    10. '<|end|>' → logprob: -21.3750057220459

Token 180: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.560142457485199
    2. '<|end|>' → logprob: -1.0601425170898438
    3. '
' → logprob: -2.8101425170898438
    4. '       ' → logprob: -4.685142517089844
    5. '<|end|>' → logprob: -5.310142517089844
    6. '    
' → logprob: -5.810142517089844
    7. ')' → logprob: -6.560142517089844
    8. '\n' → logprob: -6.685142517089844
    9. ',' → logprob: -7.560142517089844
    10. '  
' → logprob: -8.310142517089844

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003930098842829466
    2. '<|end|>' → logprob: -5.87893009185791
    3. '       ' → logprob: -7.75393009185791
    4. '
' → logprob: -7.75393009185791
    5. '    
' → logprob: -9.75393009185791
    6. ',' → logprob: -9.87893009185791
    7. '<|end|>' → logprob: -9.87893009185791
    8. ')' → logprob: -10.37893009185791
    9. '           ' → logprob: -11.62893009185791
    10. 'def' → logprob: -12.00393009185791

Token 182: ' ops' (ID: 26973)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01201507169753313
    2. ' ops' → logprob: -5.262014865875244
    3. 'ops' (adapté à ' ops') → logprob: -5.762014865875244
    4. ' for' → logprob: -6.012014865875244
    5. '
' → logprob: -8.512015342712402
    6. 'n' → logprob: -8.637015342712402
    7. ' n' → logprob: -8.887015342712402
    8. 'for' → logprob: -9.012015342712402
    9. '<|end|>' → logprob: -9.262015342712402
    10. '    
' → logprob: -9.637015342712402

Token 183: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.03496737405657768
    2. '<|end|>' → logprob: -3.4099674224853516
    3. '.' → logprob: -8.284967422485352
    4. ',' → logprob: -8.534967422485352
    5. '[' → logprob: -8.659967422485352
    6. '.append' → logprob: -8.784967422485352
    7. ')' → logprob: -8.909967422485352
    8. '<|end|>' → logprob: -9.159967422485352
    9. 'sort' → logprob: -9.409967422485352
    10. '[:]' → logprob: -9.909967422485352

Token 184: ' list' (ID: 1562)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.08131778985261917
    2. 'list' → logprob: -2.581317901611328
    3. ' sorted' → logprob: -6.206317901611328
    4. ' list' → logprob: -7.956317901611328
    5. 'set' → logprob: -9.831317901611328
    6. '[' → logprob: -13.206317901611328
    7. 'sort' → logprob: -14.581317901611328
    8. '   ' → logprob: -14.581317901611328
    9. '(sorted' → logprob: -14.706317901611328
    10. ' ' → logprob: -15.081317901611328

Token 185: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.03803127631545067
    2. '(sorted' → logprob: -3.6630313396453857
    3. '(' → logprob: -4.538031101226807
    4. '(dict' → logprob: -7.538031101226807
    5. '(filter' → logprob: -8.663031578063965
    6. 'sorted' → logprob: -8.788031578063965
    7. '(sort' → logprob: -9.663031578063965
    8. 'set' → logprob: -11.038031578063965
    9. '.sort' → logprob: -11.913031578063965
    10. 'dict' → logprob: -12.038031578063965

Token 186: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.650518920039758e-06
    2. '(
' → logprob: -13.125003814697266
    3. ' (' → logprob: -13.625003814697266
    4. '())' → logprob: -15.250003814697266
    5. ')' → logprob: -16.750003814697266
    6. '([' → logprob: -17.250003814697266
    7. '((' → logprob: -17.375003814697266
    8. '()' → logprob: -17.500003814697266
    9. '(

' → logprob: -18.625003814697266
    10. '(
' → logprob: -18.875003814697266

Token 187: 'ops' (ID: 4645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00597240449860692
    2. 'ops' → logprob: -5.130972385406494
    3. ' (' → logprob: -11.005972862243652
    4. ' ops' → logprob: -11.505972862243652
    5. ')' → logprob: -11.880972862243652
    6. '(
' → logprob: -12.255972862243652
    7. '   ' → logprob: -12.630972862243652
    8. 'op' → logprob: -14.505972862243652
    9. '_ops' → logprob: -15.130972862243652
    10. '
' → logprob: -15.505972862243652

Token 188: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006484562181867659
    2. ')' → logprob: -7.750648498535156
    3. '))
' → logprob: -8.500648498535156
    4. '()))' → logprob: -11.375648498535156
    5. ' ))' → logprob: -14.000648498535156
    6. ')))' → logprob: -14.125648498535156
    7. '()' → logprob: -14.500648498535156
    8. '])' → logprob: -15.500648498535156
    9. '),' → logprob: -15.875648498535156
    10. '))

' → logprob: -16.000648498535156

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011737081513274461
    2. '<|end|>' → logprob: -10.000117301940918
    3. 'ops' → logprob: -10.125117301940918
    4. ' ops' → logprob: -11.000117301940918
    5. '    
' → logprob: -12.500117301940918
    6. '_ops' → logprob: -13.125117301940918
    7. '.sort' → logprob: -13.250117301940918
    8. ',' → logprob: -13.375117301940918
    9. '<|end|>' → logprob: -13.625117301940918
    10. '
' → logprob: -13.625117301940918

Token 190: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.011892212554812431
    2. 'min' → logprob: -5.136892318725586
    3. '   ' → logprob: -5.511892318725586
    4. ' ops' → logprob: -7.136892318725586
    5. 'print' → logprob: -7.636892318725586
    6. 'for' → logprob: -9.261892318725586
    7. 'op' → logprob: -9.511892318725586
    8. ' min' → logprob: -9.761892318725586
    9. 'dp' → logprob: -10.011892318725586
    10. 'return' → logprob: -10.011892318725586

Token 191: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.14848892390727997
    2. '<|end|>' → logprob: -2.023488998413086
    3. '<|end|>' → logprob: -6.273488998413086
    4. '
' → logprob: -7.148488998413086
    5. ')' → logprob: -7.398488998413086
    6. '=' → logprob: -7.773488998413086
    7. '[' → logprob: -7.898488998413086
    8. ',' → logprob: -7.898488998413086
    9. 'sort' → logprob: -8.023488998413086
    10. '.' → logprob: -8.023488998413086

Token 192: '(reverse' (ID: 110806)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.054582640528678894
    2. '   ' → logprob: -3.0545825958251953
    3. '<|end|>' → logprob: -5.554582595825195
    4. '    
' → logprob: -6.554582595825195
    5. '  
' → logprob: -8.554582595825195
    6. '<|end|>' → logprob: -8.804582595825195
    7. '
' → logprob: -9.804582595825195
    8. ' 
' → logprob: -9.929582595825195
    9. ',
' → logprob: -10.054582595825195
    10. '   
' → logprob: -10.429582595825195

Token 193: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.02508706972002983
    2. ')' → logprob: -4.275086879730225
    3. '())' → logprob: -4.650086879730225
    4. '()' → logprob: -7.650086879730225
    5. '=' → logprob: -7.775086879730225
    6. '(True' → logprob: -7.900086879730225
    7. '=False' → logprob: -11.775087356567383
    8. '())
' → logprob: -11.900087356567383
    9. '(' → logprob: -12.525087356567383
    10. ' =' → logprob: -12.900087356567383

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. ')
' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.125017166137695
    4. '))' → logprob: -16.125017166137695
    5. ' )' → logprob: -16.375017166137695
    6. ')`' → logprob: -17.750017166137695
    7. ')

' → logprob: -18.000017166137695
    8. '())' → logprob: -18.250017166137695
    9. ')
' → logprob: -18.500017166137695
    10. '`)' → logprob: -18.625017166137695

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016812538728117943
    2. 'min' → logprob: -5.016812324523926
    3. '
' → logprob: -5.141812324523926
    4. ' min' → logprob: -6.141812324523926
    5. '    
' → logprob: -7.266812324523926
    6. '	min' → logprob: -7.516812324523926
    7. '<|end|>' → logprob: -8.516812324523926
    8. 'def' → logprob: -8.891812324523926
    9. ',' → logprob: -9.641812324523926
    10. ',min' → logprob: -10.016812324523926

Token 196: ' print' (ID: 2123)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.012035924941301346
    2. '   ' → logprob: -5.012035846710205
    3. ' min' → logprob: -5.262035846710205
    4. 'result' → logprob: -10.012036323547363
    5. 'count' → logprob: -10.887036323547363
    6. '    
' → logprob: -11.637036323547363
    7. 'print' (adapté à ' print') → logprob: -11.887036323547363
    8. 'coin' → logprob: -12.012036323547363
    9. 'max' → logprob: -12.137036323547363
    10. '_min' → logprob: -12.512036323547363

Token 197: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0012114259880036116
    2. '(' → logprob: -6.876211643218994
    3. '(min' → logprob: -9.001211166381836
    4. 'count' → logprob: -9.876211166381836
    5. ' (' → logprob: -13.751211166381836
    6. '(
' → logprob: -14.251211166381836
    7. '()' → logprob: -14.626211166381836
    8. '(len' → logprob: -14.751211166381836
    9. '(max' → logprob: -15.126211166381836
    10. ' count' → logprob: -15.126211166381836

Token 198: '_coin' (ID: 187802)
  Prédit: '_coin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coin' → logprob: -0.00044711565715260804
    2. '_' → logprob: -7.8754472732543945
    3. '_co' → logprob: -10.125447273254395
    4. '(n' → logprob: -11.750447273254395
    5. '(' → logprob: -11.750447273254395
    6. '_token' → logprob: -12.375447273254395
    7. '_n' → logprob: -13.625447273254395
    8. ')' → logprob: -14.000447273254395
    9. '```' → logprob: -14.375447273254395
    10. 'coin' → logprob: -14.375447273254395

Token 199: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010440052719786763
    2. '(' → logprob: -6.876043796539307
    3. ' (' → logprob: -11.876044273376465
    4. ')' → logprob: -13.001044273376465
    5. '(
' → logprob: -13.501044273376465
    6. ')(' → logprob: -14.876044273376465
    7. ')n' → logprob: -15.751044273376465
    8. ',n' → logprob: -17.37604331970215
    9. '(

' → logprob: -17.75104331970215
    10. ',' → logprob: -18.25104331970215

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015908108616713434
    2. ' ,' → logprob: -8.75015926361084
    3. '(' → logprob: -15.25015926361084
    4. ',
' → logprob: -15.87515926361084
    5. '   ' → logprob: -16.000158309936523
    6. '),' → logprob: -17.625158309936523
    7. ')' → logprob: -17.750158309936523
    8. '```' → logprob: -17.750158309936523
    9. '    ' → logprob: -18.375158309936523
    10. '，' → logprob: -19.125158309936523

Token 201: ' ops' (ID: 26973)
  Prédit: ' ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ops' → logprob: -0.20142249763011932
    2. 'ops' → logprob: -1.7014224529266357
    3. 'op' → logprob: -12.826422691345215
    4. ' op' → logprob: -13.076422691345215
    5. '.ops' → logprob: -13.201422691345215
    6. '_ops' → logprob: -13.576422691345215
    7. ' ' → logprob: -14.451422691345215
    8. 'Ops' → logprob: -14.701422691345215
    9. '[' → logprob: -16.3264217376709
    10. ',' → logprob: -16.4514217376709

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005454074125736952
    2. '))' → logprob: -5.505454063415527
    3. ')' → logprob: -6.630454063415527
    4. ',)' → logprob: -9.880454063415527
    5. '   ' → logprob: -13.255454063415527
    6. ' ,' → logprob: -14.630454063415527
    7. ')))' → logprob: -14.755454063415527
    8. '),' → logprob: -14.755454063415527
    9. ',
' → logprob: -14.880454063415527
    10. ',))
' → logprob: -16.255455017089844

Token 203: ' {}' (ID: 9902)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.03169908747076988
    2. ' {}' → logprob: -3.5316991806030273
    3. '{})' → logprob: -6.406699180603027
    4. ' {})' → logprob: -8.156699180603027
    5. 'dict' → logprob: -12.281699180603027
    6. ' dict' → logprob: -12.906699180603027
    7. '))' → logprob: -13.781699180603027
    8. ' ' → logprob: -15.656699180603027
    9. '   ' → logprob: -15.781699180603027
    10. '{}\' → logprob: -15.906699180603027

Token 204: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.061971161514520645
    2. ')' → logprob: -2.8119711875915527
    3. ')))' → logprob: -13.436970710754395
    4. '))
' → logprob: -13.811970710754395
    5. ')
' → logprob: -14.561970710754395
    6. '   ' → logprob: -15.311970710754395
    7. '})' → logprob: -15.936970710754395
    8. ')}' → logprob: -16.31197166442871
    9. '),' → logprob: -16.93697166442871
    10. ' ))' → logprob: -17.06197166442871

Token 205: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0010579373920336366
    2. '__' → logprob: -6.876058101654053
    3. ' ' → logprob: -11.501057624816895
    4. '_' → logprob: -12.001057624816895
    5. ' ' → logprob: -12.376057624816895
    6. ' _' → logprob: -12.876057624816895
    7. '_name' → logprob: -13.876057624816895
    8. ' ___' → logprob: -14.626057624816895
    9. 'name' → logprob: -15.001057624816895
    10. '___' → logprob: -16.50105857849121

Token 207: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10658654570579529
    2. 'name' → logprob: -3.231586456298828
    3. ' ==' → logprob: -3.481586456298828
    4. ' __' → logprob: -3.606586456298828
    5. '==' → logprob: -6.231586456298828
    6. '_name' → logprob: -7.231586456298828
    7. '.name' → logprob: -7.981586456298828
    8. '_NAME' → logprob: -9.356586456298828
    9. '.__' → logprob: -9.481586456298828
    10. '__.__' → logprob: -9.731586456298828

Token 208: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.796184723294573e-06
    2. '__.__' → logprob: -12.500005722045898
    3. '==' → logprob: -13.750005722045898
    4. '___' → logprob: -15.500005722045898
    5. '__.' → logprob: -15.500005722045898
    6. '____' → logprob: -15.750005722045898
    7. ' ==' → logprob: -16.3750057220459
    8. '__["' → logprob: -16.6250057220459
    9. '__('' → logprob: -16.8750057220459
    10. '_' → logprob: -17.0000057220459

Token 209: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0866016075015068
    2. '==' → logprob: -2.711601495742798
    3. '__' → logprob: -4.211601734161377
    4. '=="' → logprob: -6.586601734161377
    5. '=='' → logprob: -8.836601257324219
    6. '.' → logprob: -9.711601257324219
    7. '.__' → logprob: -9.961601257324219
    8. '__.__' → logprob: -11.086601257324219
    9. ' =="' → logprob: -11.211601257324219
    10. '_' → logprob: -11.961601257324219

Token 210: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2519775629043579
    2. ''' → logprob: -1.501977562904358
    3. ' "__' → logprob: -10.126977920532227
    4. '__' → logprob: -12.501977920532227
    5. ' '__' → logprob: -12.626977920532227
    6. '"user' → logprob: -15.126977920532227
    7. ''_' → logprob: -15.501977920532227
    8. ''"' → logprob: -15.626977920532227
    9. '"_' → logprob: -15.626977920532227
    10. ''post' → logprob: -16.001977920532227

Token 211: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00013452880375552922
    2. '__' → logprob: -9.125134468078613
    3. 'name' → logprob: -10.875134468078613
    4. ''' → logprob: -12.500134468078613
    5. '"' → logprob: -13.500134468078613
    6. ' main' → logprob: -14.125134468078613
    7. '_main' → logprob: -15.625134468078613
    8. 'm' → logprob: -16.37513542175293
    9. '__':
' → logprob: -16.37513542175293
    10. 'ma' → logprob: -16.75013542175293

Token 212: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.11393292248249054
    2. ':' → logprob: -2.7389328479766846
    3. '__' → logprob: -3.4889328479766846
    4. '__:' → logprob: -5.238933086395264
    5. '__":
' → logprob: -5.613933086395264
    6. '():
' → logprob: -6.363933086395264
    7. '':' → logprob: -7.363933086395264
    8. ':
' → logprob: -7.613933086395264
    9. '():' → logprob: -8.863932609558105
    10. ''>' → logprob: -9.238932609558105

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051885608583688736
    2. 'submit' → logprob: -4.051885604858398
    3. '	sub' → logprob: -4.051885604858398
    4. ' submit' → logprob: -4.176885604858398
    5. 'sub' → logprob: -8.676885604858398
    6. '_submit' → logprob: -8.676885604858398
    7. '    
' → logprob: -10.926885604858398
    8. '.submit' → logprob: -11.051885604858398
    9. '<|end|>' → logprob: -11.176885604858398
    10. ' sub' → logprob: -11.676885604858398

Token 214: ' submit' (ID: 14114)
  Prédit: 'submit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'submit' (adapté à ' submit') → logprob: -8.180258191714529e-06
    2. ' submit' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.250008583068848
    4. '.submit' → logprob: -19.12500762939453
    5. '_submit' → logprob: -19.62500762939453
    6. '-submit' → logprob: -21.87500762939453
    7. 'submission' → logprob: -22.37500762939453
    8. '  ' → logprob: -22.62500762939453
    9. ' ' → logprob: -22.62500762939453
    10. '	sub' → logprob: -22.87500762939453

Token 215: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47180572152137756
    2. '#' → logprob: -1.2218056917190552
    3. '(' → logprob: -3.4718058109283447
    4. '<|end|>' → logprob: -3.4718058109283447
    5. '```' → logprob: -4.846805572509766
    6. '[' → logprob: -5.846805572509766
    7. ':' → logprob: -6.221805572509766
    8. ''' → logprob: -7.471805572509766
    9. '\n' → logprob: -7.471805572509766
    10. '<|end|>' → logprob: -7.721805572509766


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 213
Tokens correctement prédits (1ère position, stricte): 96
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 183
Précision stricte (1ère position): 45.07%
Précision adaptée (1ère position): 47.89%
Précision (top 10): 85.92%
================================================================================
