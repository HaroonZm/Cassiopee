================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = input()
a = map(int, raw_input().split())
l = []
s = 1
count = 0
a = list(a)
while(len(a) != 0):
	for i in xrange(0,len(a)):
		if a[i]%2 == 0 and a[i] != 0:
			l.append(a[i] >> 1)
	count += len(l)
	a = []
	a.extend(l)
	l = []
print count
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023276021238416433
    2. '('' → logprob: -6.8773274421691895
    3. ''' → logprob: -7.0023274421691895
    4. '"' → logprob: -8.752327919006348
    5. '("("' → logprob: -9.502327919006348
    6. '(
' → logprob: -9.627327919006348
    7. '()' → logprob: -10.377327919006348
    8. '[' → logprob: -11.377327919006348
    9. ' (' → logprob: -12.127327919006348
    10. '`' → logprob: -12.127327919006348

Token 4: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6191835403442383
    2. '+' → logprob: -0.8691835403442383
    3. '.strip' → logprob: -4.869183540344238
    4. '*' → logprob: -5.119183540344238
    5. '\n' → logprob: -5.119183540344238
    6. '=' → logprob: -5.494183540344238
    7. '()' → logprob: -5.744183540344238
    8. ')' → logprob: -5.994183540344238
    9. '```' → logprob: -5.994183540344238
    10. '.split' → logprob: -6.369183540344238

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3372271656990051
    2. '=' → logprob: -2.0872271060943604
    3. '.' → logprob: -2.2122271060943604
    4. '[' → logprob: -3.9622271060943604
    5. 'p' → logprob: -4.9622273445129395
    6. '+' → logprob: -5.5872273445129395
    7. 'r' → logprob: -5.7122273445129395
    8. 'm' → logprob: -5.7122273445129395
    9. 'a' → logprob: -6.0872273445129395
    10. 's' → logprob: -6.0872273445129395

Token 6: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6933903694152832
    2. ' int' → logprob: -0.8183903694152832
    3. ' n' → logprob: -4.193390369415283
    4. ' input' → logprob: -4.193390369415283
    5. 'n' → logprob: -4.318390369415283
    6. 'input' → logprob: -4.443390369415283
    7. ' ' → logprob: -6.818390369415283
    8. '[int' → logprob: -7.318390369415283
    9. ' []' → logprob: -7.443390369415283
    10. '[]' → logprob: -7.818390369415283

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007204659283161163
    2. '(lambda' → logprob: -5.382204532623291
    3. '(int' → logprob: -6.007204532623291
    4. '(str' → logprob: -10.00720500946045
    5. '(
' → logprob: -10.50720500946045
    6. ' (' → logprob: -11.25720500946045
    7. '(n' → logprob: -11.88220500946045
    8. '(list' → logprob: -11.88220500946045
    9. '(a' → logprob: -12.88220500946045
    10. 'int' → logprob: -13.13220500946045

Token 8: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14476792514324188
    2. '(' → logprob: -2.269767999649048
    3. ')' → logprob: -3.519767999649048
    4. '(input' → logprob: -6.644767761230469
    5. ')(' → logprob: -9.019767761230469
    6. ')n' → logprob: -9.144767761230469
    7. '())' → logprob: -9.519767761230469
    8. '(a' → logprob: -9.644767761230469
    9. '(user' → logprob: -9.769767761230469
    10. '()' → logprob: -10.144767761230469

Token 9: ' raw' (ID: 11428)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7274591326713562
    2. 'n' → logprob: -1.352459192276001
    3. 'input' → logprob: -1.977459192276001
    4. ' input' → logprob: -2.227459192276001
    5. ')' → logprob: -4.477458953857422
    6. ')n' → logprob: -8.352458953857422
    7. '(n' → logprob: -8.727458953857422
    8. ' )' → logprob: -9.227458953857422
    9. '(input' → logprob: -9.352458953857422
    10. ' ' → logprob: -10.227458953857422

Token 10: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.012570394203066826
    2. '_' → logprob: -4.387570381164551
    3. '_in' → logprob: -10.63757038116455
    4. ')_' → logprob: -11.51257038116455
    5. ')' → logprob: -11.76257038116455
    6. 'input' → logprob: -12.13757038116455
    7. '"_' → logprob: -12.88757038116455
    8. '__' → logprob: -13.13757038116455
    9. ' _' → logprob: -13.13757038116455
    10. '_i' → logprob: -13.63757038116455

Token 11: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04071240872144699
    2. '()' → logprob: -3.290712356567383
    3. ')' → logprob: -6.415712356567383
    4. '(' → logprob: -7.415712356567383
    5. ' ())' → logprob: -8.915712356567383
    6. '().' → logprob: -9.290712356567383
    7. '()))' → logprob: -9.415712356567383
    8. '()[' → logprob: -10.540712356567383
    9. '('' → logprob: -10.665712356567383
    10. '()]' → logprob: -11.165712356567383

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011129764840006828
    2. 'strip' → logprob: -4.511129856109619
    3. ' split' → logprob: -10.136129379272461
    4. 'rstrip' → logprob: -10.761129379272461
    5. ')' → logprob: -10.886129379272461
    6. '(split' → logprob: -14.261129379272461
    7. 'spl' → logprob: -15.136129379272461
    8. ' strip' → logprob: -15.261129379272461
    9. ' ' → logprob: -15.636129379272461
    10. 's' → logprob: -15.636129379272461

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015478501096367836
    2. '()' → logprob: -4.765478610992432
    3. ')' → logprob: -5.015478610992432
    4. '()))' → logprob: -8.890478134155273
    5. '(' → logprob: -10.140478134155273
    6. '))' → logprob: -11.515478134155273
    7. ' ())' → logprob: -11.890478134155273
    8. '('' → logprob: -12.890478134155273
    9. '();)' → logprob: -13.640478134155273
    10. '())
' → logprob: -13.640478134155273

Token 14: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36487385630607605
    2. '(' → logprob: -1.4898738861083984
    3. '()' → logprob: -2.7398738861083984
    4. 'a' → logprob: -5.239873886108398
    5. '[' → logprob: -5.614873886108398
    6. 'for' → logprob: -5.989873886108398
    7. '#' → logprob: -6.739873886108398
    8. 'print' → logprob: -8.114873886108398
    9. '())' → logprob: -8.114873886108398
    10. 'n' → logprob: -8.364873886108398

Token 15: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8718146681785583
    2. 'i' → logprob: -0.8718146681785583
    3. 'ist' → logprob: -2.496814727783203
    4. '.' → logprob: -3.871814727783203
    5. 'en' → logprob: -3.996814727783203
    6. '=' → logprob: -3.996814727783203
    7. 'a' → logprob: -5.246814727783203
    8. '[' → logprob: -5.621814727783203
    9. 's' → logprob: -5.746814727783203
    10. ' =' → logprob: -5.871814727783203

Token 16: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.27169957756996155
    2. 'list' → logprob: -1.5216995477676392
    3. ' []' → logprob: -4.14669942855835
    4. '[]' → logprob: -6.52169942855835
    5. ' [' → logprob: -7.39669942855835
    6. ' a' → logprob: -7.39669942855835
    7. '[list' → logprob: -8.271699905395508
    8. ' len' → logprob: -8.396699905395508
    9. 'len' → logprob: -9.271699905395508
    10. 'a' → logprob: -9.271699905395508

Token 17: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00258065527305007
    2. ' for' → logprob: -6.002580642700195
    3. 'f' → logprob: -10.502580642700195
    4. '[' → logprob: -10.627580642700195
    5. '\n' → logprob: -11.127580642700195
    6. ' ' → logprob: -11.877580642700195
    7. ')' → logprob: -12.377580642700195
    8. '	for' → logprob: -12.377580642700195
    9. 'a' → logprob: -12.627580642700195
    10. '```' → logprob: -13.002580642700195

Token 18: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08332934975624084
    2. 'u' → logprob: -2.833329439163208
    3. '=' → logprob: -4.583329200744629
    4. 'um' → logprob: -5.583329200744629
    5. ' =' → logprob: -6.083329200744629
    6. '.append' → logprob: -6.458329200744629
    7. 'e' → logprob: -6.458329200744629
    8. '.=' → logprob: -6.708329200744629
    9. '.u' → logprob: -8.458329200744629
    10. 't' → logprob: -9.708329200744629

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37518754601478577
    2. '0' → logprob: -1.8751875162124634
    3. ' sum' → logprob: -2.625187635421753
    4. 'sum' → logprob: -2.750187635421753
    5. ' set' → logprob: -4.250187397003174
    6. 'um' → logprob: -5.375187397003174
    7. 'set' → logprob: -5.625187397003174
    8. '"' → logprob: -8.750187873840332
    9. ' []' → logprob: -9.750187873840332
    10. ''' → logprob: -9.875187873840332

Token 20: '1' (ID: 16)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7005687355995178
    2. '0' → logprob: -1.075568675994873
    3. 'sum' → logprob: -1.825568675994873
    4. '[]' → logprob: -8.075569152832031
    5. '""' → logprob: -8.075569152832031
    6. '{}' → logprob: -8.575569152832031
    7. '''' → logprob: -8.950569152832031
    8. '"' → logprob: -8.950569152832031
    9. ' ' → logprob: -9.450569152832031
    10. 'um' → logprob: -10.075569152832031

Token 21: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2257717400789261
    2. ' for' → logprob: -1.6007717847824097
    3. '.' → logprob: -9.3507719039917
    4. ':' → logprob: -9.3507719039917
    5. ',' → logprob: -9.9757719039917
    6. '0' → logprob: -10.7257719039917
    7. '=' → logprob: -10.7257719039917
    8. ' ' → logprob: -11.2257719039917
    9. 'For' → logprob: -11.3507719039917
    10. '	for' → logprob: -11.6007719039917

Token 22: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14290384948253632
    2. ' for' → logprob: -2.0179038047790527
    3. '*' → logprob: -10.142904281616211
    4. '	for' → logprob: -10.142904281616211
    5. '\n' → logprob: -10.517904281616211
    6. '.' → logprob: -10.517904281616211
    7. ')' → logprob: -10.642904281616211
    8. ' ' → logprob: -11.517904281616211
    9. '\t' → logprob: -11.517904281616211
    10. ',' → logprob: -11.642904281616211

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4406036138534546
    2. ' =' → logprob: -1.0656036138534546
    3. '_' → logprob: -4.690603733062744
    4. ' ' → logprob: -6.815603733062744
    5. 's' → logprob: -7.440603733062744
    6. '(' → logprob: -7.565603733062744
    7. ' +=' → logprob: -8.690603256225586
    8. ')' → logprob: -9.690603256225586
    9. 'space' → logprob: -10.065603256225586
    10. '  ' → logprob: -10.065603256225586

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16029205918312073
    2. ' ' → logprob: -1.9102920293807983
    3. '1' → logprob: -9.66029167175293
    4. 's' → logprob: -13.16029167175293
    5. ' s' → logprob: -14.53529167175293
    6. 'n' → logprob: -15.41029167175293
    7. '2' → logprob: -15.41029167175293
    8. 'a' → logprob: -15.78529167175293
    9. ' ' → logprob: -15.84779167175293
    10. '  ' → logprob: -16.41029167175293

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012820642441511154
    2. ' ' → logprob: -4.887820720672607
    3. '1' → logprob: -5.262820720672607
    4. 's' → logprob: -11.26282024383545
    5. '{}' → logprob: -13.51282024383545
    6. '2' → logprob: -14.01282024383545
    7. '-' → logprob: -14.45032024383545
    8. ' s' → logprob: -14.45032024383545
    9. 'n' → logprob: -14.51282024383545
    10. 'a' → logprob: -14.51282024383545

Token 26: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7099366784095764
    2. 'for' → logprob: -0.7099366784095764
    3. '<|end|>' → logprob: -4.584936618804932
    4. ':' → logprob: -5.834936618804932
    5. '
' → logprob: -6.584936618804932
    6. '\n' → logprob: -6.834936618804932
    7. ' ' → logprob: -8.20993709564209
    8. '<|end|>' → logprob: -8.83493709564209
    9. '\' → logprob: -9.08493709564209
    10. '	for' → logprob: -9.08493709564209

Token 27: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.204142764210701
    2. ' for' → logprob: -1.7041428089141846
    3. ':' → logprob: -6.2041425704956055
    4. '\n' → logprob: -8.204142570495605
    5. '
' → logprob: -8.829142570495605
    6. '	for' → logprob: -9.829142570495605
    7. ' ' → logprob: -10.079142570495605
    8. '<|end|>' → logprob: -10.079142570495605
    9. ')' → logprob: -10.704142570495605
    10. '\' → logprob: -10.829142570495605

Token 28: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11263613402843475
    2. '[:]' → logprob: -3.112636089324951
    3. ':' → logprob: -3.737636089324951
    4. '[]' → logprob: -4.987636089324951
    5. '<|end|>' → logprob: -5.112636089324951
    6. '=' → logprob: -5.362636089324951
    7. '[i' → logprob: -5.487636089324951
    8. 's' → logprob: -5.612636089324951
    9. '_' → logprob: -5.737636089324951
    10. '<|end|>' → logprob: -6.612636089324951

Token 29: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25557035207748413
    2. ' list' → logprob: -1.505570411682129
    3. '[]' → logprob: -7.380570411682129
    4. 'sorted' → logprob: -7.380570411682129
    5. 'map' → logprob: -7.755570411682129
    6. ' []' → logprob: -7.755570411682129
    7. 'a' → logprob: -7.755570411682129
    8. ' map' → logprob: -8.380570411682129
    9. ' sorted' → logprob: -8.880570411682129
    10. ' a' → logprob: -9.005570411682129

Token 30: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10379747301340103
    2. '(' → logprob: -2.603797435760498
    3. '(map' → logprob: -3.728797435760498
    4. '(raw' → logprob: -8.478797912597656
    5. '(filter' → logprob: -9.478797912597656
    6. '(s' → logprob: -9.853797912597656
    7. '(range' → logprob: -9.853797912597656
    8. '()' → logprob: -9.978797912597656
    9. '(input' → logprob: -10.478797912597656
    10. 'a' → logprob: -10.728797912597656

Token 31: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41866585687967e-06
    2. ')
' → logprob: -12.125008583068848
    3. ' )' → logprob: -13.875008583068848
    4. ')a' → logprob: -14.625008583068848
    5. '))' → logprob: -14.750008583068848
    6. '[' → logprob: -15.000008583068848
    7. ')`' → logprob: -16.00000762939453
    8. '()' → logprob: -16.25000762939453
    9. ')

' → logprob: -16.37500762939453
    10. '())' → logprob: -16.50000762939453

Token 32: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6379933953285217
    2. ' for' → logprob: -1.137993335723877
    3. ':' → logprob: -2.012993335723877
    4. '[' → logprob: -4.262993335723877
    5. '(' → logprob: -7.012993335723877
    6. '<|end|>' → logprob: -7.387993335723877
    7. ')' → logprob: -8.012993812561035
    8. '[:]' → logprob: -8.262993812561035
    9. '.' → logprob: -8.387993812561035
    10. ' ' → logprob: -8.387993812561035

Token 33: '(len' (ID: 14990)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.33127498626708984
    2. ' s' → logprob: -1.4562749862670898
    3. 'count' → logprob: -3.58127498626709
    4. 's' → logprob: -4.83127498626709
    5. ' len' → logprob: -5.08127498626709
    6. ' a' → logprob: -6.08127498626709
    7. ' ' → logprob: -6.45627498626709
    8. ' n' → logprob: -6.58127498626709
    9. '(count' → logprob: -7.45627498626709
    10. ' l' → logprob: -8.45627498626709

Token 34: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.027006957679986954
    2. '(' → logprob: -4.152007102966309
    3. '(l' → logprob: -4.777007102966309
    4. '(s' → logprob: -6.027007102966309
    5. '(n' → logprob: -9.777007102966309
    6. 'a' → logprob: -11.652007102966309
    7. ')' → logprob: -11.902007102966309
    8. ' (' → logprob: -13.277007102966309
    9. 'l' → logprob: -14.152007102966309
    10. '()' → logprob: -14.402007102966309

Token 35: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.029008377343416214
    2. ')' → logprob: -4.529008388519287
    3. ')>' → logprob: -4.529008388519287
    4. ' >' → logprob: -5.529008388519287
    5. ' and' → logprob: -6.029008388519287
    6. 'and' → logprob: -7.654008388519287
    7. '&gt' → logprob: -10.654007911682129
    8. '>):' → logprob: -10.654007911682129
    9. '):' → logprob: -10.904007911682129
    10. ' ' → logprob: -10.904007911682129

Token 36: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05461130663752556
    2. ' >' → logprob: -3.0546112060546875
    3. ' and' → logprob: -5.4296112060546875
    4. ')' → logprob: -7.0546112060546875
    5. ')>' → logprob: -7.8046112060546875
    6. 'and' → logprob: -8.429611206054688
    7. '>)' → logprob: -10.179611206054688
    8. '&gt' → logprob: -10.429611206054688
    9. '">' → logprob: -11.179611206054688
    10. '!=' → logprob: -11.304611206054688

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.523527979850769
    2. ' ' → logprob: -0.898527979850769
    3. '1' → logprob: -8.023528099060059
    4. 's' → logprob: -10.148528099060059
    5. ' s' → logprob: -11.023528099060059
    6. ' n' → logprob: -12.148528099060059
    7. '   ' → logprob: -12.523528099060059
    8. 'n' → logprob: -13.023528099060059
    9. '  ' → logprob: -13.023528099060059
    10. '2' → logprob: -13.523528099060059

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011170309036970139
    2. '1' → logprob: -5.136170387268066
    3. ' ' → logprob: -5.261170387268066
    4. 's' → logprob: -10.761170387268066
    5. 'n' → logprob: -11.636170387268066
    6. 'count' → logprob: -13.011170387268066
    7. '   ' → logprob: -13.386170387268066
    8. ')' → logprob: -13.761170387268066
    9. '  ' → logprob: -14.136170387268066
    10. ' n' → logprob: -14.136170387268066

Token 39: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.462201863527298
    2. '):' → logprob: -1.0872018337249756
    3. ' and' → logprob: -3.5872018337249756
    4. ':' → logprob: -5.962202072143555
    5. ' )' → logprob: -6.587202072143555
    6. 'and' → logprob: -7.212202072143555
    7. ' ):' → logprob: -8.087202072143555
    8. ':)' → logprob: -8.712202072143555
    9. '):
' → logprob: -9.587202072143555
    10. ' ' → logprob: -12.337202072143555

Token 40: '	for' (ID: 3903)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0933234691619873
    2. '   ' → logprob: -1.2183234691619873
    3. '<|end|>' → logprob: -1.5933234691619873
    4. ' if' → logprob: -2.5933234691619873
    5. ' 
' → logprob: -3.2183234691619873
    6. '    ' → logprob: -4.468323707580566
    7. '	if' → logprob: -5.218323707580566
    8. '    
' → logprob: -5.343323707580566
    9. '\t' → logprob: -5.718323707580566
    10. '  ' → logprob: -5.843323707580566

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19596095383167267
    2. 'i' → logprob: -2.1959609985351562
    3. ' x' → logprob: -3.0709609985351562
    4. 'x' → logprob: -4.320960998535156
    5. ' ' → logprob: -5.820960998535156
    6. '_' → logprob: -7.195960998535156
    7. ' a' → logprob: -7.445960998535156
    8. 'a' → logprob: -8.320960998535156
    9. ' num' → logprob: -8.320960998535156
    10. ' _' → logprob: -8.320960998535156

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027043623849749565
    2. 'in' → logprob: -3.652043581008911
    3. ' ' → logprob: -7.52704381942749
    4. '<|end|>' → logprob: -9.277043342590332
    5. '	in' → logprob: -9.902043342590332
    6. ',' → logprob: -11.027043342590332
    7. 's' → logprob: -11.652043342590332
    8. '  ' → logprob: -11.777043342590332
    9. 'n' → logprob: -11.777043342590332
    10. '_in' → logprob: -12.902043342590332

Token 43: ' xrange' (ID: 92050)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10293958336114883
    2. 'range' → logprob: -2.7279396057128906
    3. ' a' → logprob: -3.7279396057128906
    4. 'a' → logprob: -5.477939605712891
    5. ' xrange' → logprob: -5.477939605712891
    6. '	range' → logprob: -10.47793960571289
    7. ' ' → logprob: -11.22793960571289
    8. 's' → logprob: -12.22793960571289
    9. '(range' → logprob: -12.35293960571289
    10. 'l' → logprob: -13.22793960571289

Token 44: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.31337952613830566
    2. '(' → logprob: -1.3133795261383057
    3. ' (' → logprob: -9.938379287719727
    4. '(s' → logprob: -10.563379287719727
    5. '(length' → logprob: -11.188379287719727
    6. '(n' → logprob: -11.688379287719727
    7. '(l' → logprob: -12.688379287719727
    8. '(
' → logprob: -12.688379287719727
    9. '(i' → logprob: -12.813379287719727
    10. '((' → logprob: -12.813379287719727

Token 45: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02942713163793087
    2. ' len' → logprob: -4.2794270515441895
    3. '(len' → logprob: -4.5294270515441895
    4. '1' → logprob: -5.7794270515441895
    5. '0' → logprob: -7.6544270515441895
    6. 'n' → logprob: -7.7794270515441895
    7. ' n' → logprob: -9.029427528381348
    8. 's' → logprob: -9.404427528381348
    9. '(' → logprob: -9.404427528381348
    10. '	len' → logprob: -10.154427528381348

Token 46: ',len' (ID: 73338)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6144716739654541
    2. 'len' → logprob: -1.114471673965454
    3. '(len' → logprob: -2.614471673965454
    4. ',' → logprob: -3.614471673965454
    5. ',len' → logprob: -3.739471673965454
    6. ' ,' → logprob: -6.114471435546875
    7. ' ' → logprob: -6.614471435546875
    8. '	len' → logprob: -6.864471435546875
    9. ' n' → logprob: -6.989471435546875
    10. '   ' → logprob: -7.739471435546875

Token 47: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0022146080154925585
    2. '(' → logprob: -6.127214431762695
    3. '(s' → logprob: -10.627214431762695
    4. '(n' → logprob: -13.002214431762695
    5. 'a' → logprob: -13.377214431762695
    6. '(l' → logprob: -14.127214431762695
    7. ')' → logprob: -14.877214431762695
    8. '(
' → logprob: -17.252214431762695
    9. '(i' → logprob: -17.252214431762695
    10. ' (' → logprob: -17.377214431762695

Token 48: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.361368864774704
    2. '))' → logprob: -2.1113688945770264
    3. ')):
' → logprob: -2.3613688945770264
    4. ')' → logprob: -2.7363688945770264
    5. ')-' → logprob: -4.611368656158447
    6. '),' → logprob: -5.111368656158447
    7. '-' → logprob: -6.111368656158447
    8. '):' → logprob: -6.361368656158447
    9. ')):
' → logprob: -6.611368656158447
    10. ' ))' → logprob: -7.486368656158447

Token 49: '	' (ID: 197)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5921329259872437
    2. '	if' → logprob: -1.8421329259872437
    3. ' if' → logprob: -2.467133045196533
    4. '   ' → logprob: -2.467133045196533
    5. 'if' → logprob: -3.467133045196533
    6. ' ' → logprob: -3.842133045196533
    7. '       ' → logprob: -3.967133045196533
    8. '<|end|>' → logprob: -4.092133045196533
    9. ' :' → logprob: -4.342133045196533
    10. '):' → logprob: -5.967133045196533

Token 50: '	if' (ID: 1224)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5426068305969238
    2. ' if' → logprob: -1.0426068305969238
    3. 's' → logprob: -3.042606830596924
    4. '	if' → logprob: -4.792606830596924
    5. ' s' → logprob: -5.167606830596924
    6. '   ' → logprob: -6.542606830596924
    7. ' ' → logprob: -7.167606830596924
    8. '<|end|>' → logprob: -7.167606830596924
    9. ':' → logprob: -8.417606353759766
    10. '	' → logprob: -8.542606353759766

Token 51: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.26302048563957214
    2. 'a' → logprob: -1.6380205154418945
    3. ' s' → logprob: -3.5130205154418945
    4. 's' → logprob: -5.3880205154418945
    5. '	a' → logprob: -6.8880205154418945
    6. '(a' → logprob: -7.7630205154418945
    7. ' (' → logprob: -8.013020515441895
    8. ' l' → logprob: -8.138020515441895
    9. 'l' → logprob: -9.638020515441895
    10. ' len' → logprob: -9.888020515441895

Token 52: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0030242912471294403
    2. '[' → logprob: -6.503024101257324
    3. '[s' → logprob: -6.628024101257324
    4. '%' → logprob: -9.378024101257324
    5. '[count' → logprob: -10.003024101257324
    6. '[j' → logprob: -11.128024101257324
    7. '[a' → logprob: -11.378024101257324
    8. ' [' → logprob: -12.253024101257324
    9. '%i' → logprob: -12.628024101257324
    10. 'i' → logprob: -12.628024101257324

Token 53: ']%' (ID: 158002)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5219029188156128
    2. ' %' → logprob: -1.0219029188156128
    3. '==' → logprob: -4.146903038024902
    4. ' ==' → logprob: -4.771903038024902
    5. '%s' → logprob: -4.771903038024902
    6. '>' → logprob: -5.521903038024902
    7. ' ' → logprob: -5.646903038024902
    8. ')' → logprob: -6.896903038024902
    9. '%i' → logprob: -7.021903038024902
    10. ' >' → logprob: -7.396903038024902

Token 54: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013348452746868134
    2. '2' → logprob: -4.388348579406738
    3. 'count' → logprob: -8.013348579406738
    4. '	s' → logprob: -9.138348579406738
    5. ' s' → logprob: -9.263348579406738
    6. 'l' → logprob: -9.388348579406738
    7. '10' → logprob: -10.138348579406738
    8. '3' → logprob: -10.638348579406738
    9. '7' → logprob: -10.638348579406738
    10. '1' → logprob: -10.638348579406738

Token 55: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.45418742299079895
    2. '==' → logprob: -1.0791873931884766
    3. ' !=' → logprob: -4.079187393188477
    4. '!=' → logprob: -4.954187393188477
    5. ')' → logprob: -7.704187393188477
    6. ' ' → logprob: -8.079187393188477
    7. ')==' → logprob: -8.454187393188477
    8. 's' → logprob: -9.204187393188477
    9. ' s' → logprob: -10.204187393188477
    10. ' )' → logprob: -10.454187393188477

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3930976688861847
    2. ' ' → logprob: -1.1430976390838623
    3. 's' → logprob: -5.518097877502441
    4. ' s' → logprob: -6.268097877502441
    5. '1' → logprob: -8.268097877502441
    6. 'count' → logprob: -10.768097877502441
    7. ' count' → logprob: -12.143097877502441
    8. '	s' → logprob: -12.955597877502441
    9. '	' → logprob: -13.330597877502441
    10. '=' → logprob: -13.393097877502441

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011454146355390549
    2. 's' → logprob: -5.386454105377197
    3. ' ' → logprob: -5.636454105377197
    4. '1' → logprob: -5.761454105377197
    5. 'count' → logprob: -9.886454582214355
    6. ' s' → logprob: -10.136454582214355
    7. ' count' → logprob: -13.573954582214355
    8. '2' → logprob: -13.823954582214355
    9. 'l' → logprob: -13.823954582214355
    10. '   ' → logprob: -14.511454582214355

Token 58: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027391354087740183
    2. ' and' → logprob: -6.377738952636719
    3. '):' → logprob: -7.752738952636719
    4. ' :' → logprob: -7.752738952636719
    5. ':
' → logprob: -9.752738952636719
    6. 'and' → logprob: -10.002738952636719
    7. ')' → logprob: -10.502738952636719
    8. '	' → logprob: -11.252738952636719
    9. ' or' → logprob: -11.252738952636719
    10. '	and' → logprob: -12.502738952636719

Token 59: ' a' (ID: 261)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4750707447528839
    2. ' a' → logprob: -1.7250707149505615
    3. 's' → logprob: -2.6000707149505615
    4. 'a' → logprob: -2.7250707149505615
    5. ' count' → logprob: -3.9750707149505615
    6. ' l' → logprob: -4.225070953369141
    7. ' i' → logprob: -4.975070953369141
    8. 'count' → logprob: -4.975070953369141
    9. ' (' → logprob: -5.725070953369141
    10. 'l' → logprob: -5.725070953369141

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012091610115021467
    2. '[' → logprob: -6.751209259033203
    3. ' [' → logprob: -11.126209259033203
    4. '[s' → logprob: -11.251209259033203
    5. '[a' → logprob: -12.251209259033203
    6. ' ' → logprob: -13.751209259033203
    7. 'i' → logprob: -14.126209259033203
    8. ' i' → logprob: -14.376209259033203
    9. '[j' → logprob: -14.376209259033203
    10. '[I' → logprob: -14.501209259033203

Token 61: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4129618704319
    2. '==' → logprob: -1.6629618406295776
    3. ' ' → logprob: -2.287961959838867
    4. ' !=' → logprob: -4.162961959838867
    5. ')' → logprob: -5.162961959838867
    6. ']==' → logprob: -5.287961959838867
    7. '!=' → logprob: -5.537961959838867
    8. '%' → logprob: -5.537961959838867
    9. 's' → logprob: -5.787961959838867
    10. ' %' → logprob: -5.912961959838867

Token 62: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3926035463809967
    2. '==' → logprob: -1.6426035165786743
    3. ' ' → logprob: -2.267603635787964
    4. ' !=' → logprob: -4.642603397369385
    5. 's' → logprob: -5.017603397369385
    6. '!=' → logprob: -5.767603397369385
    7. ' s' → logprob: -5.892603397369385
    8. '%' → logprob: -6.392603397369385
    9. ' %' → logprob: -6.517603397369385
    10. '>' → logprob: -7.267603397369385

Token 63: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.45621106028556824
    2. ' ' → logprob: -1.2062110900878906
    3. 's' → logprob: -3.7062110900878906
    4. '1' → logprob: -3.9562110900878906
    5. ' s' → logprob: -3.9562110900878906
    6. 'l' → logprob: -6.206211090087891
    7. ' l' → logprob: -6.831211090087891
    8. 'count' → logprob: -7.831211090087891
    9. ' count' → logprob: -8.58121109008789
    10. '-' → logprob: -9.33121109008789

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01643291488289833
    2. 's' → logprob: -4.641432762145996
    3. '1' → logprob: -5.266432762145996
    4. ' ' → logprob: -7.266432762145996
    5. 'l' → logprob: -7.391432762145996
    6. 'count' → logprob: -9.141432762145996
    7. ' s' → logprob: -11.266432762145996
    8. '2' → logprob: -12.141432762145996
    9. '100' → logprob: -12.266432762145996
    10. '	' → logprob: -12.266432762145996

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009974467568099499
    2. ' :' → logprob: -4.884974479675293
    3. ' and' → logprob: -6.509974479675293
    4. ':
' → logprob: -7.759974479675293
    5. '):' → logprob: -8.259974479675293
    6. '	' → logprob: -9.509974479675293
    7. 'and' → logprob: -9.884974479675293
    8. ' :
' → logprob: -11.384974479675293
    9. ' ' → logprob: -11.509974479675293
    10. '	and' → logprob: -11.759974479675293

Token 66: '		' (ID: 335)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5067191123962402
    2. '		' → logprob: -1.8817191123962402
    3. ' :' → logprob: -2.6317191123962402
    4. ' ' → logprob: -2.7567191123962402
    5. '	' → logprob: -3.5067191123962402
    6. ':
' → logprob: -4.00671911239624
    7. '<|end|>' → logprob: -4.75671911239624
    8. ' :
' → logprob: -5.13171911239624
    9. '           ' → logprob: -5.13171911239624
    10. 's' → logprob: -5.13171911239624

Token 67: '	l' (ID: 15077)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5193337202072144
    2. ' a' → logprob: -2.144333839416504
    3. 's' → logprob: -2.269333839416504
    4. ' ' → logprob: -2.519333839416504
    5. 'a' → logprob: -3.269333839416504
    6. '			' → logprob: -4.394333839416504
    7. '	s' → logprob: -4.769333839416504
    8. '		' → logprob: -4.769333839416504
    9. ' count' → logprob: -5.019333839416504
    10. 'count' → logprob: -5.269333839416504

Token 68: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20152480900287628
    2. '.' → logprob: -1.7015248537063599
    3. ' .' → logprob: -9.70152473449707
    4. '.extend' → logprob: -11.07652473449707
    5. 'append' → logprob: -11.32652473449707
    6. '.app' → logprob: -11.82652473449707
    7. ' +=' → logprob: -12.57652473449707
    8. '.ap' → logprob: -12.95152473449707
    9. '.Append' → logprob: -13.32652473449707
    10. '.insert' → logprob: -13.70152473449707

Token 69: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0029856672044843435
    2. '(' → logprob: -5.87798547744751
    3. '(i' → logprob: -9.252985954284668
    4. '(s' → logprob: -9.752985954284668
    5. '((' → logprob: -10.752985954284668
    6. 'a' → logprob: -13.627985954284668
    7. '(
' → logprob: -14.002985954284668
    8. '(int' → logprob: -14.252985954284668
    9. '(n' → logprob: -14.377985954284668
    10. '('' → logprob: -14.752985954284668

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0564331205387134e-05
    2. '[' → logprob: -12.12501049041748
    3. ')' → logprob: -12.50001049041748
    4. 'i' → logprob: -15.37501049041748
    5. ' [' → logprob: -15.37501049041748
    6. ')i' → logprob: -15.62501049041748
    7. '[I' → logprob: -15.87501049041748
    8. ')[' → logprob: -16.125011444091797
    9. '[j' → logprob: -16.125011444091797
    10. '[a' → logprob: -16.125011444091797

Token 71: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2939152121543884
    2. '])
' → logprob: -2.043915271759033
    3. ']' → logprob: -2.668915271759033
    4. ')' → logprob: -3.293915271759033
    5. ')
' → logprob: -4.418915271759033
    6. '//' → logprob: -6.543915271759033
    7. ' ])' → logprob: -6.793915271759033
    8. '])
' → logprob: -6.918915271759033
    9. ' ])
' → logprob: -7.543915271759033
    10. ')//' → logprob: -7.793915271759033

Token 72: ' >>' (ID: 6832)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7050447463989258
    2. ')
' → logprob: -0.7050447463989258
    3. '		' → logprob: -6.080044746398926
    4. '*' → logprob: -6.080044746398926
    5. '//' → logprob: -6.330044746398926
    6. '/' → logprob: -6.580044746398926
    7. ' )
' → logprob: -7.080044746398926
    8. ')
' → logprob: -7.455044746398926
    9. ' /' → logprob: -7.830044746398926
    10. ' )' → logprob: -8.080044746398926

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003975416184403002
    2. ' ' → logprob: -8.000397682189941
    3. 'count' → logprob: -10.000397682189941
    4. 's' → logprob: -11.750397682189941
    5. '2' → logprob: -12.625397682189941
    6. '=' → logprob: -13.500397682189941
    7. '>' → logprob: -14.500397682189941
    8. '   ' → logprob: -14.500397682189941
    9. '```' → logprob: -14.875397682189941
    10. '	' → logprob: -14.875397682189941

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.603335638530552e-05
    2. ' ' → logprob: -9.875096321105957
    3. 's' → logprob: -10.750096321105957
    4. 'count' → logprob: -10.875096321105957
    5. '	' → logprob: -13.500096321105957
    6. '2' → logprob: -14.375096321105957
    7. '   ' → logprob: -14.500096321105957
    8. '0' → logprob: -15.250096321105957
    9. '	count' → logprob: -15.937596321105957
    10. '' → logprob: -15.937596321105957

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009085088036954403
    2. ')
' → logprob: -5.134085178375244
    3. ' )' → logprob: -6.259085178375244
    4. '		' → logprob: -7.134085178375244
    5. '	' → logprob: -8.509084701538086
    6. ')
' → logprob: -10.009084701538086
    7. '			' → logprob: -10.259084701538086
    8. ' )
' → logprob: -10.384084701538086
    9. '))' → logprob: -10.759084701538086
    10. '),' → logprob: -10.759084701538086

Token 76: '	count' (ID: 42496)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24482361972332
    2. '<|end|>' → logprob: -2.869823694229126
    3. '	' → logprob: -2.994823694229126
    4. '		' → logprob: -3.494823694229126
    5. ',' → logprob: -3.994823694229126
    6. '		
' → logprob: -4.494823455810547
    7. ' 
' → logprob: -4.994823455810547
    8. ')' → logprob: -5.369823455810547
    9. '
' → logprob: -5.619823455810547
    10. '  
' → logprob: -5.744823455810547

Token 77: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11535858362913132
    2. '+=' → logprob: -2.490358591079712
    3. ' =' → logprob: -4.365358352661133
    4. '=' → logprob: -4.865358352661133
    5. '+' → logprob: -5.365358352661133
    6. ' +' → logprob: -7.365358352661133
    7. ' ' → logprob: -8.115358352661133
    8. '++' → logprob: -10.990358352661133
    9. ' ' → logprob: -12.490358352661133
    10. 's' → logprob: -12.490358352661133

Token 78: ' len' (ID: 4631)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029931791126728058
    2. ' ' → logprob: -3.5299317836761475
    3. 's' → logprob: -8.904932022094727
    4. ' s' → logprob: -10.154932022094727
    5. 'len' → logprob: -12.904932022094727
    6. 'l' → logprob: -13.279932022094727
    7. ' len' → logprob: -13.529932022094727
    8. ' l' → logprob: -14.404932022094727
    9. 'n' → logprob: -16.654932022094727
    10. ' n' → logprob: -17.029932022094727

Token 79: '(l' (ID: 4179)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.09610096365213394
    2. '(l' → logprob: -2.4711010456085205
    3. '(' → logprob: -4.971100807189941
    4. '(s' → logprob: -8.596100807189941
    5. '(n' → logprob: -12.721100807189941
    6. 'l' → logprob: -13.221100807189941
    7. '(count' → logprob: -13.471100807189941
    8. 'a' → logprob: -13.721100807189941
    9. '(
' → logprob: -14.096100807189941
    10. '(ll' → logprob: -14.096100807189941

Token 80: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.34868982434272766
    2. ')' → logprob: -1.2236897945404053
    3. ')
' → logprob: -8.848690032958984
    4. ')

' → logprob: -9.848690032958984
    5. ' )
' → logprob: -10.598690032958984
    6. ' )' → logprob: -11.973690032958984
    7. '	' → logprob: -13.098690032958984
    8. '+' → logprob: -13.473690032958984
    9. '*' → logprob: -13.723690032958984
    10. ')n' → logprob: -13.973690032958984

Token 81: '	a' (ID: 24292)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.033695150166749954
    2. '<|end|>' → logprob: -4.533695220947266
    3. ' a' → logprob: -5.033695220947266
    4. '	a' → logprob: -5.658695220947266
    5. 'n' → logprob: -5.908695220947266
    6. '
' → logprob: -6.283695220947266
    7. '	
' → logprob: -6.408695220947266
    8. ' for' → logprob: -6.533695220947266
    9. ' ' → logprob: -6.783695220947266
    10. '<|end|>' → logprob: -7.408695220947266

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133945167064667
    2. '=' → logprob: -1.313394546508789
    3. '[:]' → logprob: -9.313394546508789
    4. ',' → logprob: -10.813394546508789
    5. '[' → logprob: -11.563394546508789
    6. ' ' → logprob: -13.063394546508789
    7. ')' → logprob: -14.063394546508789
    8. '=[]' → logprob: -14.063394546508789
    9. ' =[' → logprob: -14.063394546508789
    10. 's' → logprob: -14.188394546508789

Token 83: ' []
' (ID: 8911)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018187757581472397
    2. ' l' → logprob: -4.268187522888184
    3. '[' → logprob: -6.143187522888184
    4. '[l' → logprob: -7.393187522888184
    5. '[]' → logprob: -7.643187522888184
    6. ' [' → logprob: -8.143187522888184
    7. 'list' → logprob: -8.143187522888184
    8. '	l' → logprob: -10.143187522888184
    9. ' []' → logprob: -10.143187522888184
    10. ' ' → logprob: -10.393187522888184

Token 84: '	a' (ID: 24292)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24119041860103607
    2. 'l' → logprob: -1.7411904335021973
    3. ' for' → logprob: -3.4911904335021973
    4. 'a' → logprob: -5.116190433502197
    5. '	for' → logprob: -6.491190433502197
    6. '<|end|>' → logprob: -8.116189956665039
    7. '	l' → logprob: -8.741189956665039
    8. 'n' → logprob: -8.991189956665039
    9. 'while' → logprob: -9.241189956665039
    10. ' l' → logprob: -9.241189956665039

Token 85: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.20928069949150085
    2. '=' → logprob: -1.9592807292938232
    3. '+=' → logprob: -3.2092807292938232
    4. ' =' → logprob: -5.959280490875244
    5. '.' → logprob: -6.209280490875244
    6. ' +=' → logprob: -6.709280490875244
    7. 'l' → logprob: -7.584280490875244
    8. '+' → logprob: -7.959280490875244
    9. '[:]' → logprob: -8.459280967712402
    10. '.append' → logprob: -8.709280967712402

Token 86: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00010664248111424968
    2. '([' → logprob: -9.875106811523438
    3. '(' → logprob: -10.000106811523438
    4. '(list' → logprob: -12.500106811523438
    5. '((' → logprob: -12.625106811523438
    6. 'l' → logprob: -14.250106811523438
    7. '(i' → logprob: -15.250106811523438
    8. ' (' → logprob: -15.250106811523438
    9. '	l' → logprob: -15.750106811523438
    10. '(x' → logprob: -15.750106811523438

Token 87: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02353370375931263
    2. ')' → logprob: -3.773533821105957
    3. ')
' → logprob: -8.273533821105957
    4. '	l' → logprob: -11.273533821105957
    5. ')

' → logprob: -11.648533821105957
    6. ',l' → logprob: -12.898533821105957
    7. ')n' → logprob: -13.773533821105957
    8. '
' → logprob: -14.023533821105957
    9. '[l' → logprob: -14.023533821105957
    10. ' )
' → logprob: -14.023533821105957

Token 88: '	l' (ID: 15077)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.005396088119596243
    2. '	l' → logprob: -5.880395889282227
    3. '<|end|>' → logprob: -6.380395889282227
    4. ' l' → logprob: -7.130395889282227
    5. ' ' → logprob: -10.630395889282227
    6. '[l' → logprob: -11.380395889282227
    7. '
' → logprob: -11.755395889282227
    8. ' 
' → logprob: -12.005395889282227
    9. '	
' → logprob: -12.255395889282227
    10. ',l' → logprob: -12.380395889282227

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0870978906750679
    2. '=[]' → logprob: -2.9620978832244873
    3. '.clear' → logprob: -3.4620978832244873
    4. '[:]' → logprob: -8.212098121643066
    5. ' =' → logprob: -10.462098121643066
    6. '=[]
' → logprob: -10.962098121643066
    7. 'clear' → logprob: -12.087098121643066
    8. '={}' → logprob: -12.462098121643066
    9. '.=' → logprob: -12.587098121643066
    10. '.' → logprob: -13.462098121643066

Token 90: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00863217655569315
    2. ' []' → logprob: -4.758632183074951
    3. '[]
' → logprob: -11.133631706237793
    4. '[' → logprob: -13.633631706237793
    5. '[]

' → logprob: -14.258631706237793
    6. ' ' → logprob: -14.508631706237793
    7. '[]}' → logprob: -15.133631706237793
    8. '[]>' → logprob: -15.758631706237793
    9. ' []
' → logprob: -16.75863265991211
    10. '[],' → logprob: -16.75863265991211

Token 91: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.023455223068594933
    2. ' count' → logprob: -3.7734551429748535
    3. '(count' → logprob: -8.523455619812012
    4. 'str' → logprob: -11.773455619812012
    5. 'int' → logprob: -14.398455619812012
    6. 's' → logprob: -14.648455619812012
    7. '[count' → logprob: -15.273455619812012
    8. ' str' → logprob: -15.273455619812012
    9. '	count' → logprob: -15.273455619812012
    10. 'c' → logprob: -15.398455619812012


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 64
Précision stricte (1ère position): 30.00%
Précision adaptée (1ère position): 30.00%
Précision (top 10): 71.11%
================================================================================
