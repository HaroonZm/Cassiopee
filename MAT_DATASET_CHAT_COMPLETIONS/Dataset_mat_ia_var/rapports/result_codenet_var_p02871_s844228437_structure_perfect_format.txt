================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
out = open('out.txt', 'a')

class graph:
    INF = 10000
    G = []
    Path = []
    E = 0
    V = 0

    def __init__(self):
        dataRaw = raw_input()
        raw = dataRaw.strip().split(' ')
        self.E = int(raw[0]) + 1
        self.V = int(raw[1])
        self.G = [[self.INF] * (self.E) for i in range(self.E)]
        self.Path = [[0] * (self.E) for i in range(self.E)]
        # check unicom component
        def find(root, parent):
            while root != parent[root]:
                parent[root] = parent[parent[root]]
                root = parent[root]
            return root

        def connect(u, v, parent):
            rv = find(v, parent)
            parent[u] = rv

        for _ in range(0, self.V):
            dataRaw = raw_input()
            raw = dataRaw.strip().split(' ')
            i = int(raw[0])
            j = int(raw[1])
            k = int(raw[2])
            self.G[i][j] = k
            self.G[j][i] = k

        for i in range(1, self.E):
            self.G[i][i] = 0

        for i in range(0, self.E):
            for j in range(0, self.E):
                for k in range(0, self.E):
                    if self.G[i][k] + self.G[k][j] < self.G[i][j]:
                        self.G[i][j] = self.G[i][k] + self.G[k][j]
                        self.Path[i][j] = k

    def shortPath(self, i, j):
        path = []
        def core(i, j, path):
            if self.Path[i][j] == 0:
                if len(path) == 0 or path[-1] != i:
                    path.append(i)
                path.append(j)
                return
            else:
                core(i, self.Path[i][j], path)
                core(self.Path[i][j], j, path)
        core(i, j, path)
        path.pop(0)
        return path

class driver:
    plan = []
    order = set()
    location = 1
    nextSegmentLeftTime = 0
    target = 1

    def __init__(self, g):
        self.map = g

    def route(self):
        if len(self.order) == 0 and len(self.plan) == 0:
            self.order.add(1)
        last = self.location
        if len(self.plan) > 0:
            last = self.plan[-1]
        if len(self.order) > 0:
            for i in self.order:
                path = self.map.shortPath(last, i)
                for j in path:
                    self.plan.append(j)
                last = i
            self.order = set()
        if len(self.plan) > 0:
            self.target = self.plan[0]
            self.nextSegmentLeftTime = self.map.G[self.location][self.target]
            self.plan.pop(0)

    def move(self):
        if self.location == self.target:
            print(-1)
            return
        assert(self.nextSegmentLeftTime > 0)
        self.nextSegmentLeftTime = self.nextSegmentLeftTime - 1
        print(self.target)
        if self.nextSegmentLeftTime == 0:
            self.location = self.target

    def onRoute(self):
        return self.nextSegmentLeftTime != 0

class shop:
    order = set()

class timer:
    orders = []
    times = []
    orderIndex = 0
    currTime = 0
    Tmax = 0

    def __init__(self):
        Tmax = raw_input()
        self.Tmax = int(Tmax)
        for i in range(0, self.Tmax):
            n = raw_input()
            n = int(n)
            if n == 0:
                continue
            else:
                dataRaw = raw_input()
                data = dataRaw.strip().split(' ')
                self.times.append(i + 1)
                self.orders.append(int(data[1]))

    def run(self, shop, driver):
        while self.currTime < self.Tmax:
            self.currTime = self.currTime + 1
            # add goods
            if self.orderIndex < len(self.times) and self.currTime == self.times[self.orderIndex]:
                if driver.map.G[1][self.orders[self.orderIndex]] < 10000:
                    shop.order.add(self.orders[self.orderIndex])
                self.orderIndex = self.orderIndex + 1
            if driver.onRoute() == False and driver.location == 1:
                driver.order = driver.order | shop.order
                shop.order = set()
            if driver.onRoute() == False:
                driver.route()
            driver.move()
            '''
            out.write("status after : ")
            out.write("shop status : " + str(shop.order))
            out.write("driver status : ")
            out.write("order : " + str(driver.order),)
            out.write("| plan : " + str(driver.plan),)
            out.write("| on route : " + str(driver.onRoute()))
            out.write("| location : " + str(driver.location),)
            out.write("| target : " + str(driver.target),)
            out.write("| left time : " + str(driver.nextSegmentLeftTime) + '\n')
            out.write("================================\n")
            '''

if __name__ == "__main__":
    shop = shop()
    g = graph()
    driver = driver(g)
    ti = timer()
    ti.run(shop, driver)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'out' (ID: 468)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' open' (ID: 2494)
  → Token d'amorce (pas de prédiction)

Token 3: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018983196059707552
    2. '('' → logprob: -9.375189781188965
    3. '("("' → logprob: -9.625189781188965
    4. ' (' → logprob: -11.125189781188965
    5. ''' → logprob: -11.250189781188965
    6. '(
' → logprob: -12.625189781188965
    7. '"' → logprob: -13.000189781188965
    8. '`' → logprob: -14.125189781188965
    9. '```' → logprob: -14.250189781188965
    10. '(

' → logprob: -14.250189781188965

Token 4: 'out' (ID: 468)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.022050458937883377
    2. 'file' → logprob: -4.522050380706787
    3. 'filename' → logprob: -5.272050380706787
    4. 'data' → logprob: -6.022050380706787
    5. 'outfile' → logprob: -6.897050380706787
    6. 'out' → logprob: -6.897050380706787
    7. ''' → logprob: -7.397050380706787
    8. 'test' → logprob: -8.397050857543945
    9. 'example' → logprob: -8.772050857543945
    10. 'input' → logprob: -9.397050857543945

Token 5: '.txt' (ID: 7186)
  Prédit: '.txt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.txt' → logprob: -0.033643510192632675
    2. '',' → logprob: -3.6586434841156006
    3. '.csv' → logprob: -5.40864372253418
    4. '')' → logprob: -7.03364372253418
    5. '.out' → logprob: -7.65864372253418
    6. '.py' → logprob: -8.15864372253418
    7. '.t' → logprob: -8.15864372253418
    8. '.' → logprob: -8.15864372253418
    9. '','' → logprob: -8.65864372253418
    10. '','.' → logprob: -9.03364372253418

Token 6: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.03753434494137764
    2. ''' → logprob: -3.787534236907959
    3. '')' → logprob: -4.787534236907959
    4. '','' → logprob: -5.162534236907959
    5. ')' → logprob: -10.037534713745117
    6. '',"' → logprob: -10.287534713745117
    7. ')',' → logprob: -11.537534713745117
    8. '',
' → logprob: -11.662534713745117
    9. '"',' → logprob: -12.162534713745117
    10. '",'' → logprob: -12.787534713745117

Token 7: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17688624560832977
    2. ''w' → logprob: -2.0518863201141357
    3. ' '' → logprob: -3.8018863201141357
    4. ''a' → logprob: -5.301886081695557
    5. '"' → logprob: -6.426886081695557
    6. ')' → logprob: -6.551886081695557
    7. ''r' → logprob: -6.676886081695557
    8. 'w' → logprob: -7.176886081695557
    9. ' w' → logprob: -8.176886558532715
    10. ''t' → logprob: -8.926886558532715

Token 8: 'a' (ID: 64)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.558399319241289e-05
    2. 'a' → logprob: -10.875025749206543
    3. 'wt' → logprob: -12.625025749206543
    4. ''w' → logprob: -13.125025749206543
    5. 'r' → logprob: -14.125025749206543
    6. ' w' → logprob: -14.875025749206543
    7. 'wb' → logprob: -15.375025749206543
    8. '')' → logprob: -17.125024795532227
    9. ''' → logprob: -18.250024795532227
    10. ''a' → logprob: -19.000024795532227

Token 9: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0003076950670219958
    2. 'b' → logprob: -8.5003080368042
    3. ''' → logprob: -9.7503080368042
    4. '',' → logprob: -10.6253080368042
    5. ')' → logprob: -11.3753080368042
    6. 'w' → logprob: -12.8753080368042
    7. '').' → logprob: -13.1253080368042
    8. 't' → logprob: -13.3753080368042
    9. '+')' → logprob: -13.5003080368042
    10. ''b' → logprob: -14.7503080368042

Token 10: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2071712464094162
    2. '.write' → logprob: -2.3321712017059326
    3. '\n' → logprob: -2.8321712017059326
    4. ')' → logprob: -3.9571712017059326
    5. '\' → logprob: -5.707171440124512
    6. '```' → logprob: -6.082171440124512
    7. 'w' → logprob: -6.457171440124512
    8. ',' → logprob: -6.582171440124512
    9. 'write' → logprob: -6.832171440124512
    10. '
' → logprob: -7.207171440124512

Token 11: ' graph' (ID: 7465)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2889016270637512
    2. ' My' → logprob: -1.4139015674591064
    3. ' Space' → logprob: -5.9139018058776855
    4. ' User' → logprob: -7.0389018058776855
    5. ' A' → logprob: -7.5389018058776855
    6. ' Writer' → logprob: -8.288901329040527
    7. ' Processor' → logprob: -8.288901329040527
    8. ' Data' → logprob: -8.538901329040527
    9. ' Programmer' → logprob: -8.663901329040527
    10. ' File' → logprob: -8.663901329040527

Token 12: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026623390149325132
    2. ' :' → logprob: -6.627662181854248
    3. '(' → logprob: -6.752662181854248
    4. '():' → logprob: -9.627662658691406
    5. ':
' → logprob: -10.377662658691406
    6. '):' → logprob: -10.877662658691406
    7. '(Graph' → logprob: -10.877662658691406
    8. '(:' → logprob: -12.127662658691406
    9. '>:' → logprob: -12.252662658691406
    10. '.' → logprob: -12.752662658691406

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0332121849060059
    2. ' ' → logprob: -1.4082121849060059
    3. ':' → logprob: -1.6582121849060059
    4. '(' → logprob: -2.783212184906006
    5. '<|end|>' → logprob: -3.158212184906006
    6. ')' → logprob: -3.533212184906006
    7. '  ' → logprob: -4.033212184906006
    8. '```' → logprob: -4.158212184906006
    9. '    ' → logprob: -4.908212184906006
    10. ' (' → logprob: -5.158212184906006

Token 14: ' INF' (ID: 69196)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.19779078662395477
    2. 'def' → logprob: -2.5727908611297607
    3. '   ' → logprob: -2.6977908611297607
    4. ' ' → logprob: -4.072790622711182
    5. '    ' → logprob: -4.947790622711182
    6. '_' → logprob: -5.072790622711182
    7. '  ' → logprob: -7.197790622711182
    8. '(n' → logprob: -7.322790622711182
    9. ' (' → logprob: -7.447790622711182
    10. '(' → logprob: -7.447790622711182

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006154646631330252
    2. '=' → logprob: -5.131154537200928
    3. '  ' → logprob: -9.256155014038086
    4. '   ' → logprob: -9.381155014038086
    5. ' ' → logprob: -10.881155014038086
    6. '_' → logprob: -11.506155014038086
    7. ',' → logprob: -12.756155014038086
    8. ' ='' → logprob: -12.756155014038086
    9. ')' → logprob: -12.881155014038086
    10. '    ' → logprob: -13.256155014038086

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34210777282714844
    2. ' float' → logprob: -1.7171077728271484
    3. 'float' → logprob: -2.7171077728271484
    4. '10' → logprob: -3.5921077728271484
    5. '100' → logprob: -4.342107772827148
    6. '999' → logprob: -6.592107772827148
    7. ' int' → logprob: -7.467107772827148
    8. 'int' → logprob: -7.467107772827148
    9. '1' → logprob: -7.842107772827148
    10. '  ' → logprob: -9.467107772827148

Token 17: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0647389888763428
    2. 'float' → logprob: -1.4397389888763428
    3. '100' → logprob: -1.5647389888763428
    4. '999' → logprob: -2.0647389888763428
    5. ' ' → logprob: -3.4397389888763428
    6. 'int' → logprob: -3.5647389888763428
    7. ' float' → logprob: -4.689739227294922
    8. '1' → logprob: -5.189739227294922
    9. '987' → logprob: -7.064739227294922
    10. '99' → logprob: -7.064739227294922

Token 18: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.000830355507787317
    2. '00' → logprob: -7.250830173492432
    3. '0' → logprob: -9.25083065032959
    4. '_' → logprob: -11.00083065032959
    5. '**' → logprob: -12.00083065032959
    6. ')' → logprob: -14.37583065032959
    7. '001' → logprob: -15.37583065032959
    8. '+' → logprob: -16.125829696655273
    9. ' **' → logprob: -16.125829696655273
    10. ' ' → logprob: -16.500829696655273

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6620583534240723
    2. '   ' → logprob: -1.9120583534240723
    3. ':' → logprob: -2.0370583534240723
    4. '    
' → logprob: -2.4120583534240723
    5. '    ' → logprob: -3.0370583534240723
    6. ' ' → logprob: -4.287058353424072
    7. '<|end|>' → logprob: -4.662058353424072
    8. '  ' → logprob: -4.787058353424072
    9. ' 
' → logprob: -5.037058353424072
    10. '\n' → logprob: -5.287058353424072

Token 20: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1832377314567566
    2. ':' → logprob: -2.4332377910614014
    3. '<|end|>' → logprob: -3.4332377910614014
    4. '   ' → logprob: -3.9332377910614014
    5. '    
' → logprob: -4.058237552642822
    6. ' 
' → logprob: -6.433237552642822
    7. '<|end|>' → logprob: -6.433237552642822
    8. '  ' → logprob: -6.808237552642822
    9. 'def' → logprob: -6.933237552642822
    10. ' ' → logprob: -7.058237552642822

Token 21: ' G' (ID: 499)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20762744545936584
    2. '   ' → logprob: -2.957627534866333
    3. 'def' → logprob: -3.332627534866333
    4. ' :' → logprob: -3.707627534866333
    5. '
' → logprob: -3.707627534866333
    6. ' def' → logprob: -4.207627296447754
    7. '    ' → logprob: -4.457627296447754
    8. '    
' → logprob: -4.582627296447754
    9. ' ' → logprob: -4.957627296447754
    10. ':def' → logprob: -6.707627296447754

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2895294427871704
    2. '=' → logprob: -1.5395294427871704
    3. 'raph' → logprob: -3.539529323577881
    4. '   ' → logprob: -5.664529323577881
    5. ' ' → logprob: -6.664529323577881
    6. '[' → logprob: -7.414529323577881
    7. '=[' → logprob: -7.789529323577881
    8. '  ' → logprob: -7.789529323577881
    9. ' =[' → logprob: -8.039529800415039
    10. '=[]' → logprob: -8.164529800415039

Token 23: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6698062419891357
    2. '[]' → logprob: -1.1698062419891357
    3. '{}' → logprob: -2.9198062419891357
    4. '[' → logprob: -3.2948062419891357
    5. ' {}' → logprob: -3.2948062419891357
    6. ' [' → logprob: -3.5448062419891357
    7. ' [[' → logprob: -4.419806480407715
    8. '[[' → logprob: -5.794806480407715
    9. ' [[]' → logprob: -6.169806480407715
    10. ' ' → logprob: -6.669806480407715

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12702059745788574
    2. 'def' → logprob: -3.3770205974578857
    3. ' ' → logprob: -3.5020205974578857
    4. '    
' → logprob: -4.127020835876465
    5. ' def' → logprob: -4.252020835876465
    6. '    ' → logprob: -4.377020835876465
    7. '  ' → logprob: -5.377020835876465
    8. '<|end|>' → logprob: -5.627020835876465
    9. '	def' → logprob: -7.752020835876465
    10. ')' → logprob: -7.752020835876465

Token 25: ' Path' (ID: 14027)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04914465546607971
    2. 'def' → logprob: -4.049144744873047
    3. '    
' → logprob: -4.424144744873047
    4. '
' → logprob: -5.424144744873047
    5. ' ' → logprob: -5.424144744873047
    6. '    ' → logprob: -5.799144744873047
    7. '<|end|>' → logprob: -6.049144744873047
    8. ' def' → logprob: -6.674144744873047
    9. '  ' → logprob: -6.924144744873047
    10. 'n' → logprob: -8.049144744873047

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5801926851272583
    2. ' =' → logprob: -0.8301926851272583
    3. '=[]' → logprob: -6.705192565917969
    4. '[]' → logprob: -7.205192565917969
    5. ' ' → logprob: -7.580192565917969
    6. '_' → logprob: -7.955192565917969
    7. '   ' → logprob: -8.080192565917969
    8. ',' → logprob: -8.205192565917969
    9. '[' → logprob: -8.705192565917969
    10. '  ' → logprob: -8.830192565917969

Token 27: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.22619588673114777
    2. ' []' → logprob: -1.6011959314346313
    3. '[' → logprob: -8.3511962890625
    4. '[]
' → logprob: -8.4761962890625
    5. '[][]' → logprob: -9.3511962890625
    6. '0' → logprob: -9.8511962890625
    7. ' ' → logprob: -9.9761962890625
    8. '[]}' → logprob: -10.2261962890625
    9. '{}' → logprob: -10.6011962890625
    10. '[[' → logprob: -11.2261962890625

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17532646656036377
    2. '    
' → logprob: -3.050326347351074
    3. '<|end|>' → logprob: -3.300326347351074
    4. '
' → logprob: -3.425326347351074
    5. 'def' → logprob: -3.550326347351074
    6. ' def' → logprob: -4.925326347351074
    7. '<|end|>' → logprob: -5.800326347351074
    8. ' 
' → logprob: -6.675326347351074
    9. '    ' → logprob: -7.175326347351074
    10. ' ' → logprob: -7.800326347351074

Token 29: ' E' (ID: 457)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27401334047317505
    2. 'def' → logprob: -1.7740132808685303
    3. '    
' → logprob: -2.8990132808685303
    4. '
' → logprob: -5.274013519287109
    5. ' def' → logprob: -5.274013519287109
    6. ' 
' → logprob: -6.774013519287109
    7. '<|end|>' → logprob: -7.024013519287109
    8. '	def' → logprob: -7.649013519287109
    9. '    ' → logprob: -7.774013519287109
    10. 'n' → logprob: -8.02401351928711

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8322824835777283
    2. ' =' → logprob: -1.082282543182373
    3. 'd' → logprob: -2.332282543182373
    4. '=[]' → logprob: -2.332282543182373
    5. 'D' → logprob: -4.832282543182373
    6. 'dge' → logprob: -4.957282543182373
    7. '[]' → logprob: -5.207282543182373
    8. '  ' → logprob: -5.582282543182373
    9. ',' → logprob: -6.957282543182373
    10. ' ' → logprob: -7.082282543182373

Token 31: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.29129862785339355
    2. '0' → logprob: -1.5412986278533936
    3. ' []' → logprob: -3.7912986278533936
    4. ' ' → logprob: -4.416298866271973
    5. '{}' → logprob: -6.791298866271973
    6. '[]
' → logprob: -7.541298866271973
    7. '  ' → logprob: -7.916298866271973
    8. '10' → logprob: -8.416298866271973
    9. '   ' → logprob: -8.541298866271973
    10. '[' → logprob: -8.666298866271973

Token 32: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.023199934512376785
    2. '0' → logprob: -4.148200035095215
    3. '{}' → logprob: -5.273200035095215
    4. '[' → logprob: -7.023200035095215
    5. ' []' → logprob: -7.773200035095215
    6. '[]
' → logprob: -8.898200035095215
    7. '[]}' → logprob: -9.273200035095215
    8. '[int' → logprob: -9.398200035095215
    9. 'int' → logprob: -9.523200035095215
    10. '[][]' → logprob: -10.023200035095215

Token 33: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05279519781470299
    2. '    
' → logprob: -3.927795171737671
    3. 'def' → logprob: -4.30279541015625
    4. '
' → logprob: -4.30279541015625
    5. ' def' → logprob: -6.30279541015625
    6. '    ' → logprob: -6.92779541015625
    7. '	def' → logprob: -7.67779541015625
    8. '  ' → logprob: -8.55279541015625
    9. '	
' → logprob: -8.55279541015625
    10. 'n' → logprob: -8.67779541015625

Token 35: ' V' (ID: 631)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3585602939128876
    2. '   ' → logprob: -1.48356032371521
    3. ' def' → logprob: -2.60856032371521
    4. 'n' → logprob: -8.108560562133789
    5. '    ' → logprob: -8.733560562133789
    6. ' ' → logprob: -8.733560562133789
    7. '  ' → logprob: -9.483560562133789
    8. '	def' → logprob: -9.483560562133789
    9. '    
' → logprob: -10.358560562133789
    10. 'd' → logprob: -11.608560562133789

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889430224895477
    2. '=' → logprob: -2.5788943767547607
    3. ' ' → logprob: -13.07889461517334
    4. '  ' → logprob: -13.70389461517334
    5. '   ' → logprob: -14.07889461517334
    6. ' =
' → logprob: -15.45389461517334
    7. ',' → logprob: -16.203893661499023
    8. '=None' → logprob: -16.953893661499023
    9. '=int' → logprob: -17.078893661499023
    10. ' ,' → logprob: -17.078893661499023

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38702282309532166
    2. ' ' → logprob: -1.137022852897644
    3. '10' → logprob: -10.262022972106934
    4. '5' → logprob: -10.512022972106934
    5. '4' → logprob: -10.762022972106934
    6. ' []' → logprob: -11.387022972106934
    7. '[]' → logprob: -11.512022972106934
    8. 'int' → logprob: -11.762022972106934
    9. '  ' → logprob: -11.762022972106934
    10. '   ' → logprob: -12.137022972106934

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007585270795971155
    2. '5' → logprob: -7.750758647918701
    3. ' ' → logprob: -9.000758171081543
    4. '4' → logprob: -9.625758171081543
    5. '[]' → logprob: -10.125758171081543
    6. '10' → logprob: -10.500758171081543
    7. '6' → logprob: -10.500758171081543
    8. '100' → logprob: -11.125758171081543
    9. '7' → logprob: -11.875758171081543
    10. 'int' → logprob: -12.250758171081543

Token 39: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6156064867973328
    2. '   ' → logprob: -1.2406065464019775
    3. '<|end|>' → logprob: -2.4906065464019775
    4. '    
' → logprob: -3.6156065464019775
    5. ' ' → logprob: -3.8656065464019775
    6. 'def' → logprob: -4.365606307983398
    7. '<|end|>' → logprob: -4.865606307983398
    8. ' 
' → logprob: -5.615606307983398
    9. '    ' → logprob: -5.740606307983398
    10. ' def' → logprob: -5.865606307983398

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10401279479265213
    2. '    
' → logprob: -3.6040127277374268
    3. ' def' → logprob: -3.6040127277374268
    4. ' ' → logprob: -3.9790127277374268
    5. '
' → logprob: -4.729012966156006
    6. ' 
' → logprob: -5.104012966156006
    7. 'def' → logprob: -5.604012966156006
    8. '    ' → logprob: -5.854012966156006
    9. '	def' → logprob: -6.354012966156006
    10. '  ' → logprob: -7.729012966156006

Token 41: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18993358314037323
    2. 'def' (adapté à ' def') → logprob: -2.5649335384368896
    3. ' ' → logprob: -2.9399335384368896
    4. ' def' → logprob: -3.4399335384368896
    5. 'd' → logprob: -5.814933776855469
    6. '    ' → logprob: -5.939933776855469
    7. '    
' → logprob: -6.064933776855469
    8. '  ' → logprob: -6.439933776855469
    9. ' 
' → logprob: -7.814933776855469
    10. '
' → logprob: -8.189933776855469

Token 42: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00900829117745161
    2. '__' → logprob: -4.884008407592773
    3. ' ' → logprob: -7.259008407592773
    4. ' init' → logprob: -8.259008407592773
    5. ' ' → logprob: -8.759008407592773
    6. ' _' → logprob: -9.134008407592773
    7. '_' → logprob: -9.759008407592773
    8. ' add' → logprob: -9.884008407592773
    9. ' initialize' → logprob: -10.884008407592773
    10. '_init' → logprob: -11.134008407592773

Token 43: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.511406809295295e-06
    2. 'ini' → logprob: -12.250006675720215
    3. 'i' → logprob: -13.750006675720215
    4. 'in' → logprob: -14.500006675720215
    5. 'int' → logprob: -17.8750057220459
    6. 'inite' → logprob: -18.0000057220459
    7. 'innit' → logprob: -18.3750057220459
    8. 'inti' → logprob: -18.6250057220459
    9. ' init' → logprob: -19.3750057220459
    10. 'new' → logprob: -20.6250057220459

Token 44: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2982659339904785
    2. '(self' → logprob: -1.5482659339904785
    3. ' (' → logprob: -3.5482659339904785
    4. '<|end|>' → logprob: -4.2982659339904785
    5. 'self' → logprob: -6.5482659339904785
    6. ' ' → logprob: -8.04826545715332
    7. '(s' → logprob: -8.17326545715332
    8. '__(' → logprob: -8.29826545715332
    9. '<|end|>' → logprob: -8.67326545715332
    10. ')(' → logprob: -9.29826545715332

Token 45: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029760213568806648
    2. ' self' → logprob: -3.5297601222991943
    3. 's' → logprob: -11.779760360717773
    4. ')' → logprob: -14.154760360717773
    5. ' ' → logprob: -14.404760360717773
    6. '	self' → logprob: -15.529760360717773
    7. '(self' → logprob: -15.654760360717773
    8. ' )' → logprob: -15.904760360717773
    9. '   ' → logprob: -16.529760360717773
    10. ',self' → logprob: -16.904760360717773

Token 46: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.353408545255661
    2. ' ,' → logprob: -1.2284085750579834
    3. 'self' → logprob: -5.978408336639404
    4. ' ' → logprob: -6.853408336639404
    5. ',self' → logprob: -6.853408336639404
    6. ' self' → logprob: -8.978408813476562
    7. ' )' → logprob: -9.853408813476562
    8. ')' → logprob: -9.853408813476562
    9. ',s' → logprob: -10.103408813476562
    10. '  ' → logprob: -12.603408813476562

Token 47: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31333184242248535
    2. ' self' → logprob: -1.3133318424224854
    3. '   ' → logprob: -10.188331604003906
    4. '       ' → logprob: -11.188331604003906
    5. '	self' → logprob: -11.938331604003906
    6. ' ' → logprob: -12.438331604003906
    7. 's' → logprob: -12.813331604003906
    8. 'n' → logprob: -13.563331604003906
    9. '(self' → logprob: -13.563331604003906
    10. '    ' → logprob: -13.813331604003906

Token 48: ' data' (ID: 1238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5216635465621948
    2. ' self' → logprob: -1.5216635465621948
    3. ' pass' → logprob: -2.0216636657714844
    4. 'self' → logprob: -4.146663665771484
    5. ' ' → logprob: -4.646663665771484
    6. '   ' → logprob: -4.771663665771484
    7. '    ' → logprob: -5.646663665771484
    8. ' ' → logprob: -5.771663665771484
    9. '	pass' → logprob: -5.771663665771484
    10. 'pass' → logprob: -5.896663665771484

Token 49: 'Raw' (ID: 21586)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3880489468574524
    2. '=' → logprob: -1.1380488872528076
    3. '=[]' → logprob: -7.763049125671387
    4. '=open' → logprob: -8.513049125671387
    5. '   ' → logprob: -9.263049125671387
    6. 'file' → logprob: -9.763049125671387
    7. '=input' → logprob: -10.013049125671387
    8. '_input' → logprob: -10.263049125671387
    9. '[' → logprob: -10.263049125671387
    10. '[]' → logprob: -10.263049125671387

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02757628820836544
    2. '=' → logprob: -3.777576208114624
    3. '[' → logprob: -5.652576446533203
    4. '   ' → logprob: -8.277576446533203
    5. ' ' → logprob: -8.527576446533203
    6. '[]' → logprob: -8.777576446533203
    7. '.' → logprob: -10.277576446533203
    8. '[:]' → logprob: -10.527576446533203
    9. '    ' → logprob: -10.902576446533203
    10. '()' → logprob: -10.902576446533203

Token 51: ' raw' (ID: 11428)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6452823281288147
    2. 'open' → logprob: -1.39528226852417
    3. ' input' → logprob: -2.02028226852417
    4. '[]' → logprob: -3.02028226852417
    5. ' open' → logprob: -3.39528226852417
    6. 'list' → logprob: -5.14528226852417
    7. ' []' → logprob: -6.02028226852417
    8. '[' → logprob: -6.89528226852417
    9. '[input' → logprob: -7.14528226852417
    10. ' list' → logprob: -7.39528226852417

Token 52: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.031019439920783043
    2. '_' → logprob: -3.656019449234009
    3. '_data' → logprob: -5.78101921081543
    4. 'data' → logprob: -6.90601921081543
    5. '_in' → logprob: -8.40601921081543
    6. 'input' → logprob: -8.90601921081543
    7. ' _' → logprob: -9.40601921081543
    8. 'Input' → logprob: -9.78101921081543
    9. '__' → logprob: -10.28101921081543
    10. 'in' → logprob: -10.65601921081543

Token 53: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.49800586700439453
    2. '()' → logprob: -1.7480058670043945
    3. '(' → logprob: -1.8730058670043945
    4. '("("' → logprob: -2.9980058670043945
    5. '("' → logprob: -4.4980058670043945
    6. '("(' → logprob: -6.6230058670043945
    7. '("")' → logprob: -6.8730058670043945
    8. '(">' → logprob: -7.7480058670043945
    9. '('(' → logprob: -7.7480058670043945
    10. ''' → logprob: -10.623005867004395

Token 54: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4054429233074188
    2. '<|end|>' → logprob: -2.030442953109741
    3. '.split' → logprob: -3.030442953109741
    4. ' ' → logprob: -3.155442953109741
    5. '().' → logprob: -3.655442953109741
    6. ')' → logprob: -4.155442714691162
    7. '       ' → logprob: -4.280442714691162
    8. '.' → logprob: -4.405442714691162
    9. '<|end|>' → logprob: -4.530442714691162
    10. '(' → logprob: -5.280442714691162

Token 55: ' raw' (ID: 11428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6125959157943726
    2. '.split' → logprob: -1.3625959157943726
    3. '.' → logprob: -2.362596035003662
    4. ' .' → logprob: -2.612596035003662
    5. '<|end|>' → logprob: -5.237596035003662
    6. '()' → logprob: -5.487596035003662
    7. ')' → logprob: -5.862596035003662
    8. '(' → logprob: -6.237596035003662
    9. ' )' → logprob: -6.362596035003662
    10. '.strip' → logprob: -6.362596035003662

Token 56: ' =' (ID: 314)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.4142896234989166
    2. '_' → logprob: -1.5392895936965942
    3. '()' → logprob: -3.289289712905884
    4. '().' → logprob: -3.914289712905884
    5. '_split' → logprob: -4.414289474487305
    6. '.' → logprob: -4.914289474487305
    7. '_lines' → logprob: -4.914289474487305
    8. 'data' → logprob: -4.914289474487305
    9. ' =' → logprob: -5.164289474487305
    10. '.split' → logprob: -5.289289474487305

Token 57: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.09770677238702774
    2. 'data' → logprob: -2.4727067947387695
    3. ' list' → logprob: -5.0977067947387695
    4. ' map' → logprob: -6.9727067947387695
    5. ' ' → logprob: -7.5977067947387695
    6. ' [' → logprob: -8.09770679473877
    7. ' []' → logprob: -8.34770679473877
    8. 'list' → logprob: -8.47270679473877
    9. '[' → logprob: -8.97270679473877
    10. ' self' → logprob: -9.34770679473877

Token 58: 'Raw' (ID: 21586)
  Prédit: 'Raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Raw' → logprob: -0.013687511906027794
    2. '()' → logprob: -5.013687610626221
    3. '().' → logprob: -6.263687610626221
    4. '[' → logprob: -6.388687610626221
    5. ' =' → logprob: -7.138687610626221
    6. '.split' → logprob: -7.263687610626221
    7. ')' → logprob: -7.888687610626221
    8. '[:]' → logprob: -8.013687133789062
    9. '_raw' → logprob: -8.763687133789062
    10. '.strip' → logprob: -8.888687133789062

Token 59: '.strip' (ID: 40613)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.20882050693035126
    2. '.' → logprob: -1.7088204622268677
    3. '.strip' → logprob: -5.208820343017578
    4. ' .' → logprob: -6.333820343017578
    5. '().' → logprob: -10.083820343017578
    6. '.rstrip' → logprob: -10.333820343017578
    7. '.readline' → logprob: -10.458820343017578
    8. '.replace' → logprob: -11.958820343017578
    9. '.s' → logprob: -12.208820343017578
    10. ' =' → logprob: -12.333820343017578

Token 60: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7166110277175903
    2. '().' → logprob: -0.7166110277175903
    3. '('' → logprob: -4.466610908508301
    4. '(' → logprob: -4.466610908508301
    5. '("("' → logprob: -9.0916109085083
    6. '().'' → logprob: -10.3416109085083
    7. '()(' → logprob: -10.9666109085083
    8. ''' → logprob: -10.9666109085083
    9. '("' → logprob: -11.8416109085083
    10. '()['' → logprob: -11.9666109085083

Token 61: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.676981345459353e-06
    2. 'strip' → logprob: -13.250005722045898
    3. ' split' → logprob: -13.375005722045898
    4. 'sp' → logprob: -14.125005722045898
    5. 'spl' → logprob: -14.625005722045898
    6. 'rstrip' → logprob: -14.750005722045898
    7. 'replace' → logprob: -15.250005722045898
    8. '(split' → logprob: -15.625005722045898
    9. 'plit' → logprob: -16.2500057220459
    10. 's' → logprob: -16.3750057220459

Token 62: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04936311021447182
    2. '()' → logprob: -3.049363136291504
    3. '(' → logprob: -7.674363136291504
    4. '("("' → logprob: -8.674363136291504
    5. '("' → logprob: -9.174363136291504
    6. '(',' → logprob: -10.424363136291504
    7. '('.')' → logprob: -12.549363136291504
    8. '('\' → logprob: -14.424363136291504
    9. '()
' → logprob: -14.549363136291504
    10. '(('' → logprob: -15.049363136291504

Token 63: ' ')
' (ID: 49195)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.035085707902908325
    2. '(' → logprob: -4.410085678100586
    3. ' ')' → logprob: -4.660085678100586
    4. ' ' → logprob: -5.535085678100586
    5. ')' → logprob: -5.535085678100586
    6. '('' → logprob: -6.535085678100586
    7. ' ()' → logprob: -6.535085678100586
    8. ' )' → logprob: -6.785085678100586
    9. '')' → logprob: -7.910085678100586
    10. '())' → logprob: -8.785085678100586

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20392949879169464
    2. '<|end|>' → logprob: -2.3289294242858887
    3. 'n' → logprob: -3.4539294242858887
    4. 'self' → logprob: -3.7039294242858887
    5. '
' → logprob: -4.328929424285889
    6. '   ' → logprob: -4.953929424285889
    7. 'if' → logprob: -6.203929424285889
    8. ' ' → logprob: -6.828929424285889
    9. 'V' → logprob: -6.828929424285889
    10. '  ' → logprob: -7.078929424285889

Token 65: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0019398193107917905
    2. 's' → logprob: -7.25193977355957
    3. 'V' → logprob: -7.50193977355957
    4. 'n' → logprob: -8.12693977355957
    5. 'if' → logprob: -9.00193977355957
    6. 'v' → logprob: -9.25193977355957
    7. ' self' → logprob: -9.37693977355957
    8. '       ' → logprob: -11.00193977355957
    9. ' ' → logprob: -11.50193977355957
    10. '   ' → logprob: -11.75193977355957

Token 66: '.E' (ID: 9032)
  Prédit: '.V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.025949105620384216
    2. '.' → logprob: -3.775949001312256
    3. '.E' → logprob: -6.150949001312256
    4. '.G' → logprob: -8.025949478149414
    5. ' .' → logprob: -9.275949478149414
    6. '.T' → logprob: -10.525949478149414
    7. '.I' → logprob: -10.775949478149414
    8. '.В' → logprob: -10.900949478149414
    9. '.S' → logprob: -11.400949478149414
    10. 'V' → logprob: -12.025949478149414

Token 67: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31534117460250854
    2. ' =' → logprob: -1.3153412342071533
    3. '=int' → logprob: -6.190340995788574
    4. ',' → logprob: -10.690340995788574
    5. '=len' → logprob: -13.440340995788574
    6. ' ' → logprob: -13.690340995788574
    7. '<|end|>' → logprob: -14.315340995788574
    8. ' =
' → logprob: -14.815340995788574
    9. '=}' → logprob: -14.940340995788574
    10. ',int' → logprob: -15.065340995788574

Token 68: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023246990516781807
    2. ' int' → logprob: -3.773247003555298
    3. '	int' → logprob: -14.773246765136719
    4. '=int' → logprob: -15.148246765136719
    5. '(int' → logprob: -15.273246765136719
    6. ' ' → logprob: -15.523246765136719
    7. '[int' → logprob: -15.773246765136719
    8. 'in' → logprob: -16.02324676513672
    9. ']int' → logprob: -16.64824676513672
    10. '<int' → logprob: -17.39824676513672

Token 69: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.014273745007812977
    2. '(' → logprob: -4.264273643493652
    3. ' (' → logprob: -9.139273643493652
    4. '(
' → logprob: -14.014273643493652
    5. ' ' → logprob: -14.389273643493652
    6. ' raw' → logprob: -14.514273643493652
    7. 'raw' → logprob: -15.139273643493652
    8. '(

' → logprob: -15.139273643493652
    9. '(r' → logprob: -15.639273643493652
    10. '((' → logprob: -16.13927459716797

Token 70: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.000000953674316
    3. '0' → logprob: -15.125000953674316
    4. '[
' → logprob: -16.75
    5. '1' → logprob: -17.625
    6. ')' → logprob: -18.5
    7. '(' → logprob: -18.75
    8. ' ' → logprob: -18.875
    9. '   ' → logprob: -19.625
    10. '\[' → logprob: -21.375

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.125007629394531
    3. ''' → logprob: -13.750007629394531
    4. '[' → logprob: -14.000007629394531
    5. '1' → logprob: -15.125007629394531
    6. '   ' → logprob: -17.00000762939453
    7. ')' → logprob: -17.50000762939453
    8. '"' → logprob: -17.62500762939453
    9. '  ' → logprob: -18.37500762939453
    10. ']' → logprob: -19.25000762939453

Token 72: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0007573349867016077
    2. '])
' → logprob: -7.750757217407227
    3. ' ])' → logprob: -8.375757217407227
    4. ')' → logprob: -9.875757217407227
    5. ''])' → logprob: -10.500757217407227
    6. ']' → logprob: -11.500757217407227
    7. ']);' → logprob: -13.250757217407227
    8. '])

' → logprob: -13.625757217407227
    9. '[' → logprob: -13.750757217407227
    10. '],' → logprob: -14.625757217407227

Token 73: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09203977137804031
    2. ' ' → logprob: -2.5920398235321045
    3. '0' → logprob: -4.592039585113525
    4. ' int' → logprob: -6.467039585113525
    5. 'int' → logprob: -7.342039585113525
    6. ' self' → logprob: -7.717039585113525
    7. 'self' → logprob: -9.467040061950684
    8. '2' → logprob: -9.717040061950684
    9. '  ' → logprob: -10.092040061950684
    10. '    ' → logprob: -10.717040061950684

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03080296330153942
    2. ' ' → logprob: -4.4058027267456055
    3. '0' → logprob: -4.7808027267456055
    4. 'int' → logprob: -5.2808027267456055
    5. 'self' → logprob: -5.7808027267456055
    6. ' self' → logprob: -7.0308027267456055
    7. ' int' → logprob: -7.7808027267456055
    8. '  ' → logprob: -9.030802726745605
    9. '   ' → logprob: -9.905802726745605
    10. '2' → logprob: -10.280802726745605

Token 76: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.01844022236764431
    2. '.' → logprob: -4.018440246582031
    3. ' .' → logprob: -8.268440246582031
    4. 'V' → logprob: -11.893440246582031
    5. ' ' → logprob: -12.268440246582031
    6. '	V' → logprob: -12.768440246582031
    7. '.E' → logprob: -12.893440246582031
    8. '.G' → logprob: -12.893440246582031
    9. '.I' → logprob: -13.143440246582031
    10. '.VK' → logprob: -13.143440246582031

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048289015889168
    2. '=' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.511048316955566
    4. '=int' → logprob: -15.886048316955566
    5. '＝' → logprob: -17.01104736328125
    6. ' =
' → logprob: -17.01104736328125
    7. '<|end|>' → logprob: -17.88604736328125
    8. '	' → logprob: -18.13604736328125
    9. ' +=' → logprob: -18.13604736328125
    10. ')' → logprob: -18.51104736328125

Token 81: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0621267706155777
    2. 'int' → logprob: -2.812126874923706
    3. ' ' → logprob: -10.187127113342285
    4. '(int' → logprob: -10.687127113342285
    5. '[int' → logprob: -10.812127113342285
    6. '	int' → logprob: -11.062127113342285
    7. ' self' → logprob: -11.187127113342285
    8. '=int' → logprob: -11.312127113342285
    9. '0' → logprob: -11.562127113342285
    10. '<int' → logprob: -11.562127113342285

Token 82: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.002477677771821618
    2. '(' → logprob: -6.002477645874023
    3. ' (' → logprob: -13.752477645874023
    4. ' raw' → logprob: -14.377477645874023
    5. '(
' → logprob: -15.627477645874023
    6. '(

' → logprob: -16.502477645874023
    7. '(s' → logprob: -17.377477645874023
    8. '(r' → logprob: -17.627477645874023
    9. '(out' → logprob: -17.877477645874023
    10. '('' → logprob: -17.877477645874023

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003675133048091084
    2. 'raw' → logprob: -8.125367164611816
    3. ' [' → logprob: -10.750367164611816
    4. 'Raw' → logprob: -10.875367164611816
    5. '(raw' → logprob: -12.000367164611816
    6. '1' → logprob: -12.125367164611816
    7. ' raw' → logprob: -12.625367164611816
    8. '[
' → logprob: -13.125367164611816
    9. '_raw' → logprob: -13.375367164611816
    10. '	raw' → logprob: -13.375367164611816

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08360668271780014
    2. '0' → logprob: -3.083606719970703
    3. ' ' → logprob: -3.458606719970703
    4. '[' → logprob: -6.583606719970703
    5. '2' → logprob: -6.833606719970703
    6. '])' → logprob: -8.208606719970703
    7. ' [' → logprob: -10.083606719970703
    8. ']' → logprob: -10.583606719970703
    9. ')' → logprob: -11.021106719970703
    10. '   ' → logprob: -11.083606719970703

Token 85: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0037301299162209034
    2. ' ])' → logprob: -6.128730297088623
    3. ')' → logprob: -6.753730297088623
    4. ']' → logprob: -8.003729820251465
    5. '])
' → logprob: -11.003729820251465
    6. ' )' → logprob: -11.253729820251465
    7. '])]' → logprob: -12.878729820251465
    8. ')])' → logprob: -13.378729820251465
    9. ''])' → logprob: -13.503729820251465
    10. ' ]' → logprob: -13.503729820251465

Token 86: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17532235383987427
    2. '<|end|>' → logprob: -1.9253222942352295
    3. '       ' → logprob: -4.800322532653809
    4. '\n' → logprob: -6.300322532653809
    5. ' 
' → logprob: -6.925322532653809
    6. '   ' → logprob: -6.925322532653809
    7. '<|end|>' → logprob: -7.425322532653809
    8. ' ' → logprob: -7.550322532653809
    9. '  
' → logprob: -8.300322532653809
    10. '	' → logprob: -8.675322532653809

Token 87: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10493069142103195
    2. '       ' → logprob: -2.4799306392669678
    3. 'self' (adapté à ' self') → logprob: -5.354930877685547
    4. '<|end|>' → logprob: -5.604930877685547
    5. ' for' → logprob: -5.979930877685547
    6. ' self' → logprob: -6.979930877685547
    7. 'for' → logprob: -7.104930877685547
    8. '   ' → logprob: -7.604930877685547
    9. '	' → logprob: -7.729930877685547
    10. ' ' → logprob: -7.979930877685547

Token 88: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.05923089012503624
    2. '.' → logprob: -2.9342308044433594
    3. ' .' → logprob: -5.559230804443359
    4. '.
' → logprob: -8.93423080444336
    5. 'G' → logprob: -9.05923080444336
    6. '.V' → logprob: -9.18423080444336
    7. '
' → logprob: -10.55923080444336
    8. ' ' → logprob: -10.80923080444336
    9. 'n' → logprob: -11.43423080444336
    10. '.I' → logprob: -11.43423080444336

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023482143878937
    2. '=' → logprob: -2.3502347469329834
    3. ' =[' → logprob: -11.725234985351562
    4. '.append' → logprob: -11.850234985351562
    5. '=[]' → logprob: -12.225234985351562
    6. '[:]' → logprob: -13.100234985351562
    7. ' ' → logprob: -13.475234985351562
    8. '=[' → logprob: -13.975234985351562
    9. '=[[' → logprob: -13.975234985351562
    10. '[' → logprob: -14.600234985351562

Token 90: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.2577362358570099
    2. ' [[' → logprob: -1.6327362060546875
    3. '[' → logprob: -3.5077362060546875
    4. ' [' → logprob: -6.7577362060546875
    5. ' [[]' → logprob: -7.6327362060546875
    6. '[['' → logprob: -9.132736206054688
    7. '[]' → logprob: -9.632736206054688
    8. '([[' → logprob: -12.257736206054688
    9. ' ' → logprob: -13.007736206054688
    10. ' []' → logprob: -13.007736206054688

Token 91: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09000811725854874
    2. '0' → logprob: -2.465008020401001
    3. 'graph' → logprob: -7.46500825881958
    4. ' self' → logprob: -8.090007781982422
    5. ' ' → logprob: -10.215007781982422
    6. '100' → logprob: -10.465007781982422
    7. 'Graph' → logprob: -10.840007781982422
    8. '   ' → logprob: -10.965007781982422
    9. '	self' → logprob: -11.715007781982422
    10. '999' → logprob: -11.715007781982422

Token 92: '.IN' (ID: 20931)
  Prédit: '.IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.IN' → logprob: -0.004851480480283499
    2. '.' → logprob: -5.879851341247559
    3. 'INF' → logprob: -6.379851341247559
    4. ' .' → logprob: -8.379851341247559
    5. '.In' → logprob: -9.504851341247559
    6. '.I' → logprob: -11.754851341247559
    7. '_INF' → logprob: -11.754851341247559
    8. '.inf' → logprob: -12.129851341247559
    9. ' INF' → logprob: -12.254851341247559
    10. '-INF' → logprob: -12.504851341247559

Token 93: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -1.0445127372804563e-05
    2. 'f' → logprob: -11.50001049041748
    3. '
' → logprob: -16.625009536743164
    4. ' F' → logprob: -16.750009536743164
    5. 'Fs' → logprob: -17.375009536743164
    6. 'FF' → logprob: -17.375009536743164
    7. 'Ф' → logprob: -17.500009536743164
    8. 'FINITE' → logprob: -17.875009536743164
    9. 'FINITY' → logprob: -18.000009536743164
    10. '   ' → logprob: -18.000009536743164

Token 94: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41786184906959534
    2. ']' → logprob: -1.167861819267273
    3. ']*' → logprob: -3.9178619384765625
    4. 'for' → logprob: -5.2928619384765625
    5. ' ]' → logprob: -5.6678619384765625
    6. ']*(' → logprob: -7.4178619384765625
    7. ' if' → logprob: -7.7928619384765625
    8. ' ' → logprob: -8.042861938476562
    9. ',' → logprob: -8.167861938476562
    10. '	for' → logprob: -8.292861938476562

Token 95: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8515593409538269
    2. ']' → logprob: -1.6015594005584717
    3. ']*' → logprob: -1.7265594005584717
    4. 'for' → logprob: -1.9765594005584717
    5. ']*(' → logprob: -2.9765594005584717
    6. 'if' → logprob: -6.101559162139893
    7. '	for' → logprob: -6.851559162139893
    8. ' if' → logprob: -7.726559162139893
    9. '   ' → logprob: -8.47655963897705
    10. ' ]' → logprob: -9.35155963897705

Token 96: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1388847976922989
    2. ' self' → logprob: -2.2638847827911377
    3. '(self' → logprob: -4.138885021209717
    4. ' (' → logprob: -4.638885021209717
    5. '(' → logprob: -9.263884544372559
    6. ' ' → logprob: -11.513884544372559
    7. '   ' → logprob: -12.138884544372559
    8. '	self' → logprob: -13.263884544372559
    9. 's' → logprob: -13.763884544372559
    10. '(s' → logprob: -14.638884544372559

Token 97: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05511843040585518
    2. ' self' → logprob: -2.9301183223724365
    3. '(self' → logprob: -8.555118560791016
    4. '   ' → logprob: -11.305118560791016
    5. ' (' → logprob: -11.305118560791016
    6. ' ' → logprob: -12.055118560791016
    7. '    ' → logprob: -12.805118560791016
    8. '       ' → logprob: -13.180118560791016
    9. '	self' → logprob: -13.305118560791016
    10. '           ' → logprob: -13.430118560791016

Token 98: '.E' (ID: 9032)
  Prédit: '.V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.06200980395078659
    2. '.E' → logprob: -2.812009811401367
    3. 'self' → logprob: -11.062009811401367
    4. ' .' → logprob: -11.312009811401367
    5. '.G' → logprob: -12.937009811401367
    6. '.' → logprob: -13.062009811401367
    7. 'V' → logprob: -13.312009811401367
    8. '.I' → logprob: -13.312009811401367
    9. '.S' → logprob: -13.437009811401367
    10. '	V' → logprob: -13.687009811401367

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03821257874369621
    2. ' )' → logprob: -3.288212537765503
    3. ' for' → logprob: -9.663212776184082
    4. ' ' → logprob: -10.413212776184082
    5. 'for' → logprob: -10.663212776184082
    6. '    ' → logprob: -11.663212776184082
    7. '+' → logprob: -11.663212776184082
    8. '   ' → logprob: -11.663212776184082
    9. ')]' → logprob: -11.913212776184082
    10. '        ' → logprob: -12.913212776184082

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06999579071998596
    2. 'for' → logprob: -2.694995880126953
    3. ' ' → logprob: -11.069995880126953
    4. '	for' → logprob: -11.069995880126953
    5. '   ' → logprob: -11.319995880126953
    6. ']' → logprob: -12.069995880126953
    7. '    ' → logprob: -12.569995880126953
    8. '  ' → logprob: -13.569995880126953
    9. ' ]' → logprob: -14.069995880126953
    10. '       ' → logprob: -14.194995880126953

Token 101: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6182639598846436
    2. ' _' → logprob: -1.2432639598846436
    3. ' i' → logprob: -2.6182639598846436
    4. ' ' → logprob: -2.8682639598846436
    5. '_' → logprob: -3.7432639598846436
    6. ' xrange' → logprob: -4.868264198303223
    7. 'range' → logprob: -5.243264198303223
    8. ' in' → logprob: -6.618264198303223
    9. '	range' → logprob: -6.618264198303223
    10. ' ' → logprob: -6.743264198303223

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009097851812839508
    2. 'in' → logprob: -4.759098052978516
    3. '<|end|>' → logprob: -8.259098052978516
    4. ' ' → logprob: -8.884098052978516
    5. '<|end|>' → logprob: -10.384098052978516
    6. 'range' → logprob: -10.759098052978516
    7. ' range' → logprob: -10.884098052978516
    8. '	in' → logprob: -12.259098052978516
    9. ' xrange' → logprob: -12.259098052978516
    10. ')' → logprob: -13.884098052978516

Token 103: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1807456910610199
    2. 'range' → logprob: -1.8057457208633423
    3. ' xrange' → logprob: -7.055745601654053
    4. '	range' → logprob: -9.430746078491211
    5. ' ' → logprob: -10.055746078491211
    6. '(range' → logprob: -11.930746078491211
    7. '  ' → logprob: -12.430746078491211
    8. '   ' → logprob: -13.180746078491211
    9. ' rang' → logprob: -14.430746078491211
    10. 'rang' → logprob: -14.930746078491211

Token 104: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01860206201672554
    2. '(' → logprob: -4.018601894378662
    3. '(s' → logprob: -7.768601894378662
    4. ' (' → logprob: -11.39360237121582
    5. '(range' → logprob: -11.39360237121582
    6. 'self' → logprob: -12.89360237121582
    7. '(
' → logprob: -13.14360237121582
    8. '(sel' → logprob: -13.89360237121582
    9. '((' → logprob: -15.26860237121582
    10. '(e' → logprob: -15.76860237121582

Token 105: '.E' (ID: 9032)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0444785356521606
    2. '.E' → logprob: -1.1694785356521606
    3. '(self' → logprob: -1.2944785356521606
    4. '.V' → logprob: -3.669478416442871
    5. ')' → logprob: -4.044478416442871
    6. '.S' → logprob: -5.669478416442871
    7. 'E' → logprob: -5.794478416442871
    8. ' self' → logprob: -6.169478416442871
    9. 's' → logprob: -6.294478416442871
    10. '(' → logprob: -6.294478416442871

Token 106: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02014368586242199
    2. ']' → logprob: -4.270143508911133
    3. ')' → logprob: -5.145143508911133
    4. '])' → logprob: -9.520143508911133
    5. ')])' → logprob: -10.770143508911133
    6. ' ]' → logprob: -11.645143508911133
    7. '])]' → logprob: -12.020143508911133
    8. '   ' → logprob: -12.020143508911133
    9. '       ' → logprob: -12.270143508911133
    10. ')],' → logprob: -12.395143508911133

Token 107: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' self' (ID: 1051)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37714311480522156
    2. '       ' → logprob: -1.877143144607544
    3. 'for' → logprob: -1.877143144607544
    4. '<|end|>' → logprob: -5.252142906188965
    5. ' ' → logprob: -6.752142906188965
    6. '	for' → logprob: -7.752142906188965
    7. 'self' (adapté à ' self') → logprob: -7.752142906188965
    8. '   ' → logprob: -8.127142906188965
    9. ' self' → logprob: -8.627142906188965
    10. '	' → logprob: -9.627142906188965

Token 109: '.Path' (ID: 31237)
  Prédit: '.G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.010489284992218018
    2. '.' → logprob: -4.885489463806152
    3. ' .' → logprob: -6.635489463806152
    4. '.V' → logprob: -7.260489463806152
    5. ' ' → logprob: -9.135489463806152
    6. 'for' → logprob: -9.385489463806152
    7. '.I' → logprob: -9.885489463806152
    8. '
' → logprob: -10.135489463806152
    9. '.E' → logprob: -10.135489463806152
    10. 'def' → logprob: -10.635489463806152

Token 110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931505799293518
    2. ' =' → logprob: -0.6931505799293518
    3. ' ' → logprob: -13.818150520324707
    4. '=[]' → logprob: -13.818150520324707
    5. '=[[' → logprob: -14.693150520324707
    6. '[' → logprob: -15.193150520324707
    7. ' =[' → logprob: -15.193150520324707
    8. '=[' → logprob: -16.318151473999023
    9. '＝' → logprob: -16.318151473999023
    10. '[:]' → logprob: -17.068151473999023

Token 111: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.015158595517277718
    2. ' [[' → logprob: -4.265158653259277
    3. '[' → logprob: -7.390158653259277
    4. '[['' → logprob: -7.890158653259277
    5. ' ' → logprob: -14.140158653259277
    6. ' [['' → logprob: -14.265158653259277
    7. '   ' → logprob: -14.640158653259277
    8. ' [[]' → logprob: -15.015158653259277
    9. '([[' → logprob: -15.390158653259277
    10. ' [["' → logprob: -15.640158653259277

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5327844023704529
    2. '-' → logprob: -0.9077844023704529
    3. 'self' → logprob: -4.907784461975098
    4. 'False' → logprob: -6.657784461975098
    5. 'None' → logprob: -8.157784461975098
    6. '[]' → logprob: -8.657784461975098
    7. ' -' → logprob: -8.907784461975098
    8. ' ' → logprob: -9.407784461975098
    9. 'i' → logprob: -9.907784461975098
    10. '-self' → logprob: -9.907784461975098

Token 113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01351112313568592
    2. ' for' → logprob: -5.2635111808776855
    3. ' ]' → logprob: -5.6385111808776855
    4. ']*' → logprob: -5.7635111808776855
    5. ']*(' → logprob: -6.5135111808776855
    6. 'for' → logprob: -10.888510704040527
    7. '   ' → logprob: -11.388510704040527
    8. ',' → logprob: -11.888510704040527
    9. ' ' → logprob: -11.888510704040527
    10. ' if' → logprob: -12.138510704040527

Token 114: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7218590378761292
    2. ']' → logprob: -0.8468590378761292
    3. ' *' → logprob: -2.7218589782714844
    4. ']*' → logprob: -5.096858978271484
    5. ' ]' → logprob: -5.096858978271484
    6. 'for' → logprob: -5.721858978271484
    7. ' ' → logprob: -6.096858978271484
    8. '*' → logprob: -7.096858978271484
    9. ']*(' → logprob: -7.096858978271484
    10. ')' → logprob: -9.221858978271484

Token 115: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08795285224914551
    2. ' (' → logprob: -2.5879528522491455
    3. 'self' → logprob: -4.962952613830566
    4. ' self' → logprob: -6.212952613830566
    5. '(' → logprob: -10.837952613830566
    6. ' ' → logprob: -12.712952613830566
    7. '   ' → logprob: -13.712952613830566
    8. '(s' → logprob: -14.212952613830566
    9. '  ' → logprob: -14.837952613830566
    10. '[self' → logprob: -15.462952613830566

Token 116: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002362094121053815
    2. ' self' → logprob: -6.627362251281738
    3. '(self' → logprob: -6.877362251281738
    4. ' (' → logprob: -13.377362251281738
    5. '           ' → logprob: -13.877362251281738
    6. '   ' → logprob: -14.877362251281738
    7. ' ' → logprob: -15.127362251281738
    8. '       ' → logprob: -15.252362251281738
    9. '  ' → logprob: -15.377362251281738
    10. '	self' → logprob: -15.377362251281738

Token 117: '.E' (ID: 9032)
  Prédit: '.E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.E' → logprob: -4.4418171455617994e-05
    2. 'self' → logprob: -10.375044822692871
    3. '.V' → logprob: -11.250044822692871
    4. 'E' → logprob: -16.500043869018555
    5. '.S' → logprob: -17.375043869018555
    6. '.I' → logprob: -17.375043869018555
    7. '.' → logprob: -17.625043869018555
    8. '   ' → logprob: -17.875043869018555
    9. '(E' → logprob: -18.375043869018555
    10. ')' → logprob: -18.625043869018555

Token 118: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000496436667162925
    2. ' )' → logprob: -7.6254963874816895
    3. ')]' → logprob: -13.000496864318848
    4. '   ' → logprob: -13.500496864318848
    5. 'for' → logprob: -13.750496864318848
    6. '       ' → logprob: -13.875496864318848
    7. ')
' → logprob: -13.875496864318848
    8. ' for' → logprob: -15.000496864318848
    9. '))' → logprob: -15.125496864318848
    10. '           ' → logprob: -15.250496864318848

Token 119: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08906890451908112
    2. 'for' → logprob: -2.46406888961792
    3. ')' → logprob: -9.214069366455078
    4. ' ' → logprob: -11.464069366455078
    5. ']' → logprob: -11.839069366455078
    6. '   ' → logprob: -13.089069366455078
    7. '	for' → logprob: -13.214069366455078
    8. ' )' → logprob: -13.214069366455078
    9. ' ]' → logprob: -13.339069366455078
    10. '       ' → logprob: -13.839069366455078

Token 120: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.49545934796333313
    2. 'range' → logprob: -0.9954593181610107
    3. '(range' → logprob: -3.9954593181610107
    4. ' (' → logprob: -6.62045955657959
    5. '(' → logprob: -7.37045955657959
    6. 'self' → logprob: -8.12045955657959
    7. '(self' → logprob: -8.62045955657959
    8. ' in' → logprob: -9.62045955657959
    9. '   ' → logprob: -9.74545955657959
    10. ' self' → logprob: -10.37045955657959

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20950454473495483
    2. 'in' → logprob: -1.7095046043395996
    3. '(' → logprob: -5.9595046043396
    4. '(range' → logprob: -6.4595046043396
    5. 'range' → logprob: -6.7095046043396
    6. '<|end|>' → logprob: -6.7095046043396
    7. ' range' → logprob: -7.0845046043396
    8. ' (' → logprob: -7.4595046043396
    9. ' ' → logprob: -10.459504127502441
    10. '<|end|>' → logprob: -10.709504127502441

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17574544250965118
    2. ' range' → logprob: -1.9257454872131348
    3. '(range' → logprob: -4.175745487213135
    4. '(' → logprob: -10.675745010375977
    5. ' (' → logprob: -11.300745010375977
    6. '	range' → logprob: -13.800745010375977
    7. ' xrange' → logprob: -14.425745010375977
    8. '.range' → logprob: -15.675745010375977
    9. '(self' → logprob: -15.675745010375977
    10. '_range' → logprob: -17.050745010375977

Token 123: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010076206177473068
    2. '(range' → logprob: -4.88507604598999
    3. '(' → logprob: -6.38507604598999
    4. ' (' → logprob: -7.38507604598999
    5. 'range' → logprob: -8.885076522827148
    6. ' range' → logprob: -11.135076522827148
    7. '(s' → logprob: -12.260076522827148
    8. 'self' → logprob: -14.260076522827148
    9. '](' → logprob: -15.010076522827148
    10. '((' → logprob: -15.010076522827148

Token 124: '.E' (ID: 9032)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.0776049792766571
    2. '(self' → logprob: -2.7026050090789795
    3. 'range' → logprob: -6.0776047706604
    4. ' range' → logprob: -6.5776047706604
    5. '(' → logprob: -6.8276047706604
    6. ' (' → logprob: -6.8276047706604
    7. 'self' → logprob: -7.4526047706604
    8. ')]' → logprob: -7.5776047706604
    9. ')' → logprob: -7.8276047706604
    10. '(range' → logprob: -8.702605247497559

Token 125: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0053679910488426685
    2. ')' → logprob: -5.255367755889893
    3. ']' → logprob: -9.25536823272705
    4. ' )' → logprob: -11.38036823272705
    5. ')])' → logprob: -11.75536823272705
    6. '       ' → logprob: -12.13036823272705
    7. '])' → logprob: -12.63036823272705
    8. '   ' → logprob: -12.75536823272705
    9. '])]' → logprob: -12.75536823272705
    10. ')}' → logprob: -13.63036823272705

Token 126: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5766533613204956
    2. 'for' → logprob: -1.0766533613204956
    3. '       ' → logprob: -2.826653480529785
    4. '<|end|>' → logprob: -3.951653480529785
    5. '	for' → logprob: -4.326653480529785
    6. '	' → logprob: -5.326653480529785
    7. '
' → logprob: -7.826653480529785
    8. '   ' → logprob: -8.451653480529785
    9. '<|end|>' → logprob: -9.326653480529785
    10. ' ' → logprob: -9.451653480529785

Token 128: ' check' (ID: 2371)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931662559509277
    2. 'for' → logprob: -0.6931662559509277
    3. '	for' → logprob: -12.068166732788086
    4. '       ' → logprob: -12.193166732788086
    5. '   ' → logprob: -13.193166732788086
    6. 'i' → logprob: -13.193166732788086
    7. ' i' → logprob: -13.693166732788086
    8. ' line' → logprob: -14.068166732788086
    9. ' ' → logprob: -14.443166732788086
    10. 'line' → logprob: -14.693166732788086

Token 129: ' un' (ID: 537)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5093650221824646
    2. 'for' → logprob: -2.0093650817871094
    3. '<|end|>' → logprob: -2.0093650817871094
    4. ' if' → logprob: -2.5093650817871094
    5. ' ' → logprob: -4.509365081787109
    6. '<|end|>' → logprob: -4.759365081787109
    7. 'if' → logprob: -4.884365081787109
    8. '       ' → logprob: -5.384365081787109
    9. 'self' → logprob: -6.009365081787109
    10. ' self' → logprob: -6.009365081787109

Token 130: 'icom' (ID: 66481)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.259539008140564
    2. 'for' → logprob: -1.759539008140564
    3. 'visited' → logprob: -1.884539008140564
    4. 'i' → logprob: -2.3845391273498535
    5. 'if' → logprob: -2.8845391273498535
    6. 'ique' → logprob: -3.2595391273498535
    7. 'finished' → logprob: -3.3845391273498535
    8. 'def' → logprob: -3.6345391273498535
    9. '#' → logprob: -3.6345391273498535
    10. 'comment' → logprob: -3.7595391273498535

Token 131: ' component' (ID: 6392)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.256774365901947
    2. 'p' → logprob: -2.506774425506592
    3. 'ple' → logprob: -3.256774425506592
    4. 'plete' → logprob: -3.256774425506592
    5. 'm' → logprob: -3.381774425506592
    6. 'pletion' → logprob: -5.006774425506592
    7. 'ode' → logprob: -5.506774425506592
    8. 'ponent' → logprob: -5.756774425506592
    9. 'pleted' → logprob: -5.756774425506592
    10. 'er' → logprob: -6.131774425506592

Token 132: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4824439287185669
    2. '<|end|>' → logprob: -1.107443928718567
    3. ' for' → logprob: -4.107443809509277
    4. '
' → logprob: -4.232443809509277
    5. '	' → logprob: -4.732443809509277
    6. '<|end|>' → logprob: -6.107443809509277
    7. ' ' → logprob: -6.232443809509277
    8. 'for' → logprob: -6.232443809509277
    9. 's' → logprob: -7.107443809509277
    10. '        
' → logprob: -7.232443809509277

Token 134: ' def' (ID: 1056)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4224098324775696
    2. 'for' → logprob: -1.1724097728729248
    3. '       ' → logprob: -3.672409772872925
    4. '<|end|>' → logprob: -6.297410011291504
    5. '	for' → logprob: -6.797410011291504
    6. 'def' (adapté à ' def') → logprob: -6.922410011291504
    7. '   ' → logprob: -7.547410011291504
    8. '	' → logprob: -7.547410011291504
    9. 's' → logprob: -7.922410011291504
    10. 'self' → logprob: -8.047410011291504

Token 135: ' find' (ID: 1646)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.8524957895278931
    2. ' is' → logprob: -1.602495789527893
    3. ' dfs' → logprob: -2.2274956703186035
    4. ' DFS' → logprob: -3.2274956703186035
    5. ' bfs' → logprob: -3.4774956703186035
    6. 'dfs' → logprob: -3.7274956703186035
    7. ' find' → logprob: -3.8524956703186035
    8. 'is' → logprob: -3.9774956703186035
    9. ' BFS' → logprob: -4.1024956703186035
    10. 'check' → logprob: -4.2274956703186035

Token 136: '(root' (ID: 17410)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.35403189063072205
    2. '(x' → logprob: -1.4790319204330444
    3. '(' → logprob: -4.229032039642334
    4. '(u' → logprob: -4.479032039642334
    5. '(parent' → logprob: -4.604032039642334
    6. '(s' → logprob: -4.729032039642334
    7. '(node' → logprob: -4.979032039642334
    8. '_parent' → logprob: -5.604032039642334
    9. 'self' → logprob: -5.729032039642334
    10. ' (' → logprob: -5.729032039642334

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10466425865888596
    2. ')' → logprob: -3.1046643257141113
    3. '):' → logprob: -3.2296643257141113
    4. 'self' → logprob: -4.729664325714111
    5. '_parent' → logprob: -7.104664325714111
    6. '(self' → logprob: -7.354664325714111
    7. ',parent' → logprob: -7.479664325714111
    8. 'root' → logprob: -7.604664325714111
    9. ' ,' → logprob: -7.729664325714111
    10. '):
' → logprob: -7.854664325714111

Token 138: ' parent' (ID: 5980)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1752099096775055
    2. ' x' → logprob: -2.8002099990844727
    3. 'node' → logprob: -2.9252099990844727
    4. ' node' → logprob: -4.175209999084473
    5. 'parent' → logprob: -4.925209999084473
    6. 'u' → logprob: -5.175209999084473
    7. 'v' → logprob: -5.800209999084473
    8. ' parent' → logprob: -6.050209999084473
    9. 'r' → logprob: -6.675209999084473
    10. 'a' → logprob: -6.675209999084473

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007719963323324919
    2. ',' → logprob: -5.757719993591309
    3. '):
' → logprob: -6.007719993591309
    4. ')' → logprob: -6.757719993591309
    5. '[root' → logprob: -7.632719993591309
    6. '(root' → logprob: -9.382719993591309
    7. 'root' → logprob: -9.507719993591309
    8. '[' → logprob: -9.757719993591309
    9. '_root' → logprob: -10.007719993591309
    10. '[]):' → logprob: -10.507719993591309

Token 140: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.075847864151001
    2. '   ' → logprob: -1.700847864151001
    3. '       ' → logprob: -2.075847864151001
    4. 'while' (adapté à ' while') → logprob: -2.325847864151001
    5. ' if' → logprob: -2.450847864151001
    6. 'for' → logprob: -3.075847864151001
    7. 'return' → logprob: -3.325847864151001
    8. ' while' → logprob: -4.075847625732422
    9. '<|end|>' → logprob: -4.200847625732422
    10. ' for' → logprob: -4.325847625732422

Token 142: ' root' (ID: 6577)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.03260340914130211
    2. 'root' → logprob: -3.6576035022735596
    3. ' parent' → logprob: -5.1576032638549805
    4. '(parent' → logprob: -8.28260326385498
    5. ' root' → logprob: -8.28260326385498
    6. '	parent' → logprob: -11.40760326385498
    7. '(root' → logprob: -12.03260326385498
    8. ' ' → logprob: -14.03260326385498
    9. 'True' → logprob: -14.03260326385498
    10. '   ' → logprob: -14.15760326385498

Token 143: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.12695635855197906
    2. ' !=' → logprob: -2.1269564628601074
    3. ' ' → logprob: -12.12695598602295
    4. '!=(' → logprob: -12.37695598602295
    5. ']!=' → logprob: -12.87695598602295
    6. '!' → logprob: -13.12695598602295
    7. '!=-' → logprob: -13.25195598602295
    8. '	' → logprob: -13.62695598602295
    9. ':' → logprob: -13.75195598602295
    10. ')!=' → logprob: -13.75195598602295

Token 144: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00014442270912695676
    2. ' parent' → logprob: -8.875144004821777
    3. 'root' → logprob: -13.000144004821777
    4. '	parent' → logprob: -13.750144004821777
    5. '(parent' → logprob: -14.000144004821777
    6. '   ' → logprob: -16.250144958496094
    7. '[parent' → logprob: -16.625144958496094
    8. 'paren' → logprob: -17.125144958496094
    9. '
' → logprob: -17.375144958496094
    10. '-parent' → logprob: -17.500144958496094

Token 145: '[root' (ID: 185287)
  Prédit: '[parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.011249294504523277
    2. '[root' → logprob: -4.51124906539917
    3. 'parent' → logprob: -9.011249542236328
    4. '[' → logprob: -9.636249542236328
    5. 'root' → logprob: -12.136249542236328
    6. 's' → logprob: -12.386249542236328
    7. '(parent' → logprob: -13.386249542236328
    8. '[
' → logprob: -14.386249542236328
    9. ',parent' → logprob: -14.886249542236328
    10. ' parent' → logprob: -15.386249542236328

Token 146: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0015267637791112065
    2. ']' → logprob: -7.251526832580566
    3. ']:
' → logprob: -7.376526832580566
    4. '):' → logprob: -9.126526832580566
    5. ' ]' → logprob: -10.001526832580566
    6. ']:
' → logprob: -11.126526832580566
    7. '[' → logprob: -11.376526832580566
    8. ':' → logprob: -12.876526832580566
    9. ']):' → logprob: -13.626526832580566
    10. '):
' → logprob: -14.001526832580566

Token 147: '               ' (ID: 506)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.796336829662323
    2. ' root' → logprob: -1.0463368892669678
    3. '           ' → logprob: -2.4213368892669678
    4. '               ' → logprob: -2.6713368892669678
    5. '   ' → logprob: -4.171336650848389
    6. '       ' → logprob: -4.171336650848389
    7. '	root' → logprob: -6.171336650848389
    8. '
' → logprob: -6.421336650848389
    9. '[root' → logprob: -6.921336650848389
    10. '\n' → logprob: -7.296336650848389

Token 148: ' parent' (ID: 5980)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.5767611265182495
    2. ' root' → logprob: -0.8267611265182495
    3. '               ' → logprob: -8.076761245727539
    4. 'parent' (adapté à ' parent') → logprob: -8.076761245727539
    5. '
' → logprob: -9.451761245727539
    6. '	root' → logprob: -9.826761245727539
    7. ' parent' → logprob: -10.201761245727539
    8. '           ' → logprob: -11.826761245727539
    9. '                   ' → logprob: -11.951761245727539
    10. '   ' → logprob: -11.951761245727539

Token 149: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.11694540083408356
    2. '=' → logprob: -2.491945505142212
    3. 'root' → logprob: -4.366945266723633
    4. '[' → logprob: -4.866945266723633
    5. ' =' → logprob: -5.366945266723633
    6. '[
' → logprob: -7.366945266723633
    7. '=root' → logprob: -7.741945266723633
    8. ',' → logprob: -8.116945266723633
    9. ']' → logprob: -8.366945266723633
    10. '[parent' → logprob: -8.741945266723633

Token 150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005752203520387411
    2. '=' → logprob: -5.255752086639404
    3. ']=' → logprob: -7.630752086639404
    4. ' ]' → logprob: -10.880752563476562
    5. ' =' → logprob: -11.255752563476562
    6. '[' → logprob: -14.630752563476562
    7. '],' → logprob: -15.005752563476562
    8. '	' → logprob: -16.255752563476562
    9. ' ' → logprob: -16.255752563476562
    10. ')' → logprob: -16.380752563476562

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.157039049663581e-05
    2. ' =' → logprob: -9.875051498413086
    3. '=root' → logprob: -18.250051498413086
    4. ']=' → logprob: -18.625051498413086
    5. ']' → logprob: -18.750051498413086
    6. '=

' → logprob: -18.875051498413086
    7. '=}' → logprob: -19.375051498413086
    8. '.=' → logprob: -19.500051498413086
    9. '＝' → logprob: -20.250051498413086
    10. '=
' → logprob: -20.500051498413086

Token 152: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.018155796453356743
    2. ' parent' → logprob: -4.018155574798584
    3. '	parent' → logprob: -12.643156051635742
    4. '(parent' → logprob: -13.643156051635742
    5. '[parent' → logprob: -13.893156051635742
    6. ' ' → logprob: -15.643156051635742
    7. '   ' → logprob: -16.018156051635742
    8. ',parent' → logprob: -16.893156051635742
    9. 'Parent' → logprob: -17.018156051635742
    10. '_parent' → logprob: -17.143156051635742

Token 153: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.0009132515988312662
    2. 'parent' → logprob: -7.000913143157959
    3. '[' → logprob: -14.125913619995117
    4. '(parent' → logprob: -14.500913619995117
    5. ' parent' → logprob: -14.875913619995117
    6. '[root' → logprob: -16.250913619995117
    7. '	parent' → logprob: -17.000913619995117
    8. ',parent' → logprob: -17.500913619995117
    9. 'paren' → logprob: -17.750913619995117
    10. '.parent' → logprob: -18.500913619995117

Token 154: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.0031808018684387207
    2. 'root' → logprob: -5.753180980682373
    3. '[parent' → logprob: -13.878180503845215
    4. '	root' → logprob: -14.378180503845215
    5. '[' → logprob: -14.753180503845215
    6. '(root' → logprob: -15.003180503845215
    7. '_root' → logprob: -15.378180503845215
    8. ' root' → logprob: -15.378180503845215
    9. '/root' → logprob: -15.503180503845215
    10. 'roo' → logprob: -16.87818145751953

Token 155: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.5759903192520142
    2. ']' → logprob: -0.8259903192520142
    3. 'root' → logprob: -10.700990676879883
    4. ']]
' → logprob: -11.700990676879883
    5. '[root' → logprob: -11.825990676879883
    6. ']]]' → logprob: -12.325990676879883
    7. ']
' → logprob: -12.825990676879883
    8. ']]

' → logprob: -13.075990676879883
    9. ']>' → logprob: -14.325990676879883
    10. ' ]]' → logprob: -14.450990676879883

Token 156: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0071336389519274235
    2. '<|end|>' → logprob: -5.382133483886719
    3. '           ' → logprob: -6.132133483886719
    4. '       ' → logprob: -9.257133483886719
    5. '<|end|>' → logprob: -9.257133483886719
    6. '			' → logprob: -10.632133483886719
    7. '                   ' → logprob: -10.757133483886719
    8. 'return' → logprob: -11.257133483886719
    9. '   ' → logprob: -11.382133483886719
    10. ' ' → logprob: -11.757133483886719

Token 157: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.5759729743003845
    2. ' root' → logprob: -0.8259729743003845
    3. '               ' → logprob: -10.700972557067871
    4. '	root' → logprob: -12.450972557067871
    5. '           ' → logprob: -12.950972557067871
    6. '_root' → logprob: -13.700972557067871
    7. '[root' → logprob: -13.700972557067871
    8. '(root' → logprob: -14.700972557067871
    9. '   ' → logprob: -14.825972557067871
    10. ' ' → logprob: -14.950972557067871

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.251982182264328
    2. '=' → logprob: -1.5019822120666504
    3. ' ' → logprob: -9.876981735229492
    4. ',' → logprob: -13.751981735229492
    5. ')' → logprob: -15.876981735229492
    6. ']' → logprob: -16.126981735229492
    7. ' +=' → logprob: -16.376981735229492
    8. '<|end|>' → logprob: -16.501981735229492
    9. ' =
' → logprob: -16.626981735229492
    10. ' =)' → logprob: -17.376981735229492

Token 159: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.4740844964981079
    2. 'parent' → logprob: -0.9740844964981079
    3. '	parent' → logprob: -12.599084854125977
    4. '(parent' → logprob: -12.974084854125977
    5. '[parent' → logprob: -13.974084854125977
    6. '.parent' → logprob: -15.349084854125977
    7. '_parent' → logprob: -15.599084854125977
    8. ',parent' → logprob: -15.724084854125977
    9. ' ' → logprob: -15.849084854125977
    10. 'root' → logprob: -16.349084854125977

Token 160: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -1.4617256056226324e-05
    2. 'root' → logprob: -11.375014305114746
    3. '[' → logprob: -13.000014305114746
    4. '[parent' → logprob: -15.250014305114746
    5. ']' → logprob: -15.375014305114746
    6. '(root' → logprob: -16.000015258789062
    7. '	root' → logprob: -16.625015258789062
    8. '=root' → logprob: -17.250015258789062
    9. '<|end|>' → logprob: -17.500015258789062
    10. '[
' → logprob: -17.625015258789062

Token 161: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.269565634895116e-05
    2. ']
' → logprob: -10.000092506408691
    3. ' ]' → logprob: -11.375092506408691
    4. '[root' → logprob: -11.750092506408691
    5. 'root' → logprob: -12.375092506408691
    6. '[' → logprob: -12.375092506408691
    7. ')' → logprob: -12.375092506408691
    8. '])' → logprob: -12.750092506408691
    9. '<|end|>' → logprob: -13.125092506408691
    10. ']]' → logprob: -13.875092506408691

Token 162: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5301396250724792
    2. '<|end|>' → logprob: -1.280139684677124
    3. '
' → logprob: -2.530139684677124
    4. '		' → logprob: -4.405139446258545
    5. '       ' → logprob: -4.530139446258545
    6. '<|end|>' → logprob: -5.155139446258545
    7. '	return' → logprob: -5.405139446258545
    8. 'return' → logprob: -5.655139446258545
    9. '               ' → logprob: -5.905139446258545
    10. '\n' → logprob: -5.905139446258545

Token 163: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31675687432289124
    2. '       ' → logprob: -1.5667568445205688
    3. 'return' (adapté à ' return') → logprob: -3.9417569637298584
    4. ' return' → logprob: -4.316756725311279
    5. '	return' → logprob: -4.441756725311279
    6. '   ' → logprob: -4.691756725311279
    7. '	' → logprob: -5.816756725311279
    8. '		' → logprob: -6.066756725311279
    9. '               ' → logprob: -6.941756725311279
    10. '	   ' → logprob: -7.441756725311279

Token 164: ' root' (ID: 6577)
  Prédit: ' root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.12692883610725403
    2. 'root' → logprob: -2.1269288063049316
    3. '	root' → logprob: -15.00192928314209
    4. ' ' → logprob: -15.62692928314209
    5. '(root' → logprob: -16.126928329467773
    6. '[root' → logprob: -16.626928329467773
    7. ' ' → logprob: -16.876928329467773
    8. ' roo' → logprob: -17.251928329467773
    9. '_root' → logprob: -18.126928329467773
    10. 'Root' → logprob: -18.251928329467773

Token 165: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11491256207227707
    2. '
' → logprob: -2.489912509918213
    3. 'parent' → logprob: -4.739912509918213
    4. '<|end|>' → logprob: -5.114912509918213
    5. '        
' → logprob: -5.614912509918213
    6. '   ' → logprob: -6.489912509918213
    7. '	parent' → logprob: -6.614912509918213
    8. '	' → logprob: -7.239912509918213
    9. '		
' → logprob: -7.489912509918213
    10. ' 
' → logprob: -7.614912509918213

Token 168: ' connect' (ID: 4837)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.0342864915728569
    2. ' union' → logprob: -3.6592864990234375
    3. 'uni' → logprob: -5.7842864990234375
    4. 'un' → logprob: -6.1592864990234375
    5. 'Union' → logprob: -7.0342864990234375
    6. 'merge' → logprob: -8.409286499023438
    7. '_union' → logprob: -8.409286499023438
    8. 'kr' → logprob: -8.659286499023438
    9. 'find' → logprob: -8.659286499023438
    10. 'init' → logprob: -8.659286499023438

Token 169: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8813342452049255
    2. '(root' → logprob: -1.1313343048095703
    3. '(self' → logprob: -1.3813343048095703
    4. '(parent' → logprob: -5.38133430480957
    5. '(u' → logprob: -6.13133430480957
    6. '(
' → logprob: -7.00633430480957
    7. 'root' → logprob: -7.38133430480957
    8. ' (' → logprob: -7.50633430480957
    9. '(node' → logprob: -7.63133430480957
    10. '(a' → logprob: -8.00633430480957

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038527094875462353
    2. ' ,' → logprob: -8.500385284423828
    3. ',v' → logprob: -9.625385284423828
    4. ',u' → logprob: -10.125385284423828
    5. ',parent' → logprob: -10.125385284423828
    6. ',p' → logprob: -11.000385284423828
    7. ')' → logprob: -12.750385284423828
    8. 'self' → logprob: -13.375385284423828
    9. ',
' → logprob: -13.375385284423828
    10. '):' → logprob: -13.875385284423828

Token 171: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00470744539052248
    2. ' v' → logprob: -5.379707336425781
    3. 'u' → logprob: -10.504707336425781
    4. '	v' → logprob: -10.504707336425781
    5. '   ' → logprob: -11.129707336425781
    6. 'parent' → logprob: -13.004707336425781
    7. 'w' → logprob: -13.129707336425781
    8. 'root' → logprob: -13.129707336425781
    9. '
' → logprob: -13.129707336425781
    10. ' ' → logprob: -13.254707336425781

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013762809976469725
    2. ' ,' → logprob: -9.125137329101562
    3. ',parent' → logprob: -10.750137329101562
    4. '):' → logprob: -12.625137329101562
    5. '       ' → logprob: -14.250137329101562
    6. '   ' → logprob: -14.375137329101562
    7. '):
' → logprob: -14.375137329101562
    8. ',
' → logprob: -14.875137329101562
    9. '),' → logprob: -15.125137329101562
    10. ')' → logprob: -15.250137329101562

Token 173: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.31423521041870117
    2. ' parent' → logprob: -1.3142352104187012
    3. ')' → logprob: -7.439235210418701
    4. '):' → logprob: -8.68923568725586
    5. ' )' → logprob: -10.06423568725586
    6. '   ' → logprob: -10.31423568725586
    7. '):
' → logprob: -10.43923568725586
    8. '	parent' → logprob: -10.93923568725586
    9. '       ' → logprob: -11.68923568725586
    10. '    ' → logprob: -11.81423568725586

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00864541344344616
    2. '):
' → logprob: -4.758645534515381
    3. '):
' → logprob: -11.258645057678223
    4. ')' → logprob: -12.133645057678223
    5. ',' → logprob: -12.383645057678223
    6. ' ):' → logprob: -12.633645057678223
    7. '):

' → logprob: -12.633645057678223
    8. '   ' → logprob: -14.133645057678223
    9. '[]):' → logprob: -15.758645057678223
    10. ' ' → logprob: -16.13364601135254

Token 175: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6125676035881042
    2. '       ' → logprob: -0.9875676035881042
    3. '
' → logprob: -3.862567663192749
    4. '<|end|>' → logprob: -4.11256742477417
    5. '   ' → logprob: -4.23756742477417
    6. '	       ' → logprob: -4.36256742477417
    7. '    
' → logprob: -4.98756742477417
    8. ',' → logprob: -5.98756742477417
    9. '        
' → logprob: -6.36256742477417
    10. '	   ' → logprob: -6.48756742477417

Token 176: ' rv' (ID: 37141)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -1.083263635635376
    2. ' root' → logprob: -1.458263635635376
    3. 'root' → logprob: -1.833263635635376
    4. ' if' → logprob: -2.333263635635376
    5. 'u' → logprob: -2.583263635635376
    6. 'parent' → logprob: -2.958263635635376
    7. ' u' → logprob: -4.458263397216797
    8. '	parent' → logprob: -4.708263397216797
    9. 'if' → logprob: -4.958263397216797
    10. '	root' → logprob: -5.208263397216797

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29188382625579834
    2. ' =' → logprob: -1.4168838262557983
    3. 'u' → logprob: -5.166883945465088
    4. 'v' → logprob: -6.166883945465088
    5. '[u' → logprob: -6.916883945465088
    6. '=v' → logprob: -7.291883945465088
    7. '=u' → logprob: -8.29188346862793
    8. '_u' → logprob: -8.41688346862793
    9. '_v' → logprob: -8.54188346862793
    10. '[v' → logprob: -8.91688346862793

Token 178: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.20169848203659058
    2. ' find' → logprob: -1.7016985416412354
    3. 'v' → logprob: -8.826698303222656
    4. ' v' → logprob: -9.826698303222656
    5. 'root' → logprob: -10.326698303222656
    6. ' root' → logprob: -10.951698303222656
    7. '	find' → logprob: -11.576698303222656
    8. '   ' → logprob: -12.201698303222656
    9. '(find' → logprob: -12.201698303222656
    10. 'u' → logprob: -12.451698303222656

Token 179: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.004212789703160524
    2. '(u' → logprob: -5.504212856292725
    3. '(' → logprob: -9.254212379455566
    4. 'v' → logprob: -10.504212379455566
    5. '(root' → logprob: -12.754212379455566
    6. ' (' → logprob: -12.879212379455566
    7. 'u' → logprob: -13.254212379455566
    8. '(
' → logprob: -14.254212379455566
    9. '(r' → logprob: -14.504212379455566
    10. ')' → logprob: -14.504212379455566

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005633670836687088
    2. ',parent' → logprob: -5.88063383102417
    3. ')' → logprob: -6.88063383102417
    4. '(parent' → logprob: -7.13063383102417
    5. ' ,' → logprob: -7.63063383102417
    6. 'parent' → logprob: -8.505633354187012
    7. ',v' → logprob: -9.005633354187012
    8. '),' → logprob: -10.130633354187012
    9. 'v' → logprob: -10.505633354187012
    10. '(v' → logprob: -10.880633354187012

Token 181: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -4.5491004129871726e-05
    2. ' parent' → logprob: -10.000045776367188
    3. '[parent' → logprob: -17.500045776367188
    4. '(parent' → logprob: -18.250045776367188
    5. '	parent' → logprob: -18.625045776367188
    6. ',parent' → logprob: -20.375045776367188
    7. '.parent' → logprob: -20.625045776367188
    8. '_parent' → logprob: -21.000045776367188
    9. 'paren' → logprob: -21.125045776367188
    10. 'root' → logprob: -21.375045776367188

Token 182: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25214868783950806
    2. ')
' → logprob: -1.5021486282348633
    3. ')

' → logprob: -9.127148628234863
    4. ')
' → logprob: -9.752148628234863
    5. 'v' → logprob: -10.877148628234863
    6. '),' → logprob: -11.752148628234863
    7. ')v' → logprob: -11.752148628234863
    8. ',' → logprob: -12.127148628234863
    9. '[u' → logprob: -12.502148628234863
    10. '[v' → logprob: -13.127148628234863

Token 183: '           ' (ID: 352)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.5469472408294678
    2. '   ' → logprob: -2.0469472408294678
    3. 'ru' → logprob: -2.2969472408294678
    4. '       ' → logprob: -2.6719472408294678
    5. '           ' → logprob: -2.7969472408294678
    6. ' ur' → logprob: -3.4219472408294678
    7. ' ru' → logprob: -4.046947479248047
    8. 'rv' → logprob: -5.796947479248047
    9. 'u' → logprob: -5.921947479248047
    10. 'root' → logprob: -7.046947479248047

Token 184: ' parent' (ID: 5980)
  Prédit: ' ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ru' → logprob: -0.32429471611976624
    2. 'u' → logprob: -2.4492948055267334
    3. ' u' → logprob: -2.4492948055267334
    4. 'ru' → logprob: -2.4492948055267334
    5. ' root' → logprob: -5.324294567108154
    6. 'ur' → logprob: -5.699294567108154
    7. ' ur' → logprob: -6.199294567108154
    8. 'root' → logprob: -6.199294567108154
    9. ' uv' → logprob: -6.699294567108154
    10. 'r' → logprob: -7.199294567108154

Token 185: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.13740211725234985
    2. 'u' → logprob: -2.762402057647705
    3. '[v' → logprob: -3.387402057647705
    4. 'v' → logprob: -4.887402057647705
    5. '=' → logprob: -5.012402057647705
    6. ' =' → logprob: -5.012402057647705
    7. '[root' → logprob: -5.137402057647705
    8. '[' → logprob: -7.012402057647705
    9. 'rv' → logprob: -7.387402057647705
    10. 'root' → logprob: -7.512402057647705

Token 186: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.8704594373703003
    2. ')' → logprob: -1.2454594373703003
    3. '[u' → logprob: -1.3704594373703003
    4. ']' → logprob: -3.87045955657959
    5. ')]' → logprob: -4.87045955657959
    6. 'u' → logprob: -5.49545955657959
    7. ')])' → logprob: -6.62045955657959
    8. '[v' → logprob: -6.74545955657959
    9. 'v' → logprob: -7.12045955657959
    10. '],' → logprob: -7.37045955657959

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32756301760673523
    2. '=' → logprob: -2.2025630474090576
    3. ')' → logprob: -2.4525630474090576
    4. 'v' → logprob: -3.7025630474090576
    5. '[u' → logprob: -4.0775628089904785
    6. ']' → logprob: -4.2025628089904785
    7. 'u' → logprob: -4.9525628089904785
    8. '=u' → logprob: -4.9525628089904785
    9. '[root' → logprob: -6.2025628089904785
    10. '[v' → logprob: -6.2025628089904785

Token 188: ' rv' (ID: 37141)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rv' → logprob: -0.007149025797843933
    2. ' rv' → logprob: -5.0071492195129395
    3. 'v' → logprob: -7.7571492195129395
    4. '(rv' → logprob: -12.382148742675781
    5. ' v' → logprob: -14.007148742675781
    6. 'rav' → logprob: -15.132148742675781
    7. 'r' → logprob: -15.507148742675781
    8. 'u' → logprob: -15.757148742675781
    9. '.rv' → logprob: -16.50714874267578
    10. 'Rv' → logprob: -17.00714874267578

Token 189: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9417309165000916
    2. 'for' (adapté à ' for') → logprob: -1.1917309761047363
    3. '       ' → logprob: -1.3167309761047363
    4. '<|end|>' → logprob: -4.441730976104736
    5. '   ' → logprob: -4.691730976104736
    6. '
' → logprob: -5.316730976104736
    7. '	for' → logprob: -6.316730976104736
    8. '	' → logprob: -6.441730976104736
    9. 'data' → logprob: -6.816730976104736
    10. ' ' → logprob: -6.941730976104736

Token 192: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3654034733772278
    2. ' _' → logprob: -1.365403413772583
    3. 'i' → logprob: -3.490403413772583
    4. '_' → logprob: -4.240403652191162
    5. '_i' → logprob: -7.115403652191162
    6. ' range' → logprob: -7.365403652191162
    7. 'range' → logprob: -7.365403652191162
    8. ' in' → logprob: -7.490403652191162
    9. ' u' → logprob: -7.490403652191162
    10. ' ' → logprob: -7.740403652191162

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006790801417082548
    2. 'in' → logprob: -5.006790637969971
    3. ' ' → logprob: -10.006791114807129
    4. 'range' → logprob: -11.756791114807129
    5. '	in' → logprob: -12.006791114807129
    6. '  ' → logprob: -12.006791114807129
    7. 'i' → logprob: -12.631791114807129
    8. ' i' → logprob: -13.881791114807129
    9. 'import' → logprob: -14.131791114807129
    10. ' _' → logprob: -14.131791114807129

Token 194: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005665206350386143
    2. ' range' → logprob: -5.255665302276611
    3. 'x' → logprob: -8.755664825439453
    4. 'raw' → logprob: -9.130664825439453
    5. ' xrange' → logprob: -9.505664825439453
    6. 'self' → logprob: -10.005664825439453
    7. '(range' → logprob: -11.755664825439453
    8. ' ' → logprob: -12.005664825439453
    9. '  ' → logprob: -12.005664825439453
    10. '[' → logprob: -12.505664825439453

Token 195: '(' (ID: 7)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.370294846012257e-05
    2. '(' → logprob: -10.750043869018555
    3. '(int' → logprob: -11.375043869018555
    4. '(s' → logprob: -11.875043869018555
    5. ' (' → logprob: -12.875043869018555
    6. '((' → logprob: -14.875043869018555
    7. 'self' → logprob: -15.125043869018555
    8. ' self' → logprob: -15.500043869018555
    9. '(sel' → logprob: -16.000043869018555
    10. '(E' → logprob: -16.375043869018555

Token 196: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014621424488723278
    2. ' self' → logprob: -6.751461982727051
    3. 'int' → logprob: -8.75146198272705
    4. '(self' → logprob: -9.37646198272705
    5. '1' → logprob: -10.37646198272705
    6. '   ' → logprob: -11.87646198272705
    7. '(' → logprob: -12.37646198272705
    8. '0' → logprob: -13.50146198272705
    9. '  ' → logprob: -13.62646198272705
    10. ' ' → logprob: -13.75146198272705

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25727108120918274
    2. ' self' → logprob: -2.1322710514068604
    3. 'self' → logprob: -2.7572710514068604
    4. '(self' → logprob: -4.3822712898254395
    5. ' ,' → logprob: -4.7572712898254395
    6. ' range' → logprob: -5.3822712898254395
    7. 'range' → logprob: -5.6322712898254395
    8. 'int' → logprob: -5.7572712898254395
    9. '   ' → logprob: -5.8822712898254395
    10. ',self' → logprob: -6.1322712898254395

Token 198: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01829567365348339
    2. ' self' → logprob: -4.018295764923096
    3. 'int' → logprob: -9.768295288085938
    4. '   ' → logprob: -10.268295288085938
    5. '       ' → logprob: -10.393295288085938
    6. ' ' → logprob: -11.768295288085938
    7. '  ' → logprob: -11.893295288085938
    8. ' int' → logprob: -13.268295288085938
    9. '    ' → logprob: -13.643295288085938
    10. '           ' → logprob: -13.893295288085938

Token 199: '.V' (ID: 5970)
  Prédit: '.E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.E' → logprob: -0.004095973912626505
    2. '.V' → logprob: -5.504096031188965
    3. 'E' → logprob: -11.129096031188965
    4. '.' → logprob: -13.379096031188965
    5. ' .' → logprob: -14.379096031188965
    6. 'raw' → logprob: -16.12909507751465
    7. 'V' → logprob: -16.12909507751465
    8. 'self' → logprob: -16.25409507751465
    9. '.G' → logprob: -16.75409507751465
    10. '.U' → logprob: -17.12909507751465

Token 200: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22852133214473724
    2. '):
' → logprob: -1.6035213470458984
    3. ' ):' → logprob: -6.228521347045898
    4. ')' → logprob: -7.853521347045898
    5. ' ):
' → logprob: -7.978521347045898
    6. '):
' → logprob: -8.353521347045898
    7. ',' → logprob: -9.853521347045898
    8. '       ' → logprob: -10.728521347045898
    9. '+' → logprob: -10.853521347045898
    10. '):

' → logprob: -10.853521347045898

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08150152117013931
    2. '       ' → logprob: -3.7065014839172363
    3. ' u' → logprob: -4.456501483917236
    4. ' line' → logprob: -4.706501483917236
    5. 'u' → logprob: -4.831501483917236
    6. ',' → logprob: -4.831501483917236
    7. '   ' → logprob: -6.331501483917236
    8. '	       ' → logprob: -6.331501483917236
    9. 'data' → logprob: -6.456501483917236
    10. 'line' → logprob: -6.956501483917236

Token 202: ' data' (ID: 1238)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.40669697523117065
    2. 'line' → logprob: -2.4066970348358154
    3. 'raw' → logprob: -2.6566970348358154
    4. ' u' → logprob: -2.7816970348358154
    5. ' line' → logprob: -3.7816970348358154
    6. 'data' (adapté à ' data') → logprob: -4.031696796417236
    7. 'a' → logprob: -4.031696796417236
    8. ' raw' → logprob: -4.406696796417236
    9. 's' → logprob: -4.781696796417236
    10. 'v' → logprob: -5.531696796417236

Token 203: 'Raw' (ID: 21586)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7764366269111633
    2. 'Raw' → logprob: -0.7764366269111633
    3. '=' → logprob: -3.1514365673065186
    4. 'line' → logprob: -4.276436805725098
    5. 'Line' → logprob: -4.526436805725098
    6. '=line' → logprob: -5.651436805725098
    7. 'raw' → logprob: -6.401436805725098
    8. 'data' → logprob: -7.026436805725098
    9. '_raw' → logprob: -7.026436805725098
    10. 's' → logprob: -7.901436805725098

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760786533355713
    2. '=' → logprob: -0.8260786533355713
    3. 'data' → logprob: -9.951078414916992
    4. '           ' → logprob: -11.201078414916992
    5. '		' → logprob: -11.326078414916992
    6. '   ' → logprob: -11.451078414916992
    7. '=line' → logprob: -11.826078414916992
    8. '	' → logprob: -12.076078414916992
    9. ' ' → logprob: -12.201078414916992
    10. '       ' → logprob: -12.451078414916992

Token 205: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.14270347356796265
    2. ' raw' → logprob: -2.0177035331726074
    3. 'out' → logprob: -11.39270305633545
    4. '(raw' → logprob: -12.26770305633545
    5. '	raw' → logprob: -12.51770305633545
    6. ' out' → logprob: -13.01770305633545
    7. 'open' → logprob: -13.39270305633545
    8. 'input' → logprob: -13.76770305633545
    9. ' ' → logprob: -13.76770305633545
    10. 'in' → logprob: -14.01770305633545

Token 206: '_input' (ID: 12507)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1153048276901245
    2. '_input' → logprob: -1.3653048276901245
    3. ' =' → logprob: -1.4903048276901245
    4. '_' → logprob: -2.365304946899414
    5. '.readline' → logprob: -3.990304946899414
    6. '.split' → logprob: -4.490304946899414
    7. 'split' → logprob: -4.740304946899414
    8. '()' → logprob: -5.115304946899414
    9. 'input' → logprob: -5.240304946899414
    10. '().' → logprob: -5.365304946899414

Token 207: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005387668497860432
    2. '()
' → logprob: -5.255387783050537
    3. '().' → logprob: -9.255387306213379
    4. '())' → logprob: -10.255387306213379
    5. ')' → logprob: -11.880387306213379
    6. '()
' → logprob: -12.130387306213379
    7. '()

' → logprob: -12.880387306213379
    8. ' ()' → logprob: -13.630387306213379
    9. '();' → logprob: -13.755387306213379
    10. '())
' → logprob: -14.130387306213379

Token 208: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0801190435886383
    2. '       ' → logprob: -3.7051191329956055
    3. ',' → logprob: -4.9551191329956055
    4. ' raw' → logprob: -5.2051191329956055
    5. '<|end|>' → logprob: -5.2051191329956055
    6. '   ' → logprob: -5.5801191329956055
    7. 'raw' → logprob: -5.7051191329956055
    8. '		' → logprob: -5.7051191329956055
    9. 'tokens' → logprob: -6.3301191329956055
    10. '	raw' → logprob: -6.3301191329956055

Token 209: ' raw' (ID: 11428)
  Prédit: ' raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.764324963092804
    2. 'raw' (adapté à ' raw') → logprob: -1.5143249034881592
    3. ' u' → logprob: -1.6393249034881592
    4. '           ' → logprob: -3.639324903488159
    5. 'u' → logprob: -4.014325141906738
    6. 'arr' → logprob: -4.514325141906738
    7. ' data' → logprob: -4.514325141906738
    8. 'line' → logprob: -4.764325141906738
    9. 'data' → logprob: -4.764325141906738
    10. ' line' → logprob: -5.264325141906738

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18023203313350677
    2. ' =' → logprob: -1.805232048034668
    3. '[' → logprob: -8.430232048034668
    4. '_' → logprob: -10.055232048034668
    5. 'split' → logprob: -10.180232048034668
    6. ')' → logprob: -10.680232048034668
    7. '.split' → logprob: -10.805232048034668
    8. 's' → logprob: -11.055232048034668
    9. '_split' → logprob: -11.055232048034668
    10. '   ' → logprob: -11.180232048034668

Token 211: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.25205323100090027
    2. ' data' → logprob: -1.5020532608032227
    3. 'raw' → logprob: -9.502053260803223
    4. ' raw' → logprob: -10.252053260803223
    5. 'list' → logprob: -11.502053260803223
    6. ' list' → logprob: -13.502053260803223
    7. 'out' → logprob: -14.252053260803223
    8. ' ' → logprob: -15.127053260803223
    9. '[data' → logprob: -15.752053260803223
    10. 'map' → logprob: -15.752053260803223

Token 212: 'Raw' (ID: 21586)
  Prédit: 'Raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Raw' → logprob: -0.5556748509407043
    2. '.strip' → logprob: -1.0556747913360596
    3. '.' → logprob: -2.9306747913360596
    4. '.split' → logprob: -4.430675029754639
    5. '[' → logprob: -5.430675029754639
    6. 'strip' → logprob: -5.805675029754639
    7. '_raw' → logprob: -6.555675029754639
    8. 'raw' → logprob: -7.180675029754639
    9. ' .' → logprob: -7.555675029754639
    10. '[:' → logprob: -7.805675029754639

Token 213: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.034826118499040604
    2. '.' → logprob: -3.4098260402679443
    3. '.split' → logprob: -6.909826278686523
    4. ' .' → logprob: -9.034826278686523
    5. 'strip' → logprob: -10.534826278686523
    6. ' strip' → logprob: -11.659826278686523
    7. '.rstrip' → logprob: -12.159826278686523
    8. '.trim' → logprob: -12.284826278686523
    9. '[' → logprob: -12.409826278686523
    10. '	       ' → logprob: -12.784826278686523

Token 214: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.570319702499546e-05
    2. '()' → logprob: -10.625025749206543
    3. '.split' → logprob: -14.750025749206543
    4. ' .' → logprob: -15.500025749206543
    5. '()[' → logprob: -15.500025749206543
    6. '().'' → logprob: -15.500025749206543
    7. ' ().' → logprob: -15.750025749206543
    8. '.' → logprob: -16.125024795532227
    9. '(' → logprob: -16.500024795532227
    10. '()['' → logprob: -17.500024795532227

Token 215: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. ' split' → logprob: -14.375000953674316
    3. 'strip' → logprob: -15.125000953674316
    4. 'replace' → logprob: -16.625001907348633
    5. 'rstrip' → logprob: -16.750001907348633
    6. '(split' → logprob: -17.125001907348633
    7. 'spl' → logprob: -17.125001907348633
    8. '```' → logprob: -17.875001907348633
    9. '.split' → logprob: -18.250001907348633
    10. 'plit' → logprob: -19.500001907348633

Token 216: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00024715426843613386
    2. '(' → logprob: -9.12524700164795
    3. ''' → logprob: -9.50024700164795
    4. '()' → logprob: -9.75024700164795
    5. '("' → logprob: -13.50024700164795
    6. '(',' → logprob: -13.50024700164795
    7. '[' → logprob: -14.25024700164795
    8. '(','' → logprob: -14.87524700164795
    9. '['' → logprob: -15.50024700164795
    10. '('\' → logprob: -15.62524700164795

Token 217: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0345052145421505
    2. '')' → logprob: -3.5345051288604736
    3. ')' → logprob: -5.784505367279053
    4. ' ')' → logprob: -6.659505367279053
    5. ' '' → logprob: -8.159504890441895
    6. ' ' → logprob: -9.909504890441895
    7. '('' → logprob: -11.409504890441895
    8. ' )' → logprob: -11.659504890441895
    9. ' ')
' → logprob: -12.159504890441895
    10. ''t' → logprob: -12.409504890441895

Token 218: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: ' i' (ID: 575)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.10861459374427795
    2. ' u' → logprob: -2.358614683151245
    3. '           ' → logprob: -4.983614444732666
    4. '	u' → logprob: -7.483614444732666
    5. 'a' → logprob: -8.108614921569824
    6. 'v' → logprob: -8.358614921569824
    7. '   ' → logprob: -9.358614921569824
    8. 'i' (adapté à ' i') → logprob: -9.733614921569824
    9. 'x' → logprob: -9.983614921569824
    10. '		' → logprob: -10.358614921569824

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19407637417316437
    2. ',' → logprob: -2.1940762996673584
    3. '=' → logprob: -3.8190762996673584
    4. '[' → logprob: -4.0690765380859375
    5. 'n' → logprob: -4.3190765380859375
    6. 'nd' → logprob: -6.0690765380859375
    7. '0' → logprob: -6.1940765380859375
    8. ' ' → logprob: -6.4440765380859375
    9. 'nt' → logprob: -6.5690765380859375
    10. ' ,' → logprob: -6.5690765380859375

Token 221: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0018377259839326143
    2. ' int' → logprob: -6.626837730407715
    3. '0' → logprob: -7.626837730407715
    4. '1' → logprob: -10.876837730407715
    5. '	int' → logprob: -13.126837730407715
    6. '           ' → logprob: -13.876837730407715
    7. ' ' → logprob: -14.376837730407715
    8. '   ' → logprob: -14.751837730407715
    9. '(int' → logprob: -14.751837730407715
    10. '[int' → logprob: -15.126837730407715

Token 222: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.0002871993638109416
    2. 'raw' → logprob: -8.250287055969238
    3. '(' → logprob: -10.625287055969238
    4. '(
' → logprob: -14.125287055969238
    5. ' raw' → logprob: -14.250287055969238
    6. ' (' → logprob: -16.375288009643555
    7. '	raw' → logprob: -16.375288009643555
    8. '0' → logprob: -18.000288009643555
    9. '(i' → logprob: -19.000288009643555
    10. '   ' → logprob: -19.375288009643555

Token 223: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017501497641205788
    2. '0' → logprob: -6.3767499923706055
    3. ' [' → logprob: -10.751749992370605
    4. '           ' → logprob: -11.626749992370605
    5. '1' → logprob: -12.001749992370605
    6. ')' → logprob: -12.626749992370605
    7. '[i' → logprob: -13.376749992370605
    8. '(' → logprob: -13.376749992370605
    9. '   ' → logprob: -13.751749992370605
    10. ' ' → logprob: -14.626749992370605

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018351107137277722
    2. '1' → logprob: -6.501835346221924
    3. ' ' → logprob: -8.126834869384766
    4. '   ' → logprob: -11.126834869384766
    5. '2' → logprob: -11.501834869384766
    6. '[' → logprob: -12.001834869384766
    7. '  ' → logprob: -14.001834869384766
    8. '    ' → logprob: -14.189334869384766
    9. '           ' → logprob: -14.251834869384766
    10. '
' → logprob: -14.439334869384766

Token 225: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3874301314353943
    2. '])
' → logprob: -1.137430191040039
    3. '])-' → logprob: -8.637430191040039
    4. ']);' → logprob: -9.137430191040039
    5. '           ' → logprob: -10.012430191040039
    6. ')' → logprob: -10.137430191040039
    7. ']' → logprob: -10.262430191040039
    8. ')
' → logprob: -10.262430191040039
    9. '])+' → logprob: -10.512430191040039
    10. '])
' → logprob: -10.762430191040039

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015118331648409367
    2. 'v' → logprob: -6.01511812210083
    3. '   ' → logprob: -6.39011812210083
    4. 'j' → logprob: -6.39011812210083
    5. '	   ' → logprob: -6.39011812210083
    6. ',' → logprob: -6.51511812210083
    7. '<|end|>' → logprob: -6.64011812210083
    8. ' j' → logprob: -7.01511812210083
    9. 't' → logprob: -7.51511812210083
    10. '	       ' → logprob: -7.76511812210083

Token 227: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.004246504511684179
    2. '           ' → logprob: -6.629246711730957
    3. ' j' → logprob: -6.754246711730957
    4. 'v' → logprob: -6.879246711730957
    5. 'u' → logprob: -7.754246711730957
    6. '   ' → logprob: -9.879246711730957
    7. 'k' → logprob: -10.004246711730957
    8. 'for' → logprob: -10.254246711730957
    9. 'w' → logprob: -10.504246711730957
    10. 't' → logprob: -11.004246711730957

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025595128536224
    2. '=' → logprob: -2.3502559661865234
    3. '=int' → logprob: -10.100255966186523
    4. '<|end|>' → logprob: -12.100255966186523
    5. '<|end|>' → logprob: -14.100255966186523
    6. ')' → logprob: -14.225255966186523
    7. ' ' → logprob: -14.350255966186523
    8. '=
' → logprob: -15.725255966186523
    9. ' =
' → logprob: -15.850255966186523
    10. ' ' → logprob: -16.600255966186523

Token 229: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04858873412013054
    2. ' int' → logprob: -3.048588752746582
    3. '(int' → logprob: -14.548588752746582
    4. '<int' → logprob: -15.298588752746582
    5. '[int' → logprob: -15.548588752746582
    6. '	int' → logprob: -15.548588752746582
    7. '=int' → logprob: -15.673588752746582
    8. ' ' → logprob: -18.048587799072266
    9. ':int' → logprob: -18.298587799072266
    10. '<|end|>' → logprob: -18.423587799072266

Token 230: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.00824587419629097
    2. 'raw' → logprob: -5.758245944976807
    3. ' raw' → logprob: -5.883245944976807
    4. 'int' → logprob: -6.383245944976807
    5. '(int' → logprob: -8.133245468139648
    6. ' int' → logprob: -8.633245468139648
    7. '(' → logprob: -9.383245468139648
    8. ' (' → logprob: -11.383245468139648
    9. '[int' → logprob: -12.133245468139648
    10. '	raw' → logprob: -12.883245468139648

Token 231: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0030383204575628042
    2. '1' → logprob: -5.87803840637207
    3. ' [' → logprob: -8.87803840637207
    4. ' ' → logprob: -9.87803840637207
    5. '[
' → logprob: -11.37803840637207
    6. '   ' → logprob: -11.87803840637207
    7. ']' → logprob: -12.00303840637207
    8. ')' → logprob: -12.50303840637207
    9. '])' → logprob: -13.25303840637207
    10. '0' → logprob: -13.25303840637207

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001980570232262835
    2. ' ' → logprob: -9.125198364257812
    3. '0' → logprob: -9.750198364257812
    4. '[' → logprob: -10.625198364257812
    5. '   ' → logprob: -13.500198364257812
    6. '])' → logprob: -13.562698364257812
    7. '(' → logprob: -14.437698364257812
    8. '2' → logprob: -14.625198364257812
    9. '  ' → logprob: -14.750198364257812
    10. ']' → logprob: -15.250198364257812

Token 233: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049950357526540756
    2. '])' → logprob: -3.299950361251831
    3. ')
' → logprob: -4.674950122833252
    4. ')]' → logprob: -6.299950122833252
    5. ')])' → logprob: -7.924950122833252
    6. '])
' → logprob: -9.04995059967041
    7. ']' → logprob: -10.04995059967041
    8. ' )' → logprob: -10.17495059967041
    9. '<|end|>' → logprob: -10.54995059967041
    10. '))' → logprob: -11.54995059967041

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06665255129337311
    2. '<|end|>' → logprob: -2.941652536392212
    3. '<|end|>' → logprob: -5.816652774810791
    4. ' ' → logprob: -6.316652774810791
    5. '		' → logprob: -6.316652774810791
    6. ')' → logprob: -6.691652774810791
    7. ' 
' → logprob: -7.566652774810791
    8. '
' → logprob: -7.691652774810791
    9. '            
' → logprob: -8.066652297973633
    10. '	       ' → logprob: -8.316652297973633

Token 235: ' k' (ID: 372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3460569679737091
    2. 'self' → logprob: -1.5960569381713867
    3. ' self' → logprob: -2.7210569381713867
    4. ' if' → logprob: -5.221056938171387
    5. 'if' → logprob: -5.721056938171387
    6. 'k' (adapté à ' k') → logprob: -6.096056938171387
    7. ' k' → logprob: -6.346056938171387
    8. 's' → logprob: -6.346056938171387
    9. '   ' → logprob: -6.596056938171387
    10. '	       ' → logprob: -6.596056938171387

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740980863571167
    2. '=' → logprob: -0.9740980863571167
    3. '=int' → logprob: -10.849098205566406
    4. ' ' → logprob: -13.974098205566406
    5. ' =
' → logprob: -15.724098205566406
    6. ')' → logprob: -15.724098205566406
    7. '=
' → logprob: -15.849098205566406
    8. 'int' → logprob: -16.224098205566406
    9. '	' → logprob: -16.724098205566406
    10. ' ' → logprob: -16.974098205566406

Token 237: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04868638142943382
    2. ' int' → logprob: -3.0486862659454346
    3. 'float' → logprob: -9.423686027526855
    4. ' float' → logprob: -11.423686027526855
    5. '	int' → logprob: -13.423686027526855
    6. ' ' → logprob: -13.548686027526855
    7. '1' → logprob: -13.673686027526855
    8. '=int' → logprob: -14.173686027526855
    9. '(int' → logprob: -14.548686027526855
    10. '0' → logprob: -14.673686027526855

Token 238: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.014980711042881012
    2. 'raw' → logprob: -4.264980792999268
    3. 'int' → logprob: -7.139980792999268
    4. '(int' → logprob: -11.26498031616211
    5. ' raw' → logprob: -11.51498031616211
    6. ' int' → logprob: -15.26498031616211
    7. '.raw' → logprob: -15.51498031616211
    8. ' (' → logprob: -15.51498031616211
    9. '	raw' → logprob: -15.63998031616211
    10. '/raw' → logprob: -16.01498031616211

Token 239: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0035516046918928623
    2. '(' → logprob: -6.003551483154297
    3. '2' → logprob: -6.878551483154297
    4. ' [' → logprob: -10.753551483154297
    5. '   ' → logprob: -12.378551483154297
    6. '0' → logprob: -12.628551483154297
    7. '()[' → logprob: -13.003551483154297
    8. ' ' → logprob: -13.253551483154297
    9. '[
' → logprob: -13.378551483154297
    10. ')' → logprob: -13.628551483154297

Token 240: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011886836728081107
    2. ' ' → logprob: -6.8761887550354
    3. '0' → logprob: -10.438688278198242
    4. '   ' → logprob: -10.501188278198242
    5. '  ' → logprob: -10.938688278198242
    6. '1' → logprob: -11.313688278198242
    7. '[' → logprob: -11.376188278198242
    8. '3' → logprob: -11.501188278198242
    9. '    ' → logprob: -11.938688278198242
    10. '           ' → logprob: -12.126188278198242

Token 241: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.18881851434707642
    2. ')' → logprob: -1.8138184547424316
    3. '])' → logprob: -5.438818454742432
    4. '])
' → logprob: -5.563818454742432
    5. '           ' → logprob: -8.18881893157959
    6. ']' → logprob: -8.68881893157959
    7. ')
' → logprob: -8.93881893157959
    8. ']
' → logprob: -8.93881893157959
    9. ')]' → logprob: -9.93881893157959
    10. ')

' → logprob: -10.06381893157959

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016250719781965017
    2. '<|end|>' → logprob: -6.751625061035156
    3. '
' → logprob: -8.126625061035156
    4. '            
' → logprob: -9.626625061035156
    5. '<|end|>' → logprob: -9.876625061035156
    6. ',' → logprob: -11.626625061035156
    7. '       ' → logprob: -12.251625061035156
    8. '		' → logprob: -12.626625061035156
    9. 'self' → logprob: -12.751625061035156
    10. '          ' → logprob: -12.751625061035156

Token 243: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6934137344360352
    2. 'self' (adapté à ' self') → logprob: -0.8184137344360352
    3. ' self' → logprob: -2.943413734436035
    4. ' if' → logprob: -6.318413734436035
    5. 'if' → logprob: -6.318413734436035
    6. '       ' → logprob: -6.568413734436035
    7. '<|end|>' → logprob: -7.693413734436035
    8. '   ' → logprob: -8.568413734436035
    9. '	self' → logprob: -8.943413734436035
    10. '
' → logprob: -9.068413734436035

Token 244: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.0001684981834841892
    2. '.' → logprob: -9.375168800354004
    3. ' .' → logprob: -9.750168800354004
    4. 'G' → logprob: -10.750168800354004
    5. '	G' → logprob: -14.250168800354004
    6. '`.' → logprob: -14.625168800354004
    7. '[' → logprob: -15.000168800354004
    8. '.g' → logprob: -15.000168800354004
    9. '].' → logprob: -15.000168800354004
    10. ').' → logprob: -15.000168800354004

Token 245: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4498052223643754e-05
    2. '[' → logprob: -11.875014305114746
    3. ' [' → logprob: -12.500014305114746
    4. '[u' → logprob: -13.000014305114746
    5. '[j' → logprob: -14.125014305114746
    6. '[k' → logprob: -15.000014305114746
    7. 'i' → logprob: -15.125014305114746
    8. '[I' → logprob: -16.500015258789062
    9. '[self' → logprob: -17.000015258789062
    10. '[int' → logprob: -17.250015258789062

Token 246: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002726894337683916
    2. ']' → logprob: -6.752727031707764
    3. ' ][' → logprob: -6.877727031707764
    4. '[i' → logprob: -7.877727031707764
    5. '[' → logprob: -9.627726554870605
    6. '[j' → logprob: -9.877726554870605
    7. ' ' → logprob: -12.002726554870605
    8. ' [' → logprob: -12.252726554870605
    9. '   ' → logprob: -12.627726554870605
    10. '[u' → logprob: -13.002726554870605

Token 247: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.822646693966817e-06
    2. ' j' → logprob: -11.875007629394531
    3. '	j' → logprob: -14.625007629394531
    4. '           ' → logprob: -16.00000762939453
    5. '   ' → logprob: -16.12500762939453
    6. ']' → logprob: -16.12500762939453
    7. '
' → logprob: -18.00000762939453
    8. '_j' → logprob: -18.25000762939453
    9. '    ' → logprob: -18.25000762939453
    10. '[j' → logprob: -18.37500762939453

Token 248: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12464238703250885
    2. ' ]' → logprob: -2.2496423721313477
    3. ' =' → logprob: -4.999642372131348
    4. '=' → logprob: -5.999642372131348
    5. ']=' → logprob: -5.999642372131348
    6. ')' → logprob: -10.499642372131348
    7. '<|end|>' → logprob: -12.124642372131348
    8. ' )' → logprob: -12.249642372131348
    9. ' ' → logprob: -12.749642372131348
    10. '[' → logprob: -12.874642372131348

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16027723252773285
    2. '=' → logprob: -1.910277247428894
    3. '=k' → logprob: -10.035277366638184
    4. ' ' → logprob: -11.785277366638184
    5. 'k' → logprob: -14.160277366638184
    6. ',' → logprob: -15.410277366638184
    7. '.' → logprob: -15.535277366638184
    8. ' =
' → logprob: -15.910277366638184
    9. ')' → logprob: -16.660276412963867
    10. ',k' → logprob: -16.910276412963867

Token 250: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015035520773380995
    2. ' k' → logprob: -6.5015034675598145
    3. ' ' → logprob: -14.501503944396973
    4. '	k' → logprob: -15.001503944396973
    5. '   ' → logprob: -16.251502990722656
    6. 'min' → logprob: -16.626502990722656
    7. 'int' → logprob: -16.876502990722656
    8. '    ' → logprob: -17.126502990722656
    9. '  ' → logprob: -17.126502990722656
    10. ' ' → logprob: -17.501502990722656

Token 251: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47885048389434814
    2. '<|end|>' → logprob: -0.9788504838943481
    3. '
' → logprob: -6.353850364685059
    4. '<|end|>' → logprob: -6.728850364685059
    5. 'self' → logprob: -7.103850364685059
    6. ' self' → logprob: -7.978850364685059
    7. '               ' → logprob: -9.103850364685059
    8. '       ' → logprob: -9.228850364685059
    9. ' ' → logprob: -9.228850364685059
    10. '            ' → logprob: -9.728850364685059

Token 252: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2532119154930115
    2. '           ' → logprob: -1.8782119750976562
    3. '<|end|>' → logprob: -3.1282119750976562
    4. ' self' → logprob: -3.7532119750976562
    5. ' ' → logprob: -6.253211975097656
    6. '          ' → logprob: -8.628211975097656
    7. ')' → logprob: -8.628211975097656
    8. '<|end|>' → logprob: -8.753211975097656
    9. '[self' → logprob: -8.878211975097656
    10. '            ' → logprob: -9.003211975097656

Token 254: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -5.2524021157296374e-05
    2. '.' → logprob: -10.000052452087402
    3. 'G' → logprob: -13.250052452087402
    4. ' .' → logprob: -13.500052452087402
    5. '	G' → logprob: -14.500052452087402
    6. '[' → logprob: -14.500052452087402
    7. '.S' → logprob: -14.625052452087402
    8. 'out' → logprob: -14.625052452087402
    9. '.g' → logprob: -15.125052452087402
    10. '.T' → logprob: -15.625052452087402

Token 255: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0019013900309801102
    2. '[i' → logprob: -6.501901626586914
    3. '[' → logprob: -8.001901626586914
    4. '][' → logprob: -10.251901626586914
    5. '[u' → logprob: -11.751901626586914
    6. '[k' → logprob: -12.126901626586914
    7. ' [' → logprob: -12.376901626586914
    8. 'j' → logprob: -13.001901626586914
    9. ')[' → logprob: -13.376901626586914
    10. '[v' → logprob: -13.876901626586914

Token 256: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0025714985094964504
    2. '[i' → logprob: -6.0025715827941895
    3. ']' → logprob: -9.627571105957031
    4. ' ][' → logprob: -10.627571105957031
    5. ')[' → logprob: -13.002571105957031
    6. '[' → logprob: -14.127571105957031
    7. ']][' → logprob: -14.752571105957031
    8. ''][' → logprob: -15.002571105957031
    9. '"][' → logprob: -15.252571105957031
    10. '   ' → logprob: -15.252571105957031

Token 257: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.438573680294212e-06
    2. ' i' → logprob: -12.250005722045898
    3. '[i' → logprob: -15.875005722045898
    4. '[' → logprob: -16.0000057220459
    5. ' ' → logprob: -16.8750057220459
    6. '<|end|>' → logprob: -16.8750057220459
    7. '
' → logprob: -17.0000057220459
    8. ']' → logprob: -17.0000057220459
    9. '   ' → logprob: -17.3750057220459
    10. '	i' → logprob: -17.5000057220459

Token 258: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015800826076883823
    2. ']=' → logprob: -9.500158309936523
    3. '=' → logprob: -10.125158309936523
    4. ' ]' → logprob: -10.250158309936523
    5. ' =' → logprob: -12.250158309936523
    6. '[' → logprob: -13.500158309936523
    7. ')' → logprob: -13.875158309936523
    8. '][' → logprob: -15.250158309936523
    9. '<|end|>' → logprob: -16.250158309936523
    10. ']
' → logprob: -17.250158309936523

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327441334724426
    2. '=' → logprob: -1.3132743835449219
    3. ']' → logprob: -12.688274383544922
    4. '<|end|>' → logprob: -12.688274383544922
    5. '=k' → logprob: -13.188274383544922
    6. ' ' → logprob: -13.313274383544922
    7. ' =
' → logprob: -13.813274383544922
    8. '[' → logprob: -14.438274383544922
    9. ')' → logprob: -14.563274383544922
    10. ']=' → logprob: -14.938274383544922

Token 260: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02324605919420719
    2. ' k' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.273245811462402
    4. '	k' → logprob: -15.648245811462402
    5. '           ' → logprob: -16.77324676513672
    6. '   ' → logprob: -18.14824676513672
    7. '    ' → logprob: -18.27324676513672
    8. '            ' → logprob: -18.27324676513672
    9. ' ' → logprob: -18.39824676513672
    10. 'self' → logprob: -19.14824676513672

Token 261: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 263: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0470016784965992
    2. ' u' → logprob: -3.922001600265503
    3. 'i' → logprob: -4.547001838684082
    4. ' ' → logprob: -4.797001838684082
    5. ' k' → logprob: -5.672001838684082
    6. ' v' → logprob: -6.922001838684082
    7. ' _' → logprob: -7.422001838684082
    8. ' j' → logprob: -8.047001838684082
    9. ' x' → logprob: -8.297001838684082
    10. 'u' → logprob: -8.422001838684082

Token 265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003358324058353901
    2. 'in' → logprob: -5.753358364105225
    3. ' ' → logprob: -9.003357887268066
    4. 'range' → logprob: -10.253357887268066
    5. ' range' → logprob: -12.128357887268066
    6. '  ' → logprob: -12.378357887268066
    7. '	in' → logprob: -13.378357887268066
    8. ' i' → logprob: -13.378357887268066
    9. ',' → logprob: -13.753357887268066
    10. '<|end|>' → logprob: -13.753357887268066

Token 266: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01426140870898962
    2. ' range' → logprob: -4.264261245727539
    3. ' xrange' → logprob: -9.264261245727539
    4. ' ' → logprob: -13.764261245727539
    5. '	range' → logprob: -14.139261245727539
    6. '  ' → logprob: -14.764261245727539
    7. '(range' → logprob: -15.014261245727539
    8. 'x' → logprob: -15.139261245727539
    9. '   ' → logprob: -15.514261245727539
    10. 'rang' → logprob: -16.63926124572754

Token 267: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2521112561225891
    2. '(self' → logprob: -1.5021111965179443
    3. '(len' → logprob: -9.127111434936523
    4. ' (' → logprob: -10.377111434936523
    5. '(s' → logprob: -11.002111434936523
    6. '1' → logprob: -11.127111434936523
    7. 'self' → logprob: -12.502111434936523
    8. '(
' → logprob: -13.377111434936523
    9. '(out' → logprob: -13.502111434936523
    10. '(sel' → logprob: -14.627111434936523

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1017208993434906
    2. 'self' → logprob: -2.3517208099365234
    3. '0' → logprob: -6.976720809936523
    4. '   ' → logprob: -8.851720809936523
    5. ' self' → logprob: -9.226720809936523
    6. '2' → logprob: -9.226720809936523
    7. ' ' → logprob: -9.351720809936523
    8. '(self' → logprob: -9.851720809936523
    9. '(' → logprob: -10.226720809936523
    10. 'len' → logprob: -10.351720809936523

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01021780539304018
    2. ' ,' → logprob: -4.635217666625977
    3. ',self' → logprob: -7.760217666625977
    4. '(self' → logprob: -11.385217666625977
    5. 'self' → logprob: -11.510217666625977
    6. ',
' → logprob: -12.510217666625977
    7. '   ' → logprob: -12.510217666625977
    8. '       ' → logprob: -13.885217666625977
    9. ' self' → logprob: -13.885217666625977
    10. ' ' → logprob: -13.885217666625977

Token 270: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062039606273174286
    2. ' self' → logprob: -2.812039613723755
    3. '   ' → logprob: -10.187039375305176
    4. '       ' → logprob: -11.187039375305176
    5. '    ' → logprob: -11.437039375305176
    6. '           ' → logprob: -12.437039375305176
    7. ' ' → logprob: -13.187039375305176
    8. '	self' → logprob: -13.562039375305176
    9. 'len' → logprob: -14.562039375305176
    10. '  ' → logprob: -14.562039375305176

Token 271: '.E' (ID: 9032)
  Prédit: '.E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.E' → logprob: -1.0683535037969705e-05
    2. '.V' → logprob: -11.87501049041748
    3. '.' → logprob: -13.12501049041748
    4. ' .' → logprob: -14.37501049041748
    5. '   ' → logprob: -15.00001049041748
    6. 'E' → logprob: -15.00001049041748
    7. '.I' → logprob: -15.12501049041748
    8. 'self' → logprob: -16.000011444091797
    9. '.IN' → logprob: -17.250011444091797
    10. '	E' → logprob: -17.875011444091797

Token 272: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08935566991567612
    2. '):
' → logprob: -2.464355707168579
    3. ' ):' → logprob: -7.96435546875
    4. ' ):
' → logprob: -10.83935546875
    5. ':' → logprob: -11.08935546875
    6. '):
' → logprob: -11.83935546875
    7. '   ' → logprob: -11.96435546875
    8. ')' → logprob: -12.33935546875
    9. ',' → logprob: -12.46435546875
    10. '():' → logprob: -13.08935546875

Token 273: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0246045589447021
    2. ' for' → logprob: -1.5246045589447021
    3. 'for' → logprob: -1.6496045589447021
    4. '           ' → logprob: -2.149604558944702
    5. '   ' → logprob: -2.274604558944702
    6. 'self' → logprob: -4.774604797363281
    7. ' self' → logprob: -6.274604797363281
    8. ' ' → logprob: -7.524604797363281
    9. '	   ' → logprob: -8.024604797363281
    10. '	for' → logprob: -8.024604797363281

Token 274: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0364772193133831
    2. ' self' → logprob: -3.7864773273468018
    3. '           ' → logprob: -4.661477088928223
    4. 'for' → logprob: -6.161477088928223
    5. '   ' → logprob: -6.786477088928223
    6. ' ' → logprob: -8.786477088928223
    7. '       ' → logprob: -9.036477088928223
    8. ' for' → logprob: -9.286477088928223
    9. '  ' → logprob: -10.536477088928223
    10. 'if' → logprob: -10.661477088928223

Token 275: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.0002116462419508025
    2. 'G' → logprob: -9.500211715698242
    3. '.' → logprob: -9.750211715698242
    4. ' .' → logprob: -9.875211715698242
    5. '   ' → logprob: -11.500211715698242
    6. 'self' → logprob: -12.500211715698242
    7. '           ' → logprob: -12.875211715698242
    8. '[G' → logprob: -13.250211715698242
    9. ' ' → logprob: -13.375211715698242
    10. '	G' → logprob: -13.625211715698242

Token 276: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.50000286102295
    3. '[I' → logprob: -14.37500286102295
    4. 'i' → logprob: -15.87500286102295
    5. '[self' → logprob: -16.250001907348633
    6. '[j' → logprob: -16.750001907348633
    7. ' [' → logprob: -17.000001907348633
    8. '[u' → logprob: -17.125001907348633
    9. '[ii' → logprob: -17.250001907348633
    10. '```' → logprob: -17.250001907348633

Token 277: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02984015829861164
    2. '[i' → logprob: -3.5298402309417725
    3. '[I' → logprob: -10.404840469360352
    4. ' ][' → logprob: -10.904840469360352
    5. '[' → logprob: -11.029840469360352
    6. '
' → logprob: -12.154840469360352
    7. '   ' → logprob: -12.529840469360352
    8. 'i' → logprob: -12.654840469360352
    9. '```' → logprob: -12.904840469360352
    10. ']' → logprob: -13.154840469360352

Token 278: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.320199877838604e-07
    2. ' i' → logprob: -14.875
    3. '1' → logprob: -16.875
    4. '   ' → logprob: -17.875
    5. '[i' → logprob: -19.0
    6. 'self' → logprob: -19.5
    7. ']' → logprob: -19.625
    8. '	i' → logprob: -19.875
    9. ' ' → logprob: -20.0
    10. 'for' → logprob: -20.75

Token 279: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004990590969100595
    2. ']=' → logprob: -8.00049877166748
    3. ' ]' → logprob: -8.75049877166748
    4. '=' → logprob: -12.25049877166748
    5. ' =' → logprob: -15.62549877166748
    6. ']==' → logprob: -15.87549877166748
    7. ' ' → logprob: -17.500499725341797
    8. ']
' → logprob: -17.500499725341797
    9. '[' → logprob: -17.625499725341797
    10. '   ' → logprob: -17.750499725341797

Token 280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.62692928314209
    4. ']' → logprob: -16.376930236816406
    5. ']=' → logprob: -17.001930236816406
    6. '[' → logprob: -17.876930236816406
    7. ',' → logprob: -18.376930236816406
    8. '.=' → logprob: -18.626930236816406
    9. ' =
' → logprob: -19.126930236816406
    10. '=
' → logprob: -19.251930236816406

Token 281: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.625011444091797
    4. '  ' → logprob: -19.750011444091797
    5. 'self' → logprob: -20.375011444091797
    6. '00' → logprob: -21.000011444091797
    7. ' ' → logprob: -21.250011444091797
    8. '۰' → logprob: -21.375011444091797
    9. '000' → logprob: -21.875011444091797
    10. '	' → logprob: -21.875011444091797

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'self' → logprob: -16.625003814697266
    4. '   ' → logprob: -16.750003814697266
    5. '1' → logprob: -17.250003814697266
    6. '00' → logprob: -17.937503814697266
    7. '000' → logprob: -18.937503814697266
    8. '  ' → logprob: -19.125003814697266
    9. '	' → logprob: -19.437503814697266
    10. 'int' → logprob: -19.500003814697266

Token 283: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4498215317726135
    2. ' k' → logprob: -1.5748214721679688
    3. 'i' → logprob: -2.1998214721679688
    4. 'k' → logprob: -3.3248214721679688
    5. ' u' → logprob: -5.324821472167969
    6. 'u' → logprob: -7.199821472167969
    7. ' j' → logprob: -8.074821472167969
    8. ' v' → logprob: -8.074821472167969
    9. ' s' → logprob: -8.199821472167969
    10. ' x' → logprob: -8.574821472167969

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008634308353066444
    2. 'in' → logprob: -4.758634090423584
    3. ' ' → logprob: -11.258634567260742
    4. 'range' → logprob: -13.383634567260742
    5. '<|end|>' → logprob: -13.633634567260742
    6. '	in' → logprob: -14.008634567260742
    7. 'n' → logprob: -14.633634567260742
    8. '    ' → logprob: -14.883634567260742
    9. ',' → logprob: -14.883634567260742
    10. ' range' → logprob: -15.133634567260742

Token 288: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.575969398021698
    2. ' range' → logprob: -0.825969398021698
    3. ' ' → logprob: -11.575969696044922
    4. ' xrange' → logprob: -11.700969696044922
    5. '  ' → logprob: -11.950969696044922
    6. '   ' → logprob: -13.200969696044922
    7. '	range' → logprob: -13.950969696044922
    8. '(range' → logprob: -14.075969696044922
    9. '    ' → logprob: -14.075969696044922
    10. '(' → logprob: -14.825969696044922

Token 289: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.8889261304575484e-06
    2. '(range' → logprob: -13.500003814697266
    3. ' (' → logprob: -13.625003814697266
    4. '(self' → logprob: -13.875003814697266
    5. 'range' → logprob: -16.125003814697266
    6. '(
' → logprob: -16.750003814697266
    7. ' range' → logprob: -17.375003814697266
    8. '(len' → logprob: -17.750003814697266
    9. '(s' → logprob: -18.125003814697266
    10. '()' → logprob: -19.250003814697266

Token 290: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006205953657627106
    2. 'self' → logprob: -5.131206035614014
    3. ' ' → logprob: -8.881205558776855
    4. '   ' → logprob: -9.881205558776855
    5. '       ' → logprob: -10.506205558776855
    6. '2' → logprob: -11.381205558776855
    7. ' self' → logprob: -11.381205558776855
    8. '0' → logprob: -11.631205558776855
    9. '(' → logprob: -11.631205558776855
    10. '(self' → logprob: -11.756205558776855

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007510208524763584
    2. ' ,' → logprob: -7.25075101852417
    3. ',self' → logprob: -10.375751495361328
    4. '   ' → logprob: -12.500751495361328
    5. 'self' → logprob: -12.875751495361328
    6. ',
' → logprob: -14.000751495361328
    7. '+' → logprob: -14.125751495361328
    8. ' ' → logprob: -14.625751495361328
    9. ' +' → logprob: -15.000751495361328
    10. '1' → logprob: -15.000751495361328

Token 292: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0046844263561069965
    2. ' self' → logprob: -5.3796844482421875
    3. 'len' → logprob: -9.879684448242188
    4. '1' → logprob: -12.254684448242188
    5. '       ' → logprob: -13.254684448242188
    6. '   ' → logprob: -13.379684448242188
    7. ' len' → logprob: -13.379684448242188
    8. ' ' → logprob: -13.379684448242188
    9. 'class' → logprob: -14.879684448242188
    10. '0' → logprob: -15.754684448242188

Token 293: '.E' (ID: 9032)
  Prédit: '.E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.E' → logprob: -0.0009717292850837111
    2. '.V' → logprob: -7.000971794128418
    3. 'self' → logprob: -10.375971794128418
    4. '   ' → logprob: -11.125971794128418
    5. '       ' → logprob: -12.375971794128418
    6. ',' → logprob: -13.250971794128418
    7. 'class' → logprob: -13.375971794128418
    8. ' .' → logprob: -13.875971794128418
    9. '.S' → logprob: -14.000971794128418
    10. 'E' → logprob: -14.125971794128418

Token 294: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18210218846797943
    2. '):' → logprob: -1.8071022033691406
    3. '       ' → logprob: -7.057102203369141
    4. '-' → logprob: -7.932102203369141
    5. ' -' → logprob: -8.05710220336914
    6. '   ' → logprob: -8.30710220336914
    7. ' ):
' → logprob: -8.93210220336914
    8. '           ' → logprob: -9.18210220336914
    9. ' ):' → logprob: -9.18210220336914
    10. ')' → logprob: -9.30710220336914

Token 295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018728324212133884
    2. '   ' → logprob: -6.751873016357422
    3. ' for' → logprob: -7.876873016357422
    4. '	       ' → logprob: -9.001873016357422
    5. '       ' → logprob: -9.501873016357422
    6. '	   ' → logprob: -10.376873016357422
    7. ' self' → logprob: -10.876873016357422
    8. 'for' → logprob: -11.001873016357422
    9. ' if' → logprob: -11.001873016357422
    10. ' ' → logprob: -11.626873016357422

Token 296: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39259111881256104
    2. 'self' → logprob: -1.642591118812561
    3. '           ' → logprob: -2.2675909996032715
    4. ' for' → logprob: -4.2675909996032715
    5. '   ' → logprob: -4.8925909996032715
    6. ' self' → logprob: -6.0175909996032715
    7. '       ' → logprob: -6.7675909996032715
    8. 'print' → logprob: -7.1425909996032715
    9. 'if' → logprob: -7.3925909996032715
    10. 'raw' → logprob: -8.51759147644043

Token 297: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07889209687709808
    2. ' j' → logprob: -2.5788919925689697
    3. '   ' → logprob: -13.32889175415039
    4. 'k' → logprob: -15.32889175415039
    5. ' ' → logprob: -15.45389175415039
    6. '	j' → logprob: -15.70389175415039
    7. '0' → logprob: -16.82889175415039
    8. '    ' → logprob: -16.95389175415039
    9. '           ' → logprob: -17.07889175415039
    10. '  ' → logprob: -17.32889175415039

Token 298: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0016319748247042298
    2. 'in' → logprob: -6.501631736755371
    3. '<|end|>' → logprob: -10.001631736755371
    4. '(' → logprob: -10.126631736755371
    5. 'range' → logprob: -11.626631736755371
    6. ' ' → logprob: -11.751631736755371
    7. ' range' → logprob: -12.126631736755371
    8. ' (' → logprob: -12.376631736755371
    9. '<|end|>' → logprob: -12.751631736755371
    10. '0' → logprob: -12.876631736755371

Token 299: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20146061480045319
    2. ' range' → logprob: -1.701460599899292
    3. '(range' → logprob: -10.576460838317871
    4. '(' → logprob: -11.201460838317871
    5. '0' → logprob: -12.076460838317871
    6. ' ' → logprob: -13.701460838317871
    7. '	range' → logprob: -14.701460838317871
    8. ' xrange' → logprob: -14.826460838317871
    9. ' (' → logprob: -16.076459884643555
    10. 'i' → logprob: -16.451459884643555

Token 300: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005109758349135518
    2. '(i' → logprob: -8.625511169433594
    3. 'range' → logprob: -8.875511169433594
    4. ' range' → logprob: -9.125511169433594
    5. ' (' → logprob: -10.125511169433594
    6. '(range' → logprob: -11.000511169433594
    7. '0' → logprob: -11.625511169433594
    8. ' in' → logprob: -11.875511169433594
    9. '           ' → logprob: -12.625511169433594
    10. 'in' → logprob: -12.875511169433594

Token 301: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012285350821912289
    2. 'range' → logprob: -4.762285232543945
    3. 'i' → logprob: -6.637285232543945
    4. 'self' → logprob: -7.012285232543945
    5. '1' → logprob: -7.512285232543945
    6. ' ' → logprob: -7.637285232543945
    7. ' range' → logprob: -8.012285232543945
    8. '(' → logprob: -10.387285232543945
    9. ' i' → logprob: -10.887285232543945
    10. '(i' → logprob: -11.262285232543945

Token 302: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8568477630615234
    2. ',' → logprob: -0.8568477630615234
    3. '(self' → logprob: -2.2318477630615234
    4. '1' → logprob: -4.231847763061523
    5. 'self' → logprob: -5.106847763061523
    6. '0' → logprob: -5.106847763061523
    7. '       ' → logprob: -5.356847763061523
    8. '   ' → logprob: -5.731847763061523
    9. '(i' → logprob: -5.981847763061523
    10. '           ' → logprob: -6.231847763061523

Token 303: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002896167105063796
    2. ' self' → logprob: -5.877896308898926
    3. 'i' → logprob: -10.252896308898926
    4. 'len' → logprob: -10.627896308898926
    5. '0' → logprob: -11.252896308898926
    6. '           ' → logprob: -11.877896308898926
    7. '   ' → logprob: -12.002896308898926
    8. ' ' → logprob: -13.377896308898926
    9. '               ' → logprob: -13.877896308898926
    10. '       ' → logprob: -14.002896308898926

Token 304: '.E' (ID: 9032)
  Prédit: '.E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.E' → logprob: -0.0012220130302011967
    2. ')' → logprob: -7.501222133636475
    3. 'E' → logprob: -7.876222133636475
    4. '           ' → logprob: -9.626221656799316
    5. 'self' → logprob: -9.751221656799316
    6. '):
' → logprob: -10.126221656799316
    7. '       ' → logprob: -10.126221656799316
    8. '   ' → logprob: -10.751221656799316
    9. '               ' → logprob: -11.501221656799316
    10. '):' → logprob: -11.876221656799316

Token 305: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6329751014709473
    2. '):
' → logprob: -0.7579751014709473
    3. '           ' → logprob: -9.007974624633789
    4. ')' → logprob: -9.757974624633789
    5. '       ' → logprob: -10.007974624633789
    6. '):
' → logprob: -10.007974624633789
    7. '):

' → logprob: -10.382974624633789
    8. '               ' → logprob: -10.632974624633789
    9. ' ):' → logprob: -11.132974624633789
    10. '   ' → logprob: -11.757974624633789

Token 306: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032034965697675943
    2. '           ' → logprob: -6.128203392028809
    3. ' self' → logprob: -8.378203392028809
    4. '	           ' → logprob: -8.878203392028809
    5. '		       ' → logprob: -9.253203392028809
    6. ' if' → logprob: -9.253203392028809
    7. '			' → logprob: -9.378203392028809
    8. 'self' → logprob: -9.503203392028809
    9. '   ' → logprob: -10.128203392028809
    10. '<|end|>' → logprob: -10.128203392028809

Token 307: ' for' (ID: 395)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04775170236825943
    2. 'if' → logprob: -3.1727516651153564
    3. ' self' → logprob: -6.0477519035339355
    4. '               ' → logprob: -6.9227519035339355
    5. '           ' → logprob: -7.6727519035339355
    6. ' if' → logprob: -7.9227519035339355
    7. '                   ' → logprob: -7.9227519035339355
    8. '   ' → logprob: -8.672751426696777
    9. '	self' → logprob: -11.672751426696777
    10. '                       ' → logprob: -11.922751426696777

Token 308: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.020583583042025566
    2. ' k' → logprob: -3.8955836296081543
    3. '   ' → logprob: -11.770583152770996
    4. 't' → logprob: -12.145583152770996
    5. 'm' → logprob: -12.520583152770996
    6. '    ' → logprob: -12.895583152770996
    7. 'v' → logprob: -12.895583152770996
    8. 'x' → logprob: -13.020583152770996
    9. ' ' → logprob: -13.145583152770996
    10. 'l' → logprob: -13.270583152770996

Token 309: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012526480481028557
    2. 'in' → logprob: -4.387526512145996
    3. '<|end|>' → logprob: -12.262526512145996
    4. ' ' → logprob: -13.137526512145996
    5. '	in' → logprob: -13.762526512145996
    6. 'range' → logprob: -13.762526512145996
    7. '...' → logprob: -14.012526512145996
    8. '<|end|>' → logprob: -14.012526512145996
    9. 's' → logprob: -14.137526512145996
    10. ' =' → logprob: -14.262526512145996

Token 310: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20142464339733124
    2. ' range' → logprob: -1.7014245986938477
    3. '(range' → logprob: -11.826424598693848
    4. '	range' → logprob: -13.576424598693848
    5. '(' → logprob: -13.826424598693848
    6. ' ' → logprob: -14.201424598693848
    7. '   ' → logprob: -14.826424598693848
    8. '0' → logprob: -15.576424598693848
    9. ' xrange' → logprob: -15.701424598693848
    10. '  ' → logprob: -15.951424598693848

Token 311: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.2378600735682994e-05
    2. '(k' → logprob: -11.250032424926758
    3. ' (' → logprob: -12.250032424926758
    4. '               ' → logprob: -12.250032424926758
    5. '                   ' → logprob: -12.250032424926758
    6. '(i' → logprob: -13.625032424926758
    7. 'in' → logprob: -14.125032424926758
    8. '(self' → logprob: -14.250032424926758
    9. '                       ' → logprob: -15.000032424926758
    10. ' in' → logprob: -15.000032424926758

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009570781840011477
    2. '               ' → logprob: -7.625957012176514
    3. 'self' → logprob: -8.125957489013672
    4. '                   ' → logprob: -9.500957489013672
    5. '(' → logprob: -9.750957489013672
    6. ' ' → logprob: -10.500957489013672
    7. '   ' → logprob: -12.750957489013672
    8. 'j' → logprob: -13.000957489013672
    9. 'range' → logprob: -13.250957489013672
    10. '(self' → logprob: -13.375957489013672

Token 313: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0805147886276245
    2. '(' → logprob: -1.4555147886276245
    3. ',' → logprob: -1.5805147886276245
    4. 'self' → logprob: -2.455514907836914
    5. '               ' → logprob: -3.330514907836914
    6. '(self' → logprob: -3.580514907836914
    7. 'k' → logprob: -4.080514907836914
    8. '           ' → logprob: -4.830514907836914
    9. 'range' → logprob: -4.830514907836914
    10. '(k' → logprob: -4.955514907836914

Token 314: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014864159747958183
    2. ' self' → logprob: -6.626486301422119
    3. '               ' → logprob: -8.876486778259277
    4. '                   ' → logprob: -12.001486778259277
    5. '           ' → logprob: -12.126486778259277
    6. '   ' → logprob: -12.501486778259277
    7. ' ' → logprob: -14.001486778259277
    8. '	self' → logprob: -14.001486778259277
    9. 'j' → logprob: -14.251486778259277
    10. '0' → logprob: -14.376486778259277

Token 315: '.E' (ID: 9032)
  Prédit: '.E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.E' → logprob: -0.0006674022297374904
    2. ',E' → logprob: -7.625667572021484
    3. '               ' → logprob: -10.000667572021484
    4. 'self' → logprob: -10.125667572021484
    5. 'E' → logprob: -10.875667572021484
    6. '   ' → logprob: -11.250667572021484
    7. '           ' → logprob: -11.250667572021484
    8. ')' → logprob: -11.500667572021484
    9. '	E' → logprob: -11.625667572021484
    10. '       ' → logprob: -11.875667572021484

Token 316: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25229939818382263
    2. '):' → logprob: -1.502299427986145
    3. '                   ' → logprob: -8.752299308776855
    4. '               ' → logprob: -9.377299308776855
    5. '):
' → logprob: -10.252299308776855
    6. ')' → logprob: -10.502299308776855
    7. '):

' → logprob: -11.002299308776855
    8. '                       ' → logprob: -11.127299308776855
    9. '           ' → logprob: -11.627299308776855
    10. ':' → logprob: -12.252299308776855

Token 317: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004526365548372269
    2. ' if' → logprob: -6.504526138305664
    3. '<|end|>' → logprob: -7.129526138305664
    4. '                       ' → logprob: -7.254526138305664
    5. '		           ' → logprob: -7.754526138305664
    6. '               ' → logprob: -8.129526138305664
    7. '           ' → logprob: -8.879526138305664
    8. '				' → logprob: -9.254526138305664
    9. 'if' → logprob: -9.504526138305664
    10. '                    ' → logprob: -9.754526138305664

Token 318: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10762649774551392
    2. ' if' → logprob: -2.607626438140869
    3. 'self' → logprob: -4.232626438140869
    4. '                       ' → logprob: -4.357626438140869
    5. ' self' → logprob: -7.482626438140869
    6. '                   ' → logprob: -8.732626914978027
    7. '                           ' → logprob: -8.982626914978027
    8. '   ' → logprob: -9.607626914978027
    9. '	if' → logprob: -10.232626914978027
    10. '                               ' → logprob: -10.732626914978027

Token 319: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006850473582744598
    2. ' self' → logprob: -5.381850242614746
    3. '                   ' → logprob: -6.631850242614746
    4. '   ' → logprob: -7.506850242614746
    5. '                       ' → logprob: -8.756850242614746
    6. '(self' → logprob: -9.131850242614746
    7. '                           ' → logprob: -10.506850242614746
    8. '	self' → logprob: -10.631850242614746
    9. 'j' → logprob: -11.756850242614746
    10. ' ' → logprob: -12.006850242614746

Token 320: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.0011805851245298982
    2. 'G' → logprob: -6.751180648803711
    3. '.' → logprob: -12.126180648803711
    4. '	G' → logprob: -12.751180648803711
    5. '_G' → logprob: -14.876180648803711
    6. '   ' → logprob: -14.876180648803711
    7. 'self' → logprob: -15.126180648803711
    8. '.g' → logprob: -15.251180648803711
    9. ' G' → logprob: -15.626180648803711
    10. ' .' → logprob: -15.876180648803711

Token 321: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00038693982060067356
    2. '[i' → logprob: -7.875386714935303
    3. '[k' → logprob: -12.750387191772461
    4. 'j' → logprob: -12.875387191772461
    5. '[' → logprob: -14.625387191772461
    6. ' [' → logprob: -14.875387191772461
    7. '   ' → logprob: -15.250387191772461
    8. ' j' → logprob: -16.12538719177246
    9. '[
' → logprob: -17.00038719177246
    10. '
' → logprob: -17.37538719177246

Token 322: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.038606636226177216
    2. '][' → logprob: -3.288606643676758
    3. '[i' → logprob: -8.163606643676758
    4. '[k' → logprob: -8.288606643676758
    5. ' [' → logprob: -11.538606643676758
    6. '[' → logprob: -12.038606643676758
    7. '   ' → logprob: -12.288606643676758
    8. ' ][' → logprob: -12.663606643676758
    9. 'j' → logprob: -13.288606643676758
    10. '}[' → logprob: -14.038606643676758

Token 323: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011723674833774567
    2. 'j' → logprob: -6.7511725425720215
    3. ' k' → logprob: -13.376172065734863
    4. '][' → logprob: -15.501172065734863
    5. '[k' → logprob: -15.751172065734863
    6. '   ' → logprob: -16.00117301940918
    7. ']' → logprob: -16.37617301940918
    8. '	k' → logprob: -17.25117301940918
    9. ' ' → logprob: -18.75117301940918
    10. ' j' → logprob: -18.87617301940918

Token 324: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002292398363351822
    2. ']+' → logprob: -6.377292633056641
    3. '>' → logprob: -7.752292633056641
    4. ']>' → logprob: -9.62729263305664
    5. ' ]' → logprob: -10.37729263305664
    6. '+' → logprob: -10.37729263305664
    7. '   ' → logprob: -11.75229263305664
    8. ')' → logprob: -11.75229263305664
    9. '```' → logprob: -12.12729263305664
    10. ']!=' → logprob: -13.37729263305664

Token 325: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.045783333480358124
    2. '>' → logprob: -3.170783281326294
    3. ' +' → logprob: -6.170783519744873
    4. ']' → logprob: -7.795783519744873
    5. ']+' → logprob: -8.920783042907715
    6. '<' → logprob: -10.295783042907715
    7. '```' → logprob: -10.670783042907715
    8. ')' → logprob: -11.045783042907715
    9. '+self' → logprob: -11.295783042907715
    10. ' >' → logprob: -11.545783042907715

Token 326: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005246798973530531
    2. ' self' → logprob: -5.255246639251709
    3. '                   ' → logprob: -12.755247116088867
    4. '<|end|>' → logprob: -12.880247116088867
    5. '[self' → logprob: -13.130247116088867
    6. '	self' → logprob: -13.755247116088867
    7. '(self' → logprob: -14.380247116088867
    8. '                       ' → logprob: -14.505247116088867
    9. '0' → logprob: -14.505247116088867
    10. ' ' → logprob: -14.630247116088867

Token 327: '.G' (ID: 3773)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0020228547509759665
    2. '.G' → logprob: -6.377022743225098
    3. 'k' → logprob: -8.502022743225098
    4. 'self' → logprob: -10.502022743225098
    5. ' G' → logprob: -10.502022743225098
    6. '[k' → logprob: -10.502022743225098
    7. '   ' → logprob: -11.627022743225098
    8. '           ' → logprob: -12.127022743225098
    9. '               ' → logprob: -12.502022743225098
    10. '	G' → logprob: -12.627022743225098

Token 328: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.020738892257213593
    2. 'k' → logprob: -3.8957388401031494
    3. '[j' → logprob: -8.64573860168457
    4. 'kj' → logprob: -11.77073860168457
    5. '	k' → logprob: -12.64573860168457
    6. 'j' → logprob: -12.89573860168457
    7. '[' → logprob: -13.14573860168457
    8. '{k' → logprob: -13.27073860168457
    9. '(k' → logprob: -14.14573860168457
    10. ' k' → logprob: -14.52073860168457

Token 329: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3133341372013092
    2. '[j' → logprob: -1.3133341073989868
    3. '[i' → logprob: -10.063334465026855
    4. ']' → logprob: -11.438334465026855
    5. 'j' → logprob: -11.563334465026855
    6. '[' → logprob: -13.063334465026855
    7. ' ][' → logprob: -13.563334465026855
    8. '```' → logprob: -13.688334465026855
    9. '>[' → logprob: -13.813334465026855
    10. ' [' → logprob: -14.063334465026855

Token 330: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.226628895296017e-06
    2. ' j' → logprob: -12.000007629394531
    3. '[j' → logprob: -14.125007629394531
    4. '	j' → logprob: -15.125007629394531
    5. 'k' → logprob: -17.25000762939453
    6. '   ' → logprob: -17.62500762939453
    7. ']' → logprob: -17.75000762939453
    8. '_j' → logprob: -17.87500762939453
    9. 'i' → logprob: -18.25000762939453
    10. '```' → logprob: -18.37500762939453

Token 331: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.22206677496433258
    2. '<' → logprob: -1.8470667600631714
    3. ']' → logprob: -3.222066879272461
    4. ']<' → logprob: -7.097066879272461
    5. ' ' → logprob: -8.347066879272461
    6. ')' → logprob: -9.222066879272461
    7. '   ' → logprob: -9.722066879272461
    8. '[' → logprob: -10.222066879272461
    9. '```' → logprob: -10.472066879272461
    10. '<|end|>' → logprob: -10.847066879272461

Token 332: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47422510385513306
    2. '<' → logprob: -0.9742251038551331
    3. ' ' → logprob: -9.599225044250488
    4. '   ' → logprob: -11.224225044250488
    5. '<int' → logprob: -11.474225044250488
    6. '[' → logprob: -11.974225044250488
    7. '  ' → logprob: -12.724225044250488
    8. ')' → logprob: -12.724225044250488
    9. '<n' → logprob: -12.724225044250488
    10. '<class' → logprob: -12.724225044250488

Token 333: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38689425587654114
    2. ' self' → logprob: -1.1368942260742188
    3. '                   ' → logprob: -11.136894226074219
    4. '	self' → logprob: -12.636894226074219
    5. '                       ' → logprob: -13.261894226074219
    6. '=self' → logprob: -13.761894226074219
    7. ' ' → logprob: -14.636894226074219
    8. '(self' → logprob: -14.761894226074219
    9. '               ' → logprob: -14.761894226074219
    10. '                           ' → logprob: -15.386894226074219

Token 334: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.009853244759142399
    2. 'G' → logprob: -4.634853363037109
    3. '.' → logprob: -9.38485336303711
    4. '[' → logprob: -12.38485336303711
    5. '	G' → logprob: -12.75985336303711
    6. ' .' → logprob: -13.25985336303711
    7. '[G' → logprob: -13.38485336303711
    8. 'out' → logprob: -14.25985336303711
    9. ' G' → logprob: -14.88485336303711
    10. '_G' → logprob: -15.25985336303711

Token 335: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.750000953674316
    3. '[' → logprob: -15.750000953674316
    4. ' [' → logprob: -16.000001907348633
    5. '[I' → logprob: -16.500001907348633
    6. '][' → logprob: -17.000001907348633
    7. ' i' → logprob: -17.125001907348633
    8. '```' → logprob: -17.625001907348633
    9. '	i' → logprob: -18.500001907348633
    10. ' ' → logprob: -19.000001907348633

Token 336: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0014230913948267698
    2. '[j' → logprob: -6.751422882080078
    3. '[i' → logprob: -8.626422882080078
    4. ']' → logprob: -10.251422882080078
    5. ' ][' → logprob: -10.501422882080078
    6. '[' → logprob: -12.251422882080078
    7. '[k' → logprob: -12.376422882080078
    8. '   ' → logprob: -14.876422882080078
    9. '}[' → logprob: -15.501422882080078
    10. '>[' → logprob: -16.001422882080078

Token 337: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4974866644479334e-05
    2. ' j' → logprob: -11.250015258789062
    3. 'k' → logprob: -14.000015258789062
    4. ' ' → logprob: -15.125015258789062
    5. ']' → logprob: -15.500015258789062
    6. '[j' → logprob: -16.125015258789062
    7. '   ' → logprob: -16.125015258789062
    8. '<|end|>' → logprob: -16.500015258789062
    9. '```' → logprob: -16.625015258789062
    10. '	j' → logprob: -16.625015258789062

Token 338: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00358391460031271
    2. ']:
' → logprob: -5.878583908081055
    3. ']' → logprob: -7.503583908081055
    4. '):' → logprob: -9.003583908081055
    5. ':' → logprob: -9.753583908081055
    6. ']:
' → logprob: -11.003583908081055
    7. '}:' → logprob: -11.503583908081055
    8. '>:' → logprob: -12.503583908081055
    9. '):
' → logprob: -13.003583908081055
    10. ' ]' → logprob: -13.253583908081055

Token 339: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.026628965511918068
    2. ' ' → logprob: -4.5266289710998535
    3. '                               ' → logprob: -5.1516289710998535
    4. '                           ' → logprob: -5.5266289710998535
    5. ':' → logprob: -6.4016289710998535
    6. '                        ' → logprob: -6.7766289710998535
    7. '                   ' → logprob: -7.0266289710998535
    8. '<|end|>' → logprob: -8.151628494262695
    9. '                        
' → logprob: -8.276628494262695
    10. '                    ' → logprob: -8.401628494262695

Token 340: ' self' (ID: 1051)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.1306789368391037
    2. '                               ' → logprob: -3.00567889213562
    3. ' self' → logprob: -3.38067889213562
    4. '                       ' → logprob: -3.50567889213562
    5. 'self' (adapté à ' self') → logprob: -5.005679130554199
    6. '                   ' → logprob: -7.880679130554199
    7. '                            ' → logprob: -8.0056791305542
    8. '   ' → logprob: -8.5056791305542
    9. '                                   ' → logprob: -8.5056791305542
    10. '						' → logprob: -8.6306791305542

Token 341: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -7.481510692741722e-05
    2. 'G' → logprob: -9.75007438659668
    3. '.' → logprob: -11.25007438659668
    4. '	G' → logprob: -13.50007438659668
    5. ' .' → logprob: -13.87507438659668
    6. 'self' → logprob: -15.37507438659668
    7. '_G' → logprob: -15.62507438659668
    8. '[' → logprob: -16.50007438659668
    9. ' G' → logprob: -16.50007438659668
    10. '].' → logprob: -16.75007438659668

Token 342: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.0126840758603066e-05
    2. '[' → logprob: -10.500040054321289
    3. '[I' → logprob: -11.375040054321289
    4. '][' → logprob: -15.250040054321289
    5. '<|end|>' → logprob: -15.375040054321289
    6. '[int' → logprob: -15.625040054321289
    7. 'i' → logprob: -15.875040054321289
    8. '[j' → logprob: -16.62504005432129
    9. ' [' → logprob: -17.00004005432129
    10. '[index' → logprob: -17.37504005432129

Token 343: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007702456787228584
    2. '[i' → logprob: -4.882702350616455
    3. ']' → logprob: -10.132702827453613
    4. '[' → logprob: -10.882702827453613
    5. '[j' → logprob: -11.257702827453613
    6. ' ][' → logprob: -11.382702827453613
    7. '[k' → logprob: -12.382702827453613
    8. '[I' → logprob: -12.632702827453613
    9. '"][' → logprob: -13.507702827453613
    10. '>[' → logprob: -14.132702827453613

Token 344: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.372294698550832e-06
    2. 'j' → logprob: -11.750009536743164
    3. 'i' → logprob: -14.625009536743164
    4. ' k' → logprob: -15.125009536743164
    5. '[k' → logprob: -15.250009536743164
    6. ']' → logprob: -16.500009536743164
    7. '	k' → logprob: -16.625009536743164
    8. '][' → logprob: -16.750009536743164
    9. '```' → logprob: -16.750009536743164
    10. '[' → logprob: -17.375009536743164

Token 345: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37559807300567627
    2. ' =' → logprob: -1.2505980730056763
    3. ']' → logprob: -3.6255979537963867
    4. ']=' → logprob: -8.875597953796387
    5. ' ' → logprob: -12.500597953796387
    6. ' ]' → logprob: -12.500597953796387
    7. ')' → logprob: -12.625597953796387
    8. '>' → logprob: -14.125597953796387
    9. '    ' → logprob: -14.125597953796387
    10. ',' → logprob: -14.875597953796387

Token 346: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '＝' → logprob: -16.701414108276367
    4. ',' → logprob: -17.201414108276367
    5. '.=' → logprob: -17.326414108276367
    6. ' ' → logprob: -17.951414108276367
    7. '=k' → logprob: -18.076414108276367
    8. '.' → logprob: -18.451414108276367
    9. ')' → logprob: -18.826414108276367
    10. '=self' → logprob: -19.576414108276367

Token 347: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759719014167786
    2. 'self' → logprob: -0.8259719014167786
    3. '                           ' → logprob: -11.450971603393555
    4. '                       ' → logprob: -11.450971603393555
    5. '                               ' → logprob: -13.200971603393555
    6. '	self' → logprob: -13.325971603393555
    7. ' ' → logprob: -13.575971603393555
    8. ' ' → logprob: -13.825971603393555
    9. '                        ' → logprob: -13.825971603393555
    10. '                                   ' → logprob: -13.825971603393555

Token 348: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.016147097572684288
    2. 'G' → logprob: -4.391147136688232
    3. '[i' → logprob: -5.641147136688232
    4. '	G' → logprob: -10.516146659851074
    5. '[' → logprob: -11.391146659851074
    6. '[G' → logprob: -11.641146659851074
    7. ' G' → logprob: -11.766146659851074
    8. '_G' → logprob: -12.141146659851074
    9. '.' → logprob: -12.516146659851074
    10. ' .' → logprob: -13.016146659851074

Token 349: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -14.000001907348633
    3. 'i' → logprob: -14.250001907348633
    4. '[k' → logprob: -14.375001907348633
    5. '[I' → logprob: -17.250001907348633
    6. ' [' → logprob: -17.750001907348633
    7. '[j' → logprob: -18.125001907348633
    8. '```' → logprob: -18.250001907348633
    9. '[
' → logprob: -19.750001907348633
    10. ' ' → logprob: -19.875001907348633

Token 350: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14352604746818542
    2. '[k' → logprob: -2.018526077270508
    3. 'k' → logprob: -8.393526077270508
    4. '[i' → logprob: -8.393526077270508
    5. '[' → logprob: -8.518526077270508
    6. ',k' → logprob: -10.268526077270508
    7. '           ' → logprob: -10.518526077270508
    8. ' k' → logprob: -10.893526077270508
    9. ' ][' → logprob: -10.893526077270508
    10. '                       ' → logprob: -11.143526077270508

Token 351: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1637164789135568e-05
    2. ' k' → logprob: -12.125011444091797
    3. 'j' → logprob: -12.250011444091797
    4. '[k' → logprob: -14.875011444091797
    5. '	k' → logprob: -15.000011444091797
    6. 'i' → logprob: -15.250011444091797
    7. '[' → logprob: -16.375011444091797
    8. ' ' → logprob: -17.000011444091797
    9. '```' → logprob: -17.000011444091797
    10. '   ' → logprob: -17.375011444091797

Token 352: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016633525490760803
    2. ']+' → logprob: -4.1416335105896
    3. '+' → logprob: -7.6416335105896
    4. ' +' → logprob: -9.516633987426758
    5. '+k' → logprob: -10.641633987426758
    6. ' ]' → logprob: -11.266633987426758
    7. '[' → logprob: -12.766633987426758
    8. '[k' → logprob: -13.266633987426758
    9. '][' → logprob: -14.016633987426758
    10. '}' → logprob: -14.266633987426758

Token 353: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31901296973228455
    2. ' +' → logprob: -1.319012999534607
    3. '+k' → logprob: -5.1940131187438965
    4. '[' → logprob: -9.444012641906738
    5. '+j' → logprob: -9.819012641906738
    6. '[k' → logprob: -10.319012641906738
    7. '+self' → logprob: -11.569012641906738
    8. '[j' → logprob: -12.444012641906738
    9. ']+' → logprob: -13.569012641906738
    10. '+[' → logprob: -14.069012641906738

Token 354: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4740833044052124
    2. ' self' → logprob: -0.9740833044052124
    3. '	self' → logprob: -13.099082946777344
    4. ''' → logprob: -13.974082946777344
    5. ' ' → logprob: -14.099082946777344
    6. ' ' → logprob: -14.224082946777344
    7. '(self' → logprob: -14.849082946777344
    8. '"' → logprob: -15.349082946777344
    9. '```' → logprob: -15.724082946777344
    10. 's' → logprob: -15.849082946777344

Token 355: '.G' (ID: 3773)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.2893204092979431
    2. 'G' → logprob: -1.664320468902588
    3. '.G' → logprob: -2.789320468902588
    4. '[i' → logprob: -8.03931999206543
    5. '_G' → logprob: -10.41431999206543
    6. '[G' → logprob: -10.66431999206543
    7. '[' → logprob: -11.03931999206543
    8. '```' → logprob: -11.41431999206543
    9. ' G' → logprob: -11.53931999206543
    10. 'k' → logprob: -11.66431999206543

Token 356: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00015943869948387146
    2. 'k' → logprob: -8.75015926361084
    3. '[' → logprob: -15.00015926361084
    4. '[i' → logprob: -15.62515926361084
    5. '(k' → logprob: -16.000160217285156
    6. '	k' → logprob: -16.625160217285156
    7. '{k' → logprob: -16.750160217285156
    8. '-k' → logprob: -17.125160217285156
    9. '```' → logprob: -17.250160217285156
    10. 'G' → logprob: -17.750160217285156

Token 357: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004136222414672375
    2. '[j' → logprob: -5.504136085510254
    3. ']' → logprob: -10.129136085510254
    4. '"][' → logprob: -12.379136085510254
    5. ''][' → logprob: -12.754136085510254
    6. ' ][' → logprob: -12.879136085510254
    7. '[k' → logprob: -13.004136085510254
    8. 'j' → logprob: -13.254136085510254
    9. ']][' → logprob: -14.004136085510254
    10. '[' → logprob: -14.254136085510254

Token 358: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.320199877838604e-07
    2. ' j' → logprob: -15.125
    3. '[j' → logprob: -15.625
    4. 'k' → logprob: -17.125
    5. '```' → logprob: -18.125
    6. '	j' → logprob: -18.25
    7. 'i' → logprob: -18.375
    8. ']' → logprob: -19.375
    9. 'g' → logprob: -19.375
    10. '
' → logprob: -19.5

Token 359: ']
' (ID: 1592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03565747290849686
    2. ']' → logprob: -4.5356574058532715
    3. ')' → logprob: -4.7856574058532715
    4. '                           ' → logprob: -5.4106574058532715
    5. ')
' → logprob: -6.1606574058532715
    6. ']
' → logprob: -6.2856574058532715
    7. '                        ' → logprob: -6.2856574058532715
    8. '           ' → logprob: -6.5356574058532715
    9. '<|end|>' → logprob: -6.7856574058532715
    10. '					' → logprob: -7.1606574058532715

Token 360: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0014991489006206393
    2. ' self' → logprob: -6.626499176025391
    3. '                       ' → logprob: -9.37649917602539
    4. '                           ' → logprob: -9.62649917602539
    5. '                               ' → logprob: -11.50149917602539
    6. '	self' → logprob: -12.00149917602539
    7. ' ' → logprob: -14.25149917602539
    8. '                   ' → logprob: -14.25149917602539
    9. '[self' → logprob: -14.62649917602539
    10. '           ' → logprob: -14.75149917602539

Token 362: '.Path' (ID: 31237)
  Prédit: '.Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Path' → logprob: -0.0008772778091952205
    2. '.' → logprob: -7.625877380371094
    3. '.P' → logprob: -7.875877380371094
    4. 'Path' → logprob: -12.625877380371094
    5. '@Path' → logprob: -13.125877380371094
    6. '.Point' → logprob: -13.375877380371094
    7. '	Path' → logprob: -13.625877380371094
    8. '<Path' → logprob: -15.500877380371094
    9. '.Paths' → logprob: -15.750877380371094
    10. '.
' → logprob: -16.000877380371094

Token 363: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004078758880496025
    2. '[j' → logprob: -5.5040788650512695
    3. '][' → logprob: -16.629077911376953
    4. '[' → logprob: -16.754077911376953
    5. '```' → logprob: -17.254077911376953
    6. ' [' → logprob: -17.629077911376953
    7. 'j' → logprob: -17.629077911376953
    8. '[I' → logprob: -17.754077911376953
    9. '[k' → logprob: -18.379077911376953
    10. 'i' → logprob: -18.504077911376953

Token 364: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013416734291240573
    2. '[j' → logprob: -6.626341819763184
    3. ']' → logprob: -11.876341819763184
    4. ' ][' → logprob: -12.501341819763184
    5. '"][' → logprob: -12.876341819763184
    6. 'j' → logprob: -13.876341819763184
    7. ''][' → logprob: -14.126341819763184
    8. '```' → logprob: -15.501341819763184
    9. '[' → logprob: -15.626341819763184
    10. '[k' → logprob: -16.251340866088867

Token 365: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.64708495605737e-05
    2. 'k' → logprob: -9.750066757202148
    3. ' j' → logprob: -11.875066757202148
    4. '	j' → logprob: -14.500066757202148
    5. '[j' → logprob: -15.000066757202148
    6. 'i' → logprob: -16.37506675720215
    7. 'jk' → logprob: -17.50006675720215
    8. '   ' → logprob: -17.81256675720215
    9. '```' → logprob: -17.93756675720215
    10. ',j' → logprob: -18.50006675720215

Token 366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007683054078370333
    2. ']=' → logprob: -5.132683277130127
    3. '=' → logprob: -6.382683277130127
    4. '=k' → logprob: -10.382682800292969
    5. '[k' → logprob: -11.507682800292969
    6. 'k' → logprob: -11.632682800292969
    7. ' ]' → logprob: -11.757682800292969
    8. ' =' → logprob: -12.632682800292969
    9. '=i' → logprob: -14.757682800292969
    10. '[' → logprob: -15.132682800292969

Token 367: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008817124180495739
    2. ' =' → logprob: -4.758817195892334
    3. '=k' → logprob: -8.508816719055176
    4. 'k' → logprob: -14.008816719055176
    5. '＝' → logprob: -17.633817672729492
    6. '=i' → logprob: -18.383817672729492
    7. '=j' → logprob: -19.008817672729492
    8. '[k' → logprob: -19.133817672729492
    9. ' k' → logprob: -19.383817672729492
    10. '.=' → logprob: -19.508817672729492

Token 368: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.704273118884885e-07
    2. ' k' → logprob: -14.750000953674316
    3. '	k' → logprob: -15.750000953674316
    4. '   ' → logprob: -18.0
    5. '[k' → logprob: -18.875
    6. 'self' → logprob: -19.125
    7. 'kx' → logprob: -19.5
    8. '[' → logprob: -20.0
    9. '           ' → logprob: -20.5
    10. 'i' → logprob: -20.5

Token 369: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: ' short' (ID: 4022)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7505755424499512
    2. 'print' → logprob: -2.125575542449951
    3. ' main' → logprob: -2.125575542449951
    4. ' find' → logprob: -3.125575542449951
    5. ' solve' → logprob: -3.250575542449951
    6. ' output' → logprob: -3.375575542449951
    7. ' get' → logprob: -3.625575542449951
    8. ' shortest' → logprob: -4.000575542449951
    9. ' flo' → logprob: -4.125575542449951
    10. 'main' → logprob: -4.625575542449951

Token 373: 'Path' (ID: 2619)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0011252141557633877
    2. '_path' → logprob: -7.626125335693359
    3. 'path' → logprob: -7.626125335693359
    4. 'Path' → logprob: -9.62612533569336
    5. 'test' → logprob: -11.25112533569336
    6. '_est' → logprob: -11.87612533569336
    7. 'es' → logprob: -12.06362533569336
    8. 'st' → logprob: -12.31362533569336
    9. 'dist' → logprob: -12.37612533569336
    10. 'e' → logprob: -12.87612533569336

Token 374: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0025710216723382473
    2. '(' → logprob: -6.502571105957031
    3. ' (' → logprob: -7.627571105957031
    4. '(s' → logprob: -7.752571105957031
    5. '   ' → logprob: -10.002571105957031
    6. '       ' → logprob: -10.252571105957031
    7. 'self' → logprob: -10.877571105957031
    8. '(i' → logprob: -11.627571105957031
    9. '(sel' → logprob: -12.127571105957031
    10. 's' → logprob: -12.627571105957031

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027444851584732533
    2. ',self' → logprob: -7.252744674682617
    3. 'self' → logprob: -7.377744674682617
    4. ' ,' → logprob: -7.752744674682617
    5. ',i' → logprob: -7.877744674682617
    6. ',s' → logprob: -8.252744674682617
    7. '(self' → logprob: -9.502744674682617
    8. '):' → logprob: -10.127744674682617
    9. ',j' → logprob: -10.377744674682617
    10. ',x' → logprob: -10.877744674682617

Token 376: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.831516444683075
    2. 'i' → logprob: -1.5815165042877197
    3. 'u' → logprob: -2.0815165042877197
    4. 'start' → logprob: -2.2065165042877197
    5. ' s' → logprob: -3.7065165042877197
    6. 'self' → logprob: -4.081516265869141
    7. 'src' → logprob: -4.081516265869141
    8. 'a' → logprob: -4.456516265869141
    9. ' start' → logprob: -4.581516265869141
    10. 'x' → logprob: -4.706516265869141

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016307900659739971
    2. ',j' → logprob: -6.876630783081055
    3. ' ,' → logprob: -7.501630783081055
    4. '):' → logprob: -10.251630783081055
    5. '   ' → logprob: -12.626630783081055
    6. '):
' → logprob: -13.501630783081055
    7. 'j' → logprob: -13.626630783081055
    8. ',int' → logprob: -13.876630783081055
    9. ' j' → logprob: -14.001630783081055
    10. '  ' → logprob: -15.126630783081055

Token 378: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0700915977358818
    2. ' j' → logprob: -2.695091485977173
    3. '   ' → logprob: -9.570091247558594
    4. ' ' → logprob: -10.820091247558594
    5. '	j' → logprob: -10.945091247558594
    6. '  ' → logprob: -11.320091247558594
    7. 'k' → logprob: -11.695091247558594
    8. '    ' → logprob: -11.945091247558594
    9. 'v' → logprob: -12.195091247558594
    10. 'f' → logprob: -12.320091247558594

Token 379: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009953462518751621
    2. '):
' → logprob: -4.634953498840332
    3. ')' → logprob: -9.134953498840332
    4. '):
' → logprob: -9.384953498840332
    5. ' ):' → logprob: -12.884953498840332
    6. '   ' → logprob: -13.384953498840332
    7. ':' → logprob: -14.384953498840332
    8. '):

' → logprob: -14.634953498840332
    9. ',' → logprob: -15.259953498840332
    10. '       ' → logprob: -16.259952545166016

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22418081760406494
    2. 'if' → logprob: -2.0991806983947754
    3. ' if' → logprob: -3.0991806983947754
    4. '   ' → logprob: -3.5991806983947754
    5. '	if' → logprob: -5.849180698394775
    6. 'out' → logprob: -6.349180698394775
    7. 'path' → logprob: -8.349181175231934
    8. ' out' → logprob: -8.599181175231934
    9. 'result' → logprob: -8.974181175231934
    10. '    ' → logprob: -9.224181175231934

Token 381: ' path' (ID: 3104)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015077588148415089
    2. '   ' → logprob: -5.640077590942383
    3. 'path' (adapté à ' path') → logprob: -6.015077590942383
    4. 'p' → logprob: -6.140077590942383
    5. '       ' → logprob: -6.140077590942383
    6. 'k' → logprob: -6.515077590942383
    7. 'res' → logprob: -6.890077590942383
    8. 'out' → logprob: -7.140077590942383
    9. ' if' → logprob: -8.140077590942383
    10. 'ret' → logprob: -8.640077590942383

Token 382: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4504263401031494
    2. '=' → logprob: -1.0754263401031494
    3. '=[]' → logprob: -4.07542610168457
    4. '=[]
' → logprob: -5.57542610168457
    5. '   ' → logprob: -8.82542610168457
    6. ' ' → logprob: -8.95042610168457
    7. '=[' → logprob: -9.07542610168457
    8. '=[]
' → logprob: -9.95042610168457
    9. '_list' → logprob: -10.20042610168457
    10. '[]' → logprob: -10.32542610168457

Token 383: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02689695730805397
    2. '[' → logprob: -4.026896953582764
    3. '[]
' → logprob: -5.526896953582764
    4. ' []' → logprob: -5.901896953582764
    5. '[j' → logprob: -7.401896953582764
    6. '[self' → logprob: -7.651896953582764
    7. '[i' → logprob: -8.026897430419922
    8. ' [' → logprob: -8.151897430419922
    9. '[]

' → logprob: -9.276897430419922
    10. '[str' → logprob: -9.776897430419922

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012302900664508343
    2. ' if' → logprob: -5.012302875518799
    3. 'if' → logprob: -5.387302875518799
    4. '<|end|>' → logprob: -7.637302875518799
    5. '   ' → logprob: -8.137303352355957
    6. '	if' → logprob: -8.887303352355957
    7. 'def' → logprob: -10.262303352355957
    8. '	' → logprob: -11.012303352355957
    9. ',' → logprob: -12.012303352355957
    10. '<|end|>' → logprob: -12.387303352355957

Token 385: ' def' (ID: 1056)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8303665518760681
    2. 'def' (adapté à ' def') → logprob: -0.8303665518760681
    3. 'k' → logprob: -2.080366611480713
    4. '       ' → logprob: -6.330366611480713
    5. '   ' → logprob: -7.830366611480713
    6. 'while' → logprob: -7.955366611480713
    7. 'p' → logprob: -7.955366611480713
    8. 'path' → logprob: -9.205366134643555
    9. 't' → logprob: -9.705366134643555
    10. ' def' → logprob: -9.955366134643555

Token 386: ' core' (ID: 10089)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.6292003393173218
    2. 'dfs' → logprob: -2.0042004585266113
    3. 'find' → logprob: -2.1292004585266113
    4. 're' → logprob: -2.2542004585266113
    5. ' get' → logprob: -2.7542004585266113
    6. '_path' → logprob: -3.2542004585266113
    7. ' find' → logprob: -3.2542004585266113
    8. ' dfs' → logprob: -3.5042004585266113
    9. 'rec' → logprob: -3.6292004585266113
    10. 'path' → logprob: -3.6292004585266113

Token 387: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.46151870489120483
    2. '_path' → logprob: -1.7115187644958496
    3. 'Path' → logprob: -1.9615187644958496
    4. 'path' → logprob: -3.3365187644958496
    5. '(' → logprob: -5.46151876449585
    6. '(u' → logprob: -5.83651876449585
    7. '(self' → logprob: -6.83651876449585
    8. 'def' → logprob: -7.08651876449585
    9. '_Path' → logprob: -7.08651876449585
    10. '(n' → logprob: -7.46151876449585

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002600983949378133
    2. ',j' → logprob: -6.002601146697998
    3. ' ,' → logprob: -9.12760066986084
    4. '       ' → logprob: -12.00260066986084
    5. ',k' → logprob: -12.25260066986084
    6. '   ' → logprob: -13.25260066986084
    7. ',
' → logprob: -13.87760066986084
    8. ',i' → logprob: -14.62760066986084
    9. 'j' → logprob: -14.75260066986084
    10. '):
' → logprob: -15.00260066986084

Token 389: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00044318195432424545
    2. ' j' → logprob: -7.750442981719971
    3. '   ' → logprob: -11.750443458557129
    4. 'k' → logprob: -12.750443458557129
    5. '       ' → logprob: -14.375443458557129
    6. '  ' → logprob: -15.250443458557129
    7. '    ' → logprob: -15.375443458557129
    8. '	j' → logprob: -15.750443458557129
    9. '):
' → logprob: -16.125442504882812
    10. ' ' → logprob: -16.125442504882812

Token 390: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04861314222216606
    2. '):
' → logprob: -3.0486130714416504
    3. '):
' → logprob: -11.548613548278809
    4. ')' → logprob: -12.423613548278809
    5. '       ' → logprob: -12.423613548278809
    6. '   ' → logprob: -12.548613548278809
    7. ' ):' → logprob: -13.173613548278809
    8. ':' → logprob: -13.548613548278809
    9. '):

' → logprob: -14.673613548278809
    10. ',' → logprob: -15.798613548278809

Token 391: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.11496102064847946
    2. 'k' → logprob: -2.7399609088897705
    3. '):
' → logprob: -4.11496114730835
    4. 'Path' → logprob: -4.73996114730835
    5. 'self' → logprob: -5.48996114730835
    6. '   ' → logprob: -5.61496114730835
    7. '       ' → logprob: -5.98996114730835
    8. 'out' → logprob: -6.11496114730835
    9. '):' → logprob: -6.36496114730835
    10. ' path' → logprob: -6.48996114730835

Token 392: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011055718176066875
    2. '):
' → logprob: -4.511055946350098
    3. '):
' → logprob: -12.636055946350098
    4. ')' → logprob: -13.011055946350098
    5. ' ):' → logprob: -13.886055946350098
    6. '   ' → logprob: -14.511055946350098
    7. '       ' → logprob: -15.261055946350098
    8. '):

' → logprob: -15.261055946350098
    9. ':' → logprob: -15.511055946350098
    10. ' ' → logprob: -16.01105499267578

Token 393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.164995014667511
    2. ' if' → logprob: -2.289994955062866
    3. '       ' → logprob: -3.414994955062866
    4. '   ' → logprob: -4.539995193481445
    5. 'if' → logprob: -5.039995193481445
    6. '	       ' → logprob: -7.664995193481445
    7. '	   ' → logprob: -9.164995193481445
    8. ' ' → logprob: -9.914995193481445
    9. '	if' → logprob: -10.039995193481445
    10. '               ' → logprob: -10.164995193481445

Token 394: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0233773160725832
    2. ' if' → logprob: -3.7733774185180664
    3. '   ' → logprob: -9.898377418518066
    4. 'k' → logprob: -10.398377418518066
    5. '           ' → logprob: -10.648377418518066
    6. '	if' → logprob: -11.273377418518066
    7. '       ' → logprob: -12.023377418518066
    8. 'p' → logprob: -12.648377418518066
    9. '  ' → logprob: -13.273377418518066
    10. ' ' → logprob: -13.523377418518066

Token 395: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.021378085017204285
    2. 'i' → logprob: -4.146378040313721
    3. ' self' → logprob: -5.271378040313721
    4. '   ' → logprob: -9.271378517150879
    5. ' i' → logprob: -9.896378517150879
    6. 'j' → logprob: -10.771378517150879
    7. '	self' → logprob: -11.271378517150879
    8. '  ' → logprob: -12.146378517150879
    9. ' ' → logprob: -12.896378517150879
    10. '(self' → logprob: -13.021378517150879

Token 396: '.Path' (ID: 31237)
  Prédit: '.Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Path' → logprob: -9.372294698550832e-06
    2. 'Path' → logprob: -11.625009536743164
    3. '.G' → logprob: -15.125009536743164
    4. '.' → logprob: -16.625009536743164
    5. '	Path' → logprob: -17.000009536743164
    6. '<Path' → logprob: -17.750009536743164
    7. '.P' → logprob: -18.875009536743164
    8. '.path' → logprob: -19.000009536743164
    9. 'G' → logprob: -19.125009536743164
    10. ' Path' → logprob: -19.250009536743164

Token 397: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -14.250001907348633
    3. '[j' → logprob: -14.250001907348633
    4. 'i' → logprob: -14.250001907348633
    5. '[I' → logprob: -15.125001907348633
    6. ' [' → logprob: -17.000001907348633
    7. '[ii' → logprob: -18.125001907348633
    8. '[self' → logprob: -18.500001907348633
    9. '```' → logprob: -18.500001907348633
    10. ' i' → logprob: -18.625001907348633

Token 398: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2871848940849304
    2. '][' → logprob: -1.4121849536895752
    3. '[i' → logprob: -5.162184715270996
    4. '[' → logprob: -9.287184715270996
    5. ']' → logprob: -9.287184715270996
    6. ' ][' → logprob: -10.287184715270996
    7. 'j' → logprob: -10.412184715270996
    8. ' [' → logprob: -11.162184715270996
    9. '   ' → logprob: -11.912184715270996
    10. '```' → logprob: -13.287184715270996

Token 399: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.165027217415627e-05
    2. ' j' → logprob: -10.875021934509277
    3. '[j' → logprob: -13.125021934509277
    4. '	j' → logprob: -15.000021934509277
    5. '   ' → logprob: -15.875021934509277
    6. '<|end|>' → logprob: -16.62502098083496
    7. '[' → logprob: -16.75002098083496
    8. ',j' → logprob: -17.62502098083496
    9. ' ' → logprob: -18.00002098083496
    10. ']' → logprob: -18.00002098083496

Token 400: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014250943437218666
    2. ']==' → logprob: -4.264250755310059
    3. ' ]' → logprob: -10.264250755310059
    4. '==' → logprob: -10.889250755310059
    5. '']' → logprob: -11.389250755310059
    6. ']!=' → logprob: -11.514250755310059
    7. '"]' → logprob: -12.514250755310059
    8. ' ==' → logprob: -12.514250755310059
    9. '']==' → logprob: -13.889250755310059
    10. '<|end|>' → logprob: -13.889250755310059

Token 401: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08472688496112823
    2. ' ==' → logprob: -2.5847268104553223
    3. '!=' → logprob: -5.209726810455322
    4. ' !=' → logprob: -8.33472728729248
    5. '=' → logprob: -9.83472728729248
    6. ')==' → logprob: -10.83472728729248
    7. ']==' → logprob: -10.83472728729248
    8. '()==' → logprob: -12.45972728729248
    9. '===' → logprob: -12.83472728729248
    10. '==
' → logprob: -12.83472728729248

Token 402: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234832875430584
    2. ' ' → logprob: -5.255234718322754
    3. '   ' → logprob: -14.005234718322754
    4. '  ' → logprob: -15.880234718322754
    5. 'j' → logprob: -17.38023567199707
    6. '	' → logprob: -17.88023567199707
    7. 's' → logprob: -18.88023567199707
    8. '    ' → logprob: -19.13023567199707
    9. '۰' → logprob: -19.13023567199707
    10. '=' → logprob: -19.25523567199707

Token 403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.875261306762695
    4. '  ' → logprob: -18.250261306762695
    5. '۰' → logprob: -19.875261306762695
    6. '<|end|>' → logprob: -20.000261306762695
    7. 'j' → logprob: -20.375261306762695
    8. '00' → logprob: -20.500261306762695
    9. 's' → logprob: -21.250261306762695
    10. 'i' → logprob: -21.375261306762695

Token 404: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04357660189270973
    2. ':' → logprob: -3.168576717376709
    3. ':return' → logprob: -7.668576717376709
    4. '       ' → logprob: -10.54357624053955
    5. ' or' → logprob: -10.66857624053955
    6. '           ' → logprob: -11.16857624053955
    7. '               ' → logprob: -11.54357624053955
    8. '):
' → logprob: -11.54357624053955
    9. ':
' → logprob: -11.66857624053955
    10. '   ' → logprob: -11.91857624053955

Token 405: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.040467217564582825
    2. 'return' → logprob: -3.5404672622680664
    3. '           ' → logprob: -5.040467262268066
    4. '
' → logprob: -6.665467262268066
    5. ' return' → logprob: -6.915467262268066
    6. '       ' → logprob: -6.915467262268066
    7. '   ' → logprob: -8.290467262268066
    8. '	       ' → logprob: -8.415467262268066
    9. '	return' → logprob: -9.040467262268066
    10. 'path' → logprob: -9.665467262268066

Token 406: ' if' (ID: 538)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.35011905431747437
    2. 'return' → logprob: -1.9751191139221191
    3. '               ' → logprob: -2.600119113922119
    4. '           ' → logprob: -3.725119113922119
    5. ' path' → logprob: -3.850119113922119
    6. '                   ' → logprob: -4.100119113922119
    7. ' return' → logprob: -4.600119113922119
    8. '   ' → logprob: -4.975119113922119
    9. '
' → logprob: -6.350119113922119
    10. '       ' → logprob: -7.100119113922119

Token 407: ' len' (ID: 4631)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0021054097451269627
    2. ' i' → logprob: -6.252105236053467
    3. 'j' → logprob: -9.377105712890625
    4. '               ' → logprob: -10.252105712890625
    5. '                   ' → logprob: -10.627105712890625
    6. '   ' → logprob: -11.502105712890625
    7. 'path' → logprob: -12.377105712890625
    8. '	i' → logprob: -12.627105712890625
    9. '           ' → logprob: -12.752105712890625
    10. ' ' → logprob: -13.127105712890625

Token 408: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -9.698698704596609e-05
    2. 'path' → logprob: -9.250097274780273
    3. '(' → logprob: -15.000097274780273
    4. ' path' → logprob: -15.375097274780273
    5. '	path' → logprob: -15.375097274780273
    6. '[path' → logprob: -16.750097274780273
    7. 'Path' → logprob: -17.125097274780273
    8. '
' → logprob: -17.500097274780273
    9. ',path' → logprob: -17.875097274780273
    10. '(
' → logprob: -18.000097274780273

Token 409: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043525468558073044
    2. ')==' → logprob: -3.293525457382202
    3. '==' → logprob: -5.543525695800781
    4. ')>' → logprob: -6.793525695800781
    5. ' ==' → logprob: -8.043525695800781
    6. ' )' → logprob: -10.418525695800781
    7. '<|end|>' → logprob: -10.668525695800781
    8. '>' → logprob: -10.918525695800781
    9. ')!=' → logprob: -11.668525695800781
    10. 'and' → logprob: -12.168525695800781

Token 410: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.021948890760540962
    2. ' ==' → logprob: -3.89694881439209
    3. '>' → logprob: -6.64694881439209
    4. '<=' → logprob: -10.52194881439209
    5. '=' → logprob: -10.77194881439209
    6. '()==' → logprob: -11.39694881439209
    7. ')==' → logprob: -11.39694881439209
    8. '!=' → logprob: -11.64694881439209
    9. ' >' → logprob: -12.02194881439209
    10. ')' → logprob: -12.02194881439209

Token 411: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00280558317899704
    2. ' ' → logprob: -5.877805709838867
    3. '1' → logprob: -15.002805709838867
    4. '   ' → logprob: -15.252805709838867
    5. '  ' → logprob: -16.377805709838867
    6. '	' → logprob: -16.752805709838867
    7. '۰' → logprob: -18.065305709838867
    8. '    ' → logprob: -18.127805709838867
    9. '[]' → logprob: -19.065305709838867
    10. ' ' → logprob: -19.065305709838867

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '1' → logprob: -15.37510871887207
    4. '   ' → logprob: -17.50010871887207
    5. '  ' → logprob: -18.75010871887207
    6. '۰' → logprob: -19.43760871887207
    7. ')' → logprob: -19.93760871887207
    8. '=' → logprob: -20.37510871887207
    9. '
' → logprob: -20.43760871887207
    10. '    ' → logprob: -20.43760871887207

Token 413: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37761375308036804
    2. '                   ' → logprob: -1.3776137828826904
    3. ':' → logprob: -3.2526137828826904
    4. '               ' → logprob: -4.627613544464111
    5. ' and' → logprob: -5.127613544464111
    6. ' or' → logprob: -5.877613544464111
    7. '           ' → logprob: -6.127613544464111
    8. '):
' → logprob: -6.877613544464111
    9. '                       ' → logprob: -7.002613544464111
    10. '                           ' → logprob: -8.87761402130127

Token 414: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0020527164451777935
    2. ' path' → logprob: -6.3770527839660645
    3. '               ' → logprob: -8.752052307128906
    4. '           ' → logprob: -9.252052307128906
    5. '                   ' → logprob: -9.752052307128906
    6. '   ' → logprob: -10.877052307128906
    7. 'i' → logprob: -11.752052307128906
    8. '  ' → logprob: -12.877052307128906
    9. '	path' → logprob: -13.377052307128906
    10. '              ' → logprob: -13.627052307128906

Token 415: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '[' → logprob: -17.25
    3. '[
' → logprob: -17.625
    4. ' [-' → logprob: -17.75
    5. '[len' → logprob: -18.875
    6. '```' → logprob: -18.875
    7. '.append' → logprob: -19.375
    8. '   ' → logprob: -19.75
    9. '
' → logprob: -21.0
    10. '           ' → logprob: -22.125

Token 416: '1' (ID: 16)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8855335712432861
    2. ']' → logprob: -1.3855335712432861
    3. '1' → logprob: -1.6355335712432861
    4. ']!=' → logprob: -2.760533571243286
    5. '!=' → logprob: -3.635533571243286
    6. ' ' → logprob: -4.010533332824707
    7. ' ]' → logprob: -4.385533332824707
    8. '()!=' → logprob: -4.885533332824707
    9. '```' → logprob: -5.885533332824707
    10. '<|end|>' → logprob: -5.885533332824707

Token 417: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.284359335899353
    2. '!=' → logprob: -1.409359335899353
    3. ')!=' → logprob: -6.284359455108643
    4. ']!=' → logprob: -7.909359455108643
    5. '<|end|>' → logprob: -8.034358978271484
    6. ' ' → logprob: -8.159358978271484
    7. ')' → logprob: -8.159358978271484
    8. '()!=' → logprob: -10.534358978271484
    9. ' ' → logprob: -11.659358978271484
    10. '!=-' → logprob: -11.784358978271484

Token 418: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3133072853088379
    2. ' !=' → logprob: -1.313307285308838
    3. ')!=' → logprob: -10.68830680847168
    4. '()!=' → logprob: -12.18830680847168
    5. '<|end|>' → logprob: -12.31330680847168
    6. ']!=' → logprob: -12.56330680847168
    7. ' ' → logprob: -13.06330680847168
    8. '!=(' → logprob: -13.31330680847168
    9. ' not' → logprob: -13.43830680847168
    10. '!==' → logprob: -13.68830680847168

Token 419: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003078142472077161
    2. ' i' → logprob: -8.1253080368042
    3. 'j' → logprob: -11.6253080368042
    4. '   ' → logprob: -13.6253080368042
    5. ' ' → logprob: -14.1253080368042
    6. '	i' → logprob: -15.0003080368042
    7. ' ' → logprob: -15.8753080368042
    8. '  ' → logprob: -16.375307083129883
    9. '<|end|>' → logprob: -16.500307083129883
    10. '```' → logprob: -16.750307083129883

Token 420: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.030362188816070557
    2. ':' → logprob: -4.030362129211426
    3. '               ' → logprob: -5.155362129211426
    4. '                   ' → logprob: -5.655362129211426
    5. '):
' → logprob: -6.655362129211426
    6. '           ' → logprob: -7.155362129211426
    7. '                       ' → logprob: -8.405362129211426
    8. '                           ' → logprob: -9.030362129211426
    9. ' :
' → logprob: -9.030362129211426
    10. ':
' → logprob: -9.155362129211426

Token 421: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0064621674828231335
    2. '               ' → logprob: -5.506462097167969
    3. '                ' → logprob: -7.006462097167969
    4. '		           ' → logprob: -8.006462097167969
    5. '                    
' → logprob: -8.256462097167969
    6. '                       ' → logprob: -8.506462097167969
    7. '           ' → logprob: -8.756462097167969
    8. '	               ' → logprob: -9.381462097167969
    9. ' 
' → logprob: -9.756462097167969
    10. '                    ' → logprob: -10.131462097167969

Token 422: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.08095372468233109
    2. 'path' (adapté à ' path') → logprob: -2.58095383644104
    3. '                   ' → logprob: -7.080953598022461
    4. '               ' → logprob: -7.330953598022461
    5. '	path' → logprob: -8.205953598022461
    6. '                       ' → logprob: -8.455953598022461
    7. ' ' → logprob: -11.080953598022461
    8. '           ' → logprob: -11.330953598022461
    9. '_path' → logprob: -11.580953598022461
    10. '	               ' → logprob: -12.080953598022461

Token 423: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005582740413956344
    2. '.' → logprob: -7.500558376312256
    3. '.app' → logprob: -13.000557899475098
    4. ' .' → logprob: -13.500557899475098
    5. '.extend' → logprob: -14.250557899475098
    6. 'append' → logprob: -14.375557899475098
    7. '.ap' → logprob: -15.125557899475098
    8. ' append' → logprob: -16.750558853149414
    9. '.Append' → logprob: -17.250558853149414
    10. '.push' → logprob: -19.375558853149414

Token 424: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003377270477358252
    2. '(' → logprob: -8.000337600708008
    3. '(
' → logprob: -13.375337600708008
    4. 'i' → logprob: -14.125337600708008
    5. ' i' → logprob: -17.125337600708008
    6. '(j' → logprob: -17.750337600708008
    7. '('' → logprob: -18.750337600708008
    8. ' (' → logprob: -18.875337600708008
    9. '(

' → logprob: -20.000337600708008
    10. '[i' → logprob: -20.250337600708008

Token 425: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12715163826942444
    2. ')
' → logprob: -2.1271517276763916
    3. '               ' → logprob: -8.627151489257812
    4. '           ' → logprob: -10.877151489257812
    5. ')
' → logprob: -11.252151489257812
    6. '       ' → logprob: -12.502151489257812
    7. '                   ' → logprob: -13.002151489257812
    8. ')

' → logprob: -13.377151489257812
    9. ' )' → logprob: -13.502151489257812
    10. ' )
' → logprob: -14.127151489257812

Token 426: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00039659533649683
    2. '           ' → logprob: -7.875396728515625
    3. '                   ' → logprob: -12.000396728515625
    4. '                
' → logprob: -12.125396728515625
    5. '       ' → logprob: -13.000396728515625
    6. '		       ' → logprob: -14.625396728515625
    7. '              ' → logprob: -14.750396728515625
    8. '	           ' → logprob: -14.750396728515625
    9. '            
' → logprob: -15.000396728515625
    10. '<|end|>' → logprob: -15.375396728515625

Token 427: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.5417461395263672
    2. '           ' → logprob: -1.0417461395263672
    3. ' path' → logprob: -2.916746139526367
    4. '               ' → logprob: -5.041746139526367
    5. '       ' → logprob: -5.666746139526367
    6. 'if' → logprob: -7.291746139526367
    7. ' if' → logprob: -7.666746139526367
    8. 'return' → logprob: -9.166746139526367
    9. '	path' → logprob: -9.666746139526367
    10. '   ' → logprob: -9.791746139526367

Token 428: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003862245939671993
    2. '.' → logprob: -7.8753862380981445
    3. 'append' → logprob: -12.250386238098145
    4. '.extend' → logprob: -14.625386238098145
    5. ' .' → logprob: -15.000386238098145
    6. 'Append' → logprob: -15.875386238098145
    7. '.app' → logprob: -16.125385284423828
    8. '.
' → logprob: -16.375385284423828
    9. '           ' → logprob: -16.375385284423828
    10. '.Append' → logprob: -17.000385284423828

Token 429: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -8.244413766078651e-05
    2. '(' → logprob: -9.500082015991211
    3. 'j' → logprob: -11.875082015991211
    4. '(
' → logprob: -14.625082015991211
    5. '	j' → logprob: -16.87508201599121
    6. ' (' → logprob: -17.12508201599121
    7. '[j' → logprob: -18.50008201599121
    8. ' j' → logprob: -19.12508201599121
    9. '(i' → logprob: -19.25008201599121
    10. ',j' → logprob: -19.75008201599121

Token 430: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3905797004699707
    2. ')' → logprob: -1.1405797004699707
    3. '           ' → logprob: -6.015579700469971
    4. '       ' → logprob: -6.890579700469971
    5. '               ' → logprob: -8.890579223632812
    6. ')
' → logprob: -9.640579223632812
    7. '   ' → logprob: -10.640579223632812
    8. ')return' → logprob: -11.640579223632812
    9. ')

' → logprob: -13.390579223632812
    10. ' )
' → logprob: -13.640579223632812

Token 431: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3207678496837616
    2. '               ' → logprob: -1.320767879486084
    3. '       ' → logprob: -5.195767879486084
    4. 'else' → logprob: -7.445767879486084
    5. ' else' → logprob: -7.570767879486084
    6. '	       ' → logprob: -7.820767879486084
    7. '	return' → logprob: -9.195767402648926
    8. '	else' → logprob: -9.570767402648926
    9. '   ' → logprob: -9.570767402648926
    10. '	           ' → logprob: -9.820767402648926

Token 432: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5133013725280762
    2. '               ' → logprob: -1.2633013725280762
    3. '           ' → logprob: -2.263301372528076
    4. 'else' → logprob: -5.138301372528076
    5. ' return' → logprob: -5.388301372528076
    6. '       ' → logprob: -5.638301372528076
    7. '   ' → logprob: -7.638301372528076
    8. ' else' → logprob: -8.888301849365234
    9. '	return' → logprob: -9.263301849365234
    10. '                   ' → logprob: -10.638301849365234

Token 433: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005905635771341622
    2. '
' → logprob: -7.500590801239014
    3. '       ' → logprob: -11.125590324401855
    4. '            
' → logprob: -12.000590324401855
    5. '		' → logprob: -12.250590324401855
    6. '	       ' → logprob: -13.125590324401855
    7. '   ' → logprob: -13.375590324401855
    8. '          ' → logprob: -13.625590324401855
    9. '    
' → logprob: -13.625590324401855
    10. '               ' → logprob: -13.750590324401855

Token 434: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053463954478502274
    2. '
' → logprob: -3.053463935852051
    3. '		' → logprob: -5.928463935852051
    4. '	       ' → logprob: -7.428463935852051
    5. '    
' → logprob: -7.803463935852051
    6. '            
' → logprob: -8.05346393585205
    7. '<|end|>' → logprob: -8.80346393585205
    8. ' 
' → logprob: -9.05346393585205
    9. '  
' → logprob: -9.17846393585205
    10. '	
' → logprob: -9.17846393585205

Token 435: ' else' (ID: 1203)
  Prédit: 'core'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'core' → logprob: -0.1960069090127945
    2. ' core' → logprob: -2.571007013320923
    3. 'k' → logprob: -2.821007013320923
    4. '           ' → logprob: -3.446007013320923
    5. 'mid' → logprob: -5.446006774902344
    6. '	core' → logprob: -5.696006774902344
    7. '   ' → logprob: -7.446006774902344
    8. '		' → logprob: -7.571006774902344
    9. '       ' → logprob: -7.696006774902344
    10. ' k' → logprob: -7.821006774902344

Token 436: ':
' (ID: 734)
  Prédit: ' core'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' core' → logprob: -0.4801894724369049
    2. '               ' → logprob: -1.4801894426345825
    3. '           ' → logprob: -2.105189561843872
    4. 'core' → logprob: -3.980189561843872
    5. '	core' → logprob: -5.355189323425293
    6. '       ' → logprob: -5.730189323425293
    7. '   ' → logprob: -5.855189323425293
    8. ' ' → logprob: -7.730189323425293
    9. '		' → logprob: -8.230189323425293
    10. '	       ' → logprob: -8.355189323425293

Token 437: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5823147892951965
    2. '           ' → logprob: -1.3323147296905518
    3. ' core' → logprob: -2.5823147296905518
    4. 'core' → logprob: -2.7073147296905518
    5. 'self' → logprob: -4.082314968109131
    6. '   ' → logprob: -5.207314968109131
    7. '	core' → logprob: -5.332314968109131
    8. '       ' → logprob: -5.707314968109131
    9. ' self' → logprob: -6.082314968109131
    10. '	       ' → logprob: -7.207314968109131

Token 438: ' core' (ID: 10089)
  Prédit: 'core'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'core' (adapté à ' core') → logprob: -0.028581911697983742
    2. 'k' → logprob: -4.2785820960998535
    3. ' core' → logprob: -4.2785820960998535
    4. '	core' → logprob: -8.403581619262695
    5. 'self' → logprob: -8.528581619262695
    6. ' k' → logprob: -11.778581619262695
    7. 'mid' → logprob: -12.028581619262695
    8. '           ' → logprob: -12.653581619262695
    9. '$core' → logprob: -12.653581619262695
    10. '   ' → logprob: -12.778581619262695

Token 439: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.935296834039036e-06
    2. '(self' → logprob: -13.37500286102295
    3. '(' → logprob: -13.62500286102295
    4. '(I' → logprob: -16.500003814697266
    5. ' (' → logprob: -18.750003814697266
    6. '(int' → logprob: -19.375003814697266
    7. '(
' → logprob: -19.625003814697266
    8. '(core' → logprob: -20.625003814697266
    9. '[i' → logprob: -21.250003814697266
    10. '(ii' → logprob: -21.375003814697266

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006956315599381924
    2. 'self' → logprob: -5.131956100463867
    3. ',self' → logprob: -7.381956100463867
    4. ' ,' → logprob: -8.631956100463867
    5. ' self' → logprob: -8.756956100463867
    6. '           ' → logprob: -10.881956100463867
    7. ' ' → logprob: -11.131956100463867
    8. '[self' → logprob: -11.756956100463867
    9. '       ' → logprob: -12.131956100463867
    10. ',
' → logprob: -12.256956100463867

Token 441: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00409015454351902
    2. ' self' → logprob: -5.504090309143066
    3. '           ' → logprob: -12.254090309143066
    4. ' ' → logprob: -13.504090309143066
    5. '[self' → logprob: -13.629090309143066
    6. '       ' → logprob: -13.754090309143066
    7. '   ' → logprob: -13.879090309143066
    8. '(self' → logprob: -14.129090309143066
    9. '	self' → logprob: -14.629090309143066
    10. '  ' → logprob: -15.379090309143066

Token 442: '.Path' (ID: 31237)
  Prédit: '.Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Path' → logprob: -0.029773052781820297
    2. 'Path' → logprob: -3.529772996902466
    3. '	Path' → logprob: -10.904772758483887
    4. ' Path' → logprob: -13.404772758483887
    5. '<Path' → logprob: -13.529772758483887
    6. '.' → logprob: -14.654772758483887
    7. '@Path' → logprob: -15.029772758483887
    8. '.Point' → logprob: -16.154773712158203
    9. ' ' → logprob: -16.154773712158203
    10. '_Path' → logprob: -16.654773712158203

Token 443: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[j' → logprob: -14.375000953674316
    3. '[' → logprob: -15.250000953674316
    4. 'i' → logprob: -15.875000953674316
    5. '```' → logprob: -16.000001907348633
    6. '][' → logprob: -16.125001907348633
    7. '[I' → logprob: -17.125001907348633
    8. '[
' → logprob: -17.625001907348633
    9. ')[' → logprob: -18.000001907348633
    10. '
' → logprob: -18.875001907348633

Token 444: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009615247137844563
    2. '[i' → logprob: -5.009615421295166
    3. '[j' → logprob: -5.884615421295166
    4. ']' → logprob: -9.259614944458008
    5. ' ][' → logprob: -11.384614944458008
    6. '[' → logprob: -12.759614944458008
    7. '"][' → logprob: -14.384614944458008
    8. ''][' → logprob: -14.509614944458008
    9. '```' → logprob: -14.634614944458008
    10. 'j' → logprob: -14.634614944458008

Token 445: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5570885807392187e-05
    2. '[j' → logprob: -11.500015258789062
    3. ' j' → logprob: -12.625015258789062
    4. '][' → logprob: -14.750015258789062
    5. '   ' → logprob: -15.000015258789062
    6. '```' → logprob: -15.125015258789062
    7. '	j' → logprob: -15.375015258789062
    8. ' ' → logprob: -15.500015258789062
    9. ']' → logprob: -15.750015258789062
    10. '[' → logprob: -15.875015258789062

Token 446: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.02839503437280655
    2. ',' → logprob: -4.653395175933838
    3. ']' → logprob: -4.778395175933838
    4. '])' → logprob: -4.903395175933838
    5. ')' → logprob: -7.153395175933838
    6. '])
' → logprob: -7.278395175933838
    7. '),' → logprob: -7.528395175933838
    8. 'j' → logprob: -8.40339469909668
    9. ' ' → logprob: -9.15339469909668
    10. ' ],' → logprob: -9.27839469909668

Token 447: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.014163747429847717
    2. ' path' → logprob: -4.264163970947266
    3. ')' → logprob: -16.264163970947266
    4. ' ' → logprob: -17.014163970947266
    5. '(path' → logprob: -17.514163970947266
    6. '	path' → logprob: -17.639163970947266
    7. '   ' → logprob: -18.014163970947266
    8. 'Path' → logprob: -18.014163970947266
    9. '  ' → logprob: -18.514163970947266
    10. '_path' → logprob: -18.514163970947266

Token 448: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005321158561855555
    2. ')' → logprob: -5.255321025848389
    3. ')
' → logprob: -9.505321502685547
    4. '               ' → logprob: -11.755321502685547
    5. ' )
' → logprob: -12.630321502685547
    6. '           ' → logprob: -14.255321502685547
    7. '       ' → logprob: -14.505321502685547
    8. ')

' → logprob: -14.755321502685547
    9. '   ' → logprob: -15.755321502685547
    10. ' ' → logprob: -18.255321502685547

Token 449: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006479830481112003
    2. '
' → logprob: -8.25064754486084
    3. '	core' → logprob: -8.75064754486084
    4. '			' → logprob: -9.00064754486084
    5. ' core' → logprob: -10.12564754486084
    6. '           ' → logprob: -10.62564754486084
    7. 'core' → logprob: -11.62564754486084
    8. '       ' → logprob: -11.62564754486084
    9. '(core' → logprob: -12.62564754486084
    10. '   ' → logprob: -12.62564754486084

Token 450: ' core' (ID: 10089)
  Prédit: 'core'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'core' (adapté à ' core') → logprob: -0.04859054833650589
    2. ' core' → logprob: -3.048590660095215
    3. '               ' → logprob: -13.298590660095215
    4. '	core' → logprob: -14.048590660095215
    5. '(core' → logprob: -15.548590660095215
    6. '
' → logprob: -15.548590660095215
    7. '           ' → logprob: -16.4235897064209
    8. '_core' → logprob: -16.7985897064209
    9. '.core' → logprob: -16.7985897064209
    10. '   ' → logprob: -17.1735897064209

Token 451: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.500004768371582
    3. 'self' → logprob: -15.500004768371582
    4. '[self' → logprob: -15.875004768371582
    5. ' (' → logprob: -16.875003814697266
    6. '           ' → logprob: -17.500003814697266
    7. ')(' → logprob: -17.625003814697266
    8. '(s' → logprob: -18.000003814697266
    9. '((' → logprob: -18.250003814697266
    10. '(Self' → logprob: -18.500003814697266

Token 452: '.Path' (ID: 31237)
  Prédit: '.Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Path' → logprob: -0.0015056940028443933
    2. 'Path' → logprob: -6.5015058517456055
    3. '	Path' → logprob: -13.251505851745605
    4. '@Path' → logprob: -14.251505851745605
    5. ' Path' → logprob: -14.876505851745605
    6. '.P' → logprob: -15.376505851745605
    7. '<Path' → logprob: -15.376505851745605
    8. '.' → logprob: -17.50150489807129
    9. 'PATH' → logprob: -17.75150489807129
    10. '_Path' → logprob: -18.25150489807129

Token 453: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.282920129597187e-05
    2. 'i' → logprob: -11.500012397766113
    3. '[j' → logprob: -13.625012397766113
    4. '[' → logprob: -13.750012397766113
    5. '(i' → logprob: -15.875012397766113
    6. '[self' → logprob: -16.37501335144043
    7. 'Path' → logprob: -16.62501335144043
    8. ' i' → logprob: -16.75001335144043
    9. '{i' → logprob: -17.12501335144043
    10. '[
' → logprob: -17.50001335144043

Token 454: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.6345533132553101
    2. '[i' → logprob: -0.8845533132553101
    3. '][' → logprob: -2.8845534324645996
    4. 'j' → logprob: -7.3845534324646
    5. '[' → logprob: -8.384552955627441
    6. 'i' → logprob: -8.634552955627441
    7. ' ][' → logprob: -11.884552955627441
    8. '[k' → logprob: -12.134552955627441
    9. '[][' → logprob: -13.509552955627441
    10. ']' → logprob: -13.634552955627441

Token 455: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.860340752406046e-05
    2. '[j' → logprob: -9.8750581741333
    3. ' j' → logprob: -12.8750581741333
    4. '][' → logprob: -13.0000581741333
    5. '```' → logprob: -14.6250581741333
    6. '[' → logprob: -14.8750581741333
    7. '   ' → logprob: -15.0000581741333
    8. ' ' → logprob: -15.1250581741333
    9. ']' → logprob: -15.2500581741333
    10. 'i' → logprob: -15.7500581741333

Token 456: '],' (ID: 2155)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.37329792976379395
    2. '],' → logprob: -1.873297929763794
    3. '[j' → logprob: -2.248297929763794
    4. ',' → logprob: -3.248297929763794
    5. ',j' → logprob: -4.498297691345215
    6. 'j' → logprob: -6.123297691345215
    7. ']' → logprob: -9.498297691345215
    8. ' ,' → logprob: -10.498297691345215
    9. '(j' → logprob: -10.998297691345215
    10. ' j' → logprob: -11.373297691345215

Token 457: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0007105246186256409
    2. ' j' → logprob: -7.250710487365723
    3. '	j' → logprob: -14.625710487365723
    4. '   ' → logprob: -16.25071144104004
    5. ',j' → logprob: -17.50071144104004
    6. ')' → logprob: -17.62571144104004
    7. '[j' → logprob: -18.12571144104004
    8. '_j' → logprob: -18.62571144104004
    9. ' ' → logprob: -18.75071144104004
    10. '
' → logprob: -18.75071144104004

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002892258344218135
    2. ',path' → logprob: -8.250288963317871
    3. ' ,' → logprob: -10.500288963317871
    4. ')' → logprob: -15.750288963317871
    5. 'path' → logprob: -16.250289916992188
    6. '),' → logprob: -16.500289916992188
    7. '[path' → logprob: -17.500289916992188
    8. '],' → logprob: -17.625289916992188
    9. '   ' → logprob: -17.750289916992188
    10. '(path' → logprob: -18.250289916992188

Token 459: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.006715370807796717
    2. ' path' → logprob: -5.006715297698975
    3. 'Path' → logprob: -19.381715774536133
    4. '_path' → logprob: -20.006715774536133
    5. '	path' → logprob: -20.631715774536133
    6. ',path' → logprob: -20.631715774536133
    7. '"path' → logprob: -21.006715774536133
    8. 'pat' → logprob: -21.131715774536133
    9. ' ' → logprob: -21.131715774536133
    10. '[path' → logprob: -21.131715774536133

Token 460: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.7689099018462e-05
    2. ')
' → logprob: -9.37508773803711
    3. ' )' → logprob: -14.00008773803711
    4. '       ' → logprob: -14.12508773803711
    5. '<|end|>' → logprob: -14.37508773803711
    6. ')#' → logprob: -15.87508773803711
    7. ')

' → logprob: -16.00008773803711
    8. '           ' → logprob: -16.00008773803711
    9. '   ' → logprob: -16.37508773803711
    10. '),' → logprob: -16.37508773803711

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00514255790039897
    2. 'out' → logprob: -5.630142688751221
    3. '<|end|>' → logprob: -7.755142688751221
    4. ' out' → logprob: -8.255142211914062
    5. '	' → logprob: -8.505142211914062
    6. '   ' → logprob: -8.880142211914062
    7. 'return' → logprob: -9.005142211914062
    8. '           ' → logprob: -9.130142211914062
    9. '	out' → logprob: -9.380142211914062
    10. '
' → logprob: -10.255142211914062

Token 462: ' core' (ID: 10089)
  Prédit: '	core'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	core' → logprob: -0.9938466548919678
    2. 'core' (adapté à ' core') → logprob: -1.1188466548919678
    3. '       ' → logprob: -1.3688466548919678
    4. ' core' → logprob: -3.8688466548919678
    5. '
' → logprob: -4.493846893310547
    6. '	' → logprob: -4.493846893310547
    7. '$core' → logprob: -5.743846893310547
    8. '   ' → logprob: -7.868846893310547
    9. '<|end|>' → logprob: -7.868846893310547
    10. '(core' → logprob: -8.243846893310547

Token 463: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001040552044287324
    2. '(' → logprob: -6.876040458679199
    3. '(
' → logprob: -12.8760404586792
    4. '(I' → logprob: -12.8760404586792
    5. '<|end|>' → logprob: -13.7510404586792
    6. '(int' → logprob: -15.0010404586792
    7. '(ii' → logprob: -15.2510404586792
    8. ' (' → logprob: -15.6260404586792
    9. '(in' → logprob: -15.7510404586792
    10. '(user' → logprob: -15.7510404586792

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046844579628668725
    2. ' ,' → logprob: -8.250468254089355
    3. ',j' → logprob: -8.500468254089355
    4. ',
' → logprob: -12.750468254089355
    5. 'j' → logprob: -15.250468254089355
    6. '   ' → logprob: -15.750468254089355
    7. ' ' → logprob: -15.750468254089355
    8. ' j' → logprob: -16.250469207763672
    9. ')' → logprob: -16.375469207763672
    10. '       ' → logprob: -16.625469207763672

Token 465: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0021866646129637957
    2. ' j' → logprob: -6.1271867752075195
    3. '   ' → logprob: -14.12718677520752
    4. ' ' → logprob: -14.87718677520752
    5. '	j' → logprob: -15.75218677520752
    6. '  ' → logprob: -15.87718677520752
    7. '    ' → logprob: -16.127185821533203
    8. '       ' → logprob: -16.752185821533203
    9. '     ' → logprob: -17.252185821533203
    10. ')' → logprob: -18.002185821533203

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ' ,' → logprob: -11.87501049041748
    3. ',path' → logprob: -12.75001049041748
    4. ',
' → logprob: -16.125009536743164
    5. '   ' → logprob: -16.875009536743164
    6. ')' → logprob: -17.250009536743164
    7. '       ' → logprob: -18.625009536743164
    8. ',p' → logprob: -18.875009536743164
    9. '‌,' → logprob: -20.375009536743164
    10. ' ' → logprob: -21.125009536743164

Token 467: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.01416350994259119
    2. ' path' → logprob: -4.264163494110107
    3. 'Path' → logprob: -18.389163970947266
    4. '_path' → logprob: -18.389163970947266
    5. 'out' → logprob: -18.639163970947266
    6. '
' → logprob: -19.014163970947266
    7. '	path' → logprob: -19.264163970947266
    8. 'pat' → logprob: -19.639163970947266
    9. 'p' → logprob: -19.639163970947266
    10. '"path' → logprob: -19.764163970947266

Token 468: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5851737260818481
    2. ')' → logprob: -0.8351737260818481
    3. '       ' → logprob: -4.710173606872559
    4. ')return' → logprob: -9.210173606872559
    5. ')
' → logprob: -9.460173606872559
    6. ')

' → logprob: -12.835173606872559
    7. '   ' → logprob: -12.960173606872559
    8. ' )
' → logprob: -13.835173606872559
    9. '<|end|>' → logprob: -13.960173606872559
    10. 'return' → logprob: -13.960173606872559

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011960632400587201
    2. 'return' → logprob: -7.001195907592773
    3. '	' → logprob: -9.126195907592773
    4. '	return' → logprob: -9.501195907592773
    5. '<|end|>' → logprob: -9.876195907592773
    6. '   ' → logprob: -10.626195907592773
    7. ' return' → logprob: -11.376195907592773
    8. '           ' → logprob: -12.376195907592773
    9. '	   ' → logprob: -13.376195907592773
    10. '
' → logprob: -13.376195907592773

Token 470: ' path' (ID: 3104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08150580525398254
    2. '       ' → logprob: -2.83150577545166
    3. ' return' → logprob: -3.95650577545166
    4. '	return' → logprob: -8.95650577545166
    5. '   ' → logprob: -9.58150577545166
    6. '	' → logprob: -11.70650577545166
    7. 'out' → logprob: -12.45650577545166
    8. ' out' → logprob: -12.45650577545166
    9. ' ' → logprob: -13.20650577545166
    10. '	   ' → logprob: -14.95650577545166

Token 471: '.pop' (ID: 15746)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0939100980758667
    2. '
' → logprob: -1.2189100980758667
    3. '<|end|>' → logprob: -1.4689100980758667
    4. '       ' → logprob: -2.7189102172851562
    5. ' return' → logprob: -3.3439102172851562
    6. '.append' → logprob: -4.468910217285156
    7. '[' → logprob: -4.968910217285156
    8. '   ' → logprob: -5.218910217285156
    9. ' ' → logprob: -5.593910217285156
    10. '	return' → logprob: -5.843910217285156

Token 472: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012964145571459085
    2. '()
' → logprob: -9.375129699707031
    3. '(' → logprob: -10.125129699707031
    4. '(-' → logprob: -13.250129699707031
    5. '()-' → logprob: -14.375129699707031
    6. ' ()' → logprob: -14.750129699707031
    7. '()`' → logprob: -15.250129699707031
    8. '()\' → logprob: -15.375129699707031
    9. '()%' → logprob: -15.375129699707031
    10. '()]' → logprob: -15.500129699707031

Token 473: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0893259048461914
    2. '-' → logprob: -2.4643259048461914
    3. '0' → logprob: -8.589325904846191
    4. '-)' → logprob: -9.339325904846191
    5. ')
' → logprob: -9.464325904846191
    6. ')-' → logprob: -11.339325904846191
    7. ' -' → logprob: -12.089325904846191
    8. ' )' → logprob: -12.714325904846191
    9. '))' → logprob: -13.089325904846191
    10. '(-' → logprob: -13.214325904846191

Token 474: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8351892473874614e-05
    2. ')
' → logprob: -10.000048637390137
    3. '       ' → logprob: -13.250048637390137
    4. '()' → logprob: -14.125048637390137
    5. ' )' → logprob: -15.625048637390137
    6. '<|end|>' → logprob: -16.37504768371582
    7. ']' → logprob: -16.75004768371582
    8. '))' → logprob: -17.50004768371582
    9. ')

' → logprob: -17.62504768371582
    10. '())' → logprob: -17.87504768371582

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005217039957642555
    2. '	' → logprob: -5.7552170753479
    3. '<|end|>' → logprob: -6.7552170753479
    4. '
' → logprob: -7.8802170753479
    5. 'return' → logprob: -8.255216598510742
    6. '	return' → logprob: -9.130216598510742
    7. ' return' → logprob: -10.005216598510742
    8. '   ' → logprob: -11.380216598510742
    9. '<|end|>' → logprob: -11.505216598510742
    10. '[' → logprob: -11.755216598510742

Token 476: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015215194784104824
    2. '       ' → logprob: -4.2652153968811035
    3. ' return' → logprob: -6.8902153968811035
    4. '	return' → logprob: -10.515214920043945
    5. '   ' → logprob: -13.015214920043945
    6. 'out' → logprob: -13.265214920043945
    7. '	' → logprob: -14.265214920043945
    8. '
' → logprob: -14.640214920043945
    9. 'for' → logprob: -15.140214920043945
    10. 'path' → logprob: -15.515214920043945

Token 477: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.005250244867056608
    2. ' path' → logprob: -5.255250453948975
    3. '[path' → logprob: -11.755249977111816
    4. '[' → logprob: -12.130249977111816
    5. 'out' → logprob: -13.505249977111816
    6. ' [' → logprob: -14.505249977111816
    7. ' out' → logprob: -15.505249977111816
    8. 'list' → logprob: -15.505249977111816
    9. 'pat' → logprob: -15.630249977111816
    10. '(path' → logprob: -15.755249977111816

Token 478: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 479: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.361913800239563
    2. '
' → logprob: -2.2369136810302734
    3. 'out' → logprob: -2.8619136810302734
    4. '<|end|>' → logprob: -2.9869136810302734
    5. '#' → logprob: -3.2369136810302734
    6. 'n' → logprob: -5.111913681030273
    7. '   ' → logprob: -5.361913681030273
    8. ' 
' → logprob: -5.486913681030273
    9. ' out' → logprob: -5.486913681030273
    10. ' ' → logprob: -5.736913681030273

Token 480: ' driver' (ID: 8931)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.0282516479492188
    2. ' Main' → logprob: -1.6532516479492188
    3. ' graph' → logprob: -1.9032516479492188
    4. ' solution' → logprob: -2.5282516479492188
    5. ' main' → logprob: -3.2782516479492188
    6. ' test' → logprob: -3.5282516479492188
    7. 'Solution' → logprob: -3.7782516479492188
    8. 'graph' → logprob: -4.528251647949219
    9. ' Solver' → logprob: -4.778251647949219
    10. ' Test' → logprob: -4.903251647949219

Token 481: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025844585616141558
    2. '():' → logprob: -6.127584457397461
    3. ' :' → logprob: -8.377584457397461
    4. ':
' → logprob: -8.877584457397461
    5. '{' → logprob: -11.127584457397461
    6. '():
' → logprob: -12.377584457397461
    7. '：' → logprob: -13.252584457397461
    8. '):' → logprob: -13.377584457397461
    9. ' ():' → logprob: -13.502584457397461
    10. '>:' → logprob: -13.752584457397461

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5167544484138489
    2. '
' → logprob: -1.141754388809204
    3. ' def' → logprob: -3.391754388809204
    4. 'def' → logprob: -3.641754388809204
    5. '    
' → logprob: -3.891754388809204
    6. '	
' → logprob: -6.141754627227783
    7. '	def' → logprob: -7.641754627227783
    8. '<|end|>' → logprob: -7.766754627227783
    9. '<|end|>' → logprob: -7.766754627227783
    10. ':' → logprob: -9.016754150390625

Token 483: ' plan' (ID: 3496)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.27026790380477905
    2. 'def' → logprob: -1.5202679634094238
    3. '   ' → logprob: -4.020267963409424
    4. '	def' → logprob: -9.020267486572266
    5. '    ' → logprob: -10.520267486572266
    6. ' out' → logprob: -10.895267486572266
    7. ' graph' → logprob: -11.395267486572266
    8. '    
' → logprob: -11.645267486572266
    9. ' ' → logprob: -12.020267486572266
    10. '
' → logprob: -12.020267486572266

Token 484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024048931896686554
    2. '=' → logprob: -4.399048805236816
    3. 's' → logprob: -5.774048805236816
    4. '()' → logprob: -5.899048805236816
    5. '   ' → logprob: -5.899048805236816
    6. ' ' → logprob: -7.274048805236816
    7. ':' → logprob: -8.524048805236816
    8. '  ' → logprob: -8.649048805236816
    9. 'def' → logprob: -8.774048805236816
    10. '(' → logprob: -9.024048805236816

Token 485: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4279218018054962
    2. 'graph' → logprob: -1.5529217720031738
    3. '[' → logprob: -3.052921772003174
    4. ' []' → logprob: -3.552921772003174
    5. '{}' → logprob: -3.802921772003174
    6. ' graph' → logprob: -5.177921772003174
    7. '['' → logprob: -5.302921772003174
    8. '[]
' → logprob: -5.427921772003174
    9. '[[' → logprob: -5.552921772003174
    10. '[(' → logprob: -5.802921772003174

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.078095942735672
    2. 'def' → logprob: -3.3280959129333496
    3. '
' → logprob: -4.07809591293335
    4. '<|end|>' → logprob: -4.70309591293335
    5. '    
' → logprob: -5.70309591293335
    6. ' def' → logprob: -5.82809591293335
    7. '	def' → logprob: -5.82809591293335
    8. '<|end|>' → logprob: -5.95309591293335
    9. '    ' → logprob: -7.32809591293335
    10. '	
' → logprob: -8.078096389770508

Token 487: ' order' (ID: 2569)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007217557169497013
    2. '   ' → logprob: -6.2572174072265625
    3. 'out' → logprob: -7.1322174072265625
    4. ' def' → logprob: -7.3822174072265625
    5. 'path' → logprob: -7.6322174072265625
    6. 'data' → logprob: -7.7572174072265625
    7. 'V' → logprob: -8.132217407226562
    8. 'E' → logprob: -8.632217407226562
    9. 'result' → logprob: -8.632217407226562
    10. 'res' → logprob: -8.757217407226562

Token 488: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05562102422118187
    2. '=' → logprob: -2.9306209087371826
    3. '=[]' → logprob: -8.305621147155762
    4. '   ' → logprob: -8.555621147155762
    5. '[]' → logprob: -9.180621147155762
    6. 's' → logprob: -10.430621147155762
    7. ' ' → logprob: -10.555621147155762
    8. ':' → logprob: -10.680621147155762
    9. '  ' → logprob: -10.805621147155762
    10. '	' → logprob: -11.430621147155762

Token 489: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.053224362432956696
    2. ' []' → logprob: -3.6782243251800537
    3. '0' → logprob: -3.9282243251800537
    4. '[]
' → logprob: -6.053224563598633
    5. '[' → logprob: -6.303224563598633
    6. '{}' → logprob: -6.553224563598633
    7. ' ' → logprob: -7.053224563598633
    8. '   ' → logprob: -9.803224563598633
    9. '1' → logprob: -9.803224563598633
    10. '()' → logprob: -10.053224563598633

Token 490: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00317581370472908
    2. '()
' → logprob: -6.003175735473633
    3. '()

' → logprob: -7.378175735473633
    4. '()\' → logprob: -10.128175735473633
    5. '(' → logprob: -11.128175735473633
    6. '([]' → logprob: -11.628175735473633
    7. '()
' → logprob: -12.878175735473633
    8. ' ()' → logprob: -13.378175735473633
    9. '(),' → logprob: -13.753175735473633
    10. '()]' → logprob: -13.878175735473633

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28579992055892944
    2. '<|end|>' → logprob: -1.6607999801635742
    3. '
' → logprob: -3.660799980163574
    4. 'def' → logprob: -4.535799980163574
    5. ' def' → logprob: -4.910799980163574
    6. '    
' → logprob: -5.285799980163574
    7. '	def' → logprob: -5.410799980163574
    8. '<|end|>' → logprob: -5.535799980163574
    9. '    ' → logprob: -7.910799980163574
    10. '	
' → logprob: -8.035799980163574

Token 492: ' location' (ID: 5100)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5873270034790039
    2. ' def' → logprob: -1.087327003479004
    3. '   ' → logprob: -2.462327003479004
    4. '
' → logprob: -4.337327003479004
    5. '    
' → logprob: -5.962327003479004
    6. '	def' → logprob: -6.837327003479004
    7. ' 
' → logprob: -7.212327003479004
    8. 'V' → logprob: -7.712327003479004
    9. '	
' → logprob: -7.712327003479004
    10. ' ' → logprob: -7.962327003479004

Token 493: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25261878967285156
    2. '=' → logprob: -1.5026187896728516
    3. 's' → logprob: -8.252618789672852
    4. ' ' → logprob: -8.877618789672852
    5. ':' → logprob: -9.252618789672852
    6. '   ' → logprob: -9.252618789672852
    7. '  ' → logprob: -11.002618789672852
    8. '=[]' → logprob: -11.127618789672852
    9. ' :' → logprob: -11.627618789672852
    10. ',' → logprob: -11.752618789672852

Token 494: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23686960339546204
    2. '{}' → logprob: -2.6118695735931396
    3. '[]' → logprob: -2.8618695735931396
    4. 'set' → logprob: -3.1118695735931396
    5. '1' → logprob: -4.736869812011719
    6. '''' → logprob: -4.861869812011719
    7. ' ' → logprob: -5.111869812011719
    8. 'None' → logprob: -5.986869812011719
    9. '""' → logprob: -6.111869812011719
    10. '{' → logprob: -6.361869812011719

Token 495: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14169616997241974
    2. '[]' → logprob: -3.0166962146759033
    3. '{}' → logprob: -3.1416962146759033
    4. '-' → logprob: -4.266695976257324
    5. 'set' → logprob: -4.516695976257324
    6. '1' → logprob: -4.766695976257324
    7. 'None' → logprob: -6.016695976257324
    8. '{' → logprob: -6.641695976257324
    9. '''' → logprob: -7.766695976257324
    10. '[' → logprob: -8.016695976257324

Token 496: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 497: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 498: ' next' (ID: 2613)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7118638753890991
    2. 'capacity' → logprob: -2.2118639945983887
    3. '   ' → logprob: -3.2118639945983887
    4. 'path' → logprob: -3.7118639945983887
    5. 'plan' → logprob: -3.7118639945983887
    6. ' def' → logprob: -3.8368639945983887
    7. 'money' → logprob: -3.8368639945983887
    8. 'time' → logprob: -4.211863994598389
    9. 'load' → logprob: -4.336863994598389
    10. 'cur' → logprob: -4.336863994598389

Token 499: 'Segment' (ID: 24880)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2349284887313843
    2. '_location' → logprob: -1.4849284887313843
    3. '_destination' → logprob: -2.234928607940674
    4. '_step' → logprob: -3.359928607940674
    5. '_move' → logprob: -3.609928607940674
    6. '_token' → logprob: -3.734928607940674
    7. '_plan' → logprob: -3.734928607940674
    8. '_stop' → logprob: -3.859928607940674
    9. '_target' → logprob: -3.859928607940674
    10. '_task' → logprob: -3.984928607940674

Token 500: 'Left' (ID: 7471)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03823966160416603
    2. '=' → logprob: -3.2882397174835205
    3. '   ' → logprob: -9.663239479064941
    4. '_' → logprob: -10.288239479064941
    5. ' ' → logprob: -10.538239479064941
    6. '  ' → logprob: -11.163239479064941
    7. ',' → logprob: -11.788239479064941
    8. '	' → logprob: -12.038239479064941
    9. 's' → logprob: -12.163239479064941
    10. '_id' → logprob: -12.163239479064941

Token 501: 'Time' (ID: 1929)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17974960803985596
    2. '=' → logprob: -1.804749608039856
    3. ',' → logprob: -13.429749488830566
    4. ' ' → logprob: -13.804749488830566
    5. ':' → logprob: -13.929749488830566
    6. '   ' → logprob: -14.929749488830566
    7. '	' → logprob: -15.429749488830566
    8. '.' → logprob: -16.179750442504883
    9. '0' → logprob: -16.492250442504883
    10. '=None' → logprob: -16.554750442504883

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193482637405396
    2. '=' → logprob: -1.5019347667694092
    3. ':' → logprob: -13.001935005187988
    4. ',' → logprob: -13.501935005187988
    5. ' ' → logprob: -13.751935005187988
    6. '   ' → logprob: -14.376935005187988
    7. '  ' → logprob: -16.001934051513672
    8. '=None' → logprob: -16.126934051513672
    9. ' =
' → logprob: -16.376934051513672
    10. 's' → logprob: -17.126934051513672

Token 503: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011328321415930986
    2. ' ' → logprob: -7.501132965087891
    3. '-' → logprob: -7.751132965087891
    4. '10' → logprob: -10.25113296508789
    5. 'None' → logprob: -10.75113296508789
    6. '1' → logprob: -10.87613296508789
    7. '100' → logprob: -11.00113296508789
    8. '60' → logprob: -11.75113296508789
    9. '5' → logprob: -12.00113296508789
    10. '30' → logprob: -12.12613296508789

Token 504: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008099827100522816
    2. '-' → logprob: -7.875810146331787
    3. ' ' → logprob: -8.000809669494629
    4. '100' → logprob: -10.875809669494629
    5. '10' → logprob: -11.000809669494629
    6. '1' → logprob: -11.125809669494629
    7. 'None' → logprob: -12.000809669494629
    8. '5' → logprob: -12.375809669494629
    9. 'int' → logprob: -12.750809669494629
    10. '30' → logprob: -12.875809669494629

Token 505: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31531786918640137
    2. '<|end|>' → logprob: -1.4403178691864014
    3. '
' → logprob: -4.1903181076049805
    4. '<|end|>' → logprob: -5.1903181076049805
    5. 'def' → logprob: -5.9403181076049805
    6. '    
' → logprob: -6.1903181076049805
    7. ' next' → logprob: -6.3153181076049805
    8. ' def' → logprob: -6.9403181076049805
    9. ' ' → logprob: -7.0653181076049805
    10. 'next' → logprob: -7.0653181076049805

Token 507: ' target' (ID: 3783)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9174179434776306
    2. 'plan' → logprob: -2.1674180030822754
    3. 'speed' → logprob: -3.0424180030822754
    4. 'next' → logprob: -3.0424180030822754
    5. 'cur' → logprob: -3.6674180030822754
    6. '   ' → logprob: -3.6674180030822754
    7. 'path' → logprob: -3.6674180030822754
    8. 'time' → logprob: -3.7924180030822754
    9. 'max' → logprob: -4.042418003082275
    10. 'current' → logprob: -4.167418003082275

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3596968650817871
    2. '=' → logprob: -1.234696865081787
    3. 'Location' → logprob: -5.484696865081787
    4. '_location' → logprob: -5.859696865081787
    5. 'location' → logprob: -7.234696865081787
    6. '_' → logprob: -7.359696865081787
    7. 'ID' → logprob: -7.609696865081787
    8. '=None' → logprob: -8.234697341918945
    9. 'Segment' → logprob: -8.359697341918945
    10. 'None' → logprob: -8.734697341918945

Token 509: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14966842532157898
    2. 'None' → logprob: -2.8996684551239014
    3. '-' → logprob: -3.1496684551239014
    4. '1' → logprob: -3.5246684551239014
    5. ' ' → logprob: -4.774668216705322
    6. ' None' → logprob: -6.149668216705322
    7. ' -' → logprob: -7.274668216705322
    8. '[]' → logprob: -8.89966869354248
    9. '2' → logprob: -9.39966869354248
    10. '  ' → logprob: -10.02466869354248

Token 510: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4416578412055969
    2. '-' → logprob: -1.5666577816009521
    3. 'None' → logprob: -2.066657781600952
    4. '1' → logprob: -3.941657781600952
    5. '2' → logprob: -6.816658020019531
    6. '[]' → logprob: -8.066658020019531
    7. ' ' → logprob: -8.066658020019531
    8. ' None' → logprob: -8.441658020019531
    9. ' -' → logprob: -8.816658020019531
    10. '3' → logprob: -10.504158020019531

Token 511: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11782572418451309
    2. 'def' → logprob: -3.242825746536255
    3. ' def' → logprob: -3.367825746536255
    4. '<|end|>' → logprob: -4.492825508117676
    5. '	def' → logprob: -4.867825508117676
    6. ' 
' → logprob: -5.992825508117676
    7. '
' → logprob: -6.242825508117676
    8. ' next' → logprob: -6.242825508117676
    9. 'class' → logprob: -6.617825508117676
    10. '    
' → logprob: -6.617825508117676

Token 513: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1418544501066208
    2. '   ' → logprob: -2.1418545246124268
    3. ' def' → logprob: -4.266854286193848
    4. '	def' → logprob: -7.641854286193848
    5. '    
' → logprob: -8.766854286193848
    6. ' ' → logprob: -10.141854286193848
    7. '  ' → logprob: -10.516854286193848
    8. '	
' → logprob: -11.016854286193848
    9. '    ' → logprob: -11.141854286193848
    10. ' 
' → logprob: -11.516854286193848

Token 514: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0009217040496878326
    2. '__' → logprob: -7.250921726226807
    3. ' def' → logprob: -9.250921249389648
    4. ' move' → logprob: -10.375921249389648
    5. ' init' → logprob: -10.375921249389648
    6. ' ' → logprob: -10.625921249389648
    7. ' start' → logprob: -11.375921249389648
    8. ' _' → logprob: -12.000921249389648
    9. ' ' → logprob: -13.375921249389648
    10. ' get' → logprob: -13.625921249389648

Token 515: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. ' init' → logprob: -14.75
    3. 'def' → logprob: -17.125
    4. 'i' → logprob: -17.75
    5. 'ini' → logprob: -17.875
    6. 'int' → logprob: -19.75
    7. '_init' → logprob: -20.0
    8. '	init' → logprob: -20.25
    9. 'inite' → logprob: -20.5
    10. '(init' → logprob: -20.75

Token 516: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0003740694955922663
    2. '__' → logprob: -8.125373840332031
    3. '_(' → logprob: -9.625373840332031
    4. '(self' → logprob: -11.500373840332031
    5. '__(
' → logprob: -14.125373840332031
    6. '(' → logprob: -14.625373840332031
    7. '_' → logprob: -15.500373840332031
    8. '___' → logprob: -15.625373840332031
    9. ' (' → logprob: -15.875373840332031
    10. '__((' → logprob: -16.37537384033203

Token 517: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.394135612528771e-05
    2. ' self' → logprob: -10.125043869018555
    3. ')' → logprob: -12.875043869018555
    4. '
' → logprob: -14.375043869018555
    5. '   ' → logprob: -15.250043869018555
    6. '  ' → logprob: -15.500043869018555
    7. ' ' → logprob: -16.375043869018555
    8. '(self' → logprob: -17.125043869018555
    9. '):
' → logprob: -17.250043869018555
    10. 's' → logprob: -17.500043869018555

Token 518: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.35968101024627686
    2. ',' → logprob: -1.4846810102462769
    3. '):' → logprob: -3.1096811294555664
    4. '):
' → logprob: -3.7346811294555664
    5. ')(' → logprob: -5.609681129455566
    6. 'self' → logprob: -6.234681129455566
    7. ' (' → logprob: -7.609681129455566
    8. '   ' → logprob: -8.234681129455566
    9. ',self' → logprob: -8.484681129455566
    10. '       ' → logprob: -9.109681129455566

Token 519: ' g' (ID: 329)
  Prédit: 'plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plan' → logprob: -1.045348882675171
    2. 'self' → logprob: -1.420348882675171
    3. ' plan' → logprob: -1.545348882675171
    4. 'location' → logprob: -2.920348882675171
    5. ' self' → logprob: -3.295348882675171
    6. ' location' → logprob: -4.04534912109375
    7. 'order' → logprob: -4.17034912109375
    8. 'start' → logprob: -4.92034912109375
    9. '):' → logprob: -4.92034912109375
    10. 'target' → logprob: -5.17034912109375

Token 520: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03917054831981659
    2. '):
' → logprob: -4.039170742034912
    3. ',' → logprob: -4.414170742034912
    4. 'raph' → logprob: -4.789170742034912
    5. ',g' → logprob: -9.414170265197754
    6. '):

' → logprob: -9.914170265197754
    7. '(graph' → logprob: -9.914170265197754
    8. 'raphics' → logprob: -9.914170265197754
    9. ')' → logprob: -10.539170265197754
    10. '):
' → logprob: -10.664170265197754

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019144153222441673
    2. '	' → logprob: -4.769144058227539
    3. '<|end|>' → logprob: -5.394144058227539
    4. 'self' → logprob: -6.644144058227539
    5. ',' → logprob: -7.144144058227539
    6. '        
' → logprob: -7.269144058227539
    7. '		
' → logprob: -7.269144058227539
    8. '	self' → logprob: -8.144144058227539
    9. '(' → logprob: -8.394144058227539
    10. '(self' → logprob: -8.519144058227539

Token 522: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4795488715171814
    2. ' self' → logprob: -1.6045489311218262
    3. 'self' (adapté à ' self') → logprob: -1.7295489311218262
    4. '	' → logprob: -6.479548931121826
    5. '	self' → logprob: -7.229548931121826
    6. '   ' → logprob: -8.479548454284668
    7. ' ' → logprob: -10.479548454284668
    8. '	   ' → logprob: -10.479548454284668
    9. 'import' → logprob: -10.604548454284668
    10. ' for' → logprob: -11.854548454284668

Token 523: '.map' (ID: 7975)
  Prédit: '.plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.3856092393398285
    2. '.g' → logprob: -1.3856092691421509
    3. '.' → logprob: -3.0106091499328613
    4. '.location' → logprob: -4.385609149932861
    5. '.target' → logprob: -5.010609149932861
    6. ' .' → logprob: -7.510609149932861
    7. '.next' → logprob: -7.635609149932861
    8. '.pl' → logprob: -8.76060962677002
    9. '.graph' → logprob: -9.26060962677002
    10. '.order' → logprob: -10.51060962677002

Token 524: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5771781206130981
    2. ' =' → logprob: -0.8271781206130981
    3. '=g' → logprob: -6.702178001403809
    4. '   ' → logprob: -12.952178001403809
    5. ' ' → logprob: -13.202178001403809
    6. '	' → logprob: -13.452178001403809
    7. 'raph' → logprob: -13.952178001403809
    8. '  ' → logprob: -14.077178001403809
    9. 'g' → logprob: -14.202178001403809
    10. '.=' → logprob: -14.327178001403809

Token 525: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.048639941960573196
    2. ' g' → logprob: -3.048640012741089
    3. 'graph' → logprob: -10.048640251159668
    4. ' graph' → logprob: -12.048640251159668
    5. '	g' → logprob: -13.048640251159668
    6. ' ' → logprob: -14.423640251159668
    7. '   ' → logprob: -15.423640251159668
    8. ' ' → logprob: -15.548640251159668
    9. '  ' → logprob: -16.92363929748535
    10. '    ' → logprob: -17.42363929748535

Token 526: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20959579944610596
    2. ' def' → logprob: -1.834595799446106
    3. '   ' → logprob: -3.5845956802368164
    4. '	def' → logprob: -7.084595680236816
    5. '
' → logprob: -7.584595680236816
    6. ' 
' → logprob: -8.959595680236816
    7. '    
' → logprob: -9.084595680236816
    8. '<|end|>' → logprob: -10.209595680236816
    9. ' ' → logprob: -11.584595680236816
    10. '        
' → logprob: -12.084595680236816

Token 529: ' route' (ID: 9656)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -1.3991620540618896
    2. 'move' → logprob: -1.7741620540618896
    3. ' plan' → logprob: -2.5241620540618896
    4. ' update' → logprob: -3.0241620540618896
    5. 'update' → logprob: -3.1491620540618896
    6. 'go' → logprob: -3.3991620540618896
    7. 'run' → logprob: -3.5241620540618896
    8. 'plan' → logprob: -3.6491620540618896
    9. ' run' → logprob: -3.8991620540618896
    10. ' go' → logprob: -4.024162292480469

Token 530: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009040901437401772
    2. '(' → logprob: -4.759040832519531
    3. ' (' → logprob: -8.009040832519531
    4. '(s' → logprob: -10.134040832519531
    5. 'self' → logprob: -11.259040832519531
    6. '_(' → logprob: -12.009040832519531
    7. '():' → logprob: -12.134040832519531
    8. '_next' → logprob: -12.384040832519531
    9. '   ' → logprob: -12.759040832519531
    10. '()' → logprob: -13.009040832519531

Token 531: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032199472188949585
    2. '):' → logprob: -3.9071993827819824
    3. '(self' → logprob: -5.157199382781982
    4. 'self' → logprob: -5.907199382781982
    5. ' ,' → logprob: -6.532199382781982
    6. '):
' → logprob: -7.032199382781982
    7. ',self' → logprob: -7.907199382781982
    8. '   ' → logprob: -9.90719985961914
    9. ' ):' → logprob: -10.03219985961914
    10. '(' → logprob: -10.15719985961914

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005649082362651825
    2. '	' → logprob: -6.505649089813232
    3. ' ' → logprob: -7.005649089813232
    4. ' 
' → logprob: -7.505649089813232
    5. '        
' → logprob: -7.505649089813232
    6. '
' → logprob: -8.005648612976074
    7. '   ' → logprob: -8.005648612976074
    8. '        ' → logprob: -8.130648612976074
    9. '    ' → logprob: -8.130648612976074
    10. ' return' → logprob: -8.880648612976074

Token 533: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3246953785419464
    2. 'if' (adapté à ' if') → logprob: -2.199695348739624
    3. '       ' → logprob: -2.449695348739624
    4. ' while' → logprob: -3.449695348739624
    5. ' for' → logprob: -4.949695587158203
    6. ' i' → logprob: -5.074695587158203
    7. ' out' → logprob: -5.199695587158203
    8. ' self' → logprob: -5.199695587158203
    9. ' pass' → logprob: -5.574695587158203
    10. 'while' → logprob: -5.574695587158203

Token 534: ' len' (ID: 4631)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10416661947965622
    2. ' len' → logprob: -2.4791665077209473
    3. 'self' → logprob: -4.729166507720947
    4. ' not' → logprob: -5.354166507720947
    5. 'len' → logprob: -7.354166507720947
    6. ' ' → logprob: -8.354166984558105
    7. '   ' → logprob: -8.729166984558105
    8. '(len' → logprob: -8.979166984558105
    9. '  ' → logprob: -9.229166984558105
    10. '	self' → logprob: -9.354166984558105

Token 535: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014208992011845112
    2. '(' → logprob: -4.264208793640137
    3. ' (' → logprob: -10.139208793640137
    4. '(this' → logprob: -12.514208793640137
    5. '(s' → logprob: -14.014208793640137
    6. 'self' → logprob: -14.764208793640137
    7. '()' → logprob: -15.139208793640137
    8. '(
' → logprob: -15.389208793640137
    9. '((' → logprob: -16.514209747314453
    10. '(sel' → logprob: -16.514209747314453

Token 536: '.order' (ID: 25549)
  Prédit: '.plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.7222720980644226
    2. '(plan' → logprob: -0.7222720980644226
    3. '(' → logprob: -4.097271919250488
    4. 'plan' → logprob: -5.472271919250488
    5. '(self' → logprob: -5.597271919250488
    6. ' plan' → logprob: -6.347271919250488
    7. '.' → logprob: -6.597271919250488
    8. ' .' → logprob: -8.347271919250488
    9. 'self' → logprob: -8.472271919250488
    10. ' (' → logprob: -8.472271919250488

Token 537: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007828421890735626
    2. ')==' → logprob: -5.132828235626221
    3. ' )' → logprob: -7.007828235626221
    4. '==' → logprob: -7.632828235626221
    5. ' ==' → logprob: -7.632828235626221
    6. ')>' → logprob: -11.757828712463379
    7. '()' → logprob: -12.007828712463379
    8. '())' → logprob: -12.382828712463379
    9. '()==' → logprob: -13.257828712463379
    10. '）' → logprob: -14.007828712463379

Token 538: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14380526542663574
    2. '==' → logprob: -2.0188052654266357
    3. ' >' → logprob: -7.643805503845215
    4. '>' → logprob: -8.143805503845215
    5. '()==' → logprob: -9.393805503845215
    6. ' <' → logprob: -9.768805503845215
    7. ')' → logprob: -9.768805503845215
    8. ' <=' → logprob: -10.018805503845215
    9. ')==' → logprob: -10.518805503845215
    10. ' ' → logprob: -10.518805503845215

Token 539: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008618354797363281
    2. ' ' → logprob: -4.758618354797363
    3. '1' → logprob: -13.133618354797363
    4. '  ' → logprob: -14.383618354797363
    5. '   ' → logprob: -14.946118354797363
    6. '    ' → logprob: -15.946118354797363
    7. '
' → logprob: -15.946118354797363
    8. ' ' → logprob: -16.446117401123047
    9. '	' → logprob: -16.508617401123047
    10. '<|end|>' → logprob: -16.633617401123047

Token 540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001613459608051926
    2. ' ' → logprob: -8.750161170959473
    3. '1' → logprob: -13.125161170959473
    4. '  ' → logprob: -15.500161170959473
    5. '<|end|>' → logprob: -15.750161170959473
    6. ')' → logprob: -16.31266212463379
    7. '
' → logprob: -16.56266212463379
    8. '۰' → logprob: -16.68766212463379
    9. '    ' → logprob: -17.00016212463379
    10. '

' → logprob: -17.31266212463379

Token 541: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21067319810390472
    2. ':' → logprob: -1.710673213005066
    3. ' or' → logprob: -5.5856733322143555
    4. ':return' → logprob: -5.5856733322143555
    5. '       ' → logprob: -7.2106733322143555
    6. '           ' → logprob: -7.2106733322143555
    7. ' and' → logprob: -8.960673332214355
    8. ' :
' → logprob: -9.960673332214355
    9. ':
' → logprob: -10.835673332214355
    10. '   ' → logprob: -11.460673332214355

Token 542: ' len' (ID: 4631)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2881697118282318
    2. 'self' → logprob: -1.4131697416305542
    3. ' len' → logprob: -6.038169860839844
    4. ' not' → logprob: -6.288169860839844
    5. 'len' → logprob: -6.788169860839844
    6. 'False' → logprob: -7.913169860839844
    7. ' False' → logprob: -7.913169860839844
    8. 'not' → logprob: -8.413169860839844
    9. ' True' → logprob: -8.663169860839844
    10. 'True' → logprob: -9.413169860839844

Token 543: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018149138486478478
    2. '(' → logprob: -8.625181198120117
    3. 'self' → logprob: -14.375181198120117
    4. ' (' → logprob: -14.375181198120117
    5. '(this' → logprob: -15.000181198120117
    6. '(s' → logprob: -16.125181198120117
    7. '(
' → logprob: -16.625181198120117
    8. ' self' → logprob: -16.625181198120117
    9. '(out' → logprob: -17.125181198120117
    10. '()' → logprob: -18.625181198120117

Token 544: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -9.841743303695694e-05
    2. 'plan' → logprob: -9.62509822845459
    3. '.pl' → logprob: -11.75009822845459
    4. '.out' → logprob: -11.87509822845459
    5. '.route' → logprob: -12.00009822845459
    6. '.' → logprob: -12.25009822845459
    7. ' plan' → logprob: -12.75009822845459
    8. ' .' → logprob: -13.50009822845459
    9. '(plan' → logprob: -14.12509822845459
    10. ').' → logprob: -14.87509822845459

Token 545: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017064649611711502
    2. ')==' → logprob: -4.392064571380615
    3. '==' → logprob: -5.767064571380615
    4. ' ==' → logprob: -7.642064571380615
    5. '()' → logprob: -8.142065048217773
    6. ')>' → logprob: -8.267065048217773
    7. ' )' → logprob: -8.517065048217773
    8. '>' → logprob: -9.642065048217773
    9. '()==' → logprob: -10.517065048217773
    10. '   ' → logprob: -10.767065048217773

Token 546: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25587397813796997
    2. '==' → logprob: -1.5058739185333252
    3. ' >' → logprob: -6.380874156951904
    4. '()==' → logprob: -6.880874156951904
    5. '>' → logprob: -7.255874156951904
    6. '()' → logprob: -8.255873680114746
    7. ' !=' → logprob: -9.505873680114746
    8. '()>' → logprob: -9.630873680114746
    9. ' ' → logprob: -10.130873680114746
    10. '!=' → logprob: -11.130873680114746

Token 547: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08898188918828964
    2. ' ' → logprob: -2.463981866836548
    3. '1' → logprob: -10.588981628417969
    4. '   ' → logprob: -12.088981628417969
    5. '  ' → logprob: -13.088981628417969
    6. '>' → logprob: -13.213981628417969
    7. '	' → logprob: -14.026481628417969
    8. '<|end|>' → logprob: -14.026481628417969
    9. ' ' → logprob: -14.526481628417969
    10. '    ' → logprob: -14.588981628417969

Token 548: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023631771910004318
    2. ' ' → logprob: -8.375236511230469
    3. '   ' → logprob: -12.750236511230469
    4. '1' → logprob: -13.500236511230469
    5. '  ' → logprob: -14.875236511230469
    6. '```' → logprob: -15.750236511230469
    7. '    ' → logprob: -15.875236511230469
    8. ')' → logprob: -15.937736511230469
    9. '
' → logprob: -16.06273651123047
    10. '       ' → logprob: -16.18773651123047

Token 549: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7022855281829834
    2. ':
' → logprob: -0.7022855281829834
    3. ':return' → logprob: -4.9522857666015625
    4. '       ' → logprob: -6.3272857666015625
    5. '           ' → logprob: -8.827285766601562
    6. ' or' → logprob: -10.452285766601562
    7. ' and' → logprob: -10.952285766601562
    8. ':
' → logprob: -11.077285766601562
    9. '   ' → logprob: -12.202285766601562
    10. ':

' → logprob: -12.452285766601562

Token 550: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8843849301338196
    2. ':
' → logprob: -1.1343848705291748
    3. '           ' → logprob: -2.134384870529175
    4. ':' → logprob: -2.634384870529175
    5. '
' → logprob: -3.134384870529175
    6. ':return' → logprob: -4.009385108947754
    7. ' return' → logprob: -4.884385108947754
    8. 'return' → logprob: -5.759385108947754
    9. '   ' → logprob: -7.134385108947754
    10. '\n' → logprob: -7.384385108947754

Token 551: ' self' (ID: 1051)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09659042209386826
    2. ' return' → logprob: -2.846590518951416
    3. '           ' → logprob: -3.596590518951416
    4. '       ' → logprob: -6.221590518951416
    5. 'out' → logprob: -6.596590518951416
    6. ' out' → logprob: -7.096590518951416
    7. 'self' (adapté à ' self') → logprob: -7.221590518951416
    8. 'pass' → logprob: -7.471590518951416
    9. '   ' → logprob: -7.596590518951416
    10. 'print' → logprob: -8.221590042114258

Token 552: '.order' (ID: 25549)
  Prédit: '.next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.6739005446434021
    2. '.location' → logprob: -1.0489006042480469
    3. '.target' → logprob: -2.798900604248047
    4. '.' → logprob: -2.923900604248047
    5. '.order' → logprob: -4.673900604248047
    6. '.plan' → logprob: -4.923900604248047
    7. '.out' → logprob: -6.173900604248047
    8. '.return' → logprob: -6.673900604248047
    9. '.route' → logprob: -6.798900604248047
    10. '.
' → logprob: -7.048900604248047

Token 553: '.add' (ID: 1950)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5314173698425293
    2. '.add' → logprob: -1.1564173698425293
    3. '.clear' → logprob: -2.5314173698425293
    4. ' =' → logprob: -4.781417369842529
    5. '.' → logprob: -5.156417369842529
    6. '.update' → logprob: -5.781417369842529
    7. '.=' → logprob: -8.281417846679688
    8. '.append' → logprob: -8.406417846679688
    9. 'add' → logprob: -9.781417846679688
    10. '.pop' → logprob: -9.906417846679688

Token 554: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009009475819766521
    2. '(self' → logprob: -4.88400936126709
    3. '(int' → logprob: -7.00900936126709
    4. '((' → logprob: -8.13400936126709
    5. '(input' → logprob: -9.25900936126709
    6. '(random' → logprob: -10.75900936126709
    7. '(raw' → logprob: -11.00900936126709
    8. '('' → logprob: -11.25900936126709
    9. '1' → logprob: -11.38400936126709
    10. '(
' → logprob: -11.50900936126709

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.304696649312973
    2. 'self' → logprob: -1.6796966791152954
    3. '2' → logprob: -2.804696559906006
    4. 'int' → logprob: -4.929696559906006
    5. '0' → logprob: -5.679696559906006
    6. '3' → logprob: -6.804696559906006
    7. '(' → logprob: -7.179696559906006
    8. ' ' → logprob: -7.304696559906006
    9. '5' → logprob: -7.554696559906006
    10. '4' → logprob: -7.929696559906006

Token 556: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007108182646334171
    2. ')
' → logprob: -5.007108211517334
    3. ' )' → logprob: -8.007107734680176
    4. ')return' → logprob: -11.007107734680176
    5. ' )
' → logprob: -11.257107734680176
    6. '<|end|>' → logprob: -11.507107734680176
    7. ')
' → logprob: -11.632107734680176
    8. ')

' → logprob: -11.757107734680176
    9. '       ' → logprob: -14.632107734680176
    10. ')#' → logprob: -14.757107734680176

Token 557: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6610422134399414
    2. '<|end|>' → logprob: -0.7860422134399414
    3. '       ' → logprob: -4.161042213439941
    4. '<|end|>' → logprob: -5.161042213439941
    5. '           ' → logprob: -5.536042213439941
    6. ' ' → logprob: -7.661042213439941
    7. 'return' → logprob: -7.786042213439941
    8. ' and' → logprob: -8.411042213439941
    9. '\n' → logprob: -8.661042213439941
    10. ' 
' → logprob: -8.786042213439941

Token 558: ' last' (ID: 2174)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34693241119384766
    2. '
' → logprob: -2.3469324111938477
    3. '<|end|>' → logprob: -2.5969324111938477
    4. ' ' → logprob: -3.0969324111938477
    5. ' 
' → logprob: -4.471932411193848
    6. 'elif' → logprob: -4.596932411193848
    7. '   ' → logprob: -4.846932411193848
    8. '    ' → logprob: -5.096932411193848
    9. '  
' → logprob: -5.471932411193848
    10. '        
' → logprob: -5.596932411193848

Token 559: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8650959730148315
    2. '_node' → logprob: -2.115096092224121
    3. '_point' → logprob: -2.240096092224121
    4. '_location' → logprob: -2.490096092224121
    5. 'Node' → logprob: -2.990096092224121
    6. 'Point' → logprob: -3.115096092224121
    7. '_place' → logprob: -3.365096092224121
    8. 'Location' → logprob: -3.990096092224121
    9. 'Place' → logprob: -4.240096092224121
    10. '_loc' → logprob: -4.240096092224121

Token 560: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17081288993358612
    2. '1' → logprob: -2.4208128452301025
    3. ' self' → logprob: -2.9208128452301025
    4. ' ' → logprob: -5.045813083648682
    5. '0' → logprob: -6.045813083648682
    6. 'None' → logprob: -6.545813083648682
    7. 'list' → logprob: -6.670813083648682
    8. ' None' → logprob: -6.920813083648682
    9. '(' → logprob: -7.670813083648682
    10. ' list' → logprob: -7.795813083648682

Token 561: '.location' (ID: 15725)
  Prédit: '.plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.0035157334059476852
    2. '.location' → logprob: -5.753515720367432
    3. '.' → logprob: -9.12851619720459
    4. '.route' → logprob: -9.25351619720459
    5. '.order' → logprob: -10.00351619720459
    6. '.target' → logprob: -10.25351619720459
    7. ' .' → logprob: -11.25351619720459
    8. '.pl' → logprob: -11.75351619720459
    9. 'plan' → logprob: -12.00351619720459
    10. '.path' → logprob: -12.00351619720459

Token 562: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18641895055770874
    2. '<|end|>' → logprob: -1.8114190101623535
    3. '       ' → logprob: -5.8114190101623535
    4. '<|end|>' → logprob: -6.4364190101623535
    5. ' if' → logprob: -6.5614190101623535
    6. '
' → logprob: -9.311418533325195
    7. ' 
' → logprob: -9.311418533325195
    8. '[' → logprob: -9.936418533325195
    9. 'if' → logprob: -9.936418533325195
    10. ' ' → logprob: -10.186418533325195

Token 563: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16324341297149658
    2. 'for' → logprob: -2.038243293762207
    3. 'while' → logprob: -4.788243293762207
    4. 'next' → logprob: -5.288243293762207
    5. 'path' → logprob: -6.663243293762207
    6. '       ' → logprob: -6.788243293762207
    7. 'self' → logprob: -6.913243293762207
    8. 'return' → logprob: -7.288243293762207
    9. ' if' → logprob: -7.663243293762207
    10. 'res' → logprob: -8.038243293762207

Token 565: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.1392519176006317
    2. ' self' → logprob: -2.389251947402954
    3. 'len' → logprob: -3.639251947402954
    4. 'self' → logprob: -4.764251708984375
    5. ' not' → logprob: -6.139251708984375
    6. '(len' → logprob: -7.639251708984375
    7. ' ' → logprob: -8.264251708984375
    8. '	len' → logprob: -8.639251708984375
    9. '   ' → logprob: -8.889251708984375
    10. '  ' → logprob: -9.764251708984375

Token 566: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006565583753399551
    2. '(' → logprob: -7.375656604766846
    3. ' (' → logprob: -10.625656127929688
    4. 'self' → logprob: -12.375656127929688
    5. '(
' → logprob: -14.750656127929688
    6. ' self' → logprob: -15.500656127929688
    7. '(this' → logprob: -15.500656127929688
    8. '()' → logprob: -15.750656127929688
    9. '(s' → logprob: -15.750656127929688
    10. '(order' → logprob: -17.375656127929688

Token 567: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.007725048810243607
    2. '.order' → logprob: -4.882725238800049
    3. '.route' → logprob: -9.63272476196289
    4. '(plan' → logprob: -10.75772476196289
    5. ' .' → logprob: -11.75772476196289
    6. '.' → logprob: -12.13272476196289
    7. '.pl' → logprob: -12.50772476196289
    8. 'plan' → logprob: -12.88272476196289
    9. '.path' → logprob: -13.13272476196289
    10. ' plan' → logprob: -13.25772476196289

Token 568: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0770050287246704
    2. ' ==' → logprob: -1.3270050287246704
    3. ' >' → logprob: -1.5770050287246704
    4. '>' → logprob: -2.327004909515381
    5. '==' → logprob: -2.577004909515381
    6. ')>' → logprob: -4.952004909515381
    7. ')==' → logprob: -5.452004909515381
    8. ' )' → logprob: -6.577004909515381
    9. ' <' → logprob: -8.327005386352539
    10. ' !=' → logprob: -8.827005386352539

Token 569: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0270862579345703
    2. ' >' → logprob: -1.2770862579345703
    3. '>' → logprob: -1.6520862579345703
    4. '==' → logprob: -1.7770862579345703
    5. ' <' → logprob: -6.52708625793457
    6. '<' → logprob: -8.15208625793457
    7. ' !=' → logprob: -8.40208625793457
    8. ' ' → logprob: -9.27708625793457
    9. '!=' → logprob: -9.52708625793457
    10. '()>' → logprob: -9.52708625793457

Token 570: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004094666335731745
    2. ' ' → logprob: -5.50409460067749
    3. '1' → logprob: -11.504095077514648
    4. '=' → logprob: -12.754095077514648
    5. '   ' → logprob: -13.379095077514648
    6. '  ' → logprob: -14.379095077514648
    7. '>' → logprob: -15.754095077514648
    8. '2' → logprob: -16.31659507751465
    9. ' ' → logprob: -16.56659507751465
    10. '    ' → logprob: -16.62909507751465

Token 571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013433275744318962
    2. ' ' → logprob: -6.626343250274658
    3. '1' → logprob: -11.126343727111816
    4. '=' → logprob: -14.251343727111816
    5. '   ' → logprob: -14.563843727111816
    6. '  ' → logprob: -15.501343727111816
    7. '2' → logprob: -16.0013427734375
    8. '۰' → logprob: -16.2513427734375
    9. '```' → logprob: -16.3763427734375
    10. ' ' → logprob: -16.4388427734375

Token 572: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7104471921920776
    2. ' and' → logprob: -0.7104471921920776
    3. ':
' → logprob: -4.335447311401367
    4. 'and' → logprob: -5.835447311401367
    5. '[' → logprob: -8.335447311401367
    6. '==' → logprob: -8.460447311401367
    7. '           ' → logprob: -8.460447311401367
    8. '       ' → logprob: -8.960447311401367
    9. ' ==' → logprob: -9.085447311401367
    10. ' :' → logprob: -10.210447311401367

Token 573: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10978148877620697
    2. '           ' → logprob: -2.609781503677368
    3. ' and' → logprob: -5.234781265258789
    4. 'return' → logprob: -5.859781265258789
    5. ':
' → logprob: -5.859781265258789
    6. 'next' → logprob: -6.109781265258789
    7. '	       ' → logprob: -6.234781265258789
    8. '   ' → logprob: -6.234781265258789
    9. ':' → logprob: -6.359781265258789
    10. ' last' → logprob: -6.359781265258789

Token 574: ' last' (ID: 2174)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6718651652336121
    2. '           ' → logprob: -1.2968652248382568
    3. 'self' → logprob: -1.9218652248382568
    4. ' return' → logprob: -3.671865224838257
    5. 'return' → logprob: -4.046864986419678
    6. ' next' → logprob: -5.171864986419678
    7. '       ' → logprob: -5.546864986419678
    8. 'next' → logprob: -5.671864986419678
    9. '	       ' → logprob: -5.796864986419678
    10. ' if' → logprob: -6.296864986419678

Token 575: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43111246824264526
    2. '=' → logprob: -1.05611252784729
    3. ',' → logprob: -7.306112289428711
    4. '.' → logprob: -8.556112289428711
    5. ' +=' → logprob: -8.556112289428711
    6. ' ==' → logprob: -8.931112289428711
    7. ')' → logprob: -9.056112289428711
    8. '_token' → logprob: -9.181112289428711
    9. '==' → logprob: -9.306112289428711
    10. 'next' → logprob: -9.306112289428711

Token 576: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019305398454889655
    2. ' self' → logprob: -6.2519307136535645
    3. '   ' → logprob: -13.751930236816406
    4. '	self' → logprob: -14.751930236816406
    5. ' ' → logprob: -16.001930236816406
    6. '  ' → logprob: -16.126930236816406
    7. 'int' → logprob: -16.376930236816406
    8. '           ' → logprob: -16.626930236816406
    9. '       ' → logprob: -16.751930236816406
    10. '    ' → logprob: -17.001930236816406

Token 577: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -8.494741632603109e-05
    2. 'plan' → logprob: -9.50008487701416
    3. '.' → logprob: -12.25008487701416
    4. '.route' → logprob: -13.12508487701416
    5. ' .' → logprob: -13.25008487701416
    6. ' plan' → logprob: -14.00008487701416
    7. '.pl' → logprob: -15.37508487701416
    8. '.next' → logprob: -16.875085830688477
    9. '.path' → logprob: -16.875085830688477
    10. 'Plan' → logprob: -17.000085830688477

Token 578: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00016206118743866682
    2. '[' → logprob: -8.750162124633789
    3. '.pop' → logprob: -12.625162124633789
    4. '[len' → logprob: -15.875162124633789
    5. '   ' → logprob: -16.25016212463379
    6. '0' → logprob: -18.00016212463379
    7. '[:-' → logprob: -18.25016212463379
    8. '-' → logprob: -18.37516212463379
    9. ' [-' → logprob: -19.12516212463379
    10. '```' → logprob: -19.25016212463379

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -16.8125
    4. '2' → logprob: -17.0625
    5. ']' → logprob: -17.5625
    6. '(' → logprob: -17.6875
    7. '   ' → logprob: -17.9375
    8. '  ' → logprob: -18.25
    9. '１' → logprob: -18.4375
    10. '0' → logprob: -18.5625

Token 580: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003434488025959581
    2. '][-' → logprob: -9.000343322753906
    3. ' ]' → logprob: -9.750343322753906
    4. ')' → logprob: -9.875343322753906
    5. ']
' → logprob: -10.250343322753906
    6. '])' → logprob: -10.500343322753906
    7. '<|end|>' → logprob: -11.000343322753906
    8. ')]' → logprob: -12.250343322753906
    9. '][' → logprob: -12.375343322753906
    10. '-' → logprob: -12.375343322753906

Token 581: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09647666662931442
    2. '
' → logprob: -2.8464765548706055
    3. '<|end|>' → logprob: -3.9714765548706055
    4. ' if' → logprob: -5.5964765548706055
    5. '        
' → logprob: -5.7214765548706055
    6. ' next' → logprob: -6.3464765548706055
    7. '<|end|>' → logprob: -6.4714765548706055
    8. 'next' → logprob: -6.9714765548706055
    9. 'if' (adapté à ' if') → logprob: -7.4714765548706055
    10. 'return' → logprob: -7.8464765548706055

Token 583: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.016905957832932472
    2. 'len' → logprob: -4.266905784606934
    3. ' self' → logprob: -6.516905784606934
    4. '(len' → logprob: -7.391905784606934
    5. ' ' → logprob: -8.891905784606934
    6. ' True' → logprob: -9.016905784606934
    7. 'self' → logprob: -9.391905784606934
    8. 'True' → logprob: -9.641905784606934
    9. '	len' → logprob: -9.641905784606934
    10. '1' → logprob: -9.891905784606934

Token 584: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001447141170501709
    2. ' (' → logprob: -7.1264472007751465
    3. '(' → logprob: -7.3764472007751465
    4. 'self' → logprob: -12.376446723937988
    5. '(order' → logprob: -12.751446723937988
    6. '()' → logprob: -13.126446723937988
    7. '(s' → logprob: -13.751446723937988
    8. '(
' → logprob: -13.876446723937988
    9. '(user' → logprob: -14.001446723937988
    10. ' self' → logprob: -14.126446723937988

Token 585: '.order' (ID: 25549)
  Prédit: '.plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.5234262943267822
    2. '.order' → logprob: -0.8984262943267822
    3. '.route' → logprob: -8.773426055908203
    4. '.' → logprob: -9.773426055908203
    5. '.location' → logprob: -10.773426055908203
    6. '.pl' → logprob: -10.773426055908203
    7. ' .' → logprob: -11.273426055908203
    8. '.place' → logprob: -12.023426055908203
    9. 'order' → logprob: -12.523426055908203
    10. '.orders' → logprob: -12.648426055908203

Token 586: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6038603782653809
    2. '>' → logprob: -1.2288603782653809
    3. ')' → logprob: -1.8538603782653809
    4. ')>' → logprob: -5.728860378265381
    5. ' )' → logprob: -8.228860855102539
    6. ' !=' → logprob: -8.728860855102539
    7. ' ==' → logprob: -8.853860855102539
    8. '   ' → logprob: -9.978860855102539
    9. '==' → logprob: -9.978860855102539
    10. '()>' → logprob: -10.103860855102539

Token 587: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2824532091617584
    2. ' >' → logprob: -1.407453179359436
    3. '==' → logprob: -7.2824530601501465
    4. ' ==' → logprob: -7.7824530601501465
    5. ' !=' → logprob: -9.407453536987305
    6. '!=' → logprob: -10.157453536987305
    7. '   ' → logprob: -10.282453536987305
    8. '()>' → logprob: -10.907453536987305
    9. ' ' → logprob: -11.657453536987305
    10. 'and' → logprob: -13.282453536987305

Token 588: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009775212965905666
    2. ' ' → logprob: -4.634775161743164
    3. '1' → logprob: -11.759775161743164
    4. '   ' → logprob: -12.572275161743164
    5. '=' → logprob: -13.009775161743164
    6. '  ' → logprob: -13.697275161743164
    7. '
' → logprob: -13.759775161743164
    8. '>' → logprob: -14.134775161743164
    9. '    ' → logprob: -15.009775161743164
    10. '

' → logprob: -15.759775161743164

Token 589: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02631272003054619
    2. ' ' → logprob: -3.651312828063965
    3. '1' → logprob: -11.651312828063965
    4. '
' → logprob: -13.901312828063965
    5. '   ' → logprob: -14.026312828063965
    6. '  ' → logprob: -14.963812828063965
    7. '

' → logprob: -15.276312828063965
    8. '2' → logprob: -16.08881187438965
    9. '10' → logprob: -16.21381187438965
    10. '    ' → logprob: -16.40131187438965

Token 590: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.145393505692482
    2. ':' → logprob: -2.0203936100006104
    3. ' and' → logprob: -6.020393371582031
    4. '):
' → logprob: -9.520393371582031
    5. '       ' → logprob: -9.645393371582031
    6. ':
' → logprob: -9.645393371582031
    7. ' :
' → logprob: -10.520393371582031
    8. ':

' → logprob: -10.645393371582031
    9. 'and' → logprob: -11.395393371582031
    10. ',' → logprob: -11.895393371582031

Token 591: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3366186022758484
    2. '           ' → logprob: -1.4616186618804932
    3. ' next' → logprob: -4.586618423461914
    4. '   ' → logprob: -4.836618423461914
    5. ':
' → logprob: -4.961618423461914
    6. '<|end|>' → logprob: -5.086618423461914
    7. ' for' → logprob: -5.461618423461914
    8. ':' → logprob: -6.086618423461914
    9. ' and' → logprob: -6.336618423461914
    10. '	       ' → logprob: -6.836618423461914

Token 592: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3851637840270996
    2. 'u' → logprob: -1.6351637840270996
    3. 'next' → logprob: -2.7601637840270996
    4. 'for' (adapté à ' for') → logprob: -2.7601637840270996
    5. '   ' → logprob: -3.2601637840270996
    6. 'target' → logprob: -3.6351637840270996
    7. 't' → logprob: -3.6351637840270996
    8. 'n' → logprob: -3.7601637840270996
    9. 'x' → logprob: -3.7601637840270996
    10. 'cur' → logprob: -3.7601637840270996

Token 593: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.974354863166809
    2. 'x' → logprob: -2.3493547439575195
    3. 'o' → logprob: -2.4743547439575195
    4. ' i' → logprob: -2.4743547439575195
    5. ' o' → logprob: -3.2243547439575195
    6. ' node' → logprob: -3.2243547439575195
    7. ' x' → logprob: -3.3493547439575195
    8. ' t' → logprob: -3.4743547439575195
    9. 't' → logprob: -3.7243547439575195
    10. 'target' → logprob: -3.7243547439575195

Token 594: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003615631954744458
    2. 'in' → logprob: -5.628615856170654
    3. ' ' → logprob: -12.503615379333496
    4. '	in' → logprob: -12.628615379333496
    5. '   ' → logprob: -13.003615379333496
    6. '  ' → logprob: -13.628615379333496
    7. ' i' → logprob: -13.753615379333496
    8. '       ' → logprob: -14.128615379333496
    9. 'i' → logprob: -15.003615379333496
    10. 'import' → logprob: -15.003615379333496

Token 595: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2366711050271988
    2. 'self' → logprob: -1.6116710901260376
    3. ' list' → logprob: -4.861670970916748
    4. ' range' → logprob: -6.486670970916748
    5. ' sorted' → logprob: -7.111670970916748
    6. 'list' → logprob: -7.611670970916748
    7. 'sorted' → logprob: -8.736671447753906
    8. ' ' → logprob: -8.986671447753906
    9. 'range' → logprob: -9.111671447753906
    10. '   ' → logprob: -9.236671447753906

Token 596: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.012651853263378143
    2. 'order' → logprob: -4.3876519203186035
    3. '.plan' → logprob: -9.137651443481445
    4. '.' → logprob: -11.012651443481445
    5. ' order' → logprob: -12.512651443481445
    6. '.range' → logprob: -12.887651443481445
    7. '.sorted' → logprob: -13.387651443481445
    8. '	order' → logprob: -13.637651443481445
    9. '.user' → logprob: -13.637651443481445
    10. '.driver' → logprob: -13.887651443481445

Token 597: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010042096488177776
    2. ':
' → logprob: -4.760042190551758
    3. ' :' → logprob: -6.760042190551758
    4. '       ' → logprob: -10.135042190551758
    5. ':
' → logprob: -10.385042190551758
    6. ' :
' → logprob: -10.635042190551758
    7. '.' → logprob: -10.885042190551758
    8. '():
' → logprob: -10.885042190551758
    9. '               ' → logprob: -11.135042190551758
    10. ':

' → logprob: -11.260042190551758

Token 598: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004754307214170694
    2. '           ' → logprob: -6.129754543304443
    3. ' self' → logprob: -6.754754543304443
    4. ':
' → logprob: -7.629754543304443
    5. '	           ' → logprob: -8.629754066467285
    6. ':' → logprob: -9.004754066467285
    7. ' and' → logprob: -9.129754066467285
    8. '	       ' → logprob: -9.504754066467285
    9. ',' → logprob: -9.629754066467285
    10. ' if' → logprob: -9.879754066467285

Token 599: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.903914749622345
    2. ' if' → logprob: -1.2789146900177002
    3. ' self' → logprob: -2.0289146900177
    4. '               ' → logprob: -2.9039146900177
    5. 'self' → logprob: -3.0289146900177
    6. 'path' (adapté à ' path') → logprob: -3.7789146900177
    7. 'if' → logprob: -3.9039146900177
    8. '           ' → logprob: -4.028914928436279
    9. ' p' → logprob: -5.403914928436279
    10. ' break' → logprob: -5.778914928436279

Token 600: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04870966076850891
    2. '=' → logprob: -3.0487096309661865
    3. ' ' → logprob: -9.423709869384766
    4. 'path' → logprob: -11.923709869384766
    5. 's' → logprob: -12.048709869384766
    6. '_' → logprob: -12.423709869384766
    7. ' +=' → logprob: -12.798709869384766
    8. '   ' → logprob: -13.423709869384766
    9. '        ' → logprob: -13.548709869384766
    10. '_path' → logprob: -13.548709869384766

Token 601: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38687410950660706
    2. 'self' → logprob: -1.1368740797042847
    3. '               ' → logprob: -13.761874198913574
    4. '	self' → logprob: -14.011874198913574
    5. '(self' → logprob: -15.386874198913574
    6. ' ' → logprob: -15.386874198913574
    7. '           ' → logprob: -15.636874198913574
    8. ' out' → logprob: -15.886874198913574
    9. 's' → logprob: -16.636873245239258
    10. '                   ' → logprob: -16.761873245239258

Token 602: '.map' (ID: 7975)
  Prédit: '.map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.map' → logprob: -0.0042130243964493275
    2. '.' → logprob: -5.504212856292725
    3. ' .' → logprob: -9.629213333129883
    4. '.short' → logprob: -10.004213333129883
    5. ' map' → logprob: -11.504213333129883
    6. 'map' → logprob: -11.629213333129883
    7. '.route' → logprob: -13.379213333129883
    8. 'short' → logprob: -14.004213333129883
    9. '.m' → logprob: -14.879213333129883
    10. '	map' → logprob: -15.004213333129883

Token 603: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -2.9160102712921798e-05
    2. ' .' → logprob: -11.250029563903809
    3. '.' → logprob: -11.625029563903809
    4. '.shortcuts' → logprob: -12.875029563903809
    5. '.s' → logprob: -13.625029563903809
    6. '	short' → logprob: -13.875029563903809
    7. 'short' → logprob: -14.000029563903809
    8. '.long' → logprob: -14.625029563903809
    9. '.Short' → logprob: -15.250029563903809
    10. '.sh' → logprob: -15.500029563903809

Token 604: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -7.896309739408025e-07
    2. 'Pat' → logprob: -14.750000953674316
    3. 'P' → logprob: -15.875000953674316
    4. 'path' → logprob: -16.875
    5. ' Path' → logprob: -16.875
    6. '_path' → logprob: -16.875
    7. '	Path' → logprob: -17.375
    8. 'Pa' → logprob: -17.5
    9. 'Point' → logprob: -18.875
    10. '(i' → logprob: -19.125

Token 605: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.00010330478107789531
    2. '(' → logprob: -9.250102996826172
    3. 'last' → logprob: -12.250102996826172
    4. '(i' → logprob: -13.750102996826172
    5. '(
' → logprob: -15.000102996826172
    6. '[last' → logprob: -15.250102996826172
    7. '(l' → logprob: -15.375102996826172
    8. '(next' → logprob: -15.625102996826172
    9. ' last' → logprob: -16.125102996826172
    10. '((' → logprob: -16.375102996826172

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004242111928761005
    2. ',i' → logprob: -5.754241943359375
    3. '(i' → logprob: -7.254241943359375
    4. ' ,' → logprob: -8.004241943359375
    5. '(' → logprob: -11.129241943359375
    6. '               ' → logprob: -13.004241943359375
    7. ',
' → logprob: -13.254241943359375
    8. ',j' → logprob: -14.379241943359375
    9. '[i' → logprob: -14.754241943359375
    10. ' (' → logprob: -14.879241943359375

Token 607: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018162114545702934
    2. ' i' → logprob: -4.018162250518799
    3. '               ' → logprob: -11.39316177368164
    4. '                   ' → logprob: -15.01816177368164
    5. '           ' → logprob: -15.39316177368164
    6. ' ' → logprob: -15.64316177368164
    7. '   ' → logprob: -16.76816177368164
    8. '              ' → logprob: -16.89316177368164
    9. 'int' → logprob: -17.14316177368164
    10. '                ' → logprob: -17.39316177368164

Token 608: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.57696133852005
    2. ')
' → logprob: -0.82696133852005
    3. '               ' → logprob: -7.701961517333984
    4. ')
' → logprob: -7.701961517333984
    5. ' )
' → logprob: -9.576961517333984
    6. ' )' → logprob: -10.451961517333984
    7. ')

' → logprob: -12.326961517333984
    8. ')[' → logprob: -12.826961517333984
    9. '           ' → logprob: -12.951961517333984
    10. '                ' → logprob: -13.326961517333984

Token 609: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006341627449728549
    2. '<|end|>' → logprob: -8.12563419342041
    3. '                
' → logprob: -8.87563419342041
    4. '
' → logprob: -10.37563419342041
    5. '       ' → logprob: -10.37563419342041
    6. '                ' → logprob: -10.75063419342041
    7. '[' → logprob: -11.00063419342041
    8. ' 
' → logprob: -11.12563419342041
    9. '              ' → logprob: -11.25063419342041
    10. '           ' → logprob: -11.75063419342041

Token 610: ' for' (ID: 395)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2492268681526184
    2. ' self' → logprob: -1.6242268085479736
    3. ' for' → logprob: -4.499227046966553
    4. 'for' (adapté à ' for') → logprob: -5.124227046966553
    5. '               ' → logprob: -5.624227046966553
    6. 'if' → logprob: -6.499227046966553
    7. ' if' → logprob: -7.124227046966553
    8. '	self' → logprob: -8.624226570129395
    9. '           ' → logprob: -9.374226570129395
    10. '	       ' → logprob: -9.624226570129395

Token 611: ' j' (ID: 441)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3442445993423462
    2. 'x' → logprob: -2.8442444801330566
    3. 'node' → logprob: -2.9692444801330566
    4. 'j' → logprob: -3.2192444801330566
    5. 'k' → logprob: -3.3442444801330566
    6. ' p' → logprob: -4.094244480133057
    7. 'point' → logprob: -4.219244480133057
    8. 'v' → logprob: -4.219244480133057
    9. 'step' → logprob: -4.469244480133057
    10. ' node' → logprob: -5.469244480133057

Token 612: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002621670486405492
    2. 'in' → logprob: -6.002621650695801
    3. ' ' → logprob: -8.8776216506958
    4. '	in' → logprob: -12.8776216506958
    5. '  ' → logprob: -13.5026216506958
    6. 'n' → logprob: -14.6276216506958
    7. ' i' → logprob: -15.2526216506958
    8. 'token' → logprob: -15.3776216506958
    9. 's' → logprob: -15.5026216506958
    10. ' ' → logprob: -15.6276216506958

Token 613: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.12932653725147247
    2. ' path' → logprob: -2.129326581954956
    3. ' range' → logprob: -6.754326343536377
    4. 'range' → logprob: -6.754326343536377
    5. 'j' → logprob: -11.004326820373535
    6. '   ' → logprob: -11.004326820373535
    7. ' ' → logprob: -11.754326820373535
    8. ' j' → logprob: -11.879326820373535
    9. '	path' → logprob: -12.254326820373535
    10. '(path' → logprob: -12.379326820373535

Token 614: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10188650339841843
    2. ':
' → logprob: -2.476886510848999
    3. '                   ' → logprob: -4.60188627243042
    4. '               ' → logprob: -7.10188627243042
    5. ' :' → logprob: -8.101886749267578
    6. '                       ' → logprob: -8.226886749267578
    7. '):
' → logprob: -8.351886749267578
    8. '                           ' → logprob: -8.476886749267578
    9. ',' → logprob: -9.101886749267578
    10. '   ' → logprob: -9.226886749267578

Token 615: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010029231198132038
    2. '               ' → logprob: -5.885029315948486
    3. ':' → logprob: -6.635029315948486
    4. '   ' → logprob: -6.885029315948486
    5. '           ' → logprob: -7.510029315948486
    6. '                    
' → logprob: -7.510029315948486
    7. '		           ' → logprob: -7.760029315948486
    8. '                       ' → logprob: -7.885029315948486
    9. '<|end|>' → logprob: -7.885029315948486
    10. '	               ' → logprob: -8.385028839111328

Token 616: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.43857476115226746
    2. ' self' → logprob: -1.0635747909545898
    3. '	self' → logprob: -4.81357479095459
    4. '                   ' → logprob: -7.81357479095459
    5. '               ' → logprob: -7.93857479095459
    6. ' if' → logprob: -8.31357479095459
    7. '   ' → logprob: -8.43857479095459
    8. '                       ' → logprob: -8.68857479095459
    9. '	               ' → logprob: -9.68857479095459
    10. ' ' → logprob: -9.81357479095459

Token 617: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -9.019237768370658e-05
    2. '.' → logprob: -9.375090599060059
    3. ' .' → logprob: -12.875090599060059
    4. 'plan' → logprob: -13.750090599060059
    5. '.pl' → logprob: -14.000090599060059
    6. '.Plan' → logprob: -15.625090599060059
    7. ' plan' → logprob: -15.750090599060059
    8. '.user' → logprob: -16.000089645385742
    9. '.route' → logprob: -16.625089645385742
    10. '.period' → logprob: -16.625089645385742

Token 618: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010080150241265073
    2. '.' → logprob: -9.250101089477539
    3. ' .' → logprob: -12.750101089477539
    4. 'append' → logprob: -14.375101089477539
    5. '.extend' → logprob: -14.500101089477539
    6. '.app' → logprob: -15.375101089477539
    7. '.Append' → logprob: -16.50010108947754
    8. '                   ' → logprob: -16.87510108947754
    9. '.add' → logprob: -17.25010108947754
    10. '.ap' → logprob: -17.37510108947754

Token 619: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.002485884353518486
    2. '(' → logprob: -6.002485752105713
    3. ' (' → logprob: -12.502486228942871
    4. 'j' → logprob: -12.502486228942871
    5. ' j' → logprob: -13.502486228942871
    6. '(
' → logprob: -14.377486228942871
    7. '('' → logprob: -15.002486228942871
    8. '((' → logprob: -15.002486228942871
    9. '(int' → logprob: -16.252485275268555
    10. '(i' → logprob: -17.127485275268555

Token 620: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008851749822497368
    2. ' )' → logprob: -4.758851528167725
    3. ')
' → logprob: -9.008852005004883
    4. '<|end|>' → logprob: -9.258852005004883
    5. ' )
' → logprob: -11.133852005004883
    6. '               ' → logprob: -14.008852005004883
    7. '                   ' → logprob: -14.008852005004883
    8. '<|end|>' → logprob: -14.133852005004883
    9. '),' → logprob: -14.758852005004883
    10. ')return' → logprob: -15.633852005004883

Token 621: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 622: ' last' (ID: 2174)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.656395673751831
    2. ' self' → logprob: -1.281395673751831
    3. '           ' → logprob: -1.656395673751831
    4. '       ' → logprob: -4.65639591217041
    5. '               ' → logprob: -5.90639591217041
    6. 'out' → logprob: -8.65639591217041
    7. ' out' → logprob: -8.78139591217041
    8. '	self' → logprob: -10.28139591217041
    9. '   ' → logprob: -10.65639591217041
    10. 'output' → logprob: -10.90639591217041

Token 623: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10036905854940414
    2. '=' → logprob: -2.3503689765930176
    3. ' ' → logprob: -9.350369453430176
    4. '<|end|>' → logprob: -9.975369453430176
    5. ' +=' → logprob: -11.975369453430176
    6. ',' → logprob: -12.100369453430176
    7. ' ==' → logprob: -12.475369453430176
    8. ' |=' → logprob: -12.725369453430176
    9. ' =)' → logprob: -13.100369453430176
    10. ')' → logprob: -13.850369453430176

Token 624: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0064195292070508
    2. 'j' → logprob: -5.131419658660889
    3. ' i' → logprob: -7.631419658660889
    4. ' j' → logprob: -12.38141918182373
    5. '   ' → logprob: -14.00641918182373
    6. '                   ' → logprob: -15.75641918182373
    7. '               ' → logprob: -16.131420135498047
    8. '           ' → logprob: -16.131420135498047
    9. ' ' → logprob: -16.256420135498047
    10. '       ' → logprob: -16.381420135498047

Token 625: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6346021294593811
    2. '<|end|>' → logprob: -0.7596021294593811
    3. '<|end|>' → logprob: -6.509602069854736
    4. ' 
' → logprob: -8.759602546691895
    5. '       ' → logprob: -9.134602546691895
    6. '\n' → logprob: -9.384602546691895
    7. ' ' → logprob: -10.634602546691895
    8. '  
' → logprob: -11.134602546691895
    9. '
' → logprob: -11.259602546691895
    10. '           ' → logprob: -11.634602546691895

Token 626: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34458479285240173
    2. '           ' → logprob: -1.3445848226547241
    3. '<|end|>' → logprob: -3.7195847034454346
    4. '               ' → logprob: -5.469584941864014
    5. '<|end|>' → logprob: -6.469584941864014
    6. 'return' → logprob: -8.719584465026855
    7. '
' → logprob: -8.844584465026855
    8. '        
' → logprob: -8.844584465026855
    9. '</' → logprob: -9.719584465026855
    10. '	       ' → logprob: -9.969584465026855

Token 627: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10036269575357437
    2. '           ' → logprob: -2.475362777709961
    3. ' self' → logprob: -4.600362777709961
    4. 'self' (adapté à ' self') → logprob: -7.600362777709961
    5. '   ' → logprob: -7.975362777709961
    6. '<|end|>' → logprob: -9.475362777709961
    7. '	   ' → logprob: -9.850362777709961
    8. '	self' → logprob: -9.975362777709961
    9. '               ' → logprob: -10.100362777709961
    10. '	       ' → logprob: -10.100362777709961

Token 628: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.0013619012897834182
    2. '.plan' → logprob: -6.751361846923828
    3. 'order' → logprob: -8.626361846923828
    4. '.' → logprob: -11.626361846923828
    5. '	order' → logprob: -13.251361846923828
    6. ' .' → logprob: -14.001361846923828
    7. 'plan' → logprob: -14.876361846923828
    8. ' order' → logprob: -16.126361846923828
    9. '$order' → logprob: -16.501361846923828
    10. '.target' → logprob: -17.501361846923828

Token 629: ' =' (ID: 314)
  Prédit: '.clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clear' → logprob: -0.002994816517457366
    2. '=' → logprob: -6.002995014190674
    3. '.' → logprob: -7.627995014190674
    4. ' =' → logprob: -10.627994537353516
    5. ' .' → logprob: -12.627994537353516
    6. 'clear' → logprob: -13.127994537353516
    7. '.=' → logprob: -13.252994537353516
    8. ' clear' → logprob: -15.252994537353516
    9. '	clear' → logprob: -15.252994537353516
    10. '=set' → logprob: -15.252994537353516

Token 630: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0015146232908591628
    2. ' set' → logprob: -6.501514434814453
    3. '{}' → logprob: -11.626514434814453
    4. '	set' → logprob: -13.126514434814453
    5. '=set' → logprob: -14.626514434814453
    6. '{' → logprob: -15.001514434814453
    7. ' ' → logprob: -15.376514434814453
    8. '   ' → logprob: -16.126514434814453
    9. '(set' → logprob: -16.501514434814453
    10. '  ' → logprob: -16.501514434814453

Token 631: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.371605948312208e-05
    2. '()
' → logprob: -9.875053405761719
    3. '([]' → logprob: -13.875053405761719
    4. '()\' → logprob: -15.250053405761719
    5. '()
' → logprob: -15.500053405761719
    6. '()

' → logprob: -15.625053405761719
    7. '()<' → logprob: -15.625053405761719
    8. '()</' → logprob: -15.875053405761719
    9. '()}' → logprob: -16.12505340576172
    10. '()]' → logprob: -16.62505340576172

Token 632: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 633: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 634: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.20752708613872528
    2. ' self' → logprob: -1.7075270414352417
    3. '(len' → logprob: -6.207527160644531
    4. 'len' → logprob: -6.707527160644531
    5. 'self' → logprob: -7.082527160644531
    6. ' not' → logprob: -7.082527160644531
    7. ' ' → logprob: -7.832527160644531
    8. ' False' → logprob: -9.082527160644531
    9. '(self' → logprob: -9.207527160644531
    10. ' (' → logprob: -9.270027160644531

Token 635: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000651793903671205
    2. '(' → logprob: -7.375651836395264
    3. ' (' → logprob: -10.875651359558105
    4. 'self' → logprob: -13.000651359558105
    5. '(s' → logprob: -13.625651359558105
    6. '(this' → logprob: -14.375651359558105
    7. '(plan' → logprob: -14.875651359558105
    8. ' self' → logprob: -15.000651359558105
    9. '()' → logprob: -15.375651359558105
    10. '(out' → logprob: -15.500651359558105

Token 636: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.0005126410396769643
    2. 'plan' → logprob: -8.375513076782227
    3. ' plan' → logprob: -8.750513076782227
    4. '.order' → logprob: -10.375513076782227
    5. '(plan' → logprob: -10.750513076782227
    6. '.pl' → logprob: -10.875513076782227
    7. ' .' → logprob: -11.000513076782227
    8. '.route' → logprob: -11.250513076782227
    9. '.' → logprob: -11.625513076782227
    10. '.out' → logprob: -12.250513076782227

Token 637: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6763319969177246
    2. '>' → logprob: -1.5513319969177246
    3. ' ==' → logprob: -1.9263319969177246
    4. '==' → logprob: -2.3013319969177246
    5. ')' → logprob: -3.4263319969177246
    6. ')>' → logprob: -7.676331996917725
    7. ')==' → logprob: -8.301332473754883
    8. '()' → logprob: -8.926332473754883
    9. '()>' → logprob: -9.051332473754883
    10. ' ' → logprob: -9.926332473754883

Token 638: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5699772238731384
    2. ' >' → logprob: -1.3199772834777832
    3. '==' → logprob: -2.069977283477783
    4. '>' → logprob: -3.194977283477783
    5. ' ' → logprob: -9.819976806640625
    6. ' <=' → logprob: -10.569976806640625
    7. ' <' → logprob: -10.819976806640625
    8. ' !=' → logprob: -11.632476806640625
    9. '<=' → logprob: -12.069976806640625
    10. '=' → logprob: -12.194976806640625

Token 639: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16028952598571777
    2. ' ' → logprob: -1.9102895259857178
    3. '=' → logprob: -9.910289764404297
    4. '1' → logprob: -11.285289764404297
    5. '  ' → logprob: -14.972789764404297
    6. '10' → logprob: -15.035289764404297
    7. '>' → logprob: -15.035289764404297
    8. '<|end|>' → logprob: -15.097789764404297
    9. ' ' → logprob: -15.097789764404297
    10. '100' → logprob: -15.410289764404297

Token 640: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032775294966995716
    2. ' ' → logprob: -5.75327730178833
    3. '1' → logprob: -9.253277778625488
    4. '100' → logprob: -14.065777778625488
    5. '10' → logprob: -14.315777778625488
    6. '   ' → logprob: -14.753277778625488
    7. '=' → logprob: -15.190777778625488
    8. '2' → logprob: -15.253277778625488
    9. '  ' → logprob: -15.628277778625488
    10. '
' → logprob: -15.940777778625488

Token 641: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6593706607818604
    2. ' and' → logprob: -1.0343706607818604
    3. ':' → logprob: -2.4093706607818604
    4. 'and' → logprob: -3.6593706607818604
    5. '           ' → logprob: -4.534370422363281
    6. '       ' → logprob: -7.659370422363281
    7. '   ' → logprob: -7.909370422363281
    8. '               ' → logprob: -10.534370422363281
    9. ' :
' → logprob: -10.659370422363281
    10. '	and' → logprob: -10.659370422363281

Token 642: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29914596676826477
    2. 'self' → logprob: -2.2991459369659424
    3. ' self' → logprob: -2.4241459369659424
    4. '   ' → logprob: -3.4241459369659424
    5. '       ' → logprob: -3.5491459369659424
    6. ' if' → logprob: -6.0491461753845215
    7. 'if' → logprob: -6.5491461753845215
    8. 'return' → logprob: -6.7991461753845215
    9. '	self' → logprob: -6.9241461753845215
    10. '	       ' → logprob: -7.1741461753845215

Token 643: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.054250266402959824
    2. 'if' → logprob: -3.9292502403259277
    3. 'next' → logprob: -4.054250240325928
    4. 'segment' → logprob: -5.304250240325928
    5. 'token' → logprob: -5.554250240325928
    6. 'return' → logprob: -5.929250240325928
    7. '           ' → logprob: -6.929250240325928
    8. ' self' → logprob: -7.179250240325928
    9. 'step' → logprob: -7.554250240325928
    10. '   ' → logprob: -7.804250240325928

Token 644: '.target' (ID: 11090)
  Prédit: '.next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.15348191559314728
    2. '.location' → logprob: -2.278481960296631
    3. '.target' → logprob: -3.653481960296631
    4. '.plan' → logprob: -4.653481960296631
    5. '.' → logprob: -5.528481960296631
    6. 'next' → logprob: -8.403481483459473
    7. ' .' → logprob: -9.778481483459473
    8. '.current' → logprob: -10.778481483459473
    9. 'Next' → logprob: -11.028481483459473
    10. '.position' → logprob: -11.153481483459473

Token 645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474077969789505
    2. '=' → logprob: -0.9740779399871826
    3. ',' → logprob: -15.099078178405762
    4. ' ' → logprob: -15.474078178405762
    5. '.=' → logprob: -16.224077224731445
    6. '	' → logprob: -16.349077224731445
    7. '_=' → logprob: -16.474077224731445
    8. '=self' → logprob: -16.599077224731445
    9. '   ' → logprob: -17.099077224731445
    10. '  ' → logprob: -17.599077224731445

Token 646: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011053359135985374
    2. ' self' → logprob: -4.511053562164307
    3. '   ' → logprob: -12.886053085327148
    4. '           ' → logprob: -13.261053085327148
    5. '	self' → logprob: -14.761053085327148
    6. '    ' → logprob: -14.886053085327148
    7. '       ' → logprob: -16.01105308532715
    8. '  ' → logprob: -16.26105308532715
    9. '               ' → logprob: -16.51105308532715
    10. ' ' → logprob: -16.76105308532715

Token 647: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.500000953674316
    3. ' .' → logprob: -14.625000953674316
    4. 'plan' → logprob: -15.500000953674316
    5. '.pl' → logprob: -17.125001907348633
    6. ' plan' → logprob: -18.500001907348633
    7. '(plan' → logprob: -21.000001907348633
    8. '\.' → logprob: -21.125001907348633
    9. '.Plan' → logprob: -21.250001907348633
    10. ' план' → logprob: -21.250001907348633

Token 648: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20152093470096588
    2. '.pop' → logprob: -1.7015209197998047
    3. '[-' → logprob: -9.701520919799805
    4. 'pop' → logprob: -10.326520919799805
    5. '0' → logprob: -11.451520919799805
    6. '.' → logprob: -12.826520919799805
    7. '```' → logprob: -15.826520919799805
    8. 'Pop' → logprob: -16.326520919799805
    9. '[
' → logprob: -17.201520919799805
    10. '   ' → logprob: -17.451520919799805

Token 649: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.000014305114746
    4. '(' → logprob: -16.125015258789062
    5. '۰' → logprob: -16.562515258789062
    6. '	' → logprob: -16.812515258789062
    7. '[' → logprob: -17.250015258789062
    8. '-' → logprob: -17.375015258789062
    9. '
' → logprob: -17.500015258789062
    10. ' ' → logprob: -17.500015258789062

Token 650: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06506342440843582
    2. ']
' → logprob: -2.8150634765625
    3. '<|end|>' → logprob: -5.8150634765625
    4. ' ]' → logprob: -10.0650634765625
    5. '
' → logprob: -10.6900634765625
    6. ']

' → logprob: -11.3150634765625
    7. '<|end|>' → logprob: -11.4400634765625
    8. ']
' → logprob: -11.5650634765625
    9. ')' → logprob: -13.0650634765625
    10. ' ]
' → logprob: -13.8150634765625

Token 651: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 652: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5830062627792358
    2. 'self' (adapté à ' self') → logprob: -0.9580062627792358
    3. ' self' → logprob: -3.0830063819885254
    4. 'if' → logprob: -5.333006381988525
    5. 'return' → logprob: -5.833006381988525
    6. '	self' → logprob: -6.583006381988525
    7. '       ' → logprob: -7.208006381988525
    8. ' if' → logprob: -7.458006381988525
    9. '	       ' → logprob: -7.708006381988525
    10. 'out' → logprob: -8.083005905151367

Token 653: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.11575246602296829
    2. 'next' → logprob: -2.6157524585723877
    3. '.plan' → logprob: -3.3657524585723877
    4. 'plan' → logprob: -7.240752696990967
    5. ' next' → logprob: -7.740752696990967
    6. '.target' → logprob: -7.865752696990967
    7. ' plan' → logprob: -10.115752220153809
    8. 'target' → logprob: -10.115752220153809
    9. '.' → logprob: -11.240752220153809
    10. 'Next' → logprob: -11.490752220153809

Token 654: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.9361264946837764e-07
    2. 'Seg' → logprob: -16.5
    3. ' Segment' → logprob: -16.875
    4. 'Segments' → logprob: -17.875
    5. '_segment' → logprob: -18.875
    6. 'Step' → logprob: -20.25
    7. '_S' → logprob: -20.625
    8. '_SEG' → logprob: -20.75
    9. 'Segue' → logprob: -20.875
    10. 'S' → logprob: -21.375

Token 655: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -1.1472419600977446e-06
    2. 'Time' → logprob: -14.500000953674316
    3. 'left' → logprob: -15.500000953674316
    4. 'Le' → logprob: -15.750000953674316
    5. '=' → logprob: -16.250001907348633
    6. 'Length' → logprob: -17.000001907348633
    7. 'Right' → logprob: -17.125001907348633
    8. ' =' → logprob: -18.000001907348633
    9. '[' → logprob: -18.750001907348633
    10. ' Left' → logprob: -19.250001907348633

Token 656: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -1.1994775377388578e-05
    2. '=' → logprob: -11.750012397766113
    3. '-=' → logprob: -12.625012397766113
    4. 'Ti' → logprob: -15.375012397766113
    5. 'Tim' → logprob: -15.500012397766113
    6. ' -=' → logprob: -16.125011444091797
    7. 'time' → logprob: -16.125011444091797
    8. '	Time' → logprob: -16.875011444091797
    9. ' Time' → logprob: -17.125011444091797
    10. ' =' → logprob: -17.125011444091797

Token 657: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.3343072533607483
    2. ' =' → logprob: -1.9593071937561035
    3. '-=' → logprob: -2.5843071937561035
    4. '=' → logprob: -2.7093071937561035
    5. ' +=' → logprob: -7.5843071937561035
    6. '-' → logprob: -7.9593071937561035
    7. '+=' → logprob: -8.459307670593262
    8. ' ' → logprob: -9.709307670593262
    9. ' -' → logprob: -11.209307670593262
    10. '   ' → logprob: -11.459307670593262

Token 658: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017630017828196287
    2. ' self' → logprob: -6.751762866973877
    3. 'out' → logprob: -7.626762866973877
    4. 'graph' → logprob: -10.251763343811035
    5. 'g' → logprob: -11.001763343811035
    6. '0' → logprob: -11.126763343811035
    7. '	self' → logprob: -11.251763343811035
    8. '   ' → logprob: -12.001763343811035
    9. 'user' → logprob: -12.626763343811035
    10. '1' → logprob: -12.626763343811035

Token 659: '.map' (ID: 7975)
  Prédit: '.map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.map' → logprob: -0.004096093121916056
    2. 'map' → logprob: -5.504096031188965
    3. '.plan' → logprob: -11.754096031188965
    4. '.target' → logprob: -12.129096031188965
    5. '.next' → logprob: -13.879096031188965
    6. '.' → logprob: -14.129096031188965
    7. '.g' → logprob: -14.129096031188965
    8. '	map' → logprob: -14.504096031188965
    9. 'target' → logprob: -14.629096031188965
    10. ').' → logprob: -16.00409698486328

Token 660: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.000421974720666185
    2. 'G' → logprob: -8.250421524047852
    3. '.' → logprob: -9.125421524047852
    4. ' .' → logprob: -10.125421524047852
    5. '   ' → logprob: -11.750421524047852
    6. '`.' → logprob: -13.875421524047852
    7. '```' → logprob: -14.250421524047852
    8. ' ' → logprob: -14.375421524047852
    9. '	G' → logprob: -15.375421524047852
    10. '​.' → logprob: -15.875421524047852

Token 661: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.001172129064798355
    2. 'self' → logprob: -6.751172065734863
    3. '[last' → logprob: -13.751172065734863
    4. '[' → logprob: -14.626172065734863
    5. ' self' → logprob: -15.376172065734863
    6. '	self' → logprob: -16.25117301940918
    7. '   ' → logprob: -16.87617301940918
    8. '(self' → logprob: -17.62617301940918
    9. '[
' → logprob: -18.25117301940918
    10. 'last' → logprob: -18.62617301940918

Token 662: '.location' (ID: 15725)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32728052139282227
    2. 'location' → logprob: -1.5772805213928223
    3. '[self' → logprob: -2.8272805213928223
    4. '[' → logprob: -4.327280521392822
    5. '][' → logprob: -9.702280044555664
    6. '[last' → logprob: -10.077280044555664
    7. 'last' → logprob: -10.452280044555664
    8. '[
' → logprob: -10.827280044555664
    9. ' self' → logprob: -11.202280044555664
    10. ' location' → logprob: -11.327280044555664

Token 663: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00027432903880253434
    2. '[self' → logprob: -8.250274658203125
    3. ']' → logprob: -12.250274658203125
    4. '[' → logprob: -12.375274658203125
    5. ' ][' → logprob: -12.500274658203125
    6. 'self' → logprob: -16.250274658203125
    7. '"][' → logprob: -17.750274658203125
    8. ''][' → logprob: -17.750274658203125
    9. '   ' → logprob: -17.875274658203125
    10. '][_' → logprob: -17.875274658203125

Token 664: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.027225754223764e-05
    2. ' self' → logprob: -9.750060081481934
    3. '   ' → logprob: -13.875060081481934
    4. '           ' → logprob: -14.125060081481934
    5. '
' → logprob: -15.875060081481934
    6. '	self' → logprob: -16.50006103515625
    7. '       ' → logprob: -16.75006103515625
    8. '    ' → logprob: -18.37506103515625
    9. ' ' → logprob: -18.87506103515625
    10. '  ' → logprob: -18.87506103515625

Token 665: '.target' (ID: 11090)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.3868729770183563
    2. '.target' → logprob: -1.1368730068206787
    3. ' target' → logprob: -14.261873245239258
    4. 'arget' → logprob: -15.261873245239258
    5. '[target' → logprob: -15.636873245239258
    6. '.' → logprob: -15.761873245239258
    7. '	target' → logprob: -15.761873245239258
    8. '.plan' → logprob: -16.011873245239258
    9. 'plan' → logprob: -16.386873245239258
    10. ',target' → logprob: -16.511873245239258

Token 666: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007592422189190984
    2. ']-' → logprob: -7.500759124755859
    3. '[' → logprob: -9.00075912475586
    4. ' ]' → logprob: -9.75075912475586
    5. ']
' → logprob: -11.37575912475586
    6. ']>' → logprob: -11.75075912475586
    7. '-' → logprob: -13.87575912475586
    8. '[]' → logprob: -14.25075912475586
    9. ' -' → logprob: -14.37575912475586
    10. ']!' → logprob: -15.00075912475586

Token 667: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8118714094161987
    2. '<|end|>' → logprob: -0.8118714094161987
    3. '   ' → logprob: -2.9368715286254883
    4. '
' → logprob: -3.9368715286254883
    5. '\n' → logprob: -4.186871528625488
    6. '	' → logprob: -5.061871528625488
    7. '           ' → logprob: -6.061871528625488
    8. '	return' → logprob: -6.311871528625488
    9. '    ' → logprob: -6.311871528625488
    10. ' ' → logprob: -6.436871528625488

Token 668: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40455207228660583
    2. 'self' (adapté à ' self') → logprob: -1.4045521020889282
    3. 'return' → logprob: -3.5295519828796387
    4. '       ' → logprob: -3.9045519828796387
    5. ' self' → logprob: -4.529551982879639
    6. 'if' → logprob: -5.029551982879639
    7. '	self' → logprob: -5.404551982879639
    8. '	       ' → logprob: -5.654551982879639
    9. '   ' → logprob: -6.029551982879639
    10. '		' → logprob: -6.154551982879639

Token 669: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -1.3544423381972592e-05
    2. 'plan' → logprob: -11.62501335144043
    3. '.target' → logprob: -12.75001335144043
    4. ').' → logprob: -14.50001335144043
    5. '.' → logprob: -15.50001335144043
    6. '.pl' → logprob: -15.62501335144043
    7. '.location' → logprob: -15.75001335144043
    8. '}.' → logprob: -15.75001335144043
    9. '`.' → logprob: -16.12501335144043
    10. ' .' → logprob: -16.12501335144043

Token 670: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.005870609078556299
    2. '.' → logprob: -5.255870819091797
    3. '=' → logprob: -7.380870819091797
    4. ' =' → logprob: -11.880870819091797
    5. 'pop' → logprob: -12.630870819091797
    6. '.remove' → logprob: -13.005870819091797
    7. '	pop' → logprob: -14.755870819091797
    8. ' .' → logprob: -15.380870819091797
    9. '   ' → logprob: -15.880870819091797
    10. '	' → logprob: -16.130870819091797

Token 671: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '0' → logprob: -19.0
    3. '()' → logprob: -19.25
    4. '(
' → logprob: -21.75
    5. '(-' → logprob: -23.0
    6. '[' → logprob: -24.125
    7. ' (' → logprob: -24.5
    8. '(

' → logprob: -24.625
    9. 's' → logprob: -25.625
    10. '()
' → logprob: -26.125

Token 672: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.000006675720215
    3. ' ' → logprob: -14.125006675720215
    4. ')' → logprob: -18.37500762939453
    5. '[' → logprob: -18.37500762939453
    6. '۰' → logprob: -18.50000762939453
    7. '   ' → logprob: -18.87500762939453
    8. '```' → logprob: -19.12500762939453
    9. '  ' → logprob: -19.37500762939453
    10. ' ' → logprob: -19.87500762939453

Token 673: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012224004603922367
    2. '()' → logprob: -4.762224197387695
    3. '<|end|>' → logprob: -6.012224197387695
    4. '       ' → logprob: -7.387224197387695
    5. ']' → logprob: -8.137224197387695
    6. ')
' → logprob: -9.012224197387695
    7. '())' → logprob: -9.762224197387695
    8. '()
' → logprob: -10.387224197387695
    9. '}' → logprob: -12.387224197387695
    10. ')return' → logprob: -12.512224197387695

Token 674: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 675: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3073079288005829
    2. 'def' (adapté à ' def') → logprob: -1.6823079586029053
    3. '
' → logprob: -3.4323079586029053
    4. '<|end|>' → logprob: -3.5573079586029053
    5. '	def' → logprob: -5.057307720184326
    6. ' def' → logprob: -5.057307720184326
    7. '    
' → logprob: -6.307307720184326
    8. ' ' → logprob: -7.057307720184326
    9. '  ' → logprob: -7.182307720184326
    10. '  
' → logprob: -8.182308197021484

Token 676: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.40937092900276184
    2. 'update' → logprob: -2.0343708992004395
    3. 'run' → logprob: -3.1593708992004395
    4. 'arr' → logprob: -3.6593708992004395
    5. ' move' → logprob: -3.6593708992004395
    6. 'step' → logprob: -3.7843708992004395
    7. 'go' → logprob: -3.9093708992004395
    8. 'drive' → logprob: -4.5343708992004395
    9. 'walk' → logprob: -4.7843708992004395
    10. 'tick' → logprob: -4.7843708992004395

Token 677: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.922563963802531e-05
    2. '(' → logprob: -9.625079154968262
    3. ' (' → logprob: -12.000079154968262
    4. '   ' → logprob: -13.125079154968262
    5. '(s' → logprob: -13.125079154968262
    6. 'self' → logprob: -13.250079154968262
    7. '       ' → logprob: -14.875079154968262
    8. ' ' → logprob: -15.250079154968262
    9. '(sel' → logprob: -15.625079154968262
    10. '	self' → logprob: -16.000080108642578

Token 678: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004497381451074034
    2. '):
' → logprob: -8.750450134277344
    3. 'self' → logprob: -9.125450134277344
    4. '   ' → logprob: -9.625450134277344
    5. '(' → logprob: -9.875450134277344
    6. '):' → logprob: -10.625450134277344
    7. '       ' → logprob: -11.250450134277344
    8. ' (' → logprob: -11.750450134277344
    9. ')' → logprob: -11.875450134277344
    10. ')(' → logprob: -12.750450134277344

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5820176005363464
    2. 'if' → logprob: -0.8320176005363464
    3. '   ' → logprob: -5.832017421722412
    4. ' if' → logprob: -5.832017421722412
    5. '	if' → logprob: -8.70701789855957
    6. 'self' → logprob: -11.08201789855957
    7. '	' → logprob: -11.45701789855957
    8. '	   ' → logprob: -13.95701789855957
    9. '```' → logprob: -13.95701789855957
    10. 'while' → logprob: -14.33201789855957

Token 680: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006949799135327339
    2. '       ' → logprob: -5.0069499015808105
    3. ' if' → logprob: -8.631949424743652
    4. '   ' → logprob: -10.256949424743652
    5. '	if' → logprob: -11.256949424743652
    6. 'self' → logprob: -12.131949424743652
    7. 'def' → logprob: -13.506949424743652
    8. 'while' → logprob: -14.256949424743652
    9. '	' → logprob: -14.381949424743652
    10. '```' → logprob: -17.38195037841797

Token 681: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1603526771068573
    2. 'self' → logprob: -1.9103527069091797
    3. '(self' → logprob: -9.41035270690918
    4. '	self' → logprob: -10.41035270690918
    5. ' ' → logprob: -12.28535270690918
    6. '   ' → logprob: -12.53535270690918
    7. '  ' → logprob: -13.16035270690918
    8. ' (' → logprob: -13.91035270690918
    9. 'len' → logprob: -14.03535270690918
    10. '(' → logprob: -14.03535270690918

Token 682: '.location' (ID: 15725)
  Prédit: '.next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -2.999452772201039e-05
    2. '.target' → logprob: -11.000029563903809
    3. '.' → logprob: -11.500029563903809
    4. 'next' → logprob: -13.250029563903809
    5. ' .' → logprob: -14.000029563903809
    6. '.location' → logprob: -14.750029563903809
    7. '.current' → logprob: -18.250030517578125
    8. ' next' → logprob: -18.375030517578125
    9. '.n' → logprob: -18.500030517578125
    10. '	next' → logprob: -19.125030517578125

Token 683: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5017157793045044
    2. '!=' → logprob: -1.0017157793045044
    3. ' ==' → logprob: -4.126715660095215
    4. '==' → logprob: -4.501715660095215
    5. ' ' → logprob: -10.751715660095215
    6. '	' → logprob: -12.501715660095215
    7. '=' → logprob: -13.001715660095215
    8. '<' → logprob: -13.251715660095215
    9. ' ' → logprob: -13.876715660095215
    10. '   ' → logprob: -14.376715660095215

Token 684: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004112473223358393
    2. ' self' → logprob: -5.504112243652344
    3. '   ' → logprob: -10.504112243652344
    4. '       ' → logprob: -12.754112243652344
    5. '  ' → logprob: -13.504112243652344
    6. ' ' → logprob: -14.379112243652344
    7. '    ' → logprob: -14.629112243652344
    8. '	self' → logprob: -14.754112243652344
    9. '1' → logprob: -14.879112243652344
    10. '           ' → logprob: -15.004112243652344

Token 685: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.00015920029545668513
    2. 'target' → logprob: -8.75015926361084
    3. '.location' → logprob: -14.87515926361084
    4. '.' → logprob: -15.50015926361084
    5. '.next' → logprob: -16.125158309936523
    6. ' target' → logprob: -18.625158309936523
    7. '	target' → logprob: -19.625158309936523
    8. ' .' → logprob: -19.875158309936523
    9. '.user' → logprob: -20.125158309936523
    10. '.destination' → logprob: -20.250158309936523

Token 686: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06886952370405197
    2. ':
' → logprob: -2.9438695907592773
    3. ' and' → logprob: -4.693869590759277
    4. ' or' → logprob: -6.193869590759277
    5. ':return' → logprob: -6.443869590759277
    6. 'and' → logprob: -6.943869590759277
    7. '       ' → logprob: -10.068869590759277
    8. ' :' → logprob: -10.568869590759277
    9. '   ' → logprob: -10.818869590759277
    10. '.' → logprob: -11.693869590759277

Token 687: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2714509069919586
    2. 'if' → logprob: -1.8964508771896362
    3. 'return' → logprob: -2.521450996398926
    4. '           ' → logprob: -5.396450996398926
    5. ' if' → logprob: -6.521450996398926
    6. 'self' → logprob: -6.896450996398926
    7. ' return' → logprob: -9.271450996398926
    8. '   ' → logprob: -9.521450996398926
    9. 'pass' → logprob: -9.771450996398926
    10. 'for' → logprob: -10.771450996398926

Token 688: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.028888048604130745
    2. 'self' → logprob: -4.02888822555542
    3. '       ' → logprob: -5.52888822555542
    4. ' if' → logprob: -5.77888822555542
    5. '           ' → logprob: -5.90388822555542
    6. 'return' → logprob: -7.27888822555542
    7. '   ' → logprob: -9.028887748718262
    8. ' self' → logprob: -10.153887748718262
    9. 'pass' → logprob: -10.903887748718262
    10. 'out' → logprob: -11.403887748718262

Token 689: '(-' (ID: 8087)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.9655380249023438
    2. '("' → logprob: -1.0905380249023438
    3. '(' → logprob: -1.8405380249023438
    4. '()' → logprob: -2.2155380249023438
    5. '(self' → logprob: -4.965538024902344
    6. '("")' → logprob: -5.090538024902344
    7. '()
' → logprob: -8.340538024902344
    8. '(
' → logprob: -8.340538024902344
    9. '(len' → logprob: -8.465538024902344
    10. '"' → logprob: -8.465538024902344

Token 690: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003358800895512104
    2. 'self' → logprob: -5.753358840942383
    3. '2' → logprob: -9.128358840942383
    4. 'out' → logprob: -11.003358840942383
    5. ' ' → logprob: -11.753358840942383
    6. '0' → logprob: -11.753358840942383
    7. '100' → logprob: -11.753358840942383
    8. '3' → logprob: -12.253358840942383
    9. '10' → logprob: -12.378358840942383
    10. '99' → logprob: -12.503358840942383

Token 691: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023323044180870056
    2. ')
' → logprob: -3.7733230590820312
    3. '       ' → logprob: -10.023323059082031
    4. '           ' → logprob: -11.023323059082031
    5. ')
' → logprob: -11.898323059082031
    6. ')return' → logprob: -11.898323059082031
    7. ' )' → logprob: -13.648323059082031
    8. '   ' → logprob: -15.148323059082031
    9. ')

' → logprob: -15.148323059082031
    10. '')' → logprob: -15.523323059082031

Token 692: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.282712459564209
    2. '       ' → logprob: -1.407712459564209
    3. '	       ' → logprob: -7.532712459564209
    4. 'return' → logprob: -8.157712936401367
    5. '
' → logprob: -8.907712936401367
    6. '		' → logprob: -8.907712936401367
    7. ' return' → logprob: -9.282712936401367
    8. '<|end|>' → logprob: -9.657712936401367
    9. '	' → logprob: -9.782712936401367
    10. '   ' → logprob: -10.032712936401367

Token 693: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26963382959365845
    2. '           ' → logprob: -1.5196337699890137
    3. ' return' → logprob: -4.769633769989014
    4. '       ' → logprob: -4.769633769989014
    5. 'else' → logprob: -8.394634246826172
    6. 'out' → logprob: -8.769634246826172
    7. '   ' → logprob: -9.894634246826172
    8. 'self' → logprob: -10.394634246826172
    9. 'elif' → logprob: -10.394634246826172
    10. '	return' → logprob: -10.519634246826172

Token 694: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23521634936332703
    2. '       ' → logprob: -1.8602163791656494
    3. 'self' → logprob: -2.9852163791656494
    4. 'return' → logprob: -6.36021614074707
    5. ' if' → logprob: -7.48521614074707
    6. '
' → logprob: -8.23521614074707
    7. '        
' → logprob: -8.48521614074707
    8. 'else' → logprob: -8.61021614074707
    9. 'for' → logprob: -8.73521614074707
    10. '	if' → logprob: -9.23521614074707

Token 695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6182302832603455
    2. 'if' → logprob: -0.8682302832603455
    3. 'self' → logprob: -3.3682303428649902
    4. 'else' → logprob: -5.24323034286499
    5. 'elif' → logprob: -7.36823034286499
    6. ' if' → logprob: -7.74323034286499
    7. '   ' → logprob: -7.99323034286499
    8. '	' → logprob: -9.618229866027832
    9. '	if' → logprob: -9.618229866027832
    10. '        
' → logprob: -10.243229866027832

Token 696: ' assert' (ID: 3696)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26355797052383423
    2. 'if' → logprob: -1.5135579109191895
    3. '       ' → logprob: -4.6385579109191895
    4. 'time' → logprob: -6.7635579109191895
    5. 'else' → logprob: -7.5135579109191895
    6. 't' → logprob: -9.638558387756348
    7. 'step' → logprob: -10.763558387756348
    8. 'elif' → logprob: -10.888558387756348
    9. 'steps' → logprob: -11.138558387756348
    10. 'distance' → logprob: -11.263558387756348

Token 697: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00890609622001648
    2. ' self' → logprob: -4.75890588760376
    3. '(self' → logprob: -8.258906364440918
    4. '0' → logprob: -11.508906364440918
    5. 'len' → logprob: -12.008906364440918
    6. '   ' → logprob: -12.133906364440918
    7. '(' → logprob: -12.883906364440918
    8. '	self' → logprob: -13.258906364440918
    9. 'not' → logprob: -13.383906364440918
    10. ' ' → logprob: -13.383906364440918

Token 698: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.00021831797494087368
    2. '.location' → logprob: -8.875218391418457
    3. '.' → logprob: -9.875218391418457
    4. '.target' → logprob: -11.250218391418457
    5. 'next' → logprob: -11.500218391418457
    6. ' .' → logprob: -12.750218391418457
    7. ').' → logprob: -14.750218391418457
    8. ' next' → logprob: -15.750218391418457
    9. 'location' → logprob: -16.12521743774414
    10. '.plan' → logprob: -17.12521743774414

Token 699: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -6.704273118884885e-07
    2. '>' → logprob: -15.375000953674316
    3. '_segment' → logprob: -16.125
    4. ' Segment' → logprob: -16.125
    5. '-' → logprob: -16.625
    6. 'Seg' → logprob: -17.375
    7. 'Target' → logprob: -18.25
    8. 'segment' → logprob: -18.625
    9. '...' → logprob: -19.125
    10. 'Step' → logprob: -19.125

Token 700: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -4.723352049040841e-06
    2. '>' → logprob: -13.000004768371582
    3. 'left' → logprob: -13.375004768371582
    4. '_left' → logprob: -15.250004768371582
    5. 'Le' → logprob: -15.500004768371582
    6. ' Left' → logprob: -15.750004768371582
    7. '_Left' → logprob: -16.625003814697266
    8. ' >' → logprob: -16.750003814697266
    9. 'Right' → logprob: -17.000003814697266
    10. 'L' → logprob: -17.000003814697266

Token 701: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -5.512236498361744e-07
    2. '>' → logprob: -15.750000953674316
    3. 'time' → logprob: -16.0
    4. 'Tim' → logprob: -16.375
    5. '	Time' → logprob: -16.375
    6. ' Time' → logprob: -17.0
    7. 'Times' → logprob: -17.75
    8. 'Ti' → logprob: -17.875
    9. '_time' → logprob: -18.5
    10. '   ' → logprob: -19.0

Token 702: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25204119086265564
    2. ' >' → logprob: -1.502041220664978
    3. ')' → logprob: -9.50204086303711
    4. ')>' → logprob: -11.00204086303711
    5. '>=' → logprob: -11.12704086303711
    6. '!=' → logprob: -13.62704086303711
    7. ' >=' → logprob: -13.75204086303711
    8. ' ' → logprob: -14.12704086303711
    9. ' ' → logprob: -14.25204086303711
    10. ' )' → logprob: -14.25204086303711

Token 703: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000627014203928411
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.125626564025879
    4. '  ' → logprob: -16.750627517700195
    5. '1' → logprob: -17.125627517700195
    6. '=' → logprob: -17.875627517700195
    7. ' ' → logprob: -17.875627517700195
    8. '    ' → logprob: -18.375627517700195
    9. '       ' → logprob: -19.000627517700195
    10. ')' → logprob: -19.563127517700195

Token 704: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.12504005432129
    4. '  ' → logprob: -18.37504005432129
    5. '1' → logprob: -18.75004005432129
    6. '۰' → logprob: -19.00004005432129
    7. '00' → logprob: -19.12504005432129
    8. '=' → logprob: -19.37504005432129
    9. ')' → logprob: -19.37504005432129
    10. ' ' → logprob: -19.50004005432129

Token 705: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6936401724815369
    2. ')
' → logprob: -0.6936401724815369
    3. '       ' → logprob: -7.943640232086182
    4. ' )
' → logprob: -9.568639755249023
    5. ')
' → logprob: -10.443639755249023
    6. ' )' → logprob: -11.068639755249023
    7. ')

' → logprob: -11.693639755249023
    8. '   ' → logprob: -12.193639755249023
    9. '),' → logprob: -12.443639755249023
    10. '	' → logprob: -13.318639755249023

Token 706: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6414415240287781
    2. '       ' → logprob: -0.7664415240287781
    3. '	' → logprob: -6.141441345214844
    4. '	self' → logprob: -6.141441345214844
    5. ' self' → logprob: -6.266441345214844
    6. 'if' → logprob: -6.266441345214844
    7. '   ' → logprob: -7.516441345214844
    8. '	   ' → logprob: -9.766441345214844
    9. ' if' → logprob: -10.516441345214844
    10. '	if' → logprob: -10.891441345214844

Token 707: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012054694816470146
    2. '       ' → logprob: -7.1262054443359375
    3. 'if' → logprob: -7.8762054443359375
    4. ' self' → logprob: -11.501205444335938
    5. '	self' → logprob: -11.626205444335938
    6. '   ' → logprob: -13.626205444335938
    7. 't' → logprob: -15.001205444335938
    8. '	' → logprob: -15.126205444335938
    9. '```' → logprob: -16.001205444335938
    10. '        
' → logprob: -16.126205444335938

Token 708: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0005586316110566258
    2. 'next' → logprob: -7.500558853149414
    3. '.' → logprob: -12.875558853149414
    4. ' next' → logprob: -14.000558853149414
    5. '	next' → logprob: -14.125558853149414
    6. ' .' → logprob: -15.000558853149414
    7. '[next' → logprob: -15.625558853149414
    8. '_next' → logprob: -15.750558853149414
    9. ').' → logprob: -15.875558853149414
    10. 'Next' → logprob: -15.875558853149414

Token 709: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: 0.0
    2. 'Seg' → logprob: -17.5
    3. '_segment' → logprob: -17.625
    4. ' Segment' → logprob: -17.75
    5. 'segment' → logprob: -19.125
    6. '_SEG' → logprob: -20.375
    7. 'egment' → logprob: -20.375
    8. 'Segments' → logprob: -21.375
    9. 'Segue' → logprob: -22.875
    10. 'Step' → logprob: -23.5

Token 710: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -6.704273118884885e-07
    2. 'left' → logprob: -14.625000953674316
    3. ' Left' → logprob: -16.5
    4. 'Le' → logprob: -17.75
    5. 'Right' → logprob: -18.625
    6. '.Left' → logprob: -19.0
    7. '_left' → logprob: -19.375
    8. 'L' → logprob: -20.25
    9. '_Left' → logprob: -20.5
    10. 'LEFT' → logprob: -21.125

Token 711: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -1.9361264946837764e-07
    2. 'time' → logprob: -16.25
    3. '_time' → logprob: -17.25
    4. '	Time' → logprob: -17.5
    5. 'Times' → logprob: -17.75
    6. ' Time' → logprob: -18.625
    7. ' time' → logprob: -19.625
    8. 'Left' → logprob: -19.875
    9. '   ' → logprob: -20.125
    10. '_TIME' → logprob: -20.625

Token 712: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4744945168495178
    2. '-=' → logprob: -0.9744945168495178
    3. '-' → logprob: -8.224494934082031
    4. '=' → logprob: -8.849494934082031
    5. ' =' → logprob: -12.724494934082031
    6. ' -' → logprob: -14.224494934082031
    7. '+=' → logprob: -14.349494934082031
    8. '    ' → logprob: -14.474494934082031
    9. '   ' → logprob: -14.724494934082031
    10. ' +=' → logprob: -15.224494934082031

Token 713: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00657029589638114
    2. ' self' → logprob: -5.131570339202881
    3. 'max' → logprob: -7.881570339202881
    4. '0' → logprob: -8.381569862365723
    5. ' max' → logprob: -11.381569862365723
    6. ' ' → logprob: -11.756569862365723
    7. '1' → logprob: -12.131569862365723
    8. '	self' → logprob: -12.256569862365723
    9. '(self' → logprob: -13.506569862365723
    10. 'int' → logprob: -14.131569862365723

Token 714: '.next' (ID: 6689)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.35511520504951477
    2. ' next' → logprob: -1.8551151752471924
    3. '.next' → logprob: -1.9801151752471924
    4. 'self' → logprob: -5.8551154136657715
    5. ' self' → logprob: -8.105114936828613
    6. '_next' → logprob: -8.230114936828613
    7. '[next' → logprob: -8.480114936828613
    8. '...' → logprob: -8.605114936828613
    9. '	next' → logprob: -8.605114936828613
    10. '-' → logprob: -9.105114936828613

Token 715: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.0280383548888494e-06
    2. 'Seg' → logprob: -14.625000953674316
    3. '-' → logprob: -15.875000953674316
    4. ' Segment' → logprob: -16.125001907348633
    5. '_S' → logprob: -17.125001907348633
    6. '_segment' → logprob: -17.125001907348633
    7. '-S' → logprob: -17.250001907348633
    8. 'Segments' → logprob: -17.375001907348633
    9. '_SEG' → logprob: -18.000001907348633
    10. 'self' → logprob: -18.250001907348633

Token 716: 'Left' (ID: 7471)
  Prédit: 'Time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -0.02325211651623249
    2. 'Left' → logprob: -3.773252010345459
    3. 'Right' → logprob: -12.523252487182617
    4. 'Timeout' → logprob: -14.398252487182617
    5. 'Tim' → logprob: -14.523252487182617
    6. 'time' → logprob: -14.773252487182617
    7. '-' → logprob: -14.898252487182617
    8. 'T' → logprob: -15.273252487182617
    9. 'Times' → logprob: -15.273252487182617
    10. '_time' → logprob: -15.523252487182617

Token 717: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -1.0280383548888494e-06
    2. 'Tim' → logprob: -14.500000953674316
    3. 'time' → logprob: -15.500000953674316
    4. '-' → logprob: -16.000001907348633
    5. 'Ti' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.250001907348633
    7. 'T' → logprob: -17.250001907348633
    8. '_time' → logprob: -17.625001907348633
    9. '	Time' → logprob: -19.125001907348633
    10. 'Times' → logprob: -19.125001907348633

Token 718: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1602245420217514
    2. '-' → logprob: -1.9102245569229126
    3. ' ' → logprob: -15.535224914550781
    4. '	' → logprob: -16.03522491455078
    5. ' ' → logprob: -17.41022491455078
    6. '()-' → logprob: -17.66022491455078
    7. '−' → logprob: -18.28522491455078
    8. '<|end|>' → logprob: -18.41022491455078
    9. ' -=' → logprob: -18.53522491455078
    10. ' −' → logprob: -19.03522491455078

Token 719: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.0001802444458
    4. '  ' → logprob: -17.125179290771484
    5. '	' → logprob: -18.125179290771484
    6. '       ' → logprob: -18.875179290771484
    7. '=' → logprob: -18.937679290771484
    8. '2' → logprob: -19.250179290771484
    9. '0' → logprob: -19.312679290771484
    10. '    ' → logprob: -19.750179290771484

Token 720: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.250021934509277
    4. '  ' → logprob: -18.37502098083496
    5. '	' → logprob: -19.00002098083496
    6. '       ' → logprob: -19.50002098083496
    7. '
' → logprob: -19.50002098083496
    8. '```' → logprob: -20.06252098083496
    9. '0' → logprob: -20.31252098083496
    10. '     ' → logprob: -20.62502098083496

Token 721: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005872295005246997
    2. ' if' → logprob: -8.625587463378906
    3. '   ' → logprob: -8.750587463378906
    4. '	' → logprob: -9.250587463378906
    5. '<|end|>' → logprob: -9.750587463378906
    6. 'if' → logprob: -9.875587463378906
    7. '	if' → logprob: -11.750587463378906
    8. '
' → logprob: -11.875587463378906
    9. '	       ' → logprob: -12.250587463378906
    10. '	   ' → logprob: -12.375587463378906

Token 722: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.208918035030365
    2. 'if' → logprob: -1.7089180946350098
    3. ' if' → logprob: -5.08391809463501
    4. '   ' → logprob: -6.70891809463501
    5. '	if' → logprob: -10.208917617797852
    6. '	' → logprob: -11.958917617797852
    7. '	   ' → logprob: -12.333917617797852
    8. ' ' → logprob: -12.583917617797852
    9. '<|end|>' → logprob: -13.333917617797852
    10. '           ' → logprob: -13.458917617797852

Token 723: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00010568885772954673
    2. '       ' → logprob: -9.375105857849121
    3. ' if' → logprob: -11.750105857849121
    4. 'out' → logprob: -11.875105857849121
    5. '   ' → logprob: -12.875105857849121
    6. '	if' → logprob: -12.875105857849121
    7. '	' → logprob: -15.500105857849121
    8. '```' → logprob: -15.750105857849121
    9. 'print' (adapté à ' print') → logprob: -15.875105857849121
    10. 'return' → logprob: -16.000104904174805

Token 724: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003349178470671177
    2. '(' → logprob: -5.753349304199219
    3. '(-' → logprob: -9.753349304199219
    4. '()' → logprob: -9.753349304199219
    5. 'self' → logprob: -10.128349304199219
    6. '('' → logprob: -11.878349304199219
    7. '(int' → logprob: -13.003349304199219
    8. '((' → logprob: -13.128349304199219
    9. '0' → logprob: -13.753349304199219
    10. '("' → logprob: -14.128349304199219

Token 725: '.target' (ID: 11090)
  Prédit: '.location'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.013072937726974487
    2. '.next' → logprob: -4.888072967529297
    3. '.target' → logprob: -5.263072967529297
    4. 'location' → logprob: -8.388072967529297
    5. '.' → logprob: -10.388072967529297
    6. 'next' → logprob: -12.388072967529297
    7. ').' → logprob: -13.888072967529297
    8. ' .' → logprob: -13.888072967529297
    9. 'target' → logprob: -13.888072967529297
    10. '.position' → logprob: -14.013072967529297

Token 726: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015574338613077998
    2. ' if' → logprob: -8.875155448913574
    3. ')
' → logprob: -11.250155448913574
    4. ',' → logprob: -14.000155448913574
    5. ' )' → logprob: -14.000155448913574
    6. ',end' → logprob: -15.375155448913574
    7. '   ' → logprob: -15.500155448913574
    8. 'if' → logprob: -15.625155448913574
    9. '<|end|>' → logprob: -15.750155448913574
    10. ')#' → logprob: -16.37515640258789

Token 727: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 728: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 729: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011048289015889168
    2. ' self' → logprob: -4.511048316955566
    3. '(self' → logprob: -15.011048316955566
    4. '   ' → logprob: -16.26104736328125
    5. '	self' → logprob: -18.01104736328125
    6. ' ' → logprob: -18.51104736328125
    7. '  ' → logprob: -18.88604736328125
    8. '    ' → logprob: -20.01104736328125
    9. '       ' → logprob: -20.76104736328125
    10. '
' → logprob: -21.63604736328125

Token 730: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -5.848420551046729e-05
    2. 'next' → logprob: -9.7500581741333
    3. '[next' → logprob: -16.875059127807617
    4. 'Next' → logprob: -17.125059127807617
    5. '.target' → logprob: -18.000059127807617
    6. '_next' → logprob: -18.125059127807617
    7. ' next' → logprob: -18.875059127807617
    8. '	next' → logprob: -19.250059127807617
    9. '(next' → logprob: -20.125059127807617
    10. '.location' → logprob: -20.875059127807617

Token 731: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: 0.0
    2. 'Seg' → logprob: -18.875
    3. '_segment' → logprob: -19.5
    4. ' Segment' → logprob: -19.75
    5. 'Segments' → logprob: -20.5
    6. 'segment' → logprob: -21.125
    7. '_SEG' → logprob: -21.375
    8. '[' → logprob: -21.375
    9. '```' → logprob: -22.25
    10. 'egment' → logprob: -22.375

Token 732: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -4.320199877838604e-07
    2. 'left' → logprob: -15.0
    3. ' Left' → logprob: -16.875
    4. 'Time' → logprob: -17.625
    5. 'Right' → logprob: -18.0
    6. '_left' → logprob: -18.875
    7. '.Left' → logprob: -19.625
    8. '_Left' → logprob: -20.5
    9. '左' → logprob: -20.625
    10. ' left' → logprob: -21.0

Token 733: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -9.088346359931165e-07
    2. 'ime' → logprob: -14.250000953674316
    3. 'Times' → logprob: -15.625000953674316
    4. '_time' → logprob: -17.125
    5. 'time' → logprob: -18.375
    6. 'Left' → logprob: -18.875
    7. 'Tiempo' → logprob: -19.875
    8. 'Tim' → logprob: -20.125
    9. ' Time' → logprob: -20.25
    10. '	Time' → logprob: -20.375

Token 734: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12596216797828674
    2. ' ==' → logprob: -2.375962257385254
    3. '<=' → logprob: -3.750962257385254
    4. ' <=' → logprob: -6.250962257385254
    5. '==
' → logprob: -13.625962257385254
    6. '=' → logprob: -14.375962257385254
    7. ' ' → logprob: -14.500962257385254
    8. '===' → logprob: -15.750962257385254
    9. '	' → logprob: -16.000961303710938
    10. '>' → logprob: -16.250961303710938

Token 735: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.75010871887207
    4. '  ' → logprob: -19.25010871887207
    5. '=' → logprob: -19.81260871887207
    6. '    ' → logprob: -20.00010871887207
    7. '	' → logprob: -20.00010871887207
    8. '
' → logprob: -20.18760871887207
    9. '۰' → logprob: -20.31260871887207
    10. '00' → logprob: -20.56260871887207

Token 736: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.000024795532227
    4. '  ' → logprob: -18.687524795532227
    5. '00' → logprob: -19.125024795532227
    6. '۰' → logprob: -19.250024795532227
    7. '    ' → logprob: -19.437524795532227
    8. '1' → logprob: -19.437524795532227
    9. '```' → logprob: -19.625024795532227
    10. '=' → logprob: -19.812524795532227

Token 737: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.019436363130807877
    2. ':' → logprob: -4.019436359405518
    3. ' and' → logprob: -6.894436359405518
    4. '           ' → logprob: -8.644436836242676
    5. '       ' → logprob: -9.769436836242676
    6. 'and' → logprob: -11.519436836242676
    7. '):
' → logprob: -11.644436836242676
    8. ':
' → logprob: -12.019436836242676
    9. '   ' → logprob: -12.269436836242676
    10. ' or' → logprob: -12.769436836242676

Token 738: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00446774298325181
    2. 'self' → logprob: -6.004467964172363
    3. '   ' → logprob: -6.879467964172363
    4. '       ' → logprob: -7.129467964172363
    5. ' self' → logprob: -9.254467964172363
    6. ':
' → logprob: -10.754467964172363
    7. '	       ' → logprob: -11.504467964172363
    8. '	self' → logprob: -11.754467964172363
    9. '```' → logprob: -12.129467964172363
    10. '               ' → logprob: -12.254467964172363

Token 739: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006112866685725749
    2. '       ' → logprob: -8.250611305236816
    3. ' self' → logprob: -8.625611305236816
    4. '           ' → logprob: -9.125611305236816
    5. '   ' → logprob: -9.750611305236816
    6. '	self' → logprob: -12.875611305236816
    7. '               ' → logprob: -14.625611305236816
    8. ' ' → logprob: -15.375611305236816
    9. '  ' → logprob: -16.2506103515625
    10. 'if' → logprob: -17.7506103515625

Token 740: '.location' (ID: 15725)
  Prédit: '.location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.00014656837447546422
    2. 'location' → logprob: -9.125146865844727
    3. '.' → logprob: -10.250146865844727
    4. '	location' → logprob: -13.625146865844727
    5. ' .' → logprob: -15.000146865844727
    6. ' location' → logprob: -15.875146865844727
    7. '.target' → logprob: -16.250146865844727
    8. '.move' → logprob: -16.375146865844727
    9. '.position' → logprob: -17.000146865844727
    10. '       ' → logprob: -17.125146865844727

Token 741: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022422909736633
    2. '=' → logprob: -1.910224199295044
    3. ' +=' → logprob: -17.66022491455078
    4. '＝' → logprob: -17.78522491455078
    5. '	' → logprob: -18.03522491455078
    6. ' ' → logprob: -18.28522491455078
    7. '.=' → logprob: -18.53522491455078
    8. '+=' → logprob: -18.91022491455078
    9. ' ==' → logprob: -19.28522491455078
    10. ',' → logprob: -19.53522491455078

Token 742: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0052342405542731285
    2. ' self' → logprob: -5.255234241485596
    3. '           ' → logprob: -14.755233764648438
    4. '	self' → logprob: -17.130233764648438
    5. '   ' → logprob: -17.505233764648438
    6. '(self' → logprob: -18.255233764648438
    7. '       ' → logprob: -19.005233764648438
    8. '    ' → logprob: -19.755233764648438
    9. '[self' → logprob: -19.880233764648438
    10. '               ' → logprob: -20.130233764648438

Token 743: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.0011703446507453918
    2. 'target' → logprob: -6.7511701583862305
    3. ' target' → logprob: -16.501171112060547
    4. '	target' → logprob: -18.251171112060547
    5. '_target' → logprob: -18.626171112060547
    6. '.' → logprob: -18.751171112060547
    7. '.next' → logprob: -19.626171112060547
    8. 'Target' → logprob: -19.751171112060547
    9. '.Target' → logprob: -20.751171112060547
    10. '[target' → logprob: -20.751171112060547

Token 744: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 745: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2386887073516846
    2. 'd' → logprob: -1.6136887073516846
    3. '<|end|>' → logprob: -1.7386887073516846
    4. 'while' → logprob: -2.1136887073516846
    5. 'out' → logprob: -2.2386887073516846
    6. '#' → logprob: -2.9886887073516846
    7. 'driver' → logprob: -3.7386887073516846
    8. 'if' → logprob: -4.4886884689331055
    9. 'for' → logprob: -5.3636884689331055
    10. '
' → logprob: -5.4886884689331055

Token 746: ' def' (ID: 1056)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.2431530952453613
    2. 'while' → logprob: -1.2431530952453613
    3. '#' → logprob: -2.3681530952453613
    4. 'out' → logprob: -2.4931530952453613
    5. 'def' (adapté à ' def') → logprob: -2.6181530952453613
    6. 'if' → logprob: -2.8681530952453613
    7. 'driver' → logprob: -2.9931530952453613
    8. 'd' → logprob: -2.9931530952453613
    9. '<|end|>' → logprob: -5.243153095245361
    10. '#g' → logprob: -5.868153095245361

Token 747: ' on' (ID: 402)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.46155816316604614
    2. 'order' → logprob: -2.2115581035614014
    3. 'receive' → logprob: -3.2115581035614014
    4. 'update' → logprob: -3.4615581035614014
    5. 'run' → logprob: -3.8365581035614014
    6. 'get' → logprob: -4.3365583419799805
    7. 'new' → logprob: -4.5865583419799805
    8. 'arr' → logprob: -4.7115583419799805
    9. 'append' → logprob: -4.8365583419799805
    10. 'insert' → logprob: -4.9615583419799805

Token 748: 'Route' (ID: 7656)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.9161558151245117
    2. 'Order' → logprob: -1.6661558151245117
    3. '_new' → logprob: -2.6661558151245117
    4. 'order' → logprob: -2.6661558151245117
    5. 'New' → logprob: -2.7911558151245117
    6. 'new' → logprob: -3.6661558151245117
    7. '_command' → logprob: -3.7911558151245117
    8. '_update' → logprob: -4.416155815124512
    9. '_receive' → logprob: -4.416155815124512
    10. 'Command' → logprob: -4.541155815124512

Token 749: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011631740257143974
    2. 'Change' → logprob: -5.886631965637207
    3. '(' → logprob: -6.011631965637207
    4. 'self' → logprob: -6.511631965637207
    5. 'Update' → logprob: -6.511631965637207
    6. 'Start' → logprob: -6.761631965637207
    7. 'Request' → logprob: -7.136631965637207
    8. 'Add' → logprob: -8.261631965637207
    9. 'Enter' → logprob: -8.636631965637207
    10. 'Started' → logprob: -9.261631965637207

Token 750: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041618578135967255
    2. 'self' → logprob: -3.291618585586548
    3. '):
' → logprob: -6.541618347167969
    4. '):' → logprob: -7.041618347167969
    5. ',self' → logprob: -7.666618347167969
    6. '   ' → logprob: -8.541618347167969
    7. ' ,' → logprob: -8.541618347167969
    8. '(self' → logprob: -9.166618347167969
    9. '       ' → logprob: -9.666618347167969
    10. ',i' → logprob: -10.166618347167969

Token 751: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032404929399490356
    2. '   ' → logprob: -4.157404899597168
    3. '	self' → logprob: -5.282404899597168
    4. 'self' → logprob: -5.407404899597168
    5. '(self' → logprob: -5.657404899597168
    6. '	return' → logprob: -6.657404899597168
    7. 'return' → logprob: -7.282404899597168
    8. ' self' → logprob: -8.032404899597168
    9. '(' → logprob: -8.282404899597168
    10. '	' → logprob: -8.907404899597168

Token 752: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5797954797744751
    2. '       ' → logprob: -0.9547954797744751
    3. 'if' → logprob: -3.5797953605651855
    4. ' return' → logprob: -4.5797953605651855
    5. '   ' → logprob: -4.7047953605651855
    6. 'def' → logprob: -5.7047953605651855
    7. ' if' → logprob: -5.7047953605651855
    8. '	return' → logprob: -7.4547953605651855
    9. 'self' → logprob: -7.7047953605651855
    10. 'print' → logprob: -9.954795837402344

Token 753: ' self' (ID: 1051)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.013419972732663155
    2. 'self' → logprob: -5.013420104980469
    3. ' len' → logprob: -5.013420104980469
    4. ' self' → logprob: -10.513420104980469
    5. 'True' → logprob: -12.388420104980469
    6. '(len' → logprob: -13.013420104980469
    7. ' True' → logprob: -15.513420104980469
    8. '	len' → logprob: -16.13842010498047
    9. 'not' → logprob: -17.38842010498047
    10. 'bool' → logprob: -17.38842010498047

Token 754: '.next' (ID: 6689)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 755: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: 0.0
    2. 'Seg' → logprob: -17.0
    3. '_segment' → logprob: -18.875
    4. 'segment' → logprob: -18.875
    5. 'Segments' → logprob: -20.125
    6. 'egment' → logprob: -20.5
    7. '_SEG' → logprob: -21.125
    8. ' Segment' → logprob: -21.25
    9. 'Segue' → logprob: -21.375
    10. 'S' → logprob: -21.375

Token 756: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -1.1472419600977446e-06
    2. 'left' → logprob: -14.125000953674316
    3. 'Le' → logprob: -15.625000953674316
    4. ' Left' → logprob: -16.500001907348633
    5. '
' → logprob: -18.000001907348633
    6. 'eft' → logprob: -18.000001907348633
    7. 'Time' → logprob: -18.125001907348633
    8. 'L' → logprob: -18.125001907348633
    9. '_left' → logprob: -18.125001907348633
    10. '[' → logprob: -18.375001907348633

Token 757: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -2.2200749754119897e-06
    2. 'ime' → logprob: -13.500001907348633
    3. 'Times' → logprob: -15.250001907348633
    4. 'time' → logprob: -15.375001907348633
    5. 'Ti' → logprob: -16.250001907348633
    6. '_time' → logprob: -16.375001907348633
    7. 'T' → logprob: -16.625001907348633
    8. 'Left' → logprob: -17.125001907348633
    9. 'Tim' → logprob: -17.625001907348633
    10. ' Time' → logprob: -18.375001907348633

Token 758: ' !=' (ID: 1666)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23399832844734192
    2. '<|end|>' → logprob: -1.6089982986450195
    3. '\n' → logprob: -5.8589982986450195
    4. '

' → logprob: -6.1089982986450195
    5. '<|end|>' → logprob: -7.1089982986450195
    6. '[' → logprob: -7.3589982986450195
    7. 'def' → logprob: -7.6089982986450195
    8. '#' → logprob: -7.8589982986450195
    9. '()' → logprob: -8.10899829864502
    10. '```' → logprob: -8.23399829864502

Token 759: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023095356300473213
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.12523078918457
    4. '  ' → logprob: -17.87523078918457
    5. '=' → logprob: -18.25023078918457
    6. '	' → logprob: -18.50023078918457
    7. '       ' → logprob: -18.75023078918457
    8. ' ' → logprob: -19.31273078918457
    9. '     ' → logprob: -19.50023078918457
    10. '00' → logprob: -19.56273078918457

Token 760: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.2500057220459
    4. '00' → logprob: -20.2500057220459
    5. '  ' → logprob: -21.8750057220459
    6. '```' → logprob: -22.1250057220459
    7. '	' → logprob: -22.2500057220459
    8. '-' → logprob: -22.2500057220459
    9. '۰' → logprob: -22.5000057220459
    10. '=' → logprob: -22.5000057220459

Token 761: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 762: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 763: ' shop' (ID: 9100)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'controller' → logprob: -1.2473266124725342
    2. 'main' → logprob: -2.122326612472534
    3. 'driver' → logprob: -2.497326612472534
    4. 'traffic' → logprob: -2.497326612472534
    5. 'manager' → logprob: -2.497326612472534
    6. 'game' → logprob: -2.997326612472534
    7. 'simulation' → logprob: -3.122326612472534
    8. 'car' → logprob: -4.122326850891113
    9. 'scheduler' → logprob: -4.122326850891113
    10. 'truck' → logprob: -4.247326850891113

Token 764: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000305310997646302
    2. ':
' → logprob: -8.25030517578125
    3. '():' → logprob: -11.00030517578125
    4. '{' → logprob: -11.62530517578125
    5. '(object' → logprob: -11.75030517578125
    6. '>:' → logprob: -13.00030517578125
    7. '):' → logprob: -13.12530517578125
    8. 's' → logprob: -13.87530517578125
    9. ':

' → logprob: -14.12530517578125
    10. '<|end|>' → logprob: -14.12530517578125

Token 765: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036687880754470825
    2. '<|end|>' → logprob: -3.5366878509521484
    3. ':' → logprob: -5.411687850952148
    4. 'def' → logprob: -6.661687850952148
    5. ':
' → logprob: -8.286687850952148
    6. 'class' → logprob: -8.536687850952148
    7. '	def' → logprob: -8.911687850952148
    8. '<|end|>' → logprob: -9.286687850952148
    9. ' def' → logprob: -9.411687850952148
    10. '  ' → logprob: -9.411687850952148

Token 766: ' order' (ID: 2569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19870638847351074
    2. ' def' → logprob: -2.4487063884735107
    3. 'def' → logprob: -3.1987063884735107
    4. ' plan' → logprob: -4.19870662689209
    5. ' shop' → logprob: -4.44870662689209
    6. 'plan' → logprob: -4.94870662689209
    7. ' location' → logprob: -5.57370662689209
    8. 'location' → logprob: -6.07370662689209
    9. 'shop' → logprob: -6.44870662689209
    10. ' order' → logprob: -6.57370662689209

Token 767: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2972184121608734
    2. '=' → logprob: -1.4222184419631958
    3. ' =' → logprob: -4.172218322753906
    4. '=[]' → logprob: -8.297218322753906
    5. '=set' → logprob: -9.422218322753906
    6. 'set' → logprob: -9.797218322753906
    7. 'ed' → logprob: -10.047218322753906
    8. 'List' → logprob: -10.797218322753906
    9. 'list' → logprob: -11.422218322753906
    10. 'S' → logprob: -11.797218322753906

Token 768: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.07405214756727219
    2. '[]' → logprob: -2.699052095413208
    3. '{}' → logprob: -5.699052333831787
    4. '[]
' → logprob: -7.949052333831787
    5. ' set' → logprob: -8.699051856994629
    6. '0' → logprob: -9.324051856994629
    7. ' []' → logprob: -10.199051856994629
    8. 'list' → logprob: -10.324051856994629
    9. '   ' → logprob: -10.824051856994629
    10. '{' → logprob: -10.949051856994629

Token 769: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6149668097496033
    2. '<|end|>' → logprob: -1.239966869354248
    3. '()' → logprob: -1.864966869354248
    4. '()
' → logprob: -4.864966869354248
    5. '
' → logprob: -5.614966869354248
    6. '<|end|>' → logprob: -6.489966869354248
    7. 'def' → logprob: -6.739966869354248
    8. '(' → logprob: -8.11496639251709
    9. '    
' → logprob: -8.36496639251709
    10. '	def' → logprob: -9.61496639251709

Token 770: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7264114618301392
    2. 'def' → logprob: -0.7264114618301392
    3. '<|end|>' → logprob: -3.6014113426208496
    4. 'class' → logprob: -6.47641134262085
    5. '
' → logprob: -7.10141134262085
    6. ' def' → logprob: -7.22641134262085
    7. '<|end|>' → logprob: -7.85141134262085
    8. 'location' → logprob: -8.351411819458008
    9. 'current' → logprob: -8.476411819458008
    10. '	def' → logprob: -8.476411819458008

Token 771: ' timer' (ID: 16905)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'driver' → logprob: -1.1143276691436768
    2. 'customer' → logprob: -1.4893276691436768
    3. 'main' → logprob: -2.6143276691436768
    4. ' customer' → logprob: -2.9893276691436768
    5. ' driver' → logprob: -2.9893276691436768
    6. 'user' → logprob: -3.1143276691436768
    7. 'shop' → logprob: -3.2393276691436768
    8. 'person' → logprob: -3.9893276691436768
    9. ' main' → logprob: -4.239327430725098
    10. 'manager' → logprob: -4.489327430725098

Token 772: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018157173180952668
    2. ':
' → logprob: -6.3768157958984375
    3. '(object' → logprob: -10.376815795898438
    4. '(' → logprob: -10.501815795898438
    5. ':def' → logprob: -10.501815795898438
    6. '():' → logprob: -11.001815795898438
    7. 'def' → logprob: -12.626815795898438
    8. ':

' → logprob: -13.501815795898438
    9. '：' → logprob: -14.126815795898438
    10. ' :' → logprob: -14.251815795898438

Token 773: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0261723343282938
    2. ' def' → logprob: -4.026172161102295
    3. ' current' → logprob: -5.901172161102295
    4. ' time' → logprob: -6.026172161102295
    5. ' import' → logprob: -6.776172161102295
    6. 'import' → logprob: -7.401172161102295
    7. 'def' → logprob: -8.026172637939453
    8. ' t' → logprob: -8.151172637939453
    9. ' counter' → logprob: -9.151172637939453
    10. ' ticks' → logprob: -9.776172637939453

Token 774: ' orders' (ID: 12528)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8938531279563904
    2. 'def' → logprob: -1.1438531875610352
    3. '   ' → logprob: -2.018853187561035
    4. 'time' → logprob: -2.768853187561035
    5. ' time' → logprob: -3.518853187561035
    6. 'import' → logprob: -4.768853187561035
    7. ' t' → logprob: -4.768853187561035
    8. 't' → logprob: -4.893853187561035
    9. ' current' → logprob: -5.143853187561035
    10. 'current' → logprob: -5.268853187561035

Token 775: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1620510369539261
    2. '=' → logprob: -1.9120510816574097
    3. '=[]' → logprob: -7.537051200866699
    4. '   ' → logprob: -7.912051200866699
    5. ' ' → logprob: -8.5370512008667
    6. '  ' → logprob: -8.9120512008667
    7. '_time' → logprob: -9.5370512008667
    8. 'time' → logprob: -9.6620512008667
    9. '=set' → logprob: -9.6620512008667
    10. '	' → logprob: -9.7870512008667

Token 776: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1577659398317337
    2. 'set' → logprob: -2.5327658653259277
    3. '{}' → logprob: -2.7827658653259277
    4. '0' → logprob: -5.532765865325928
    5. '[]
' → logprob: -7.907765865325928
    6. ' []' → logprob: -9.282766342163086
    7. 'dict' → logprob: -9.407766342163086
    8. '[]}' → logprob: -9.782766342163086
    9. '   ' → logprob: -10.657766342163086
    10. 'list' → logprob: -11.282766342163086

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00892275758087635
    2. ' def' → logprob: -5.258922576904297
    3. 'def' → logprob: -6.008922576904297
    4. ' current' → logprob: -7.633922576904297
    5. 'current' → logprob: -8.508922576904297
    6. ' time' → logprob: -9.133922576904297
    7. 'import' → logprob: -9.633922576904297
    8. ' next' → logprob: -9.633922576904297
    9. '
' → logprob: -10.008922576904297
    10. 'time' → logprob: -10.258922576904297

Token 778: ' times' (ID: 4238)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7515238523483276
    2. 'time' → logprob: -1.5015238523483276
    3. 'current' → logprob: -2.751523971557617
    4. 'cur' → logprob: -2.751523971557617
    5. 'now' → logprob: -3.876523971557617
    6. 'times' (adapté à ' times') → logprob: -3.876523971557617
    7. 'index' → logprob: -4.001523971557617
    8. '   ' → logprob: -4.251523971557617
    9. 'idx' → logprob: -4.751523971557617
    10. 'order' → logprob: -4.876523971557617

Token 779: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3137001395225525
    2. '=' → logprob: -1.3137001991271973
    3. '=[]' → logprob: -8.063699722290039
    4. '   ' → logprob: -9.438699722290039
    5. '[]' → logprob: -11.438699722290039
    6. ':' → logprob: -11.438699722290039
    7. ' ' → logprob: -12.188699722290039
    8. '  ' → logprob: -12.438699722290039
    9. ',' → logprob: -13.188699722290039
    10. '[' → logprob: -13.313699722290039

Token 780: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005293765105307102
    2. '{}' → logprob: -6.005293846130371
    3. '[]
' → logprob: -6.630293846130371
    4. ' []' → logprob: -6.755293846130371
    5. '0' → logprob: -8.505293846130371
    6. '[' → logprob: -9.880293846130371
    7. '[]

' → logprob: -10.630293846130371
    8. '()' → logprob: -11.130293846130371
    9. ' ' → logprob: -11.755293846130371
    10. '[]}' → logprob: -11.880293846130371

Token 781: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013836899306625128
    2. 'def' → logprob: -6.8763837814331055
    3. ' def' → logprob: -8.626383781433105
    4. '
' → logprob: -9.126383781433105
    5. '<|end|>' → logprob: -10.751383781433105
    6. '<|end|>' → logprob: -11.251383781433105
    7. '    
' → logprob: -12.001383781433105
    8. 'current' → logprob: -12.501383781433105
    9. 'import' → logprob: -13.126383781433105
    10. '  ' → logprob: -13.126383781433105

Token 782: ' order' (ID: 2569)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09871236979961395
    2. '   ' → logprob: -2.97371244430542
    3. 'current' → logprob: -4.34871244430542
    4. 'time' → logprob: -4.59871244430542
    5. 'cur' → logprob: -4.84871244430542
    6. ' def' → logprob: -5.97371244430542
    7. 'now' → logprob: -6.34871244430542
    8. 'index' → logprob: -6.59871244430542
    9. 't' → logprob: -7.09871244430542
    10. 'idx' → logprob: -7.34871244430542

Token 783: 'Index' (ID: 2368)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9224833846092224
    2. 'Index' → logprob: -2.172483444213867
    3. 'Idx' → logprob: -2.172483444213867
    4. ' =' → logprob: -3.172483444213867
    5. 'Cnt' → logprob: -3.422483444213867
    6. 'Count' → logprob: -3.422483444213867
    7. 'Time' → logprob: -3.547483444213867
    8. 'Num' → logprob: -3.547483444213867
    9. '_idx' → logprob: -3.672483444213867
    10. 'Times' → logprob: -3.922483444213867

Token 784: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688236474990845
    2. '=' → logprob: -1.1368823051452637
    3. ' ' → logprob: -12.511882781982422
    4. ':' → logprob: -12.761882781982422
    5. 's' → logprob: -13.511882781982422
    6. '   ' → logprob: -13.886882781982422
    7. ',' → logprob: -14.511882781982422
    8. '_' → logprob: -14.636882781982422
    9. '  ' → logprob: -14.886882781982422
    10. '[' → logprob: -15.136882781982422

Token 785: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001477963523939252
    2. ' ' → logprob: -6.87647819519043
    3. '-' → logprob: -7.75147819519043
    4. ' -' → logprob: -11.50147819519043
    5. '   ' → logprob: -13.25147819519043
    6. '{}' → logprob: -13.62647819519043
    7. '  ' → logprob: -14.12647819519043
    8. '=' → logprob: -15.00147819519043
    9. '1' → logprob: -15.68897819519043
    10. '[' → logprob: -16.31397819519043

Token 786: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005355786066502333
    2. '-' → logprob: -5.2553558349609375
    3. ' ' → logprob: -9.130355834960938
    4. '{}' → logprob: -12.005355834960938
    5. ' -' → logprob: -12.505355834960938
    6. '1' → logprob: -13.255355834960938
    7. '[' → logprob: -14.880355834960938
    8. '[]' → logprob: -15.255355834960938
    9. '{' → logprob: -15.630355834960938
    10. '   ' → logprob: -15.755355834960938

Token 787: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0310223288834095
    2. '<|end|>' → logprob: -4.156022548675537
    3. '
' → logprob: -4.531022548675537
    4. '<|end|>' → logprob: -5.781022548675537
    5. 'def' → logprob: -7.156022548675537
    6. '    
' → logprob: -9.281022071838379
    7. ' def' → logprob: -9.781022071838379
    8. '	def' → logprob: -10.781022071838379
    9. ',' → logprob: -11.281022071838379
    10. 'class' → logprob: -11.781022071838379

Token 788: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019413690315559506
    2. 'def' → logprob: -6.376941204071045
    3. ' def' → logprob: -9.251941680908203
    4. '
' → logprob: -9.876941680908203
    5. '<|end|>' → logprob: -10.126941680908203
    6. '    
' → logprob: -11.001941680908203
    7. '<|end|>' → logprob: -11.501941680908203
    8. '	def' → logprob: -11.501941680908203
    9. 'current' → logprob: -12.251941680908203
    10. 'next' → logprob: -13.501941680908203

Token 789: ' curr' (ID: 10495)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17666758596897125
    2. '   ' → logprob: -3.0516676902770996
    3. 'time' → logprob: -3.3016676902770996
    4. 'current' → logprob: -3.5516676902770996
    5. 'cur' → logprob: -4.1766676902771
    6. 'now' → logprob: -5.1766676902771
    7. 'timer' → logprob: -5.9266676902771
    8. 'order' → logprob: -6.1766676902771
    9. ' def' → logprob: -6.5516676902771
    10. 'T' → logprob: -6.5516676902771

Token 790: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -0.15136024355888367
    2. 'time' → logprob: -2.276360273361206
    3. '_time' → logprob: -4.026360034942627
    4. 'ent' → logprob: -4.151360034942627
    5. 'Index' → logprob: -6.651360034942627
    6. 'Timer' → logprob: -7.151360034942627
    7. 't' → logprob: -7.651360034942627
    8. '=' → logprob: -7.776360034942627
    9. 'Tick' → logprob: -8.401360511779785
    10. 'ents' → logprob: -8.526360511779785

Token 791: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484937667847
    2. ' =' → logprob: -0.6931484937667847
    3. ' ' → logprob: -14.193148612976074
    4. ':' → logprob: -15.193148612976074
    5. '   ' → logprob: -15.568148612976074
    6. ',' → logprob: -15.818148612976074
    7. '  ' → logprob: -17.943147659301758
    8. '	' → logprob: -18.068147659301758
    9. '0' → logprob: -18.068147659301758
    10. '＝' → logprob: -18.318147659301758

Token 792: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012714354321360588
    2. ' ' → logprob: -4.387714385986328
    3. '-' → logprob: -8.762714385986328
    4. '1' → logprob: -10.512714385986328
    5. ' -' → logprob: -11.012714385986328
    6. '   ' → logprob: -13.262714385986328
    7. '  ' → logprob: -14.075214385986328
    8. '	' → logprob: -15.075214385986328
    9. ' ' → logprob: -15.262714385986328
    10. '000' → logprob: -15.637714385986328

Token 793: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018828235333785415
    2. '-' → logprob: -6.376883029937744
    3. ' ' → logprob: -9.126882553100586
    4. '1' → logprob: -9.626882553100586
    5. ' -' → logprob: -13.251882553100586
    6. '000' → logprob: -14.689382553100586
    7. 'int' → logprob: -14.814382553100586
    8. '100' → logprob: -15.001882553100586
    9. 'None' → logprob: -15.314382553100586
    10. '(' → logprob: -15.314382553100586

Token 794: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.105681411921978
    2. '<|end|>' → logprob: -2.7306814193725586
    3. '
' → logprob: -3.4806814193725586
    4. '<|end|>' → logprob: -5.605681419372559
    5. '    
' → logprob: -7.980681419372559
    6. 'def' → logprob: -8.480681419372559
    7. ' def' → logprob: -10.605681419372559
    8. '	def' → logprob: -10.730681419372559
    9. '  ' → logprob: -11.605681419372559
    10. '```' → logprob: -11.855681419372559

Token 795: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11763862520456314
    2. '
' → logprob: -2.74263858795166
    3. '<|end|>' → logprob: -3.24263858795166
    4. ' def' → logprob: -5.86763858795166
    5. '	def' → logprob: -6.36763858795166
    6. 'def' → logprob: -6.74263858795166
    7. '<|end|>' → logprob: -6.99263858795166
    8. '    
' → logprob: -7.49263858795166
    9. '```' → logprob: -9.49263858795166
    10. '	
' → logprob: -9.49263858795166

Token 796: ' Tmax' (ID: 157185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03177887946367264
    2. '   ' → logprob: -3.5317788124084473
    3. ' def' → logprob: -6.406778812408447
    4. '	def' → logprob: -8.531779289245605
    5. '
' → logprob: -8.781779289245605
    6. '    
' → logprob: -11.781779289245605
    7. 'data' → logprob: -12.406779289245605
    8. '
' → logprob: -13.031779289245605
    9. 'import' → logprob: -13.281779289245605
    10. ' ' → logprob: -13.531779289245605

Token 797: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31339937448501587
    2. ' =' → logprob: -1.313399314880371
    3. '   ' → logprob: -8.938399314880371
    4. ':' → logprob: -13.063399314880371
    5. ',' → logprob: -13.188399314880371
    6. ' ' → logprob: -13.813399314880371
    7. '  ' → logprob: -15.063399314880371
    8. '=int' → logprob: -15.188399314880371
    9. '.' → logprob: -15.563399314880371
    10. '	' → logprob: -16.313400268554688

Token 798: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2564223110675812
    2. ' ' → logprob: -2.006422281265259
    3. '0' → logprob: -3.006422281265259
    4. 'int' → logprob: -4.256422519683838
    5. '10' → logprob: -4.381422519683838
    6. '24' → logprob: -5.131422519683838
    7. ' int' → logprob: -5.756422519683838
    8. '999' → logprob: -7.131422519683838
    9. '300' → logprob: -7.131422519683838
    10. '144' → logprob: -7.131422519683838

Token 799: '0' (ID: 15)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.16518087685108185
    2. '0' → logprob: -3.4151809215545654
    3. '10' → logprob: -3.4151809215545654
    4. '300' → logprob: -4.540180683135986
    5. '24' → logprob: -4.665180683135986
    6. '200' → logprob: -4.665180683135986
    7. '144' → logprob: -5.040180683135986
    8. 'int' → logprob: -5.165180683135986
    9. '999' → logprob: -5.165180683135986
    10. '20' → logprob: -5.290180683135986

Token 800: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7589401602745056
    2. '   ' → logprob: -1.1339402198791504
    3. '<|end|>' → logprob: -1.6339402198791504
    4. '<|end|>' → logprob: -4.50894021987915
    5. 'def' → logprob: -5.88394021987915
    6. '    
' → logprob: -7.50894021987915
    7. ' def' → logprob: -8.383939743041992
    8. '
' → logprob: -9.133939743041992
    9. '	def' → logprob: -9.133939743041992
    10. '

' → logprob: -10.633939743041992

Token 801: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12046407163143158
    2. 'def' → logprob: -2.8704640865325928
    3. ' def' → logprob: -3.4954640865325928
    4. '
' → logprob: -4.245463848114014
    5. '	def' → logprob: -4.995463848114014
    6. '<|end|>' → logprob: -5.870463848114014
    7. '    
' → logprob: -6.495463848114014
    8. '<|end|>' → logprob: -7.370463848114014
    9. '	
' → logprob: -8.620464324951172
    10. '        
' → logprob: -10.620464324951172

Token 802: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00018852073117159307
    2. '   ' → logprob: -8.875188827514648
    3. ' def' → logprob: -10.000188827514648
    4. '
' → logprob: -13.625188827514648
    5. 'class' → logprob: -14.375188827514648
    6. '	def' → logprob: -14.750188827514648
    7. 'data' → logprob: -15.500188827514648
    8. '@' → logprob: -16.00018882751465
    9. 'import' → logprob: -16.12518882751465
    10. '#' → logprob: -16.50018882751465

Token 803: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012292654253542423
    2. 'init' → logprob: -5.137292861938477
    3. ' __' → logprob: -5.262292861938477
    4. '_init' → logprob: -7.137292861938477
    5. 'def' → logprob: -9.387292861938477
    6. 'add' → logprob: -9.387292861938477
    7. 'start' → logprob: -10.387292861938477
    8. 'update' → logprob: -10.512292861938477
    9. 'process' → logprob: -10.512292861938477
    10. 'next' → logprob: -10.762292861938477

Token 804: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.0
    3. 'int' → logprob: -19.25
    4. ' init' → logprob: -20.0
    5. 'ini' → logprob: -20.125
    6. 'inite' → logprob: -21.375
    7. '(init' → logprob: -21.625
    8. 'next' → logprob: -22.0
    9. 'len' → logprob: -22.25
    10. 'in' → logprob: -22.25

Token 805: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4747982919216156
    2. '__(' → logprob: -0.974798321723938
    3. '(' → logprob: -7.474798202514648
    4. ' (' → logprob: -10.224798202514648
    5. '_(' → logprob: -10.349798202514648
    6. '   ' → logprob: -10.599798202514648
    7. '(this' → logprob: -10.849798202514648
    8. '()' → logprob: -11.724798202514648
    9. 'self' → logprob: -12.474798202514648
    10. '
' → logprob: -12.599798202514648

Token 806: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.226628895296017e-06
    2. ' self' → logprob: -12.125007629394531
    3. '(self' → logprob: -13.875007629394531
    4. 's' → logprob: -15.250007629394531
    5. ')' → logprob: -15.375007629394531
    6. '   ' → logprob: -15.750007629394531
    7. '
' → logprob: -16.00000762939453
    8. ',' → logprob: -17.00000762939453
    9. ',self' → logprob: -17.50000762939453
    10. ')(' → logprob: -17.75000762939453

Token 807: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03688587248325348
    2. '(self' → logprob: -4.161885738372803
    3. ')(' → logprob: -4.161885738372803
    4. 'self' → logprob: -5.536885738372803
    5. ',self' → logprob: -8.036886215209961
    6. '__(' → logprob: -8.411886215209961
    7. ' (' → logprob: -8.911886215209961
    8. '   ' → logprob: -9.161886215209961
    9. ',(' → logprob: -9.661886215209961
    10. ' self' → logprob: -9.911886215209961

Token 808: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.48876097798347473
    2. '       ' → logprob: -0.9887609481811523
    3. 'def' → logprob: -4.863760948181152
    4. '   ' → logprob: -5.238760948181152
    5. ' self' → logprob: -7.113760948181152
    6. '(self' → logprob: -7.613760948181152
    7. '
' → logprob: -9.488760948181152
    8. ' def' → logprob: -9.488760948181152
    9. 's' → logprob: -10.738760948181152
    10. ' ' → logprob: -10.988760948181152

Token 809: ' Tmax' (ID: 157185)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.33982419967651367
    2. 'self' → logprob: -2.4648241996765137
    3. 'raw' → logprob: -2.7148241996765137
    4. '       ' → logprob: -2.8398241996765137
    5. 'n' → logprob: -4.339824199676514
    6. 'params' → logprob: -4.464824199676514
    7. 'pass' → logprob: -4.464824199676514
    8. 'line' → logprob: -4.839824199676514
    9. '   ' → logprob: -4.964824199676514
    10. 't' → logprob: -5.339824199676514

Token 810: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134039044380188
    2. ' =' → logprob: -1.313403844833374
    3. ',' → logprob: -9.438404083251953
    4. '=int' → logprob: -9.938404083251953
    5. '   ' → logprob: -11.688404083251953
    6. ' ' → logprob: -13.063404083251953
    7. ' ,' → logprob: -14.313404083251953
    8. '=input' → logprob: -14.438404083251953
    9. 'raw' → logprob: -14.938404083251953
    10. '	' → logprob: -15.188404083251953

Token 811: ' raw' (ID: 11428)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6224363446235657
    2. 'int' → logprob: -1.872436285018921
    3. '0' → logprob: -2.122436285018921
    4. ' ' → logprob: -2.622436285018921
    5. ' int' → logprob: -3.247436285018921
    6. '24' → logprob: -3.497436285018921
    7. '10' → logprob: -3.872436285018921
    8. '20' → logprob: -5.1224365234375
    9. '144' → logprob: -5.6224365234375
    10. '200' → logprob: -6.2474365234375

Token 812: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.0590548703912646e-05
    2. 'input' → logprob: -10.625030517578125
    3. 'Input' → logprob: -12.125030517578125
    4. '_data' → logprob: -15.125030517578125
    5. '_INPUT' → logprob: -16.750030517578125
    6. 'INPUT' → logprob: -16.750030517578125
    7. '<input' → logprob: -17.000030517578125
    8. '_' → logprob: -17.125030517578125
    9. '-input' → logprob: -17.250030517578125
    10. '_in' → logprob: -17.500030517578125

Token 813: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06340351700782776
    2. '()
' → logprob: -2.813403606414795
    3. '().' → logprob: -6.563403606414795
    4. '()
' → logprob: -11.563403129577637
    5. ' ()' → logprob: -12.188403129577637
    6. '()

' → logprob: -12.313403129577637
    7. '())' → logprob: -13.688403129577637
    8. '()<' → logprob: -13.938403129577637
    9. '()</' → logprob: -14.188403129577637
    10. '(' → logprob: -14.813403129577637

Token 814: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020546913146972656
    2. '<|end|>' → logprob: -4.020546913146973
    3. ' =' → logprob: -6.770546913146973
    4. '()' → logprob: -7.145546913146973
    5. '=' → logprob: -8.895546913146973
    6. '
' → logprob: -9.145546913146973
    7. '<|end|>' → logprob: -10.395546913146973
    8. '        ' → logprob: -10.395546913146973
    9. '	' → logprob: -10.895546913146973
    10. '()
' → logprob: -11.020546913146973

Token 815: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011684512719511986
    2. '       ' → logprob: -4.636684417724609
    3. ' self' → logprob: -6.261684417724609
    4. 'T' → logprob: -11.63668441772461
    5. '	self' → logprob: -12.13668441772461
    6. '   ' → logprob: -13.63668441772461
    7. '	' → logprob: -13.76168441772461
    8. 't' → logprob: -15.38668441772461
    9. '=self' → logprob: -15.38668441772461
    10. 's' → logprob: -15.63668441772461

Token 816: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -7.896309739408025e-07
    2. 'T' → logprob: -14.500000953674316
    3. '.' → logprob: -15.750000953674316
    4. '	T' → logprob: -18.5
    5. '.TIM' → logprob: -19.125
    6. '.t' → logprob: -19.375
    7. '.MAX' → logprob: -19.5
    8. ' Tmax' → logprob: -19.75
    9. '
' → logprob: -20.125
    10. ' .' → logprob: -20.375

Token 817: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.531315314830863e-06
    2. 'Max' → logprob: -12.625003814697266
    3. '_max' → logprob: -16.250003814697266
    4. ' =' → logprob: -17.000003814697266
    5. ' max' → logprob: -19.000003814697266
    6. '=' → logprob: -19.250003814697266
    7. 'm' → logprob: -19.375003814697266
    8. 'MAX' → logprob: -19.500003814697266
    9. 'ax' → logprob: -20.125003814697266
    10. 'min' → logprob: -20.625003814697266

Token 818: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133353590965271
    2. ' =' → logprob: -1.3133354187011719
    3. '=int' → logprob: -9.563335418701172
    4. '   ' → logprob: -12.938335418701172
    5. 'int' → logprob: -14.813335418701172
    6. ' ' → logprob: -15.188335418701172
    7. '    ' → logprob: -16.188335418701172
    8. '	' → logprob: -16.563335418701172
    9. '  ' → logprob: -17.188335418701172
    10. '+=' → logprob: -17.313335418701172

Token 819: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.842555426876061e-06
    2. ' int' → logprob: -12.250004768371582
    3. 'float' → logprob: -20.7500057220459
    4. '	int' → logprob: -20.8750057220459
    5. '   ' → logprob: -21.6250057220459
    6. '  ' → logprob: -22.2500057220459
    7. '(int' → logprob: -22.7500057220459
    8. '100' → logprob: -23.3750057220459
    9. '[int' → logprob: -23.3750057220459
    10. ' ' → logprob: -23.5000057220459

Token 820: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. 'T' → logprob: -16.125001907348633
    4. '(t' → logprob: -17.500001907348633
    5. '((' → logprob: -18.500001907348633
    6. '(raw' → logprob: -18.625001907348633
    7. '(str' → logprob: -19.750001907348633
    8. ' (' → logprob: -20.125001907348633
    9. '(int' → logprob: -20.625001907348633
    10. '('' → logprob: -20.750001907348633

Token 821: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00032962486147880554
    2. 'ax' → logprob: -8.500329971313477
    3. 'Max' → logprob: -9.000329971313477
    4. '_max' → logprob: -14.000329971313477
    5. 'x' → logprob: -14.250329971313477
    6. 'MAX' → logprob: -14.625329971313477
    7. '(max' → logprob: -14.750329971313477
    8. 'amax' → logprob: -15.250329971313477
    9. ' max' → logprob: -16.750329971313477
    10. 'T' → logprob: -17.500329971313477

Token 822: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3557529857498594e-05
    2. ')
' → logprob: -11.12502384185791
    3. '.strip' → logprob: -12.12502384185791
    4. '[' → logprob: -13.25002384185791
    5. ' )' → logprob: -14.12502384185791
    6. '<|end|>' → logprob: -15.62502384185791
    7. '.split' → logprob: -15.75002384185791
    8. ')

' → logprob: -16.250022888183594
    9. '   ' → logprob: -16.375022888183594
    10. '       ' → logprob: -16.625022888183594

Token 823: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 824: ' for' (ID: 395)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.23905518651008606
    2. 'for' (adapté à ' for') → logprob: -2.6140551567077637
    3. '   ' → logprob: -2.8640551567077637
    4. 'while' → logprob: -3.9890551567077637
    5. 'def' → logprob: -4.364055156707764
    6. '       ' → logprob: -4.364055156707764
    7. 'line' → logprob: -4.489055156707764
    8. 'raw' → logprob: -5.364055156707764
    9. 'time' → logprob: -5.489055156707764
    10. 'T' → logprob: -5.739055156707764

Token 825: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48929500579833984
    2. 'i' → logprob: -1.1142950057983398
    3. '_i' → logprob: -2.98929500579834
    4. '_t' → logprob: -5.86429500579834
    5. ' i' → logprob: -6.23929500579834
    6. ' _' → logprob: -6.23929500579834
    7. 't' → logprob: -7.48929500579834
    8. '_time' → logprob: -8.61429500579834
    9. '_T' → logprob: -8.73929500579834
    10. 'x' → logprob: -8.98929500579834

Token 826: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026515092700719833
    2. 'in' → logprob: -3.651515007019043
    3. 'n' → logprob: -9.776515007019043
    4. ' ' → logprob: -9.776515007019043
    5. '_' → logprob: -10.526515007019043
    6. 'range' → logprob: -10.651515007019043
    7. '  ' → logprob: -11.026515007019043
    8. '	in' → logprob: -11.526515007019043
    9. '   ' → logprob: -11.776515007019043
    10. 't' → logprob: -13.151515007019043

Token 827: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006407116306945682
    2. ' range' → logprob: -7.375640869140625
    3. ' xrange' → logprob: -11.750640869140625
    4. 'x' → logprob: -12.125640869140625
    5. '	range' → logprob: -15.000640869140625
    6. '   ' → logprob: -15.750640869140625
    7. ' ' → logprob: -15.875640869140625
    8. '  ' → logprob: -16.250640869140625
    9. '(range' → logprob: -16.500640869140625
    10. 'rang' → logprob: -17.250640869140625

Token 828: '(' (ID: 7)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006728279870003462
    2. '(' → logprob: -5.006728172302246
    3. '(int' → logprob: -11.881728172302246
    4. 'self' → logprob: -12.756728172302246
    5. '(s' → logprob: -13.506728172302246
    6. '0' → logprob: -14.631728172302246
    7. ' (' → logprob: -15.381728172302246
    8. '(sel' → logprob: -15.381728172302246
    9. '((' → logprob: -15.631728172302246
    10. '(T' → logprob: -15.756728172302246

Token 829: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008828703314065933
    2. '0' → logprob: -4.758828639984131
    3. ' self' → logprob: -8.883829116821289
    4. '(self' → logprob: -10.508829116821289
    5. '   ' → logprob: -10.633829116821289
    6. 'int' → logprob: -11.508829116821289
    7. '(' → logprob: -12.258829116821289
    8. ' ' → logprob: -12.383829116821289
    9. '1' → logprob: -13.883829116821289
    10. '	self' → logprob: -14.008829116821289

Token 830: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.44864434003829956
    2. ' self' → logprob: -1.5736443996429443
    3. ',' → logprob: -2.0736443996429443
    4. '(self' → logprob: -4.573644161224365
    5. '0' → logprob: -4.698644161224365
    6. ',self' → logprob: -5.823644161224365
    7. '(' → logprob: -6.073644161224365
    8. '   ' → logprob: -6.448644161224365
    9. ' ,' → logprob: -7.573644161224365
    10. ' (' → logprob: -8.073644638061523

Token 831: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009481342509388924
    2. ' self' → logprob: -4.884481430053711
    3. 'int' → logprob: -6.509481430053711
    4. '   ' → logprob: -8.759481430053711
    5. ' ' → logprob: -10.134481430053711
    6. '10' → logprob: -10.259481430053711
    7. ' int' → logprob: -10.509481430053711
    8. '100' → logprob: -10.884481430053711
    9. '3' → logprob: -11.009481430053711
    10. '1' → logprob: -11.009481430053711

Token 832: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -0.00024263552040793002
    2. 'T' → logprob: -8.500242233276367
    3. ' Tmax' → logprob: -10.625242233276367
    4. '.' → logprob: -11.875242233276367
    5. ' .' → logprob: -12.875242233276367
    6. 'max' → logprob: -13.375242233276367
    7. '   ' → logprob: -14.000242233276367
    8. '	T' → logprob: -14.000242233276367
    9. '.MAX' → logprob: -14.625242233276367
    10. '.M' → logprob: -15.000242233276367

Token 833: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.6286106983898208e-05
    2. 'ax' → logprob: -11.500016212463379
    3. 'self' → logprob: -12.625016212463379
    4. 'Max' → logprob: -14.375016212463379
    5. ')' → logprob: -14.500016212463379
    6. '_max' → logprob: -14.625016212463379
    7. 'MAX' → logprob: -15.125016212463379
    8. '   ' → logprob: -15.250016212463379
    9. '.max' → logprob: -15.750016212463379
    10. ' max' → logprob: -16.000017166137695

Token 834: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010738518089056015
    2. '):' → logprob: -4.635738372802734
    3. '):
' → logprob: -7.010738372802734
    4. '       ' → logprob: -10.760738372802734
    5. '():
' → logprob: -10.760738372802734
    6. '()):
' → logprob: -11.510738372802734
    7. ' ):
' → logprob: -11.635738372802734
    8. '+' → logprob: -12.010738372802734
    9. ')' → logprob: -12.385738372802734
    10. '   ' → logprob: -12.885738372802734

Token 835: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013978731818497181
    2. '       ' → logprob: -4.388978958129883
    3. '	       ' → logprob: -6.888978958129883
    4. '	   ' → logprob: -9.013978958129883
    5. 'data' → logprob: -9.263978958129883
    6. '    	   ' → logprob: -10.013978958129883
    7. 't' → logprob: -10.138978958129883
    8. '   ' → logprob: -10.388978958129883
    9. ' data' → logprob: -10.513978958129883
    10. 's' → logprob: -10.638978958129883

Token 836: ' n' (ID: 297)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.2683035731315613
    2. 'line' → logprob: -2.768303632736206
    3. 't' → logprob: -2.893303632736206
    4. '           ' → logprob: -3.893303632736206
    5. 'order' → logprob: -4.143303394317627
    6. 'raw' → logprob: -4.143303394317627
    7. 'time' → logprob: -4.143303394317627
    8. 'a' → logprob: -4.893303394317627
    9. 'd' → logprob: -5.018303394317627
    10. 's' → logprob: -5.018303394317627

Token 837: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07146379351615906
    2. '=' → logprob: -3.5714638233184814
    3. 'um' → logprob: -3.8214638233184814
    4. 'umber' → logprob: -5.696463584899902
    5. 'o' → logprob: -6.071463584899902
    6. 'raw' → logprob: -6.321463584899902
    7. 'a' → logprob: -6.446463584899902
    8. '=int' → logprob: -6.821463584899902
    9. 'data' → logprob: -7.071463584899902
    10. 'ext' → logprob: -7.321463584899902

Token 838: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.14913013577461243
    2. 'int' → logprob: -2.27413010597229
    3. ' raw' → logprob: -3.39913010597229
    4. ' int' → logprob: -6.274130344390869
    5. '	raw' → logprob: -8.899129867553711
    6. '  ' → logprob: -9.899129867553711
    7. '   ' → logprob: -9.899129867553711
    8. ' ' → logprob: -9.899129867553711
    9. 'input' → logprob: -10.524129867553711
    10. 'len' → logprob: -10.774129867553711

Token 839: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00017016702622640878
    2. '()' → logprob: -9.75016975402832
    3. 'input' → logprob: -10.25016975402832
    4. '_raw' → logprob: -10.75016975402832
    5. 'int' → logprob: -11.12516975402832
    6. '()
' → logprob: -11.87516975402832
    7. 'Input' → logprob: -11.87516975402832
    8. 'put' → logprob: -12.37516975402832
    9. '=_' → logprob: -12.50016975402832
    10. '_in' → logprob: -13.12516975402832

Token 840: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4672659635543823
    2. '()
' → logprob: -1.2172659635543823
    3. '()' → logprob: -3.342266082763672
    4. '().' → logprob: -4.092266082763672
    5. '       ' → logprob: -4.842266082763672
    6. ' =' → logprob: -5.967266082763672
    7. '=int' → logprob: -6.092266082763672
    8. 'int' → logprob: -6.217266082763672
    9. '=' → logprob: -6.342266082763672
    10. '	       ' → logprob: -6.717266082763672

Token 841: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07518690824508667
    2. '<|end|>' → logprob: -2.8251869678497314
    3. '       ' → logprob: -4.825186729431152
    4. '		' → logprob: -6.450186729431152
    5. '	       ' → logprob: -6.575186729431152
    6. '<|end|>' → logprob: -6.700186729431152
    7. '   ' → logprob: -8.575186729431152
    8. '	' → logprob: -9.450186729431152
    9. '	   ' → logprob: -9.450186729431152
    10. '            
' → logprob: -9.700186729431152

Token 842: ' n' (ID: 297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7405663728713989
    2. 'self' → logprob: -0.7405663728713989
    3. 'n' (adapté à ' n') → logprob: -3.7405662536621094
    4. 'num' → logprob: -4.240566253662109
    5. 'count' → logprob: -5.990566253662109
    6. 'raw' → logprob: -6.240566253662109
    7. '       ' → logprob: -6.240566253662109
    8. ' self' → logprob: -7.490566253662109
    9. 't' → logprob: -8.24056625366211
    10. 'cnt' → logprob: -8.49056625366211

Token 843: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5324061512947083
    2. '=' → logprob: -0.9074061512947083
    3. '=int' → logprob: -5.782406330108643
    4. 'w' → logprob: -6.157406330108643
    5. 'n' → logprob: -6.782406330108643
    6. '=n' → logprob: -7.157406330108643
    7. 'raw' → logprob: -7.282406330108643
    8. 's' → logprob: -7.532406330108643
    9. 'split' → logprob: -8.282405853271484
    10. '_raw' → logprob: -9.407405853271484

Token 844: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02125706523656845
    2. 'n' → logprob: -3.896257162094116
    3. ' int' → logprob: -7.271256923675537
    4. ' n' → logprob: -11.271257400512695
    5. 'raw' → logprob: -12.896257400512695
    6. 'str' → logprob: -13.771257400512695
    7. '[int' → logprob: -13.896257400512695
    8. 'list' → logprob: -14.021257400512695
    9. '(int' → logprob: -15.021257400512695
    10. 'float' → logprob: -15.396257400512695

Token 845: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.000000953674316
    3. 'n' → logprob: -14.625000953674316
    4. '(
' → logprob: -20.250001907348633
    5. ' (' → logprob: -20.375001907348633
    6. '(raw' → logprob: -20.625001907348633
    7. '	n' → logprob: -20.625001907348633
    8. '((' → logprob: -21.500001907348633
    9. '
' → logprob: -21.875001907348633
    10. ' n' → logprob: -22.375001907348633

Token 846: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04867105185985565
    2. ')' → logprob: -3.048671007156372
    3. ')
' → logprob: -9.548670768737793
    4. '.strip' → logprob: -12.423670768737793
    5. '           ' → logprob: -12.798670768737793
    6. ' )
' → logprob: -13.173670768737793
    7. '[' → logprob: -13.548670768737793
    8. '.split' → logprob: -14.673670768737793
    9. '())
' → logprob: -14.923670768737793
    10. ')

' → logprob: -14.923670768737793

Token 847: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006097480072639883
    2. '       ' → logprob: -8.000609397888184
    3. '<|end|>' → logprob: -8.500609397888184
    4. '   ' → logprob: -11.125609397888184
    5. '	       ' → logprob: -11.125609397888184
    6. '<|end|>' → logprob: -11.375609397888184
    7. '		' → logprob: -11.500609397888184
    8. 'self' → logprob: -12.500609397888184
    9. '	   ' → logprob: -12.625609397888184
    10. ' ' → logprob: -12.750609397888184

Token 848: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.37901636958122253
    2. '           ' → logprob: -1.379016399383545
    3. 'if' (adapté à ' if') → logprob: -3.379016399383545
    4. 'for' → logprob: -3.629016399383545
    5. '       ' → logprob: -6.504016399383545
    6. 'while' → logprob: -7.504016399383545
    7. '   ' → logprob: -8.504015922546387
    8. 'data' → logprob: -8.629015922546387
    9. 's' → logprob: -9.254015922546387
    10. 'temp' → logprob: -9.754015922546387

Token 849: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009783003479242325
    2. ' n' → logprob: -4.634782791137695
    3. '(n' → logprob: -11.634782791137695
    4. '	n' → logprob: -12.134782791137695
    5. 'len' → logprob: -12.884782791137695
    6. '   ' → logprob: -13.009782791137695
    7. ' ' → logprob: -13.384782791137695
    8. '  ' → logprob: -13.384782791137695
    9. 'not' → logprob: -13.884782791137695
    10. '           ' → logprob: -14.134782791137695

Token 850: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.095177061855793
    2. '==' → logprob: -2.970177173614502
    3. ' >' → logprob: -3.595177173614502
    4. ' ==' → logprob: -5.095177173614502
    5. '!=' → logprob: -5.345177173614502
    6. ' !=' → logprob: -6.970177173614502
    7. '>=' → logprob: -9.845176696777344
    8. '<=' → logprob: -10.345176696777344
    9. ' ' → logprob: -10.845176696777344
    10. '   ' → logprob: -11.220176696777344

Token 851: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15717250108718872
    2. '-' → logprob: -2.407172441482544
    3. '1' → logprob: -3.157172441482544
    4. ' ' → logprob: -4.782172679901123
    5. '3' → logprob: -6.532172679901123
    6. '2' → logprob: -6.657172679901123
    7. ' -' → logprob: -7.657172679901123
    8. '100' → logprob: -8.032172203063965
    9. '4' → logprob: -8.532172203063965
    10. '   ' → logprob: -8.657172203063965

Token 852: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08478373289108276
    2. '-' → logprob: -2.8347837924957275
    3. '1' → logprob: -4.084783554077148
    4. ' ' → logprob: -5.584783554077148
    5. '3' → logprob: -7.334783554077148
    6. '2' → logprob: -7.459783554077148
    7. ' -' → logprob: -8.584783554077148
    8. '100' → logprob: -8.584783554077148
    9. '4' → logprob: -9.209783554077148
    10. '5' → logprob: -9.959783554077148

Token 853: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1955404430627823
    2. '               ' → logprob: -2.070540428161621
    3. ':' → logprob: -3.695540428161621
    4. '           ' → logprob: -3.820540428161621
    5. ' continue' → logprob: -5.570540428161621
    6. 'continue' → logprob: -7.445540428161621
    7. '       ' → logprob: -9.445540428161621
    8. ' continues' → logprob: -9.945540428161621
    9. '):
' → logprob: -10.070540428161621
    10. '	continue' → logprob: -10.445540428161621

Token 854: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001256780233234167
    2. 'continue' → logprob: -7.751256942749023
    3. '           ' → logprob: -8.126256942749023
    4. 'self' → logprob: -8.751256942749023
    5. 'break' → logprob: -9.251256942749023
    6. ' continue' → logprob: -9.251256942749023
    7. '	           ' → logprob: -9.626256942749023
    8. ' break' → logprob: -10.001256942749023
    9. '   ' → logprob: -11.251256942749023
    10. ' self' → logprob: -11.376256942749023

Token 855: ' continue' (ID: 4901)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04436875507235527
    2. 'continue' (adapté à ' continue') → logprob: -3.6693687438964844
    3. '               ' → logprob: -4.669368743896484
    4. '                   ' → logprob: -5.044368743896484
    5. ' self' → logprob: -7.294368743896484
    6. 'break' → logprob: -7.669368743896484
    7. '   ' → logprob: -8.169368743896484
    8. ' continue' → logprob: -8.669368743896484
    9. '           ' → logprob: -9.294368743896484
    10. 'n' → logprob: -9.544368743896484

Token 856: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.833878508885391e-05
    2. '<|end|>' → logprob: -10.750038146972656
    3. 'else' → logprob: -12.750038146972656
    4. '       ' → logprob: -12.750038146972656
    5. 'n' → logprob: -13.125038146972656
    6. '		' → logprob: -13.625038146972656
    7. 'for' → logprob: -13.875038146972656
    8. '               ' → logprob: -13.875038146972656
    9. '	       ' → logprob: -13.875038146972656
    10. '<|end|>' → logprob: -13.875038146972656

Token 857: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.782141569303349e-05
    2. 'for' → logprob: -10.37509822845459
    3. '       ' → logprob: -11.12509822845459
    4. '	       ' → logprob: -11.25009822845459
    5. 'else' → logprob: -11.62509822845459
    6. 'n' → logprob: -12.12509822845459
    7. '		' → logprob: -12.25009822845459
    8. '               ' → logprob: -12.75009822845459
    9. 'self' → logprob: -12.75009822845459
    10. '   ' → logprob: -12.87509822845459

Token 858: ' else' (ID: 1203)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.7318432927131653
    2. '           ' → logprob: -1.4818432331085205
    3. 'line' → logprob: -2.8568432331085205
    4. 'orders' → logprob: -2.9818432331085205
    5. 'self' → logprob: -3.2318432331085205
    6. 'for' → logprob: -3.3568432331085205
    7. 't' → logprob: -4.1068434715271
    8. 'arr' → logprob: -4.2318434715271
    9. 'items' → logprob: -4.4818434715271
    10. 'lst' → logprob: -4.8568434715271

Token 859: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9847227931022644
    2. ':' → logprob: -1.1097228527069092
    3. ':
' → logprob: -1.3597228527069092
    4. '	           ' → logprob: -4.23472261428833
    5. ' for' → logprob: -4.48472261428833
    6. 'for' → logprob: -4.73472261428833
    7. '	       ' → logprob: -6.35972261428833
    8. '           ' → logprob: -6.85972261428833
    9. '		       ' → logprob: -7.85972261428833
    10. ',' → logprob: -8.234723091125488

Token 860: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2441851943731308
    2. 'for' → logprob: -1.994185209274292
    3. ' for' → logprob: -3.494185209274292
    4. 'data' → logprob: -4.619184970855713
    5. 'order' → logprob: -4.744184970855713
    6. 'tokens' → logprob: -4.869184970855713
    7. '           ' → logprob: -4.994184970855713
    8. 'self' → logprob: -5.119184970855713
    9. '	           ' → logprob: -5.369184970855713
    10. 'orders' → logprob: -6.619184970855713

Token 861: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6311676502227783
    2. 'data' (adapté à ' data') → logprob: -1.7561676502227783
    3. 'self' → logprob: -1.8811676502227783
    4. 'order' → logprob: -2.3811676502227783
    5. 'line' → logprob: -2.5061676502227783
    6. 'arr' → logprob: -2.7561676502227783
    7. 'orders' → logprob: -2.8811676502227783
    8. 'raw' → logprob: -3.3811676502227783
    9. 'lst' → logprob: -4.006167411804199
    10. 'items' → logprob: -4.006167411804199

Token 862: 'Raw' (ID: 21586)
  Prédit: 'Raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Raw' → logprob: -0.20522069931030273
    2. ' =' → logprob: -2.3302206993103027
    3. '=' → logprob: -2.4552206993103027
    4. '_raw' → logprob: -6.705220699310303
    5. 's' → logprob: -7.580220699310303
    6. 'raw' → logprob: -7.705220699310303
    7. ' Raw' → logprob: -9.955221176147461
    8. '   ' → logprob: -10.080221176147461
    9. 'line' → logprob: -10.580221176147461
    10. '=line' → logprob: -10.830221176147461

Token 863: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519362270832062
    2. ' =' → logprob: -1.5019361972808838
    3. 's' → logprob: -13.251935958862305
    4. '   ' → logprob: -13.501935958862305
    5. ' ' → logprob: -14.001935958862305
    6. '    ' → logprob: -14.626935958862305
    7. 'data' → logprob: -15.126935958862305
    8. '  ' → logprob: -15.126935958862305
    9. '       ' → logprob: -15.126935958862305
    10. 'w' → logprob: -15.376935958862305

Token 864: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.023247575387358665
    2. ' raw' → logprob: -3.773247480392456
    3. '	raw' → logprob: -13.523247718811035
    4. '(raw' → logprob: -14.898247718811035
    5. 'input' → logprob: -15.648247718811035
    6. '[]' → logprob: -16.89824676513672
    7. ' ' → logprob: -17.39824676513672
    8. '[]
' → logprob: -18.02324676513672
    9. '   ' → logprob: -18.02324676513672
    10. '_raw' → logprob: -18.14824676513672

Token 865: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.013652939349412918
    2. 'input' → logprob: -4.388652801513672
    3. 'Input' → logprob: -6.888652801513672
    4. '_raw' → logprob: -10.513652801513672
    5. '=input' → logprob: -10.888652801513672
    6. '()' → logprob: -11.263652801513672
    7. '(input' → logprob: -11.388652801513672
    8. ' input' → logprob: -11.888652801513672
    9. '_data' → logprob: -12.263652801513672
    10. ' =' → logprob: -12.263652801513672

Token 866: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016087394207715988
    2. '()' → logprob: -4.641087532043457
    3. '           ' → logprob: -5.516087532043457
    4. '()
' → logprob: -6.391087532043457
    5. '().' → logprob: -8.641087532043457
    6. '	           ' → logprob: -9.391087532043457
    7. '<|end|>' → logprob: -9.641087532043457
    8. '		       ' → logprob: -10.266087532043457
    9. '<|end|>' → logprob: -10.266087532043457
    10. '                   ' → logprob: -11.016087532043457

Token 867: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006428772117942572
    2. '<|end|>' → logprob: -5.5064287185668945
    3. '			' → logprob: -7.5064287185668945
    4. '	           ' → logprob: -7.6314287185668945
    5. '		       ' → logprob: -8.006428718566895
    6. '                ' → logprob: -8.881428718566895
    7. '	       ' → logprob: -9.006428718566895
    8. '           ' → logprob: -9.131428718566895
    9. '<|end|>' → logprob: -9.381428718566895
    10. 'tokens' → logprob: -9.631428718566895

Token 868: ' data' (ID: 1238)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.1819765716791153
    2. 'data' (adapté à ' data') → logprob: -2.056976556777954
    3. 'order' → logprob: -3.681976556777954
    4. 'orders' → logprob: -5.181976795196533
    5. '               ' → logprob: -5.681976795196533
    6. '           ' → logprob: -6.431976795196533
    7. ' raw' → logprob: -6.931976795196533
    8. 'tokens' → logprob: -7.806976795196533
    9. 'for' → logprob: -8.306976318359375
    10. 'arr' → logprob: -8.431976318359375

Token 869: ' =' (ID: 314)
  Prédit: 'Raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Raw' → logprob: -0.44307246804237366
    2. ' =' → logprob: -1.3180724382400513
    3. '=' → logprob: -3.193072557449341
    4. 's' → logprob: -3.318072557449341
    5. 'raw' → logprob: -5.693072319030762
    6. 'list' → logprob: -5.818072319030762
    7. '           ' → logprob: -5.818072319030762
    8. 'List' → logprob: -6.568072319030762
    9. '       ' → logprob: -7.693072319030762
    10. '               ' → logprob: -7.943072319030762

Token 870: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1314847618341446
    2. ' data' → logprob: -2.5064847469329834
    3. 'list' → logprob: -3.6314847469329834
    4. ' list' → logprob: -5.2564849853515625
    5. 'map' → logprob: -5.3814849853515625
    6. '[data' → logprob: -5.8814849853515625
    7. '[' → logprob: -6.7564849853515625
    8. ' map' → logprob: -7.1314849853515625
    9. ' [' → logprob: -7.8814849853515625
    10. '[list' → logprob: -8.881484985351562

Token 871: 'Raw' (ID: 21586)
  Prédit: 'Raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Raw' → logprob: -0.2552430033683777
    2. ' =' → logprob: -1.6302430629730225
    3. '=' → logprob: -3.7552430629730225
    4. 'data' → logprob: -6.380242824554443
    5. '=data' → logprob: -6.630242824554443
    6. '_raw' → logprob: -7.380242824554443
    7. '               ' → logprob: -8.005243301391602
    8. 'list' → logprob: -8.130243301391602
    9. '=list' → logprob: -8.130243301391602
    10. '[data' → logprob: -8.505243301391602

Token 872: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.008456421084702015
    2. '.' → logprob: -5.508456230163574
    3. '=' → logprob: -6.008456230163574
    4. ' =' → logprob: -6.383456230163574
    5. '.split' → logprob: -9.008456230163574
    6. ' .' → logprob: -9.758456230163574
    7. '               ' → logprob: -10.633456230163574
    8. 'strip' → logprob: -11.758456230163574
    9. '.s' → logprob: -13.133456230163574
    10. '.trim' → logprob: -13.758456230163574

Token 873: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.253090865968261e-06
    2. '()' → logprob: -11.875009536743164
    3. '.split' → logprob: -13.125009536743164
    4. ' ().' → logprob: -16.625009536743164
    5. '.' → logprob: -16.750009536743164
    6. '().'' → logprob: -18.000009536743164
    7. ' .' → logprob: -18.500009536743164
    8. '('').' → logprob: -18.500009536743164
    9. '()).' → logprob: -19.000009536743164
    10. '               ' → logprob: -19.250009536743164

Token 874: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.842555426876061e-06
    2. ' split' → logprob: -13.000004768371582
    3. 'strip' → logprob: -13.125004768371582
    4. 'replace' → logprob: -15.375004768371582
    5. 'spl' → logprob: -16.3750057220459
    6. 'rstrip' → logprob: -16.5000057220459
    7. '.split' → logprob: -16.8750057220459
    8. '(split' → logprob: -17.7500057220459
    9. '```' → logprob: -18.2500057220459
    10. 'decode' → logprob: -18.5000057220459

Token 875: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005542247672565281
    2. '()' → logprob: -8.000554084777832
    3. ''' → logprob: -8.500554084777832
    4. '(' → logprob: -11.125554084777832
    5. '("' → logprob: -14.500554084777832
    6. '(',' → logprob: -17.25055503845215
    7. '['' → logprob: -17.25055503845215
    8. '('\' → logprob: -17.37555503845215
    9. ''s' → logprob: -17.50055503845215
    10. ''''' → logprob: -17.75055503845215

Token 876: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00019746100588236004
    2. ' '' → logprob: -8.750197410583496
    3. ' ' → logprob: -11.125197410583496
    4. '('' → logprob: -11.625197410583496
    5. '')' → logprob: -12.000197410583496
    6. ')' → logprob: -12.250197410583496
    7. '"' → logprob: -13.125197410583496
    8. ' ')' → logprob: -14.000197410583496
    9. ''s' → logprob: -14.875197410583496
    10. ''o' → logprob: -15.500197410583496

Token 877: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012677322374656796
    2. '           ' → logprob: -6.751267910003662
    3. 'for' → logprob: -10.001267433166504
    4. 'self' → logprob: -10.876267433166504
    5. '	       ' → logprob: -11.501267433166504
    6. ' for' → logprob: -12.376267433166504
    7. '              ' → logprob: -12.501267433166504
    8. '	           ' → logprob: -12.501267433166504
    9. '       ' → logprob: -13.001267433166504
    10. '		       ' → logprob: -13.626267433166504

Token 878: ' self' (ID: 1051)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.49326416850090027
    2. 'for' → logprob: -1.6182641983032227
    3. '               ' → logprob: -2.6182641983032227
    4. 'self' (adapté à ' self') → logprob: -2.7432641983032227
    5. 'order' → logprob: -3.6182641983032227
    6. 'nums' → logprob: -4.993264198303223
    7. 'orders' → logprob: -4.993264198303223
    8. 'arr' → logprob: -5.118264198303223
    9. 'times' → logprob: -6.743264198303223
    10. 'temp' → logprob: -6.993264198303223

Token 879: '.times' (ID: 78835)
  Prédit: '.orders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.orders' → logprob: -0.004724057391285896
    2. '.times' → logprob: -5.379724025726318
    3. 'orders' → logprob: -9.879724502563477
    4. '.order' → logprob: -10.629724502563477
    5. 'times' → logprob: -10.754724502563477
    6. '       ' → logprob: -13.254724502563477
    7. '   ' → logprob: -13.629724502563477
    8. '.' → logprob: -13.879724502563477
    9. '.t' → logprob: -14.254724502563477
    10. ' .' → logprob: -14.379724502563477

Token 880: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009695300832390785
    2. '.' → logprob: -4.759695529937744
    3. '.extend' → logprob: -6.884695529937744
    4. '=' → logprob: -10.509695053100586
    5. '+=' → logprob: -11.259695053100586
    6. '.app' → logprob: -11.759695053100586
    7. ' +=' → logprob: -12.634695053100586
    8. ' .' → logprob: -13.259695053100586
    9. '.ap' → logprob: -13.509695053100586
    10. 'append' → logprob: -13.884695053100586

Token 881: '(i' (ID: 3649)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.809658944606781
    2. '(list' → logprob: -1.3096590042114258
    3. '(data' → logprob: -1.4346590042114258
    4. '(n' → logprob: -3.809659004211426
    5. '(int' → logprob: -4.309659004211426
    6. '(tuple' → logprob: -5.434659004211426
    7. 'data' → logprob: -6.184659004211426
    8. '(i' → logprob: -6.309659004211426
    9. 'list' → logprob: -6.559659004211426
    10. '(' → logprob: -7.434659004211426

Token 882: ' +' (ID: 659)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2526862323284149
    2. ')' → logprob: -1.5026862621307373
    3. ' )
' → logprob: -7.752686023712158
    4. ' )' → logprob: -9.627686500549316
    5. ')data' → logprob: -9.877686500549316
    6. ')
' → logprob: -10.127686500549316
    7. 'data' → logprob: -10.377686500549316
    8. '),' → logprob: -10.877686500549316
    9. ',' → logprob: -10.877686500549316
    10. '[data' → logprob: -11.002686500549316

Token 883: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024387305602431297
    2. ' ' → logprob: -3.7743873596191406
    3. 'n' → logprob: -7.649387359619141
    4. ' n' → logprob: -7.649387359619141
    5. '0' → logprob: -9.64938735961914
    6. 'len' → logprob: -10.52438735961914
    7. ' len' → logprob: -11.39938735961914
    8. 'data' → logprob: -11.39938735961914
    9. '100' → logprob: -11.77438735961914
    10. '   ' → logprob: -11.89938735961914

Token 884: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00262321624904871
    2. ' ' → logprob: -6.002623081207275
    3. '0' → logprob: -9.752623558044434
    4. '"' → logprob: -10.377623558044434
    5. 'self' → logprob: -11.127623558044434
    6. ''' → logprob: -11.752623558044434
    7. '[' → logprob: -12.627623558044434
    8. '   ' → logprob: -12.752623558044434
    9. '  ' → logprob: -13.002623558044434
    10. ')' → logprob: -13.002623558044434

Token 885: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03440363332629204
    2. ')' → logprob: -3.4094035625457764
    3. '               ' → logprob: -7.7844038009643555
    4. ')
' → logprob: -8.409403800964355
    5. 'data' → logprob: -10.034403800964355
    6. ' )
' → logprob: -10.409403800964355
    7. ')

' → logprob: -12.034403800964355
    8. '[' → logprob: -12.409403800964355
    9. ')data' → logprob: -12.534403800964355
    10. '[data' → logprob: -12.659403800964355

Token 886: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011617878044489771
    2. '<|end|>' → logprob: -9.500116348266602
    3. '       ' → logprob: -11.250116348266602
    4. '           ' → logprob: -11.375116348266602
    5. '		       ' → logprob: -12.500116348266602
    6. '	       ' → logprob: -12.750116348266602
    7. '<|end|>' → logprob: -13.375116348266602
    8. '			' → logprob: -13.500116348266602
    9. '              ' → logprob: -13.750116348266602
    10. '	           ' → logprob: -14.125116348266602

Token 887: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.025840718299150467
    2. '               ' → logprob: -4.275840759277344
    3. 'arr' → logprob: -6.025840759277344
    4. 'order' → logprob: -6.025840759277344
    5. 'nums' → logprob: -6.775840759277344
    6. 'orders' → logprob: -6.900840759277344
    7. 'temp' → logprob: -7.275840759277344
    8. 'data' → logprob: -7.650840759277344
    9. 'vals' → logprob: -7.775840759277344
    10. 'tmp' → logprob: -7.775840759277344

Token 888: '.orders' (ID: 129984)
  Prédit: '.orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.orders' → logprob: -0.021353701129555702
    2. '.order' → logprob: -3.8963537216186523
    3. 'orders' → logprob: -7.271353721618652
    4. 'order' → logprob: -9.646353721618652
    5. '.' → logprob: -10.521353721618652
    6. '.times' → logprob: -10.896353721618652
    7. ' .' → logprob: -13.271353721618652
    8. ' orders' → logprob: -13.771353721618652
    9. '.data' → logprob: -14.146353721618652
    10. 'times' → logprob: -14.271353721618652

Token 889: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014346491545438766
    2. '.' → logprob: -4.264346599578857
    3. '.extend' → logprob: -9.0143461227417
    4. ' .' → logprob: -9.8893461227417
    5. '=' → logprob: -12.3893461227417
    6. '(data' → logprob: -12.8893461227417
    7. '.ap' → logprob: -13.8893461227417
    8. ',' → logprob: -14.2643461227417
    9. ' =' → logprob: -14.5143461227417
    10. '.app' → logprob: -14.7643461227417

Token 890: '(int' (ID: 2742)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.6501713395118713
    2. '(data' → logprob: -1.4001712799072266
    3. '(list' → logprob: -1.7751712799072266
    4. '(set' → logprob: -3.0251712799072266
    5. 'data' → logprob: -5.650171279907227
    6. '[' → logprob: -5.900171279907227
    7. '(' → logprob: -6.025171279907227
    8. '({' → logprob: -7.025171279907227
    9. 'list' → logprob: -7.025171279907227
    10. '(tuple' → logprob: -7.400171279907227

Token 891: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.00017863049288280308
    2. '(n' → logprob: -9.000178337097168
    3. 'data' → logprob: -10.375178337097168
    4. '(' → logprob: -11.000178337097168
    5. '(raw' → logprob: -13.000178337097168
    6. '(d' → logprob: -14.125178337097168
    7. '((' → logprob: -14.250178337097168
    8. ' (' → logprob: -14.375178337097168
    9. '(max' → logprob: -14.750178337097168
    10. '(i' → logprob: -14.875178337097168

Token 892: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0571327731013298
    2. '(' → logprob: -2.9321327209472656
    3. '()[' → logprob: -7.682132720947266
    4. '
' → logprob: -8.182132720947266
    5. ')' → logprob: -8.432132720947266
    6. '0' → logprob: -8.557132720947266
    7. '[-' → logprob: -8.932132720947266
    8. '(n' → logprob: -9.057132720947266
    9. '(-' → logprob: -9.057132720947266
    10. '(data' → logprob: -9.182132720947266

Token 893: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022691266611218452
    2. '0' → logprob: -3.897691249847412
    3. '(' → logprob: -6.897691249847412
    4. ')' → logprob: -8.27269172668457
    5. '[-' → logprob: -8.39769172668457
    6. '
' → logprob: -9.02269172668457
    7. '[i' → logprob: -9.27269172668457
    8. 'i' → logprob: -10.21019172668457
    9. '(-' → logprob: -10.33519172668457
    10. 'data' → logprob: -10.33519172668457

Token 894: ']))

' (ID: 92947)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.6312606930732727
    2. '])' → logprob: -1.256260633468628
    3. '))' → logprob: -2.506260633468628
    4. '()))' → logprob: -3.006260633468628
    5. '[' → logprob: -4.006260871887207
    6. ')' → logprob: -4.131260871887207
    7. '()' → logprob: -5.381260871887207
    8. '())' → logprob: -5.756260871887207
    9. ')])' → logprob: -5.881260871887207
    10. '(' → logprob: -6.631260871887207

Token 895: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 896: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7258933782577515
    2. '<|end|>' → logprob: -0.8508933782577515
    3. 'def' (adapté à ' def') → logprob: -2.725893497467041
    4. '
' → logprob: -4.350893497467041
    5. '<|end|>' → logprob: -4.975893497467041
    6. ' ' → logprob: -6.975893497467041
    7. ' def' → logprob: -7.100893497467041
    8. '  ' → logprob: -7.850893497467041
    9. ')' → logprob: -8.475893020629883
    10. '       ' → logprob: -8.475893020629883

Token 897: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -1.541463017463684
    2. 'next' → logprob: -2.1664628982543945
    3. 'update' → logprob: -2.4164628982543945
    4. ' run' → logprob: -2.7914628982543945
    5. 'add' → logprob: -3.0414628982543945
    6. ' next' → logprob: -3.0414628982543945
    7. 'has' → logprob: -3.1664628982543945
    8. ' update' → logprob: -3.4164628982543945
    9. 'get' → logprob: -3.5414628982543945
    10. 'process' → logprob: -3.5414628982543945

Token 898: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.811348480870947e-05
    2. '(' → logprob: -10.00004768371582
    3. ' (' → logprob: -13.00004768371582
    4. '   ' → logprob: -15.37504768371582
    5. 'self' → logprob: -16.00004768371582
    6. '       ' → logprob: -16.50004768371582
    7. '(s' → logprob: -17.12504768371582
    8. '(this' → logprob: -17.50004768371582
    9. '(
' → logprob: -19.00004768371582
    10. '(sel' → logprob: -19.00004768371582

Token 899: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00036846695002168417
    2. ')(' → logprob: -9.125368118286133
    3. 'self' → logprob: -9.250368118286133
    4. '):' → logprob: -9.875368118286133
    5. '   ' → logprob: -10.500368118286133
    6. '(' → logprob: -10.750368118286133
    7. ' (' → logprob: -10.875368118286133
    8. '):
' → logprob: -11.125368118286133
    9. '       ' → logprob: -11.625368118286133
    10. ')' → logprob: -11.875368118286133

Token 900: ' shop' (ID: 9100)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.8363876938819885
    2. 'self' → logprob: -1.7113876342773438
    3. '):' → logprob: -2.0863876342773438
    4. 'shop' → logprob: -2.3363876342773438
    5. ' driver' → logprob: -2.9613876342773438
    6. ' shop' → logprob: -3.7113876342773438
    7. ' self' → logprob: -4.211387634277344
    8. 'd' → logprob: -4.211387634277344
    9. 'out' → logprob: -4.461387634277344
    10. ')' → logprob: -4.461387634277344

Token 901: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37973126769065857
    2. '):' → logprob: -1.254731297492981
    3. '):
' → logprob: -3.5047311782836914
    4. '   ' → logprob: -7.879731178283691
    5. ' ):' → logprob: -9.254731178283691
    6. ' ,' → logprob: -9.504731178283691
    7. '):
' → logprob: -10.129731178283691
    8. '  ' → logprob: -10.254731178283691
    9. '):

' → logprob: -10.754731178283691
    10. '       ' → logprob: -10.754731178283691

Token 902: ' driver' (ID: 8931)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.0353463776409626
    2. ' driver' → logprob: -3.410346269607544
    3. 'd' → logprob: -7.660346508026123
    4. 'drive' → logprob: -7.910346508026123
    5. 'drv' → logprob: -8.160346031188965
    6. 'dr' → logprob: -8.410346031188965
    7. 'drivers' → logprob: -8.785346031188965
    8. ')' → logprob: -10.410346031188965
    9. 'timer' → logprob: -10.785346031188965
    10. '	driver' → logprob: -10.910346031188965

Token 903: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030595408752560616
    2. '):
' → logprob: -3.530595302581787
    3. ',' → logprob: -7.280595302581787
    4. '):
' → logprob: -9.530595779418945
    5. '   ' → logprob: -9.780595779418945
    6. '       ' → logprob: -11.530595779418945
    7. ' ):' → logprob: -11.780595779418945
    8. '):

' → logprob: -12.030595779418945
    9. ')' → logprob: -13.905595779418945
    10. ' ' → logprob: -14.280595779418945

Token 904: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005090686026960611
    2. '   ' → logprob: -8.500509262084961
    3. '	' → logprob: -9.875509262084961
    4. ' for' → logprob: -9.875509262084961
    5. 'while' → logprob: -9.875509262084961
    6. ' while' → logprob: -10.250509262084961
    7. '        
' → logprob: -10.500509262084961
    8. 'for' → logprob: -10.875509262084961
    9. 'self' → logprob: -11.625509262084961
    10. 't' → logprob: -11.750509262084961

Token 905: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6005728244781494
    2. 'while' (adapté à ' while') → logprob: -0.8505728244781494
    3. ' while' → logprob: -4.72557258605957
    4. 'if' → logprob: -4.97557258605957
    5. 'for' → logprob: -5.10057258605957
    6. '   ' → logprob: -6.47557258605957
    7. '	' → logprob: -8.35057258605957
    8. ' for' → logprob: -8.35057258605957
    9. ' if' → logprob: -8.47557258605957
    10. '	while' → logprob: -8.72557258605957

Token 906: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029786134138703346
    2. 'True' → logprob: -3.6547861099243164
    3. ' self' → logprob: -5.904786109924316
    4. ' True' → logprob: -7.529786109924316
    5. '(True' → logprob: -9.529786109924316
    6. '(self' → logprob: -10.029786109924316
    7. 'len' → logprob: -10.154786109924316
    8. 'not' → logprob: -10.654786109924316
    9. '   ' → logprob: -11.654786109924316
    10. '	self' → logprob: -11.779786109924316

Token 907: '.curr' (ID: 91383)
  Prédit: '.curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.curr' → logprob: -0.4096158444881439
    2. '.order' → logprob: -1.4096158742904663
    3. '.T' → logprob: -2.4096157550811768
    4. 'curr' → logprob: -6.659615993499756
    5. 'order' → logprob: -7.784615993499756
    6. '.' → logprob: -9.409615516662598
    7. 'T' → logprob: -9.659615516662598
    8. '.t' → logprob: -10.409615516662598
    9. '.timer' → logprob: -10.784615516662598
    10. '.orders' → logprob: -11.034615516662598

Token 908: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -4.320199877838604e-07
    2. 'time' → logprob: -15.625
    3. '<' → logprob: -16.5
    4. '_time' → logprob: -16.875
    5. 'T' → logprob: -18.375
    6. '<T' → logprob: -19.0
    7. 'Tim' → logprob: -19.25
    8. '	Time' → logprob: -19.375
    9. '_Time' → logprob: -19.375
    10. 'Timer' → logprob: -20.0

Token 909: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9609618782997131
    2. ' <' → logprob: -1.4609618186950684
    3. ' <=' → logprob: -1.5859618186950684
    4. '<=' → logprob: -1.7109618186950684
    5. ' ' → logprob: -11.210962295532227
    6. '<len' → logprob: -13.460962295532227
    7. '!=' → logprob: -14.085962295532227
    8. '   ' → logprob: -14.585962295532227
    9. ' !=' → logprob: -14.835962295532227
    10. '<T' → logprob: -14.960962295532227

Token 910: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007764920126646757
    2. ' self' → logprob: -4.88276481628418
    3. 'len' → logprob: -8.88276481628418
    4. '       ' → logprob: -11.88276481628418
    5. ' len' → logprob: -12.38276481628418
    6. '   ' → logprob: -12.63276481628418
    7. ' ' → logprob: -13.63276481628418
    8. '           ' → logprob: -13.88276481628418
    9. '	self' → logprob: -13.88276481628418
    10. '    ' → logprob: -14.00776481628418

Token 911: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -6.754368223482743e-05
    2. 'T' → logprob: -10.000067710876465
    3. ' Tmax' → logprob: -11.500067710876465
    4. '.' → logprob: -11.750067710876465
    5. 'max' → logprob: -12.625067710876465
    6. '.MAX' → logprob: -15.375067710876465
    7. ' .' → logprob: -15.875067710876465
    8. '.max' → logprob: -16.12506675720215
    9. '.
' → logprob: -17.12506675720215
    10. 'self' → logprob: -17.25006675720215

Token 912: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014180317521095276
    2. 'ax' → logprob: -4.2641801834106445
    3. 'self' → logprob: -12.014180183410645
    4. '   ' → logprob: -13.014180183410645
    5. 'Max' → logprob: -13.264180183410645
    6. 'x' → logprob: -13.889180183410645
    7. ' max' → logprob: -14.264180183410645
    8. '       ' → logprob: -14.389180183410645
    9. '_max' → logprob: -14.514180183410645
    10. 'MAX' → logprob: -15.014180183410645

Token 913: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5859752297401428
    2. ':
' → logprob: -0.8359752297401428
    3. ' and' → logprob: -4.960975170135498
    4. ' or' → logprob: -6.335975170135498
    5. '       ' → logprob: -7.335975170135498
    6. '):
' → logprob: -9.210975646972656
    7. 'and' → logprob: -9.210975646972656
    8. ' :
' → logprob: -9.460975646972656
    9. ' :' → logprob: -9.585975646972656
    10. ':
' → logprob: -10.085975646972656

Token 914: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08458404988050461
    2. '           ' → logprob: -3.3345839977264404
    3. ' if' → logprob: -3.7095839977264404
    4. '	       ' → logprob: -5.2095842361450195
    5. 'if' → logprob: -5.3345842361450195
    6. '   ' → logprob: -5.8345842361450195
    7. '	   ' → logprob: -6.2095842361450195
    8. '```' → logprob: -6.8345842361450195
    9. '	' → logprob: -6.9595842361450195
    10. '<|end|>' → logprob: -7.4595842361450195

Token 915: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36120736598968506
    2. '           ' → logprob: -1.361207365989685
    3. 'self' (adapté à ' self') → logprob: -3.8612074851989746
    4. ' if' → logprob: -4.361207485198975
    5. '       ' → logprob: -4.486207485198975
    6. '   ' → logprob: -7.111207485198975
    7. '	       ' → logprob: -8.111207008361816
    8. 'while' → logprob: -8.611207008361816
    9. 'for' → logprob: -8.986207008361816
    10. ' self' → logprob: -9.236207008361816

Token 916: '.curr' (ID: 91383)
  Prédit: '.curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.curr' → logprob: -0.16739900410175323
    2. 'curr' → logprob: -1.9173990488052368
    3. '.times' → logprob: -6.167398929595947
    4. 'if' → logprob: -6.792398929595947
    5. 'order' → logprob: -6.917398929595947
    6. '.order' → logprob: -7.667398929595947
    7. '.' → logprob: -7.792398929595947
    8. '+=' → logprob: -8.667399406433105
    9. 'Time' → logprob: -8.792399406433105
    10. '.orders' → logprob: -8.792399406433105

Token 917: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -4.320199877838604e-07
    2. 'time' → logprob: -15.5
    3. 'ime' → logprob: -15.75
    4. '   ' → logprob: -16.75
    5. 'Times' → logprob: -18.125
    6. '_time' → logprob: -18.5
    7. '	Time' → logprob: -18.5
    8. 'T' → logprob: -20.75
    9. ' Time' → logprob: -20.75
    10. '=' → logprob: -20.75

Token 918: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06197160854935646
    2. ' +=' → logprob: -2.811971664428711
    3. '=' → logprob: -12.561971664428711
    4. '+' → logprob: -15.686971664428711
    5. ']+=' → logprob: -16.06197166442871
    6. '   ' → logprob: -16.18697166442871
    7. '++' → logprob: -16.93697166442871
    8. '  ' → logprob: -17.81197166442871
    9. ' =' → logprob: -17.93697166442871
    10. ' ' → logprob: -17.93697166442871

Token 919: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10022769868373871
    2. ' self' → logprob: -2.3502275943756104
    3. '+' → logprob: -11.725227355957031
    4. '0' → logprob: -12.225227355957031
    5. '(self' → logprob: -12.600227355957031
    6. ' ' → logprob: -13.350227355957031
    7. '1' → logprob: -13.850227355957031
    8. '	self' → logprob: -14.600227355957031
    9. '           ' → logprob: -15.225227355957031
    10. 'int' → logprob: -15.225227355957031

Token 920: '.curr' (ID: 91383)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0015072436071932316
    2. '.curr' → logprob: -6.87650728225708
    3. ' curr' → logprob: -7.75150728225708
    4. '_curr' → logprob: -11.376506805419922
    5. '	curr' → logprob: -11.501506805419922
    6. '[curr' → logprob: -11.626506805419922
    7. '+' → logprob: -11.876506805419922
    8. 'self' → logprob: -12.376506805419922
    9. ' +' → logprob: -14.126506805419922
    10. 'Curr' → logprob: -14.126506805419922

Token 921: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -3.190178904333152e-05
    2. 'ime' → logprob: -10.375031471252441
    3. 'time' → logprob: -14.625031471252441
    4. 'Tim' → logprob: -16.750032424926758
    5. '_time' → logprob: -16.875032424926758
    6. 'Times' → logprob: -17.250032424926758
    7. '+' → logprob: -17.625032424926758
    8. 'T' → logprob: -18.125032424926758
    9. '   ' → logprob: -19.000032424926758
    10. 'imes' → logprob: -19.125032424926758

Token 922: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804183006286621
    2. ' +' → logprob: -3.288041830062866
    3. '()+' → logprob: -15.788042068481445
    4. '1' → logprob: -16.788042068481445
    5. ' ' → logprob: -17.288042068481445
    6. ' plus' → logprob: -17.413042068481445
    7. '＋' → logprob: -17.538042068481445
    8. '+=' → logprob: -18.413042068481445
    9. '+self' → logprob: -18.413042068481445
    10. '+
' → logprob: -18.538042068481445

Token 923: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.376033782958984
    4. '  ' → logprob: -19.001033782958984
    5. '```' → logprob: -19.563533782958984
    6. '
' → logprob: -19.751033782958984
    7. '+' → logprob: -20.126033782958984
    8. '	' → logprob: -20.313533782958984
    9. '    ' → logprob: -20.563533782958984
    10. '0' → logprob: -20.688533782958984

Token 924: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.000003814697266
    4. '```' → logprob: -19.625003814697266
    5. '0' → logprob: -20.437503814697266
    6. '
' → logprob: -20.500003814697266
    7. 'out' → logprob: -20.687503814697266
    8. 'int' → logprob: -20.687503814697266
    9. '[' → logprob: -20.812503814697266
    10. 'a' → logprob: -21.000003814697266

Token 925: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00082309142453596
    2. 'if' → logprob: -7.250823020935059
    3. ' if' → logprob: -10.000823020935059
    4. '       ' → logprob: -10.125823020935059
    5. '   ' → logprob: -11.500823020935059
    6. 'while' → logprob: -12.250823020935059
    7. '		' → logprob: -12.625823020935059
    8. '<|end|>' → logprob: -12.750823020935059
    9. '	       ' → logprob: -13.500823020935059
    10. '
' → logprob: -14.000823020935059

Token 926: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01868642121553421
    2. 'if' → logprob: -4.268686294555664
    3. '       ' → logprob: -5.643686294555664
    4. ' if' → logprob: -7.393686294555664
    5. '   ' → logprob: -8.893686294555664
    6. '```' → logprob: -9.768686294555664
    7. '<|end|>' → logprob: -10.018686294555664
    8. 'while' → logprob: -10.143686294555664
    9. '	       ' → logprob: -10.643686294555664
    10. '	   ' → logprob: -11.018686294555664

Token 927: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008906331844627857
    2. 'while' → logprob: -4.758906364440918
    3. 'for' → logprob: -8.383906364440918
    4. '           ' → logprob: -9.758906364440918
    5. '       ' → logprob: -12.758906364440918
    6. ' if' → logprob: -13.508906364440918
    7. '#' (adapté à ' #') → logprob: -14.883906364440918
    8. 'out' → logprob: -15.133906364440918
    9. '   ' → logprob: -15.258906364440918
    10. '
' → logprob: -16.1339054107666

Token 928: ' add' (ID: 1147)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02379588969051838
    2. 'while' → logprob: -3.7737958431243896
    3. '           ' → logprob: -8.148796081542969
    4. 'for' → logprob: -8.273796081542969
    5. ' if' → logprob: -12.898796081542969
    6. '       ' → logprob: -13.273796081542969
    7. '#' → logprob: -14.023796081542969
    8. '   ' → logprob: -15.023796081542969
    9. 'import' → logprob: -15.398796081542969
    10. ' while' → logprob: -15.648796081542969

Token 929: ' goods' (ID: 14854)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.162481889128685
    2. '           ' → logprob: -2.7874817848205566
    3. 'for' → logprob: -2.7874817848205566
    4. ' if' → logprob: -3.7874817848205566
    5. ' for' → logprob: -5.912481784820557
    6. 'new' → logprob: -7.912481784820557
    7. '   ' → logprob: -8.662482261657715
    8. 'while' → logprob: -8.662482261657715
    9. '       ' → logprob: -8.912482261657715
    10. '#' → logprob: -9.037482261657715

Token 930: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008876555599272251
    2. '<|end|>' → logprob: -5.633876323699951
    3. ' if' → logprob: -6.883876323699951
    4. '       ' → logprob: -7.008876323699951
    5. ' =' → logprob: -7.258876323699951
    6. '<|end|>' → logprob: -7.758876323699951
    7. 'if' → logprob: -7.883876323699951
    8. ',' → logprob: -8.00887680053711
    9. ' for' → logprob: -8.25887680053711
    10. 'for' → logprob: -8.38387680053711

Token 931: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02852988988161087
    2. ' for' → logprob: -4.778530120849609
    3. '       ' → logprob: -5.028530120849609
    4. ' if' → logprob: -5.403530120849609
    5. 'for' → logprob: -5.778530120849609
    6. '<|end|>' → logprob: -5.778530120849609
    7. 'if' → logprob: -6.278530120849609
    8. '   ' → logprob: -9.02853012084961
    9. '<|end|>' → logprob: -9.15353012084961
    10. ' to' → logprob: -9.52853012084961

Token 932: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.028256673365831375
    2. 'while' → logprob: -4.028256893157959
    3. '           ' → logprob: -4.903256893157959
    4. ' if' → logprob: -6.028256893157959
    5. 'for' → logprob: -8.7782564163208
    6. ' while' → logprob: -10.4032564163208
    7. '       ' → logprob: -11.0282564163208
    8. '   ' → logprob: -11.4032564163208
    9. '	if' → logprob: -12.4032564163208
    10. ' ' → logprob: -12.5282564163208

Token 933: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02899598330259323
    2. ' self' → logprob: -3.653995990753174
    3. 'len' → logprob: -6.278995990753174
    4. '(self' → logprob: -7.278995990753174
    5. '(len' → logprob: -9.903995513916016
    6. ' len' → logprob: -10.028995513916016
    7. '	self' → logprob: -11.778995513916016
    8. '   ' → logprob: -12.028995513916016
    9. '           ' → logprob: -12.028995513916016
    10. ' (' → logprob: -12.278995513916016

Token 934: '.order' (ID: 25549)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.524715781211853
    2. '.curr' → logprob: -0.899715781211853
    3. '.order' → logprob: -7.274715900421143
    4. 'order' → logprob: -7.524715900421143
    5. 'Curr' → logprob: -9.274715423583984
    6. ' curr' → logprob: -9.524715423583984
    7. '[curr' → logprob: -9.649715423583984
    8. '	curr' → logprob: -10.274715423583984
    9. ' in' → logprob: -10.649715423583984
    10. 'in' → logprob: -11.149715423583984

Token 935: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.00771357724443078
    2. 's' → logprob: -4.882713794708252
    3. 'I' → logprob: -10.382713317871094
    4. 'index' → logprob: -10.632713317871094
    5. 'nd' → logprob: -11.382713317871094
    6. '_index' → logprob: -11.882713317871094
    7. 'In' → logprob: -11.882713317871094
    8. 'Ind' → logprob: -12.632713317871094
    9. '.Index' → logprob: -13.007713317871094
    10. '[Index' → logprob: -13.007713317871094

Token 936: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3917692005634308
    2. ' <' → logprob: -1.1417691707611084
    3. '<len' → logprob: -5.3917694091796875
    4. '>=' → logprob: -9.016769409179688
    5. ' >=' → logprob: -9.766769409179688
    6. ' ' → logprob: -9.891769409179688
    7. '<size' → logprob: -10.516769409179688
    8. '==' → logprob: -10.641769409179688
    9. ' ==' → logprob: -11.266769409179688
    10. '<num' → logprob: -11.891769409179688

Token 937: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.306760805164231e-05
    2. ' len' → logprob: -11.62501335144043
    3. 'self' → logprob: -12.50001335144043
    4. '	len' → logprob: -15.25001335144043
    5. '   ' → logprob: -16.00001335144043
    6. '(len' → logprob: -17.87501335144043
    7. '           ' → logprob: -18.12501335144043
    8. '=len' → logprob: -18.25001335144043
    9. '       ' → logprob: -18.75001335144043
    10. '<len' → logprob: -18.75001335144043

Token 938: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.392202976712724e-06
    2. 'self' → logprob: -12.000006675720215
    3. '(' → logprob: -15.500006675720215
    4. '(this' → logprob: -17.0000057220459
    5. '=self' → logprob: -18.2500057220459
    6. '[self' → logprob: -19.0000057220459
    7. '(timer' → logprob: -19.3750057220459
    8. ' (' → logprob: -20.0000057220459
    9. '(
' → logprob: -20.1250057220459
    10. ':self' → logprob: -20.7500057220459

Token 939: '.times' (ID: 78835)
  Prédit: '.times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.times' → logprob: -0.00043698702938854694
    2. '.orders' → logprob: -7.750436782836914
    3. 'times' → logprob: -12.000436782836914
    4. '.' → logprob: -16.750436782836914
    5. ' .' → logprob: -16.750436782836914
    6. '.tim' → logprob: -17.000436782836914
    7. ' times' → logprob: -17.625436782836914
    8. '.t' → logprob: -17.625436782836914
    9. '(times' → logprob: -17.625436782836914
    10. '.time' → logprob: -17.875436782836914

Token 940: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20662446320056915
    2. 'and' → logprob: -1.7066245079040527
    3. ')' → logprob: -5.331624507904053
    4. '           ' → logprob: -8.206624031066895
    5. '	and' → logprob: -10.206624031066895
    6. '               ' → logprob: -10.331624031066895
    7. '                   ' → logprob: -12.081624031066895
    8. '       ' → logprob: -12.581624031066895
    9. '          ' → logprob: -13.081624031066895
    10. '   ' → logprob: -13.831624031066895

Token 941: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6932494640350342
    2. 'and' → logprob: -0.6932494640350342
    3. '           ' → logprob: -9.318249702453613
    4. '               ' → logprob: -12.068249702453613
    5. '	and' → logprob: -12.443249702453613
    6. '   ' → logprob: -14.193249702453613
    7. ' ' → logprob: -14.568249702453613
    8. '                   ' → logprob: -14.693249702453613
    9. '       ' → logprob: -14.693249702453613
    10. '          ' → logprob: -15.443249702453613

Token 942: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02145976759493351
    2. ' self' → logprob: -3.8964598178863525
    3. '           ' → logprob: -7.021459579467773
    4. '   ' → logprob: -11.021459579467773
    5. '	self' → logprob: -12.396459579467773
    6. '               ' → logprob: -13.521459579467773
    7. '  ' → logprob: -14.021459579467773
    8. ' ' → logprob: -14.021459579467773
    9. '(self' → logprob: -14.271459579467773
    10. ' ' → logprob: -15.146459579467773

Token 943: '.curr' (ID: 91383)
  Prédit: '.times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.times' → logprob: -0.00516841234639287
    2. '.curr' → logprob: -5.380168437957764
    3. 'times' → logprob: -7.630168437957764
    4. 'curr' → logprob: -10.005167961120605
    5. '.time' → logprob: -12.380167961120605
    6. '.tim' → logprob: -12.380167961120605
    7. ' times' → logprob: -13.255167961120605
    8. '.cur' → logprob: -13.505167961120605
    9. '.' → logprob: -13.630167961120605
    10. '.t' → logprob: -13.630167961120605

Token 944: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -1.5048530030981055e-06
    2. '	Time' → logprob: -14.250001907348633
    3. 'Tim' → logprob: -15.625001907348633
    4. 'ime' → logprob: -15.750001907348633
    5. '==' → logprob: -16.250001907348633
    6. ' ==' → logprob: -16.375001907348633
    7. ' Time' → logprob: -17.000001907348633
    8. '_Time' → logprob: -17.125001907348633
    9. 'T' → logprob: -17.375001907348633
    10. '_time' → logprob: -17.500001907348633

Token 945: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38728266954421997
    2. '==' → logprob: -1.1372826099395752
    3. '>=' → logprob: -8.012282371520996
    4. ' >=' → logprob: -9.512282371520996
    5. '=' → logprob: -12.262282371520996
    6. ' ' → logprob: -14.887282371520996
    7. ')==' → logprob: -15.262282371520996
    8. ' =' → logprob: -15.387282371520996
    9. '()==' → logprob: -15.387282371520996
    10. '===' → logprob: -15.887282371520996

Token 946: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020547492429614067
    2. ' self' → logprob: -3.895547389984131
    3. '	self' → logprob: -12.895547866821289
    4. '           ' → logprob: -13.770547866821289
    5. '[self' → logprob: -13.895547866821289
    6. '(self' → logprob: -14.895547866821289
    7. '=self' → logprob: -15.270547866821289
    8. '   ' → logprob: -15.645547866821289
    9. '```' → logprob: -16.52054786682129
    10. ' ' → logprob: -17.14554786682129

Token 947: '.times' (ID: 78835)
  Prédit: '.times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.times' → logprob: -0.0003407071635592729
    2. 'times' → logprob: -8.000340461730957
    3. ' times' → logprob: -12.625340461730957
    4. ' .' → logprob: -14.000340461730957
    5. '(times' → logprob: -14.750340461730957
    6. '.' → logprob: -15.000340461730957
    7. '.t' → logprob: -15.500340461730957
    8. 'imes' → logprob: -15.625340461730957
    9. '.tim' → logprob: -16.875341415405273
    10. 'etimes' → logprob: -17.500341415405273

Token 948: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -6.511406809295295e-06
    2. 'self' → logprob: -12.500006675720215
    3. '[' → logprob: -12.875006675720215
    4. ' [' → logprob: -16.5000057220459
    5. '[
' → logprob: -16.7500057220459
    6. '   ' → logprob: -17.1250057220459
    7. '	self' → logprob: -18.3750057220459
    8. ' self' → logprob: -18.8750057220459
    9. ' ' → logprob: -19.3750057220459
    10. '(self' → logprob: -19.8750057220459

Token 949: '.order' (ID: 25549)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.07889848947525024
    2. '.order' → logprob: -2.5788984298706055
    3. ' order' → logprob: -12.828898429870605
    4. '	order' → logprob: -13.453898429870605
    5. '.' → logprob: -13.578898429870605
    6. '$order' → logprob: -13.953898429870605
    7. 'Order' → logprob: -14.078898429870605
    8. '.user' → logprob: -14.953898429870605
    9. 'user' → logprob: -15.703898429870605
    10. 'ordert' → logprob: -15.953898429870605

Token 950: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.0016116275219246745
    2. 'nd' → logprob: -6.876611709594727
    3. 'index' → logprob: -7.501611709594727
    4. 'ex' → logprob: -11.251611709594727
    5. 'x' → logprob: -11.751611709594727
    6. 'dex' → logprob: -13.251611709594727
    7. 'nder' → logprob: -14.751611709594727
    8. ']' → logprob: -14.751611709594727
    9. '[Index' → logprob: -14.751611709594727
    10. 'Ind' → logprob: -15.126611709594727

Token 951: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.45098432898521423
    2. ':' → logprob: -1.0759843587875366
    3. '):
' → logprob: -3.950984239578247
    4. ':
' → logprob: -6.825984477996826
    5. ')' → logprob: -7.700984477996826
    6. ']:' → logprob: -7.950984477996826
    7. '<|end|>' → logprob: -8.325984001159668
    8. '<|end|>' → logprob: -8.825984001159668
    9. ' and' → logprob: -8.950984001159668
    10. '   ' → logprob: -9.575984001159668

Token 952: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.64839569455944e-05
    2. '	           ' → logprob: -10.750076293945312
    3. '<|end|>' → logprob: -11.250076293945312
    4. '		       ' → logprob: -11.500076293945312
    5. ',' → logprob: -11.875076293945312
    6. ':
' → logprob: -12.875076293945312
    7. ' shop' → logprob: -13.375076293945312
    8. '           ' → logprob: -13.375076293945312
    9. ' for' → logprob: -13.375076293945312
    10. '              ' → logprob: -13.375076293945312

Token 953: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3863438367843628
    2. ' shop' → logprob: -1.6363438367843628
    3. 'shop' → logprob: -2.1363439559936523
    4. 'self' → logprob: -5.761343955993652
    5. '                   ' → logprob: -5.886343955993652
    6. '   ' → logprob: -7.636343955993652
    7. ' self' → logprob: -7.886343955993652
    8. '           ' → logprob: -8.261343955993652
    9. ' for' → logprob: -9.136343955993652
    10. 'for' → logprob: -9.386343955993652

Token 954: ' driver' (ID: 8931)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5050921440124512
    2. ' self' → logprob: -2.005092144012451
    3. 'not' → logprob: -2.630092144012451
    4. 'shop' → logprob: -2.880092144012451
    5. ' not' → logprob: -3.255092144012451
    6. 'len' → logprob: -3.380092144012451
    7. ' shop' → logprob: -3.380092144012451
    8. 'int' → logprob: -4.755092144012451
    9. ' len' → logprob: -4.880092144012451
    10. '           ' → logprob: -5.630092144012451

Token 955: '.map' (ID: 7975)
  Prédit: '.order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.07459452003240585
    2. '.plan' → logprob: -3.699594497680664
    3. '.location' → logprob: -3.949594497680664
    4. '.target' → logprob: -4.824594497680664
    5. '.' → logprob: -5.074594497680664
    6. ' not' → logprob: -5.449594497680664
    7. '.next' → logprob: -5.824594497680664
    8. 'order' → logprob: -6.324594497680664
    9. ' is' → logprob: -6.949594497680664
    10. '.orders' → logprob: -7.449594497680664

Token 956: '.G' (ID: 3773)
  Prédit: '.V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -1.2344101667404175
    2. '.G' → logprob: -1.3594101667404175
    3. 'G' → logprob: -2.359410285949707
    4. ' is' → logprob: -2.609410285949707
    5. 'V' → logprob: -2.734410285949707
    6. ' not' → logprob: -2.984410285949707
    7. ' G' → logprob: -3.109410285949707
    8. ' V' → logprob: -4.109410285949707
    9. 'out' → logprob: -4.359410285949707
    10. 'location' → logprob: -4.609410285949707

Token 957: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002997120900545269
    2. '1' → logprob: -9.000299453735352
    3. '[self' → logprob: -9.125299453735352
    4. 'shop' → logprob: -10.125299453735352
    5. 'driver' → logprob: -11.500299453735352
    6. '[d' → logprob: -13.500299453735352
    7. '[int' → logprob: -13.750299453735352
    8. '
' → logprob: -13.750299453735352
    9. '[data' → logprob: -14.125299453735352
    10. '[i' → logprob: -14.375299453735352

Token 958: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4473158121109009
    2. 'driver' → logprob: -1.8223158121109009
    3. 'shop' → logprob: -1.9473158121109009
    4. '0' → logprob: -2.9473156929016113
    5. 'self' → logprob: -7.197315692901611
    6. ' shop' → logprob: -7.197315692901611
    7. ' ' → logprob: -7.697315692901611
    8. ' driver' → logprob: -7.822315692901611
    9. '   ' → logprob: -8.19731616973877
    10. 'data' → logprob: -8.57231616973877

Token 959: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3707691431045532
    2. '][' → logprob: -1.7457691431045532
    3. '[self' → logprob: -2.6207690238952637
    4. '[data' → logprob: -2.8707690238952637
    5. '[int' → logprob: -5.620769023895264
    6. ']' → logprob: -7.245769023895264
    7. 'self' → logprob: -8.245769500732422
    8. 'shop' → logprob: -8.745769500732422
    9. '   ' → logprob: -8.995769500732422
    10. '[player' → logprob: -9.370769500732422

Token 960: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006048128008842468
    2. 'int' → logprob: -5.256048202514648
    3. ' self' → logprob: -7.756048202514648
    4. '               ' → logprob: -8.381048202514648
    5. '           ' → logprob: -9.756048202514648
    6. '                   ' → logprob: -10.381048202514648
    7. 'shop' → logprob: -11.006048202514648
    8. '                               ' → logprob: -12.006048202514648
    9. 'data' → logprob: -12.131048202514648
    10. '
' → logprob: -12.506048202514648

Token 961: '.orders' (ID: 129984)
  Prédit: '.orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.orders' → logprob: -0.009963134303689003
    2. 'orders' → logprob: -4.634963035583496
    3. '.times' → logprob: -8.759963035583496
    4. 'times' → logprob: -10.509963035583496
    5. '.' → logprob: -12.134963035583496
    6. ' orders' → logprob: -12.634963035583496
    7. '.order' → logprob: -12.759963035583496
    8. '       ' → logprob: -12.884963035583496
    9. '   ' → logprob: -13.009963035583496
    10. '           ' → logprob: -13.259963035583496

Token 962: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -1.9027791495318525e-05
    2. '[' → logprob: -11.125019073486328
    3. 'self' → logprob: -13.000019073486328
    4. '[-' → logprob: -13.500019073486328
    5. '][' → logprob: -16.125019073486328
    6. ']' → logprob: -16.250019073486328
    7. '[
' → logprob: -16.500019073486328
    8. '   ' → logprob: -16.500019073486328
    9. '[this' → logprob: -17.625019073486328
    10. '(self' → logprob: -17.750019073486328

Token 963: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.3132757246494293
    2. 'order' → logprob: -1.313275694847107
    3. ' order' → logprob: -12.313275337219238
    4. 'Order' → logprob: -12.313275337219238
    5. '$order' → logprob: -13.688275337219238
    6. '	order' → logprob: -13.813275337219238
    7. 'Index' → logprob: -13.938275337219238
    8. '.' → logprob: -14.188275337219238
    9. '.user' → logprob: -14.438275337219238
    10. '   ' → logprob: -15.188275337219238

Token 964: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.002691936446353793
    2. 'nd' → logprob: -6.127691745758057
    3. 'index' → logprob: -7.877691745758057
    4. 'ex' → logprob: -9.127692222595215
    5. 'dex' → logprob: -11.252692222595215
    6. 'Ind' → logprob: -13.752692222595215
    7. 'x' → logprob: -13.752692222595215
    8. '   ' → logprob: -14.502692222595215
    9. '_index' → logprob: -15.002692222595215
    10. 'd' → logprob: -15.127692222595215

Token 965: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03874025121331215
    2. ' ]' → logprob: -3.2887401580810547
    3. ']>' → logprob: -7.663740158081055
    4. ']==' → logprob: -9.163740158081055
    5. '()]' → logprob: -10.163740158081055
    6. ']!=' → logprob: -10.663740158081055
    7. '`]' → logprob: -11.163740158081055
    8. '']' → logprob: -11.538740158081055
    9. '[' → logprob: -11.913740158081055
    10. '   ' → logprob: -12.413740158081055

Token 966: ' <' (ID: 464)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0899822935461998
    2. '[self' → logprob: -3.464982271194458
    3. '!=' → logprob: -3.839982271194458
    4. '<' → logprob: -4.589982509613037
    5. ' !=' → logprob: -4.964982509613037
    6. ' <' → logprob: -5.089982509613037
    7. ']' → logprob: -5.964982509613037
    8. '   ' → logprob: -6.839982509613037
    9. '[out' → logprob: -6.839982509613037
    10. '>' → logprob: -7.089982509613037

Token 967: ' ' (ID: 220)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.47406017780303955
    2. 'driver' → logprob: -1.3490601778030396
    3. '100' → logprob: -2.22406005859375
    4. '999' → logprob: -5.47406005859375
    5. 'self' → logprob: -6.59906005859375
    6. '500' → logprob: -6.97406005859375
    7. '200' → logprob: -7.09906005859375
    8. '900' → logprob: -7.84906005859375
    9. '300' → logprob: -8.09906005859375
    10. 'timer' → logprob: -8.34906005859375

Token 968: '100' (ID: 1353)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.722526490688324
    2. 'graph' → logprob: -1.0975265502929688
    3. '100' → logprob: -1.8475265502929688
    4. '999' → logprob: -5.097526550292969
    5. 'self' → logprob: -5.222526550292969
    6. '200' → logprob: -5.722526550292969
    7. 'timer' → logprob: -6.222526550292969
    8. '500' → logprob: -6.347526550292969
    9. '300' → logprob: -7.097526550292969
    10. '900' → logprob: -7.722526550292969

Token 969: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.09805537760257721
    2. '0' → logprob: -2.473055362701416
    3. '000' → logprob: -5.348055362701416
    4. ':' → logprob: -5.973055362701416
    5. '   ' → logprob: -7.223055362701416
    6. ':
' → logprob: -7.598055362701416
    7. '           ' → logprob: -8.473055839538574
    8. '01' → logprob: -9.348055839538574
    9. '               ' → logprob: -10.348055839538574
    10. '       ' → logprob: -10.598055839538574

Token 970: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7664145827293396
    2. ' and' → logprob: -1.2664146423339844
    3. ':' → logprob: -1.3914146423339844
    4. '           ' → logprob: -6.266414642333984
    5. ' :
' → logprob: -7.391414642333984
    6. 'and' → logprob: -7.516414642333984
    7. ':
' → logprob: -7.516414642333984
    8. '               ' → logprob: -8.141414642333984
    9. ' :' → logprob: -8.641414642333984
    10. '       ' → logprob: -8.766414642333984

Token 971: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010844537988305092
    2. '               ' → logprob: -4.635844707489014
    3. '           ' → logprob: -7.760844707489014
    4. '                    
' → logprob: -9.010844230651855
    5. ':
' → logprob: -9.260844230651855
    6. '                       ' → logprob: -9.385844230651855
    7. '<|end|>' → logprob: -9.510844230651855
    8. ',' → logprob: -9.635844230651855
    9. '
' → logprob: -9.885844230651855
    10. ' and' → logprob: -10.385844230651855

Token 972: ' shop' (ID: 9100)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.2461596429347992
    2. 'shop' (adapté à ' shop') → logprob: -2.496159553527832
    3. '                   ' → logprob: -2.621159553527832
    4. ' driver' → logprob: -3.371159553527832
    5. '                       ' → logprob: -4.121159553527832
    6. ' shop' → logprob: -4.496159553527832
    7. '               ' → logprob: -6.746159553527832
    8. '	driver' → logprob: -10.246159553527832
    9. '       ' → logprob: -10.371159553527832
    10. '   ' → logprob: -10.746159553527832

Token 973: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.04319615289568901
    2. '.' → logprob: -3.168196201324463
    3. ' .' → logprob: -9.793195724487305
    4. '.user' → logprob: -10.043195724487305
    5. '.orders' → logprob: -10.668195724487305
    6. '.Order' → logprob: -10.793195724487305
    7. '   ' → logprob: -11.543195724487305
    8. '.add' → logprob: -12.418195724487305
    9. '	order' → logprob: -12.543195724487305
    10. 'order' → logprob: -12.543195724487305

Token 974: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.002005961025133729
    2. '.' → logprob: -6.2520060539245605
    3. ' .' → logprob: -9.627005577087402
    4. '().' → logprob: -11.752005577087402
    5. '                   ' → logprob: -13.752005577087402
    6. '.append' → logprob: -14.377005577087402
    7. '.update' → logprob: -14.627005577087402
    8. 'add' → logprob: -14.752005577087402
    9. '   ' → logprob: -15.502005577087402
    10. '                                   ' → logprob: -15.627005577087402

Token 975: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011185461189597845
    2. '(' → logprob: -6.8761186599731445
    3. '(driver' → logprob: -9.626118659973145
    4. '(
' → logprob: -11.126118659973145
    5. '(int' → logprob: -13.251118659973145
    6. 'self' → logprob: -13.751118659973145
    7. '((' → logprob: -14.126118659973145
    8. ' (' → logprob: -14.126118659973145
    9. '(s' → logprob: -14.876118659973145
    10. '(this' → logprob: -16.501117706298828

Token 976: '.orders' (ID: 129984)
  Prédit: '.orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.orders' → logprob: -8.061054359131958e-06
    2. '.' → logprob: -12.500007629394531
    3. 'orders' → logprob: -12.500007629394531
    4. ' .' → logprob: -15.250007629394531
    5. '.order' → logprob: -15.875007629394531
    6. '.requests' → logprob: -16.62500762939453
    7. '.users' → logprob: -17.25000762939453
    8. '_orders' → logprob: -17.87500762939453
    9. '.user' → logprob: -18.37500762939453
    10. ' orders' → logprob: -18.50000762939453

Token 977: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -12.87500286102295
    3. 'self' → logprob: -16.125001907348633
    4. '[
' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.500001907348633
    6. ' [' → logprob: -18.875001907348633
    7. '[[' → logprob: -19.125001907348633
    8. '[this' → logprob: -19.875001907348633
    9. ' ' → logprob: -20.000001907348633
    10. ')[' → logprob: -20.250001907348633

Token 978: '.order' (ID: 25549)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.003168575232848525
    2. 'Index' → logprob: -6.50316858291626
    3. '.order' → logprob: -6.62816858291626
    4. 'user' → logprob: -9.253168106079102
    5. 'index' → logprob: -9.253168106079102
    6. 'Order' → logprob: -9.378168106079102
    7. ' order' → logprob: -9.753168106079102
    8. '$order' → logprob: -12.753168106079102
    9. '.user' → logprob: -13.003168106079102
    10. '	order' → logprob: -14.378168106079102

Token 979: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -7.707997428951785e-05
    2. 'index' → logprob: -9.500077247619629
    3. 'user' → logprob: -13.375077247619629
    4. '_index' → logprob: -15.625077247619629
    5. '       ' → logprob: -16.375076293945312
    6. 'self' → logprob: -16.375076293945312
    7. 'Ind' → logprob: -16.875076293945312
    8. '   ' → logprob: -16.875076293945312
    9. 'Indexes' → logprob: -17.875076293945312
    10. ']' → logprob: -18.000076293945312

Token 980: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08936090767383575
    2. ')
' → logprob: -2.4643609523773193
    3. '())' → logprob: -8.839361190795898
    4. '())
' → logprob: -9.589361190795898
    5. '               ' → logprob: -9.964361190795898
    6. ')
' → logprob: -10.214361190795898
    7. '()' → logprob: -10.339361190795898
    8. '                   ' → logprob: -10.589361190795898
    9. ' )' → logprob: -10.964361190795898
    10. '           ' → logprob: -10.964361190795898

Token 981: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01836157962679863
    2. '               ' → logprob: -4.018361568450928
    3. '           ' → logprob: -8.768362045288086
    4. 'self' → logprob: -10.643362045288086
    5. '       ' → logprob: -11.768362045288086
    6. '                       ' → logprob: -12.018362045288086
    7. '                  ' → logprob: -12.268362045288086
    8. '```' → logprob: -12.643362045288086
    9. '   ' → logprob: -13.268362045288086
    10. '
' → logprob: -13.518362045288086

Token 982: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030997619032859802
    2. '                   ' → logprob: -6.1280999183654785
    3. 'self' (adapté à ' self') → logprob: -7.1280999183654785
    4. '           ' → logprob: -9.50309944152832
    5. ' self' → logprob: -11.62809944152832
    6. '	           ' → logprob: -12.12809944152832
    7. '              ' → logprob: -12.25309944152832
    8. '   ' → logprob: -12.25309944152832
    9. 'else' → logprob: -13.25309944152832
    10. '			   ' → logprob: -13.37809944152832

Token 983: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.07034207880496979
    2. 'order' → logprob: -2.6953420639038086
    3. '.' → logprob: -8.945342063903809
    4. '.user' → logprob: -9.195342063903809
    5. '	order' → logprob: -9.195342063903809
    6. ' order' → logprob: -10.445342063903809
    7. '$order' → logprob: -11.445342063903809
    8. ').' → logprob: -11.695342063903809
    9. '.Order' → logprob: -12.195342063903809
    10. 'Order' → logprob: -12.570342063903809

Token 984: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -5.5577775128767826e-06
    2. 'index' → logprob: -12.125005722045898
    3. '_index' → logprob: -17.5000057220459
    4. '=' → logprob: -18.1250057220459
    5. '+=' → logprob: -18.5000057220459
    6. '```' → logprob: -18.5000057220459
    7. '[Index' → logprob: -18.7500057220459
    8. '.Index' → logprob: -18.8750057220459
    9. '[' → logprob: -19.1250057220459
    10. ' +=' → logprob: -19.2500057220459

Token 985: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7486137747764587
    2. '+=' → logprob: -0.7486137747764587
    3. '=' → logprob: -2.9986138343811035
    4. ' =' → logprob: -5.4986138343811035
    5. '+' → logprob: -12.248613357543945
    6. ' ' → logprob: -13.623613357543945
    7. ' +' → logprob: -14.248613357543945
    8. '<|end|>' → logprob: -14.623613357543945
    9. '    ' → logprob: -15.748613357543945
    10. ']+=' → logprob: -16.123613357543945

Token 986: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006716317031532526
    2. ' self' → logprob: -5.006716251373291
    3. '	self' → logprob: -15.00671672821045
    4. '(self' → logprob: -15.25671672821045
    5. ' ' → logprob: -16.256715774536133
    6. '   ' → logprob: -16.256715774536133
    7. '<|end|>' → logprob: -16.256715774536133
    8. '[self' → logprob: -17.631715774536133
    9. '0' → logprob: -17.756715774536133
    10. '  ' → logprob: -18.006715774536133

Token 987: '.order' (ID: 25549)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04521690681576729
    2. 'user' → logprob: -3.4202167987823486
    3. 'order' → logprob: -4.545217037200928
    4. ' self' → logprob: -7.295217037200928
    5. 'assistant' → logprob: -9.54521656036377
    6. 'answer' → logprob: -9.67021656036377
    7. ' user' → logprob: -11.17021656036377
    8. 'operator' → logprob: -11.17021656036377
    9. '1' → logprob: -11.29521656036377
    10. '  ' → logprob: -12.17021656036377

Token 988: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -4.894790981779806e-05
    2. 'index' → logprob: -10.250048637390137
    3. 'x' → logprob: -12.500048637390137
    4. 'nd' → logprob: -12.750048637390137
    5. '+' → logprob: -13.000048637390137
    6. '1' → logprob: -13.000048637390137
    7. '_index' → logprob: -14.750048637390137
    8. 'dex' → logprob: -15.000048637390137
    9. '   ' → logprob: -15.125048637390137
    10. '.Index' → logprob: -15.500048637390137

Token 989: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001805377542041242
    2. ' +' → logprob: -8.6251802444458
    3. '1' → logprob: -14.1251802444458
    4. ' plus' → logprob: -16.500181198120117
    5. '+
' → logprob: -17.000181198120117
    6. '+self' → logprob: -17.750181198120117
    7. '＋' → logprob: -18.000181198120117
    8. 'plus' → logprob: -18.000181198120117
    9. '()+' → logprob: -18.125181198120117
    10. '+=' → logprob: -18.125181198120117

Token 990: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '```' → logprob: -19.00020408630371
    4. '<|end|>' → logprob: -19.12520408630371
    5. '0' → logprob: -20.62520408630371
    6. '   ' → logprob: -20.87520408630371
    7. '۱' → logprob: -22.12520408630371
    8. '	' → logprob: -22.50020408630371
    9. '  ' → logprob: -22.62520408630371
    10. '+' → logprob: -22.68770408630371

Token 991: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.250003814697266
    4. '```' → logprob: -18.375003814697266
    5. '<|end|>' → logprob: -19.750003814697266
    6. '  ' → logprob: -20.875003814697266
    7. '
' → logprob: -21.000003814697266
    8. '0' → logprob: -21.375003814697266
    9. '	' → logprob: -21.750003814697266
    10. '+' → logprob: -21.875003814697266

Token 992: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4788951277732849
    2. '<|end|>' → logprob: -1.1038951873779297
    3. '
' → logprob: -3.2288951873779297
    4. '<|end|>' → logprob: -5.22889518737793
    5. '```' → logprob: -6.22889518737793
    6. '       ' → logprob: -7.22889518737793
    7. '          ' → logprob: -7.85389518737793
    8. '   ' → logprob: -8.47889518737793
    9. '            
' → logprob: -9.22889518737793
    10. ' ' → logprob: -9.72889518737793

Token 993: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14304015040397644
    2. '<|end|>' → logprob: -2.518040180206299
    3. '
' → logprob: -3.018040180206299
    4. '<|end|>' → logprob: -6.643040180206299
    5. '       ' → logprob: -7.268040180206299
    6. '```' → logprob: -7.643040180206299
    7. '            
' → logprob: -7.768040180206299
    8. '          ' → logprob: -8.64303970336914
    9. '   ' → logprob: -8.64303970336914
    10. 'if' → logprob: -9.76803970336914

Token 994: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05658544600009918
    2. 'if' (adapté à ' if') → logprob: -2.9315855503082275
    3. ' if' → logprob: -6.931585311889648
    4. '       ' → logprob: -7.556585311889648
    5. '   ' → logprob: -8.806585311889648
    6. '```' → logprob: -10.931585311889648
    7. ' ' → logprob: -11.806585311889648
    8. '            
' → logprob: -12.306585311889648
    9. '	   ' → logprob: -12.431585311889648
    10. '<|end|>' → logprob: -12.931585311889648

Token 995: ' driver' (ID: 8931)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0765262842178345
    2. ' driver' → logprob: -1.2015262842178345
    3. 'driver' → logprob: -1.5765262842178345
    4. 'not' → logprob: -1.9515262842178345
    5. 'shop' → logprob: -5.576526165008545
    6. ' shop' → logprob: -5.701526165008545
    7. 'len' → logprob: -6.826526165008545
    8. ' len' → logprob: -6.951526165008545
    9. '   ' → logprob: -8.576526641845703
    10. '	driver' → logprob: -9.451526641845703

Token 996: '.on' (ID: 5158)
  Prédit: '.on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.on' → logprob: -0.0004142264660913497
    2. '.location' → logprob: -8.25041389465332
    3. '.plan' → logprob: -9.50041389465332
    4. '.next' → logprob: -9.75041389465332
    5. '.in' → logprob: -12.00041389465332
    6. '.has' → logprob: -13.00041389465332
    7. '.is' → logprob: -13.00041389465332
    8. 'on' → logprob: -13.00041389465332
    9. '.move' → logprob: -13.62541389465332
    10. '.route' → logprob: -13.75041389465332

Token 997: 'Route' (ID: 7656)
  Prédit: 'Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -3.128163257315464e-07
    2. '_route' → logprob: -15.75
    3. 'route' → logprob: -17.125
    4. '	Route' → logprob: -17.625
    5. '<Route' → logprob: -17.75
    6. '(Route' → logprob: -18.875
    7. 'Road' → logprob: -19.125
    8. '.Route' → logprob: -19.25
    9. ' Route' → logprob: -19.25
    10. '\Route' → logprob: -19.875

Token 998: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0219670832157135
    2. '():
' → logprob: -4.021966934204102
    3. '()' → logprob: -5.646966934204102
    4. '()==' → logprob: -8.271966934204102
    5. '():
' → logprob: -11.271966934204102
    6. '()>' → logprob: -12.396966934204102
    7. '():

' → logprob: -12.896966934204102
    8. '()!=' → logprob: -13.521966934204102
    9. '()<' → logprob: -14.271966934204102
    10. ' ():' → logprob: -14.271966934204102

Token 999: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0261709690093994
    2. '==' → logprob: -1.1511709690093994
    3. ':' → logprob: -1.7761709690093994
    4. ':
' → logprob: -2.9011709690093994
    5. '()==' → logprob: -3.2761709690093994
    6. '():
' → logprob: -3.4011709690093994
    7. '()' → logprob: -4.77617073059082
    8. '():' → logprob: -5.15117073059082
    9. '       ' → logprob: -5.27617073059082
    10. ' or' → logprob: -5.77617073059082

Token 1000: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.04981448873877525
    2. 'True' → logprob: -3.299814462661743
    3. ' False' → logprob: -4.549814701080322
    4. ' True' → logprob: -6.799814701080322
    5. '0' → logprob: -11.549814224243164
    6. '(False' → logprob: -11.674814224243164
    7. '(True' → logprob: -14.049814224243164
    8. 'F' → logprob: -14.174814224243164
    9. ' ' → logprob: -15.299814224243164
    10. '   ' → logprob: -15.674814224243164

Token 1001: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29645776748657227
    2. ':' → logprob: -1.4214577674865723
    3. ' and' → logprob: -4.421457767486572
    4. '       ' → logprob: -6.296457767486572
    5. ' or' → logprob: -6.921457767486572
    6. '):
' → logprob: -9.046457290649414
    7. 'and' → logprob: -9.296457290649414
    8. '<|end|>' → logprob: -10.421457290649414
    9. '():
' → logprob: -11.046457290649414
    10. ' :
' → logprob: -11.046457290649414

Token 1002: ' driver' (ID: 8931)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.1056843101978302
    2. ' (' → logprob: -2.980684280395508
    3. 'len' → logprob: -3.355684280395508
    4. ' len' → logprob: -4.230684280395508
    5. '   ' → logprob: -10.730684280395508
    6. '(True' → logprob: -10.980684280395508
    7. ' ' → logprob: -10.980684280395508
    8. '(not' → logprob: -11.230684280395508
    9. '  ' → logprob: -11.730684280395508
    10. '(' → logprob: -11.980684280395508

Token 1003: '.location' (ID: 15725)
  Prédit: '.route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -0.028075866401195526
    2. '.order' → logprob: -4.278075695037842
    3. '.plan' → logprob: -4.653075695037842
    4. '.location' → logprob: -5.903075695037842
    5. '.' → logprob: -6.903075695037842
    6. '.next' → logprob: -8.653076171875
    7. '.target' → logprob: -8.778076171875
    8. ' .' → logprob: -8.903076171875
    9. '.rule' → logprob: -10.778076171875
    10. ').' → logprob: -12.028076171875

Token 1004: ' ==' (ID: 951)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13972753286361694
    2. ' not' → logprob: -2.3897275924682617
    3. 'in' → logprob: -3.2647275924682617
    4. 'not' → logprob: -7.889727592468262
    5. ' ==' → logprob: -10.014727592468262
    6. '==' → logprob: -10.264727592468262
    7. '<|end|>' → logprob: -10.389727592468262
    8. ' !=' → logprob: -10.514727592468262
    9. '!=' → logprob: -11.014727592468262
    10. ' ' → logprob: -11.514727592468262

Token 1005: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001314295077463612
    2. 'shop' → logprob: -9.125131607055664
    3. ' ' → logprob: -10.875131607055664
    4. 'driver' → logprob: -13.375131607055664
    5. '0' → logprob: -14.875131607055664
    6. 'sh' → logprob: -15.250131607055664
    7. 'out' → logprob: -15.750131607055664
    8. '   ' → logprob: -16.000131607055664
    9. '  ' → logprob: -16.000131607055664
    10. 'target' → logprob: -16.125131607055664

Token 1006: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013738969573751092
    2. 'shop' → logprob: -9.000137329101562
    3. ' ' → logprob: -11.875137329101562
    4. 'target' → logprob: -12.750137329101562
    5. 'driver' → logprob: -12.875137329101562
    6. '0' → logprob: -14.250137329101562
    7. '   ' → logprob: -16.312637329101562
    8. 'sh' → logprob: -16.562637329101562
    9. '
' → logprob: -16.625137329101562
    10. ' shop' → logprob: -16.812637329101562

Token 1007: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2838088274002075
    2. ':' → logprob: -1.6588088274002075
    3. ' and' → logprob: -2.908808708190918
    4. '       ' → logprob: -6.658808708190918
    5. 'and' → logprob: -7.783808708190918
    6. ' or' → logprob: -8.908808708190918
    7. '<|end|>' → logprob: -9.408808708190918
    8. '           ' → logprob: -9.533808708190918
    9. '               ' → logprob: -9.533808708190918
    10. '):
' → logprob: -9.783808708190918

Token 1008: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15858832001686096
    2. '       ' → logprob: -2.533588409423828
    3. ' and' → logprob: -3.658588409423828
    4. '<|end|>' → logprob: -4.033588409423828
    5. '           ' → logprob: -4.408588409423828
    6. '```' → logprob: -5.658588409423828
    7. ' if' → logprob: -6.033588409423828
    8. 'and' → logprob: -6.533588409423828
    9. '	       ' → logprob: -7.283588409423828
    10. 'if' → logprob: -7.283588409423828

Token 1009: ' driver' (ID: 8931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5359058380126953
    2. 'driver' (adapté à ' driver') → logprob: -0.9109058380126953
    3. '           ' → logprob: -5.035905838012695
    4. 'for' → logprob: -5.660905838012695
    5. 'shop' → logprob: -6.785905838012695
    6. '               ' → logprob: -7.160905838012695
    7. ' if' → logprob: -7.660905838012695
    8. ' driver' → logprob: -9.160905838012695
    9. '                   ' → logprob: -9.535905838012695
    10. '       ' → logprob: -10.035905838012695

Token 1010: '.order' (ID: 25549)
  Prédit: '.route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -13.00000286102295
    3. 'route' → logprob: -15.37500286102295
    4. '.routing' → logprob: -15.75000286102295
    5. '.router' → logprob: -15.87500286102295
    6. '.routes' → logprob: -15.87500286102295
    7. '.plan' → logprob: -17.250003814697266
    8. '       ' → logprob: -17.500003814697266
    9. '.order' → logprob: -17.625003814697266
    10. '.Route' → logprob: -17.750003814697266

Token 1011: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7643429040908813
    2. '.add' → logprob: -1.0143429040908813
    3. '.clear' → logprob: -2.264342784881592
    4. '.update' → logprob: -3.139342784881592
    5. ' =' → logprob: -4.639342784881592
    6. '|' → logprob: -5.014342784881592
    7. '.' → logprob: -5.389342784881592
    8. ' |=' → logprob: -6.514342784881592
    9. '.=' → logprob: -6.764342784881592
    10. '.union' → logprob: -7.389342784881592

Token 1012: ' driver' (ID: 8931)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.022755129262804985
    2. 'set' → logprob: -4.522755146026611
    3. 'driver' → logprob: -4.647755146026611
    4. ' shop' → logprob: -6.397755146026611
    5. 'copy' → logprob: -8.772754669189453
    6. ' set' → logprob: -9.772754669189453
    7. '{' → logprob: -10.272754669189453
    8. ' driver' → logprob: -10.647754669189453
    9. '(shop' → logprob: -10.772754669189453
    10. '   ' → logprob: -11.335254669189453

Token 1013: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.20379339158535004
    2. 'order' → logprob: -1.7037934064865112
    3. '.shop' → logprob: -6.578793525695801
    4. '.plan' → logprob: -7.203793525695801
    5. '.location' → logprob: -9.7037935256958
    6. 'shop' → logprob: -9.8287935256958
    7. '.' → logprob: -10.2037935256958
    8. 'plan' → logprob: -11.2037935256958
    9. '	order' → logprob: -11.3287935256958
    10. ' order' → logprob: -12.0787935256958

Token 1014: ' |' (ID: 1022)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.04108351469039917
    2. '|' → logprob: -3.291083574295044
    3. 'union' → logprob: -6.416083335876465
    4. '.' → logprob: -7.041083335876465
    5. '.copy' → logprob: -8.166083335876465
    6. '.clear' → logprob: -8.666083335876465
    7. '   ' → logprob: -11.041083335876465
    8. ' |' → logprob: -11.166083335876465
    9. '               ' → logprob: -11.916083335876465
    10. '                   ' → logprob: -11.916083335876465

Token 1015: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.16025987267494202
    2. ' shop' → logprob: -1.9102598428726196
    3. '(shop' → logprob: -10.410260200500488
    4. '   ' → logprob: -13.910260200500488
    5. '```' → logprob: -14.410260200500488
    6. ' ' → logprob: -14.410260200500488
    7. 'ship' → logprob: -14.535260200500488
    8. '
' → logprob: -15.160260200500488
    9. 'shopping' → logprob: -15.285260200500488
    10. 'sh' → logprob: -15.410260200500488

Token 1016: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -3.5120287066092715e-05
    2. 'order' → logprob: -10.500035285949707
    3. '.' → logprob: -12.375035285949707
    4. '	order' → logprob: -14.500035285949707
    5. ' .' → logprob: -14.625035285949707
    6. '`.' → logprob: -14.750035285949707
    7. '```' → logprob: -14.750035285949707
    8. '_order' → logprob: -15.250035285949707
    9. '.Order' → logprob: -15.375035285949707
    10. ' order' → logprob: -15.625035285949707

Token 1017: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011030025780200958
    2. '           ' → logprob: -4.636030197143555
    3. '<|end|>' → logprob: -7.261030197143555
    4. '
' → logprob: -8.261030197143555
    5. '       ' → logprob: -8.636030197143555
    6. '                   ' → logprob: -10.136030197143555
    7. '	       ' → logprob: -10.761030197143555
    8. '<|end|>' → logprob: -10.886030197143555
    9. '		       ' → logprob: -11.136030197143555
    10. '	           ' → logprob: -11.761030197143555

Token 1018: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003927725832909346
    2. '           ' → logprob: -5.878927707672119
    3. '       ' → logprob: -7.253927707672119
    4. '<|end|>' → logprob: -8.503928184509277
    5. '                   ' → logprob: -10.128928184509277
    6. '	       ' → logprob: -10.503928184509277
    7. '		       ' → logprob: -10.628928184509277
    8. '<|end|>' → logprob: -10.878928184509277
    9. '	           ' → logprob: -11.003928184509277
    10. '```' → logprob: -11.003928184509277

Token 1019: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' (adapté à ' shop') → logprob: -0.004666030406951904
    2. ' shop' → logprob: -5.504665851593018
    3. '               ' → logprob: -7.504665851593018
    4. '           ' → logprob: -11.254666328430176
    5. '                   ' → logprob: -11.379666328430176
    6. '(shop' → logprob: -12.004666328430176
    7. ' ' → logprob: -13.629666328430176
    8. '.shop' → logprob: -13.879666328430176
    9. 'ship' → logprob: -14.379666328430176
    10. '   ' → logprob: -14.379666328430176

Token 1020: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -8.256334695033729e-05
    2. 'order' → logprob: -9.750082969665527
    3. '.' → logprob: -10.875082969665527
    4. '	order' → logprob: -12.500082969665527
    5. '$order' → logprob: -14.250082969665527
    6. '.shop' → logprob: -15.375082969665527
    7. '.clear' → logprob: -15.750082969665527
    8. ' .' → logprob: -16.25008201599121
    9. '.Order' → logprob: -16.50008201599121
    10. ' order' → logprob: -16.50008201599121

Token 1021: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04883239418268204
    2. '.clear' → logprob: -3.048832416534424
    3. ' =' → logprob: -8.423831939697266
    4. '=set' → logprob: -10.923831939697266
    5. 'clear' → logprob: -11.923831939697266
    6. '.=' → logprob: -14.923831939697266
    7. '.' → logprob: -16.173831939697266
    8. '	clear' → logprob: -16.173831939697266
    9. '.Clear' → logprob: -17.048831939697266
    10. ' clear' → logprob: -17.173831939697266

Token 1022: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0001234428636962548
    2. ' set' → logprob: -9.000123023986816
    3. '{}' → logprob: -17.875123977661133
    4. '=set' → logprob: -18.500123977661133
    5. '	set' → logprob: -18.750123977661133
    6. '{' → logprob: -19.000123977661133
    7. '(set' → logprob: -21.125123977661133
    8. ')set' → logprob: -22.250123977661133
    9. ' ' → logprob: -22.250123977661133
    10. 'se' → logprob: -22.625123977661133

Token 1023: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.475995272397995
    2. '()' → logprob: -0.9759953022003174
    3. '               ' → logprob: -6.350995063781738
    4. '()

' → logprob: -9.850995063781738
    5. '()
' → logprob: -10.100995063781738
    6. '           ' → logprob: -10.600995063781738
    7. '()\' → logprob: -10.975995063781738
    8. '();' → logprob: -11.475995063781738
    9. '(),' → logprob: -12.225995063781738
    10. '()`' → logprob: -12.975995063781738

Token 1024: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027799736708402634
    2. '       ' → logprob: -3.6527998447418213
    3. '               ' → logprob: -7.402799606323242
    4. '	       ' → logprob: -7.777799606323242
    5. '   ' → logprob: -9.152799606323242
    6. '	' → logprob: -9.152799606323242
    7. '<|end|>' → logprob: -9.152799606323242
    8. '		' → logprob: -10.402799606323242
    9. '	   ' → logprob: -10.652799606323242
    10. '
' → logprob: -10.652799606323242

Token 1025: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002627977170050144
    2. '       ' → logprob: -6.002627849578857
    3. '   ' → logprob: -9.377628326416016
    4. '<|end|>' → logprob: -10.127628326416016
    5. '	       ' → logprob: -12.127628326416016
    6. '```' → logprob: -12.252628326416016
    7. '	   ' → logprob: -12.627628326416016
    8. '<|end|>' → logprob: -12.752628326416016
    9. '               ' → logprob: -13.127628326416016
    10. 'if' (adapté à ' if') → logprob: -13.252628326416016

Token 1026: ' driver' (ID: 8931)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.18846580386161804
    2. 'not' → logprob: -2.4384658336639404
    3. 'len' → logprob: -3.3134658336639404
    4. ' driver' → logprob: -3.5634658336639404
    5. ' not' → logprob: -4.063465595245361
    6. ' len' → logprob: -6.063465595245361
    7. '(driver' → logprob: -9.68846607208252
    8. 'self' → logprob: -10.31346607208252
    9. '   ' → logprob: -10.43846607208252
    10. 'dr' → logprob: -10.81346607208252

Token 1027: '.on' (ID: 5158)
  Prédit: '.on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.on' → logprob: -0.002182976808398962
    2. '.route' → logprob: -6.877182960510254
    3. '.location' → logprob: -7.877182960510254
    4. '.plan' → logprob: -8.127182960510254
    5. '.next' → logprob: -8.252182960510254
    6. '.move' → logprob: -9.252182960510254
    7. '.order' → logprob: -9.752182960510254
    8. '   ' → logprob: -11.377182960510254
    9. '.' → logprob: -11.502182960510254
    10. 'on' → logprob: -12.002182960510254

Token 1028: 'Route' (ID: 7656)
  Prédit: 'Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -6.704273118884885e-07
    2. 'route' → logprob: -14.750000953674316
    3. '_route' → logprob: -16.5
    4. '	Route' → logprob: -16.5
    5. '(Route' → logprob: -18.25
    6. '<Route' → logprob: -18.375
    7. '.Route' → logprob: -19.0
    8. 'Road' → logprob: -19.375
    9. ' Route' → logprob: -19.75
    10. '_ROUTE' → logprob: -20.375

Token 1029: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014164102263748646
    2. '()==' → logprob: -4.264163970947266
    3. '==' → logprob: -15.139163970947266
    4. '()<<' → logprob: -16.514163970947266
    5. '()!=' → logprob: -16.889163970947266
    6. '()<' → logprob: -17.014163970947266
    7. ' ()' → logprob: -17.139163970947266
    8. '():' → logprob: -17.139163970947266
    9. '():
' → logprob: -17.389163970947266
    10. '()>' → logprob: -17.514163970947266

Token 1030: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07227066159248352
    2. ' ==' → logprob: -2.822270631790161
    3. '()==' → logprob: -4.69727087020874
    4. '()' → logprob: -7.32227087020874
    5. 'False' → logprob: -9.322270393371582
    6. '==
' → logprob: -9.572270393371582
    7. ')==' → logprob: -9.697270393371582
    8. '(False' → logprob: -9.697270393371582
    9. ':' → logprob: -9.822270393371582
    10. ':
' → logprob: -10.197270393371582

Token 1031: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.006907890550792217
    2. ' False' → logprob: -5.506907939910889
    3. 'True' → logprob: -5.881907939910889
    4. ' True' → logprob: -10.25690746307373
    5. '(False' → logprob: -15.00690746307373
    6. '   ' → logprob: -15.38190746307373
    7. 'Fal' → logprob: -16.131908416748047
    8. 'F' → logprob: -16.131908416748047
    9. '0' → logprob: -16.381908416748047
    10. '=False' → logprob: -16.881908416748047

Token 1032: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10171367973089218
    2. ':' → logprob: -2.6017136573791504
    3. '       ' → logprob: -3.8517136573791504
    4. '():
' → logprob: -7.35171365737915
    5. ' and' → logprob: -7.97671365737915
    6. '):
' → logprob: -9.476714134216309
    7. '           ' → logprob: -10.226714134216309
    8. '   ' → logprob: -10.226714134216309
    9. 'and' → logprob: -10.351714134216309
    10. ' or' → logprob: -10.351714134216309

Token 1033: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1396716684103012
    2. '           ' → logprob: -2.139671564102173
    3. '               ' → logprob: -4.389671802520752
    4. '   ' → logprob: -9.264671325683594
    5. '	       ' → logprob: -9.764671325683594
    6. ' and' → logprob: -10.139671325683594
    7. '```' → logprob: -11.139671325683594
    8. ',' → logprob: -11.514671325683594
    9. 'driver' → logprob: -12.389671325683594
    10. ':
' → logprob: -12.514671325683594

Token 1034: ' driver' (ID: 8931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0252140760421753
    2. '           ' → logprob: -1.0252140760421753
    3. 'driver' (adapté à ' driver') → logprob: -1.2752140760421753
    4. '               ' → logprob: -6.775214195251465
    5. '   ' → logprob: -6.775214195251465
    6. ' driver' → logprob: -7.400214195251465
    7. '	driver' → logprob: -8.775214195251465
    8. 'dr' → logprob: -9.525214195251465
    9. 'self' → logprob: -10.900214195251465
    10. '(driver' → logprob: -12.275214195251465

Token 1035: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -13.00000286102295
    3. ' .' → logprob: -14.37500286102295
    4. 'route' → logprob: -16.750003814697266
    5. '.rule' → logprob: -17.375003814697266
    6. '.router' → logprob: -17.750003814697266
    7. '.plan' → logprob: -18.125003814697266
    8. '.move' → logprob: -18.375003814697266
    9. '.queue' → logprob: -18.500003814697266
    10. '$route' → logprob: -18.500003814697266

Token 1036: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.25563865900039673
    2. '()' → logprob: -1.505638599395752
    3. '           ' → logprob: -5.880638599395752
    4. '       ' → logprob: -7.130638599395752
    5. '()
' → logprob: -10.00563907623291
    6. '()\' → logprob: -10.88063907623291
    7. '<|end|>' → logprob: -11.38063907623291
    8. '   ' → logprob: -11.50563907623291
    9. '()

' → logprob: -12.25563907623291
    10. '();' → logprob: -12.50563907623291

Token 1037: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02045195735991001
    2. '	' → logprob: -4.02045202255249
    3. '   ' → logprob: -7.52045202255249
    4. '<|end|>' → logprob: -7.52045202255249
    5. '	       ' → logprob: -7.89545202255249
    6. '           ' → logprob: -8.020451545715332
    7. '               ' → logprob: -8.145451545715332
    8. '	   ' → logprob: -9.895451545715332
    9. '<|end|>' → logprob: -10.520451545715332
    10. '```' → logprob: -10.895451545715332

Token 1038: ' driver' (ID: 8931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1485213041305542
    2. 'driver' (adapté à ' driver') → logprob: -2.2735214233398438
    3. '           ' → logprob: -3.5235214233398438
    4. '   ' → logprob: -5.523521423339844
    5. '               ' → logprob: -7.773521423339844
    6. ' driver' → logprob: -7.773521423339844
    7. '	driver' → logprob: -7.773521423339844
    8. '	' → logprob: -8.773521423339844
    9. '	       ' → logprob: -10.398521423339844
    10. '```' → logprob: -10.648521423339844

Token 1039: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -5.2524021157296374e-05
    2. '.' → logprob: -9.875052452087402
    3. ' .' → logprob: -14.125052452087402
    4. '.m' → logprob: -16.62505340576172
    5. '.Move' → logprob: -16.75005340576172
    6. '.mov' → logprob: -17.25005340576172
    7. '​.' → logprob: -17.62505340576172
    8. '	move' → logprob: -17.75005340576172
    9. '.
' → logprob: -17.75005340576172
    10. '().' → logprob: -18.25005340576172

Token 1040: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1041: '           ' (ID: 352)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.2578889727592468
    2. 'for' → logprob: -2.1328890323638916
    3. 'while' → logprob: -2.8828890323638916
    4. '<|end|>' → logprob: -3.5078890323638916
    5. 'if' → logprob: -3.8828890323638916
    6. '#' → logprob: -7.7578887939453125
    7. '<|end|>' → logprob: -7.7578887939453125
    8. ' out' → logprob: -8.132888793945312
    9. '...' → logprob: -8.632888793945312
    10. '
' → logprob: -9.007888793945312

Token 1042: ' '''
' (ID: 26725)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1043: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2154535949230194
    2. '       ' → logprob: -1.9654536247253418
    3. 'out' → logprob: -3.715453624725342
    4. ' out' → logprob: -4.090453624725342
    5. '   ' → logprob: -5.590453624725342
    6. '<|end|>' → logprob: -5.590453624725342
    7. '        ' → logprob: -7.340453624725342
    8. 'if' → logprob: -7.340453624725342
    9. ' if' → logprob: -7.715453624725342
    10. '<|end|>' → logprob: -7.840453624725342

Token 1044: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42136746644973755
    2. 'out' (adapté à ' out') → logprob: -1.7963674068450928
    3. 'for' → logprob: -3.0463674068450928
    4. 'if' → logprob: -3.1713674068450928
    5. '#' → logprob: -3.9213674068450928
    6. ''''' → logprob: -3.9213674068450928
    7. '       ' → logprob: -4.046367645263672
    8. ' out' → logprob: -4.921367645263672
    9. 'print' → logprob: -4.921367645263672
    10. '   ' → logprob: -5.046367645263672

Token 1045: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0019707425963133574
    2. '.' → logprob: -6.5019707679748535
    3. '.flush' → logprob: -7.8769707679748535
    4. '   ' → logprob: -10.251970291137695
    5. '.writerow' → logprob: -11.376970291137695
    6. 'write' → logprob: -11.751970291137695
    7. '.close' → logprob: -11.876970291137695
    8. ' .' → logprob: -12.126970291137695
    9. '.readline' → logprob: -12.126970291137695
    10. '.w' → logprob: -12.126970291137695

Token 1046: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.589126467704773
    2. '("' → logprob: -0.964126467704773
    3. '(' → logprob: -3.7141265869140625
    4. '('\' → logprob: -4.4641265869140625
    5. '("\' → logprob: -4.4641265869140625
    6. '"' → logprob: -5.2141265869140625
    7. '           ' → logprob: -5.7141265869140625
    8. ''' → logprob: -5.7141265869140625
    9. '(""' → logprob: -6.9641265869140625
    10. '(str' → logprob: -7.4641265869140625

Token 1047: 'status' (ID: 6063)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6511741876602173
    2. '\n' → logprob: -0.9011741876602173
    3. '"' → logprob: -3.7761740684509277
    4. '")
' → logprob: -4.276174068450928
    5. ''' → logprob: -4.901174068450928
    6. '')' → logprob: -5.151174068450928
    7. '"+' → logprob: -5.526174068450928
    8. ''\' → logprob: -5.651174068450928
    9. 'driver' → logprob: -6.526174068450928
    10. 'out' → logprob: -6.651174068450928

Token 1048: ' after' (ID: 1934)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2843201458454132
    2. '"' → logprob: -2.784320116043091
    3. ' =' → logprob: -3.409320116043091
    4. '\n' → logprob: -3.534320116043091
    5. '=' → logprob: -4.28432035446167
    6. ' "' → logprob: -4.40932035446167
    7. '"+' → logprob: -4.40932035446167
    8. ':"' → logprob: -4.40932035446167
    9. ' {}\' → logprob: -4.90932035446167
    10. ' at' → logprob: -5.03432035446167

Token 1049: ' :' (ID: 712)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -1.3070796728134155
    2. 'move' → logprob: -1.6820796728134155
    3. 'time' → logprob: -1.8070796728134155
    4. 'step' → logprob: -2.432079792022705
    5. ' step' → logprob: -2.932079792022705
    6. 'run' → logprob: -3.182079792022705
    7. 'curr' → logprob: -3.182079792022705
    8. ' time' → logprob: -3.557079792022705
    9. '"' → logprob: -3.932079792022705
    10. '{}' → logprob: -4.057079792022705

Token 1050: ' ")
' (ID: 31232)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.02134132757782936
    2. 'run' → logprob: -4.896341323852539
    3. '           ' → logprob: -5.896341323852539
    4. 'self' → logprob: -6.146341323852539
    5. '\\' → logprob: -6.646341323852539
    6. ' \' → logprob: -6.896341323852539
    7. ' run' → logprob: -7.021341323852539
    8. 'curr' → logprob: -7.271341323852539
    9. 'step' → logprob: -7.646341323852539
    10. ''\' → logprob: -7.771341323852539

Token 1051: '           ' (ID: 352)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.2560652792453766
    2. '           ' → logprob: -1.6310652494430542
    3. '\n' → logprob: -4.506065368652344
    4. 'for' → logprob: -5.256065368652344
    5. ''\' → logprob: -5.381065368652344
    6. ' out' → logprob: -5.631065368652344
    7. '+' → logprob: -6.881065368652344
    8. '               ' → logprob: -7.131065368652344
    9. '   ' → logprob: -7.131065368652344
    10. '"\' → logprob: -7.256065368652344

Token 1052: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.6353135108947754
    2. ''\' → logprob: -1.3853135108947754
    3. 'for' → logprob: -2.3853135108947754
    4. '"\' → logprob: -3.0103135108947754
    5. 'driver' → logprob: -3.6353135108947754
    6. '\n' → logprob: -3.8853135108947754
    7. '           ' → logprob: -4.885313510894775
    8. ''''
' → logprob: -5.260313510894775
    9. '"""
' → logprob: -5.385313510894775
    10. ' out' → logprob: -5.635313510894775

Token 1053: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0020014385227113962
    2. '.' → logprob: -6.2520012855529785
    3. 'write' → logprob: -9.877001762390137
    4. '.flush' → logprob: -11.252001762390137
    5. '.w' → logprob: -12.127001762390137
    6. '   ' → logprob: -13.127001762390137
    7. ' .' → logprob: -14.752001762390137
    8. '.append' → logprob: -15.752001762390137
    9. '       ' → logprob: -16.12700080871582
    10. '.
' → logprob: -16.50200080871582

Token 1054: '("' (ID: 568)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.23149342834949493
    2. 'str' → logprob: -1.6064934730529785
    3. '("' → logprob: -6.1064934730529785
    4. 'repr' → logprob: -6.3564934730529785
    5. '"' → logprob: -7.7314934730529785
    6. '("("' → logprob: -7.9814934730529785
    7. '"(' → logprob: -8.48149299621582
    8. '("(' → logprob: -8.60649299621582
    9. '("\"' → logprob: -8.73149299621582
    10. '(' → logprob: -8.85649299621582

Token 1055: 'shop' (ID: 10595)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0053971572779119015
    2. '"' → logprob: -6.380397319793701
    3. ''' → logprob: -6.880397319793701
    4. '"\' → logprob: -7.130397319793701
    5. 'repr' → logprob: -7.380397319793701
    6. ''\' → logprob: -7.630397319793701
    7. '(str' → logprob: -8.630396842956543
    8. ' str' → logprob: -8.755396842956543
    9. '"%' → logprob: -9.880396842956543
    10. '''.' → logprob: -9.880396842956543

Token 1056: ' status' (ID: 4495)
  Prédit: '.order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.014530729502439499
    2. 'order' → logprob: -4.764530658721924
    3. ' order' → logprob: -5.889530658721924
    4. '.orders' → logprob: -7.014530658721924
    5. '.status' → logprob: -7.389530658721924
    6. '".' → logprob: -7.639530658721924
    7. '"' → logprob: -8.764531135559082
    8. '_order' → logprob: -8.764531135559082
    9. '.' → logprob: -9.014531135559082
    10. '.location' → logprob: -9.764531135559082

Token 1057: ' :' (ID: 712)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5311243534088135
    2. ':' → logprob: -1.5311243534088135
    3. '+' → logprob: -2.5311243534088135
    4. ' =' → logprob: -3.9061243534088135
    5. '")
' → logprob: -4.281124114990234
    6. '"' → logprob: -4.406124114990234
    7. '=' → logprob: -4.781124114990234
    8. '\n' → logprob: -4.906124114990234
    9. 'shop' → logprob: -5.031124114990234
    10. ''' → logprob: -5.281124114990234

Token 1058: ' "' (ID: 392)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.07616101950407028
    2. '"' → logprob: -3.0761609077453613
    3. ' str' → logprob: -4.326160907745361
    4. '""' → logprob: -5.951160907745361
    5. 'shop' → logprob: -6.076160907745361
    6. '")
' → logprob: -6.201160907745361
    7. ''' → logprob: -6.451160907745361
    8. '")' → logprob: -7.451160907745361
    9. '",' → logprob: -7.576160907745361
    10. 'repr' → logprob: -7.576160907745361

Token 1059: ' +' (ID: 659)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.5171682834625244
    2. 'str' → logprob: -2.0171682834625244
    3. '+' → logprob: -2.7671682834625244
    4. ''' → logprob: -3.6421682834625244
    5. '"' → logprob: -3.6421682834625244
    6. 'out' → logprob: -3.7671682834625244
    7. ')' → logprob: -3.7671682834625244
    8. ' +' → logprob: -3.7671682834625244
    9. ' shop' → logprob: -3.7671682834625244
    10. '")' → logprob: -4.142168045043945

Token 1060: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0006988536333665252
    2. 'repr' → logprob: -8.000699043273926
    3. '"' → logprob: -8.250699043273926
    4. ' str' → logprob: -10.000699043273926
    5. '"'' → logprob: -10.500699043273926
    6. ''' → logprob: -11.750699043273926
    7. '(str' → logprob: -11.875699043273926
    8. ''"' → logprob: -12.750699043273926
    9. '	str' → logprob: -13.125699043273926
    10. '   ' → logprob: -13.250699043273926

Token 1061: '(shop' (ID: 170425)
  Prédit: '(shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shop' → logprob: -0.0002394170151092112
    2. 'shop' → logprob: -8.375239372253418
    3. '(driver' → logprob: -12.750239372253418
    4. '(len' → logprob: -12.875239372253418
    5. '(' → logprob: -13.125239372253418
    6. '(sh' → logprob: -15.500239372253418
    7. '((' → logprob: -15.625239372253418
    8. 'len' → logprob: -16.000240325927734
    9. '(s' → logprob: -16.000240325927734
    10. '(order' → logprob: -16.125240325927734

Token 1062: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.005677179899066687
    2. '.' → logprob: -5.255677223205566
    3. '.orders' → logprob: -8.380677223205566
    4. '.status' → logprob: -9.255677223205566
    5. ' .' → logprob: -9.380677223205566
    6. ')' → logprob: -11.380677223205566
    7. 'order' → logprob: -12.755677223205566
    8. '.user' → logprob: -13.005677223205566
    9. ').' → logprob: -13.130677223205566
    10. '.shop' → logprob: -13.380677223205566

Token 1063: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009997719898819923
    2. '))
' → logprob: -4.884997844696045
    3. '))' → logprob: -6.509997844696045
    4. ')+' → logprob: -7.384997844696045
    5. ')+"' → logprob: -9.509997367858887
    6. ')+'' → logprob: -9.634997367858887
    7. '           ' → logprob: -9.884997367858887
    8. ' )' → logprob: -10.509997367858887
    9. '   ' → logprob: -11.259997367858887
    10. ')
' → logprob: -11.384997367858887

Token 1064: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009089223109185696
    2. 'out' → logprob: -4.75908899307251
    3. '```' → logprob: -9.384089469909668
    4. '   ' → logprob: -9.634089469909668
    5. '       ' → logprob: -10.009089469909668
    6. '		' → logprob: -10.009089469909668
    7. '+' → logprob: -10.009089469909668
    8. ' out' → logprob: -10.134089469909668
    9. '          ' → logprob: -10.134089469909668
    10. ')' → logprob: -10.509089469909668

Token 1065: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.28438669443130493
    2. '           ' → logprob: -1.5343866348266602
    3. '\n' → logprob: -3.90938663482666
    4. ' out' → logprob: -4.78438663482666
    5. ''\' → logprob: -6.90938663482666
    6. '
' → logprob: -7.03438663482666
    7. '"\' → logprob: -7.78438663482666
    8. '   ' → logprob: -8.40938663482666
    9. '```' → logprob: -8.53438663482666
    10. '``' → logprob: -8.65938663482666

Token 1066: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -8.41866585687967e-06
    2. '.' → logprob: -11.875008583068848
    3. 'write' → logprob: -14.500008583068848
    4. ' .' → logprob: -15.375008583068848
    5. '.w' → logprob: -15.500008583068848
    6. '.Write' → logprob: -15.750008583068848
    7. '.writerow' → logprob: -15.750008583068848
    8. '.readline' → logprob: -16.00000762939453
    9. '.
' → logprob: -18.12500762939453
    10. '.flush' → logprob: -18.25000762939453

Token 1067: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10302851349115372
    2. '("\' → logprob: -2.3530285358428955
    3. '("("' → logprob: -6.728028297424316
    4. '(' → logprob: -7.353028297424316
    5. '(",' → logprob: -7.853028297424316
    6. '(
' → logprob: -8.353028297424316
    7. '(":' → logprob: -8.978028297424316
    8. '('' → logprob: -9.353028297424316
    9. '("(' → logprob: -9.603028297424316
    10. '('\' → logprob: -10.228028297424316

Token 1068: 'driver' (ID: 18821)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.08510435372591019
    2. ''\' → logprob: -2.835104465484619
    3. '\n' → logprob: -3.835104465484619
    4. ' "\' → logprob: -6.960104465484619
    5. ' '\' → logprob: -9.460103988647461
    6. '"' → logprob: -9.460103988647461
    7. '("\' → logprob: -10.335103988647461
    8. ')
' → logprob: -10.460103988647461
    9. '('\' → logprob: -10.960103988647461
    10. '+"\' → logprob: -11.085103988647461

Token 1069: ' status' (ID: 4495)
  Prédit: ' status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' status' → logprob: -0.06896856427192688
    2. '.status' → logprob: -2.8189685344696045
    3. 'status' → logprob: -5.068968772888184
    4. '_status' → logprob: -8.318968772888184
    5. '	status' → logprob: -9.443968772888184
    6. ')' → logprob: -9.818968772888184
    7. ''s' → logprob: -9.943968772888184
    8. ' order' → logprob: -9.943968772888184
    9. '.order' → logprob: -10.568968772888184
    10. ' .' → logprob: -10.818968772888184

Token 1070: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.03415942192077637
    2. ':' → logprob: -3.4091594219207764
    3. ' +' → logprob: -7.6591596603393555
    4. '+' → logprob: -11.409159660339355
    5. '"' → logprob: -12.034159660339355
    6. ' ' → logprob: -12.534159660339355
    7. '           ' → logprob: -13.034159660339355
    8. '          ' → logprob: -13.159159660339355
    9. ' =' → logprob: -13.534159660339355
    10. '         ' → logprob: -13.659159660339355

Token 1071: ' ")
' (ID: 31232)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.1272628903388977
    2. '"' → logprob: -2.127262830734253
    3. ' str' → logprob: -9.002263069152832
    4. ''' → logprob: -9.502263069152832
    5. ' '' → logprob: -9.627263069152832
    6. 'str' → logprob: -10.252263069152832
    7. ' ' → logprob: -11.252263069152832
    8. ' "\' → logprob: -12.002263069152832
    9. '"\' → logprob: -12.127263069152832
    10. ' ("' → logprob: -12.752263069152832

Token 1072: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5855825543403625
    2. 'out' → logprob: -0.8355825543403625
    3. ' out' → logprob: -4.710582733154297
    4. '```' → logprob: -8.585582733154297
    5. '       ' → logprob: -8.960582733154297
    6. '``' → logprob: -9.835582733154297
    7. '          ' → logprob: -10.085582733154297
    8. '   ' → logprob: -10.210582733154297
    9. '(out' → logprob: -10.460582733154297
    10. '               ' → logprob: -10.710582733154297

Token 1073: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.003690097713842988
    2. '           ' → logprob: -6.128690242767334
    3. ' out' → logprob: -6.753690242767334
    4. 'for' → logprob: -8.128689765930176
    5. '```' → logprob: -11.128689765930176
    6. '``' → logprob: -11.628689765930176
    7. '       ' → logprob: -12.253689765930176
    8. '	out' → logprob: -13.003689765930176
    9. '(out' → logprob: -13.253689765930176
    10. '   ' → logprob: -13.253689765930176

Token 1074: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0033610546961426735
    2. 'write' → logprob: -6.003361225128174
    3. 'out' → logprob: -7.128361225128174
    4. '   ' → logprob: -10.128360748291016
    5. '.' → logprob: -10.503360748291016
    6. ' .' → logprob: -13.003360748291016
    7. '```' → logprob: -13.003360748291016
    8. '       ' → logprob: -13.378360748291016
    9. '
' → logprob: -13.878360748291016
    10. 'Out' → logprob: -14.128360748291016

Token 1075: '("' (ID: 568)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.2964365482330322
    2. 'str' → logprob: -2.0464365482330322
    3. '("' → logprob: -2.9214365482330322
    4. '"' → logprob: -2.9214365482330322
    5. '(' → logprob: -4.546436309814453
    6. '("("' → logprob: -5.046436309814453
    7. '(""' → logprob: -7.171436309814453
    8. '"(' → logprob: -7.421436309814453
    9. ' str' → logprob: -7.546436309814453
    10. '("(' → logprob: -9.171436309814453

Token 1076: 'order' (ID: 2143)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.3916940987110138
    2. '"' → logprob: -1.1416940689086914
    3. ' str' → logprob: -6.641694068908691
    4. '+' → logprob: -7.016694068908691
    5. '"\' → logprob: -7.516694068908691
    6. ''' → logprob: -7.766694068908691
    7. ' "' → logprob: -7.891694068908691
    8. ' +' → logprob: -8.141694068908691
    9. '"+' → logprob: -8.391694068908691
    10. '(str' → logprob: -8.391694068908691

Token 1077: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.498732328414917
    2. ' :' → logprob: -1.373732328414917
    3. ' =' → logprob: -2.248732328414917
    4. 's' → logprob: -4.248732566833496
    5. '=' → logprob: -5.248732566833496
    6. ' +' → logprob: -5.498732566833496
    7. '"' → logprob: -5.498732566833496
    8. ' set' → logprob: -6.623732566833496
    9. ' status' → logprob: -7.623732566833496
    10. ' size' → logprob: -7.748732566833496

Token 1078: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5829064846038818
    2. '"' → logprob: -0.8329064846038818
    3. ' str' → logprob: -5.332906723022461
    4. 'str' → logprob: -7.332906723022461
    5. '")' → logprob: -8.207906723022461
    6. '"+' → logprob: -8.207906723022461
    7. ' "+' → logprob: -8.332906723022461
    8. ' set' → logprob: -8.457906723022461
    9. ''' → logprob: -8.832906723022461
    10. ' '' → logprob: -9.207906723022461

Token 1079: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4238358736038208
    2. ' +' → logprob: -1.2988358736038208
    3. 'str' → logprob: -3.4238357543945312
    4. '"' → logprob: -3.4238357543945312
    5. ')' → logprob: -5.423835754394531
    6. ' str' → logprob: -6.298835754394531
    7. ''' → logprob: -8.548835754394531
    8. ' "' → logprob: -8.673835754394531
    9. '"+' → logprob: -8.798835754394531
    10. '+"' → logprob: -8.798835754394531

Token 1080: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0011772511061280966
    2. ' str' → logprob: -6.7511773109436035
    3. '"' → logprob: -12.001176834106445
    4. '""' → logprob: -14.751176834106445
    5. '(str' → logprob: -16.126176834106445
    6. '	str' → logprob: -16.251176834106445
    7. ' ' → logprob: -16.501176834106445
    8. ''' → logprob: -16.876176834106445
    9. '   ' → logprob: -17.376176834106445
    10. '
' → logprob: -17.876176834106445

Token 1081: '(driver' (ID: 40061)
  Prédit: '(driver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -0.048731908202171326
    2. 'driver' → logprob: -3.048731803894043
    3. '(' → logprob: -8.923731803894043
    4. '(dr' → logprob: -12.298731803894043
    5. ' driver' → logprob: -13.048731803894043
    6. '(str' → logprob: -13.298731803894043
    7. 'str' → logprob: -13.548731803894043
    8. '	driver' → logprob: -14.298731803894043
    9. 'self' → logprob: -15.798731803894043
    10. '(
' → logprob: -15.923731803894043

Token 1082: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.00022129806166049093
    2. '.route' → logprob: -9.125221252441406
    3. '.plan' → logprob: -9.875221252441406
    4. '.' → logprob: -10.125221252441406
    5. '".' → logprob: -11.500221252441406
    6. ' .' → logprob: -12.750221252441406
    7. 'order' → logprob: -13.125221252441406
    8. ''.' → logprob: -13.250221252441406
    9. '`.' → logprob: -14.125221252441406
    10. '	order' → logprob: -14.375221252441406

Token 1083: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02778211049735546
    2. ')
' → logprob: -4.652781963348389
    3. '))
' → logprob: -4.652781963348389
    4. '           ' → logprob: -5.027781963348389
    5. '))' → logprob: -7.027781963348389
    6. ')+' → logprob: -7.527781963348389
    7. '   ' → logprob: -9.027782440185547
    8. '               ' → logprob: -10.152782440185547
    9. '          ' → logprob: -10.527782440185547
    10. 'out' → logprob: -10.652782440185547

Token 1084: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7052906155586243
    2. '"\' → logprob: -1.7052905559539795
    3. ')' → logprob: -1.8302905559539795
    4. '"' → logprob: -2.3302905559539795
    5. '")' → logprob: -3.9552905559539795
    6. '           ' → logprob: -3.9552905559539795
    7. '")
' → logprob: -4.580290794372559
    8. ' out' → logprob: -5.955290794372559
    9. 'out' → logprob: -6.080290794372559
    10. '   ' → logprob: -6.205290794372559

Token 1085: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008407007902860641
    2. 'out' → logprob: -4.883407115936279
    3. ' out' → logprob: -7.633407115936279
    4. '       ' → logprob: -9.008406639099121
    5. ')' → logprob: -9.883406639099121
    6. '   ' → logprob: -9.883406639099121
    7. '          ' → logprob: -10.633406639099121
    8. '               ' → logprob: -11.008406639099121
    9. ')
' → logprob: -11.508406639099121
    10. '<|end|>' → logprob: -12.008406639099121

Token 1086: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19009140133857727
    2. 'out' (adapté à ' out') → logprob: -2.940091371536255
    3. ')' → logprob: -3.065091371536255
    4. ')
' → logprob: -3.440091371536255
    5. ' out' → logprob: -3.815091371536255
    6. ')\' → logprob: -5.190091609954834
    7. '\n' → logprob: -5.315091609954834
    8. '       ' → logprob: -6.440091609954834
    9. '<|end|>' → logprob: -6.815091609954834
    10. '   ' → logprob: -6.940091609954834

Token 1087: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0004458044422790408
    2. '.' → logprob: -7.87544584274292
    3. ').' → logprob: -10.625445365905762
    4. '.writerow' → logprob: -11.250445365905762
    5. '.readline' → logprob: -12.250445365905762
    6. ' .' → logprob: -12.250445365905762
    7. ')' → logprob: -12.750445365905762
    8. '.out' → logprob: -13.125445365905762
    9. 'write' → logprob: -13.250445365905762
    10. '.w' → logprob: -13.375445365905762

Token 1088: '("|' (ID: 83692)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.4384494125843048
    2. '("\' → logprob: -1.0634493827819824
    3. '('\' → logprob: -6.188449382781982
    4. '(' → logprob: -6.313449382781982
    5. '"' → logprob: -6.563449382781982
    6. '("("' → logprob: -6.813449382781982
    7. '(",' → logprob: -7.063449382781982
    8. '('' → logprob: -7.063449382781982
    9. '(str' → logprob: -7.813449382781982
    10. '"\' → logprob: -8.06344985961914

Token 1089: ' plan' (ID: 3496)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.1542583853006363
    2. '\n' → logprob: -3.2792584896087646
    3. ''\' → logprob: -3.6542584896087646
    4. ' "\' → logprob: -3.6542584896087646
    5. '"' → logprob: -3.9042584896087646
    6. ')
' → logprob: -4.7792582511901855
    7. '")' → logprob: -5.1542582511901855
    8. ')' → logprob: -5.2792582511901855
    9. ' "' → logprob: -5.6542582511901855
    10. 'str' → logprob: -6.0292582511901855

Token 1090: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4743795692920685
    2. ':' → logprob: -0.9743795394897461
    3. '"' → logprob: -8.849379539489746
    4. ' =' → logprob: -9.724379539489746
    5. '=' → logprob: -10.099379539489746
    6. '")' → logprob: -11.849379539489746
    7. ' ' → logprob: -12.474379539489746
    8. '   ' → logprob: -12.474379539489746
    9. ':"' → logprob: -12.474379539489746
    10. ' :"' → logprob: -12.474379539489746

Token 1091: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5525533556938171
    2. '"' → logprob: -0.9275533556938171
    3. ' str' → logprob: -3.677553415298462
    4. 'str' → logprob: -6.302553176879883
    5. ' '' → logprob: -7.177553176879883
    6. ''' → logprob: -7.552553176879883
    7. ' ' → logprob: -8.552553176879883
    8. ')' → logprob: -8.927553176879883
    9. '")' → logprob: -9.427553176879883
    10. '",' → logprob: -10.802553176879883

Token 1092: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25000590085983276
    2. ' +' → logprob: -1.8750059604644775
    3. 'str' → logprob: -3.0000059604644775
    4. '"' → logprob: -4.375005722045898
    5. ')' → logprob: -5.625005722045898
    6. ')
' → logprob: -7.625005722045898
    7. '(str' → logprob: -8.500005722045898
    8. '+"' → logprob: -8.500005722045898
    9. '")' → logprob: -8.625005722045898
    10. ' str' → logprob: -9.000005722045898

Token 1093: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.004679088015109301
    2. ' str' → logprob: -5.379679203033447
    3. '"' → logprob: -9.879678726196289
    4. ''' → logprob: -12.879678726196289
    5. '(str' → logprob: -12.879678726196289
    6. '	str' → logprob: -14.504678726196289
    7. '   ' → logprob: -14.754678726196289
    8. ' ' → logprob: -15.004678726196289
    9. '""' → logprob: -15.004678726196289
    10. '[str' → logprob: -15.629678726196289

Token 1094: '(driver' (ID: 40061)
  Prédit: '(driver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -0.00044163595885038376
    2. '(str' → logprob: -7.875441551208496
    3. 'str' → logprob: -10.500441551208496
    4. 'driver' → logprob: -10.875441551208496
    5. '(' → logprob: -11.375441551208496
    6. '(dr' → logprob: -12.625441551208496
    7. 's' → logprob: -16.500442504882812
    8. '(
' → logprob: -16.875442504882812
    9. '(sender' → logprob: -17.000442504882812
    10. '((' → logprob: -17.125442504882812

Token 1095: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.00026169343618676066
    2. '.route' → logprob: -8.750261306762695
    3. '.order' → logprob: -9.250261306762695
    4. 'plan' → logprob: -13.125261306762695
    5. ' .' → logprob: -13.250261306762695
    6. '[' → logprob: -14.125261306762695
    7. '   ' → logprob: -14.125261306762695
    8. '.' → logprob: -14.250261306762695
    9. ').' → logprob: -15.375261306762695
    10. '.pl' → logprob: -15.625261306762695

Token 1096: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03290092945098877
    2. ')+' → logprob: -4.532900810241699
    3. ')
' → logprob: -4.907900810241699
    4. '")' → logprob: -5.032900810241699
    5. '))
' → logprob: -6.282900810241699
    6. '           ' → logprob: -6.532900810241699
    7. '))' → logprob: -6.907900810241699
    8. ')")' → logprob: -7.282900810241699
    9. ')")
' → logprob: -7.282900810241699
    10. '   ' → logprob: -7.907900810241699

Token 1097: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6561371684074402
    2. '")' → logprob: -2.156137228012085
    3. '"\' → logprob: -2.156137228012085
    4. '           ' → logprob: -2.281137228012085
    5. '")
' → logprob: -2.406137228012085
    6. ')' → logprob: -3.531137228012085
    7. ')\' → logprob: -4.406136989593506
    8. ''\' → logprob: -5.406136989593506
    9. '\n' → logprob: -5.531136989593506
    10. 'out' → logprob: -6.531136989593506

Token 1098: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09168405830860138
    2. 'out' → logprob: -2.466684103012085
    3. ' out' → logprob: -6.466683864593506
    4. '       ' → logprob: -7.466683864593506
    5. '   ' → logprob: -8.591684341430664
    6. ')' → logprob: -9.216684341430664
    7. '```' → logprob: -9.341684341430664
    8. '          ' → logprob: -9.591684341430664
    9. ')
' → logprob: -10.216684341430664
    10. '               ' → logprob: -10.341684341430664

Token 1099: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6724746823310852
    2. 'out' (adapté à ' out') → logprob: -0.7974746823310852
    3. ' out' → logprob: -3.2974746227264404
    4. ')' → logprob: -7.2974748611450195
    5. '       ' → logprob: -8.04747486114502
    6. ')
' → logprob: -8.42247486114502
    7. '   ' → logprob: -8.42247486114502
    8. '```' → logprob: -8.92247486114502
    9. '          ' → logprob: -9.17247486114502
    10. '	out' → logprob: -9.42247486114502

Token 1100: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -2.4987974029500037e-05
    2. '.' → logprob: -12.000024795532227
    3. 'write' → logprob: -12.250024795532227
    4. ' .' → logprob: -12.750024795532227
    5. 'out' → logprob: -12.750024795532227
    6. '.append' → logprob: -13.125024795532227
    7. '.writerow' → logprob: -13.750024795532227
    8. '   ' → logprob: -13.875024795532227
    9. '.readline' → logprob: -14.250024795532227
    10. '```' → logprob: -14.375024795532227

Token 1101: '("|' (ID: 83692)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.28292518854141235
    2. '("\' → logprob: -2.1579251289367676
    3. '("("' → logprob: -2.2829251289367676
    4. '("")' → logprob: -4.532925128936768
    5. '(' → logprob: -5.157925128936768
    6. '("(' → logprob: -5.282925128936768
    7. '('' → logprob: -6.032925128936768
    8. '(""' → logprob: -6.782925128936768
    9. '("")
' → logprob: -6.782925128936768
    10. '"' → logprob: -6.907925128936768

Token 1102: ' on' (ID: 402)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19851021468639374
    2. 'location' → logprob: -3.19851016998291
    3. ' location' → logprob: -3.32351016998291
    4. 'target' → logprob: -3.57351016998291
    5. '"\' → logprob: -3.94851016998291
    6. 'next' → logprob: -4.07351016998291
    7. ' next' → logprob: -4.07351016998291
    8. ' target' → logprob: -4.69851016998291
    9. ' driver' → logprob: -5.69851016998291
    10. ''' → logprob: -6.32351016998291

Token 1103: ' route' (ID: 9656)
  Prédit: 'Route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -0.01368468813598156
    2. '_route' → logprob: -4.5136847496032715
    3. 'route' → logprob: -6.0136847496032715
    4. '	Route' → logprob: -9.763684272766113
    5. ' route' → logprob: -10.138684272766113
    6. 'Segment' → logprob: -11.263684272766113
    7. ' Route' → logprob: -11.263684272766113
    8. '<Route' → logprob: -11.388684272766113
    9. '-route' → logprob: -11.638684272766113
    10. '
' → logprob: -11.763684272766113

Token 1104: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8744983673095703
    2. '()' → logprob: -1.3744983673095703
    3. ' :' → logprob: -1.6244983673095703
    4. '():' → logprob: -2.7494983673095703
    5. '(False' → logprob: -3.6244983673095703
    6. ' =' → logprob: -4.37449836730957
    7. '=False' → logprob: -4.74949836730957
    8. '"' → logprob: -5.74949836730957
    9. '")' → logprob: -5.87449836730957
    10. '=True' → logprob: -6.37449836730957

Token 1105: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.1835297793149948
    2. '"' → logprob: -1.8085297346115112
    3. ' str' → logprob: -6.058529853820801
    4. ' '' → logprob: -7.808529853820801
    5. ''' → logprob: -7.933529853820801
    6. 'str' → logprob: -8.3085298538208
    7. ' ' → logprob: -9.5585298538208
    8. ' +' → logprob: -9.6835298538208
    9. ' True' → logprob: -9.8085298538208
    10. ')' → logprob: -10.0585298538208

Token 1106: ' +' (ID: 659)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12821990251541138
    2. ' "' → logprob: -2.3782198429107666
    3. ' +' → logprob: -4.503220081329346
    4. 'str' → logprob: -5.003220081329346
    5. ' str' → logprob: -5.128220081329346
    6. ')' → logprob: -6.878220081329346
    7. '+' → logprob: -6.878220081329346
    8. ''' → logprob: -7.628220081329346
    9. ' ' → logprob: -8.128219604492188
    10. '")' → logprob: -8.378219604492188

Token 1107: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.648687481880188
    2. ' str' → logprob: -1.148687481880188
    3. '"' → logprob: -1.898687481880188
    4. ' "' → logprob: -4.648687362670898
    5. ''' → logprob: -7.648687362670898
    6. '(str' → logprob: -9.023687362670898
    7. 'driver' → logprob: -9.148687362670898
    8. '"\' → logprob: -9.523687362670898
    9. ' driver' → logprob: -10.898687362670898
    10. ' '' → logprob: -11.398687362670898

Token 1108: '(driver' (ID: 40061)
  Prédit: '(driver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -0.0001847062085289508
    2. '(' → logprob: -9.000185012817383
    3. 'driver' → logprob: -10.000185012817383
    4. '(dr' → logprob: -11.250185012817383
    5. ' (' → logprob: -14.750185012817383
    6. '(
' → logprob: -15.125185012817383
    7. 's' → logprob: -15.500185012817383
    8. '	driver' → logprob: -15.750185012817383
    9. ')' → logprob: -15.875185012817383
    10. ' driver' → logprob: -16.000185012817383

Token 1109: '.on' (ID: 5158)
  Prédit: '.on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.on' → logprob: -0.0019882326014339924
    2. '.next' → logprob: -6.376988410949707
    3. 'on' → logprob: -8.501988410949707
    4. '().' → logprob: -10.376988410949707
    5. '.location' → logprob: -10.876988410949707
    6. '.status' → logprob: -11.876988410949707
    7. '.move' → logprob: -11.876988410949707
    8. '.target' → logprob: -12.501988410949707
    9. 'next' → logprob: -12.876988410949707
    10. '.out' → logprob: -12.876988410949707

Token 1110: 'Route' (ID: 7656)
  Prédit: 'Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -0.00024834630312398076
    2. '_route' → logprob: -8.875247955322266
    3. '	Route' → logprob: -10.250247955322266
    4. 'route' → logprob: -10.375247955322266
    5. ')' → logprob: -11.625247955322266
    6. '.Route' → logprob: -11.750247955322266
    7. '\Route' → logprob: -11.875247955322266
    8. '<Route' → logprob: -11.875247955322266
    9. '```' → logprob: -13.000247955322266
    10. ' Route' → logprob: -13.250247955322266

Token 1111: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.013944639824330807
    2. '())
' → logprob: -5.013944625854492
    3. '()),' → logprob: -5.763944625854492
    4. '()))
' → logprob: -6.138944625854492
    5. '()' → logprob: -6.888944625854492
    6. '()))' → logprob: -7.263944625854492
    7. ')' → logprob: -9.763944625854492
    8. '())))
' → logprob: -9.888944625854492
    9. '()),
' → logprob: -10.763944625854492
    10. '   ' → logprob: -11.763944625854492

Token 1112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03458535671234131
    2. ')' → logprob: -4.159585475921631
    3. 'out' → logprob: -4.159585475921631
    4. '       ' → logprob: -7.159585475921631
    5. ')
' → logprob: -7.909585475921631
    6. '   ' → logprob: -8.034584999084473
    7. ' out' → logprob: -8.034584999084473
    8. '               ' → logprob: -8.284584999084473
    9. '		' → logprob: -8.909584999084473
    10. '          ' → logprob: -8.909584999084473

Token 1113: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07257047295570374
    2. ')' → logprob: -3.447570562362671
    3. ')
' → logprob: -3.947570562362671
    4. 'out' (adapté à ' out') → logprob: -4.322570323944092
    5. ' out' → logprob: -6.822570323944092
    6. '       ' → logprob: -7.072570323944092
    7. '   ' → logprob: -7.197570323944092
    8. '\n' → logprob: -7.822570323944092
    9. ')\' → logprob: -7.822570323944092
    10. '```' → logprob: -7.822570323944092

Token 1114: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.00034356804098933935
    2. '.' → logprob: -8.125343322753906
    3. 'write' → logprob: -10.750343322753906
    4. '   ' → logprob: -11.750343322753906
    5. ' .' → logprob: -12.875343322753906
    6. '.append' → logprob: -12.875343322753906
    7. '.Write' → logprob: -13.250343322753906
    8. '```' → logprob: -13.250343322753906
    9. '.writerow' → logprob: -13.250343322753906
    10. ').' → logprob: -13.500343322753906

Token 1115: '("|' (ID: 83692)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7899443507194519
    2. '("\' → logprob: -0.7899443507194519
    3. '("("' → logprob: -2.5399444103240967
    4. '(' → logprob: -5.664944171905518
    5. '("")' → logprob: -5.664944171905518
    6. '('' → logprob: -5.789944171905518
    7. '('\' → logprob: -5.914944171905518
    8. '("(' → logprob: -7.789944171905518
    9. '(("' → logprob: -9.539944648742676
    10. '(""' → logprob: -9.789944648742676

Token 1116: ' location' (ID: 5100)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"\' → logprob: -1.4425140619277954
    2. ' driver' → logprob: -1.5675140619277954
    3. 'driver' → logprob: -1.5675140619277954
    4. '"' → logprob: -1.6925140619277954
    5. 'target' → logprob: -2.942513942718506
    6. 'next' → logprob: -3.192513942718506
    7. ' next' → logprob: -3.817513942718506
    8. ' target' → logprob: -4.192513942718506
    9. ''\' → logprob: -4.942513942718506
    10. 'self' → logprob: -5.442513942718506

Token 1117: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.16646169126033783
    2. ':' → logprob: -2.416461706161499
    3. ' +' → logprob: -2.791461706161499
    4. ' =' → logprob: -6.41646146774292
    5. '+' → logprob: -7.79146146774292
    6. '"' → logprob: -8.041461944580078
    7. '=' → logprob: -8.666461944580078
    8. ''' → logprob: -10.541461944580078
    9. ')' → logprob: -10.666461944580078
    10. ' ' → logprob: -10.791461944580078

Token 1118: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.424631267786026
    2. ' "' → logprob: -1.1746312379837036
    3. ' str' → logprob: -3.424631357192993
    4. 'str' → logprob: -5.799631118774414
    5. ''' → logprob: -7.424631118774414
    6. ' '' → logprob: -7.799631118774414
    7. ' ' → logprob: -8.049631118774414
    8. ' ' → logprob: -10.924631118774414
    9. ' f' → logprob: -11.174631118774414
    10. '(str' → logprob: -11.424631118774414

Token 1119: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.43746885657310486
    2. '"' → logprob: -1.4374688863754272
    3. ' str' → logprob: -2.1874687671661377
    4. ' "' → logprob: -5.812469005584717
    5. '(str' → logprob: -7.562469005584717
    6. ''' → logprob: -7.812469005584717
    7. '               ' → logprob: -8.687468528747559
    8. '	str' → logprob: -9.062468528747559
    9. '           ' → logprob: -9.187468528747559
    10. '            ' → logprob: -9.562468528747559

Token 1120: ' str' (ID: 989)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2396305799484253
    2. ' "' → logprob: -2.364630699157715
    3. 'str' → logprob: -2.489630699157715
    4. ' str' → logprob: -3.364630699157715
    5. ''' → logprob: -6.614630699157715
    6. ' '' → logprob: -8.614630699157715
    7. ' ' → logprob: -10.989630699157715
    8. '(str' → logprob: -11.614630699157715
    9. '"\' → logprob: -11.989630699157715
    10. '	str' → logprob: -12.614630699157715

Token 1121: '(driver' (ID: 40061)
  Prédit: '(driver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -0.0025217996444553137
    2. 'driver' → logprob: -6.002521991729736
    3. '(' → logprob: -10.377521514892578
    4. '(self' → logprob: -11.752521514892578
    5. 'self' → logprob: -12.752521514892578
    6. ' driver' → logprob: -13.252521514892578
    7. '(dr' → logprob: -13.502521514892578
    8. '	driver' → logprob: -15.377521514892578
    9. ' driver's' → logprob: -16.002521514892578
    10. ' (' → logprob: -16.502521514892578

Token 1122: '.location' (ID: 15725)
  Prédit: '.location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.0004917914047837257
    2. '.' → logprob: -7.750491619110107
    3. 'location' → logprob: -10.625492095947266
    4. ')' → logprob: -11.000492095947266
    5. '	location' → logprob: -12.125492095947266
    6. '   ' → logprob: -12.875492095947266
    7. '.position' → logprob: -13.000492095947266
    8. ' .' → logprob: -13.125492095947266
    9. '.status' → logprob: -13.625492095947266
    10. '.driver' → logprob: -14.000492095947266

Token 1123: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38094666600227356
    2. ')
' → logprob: -1.7559466361999512
    3. '           ' → logprob: -2.005946636199951
    4. '       ' → logprob: -6.130946636199951
    5. ')+' → logprob: -6.255946636199951
    6. '))
' → logprob: -6.380946636199951
    7. '+' → logprob: -6.880946636199951
    8. '   ' → logprob: -7.505946636199951
    9. '))' → logprob: -7.505946636199951
    10. '")' → logprob: -7.630946636199951

Token 1124: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.051240380853414536
    2. '           ' → logprob: -3.8012404441833496
    3. ')' → logprob: -4.05124044418335
    4. '"\' → logprob: -5.05124044418335
    5. ')\' → logprob: -6.80124044418335
    6. '\n' → logprob: -7.30124044418335
    7. ''\' → logprob: -7.55124044418335
    8. '       ' → logprob: -8.051239967346191
    9. '")
' → logprob: -8.426239967346191
    10. '   ' → logprob: -8.551239967346191

Token 1125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0661659687757492
    2. 'out' → logprob: -2.8161659240722656
    3. ' out' → logprob: -5.941165924072266
    4. '       ' → logprob: -6.941165924072266
    5. '	out' → logprob: -8.941165924072266
    6. '```' → logprob: -9.066165924072266
    7. '   ' → logprob: -9.316165924072266
    8. '               ' → logprob: -9.441165924072266
    9. '		' → logprob: -10.066165924072266
    10. '          ' → logprob: -10.316165924072266

Token 1126: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.553840160369873
    2. 'out' (adapté à ' out') → logprob: -0.928840160369873
    3. ' out' → logprob: -3.553840160369873
    4. '       ' → logprob: -7.803840160369873
    5. '```' → logprob: -7.803840160369873
    6. '	out' → logprob: -8.178840637207031
    7. '   ' → logprob: -8.303840637207031
    8. '		' → logprob: -9.678840637207031
    9. '``' → logprob: -9.928840637207031
    10. '          ' → logprob: -10.178840637207031

Token 1127: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -1.580929347255733e-05
    2. 'write' → logprob: -11.875016212463379
    3. '.' → logprob: -12.500016212463379
    4. '   ' → logprob: -12.750016212463379
    5. '.writerow' → logprob: -14.375016212463379
    6. ' .' → logprob: -14.875016212463379
    7. '	write' → logprob: -15.375016212463379
    8. ').' → logprob: -15.500016212463379
    9. '.readline' → logprob: -15.625016212463379
    10. '.Write' → logprob: -15.625016212463379

Token 1128: '("|' (ID: 83692)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0723186731338501
    2. '("\' → logprob: -3.0723185539245605
    3. '(' → logprob: -3.8223185539245605
    4. '('' → logprob: -7.5723185539245605
    5. '("("' → logprob: -7.6973185539245605
    6. '(
' → logprob: -7.9473185539245605
    7. '(",' → logprob: -10.072319030761719
    8. '('\' → logprob: -10.072319030761719
    9. '("(' → logprob: -10.322319030761719
    10. '(""' → logprob: -10.572319030761719

Token 1129: ' target' (ID: 3783)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.39240533113479614
    2. 'target' → logprob: -1.6424052715301514
    3. 'next' → logprob: -2.5174052715301514
    4. ' next' → logprob: -3.6424052715301514
    5. ' target' → logprob: -4.0174055099487305
    6. 'str' → logprob: -6.3924055099487305
    7. '"\' → logprob: -6.5174055099487305
    8. ' "' → logprob: -7.1424055099487305
    9. ''' → logprob: -7.7674055099487305
    10. 'status' → logprob: -7.8924055099487305

Token 1130: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.11647506058216095
    2. ':' → logprob: -2.2414751052856445
    3. ' =' → logprob: -6.1164751052856445
    4. ' +' → logprob: -6.9914751052856445
    5. '=' → logprob: -7.7414751052856445
    6. '"' → logprob: -9.991475105285645
    7. '+' → logprob: -11.491475105285645
    8. '":' → logprob: -11.866475105285645
    9. ')' → logprob: -12.241475105285645
    10. '")' → logprob: -13.241475105285645

Token 1131: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011345596052706242
    2. ' "' → logprob: -4.511345386505127
    3. 'str' → logprob: -8.636345863342285
    4. ''' → logprob: -9.511345863342285
    5. ' str' → logprob: -10.261345863342285
    6. ')' → logprob: -12.886345863342285
    7. ' ' → logprob: -13.386345863342285
    8. '("' → logprob: -13.511345863342285
    9. '           ' → logprob: -13.886345863342285
    10. '            ' → logprob: -14.261345863342285

Token 1132: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6510395407676697
    2. '"' → logprob: -0.7760395407676697
    3. ' str' → logprob: -4.4010396003723145
    4. '+' → logprob: -5.6510396003723145
    5. 'out' → logprob: -7.1510396003723145
    6. ' "' → logprob: -7.5260396003723145
    7. ' +' → logprob: -8.151039123535156
    8. ' out' → logprob: -8.276039123535156
    9. 'self' → logprob: -8.526039123535156
    10. ')' → logprob: -9.151039123535156

Token 1133: ' str' (ID: 989)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3576672673225403
    2. 'str' → logprob: -1.6076672077178955
    3. ' str' → logprob: -2.3576672077178955
    4. ' "' → logprob: -5.232667446136475
    5. ''' → logprob: -7.982667446136475
    6. '(str' → logprob: -12.857666969299316
    7. ' '' → logprob: -12.982666969299316
    8. '           ' → logprob: -13.482666969299316
    9. '            ' → logprob: -13.482666969299316
    10. '	str' → logprob: -13.607666969299316

Token 1134: '(driver' (ID: 40061)
  Prédit: '(driver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -0.03208069130778313
    2. 'driver' → logprob: -3.90708065032959
    3. 'self' → logprob: -4.90708065032959
    4. '(self' → logprob: -6.28208065032959
    5. '"' → logprob: -6.90708065032959
    6. 'str' → logprob: -8.03208065032959
    7. '(' → logprob: -8.15708065032959
    8. '("' → logprob: -8.53208065032959
    9. '(dr' → logprob: -8.65708065032959
    10. '(str' → logprob: -9.28208065032959

Token 1135: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.09597080200910568
    2. '),' → logprob: -2.595970869064331
    3. ')' → logprob: -4.345970630645752
    4. '))' → logprob: -6.720970630645752
    5. '.location' → logprob: -7.095970630645752
    6. 'target' → logprob: -7.470970630645752
    7. ')+' → logprob: -8.09597110748291
    8. '))
' → logprob: -8.72097110748291
    9. '.out' → logprob: -8.72097110748291
    10. '   ' → logprob: -8.84597110748291

Token 1136: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7614766359329224
    2. ')
' → logprob: -0.7614766359329224
    3. '),' → logprob: -3.261476516723633
    4. ',' → logprob: -4.636476516723633
    5. '           ' → logprob: -4.761476516723633
    6. ')\' → logprob: -5.636476516723633
    7. '")' → logprob: -6.636476516723633
    8. '+' → logprob: -7.136476516723633
    9. ')+' → logprob: -7.136476516723633
    10. '       ' → logprob: -7.511476516723633

Token 1137: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1013774499297142
    2. ')
' → logprob: -2.976377487182617
    3. ')' → logprob: -3.976377487182617
    4. ')\' → logprob: -4.726377487182617
    5. '"\' → logprob: -5.601377487182617
    6. '   ' → logprob: -5.726377487182617
    7. ''\' → logprob: -5.976377487182617
    8. '")' → logprob: -6.101377487182617
    9. 'out' → logprob: -6.601377487182617
    10. '       ' → logprob: -6.601377487182617

Token 1138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00271618808619678
    2. 'out' → logprob: -6.127716064453125
    3. ' out' → logprob: -8.502716064453125
    4. '       ' → logprob: -9.127716064453125
    5. '		' → logprob: -9.752716064453125
    6. '   ' → logprob: -9.877716064453125
    7. '          ' → logprob: -10.127716064453125
    8. '```' → logprob: -10.752716064453125
    9. '	       ' → logprob: -11.502716064453125
    10. '	out' → logprob: -11.627716064453125

Token 1139: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08736130595207214
    2. 'out' (adapté à ' out') → logprob: -2.5873613357543945
    3. '```' → logprob: -5.9623613357543945
    4. '       ' → logprob: -6.2123613357543945
    5. ' out' → logprob: -6.5873613357543945
    6. '   ' → logprob: -6.9623613357543945
    7. '``' → logprob: -7.7123613357543945
    8. ')' → logprob: -8.337361335754395
    9. ''\' → logprob: -9.087361335754395
    10. '	out' → logprob: -9.212361335754395

Token 1140: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.00011832444579340518
    2. '.' → logprob: -9.250118255615234
    3. ' .' → logprob: -12.500118255615234
    4. '   ' → logprob: -12.500118255615234
    5. '.w' → logprob: -12.625118255615234
    6. 'write' → logprob: -12.750118255615234
    7. '().' → logprob: -13.625118255615234
    8. '.writerow' → logprob: -13.625118255615234
    9. '.Write' → logprob: -14.250118255615234
    10. ').' → logprob: -14.250118255615234

Token 1141: '("|' (ID: 83692)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.018871380016207695
    2. '("("' → logprob: -4.268871307373047
    3. '(' → logprob: -6.143871307373047
    4. '("\' → logprob: -6.768871307373047
    5. '('' → logprob: -7.018871307373047
    6. '("(' → logprob: -8.393871307373047
    7. '("")' → logprob: -9.268871307373047
    8. '(""' → logprob: -9.893871307373047
    9. '(("' → logprob: -10.018871307373047
    10. '(":' → logprob: -10.268871307373047

Token 1142: ' left' (ID: 3561)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4282749891281128
    2. '"\' → logprob: -1.4282749891281128
    3. 'next' → logprob: -2.4282751083374023
    4. ' next' → logprob: -4.928275108337402
    5. 'self' → logprob: -5.428275108337402
    6. 'str' → logprob: -5.553275108337402
    7. ' "' → logprob: -6.428275108337402
    8. '\n' → logprob: -7.053275108337402
    9. ''\' → logprob: -7.303275108337402
    10. ' "\' → logprob: -7.928275108337402

Token 1143: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.9392796158790588
    2. '_time' → logprob: -1.564279556274414
    3. ' time' → logprob: -1.689279556274414
    4. 'Segment' → logprob: -2.439279556274414
    5. '_segment' → logprob: -3.189279556274414
    6. 'Time' → logprob: -3.314279556274414
    7. '_' → logprob: -3.439279556274414
    8. 'segment' → logprob: -5.939279556274414
    9. '"' → logprob: -6.314279556274414
    10. ' segment' → logprob: -6.689279556274414

Token 1144: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.07668493688106537
    2. ':' → logprob: -2.7016849517822266
    3. '"' → logprob: -5.826684951782227
    4. ' +' → logprob: -6.201684951782227
    5. ' =' → logprob: -6.951684951782227
    6. '=' → logprob: -8.201684951782227
    7. ' ' → logprob: -8.951684951782227
    8. '+' → logprob: -8.951684951782227
    9. '":' → logprob: -8.951684951782227
    10. ' "' → logprob: -9.951684951782227

Token 1145: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22307831048965454
    2. ' "' → logprob: -1.7230782508850098
    3. 'str' → logprob: -4.22307825088501
    4. ' str' → logprob: -5.09807825088501
    5. ''' → logprob: -7.84807825088501
    6. ' ' → logprob: -9.223078727722168
    7. ' '' → logprob: -9.848078727722168
    8. 'self' → logprob: -10.848078727722168
    9. '(str' → logprob: -10.973078727722168
    10. ')' → logprob: -11.473078727722168

Token 1146: ' +' (ID: 659)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7072216272354126
    2. 'str' → logprob: -1.2072216272354126
    3. ' str' → logprob: -1.8322216272354126
    4. ' "' → logprob: -3.082221508026123
    5. ''' → logprob: -7.082221508026123
    6. '               ' → logprob: -8.582221984863281
    7. '                ' → logprob: -9.082221984863281
    8. ' '' → logprob: -9.082221984863281
    9. '            ' → logprob: -9.207221984863281
    10. ' ' → logprob: -9.207221984863281

Token 1147: ' str' (ID: 989)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.48902183771133423
    2. 'str' → logprob: -0.9890218377113342
    3. ' str' → logprob: -4.3640217781066895
    4. ' "' → logprob: -6.6140217781066895
    5. ''' → logprob: -7.2390217781066895
    6. '(str' → logprob: -10.864022254943848
    7. ' '' → logprob: -12.364022254943848
    8. '("' → logprob: -12.489022254943848
    9. '               ' → logprob: -12.614022254943848
    10. 'self' → logprob: -13.239022254943848

Token 1148: '(driver' (ID: 40061)
  Prédit: '(driver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -0.4499460458755493
    2. '(self' → logprob: -1.5749460458755493
    3. 'self' → logprob: -1.9499460458755493
    4. 'driver' → logprob: -4.69994592666626
    5. '(' → logprob: -5.82494592666626
    6. '(dr' → logprob: -8.199946403503418
    7. '"' → logprob: -8.574946403503418
    8. '                   ' → logprob: -8.949946403503418
    9. '               ' → logprob: -9.449946403503418
    10. '           ' → logprob: -9.574946403503418

Token 1149: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -5.347765181795694e-05
    2. 'next' → logprob: -9.875053405761719
    3. '.target' → logprob: -13.500053405761719
    4. 'Next' → logprob: -15.375053405761719
    5. '	next' → logprob: -16.50005340576172
    6. '   ' → logprob: -16.62505340576172
    7. '[next' → logprob: -16.75005340576172
    8. '.' → logprob: -16.75005340576172
    9. '
' → logprob: -17.00005340576172
    10. ').' → logprob: -17.25005340576172

Token 1150: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -3.3451433409936726e-05
    2. '_segment' → logprob: -10.375033378601074
    3. '_S' → logprob: -14.000033378601074
    4. ' Segment' → logprob: -14.500033378601074
    5. 'segment' → logprob: -14.875033378601074
    6. '_SEG' → logprob: -16.37503433227539
    7. 'Seg' → logprob: -16.37503433227539
    8. '   ' → logprob: -16.62503433227539
    9. '[' → logprob: -17.25003433227539
    10. 'Segments' → logprob: -17.50003433227539

Token 1151: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -0.0028202086687088013
    2. 'Time' → logprob: -5.877820014953613
    3. 'left' → logprob: -12.127820014953613
    4. ')' → logprob: -12.127820014953613
    5. 'self' → logprob: -13.627820014953613
    6. '   ' → logprob: -14.002820014953613
    7. 'Le' → logprob: -15.002820014953613
    8. ' Left' → logprob: -15.127820014953613
    9. 'Next' → logprob: -15.127820014953613
    10. '       ' → logprob: -15.752820014953613

Token 1152: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.875001907348633
    3. 'ime' → logprob: -15.375001907348633
    4. ')' → logprob: -15.375001907348633
    5. 'time' → logprob: -15.500001907348633
    6. 'Times' → logprob: -15.625001907348633
    7. 'Ti' → logprob: -15.625001907348633
    8. '_time' → logprob: -16.375001907348633
    9. '	Time' → logprob: -16.625001907348633
    10. 'Tim' → logprob: -16.750001907348633

Token 1153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3099912106990814
    2. '           ' → logprob: -1.6849912405014038
    3. ')
' → logprob: -2.5599911212921143
    4. '       ' → logprob: -7.059991359710693
    5. '))' → logprob: -7.059991359710693
    6. '          ' → logprob: -7.934991359710693
    7. '))
' → logprob: -7.934991359710693
    8. '   ' → logprob: -8.184990882873535
    9. '               ' → logprob: -8.559990882873535
    10. '")' → logprob: -8.559990882873535

Token 1154: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5696651339530945
    2. ')
' → logprob: -1.3196651935577393
    3. ')' → logprob: -1.8196651935577393
    4. '       ' → logprob: -6.06966495513916
    5. '   ' → logprob: -6.81966495513916
    6. '          ' → logprob: -7.56966495513916
    7. ')\' → logprob: -7.94466495513916
    8. '               ' → logprob: -8.31966495513916
    9. '         ' → logprob: -9.56966495513916
    10. '		' → logprob: -9.81966495513916

Token 1155: ' '\' (ID: 10855)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.06532956659793854
    2. ''\' → logprob: -2.8153295516967773
    3. ' "\' → logprob: -5.940329551696777
    4. '\n' → logprob: -7.690329551696777
    5. ' '\' → logprob: -8.815329551696777
    6. '"' → logprob: -9.565329551696777
    7. '   ' → logprob: -11.190329551696777
    8. ')\' → logprob: -11.940329551696777
    9. '")' → logprob: -11.940329551696777
    10. ' ' → logprob: -12.065329551696777

Token 1156: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00019054718723054975
    2. '\n' → logprob: -8.625190734863281
    3. ''\' → logprob: -11.875190734863281
    4. '')' → logprob: -13.125190734863281
    5. ''' → logprob: -13.500190734863281
    6. '''' → logprob: -16.12519073486328
    7. '''
' → logprob: -16.25019073486328
    8. ''''' → logprob: -16.50019073486328
    9. '')
' → logprob: -16.62519073486328
    10. '"\' → logprob: -16.87519073486328

Token 1157: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7546998858451843
    2. '           ' → logprob: -1.379699945449829
    3. '')' → logprob: -1.379699945449829
    4. '')
' → logprob: -4.37969970703125
    5. ')
' → logprob: -4.75469970703125
    6. '       ' → logprob: -6.87969970703125
    7. ')'' → logprob: -6.87969970703125
    8. ')')
' → logprob: -6.87969970703125
    9. '")' → logprob: -7.00469970703125
    10. ')\' → logprob: -7.62969970703125

Token 1158: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46361348032951355
    2. 'out' → logprob: -1.338613510131836
    3. '<|end|>' → logprob: -2.463613510131836
    4. ' out' → logprob: -4.338613510131836
    5. '	out' → logprob: -5.838613510131836
    6. '<|end|>' → logprob: -6.338613510131836
    7. '       ' → logprob: -6.338613510131836
    8. '(out' → logprob: -6.963613510131836
    9. ')
' → logprob: -7.713613510131836
    10. '')' → logprob: -7.713613510131836

Token 1159: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16561605036258698
    2. ')' → logprob: -2.040616035461426
    3. '       ' → logprob: -4.790616035461426
    4. '')' → logprob: -4.915616035461426
    5. 'out' (adapté à ' out') → logprob: -6.040616035461426
    6. '<|end|>' → logprob: -6.540616035461426
    7. ' out' → logprob: -7.040616035461426
    8. ')
' → logprob: -7.665616035461426
    9. '		' → logprob: -7.915616035461426
    10. '               ' → logprob: -8.165616035461426

Token 1160: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -5.872261317563243e-05
    2. '.' → logprob: -10.000059127807617
    3. '   ' → logprob: -12.375059127807617
    4. 'write' → logprob: -13.000059127807617
    5. '.flush' → logprob: -13.250059127807617
    6. '.w' → logprob: -13.375059127807617
    7. '       ' → logprob: -14.250059127807617
    8. '           ' → logprob: -14.500059127807617
    9. '.readline' → logprob: -14.875059127807617
    10. '.append' → logprob: -15.125059127807617

Token 1161: '("' (ID: 568)
  Prédit: '("\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.9555348753929138
    2. '('\' → logprob: -0.9555348753929138
    3. '("' → logprob: -2.2055349349975586
    4. '("")' → logprob: -2.8305349349975586
    5. '('' → logprob: -2.9555349349975586
    6. '(' → logprob: -5.455534934997559
    7. '(out' → logprob: -6.455534934997559
    8. '(""' → logprob: -6.580534934997559
    9. '()' → logprob: -8.205534934997559
    10. '("--------------------------------' → logprob: -8.330534934997559

Token 1162: '================================' (ID: 6288)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12430261820554733
    2. '')' → logprob: -2.999302625656128
    3. ')
' → logprob: -3.749302625656128
    4. '")' → logprob: -3.999302625656128
    5. '\n' → logprob: -4.374302387237549
    6. '''' → logprob: -5.249302387237549
    7. ''''' → logprob: -6.124302387237549
    8. 'out' → logprob: -7.124302387237549
    9. '<|end|>' → logprob: -7.249302387237549
    10. '           ' → logprob: -7.624302387237549

Token 1163: '\' (ID: 59)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.13241025805473328
    2. '================================' → logprob: -2.6324102878570557
    3. '========' → logprob: -4.382410049438477
    4. '================' → logprob: -4.632410049438477
    5. '===' → logprob: -5.007410049438477
    6. '============' → logprob: -5.007410049438477
    7. '====' → logprob: -5.132410049438477
    8. '=======' → logprob: -6.007410049438477
    9. '===========' → logprob: -6.257410049438477
    10. '==========' → logprob: -6.507410049438477

Token 1164: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.106880322098732
    2. '===' → logprob: -2.9818804264068604
    3. '====' → logprob: -4.231880187988281
    4. '')' → logprob: -4.981880187988281
    5. '========' → logprob: -5.231880187988281
    6. '================================' → logprob: -5.231880187988281
    7. '==' → logprob: -5.731880187988281
    8. '=======' → logprob: -5.981880187988281
    9. ''' → logprob: -6.106880187988281
    10. '=\' → logprob: -6.356880187988281

Token 1165: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8417981266975403
    2. '')' → logprob: -0.8417981266975403
    3. ')' → logprob: -2.4667980670928955
    4. '''' → logprob: -3.5917980670928955
    5. ''''' → logprob: -4.466798305511475
    6. '')
' → logprob: -5.216798305511475
    7. '")' → logprob: -5.841798305511475
    8. ')
' → logprob: -6.216798305511475
    9. '       ' → logprob: -6.216798305511475
    10. ''''
' → logprob: -7.091798305511475

Token 1166: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5243898630142212
    2. '<|end|>' → logprob: -1.2743898630142212
    3. '       ' → logprob: -2.8993897438049316
    4. 'out' → logprob: -3.0243897438049316
    5. '<|end|>' → logprob: -4.899389743804932
    6. '           ' → logprob: -5.399389743804932
    7. ')
' → logprob: -5.774389743804932
    8. '```' → logprob: -6.399389743804932
    9. '   ' → logprob: -6.774389743804932
    10. '')' → logprob: -6.774389743804932

Token 1167: ' '''

' (ID: 117804)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21420076489448547
    2. ''''' → logprob: -2.464200735092163
    3. '''' → logprob: -2.839200735092163
    4. ')' → logprob: -3.464200735092163
    5. '<|end|>' → logprob: -5.089200973510742
    6. '')' → logprob: -5.589200973510742
    7. '       ' → logprob: -6.339200973510742
    8. ''''
' → logprob: -6.339200973510742
    9. '		' → logprob: -6.464200973510742
    10. '<|end|>' → logprob: -7.589200973510742

Token 1168: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1169: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018150413408875465
    2. '__' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.268150329589844
    4. 'name' → logprob: -15.768150329589844
    5. ' ' → logprob: -16.018150329589844
    6. '_' → logprob: -17.518150329589844
    7. '_name' → logprob: -18.268150329589844
    8. '___' → logprob: -18.393150329589844
    9. ' name' → logprob: -18.768150329589844
    10. ' _' → logprob: -19.268150329589844

Token 1170: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00026765360962599516
    2. ' __' → logprob: -8.50026798248291
    3. ' ==' → logprob: -11.12526798248291
    4. '_' → logprob: -11.25026798248291
    5. 'name' → logprob: -11.62526798248291
    6. '==' → logprob: -11.87526798248291
    7. '__.__' → logprob: -12.12526798248291
    8. '____' → logprob: -12.75026798248291
    9. '_name' → logprob: -12.75026798248291
    10. '___' → logprob: -12.87526798248291

Token 1171: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.5776860184123507e-06
    2. '__
' → logprob: -13.87500286102295
    3. '____' → logprob: -15.00000286102295
    4. 'name' → logprob: -15.12500286102295
    5. '__.__' → logprob: -15.12500286102295
    6. '__('' → logprob: -15.50000286102295
    7. '==' → logprob: -15.50000286102295
    8. '___' → logprob: -15.87500286102295
    9. ' __' → logprob: -16.000001907348633
    10. '_' → logprob: -16.625001907348633

Token 1172: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00048763392260298133
    2. '==' → logprob: -7.875487804412842
    3. ' ==' → logprob: -9.250487327575684
    4. '=='' → logprob: -12.250487327575684
    5. '=="' → logprob: -12.375487327575684
    6. '__.__' → logprob: -14.625487327575684
    7. '____' → logprob: -14.875487327575684
    8. '___' → logprob: -14.875487327575684
    9. '__('' → logprob: -15.000487327575684
    10. '__
' → logprob: -15.250487327575684

Token 1173: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5760507583618164
    2. '"' → logprob: -0.8260507583618164
    3. '__' → logprob: -9.576050758361816
    4. ' "__' → logprob: -10.451050758361816
    5. ' '__' → logprob: -11.326050758361816
    6. ''"' → logprob: -15.451050758361816
    7. '   ' → logprob: -15.576050758361816
    8. '"'' → logprob: -16.0760498046875
    9. ''_' → logprob: -16.0760498046875
    10. '('__' → logprob: -16.0760498046875

Token 1174: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.173704271830502e-06
    2. '__' → logprob: -13.25000286102295
    3. 'name' → logprob: -13.50000286102295
    4. ' main' → logprob: -19.250003814697266
    5. '_main' → logprob: -20.125003814697266
    6. 'm' → logprob: -20.875003814697266
    7. '(main' → logprob: -21.125003814697266
    8. '	main' → logprob: -21.250003814697266
    9. '"' → logprob: -21.375003814697266
    10. 'built' → logprob: -21.500003814697266

Token 1175: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0312116127461195
    2. '__' → logprob: -3.5312116146087646
    3. '__':
' → logprob: -6.5312113761901855
    4. '__:' → logprob: -12.906211853027344
    5. '():
' → logprob: -16.531211853027344
    6. '__["' → logprob: -16.781211853027344
    7. '__
' → logprob: -16.906211853027344
    8. '__.' → logprob: -17.031211853027344
    9. '__.__' → logprob: -17.531211853027344
    10. '__("' → logprob: -17.656211853027344

Token 1176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036968740168958902
    2. 'g' → logprob: -6.003696918487549
    3. 'graph' → logprob: -7.503696918487549
    4. ' g' → logprob: -7.878696918487549
    5. ' graph' → logprob: -9.37869644165039
    6. '	g' → logprob: -9.75369644165039
    7. 'data' → logprob: -9.75369644165039
    8. '	graph' → logprob: -9.75369644165039
    9. '   ' → logprob: -10.75369644165039
    10. ' data' → logprob: -12.37869644165039

Token 1177: ' shop' (ID: 9100)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.19916313886642456
    2. '   ' → logprob: -2.0741631984710693
    3. 'g' → logprob: -2.9491631984710693
    4. 'graph' → logprob: -6.69916296005249
    5. 'import' → logprob: -7.82416296005249
    6. ' data' → logprob: -7.94916296005249
    7. 'raw' → logprob: -8.699163436889648
    8. 'out' → logprob: -9.324163436889648
    9. 'd' → logprob: -9.449163436889648
    10. 'E' → logprob: -9.949163436889648

Token 1178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3538110852241516
    2. ' =' → logprob: -1.2288110256195068
    3. 's' → logprob: -5.978811264038086
    4. '   ' → logprob: -6.353811264038086
    5. 'shop' → logprob: -7.478811264038086
    6. '_shop' → logprob: -8.228811264038086
    7. '_=' → logprob: -10.103811264038086
    8. '_' → logprob: -10.103811264038086
    9. '_instance' → logprob: -10.228811264038086
    10. 'Shop' → logprob: -10.728811264038086

Token 1179: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.014163863845169544
    2. ' shop' → logprob: -4.264163970947266
    3. 'shopping' → logprob: -16.014163970947266
    4. 'ship' → logprob: -16.264163970947266
    5. ' ' → logprob: -16.889163970947266
    6. 'sh' → logprob: -17.389163970947266
    7. '(shop' → logprob: -17.389163970947266
    8. 'graph' → logprob: -18.014163970947266
    9. 'Shop' → logprob: -18.139163970947266
    10. 'store' → logprob: -19.014163970947266

Token 1180: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0240608099848032
    2. 'g' → logprob: -3.8990607261657715
    3. 'graph' → logprob: -5.8990607261657715
    4. '
' → logprob: -7.7740607261657715
    5. ' =' → logprob: -9.77406120300293
    6. '<|end|>' → logprob: -9.77406120300293
    7. ' g' → logprob: -10.27406120300293
    8. ',' → logprob: -10.39906120300293
    9. '	graph' → logprob: -10.52406120300293
    10. ' graph' → logprob: -10.64906120300293

Token 1181: '   ' (ID: 271)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.12959852814674377
    2. 'graph' → logprob: -2.129598617553711
    3. '   ' → logprob: -6.129598617553711
    4. 'timer' → logprob: -8.379598617553711
    5. 'driver' → logprob: -8.879598617553711
    6. 'data' → logprob: -9.754598617553711
    7. ' g' → logprob: -11.379598617553711
    8. ' graph' → logprob: -11.379598617553711
    9. 'raw' → logprob: -11.504598617553711
    10. 't' → logprob: -11.629598617553711

Token 1182: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.010038434527814388
    2. 'graph' → logprob: -4.635038375854492
    3. 'G' → logprob: -9.510038375854492
    4. 'timer' → logprob: -9.510038375854492
    5. 'map' → logprob: -10.135038375854492
    6. '   ' → logprob: -11.010038375854492
    7. 'gr' → logprob: -11.260038375854492
    8. 't' → logprob: -11.385038375854492
    9. '_g' → logprob: -11.510038375854492
    10. 'data' → logprob: -11.635038375854492

Token 1183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5124870538711548
    2. ' =' → logprob: -1.2624870538711548
    3. 'raph' → logprob: -2.1374869346618652
    4. '=g' → logprob: -10.262487411499023
    5. 'rap' → logprob: -10.762487411499023
    6. '   ' → logprob: -11.262487411499023
    7. ' ' → logprob: -12.012487411499023
    8. 'graph' → logprob: -12.137487411499023
    9. '	' → logprob: -12.512487411499023
    10. 'aph' → logprob: -13.012487411499023

Token 1184: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0019299437990412116
    2. ' graph' → logprob: -6.251929759979248
    3. '	graph' → logprob: -13.751930236816406
    4. '   ' → logprob: -16.251930236816406
    5. '(graph' → logprob: -16.501930236816406
    6. 'Graph' → logprob: -17.751930236816406
    7. ' ' → logprob: -18.251930236816406
    8. 'graphic' → logprob: -18.876930236816406
    9. '  ' → logprob: -19.001930236816406
    10. '
' → logprob: -19.126930236816406

Token 1185: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16670803725719452
    2. '()
' → logprob: -1.916707992553711
    3. '   ' → logprob: -5.166707992553711
    4. 'g' → logprob: -7.291707992553711
    5. ' =' → logprob: -10.541707992553711
    6. ')' → logprob: -11.416707992553711
    7. ' g' → logprob: -11.416707992553711
    8. '()
' → logprob: -11.916707992553711
    9. '(g' → logprob: -12.416707992553711
    10. '()

' → logprob: -12.541707992553711

Token 1186: '   ' (ID: 271)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.34121283888816833
    2. '   ' → logprob: -1.4662128686904907
    3. 'd' → logprob: -3.216212749481201
    4. 'dr' → logprob: -4.216212749481201
    5. 'drv' → logprob: -5.716212749481201
    6. ' driver' → logprob: -9.71621322631836
    7. 'drive' → logprob: -10.71621322631836
    8. '	driver' → logprob: -10.84121322631836
    9. 'drivers' → logprob: -11.84121322631836
    10. 'td' → logprob: -12.34121322631836

Token 1187: ' driver' (ID: 8931)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' (adapté à ' driver') → logprob: -0.4968474805355072
    2. 'd' → logprob: -1.1218475103378296
    3. 'dr' → logprob: -3.24684739112854
    4. 'drv' → logprob: -4.246847629547119
    5. 'timer' → logprob: -4.996847629547119
    6. 't' → logprob: -5.371847629547119
    7. 'tim' → logprob: -7.996847629547119
    8. 'drive' → logprob: -8.371847152709961
    9. 'td' → logprob: -8.996847152709961
    10. 'tm' → logprob: -9.121847152709961

Token 1188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1137169674038887
    2. '=' → logprob: -2.2387170791625977
    3. '(g' → logprob: -8.488717079162598
    4. '=g' → logprob: -8.488717079162598
    5. '(' → logprob: -8.863717079162598
    6. '_' → logprob: -8.988717079162598
    7. '_instance' → logprob: -9.363717079162598
    8. 'g' → logprob: -9.488717079162598
    9. '_=' → logprob: -11.738717079162598
    10. '_obj' → logprob: -11.863717079162598

Token 1189: ' driver' (ID: 8931)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.048590321093797684
    2. ' driver' → logprob: -3.0485904216766357
    3. '(driver' → logprob: -13.548590660095215
    4. '	driver' → logprob: -13.673590660095215
    5. '.driver' → logprob: -15.673590660095215
    6. 'drive' → logprob: -16.1735897064209
    7. 'dr' → logprob: -16.6735897064209
    8. 'drivers' → logprob: -17.0485897064209
    9. 'Driver' → logprob: -17.1735897064209
    10. '   ' → logprob: -17.4235897064209

Token 1190: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -6.301394023466855e-05
    2. '(driver' → logprob: -10.125062942504883
    3. '(shop' → logprob: -11.500062942504883
    4. '(' → logprob: -11.625062942504883
    5. '=g' → logprob: -13.875062942504883
    6. 'driver' → logprob: -14.500062942504883
    7. 'shop' → logprob: -14.500062942504883
    8. '   ' → logprob: -15.250062942504883
    9. 'g' → logprob: -15.250062942504883
    10. '(graph' → logprob: -15.500062942504883

Token 1191: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.44061875343322754
    2. ')' → logprob: -1.0656187534332275
    3. '   ' → logprob: -4.440618515014648
    4. '())
' → logprob: -10.940618515014648
    5. '()' → logprob: -11.440618515014648
    6. '()
' → logprob: -11.815618515014648
    7. ')
' → logprob: -12.065618515014648
    8. '())' → logprob: -12.815618515014648
    9. ' )
' → logprob: -12.940618515014648
    10. '  ' → logprob: -13.065618515014648

Token 1192: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.27663567662239075
    2. 'timer' → logprob: -1.7766356468200684
    3. '   ' → logprob: -2.6516356468200684
    4. 'tm' → logprob: -6.776635646820068
    5. 'tim' → logprob: -7.651635646820068
    6. 'time' → logprob: -8.401636123657227
    7. 'ti' → logprob: -10.526636123657227
    8. 'T' → logprob: -11.651636123657227
    9. 'tr' → logprob: -12.026636123657227
    10. 'ts' → logprob: -12.026636123657227

Token 1193: ' ti' (ID: 2919)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.21732454001903534
    2. 'timer' → logprob: -1.7173244953155518
    3. 'tm' → logprob: -4.342324733734131
    4. 'time' → logprob: -6.467324733734131
    5. 'tim' → logprob: -7.092324733734131
    6. 'T' → logprob: -8.217324256896973
    7. '   ' → logprob: -10.217324256896973
    8. 'ti' (adapté à ' ti') → logprob: -10.217324256896973
    9. 'task' → logprob: -12.217324256896973
    10. 'Timer' → logprob: -12.467324256896973

Token 1194: ' =' (ID: 314)
  Prédit: 'mer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mer' → logprob: -8.304016228066757e-05
    2. 'm' → logprob: -10.000082969665527
    3. ' =' → logprob: -10.750082969665527
    4. 'me' → logprob: -12.125082969665527
    5. '   ' → logprob: -12.500082969665527
    6. 'timer' → logprob: -12.750082969665527
    7. '=' → logprob: -13.250082969665527
    8. 't' → logprob: -14.500082969665527
    9. '  ' → logprob: -15.000082969665527
    10. 'mes' → logprob: -15.125082969665527

Token 1195: ' timer' (ID: 16905)
  Prédit: 'timer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'timer' → logprob: -6.2729995988775045e-06
    2. ' timer' → logprob: -12.000006675720215
    3. '	timer' → logprob: -18.3750057220459
    4. 'tim' → logprob: -20.0000057220459
    5. 'time' → logprob: -20.3750057220459
    6. '(timer' → logprob: -20.5000057220459
    7. '.timer' → logprob: -21.0000057220459
    8. 'Timer' → logprob: -21.6250057220459
    9. 't' → logprob: -21.7500057220459
    10. 'timeout' → logprob: -22.6250057220459

Token 1196: '()
' (ID: 1234)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.04612475633621216
    2. '()' → logprob: -3.2961246967315674
    3. '(t' → logprob: -5.1711249351501465
    4. '()
' → logprob: -6.9211249351501465
    5. 'ti' → logprob: -7.0461249351501465
    6. '(' → logprob: -8.796124458312988
    7. '(timer' → logprob: -8.796124458312988
    8. 't' → logprob: -9.046124458312988
    9. '(run' → logprob: -10.546124458312988
    10. 'run' → logprob: -10.671124458312988

Token 1197: '   ' (ID: 271)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' → logprob: -0.00899376068264246
    2. '   ' → logprob: -4.758993625640869
    3. '	ti' → logprob: -7.883993625640869
    4. ' ti' → logprob: -13.883994102478027
    5. 'tii' → logprob: -14.258994102478027
    6. '
' → logprob: -14.758994102478027
    7. '  ' → logprob: -15.383994102478027
    8. '```' → logprob: -16.50899314880371
    9. 'tti' → logprob: -16.63399314880371
    10. '    
' → logprob: -17.50899314880371

Token 1198: ' ti' (ID: 2919)
  Prédit: 'ti'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ti' (adapté à ' ti') → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -14.125000953674316
    3. '	ti' → logprob: -16.25
    4. ' ti' → logprob: -17.25
    5. 'tii' → logprob: -19.125
    6. 'while' → logprob: -19.5
    7. '
' → logprob: -19.875
    8. 'tu' → logprob: -21.375
    9. 'for' → logprob: -21.625
    10. 'vi' → logprob: -21.875

Token 1199: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -8.804671233519912e-05
    2. 'run' → logprob: -9.50008773803711
    3. '.' → logprob: -11.25008773803711
    4. ' .' → logprob: -16.50008773803711
    5. ' run' → logprob: -17.00008773803711
    6. '
' → logprob: -17.75008773803711
    7. '	run' → logprob: -18.00008773803711
    8. '.
' → logprob: -18.25008773803711
    9. '   ' → logprob: -18.87508773803711
    10. '(run' → logprob: -19.37508773803711

Token 1200: '(shop' (ID: 170425)
  Prédit: '(shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shop' → logprob: -0.10025961697101593
    2. '(driver' → logprob: -2.35025954246521
    3. 'shop' → logprob: -10.225259780883789
    4. '(ship' → logprob: -11.225259780883789
    5. '(dr' → logprob: -13.600259780883789
    6. 'driver' → logprob: -14.350259780883789
    7. '(' → logprob: -14.475259780883789
    8. '(sh' → logprob: -14.850259780883789
    9. '(s' → logprob: -16.60025978088379
    10. '(vehicle' → logprob: -16.60025978088379

Token 1201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007272057700902224
    2. '(driver' → logprob: -7.25072717666626
    3. ' ,' → logprob: -11.375727653503418
    4. 'driver' → logprob: -12.375727653503418
    5. ',
' → logprob: -14.625727653503418
    6. ')' → logprob: -14.750727653503418
    7. '(' → logprob: -15.250727653503418
    8. '	driver' → logprob: -15.625727653503418
    9. '.driver' → logprob: -16.1257266998291
    10. ' driver' → logprob: -16.3757266998291

Token 1202: ' driver' (ID: 8931)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -2.7610454708337784e-05
    2. ' driver' → logprob: -10.500027656555176
    3. '	driver' → logprob: -17.25002670288086
    4. '   ' → logprob: -18.00002670288086
    5. '(driver' → logprob: -18.37502670288086
    6. '.driver' → logprob: -20.12502670288086
    7. 'dr' → logprob: -20.37502670288086
    8. 'drive' → logprob: -20.75002670288086
    9. ' ' → logprob: -20.87502670288086
    10. '  ' → logprob: -21.00002670288086

Token 1203: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018074316903948784
    2. '()' → logprob: -4.6430745124816895
    3. '<|end|>' → logprob: -4.8930745124816895
    4. '())' → logprob: -8.018074035644531
    5. '
' → logprob: -8.518074035644531
    6. '```' → logprob: -9.643074035644531
    7. ' )' → logprob: -10.018074035644531
    8. '(' → logprob: -10.018074035644531
    9. '()
' → logprob: -10.143074035644531
    10. '<|end|>' → logprob: -11.393074035644531


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1201
Tokens correctement prédits (1ère position, stricte): 530
Tokens correctement prédits (1ère position, avec adaptation): 565
Tokens correctement prédits (top 10): 1008
Précision stricte (1ère position): 44.13%
Précision adaptée (1ère position): 47.04%
Précision (top 10): 83.93%
================================================================================
