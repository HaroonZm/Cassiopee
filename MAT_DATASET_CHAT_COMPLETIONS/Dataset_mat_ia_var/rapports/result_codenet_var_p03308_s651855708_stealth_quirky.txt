================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
nombreUtilisateurs = int(input())
listeValores = list(map(int, input().split()))

def F(l):
    resultat = 0
    for x in l:
        if x > resultat:
            resultat = x
    return resultat

def Minimo(L):
    r=L[0]
    for z in L:
        if z<r:
            r=z
    return r

# Calculagué la diferencia
différence_valeurs = lambda L: F(L) - Minimo(L)

print(difference_valeurs := différence_valeurs(listeValores))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'nombre' (ID: 28576)
  → Token d'amorce (pas de prédiction)

Token 1: 'Util' (ID: 3339)
  → Token d'amorce (pas de prédiction)

Token 2: 'isateurs' (ID: 153228)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1155112013220787
    2. '[' → logprob: -2.865511178970337
    3. '=' → logprob: -3.365511178970337
    4. ';' → logprob: -4.865511417388916
    5. 's' → logprob: -5.865511417388916
    6. ')' → logprob: -6.615511417388916
    7. ',' → logprob: -6.615511417388916
    8. 'E' → logprob: -7.615511417388916
    9. 'S' → logprob: -7.615511417388916
    10. 'e' → logprob: -7.740511417388916

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12754783034324646
    2. ' []' → logprob: -2.6275477409362793
    3. '0' → logprob: -3.5025477409362793
    4. ' "' → logprob: -4.877547740936279
    5. '"' → logprob: -5.627547740936279
    6. '[]' → logprob: -6.627547740936279
    7. ' len' → logprob: -7.502547740936279
    8. '10' → logprob: -7.502547740936279
    9. '20' → logprob: -7.752547740936279
    10. '3' → logprob: -7.877547740936279

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001764905289746821
    2. ''' → logprob: -7.37676477432251
    3. '('' → logprob: -7.75176477432251
    4. '```' → logprob: -8.626765251159668
    5. '("("' → logprob: -9.001765251159668
    6. '`' → logprob: -9.501765251159668
    7. '()' → logprob: -10.251765251159668
    8. ')' → logprob: -10.376765251159668
    9. '(nombre' → logprob: -10.376765251159668
    10. '_' → logprob: -10.751765251159668

Token 6: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009523260407149792
    2. '()' → logprob: -5.134523391723633
    3. ')' → logprob: -6.259523391723633
    4. '("("' → logprob: -7.134523391723633
    5. '())' → logprob: -8.259523391723633
    6. '('' → logprob: -8.759523391723633
    7. '(""))' → logprob: -9.134523391723633
    8. '(
' → logprob: -9.509523391723633
    9. '("")' → logprob: -10.384523391723633
    10. '(nombre' → logprob: -10.509523391723633

Token 7: 'liste' (ID: 69656)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6247174739837646
    2. ')' → logprob: -1.9997174739837646
    3. ' ' → logprob: -2.3747174739837646
    4. '=' → logprob: -2.8747174739837646
    5. '\' → logprob: -2.9997174739837646
    6. '\n' → logprob: -3.3747174739837646
    7. '#' → logprob: -3.6247174739837646
    8. '*' → logprob: -3.8747174739837646
    9. '>' → logprob: -4.249717712402344
    10. '(' → logprob: -5.374717712402344

Token 8: 'Valores' (ID: 189572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05218087136745453
    2. '_util' → logprob: -3.927180767059326
    3. '[' → logprob: -4.302180767059326
    4. 'Des' → logprob: -5.552180767059326
    5. 'Utilisateur' → logprob: -5.927180767059326
    6. ')' → logprob: -5.927180767059326
    7. '_des' → logprob: -6.052180767059326
    8. 'Util' → logprob: -6.677180767059326
    9. '_users' → logprob: -7.302180767059326
    10. 'Users' → logprob: -7.552180767059326

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20690858364105225
    2. '_' → logprob: -2.456908702850342
    3. ')' → logprob: -3.081908702850342
    4. '.' → logprob: -3.831908702850342
    5. '[]' → logprob: -4.706908702850342
    6. '=' → logprob: -4.831908702850342
    7. 's' → logprob: -5.331908702850342
    8. '[:]' → logprob: -5.706908702850342
    9. ' =' → logprob: -5.831908702850342
    10. '['' → logprob: -7.331908702850342

Token 10: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2226862758398056
    2. '[]' → logprob: -1.7226862907409668
    3. '[' → logprob: -4.722686290740967
    4. ' [' → logprob: -5.472686290740967
    5. 'list' → logprob: -5.597686290740967
    6. ' ' → logprob: -6.222686290740967
    7. ' list' → logprob: -6.722686290740967
    8. '[input' → logprob: -8.097685813903809
    9. 'input' → logprob: -8.347685813903809
    10. '()' → logprob: -8.597685813903809

Token 11: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012979733292013407
    2. '(range' → logprob: -7.001297950744629
    3. '(input' → logprob: -9.626297950744629
    4. '((' → logprob: -10.126297950744629
    5. '(

' → logprob: -10.126297950744629
    6. '("("' → logprob: -10.501297950744629
    7. '(
' → logprob: -10.626297950744629
    8. '(int' → logprob: -10.876297950744629
    9. '(nombre' → logprob: -11.001297950744629
    10. ')' → logprob: -11.376297950744629

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005065702833235264
    2. '(' → logprob: -5.75506591796875
    3. '(input' → logprob: -6.38006591796875
    4. '(str' → logprob: -9.50506591796875
    5. '(lambda' → logprob: -9.88006591796875
    6. 'int' → logprob: -10.00506591796875
    7. '(float' → logprob: -12.00506591796875
    8. '(
' → logprob: -12.13006591796875
    9. '<int' → logprob: -12.75506591796875
    10. '(eval' → logprob: -13.38006591796875

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.021829811856150627
    2. ',input' → logprob: -3.896829843521118
    3. 'input' → logprob: -7.146829605102539
    4. ',' → logprob: -8.521829605102539
    5. '(' → logprob: -8.771829605102539
    6. '=input' → logprob: -9.271829605102539
    7. '))' → logprob: -11.396829605102539
    8. ' input' → logprob: -11.521829605102539
    9. ')' → logprob: -11.521829605102539
    10. ' (' → logprob: -12.146829605102539

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023289969190955162
    2. ' input' → logprob: -3.773289918899536
    3. '(input' → logprob: -10.148289680480957
    4. ',input' → logprob: -12.523289680480957
    5. '=input' → logprob: -14.523289680480957
    6. '	input' → logprob: -14.773289680480957
    7. ' ' → logprob: -15.273289680480957
    8. ')' → logprob: -15.898289680480957
    9. '<input' → logprob: -16.023290634155273
    10. '))' → logprob: -16.023290634155273

Token 15: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3376576006412506
    2. '()))' → logprob: -1.4626575708389282
    3. '())' → logprob: -3.3376576900482178
    4. '()));' → logprob: -5.212657451629639
    5. '(' → logprob: -5.337657451629639
    6. '())))' → logprob: -5.712657451629639
    7. '().' → logprob: -6.212657451629639
    8. '()>' → logprob: -6.462657451629639
    9. '(()' → logprob: -7.212657451629639
    10. '()`' → logprob: -8.837657928466797

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00044056313345208764
    2. 'strip' → logprob: -7.75044059753418
    3. 'rstrip' → logprob: -11.62544059753418
    4. ' split' → logprob: -14.87544059753418
    5. 'spl' → logprob: -15.25044059753418
    6. '(split' → logprob: -15.87544059753418
    7. 'replace' → logprob: -16.50044059753418
    8. ')' → logprob: -16.62544059753418
    9. 's' → logprob: -18.50044059753418
    10. '.split' → logprob: -19.00044059753418

Token 17: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3891073763370514
    2. '())' → logprob: -1.389107346534729
    3. '()' → logprob: -2.7641074657440186
    4. '())))' → logprob: -5.1391072273254395
    5. ')' → logprob: -6.6391072273254395
    6. '))' → logprob: -6.7641072273254395
    7. '(' → logprob: -6.7641072273254395
    8. '('' → logprob: -8.264107704162598
    9. ')))' → logprob: -8.764107704162598
    10. '()>' → logprob: -10.889107704162598

Token 18: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9236389398574829
    2. 'for' → logprob: -1.173638939857483
    3. ')' → logprob: -2.0486388206481934
    4. '#' → logprob: -2.6736388206481934
    5. 'n' → logprob: -4.673638820648193
    6. 'total' → logprob: -4.673638820648193
    7. 'f' → logprob: -4.798638820648193
    8. 'r' → logprob: -4.923638820648193
    9. 'i' → logprob: -4.923638820648193
    10. 'a' → logprob: -5.298638820648193

Token 19: ' F' (ID: 454)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32540443539619446
    2. ' calcul' → logprob: -2.700404405593872
    3. ' calculate' → logprob: -3.075404405593872
    4. ' espace' → logprob: -3.325404405593872
    5. ' space' → logprob: -3.575404405593872
    6. ' nombre' → logprob: -3.950404405593872
    7. ' somme' → logprob: -4.200404644012451
    8. ' calcular' → logprob: -4.575404644012451
    9. ' nom' → logprob: -5.325404644012451
    10. ' ' → logprob: -5.325404644012451

Token 20: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08564241975545883
    2. 'u' → logprob: -3.4606423377990723
    3. 'o' → logprob: -3.9606423377990723
    4. '_' → logprob: -4.335642337799072
    5. '(u' → logprob: -5.710642337799072
    6. '(n' → logprob: -5.835642337799072
    7. '(nombre' → logprob: -5.835642337799072
    8. 'a' → logprob: -6.210642337799072
    9. 'e' → logprob: -6.710642337799072
    10. '('' → logprob: -7.335642337799072

Token 21: '):
' (ID: 1883)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.03290889039635658
    2. '):' → logprob: -4.407908916473389
    3. 'ist' → logprob: -4.532908916473389
    4. ')' → logprob: -6.032908916473389
    5. 'a' → logprob: -6.407908916473389
    6. '[' → logprob: -6.532908916473389
    7. 'i' → logprob: -7.282908916473389
    8. 'e' → logprob: -7.782908916473389
    9. ')]' → logprob: -7.782908916473389
    10. '(' → logprob: -7.907908916473389

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014542344026267529
    2. ' ' → logprob: -4.514542579650879
    3. 'r' → logprob: -7.014542579650879
    4. ' return' → logprob: -7.389542579650879
    5. '    
' → logprob: -7.764542579650879
    6. '  ' → logprob: -8.139542579650879
    7. '    ' → logprob: -8.139542579650879
    8. '[' → logprob: -8.764542579650879
    9. 'return' → logprob: -9.014542579650879
    10. ' if' → logprob: -9.264542579650879

Token 23: ' resultat' (ID: 67404)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5169444680213928
    2. '   ' → logprob: -1.516944408416748
    3. 's' → logprob: -3.641944408416748
    4. 'return' → logprob: -3.641944408416748
    5. ' if' → logprob: -3.641944408416748
    6. ' return' → logprob: -3.766944408416748
    7. 'n' → logprob: -4.016944408416748
    8. 'i' → logprob: -4.266944408416748
    9. ' ' → logprob: -4.766944408416748
    10. ' r' → logprob: -4.891944408416748

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36444976925849915
    2. '=' → logprob: -1.2394497394561768
    3. ' +=' → logprob: -4.489449977874756
    4. ' ' → logprob: -5.739449977874756
    5. '+=' → logprob: -7.364449977874756
    6. '+' → logprob: -7.989449977874756
    7. '_' → logprob: -8.739449501037598
    8. '=[]' → logprob: -9.864449501037598
    9. '   ' → logprob: -9.989449501037598
    10. '[' → logprob: -10.114449501037598

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20336779952049255
    2. ' ' → logprob: -1.703367829322815
    3. '[]' → logprob: -6.953367710113525
    4. ' []' → logprob: -6.953367710113525
    5. 'sum' → logprob: -11.328368186950684
    6. ' sum' → logprob: -11.578368186950684
    7. '[' → logprob: -11.953368186950684
    8. 'len' → logprob: -12.578368186950684
    9. '1' → logprob: -12.578368186950684
    10. ' [' → logprob: -13.703368186950684

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014676038408651948
    2. '[]' → logprob: -6.751467704772949
    3. 'sum' → logprob: -8.37646770477295
    4. ' ' → logprob: -10.37646770477295
    5. 'len' → logprob: -10.75146770477295
    6. '[' → logprob: -12.25146770477295
    7. '1' → logprob: -12.37646770477295
    8. ' []' → logprob: -12.87646770477295
    9. 's' → logprob: -14.25146770477295
    10. ' sum' → logprob: -14.75146770477295

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.937640905380249
    2. ' for' → logprob: -1.187640905380249
    3. 'for' → logprob: -2.187640905380249
    4. ' ' → logprob: -2.312640905380249
    5. '
' → logprob: -3.187640905380249
    6. '<|end|>' → logprob: -3.687640905380249
    7. '  ' → logprob: -5.187641143798828
    8. '	for' → logprob: -5.312641143798828
    9. '    
' → logprob: -5.437641143798828
    10. ')' → logprob: -5.687641143798828

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34035784006118774
    2. ' for' → logprob: -1.840357780456543
    3. ' ' → logprob: -2.715357780456543
    4. 'for' → logprob: -3.215357780456543
    5. '
' → logprob: -5.215357780456543
    6. '    
' → logprob: -5.590357780456543
    7. ' 
' → logprob: -5.715357780456543
    8. '  ' → logprob: -5.840357780456543
    9. '<|end|>' → logprob: -5.965357780456543
    10. '	for' → logprob: -6.465357780456543

Token 29: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.49917253851890564
    2. ' for' → logprob: -0.999172568321228
    3. '   ' → logprob: -3.7491724491119385
    4. ' ' → logprob: -6.874172687530518
    5. '	for' → logprob: -9.87417221069336
    6. '
' → logprob: -9.87417221069336
    7. '  ' → logprob: -10.12417221069336
    8. '```' → logprob: -10.87417221069336
    9. '    
' → logprob: -11.12417221069336
    10. 'n' → logprob: -11.74917221069336

Token 30: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.927108883857727
    2. ' val' → logprob: -1.177108883857727
    3. ' x' → logprob: -2.1771087646484375
    4. ' valeur' → logprob: -2.4271087646484375
    5. ' v' → logprob: -3.6771087646484375
    6. 'val' → logprob: -3.9271087646484375
    7. ' ' → logprob: -4.5521087646484375
    8. ' nombre' → logprob: -5.0521087646484375
    9. ' value' → logprob: -5.3021087646484375
    10. 'i' → logprob: -5.4271087646484375

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01205970998853445
    2. 'in' → logprob: -4.512059688568115
    3. ' ' → logprob: -7.137059688568115
    4. ',' → logprob: -9.762060165405273
    5. ' ,' → logprob: -10.262060165405273
    6. '<|end|>' → logprob: -10.762060165405273
    7. '  ' → logprob: -10.887060165405273
    8. ')' → logprob: -11.012060165405273
    9. 's' → logprob: -11.387060165405273
    10. ' en' → logprob: -12.199560165405273

Token 32: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.018303755670785904
    2. 'l' → logprob: -4.143303871154785
    3. ' range' → logprob: -6.893303871154785
    4. ' ' → logprob: -7.268303871154785
    5. '	l' → logprob: -7.893303871154785
    6. 'range' → logprob: -9.768303871154785
    7. ' liste' → logprob: -10.018303871154785
    8. ' ' → logprob: -10.893303871154785
    9. ' lst' → logprob: -11.143303871154785
    10. 'liste' → logprob: -12.018303871154785

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08520616590976715
    2. ' :' → logprob: -2.5852062702178955
    3. '+' → logprob: -5.585206031799316
    4. '   ' → logprob: -7.460206031799316
    5. ')' → logprob: -7.835206031799316
    6. ',' → logprob: -7.960206031799316
    7. ' in' → logprob: -8.460206031799316
    8. '=' → logprob: -8.835206031799316
    9. ' ,' → logprob: -9.085206031799316
    10. '    ' → logprob: -9.085206031799316

Token 34: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1025142669677734
    2. '    ' → logprob: -1.3525142669677734
    3. '       ' → logprob: -1.6025142669677734
    4. ' ' → logprob: -1.7275142669677734
    5. '     
' → logprob: -4.852514266967773
    6. '+' → logprob: -5.477514266967773
    7. ' 
' → logprob: -5.602514266967773
    8. '    
' → logprob: -5.852514266967773
    9. '  ' → logprob: -5.977514266967773
    10. '<|end|>' → logprob: -6.477514266967773

Token 35: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5300629734992981
    2. ' ' → logprob: -1.5300629138946533
    3. ' result' → logprob: -2.5300629138946533
    4. '   ' → logprob: -3.5300629138946533
    5. '    ' → logprob: -3.7800629138946533
    6. 'r' → logprob: -3.7800629138946533
    7. '+' → logprob: -4.405063152313232
    8. ' resultat' → logprob: -4.780063152313232
    9. ' )' → logprob: -5.905063152313232
    10. 'x' → logprob: -6.030063152313232

Token 36: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04102584719657898
    2. ' ' → logprob: -3.4160258769989014
    3. 'x' → logprob: -4.916025638580322
    4. ' (' → logprob: -11.54102611541748
    5. '(' → logprob: -12.54102611541748
    6. '(x' → logprob: -12.79102611541748
    7. ' not' → logprob: -13.29102611541748
    8. ' ' → logprob: -13.41602611541748
    9. ' )' → logprob: -13.91602611541748
    10. '  ' → logprob: -14.04102611541748

Token 37: ' >' (ID: 1424)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5113732814788818
    2. ' %' → logprob: -1.8863732814788818
    3. ' >' → logprob: -1.8863732814788818
    4. '>' → logprob: -2.386373281478882
    5. '==' → logprob: -6.761373519897461
    6. ' ==' → logprob: -6.886373519897461
    7. ' ' → logprob: -7.386373519897461
    8. ' <' → logprob: -7.386373519897461
    9. '<' → logprob: -7.636373519897461
    10. ' >=' → logprob: -7.761373519897461

Token 38: ' resultat' (ID: 67404)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08185175806283951
    2. '0' → logprob: -2.5818517208099365
    3. ' resultat' → logprob: -6.581851959228516
    4. 'result' → logprob: -7.581851959228516
    5. ' result' → logprob: -7.706851959228516
    6. '1' → logprob: -8.581851959228516
    7. '5' → logprob: -9.206851959228516
    8. '2' → logprob: -10.331851959228516
    9. '3' → logprob: -10.581851959228516
    10. '  ' → logprob: -10.706851959228516

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018530222587287426
    2. ' :' → logprob: -9.250185012817383
    3. ':
' → logprob: -9.875185012817383
    4. '=' → logprob: -10.375185012817383
    5. '+' → logprob: -13.750185012817383
    6. '+:' → logprob: -14.250185012817383
    7. ' and' → logprob: -14.375185012817383
    8. 'x' → logprob: -14.375185012817383
    9. ' =' → logprob: -14.625185012817383
    10. ' ' → logprob: -14.750185012817383

Token 40: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2930445671081543
    2. 'x' → logprob: -1.6680445671081543
    3. ' x' → logprob: -1.6680445671081543
    4. ' :' → logprob: -1.7930445671081543
    5. ':' → logprob: -2.4180445671081543
    6. ' ' → logprob: -3.1680445671081543
    7. '=' → logprob: -3.2930445671081543
    8. '    ' → logprob: -5.543044567108154
    9. ' :
' → logprob: -6.168044567108154
    10. ' 
' → logprob: -6.293044567108154

Token 41: ' resultat' (ID: 67404)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.530317485332489
    2. ' x' → logprob: -1.0303175449371338
    3. ' resultat' → logprob: -3.655317544937134
    4. 'result' → logprob: -3.780317544937134
    5. ' résultat' → logprob: -6.155317306518555
    6. ' ' → logprob: -6.405317306518555
    7. ' result' → logprob: -6.530317306518555
    8. ' =' → logprob: -7.905317306518555
    9. '=' → logprob: -8.905317306518555
    10. '=result' → logprob: -9.655317306518555

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804275393486023
    2. '=' → logprob: -3.2880427837371826
    3. ' ' → logprob: -14.413043022155762
    4. '=x' → logprob: -14.413043022155762
    5. ' =
' → logprob: -16.288042068481445
    6. ' x' → logprob: -17.913042068481445
    7. ' =)' → logprob: -18.038042068481445
    8. ' +=' → logprob: -18.288042068481445
    9. 'x' → logprob: -18.413042068481445
    10. '＝' → logprob: -18.913042068481445

Token 43: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3132774829864502
    2. ' x' → logprob: -1.3132774829864502
    3. ' ' → logprob: -11.063277244567871
    4. ' ' → logprob: -16.563278198242188
    5. '	x' → logprob: -17.563278198242188
    6. '_' → logprob: -20.313278198242188
    7. 's' → logprob: -20.938278198242188
    8. '(x' → logprob: -21.188278198242188
    9. 'c' → logprob: -21.313278198242188
    10. ' ‌' → logprob: -21.688278198242188

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6713744401931763
    2. '   ' → logprob: -1.6713744401931763
    3. ' 
' → logprob: -1.6713744401931763
    4. ' ' → logprob: -3.4213743209838867
    5. '\n' → logprob: -3.7963743209838867
    6. '  
' → logprob: -4.171374320983887
    7. '    
' → logprob: -4.421374320983887
    8. 'return' → logprob: -4.546374320983887
    9. ' return' → logprob: -5.421374320983887
    10. ':return' → logprob: -5.796374320983887

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3668108284473419
    2. '
' → logprob: -1.3668107986450195
    3. 'return' → logprob: -4.1168107986450195
    4. ' 
' → logprob: -4.3668107986450195
    5. ' return' → logprob: -5.3668107986450195
    6. ' ' → logprob: -5.6168107986450195
    7. '\n' → logprob: -5.7418107986450195
    8. ':return' → logprob: -5.8668107986450195
    9. '    
' → logprob: -6.1168107986450195
    10. '  
' → logprob: -6.8668107986450195

Token 46: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.800483763217926
    2. 'r' → logprob: -1.1754837036132812
    3. '   ' → logprob: -1.8004837036132812
    4. ' ' → logprob: -3.3004837036132812
    5. ' return' → logprob: -3.9254837036132812
    6. '
' → logprob: -4.925483703613281
    7. ':return' → logprob: -5.925483703613281
    8. ' 
' → logprob: -6.300483703613281
    9. '    
' → logprob: -6.425483703613281
    10. '  ' → logprob: -7.050483703613281

Token 47: ' resultat' (ID: 67404)
  Prédit: ' resultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' resultat' → logprob: -0.4747340679168701
    2. 'result' → logprob: -0.9747340679168701
    3. ' result' → logprob: -7.849734306335449
    4. ' résultat' → logprob: -8.59973430633545
    5. ' ' → logprob: -9.84973430633545
    6. 'r' → logprob: -11.09973430633545
    7. ' ' → logprob: -12.34973430633545
    8. 'res' → logprob: -12.72473430633545
    9. '[result' → logprob: -13.59973430633545
    10. '_result' → logprob: -13.59973430633545

Token 48: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8428723812103271
    2. '*' → logprob: -2.467872381210327
    3. ')' → logprob: -2.467872381210327
    4. '#' → logprob: -3.092872381210327
    5. '[' → logprob: -3.092872381210327
    6. ' ' → logprob: -3.217872381210327
    7. 'n' → logprob: -3.217872381210327
    8. '.' → logprob: -3.467872381210327
    9. '_' → logprob: -3.842872381210327
    10. ' 
' → logprob: -4.092872619628906

Token 50: ' Min' (ID: 4438)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5949383974075317
    2. ' F' → logprob: -1.8449383974075317
    3. ' max' → logprob: -1.8449383974075317
    4. '_' → logprob: -3.469938278198242
    5. ' espace' → logprob: -4.469938278198242
    6. ' space' → logprob: -4.719938278198242
    7. ' somme' → logprob: -4.844938278198242
    8. 'F' → logprob: -5.157438278198242
    9. ' moyenne' → logprob: -5.157438278198242
    10. ' nombre' → logprob: -5.469938278198242

Token 51: 'imo' (ID: 4536)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.1622326821088791
    2. '(' → logprob: -1.9122326374053955
    3. 'imum' → logprob: -6.787232875823975
    4. '(a' → logprob: -8.162232398986816
    5. '(lst' → logprob: -8.287232398986816
    6. '(L' → logprob: -9.037232398986816
    7. ' (' → logprob: -10.662232398986816
    8. '(lista' → logprob: -10.662232398986816
    9. '(list' → logprob: -10.912232398986816
    10. '(s' → logprob: -11.287232398986816

Token 52: '(L' (ID: 11075)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.474808007478714
    2. '(l' → logprob: -0.9748079776763916
    3. '(lst' → logprob: -8.224807739257812
    4. '(a' → logprob: -8.974807739257812
    5. '(L' → logprob: -9.099807739257812
    6. '(lista' → logprob: -9.974807739257812
    7. '(ll' → logprob: -10.349807739257812
    8. '(list' → logprob: -10.474807739257812
    9. ' (' → logprob: -10.849807739257812
    10. '(s' → logprob: -10.974807739257812

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10289334505796432
    2. ')' → logprob: -2.352893352508545
    3. ' ):' → logprob: -6.852893352508545
    4. '(l' → logprob: -6.977893352508545
    5. ',l' → logprob: -8.977892875671387
    6. '):
' → logprob: -9.102892875671387
    7. ' )' → logprob: -9.477892875671387
    8. '(' → logprob: -10.102892875671387
    9. '_list' → logprob: -10.352892875671387
    10. 'List' → logprob: -10.602892875671387

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7765142321586609
    2. ' result' → logprob: -1.4015142917633057
    3. ' min' → logprob: -2.5265142917633057
    4. ' resultat' → logprob: -2.9015142917633057
    5. ' r' → logprob: -3.2765142917633057
    6. ' l' → logprob: -3.4015142917633057
    7. ' m' → logprob: -4.026514053344727
    8. ' return' → logprob: -4.151514053344727
    9. ' minimum' → logprob: -4.151514053344727
    10. 'r' → logprob: -4.901514053344727

Token 55: ' r' (ID: 428)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.0748746395111084
    2. ' result' → logprob: -1.6998746395111084
    3. 'min' → logprob: -1.9498746395111084
    4. 'result' → logprob: -2.1998746395111084
    5. ' L' → logprob: -2.8248746395111084
    6. ' resultat' → logprob: -3.0748746395111084
    7. 'm' → logprob: -3.8248746395111084
    8. 'r' (adapté à ' r') → logprob: -3.9498746395111084
    9. 'L' → logprob: -4.1998748779296875
    10. ' m' → logprob: -4.3248748779296875

Token 56: '=L' (ID: 170129)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.09572038054466248
    2. 'e' → logprob: -2.7207202911376953
    3. 'eturn' → logprob: -4.345720291137695
    4. '=' → logprob: -5.220720291137695
    5. ' =' → logprob: -5.845720291137695
    6. 'és' → logprob: -7.095720291137695
    7. 'esu' → logprob: -7.095720291137695
    8. 'et' → logprob: -7.345720291137695
    9. 'a' → logprob: -7.970720291137695
    10. 'ea' → logprob: -8.220720291137695

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006837221444584429
    2. 'es' → logprob: -7.875683784484863
    3. 'eturn' → logprob: -8.500683784484863
    4. 'et' → logprob: -11.000683784484863
    5. 'e' → logprob: -11.500683784484863
    6. 'ec' → logprob: -11.625683784484863
    7. '0' → logprob: -12.000683784484863
    8. 'ed' → logprob: -12.125683784484863
    9. '[:]' → logprob: -12.125683784484863
    10. '[-' → logprob: -12.250683784484863

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017636561824474484
    2. '1' → logprob: -8.875176429748535
    3. ' ' → logprob: -11.000176429748535
    4. '-' → logprob: -11.500176429748535
    5. ':' → logprob: -13.312676429748535
    6. ']' → logprob: -13.437676429748535
    7. ')' → logprob: -13.562676429748535
    8. '])' → logprob: -14.187676429748535
    9. '```' → logprob: -15.125176429748535
    10. 'i' → logprob: -15.187676429748535

Token 59: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0051786089316010475
    2. ' ]' → logprob: -5.755178451538086
    3. ']
' → logprob: -6.380178451538086
    4. ')' → logprob: -8.380178451538086
    5. '])' → logprob: -10.880178451538086
    6. ']int' → logprob: -11.380178451538086
    7. ' ]
' → logprob: -11.505178451538086
    8. ']

' → logprob: -11.630178451538086
    9. '<|end|>' → logprob: -12.255178451538086
    10. ' ' → logprob: -12.880178451538086

Token 60: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20737645030021667
    2. '<|end|>' → logprob: -2.707376480102539
    3. '
' → logprob: -2.832376480102539
    4. '   ' → logprob: -3.957376480102539
    5. 'for' → logprob: -4.082376480102539
    6. ' 
' → logprob: -4.207376480102539
    7. ' ' → logprob: -4.832376480102539
    8. '    
' → logprob: -7.457376480102539
    9. '  
' → logprob: -7.582376480102539
    10. '	for' → logprob: -7.832376480102539

Token 61: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5762535333633423
    2. 'for' (adapté à ' for') → logprob: -0.8262535333633423
    3. '   ' → logprob: -8.701253890991211
    4. '	for' → logprob: -9.076253890991211
    5. ' ' → logprob: -11.076253890991211
    6. ' i' → logprob: -11.576253890991211
    7. 'i' → logprob: -12.201253890991211
    8. '  ' → logprob: -13.076253890991211
    9. '
' → logprob: -14.576253890991211
    10. ' 
' → logprob: -15.701253890991211

Token 62: ' z' (ID: 579)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.171332597732544
    2. ' i' → logprob: -1.171332597732544
    3. 'i' → logprob: -1.671332597732544
    4. ' x' → logprob: -1.671332597732544
    5. ' e' → logprob: -6.421332359313965
    6. 'e' → logprob: -6.671332359313965
    7. ' ' → logprob: -7.421332359313965
    8. ' v' → logprob: -9.046332359313965
    9. ' l' → logprob: -9.171332359313965
    10. 'v' → logprob: -9.296332359313965

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00896789412945509
    2. 'in' → logprob: -4.758967876434326
    3. ' ' → logprob: -8.258968353271484
    4. ' i' → logprob: -9.883968353271484
    5. 'n' → logprob: -11.383968353271484
    6. '	in' → logprob: -11.633968353271484
    7. '   ' → logprob: -12.258968353271484
    8. '  ' → logprob: -12.383968353271484
    9. 'i' → logprob: -12.508968353271484
    10. 's' → logprob: -13.571468353271484

Token 64: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.3142957091331482
    2. 'L' → logprob: -1.314295768737793
    3. ' range' → logprob: -7.064295768737793
    4. ' ' → logprob: -9.314295768737793
    5. 'range' → logprob: -9.939295768737793
    6. '	L' → logprob: -11.189295768737793
    7. '>L' → logprob: -11.689295768737793
    8. ' ' → logprob: -12.314295768737793
    9. '  ' → logprob: -12.439295768737793
    10. '[L' → logprob: -13.689295768737793

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00815920252352953
    2. ' :' → logprob: -4.883159160614014
    3. ':
' → logprob: -7.883159160614014
    4. '   ' → logprob: -8.883159637451172
    5. '[' → logprob: -11.758159637451172
    6. ' :
' → logprob: -12.133159637451172
    7. '  ' → logprob: -12.133159637451172
    8. ' in' → logprob: -12.508159637451172
    9. ' ' → logprob: -13.133159637451172
    10. '):' → logprob: -13.258159637451172

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1195074319839478
    2. '   ' → logprob: -1.2445074319839478
    3. '    ' → logprob: -1.4945074319839478
    4. ' if' → logprob: -3.119507312774658
    5. ' ' → logprob: -3.369507312774658
    6. ' 
' → logprob: -3.494507312774658
    7. '<|end|>' → logprob: -3.869507312774658
    8. '    
' → logprob: -3.994507312774658
    9. '
' → logprob: -6.119507312774658
    10. '        
' → logprob: -6.369507312774658

Token 67: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.050160352140665054
    2. '    ' → logprob: -3.5501604080200195
    3. '   ' → logprob: -4.4251604080200195
    4. 'if' (adapté à ' if') → logprob: -5.3001604080200195
    5. ' ' → logprob: -6.6751604080200195
    6. '       ' → logprob: -6.9251604080200195
    7. '        ' → logprob: -7.5501604080200195
    8. ' 
' → logprob: -9.05016040802002
    9. '```' → logprob: -9.17516040802002
    10. '  ' → logprob: -9.92516040802002

Token 68: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.016058066859841347
    2. 'z' → logprob: -4.141057968139648
    3. '	z' → logprob: -11.141057968139648
    4. ' ' → logprob: -12.766057968139648
    5. ' ' → logprob: -13.016057968139648
    6. '    ' → logprob: -13.391057968139648
    7. '(z' → logprob: -14.016057968139648
    8. '   ' → logprob: -14.266057968139648
    9. ' (' → logprob: -15.141057968139648
    10. ' x' → logprob: -15.391057968139648

Token 69: '<' (ID: 27)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2014935463666916
    2. '<' → logprob: -1.701493501663208
    3. ' ' → logprob: -9.951493263244629
    4. '<|end|>' → logprob: -10.701493263244629
    5. '<n' → logprob: -13.701493263244629
    6. ' <",' → logprob: -14.076493263244629
    7. ' >' → logprob: -14.451493263244629
    8. '<int' → logprob: -14.451493263244629
    9. '   ' → logprob: -14.513993263244629
    10. '<R' → logprob: -14.638993263244629

Token 70: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004622491542249918
    2. ' r' → logprob: -5.379622459411621
    3. ' ' → logprob: -13.254622459411621
    4. '	r' → logprob: -15.004622459411621
    5. '   ' → logprob: -16.004623413085938
    6. '0' → logprob: -17.254623413085938
    7. '  ' → logprob: -17.379623413085938
    8. 'z' → logprob: -17.754623413085938
    9. '<|end|>' → logprob: -17.754623413085938
    10. '```' → logprob: -17.879623413085938

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007002358790487051
    2. ' :' → logprob: -5.507002353668213
    3. ':
' → logprob: -5.882002353668213
    4. ' :
' → logprob: -9.632002830505371
    5. '       ' → logprob: -10.507002830505371
    6. ':return' → logprob: -11.632002830505371
    7. '   ' → logprob: -11.882002830505371
    8. ':r' → logprob: -12.257002830505371
    9. '           ' → logprob: -12.382002830505371
    10. ':
' → logprob: -13.007002830505371

Token 72: '           ' (ID: 352)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.10021594911813736
    2. 'z' → logprob: -2.3502159118652344
    3. '	z' → logprob: -12.600215911865234
    4. '    ' → logprob: -12.725215911865234
    5. '   ' → logprob: -13.725215911865234
    6. '       ' → logprob: -14.225215911865234
    7. ' ' → logprob: -14.975215911865234
    8. '        ' → logprob: -15.975215911865234
    9. ' ' → logprob: -16.350215911865234
    10. 'r' → logprob: -16.350215911865234

Token 73: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.2519727349281311
    2. 'r' (adapté à ' r') → logprob: -1.5019726753234863
    3. ' z' → logprob: -11.001973152160645
    4. 'z' → logprob: -11.376973152160645
    5. ' 
' → logprob: -12.126973152160645
    6. ' ' → logprob: -12.626973152160645
    7. ' ' → logprob: -13.376973152160645
    8. '           ' → logprob: -14.126973152160645
    9. '
' → logprob: -14.376973152160645
    10. 's' → logprob: -14.376973152160645

Token 74: '=z' (ID: 196886)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36898836493492126
    2. '=' → logprob: -1.8689883947372437
    3. '=z' → logprob: -1.8689883947372437
    4. ' z' → logprob: -12.493988037109375
    5. '=r' → logprob: -13.493988037109375
    6. ' ' → logprob: -13.618988037109375
    7. '=x' → logprob: -15.868988037109375
    8. ',z' → logprob: -15.993988037109375
    9. '=l' → logprob: -16.243988037109375
    10. 'z' → logprob: -16.243988037109375

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6365299820899963
    2. '
' → logprob: -0.7615299820899963
    3. 'return' → logprob: -6.761529922485352
    4. '    
' → logprob: -7.136529922485352
    5. '
' → logprob: -7.386529922485352
    6. ' return' → logprob: -7.511529922485352
    7. '<|end|>' → logprob: -8.386529922485352
    8. ' 
' → logprob: -9.136529922485352
    9. '	return' → logprob: -9.386529922485352
    10. '  
' → logprob: -9.386529922485352

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1980893462896347
    2. '   ' → logprob: -1.823089361190796
    3. 'return' → logprob: -4.448089122772217
    4. ' return' → logprob: -6.073089122772217
    5. '    
' → logprob: -6.198089122772217
    6. ' 
' → logprob: -7.448089122772217
    7. '
' → logprob: -7.948089122772217
    8. '<|end|>' → logprob: -8.198089599609375
    9. '  
' → logprob: -8.573089599609375
    10. '	return' → logprob: -8.823089599609375

Token 77: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9542322754859924
    2. '   ' → logprob: -1.4542322158813477
    3. ' return' → logprob: -1.7042322158813477
    4. '
' → logprob: -1.7042322158813477
    5. ' ' → logprob: -5.079232215881348
    6. '    
' → logprob: -5.704232215881348
    7. ' 
' → logprob: -6.579232215881348
    8. '	return' → logprob: -6.704232215881348
    9. '  
' → logprob: -6.704232215881348
    10. '<|end|>' → logprob: -6.829232215881348

Token 78: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3132622241973877
    2. ' r' → logprob: -1.3132622241973877
    3. '	r' → logprob: -15.438261985778809
    4. 'z' → logprob: -15.938261985778809
    5. ' ' → logprob: -16.063262939453125
    6. ' ' → logprob: -16.813262939453125
    7. '  ' → logprob: -18.438262939453125
    8. '(r' → logprob: -18.938262939453125
    9. '   ' → logprob: -19.063262939453125
    10. ' z' → logprob: -19.063262939453125

Token 79: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8270645141601562
    2. '<|end|>' → logprob: -1.7020645141601562
    3. 'n' → logprob: -2.0770645141601562
    4. '
' → logprob: -2.4520645141601562
    5. '#' → logprob: -3.3270645141601562
    6. 'nombre' → logprob: -4.077064514160156
    7. '  
' → logprob: -4.202064514160156
    8. '

' → logprob: -4.827064514160156
    9. ' 
' → logprob: -4.952064514160156
    10. 'l' → logprob: -5.077064514160156

Token 80: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2152177095413208
    2. 'def' → logprob: -1.3402177095413208
    3. 'max' → logprob: -2.0902175903320312
    4. '#' → logprob: -2.8402175903320312
    5. 'n' → logprob: -2.8402175903320312
    6. 'for' → logprob: -3.0902175903320312
    7. 'nombre' → logprob: -3.4652175903320312
    8. 'm' → logprob: -4.215217590332031
    9. 'r' → logprob: -4.465217590332031
    10. 'result' → logprob: -4.840217590332031

Token 81: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3965036869049072
    2. ' for' → logprob: -1.7715036869049072
    3. 'print' → logprob: -1.7715036869049072
    4. ' print' → logprob: -2.7715036869049072
    5. 'n' → logprob: -3.0215036869049072
    6. '#' → logprob: -3.0215036869049072
    7. 'nombre' → logprob: -3.3965036869049072
    8. 'result' → logprob: -3.5215036869049072
    9. 'r' → logprob: -3.7715036869049072
    10. ' if' → logprob: -4.396503448486328

Token 82: 'agu' (ID: 16617)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13107101619243622
    2. 's' → logprob: -3.381071090698242
    3. 'result' → logprob: -3.881071090698242
    4. 'm' → logprob: -3.881071090698242
    5. '=' → logprob: -4.131071090698242
    6. 'ma' → logprob: -5.131071090698242
    7. 'nombre' → logprob: -5.631071090698242
    8. 'min' → logprob: -5.881071090698242
    9. 'maximum' → logprob: -6.131071090698242
    10. '#' → logprob: -6.506071090698242

Token 83: 'é' (ID: 377)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.480254888534546
    2. 'er' → logprob: -1.480254888534546
    3. 'ar' → logprob: -1.855254888534546
    4. 'a' → logprob: -1.855254888534546
    5. 'r' → logprob: -2.480254888534546
    6. 'ation' → logprob: -3.730254888534546
    7. 'l' → logprob: -3.980254888534546
    8. 'o' → logprob: -4.105255126953125
    9. 'ate' → logprob: -4.105255126953125
    10. 'ando' → logprob: -4.105255126953125

Token 84: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.047080837190151215
    2. 's' → logprob: -3.5470807552337646
    3. 'm' → logprob: -6.297080993652344
    4. 'e' → logprob: -6.797080993652344
    5. 'nt' → logprob: -6.797080993652344
    6. 't' → logprob: -6.922080993652344
    7. '=' → logprob: -6.922080993652344
    8. ' ' → logprob: -6.922080993652344
    9. 'p' → logprob: -6.922080993652344
    10. 'l' → logprob: -7.047080993652344

Token 85: ' diferencia' (ID: 50158)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.152957558631897
    2. 's' → logprob: -1.527957558631897
    3. 'd' → logprob: -2.0279574394226074
    4. 'max' → logprob: -2.4029574394226074
    5. 'ma' → logprob: -3.7154574394226074
    6. 'r' → logprob: -3.7779574394226074
    7. 'sum' → logprob: -3.7779574394226074
    8. ' diferencia' → logprob: -4.090457439422607
    9. ' somme' → logprob: -4.527957439422607
    10. ' moyenne' → logprob: -4.527957439422607

Token 86: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8082997798919678
    2. ' entre' → logprob: -1.4332997798919678
    3. 'max' → logprob: -2.3082997798919678
    4. 'entre' → logprob: -2.4332997798919678
    5. '=' → logprob: -3.0582997798919678
    6. ' ' → logprob: -3.4332997798919678
    7. ' between' → logprob: -4.433300018310547
    8. ' max' → logprob: -4.808300018310547
    9. 'between' → logprob: -4.933300018310547
    10. 's' → logprob: -5.558300018310547

Token 87: 'diff' (ID: 31460)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0655509233474731
    2. 'd' → logprob: -1.5655509233474731
    3. 'diff' → logprob: -1.6905509233474731
    4. 'def' → logprob: -2.3155508041381836
    5. 'difference' → logprob: -2.4405508041381836
    6. 'result' → logprob: -4.065550804138184
    7. 'dif' → logprob: -4.315550804138184
    8. 'resultado' → logprob: -4.565550804138184
    9. 'print' → logprob: -4.690550804138184
    10. 's' → logprob: -4.940550804138184

Token 88: 'érence' (ID: 65256)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43560346961021423
    2. ' =' → logprob: -1.1856034994125366
    3. 'er' → logprob: -3.310603380203247
    4. 'érence' → logprob: -5.310603618621826
    5. 'é' → logprob: -5.935603618621826
    6. '_' → logprob: -6.685603618621826
    7. 'e' → logprob: -7.435603618621826
    8. 'érance' → logprob: -7.935603618621826
    9. 'ér' → logprob: -8.185603141784668
    10. 's' → logprob: -9.310603141784668

Token 89: '_val' (ID: 13694)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006077991332858801
    2. '=' → logprob: -5.256077766418457
    3. 's' → logprob: -7.631077766418457
    4. '_' → logprob: -8.381077766418457
    5. ' ' → logprob: -9.006077766418457
    6. 'es' → logprob: -13.381077766418457
    7. '  ' → logprob: -14.006077766418457
    8. ' =
' → logprob: -14.131077766418457
    9. '_=' → logprob: -14.131077766418457
    10. '(s' → logprob: -14.256077766418457

Token 90: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.45365598797798157
    2. 'eur' → logprob: -1.4536559581756592
    3. 'e' → logprob: -2.078655958175659
    4. 'ue' → logprob: -6.203656196594238
    5. '=' → logprob: -6.703656196594238
    6. 'eu' → logprob: -7.453656196594238
    7. ' =' → logprob: -8.203656196594238
    8. 'eux' → logprob: -8.203656196594238
    9. 'eus' → logprob: -8.578656196594238
    10. '```' → logprob: -8.828656196594238

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05508865788578987
    2. '=' → logprob: -2.930088758468628
    3. 's' → logprob: -8.555088996887207
    4. ' ' → logprob: -12.805088996887207
    5. '_' → logprob: -12.930088996887207
    6. '=int' → logprob: -13.555088996887207
    7. '=[]' → logprob: -13.930088996887207
    8. 'es' → logprob: -14.055088996887207
    9. '  ' → logprob: -14.305088996887207
    10. ' ' → logprob: -14.430088996887207

Token 92: ' lambda' (ID: 27871)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.007305122446268797
    2. ' F' → logprob: -5.007305145263672
    3. 'max' → logprob: -8.132305145263672
    4. 'nombre' → logprob: -8.257305145263672
    5. ' max' → logprob: -11.757305145263672
    6. 'Max' → logprob: -11.882305145263672
    7. ' nombre' → logprob: -12.382305145263672
    8. 'nom' → logprob: -12.507305145263672
    9. 'liste' → logprob: -12.507305145263672
    10. 'f' → logprob: -13.132305145263672

Token 93: ' L' (ID: 451)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5646983981132507
    2. 'x' → logprob: -1.1896984577178955
    3. ' lambda' → logprob: -2.8146984577178955
    4. 'lambda' → logprob: -3.1896984577178955
    5. ' liste' → logprob: -5.064698219299316
    6. 'liste' → logprob: -5.314698219299316
    7. ' a' → logprob: -5.314698219299316
    8. 'a' → logprob: -5.814698219299316
    9. 'max' → logprob: -6.439698219299316
    10. ' max' → logprob: -6.689698219299316

Token 94: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032524545677006245
    2. ' :' → logprob: -5.7532525062561035
    3. ':min' → logprob: -10.628252029418945
    4. ':max' → logprob: -10.628252029418945
    5. ',' → logprob: -11.628252029418945
    6. 'max' → logprob: -13.003252029418945
    7. '=' → logprob: -13.253252029418945
    8. ':return' → logprob: -13.753252029418945
    9. 'min' → logprob: -13.878252029418945
    10. '1' → logprob: -14.003252029418945

Token 95: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.07434799522161484
    2. 'max' → logprob: -2.949347972869873
    3. ' F' → logprob: -4.949347972869873
    4. 'Max' → logprob: -5.074347972869873
    5. ' max' → logprob: -5.199347972869873
    6. ' Max' → logprob: -9.199348449707031
    7. 'lambda' → logprob: -9.324348449707031
    8. 'Min' → logprob: -9.824348449707031
    9. 'min' → logprob: -10.074348449707031
    10. 'abs' → logprob: -10.949348449707031

Token 96: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0018228584667667747
    2. '(' → logprob: -6.3768229484558105
    3. '(l' → logprob: -9.626822471618652
    4. '([' → logprob: -10.001822471618652
    5. '(list' → logprob: -13.126822471618652
    6. '([-' → logprob: -13.751822471618652
    7. '(max' → logprob: -13.876822471618652
    8. '(lst' → logprob: -14.251822471618652
    9. '(min' → logprob: -14.501822471618652
    10. '(List' → logprob: -14.501822471618652

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008939516264945269
    2. ')-' → logprob: -7.125894069671631
    3. ' )' → logprob: -9.375893592834473
    4. '())' → logprob: -13.125893592834473
    5. '()' → logprob: -13.625893592834473
    6. ' ' → logprob: -15.125893592834473
    7. '）' → logprob: -15.375893592834473
    8. '(' → logprob: -15.625893592834473
    9. '  ' → logprob: -15.875893592834473
    10. ')+' → logprob: -15.875893592834473

Token 98: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5362237095832825
    2. '-' → logprob: -0.9112237095832825
    3. '()' → logprob: -5.286223888397217
    4. '(' → logprob: -5.411223888397217
    5. '()-' → logprob: -6.786223888397217
    6. ')' → logprob: -7.661223888397217
    7. '-Min' → logprob: -7.661223888397217
    8. '-min' → logprob: -7.661223888397217
    9. ' ' → logprob: -7.911223888397217
    10. '[' → logprob: -9.036223411560059

Token 99: ' Min' (ID: 4438)
  Prédit: 'Min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Min' → logprob: -0.005945033393800259
    2. ' Min' → logprob: -5.130945205688477
    3. 'M' → logprob: -12.005945205688477
    4. 'min' → logprob: -12.380945205688477
    5. '_Min' → logprob: -12.880945205688477
    6. 'Mi' → logprob: -14.380945205688477
    7. 'Mini' → logprob: -14.630945205688477
    8. 'MIN' → logprob: -14.755945205688477
    9. '.Min' → logprob: -15.130945205688477
    10. ' ' → logprob: -15.130945205688477

Token 100: 'imo' (ID: 4536)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0049039083532989025
    2. 'imo' → logprob: -5.504903793334961
    3. '(' → logprob: -7.879903793334961
    4. 'o' → logprob: -9.129903793334961
    5. 'i' → logprob: -9.504903793334961
    6. '(M' → logprob: -9.504903793334961
    7. '(i' → logprob: -10.379903793334961
    8. 'mo' → logprob: -11.129903793334961
    9. '(l' → logprob: -11.254903793334961
    10. '(
' → logprob: -11.379903793334961

Token 101: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0017665742198005319
    2. '(' → logprob: -6.376766681671143
    3. ' (' → logprob: -9.751766204833984
    4. '(l' → logprob: -13.376766204833984
    5. '(S' → logprob: -14.126766204833984
    6. '(
' → logprob: -14.376766204833984
    7. '(s' → logprob: -14.626766204833984
    8. '(I' → logprob: -15.001766204833984
    9. 'L' → logprob: -15.376766204833984
    10. ')' → logprob: -15.376766204833984

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ' )' → logprob: -12.375006675720215
    3. '))' → logprob: -13.875006675720215
    4. '[' → logprob: -14.250006675720215
    5. ')
' → logprob: -14.875006675720215
    6. '(' → logprob: -16.50000762939453
    7. '   ' → logprob: -16.62500762939453
    8. ']' → logprob: -16.75000762939453
    9. ')))' → logprob: -16.75000762939453
    10. ')#' → logprob: -16.75000762939453

Token 103: 'print' (ID: 1598)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01496239472180605
    2. '(
' → logprob: -5.139962196350098
    3. '<|end|>' → logprob: -5.764962196350098
    4. ')' → logprob: -6.389962196350098
    5. '#' → logprob: -7.014962196350098
    6. '
' → logprob: -7.139962196350098
    7. '()' → logprob: -7.514962196350098
    8. '\' → logprob: -7.639962196350098
    9. '\n' → logprob: -7.889962196350098
    10. '(n' → logprob: -8.139962196350098

Token 104: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003396824933588505
    2. '(diff' → logprob: -5.753396987915039
    3. '(d' → logprob: -8.878396987915039
    4. '()' → logprob: -10.628396987915039
    5. '('' → logprob: -11.128396987915039
    6. '("("' → logprob: -11.253396987915039
    7. '((' → logprob: -11.628396987915039
    8. 'diff' → logprob: -12.503396987915039
    9. ' (' → logprob: -12.628396987915039
    10. '(
' → logprob: -13.753396987915039

Token 105: 'ifference' (ID: 30083)
  Prédit: 'iff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iff' → logprob: -0.021931277588009834
    2. 'i' → logprob: -4.021931171417236
    3. 'if' → logprob: -6.146931171417236
    4. 'iffe' → logprob: -7.771931171417236
    5. 'ifference' → logprob: -7.896931171417236
    6. ')' → logprob: -8.396931648254395
    7. 'iffer' → logprob: -8.521931648254395
    8. 'e' → logprob: -8.771931648254395
    9. 'u' → logprob: -10.396931648254395
    10. 'a' → logprob: -10.646931648254395

Token 106: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.2524535059928894
    2. '_' → logprob: -1.5024535655975342
    3. 'e' → logprob: -9.127453804016113
    4. 'val' → logprob: -10.002453804016113
    5. ')_' → logprob: -10.002453804016113
    6. ' _' → logprob: -10.127453804016113
    7. '_r' → logprob: -10.377453804016113
    8. 'é' → logprob: -10.627453804016113
    9. '_va' → logprob: -10.752453804016113
    10. 's' → logprob: -10.877453804016113

Token 107: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.00046856500557623804
    2. 'e' → logprob: -8.500468254089355
    3. 'eur' → logprob: -9.000468254089355
    4. 'ers' → logprob: -9.125468254089355
    5. 'leurs' → logprob: -11.875468254089355
    6. 'reurs' → logprob: -12.000468254089355
    7. 'eus' → logprob: -12.125468254089355
    8. 'ale' → logprob: -12.625468254089355
    9. 'eu' → logprob: -13.125468254089355
    10. '```' → logprob: -13.750468254089355

Token 108: ' :=' (ID: 3405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005299181793816388
    2. '(' → logprob: -8.625530242919922
    3. '[' → logprob: -9.000530242919922
    4. '))' → logprob: -9.250530242919922
    5. '(L' → logprob: -9.875530242919922
    6. ')L' → logprob: -11.000530242919922
    7. '])' → logprob: -11.125530242919922
    8. ' )' → logprob: -11.500530242919922
    9. '[L' → logprob: -12.000530242919922
    10. ']' → logprob: -12.125530242919922

Token 109: ' différence' (ID: 79196)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.1260155588388443
    2. 'diff' → logprob: -3.1260156631469727
    3. 'difference' → logprob: -3.3760156631469727
    4. '(l' → logprob: -3.5010156631469727
    5. ' liste' → logprob: -6.001015663146973
    6. 'l' → logprob: -6.251015663146973
    7. '(d' → logprob: -6.376015663146973
    8. 'list' → logprob: -6.751015663146973
    9. ')' → logprob: -7.001015663146973
    10. '(diff' → logprob: -7.126015663146973

Token 110: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.001963485963642597
    2. '_' → logprob: -6.2519636154174805
    3. '_v' → logprob: -11.37696361541748
    4. 'val' → logprob: -11.75196361541748
    5. ' _' → logprob: -11.87696361541748
    6. '_vals' → logprob: -12.87696361541748
    7. '_va' → logprob: -13.37696361541748
    8. '_)' → logprob: -14.00196361541748
    9. '_values' → logprob: -14.50196361541748
    10. '_VAL' → logprob: -15.00196361541748

Token 111: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.05694270133972168
    2. 'al' → logprob: -3.6819427013397217
    3. 'ales' → logprob: -4.806942939758301
    4. 'a' → logprob: -4.806942939758301
    5. 'ale' → logprob: -5.556942939758301
    6. 'ers' → logprob: -5.931942939758301
    7. 'reurs' → logprob: -6.556942939758301
    8. 'aires' → logprob: -7.181942939758301
    9. 'au' → logprob: -7.306942939758301
    10. 'e' → logprob: -7.431942939758301

Token 112: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0001882823125924915
    2. '(' → logprob: -9.000187873840332
    3. ' (' → logprob: -10.000187873840332
    4. ')' → logprob: -12.000187873840332
    5. '(lista' → logprob: -12.000187873840332
    6. '(lst' → logprob: -12.875187873840332
    7. '(s' → logprob: -13.500187873840332
    8. '(n' → logprob: -13.625187873840332
    9. ')(' → logprob: -14.625187873840332
    10. '(
' → logprob: -15.125187873840332

Token 113: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0035191758070141077
    2. 'ste' → logprob: -5.753519058227539
    3. ')' → logprob: -9.128519058227539
    4. 'ist' → logprob: -9.128519058227539
    5. 'site' → logprob: -10.378519058227539
    6. ' iste' → logprob: -10.503519058227539
    7. 'liste' → logprob: -10.628519058227539
    8. 'istes' → logprob: -11.628519058227539
    9. ']' → logprob: -12.503519058227539
    10. '```' → logprob: -12.628519058227539

Token 114: 'Valores' (ID: 189572)
  Prédit: 'Valores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Valores' → logprob: -0.00699301203712821
    2. ')' → logprob: -5.881992816925049
    3. '))' → logprob: -5.881992816925049
    4. 'val' → logprob: -7.256992816925049
    5. '_val' → logprob: -8.256993293762207
    6. '_values' → logprob: -9.006993293762207
    7. 'Values' → logprob: -9.381993293762207
    8. 'Vale' → logprob: -9.506993293762207
    9. 'Val' → logprob: -10.131993293762207
    10. ' Valores' → logprob: -11.381993293762207

Token 115: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519437372684479
    2. '))' → logprob: -1.5019437074661255
    3. ')))' → logprob: -11.376943588256836
    4. ')
' → logprob: -13.626943588256836
    5. ' )' → logprob: -14.126943588256836
    6. '))
' → logprob: -15.251943588256836
    7. '])' → logprob: -15.501943588256836
    8. ' ))' → logprob: -16.001943588256836
    9. ')`' → logprob: -16.126943588256836
    10. ')")' → logprob: -16.376943588256836


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 113
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 78
Précision stricte (1ère position): 33.63%
Précision adaptée (1ère position): 36.28%
Précision (top 10): 69.03%
================================================================================
