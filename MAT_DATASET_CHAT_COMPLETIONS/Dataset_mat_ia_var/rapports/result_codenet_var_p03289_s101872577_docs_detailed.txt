================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_ac_format(s):
    """
    Vérifie si la chaîne s est au format AC selon les règles suivantes :
    - Le premier caractère doit être 'A'.
    - Il doit y avoir exactement une lettre 'C' dans la sous-chaîne allant du 3ème au dernier caractère.
    - 'C' doit apparaître une seule fois au total dans toute la chaîne.
    - Aucun des autres caractères de la chaîne ne doit être une majuscule autre que 'A' ou 'C'.
    
    Paramètre:
        s (str): La chaîne à tester.
    
    Retourne:
        bool: True si la chaîne est au format AC, False sinon.
    """
    # Vérifie que le premier caractère est 'A'
    if s[0] != 'A':
        return False
    # Vérifie qu'il y a exactement une 'A' (au début) et une 'C' dans toute la chaîne
    if s.count('A') != 1 or s.count('C') != 1:
        return False
    # Vérifie que la 'C' apparaît dans la sous-chaîne du 3ème au dernier caractère
    if s[2:-1].count('C') != 1:
        return False
    # Définis toutes les autres majuscules sauf 'A' et 'C'
    forbidden_capitals = 'BDEFGHIJKLMNOPQRSTUVWXYZ'
    # Parcourt les majuscules interdites et vérifie qu'elles n'apparaissent pas dans la chaîne
    for t in forbidden_capitals:
        if t in s:
            return False
    # Si toutes les conditions sont respectées, la chaîne est au format AC
    return True

def main():
    """
    Fonction principale qui lit une chaîne en entrée, vérifie si elle est au format AC,
    et affiche 'AC' si c'est le cas, sinon affiche 'WA'.
    """
    # Lit l'entrée utilisateur
    s = input()
    # Vérifie le format et affiche le résultat approprié
    if is_ac_format(s):
        print('AC')
    else:
        print('WA')

# Appelle la fonction principale si ce script est exécuté directement
if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_ac' (ID: 41419)
  → Token d'amorce (pas de prédiction)

Token 3: '_format' (ID: 19832)
  Prédit: 'cept'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cept' → logprob: -0.13689440488815308
    2. 'e' → logprob: -2.636894464492798
    3. 'c' → logprob: -3.136894464492798
    4. '_' → logprob: -5.136894226074219
    5. 't' → logprob: -5.261894226074219
    6. '_c' → logprob: -6.886894226074219
    7. '_e' → logprob: -8.261894226074219
    8. 'cep' → logprob: -8.886894226074219
    9. 'cess' → logprob: -9.261894226074219
    10. 'a' → logprob: -9.511894226074219

Token 4: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001386189484037459
    2. '_' → logprob: -7.2513861656188965
    3. '(_:' → logprob: -8.376386642456055
    4. '(:' → logprob: -8.876386642456055
    5. '(_' → logprob: -9.126386642456055
    6. '```' → logprob: -9.876386642456055
    7. '(a' → logprob: -10.001386642456055
    8. ':' → logprob: -10.876386642456055
    9. ' (' → logprob: -11.001386642456055
    10. '():' → logprob: -11.626386642456055

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5780871510505676
    2. ')' → logprob: -0.8280871510505676
    3. ':' → logprob: -6.328087329864502
    4. 's' → logprob: -8.578086853027344
    5. '[' → logprob: -10.578086853027344
    6. '(' → logprob: -10.703086853027344
    7. '):
' → logprob: -10.828086853027344
    8. ')s' → logprob: -10.953086853027344
    9. '_' → logprob: -11.203086853027344
    10. '```' → logprob: -11.703086853027344

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08330236375331879
    2. '():' → logprob: -3.3333022594451904
    3. '(' → logprob: -3.8333022594451904
    4. '   ' → logprob: -4.7083024978637695
    5. '```' → logprob: -4.9583024978637695
    6. '(:' → logprob: -5.9583024978637695
    7. '(':' → logprob: -6.7083024978637695
    8. '(":' → logprob: -6.7083024978637695
    9. '):' → logprob: -8.20830249786377
    10. '':' → logprob: -8.95830249786377

Token 7: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6228151917457581
    2. ' ' → logprob: -1.3728151321411133
    3. '```' → logprob: -3.1228151321411133
    4. '"""' → logprob: -3.3728151321411133
    5. 'r' → logprob: -3.7478151321411133
    6. 'i' → logprob: -3.7478151321411133
    7. ' if' → logprob: -3.9978151321411133
    8. ''' → logprob: -4.747815132141113
    9. ' return' → logprob: -5.122815132141113
    10. ' """' → logprob: -5.247815132141113

Token 8: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.2723480463027954
    2. '"""
' → logprob: -2.522347927093506
    3. 'T' → logprob: -3.397347927093506
    4. 'C' → logprob: -3.647347927093506
    5. 'Returns' → logprob: -4.147347927093506
    6. 'Checks' → logprob: -4.272347927093506
    7. 'r' → logprob: -4.397347927093506
    8. 'Check' → logprob: -4.522347927093506
    9. ''''' → logprob: -4.522347927093506
    10. '   ' → logprob: -5.022347927093506

Token 9: ' Vér' (ID: 159169)
  Prédit: 'Check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Check' → logprob: -0.5982214212417603
    2. 'Checks' → logprob: -1.3482214212417603
    3. '"""' → logprob: -3.0982213020324707
    4. 'Returns' → logprob: -3.4732213020324707
    5. '"""
' → logprob: -3.7232213020324707
    6. 'Return' → logprob: -3.8482213020324707
    7. '   ' → logprob: -3.9732213020324707
    8. 'Determine' → logprob: -4.598221302032471
    9. 'Determ' → logprob: -4.723221302032471
    10. 'Detect' → logprob: -5.098221302032471

Token 10: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.01347348652780056
    2. 'i' → logprob: -4.7634735107421875
    3. 'if' → logprob: -6.0134735107421875
    4. 'ifi' → logprob: -6.6384735107421875
    5. 'ifié' → logprob: -7.0134735107421875
    6. 'ifiée' → logprob: -10.013473510742188
    7. 'ifier' → logprob: -10.138473510742188
    8. 'ification' → logprob: -10.263473510742188
    9. 'ify' → logprob: -10.638473510742188
    10. 'éf' → logprob: -11.513473510742188

Token 11: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.20734739303588867
    2. ' if' → logprob: -2.0823473930358887
    3. 'si' → logprob: -3.0823473930358887
    4. '   ' → logprob: -4.582347393035889
    5. ' ' → logprob: -5.707347393035889
    6. ' que' → logprob: -6.832347393035889
    7. 's' → logprob: -6.957347393035889
    8. 'if' → logprob: -7.707347393035889
    9. '  ' → logprob: -8.457347869873047
    10. 'i' → logprob: -9.082347869873047

Token 12: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47621503472328186
    2. ' s' → logprob: -1.1012150049209595
    3. ' la' → logprob: -3.726215124130249
    4. 'le' → logprob: -5.22621488571167
    5. ' le' → logprob: -5.22621488571167
    6. '   ' → logprob: -5.35121488571167
    7. ' the' → logprob: -5.85121488571167
    8. 'la' → logprob: -6.10121488571167
    9. 'l' → logprob: -7.60121488571167
    10. 'the' → logprob: -7.60121488571167

Token 13: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.9279609322547913
    2. ' chaîne' → logprob: -1.1779608726501465
    3. 'cha' → logprob: -1.9279608726501465
    4. 's' → logprob: -2.4279608726501465
    5. '   ' → logprob: -4.1779608726501465
    6. 'ch' → logprob: -4.3029608726501465
    7. 'string' → logprob: -4.3029608726501465
    8. ' chaine' → logprob: -4.6779608726501465
    9. ' ' → logprob: -5.6779608726501465
    10. ' string' → logprob: -6.1779608726501465

Token 14: ' s' (ID: 265)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.11491914838552475
    2. ' ' → logprob: -3.1149191856384277
    3. 'est' → logprob: -4.239919185638428
    4. 's' → logprob: -4.364919185638428
    5. '```' → logprob: -4.614919185638428
    6. ' s' → logprob: -4.864919185638428
    7. '   ' → logprob: -5.239919185638428
    8. ' d' → logprob: -5.989919185638428
    9. ' de' → logprob: -6.114919185638428
    10. ''' → logprob: -6.489919185638428

Token 15: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.03456082567572594
    2. 'est' → logprob: -3.5345609188079834
    3. '```' → logprob: -6.284560680389404
    4. ' respecte' → logprob: -7.284560680389404
    5. ' correspond' → logprob: -7.409560680389404
    6. '   ' → logprob: -7.409560680389404
    7. ' a' → logprob: -8.284561157226562
    8. ' représente' → logprob: -8.784561157226562
    9. ' contient' → logprob: -8.909561157226562
    10. ''est' → logprob: -9.409561157226562

Token 16: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.7490251660346985
    2. ' conforme' → logprob: -1.6240251064300537
    3. 'au' → logprob: -1.7490251064300537
    4. ' en' → logprob: -2.4990251064300537
    5. ' un' → logprob: -3.4990251064300537
    6. ' bien' → logprob: -5.124025344848633
    7. ' une' → logprob: -5.124025344848633
    8. ' conform' → logprob: -5.499025344848633
    9. 'une' → logprob: -5.624025344848633
    10. 'en' → logprob: -5.624025344848633

Token 17: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.007851961068809032
    2. ' format' → logprob: -5.507852077484131
    3. 'form' → logprob: -6.382852077484131
    4. '   ' → logprob: -6.507852077484131
    5. ' ' → logprob: -9.382851600646973
    6. 'formats' → logprob: -9.382851600646973
    7. 'moins' → logprob: -9.382851600646973
    8. 'forme' → logprob: -9.632851600646973
    9. '    ' → logprob: -10.132851600646973
    10. '```' → logprob: -10.632851600646973

Token 18: ' AC' (ID: 18577)
  Prédit: ' AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' AC' → logprob: -0.33118170499801636
    2. ''' → logprob: -2.331181764602661
    3. 'AC' → logprob: -2.581181764602661
    4. '"' → logprob: -3.581181764602661
    5. ' A' → logprob: -4.331181526184082
    6. ' Ac' → logprob: -4.456181526184082
    7. 'A' → logprob: -4.581181526184082
    8. '   ' → logprob: -4.581181526184082
    9. 'ac' → logprob: -5.706181526184082
    10. '_AC' → logprob: -5.956181526184082

Token 19: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5749174356460571
    2. '```' → logprob: -2.0749173164367676
    3. '_' → logprob: -2.9499173164367676
    4. ''' → logprob: -2.9499173164367676
    5. ' ' → logprob: -3.9499173164367676
    6. ':' → logprob: -4.074917316436768
    7. '"' → logprob: -4.074917316436768
    8. ' (' → logprob: -4.074917316436768
    9. '    ' → logprob: -4.324917316436768
    10. '\n' → logprob: -4.324917316436768

Token 20: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7350875735282898
    2. ' le' → logprob: -2.1100876331329346
    3. ' les' → logprob: -2.2350876331329346
    4. '   ' → logprob: -2.4850876331329346
    5. 'le' → logprob: -2.8600876331329346
    6. 'l' → logprob: -3.1100876331329346
    7. ' l' → logprob: -3.4850876331329346
    8. 'AC' → logprob: -4.2350873947143555
    9. 'les' → logprob: -4.3600873947143555
    10. 'la' → logprob: -4.9850873947143555

Token 21: ' règles' (ID: 67042)
  Prédit: ' spéc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spéc' → logprob: -1.0576236248016357
    2. ' critères' → logprob: -1.4326236248016357
    3. 'sp' → logprob: -2.1826236248016357
    4. ' règles' → logprob: -3.1826236248016357
    5. ' normes' → logprob: -3.3076236248016357
    6. 'crit' → logprob: -3.5576236248016357
    7. ' crit' → logprob: -3.8076236248016357
    8. 'spec' → logprob: -4.057623863220215
    9. 'stand' → logprob: -4.307623863220215
    10. 'car' → logprob: -4.557623863220215

Token 22: ' suivantes' (ID: 106173)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2404205799102783
    2. ' (' → logprob: -2.1154205799102783
    3. ' de' → logprob: -2.1154205799102783
    4. ' :' → logprob: -2.3654205799102783
    5. '```' → logprob: -2.4904205799102783
    6. ' ' → logprob: -2.7404205799102783
    7. '\n' → logprob: -2.8654205799102783
    8. ''' → logprob: -3.7404205799102783
    9. ':' → logprob: -4.115420341491699
    10. 'def' → logprob: -4.365420341491699

Token 23: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4451282024383545
    2. ' :' → logprob: -1.0701282024383545
    3. '```' → logprob: -4.445128440856934
    4. '\n' → logprob: -6.820128440856934
    5. '   ' → logprob: -6.945128440856934
    6. ':
' → logprob: -7.195128440856934
    7. ' :
' → logprob: -7.570128440856934
    8. ' ' → logprob: -7.820128440856934
    9. '    ' → logprob: -8.570128440856934
    10. ',' → logprob: -9.320128440856934

Token 24: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2545791268348694
    2. '   ' → logprob: -1.7545790672302246
    3. ' 
' → logprob: -4.379579067230225
    4. '    ' → logprob: -4.754579067230225
    5. '\' → logprob: -5.379579067230225
    6. ' \' → logprob: -5.379579067230225
    7. ' ' → logprob: -5.379579067230225
    8. ' )' → logprob: -5.629579067230225
    9. 'n' → logprob: -6.129579067230225
    10. '```' → logprob: -6.129579067230225

Token 25: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027132384479045868
    2. '\n' → logprob: -4.027132511138916
    3. '    ' → logprob: -6.027132511138916
    4. '```' → logprob: -6.402132511138916
    5. '"""
' → logprob: -7.402132511138916
    6. '    
' → logprob: -7.402132511138916
    7. '"""' → logprob: -8.027132034301758
    8. ' 
' → logprob: -8.152132034301758
    9. ' ' → logprob: -8.277132034301758
    10. ' """
' → logprob: -8.527132034301758

Token 26: ' Le' (ID: 2018)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7604188323020935
    2. 's' → logprob: -1.0104188919067383
    3. '   ' → logprob: -3.0104188919067383
    4. ' La' → logprob: -3.6354188919067383
    5. ' la' → logprob: -4.135418891906738
    6. ' len' → logprob: -4.385418891906738
    7. 'len' → logprob: -4.510418891906738
    8. ' if' → logprob: -5.260418891906738
    9. ' '' → logprob: -5.260418891906738
    10. ' return' → logprob: -5.260418891906738

Token 27: ' premier' (ID: 15506)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.879555881023407
    2. ' format' → logprob: -1.8795559406280518
    3. 'r' → logprob: -2.2545559406280518
    4. 'a' → logprob: -2.6295559406280518
    5. ' s' → logprob: -3.6295559406280518
    6. 'A' → logprob: -3.8795559406280518
    7. 'format' → logprob: -4.004555702209473
    8. 't' → logprob: -4.004555702209473
    9. '   ' → logprob: -4.004555702209473
    10. 'n' → logprob: -4.129555702209473

Token 28: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.9469938278198242
    2. 'c' → logprob: -1.0719938278198242
    3. ' caractère' → logprob: -2.446993827819824
    4. ' ' → logprob: -2.821993827819824
    5. ' c' → logprob: -2.946993827819824
    6. ' caract' → logprob: -3.196993827819824
    7. ' car' → logprob: -4.696993827819824
    8. '   ' → logprob: -5.696993827819824
    9. 't' → logprob: -6.196993827819824
    10. 'a' → logprob: -6.196993827819824

Token 29: ' doit' (ID: 21822)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.17948494851589203
    2. 'est' → logprob: -2.8044848442077637
    3. ' doit' → logprob: -3.0544848442077637
    4. 'do' → logprob: -3.9294848442077637
    5. 's' → logprob: -4.554484844207764
    6. ' '' → logprob: -5.054484844207764
    7. 'd' → logprob: -5.054484844207764
    8. 'a' → logprob: -5.554484844207764
    9. ''est' → logprob: -6.304484844207764
    10. 'e' → logprob: -6.304484844207764

Token 30: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.15891225636005402
    2. 'être' → logprob: -2.408912181854248
    3. ''être' → logprob: -3.783912181854248
    4. 'ê' → logprob: -4.408912181854248
    5. ' ê' → logprob: -4.783912181854248
    6. ' ' → logprob: -5.658912181854248
    7. ' etre' → logprob: -6.283912181854248
    8. 'êt' → logprob: -6.408912181854248
    9. '’être' → logprob: -6.533912181854248
    10. ''' → logprob: -6.533912181854248

Token 31: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -1.014514446258545
    2. 'A' → logprob: -1.389514446258545
    3. ' '' → logprob: -2.264514446258545
    4. ''un' → logprob: -2.764514446258545
    5. ''' → logprob: -2.764514446258545
    6. 'a' → logprob: -3.639514446258545
    7. 'un' → logprob: -3.764514446258545
    8. 'u' → logprob: -4.264514446258545
    9. 'une' → logprob: -4.389514446258545
    10. '`' → logprob: -4.389514446258545

Token 32: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009885941632091999
    2. ''A' → logprob: -5.134885787963867
    3. 'a' → logprob: -6.259885787963867
    4. 'AC' → logprob: -7.384885787963867
    5. ''' → logprob: -7.759885787963867
    6. '`' → logprob: -9.259885787963867
    7. '[A' → logprob: -9.259885787963867
    8. 'C' → logprob: -9.572385787963867
    9. ''a' → logprob: -10.134885787963867
    10. '"A' → logprob: -10.134885787963867

Token 33: ''.
' (ID: 49980)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2580868899822235
    2. ''C' → logprob: -1.508086919784546
    3. ''' → logprob: -5.133086681365967
    4. '"C' → logprob: -9.508087158203125
    5. '')' → logprob: -10.008087158203125
    6. '[C' → logprob: -10.633087158203125
    7. ''.' → logprob: -11.383087158203125
    8. ' C' → logprob: -11.758087158203125
    9. '"' → logprob: -11.758087158203125
    10. 'c' → logprob: -12.258087158203125

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01457689143717289
    2. '    ' → logprob: -5.7645769119262695
    3. 'c' → logprob: -6.5145769119262695
    4. '  ' → logprob: -6.5145769119262695
    5. ' return' → logprob: -6.7645769119262695
    6. 'e' → logprob: -7.6395769119262695
    7. 'C' → logprob: -7.6395769119262695
    8. ')' → logprob: -7.6395769119262695
    9. '```' → logprob: -7.7645769119262695
    10. 'r' → logprob: -7.7645769119262695

Token 35: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18307039141654968
    2. ''' → logprob: -3.183070421218872
    3. 'c' → logprob: -3.308070421218872
    4. ' return' → logprob: -4.183070182800293
    5. '    ' → logprob: -5.058070182800293
    6. 'r' → logprob: -5.058070182800293
    7. 'u' → logprob: -5.183070182800293
    8. '       ' → logprob: -5.183070182800293
    9. ' ' → logprob: -5.183070182800293
    10. '`' → logprob: -5.183070182800293

Token 36: ' Il' (ID: 5329)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.039353832602500916
    2. ' C' → logprob: -4.039353847503662
    3. ''C' → logprob: -4.664353847503662
    4. ''' → logprob: -5.289353847503662
    5. ' '' → logprob: -6.039353847503662
    6. ' ' → logprob: -6.414353847503662
    7. 'c' → logprob: -8.164353370666504
    8. '`' → logprob: -8.164353370666504
    9. '-' → logprob: -8.351853370666504
    10. 'l' → logprob: -8.539353370666504

Token 37: ' doit' (ID: 21822)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16183315217494965
    2. ''' → logprob: -3.5368330478668213
    3. 'l' → logprob: -3.6618330478668213
    4. ' est' → logprob: -4.0368332862854
    5. ' doit' → logprob: -4.1618332862854
    6. 'st' → logprob: -4.4118332862854
    7. 'n' → logprob: -4.7868332862854
    8. ' ' → logprob: -4.9118332862854
    9. 'est' → logprob: -5.0368332862854
    10. ' s' → logprob: -5.2868332862854

Token 38: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3819425106048584
    2. ' être' → logprob: -1.5069425106048584
    3. 'être' → logprob: -3.5069425106048584
    4. ' suivre' → logprob: -4.0069427490234375
    5. 's' → logprob: -4.6319427490234375
    6. 'y' → logprob: -5.0069427490234375
    7. ' avoir' → logprob: -5.2569427490234375
    8. ''' → logprob: -5.7569427490234375
    9. 'contin' → logprob: -6.1319427490234375
    10. 'avoir' → logprob: -6.1319427490234375

Token 39: ' avoir' (ID: 16595)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.23181144893169403
    2. ' avoir' → logprob: -2.2318115234375
    3. 'a' → logprob: -2.9818115234375
    4. 'voir' → logprob: -3.3568115234375
    5. ''avoir' → logprob: -4.4818115234375
    6. ' ' → logprob: -7.1068115234375
    7. ' a' → logprob: -8.1068115234375
    8. 'voire' → logprob: -8.4818115234375
    9. '   ' → logprob: -8.6068115234375
    10. '’avoir' → logprob: -8.6068115234375

Token 40: ' exactement' (ID: 108701)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5214383006095886
    2. ' au' → logprob: -1.2714383602142334
    3. ''un' → logprob: -3.3964383602142334
    4. 'au' → logprob: -3.5214383602142334
    5. ' exactement' → logprob: -3.7714383602142334
    6. 'un' → logprob: -4.771438121795654
    7. ' ' → logprob: -4.896438121795654
    8. ''au' → logprob: -5.021438121795654
    9. ' exactly' → logprob: -5.521438121795654
    10. 'exact' → logprob: -5.771438121795654

Token 41: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16755124926567078
    2. ' un' → logprob: -2.292551279067993
    3. '1' → logprob: -3.792551279067993
    4. '2' → logprob: -5.542551040649414
    5. ''un' → logprob: -5.542551040649414
    6. ' deux' → logprob: -5.542551040649414
    7. ' une' → logprob: -5.917551040649414
    8. '3' → logprob: -5.917551040649414
    9. ' trois' → logprob: -6.292551040649414
    10. ' a' → logprob: -6.417551040649414

Token 42: ' lettre' (ID: 68013)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.017379842698574066
    2. ''C' → logprob: -5.0173797607421875
    3. ' C' → logprob: -5.2673797607421875
    4. 'c' → logprob: -6.3923797607421875
    5. ' ' → logprob: -6.8923797607421875
    6. ''' → logprob: -7.1423797607421875
    7. 'space' → logprob: -8.267379760742188
    8. '`' → logprob: -8.267379760742188
    9. 'l' → logprob: -8.392379760742188
    10. 'n' → logprob: -8.642379760742188

Token 43: ' '' (ID: 461)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.47056102752685547
    2. 'e' → logprob: -2.3455610275268555
    3. 'B' → logprob: -2.4705610275268555
    4. 'r' → logprob: -3.0955610275268555
    5. 'l' → logprob: -3.2205610275268555
    6. ''' → logprob: -3.7205610275268555
    7. 's' → logprob: -4.3455610275268555
    8. ' uppercase' → logprob: -4.4705610275268555
    9. '   ' → logprob: -4.7205610275268555
    10. ' a' → logprob: -4.9705610275268555

Token 44: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.004778160713613033
    2. ''C' → logprob: -5.5047783851623535
    3. ''' → logprob: -8.129777908325195
    4. 'B' → logprob: -9.004777908325195
    5. 'c' → logprob: -9.379777908325195
    6. ' C' → logprob: -10.004777908325195
    7. 'A' → logprob: -10.754777908325195
    8. '')' → logprob: -10.942277908325195
    9. '"C' → logprob: -11.067277908325195
    10. '`' → logprob: -11.379777908325195

Token 45: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001713590754661709
    2. 'e' → logprob: -10.000171661376953
    3. '')' → logprob: -10.375171661376953
    4. ''''' → logprob: -10.375171661376953
    5. ''au' → logprob: -11.500171661376953
    6. ''entre' → logprob: -11.625171661376953
    7. ''A' → logprob: -12.250171661376953
    8. 'u' → logprob: -12.250171661376953
    9. ''.' → logprob: -12.625171661376953
    10. ''a' → logprob: -12.750171661376953

Token 46: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0447101593017578
    2. ')' → logprob: -1.7947101593017578
    3. '  ' → logprob: -2.544710159301758
    4. ''' → logprob: -2.669710159301758
    5. ' ' → logprob: -2.919710159301758
    6. ' in' → logprob: -3.044710159301758
    7. '"' → logprob: -3.169710159301758
    8. 's' → logprob: -3.544710159301758
    9. 'a' → logprob: -3.794710159301758
    10. 'e' → logprob: -3.794710159301758

Token 47: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5732414126396179
    2. ' la' → logprob: -1.4482414722442627
    3. ' s' → logprob: -2.0732414722442627
    4. ' le' → logprob: -3.1982414722442627
    5. ' l' → logprob: -4.823241233825684
    6. '<|end|>' → logprob: -4.823241233825684
    7. 'la' → logprob: -5.323241233825684
    8. 'le' → logprob: -5.573241233825684
    9. 'l' → logprob: -5.573241233825684
    10. ' the' → logprob: -6.323241233825684

Token 48: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2033931016921997
    2. ' chaîne' → logprob: -1.2033931016921997
    3. 'chaine' → logprob: -1.2033931016921997
    4. 'string' → logprob: -3.57839298248291
    5. ' chaine' → logprob: -4.32839298248291
    6. ' s' → logprob: -4.45339298248291
    7. ' string' → logprob: -4.57839298248291
    8. 'cha' → logprob: -5.07839298248291
    9. '   ' → logprob: -5.32839298248291
    10. 'tring' → logprob: -5.57839298248291

Token 49: '-cha' (ID: 163177)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.8753678798675537
    2. '-cha' → logprob: -1.1253678798675537
    3. '-' → logprob: -1.8753678798675537
    4. 'cha' → logprob: -3.3753678798675537
    5. ' chaîne' → logprob: -3.7503678798675537
    6. '   ' → logprob: -4.375368118286133
    7. 'string' → logprob: -4.625368118286133
    8. 'tring' → logprob: -4.750368118286133
    9. 's' → logprob: -5.125368118286133
    10. '-string' → logprob: -5.625368118286133

Token 50: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.013202118687331676
    2. 'ine' → logprob: -4.63820219039917
    3. 'î' → logprob: -6.51320219039917
    4. 'ne' → logprob: -7.01320219039917
    5. 'ïne' → logprob: -7.38820219039917
    6. '```' → logprob: -8.763201713562012
    7. '   ' → logprob: -9.013201713562012
    8. 'în' → logprob: -10.013201713562012
    9. '`' → logprob: -10.888201713562012
    10. '``' → logprob: -11.138201713562012

Token 51: ' allant' (ID: 122150)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.21607281267642975
    2. 's' → logprob: -1.7160727977752686
    3. ' _' → logprob: -5.091073036193848
    4. '[' → logprob: -6.091073036193848
    5. '_' → logprob: -6.091073036193848
    6. '_s' → logprob: -6.716073036193848
    7. ' ' → logprob: -7.216073036193848
    8. '   ' → logprob: -8.091073036193848
    9. ' [' → logprob: -8.966073036193848
    10. 'de' → logprob: -9.091073036193848

Token 52: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.45634305477142334
    2. ' de' → logprob: -1.3313430547714233
    3. 'jus' → logprob: -3.456343173980713
    4. ' du' → logprob: -3.706343173980713
    5. 'du' → logprob: -4.331343173980713
    6. ' from' → logprob: -4.331343173980713
    7. ' jusqu' → logprob: -4.706343173980713
    8. 'from' → logprob: -5.081343173980713
    9. 'au' → logprob: -6.331343173980713
    10. ' à' → logprob: -7.706343173980713

Token 53: ' ' (ID: 220)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6354971528053284
    2. '2' → logprob: -1.1354970932006836
    3. ' ' → logprob: -3.3854970932006836
    4. ' deuxième' → logprob: -3.5104970932006836
    5. '1' → logprob: -3.8854970932006836
    6. 's' → logprob: -4.010497093200684
    7. 'index' → logprob: -4.635497093200684
    8. ' second' → logprob: -4.760497093200684
    9. '```' → logprob: -5.010497093200684
    10. '3' → logprob: -5.260497093200684

Token 54: '3' (ID: 18)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.33537590503692627
    2. '2' → logprob: -1.4603759050369263
    3. '1' → logprob: -3.5853757858276367
    4. 'second' → logprob: -5.085375785827637
    5. 'index' → logprob: -5.085375785827637
    6. 's' → logprob: -6.210375785827637
    7. 'indice' → logprob: -6.210375785827637
    8. 'd' → logprob: -6.335375785827637
    9. 'car' → logprob: -6.710375785827637
    10. '3' → logprob: -6.710375785827637

Token 55: 'ème' (ID: 9767)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.1285343170166016
    2. 'ème' → logprob: -1.5035343170166016
    3. 'e' → logprob: -1.6285343170166016
    4. ' i' → logprob: -2.6285343170166016
    5. 'ième' → logprob: -2.6285343170166016
    6. 'i' → logprob: -3.2535343170166016
    7. ' ' → logprob: -3.7535343170166016
    8. 'à' → logprob: -3.7535343170166016
    9. 'è' → logprob: -5.253534317016602
    10. ' au' → logprob: -5.503534317016602

Token 56: ' au' (ID: 2791)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.0142194032669067
    2. 'au' → logprob: -1.2642194032669067
    3. ' caractère' → logprob: -1.2642194032669067
    4. ' au' → logprob: -3.139219284057617
    5. ' caract' → logprob: -4.014219284057617
    6. ' ' → logprob: -5.389219284057617
    7. ' caractères' → logprob: -6.264219284057617
    8. '<|end|>' → logprob: -6.764219284057617
    9. ' car' → logprob: -7.264219284057617
    10. ' à' → logprob: -7.264219284057617

Token 57: ' dernier' (ID: 27982)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44631385803222656
    2. ' len' → logprob: -2.8213138580322266
    3. 'len' → logprob: -3.0713138580322266
    4. '7' → logprob: -3.3213138580322266
    5. ' -' → logprob: -3.8213138580322266
    6. '   ' → logprob: -3.9463138580322266
    7. '-' → logprob: -3.9463138580322266
    8. '3' → logprob: -4.071313858032227
    9. '5' → logprob: -4.196313858032227
    10. '2' → logprob: -4.571313858032227

Token 58: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -1.119024634361267
    2. ' ' → logprob: -1.869024634361267
    3. ' caract' → logprob: -1.994024634361267
    4. 's' → logprob: -2.4940247535705566
    5. ')' → logprob: -2.6190247535705566
    6. '   ' → logprob: -2.9940247535705566
    7. ''' → logprob: -3.7440247535705566
    8. ' )' → logprob: -3.7440247535705566
    9. '  ' → logprob: -4.119024753570557
    10. ' s' → logprob: -4.119024753570557

Token 59: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06799706816673279
    2. ')' → logprob: -3.5679969787597656
    3. ':' → logprob: -4.942996978759766
    4. '"' → logprob: -5.317996978759766
    5. '):' → logprob: -5.317996978759766
    6. '\n' → logprob: -5.442996978759766
    7. 's' → logprob: -6.317996978759766
    8. ')
' → logprob: -6.567996978759766
    9. ' ' → logprob: -6.817996978759766
    10. ''' → logprob: -6.817996978759766

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020557772368192673
    2. '"' → logprob: -5.520557880401611
    3. ')' → logprob: -6.020557880401611
    4. '"""
' → logprob: -6.020557880401611
    5. '"""' → logprob: -6.145557880401611
    6. '
' → logprob: -6.270557880401611
    7. ' 
' → logprob: -6.270557880401611
    8. '```' → logprob: -6.770557880401611
    9. '    ' → logprob: -6.895557880401611
    10. '    
' → logprob: -7.395557880401611

Token 61: ' -' (ID: 533)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9136567115783691
    2. '   ' → logprob: -1.0386567115783691
    3. '\' → logprob: -2.413656711578369
    4. '"""
' → logprob: -2.663656711578369
    5. '"' → logprob: -3.663656711578369
    6. '"\' → logprob: -4.413656711578369
    7. ''' → logprob: -4.413656711578369
    8. '
' → logprob: -5.038656711578369
    9. '```' → logprob: -5.288656711578369
    10. ' 
' → logprob: -5.663656711578369

Token 62: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08133800327777863
    2. ' Le' → logprob: -3.5813379287719727
    3. 'Le' → logprob: -4.581337928771973
    4. ' La' → logprob: -4.831337928771973
    5. ' le' → logprob: -5.206337928771973
    6. ' la' → logprob: -5.581337928771973
    7. ' return' → logprob: -5.581337928771973
    8. 'def' → logprob: -5.706337928771973
    9. 'La' → logprob: -5.831337928771973
    10. ' len' → logprob: -6.706337928771973

Token 63: 'C' (ID: 34)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05549653246998787
    2. ''' → logprob: -4.055496692657471
    3. 'len' → logprob: -4.055496692657471
    4. ''s' → logprob: -4.180496692657471
    5. 'all' → logprob: -7.055496692657471
    6. 'C' → logprob: -7.180496692657471
    7. 'a' → logprob: -8.055496215820312
    8. 'c' → logprob: -8.180496215820312
    9. '   ' → logprob: -8.430496215820312
    10. ' s' → logprob: -8.430496215820312

Token 64: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008129054680466652
    2. ''in' → logprob: -5.008129119873047
    3. ''est' → logprob: -8.508129119873047
    4. ' in' → logprob: -8.633129119873047
    5. 's' → logprob: -8.883129119873047
    6. ' '' → logprob: -9.258129119873047
    7. ''s' → logprob: -9.383129119873047
    8. ''ap' → logprob: -9.383129119873047
    9. 'a' → logprob: -9.508129119873047
    10. ''en' → logprob: -9.633129119873047

Token 65: ' doit' (ID: 21822)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5634530186653137
    2. 'est' → logprob: -1.688452959060669
    3. ' doit' → logprob: -2.188452959060669
    4. 'e' → logprob: -3.188452959060669
    5. ' n' → logprob: -3.813452959060669
    6. '   ' → logprob: -4.063453197479248
    7. ' ' → logprob: -4.563453197479248
    8. ' se' → logprob: -4.688453197479248
    9. ''' → logprob: -4.938453197479248
    10. ' in' → logprob: -5.188453197479248

Token 66: ' appara' (ID: 52982)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.841486930847168
    2. 'être' → logprob: -1.466486930847168
    3. ' appara' → logprob: -1.841486930847168
    4. ' se' → logprob: -2.466486930847168
    5. 'e' → logprob: -3.466486930847168
    6. ''être' → logprob: -4.591486930847168
    7. 'appear' → logprob: -5.091486930847168
    8. 's' → logprob: -5.216486930847168
    9. 'se' → logprob: -5.466486930847168
    10. 'appe' → logprob: -5.716486930847168

Token 67: 'ître' (ID: 29135)
  Prédit: 'î'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'î' → logprob: -0.13083906471729279
    2. 'ître' → logprob: -2.8808391094207764
    3. 'i' → logprob: -4.130838871002197
    4. '\' → logprob: -4.755838871002197
    5. 'ît' → logprob: -4.755838871002197
    6. '^' → logprob: -4.880838871002197
    7. 'îtr' → logprob: -5.755838871002197
    8. 'í' → logprob: -5.755838871002197
    9. 'ı' → logprob: -6.005838871002197
    10. 'ì' → logprob: -6.255838871002197

Token 68: ' une' (ID: 2463)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5484700798988342
    2. 'à' → logprob: -1.7984700202941895
    3. 'au' → logprob: -3.0484700202941895
    4. 's' → logprob: -3.1734700202941895
    5. ' au' → logprob: -3.2984700202941895
    6. 'exact' → logprob: -3.2984700202941895
    7. 'une' → logprob: -3.5484700202941895
    8. ' exactement' → logprob: -4.2984700202941895
    9. 'bien' → logprob: -4.6734700202941895
    10. 'uni' → logprob: -5.0484700202941895

Token 69: ' seule' (ID: 41983)
  Prédit: ' fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.2272769808769226
    2. ' seule' → logprob: -1.7272770404815674
    3. 'fois' → logprob: -4.102276802062988
    4. ' seul' → logprob: -4.977276802062988
    5. 'n' → logprob: -7.852276802062988
    6. 't' → logprob: -8.227276802062988
    7. ' ' → logprob: -8.602276802062988
    8. ' unique' → logprob: -8.727276802062988
    9. 'u' → logprob: -8.977276802062988
    10. '   ' → logprob: -9.227276802062988

Token 70: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.1955179125070572
    2. 'fois' → logprob: -1.820517897605896
    3. ' ' → logprob: -4.5705180168151855
    4. 'fo' → logprob: -5.6955180168151855
    5. 'f' → logprob: -6.8205180168151855
    6. ' f' → logprob: -7.8205180168151855
    7. ' foi' → logprob: -8.945517539978027
    8. '   ' → logprob: -9.695517539978027
    9. '  ' → logprob: -9.945517539978027
    10. ' fo' → logprob: -10.445517539978027

Token 71: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5710383653640747
    2. '   ' → logprob: -1.4460383653640747
    3. ' dans' → logprob: -2.321038246154785
    4. '.' → logprob: -4.446038246154785
    5. 's' → logprob: -4.446038246154785
    6. ' entre' → logprob: -4.446038246154785
    7. 'dans' → logprob: -4.571038246154785
    8. ',' → logprob: -4.571038246154785
    9. '  ' → logprob: -4.821038246154785
    10. ' ' → logprob: -4.821038246154785

Token 72: ' total' (ID: 3609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5744906067848206
    2. '   ' → logprob: -1.8244905471801758
    3. 'index' → logprob: -2.574490547180176
    4. ' s' → logprob: -3.074490547180176
    5. 'près' → logprob: -3.074490547180176
    6. '       ' → logprob: -4.574490547180176
    7. 'i' → logprob: -4.949490547180176
    8. 'prés' → logprob: -5.074490547180176
    9. '```' → logprob: -5.074490547180176
    10. 'position' → logprob: -5.449490547180176

Token 73: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1943674385547638
    2. '   ' → logprob: -2.8193674087524414
    3. '):' → logprob: -3.4443674087524414
    4. ':' → logprob: -3.8193674087524414
    5. '"' → logprob: -4.444367408752441
    6. '.' → logprob: -4.694367408752441
    7. ')
' → logprob: -4.819367408752441
    8. ' ' → logprob: -5.069367408752441
    9. ':
' → logprob: -5.319367408752441
    10. '"""' → logprob: -5.444367408752441

Token 74: ' toute' (ID: 16825)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45631468296051025
    2. ' s' → logprob: -1.2063146829605103
    3. ' la' → logprob: -3.0813145637512207
    4. 'l' → logprob: -5.081314563751221
    5. 'la' → logprob: -5.706314563751221
    6. '   ' → logprob: -5.706314563751221
    7. ' ' → logprob: -6.331314563751221
    8. ' le' → logprob: -6.831314563751221
    9. ' the' → logprob: -6.831314563751221
    10. 'le' → logprob: -6.831314563751221

Token 75: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8661362528800964
    2. 'la' → logprob: -1.4911363124847412
    3. 'l' → logprob: -1.6161363124847412
    4. 's' → logprob: -1.9911363124847412
    5. ' s' → logprob: -5.241136074066162
    6. 'le' → logprob: -5.491136074066162
    7. 'a' → logprob: -5.866136074066162
    8. ' l' → logprob: -5.991136074066162
    9. '   ' → logprob: -6.616136074066162
    10. ' ' → logprob: -6.991136074066162

Token 76: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.48738420009613037
    2. 's' → logprob: -1.2373842000961304
    3. 'chaine' → logprob: -2.86238431930542
    4. ' s' → logprob: -4.36238431930542
    5. 'cha' → logprob: -4.98738431930542
    6. 'string' → logprob: -5.36238431930542
    7. ' string' → logprob: -5.48738431930542
    8. ' chaine' → logprob: -5.73738431930542
    9. ' ' → logprob: -6.11238431930542
    10. '   ' → logprob: -6.61238431930542

Token 77: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7111476063728333
    2. '\n' → logprob: -1.3361475467681885
    3. '
' → logprob: -2.7111475467681885
    4. '"' → logprob: -2.7111475467681885
    5. '"""' → logprob: -3.4611475467681885
    6. '"""
' → logprob: -3.8361475467681885
    7. ')' → logprob: -3.8361475467681885
    8. ')
' → logprob: -4.586147785186768
    9. '  
' → logprob: -5.961147785186768
    10. ' 
' → logprob: -5.961147785186768

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08584144711494446
    2. '"""' → logprob: -3.085841417312622
    3. '"""
' → logprob: -3.585841417312622
    4. '"' → logprob: -5.335841655731201
    5. '
' → logprob: -6.585841655731201
    6. '\n' → logprob: -7.210841655731201
    7. '""' → logprob: -8.085841178894043
    8. ')' → logprob: -8.085841178894043
    9. '\' → logprob: -8.210841178894043
    10. '    
' → logprob: -8.835841178894043

Token 79: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04370715469121933
    2. '"""' → logprob: -3.7937071323394775
    3. '"""
' → logprob: -4.418707370758057
    4. '"' → logprob: -5.168707370758057
    5. '```' → logprob: -6.543707370758057
    6. '
' → logprob: -8.543706893920898
    7. '""' → logprob: -8.668706893920898
    8. '\n' → logprob: -8.793706893920898
    9. ')' → logprob: -9.168706893920898
    10. '\' → logprob: -9.668706893920898

Token 80: ' Aucun' (ID: 199365)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002806894714012742
    2. '    ' → logprob: -7.127806663513184
    3. ' def' → logprob: -7.877806663513184
    4. 'def' → logprob: -7.877806663513184
    5. ' return' → logprob: -7.877806663513184
    6. '  ' → logprob: -8.377806663513184
    7. ' ' → logprob: -8.502806663513184
    8. ' s' → logprob: -10.002806663513184
    9. ' Le' → logprob: -10.002806663513184
    10. ' La' → logprob: -10.252806663513184

Token 81: ' des' (ID: 731)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5947704911231995
    2. ' espace' → logprob: -1.8447704315185547
    3. 'e' → logprob: -2.2197704315185547
    4. 'car' → logprob: -2.7197704315185547
    5. ' caractère' → logprob: -2.8447704315185547
    6. 'esp' → logprob: -3.9697704315185547
    7. ' car' → logprob: -4.594770431518555
    8. ' caract' → logprob: -5.219770431518555
    9. 'c' → logprob: -5.594770431518555
    10. ' e' → logprob: -5.969770431518555

Token 82: ' autres' (ID: 18701)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.24880225956439972
    2. ' caractères' → logprob: -2.1238021850585938
    3. 'aut' → logprob: -3.7488021850585938
    4. ' autres' → logprob: -3.8738021850585938
    5. ' car' → logprob: -3.9988021850585938
    6. 'c' → logprob: -4.873802185058594
    7. ' ' → logprob: -4.998802185058594
    8. ' espaces' → logprob: -5.498802185058594
    9. ' caracteres' → logprob: -6.123802185058594
    10. 'e' → logprob: -6.248802185058594

Token 83: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.21353621780872345
    2. ' caractères' → logprob: -1.713536262512207
    3. ' car' → logprob: -5.213536262512207
    4. '_car' → logprob: -5.963536262512207
    5. ' caract' → logprob: -6.838536262512207
    6. ' caracteres' → logprob: -7.088536262512207
    7. 'c' → logprob: -7.213536262512207
    8. 'e' → logprob: -7.963536262512207
    9. ' caractère' → logprob: -8.838536262512207
    10. ' espaces' → logprob: -8.838536262512207

Token 84: ' de' (ID: 334)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.29715871810913086
    2. ' ne' → logprob: -1.6721587181091309
    3. 'n' → logprob: -3.047158718109131
    4. 'ne' → logprob: -4.547158718109131
    5. '   ' → logprob: -4.922158718109131
    6. '```' → logprob: -7.047158718109131
    7. ' ' → logprob: -7.422158718109131
    8. 's' → logprob: -7.547158718109131
    9. ''' → logprob: -8.672159194946289
    10. ' not' → logprob: -8.797159194946289

Token 85: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7469040751457214
    2. ' s' → logprob: -1.1219041347503662
    3. ' la' → logprob: -1.9969041347503662
    4. 'a' → logprob: -3.496904134750366
    5. 'la' → logprob: -4.246903896331787
    6. ' ' → logprob: -5.371903896331787
    7. 'l' → logprob: -5.496903896331787
    8. ' the' → logprob: -6.121903896331787
    9. ' l' → logprob: -6.121903896331787
    10. ' a' → logprob: -6.371903896331787

Token 86: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1942618191242218
    2. ' s' → logprob: -2.3192617893218994
    3. ' ' → logprob: -4.0692620277404785
    4. 't' → logprob: -4.5692620277404785
    5. 'a' → logprob: -5.1942620277404785
    6. 'r' → logprob: -5.2567620277404785
    7. '   ' → logprob: -5.3192620277404785
    8. ' chaîne' → logprob: -5.8192620277404785
    9. 'string' → logprob: -6.0067620277404785
    10. 'n' → logprob: -6.1317620277404785

Token 87: ' ne' (ID: 453)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.23606708645820618
    2. ' ne' → logprob: -1.9860670566558838
    3. 'n' → logprob: -2.861067056655884
    4. 'ne' → logprob: -4.986067295074463
    5. ' not' → logprob: -6.361067295074463
    6. '```' → logprob: -6.736067295074463
    7. '   ' → logprob: -6.986067295074463
    8. ')' → logprob: -6.986067295074463
    9. 'n't' → logprob: -6.986067295074463
    10. 's' → logprob: -7.111067295074463

Token 88: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.4468303918838501
    2. 'do' → logprob: -1.57183039188385
    3. 's' → logprob: -2.4468302726745605
    4. 'être' → logprob: -3.4468302726745605
    5. ' ' → logprob: -4.3218302726745605
    6. ' doivent' → logprob: -5.4468302726745605
    7. '```' → logprob: -6.1968302726745605
    8. ' do' → logprob: -6.3218302726745605
    9. 'd' → logprob: -6.6968302726745605
    10. 'a' → logprob: -6.6968302726745605

Token 89: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.4200740456581116
    2. 'être' → logprob: -1.1700739860534668
    3. ''être' → logprob: -4.045073986053467
    4. ' pas' → logprob: -5.795073986053467
    5. ' etre' → logprob: -5.795073986053467
    6. 'ê' → logprob: -6.920073986053467
    7. 'pas' → logprob: -6.920073986053467
    8. '’être' → logprob: -6.920073986053467
    9. 'êtres' → logprob: -7.045073986053467
    10. ' ê' → logprob: -7.170073986053467

Token 90: ' une' (ID: 2463)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.9672840237617493
    2. ''un' → logprob: -1.3422839641571045
    3. ''C' → logprob: -1.5922839641571045
    4. ''' → logprob: -3.4672839641571045
    5. ''une' → logprob: -4.092284202575684
    6. ''n' → logprob: -4.217284202575684
    7. ''autre' → logprob: -4.342284202575684
    8. ''d' → logprob: -4.467284202575684
    9. ' ni' → logprob: -4.592284202575684
    10. ''s' → logprob: -4.967284202575684

Token 91: ' maj' (ID: 15575)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3267301023006439
    2. ' C' → logprob: -1.9517301321029663
    3. 'c' → logprob: -3.2017300128936768
    4. ''C' → logprob: -3.4517300128936768
    5. ''' → logprob: -4.201730251312256
    6. ' '' → logprob: -4.576730251312256
    7. ' ' → logprob: -4.701730251312256
    8. '`' → logprob: -5.576730251312256
    9. ' c' → logprob: -5.701730251312256
    10. 's' → logprob: -5.826730251312256

Token 92: 'usc' (ID: 30081)
  Prédit: 'usc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usc' → logprob: -0.13651737570762634
    2. 'us' → logprob: -2.136517286300659
    3. 'u' → logprob: -5.261517524719238
    4. '```' → logprob: -6.386517524719238
    5. '   ' → logprob: -6.761517524719238
    6. 'e' → logprob: -8.761517524719238
    7. 'ale' → logprob: -8.761517524719238
    8. 'úsc' → logprob: -8.886517524719238
    9. ')' → logprob: -9.636517524719238
    10. '`' → logprob: -9.761517524719238

Token 93: 'ule' (ID: 1601)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.3499935567378998
    2. 'ule' → logprob: -1.2249935865402222
    3. '```' → logprob: -7.724993705749512
    4. 'al' → logprob: -8.474993705749512
    5. 'a' → logprob: -8.849993705749512
    6. 'ul' → logprob: -9.724993705749512
    7. 'le' → logprob: -9.849993705749512
    8. '**' → logprob: -10.099993705749512
    9. '   ' → logprob: -10.224993705749512
    10. 'u' → logprob: -10.474993705749512

Token 94: ' autre' (ID: 20278)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.081839680671692
    2. '   ' → logprob: -1.081839680671692
    3. '\n' → logprob: -1.831839680671692
    4. ')' → logprob: -2.9568395614624023
    5. ':
' → logprob: -3.4568395614624023
    6. '"' → logprob: -3.4568395614624023
    7. '\' → logprob: -4.831839561462402
    8. '
' → logprob: -4.956839561462402
    9. ' 
' → logprob: -5.456839561462402
    10. '):' → logprob: -5.581839561462402

Token 95: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1652278900146484
    2. ' que' → logprob: -1.4152278900146484
    3. '   ' → logprob: -1.4152278900146484
    4. 's' → logprob: -3.4152278900146484
    5. 'que' → logprob: -3.5402278900146484
    6. ' qu' → logprob: -3.6652278900146484
    7. '```' → logprob: -3.6652278900146484
    8. '  ' → logprob: -3.7902278900146484
    9. 'c' → logprob: -4.665227890014648
    10. '       ' → logprob: -4.790227890014648

Token 96: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.1106902360916138
    2. ''A' → logprob: -1.1106902360916138
    3. 'A' → logprob: -1.8606902360916138
    4. ''' → logprob: -2.735690116882324
    5. ''C' → logprob: -2.985690116882324
    6. ' A' → logprob: -3.110690116882324
    7. 'C' → logprob: -4.235690116882324
    8. ' ' → logprob: -5.110690116882324
    9. ' C' → logprob: -6.110690116882324
    10. '"A' → logprob: -7.360690116882324

Token 97: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1610688418149948
    2. 'C' → logprob: -1.9110687971115112
    3. 'AC' → logprob: -8.5360689163208
    4. ''A' → logprob: -8.6610689163208
    5. ''C' → logprob: -8.9110689163208
    6. ' A' → logprob: -9.0360689163208
    7. ''' → logprob: -9.2860689163208
    8. 's' → logprob: -10.9110689163208
    9. 'a' → logprob: -11.3485689163208
    10. ' C' → logprob: -11.4735689163208

Token 98: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15271003544330597
    2. '')' → logprob: -2.7777099609375
    3. '')
' → logprob: -4.0277099609375
    4. ''
' → logprob: -4.2777099609375
    5. 's' → logprob: -5.0277099609375
    6. 'e' → logprob: -5.0277099609375
    7. ')' → logprob: -5.1527099609375
    8. '"' → logprob: -5.4027099609375
    9. ''''
' → logprob: -5.9027099609375
    10. ')'
' → logprob: -6.0277099609375

Token 99: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4010152518749237
    2. ')' → logprob: -1.276015281677246
    3. '"' → logprob: -4.651015281677246
    4. 'def' → logprob: -5.026015281677246
    5. ':' → logprob: -5.151015281677246
    6. ' ' → logprob: -5.276015281677246
    7. '):' → logprob: -5.776015281677246
    8. '
' → logprob: -6.026015281677246
    9. ')
' → logprob: -6.151015281677246
    10. ',' → logprob: -6.151015281677246

Token 100: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.3142952024936676
    2. ' '' → logprob: -1.8142951726913452
    3. 'C' → logprob: -2.5642952919006348
    4. ''' → logprob: -3.9392952919006348
    5. ' C' → logprob: -4.939295291900635
    6. ' ' → logprob: -5.939295291900635
    7. '  ' → logprob: -9.064294815063477
    8. 'c' → logprob: -9.064294815063477
    9. 'def' → logprob: -10.314294815063477
    10. '`' → logprob: -10.439294815063477

Token 101: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0007567389984615147
    2. ''C' → logprob: -7.500756740570068
    3. ''' → logprob: -8.87575626373291
    4. '')' → logprob: -11.00075626373291
    5. ')' → logprob: -11.25075626373291
    6. ' C' → logprob: -11.37575626373291
    7. 's' → logprob: -12.12575626373291
    8. 'c' → logprob: -12.37575626373291
    9. '`' → logprob: -12.87575626373291
    10. ' ' → logprob: -13.87575626373291

Token 102: ''.
' (ID: 49980)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47414296865463257
    2. ''' → logprob: -1.3491430282592773
    3. ')' → logprob: -2.3491430282592773
    4. '"""' → logprob: -4.224143028259277
    5. '"""
' → logprob: -5.724143028259277
    6. '')' → logprob: -6.474143028259277
    7. '   ' → logprob: -7.224143028259277
    8. '")' → logprob: -7.349143028259277
    9. ''''' → logprob: -8.224143028259277
    10. 'def' → logprob: -8.474143028259277

Token 103: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031915366649627686
    2. ')' → logprob: -4.406915187835693
    3. '"' → logprob: -5.156915187835693
    4. '"""' → logprob: -5.281915187835693
    5. '"""
' → logprob: -5.906915187835693
    6. '```' → logprob: -6.281915187835693
    7. '
' → logprob: -6.906915187835693
    8. ')
' → logprob: -7.781915187835693
    9. ' 
' → logprob: -7.906915187835693
    10. '    
' → logprob: -8.031915664672852

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002843271940946579
    2. ')' → logprob: -6.627843379974365
    3. '"""' → logprob: -6.877843379974365
    4. '```' → logprob: -8.752842903137207
    5. '    ' → logprob: -8.877842903137207
    6. '
' → logprob: -10.502842903137207
    7. 'def' → logprob: -10.502842903137207
    8. ' )' → logprob: -10.627842903137207
    9. '"""
' → logprob: -10.877842903137207
    10. '"' → logprob: -11.127842903137207

Token 105: ' Param' (ID: 14796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002002153778448701
    2. 'def' → logprob: -6.627002239227295
    3. '"""' → logprob: -8.627001762390137
    4. '"""
' → logprob: -9.127001762390137
    5. '    ' → logprob: -9.252001762390137
    6. '```' → logprob: -9.627001762390137
    7. '  ' → logprob: -10.002001762390137
    8. ' if' → logprob: -10.252001762390137
    9. '
' → logprob: -10.627001762390137
    10. '    
' → logprob: -11.127001762390137

Token 106: 'ètre' (ID: 60948)
  Prédit: 'ètre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètre' → logprob: -0.11400941014289856
    2. 'ètres' → logprob: -2.489009380340576
    3. ' :' → logprob: -4.364009380340576
    4. ' ' → logprob: -5.739009380340576
    5. ' s' → logprob: -6.364009380340576
    6. '   ' → logprob: -6.364009380340576
    7. 's' → logprob: -6.489009380340576
    8. 'éter' → logprob: -7.989009380340576
    9. 'eters' → logprob: -8.114009857177734
    10. 'etros' → logprob: -8.114009857177734

Token 107: ':
' (ID: 734)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06911864876747131
    2. ' :' → logprob: -3.6941187381744385
    3. ':' → logprob: -3.8191187381744385
    4. '(s' → logprob: -4.694118499755859
    5. ' s' → logprob: -5.194118499755859
    6. '   ' → logprob: -6.194118499755859
    7. ')' → logprob: -6.819118499755859
    8. 'es' → logprob: -7.569118499755859
    9. '):' → logprob: -7.694118499755859
    10. ' :
' → logprob: -8.69411849975586

Token 108: '       ' (ID: 309)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.010638746432960033
    2. 's' → logprob: -5.13563871383667
    3. '   ' → logprob: -5.38563871383667
    4. ' def' → logprob: -10.885639190673828
    5. ' )' → logprob: -11.135639190673828
    6. ' string' → logprob: -11.260639190673828
    7. '    ' → logprob: -11.260639190673828
    8. ' ' → logprob: -11.260639190673828
    9. ')' → logprob: -11.760639190673828
    10. '(s' → logprob: -12.010639190673828

Token 109: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.20281574130058289
    2. ' s' → logprob: -1.7028157711029053
    3. '   ' → logprob: -6.577815532684326
    4. '```' → logprob: -12.702816009521484
    5. 'str' → logprob: -13.077816009521484
    6. '	s' → logprob: -13.827816009521484
    7. '`s' → logprob: -14.077816009521484
    8. '    
' → logprob: -14.077816009521484
    9. '
' → logprob: -14.202816009521484
    10. '    ' → logprob: -14.702816009521484

Token 110: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3953320384025574
    2. '):' → logprob: -2.145332098007202
    3. '.startswith' → logprob: -2.395332098007202
    4. '   ' → logprob: -3.020332098007202
    5. '[' → logprob: -3.395332098007202
    6. ')' → logprob: -3.895332098007202
    7. ' :' → logprob: -5.395331859588623
    8. '):
' → logprob: -6.145331859588623
    9. ':str' → logprob: -6.520331859588623
    10. '.strip' → logprob: -6.645331859588623

Token 111: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -6.0629870858974755e-05
    2. ' str' → logprob: -9.87506103515625
    3. 'string' → logprob: -11.75006103515625
    4. ':str' → logprob: -14.25006103515625
    5. '   ' → logprob: -15.50006103515625
    6. '[str' → logprob: -16.62506103515625
    7. '(str' → logprob: -16.75006103515625
    8. ')' → logprob: -17.00006103515625
    9. 's' → logprob: -17.62506103515625
    10. '=str' → logprob: -18.00006103515625

Token 112: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0706394836306572
    2. '):' → logprob: -2.6956393718719482
    3. '):
' → logprob: -7.820639610290527
    4. '   ' → logprob: -8.195639610290527
    5. ' )' → logprob: -11.195639610290527
    6. ' ' → logprob: -12.820639610290527
    7. ' ):' → logprob: -12.945639610290527
    8. '):

' → logprob: -13.570639610290527
    9. ')->' → logprob: -13.945639610290527
    10. '  ' → logprob: -14.320639610290527

Token 113: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.88735431432724
    2. ' La' → logprob: -1.1373543739318848
    3. ' la' → logprob: -2.3873543739318848
    4. 'La' → logprob: -2.5123543739318848
    5. ' str' → logprob: -3.0123543739318848
    6. ' def' → logprob: -4.387354373931885
    7. 'def' → logprob: -4.512354373931885
    8. ' chaîne' → logprob: -5.512354373931885
    9. 'chaine' → logprob: -5.762354373931885
    10. 'str' → logprob: -6.012354373931885

Token 114: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.1367345005273819
    2. '   ' → logprob: -2.6367344856262207
    3. 'chaine' → logprob: -3.8867344856262207
    4. ' chaine' → logprob: -3.8867344856262207
    5. ' ' → logprob: -5.011734485626221
    6. ' cha' → logprob: -6.136734485626221
    7. ' string' → logprob: -6.261734485626221
    8. 'cha' → logprob: -6.886734485626221
    9. 's' → logprob: -7.011734485626221
    10. '  ' → logprob: -7.261734485626221

Token 115: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8227939605712891
    2. ' )' → logprob: -1.322793960571289
    3. ')' → logprob: -1.947793960571289
    4. ' de' → logprob: -2.822793960571289
    5. ' à' → logprob: -2.947793960571289
    6. '<|end|>' → logprob: -4.822793960571289
    7. ' d' → logprob: -5.322793960571289
    8. ' a' → logprob: -5.447793960571289
    9. ' complète' → logprob: -5.697793960571289
    10. 'def' → logprob: -5.947793960571289

Token 116: ' tester' (ID: 51819)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.6554468870162964
    2. 'v' → logprob: -0.9054468870162964
    3. 'val' → logprob: -3.280447006225586
    4. ' tester' → logprob: -3.905447006225586
    5. 'tester' → logprob: -4.655447006225586
    6. '   ' → logprob: -5.280447006225586
    7. ' val' → logprob: -6.030447006225586
    8. 'ver' → logprob: -7.405447006225586
    9. ' verifier' → logprob: -8.405447006225586
    10. ' vér' → logprob: -8.905447006225586

Token 117: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48642849922180176
    2. ')' → logprob: -0.9864284992218018
    3. '):' → logprob: -4.611428260803223
    4. '):
' → logprob: -6.736428260803223
    5. '"""' → logprob: -7.861428260803223
    6. '```' → logprob: -8.736428260803223
    7. '    
' → logprob: -9.111428260803223
    8. '  ' → logprob: -9.236428260803223
    9. ' )' → logprob: -9.611428260803223
    10. '
' → logprob: -9.611428260803223

Token 118: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039910800755023956
    2. '"""' → logprob: -3.9149107933044434
    3. ')' → logprob: -4.289910793304443
    4. '"""
' → logprob: -5.414910793304443
    5. '    
' → logprob: -8.164911270141602
    6. '```' → logprob: -8.789911270141602
    7. ')
' → logprob: -9.039911270141602
    8. '"' → logprob: -9.414911270141602
    9. '    ' → logprob: -9.539911270141602
    10. '
' → logprob: -10.039911270141602

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00035631912760436535
    2. '"""' → logprob: -8.375356674194336
    3. '"""
' → logprob: -10.625356674194336
    4. 'Returns' → logprob: -10.750356674194336
    5. '```' → logprob: -11.125356674194336
    6. ')' → logprob: -11.125356674194336
    7. '  ' → logprob: -11.375356674194336
    8. '
' → logprob: -11.500356674194336
    9. '    ' → logprob: -11.500356674194336
    10. '    
' → logprob: -11.875356674194336

Token 120: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9337521195411682
    2. 'if' → logprob: -1.1837520599365234
    3. '```' → logprob: -2.0587520599365234
    4. '"""' → logprob: -2.9337520599365234
    5. '"""
' → logprob: -3.1837520599365234
    6. 'Returns' → logprob: -3.3087520599365234
    7. 'return' → logprob: -3.8087520599365234
    8. 'returns' → logprob: -4.933752059936523
    9. 'for' → logprob: -5.058752059936523
    10. 'Retour' (adapté à ' Retour') → logprob: -5.808752059936523

Token 121: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.4161232113838196
    2. '   ' → logprob: -1.5411231517791748
    3. ':' → logprob: -3.291123151779175
    4. ' :' → logprob: -3.791123151779175
    5. 'n' → logprob: -4.166123390197754
    6. ' type' → logprob: -4.666123390197754
    7. '    ' → logprob: -4.666123390197754
    8. ' ' → logprob: -5.166123390197754
    9. 'ner' → logprob: -5.166123390197754
    10. '  ' → logprob: -5.541123390197754

Token 122: ':
' (ID: 734)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0341537781059742
    2. ' bool' → logprob: -3.409153699874878
    3. 'True' → logprob: -7.909153938293457
    4. ' ' → logprob: -10.159153938293457
    5. ' None' → logprob: -10.534153938293457
    6. ' False' → logprob: -10.534153938293457
    7. 'bool' → logprob: -11.034153938293457
    8. ':' → logprob: -11.784153938293457
    9. '   ' → logprob: -11.909153938293457
    10. ' ' → logprob: -12.034153938293457

Token 123: '       ' (ID: 309)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2836380898952484
    2. '   ' → logprob: -1.5336381196975708
    3. ' bool' → logprob: -3.9086380004882812
    4. 'True' → logprob: -4.533638000488281
    5. 'bool' → logprob: -8.408638000488281
    6. '    ' → logprob: -9.033638000488281
    7. ' true' → logprob: -11.408638000488281
    8. ' ' → logprob: -11.408638000488281
    9. ' False' → logprob: -12.033638000488281
    10. '```' → logprob: -12.033638000488281

Token 124: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' (adapté à ' bool') → logprob: -0.01871625892817974
    2. ' bool' → logprob: -4.143716335296631
    3. '   ' → logprob: -6.018716335296631
    4. 'True' → logprob: -8.393715858459473
    5. ' True' → logprob: -11.768715858459473
    6. '```' → logprob: -12.018715858459473
    7. '(bool' → logprob: -13.143715858459473
    8. 'Bool' → logprob: -13.768715858459473
    9. 'boolean' → logprob: -14.268715858459473
    10. '`' → logprob: -14.768715858459473

Token 125: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13233287632465363
    2. 'e' → logprob: -2.7573328018188477
    3. ':
' → logprob: -3.6323328018188477
    4. 'ean' → logprob: -3.8823328018188477
    5. '   ' → logprob: -4.757332801818848
    6. 'True' → logprob: -6.757332801818848
    7. 'é' → logprob: -6.757332801818848
    8. '```' → logprob: -7.257332801818848
    9. 'ion' → logprob: -8.007332801818848
    10. 'an' → logprob: -8.507332801818848

Token 126: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.019006958231329918
    2. '   ' → logprob: -4.519006729125977
    3. 'True' → logprob: -4.894006729125977
    4. ' return' → logprob: -8.019006729125977
    5. '    ' → logprob: -9.769006729125977
    6. ' bool' → logprob: -10.519006729125977
    7. '       ' → logprob: -12.019006729125977
    8. ' true' → logprob: -12.644006729125977
    9. ' La' → logprob: -12.894006729125977
    10. ' Le' → logprob: -13.394006729125977

Token 127: ' si' (ID: 1784)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.3817285299301147
    2. ' if' → logprob: -1.3817285299301147
    3. ',' → logprob: -1.5067285299301147
    4. ' len' → logprob: -1.8817285299301147
    5. '<|end|>' → logprob: -4.131728649139404
    6. ' ' → logprob: -4.131728649139404
    7. 's' → logprob: -4.256728649139404
    8. '   ' → logprob: -4.756728649139404
    9. ' si' → logprob: -4.756728649139404
    10. ' )' → logprob: -5.256728649139404

Token 128: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.07471775263547897
    2. ' s' → logprob: -2.9497177600860596
    3. 's' → logprob: -4.5747175216674805
    4. ' len' → logprob: -5.3247175216674805
    5. ' le' → logprob: -5.6997175216674805
    6. 'len' → logprob: -8.07471752166748
    7. ' ' → logprob: -8.19971752166748
    8. ' the' → logprob: -8.44971752166748
    9. ' l' → logprob: -9.69971752166748
    10. '   ' → logprob: -9.82471752166748

Token 129: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36799734830856323
    2. ' s' → logprob: -2.242997407913208
    3. ' chaîne' → logprob: -2.367997407913208
    4. 'chaine' → logprob: -2.992997407913208
    5. '   ' → logprob: -3.742997407913208
    6. ' string' → logprob: -4.117997169494629
    7. ' chaine' → logprob: -5.492997169494629
    8. '    ' → logprob: -5.867997169494629
    9. 'string' → logprob: -5.992997169494629
    10. ' ' → logprob: -6.617997169494629

Token 130: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.05486772209405899
    2. ' respecte' → logprob: -3.054867744445801
    3. 'est' → logprob: -5.429867744445801
    4. ' correspond' → logprob: -6.679867744445801
    5. ' respect' → logprob: -7.804867744445801
    6. '   ' → logprob: -9.9298677444458
    7. 's' → logprob: -10.3048677444458
    8. 'respect' → logprob: -10.3048677444458
    9. ' suit' → logprob: -10.4298677444458
    10. ' répond' → logprob: -10.9298677444458

Token 131: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.10956729203462601
    2. ' conforme' → logprob: -3.234567403793335
    3. 'au' → logprob: -3.484567403793335
    4. ' True' → logprob: -3.609567403793335
    5. '   ' → logprob: -5.734567165374756
    6. 'True' → logprob: -5.859567165374756
    7. ' valide' → logprob: -8.359567642211914
    8. ' en' → logprob: -10.234567642211914
    9. 'val' → logprob: -10.234567642211914
    10. ' dans' → logprob: -10.359567642211914

Token 132: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.014279267750680447
    2. ' format' → logprob: -4.264279365539551
    3. 'form' → logprob: -9.38927936553955
    4. '   ' → logprob: -11.01427936553955
    5. 'formats' → logprob: -12.26427936553955
    6. '_format' → logprob: -12.88927936553955
    7. ' ' → logprob: -13.76427936553955
    8. 'forme' → logprob: -13.76427936553955
    9. 'Format' → logprob: -13.76427936553955
    10. 'au' → logprob: -14.01427936553955

Token 133: ' AC' (ID: 18577)
  Prédit: 'AC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.040275558829307556
    2. ' AC' → logprob: -3.2902755737304688
    3. 'True' → logprob: -7.165275573730469
    4. 'ac' → logprob: -7.290275573730469
    5. ' True' → logprob: -8.415275573730469
    6. '   ' → logprob: -8.540275573730469
    7. '_AC' → logprob: -8.915275573730469
    8. 'Ac' → logprob: -8.915275573730469
    9. ' ac' → logprob: -10.665275573730469
    10. '"' → logprob: -10.665275573730469

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025501562282443047
    2. '   ' → logprob: -4.025501728057861
    3. ',
' → logprob: -5.150501728057861
    4. '.' → logprob: -7.275501728057861
    5. '
' → logprob: -7.900501728057861
    6. '```' → logprob: -9.150501251220703
    7. '"""
' → logprob: -9.400501251220703
    8. '.
' → logprob: -9.900501251220703
    9. 'True' → logprob: -9.900501251220703
    10. '"""' → logprob: -10.275501251220703

Token 135: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.10782879590988159
    2. 'False' → logprob: -2.3578288555145264
    3. '   ' → logprob: -4.982828617095947
    4. ' sinon' → logprob: -7.607828617095947
    5. ' True' → logprob: -9.357829093933105
    6. '    ' → logprob: -9.607829093933105
    7. '       ' → logprob: -10.107829093933105
    8. ' else' → logprob: -11.232829093933105
    9. 'True' → logprob: -11.482829093933105
    10. '"' → logprob: -12.232829093933105

Token 136: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1702357977628708
    2. '.' → logprob: -2.9202358722686768
    3. ',' → logprob: -3.2952358722686768
    4. 'def' → logprob: -4.045235633850098
    5. ' True' → logprob: -4.670235633850098
    6. '=True' → logprob: -5.170235633850098
    7. '```' → logprob: -5.295235633850098
    8. ':' → logprob: -5.420235633850098
    9. '  ' → logprob: -5.920235633850098
    10. 'True' → logprob: -6.045235633850098

Token 137: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1695818156003952
    2. '
' → logprob: -2.669581890106201
    3. ')' → logprob: -2.794581890106201
    4. '):' → logprob: -4.794581890106201
    5. '\n' → logprob: -5.169581890106201
    6. '):
' → logprob: -5.544581890106201
    7. ')
' → logprob: -5.794581890106201
    8. '    
' → logprob: -7.044581890106201
    9. '"""
' → logprob: -7.169581890106201
    10. '```' → logprob: -7.169581890106201

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7740314602851868
    2. '\n' → logprob: -0.8990314602851868
    3. '
' → logprob: -2.274031400680542
    4. ':' → logprob: -4.774031639099121
    5. '    
' → logprob: -5.649031639099121
    6. '\' → logprob: -5.899031639099121
    7. '  
' → logprob: -6.024031639099121
    8. ')' → logprob: -6.149031639099121
    9. ' 
' → logprob: -6.274031639099121
    10. ':
' → logprob: -6.524031639099121

Token 139: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07932473719120026
    2. '\n' → logprob: -2.954324722290039
    3. '
' → logprob: -4.079324722290039
    4. '    
' → logprob: -5.954324722290039
    5. '```' → logprob: -6.329324722290039
    6. '"""' → logprob: -6.954324722290039
    7. '\' → logprob: -7.704324722290039
    8. '"""
' (adapté à ' """
') → logprob: -8.329324722290039
    9. '  
' → logprob: -8.704324722290039
    10. ' 
' → logprob: -8.704324722290039

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004470235202461481
    2. '
' → logprob: -5.879470348358154
    3. 'def' → logprob: -6.754470348358154
    4. '    
' → logprob: -7.879470348358154
    5. '    ' → logprob: -10.379469871520996
    6. '\n' → logprob: -10.504469871520996
    7. '```' → logprob: -10.879469871520996
    8. ' def' → logprob: -11.129469871520996
    9. ' 
' → logprob: -11.879469871520996
    10. ' if' → logprob: -12.379469871520996

Token 141: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6475804448127747
    2. 'if' → logprob: -1.0225803852081299
    3. '   ' → logprob: -2.14758038520813
    4. 'n' → logprob: -9.02258014678955
    5. '```' → logprob: -10.14758014678955
    6. 'def' → logprob: -10.64758014678955
    7. '#' (adapté à ' #') → logprob: -10.77258014678955
    8. ' n' → logprob: -11.27258014678955
    9. 'return' → logprob: -11.77258014678955
    10. '    
' → logprob: -12.14758014678955

Token 142: ' Vér' (ID: 159169)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3350597023963928
    2. 'if' → logprob: -1.835059642791748
    3. '   ' → logprob: -2.085059642791748
    4. 'def' → logprob: -7.585059642791748
    5. 'n' → logprob: -9.210060119628906
    6. '```' → logprob: -10.210060119628906
    7. ' return' → logprob: -10.335060119628906
    8. 'return' → logprob: -10.460060119628906
    9. '    ' → logprob: -10.960060119628906
    10. 's' → logprob: -11.585060119628906

Token 143: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0051522813737392426
    2. 'ifier' → logprob: -5.755152225494385
    3. 'if' → logprob: -6.630152225494385
    4. 'ifiez' → logprob: -8.130152702331543
    5. '   ' → logprob: -8.380152702331543
    6. 'i' → logprob: -9.505152702331543
    7. 'ifié' → logprob: -10.755152702331543
    8. 'ifi' → logprob: -11.755152702331543
    9. 'ifies' → logprob: -11.755152702331543
    10. 'ify' → logprob: -12.630152702331543

Token 144: ' que' (ID: 661)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.008752957917749882
    2. ' s' → logprob: -5.383752822875977
    3. 'len' → logprob: -6.008752822875977
    4. ' ' → logprob: -6.508752822875977
    5. 's' → logprob: -9.508752822875977
    6. ' ' → logprob: -10.383752822875977
    7. ' isinstance' → logprob: -10.883752822875977
    8. ' if' → logprob: -10.883752822875977
    9. '  ' → logprob: -11.258752822875977
    10. '   ' → logprob: -11.383752822875977

Token 145: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10097840428352356
    2. ' len' → logprob: -2.350978374481201
    3. 's' → logprob: -7.475978374481201
    4. ' s' → logprob: -8.60097885131836
    5. ' isinstance' → logprob: -11.72597885131836
    6. '(len' → logprob: -11.85097885131836
    7. ' not' → logprob: -13.22597885131836
    8. '   ' → logprob: -13.35097885131836
    9. 'not' → logprob: -13.97597885131836
    10. ' ' → logprob: -14.47597885131836

Token 146: ' premier' (ID: 15506)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0032604155130684376
    2. ' len' → logprob: -5.753260612487793
    3. 's' → logprob: -9.503260612487793
    4. ' s' → logprob: -12.128260612487793
    5. '(len' → logprob: -14.378260612487793
    6. 'type' → logprob: -14.378260612487793
    7. ' isinstance' → logprob: -14.753260612487793
    8. 'l' → logprob: -15.253260612487793
    9. '   ' → logprob: -15.378260612487793
    10. 'prem' → logprob: -15.628260612487793

Token 147: ' caractère' (ID: 80509)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8893640041351318
    2. 's' → logprob: -1.3893640041351318
    3. 'car' → logprob: -1.8893640041351318
    4. ' car' → logprob: -2.389364004135132
    5. ' caractère' → logprob: -3.514364004135132
    6. ' caract' → logprob: -4.014364242553711
    7. 'len' → logprob: -4.264364242553711
    8. ' len' → logprob: -4.264364242553711
    9. ' ' → logprob: -5.014364242553711
    10. '   ' → logprob: -5.264364242553711

Token 148: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23721212148666382
    2. '==' → logprob: -2.4872121810913086
    3. '   ' → logprob: -2.7372121810913086
    4. ' s' → logprob: -3.2372121810913086
    5. 's' → logprob: -3.8622121810913086
    6. '=' → logprob: -6.862212181091309
    7. ' est' → logprob: -6.987212181091309
    8. ' ' → logprob: -8.237212181091309
    9. ' =' → logprob: -8.487212181091309
    10. '(s' → logprob: -8.987212181091309

Token 149: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.6383938789367676
    2. ' '' → logprob: -0.8883938789367676
    3. ''' → logprob: -3.1383938789367676
    4. ' A' → logprob: -4.888393878936768
    5. 'A' → logprob: -5.513393878936768
    6. 's' → logprob: -6.138393878936768
    7. ' s' → logprob: -6.263393878936768
    8. '"A' → logprob: -7.263393878936768
    9. ''s' → logprob: -8.13839340209961
    10. ''S' → logprob: -8.51339340209961

Token 150: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00014692598779220134
    2. ''A' → logprob: -8.875146865844727
    3. ' A' → logprob: -12.000146865844727
    4. ''' → logprob: -14.750146865844727
    5. '   ' → logprob: -15.125146865844727
    6. '"A' → logprob: -16.000146865844727
    7. '`' → logprob: -16.375146865844727
    8. ' ' → logprob: -17.750146865844727
    9. '’A' → logprob: -17.875146865844727
    10. '```' → logprob: -18.000146865844727

Token 151: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33238768577575684
    2. ''' → logprob: -1.4573876857757568
    3. ' and' → logprob: -3.957387685775757
    4. '')' → logprob: -4.457387924194336
    5. 'if' → logprob: -4.957387924194336
    6. ' if' → logprob: -5.207387924194336
    7. 's' → logprob: -6.582387924194336
    8. ')' → logprob: -6.582387924194336
    9. ' '' → logprob: -6.832387924194336
    10. 'and' → logprob: -6.832387924194336

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009730404708534479
    2. '    
' → logprob: -7.250973224639893
    3. ' if' → logprob: -9.625972747802734
    4. 'if' → logprob: -9.875972747802734
    5. '   
' → logprob: -10.000972747802734
    6. ' 
' → logprob: -10.750972747802734
    7. '```' → logprob: -10.875972747802734
    8. '
' → logprob: -11.125972747802734
    9. '  
' → logprob: -11.500972747802734
    10. '\n' → logprob: -11.875972747802734

Token 153: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5376490354537964
    2. ' if' → logprob: -1.0376490354537964
    3. 'if' (adapté à ' if') → logprob: -2.787649154663086
    4. '    
' → logprob: -11.037649154663086
    5. ' return' → logprob: -13.287649154663086
    6. '	if' → logprob: -13.412649154663086
    7. '  ' → logprob: -13.537649154663086
    8. '    ' → logprob: -13.662649154663086
    9. 'return' → logprob: -14.037649154663086
    10. ' ' → logprob: -14.037649154663086

Token 154: ' s' (ID: 265)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5294580459594727
    2. ' s' → logprob: -1.7794580459594727
    3. ' len' → logprob: -1.7794580459594727
    4. 's' → logprob: -3.1544580459594727
    5. 'len' → logprob: -3.9044580459594727
    6. 'not' → logprob: -4.529458045959473
    7. '   ' → logprob: -11.779458045959473
    8. ' ' → logprob: -12.904458045959473
    9. ' ' → logprob: -13.029458045959473
    10. '(len' → logprob: -13.529458045959473

Token 155: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02660413272678852
    2. '.startswith' → logprob: -3.651604175567627
    3. ' and' → logprob: -9.401603698730469
    4. '==' → logprob: -9.401603698730469
    5. ' ==' → logprob: -9.776603698730469
    6. 'startswith' → logprob: -10.526603698730469
    7. 'and' → logprob: -10.901603698730469
    8. '   ' → logprob: -11.526603698730469
    9. '.' → logprob: -11.901603698730469
    10. '[:' → logprob: -11.901603698730469

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -10.875020027160645
    3. '   ' → logprob: -15.000020027160645
    4. ']' → logprob: -15.375020027160645
    5. '1' → logprob: -15.750020027160645
    6. '```' → logprob: -15.750020027160645
    7. ':' → logprob: -15.875020027160645
    8. '
' → logprob: -16.25002098083496
    9. ' :' → logprob: -16.50002098083496
    10. ')' → logprob: -16.62502098083496

Token 157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000422570708906278
    2. '']' → logprob: -8.500422477722168
    3. ']==' → logprob: -8.750422477722168
    4. ']!=' → logprob: -10.875422477722168
    5. ']=='' → logprob: -11.125422477722168
    6. ' ]' → logprob: -11.125422477722168
    7. ''' → logprob: -12.000422477722168
    8. ']!='' → logprob: -12.500422477722168
    9. '==' → logprob: -14.125422477722168
    10. '!=' → logprob: -15.125422477722168

Token 158: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.20292073488235474
    2. ' !=' → logprob: -1.70292067527771
    3. '!='' → logprob: -6.952920913696289
    4. '==' → logprob: -7.702920913696289
    5. ' ==' → logprob: -9.952920913696289
    6. '!="' → logprob: -11.327920913696289
    7. '!' → logprob: -11.452920913696289
    8. '=' → logprob: -11.452920913696289
    9. ']' → logprob: -11.952920913696289
    10. ']!=' → logprob: -12.577920913696289

Token 159: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.0023127419408410788
    2. ' '' → logprob: -6.252312660217285
    3. ''' → logprob: -8.002312660217285
    4. 'A' → logprob: -10.627312660217285
    5. '"A' → logprob: -10.627312660217285
    6. '’A' → logprob: -14.627312660217285
    7. ' A' → logprob: -15.377312660217285
    8. ''S' → logprob: -16.7523136138916
    9. '   ' → logprob: -17.0023136138916
    10. '"' → logprob: -17.1273136138916

Token 160: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0004330532974563539
    2. ''A' → logprob: -7.750432968139648
    3. ' A' → logprob: -13.250432968139648
    4. ''' → logprob: -15.250432968139648
    5. '"A' → logprob: -16.00043296813965
    6. '	A' → logprob: -16.87543296813965
    7. '’A' → logprob: -17.12543296813965
    8. 'А' → logprob: -17.12543296813965
    9. 'a' → logprob: -17.37543296813965
    10. '```' → logprob: -18.12543296813965

Token 161: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5407871007919312
    2. ':' → logprob: -0.9157871007919312
    3. ''' → logprob: -4.665787220001221
    4. '):' → logprob: -5.665787220001221
    5. ')' → logprob: -6.665787220001221
    6. '       ' → logprob: -7.040787220001221
    7. '':
' → logprob: -7.415787220001221
    8. ':
' → logprob: -7.665787220001221
    9. '')' → logprob: -7.665787220001221
    10. '   ' → logprob: -7.790787220001221

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004128980450332165
    2. '   ' → logprob: -5.754128932952881
    3. ' return' → logprob: -7.629128932952881
    4. '
' → logprob: -8.629129409790039
    5. 'return' → logprob: -9.129129409790039
    6. ':' → logprob: -9.504129409790039
    7. ':return' → logprob: -10.504129409790039
    8. '    ' → logprob: -10.629129409790039
    9. '      ' → logprob: -11.629129409790039
    10. '\n' → logprob: -12.004129409790039

Token 163: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7603296637535095
    2. '       ' → logprob: -0.8853296637535095
    3. 'return' (adapté à ' return') → logprob: -2.2603297233581543
    4. '   ' → logprob: -4.760329723358154
    5. '
' → logprob: -5.385329723358154
    6. '    ' → logprob: -6.760329723358154
    7. ' 
' → logprob: -7.010329723358154
    8. '        
' → logprob: -9.135329246520996
    9. '    
' → logprob: -9.885329246520996
    10. '	return' → logprob: -10.135329246520996

Token 164: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12692810595035553
    2. ' False' → logprob: -2.1269280910491943
    3. '(False' → logprob: -18.001928329467773
    4. '=False' → logprob: -19.876928329467773
    5. '_false' → logprob: -22.251928329467773
    6. '   ' → logprob: -22.501928329467773
    7. 'false' → logprob: -22.751928329467773
    8. ' ' → logprob: -22.751928329467773
    9. ' false' → logprob: -23.001928329467773
    10. '.False' → logprob: -23.001928329467773

Token 165: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23136016726493835
    2. '
' → logprob: -2.1063601970672607
    3. '    
' → logprob: -2.7313601970672607
    4. '   
' → logprob: -4.856359958648682
    5. '  
' → logprob: -4.856359958648682
    6. '\n' → logprob: -6.231359958648682
    7. ' 
' → logprob: -6.356359958648682
    8. '  ' → logprob: -8.48136043548584
    9. '```' → logprob: -9.23136043548584
    10. '     
' → logprob: -10.23136043548584

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5222960710525513
    2. '
' → logprob: -1.1472960710525513
    3. '    
' → logprob: -2.7722959518432617
    4. '   
' → logprob: -4.397295951843262
    5. '  
' → logprob: -4.772295951843262
    6. ' 
' → logprob: -6.272295951843262
    7. '\n' → logprob: -6.647295951843262
    8. '```' → logprob: -6.772295951843262
    9. '  ' → logprob: -7.147295951843262
    10. '

' → logprob: -8.647295951843262

Token 167: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0424613952636719
    2. '   ' → logprob: -1.1674613952636719
    3. '    
' → logprob: -2.042461395263672
    4. 'count' → logprob: -2.667461395263672
    5. 'c' → logprob: -3.792461395263672
    6. '  
' → logprob: -3.917461395263672
    7. '   
' → logprob: -4.292461395263672
    8. ' 
' → logprob: -4.417461395263672
    9. '#' (adapté à ' #') → logprob: -4.417461395263672
    10. 'if' → logprob: -4.667461395263672

Token 168: ' Vér' (ID: 159169)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.768852710723877
    2. 'c' → logprob: -1.518852710723877
    3. 'if' → logprob: -1.893852710723877
    4. 'sub' → logprob: -2.893852710723877
    5. 'substring' → logprob: -3.518852710723877
    6. ' count' → logprob: -4.268852710723877
    7. 'comp' → logprob: -4.268852710723877
    8. ' if' → logprob: -4.643852710723877
    9. ' c' → logprob: -4.768852710723877
    10. '#' → logprob: -4.893852710723877

Token 169: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00015395533409900963
    2. 'ife' → logprob: -9.125153541564941
    3. 'if' → logprob: -10.250153541564941
    4. 'ifi' → logprob: -12.750153541564941
    5. 'ifié' → logprob: -13.125153541564941
    6. 'f' → logprob: -13.375153541564941
    7. 'éf' → logprob: -14.625153541564941
    8. 'ifiez' → logprob: -14.750153541564941
    9. '[' → logprob: -15.000153541564941
    10. 'ifle' → logprob: -15.125153541564941

Token 170: ' qu' (ID: 474)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9173585176467896
    2. ' s' → logprob: -1.0423585176467896
    3. ' que' → logprob: -2.2923583984375
    4. ' la' → logprob: -2.9173583984375
    5. 'len' → logprob: -3.9173583984375
    6. ' '' → logprob: -3.9173583984375
    7. 's' → logprob: -4.0423583984375
    8. ' if' → logprob: -4.9173583984375
    9. ''' → logprob: -5.2923583984375
    10. ' not' → logprob: -5.2923583984375

Token 171: ''il' (ID: 14683)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.128340482711792
    2. ' s' → logprob: -1.378340482711792
    3. 'len' → logprob: -1.378340482711792
    4. 's' → logprob: -2.378340482711792
    5. ''s' → logprob: -3.003340482711792
    6. ''' → logprob: -4.128340721130371
    7. ' '' → logprob: -4.753340721130371
    8. ' la' → logprob: -6.878340721130371
    9. 'e' → logprob: -7.003340721130371
    10. ''il' → logprob: -7.003340721130371

Token 172: ' y' (ID: 342)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.48364144563674927
    2. 's' → logprob: -2.6086413860321045
    3. ' n' → logprob: -2.7336413860321045
    4. ' s' → logprob: -2.7336413860321045
    5. ' y' → logprob: -2.7336413860321045
    6. 'len' → logprob: -3.8586413860321045
    7. 'y' → logprob: -4.358641624450684
    8. '   ' → logprob: -4.483641624450684
    9. 'est' → logprob: -4.733641624450684
    10. 'n' → logprob: -4.858641624450684

Token 173: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38947707414627075
    2. ' a' → logprob: -1.139477014541626
    3. ''a' → logprob: -6.639477252960205
    4. ' ait' → logprob: -8.514476776123047
    5. ' have' → logprob: -8.764476776123047
    6. 'exact' → logprob: -9.014476776123047
    7. ' exactly' → logprob: -9.639476776123047
    8. ''ai' → logprob: -9.764476776123047
    9. ' n' → logprob: -9.764476776123047
    10. '```' → logprob: -9.889476776123047

Token 174: ' exactement' (ID: 108701)
  Prédit: ' exactly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.7104669809341431
    2. ' s' → logprob: -1.085466980934143
    3. 'exact' → logprob: -2.3354668617248535
    4. 's' → logprob: -2.9604668617248535
    5. ' exactement' → logprob: -4.2104668617248535
    6. ' ' → logprob: -5.5854668617248535
    7. '1' → logprob: -6.7104668617248535
    8. ' exact' → logprob: -7.5854668617248535
    9. ' une' → logprob: -7.9604668617248535
    10. ' only' → logprob: -8.335467338562012

Token 175: ' une' (ID: 2463)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3988718092441559
    2. ' ' → logprob: -2.398871898651123
    3. ' une' → logprob: -2.648871898651123
    4. 's' → logprob: -2.773871898651123
    5. 'une' → logprob: -3.023871898651123
    6. ' un' → logprob: -4.023871898651123
    7. '1' → logprob: -4.023871898651123
    8. ' one' → logprob: -4.648871898651123
    9. ' exactly' → logprob: -5.523871898651123
    10. ' a' → logprob: -6.398871898651123

Token 176: ' '' (ID: 461)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.07465393096208572
    2. ' C' → logprob: -2.6996538639068604
    3. ' '' → logprob: -6.0746541023254395
    4. ''C' → logprob: -6.4496541023254395
    5. 's' → logprob: -8.324653625488281
    6. ''' → logprob: -8.824653625488281
    7. 'occur' → logprob: -9.324653625488281
    8. 'occ' → logprob: -9.574653625488281
    9. 'c' → logprob: -9.699653625488281
    10. ' occurrence' → logprob: -9.824653625488281

Token 177: 'A' (ID: 32)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003565575461834669
    2. ' C' → logprob: -8.000356674194336
    3. ''C' → logprob: -11.625356674194336
    4. 's' → logprob: -12.500356674194336
    5. ' ' → logprob: -13.125356674194336
    6. 'c' → logprob: -13.250356674194336
    7. ''' → logprob: -13.750356674194336
    8. 'def' → logprob: -14.625356674194336
    9. ' '' → logprob: -14.750356674194336
    10. '   ' → logprob: -14.750356674194336

Token 178: ''' (ID: 6)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0018361835973337293
    2. ''' → logprob: -6.87683629989624
    3. ''C' → logprob: -8.126835823059082
    4. '')' → logprob: -8.501835823059082
    5. 's' → logprob: -9.126835823059082
    6. 'c' → logprob: -9.876835823059082
    7. ' C' → logprob: -10.001835823059082
    8. '('' → logprob: -11.001835823059082
    9. ' '' → logprob: -12.126835823059082
    10. ' ' → logprob: -12.126835823059082

Token 179: ' (' (ID: 350)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.05388209596276283
    2. 's' → logprob: -4.178882122039795
    3. ''' → logprob: -4.553882122039795
    4. ' et' → logprob: -4.803882122039795
    5. ' '' → logprob: -6.303882122039795
    6. ' in' → logprob: -6.303882122039795
    7. ' C' → logprob: -6.428882122039795
    8. ' dans' → logprob: -6.428882122039795
    9. ' and' → logprob: -6.553882122039795
    10. ' s' → logprob: -6.553882122039795

Token 180: 'au' (ID: 753)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7982136607170105
    2. 's' → logprob: -0.7982136607170105
    3. ')' → logprob: -2.9232137203216553
    4. 'c' → logprob: -3.7982137203216553
    5. 'if' → logprob: -4.923213481903076
    6. '')' → logprob: -4.923213481903076
    7. ''s' → logprob: -6.423213481903076
    8. ' and' → logprob: -6.548213481903076
    9. ''' → logprob: -6.673213481903076
    10. ' if' → logprob: -7.048213481903076

Token 181: ' début' (ID: 29589)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.9618582725524902
    2. 'total' → logprob: -1.2118582725524902
    3. '   ' → logprob: -2.3368582725524902
    4. 's' → logprob: -3.0868582725524902
    5. 'c' → logprob: -3.5868582725524902
    6. ' moins' → logprob: -3.7118582725524902
    7. 'moins' → logprob: -3.7118582725524902
    8. ')' → logprob: -3.8368582725524902
    9. '     ' → logprob: -4.71185827255249
    10. '       ' → logprob: -4.83685827255249

Token 182: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026965199038386345
    2. '')' → logprob: -4.526965141296387
    3. ' et' → logprob: -5.276965141296387
    4. '   ' → logprob: -5.651965141296387
    5. 'et' → logprob: -6.026965141296387
    6. 's' → logprob: -6.151965141296387
    7. ' )' → logprob: -7.526965141296387
    8. ' and' → logprob: -8.026965141296387
    9. ' s' → logprob: -8.026965141296387
    10. ')
' → logprob: -8.526965141296387

Token 183: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2514172792434692
    2. 'if' → logprob: -1.6264172792434692
    3. ' and' → logprob: -1.6264172792434692
    4. ' if' → logprob: -1.6264172792434692
    5. 's' → logprob: -3.5014171600341797
    6. ' et' → logprob: -3.7514171600341797
    7. 'C' → logprob: -4.00141716003418
    8. 'and' → logprob: -4.00141716003418
    9. 'c' → logprob: -4.75141716003418
    10. 'et' → logprob: -4.75141716003418

Token 184: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.7953073382377625
    2. ' une' → logprob: -0.9203073382377625
    3. 'exact' → logprob: -2.6703073978424072
    4. ' exactement' → logprob: -3.9203073978424072
    5. 's' → logprob: -4.420307159423828
    6. ''une' → logprob: -4.670307159423828
    7. 'pas' → logprob: -4.920307159423828
    8. ' pas' → logprob: -5.045307159423828
    9. 'au' → logprob: -5.045307159423828
    10. ' exactly' → logprob: -5.045307159423828

Token 185: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.03562561050057411
    2. ' '' → logprob: -3.660625696182251
    3. 'C' → logprob: -5.035625457763672
    4. ''' → logprob: -6.035625457763672
    5. ' C' → logprob: -8.410625457763672
    6. 'unique' → logprob: -10.035625457763672
    7. '"C' → logprob: -10.660625457763672
    8. '`' → logprob: -10.910625457763672
    9. '('' → logprob: -11.535625457763672
    10. ' ' → logprob: -11.660625457763672

Token 186: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -4.8232690460281447e-05
    2. ' C' → logprob: -10.500048637390137
    3. ''C' → logprob: -11.000048637390137
    4. 'def' → logprob: -13.750048637390137
    5. 'c' → logprob: -13.875048637390137
    6. ''' → logprob: -14.750048637390137
    7. ' ' → logprob: -15.000048637390137
    8. 's' → logprob: -16.00004768371582
    9. '   ' → logprob: -16.00004768371582
    10. '<|end|>' → logprob: -16.50004768371582

Token 187: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003523694584146142
    2. 's' → logprob: -6.753523826599121
    3. '')' → logprob: -7.003523826599121
    4. '(s' → logprob: -8.253523826599121
    5. ' dans' → logprob: -8.378523826599121
    6. ' '' → logprob: -8.753523826599121
    7. 'dans' → logprob: -8.878523826599121
    8. ')' → logprob: -9.128523826599121
    9. 'def' → logprob: -9.628523826599121
    10. '   ' → logprob: -10.003523826599121

Token 188: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3161422610282898
    2. ' dans' → logprob: -2.4411423206329346
    3. '(s' → logprob: -2.9411423206329346
    4. ' in' → logprob: -3.3161423206329346
    5. 's' → logprob: -3.6911423206329346
    6. ' if' → logprob: -3.8161423206329346
    7. 'dans' → logprob: -4.0661420822143555
    8. ' s' → logprob: -4.6911420822143555
    9. 'if' → logprob: -5.6911420822143555
    10. ')' → logprob: -5.6911420822143555

Token 189: ' toute' (ID: 16825)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47439202666282654
    2. 's' → logprob: -0.9743920564651489
    3. ' la' → logprob: -8.72439193725586
    4. 'la' → logprob: -10.09939193725586
    5. 'l' → logprob: -10.59939193725586
    6. '(s' → logprob: -10.84939193725586
    7. ' ' → logprob: -10.84939193725586
    8. 'le' → logprob: -11.97439193725586
    9. ' the' → logprob: -11.97439193725586
    10. '   ' → logprob: -12.47439193725586

Token 190: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.25681033730506897
    2. ' la' → logprob: -1.8818103075027466
    3. 's' → logprob: -2.631810426712036
    4. ' s' → logprob: -6.881810188293457
    5. 'l' → logprob: -7.256810188293457
    6. 'chaine' → logprob: -8.506810188293457
    7. 'le' → logprob: -9.131810188293457
    8. '   ' → logprob: -9.256810188293457
    9. ' ' → logprob: -10.631810188293457
    10. 'a' → logprob: -11.381810188293457

Token 191: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.3738017678260803
    2. 's' → logprob: -1.3738017082214355
    3. ' chaîne' → logprob: -2.9988017082214355
    4. 'string' → logprob: -5.6238017082214355
    5. 'cha' → logprob: -6.2488017082214355
    6. ' s' → logprob: -6.2488017082214355
    7. ' chaine' → logprob: -7.4988017082214355
    8. '   ' → logprob: -7.7488017082214355
    9. 'str' → logprob: -8.873802185058594
    10. 'chain' → logprob: -9.123802185058594

Token 192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004622137639671564
    2. '
' → logprob: -5.504621982574463
    3. '    
' → logprob: -8.004622459411621
    4. ',' → logprob: -9.879622459411621
    5. '   
' → logprob: -10.379622459411621
    6. 's' → logprob: -10.629622459411621
    7. ' and' → logprob: -10.879622459411621
    8. '  ' → logprob: -11.254622459411621
    9. '  
' → logprob: -11.504622459411621
    10. 'C' → logprob: -12.004622459411621

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08660335838794708
    2. '
' → logprob: -3.3366034030914307
    3. ' if' → logprob: -3.9616034030914307
    4. 'if' → logprob: -4.086603164672852
    5. 'c' → logprob: -5.461603164672852
    6. '    
' → logprob: -6.086603164672852
    7. 'count' → logprob: -6.461603164672852
    8. ' c' → logprob: -6.961603164672852
    9. ' count' → logprob: -7.836603164672852
    10. '  
' → logprob: -7.961603164672852

Token 194: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6461508870124817
    2. ' if' → logprob: -1.146150827407837
    3. 'c' → logprob: -2.521150827407837
    4. '   ' → logprob: -3.646150827407837
    5. ' c' → logprob: -3.771150827407837
    6. 'count' → logprob: -3.771150827407837
    7. ' count' → logprob: -5.396151065826416
    8. 'nb' → logprob: -8.146150588989258
    9. 'ac' → logprob: -9.146150588989258
    10. 'total' → logprob: -9.146150588989258

Token 195: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08896160125732422
    2. 's' → logprob: -2.463961601257324
    3. ' '' → logprob: -12.338961601257324
    4. '(s' → logprob: -12.463961601257324
    5. ''s' → logprob: -12.588961601257324
    6. ' not' → logprob: -12.588961601257324
    7. ''' → logprob: -13.213961601257324
    8. '	s' → logprob: -13.713961601257324
    9. ' ' → logprob: -13.838961601257324
    10. '"s' → logprob: -14.463961601257324

Token 196: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -8.184812031686306e-05
    2. '.' → logprob: -9.500082015991211
    3. '[' → logprob: -12.250082015991211
    4. 'count' → logprob: -13.625082015991211
    5. '.Count' → logprob: -15.250082015991211
    6. '.upper' → logprob: -15.250082015991211
    7. ' .' → logprob: -15.375082015991211
    8. '.c' → logprob: -16.12508201599121
    9. '.find' → logprob: -17.25008201599121
    10. '().' → logprob: -17.62508201599121

Token 197: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0004961982485838234
    2. '(' → logprob: -7.6254963874816895
    3. '("' → logprob: -12.750495910644531
    4. ''' → logprob: -13.000495910644531
    5. ''C' → logprob: -13.125495910644531
    6. ' ('' → logprob: -14.750495910644531
    7. '(('' → logprob: -15.375495910644531
    8. '(
' → logprob: -16.37549591064453
    9. ''A' → logprob: -16.87549591064453
    10. '(C' → logprob: -16.87549591064453

Token 198: 'A' (ID: 32)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03406667709350586
    2. 'A' → logprob: -3.534066677093506
    3. ''C' → logprob: -5.534066677093506
    4. ''A' → logprob: -8.659067153930664
    5. ''' → logprob: -9.534067153930664
    6. 'AC' → logprob: -10.034067153930664
    7. ' C' → logprob: -10.284067153930664
    8. 'c' → logprob: -11.034067153930664
    9. ' A' → logprob: -12.409067153930664
    10. 'a' → logprob: -13.221567153930664

Token 199: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0007188651943579316
    2. ')' → logprob: -7.25071907043457
    3. ' ')' → logprob: -12.62571907043457
    4. ''' → logprob: -13.25071907043457
    5. '")' → logprob: -13.75071907043457
    6. '('' → logprob: -14.25071907043457
    7. '()' → logprob: -14.50071907043457
    8. ' )' → logprob: -15.00071907043457
    9. ']' → logprob: -15.25071907043457
    10. '',' → logprob: -15.37571907043457

Token 200: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.06309590488672256
    2. '!=' → logprob: -3.063095808029175
    3. ' >' → logprob: -4.813096046447754
    4. '>' → logprob: -5.813096046447754
    5. '()!=' → logprob: -6.313096046447754
    6. '()' → logprob: -6.938096046447754
    7. ')' → logprob: -8.188096046447754
    8. '()>' → logprob: -8.563096046447754
    9. ')!=' → logprob: -10.938096046447754
    10. '   ' → logprob: -12.563096046447754

Token 201: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.625003814697266
    4. '```' → logprob: -19.125003814697266
    5. '<|end|>' → logprob: -19.625003814697266
    6. 'def' → logprob: -20.250003814697266
    7. '۱' → logprob: -21.000003814697266
    8. '0' → logprob: -21.375003814697266
    9. '2' → logprob: -21.375003814697266
    10. '[' → logprob: -21.500003814697266

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -18.75
    4. '   ' → logprob: -20.0
    5. '```' → logprob: -20.375
    6. 'def' → logprob: -20.5
    7. '۱' → logprob: -20.875
    8. '[' → logprob: -22.0
    9. '2' → logprob: -22.125
    10. '<|end|>' → logprob: -22.875

Token 203: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.021974656730890274
    2. ' and' → logprob: -3.896974563598633
    3. ')' → logprob: -7.271974563598633
    4. 'and' → logprob: -8.146974563598633
    5. ':' → logprob: -8.396974563598633
    6. '   ' → logprob: -9.021974563598633
    7. '):' → logprob: -9.771974563598633
    8. 'or' → logprob: -11.646974563598633
    9. '       ' → logprob: -11.771974563598633
    10. '<|end|>' → logprob: -11.771974563598633

Token 204: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6329748630523682
    2. ' s' → logprob: -0.7579748630523682
    3. '   ' → logprob: -8.007974624633789
    4. ''s' → logprob: -11.632974624633789
    5. 'c' → logprob: -12.007974624633789
    6. '(s' → logprob: -12.382974624633789
    7. ' ' → logprob: -12.382974624633789
    8. '  ' → logprob: -12.507974624633789
    9. '`s' → logprob: -12.632974624633789
    10. '	s' → logprob: -12.882974624633789

Token 205: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.00043734462815336883
    2. '.' → logprob: -7.750437259674072
    3. ' .' → logprob: -12.25043773651123
    4. 'count' → logprob: -13.87543773651123
    5. ''.' → logprob: -14.87543773651123
    6. '.Count' → logprob: -15.50043773651123
    7. '   ' → logprob: -15.50043773651123
    8. '.c' → logprob: -16.625436782836914
    9. ' count' → logprob: -17.500436782836914
    10. ').' → logprob: -17.875436782836914

Token 206: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.011052302084863186
    2. '(' → logprob: -4.511052131652832
    3. '(
' → logprob: -12.886052131652832
    4. ''C' → logprob: -14.386052131652832
    5. ''' → logprob: -14.511052131652832
    6. ' ('' → logprob: -15.011052131652832
    7. ' (' → logprob: -15.136052131652832
    8. '("' → logprob: -15.636052131652832
    9. '(C' → logprob: -16.88605308532715
    10. 'C' → logprob: -16.88605308532715

Token 207: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0004147032741457224
    2. ''C' → logprob: -7.875414848327637
    3. ' C' → logprob: -10.625414848327637
    4. ''' → logprob: -12.000414848327637
    5. '   ' → logprob: -13.250414848327637
    6. ' ' → logprob: -14.500414848327637
    7. '')' → logprob: -15.125414848327637
    8. ')' → logprob: -15.562914848327637
    9. '"C' → logprob: -15.562914848327637
    10. '  ' → logprob: -15.750414848327637

Token 208: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0021965294145047665
    2. ')' → logprob: -6.127196311950684
    3. ' ')' → logprob: -12.127196311950684
    4. ''' → logprob: -12.627196311950684
    5. '   ' → logprob: -13.752196311950684
    6. '")' → logprob: -14.252196311950684
    7. '()' → logprob: -15.127196311950684
    8. '!=' → logprob: -15.377196311950684
    9. ')!=' → logprob: -15.752196311950684
    10. ' )' → logprob: -16.252197265625

Token 209: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6192696690559387
    2. ' !=' → logprob: -0.8692696690559387
    3. '()!=' → logprob: -3.244269609451294
    4. '()' → logprob: -5.744269847869873
    5. ')' → logprob: -9.119269371032715
    6. ')!=' → logprob: -9.494269371032715
    7. ' ()' → logprob: -12.619269371032715
    8. ']!=' → logprob: -12.619269371032715
    9. '<>' → logprob: -12.744269371032715
    10. '   ' → logprob: -12.869269371032715

Token 210: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.500003814697266
    4. '<|end|>' → logprob: -17.750003814697266
    5. '```' → logprob: -18.500003814697266
    6. '  ' → logprob: -20.125003814697266
    7. '0' → logprob: -20.625003814697266
    8. 'def' → logprob: -20.750003814697266
    9. '۱' → logprob: -21.125003814697266
    10. '2' → logprob: -21.250003814697266

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -18.5
    4. '   ' → logprob: -19.5
    5. '2' → logprob: -19.875
    6. '<|end|>' → logprob: -20.0
    7. '۱' → logprob: -20.625
    8. 'def' → logprob: -20.75
    9. '0' → logprob: -20.75
    10. '１' → logprob: -21.375

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020767733454704285
    2. ':
' → logprob: -3.8957676887512207
    3. ' or' → logprob: -9.145768165588379
    4. '   ' → logprob: -10.145768165588379
    5. ':return' → logprob: -10.395768165588379
    6. '):' → logprob: -10.520768165588379
    7. '       ' → logprob: -12.020768165588379
    8. '):
' → logprob: -12.145768165588379
    9. ')' → logprob: -12.270768165588379
    10. ' :' → logprob: -12.645768165588379

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001222508290084079
    2. '
' → logprob: -9.5001220703125
    3. '   ' → logprob: -10.1251220703125
    4. '      ' → logprob: -13.2501220703125
    5. '    
' → logprob: -14.2501220703125
    6. ' return' → logprob: -14.2501220703125
    7. '        
' → logprob: -14.2501220703125
    8. 'return' → logprob: -14.5001220703125
    9. ':' → logprob: -14.7501220703125
    10. ',' → logprob: -14.8751220703125

Token 214: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04187057539820671
    2. '       ' → logprob: -3.791870594024658
    3. ' return' → logprob: -4.041870594024658
    4. '   ' → logprob: -7.041870594024658
    5. '	return' → logprob: -11.7918701171875
    6. '           ' → logprob: -13.1668701171875
    7. ' ' → logprob: -13.7918701171875
    8. ':return' → logprob: -13.9168701171875
    9. '
' → logprob: -14.5418701171875
    10. '  ' → logprob: -14.7918701171875

Token 215: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004306692280806601
    2. ' False' → logprob: -7.750430583953857
    3. '(False' → logprob: -21.500431060791016
    4. 'True' → logprob: -22.000431060791016
    5. 'false' → logprob: -22.750431060791016
    6. '_false' → logprob: -23.375431060791016
    7. '=False' → logprob: -24.000431060791016
    8. 'F' → logprob: -24.375431060791016
    9. '.False' → logprob: -26.500431060791016
    10. 'FALSE' → logprob: -26.750431060791016

Token 216: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05258597806096077
    2. '
' → logprob: -3.177586078643799
    3. '    
' → logprob: -4.927586078643799
    4. '   
' → logprob: -6.427586078643799
    5. '  
' → logprob: -7.427586078643799
    6. ' 
' → logprob: -10.30258560180664
    7. '  ' → logprob: -10.30258560180664
    8. '#' → logprob: -12.42758560180664
    9. '```' → logprob: -12.92758560180664
    10. '\n' → logprob: -13.05258560180664

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017488420708104968
    2. '    
' → logprob: -7.001749038696289
    3. '
' → logprob: -7.876749038696289
    4. '   
' → logprob: -8.501749038696289
    5. '  ' → logprob: -9.001749038696289
    6. '#' → logprob: -9.876749038696289
    7. '  
' → logprob: -10.501749038696289
    8. 'if' → logprob: -11.126749038696289
    9. '    ' → logprob: -11.626749038696289
    10. 'for' → logprob: -12.126749038696289

Token 218: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025207267608493567
    2. '#' (adapté à ' #') → logprob: -6.752520561218262
    3. '
' → logprob: -7.502520561218262
    4. ' #' → logprob: -8.502520561218262
    5. 'if' → logprob: -8.877520561218262
    6. '    
' → logprob: -9.252520561218262
    7. '  ' → logprob: -9.252520561218262
    8. ' if' → logprob: -9.627520561218262
    9. '   
' → logprob: -10.002520561218262
    10. ' for' → logprob: -10.127520561218262

Token 219: ' Vér' (ID: 159169)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6140844225883484
    2. '#' → logprob: -1.2390844821929932
    3. 'sub' → logprob: -3.364084482192993
    4. ' for' → logprob: -3.364084482192993
    5. 'substring' → logprob: -3.364084482192993
    6. 'c' → logprob: -3.614084482192993
    7. ' substring' → logprob: -4.989084243774414
    8. 'if' → logprob: -5.239084243774414
    9. ' #' → logprob: -5.364084243774414
    10. 'count' → logprob: -5.364084243774414

Token 220: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00015920029545668513
    2. 'ife' → logprob: -8.87515926361084
    3. 'if' → logprob: -11.25015926361084
    4. 'ifies' → logprob: -13.50015926361084
    5. 'ifiez' → logprob: -13.62515926361084
    6. 'ify' → logprob: -13.75015926361084
    7. '#' → logprob: -14.00015926361084
    8. 'ifi' → logprob: -14.62515926361084
    9. 'ifié' → logprob: -14.87515926361084
    10. 'f' → logprob: -15.12515926361084

Token 221: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.04038352891802788
    2. '   ' → logprob: -4.290383338928223
    3. ' that' → logprob: -5.040383338928223
    4. ' if' → logprob: -5.290383338928223
    5. ' for' → logprob: -5.540383338928223
    6. ' la' → logprob: -5.665383338928223
    7. ' les' → logprob: -6.165383338928223
    8. '    ' → logprob: -6.540383338928223
    9. 'que' → logprob: -6.665383338928223
    10. 'for' → logprob: -7.290383338928223

Token 222: ' la' (ID: 557)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.9995080232620239
    2. 's' → logprob: -1.499508023262024
    3. ' s' → logprob: -1.874508023262024
    4. ' '' → logprob: -2.3745079040527344
    5. ''s' → logprob: -2.7495079040527344
    6. ''' → logprob: -2.7495079040527344
    7. 'C' → logprob: -4.249507904052734
    8. ' all' → logprob: -4.749507904052734
    9. 'all' → logprob: -5.499507904052734
    10. ''S' → logprob: -5.749507904052734

Token 223: ' '' (ID: 461)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5780214071273804
    2. 's' → logprob: -1.7030214071273804
    3. ''C' → logprob: -2.07802152633667
    4. ''s' → logprob: -4.20302152633667
    5. 'part' → logprob: -4.20302152633667
    6. 'sub' → logprob: -4.32802152633667
    7. 'position' → logprob: -4.32802152633667
    8. 'c' → logprob: -4.57802152633667
    9. ' C' → logprob: -4.82802152633667
    10. ''' → logprob: -4.95302152633667

Token 224: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005695947329513729
    2. 's' → logprob: -8.250569343566895
    3. ''C' → logprob: -8.250569343566895
    4. ''' → logprob: -10.750569343566895
    5. ' C' → logprob: -11.375569343566895
    6. 'c' → logprob: -11.500569343566895
    7. ''s' → logprob: -14.125569343566895
    8. 'def' → logprob: -14.375569343566895
    9. '   ' → logprob: -14.625569343566895
    10. '```' → logprob: -14.750569343566895

Token 225: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0031568072736263275
    2. ' not' → logprob: -6.128156661987305
    3. ' in' → logprob: -8.003156661987305
    4. ' '' → logprob: -8.253156661987305
    5. ''in' → logprob: -9.003156661987305
    6. 's' → logprob: -9.253156661987305
    7. ''s' → logprob: -9.628156661987305
    8. ''''' → logprob: -10.378156661987305
    9. '"' → logprob: -11.128156661987305
    10. 'not' → logprob: -11.503156661987305

Token 226: ' apparaît' (ID: 147656)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.439923644065857
    2. ' is' → logprob: -1.939923644065857
    3. ' not' → logprob: -1.939923644065857
    4. ' est' → logprob: -1.939923644065857
    5. '<|end|>' → logprob: -2.3149237632751465
    6. 's' → logprob: -2.4399237632751465
    7. ' appears' → logprob: -3.1899237632751465
    8. ' apparaît' → logprob: -3.8149237632751465
    9. 'in' → logprob: -4.0649237632751465
    10. 'not' → logprob: -4.6899237632751465

Token 227: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.4203675389289856
    2. 'dans' → logprob: -1.6703674793243408
    3. 's' → logprob: -2.545367479324341
    4. ' uniquement' → logprob: -3.420367479324341
    5. ' only' → logprob: -4.67036771774292
    6. ' seulement' → logprob: -4.79536771774292
    7. ' in' → logprob: -5.29536771774292
    8. ' exactement' → logprob: -5.42036771774292
    9. '(s' → logprob: -6.04536771774292
    10. 'exact' → logprob: -6.04536771774292

Token 228: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10030727088451385
    2. ' s' → logprob: -2.3503072261810303
    3. '   ' → logprob: -10.35030746459961
    4. ' la' → logprob: -10.72530746459961
    5. ' ' → logprob: -11.22530746459961
    6. '(s' → logprob: -11.85030746459961
    7. '[' → logprob: -12.72530746459961
    8. '[s' → logprob: -12.72530746459961
    9. 'l' → logprob: -12.85030746459961
    10. 'la' → logprob: -12.97530746459961

Token 229: ' sous' (ID: 14487)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2269170582294464
    2. 's' → logprob: -1.601917028427124
    3. ' s' → logprob: -7.351917266845703
    4. ' ' → logprob: -7.976917266845703
    5. 'substring' → logprob: -8.851917266845703
    6. '1' → logprob: -9.351917266845703
    7. 'de' → logprob: -9.726917266845703
    8. '3' → logprob: -9.976917266845703
    9. '[' → logprob: -9.976917266845703
    10. 'chaine' → logprob: -10.351917266845703

Token 230: '-cha' (ID: 163177)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3348841965198517
    2. 'chaine' → logprob: -1.5848841667175293
    3. '   ' → logprob: -2.8348841667175293
    4. 'string' → logprob: -4.334884166717529
    5. '_s' → logprob: -5.334884166717529
    6. '_string' → logprob: -7.709884166717529
    7. ' chaîne' → logprob: -7.834884166717529
    8. '_' → logprob: -7.834884166717529
    9. ' s' → logprob: -7.959884166717529
    10. '_c' → logprob: -8.084884643554688

Token 231: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.04209678992629051
    2. 'ine' → logprob: -3.4170968532562256
    3. 'ne' → logprob: -5.1670966148376465
    4. '   ' → logprob: -6.5420966148376465
    5. 's' → logprob: -7.6670966148376465
    6. 'ïne' → logprob: -7.7920966148376465
    7. '_' → logprob: -9.417097091674805
    8. '```' → logprob: -10.042097091674805
    9. '`' → logprob: -10.167097091674805
    10. 'î' → logprob: -10.542097091674805

Token 232: ' du' (ID: 1462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33138832449913025
    2. '[' → logprob: -1.8313883543014526
    3. '(s' → logprob: -2.206388235092163
    4. ' s' → logprob: -5.456388473510742
    5. '   ' → logprob: -5.706388473510742
    6. 'de' → logprob: -6.081388473510742
    7. '(' → logprob: -6.706388473510742
    8. 'def' → logprob: -8.331388473510742
    9. '[s' → logprob: -8.456388473510742
    10. ' de' → logprob: -9.456388473510742

Token 233: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018308203667402267
    2. 's' → logprob: -4.143308162689209
    3. ' ' → logprob: -6.893308162689209
    4. 'de' → logprob: -7.393308162689209
    5. '```' → logprob: -7.768308162689209
    6. ' s' → logprob: -9.018308639526367
    7. '   ' → logprob: -10.018308639526367
    8. '3' → logprob: -11.018308639526367
    9. '  ' → logprob: -12.268308639526367
    10. '[' → logprob: -12.518308639526367

Token 234: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03586796671152115
    2. 's' → logprob: -3.410867929458618
    3. 'de' → logprob: -6.785868167877197
    4. '```' → logprob: -7.535868167877197
    5. '[' → logprob: -8.410867691040039
    6. '3' → logprob: -8.910867691040039
    7. ' ' → logprob: -9.035867691040039
    8. ' s' → logprob: -11.035867691040039
    9. 'c' → logprob: -11.785867691040039
    10. ' deuxième' → logprob: -12.160867691040039

Token 235: 'ème' (ID: 9767)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8642968535423279
    2. 'ème' → logprob: -1.4892969131469727
    3. '-' → logprob: -1.7392969131469727
    4. 'ième' → logprob: -2.3642969131469727
    5. 'e' → logprob: -3.9892969131469727
    6. 's' → logprob: -4.114296913146973
    7. ' :' → logprob: -4.489296913146973
    8. '   ' → logprob: -4.989296913146973
    9. ' -' → logprob: -5.114296913146973
    10. '[:]' → logprob: -5.739296913146973

Token 236: ' au' (ID: 2791)
  Prédit: ' caractère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.2526825964450836
    2. 'car' → logprob: -1.7526825666427612
    3. 'au' → logprob: -3.502682685852051
    4. ' caract' → logprob: -4.502682685852051
    5. ' au' → logprob: -5.377682685852051
    6. ' caractères' → logprob: -6.127682685852051
    7. ' car' → logprob: -7.502682685852051
    8. ' ' → logprob: -8.25268268585205
    9. 'index' → logprob: -8.25268268585205
    10. 'indice' → logprob: -9.00268268585205

Token 237: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.09378049522638321
    2. ' dernier' → logprob: -3.218780517578125
    3. 'len' → logprob: -3.343780517578125
    4. '-' → logprob: -5.593780517578125
    5. 'd' → logprob: -6.468780517578125
    6. 'end' → logprob: -6.843780517578125
    7. 'last' → logprob: -6.968780517578125
    8. ' len' → logprob: -6.968780517578125
    9. 'der' → logprob: -7.093780517578125
    10. '=len' → logprob: -7.718780517578125

Token 238: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.19574865698814392
    2. ' caractère' → logprob: -1.8207486867904663
    3. ' caract' → logprob: -5.320748805999756
    4. 's' → logprob: -5.820748805999756
    5. 'indice' → logprob: -5.945748805999756
    6. 'index' → logprob: -5.945748805999756
    7. ' caractères' → logprob: -6.820748805999756
    8. ' car' → logprob: -8.070748329162598
    9. 'character' → logprob: -8.695748329162598
    10. ' index' → logprob: -8.820748329162598

Token 239: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007510208524763584
    2. ' (' → logprob: -8.625751495361328
    3. '(s' → logprob: -8.875751495361328
    4. '(' → logprob: -9.250751495361328
    5. ' s' → logprob: -9.250751495361328
    6. ',' → logprob: -9.625751495361328
    7. ':' → logprob: -10.125751495361328
    8. ' if' → logprob: -10.375751495361328
    9. 's' → logprob: -10.375751495361328
    10. '  ' → logprob: -10.625751495361328

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.292095299111679e-05
    2. ' if' → logprob: -10.750082969665527
    3. 'if' → logprob: -10.875082969665527
    4. '
' → logprob: -11.625082969665527
    5. '    
' → logprob: -11.750082969665527
    6. ' for' → logprob: -12.250082969665527
    7. 's' → logprob: -12.500082969665527
    8. 'for' → logprob: -12.500082969665527
    9. '```' → logprob: -13.125082969665527
    10. '(' → logprob: -13.375082969665527

Token 241: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3652857542037964
    2. 'if' (adapté à ' if') → logprob: -1.3652857542037964
    3. '   ' → logprob: -2.990285873413086
    4. ' c' → logprob: -8.740285873413086
    5. 'c' → logprob: -9.615285873413086
    6. '
' → logprob: -10.240285873413086
    7. ' for' → logprob: -10.365285873413086
    8. ' return' → logprob: -10.615285873413086
    9. 'for' → logprob: -11.365285873413086
    10. ' C' → logprob: -11.365285873413086

Token 242: ' s' (ID: 265)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.2917118966579437
    2. ' '' → logprob: -1.9167119264602661
    3. 's' → logprob: -2.7917118072509766
    4. ' s' → logprob: -3.2917118072509766
    5. ''' → logprob: -5.291711807250977
    6. ''s' → logprob: -7.541711807250977
    7. ' not' → logprob: -7.666711807250977
    8. '   ' → logprob: -7.791711807250977
    9. '"C' → logprob: -8.041711807250977
    10. ' ' → logprob: -8.916711807250977

Token 243: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021478788927197456
    2. '.find' → logprob: -3.8964788913726807
    3. '.index' → logprob: -7.896478652954102
    4. '2' → logprob: -9.271478652954102
    5. 'find' → logprob: -9.396478652954102
    6. '   ' → logprob: -9.396478652954102
    7. '.' → logprob: -9.396478652954102
    8. '.count' → logprob: -10.021478652954102
    9. '```' → logprob: -10.521478652954102
    10. '<' → logprob: -10.646478652954102

Token 244: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001664717128733173
    2. ' ' → logprob: -9.000166893005371
    3. ':' → logprob: -10.875166893005371
    4. '1' → logprob: -11.500166893005371
    5. '```' → logprob: -11.875166893005371
    6. '
' → logprob: -12.875166893005371
    7. '   ' → logprob: -13.500166893005371
    8. '[' → logprob: -14.500166893005371
    9. ' :' → logprob: -14.562666893005371
    10. '

' → logprob: -14.937666893005371

Token 245: ':-' (ID: 20118)
  Prédit: ':].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':].' → logprob: -0.09537680447101593
    2. ':' → logprob: -2.72037672996521
    3. ':]' → logprob: -3.97037672996521
    4. ']' → logprob: -5.220376968383789
    5. ' :' → logprob: -8.345376968383789
    6. ':not' → logprob: -8.470376968383789
    7. ':index' → logprob: -9.720376968383789
    8. ' not' → logprob: -9.970376968383789
    9. ' :]' → logprob: -9.970376968383789
    10. '   ' → logprob: -10.095376968383789

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. ']' → logprob: -15.625000953674316
    4. 'len' → logprob: -18.375
    5. '   ' → logprob: -18.5
    6. '１' → logprob: -19.0
    7. '```' → logprob: -19.375
    8. '])' → logprob: -19.875
    9. '-' → logprob: -19.875
    10. 'None' → logprob: -20.5

Token 247: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0036439071409404278
    2. ']' → logprob: -5.628643989562988
    3. ' ].' → logprob: -11.128643989562988
    4. ']==' → logprob: -11.503643989562988
    5. ').' → logprob: -12.628643989562988
    6. ''].' → logprob: -12.753643989562988
    7. ':].' → logprob: -12.753643989562988
    8. '.count' → logprob: -13.503643989562988
    9. '.find' → logprob: -13.503643989562988
    10. '   ' → logprob: -13.628643989562988

Token 248: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0025116894394159317
    2. 'find' → logprob: -6.002511501312256
    3. 'contains' → logprob: -10.252511978149414
    4. ' count' → logprob: -14.377511978149414
    5. '.count' → logprob: -16.127511978149414
    6. '__' → logprob: -17.377511978149414
    7. 'contain' → logprob: -17.627511978149414
    8. 'startswith' → logprob: -17.752511978149414
    9. 'counts' → logprob: -18.252511978149414
    10. 'index' → logprob: -18.502511978149414

Token 249: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -9.674858301877975e-05
    2. '(' → logprob: -9.250096321105957
    3. ''C' → logprob: -15.250096321105957
    4. '(
' → logprob: -16.125097274780273
    5. ''' → logprob: -16.250097274780273
    6. '("' → logprob: -16.625097274780273
    7. '(C' → logprob: -18.625097274780273
    8. ' ('' → logprob: -18.625097274780273
    9. '(('' → logprob: -19.000097274780273
    10. ' (' → logprob: -20.875097274780273

Token 250: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00015920029545668513
    2. ''C' → logprob: -8.75015926361084
    3. ' C' → logprob: -14.50015926361084
    4. ''' → logprob: -15.50015926361084
    5. '')' → logprob: -18.250158309936523
    6. ')' → logprob: -18.375158309936523
    7. '"C' → logprob: -18.750158309936523
    8. 'c' → logprob: -19.250158309936523
    9. '('' → logprob: -19.750158309936523
    10. '   ' → logprob: -19.875158309936523

Token 251: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0337141677737236
    2. ')' → logprob: -3.4087140560150146
    3. ')==' → logprob: -10.533714294433594
    4. '==' → logprob: -10.533714294433594
    5. ''' → logprob: -12.658714294433594
    6. ' ')' → logprob: -12.908714294433594
    7. ']' → logprob: -13.158714294433594
    8. '']' → logprob: -13.533714294433594
    9. '   ' → logprob: -13.783714294433594
    10. ' ==' → logprob: -13.908714294433594

Token 252: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7008058428764343
    2. '!=' → logprob: -0.7008058428764343
    3. '==' → logprob: -5.0758056640625
    4. ' ==' → logprob: -6.8258056640625
    5. '<' → logprob: -9.0758056640625
    6. ' <' → logprob: -9.8258056640625
    7. '=' → logprob: -9.9508056640625
    8. ')' → logprob: -10.5758056640625
    9. ')!=' → logprob: -10.8258056640625
    10. '()!=' → logprob: -10.9508056640625

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8351892473874614e-05
    2. ' ' → logprob: -10.000048637390137
    3. '0' → logprob: -12.750048637390137
    4. '   ' → logprob: -17.25004768371582
    5. '  ' → logprob: -19.75004768371582
    6. '۱' → logprob: -20.06254768371582
    7. ' ' → logprob: -20.37504768371582
    8. '=' → logprob: -20.50004768371582
    9. '１' → logprob: -20.56254768371582
    10. '```' → logprob: -20.68754768371582

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -15.000000953674316
    3. ' ' → logprob: -16.0
    4. '```' → logprob: -19.125
    5. '   ' → logprob: -19.375
    6. '۱' → logprob: -20.125
    7. '' → logprob: -20.625
    8. 'exact' → logprob: -21.1875
    9. '[' → logprob: -21.5625
    10. '
' → logprob: -21.6875

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22728268802165985
    2. ':
' → logprob: -1.6022826433181763
    3. '   ' → logprob: -6.852282524108887
    4. ' and' → logprob: -8.227282524108887
    5. '):
' → logprob: -9.102282524108887
    6. ':return' → logprob: -9.102282524108887
    7. '       ' → logprob: -9.227282524108887
    8. '):' → logprob: -9.727282524108887
    9. ' or' → logprob: -9.727282524108887
    10. ')' → logprob: -9.727282524108887

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013784486800432205
    2. '   ' → logprob: -6.626378536224365
    3. ' return' → logprob: -10.751378059387207
    4. 'return' → logprob: -10.751378059387207
    5. '
' → logprob: -12.626378059387207
    6. '           ' → logprob: -13.751378059387207
    7. '    ' → logprob: -14.126378059387207
    8. '      ' → logprob: -14.376378059387207
    9. '	return' → logprob: -14.626378059387207
    10. ':' → logprob: -14.626378059387207

Token 257: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0071582612581551075
    2. ' return' → logprob: -5.257158279418945
    3. '   ' → logprob: -6.257158279418945
    4. '       ' → logprob: -12.382158279418945
    5. '	return' → logprob: -14.257158279418945
    6. ' ' → logprob: -14.507158279418945
    7. '  ' → logprob: -15.507158279418945
    8. '```' → logprob: -15.757158279418945
    9. '    ' → logprob: -16.507158279418945
    10. '
' → logprob: -17.507158279418945

Token 258: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.620622712536715e-05
    2. 'True' → logprob: -10.000045776367188
    3. ' False' → logprob: -14.125045776367188
    4. '(False' → logprob: -19.625045776367188
    5. 'false' → logprob: -21.625045776367188
    6. '=False' → logprob: -22.625045776367188
    7. '   ' → logprob: -22.750045776367188
    8. 'F' → logprob: -23.000045776367188
    9. '```' → logprob: -23.125045776367188
    10. '_false' → logprob: -23.500045776367188

Token 259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005759080406278372
    2. '    
' → logprob: -5.755759239196777
    3. '  
' → logprob: -7.130759239196777
    4. '
' → logprob: -7.380759239196777
    5. ' 
' → logprob: -7.505759239196777
    6. '   
' → logprob: -8.505759239196777
    7. '  ' → logprob: -8.880759239196777
    8. ' return' → logprob: -10.130759239196777
    9. '    ' → logprob: -10.130759239196777
    10. ')' → logprob: -10.380759239196777

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.034592388459714e-06
    2. '    
' → logprob: -13.000005722045898
    3. '    ' → logprob: -14.000005722045898
    4. 'if' → logprob: -14.125005722045898
    5. '  ' → logprob: -14.500005722045898
    6. ' if' → logprob: -14.750005722045898
    7. '       ' → logprob: -15.000005722045898
    8. ')' → logprob: -15.750005722045898
    9. '   ' → logprob: -16.1250057220459
    10. '	' → logprob: -16.2500057220459

Token 261: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019817621796391904
    2. 'if' → logprob: -9.750198364257812
    3. ' if' → logprob: -10.125198364257812
    4. '  ' → logprob: -10.250198364257812
    5. ' for' → logprob: -11.000198364257812
    6. 'for' → logprob: -11.375198364257812
    7. '    ' → logprob: -11.625198364257812
    8. ')' → logprob: -11.875198364257812
    9. '#' (adapté à ' #') → logprob: -12.125198364257812
    10. ' ' → logprob: -12.625198364257812

Token 262: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030514588579535484
    2. ' for' → logprob: -3.5305144786834717
    3. '   ' → logprob: -7.530514717102051
    4. '#' → logprob: -8.53051471710205
    5. 'For' → logprob: -11.78051471710205
    6. 'if' → logprob: -11.90551471710205
    7. ' #' → logprob: -12.40551471710205
    8. 'import' → logprob: -12.53051471710205
    9. 'Pour' → logprob: -12.90551471710205
    10. ' ' → logprob: -14.03051471710205

Token 263: 'fin' (ID: 6994)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020323728676885366
    2. 'f' → logprob: -6.627032279968262
    3. ' for' → logprob: -8.002032279968262
    4. '#' → logprob: -8.502032279968262
    5. 'but' → logprob: -9.752032279968262
    6. '   ' → logprob: -10.002032279968262
    7. 'term' → logprob: -10.377032279968262
    8. 'fin' → logprob: -11.502032279968262
    9. 'tect' → logprob: -12.127032279968262
    10. 't' → logprob: -12.252032279968262

Token 264: 'is' (ID: 276)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0027134534902870655
    2. '   ' → logprob: -7.127713680267334
    3. 'ir' → logprob: -7.127713680267334
    4. 'e' → logprob: -8.002713203430176
    5. 'ie' → logprob: -8.252713203430176
    6. 'ition' → logprob: -9.127713203430176
    7. 'is' → logprob: -9.502713203430176
    8. 'i' → logprob: -9.877713203430176
    9. 'if' → logprob: -10.127713203430176
    10. 'er' → logprob: -10.252713203430176

Token 265: ' toutes' (ID: 17502)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19993481040000916
    2. '   ' → logprob: -2.199934720993042
    3. 'for' → logprob: -2.949934720993042
    4. ' la' → logprob: -4.824934959411621
    5. ' les' → logprob: -6.199934959411621
    6. ' le' → logprob: -6.574934959411621
    7. ' s' → logprob: -6.699934959411621
    8. 'ion' → logprob: -6.824934959411621
    9. ' ' → logprob: -7.699934959411621
    10. ' i' → logprob: -7.949934959411621

Token 266: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3239154815673828
    2. 'les' → logprob: -1.8239154815673828
    3. '(' → logprob: -2.698915481567383
    4. '()' → logprob: -4.073915481567383
    5. 's' → logprob: -4.823915481567383
    6. 'le' → logprob: -5.448915481567383
    7. '(s' → logprob: -5.823915481567383
    8. '('' → logprob: -6.573915481567383
    9. '   ' → logprob: -6.698915481567383
    10. ' la' → logprob: -6.948915481567383

Token 267: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -1.4315059185028076
    2. 'lett' → logprob: -1.4315059185028076
    3. 'car' → logprob: -1.6815059185028076
    4. ' lettres' → logprob: -2.0565059185028076
    5. 'maj' → logprob: -3.0565059185028076
    6. ' autres' → logprob: -3.3065059185028076
    7. 'ma' → logprob: -3.3065059185028076
    8. 'positions' → logprob: -4.306506156921387
    9. '   ' → logprob: -4.431506156921387
    10. 'c' → logprob: -4.931506156921387

Token 268: ' maj' (ID: 15575)
  Prédit: ' lettres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lettres' → logprob: -0.7926756143569946
    2. 'car' → logprob: -1.5426756143569946
    3. 'lett' → logprob: -2.417675495147705
    4. 'maj' → logprob: -2.667675495147705
    5. ' caractères' → logprob: -2.792675495147705
    6. 'positions' → logprob: -3.667675495147705
    7. 'ma' → logprob: -3.792675495147705
    8. ' maj' → logprob: -4.292675495147705
    9. 'part' → logprob: -4.542675495147705
    10. ' caract' → logprob: -5.167675495147705

Token 269: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.14291377365589142
    2. 'usc' → logprob: -2.017913818359375
    3. '```' → logprob: -10.017913818359375
    4. '   ' → logprob: -10.142913818359375
    5. 'sc' → logprob: -10.392913818359375
    6. 'úsc' → logprob: -10.642913818359375
    7. 'uc' → logprob: -10.767913818359375
    8. 'c' → logprob: -10.892913818359375
    9. 'u' → logprob: -11.267913818359375
    10. 'es' → logprob: -11.767913818359375

Token 270: 'cules' (ID: 40805)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.45494428277015686
    2. 'cules' → logprob: -1.5799442529678345
    3. 'uc' → logprob: -2.454944372177124
    4. 'c' → logprob: -2.829944372177124
    5. 'ic' → logprob: -5.329944133758545
    6. 'usc' → logprob: -5.704944133758545
    7. 'ules' → logprob: -6.204944133758545
    8. '```' → logprob: -6.454944133758545
    9. 'u' → logprob: -6.829944133758545
    10. 'uces' → logprob: -7.954944133758545

Token 271: ' sauf' (ID: 87919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3885899782180786
    2. 'except' → logprob: -2.013589859008789
    3. 'aut' → logprob: -2.388589859008789
    4. 's' → logprob: -2.388589859008789
    5. 'import' → logprob: -2.513589859008789
    6. 'allowed' → logprob: -3.138589859008789
    7. ' for' → logprob: -3.388589859008789
    8. ' autor' → logprob: -3.388589859008789
    9. ' autres' → logprob: -3.513589859008789
    10. ' interdit' → logprob: -3.513589859008789

Token 272: ' '' (ID: 461)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8878829479217529
    2. ''A' → logprob: -1.387882947921753
    3. ''' → logprob: -2.012882947921753
    4. ' A' → logprob: -2.512882947921753
    5. ' '' → logprob: -2.512882947921753
    6. 'AC' → logprob: -3.512882947921753
    7. ''C' → logprob: -5.387883186340332
    8. 'C' → logprob: -5.887883186340332
    9. ' AC' → logprob: -6.262883186340332
    10. '['' → logprob: -7.387883186340332

Token 273: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.030611826106905937
    2. 'AC' → logprob: -3.655611753463745
    3. 'C' → logprob: -6.280611991882324
    4. ''A' → logprob: -6.405611991882324
    5. ''' → logprob: -7.655611991882324
    6. ' A' → logprob: -8.780611991882324
    7. ''C' → logprob: -9.655611991882324
    8. '''' → logprob: -12.093111991882324
    9. 'a' → logprob: -12.093111991882324
    10. '')' → logprob: -12.218111991882324

Token 274: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.047088462859392166
    2. ' and' → logprob: -4.047088623046875
    3. 'C' → logprob: -4.922088623046875
    4. '',' → logprob: -5.047088623046875
    5. ''C' → logprob: -5.672088623046875
    6. 'and' → logprob: -5.797088623046875
    7. '')' → logprob: -6.672088623046875
    8. ' '' → logprob: -6.797088623046875
    9. ',' → logprob: -7.047088623046875
    10. '','' → logprob: -7.047088623046875

Token 275: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6468736529350281
    2. ' et' → logprob: -1.1468737125396729
    3. 'et' → logprob: -2.771873712539673
    4. 'and' → logprob: -3.146873712539673
    5. ',' → logprob: -3.896873712539673
    6. '   ' → logprob: -4.021873474121094
    7. 'def' → logprob: -5.771873474121094
    8. 'C' → logprob: -6.146873474121094
    9. ' or' → logprob: -6.271873474121094
    10. ' ,' → logprob: -6.521873474121094

Token 276: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.16535618901252747
    2. 'C' → logprob: -1.915356159210205
    3. ''' → logprob: -5.540356159210205
    4. ' '' → logprob: -6.915356159210205
    5. ' C' → logprob: -8.665356636047363
    6. '
' → logprob: -11.290356636047363
    7. '"C' → logprob: -12.415356636047363
    8. ' ' → logprob: -12.665356636047363
    9. ''s' → logprob: -13.040356636047363
    10. '`' → logprob: -13.665356636047363

Token 277: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.302704761968926e-05
    2. ''C' → logprob: -9.625073432922363
    3. ''' → logprob: -12.375073432922363
    4. ' C' → logprob: -13.500073432922363
    5. '#' → logprob: -15.500073432922363
    6. '   ' → logprob: -15.750073432922363
    7. '"C' → logprob: -16.125072479248047
    8. '
' → logprob: -16.125072479248047
    9. 'def' → logprob: -16.500072479248047
    10. 'c' → logprob: -16.500072479248047

Token 278: ''
' (ID: 2207)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.006711483001709
    2. ''' → logprob: -1.381711483001709
    3. '   ' → logprob: -2.006711483001709
    4. 'for' → logprob: -2.006711483001709
    5. ' as' → logprob: -4.131711483001709
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -4.256711483001709
    7. 'def' → logprob: -4.631711483001709
    8. '':
' → logprob: -5.006711483001709
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -5.006711483001709
    10. 's' → logprob: -5.006711483001709

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4482709467411041
    2. ' for' → logprob: -1.0732709169387817
    3. 'for' → logprob: -3.9482710361480713
    4. '
' → logprob: -10.823270797729492
    5. '    
' → logprob: -10.948270797729492
    6. ' uppercase' → logprob: -11.198270797729492
    7. 'import' → logprob: -11.573270797729492
    8. ',' → logprob: -12.448270797729492
    9. '	for' → logprob: -12.573270797729492
    10. 'def' → logprob: -12.823270797729492

Token 280: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6424533128738403
    2. ' for' → logprob: -0.7674533128738403
    3. 'import' → logprob: -5.642453193664551
    4. '   ' → logprob: -5.642453193664551
    5. ' import' → logprob: -7.392453193664551
    6. ' other' → logprob: -7.767453193664551
    7. ' maj' → logprob: -8.39245319366455
    8. 'maj' → logprob: -8.39245319366455
    9. ' uppercase' → logprob: -8.51745319366455
    10. 'aut' → logprob: -8.51745319366455

Token 281: '_cap' (ID: 35320)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.3905825912952423
    2. '_upper' → logprob: -1.51558256149292
    3. ' =' → logprob: -2.64058256149292
    4. '_' → logprob: -4.26558256149292
    5. '_letters' → logprob: -5.14058256149292
    6. '_caps' → logprob: -5.51558256149292
    7. 's' → logprob: -5.64058256149292
    8. '_char' → logprob: -5.89058256149292
    9. '=' → logprob: -7.01558256149292
    10. '_car' → logprob: -7.76558256149292

Token 282: 'itals' (ID: 22684)
  Prédit: 'itals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itals' → logprob: -0.011864649131894112
    2. 'ital' → logprob: -4.51186466217041
    3. 'ITAL' → logprob: -7.51186466217041
    4. 's' → logprob: -9.38686466217041
    5. 'itale' → logprob: -9.88686466217041
    6. 'it' → logprob: -10.26186466217041
    7. '_letters' → logprob: -10.76186466217041
    8. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -10.88686466217041
    9. 'italize' → logprob: -11.38686466217041
    10. 'itali' → logprob: -11.63686466217041

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028085599187761545
    2. '=' → logprob: -5.877808570861816
    3. 's' → logprob: -13.502808570861816
    4. '=set' → logprob: -13.627808570861816
    5. ' ' → logprob: -15.002808570861816
    6. '   ' → logprob: -15.377808570861816
    7. ' ='' → logprob: -15.627808570861816
    8. ' ="' → logprob: -15.877808570861816
    9. ' =
' → logprob: -16.1278076171875
    10. 'et' → logprob: -17.0028076171875

Token 284: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.3833129405975342
    2. ' set' → logprob: -1.3833129405975342
    3. 'set' → logprob: -1.5083129405975342
    4. '[' → logprob: -2.008312940597534
    5. ' [' → logprob: -2.258312940597534
    6. '{' → logprob: -3.883312940597534
    7. '['' → logprob: -5.258313179016113
    8. '{'' → logprob: -5.383313179016113
    9. ' "' → logprob: -6.008313179016113
    10. ''' → logprob: -6.258313179016113

Token 285: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.17022804915905
    2. 'DE' → logprob: -1.9202280044555664
    3. 'BD' → logprob: -5.545228004455566
    4. 'BC' → logprob: -5.795228004455566
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -6.420228004455566
    6. '"' → logprob: -7.295228004455566
    7. ''' → logprob: -8.170228004455566
    8. '"B' → logprob: -8.420228004455566
    9. 'EF' → logprob: -10.045228004455566
    10. 'DEF' → logprob: -10.670228004455566

Token 286: 'DE' (ID: 2052)
  Prédit: 'DE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DE' → logprob: -8.077528764260933e-05
    2. 'D' → logprob: -10.000081062316895
    3. 'DEF' → logprob: -10.375081062316895
    4. 'DF' → logprob: -12.875081062316895
    5. '_DE' → logprob: -14.625081062316895
    6. ' DE' → logprob: -15.000081062316895
    7. '(DE' → logprob: -15.625081062316895
    8. '-DE' → logprob: -15.875081062316895
    9. 'def' → logprob: -16.375080108642578
    10. '"' → logprob: -16.375080108642578

Token 287: 'FG' (ID: 23513)
  Prédit: 'FG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FG' → logprob: -0.008666337467730045
    2. 'F' → logprob: -4.758666515350342
    3. '...' → logprob: -10.883666038513184
    4. 'FH' → logprob: -11.508666038513184
    5. 'CFG' → logprob: -11.508666038513184
    6. ''' → logprob: -12.383666038513184
    7. '
' → logprob: -13.508666038513184
    8. ' F' → logprob: -13.633666038513184
    9. '"' → logprob: -13.758666038513184
    10. '(F' → logprob: -13.883666038513184

Token 288: 'HI' (ID: 36525)
  Prédit: 'HI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HI' → logprob: -0.0024931374937295914
    2. 'H' → logprob: -6.002492904663086
    3. 'HJ' → logprob: -11.752492904663086
    4. ' HI' → logprob: -12.502492904663086
    5. ''H' → logprob: -12.877492904663086
    6. 'HIP' → logprob: -14.127492904663086
    7. '"H' → logprob: -14.377492904663086
    8. ''' → logprob: -14.877492904663086
    9. 'HK' → logprob: -14.877492904663086
    10. '	H' → logprob: -15.127492904663086

Token 289: 'JKLMNOP' (ID: 173095)
  Prédit: 'JKLMNOP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JKLMNOP' → logprob: -0.12716569006443024
    2. 'JKLM' → logprob: -2.3771657943725586
    3. 'JK' → logprob: -3.6271657943725586
    4. 'J' → logprob: -12.627165794372559
    5. ' JK' → logprob: -12.752165794372559
    6. 'K' → logprob: -15.002165794372559
    7. 'JL' → logprob: -15.127165794372559
    8. ''' → logprob: -15.502165794372559
    9. 'QRSTUVWXYZ' → logprob: -15.502165794372559
    10. '...' → logprob: -16.502164840698242

Token 290: 'QRSTUVWXYZ' (ID: 170908)
  Prédit: 'QRSTUVWXYZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QRSTUVWXYZ' → logprob: -0.005310485139489174
    2. 'QRSTUVW' → logprob: -5.755310535430908
    3. 'QRST' → logprob: -6.755310535430908
    4. 'Q' → logprob: -7.005310535430908
    5. 'QR' → logprob: -9.75531005859375
    6. 'RQ' → logprob: -15.13031005859375
    7. 'JKLMNOP' → logprob: -15.75531005859375
    8. 'RST' → logprob: -15.88031005859375
    9. ' QR' → logprob: -16.13031005859375
    10. 'QS' → logprob: -17.38031005859375

Token 291: ''
' (ID: 2207)
  Prédit: ''
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''
' → logprob: -0.4402261972427368
    2. ''' → logprob: -1.3152261972427368
    3. ''.' → logprob: -2.9402260780334473
    4. '.replace' → logprob: -3.8152260780334473
    5. ''

' → logprob: -5.315226078033447
    6. 'JKLMNOP' → logprob: -5.815226078033447
    7. 'QRSTUVWXYZ' → logprob: -6.065226078033447
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -6.940226078033447
    9. 'replace' → logprob: -7.690226078033447
    10. '')' → logprob: -9.065226554870605

Token 292: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7712002992630005
    2. '   ' → logprob: -1.2712002992630005
    3. 'for' → logprob: -1.3962002992630005
    4. '
' → logprob: -4.896200180053711
    5. '    
' → logprob: -7.146200180053711
    6. '  
' → logprob: -7.146200180053711
    7. '   
' → logprob: -8.771200180053711
    8. '	for' → logprob: -9.521200180053711
    9. ' 
' → logprob: -9.646200180053711
    10. '  ' → logprob: -10.021200180053711

Token 293: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6965204477310181
    2. 'for' → logprob: -0.6965204477310181
    3. '   ' → logprob: -5.6965203285217285
    4. '	for' → logprob: -12.571520805358887
    5. '    
' → logprob: -13.196520805358887
    6. 'if' → logprob: -13.696520805358887
    7. ' if' → logprob: -14.196520805358887
    8. ' ' → logprob: -14.571520805358887
    9. ' 
' → logprob: -14.821520805358887
    10. '  
' → logprob: -14.821520805358887

Token 294: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005944086704403162
    2. ' for' → logprob: -5.13094425201416
    3. '   ' → logprob: -11.38094425201416
    4. '#' → logprob: -13.13094425201416
    5. 'if' → logprob: -14.13094425201416
    6. 'For' → logprob: -15.00594425201416
    7. 'return' → logprob: -15.13094425201416
    8. '	for' → logprob: -15.88094425201416
    9. 'pour' → logprob: -15.88094425201416
    10. '
' → logprob: -16.380943298339844

Token 295: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.274858295917511
    2. 'oure' → logprob: -1.5248582363128662
    3. 'our' → logprob: -4.899858474731445
    4. 'ourt' → logprob: -5.024858474731445
    5. '_' → logprob: -6.024858474731445
    6. 'ourse' → logprob: -6.399858474731445
    7. 'ou' → logprob: -7.149858474731445
    8. '[' → logprob: -7.149858474731445
    9. '(' → logprob: -7.649858474731445
    10. '```' → logprob: -7.899858474731445

Token 296: ' les' (ID: 1341)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6023232936859131
    2. ' s' → logprob: -1.227323293685913
    3. ' la' → logprob: -2.602323293685913
    4. '   ' → logprob: -2.852323293685913
    5. ' le' → logprob: -4.477323532104492
    6. 'for' → logprob: -4.602323532104492
    7. 's' → logprob: -6.102323532104492
    8. ' chaque' → logprob: -6.602323532104492
    9. ' les' → logprob: -7.102323532104492
    10. ' ' → logprob: -7.852323532104492

Token 297: ' maj' (ID: 15575)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4189269542694092
    2. ' caractères' → logprob: -2.168926954269409
    3. ' for' → logprob: -2.668926954269409
    4. ' caract' → logprob: -2.793926954269409
    5. 'for' → logprob: -3.918926954269409
    6. ' car' → logprob: -4.043927192687988
    7. 'c' → logprob: -4.168927192687988
    8. 'char' → logprob: -4.293927192687988
    9. ' caracteres' → logprob: -4.293927192687988
    10. ' c' → logprob: -5.168927192687988

Token 298: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.04907314479351044
    2. 'usc' → logprob: -3.0490732192993164
    3. 'uc' → logprob: -7.924073219299316
    4. '```' → logprob: -10.424073219299316
    5. 'u' → logprob: -10.674073219299316
    6. '   ' → logprob: -11.674073219299316
    7. 'eurs' → logprob: -11.674073219299316
    8. '-' → logprob: -11.924073219299316
    9. '|' → logprob: -11.924073219299316
    10. '>' → logprob: -12.299073219299316

Token 299: 'cules' (ID: 40805)
  Prédit: 'cules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cules' → logprob: -0.06924991309642792
    2. 'c' → logprob: -2.8192498683929443
    3. 'uc' → logprob: -5.569250106811523
    4. 'us' → logprob: -6.819250106811523
    5. '```' → logprob: -8.069250106811523
    6. 'car' → logprob: -8.319250106811523
    7. 'u' → logprob: -8.569250106811523
    8. 'cles' → logprob: -8.569250106811523
    9. 'cu' → logprob: -8.569250106811523
    10. 'up' → logprob: -8.569250106811523

Token 300: ' interdit' (ID: 129427)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3202309012413025
    2. 'for' → logprob: -1.3202309608459473
    3. ' de' → logprob: -5.945230960845947
    4. 's' → logprob: -7.070230960845947
    5. ' pour' → logprob: -7.195230960845947
    6. 'de' → logprob: -7.195230960845947
    7. 'def' → logprob: -7.945230960845947
    8. '   ' → logprob: -8.195230484008789
    9. ' présentes' → logprob: -8.195230484008789
    10. 'pour' → logprob: -8.320230484008789

Token 301: 'es' (ID: 268)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -1.1188100576400757
    2. 'ées' → logprob: -1.1188100576400757
    3. 'es' → logprob: -1.6188100576400757
    4. 'aires' → logprob: -2.6188101768493652
    5. 'é' → logprob: -4.243810176849365
    6. 's' → logprob: -4.618810176849365
    7. 'in' → logprob: -4.993810176849365
    8. 'ières' → logprob: -5.118810176849365
    9. 'nées' → logprob: -5.368810176849365
    10. 'ines' → logprob: -5.618810176849365

Token 302: ' et' (ID: 859)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07525712251663208
    2. 'for' → logprob: -2.7002570629119873
    3. ' in' → logprob: -5.950257301330566
    4. '   ' → logprob: -6.075257301330566
    5. 'in' → logprob: -8.075257301330566
    6. '<|end|>' → logprob: -10.450257301330566
    7. ':' → logprob: -10.575257301330566
    8. ',' → logprob: -11.575257301330566
    9. ':
' → logprob: -11.825257301330566
    10. ' to' → logprob: -12.700257301330566

Token 303: ' vér' (ID: 42524)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3928232789039612
    2. ' for' → logprob: -1.1428232192993164
    3. 'if' → logprob: -5.267823219299316
    4. ' if' → logprob: -7.267823219299316
    5. 's' → logprob: -10.017823219299316
    6. '   ' → logprob: -11.017823219299316
    7. 'return' → logprob: -12.017823219299316
    8. ' ' → logprob: -12.767823219299316
    9. '
' → logprob: -12.892823219299316
    10. 'f' → logprob: -13.392823219299316

Token 304: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -3.4121114822482923e-06
    2. 'if' → logprob: -12.875003814697266
    3. 'ifi' → logprob: -15.250003814697266
    4. 'ifié' → logprob: -15.625003814697266
    5. 'ifiez' → logprob: -15.875003814697266
    6. 'ife' → logprob: -16.625003814697266
    7. 'ifies' → logprob: -17.000003814697266
    8. '   ' → logprob: -17.625003814697266
    9. 'ifier' → logprob: -17.875003814697266
    10. 'ify' → logprob: -18.500003814697266

Token 305: ' qu' (ID: 474)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5853627324104309
    2. ' for' → logprob: -1.2103626728057861
    3. ' que' → logprob: -2.710362672805786
    4. ' si' → logprob: -3.085362672805786
    5. ' s' → logprob: -4.335362911224365
    6. '   ' → logprob: -5.210362911224365
    7. 'for' → logprob: -5.210362911224365
    8. 'if' → logprob: -5.335362911224365
    9. ' ' → logprob: -5.835362911224365
    10. ' that' → logprob: -8.085362434387207

Token 306: ''elles' (ID: 118359)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5672332048416138
    2. ' s' → logprob: -1.5672332048416138
    3. 'not' → logprob: -2.942233085632324
    4. ' any' → logprob: -3.192233085632324
    5. ' all' → logprob: -3.567233085632324
    6. 's' → logprob: -3.692233085632324
    7. ' that' → logprob: -3.692233085632324
    8. ' que' → logprob: -4.442233085632324
    9. ' ' → logprob: -4.567233085632324
    10. ' for' → logprob: -5.567233085632324

Token 307: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03804539144039154
    2. 'not' → logprob: -3.2880454063415527
    3. '   ' → logprob: -13.538044929504395
    4. 'n' → logprob: -13.788044929504395
    5. ')' → logprob: -14.538044929504395
    6. ' in' → logprob: -15.038044929504395
    7. '	not' → logprob: -15.413044929504395
    8. ' n' → logprob: -15.788044929504395
    9. ' for' → logprob: -16.03804588317871
    10. ' ne' → logprob: -16.28804588317871

Token 308: ''ap' (ID: 31362)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -1.1438406705856323
    2. 'e' → logprob: -2.018840789794922
    3. 'not' → logprob: -2.393840789794922
    4. ''' → logprob: -2.393840789794922
    5. 's' → logprob: -2.643840789794922
    6. 'o' → logprob: -3.143840789794922
    7. ' not' → logprob: -3.268840789794922
    8. ''ont' → logprob: -3.268840789794922
    9. 'n' → logprob: -3.393840789794922
    10. ' pas' → logprob: -4.143840789794922

Token 309: 'para' (ID: 16151)
  Prédit: 'pa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pa' → logprob: -0.637096643447876
    2. 'para' → logprob: -1.762096643447876
    3. 'as' → logprob: -2.012096643447876
    4. 'pas' → logprob: -2.137096643447876
    5. 'par' → logprob: -4.387096405029297
    6. 'rès' → logprob: -4.887096405029297
    7. 'rés' → logprob: -5.137096405029297
    8. 'res' → logprob: -5.387096405029297
    9. 'a' → logprob: -5.762096405029297
    10. 'prés' → logprob: -5.887096405029297

Token 310: 'issent' (ID: 31556)
  Prédit: 'issent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issent' → logprob: -0.00565003277733922
    2. 'issa' → logprob: -5.755650043487549
    3. 'ss' → logprob: -6.755650043487549
    4. 'a' → logprob: -8.00564956665039
    5. 'î' → logprob: -8.00564956665039
    6. 'iss' → logprob: -9.88064956665039
    7. '\' → logprob: -10.00564956665039
    8. 'n' → logprob: -10.13064956665039
    9. '#' → logprob: -10.13064956665039
    10. '
' → logprob: -10.13064956665039

Token 311: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.07904918491840363
    2. 'pas' → logprob: -2.5790491104125977
    3. ' jamais' → logprob: -9.579049110412598
    4. ' not' → logprob: -10.204049110412598
    5. 'not' → logprob: -10.954049110412598
    6. ' in' → logprob: -11.079049110412598
    7. ' aucun' → logprob: -12.704049110412598
    8. '_pas' → logprob: -12.704049110412598
    9. 'dans' → logprob: -13.079049110412598
    10. ' dans' → logprob: -13.079049110412598

Token 312: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1536056101322174
    2. '   ' → logprob: -2.6536056995391846
    3. 'in' → logprob: -2.9036056995391846
    4. ' dans' → logprob: -4.2786054611206055
    5. 'dans' → logprob: -6.2786054611206055
    6. ' for' → logprob: -6.9036054611206055
    7. 'for' → logprob: -8.653605461120605
    8. ' ' → logprob: -10.028605461120605
    9. 's' → logprob: -10.278605461120605
    10. ',' → logprob: -10.403605461120605

Token 313: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17975567281246185
    2. ' s' → logprob: -1.804755687713623
    3. '   ' → logprob: -11.804755210876465
    4. '(s' → logprob: -12.929755210876465
    5. '	s' → logprob: -15.679755210876465
    6. '_s' → logprob: -15.804755210876465
    7. ' ' → logprob: -16.05475616455078
    8. '
' → logprob: -16.67975616455078
    9. 'the' → logprob: -16.67975616455078
    10. ')' → logprob: -16.67975616455078

Token 314: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00235412223264575
    2. ' s' → logprob: -6.127354145050049
    3. 'for' → logprob: -9.75235366821289
    4. 'chaine' → logprob: -9.87735366821289
    5. 'string' → logprob: -10.25235366821289
    6. '   ' → logprob: -11.37735366821289
    7. ' for' → logprob: -12.25235366821289
    8. '
' → logprob: -13.00235366821289
    9. ' string' → logprob: -14.00235366821289
    10. ' ' → logprob: -14.00235366821289

Token 315: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006417874712496996
    2. ' for' → logprob: -5.506417751312256
    3. 'for' → logprob: -6.256417751312256
    4. '    
' → logprob: -8.006418228149414
    5. '
' → logprob: -9.506418228149414
    6. '	for' → logprob: -12.381418228149414
    7. '   
' → logprob: -12.756418228149414
    8. '  
' → logprob: -13.381418228149414
    9. ',' → logprob: -14.006418228149414
    10. '  ' → logprob: -15.381418228149414

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002066637622192502
    2. ' for' → logprob: -6.502066612243652
    3. 'for' → logprob: -7.502066612243652
    4. '    
' → logprob: -11.877066612243652
    5. '
' → logprob: -12.377066612243652
    6. '	for' → logprob: -14.002066612243652
    7. '   
' → logprob: -17.25206756591797
    8. '  ' → logprob: -17.50206756591797
    9. '   ' → logprob: -17.62706756591797
    10. '  
' → logprob: -17.62706756591797

Token 317: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7177597880363464
    2. 'for' (adapté à ' for') → logprob: -0.7177597880363464
    3. '   ' → logprob: -3.717759847640991
    4. 'if' → logprob: -10.96776008605957
    5. ' if' → logprob: -12.09276008605957
    6. '	for' → logprob: -14.21776008605957
    7. '    
' → logprob: -15.84276008605957
    8. '  ' → logprob: -16.34276008605957
    9. ' ' → logprob: -16.96776008605957
    10. '
' → logprob: -17.21776008605957

Token 318: ' t' (ID: 260)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.26213568449020386
    2. 'ch' → logprob: -2.6371357440948486
    3. ' char' → logprob: -2.8871357440948486
    4. 'c' → logprob: -2.8871357440948486
    5. ' c' → logprob: -4.0121355056762695
    6. 'capital' → logprob: -4.5121355056762695
    7. ' ch' → logprob: -4.6371355056762695
    8. 'cap' → logprob: -5.6371355056762695
    9. ' capital' → logprob: -6.6371355056762695
    10. 'letter' → logprob: -7.0121355056762695

Token 319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014260120689868927
    2. 'in' → logprob: -4.264260292053223
    3. 'i' → logprob: -10.764260292053223
    4. ' ' → logprob: -11.014260292053223
    5. 'erm' → logprob: -11.139260292053223
    6. 't' → logprob: -11.639260292053223
    7. 'n' → logprob: -11.639260292053223
    8. 'r' → logprob: -12.139260292053223
    9. ' i' → logprob: -12.389260292053223
    10. 'er' → logprob: -12.764260292053223

Token 320: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014627386117354035
    2. ' forbidden' → logprob: -6.876462936401367
    3. ' for' → logprob: -7.876462936401367
    4. 's' → logprob: -10.001462936401367
    5. ' forb' → logprob: -13.376462936401367
    6. ' s' → logprob: -13.751462936401367
    7. 'bidden' → logprob: -14.376462936401367
    8. 'f' → logprob: -15.251462936401367
    9. '(for' → logprob: -15.251462936401367
    10. '   ' → logprob: -15.626462936401367

Token 321: '_cap' (ID: 35320)
  Prédit: '_cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cap' → logprob: -2.5776860184123507e-06
    2. 'cap' → logprob: -14.12500286102295
    3. '_' → logprob: -14.37500286102295
    4. '_c' → logprob: -14.50000286102295
    5. '_caps' → logprob: -15.37500286102295
    6. '
' → logprob: -16.000001907348633
    7. 'capital' → logprob: -16.125001907348633
    8. 'Cap' → logprob: -16.625001907348633
    9. '_CAP' → logprob: -16.625001907348633
    10. '

' → logprob: -17.500001907348633

Token 322: 'itals' (ID: 22684)
  Prédit: 'itals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itals' → logprob: -0.00381991034373641
    2. 'it' → logprob: -6.128819942474365
    3. 'ital' → logprob: -7.003819942474365
    4. 't' → logprob: -8.128819465637207
    5. 'als' → logprob: -8.628819465637207
    6. '_' → logprob: -10.378819465637207
    7. 's' → logprob: -10.503819465637207
    8. 'ials' → logprob: -10.628819465637207
    9. 'itais' → logprob: -11.128819465637207
    10. 'ot' → logprob: -11.253819465637207

Token 323: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04326053708791733
    2. ':
' → logprob: -3.1682605743408203
    3. ' :' → logprob: -8.54326057434082
    4. '):
' → logprob: -10.66826057434082
    5. ' :
' → logprob: -10.79326057434082
    6. '   ' → logprob: -11.54326057434082
    7. '):' → logprob: -11.66826057434082
    8. ':

' → logprob: -13.79326057434082
    9. '():
' → logprob: -14.54326057434082
    10. '<|end|>' → logprob: -14.79326057434082

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09505458176136017
    2. '   ' → logprob: -2.8450546264648438
    3. ' if' → logprob: -3.4700546264648438
    4. 'if' → logprob: -6.845054626464844
    5. '<|end|>' → logprob: -8.720054626464844
    6. ':' → logprob: -9.470054626464844
    7. '    ' → logprob: -10.220054626464844
    8. '	   ' → logprob: -10.970054626464844
    9. ':
' → logprob: -11.345054626464844
    10. '      ' → logprob: -11.595054626464844

Token 325: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47530606389045715
    2. ' if' → logprob: -0.9753060340881348
    3. '   ' → logprob: -6.975306034088135
    4. '       ' → logprob: -8.225306510925293
    5. '	if' → logprob: -11.850306510925293
    6. '           ' → logprob: -11.975306510925293
    7. ' ' → logprob: -12.475306510925293
    8. '<|end|>' → logprob: -12.475306510925293
    9. '    ' → logprob: -13.600306510925293
    10. 'If' → logprob: -13.975306510925293

Token 326: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.47407716512680054
    2. ' t' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.724077224731445
    4. 's' → logprob: -16.849077224731445
    5. 'toupper' → logprob: -17.474077224731445
    6. '	t' → logprob: -17.599077224731445
    7. '`t' → logprob: -18.474077224731445
    8. ' ' → logprob: -18.599077224731445
    9. '   ' → logprob: -18.849077224731445
    10. '_t' → logprob: -19.224077224731445

Token 327: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04861859232187271
    2. 'in' → logprob: -3.0486185550689697
    3. 's' → logprob: -10.79861831665039
    4. ' ' → logprob: -12.29861831665039
    5. '<|end|>' → logprob: -13.04861831665039
    6. ')' → logprob: -13.67361831665039
    7. 'n' → logprob: -14.54861831665039
    8. 't' → logprob: -14.92361831665039
    9. '  ' → logprob: -15.04861831665039
    10. '	in' → logprob: -15.42361831665039

Token 328: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.25192928314208984
    2. 's' → logprob: -1.5019292831420898
    3. '<|end|>' → logprob: -17.501930236816406
    4. ' ' → logprob: -17.626930236816406
    5. '(s' → logprob: -17.626930236816406
    6. '_s' → logprob: -17.626930236816406
    7. '	s' → logprob: -17.626930236816406
    8. ' ' → logprob: -19.126930236816406
    9. '{s' → logprob: -19.501930236816406
    10. '   ' → logprob: -19.626930236816406

Token 329: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43080052733421326
    2. ':' → logprob: -1.0558005571365356
    3. '):
' → logprob: -6.555800437927246
    4. ':return' → logprob: -7.680800437927246
    5. '):' → logprob: -9.680800437927246
    6. '   ' → logprob: -10.180800437927246
    7. '():
' → logprob: -10.305800437927246
    8. ' :
' → logprob: -10.430800437927246
    9. '       ' → logprob: -10.555800437927246
    10. ' :' → logprob: -12.055800437927246

Token 330: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004242704715579748
    2. 'return' → logprob: -6.254242897033691
    3. ' return' → logprob: -6.879242897033691
    4. '
' → logprob: -7.254242897033691
    5. '       ' → logprob: -7.504242897033691
    6. ':
' → logprob: -11.379242897033691
    7. '               ' → logprob: -12.754242897033691
    8. ':return' → logprob: -12.879242897033691
    9. '   ' → logprob: -13.004242897033691
    10. '0' → logprob: -14.004242897033691

Token 331: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25236478447914124
    2. ' return' → logprob: -1.5023647546768188
    3. '       ' → logprob: -8.002365112304688
    4. '           ' → logprob: -9.377365112304688
    5. '   ' → logprob: -11.627365112304688
    6. '	return' → logprob: -12.377365112304688
    7. '
' → logprob: -13.377365112304688
    8. '               ' → logprob: -13.752365112304688
    9. ' ' → logprob: -15.877365112304688
    10. ':return' → logprob: -15.877365112304688

Token 332: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.547789674485102e-05
    2. ' False' → logprob: -10.250035285949707
    3. 'True' → logprob: -18.375036239624023
    4. 'false' → logprob: -20.500036239624023
    5. 'F' → logprob: -22.250036239624023
    6. '_false' → logprob: -22.750036239624023
    7. '(False' → logprob: -22.750036239624023
    8. '=False' → logprob: -23.750036239624023
    9. 'None' → logprob: -24.750036239624023
    10. 'FALSE' → logprob: -25.000036239624023

Token 333: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001904604840092361
    2. '
' → logprob: -6.876904487609863
    3. '    
' → logprob: -7.251904487609863
    4. '  
' → logprob: -9.376904487609863
    5. 'return' → logprob: -10.501904487609863
    6. ' return' → logprob: -10.751904487609863
    7. '   
' → logprob: -11.876904487609863
    8. ' 
' → logprob: -12.001904487609863
    9. '        
' → logprob: -12.126904487609863
    10. '       ' → logprob: -12.876904487609863

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016910118283703923
    2. '
' → logprob: -7.376690864562988
    3. 'return' → logprob: -7.626690864562988
    4. '    
' → logprob: -7.626690864562988
    5. '  
' → logprob: -10.126690864562988
    6. ' return' → logprob: -10.376690864562988
    7. '   
' → logprob: -12.501690864562988
    8. ' 
' → logprob: -12.626690864562988
    9. '	return' → logprob: -12.751690864562988
    10. '       ' → logprob: -13.126690864562988

Token 335: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052387796342372894
    2. 'return' → logprob: -3.0523877143859863
    3. ' return' → logprob: -6.552387714385986
    4. '
' → logprob: -6.802387714385986
    5. '    
' → logprob: -6.802387714385986
    6. '	return' → logprob: -9.802388191223145
    7. '  
' → logprob: -9.927388191223145
    8. '   
' → logprob: -11.302388191223145
    9. ' ' → logprob: -11.802388191223145
    10. ' 
' → logprob: -11.927388191223145

Token 336: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0011759399203583598
    2. '   ' → logprob: -7.001175880432129
    3. ' return' → logprob: -8.501175880432129
    4. '#' → logprob: -10.501175880432129
    5. 'for' → logprob: -11.001175880432129
    6. 'if' → logprob: -11.626175880432129
    7. 'ret' → logprob: -13.001175880432129
    8. '	return' → logprob: -14.126175880432129
    9. 'eturn' → logprob: -14.251175880432129
    10. '    
' → logprob: -14.376175880432129

Token 337: ' toutes' (ID: 17502)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5428034663200378
    2. 'True' → logprob: -1.0428035259246826
    3. ' len' → logprob: -3.4178035259246826
    4. 'len' → logprob: -3.9178035259246826
    5. 'return' → logprob: -5.4178032875061035
    6. ' not' → logprob: -5.9178032875061035
    7. ' return' → logprob: -6.1678032875061035
    8. ' s' → logprob: -6.5428032875061035
    9. 's' → logprob: -7.0428032875061035
    10. ' all' → logprob: -7.7928032875061035

Token 338: ' les' (ID: 1341)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.24447958171367645
    2. ' conditions' → logprob: -1.7444795370101929
    3. 'les' → logprob: -3.7444796562194824
    4. 'v' → logprob: -4.619479656219482
    5. ' vér' → logprob: -5.619479656219482
    6. ' les' → logprob: -5.869479656219482
    7. 'cond' → logprob: -7.494479656219482
    8. '   ' → logprob: -7.744479656219482
    9. 'tests' → logprob: -7.744479656219482
    10. ' checks' → logprob: -8.619479179382324

Token 339: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.14367453753948212
    2. 'v' → logprob: -2.018674612045288
    3. 'tests' → logprob: -7.768674373626709
    4. 'cond' → logprob: -8.018674850463867
    5. 'condition' → logprob: -9.893674850463867
    6. 'ver' → logprob: -10.143674850463867
    7. '   ' → logprob: -10.143674850463867
    8. ' conditions' → logprob: -10.393674850463867
    9. 'checks' → logprob: -10.393674850463867
    10. ' vér' → logprob: -11.143674850463867

Token 340: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5440132021903992
    2. 'return' → logprob: -1.544013261795044
    3. ' sont' → logprob: -2.294013261795044
    4. '   ' → logprob: -2.669013261795044
    5. ' return' → logprob: -4.044013023376465
    6. 'ont' → logprob: -4.169013023376465
    7. ' are' → logprob: -6.669013023376465
    8. ':return' → logprob: -8.169013023376465
    9. 'are' → logprob: -8.544013023376465
    10. ' ' → logprob: -8.669013023376465

Token 341: ' respect' (ID: 5618)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.0584905631840229
    2. 'v' → logprob: -3.058490514755249
    3. 'respect' → logprob: -5.808490753173828
    4. 's' → logprob: -5.933490753173828
    5. ' rem' → logprob: -6.058490753173828
    6. 'ré' → logprob: -7.183490753173828
    7. 'pass' → logprob: -7.433490753173828
    8. ' respect' → logprob: -9.183490753173828
    9. ' rempl' → logprob: -9.308490753173828
    10. 'valid' → logprob: -9.558490753173828

Token 342: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.031650349497795105
    2. '   ' → logprob: -3.6566503047943115
    3. 'ees' → logprob: -5.531650543212891
    4. 'ée' → logprob: -8.03165054321289
    5. 'nées' → logprob: -8.28165054321289
    6. 'es' → logprob: -8.40665054321289
    7. 'ee' → logprob: -8.78165054321289
    8. 'é' → logprob: -9.28165054321289
    9. 'e' → logprob: -9.28165054321289
    10. 'er' → logprob: -9.53165054321289

Token 343: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007055217283777893
    2. 'return' → logprob: -7.750705718994141
    3. ' return' → logprob: -8.50070571899414
    4. '
' → logprob: -9.75070571899414
    5. '    
' → logprob: -11.75070571899414
    6. ',' → logprob: -12.87570571899414
    7. '       ' → logprob: -13.87570571899414
    8. '	return' → logprob: -14.00070571899414
    9. ':return' → logprob: -15.12570571899414
    10. '   ' → logprob: -15.37570571899414

Token 344: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027763335034251213
    2. 'return' → logprob: -3.7777633666992188
    3. ' return' → logprob: -5.402763366699219
    4. '       ' → logprob: -13.027763366699219
    5. '	return' → logprob: -14.527763366699219
    6. 'eturn' → logprob: -15.402763366699219
    7. '  ' → logprob: -15.652763366699219
    8. '
' → logprob: -16.02776336669922
    9. ':return' → logprob: -16.40276336669922
    10. '    
' → logprob: -16.77776336669922

Token 345: ' chaîne' (ID: 89288)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.048436444252729416
    2. ' return' → logprob: -3.173436403274536
    3. '   ' → logprob: -5.298436641693115
    4. 'def' → logprob: -8.923436164855957
    5. '
' → logprob: -9.548436164855957
    6. 'ret' → logprob: -9.923436164855957
    7. '  ' → logprob: -9.923436164855957
    8. ' ' → logprob: -10.923436164855957
    9. 'r' → logprob: -10.923436164855957
    10. 'eturn' → logprob: -10.923436164855957

Token 346: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05793498456478119
    2. 'return' → logprob: -3.3079349994659424
    3. ' return' → logprob: -3.9329349994659424
    4. '  ' → logprob: -9.557934761047363
    5. ' est' → logprob: -11.432934761047363
    6. ':return' → logprob: -11.807934761047363
    7. ' retourne' → logprob: -12.432934761047363
    8. '	return' → logprob: -12.557934761047363
    9. '    ' → logprob: -12.557934761047363
    10. '    
' → logprob: -12.932934761047363

Token 347: ' au' (ID: 2791)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.637100100517273
    2. 'True' → logprob: -0.762100100517273
    3. '   ' → logprob: -5.7621002197265625
    4. 'return' → logprob: -7.1371002197265625
    5. ' return' → logprob: -8.012100219726562
    6. 'v' → logprob: -9.512100219726562
    7. ' au' → logprob: -10.637100219726562
    8. 'true' → logprob: -11.012100219726562
    9. 'valid' → logprob: -11.012100219726562
    10. ' vraie' → logprob: -11.012100219726562

Token 348: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.0010295925894752145
    2. ' format' → logprob: -7.0010294914245605
    3. 'form' → logprob: -9.376029968261719
    4. 'return' → logprob: -11.001029968261719
    5. 'formats' → logprob: -11.251029968261719
    6. '   ' → logprob: -13.876029968261719
    7. 'final' → logprob: -14.501029968261719
    8. 'True' → logprob: -14.501029968261719
    9. 'forma' → logprob: -14.751029968261719
    10. '_format' → logprob: -15.001029968261719

Token 349: ' AC' (ID: 18577)
  Prédit: 'AC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.11567836254835129
    2. 'True' → logprob: -2.740678310394287
    3. ' True' → logprob: -3.240678310394287
    4. ' AC' → logprob: -5.365678310394287
    5. '   ' → logprob: -7.240678310394287
    6. 'ac' → logprob: -8.990678787231445
    7. ' ' → logprob: -11.115678787231445
    8. 'return' → logprob: -11.490678787231445
    9. 'A' → logprob: -11.865678787231445
    10. 'Ac' → logprob: -11.990678787231445

Token 350: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015908108616713434
    2. 'return' → logprob: -9.25015926361084
    3. ' return' → logprob: -9.75015926361084
    4. '
' → logprob: -13.12515926361084
    5. '    
' → logprob: -13.12515926361084
    6. '       ' → logprob: -15.25015926361084
    7. '	return' → logprob: -15.87515926361084
    8. '   ' → logprob: -16.500158309936523
    9. '  ' → logprob: -16.625158309936523
    10. ':return' → logprob: -17.000158309936523

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.3080716346157715e-05
    2. 'return' → logprob: -10.750022888183594
    3. ' return' → logprob: -14.000022888183594
    4. '    
' → logprob: -14.625022888183594
    5. '
' → logprob: -16.375022888183594
    6. '	return' → logprob: -16.375022888183594
    7. '       ' → logprob: -16.875022888183594
    8. '   ' → logprob: -18.125022888183594
    9. '```' → logprob: -18.875022888183594
    10. '    ' → logprob: -20.250022888183594

Token 352: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02990449033677578
    2. 'return' (adapté à ' return') → logprob: -3.52990460395813
    3. ' return' → logprob: -8.77990436553955
    4. '	return' → logprob: -16.279905319213867
    5. '       ' → logprob: -17.779905319213867
    6. '
' → logprob: -17.779905319213867
    7. '    
' → logprob: -17.904905319213867
    8. '  ' → logprob: -17.904905319213867
    9. '```' → logprob: -18.029905319213867
    10. '    ' → logprob: -19.154905319213867

Token 353: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. '   ' → logprob: -21.376502990722656
    4. '(True' → logprob: -21.751502990722656
    5. 'true' → logprob: -22.001502990722656
    6. 'False' → logprob: -22.751502990722656
    7. '=True' → logprob: -23.376502990722656
    8. '_true' → logprob: -25.001502990722656
    9. ' ' → logprob: -25.376502990722656
    10. 'Tr' → logprob: -25.626502990722656

Token 354: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8056694269180298
    2. ':' → logprob: -0.9306694269180298
    3. '<|end|>' → logprob: -2.5556693077087402
    4. ']' → logprob: -3.0556693077087402
    5. '[:]' → logprob: -4.30566930770874
    6. '```' → logprob: -5.05566930770874
    7. '+' → logprob: -6.18066930770874
    8. ')' → logprob: -6.30566930770874
    9. '.' → logprob: -6.68066930770874
    10. '[:-' → logprob: -6.93066930770874

Token 355: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: ' main' (ID: 2758)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2490822970867157
    2. 'is' → logprob: -1.874082326889038
    3. 'ac' → logprob: -4.249082088470459
    4. ' ac' → logprob: -4.249082088470459
    5. ' test' → logprob: -4.374082088470459
    6. ' est' → logprob: -4.999082088470459
    7. ' main' → logprob: -5.249082088470459
    8. ' check' → logprob: -5.374082088470459
    9. ' starts' → logprob: -6.874082088470459
    10. ' count' → logprob: -6.999082088470459

Token 357: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00043913270928896964
    2. '(' → logprob: -8.125438690185547
    3. ' ():' → logprob: -9.250438690185547
    4. '()' → logprob: -11.000438690185547
    5. '_' → logprob: -11.000438690185547
    6. '():
' → logprob: -11.625438690185547
    7. ':' → logprob: -13.125438690185547
    8. '_:' → logprob: -14.125438690185547
    9. ' (' → logprob: -14.750438690185547
    10. '(:' → logprob: -15.000438690185547

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5972237586975098
    2. ' s' → logprob: -0.8472237586975098
    3. 's' → logprob: -4.34722375869751
    4. ' input' → logprob: -5.72222375869751
    5. ' user' → logprob: -6.84722375869751
    6. ' code' → logprob: -7.09722375869751
    7. 'n' → logprob: -7.22222375869751
    8. ' n' → logprob: -7.59722375869751
    9. 'input' → logprob: -7.97222375869751
    10. '    ' → logprob: -8.097223281860352

Token 359: ' """
' (ID: 7037)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.18782413005828857
    2. ' s' → logprob: -2.062824249267578
    3. ' tests' → logprob: -3.437824249267578
    4. '   ' → logprob: -5.312824249267578
    5. 's' → logprob: -6.437824249267578
    6. ' lines' → logprob: -6.812824249267578
    7. ' examples' → logprob: -7.312824249267578
    8. ' n' → logprob: -7.562824249267578
    9. ' strings' → logprob: -7.562824249267578
    10. ' while' → logprob: -7.687824249267578

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2343812733888626
    2. ' test' → logprob: -1.9843813180923462
    3. ' s' → logprob: -3.3593811988830566
    4. ' tests' → logprob: -3.4843811988830566
    5. 's' → logprob: -6.359381198883057
    6. ' code' → logprob: -7.234381198883057
    7. ' example' → logprob: -7.609381198883057
    8. ' print' → logprob: -7.609381198883057
    9. 'test' → logprob: -7.859381198883057
    10. 'tests' → logprob: -7.984381198883057

Token 361: ' Fonction' (ID: 189149)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.5752763748168945
    2. ' tests' → logprob: -1.2002763748168945
    3. '   ' → logprob: -2.5752763748168945
    4. 'test' → logprob: -4.3252763748168945
    5. 'tests' → logprob: -4.7002763748168945
    6. ' s' → logprob: -4.9502763748168945
    7. ' code' → logprob: -4.9502763748168945
    8. ' for' → logprob: -5.0752763748168945
    9. ' lines' → logprob: -5.9502763748168945
    10. 'Tests' → logprob: -6.2002763748168945

Token 362: ' principale' (ID: 68926)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.01713905856013298
    2. ' de' → logprob: -5.142138957977295
    3. ' main' → logprob: -5.517138957977295
    4. ' principale' → logprob: -5.517138957977295
    5. ' tester' → logprob: -7.142138957977295
    6. ' d' → logprob: -7.517138957977295
    7. ' ' → logprob: -7.642138957977295
    8. ' principal' → logprob: -7.892138957977295
    9. ' ' → logprob: -8.767139434814453
    10. '   ' → logprob: -8.767139434814453

Token 363: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0615851953625679
    2. 'def' → logprob: -3.4365851879119873
    3. '
' → logprob: -3.9365851879119873
    4. '    
' → logprob: -5.811585426330566
    5. ':' → logprob: -6.936585426330566
    6. '```' → logprob: -7.061585426330566
    7. ' def' → logprob: -7.186585426330566
    8. ' to' → logprob: -7.936585426330566
    9. ' pour' → logprob: -8.061585426330566
    10. ':
' → logprob: -8.061585426330566

Token 364: ' lit' (ID: 11980)
  Prédit: ' lit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.566250741481781
    2. ' teste' → logprob: -1.9412508010864258
    3. ' vér' → logprob: -2.691250801086426
    4. ' demande' → logprob: -2.691250801086426
    5. ' test' → logprob: -2.816250801086426
    6. ' prend' → logprob: -3.941250801086426
    7. ' print' → logprob: -4.691250801086426
    8. ' permet' → logprob: -4.816250801086426
    9. ' récup' → logprob: -4.941250801086426
    10. ' imprime' → logprob: -4.941250801086426

Token 365: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.21413947641849518
    2. ' la' → logprob: -1.964139461517334
    3. '   ' → logprob: -3.714139461517334
    4. ' l' → logprob: -4.589139461517334
    5. '()' → logprob: -5.464139461517334
    6. ' un' → logprob: -5.589139461517334
    7. 'une' → logprob: -5.589139461517334
    8. ' des' → logprob: -6.464139461517334
    9. ' input' → logprob: -6.464139461517334
    10. ' ' → logprob: -6.964139461517334

Token 366: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.11389601975679398
    2. 'chaine' → logprob: -2.613896131515503
    3. 'cha' → logprob: -3.863896131515503
    4. ' chaine' → logprob: -4.613895893096924
    5. ' ' → logprob: -6.363895893096924
    6. ' ligne' → logprob: -7.613895893096924
    7. 's' → logprob: -7.988895893096924
    8. 'ligne' → logprob: -8.113896369934082
    9. '   ' → logprob: -8.363896369934082
    10. 'entrée' → logprob: -8.363896369934082

Token 367: ' en' (ID: 469)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8118627667427063
    2. '   ' → logprob: -1.3118627071380615
    3. ' et' → logprob: -2.8118627071380615
    4. ',' → logprob: -3.1868627071380615
    5. 'de' → logprob: -3.5618627071380615
    6. ' s' → logprob: -3.5618627071380615
    7. ' à' → logprob: -3.8118627071380615
    8. ' input' → logprob: -3.9368627071380615
    9. ' d' → logprob: -4.061862945556641
    10. 's' → logprob: -4.561862945556641

Token 368: ' entrée' (ID: 95590)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.14804399013519287
    2. 'input' → logprob: -2.3980441093444824
    3. ' entrée' → logprob: -3.7730441093444824
    4. 'entr' → logprob: -4.023044109344482
    5. ' input' → logprob: -5.773044109344482
    6. 'ent' → logprob: -7.273044109344482
    7. 'entrant' → logprob: -7.523044109344482
    8. 'entry' → logprob: -7.523044109344482
    9. 'entrada' → logprob: -8.898043632507324
    10. ''entrée' → logprob: -8.898043632507324

Token 369: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04106578603386879
    2. ',' → logprob: -3.2910656929016113
    3. ' et' → logprob: -6.666065692901611
    4. '()' → logprob: -7.041065692901611
    5. ' ,' → logprob: -8.29106616973877
    6. ':' → logprob: -8.79106616973877
    7. ' s' → logprob: -9.54106616973877
    8. 's' → logprob: -9.54106616973877
    9. '():' → logprob: -9.54106616973877
    10. ' :' → logprob: -10.41606616973877

Token 370: ' vér' (ID: 42524)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009026252664625645
    2. ' s' → logprob: -4.884026050567627
    3. '    ' → logprob: -8.009026527404785
    4. ' def' → logprob: -8.259026527404785
    5. 'def' → logprob: -8.509026527404785
    6. 's' → logprob: -8.634026527404785
    7. ' vér' → logprob: -8.884026527404785
    8. ' et' → logprob: -9.884026527404785
    9. '    
' → logprob: -10.134026527404785
    10. ' vérifier' → logprob: -11.009026527404785

Token 371: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0013903543585911393
    2. 'if' → logprob: -6.75139045715332
    3. 'rite' → logprob: -9.50139045715332
    4. 'ite' → logprob: -10.00139045715332
    5. 'ifiez' → logprob: -10.37639045715332
    6. 'ifies' → logprob: -10.75139045715332
    7. 'ifiant' → logprob: -11.75139045715332
    8. 'ifi' → logprob: -11.87639045715332
    9. 'er' → logprob: -12.37639045715332
    10. 'ifié' → logprob: -12.75139045715332

Token 372: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.22978582978248596
    2. '   ' → logprob: -1.8547857999801636
    3. ' if' → logprob: -3.604785919189453
    4. 'si' → logprob: -4.479785919189453
    5. ' son' → logprob: -5.979785919189453
    6. ' sa' → logprob: -6.104785919189453
    7. 'son' → logprob: -6.479785919189453
    8. ' ' → logprob: -6.604785919189453
    9. 's' → logprob: -7.354785919189453
    10. ' le' → logprob: -7.604785919189453

Token 373: ' elle' (ID: 11451)
  Prédit: ' elle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elle' → logprob: -0.10059008002281189
    2. ' celle' → logprob: -2.4755899906158447
    3. ' ' → logprob: -5.600590229034424
    4. 's' → logprob: -6.100590229034424
    5. ''elle' → logprob: -6.850590229034424
    6. ' is' → logprob: -6.850590229034424
    7. ' la' → logprob: -6.975590229034424
    8. 'elle' → logprob: -7.600590229034424
    9. ' ela' → logprob: -7.850590229034424
    10. 'celle' → logprob: -7.975590229034424

Token 374: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.023497028276324272
    2. 'est' → logprob: -3.7734971046447754
    3. ' respecte' → logprob: -9.023496627807617
    4. 's' → logprob: -9.898496627807617
    5. ' au' → logprob: -10.773496627807617
    6. ' is' → logprob: -11.023496627807617
    7. '_est' → logprob: -12.023496627807617
    8. 'au' → logprob: -12.273496627807617
    9. 'respect' → logprob: -12.273496627807617
    10. ' ' → logprob: -12.523496627807617

Token 375: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.2527896463871002
    2. 'au' → logprob: -1.5027896165847778
    3. ' en' → logprob: -7.627789497375488
    4. 's' → logprob: -8.752789497375488
    5. 'en' → logprob: -9.627789497375488
    6. ' conforme' → logprob: -10.127789497375488
    7. 'ac' → logprob: -10.377789497375488
    8. ' ' → logprob: -11.252789497375488
    9. 'Au' → logprob: -11.502789497375488
    10. ' ac' → logprob: -11.752789497375488

Token 376: ' format' (ID: 6011)
  Prédit: ' format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' format' → logprob: -0.474110871553421
    2. 'format' → logprob: -0.9741108417510986
    3. 'form' → logprob: -11.22411060333252
    4. 'formats' → logprob: -11.97411060333252
    5. '_format' → logprob: -12.09911060333252
    6. 'au' → logprob: -13.22411060333252
    7. 'Format' → logprob: -13.72411060333252
    8. '=format' → logprob: -13.72411060333252
    9. ' formato' → logprob: -14.22411060333252
    10. '	format' → logprob: -14.47411060333252

Token 377: ' AC' (ID: 18577)
  Prédit: 'AC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.633274257183075
    2. ' AC' → logprob: -0.758274257183075
    3. 'ac' → logprob: -7.758274078369141
    4. ' ac' → logprob: -8.88327407836914
    5. '_AC' → logprob: -9.88327407836914
    6. '"' → logprob: -11.00827407836914
    7. 'Ac' → logprob: -11.63327407836914
    8. ''' → logprob: -11.75827407836914
    9. '   ' → logprob: -12.25827407836914
    10. '_ac' → logprob: -12.63327407836914

Token 378: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32293978333473206
    2. ',' → logprob: -1.3229397535324097
    3. ' et' → logprob: -4.697939872741699
    4. ' ,' → logprob: -8.0729398727417
    5. 'et' → logprob: -9.4479398727417
    6. '.' → logprob: -10.1979398727417
    7. ' puis' → logprob: -10.6979398727417
    8. '```' → logprob: -11.3229398727417
    9. ' and' → logprob: -11.4479398727417
    10. ',
' → logprob: -11.6979398727417

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008598266169428825
    2. ' et' → logprob: -5.258598327636719
    3. 'et' → logprob: -6.383598327636719
    4. ' puis' → logprob: -6.508598327636719
    5. '    ' → logprob: -8.883598327636719
    6. ' and' → logprob: -11.758598327636719
    7. ',' → logprob: -11.883598327636719
    8. ' ' → logprob: -12.008598327636719
    9. '    
' → logprob: -12.008598327636719
    10. '  ' → logprob: -12.633598327636719

Token 380: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008665982633829117
    2. 'et' (adapté à ' et') → logprob: -5.633666038513184
    3. ' puis' → logprob: -5.883666038513184
    4. ' et' → logprob: -6.258666038513184
    5. 'p' → logprob: -8.633666038513184
    6. ' and' → logprob: -9.508666038513184
    7. '    ' → logprob: -9.883666038513184
    8. 'and' → logprob: -10.758666038513184
    9. ',' → logprob: -12.383666038513184
    10. 'print' → logprob: -12.508666038513184

Token 381: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16730058193206787
    2. ' imprime' → logprob: -2.9173007011413574
    3. ' affiche' → logprob: -3.1673007011413574
    4. ' print' → logprob: -3.1673007011413574
    5. 'print' → logprob: -4.417300701141357
    6. 'aff' → logprob: -6.042300701141357
    7. 'im' → logprob: -8.1673002243042
    8. ' impr' → logprob: -8.7923002243042
    9. '    
' → logprob: -8.9173002243042
    10. '    ' → logprob: -9.1673002243042

Token 382: ' '' (ID: 461)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7312747240066528
    2. '"' → logprob: -1.2312747240066528
    3. ' le' → logprob: -1.7312747240066528
    4. ' un' → logprob: -3.6062746047973633
    5. 'le' → logprob: -4.356274604797363
    6. ' "' → logprob: -6.356274604797363
    7. 'un' → logprob: -6.481274604797363
    8. '   ' → logprob: -6.481274604797363
    9. '(' → logprob: -6.731274604797363
    10. '(
' → logprob: -7.231274604797363

Token 383: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.23543699085712433
    2. 'OK' → logprob: -2.1104369163513184
    3. 'Format' → logprob: -3.6104369163513184
    4. 'True' → logprob: -3.9854369163513184
    5. 'VALID' → logprob: -4.610436916351318
    6. 'Valid' → logprob: -4.860436916351318
    7. 'Oui' → logprob: -5.110436916351318
    8. 'Val' → logprob: -5.110436916351318
    9. 'YES' → logprob: -5.610436916351318
    10. '"' → logprob: -6.360436916351318

Token 384: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7287070751190186
    2. ' OK' → logprob: -1.8537070751190186
    3. 'OK' → logprob: -2.1037070751190186
    4. 'format' → logprob: -2.6037070751190186
    5. ' format' → logprob: -2.7287070751190186
    6. 'Format' → logprob: -3.1037070751190186
    7. '_OK' → logprob: -4.603707313537598
    8. 'cept' → logprob: -4.853707313537598
    9. ' ok' → logprob: -5.103707313537598
    10. 'CEPT' → logprob: -5.353707313537598

Token 385: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03217189386487007
    2. ''' → logprob: -4.282171726226807
    3. '()' → logprob: -4.907171726226807
    4. ' if' → logprob: -5.657171726226807
    5. '```' → logprob: -6.657171726226807
    6. 'def' → logprob: -6.782171726226807
    7. '('' → logprob: -6.782171726226807
    8. ' or' → logprob: -8.032172203063965
    9. '"' → logprob: -8.032172203063965
    10. ',' → logprob: -8.157172203063965

Token 386: ' c' (ID: 274)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4749470353126526
    2. 'is' → logprob: -0.9749470353126526
    3. ' est' → logprob: -7.099946975708008
    4. 'est' → logprob: -10.349946975708008
    5. '   ' → logprob: -11.849946975708008
    6. ' ' → logprob: -13.099946975708008
    7. ' ' → logprob: -13.849946975708008
    8. 'not' → logprob: -14.599946975708008
    9. ' la' → logprob: -14.849946975708008
    10. ' True' → logprob: -14.849946975708008

Token 387: ''est' (ID: 6616)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.25326457619667053
    2. 'is' → logprob: -1.7532645463943481
    3. ''est' → logprob: -3.7532646656036377
    4. ' est' → logprob: -4.253264427185059
    5. ' is' → logprob: -4.378264427185059
    6. '’est' → logprob: -9.753264427185059
    7. '```' → logprob: -9.753264427185059
    8. 'e' → logprob: -9.878264427185059
    9. '_est' → logprob: -10.003264427185059
    10. '   ' → logprob: -11.003264427185059

Token 388: ' le' (ID: 505)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.8475340604782104
    2. 'le' → logprob: -1.3475340604782104
    3. 'True' → logprob: -1.9725340604782104
    4. ' le' → logprob: -2.2225341796875
    5. 'v' → logprob: -2.9725341796875
    6. ' vrai' → logprob: -5.2225341796875
    7. '   ' → logprob: -5.9725341796875
    8. 'exact' → logprob: -6.5975341796875
    9. '```' → logprob: -7.0975341796875
    10. ' correct' → logprob: -7.3475341796875

Token 389: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.3508661687374115
    2. ' cas' → logprob: -1.2258661985397339
    3. 'format' → logprob: -6.975866317749023
    4. 'case' → logprob: -7.350866317749023
    5. ' True' → logprob: -7.975866317749023
    6. ' format' → logprob: -8.850866317749023
    7. 'bon' → logprob: -9.350866317749023
    8. ' case' → logprob: -9.600866317749023
    9. 'True' → logprob: -9.725866317749023
    10. 'v' → logprob: -9.725866317749023

Token 390: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28122323751449585
    2. ',' → logprob: -1.4062232971191406
    3. ' ,' → logprob: -10.78122329711914
    4. '.' → logprob: -10.90622329711914
    5. ' ou' → logprob: -11.28122329711914
    6. ' or' → logprob: -12.03122329711914
    7. 'def' → logprob: -12.28122329711914
    8. ',
' → logprob: -12.40622329711914
    9. '```' → logprob: -13.78122329711914
    10. '
' → logprob: -14.03122329711914

Token 391: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017065927386283875
    2. ' sinon' → logprob: -4.14206600189209
    3. 'sin' → logprob: -7.26706600189209
    4. 'ou' → logprob: -9.51706600189209
    5. ' autrement' → logprob: -10.39206600189209
    6. 'au' → logprob: -10.76706600189209
    7. '    ' → logprob: -10.76706600189209
    8. 'else' → logprob: -10.76706600189209
    9. ' Sinon' → logprob: -10.76706600189209
    10. 'Sinon' → logprob: -10.89206600189209

Token 392: ' affiche' (ID: 127479)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6853135824203491
    2. '   ' → logprob: -1.6853135824203491
    3. ' print' → logprob: -1.6853135824203491
    4. ' '' → logprob: -2.3103137016296387
    5. 'print' → logprob: -3.8103137016296387
    6. '"' → logprob: -6.060313701629639
    7. '('' → logprob: -7.435313701629639
    8. '    ' → logprob: -8.31031322479248
    9. ' ' → logprob: -8.93531322479248
    10. ''aff' → logprob: -8.93531322479248

Token 393: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14945542812347412
    2. ' '' → logprob: -2.0244555473327637
    3. '"' → logprob: -5.524455547332764
    4. '   ' → logprob: -6.649455547332764
    5. ' ' → logprob: -7.649455547332764
    6. ' False' → logprob: -8.024455070495605
    7. ' AC' → logprob: -8.774455070495605
    8. ' "' → logprob: -9.774455070495605
    9. ''un' → logprob: -9.774455070495605
    10. ''A' → logprob: -10.149455070495605

Token 394: 'WA' (ID: 26913)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'NO' → logprob: -1.4227591753005981
    2. 'KO' → logprob: -1.4227591753005981
    3. 'N' → logprob: -1.6727591753005981
    4. 'No' → logprob: -2.4227590560913086
    5. 'Not' → logprob: -3.5477590560913086
    6. 'Erreur' → logprob: -3.5477590560913086
    7. 'Non' → logprob: -3.6727590560913086
    8. 'NON' → logprob: -3.7977590560913086
    9. 'False' → logprob: -4.047759056091309
    10. 'Format' → logprob: -4.297759056091309

Token 395: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004292795900255442
    2. ''.' → logprob: -5.504292964935303
    3. '"' → logprob: -8.879292488098145
    4. '')' → logprob: -10.004292488098145
    5. ''
' → logprob: -11.879292488098145
    6. '"'' → logprob: -12.504292488098145
    7. 'C' → logprob: -13.004292488098145
    8. '".' → logprob: -13.129292488098145
    9. '''' → logprob: -13.129292488098145
    10. 'A' → logprob: -13.254292488098145

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4617256056226324e-05
    2. '    
' → logprob: -11.625014305114746
    3. 's' → logprob: -12.875014305114746
    4. '
' → logprob: -13.125014305114746
    5. ' s' → logprob: -14.750014305114746
    6. 'import' → logprob: -15.625014305114746
    7. 'input' → logprob: -15.625014305114746
    8. '    ' → logprob: -15.750014305114746
    9. '```' → logprob: -16.000015258789062
    10. '       ' → logprob: -17.000015258789062

Token 397: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.729906196298543e-06
    2. '```' → logprob: -13.000009536743164
    3. 'input' → logprob: -13.125009536743164
    4. 's' → logprob: -13.125009536743164
    5. '
' → logprob: -13.375009536743164
    6. '    
' → logprob: -13.875009536743164
    7. '"""' → logprob: -14.875009536743164
    8. '    ' → logprob: -15.625009536743164
    9. 'def' → logprob: -16.625009536743164
    10. ' s' → logprob: -17.000009536743164

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038718082942068577
    2. 's' → logprob: -6.253871917724609
    3. ' s' → logprob: -6.253871917724609
    4. ' input' → logprob: -11.87887191772461
    5. 'input' → logprob: -12.12887191772461
    6. '    ' → logprob: -13.75387191772461
    7. '```' → logprob: -14.00387191772461
    8. ' line' → logprob: -14.25387191772461
    9. '	s' → logprob: -14.87887191772461
    10. ' code' → logprob: -15.00387191772461

Token 399: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0037902232725173235
    2. '   ' → logprob: -6.128790378570557
    3. ' s' → logprob: -6.503790378570557
    4. 'input' → logprob: -9.878789901733398
    5. 'chaine' → logprob: -10.253789901733398
    6. 'user' → logprob: -12.378789901733398
    7. 'import' → logprob: -12.503789901733398
    8. 'text' → logprob: -12.753789901733398
    9. 'try' → logprob: -13.003789901733398
    10. 'string' → logprob: -13.128789901733398

Token 400: ' Lit' (ID: 45595)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004941393155604601
    2. ' s' → logprob: -5.629941463470459
    3. 'chaine' → logprob: -7.504941463470459
    4. 'input' → logprob: -7.879941463470459
    5. 'user' → logprob: -8.6299409866333
    6. 'string' → logprob: -8.8799409866333
    7. 'import' → logprob: -10.6299409866333
    8. 'word' → logprob: -11.1299409866333
    9. 'try' → logprob: -11.7549409866333
    10. '   ' → logprob: -11.7549409866333

Token 401: ' l' (ID: 305)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03601827099919319
    2. '   ' → logprob: -4.036018371582031
    3. 's' → logprob: -5.286018371582031
    4. ' la' → logprob: -5.536018371582031
    5. ' une' → logprob: -5.786018371582031
    6. ' input' → logprob: -6.036018371582031
    7. 'chaine' → logprob: -6.286018371582031
    8. ' string' → logprob: -7.911018371582031
    9. 'input' → logprob: -8.536018371582031
    10. ' user' → logprob: -9.036018371582031

Token 402: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6783598065376282
    2. 'a' → logprob: -2.0533597469329834
    3. ' input' → logprob: -2.1783597469329834
    4. '   ' → logprob: -2.4283597469329834
    5. 's' → logprob: -2.6783597469329834
    6. 'e' → logprob: -3.3033597469329834
    7. 'entrée' → logprob: -3.5533597469329834
    8. 'chaine' → logprob: -4.5533599853515625
    9. ''entrée' → logprob: -4.6783599853515625
    10. 'ine' → logprob: -6.1783599853515625

Token 403: ' utilisateur' (ID: 115595)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.812903881072998
    2. 's' → logprob: -0.937903881072998
    3. '   ' → logprob: -1.812903881072998
    4. 'chaine' → logprob: -6.562903881072998
    5. 'string' → logprob: -9.437904357910156
    6. ' string' → logprob: -10.062904357910156
    7. 'input' → logprob: -10.562904357910156
    8. 'ch' → logprob: -10.562904357910156
    9. ' =' → logprob: -10.562904357910156
    10. ' line' → logprob: -10.812904357910156

Token 404: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4847669005393982
    2. ' s' → logprob: -1.109766960144043
    3. 's' → logprob: -2.984766960144043
    4. ' input' → logprob: -6.234766960144043
    5. 'input' → logprob: -6.859766960144043
    6. 'chaine' → logprob: -8.109766960144043
    7. ' line' → logprob: -8.484766960144043
    8. ' user' → logprob: -9.234766960144043
    9. 'user' → logprob: -9.984766960144043
    10. ' string' → logprob: -9.984766960144043

Token 405: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.24656543135643005
    2. '   ' → logprob: -1.9965654611587524
    3. 's' → logprob: -2.496565341949463
    4. ' input' → logprob: -8.496565818786621
    5. ' line' → logprob: -9.871565818786621
    6. 'input' → logprob: -10.496565818786621
    7. ' string' → logprob: -10.496565818786621
    8. ' user' → logprob: -10.996565818786621
    9. 'chaine' → logprob: -12.121565818786621
    10. 'string' → logprob: -12.496565818786621

Token 406: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.31441813707351685
    2. ' s' → logprob: -1.314418077468872
    3. '   ' → logprob: -6.814418315887451
    4. 'input' → logprob: -11.189417839050293
    5. ' input' → logprob: -11.314417839050293
    6. 'chaine' → logprob: -12.314417839050293
    7. 'user' → logprob: -12.439417839050293
    8. ' user' → logprob: -12.439417839050293
    9. ' ' → logprob: -12.814417839050293
    10. '	s' → logprob: -12.939417839050293

Token 407: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519327998161316
    2. '=' → logprob: -1.5019328594207764
    3. '=input' → logprob: -12.626933097839355
    4. '.' → logprob: -16.00193214416504
    5. '   ' → logprob: -16.25193214416504
    6. '	' → logprob: -17.00193214416504
    7. ' ' → logprob: -17.00193214416504
    8. 's' → logprob: -17.37693214416504
    9. ')' → logprob: -17.37693214416504
    10. ' ' → logprob: -17.50193214416504

Token 408: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01416350994259119
    2. ' input' → logprob: -4.264163494110107
    3. '=input' → logprob: -18.139163970947266
    4. '(input' → logprob: -18.264163970947266
    5. '	input' → logprob: -19.014163970947266
    6. '<input' → logprob: -21.014163970947266
    7. '   ' → logprob: -21.514163970947266
    8. 'str' → logprob: -21.639163970947266
    9. ',input' → logprob: -22.639163970947266
    10. '_input' → logprob: -22.764163970947266

Token 409: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00254617421887815
    2. '().' → logprob: -6.002546310424805
    3. '(' → logprob: -9.627546310424805
    4. '()
' → logprob: -13.002546310424805
    5. ' ()' → logprob: -13.627546310424805
    6. '("")' → logprob: -15.002546310424805
    7. '();' → logprob: -15.627546310424805
    8. '()

' → logprob: -15.752546310424805
    9. '()`' → logprob: -15.752546310424805
    10. '（）' → logprob: -15.877546310424805

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012853478081524372
    2. '
' → logprob: -4.762853622436523
    3. '    
' → logprob: -5.512853622436523
    4. '  
' → logprob: -9.512853622436523
    5. '<|end|>' → logprob: -9.762853622436523
    6. 'if' → logprob: -11.137853622436523
    7. ' 
' → logprob: -11.387853622436523
    8. ' if' → logprob: -11.387853622436523
    9. '   
' → logprob: -11.637853622436523
    10. '    ' → logprob: -12.887853622436523

Token 411: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08596156537532806
    2. 'if' → logprob: -2.5859615802764893
    3. ' if' → logprob: -4.96096134185791
    4. '    
' → logprob: -11.58596134185791
    5. '
' → logprob: -11.71096134185791
    6. ' ' → logprob: -11.83596134185791
    7. '	if' → logprob: -11.96096134185791
    8. '  ' → logprob: -12.58596134185791
    9. '<|end|>' → logprob: -12.96096134185791
    10. '    ' → logprob: -13.71096134185791

Token 412: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0031859094742685556
    2. ' if' → logprob: -5.753185749053955
    3. 'print' → logprob: -11.753186225891113
    4. 'result' → logprob: -15.503186225891113
    5. '   ' → logprob: -16.628185272216797
    6. ' print' → logprob: -19.003185272216797
    7. 'is' → logprob: -19.628185272216797
    8. ' ' → logprob: -20.128185272216797
    9. 'If' → logprob: -20.253185272216797
    10. '	if' → logprob: -20.378185272216797

Token 413: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00024358915106859058
    2. 'if' → logprob: -8.375243186950684
    3. 'ife' → logprob: -12.125243186950684
    4. ' if' → logprob: -12.875243186950684
    5. 'ifiez' → logprob: -13.500243186950684
    6. '   ' → logprob: -13.625243186950684
    7. 'ifi' → logprob: -13.750243186950684
    8. '```' → logprob: -15.000243186950684
    9. 'ifies' → logprob: -15.375243186950684
    10. 'ief' → logprob: -15.500243186950684

Token 414: ' le' (ID: 505)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.31518349051475525
    2. ' if' → logprob: -1.3151835203170776
    3. ' ' → logprob: -7.065183639526367
    4. 'if' → logprob: -7.815183639526367
    5. 'is' → logprob: -7.940183639526367
    6. '(is' → logprob: -9.065183639526367
    7. ' si' → logprob: -9.190183639526367
    8. '   ' → logprob: -10.815183639526367
    9. ' (' → logprob: -11.565183639526367
    10. '  ' → logprob: -11.690183639526367

Token 415: ' format' (ID: 6011)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17248445749282837
    2. ' if' → logprob: -2.0474843978881836
    3. 'result' → logprob: -3.9224843978881836
    4. 'format' → logprob: -5.172484397888184
    5. ' format' → logprob: -6.422484397888184
    6. 'is' → logprob: -6.797484397888184
    7. '   ' → logprob: -7.797484397888184
    8. ' result' → logprob: -8.172484397888184
    9. ' résultat' → logprob: -8.672484397888184
    10. 's' → logprob: -8.922484397888184

Token 416: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037452138494700193
    2. ' if' → logprob: -5.628745079040527
    3. 'if' → logprob: -9.753745079040527
    4. '    
' → logprob: -9.753745079040527
    5. '<|end|>' → logprob: -11.878745079040527
    6. '    ' → logprob: -12.128745079040527
    7. ',' → logprob: -12.628745079040527
    8. ' =' → logprob: -13.253745079040527
    9. '   ' → logprob: -13.378745079040527
    10. '  ' → logprob: -13.378745079040527

Token 417: ' affiche' (ID: 127479)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8108465075492859
    2. ' print' → logprob: -1.0608465671539307
    3. 'print' → logprob: -1.9358465671539307
    4. 'if' → logprob: -3.3108465671539307
    5. '   ' → logprob: -3.5608465671539307
    6. '<|end|>' → logprob: -9.685846328735352
    7. '
' → logprob: -10.435846328735352
    8. ' ' → logprob: -11.435846328735352
    9. ' 
' → logprob: -11.935846328735352
    10. '    
' → logprob: -11.935846328735352

Token 418: ' le' (ID: 505)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.45016366243362427
    2. '('' → logprob: -1.2001636028289795
    3. '(' → logprob: -2.9501636028289795
    4. '"' → logprob: -5.075163841247559
    5. ''' → logprob: -6.075163841247559
    6. '(
' → logprob: -7.825163841247559
    7. ' "' → logprob: -10.575163841247559
    8. '   ' → logprob: -11.325163841247559
    9. ' ("' → logprob: -12.200163841247559
    10. ' '' → logprob: -13.200163841247559

Token 419: ' résultat' (ID: 62556)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.43285155296325684
    2. ''' → logprob: -1.0578515529632568
    3. 'result' → logprob: -5.932851791381836
    4. '   ' → logprob: -7.432851791381836
    5. 'AC' → logprob: -8.682851791381836
    6. ' "' → logprob: -8.932851791381836
    7. ' result' → logprob: -9.057851791381836
    8. ''A' → logprob: -9.682851791381836
    9. ' '' → logprob: -9.807851791381836
    10. ' résultat' → logprob: -9.807851791381836

Token 420: ' appropri' (ID: 71769)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.4894986785948277e-05
    2. '
' → logprob: -10.875044822692871
    3. ' if' → logprob: -11.250044822692871
    4. 'if' → logprob: -11.625044822692871
    5. '    
' → logprob: -12.625044822692871
    6. '<|end|>' → logprob: -15.625044822692871
    7. '```' → logprob: -15.750044822692871
    8. '	if' → logprob: -16.750045776367188
    9. '       ' → logprob: -16.875045776367188
    10. '  
' → logprob: -17.000045776367188

Token 421: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0004903609515167773
    2. '   ' → logprob: -7.750490188598633
    3. 'ément' → logprob: -11.250490188598633
    4. 'e' → logprob: -11.750490188598633
    5. 'if' → logprob: -11.750490188598633
    6. '```' → logprob: -11.875490188598633
    7. 'atif' → logprob: -12.625490188598633
    8. 'ée' → logprob: -12.875490188598633
    9. 'ed' → logprob: -13.125490188598633
    10. ')' → logprob: -13.250490188598633

Token 422: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016031786799430847
    2. ' if' → logprob: -4.641031742095947
    3. 'if' → logprob: -5.141031742095947
    4. '
' → logprob: -7.891031742095947
    5. '    
' → logprob: -11.141032218933105
    6. '```' → logprob: -12.516032218933105
    7. ' ' → logprob: -13.141032218933105
    8. '	if' → logprob: -13.141032218933105
    9. '  
' → logprob: -13.266032218933105
    10. ' 
' → logprob: -13.641032218933105

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1637164789135568e-05
    2. 'if' → logprob: -12.000011444091797
    3. ' if' → logprob: -12.500011444091797
    4. '
' → logprob: -13.500011444091797
    5. '    
' → logprob: -15.250011444091797
    6. '```' → logprob: -16.750011444091797
    7. '	if' → logprob: -17.250011444091797
    8. '       ' → logprob: -17.375011444091797
    9. '<|end|>' → logprob: -18.500011444091797
    10. '    ' → logprob: -18.625011444091797

Token 424: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13650448620319366
    2. '   ' → logprob: -2.6365044116973877
    3. ' if' → logprob: -3.1365044116973877
    4. 'print' → logprob: -4.386504650115967
    5. ' print' → logprob: -9.136504173278809
    6. '
' → logprob: -15.886504173278809
    7. '    
' → logprob: -16.261505126953125
    8. '	if' → logprob: -16.886505126953125
    9. '```' → logprob: -17.386505126953125
    10. '  ' → logprob: -18.511505126953125

Token 425: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -5.371605948312208e-05
    2. 'is' → logprob: -9.875053405761719
    3. 's' → logprob: -13.125053405761719
    4. ' s' → logprob: -15.750053405761719
    5. ' ' → logprob: -18.75005340576172
    6. '(is' → logprob: -18.75005340576172
    7. '	is' → logprob: -19.37505340576172
    8. ' ' → logprob: -19.75005340576172
    9. ' not' → logprob: -19.87505340576172
    10. '(s' → logprob: -20.75005340576172

Token 426: '_ac' (ID: 41419)
  Prédit: '_ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ac' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -13.62500286102295
    3. 's' → logprob: -14.37500286102295
    4. '_AC' → logprob: -14.50000286102295
    5. '_a' → logprob: -16.000001907348633
    6. ' _' → logprob: -16.875001907348633
    7. '_s' → logprob: -17.250001907348633
    8. '_oc' → logprob: -17.250001907348633
    9. '_acc' → logprob: -17.500001907348633
    10. ' s' → logprob: -17.750001907348633

Token 427: '_format' (ID: 19832)
  Prédit: '_format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_format' → logprob: -2.5776860184123507e-06
    2. '_form' → logprob: -13.62500286102295
    3. 'format' → logprob: -14.00000286102295
    4. ' format' → logprob: -16.375001907348633
    5. '_' → logprob: -16.625001907348633
    6. '_formats' → logprob: -16.750001907348633
    7. 's' → logprob: -16.875001907348633
    8. '(s' → logprob: -17.250001907348633
    9. ' _' → logprob: -17.500001907348633
    10. '_FORMAT' → logprob: -17.625001907348633

Token 428: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.5776860184123507e-06
    2. ' (' → logprob: -13.37500286102295
    3. '(' → logprob: -13.87500286102295
    4. 's' → logprob: -17.750001907348633
    5. ')' → logprob: -20.250001907348633
    6. '(
' → logprob: -20.375001907348633
    7. ' ' → logprob: -22.000001907348633
    8. '```' → logprob: -22.250001907348633
    9. ')(' → logprob: -22.500001907348633
    10. '(S' → logprob: -22.875001907348633

Token 429: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03813627362251282
    2. '):
' → logprob: -3.2881362438201904
    3. '():' → logprob: -10.03813648223877
    4. ':' → logprob: -10.78813648223877
    5. ')' → logprob: -10.91313648223877
    6. '():
' → logprob: -12.28813648223877
    7. '   ' → logprob: -12.28813648223877
    8. ' ):' → logprob: -13.66313648223877
    9. '()):
' → logprob: -14.41313648223877
    10. '):
' → logprob: -14.91313648223877

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.200166469876422e-06
    2. 'print' → logprob: -12.625004768371582
    3. ' print' → logprob: -13.500004768371582
    4. '```' → logprob: -16.1250057220459
    5. '           ' → logprob: -16.2500057220459
    6. '   ' → logprob: -16.7500057220459
    7. '<|end|>' → logprob: -16.7500057220459
    8. ':' → logprob: -17.0000057220459
    9. '[' → logprob: -17.6250057220459
    10. '      ' → logprob: -18.0000057220459

Token 431: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26637792587280273
    2. ' print' → logprob: -1.7663779258728027
    3. 'print' (adapté à ' print') → logprob: -2.7663779258728027
    4. '   ' → logprob: -12.266378402709961
    5. '	print' → logprob: -12.516378402709961
    6. '           ' → logprob: -14.391378402709961
    7. '```' → logprob: -14.766378402709961
    8. '      ' → logprob: -15.891378402709961
    9. '    ' → logprob: -16.26637840270996
    10. '.print' → logprob: -16.26637840270996

Token 432: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.002633684314787388
    2. '('' → logprob: -6.002633571624756
    3. '(' → logprob: -8.752634048461914
    4. '(
' → logprob: -19.877634048461914
    5. '("'' → logprob: -19.877634048461914
    6. '("""' → logprob: -21.127634048461914
    7. '()' → logprob: -21.252634048461914
    8. ' ("' → logprob: -21.877634048461914
    9. '("")' → logprob: -22.377634048461914
    10. '"' → logprob: -22.377634048461914

Token 433: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: 0.0
    2. 'A' → logprob: -19.0
    3. ' AC' → logprob: -19.5
    4. ''' → logprob: -19.875
    5. '   ' → logprob: -20.625
    6. 'Ac' → logprob: -21.0
    7. '_AC' → logprob: -21.625
    8. '"' → logprob: -22.5
    9. 'ACA' → logprob: -22.625
    10. 'ac' → logprob: -23.5

Token 434: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.008618119172751904
    2. '')
' → logprob: -4.758618354797363
    3. '')
' → logprob: -13.008618354797363
    4. ')' → logprob: -13.758618354797363
    5. '')

' → logprob: -15.758618354797363
    6. '")' → logprob: -16.133617401123047
    7. ''' → logprob: -16.758617401123047
    8. '')")
' → logprob: -18.633617401123047
    9. ')')
' → logprob: -19.008617401123047
    10. '')"' → logprob: -19.508617401123047

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.363617962459102e-05
    2. ' else' → logprob: -9.625083923339844
    3. 'else' → logprob: -11.000083923339844
    4. '	else' → logprob: -15.125083923339844
    5. '    
' → logprob: -15.125083923339844
    6. '       ' → logprob: -16.375083923339844
    7. '<|end|>' → logprob: -17.625083923339844
    8. '```' → logprob: -18.250083923339844
    9. 's' → logprob: -18.500083923339844
    10. '
' → logprob: -18.500083923339844

Token 436: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0419682115316391
    2. 'else' (adapté à ' else') → logprob: -3.2919681072235107
    3. ' else' → logprob: -5.54196834564209
    4. '	else' → logprob: -15.54196834564209
    5. '       ' → logprob: -17.291967391967773
    6. '```' → logprob: -18.416967391967773
    7. ' ' → logprob: -18.541967391967773
    8. '   ' → logprob: -18.916967391967773
    9. '}else' → logprob: -19.416967391967773
    10. '  ' → logprob: -19.666967391967773

Token 437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0734357014298439
    2. ':
' → logprob: -2.6984357833862305
    3. '       ' → logprob: -5.6984357833862305
    4. ' :' → logprob: -9.32343578338623
    5. ' :
' → logprob: -10.19843578338623
    6. '   ' → logprob: -11.44843578338623
    7. ':
' → logprob: -13.82343578338623
    8. ':

' → logprob: -14.07343578338623
    9. '():
' → logprob: -14.69843578338623
    10. '):
' → logprob: -14.82343578338623

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004664193547796458
    2. ' print' → logprob: -8.250466346740723
    3. 'print' → logprob: -8.500466346740723
    4. '   ' → logprob: -13.375466346740723
    5. '      ' → logprob: -16.50046730041504
    6. '           ' → logprob: -16.62546730041504
    7. '	print' → logprob: -17.37546730041504
    8. '     ' → logprob: -17.87546730041504
    9. '	   ' → logprob: -18.12546730041504
    10. '	' → logprob: -18.12546730041504

Token 439: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16022585332393646
    2. ' print' → logprob: -1.9102258682250977
    3. '       ' → logprob: -13.535225868225098
    4. '   ' → logprob: -15.035225868225098
    5. '	print' → logprob: -16.16022491455078
    6. '.print' → logprob: -18.03522491455078
    7. '    ' → logprob: -19.41022491455078
    8. '(print' → logprob: -19.53522491455078
    9. 'Print' → logprob: -20.16022491455078
    10. ' ' → logprob: -20.78522491455078

Token 440: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. ' ('' → logprob: -17.2500057220459
    4. '("' → logprob: -18.0000057220459
    5. ''' → logprob: -18.1250057220459
    6. '(('' → logprob: -19.2500057220459
    7. '   ' → logprob: -19.7500057220459
    8. '(
' → logprob: -20.5000057220459
    9. '()' → logprob: -20.8750057220459
    10. ')' → logprob: -22.1250057220459

Token 441: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -5.836499985889532e-05
    2. ''' → logprob: -9.7500581741333
    3. ' WA' → logprob: -18.875059127807617
    4. 'wa' → logprob: -19.375059127807617
    5. '   ' → logprob: -19.375059127807617
    6. 'W' → logprob: -20.875059127807617
    7. 'WR' → logprob: -21.750059127807617
    8. 'Wa' → logprob: -22.250059127807617
    9. ' ' → logprob: -23.375059127807617
    10. '

' → logprob: -23.500059127807617

Token 442: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -7.553032628493384e-05
    2. ')' → logprob: -9.500075340270996
    3. '')
' → logprob: -14.625075340270996
    4. '")' → logprob: -16.250076293945312
    5. '()' → logprob: -18.750076293945312
    6. ''' → logprob: -19.250076293945312
    7. '')

' → logprob: -20.125076293945312
    8. '')"' → logprob: -20.125076293945312
    9. '}')' → logprob: -20.750076293945312
    10. '('' → logprob: -20.875076293945312

Token 443: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014704112894833088
    2. 'main' → logprob: -4.26470422744751
    3. '
' → logprob: -8.264703750610352
    4. '```' → logprob: -9.264703750610352
    5. ' if' → logprob: -9.389703750610352
    6. '#' → logprob: -10.139703750610352
    7. '<|end|>' → logprob: -10.264703750610352
    8. '\n' → logprob: -12.014703750610352
    9. '__' → logprob: -12.264703750610352
    10. '\' → logprob: -12.389703750610352

Token 444: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07891369611024857
    2. 'main' → logprob: -2.578913688659668
    3. ' if' → logprob: -10.828913688659668
    4. ' main' → logprob: -13.078913688659668
    5. '#' → logprob: -14.203913688659668
    6. '```' → logprob: -14.203913688659668
    7. '(main' → logprob: -14.578913688659668
    8. '__' → logprob: -17.078914642333984
    9. '[' → logprob: -17.078914642333984
    10. '<|end|>' → logprob: -17.453914642333984

Token 445: 'elle' (ID: 3486)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3980908691883087
    2. 'el' → logprob: -1.1480908393859863
    3. 'ly' → logprob: -5.398090839385986
    4. 'le' → logprob: -5.773090839385986
    5. 'end' → logprob: -7.023090839385986
    6. 'elf' → logprob: -7.398090839385986
    7. 'ear' → logprob: -7.648090839385986
    8. 'elif' → logprob: -7.898090839385986
    9. 'en' → logprob: -8.398091316223145
    10. 'e' → logprob: -8.523091316223145

Token 446: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.11696553975343704
    2. 'if' → logprob: -2.6169655323028564
    3. ' main' → logprob: -3.3669655323028564
    4. '(main' → logprob: -5.8669657707214355
    5. ' if' → logprob: -10.616965293884277
    6. '_main' → logprob: -11.866965293884277
    7. '	main' → logprob: -13.241965293884277
    8. '(' → logprob: -14.991965293884277
    9. '()' → logprob: -15.241965293884277
    10. 'def' → logprob: -15.366965293884277

Token 447: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005412927363067865
    2. ' main' → logprob: -5.255413055419922
    3. 'if' → logprob: -8.630413055419922
    4. '(main' → logprob: -15.505413055419922
    5. 'def' → logprob: -16.005413055419922
    6. '__' → logprob: -16.130413055419922
    7. '_main' → logprob: -16.380413055419922
    8. '	main' → logprob: -17.005413055419922
    9. '
' → logprob: -17.130413055419922
    10. ' if' → logprob: -17.130413055419922

Token 448: ' principale' (ID: 68926)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005581548321060836
    2. 'if' → logprob: -8.000557899475098
    3. '
' → logprob: -8.500557899475098
    4. ' main' → logprob: -11.125557899475098
    5. '(main' → logprob: -12.375557899475098
    6. '_main' → logprob: -16.000558853149414
    7. '

' → logprob: -16.500558853149414
    8. '	main' → logprob: -16.625558853149414
    9. '```' → logprob: -17.000558853149414
    10. '.main' → logprob: -17.875558853149414

Token 449: ' si' (ID: 1784)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039940010756254196
    2. 'main' → logprob: -3.289940118789673
    3. 'if' → logprob: -6.289939880371094
    4. '

' → logprob: -10.664939880371094
    5. '
' → logprob: -11.539939880371094
    6. '```' → logprob: -12.789939880371094
    7. '(main' → logprob: -12.914939880371094
    8. ' main' → logprob: -13.789939880371094
    9. '  
' → logprob: -13.789939880371094
    10. '    
' → logprob: -14.039939880371094

Token 450: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04859009385108948
    2. ' __' → logprob: -3.0485901832580566
    3. 'name' → logprob: -13.298589706420898
    4. '_name' → logprob: -14.923589706420898
    5. '/__' → logprob: -15.298589706420898
    6. '```' → logprob: -15.798589706420898
    7. ' ' → logprob: -16.2985897064209
    8. '___' → logprob: -16.7985897064209
    9. ' name' → logprob: -17.4235897064209
    10. ' "__' → logprob: -17.5485897064209

Token 451: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006803829688578844
    2. ' __' → logprob: -5.0068039894104
    3. 'name' → logprob: -9.881803512573242
    4. '```' → logprob: -12.131803512573242
    5. '_name' → logprob: -12.506803512573242
    6. '_' → logprob: -12.506803512573242
    7. '___' → logprob: -12.631803512573242
    8. '  ' → logprob: -12.756803512573242
    9. '=' → logprob: -12.881803512573242
    10. '/__' → logprob: -13.006803512573242

Token 452: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.22297035157680511
    2. ' __' → logprob: -2.4729702472686768
    3. ' ==' → logprob: -2.4729702472686768
    4. '==' → logprob: -4.097970485687256
    5. ' is' → logprob: -4.597970485687256
    6. 'is' → logprob: -6.347970485687256
    7. 'name' → logprob: -6.847970485687256
    8. 'if' → logprob: -7.972970485687256
    9. ' est' → logprob: -8.097970008850098
    10. '_name' → logprob: -8.472970008850098

Token 453: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02327762544155121
    2. ' __' → logprob: -3.773277521133423
    3. 'name' → logprob: -10.773277282714844
    4. ' "__' → logprob: -11.898277282714844
    5. ''' → logprob: -13.273277282714844
    6. '_name' → logprob: -14.148277282714844
    7. ' '__' → logprob: -14.398277282714844
    8. '"' → logprob: -14.648277282714844
    9. '/__' → logprob: -15.523277282714844
    10. '___' → logprob: -15.773277282714844

Token 454: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.46462300419807434
    2. 'é' → logprob: -1.089622974395752
    3. 'if' → logprob: -3.714622974395752
    4. 'able' → logprob: -5.714622974395752
    5. 'ed' → logprob: -6.339622974395752
    6. ' __' → logprob: -6.339622974395752
    7. ' if' → logprob: -7.214622974395752
    8. 'e' → logprob: -7.339622974395752
    9. ' en' → logprob: -7.589622974395752
    10. 'er' → logprob: -7.964622974395752

Token 455: ' directement' (ID: 52317)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04550021141767502
    2. '
' → logprob: -3.5455002784729004
    3. '```' → logprob: -4.5455002784729
    4. ' if' → logprob: -5.4205002784729
    5. '``' → logprob: -8.920499801635742
    6. '

' → logprob: -8.920499801635742
    7. '__' → logprob: -9.545499801635742
    8. ':
' → logprob: -9.670499801635742
    9. '    
' → logprob: -9.795499801635742
    10. '  
' → logprob: -10.295499801635742

Token 456: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4750364124774933
    2. 'if' → logprob: -0.9750363826751709
    3. '

' → logprob: -7.47503662109375
    4. ' if' → logprob: -8.72503662109375
    5. '```' → logprob: -8.72503662109375
    6. '\n' → logprob: -10.22503662109375
    7. '  
' → logprob: -11.60003662109375
    8. '
' → logprob: -11.85003662109375
    9. '    
' → logprob: -12.10003662109375
    10. '``' → logprob: -13.22503662109375

Token 457: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.203409844194539e-05
    2. '
' → logprob: -10.250041961669922
    3. '```' → logprob: -12.125041961669922
    4. ' if' → logprob: -13.625041961669922
    5. '\n' → logprob: -17.875041961669922
    6. '    
' → logprob: -18.875041961669922
    7. '\
' → logprob: -19.000041961669922
    8. '  
' → logprob: -19.000041961669922
    9. '``' → logprob: -19.000041961669922
    10. '

' → logprob: -20.250041961669922

Token 458: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11286351829767227
    2. '__' → logprob: -2.237863540649414
    3. ' ' → logprob: -10.612863540649414
    4. 'name' → logprob: -11.362863540649414
    5. '_name' → logprob: -13.112863540649414
    6. '___' → logprob: -14.237863540649414
    7. ' name' → logprob: -14.362863540649414
    8. ' ' → logprob: -14.612863540649414
    9. '_' → logprob: -14.862863540649414
    10. '/__' → logprob: -15.487863540649414

Token 459: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08286727219820023
    2. '__' → logprob: -3.082867383956909
    3. '==' → logprob: -3.457867383956909
    4. 'name' → logprob: -6.45786714553833
    5. ' __' → logprob: -7.58286714553833
    6. '_' → logprob: -9.957867622375488
    7. '[' → logprob: -10.582867622375488
    8. '=='' → logprob: -10.957867622375488
    9. '=="' → logprob: -11.207867622375488
    10. 'main' → logprob: -12.332867622375488

Token 460: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.704273118884885e-07
    2. '__.__' → logprob: -15.000000953674316
    3. '==' → logprob: -15.625000953674316
    4. '____' → logprob: -18.25
    5. '___' → logprob: -18.25
    6. '__[' → logprob: -18.5
    7. ' ==' → logprob: -18.625
    8. '__('' → logprob: -18.75
    9. '__
' → logprob: -18.75
    10. '__
' → logprob: -19.0

Token 461: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00011999329581158236
    2. '==' → logprob: -9.125120162963867
    3. ' ==' → logprob: -12.000120162963867
    4. '___' → logprob: -13.375120162963867
    5. '____' → logprob: -13.750120162963867
    6. '=="' → logprob: -13.750120162963867
    7. '__.__' → logprob: -14.500120162963867
    8. '_' → logprob: -15.500120162963867
    9. '=='' → logprob: -16.000120162963867
    10. '__
' → logprob: -16.875120162963867

Token 462: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3133510947227478
    2. ''' → logprob: -1.3133511543273926
    3. ' "__' → logprob: -9.563350677490234
    4. ' '__' → logprob: -11.188350677490234
    5. '__' → logprob: -12.188350677490234
    6. ''"' → logprob: -17.188350677490234
    7. '('__' → logprob: -17.438350677490234
    8. '("__' → logprob: -17.688350677490234
    9. '"'' → logprob: -18.063350677490234
    10. '"name' → logprob: -18.563350677490234

Token 463: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.8624639324116288e-06
    2. 'name' → logprob: -13.250001907348633
    3. '_main' → logprob: -16.875001907348633
    4. '__' → logprob: -18.000001907348633
    5. ' main' → logprob: -20.000001907348633
    6. 'm' → logprob: -21.375001907348633
    7. '	main' → logprob: -21.375001907348633
    8. 'ma' → logprob: -21.750001907348633
    9. 'maine' → logprob: -22.250001907348633
    10. 'mai' → logprob: -23.375001907348633

Token 464: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0024781543761491776
    2. '__' → logprob: -6.002478122711182
    3. '__":
' → logprob: -13.37747859954834
    4. '_' → logprob: -14.37747859954834
    5. '':
' → logprob: -15.25247859954834
    6. '__:' → logprob: -16.252477645874023
    7. '':' → logprob: -17.502477645874023
    8. '___' → logprob: -17.627477645874023
    9. ''' → logprob: -18.377477645874023
    10. '('__' → logprob: -19.002477645874023

Token 465: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4729393720626831
    2. 'main' → logprob: -1.097939372062683
    3. '   ' → logprob: -3.9729394912719727
    4. '__' → logprob: -4.097939491271973
    5. '	main' → logprob: -5.597939491271973
    6. ' __' → logprob: -5.972939491271973
    7. ''' → logprob: -7.847939491271973
    8. '_main' → logprob: -7.972939491271973
    9. ' '__' → logprob: -8.222939491271973
    10. '__':
' → logprob: -9.597939491271973

Token 466: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '	main' → logprob: -23.25
    4. '_main' → logprob: -25.875
    5. '.main' → logprob: -27.125
    6. '(main' → logprob: -27.375
    7. '   ' → logprob: -27.625
    8. 'Main' → logprob: -28.375
    9. '/main' → logprob: -30.125
    10. '__' → logprob: -30.625

Token 467: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 465
Tokens correctement prédits (1ère position, stricte): 160
Tokens correctement prédits (1ère position, avec adaptation): 171
Tokens correctement prédits (top 10): 340
Précision stricte (1ère position): 34.41%
Précision adaptée (1ère position): 36.77%
Précision (top 10): 73.12%
================================================================================
