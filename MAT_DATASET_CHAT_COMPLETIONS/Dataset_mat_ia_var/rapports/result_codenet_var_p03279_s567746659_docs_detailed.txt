================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from bisect import bisect_left

# Définition de la constante du modulo
MOD = 10**9 + 7

# Préparation du buffer de lecture rapide depuis l'entrée standard (stdin)
read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline
readlines = sys.stdin.buffer.readlines

# Lecture des dimensions : N (taille de X), M (taille de Y)
N, M = map(int, readline().split())
# Lecture du tableau des valeurs X (taille N)
X = list(map(int, readline().split()))
# Lecture du tableau des valeurs Y (taille M)
Y = list(map(int, readline().split()))

# --- Début du prétraitement des intervalles ---
L = []  # Liste des décalages à gauche
R = []  # Liste des décalages à droite (servira pour la coordinate compression)
for x in X:
    # Recherche de la position d'insertion de x dans Y (liste triée)
    i = bisect_left(Y, x)
    # On considère seulement les éléments x strictement encadrés dans Y
    if i in [0, M]:
        continue
    # On récupère les deux bornes d'encadrement entourant x dans Y
    y0, y1 = Y[i-1:i+1]
    # On ajoute la différence (écart) à gauche et à droite dans L et R
    L.append(y0 - x)
    R.append(y1 - x)

# --- Début de la compression des coordonnées (coordinate compression) sur R ---
Rtoi = {val: idx for idx, val in enumerate(sorted(set(R)), 1)}
# Remplacement des valeurs originales de R par leurs indices compressés
R = [Rtoi[r] for r in R]

# Cas particulier : aucun intervalle valide trouvé, on retourne 1 comme résultat
if len(R) == 0:
    print(1)
    exit()

"""
Idée générale :
- On veut compter de combien de façons on peut sélectionner des sous-intervalles selon certains critères.
- Pour cela, on ordonne les intervalles (L, R) et on construit une DP (programmation dynamique) sur R.
- On utilise une Binary Indexed Tree (Fenwick Tree, BIT) pour optimiser le calcul de la DP des sous-intervalles.
"""

class BIT:
    """
    Binary Indexed Tree (Fenwick Tree) permettant de réaliser
    efficacement les opérations de préfixes et d'ajouts.

    Attributs
    ----------
    size : int
        La taille maximale de l'arbre (+1 car l'indice 0 n'est pas utilisé).
    tree : list of int
        L'arbre des préfixes.
    """
    def __init__(self, max_n):
        """
        Initialise l'arbre BIT.

        Paramètres
        -----------
        max_n : int
            L'indice maximal géré par l'arbre (doit correspondre au max des indices compressés sur R).
        """
        self.size = max_n + 1    # taille du tableau BIT (indice 0 non utilisé)
        self.tree = [0] * self.size

    def get_sum(self, i):
        """
        Calcule la somme partielle de 1 à i dans l'arbre.

        Paramètres
        -----------
        i : int
            L'indice jusqu'où on souhaite calculer la somme préfixe.

        Retourne
        --------
        s : int
            La somme totale des éléments de 1 à i.
        """
        s = 0
        while i:
            s += self.tree[i]
            i -= i & -i   # Descend à l'indice parent du BIT
        return s

    def add(self, i, x):
        """
        Incrémente la valeur à l'indice i de l'arbre par x.

        Paramètres
        ----------
        i : int
            Indice auquel ajouter la valeur (doit être >= 1).
        x : int
            Valeur à ajouter.
        """
        while i < self.size:
            self.tree[i] += x
            i += i & -i   # Monte à l'indice suivant du BIT

# Initialisation de la Binary Indexed Tree pour le DP
dp = BIT(max_n=max(R))

# On traite chaque intervalle (L, R) unique, par L décroissant (ordre reverse)
for _, r in sorted(set(zip(L, R)), reverse=True):
    # Calcul du nombre de façons de constituer une suite finissant avant r
    x = dp.get_sum(r - 1) + 1    # +1 pour compter l'intervalle actuel lui-même
    x %= MOD
    dp.add(r, x)                 # On ajoute cette valeur à la position r

# Le résultat final est la somme de toutes les façons de finir (tous les r) + 1
answer = 1 + dp.get_sum(max(R))
answer %= MOD
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00688101164996624
    2. 'os' → logprob: -5.756881237030029
    3. ' math' → logprob: -6.881881237030029
    4. ' collections' → logprob: -7.256881237030029
    5. ' pathlib' → logprob: -7.756881237030029
    6. ' ' → logprob: -8.131880760192871
    7. ' typing' → logprob: -8.131880760192871
    8. ' datetime' → logprob: -9.006880760192871
    9. 'collections' → logprob: -9.256880760192871
    10. ' Py' → logprob: -9.256880760192871

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.15310683415737e-05
    2. 'e' → logprob: -11.875021934509277
    3. 'ectl' → logprob: -12.500021934509277
    4. 'ector' → logprob: -12.625021934509277
    5. 'ec' → logprob: -13.000021934509277
    6. 'ected' → logprob: -13.250021934509277
    7. 'ection' → logprob: -14.125021934509277
    8. 'ections' → logprob: -14.375021934509277
    9. 'ects' → logprob: -14.625021934509277
    10. 'import' → logprob: -15.000021934509277

Token 6: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02976854331791401
    2. 'import' → logprob: -3.529768466949463
    3. '_import' → logprob: -11.779768943786621
    4. '	import' → logprob: -12.404768943786621
    5. ' ' → logprob: -12.779768943786621
    6. 'ort' → logprob: -13.654768943786621
    7. ' ' → logprob: -14.029768943786621
    8. ' importar' → logprob: -15.154768943786621
    9. '<|end|>' → logprob: -15.904768943786621
    10. '```' → logprob: -16.029767990112305

Token 7: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.5893258452415466
    2. 'bis' → logprob: -0.8393258452415466
    3. 'ins' → logprob: -4.339325904846191
    4. ' ins' → logprob: -8.339325904846191
    5. 'b' → logprob: -11.839325904846191
    6. '```' → logprob: -13.464325904846191
    7. '_ins' → logprob: -13.589325904846191
    8. 'import' → logprob: -14.214325904846191
    9. 'Bis' → logprob: -14.964325904846191
    10. '*' → logprob: -15.089325904846191

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.00018923594325315207
    2. 'e' → logprob: -8.625188827514648
    3. 'ec' → logprob: -11.875188827514648
    4. 'ectl' → logprob: -14.375188827514648
    5. '```' → logprob: -14.625188827514648
    6. 'ected' → logprob: -14.750188827514648
    7. '{' → logprob: -15.625188827514648
    8. '#' → logprob: -16.00018882751465
    9. '\' → logprob: -16.00018882751465
    10. 'ection' → logprob: -16.12518882751465

Token 9: '_left' (ID: 22189)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40932849049568176
    2. '.' → logprob: -1.7843284606933594
    3. '(' → logprob: -2.0343284606933594
    4. 'import' → logprob: -4.159328460693359
    5. ' ' → logprob: -5.409328460693359
    6. '```' → logprob: -6.284328460693359
    7. ' (' → logprob: -6.409328460693359
    8. '_left' → logprob: -6.659328460693359
    9. ' import' → logprob: -6.659328460693359
    10. ',' → logprob: -6.909328460693359

Token 10: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5389789342880249
    2. '
' → logprob: -1.163978934288025
    3. 'import' → logprob: -3.1639790534973145
    4. '```' → logprob: -4.0389790534973145
    5. '\n' → logprob: -4.1639790534973145
    6. '' → logprob: -4.5389790534973145
    7. '\' → logprob: -5.2889790534973145
    8. ',' → logprob: -5.7889790534973145
    9. '
' → logprob: -6.5389790534973145
    10. '


' → logprob: -6.6639790534973145

Token 11: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18118871748447418
    2. '```' → logprob: -2.6811888217926025
    3. '
' → logprob: -3.8061888217926025
    4. '

' → logprob: -3.9311888217926025
    5. '\' → logprob: -4.056188583374023
    6. '\n' → logprob: -4.431188583374023
    7. 'import' → logprob: -4.806188583374023
    8. '`' → logprob: -5.056188583374023
    9. '#' → logprob: -6.431188583374023
    10. ',' → logprob: -6.431188583374023

Token 12: ' Dé' (ID: 27247)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6345182657241821
    2. 'def' → logprob: -1.7595182657241821
    3. ' ' → logprob: -2.3845181465148926
    4. ' #' → logprob: -2.8845181465148926
    5. ' 

' → logprob: -3.0095181465148926
    6. ' 
' → logprob: -4.259518146514893
    7. 'd' → logprob: -4.384518146514893
    8. ' de' → logprob: -5.009518146514893
    9. ' class' → logprob: -5.134518146514893
    10. '#' → logprob: -5.134518146514893

Token 13: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0238962322473526
    2. 'fi' → logprob: -3.7738962173461914
    3. 'fin' → logprob: -8.273896217346191
    4. 'fen' → logprob: -9.023896217346191
    5. 'veloppement' → logprob: -10.148896217346191
    6. '#' → logprob: -10.898896217346191
    7. '	f' → logprob: -11.148896217346191
    8. '
' → logprob: -11.273896217346191
    9. 'fec' → logprob: -11.273896217346191
    10. '

' → logprob: -11.523896217346191

Token 14: 'ition' (ID: 868)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.41155534982681274
    2. 'ition' → logprob: -1.161555290222168
    3. 'ti' → logprob: -4.661555290222168
    4. 't' → logprob: -5.286555290222168
    5. 'ir' → logprob: -5.661555290222168
    6. 'it' → logprob: -6.036555290222168
    7. 'e' → logprob: -6.911555290222168
    8. 'inition' → logprob: -7.036555290222168
    9. 'tion' → logprob: -7.161555290222168
    10. 'import' → logprob: -8.536555290222168

Token 15: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7389146089553833
    2. ' d' → logprob: -1.2389146089553833
    3. ' ' → logprob: -1.4889146089553833
    4. ' of' → logprob: -6.363914489746094
    5. '_' → logprob: -6.488914489746094
    6. 'de' → logprob: -7.113914489746094
    7. ' des' → logprob: -7.238914489746094
    8. 'd' → logprob: -7.363914489746094
    9. ' ' → logprob: -7.363914489746094
    10. 'def' → logprob: -7.613914489746094

Token 16: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.023338651284575462
    2. ' l' → logprob: -4.398338794708252
    3. 'la' → logprob: -5.148338794708252
    4. ' main' → logprob: -6.148338794708252
    5. ' a' → logprob: -6.898338794708252
    6. ' the' → logprob: -7.773338794708252
    7. 'l' → logprob: -7.898338794708252
    8. 'def' → logprob: -8.648338317871094
    9. ' sorted' → logprob: -9.023338317871094
    10. ' ' → logprob: -9.398338317871094

Token 17: ' constante' (ID: 49652)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7732709646224976
    2. 'def' → logprob: -0.8982709646224976
    3. 'classe' → logprob: -2.523271083831787
    4. 'main' → logprob: -4.648271083831787
    5. 'fonction' → logprob: -4.898271083831787
    6. ' class' → logprob: -5.398271083831787
    7. 'liste' → logprob: -5.898271083831787
    8. 'f' → logprob: -6.148271083831787
    9. 's' → logprob: -6.398271083831787
    10. ' main' → logprob: -6.523271083831787

Token 18: ' du' (ID: 1462)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.19860543310642242
    2. 'S' → logprob: -2.698605537414551
    3. 'N' → logprob: -3.323605537414551
    4. ' MAX' → logprob: -3.823605537414551
    5. ' ' → logprob: -4.573605537414551
    6. 'SPACE' → logprob: -5.198605537414551
    7. '_MAX' → logprob: -5.573605537414551
    8. 'PI' → logprob: -5.948605537414551
    9. ':' → logprob: -5.948605537414551
    10. 'A' → logprob: -5.948605537414551

Token 19: ' modulo' (ID: 112372)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.8990819454193115
    2. 'tri' → logprob: -2.5240819454193115
    3. 'TABLE' → logprob: -2.5240819454193115
    4. 'T' → logprob: -2.6490819454193115
    5. 'pro' → logprob: -2.7740819454193115
    6. 'nombre' → logprob: -3.3990819454193115
    7. 'se' → logprob: -3.5240819454193115
    8. 's' → logprob: -3.7740819454193115
    9. 'point' → logprob: -4.524082183837891
    10. 'S' → logprob: -4.649082183837891

Token 20: '
' (ID: 198)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.18235979974269867
    2. ' :' → logprob: -2.5573596954345703
    3. ' MOD' → logprob: -2.6823596954345703
    4. ':' → logprob: -5.05735969543457
    5. 'M' → logprob: -5.43235969543457
    6. '_MOD' → logprob: -5.55735969543457
    7. ' ' → logprob: -5.80735969543457
    8. '`' → logprob: -7.68235969543457
    9. '```' → logprob: -7.68235969543457
    10. '_' → logprob: -8.05735969543457

Token 21: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.007587933447211981
    2. ' MOD' → logprob: -5.007587909698486
    3. ' ' → logprob: -7.507587909698486
    4. 'M' → logprob: -8.757588386535645
    5. '_MOD' → logprob: -9.382588386535645
    6. 'MD' → logprob: -11.257588386535645
    7. 'mod' → logprob: -11.632588386535645
    8. ':' → logprob: -11.882588386535645
    9. '```' → logprob: -12.007588386535645
    10. '_' → logprob: -12.132588386535645

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001175343873910606
    2. '=' → logprob: -6.751175403594971
    3. ' ' → logprob: -12.376174926757812
    4. ' =
' → logprob: -14.876174926757812
    5. '_' → logprob: -15.001174926757812
    6. ' =)' → logprob: -16.751174926757812
    7. ' ' → logprob: -17.126174926757812
    8. ',' → logprob: -17.501174926757812
    9. '  ' → logprob: -17.626174926757812
    10. ' =
' → logprob: -17.751174926757812

Token 23: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.28164464235305786
    2. ' ' → logprob: -1.531644582748413
    3. '100' → logprob: -3.531644582748413
    4. '1' → logprob: -11.156644821166992
    5. '998' → logprob: -12.031644821166992
    6. 'int' → logprob: -14.531644821166992
    7. ' ' → logprob: -15.281644821166992
    8. '123' → logprob: -16.281644821166992
    9. ' (' → logprob: -16.406644821166992
    10. '```' → logprob: -16.531644821166992

Token 24: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07896844297647476
    2. '100' → logprob: -2.5789685249328613
    3. '1' → logprob: -10.453968048095703
    4. '998' → logprob: -10.453968048095703
    5. ' ' → logprob: -10.953968048095703
    6. 'int' → logprob: -12.828968048095703
    7. '```' → logprob: -15.078968048095703
    8. '(' → logprob: -15.828968048095703
    9. '(int' → logprob: -15.953968048095703
    10. '123' → logprob: -16.078968048095703

Token 25: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4789711833000183
    2. '9' → logprob: -0.9789711833000183
    3. '09' → logprob: -6.353971004486084
    4. '000' → logprob: -6.353971004486084
    5. '7' → logprob: -6.728971004486084
    6. ' **' → logprob: -9.978971481323242
    7. '00' → logprob: -10.353971481323242
    8. '007' → logprob: -10.478971481323242
    9. '07' → logprob: -10.603971481323242
    10. '009' → logprob: -10.603971481323242

Token 26: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '09' → logprob: -14.75
    3. '```' → logprob: -17.625
    4. ' ' → logprob: -19.25
    5. '10' → logprob: -19.875
    6. '+' → logprob: -21.125
    7. '``' → logprob: -21.125
    8. '   ' → logprob: -21.375
    9. '18' → logprob: -21.875
    10. '９' → logprob: -22.0

Token 27: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008392847958020866
    2. ' +' → logprob: -7.1258392333984375
    3. '7' → logprob: -10.500839233398438
    4. '+
' → logprob: -12.250839233398438
    5. '+

' → logprob: -13.250839233398438
    6. '＋' → logprob: -15.625839233398438
    7. ' +
' → logprob: -15.875839233398438
    8. '```' → logprob: -16.625839233398438
    9. '+</' → logprob: -17.000839233398438
    10. ' ' → logprob: -17.125839233398438

Token 28: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '+' → logprob: -17.125
    4. '```' → logprob: -18.125
    5. '07' → logprob: -19.25
    6. '9' → logprob: -19.875
    7. '   ' → logprob: -20.3125
    8. '' → logprob: -21.25
    9. '  ' → logprob: -21.6875
    10. '67' → logprob: -21.8125

Token 29: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.25
    3. ' ' → logprob: -19.875
    4. '```' → logprob: -19.875
    5. '07' → logprob: -20.25
    6. '9' → logprob: -22.625
    7. '۷' → logprob: -22.8125
    8. '   ' → logprob: -22.8125
    9. '' → logprob: -23.0
    10. '٧' → logprob: -23.0

Token 30: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.016360903158783913
    2. '
' → logprob: -4.141360759735107
    3. '


' → logprob: -9.516361236572266
    4. '
' → logprob: -9.641361236572266
    5. 'def' → logprob: -9.766361236572266
    6. '' → logprob: -9.766361236572266
    7. '```' → logprob: -11.266361236572266
    8. ' 

' → logprob: -11.391361236572266
    9. '\n' → logprob: -11.391361236572266
    10. '\' → logprob: -11.516361236572266

Token 31: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.24794983863830566
    2. '
' → logprob: -1.8729498386383057
    3. 'def' → logprob: -2.7479498386383057
    4. '```' → logprob: -7.247949600219727
    5. '#' → logprob: -7.747949600219727
    6. '
' → logprob: -7.872949600219727
    7. 'class' → logprob: -8.872949600219727
    8. '' → logprob: -9.997949600219727
    9. '\' → logprob: -10.372949600219727
    10. '\n' → logprob: -10.497949600219727

Token 32: ' Pré' (ID: 86400)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12231418490409851
    2. ' def' → logprob: -2.497314214706421
    3. 'n' → logprob: -4.622313976287842
    4. ' n' → logprob: -5.122313976287842
    5. 'input' → logprob: -5.122313976287842
    6. ' input' → logprob: -5.122313976287842
    7. '#' → logprob: -6.247313976287842
    8. 'class' → logprob: -6.997313976287842
    9. 'import' → logprob: -7.497313976287842
    10. ' N' → logprob: -8.122314453125

Token 33: 'paration' (ID: 27466)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.36361202597618103
    2. 'paration' → logprob: -1.4886120557785034
    3. 'cision' → logprob: -3.113611936569214
    4. 'c' → logprob: -4.738612174987793
    5. 'vision' → logprob: -5.113612174987793
    6. 'sent' → logprob: -5.613612174987793
    7. 'vention' → logprob: -6.363612174987793
    8. 'servation' → logprob: -6.613612174987793
    9. '_c' → logprob: -6.738612174987793
    10. 'cis' → logprob: -6.863612174987793

Token 34: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.543823778629303
    2. ' de' → logprob: -1.5438237190246582
    3. ' ' → logprob: -2.293823719024658
    4. 'des' → logprob: -3.293823719024658
    5. ' d' → logprob: -3.543823719024658
    6. 'de' → logprob: -4.918823719024658
    7. 'def' → logprob: -5.043823719024658
    8. 'd' → logprob: -5.168823719024658
    9. ' of' → logprob: -5.543823719024658
    10. ' du' → logprob: -5.918823719024658

Token 35: ' buffer' (ID: 8573)
  Prédit: ' tableau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -0.8552082777023315
    2. ' code' → logprob: -1.4802082777023315
    3. 's' → logprob: -2.730208396911621
    4. 'dp' → logprob: -2.980208396911621
    5. 'data' → logprob: -3.480208396911621
    6. ' table' → logprob: -3.730208396911621
    7. ' input' → logprob: -3.730208396911621
    8. ' dp' → logprob: -4.105208396911621
    9. '_' → logprob: -4.105208396911621
    10. ' terrain' → logprob: -4.230208396911621

Token 36: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22907884418964386
    2. ' ' → logprob: -2.354078769683838
    3. '=' → logprob: -3.104078769683838
    4. '_' → logprob: -3.229078769683838
    5. ',' → logprob: -5.229078769683838
    6. 'input' → logprob: -5.479078769683838
    7. 'import' → logprob: -5.729078769683838
    8. '_input' → logprob: -5.979078769683838
    9. 's' → logprob: -6.104078769683838
    10. '=sys' → logprob: -6.729078769683838

Token 37: ' lecture' (ID: 31993)
  Prédit: ' sortie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sortie' → logprob: -0.6243982911109924
    2. ' lecture' → logprob: -1.4993982315063477
    3. 'lecture' → logprob: -2.1243982315063477
    4. 'entrée' → logprob: -2.8743982315063477
    5. ' sais' → logprob: -4.749398231506348
    6. 's' → logprob: -4.999398231506348
    7. 'sys' → logprob: -5.124398231506348
    8. 'input' → logprob: -5.124398231506348
    9. 'sort' → logprob: -5.374398231506348
    10. ' input' → logprob: -5.499398231506348

Token 38: ' rapide' (ID: 44887)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6343989372253418
    2. '_' → logprob: -2.009398937225342
    3. 'data' → logprob: -2.634398937225342
    4. 'f' → logprob: -2.884398937225342
    5. '_input' → logprob: -3.259398937225342
    6. 'stdin' → logprob: -3.384398937225342
    7. 'buffer' → logprob: -3.384398937225342
    8. 'import' → logprob: -3.634398937225342
    9. 'sys' → logprob: -3.884398937225342
    10. ' input' → logprob: -4.134398937225342

Token 39: ' depuis' (ID: 16277)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8529869914054871
    2. '_' → logprob: -2.102987051010132
    3. 'import' → logprob: -2.102987051010132
    4. 'sys' → logprob: -2.727987051010132
    5. ' ' → logprob: -3.227987051010132
    6. 'f' → logprob: -3.352987051010132
    7. 'stdin' → logprob: -3.602987051010132
    8. '_input' → logprob: -3.727987051010132
    9. 'data' → logprob: -4.227986812591553
    10. 'buffer' → logprob: -4.352986812591553

Token 40: ' l' (ID: 305)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.11939042806625366
    2. ' stdin' → logprob: -2.7443904876708984
    3. 'sys' → logprob: -3.3693904876708984
    4. 'stdin' → logprob: -5.119390487670898
    5. ' l' → logprob: -5.244390487670898
    6. 'l' → logprob: -6.369390487670898
    7. ' input' → logprob: -8.369390487670898
    8. '=sys' → logprob: -8.744390487670898
    9. ' standard' → logprob: -8.994390487670898
    10. ' la' → logprob: -9.369390487670898

Token 41: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.035003662109375
    2. '_' → logprob: -1.785003662109375
    3. ''entrée' → logprob: -2.035003662109375
    4. 'a' → logprob: -2.535003662109375
    5. 'stdin' → logprob: -2.535003662109375
    6. 'sys' → logprob: -2.660003662109375
    7. 'input' → logprob: -2.910003662109375
    8. ''import' → logprob: -4.160003662109375
    9. '=sys' → logprob: -4.910003662109375
    10. '_input' → logprob: -5.160003662109375

Token 42: ' standard' (ID: 7024)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.27580663561820984
    2. 'sys' → logprob: -2.4008066654205322
    3. 'import' → logprob: -3.1508066654205322
    4. '_' → logprob: -3.5258066654205322
    5. 'stdin' → logprob: -3.6508066654205322
    6. '_input' → logprob: -4.400806427001953
    7. ' input' → logprob: -4.400806427001953
    8. 'buffer' → logprob: -4.650806427001953
    9. '=sys' → logprob: -4.900806427001953
    10. ' sys' → logprob: -6.150806427001953

Token 43: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08739756792783737
    2. 'sys' → logprob: -3.087397575378418
    3. 'import' → logprob: -4.087397575378418
    4. '_input' → logprob: -4.962397575378418
    5. 'stdin' → logprob: -5.462397575378418
    6. 'buffer' → logprob: -5.837397575378418
    7. 'data' → logprob: -6.462397575378418
    8. '_' → logprob: -6.837397575378418
    9. '=sys' → logprob: -6.837397575378418
    10. 'in' → logprob: -7.587397575378418

Token 44: 'stdin' (ID: 132953)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20804685354232788
    2. ')' → logprob: -1.8330469131469727
    3. ' sys' → logprob: -3.8330469131469727
    4. 'import' → logprob: -6.333046913146973
    5. 'input' → logprob: -6.458046913146973
    6. 'stdin' → logprob: -6.833046913146973
    7. '=sys' → logprob: -7.083046913146973
    8. ' )' → logprob: -8.333046913146973
    9. '(sys' → logprob: -8.958046913146973
    10. 's' → logprob: -8.958046913146973

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041125001735053957
    2. ' )' → logprob: -8.125411033630371
    3. 'import' → logprob: -10.125411033630371
    4. '`)' → logprob: -10.375411033630371
    5. ')
' → logprob: -10.750411033630371
    6. '#' → logprob: -12.250411033630371
    7. 'input' → logprob: -12.875411033630371
    8. ',' → logprob: -13.375411033630371
    9. ')`' → logprob: -13.375411033630371
    10. '')' → logprob: -13.500411033630371

Token 46: 'read' (ID: 1293)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.025166595354676247
    2. 'import' → logprob: -4.0251665115356445
    3. 'sys' → logprob: -5.4001665115356445
    4. 'stdin' → logprob: -6.9001665115356445
    5. 'data' → logprob: -7.6501665115356445
    6. 'buffer' → logprob: -8.025166511535645
    7. '_input' → logprob: -8.150166511535645
    8. ' input' → logprob: -9.400166511535645
    9. '```' → logprob: -9.525166511535645
    10. 'reader' → logprob: -9.900166511535645

Token 47: ' =' (ID: 314)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5689770579338074
    2. ' =' → logprob: -1.0689771175384521
    3. '=' → logprob: -2.943977117538452
    4. '_line' → logprob: -3.943977117538452
    5. '()' → logprob: -4.818976879119873
    6. '_input' → logprob: -6.068976879119873
    7. '_' → logprob: -6.068976879119873
    8. '_data' → logprob: -6.193976879119873
    9. '=sys' → logprob: -7.068976879119873
    10. 'lines' → logprob: -7.318976879119873

Token 48: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.47420069575309753
    2. ' sys' → logprob: -0.9742007255554199
    3. 'input' → logprob: -9.599200248718262
    4. '=sys' → logprob: -10.474200248718262
    5. '	sys' → logprob: -10.974200248718262
    6. '(sys' → logprob: -12.599200248718262
    7. ' input' → logprob: -12.724200248718262
    8. 'stdin' → logprob: -12.974200248718262
    9. 'lambda' → logprob: -13.474200248718262
    10. ' lambda' → logprob: -15.724200248718262

Token 49: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00014132341311778873
    2. '.stdout' → logprob: -9.250141143798828
    3. '.' → logprob: -10.250141143798828
    4. '.readline' → logprob: -11.875141143798828
    5. '.std' → logprob: -13.625141143798828
    6. '.argv' → logprob: -14.250141143798828
    7. '.read' → logprob: -14.375141143798828
    8. '.stderr' → logprob: -15.625141143798828
    9. ' .' → logprob: -16.000141143798828
    10. '.input' → logprob: -16.375141143798828

Token 50: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008820433169603348
    2. '.read' → logprob: -4.758820533752441
    3. '.buffer' → logprob: -8.758820533752441
    4. '.' → logprob: -10.008820533752441
    5. '.readlines' → logprob: -12.758820533752441
    6. 'read' → logprob: -14.383820533752441
    7. '.write' → logprob: -16.008819580078125
    8. 'buffer' → logprob: -16.258819580078125
    9. ' .' → logprob: -16.633819580078125
    10. '.Read' → logprob: -17.258819580078125

Token 51: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006395249627530575
    2. '.read' → logprob: -5.50639533996582
    3. 'read' → logprob: -6.13139533996582
    4. '_read' → logprob: -9.75639533996582
    5. ' readline' → logprob: -10.00639533996582
    6. '```' → logprob: -11.13139533996582
    7. '.readlines' → logprob: -11.63139533996582
    8. '.' → logprob: -11.63139533996582
    9. 'raw' → logprob: -13.63139533996582
    10. '	read' → logprob: -13.88139533996582

Token 52: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19679100811481476
    2. 'line' → logprob: -1.8217910528182983
    3. '(' → logprob: -5.196791172027588
    4. ')' → logprob: -5.571791172027588
    5. '_line' → logprob: -6.071791172027588
    6. '().' → logprob: -6.696791172027588
    7. 'exact' → logprob: -7.571791172027588
    8. 'ln' → logprob: -7.821791172027588
    9. '```' → logprob: -7.946791172027588
    10. 'ine' → logprob: -8.32179069519043

Token 53: 'read' (ID: 1293)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01124198455363512
    2. '()

' → logprob: -5.386241912841797
    3. 'def' → logprob: -6.011241912841797
    4. '()
' → logprob: -6.136241912841797
    5. '(' → logprob: -7.511241912841797
    6. '()\' → logprob: -7.511241912841797
    7. '
' → logprob: -8.011241912841797
    8. 'data' → logprob: -8.511241912841797
    9. '(
' → logprob: -9.386241912841797
    10. '#' → logprob: -9.761241912841797

Token 54: 'line' (ID: 1137)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017846113070845604
    2. '().' → logprob: -4.14284610748291
    3. 'line' → logprob: -7.14284610748291
    4. '_line' → logprob: -7.89284610748291
    5. '(' → logprob: -8.01784610748291
    6. '()
' → logprob: -9.89284610748291
    7. '()

' → logprob: -9.89284610748291
    8. ' ()' → logprob: -10.14284610748291
    9. '()]' → logprob: -10.26784610748291
    10. 'split' → logprob: -10.51784610748291

Token 55: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28789567947387695
    2. '=' → logprob: -2.037895679473877
    3. ' =' → logprob: -2.412895679473877
    4. 'line' → logprob: -4.037895679473877
    5. '(' → logprob: -5.287895679473877
    6. '_line' → logprob: -6.037895679473877
    7. '.readline' → logprob: -6.162895679473877
    8. ')' → logprob: -7.287895679473877
    9. '().' → logprob: -8.787895202636719
    10. ' ()' → logprob: -8.787895202636719

Token 56: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.018160121515393257
    2. ' sys' → logprob: -4.018160343170166
    3. '=sys' → logprob: -12.268159866333008
    4. '(sys' → logprob: -12.518159866333008
    5. '	sys' → logprob: -13.893159866333008
    6. 'lambda' → logprob: -14.893159866333008
    7. 'input' → logprob: -15.268159866333008
    8. '0' → logprob: -15.768159866333008
    9. '/sys' → logprob: -16.393159866333008
    10. 'read' → logprob: -16.768159866333008

Token 57: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.5044264197349548
    2. '.readline' → logprob: -1.0044264793395996
    3. '.buffer' → logprob: -3.7544264793395996
    4. '.stdout' → logprob: -5.7544264793396
    5. '.' → logprob: -6.2544264793396
    6. '.__' → logprob: -8.004426002502441
    7. 'buffer' → logprob: -8.254426002502441
    8. '.buf' → logprob: -8.379426002502441
    9. 'stdin' → logprob: -8.629426002502441
    10. '.argv' → logprob: -9.379426002502441

Token 58: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.009908369742333889
    2. '.buffer' → logprob: -4.634908199310303
    3. '.' → logprob: -9.509908676147461
    4. 'buffer' → logprob: -9.509908676147461
    5. '.read' → logprob: -13.259908676147461
    6. '.readlines' → logprob: -14.009908676147461
    7. ' .' → logprob: -14.884908676147461
    8. ' buffer' → logprob: -15.259908676147461
    9. '	buffer' → logprob: -15.634908676147461
    10. '_buffer' → logprob: -16.13490867614746

Token 59: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.11092429608106613
    2. ' readline' → logprob: -2.485924243927002
    3. 'line' → logprob: -4.485924243927002
    4. 'read' → logprob: -4.610924243927002
    5. 'getline' → logprob: -7.985924243927002
    6. '1' → logprob: -8.61092472076416
    7. 'rstrip' → logprob: -12.73592472076416
    8. 'newline' → logprob: -13.11092472076416
    9. '```' → logprob: -13.36092472076416
    10. '_read' → logprob: -14.23592472076416

Token 60: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3106876313686371
    2. '
' → logprob: -1.5606876611709595
    3. '

' → logprob: -3.68568754196167
    4. '\n' → logprob: -4.93568754196167
    5. '#' → logprob: -5.18568754196167
    6. '()' → logprob: -5.31068754196167
    7. 'data' → logprob: -5.68568754196167
    8. 'n' → logprob: -5.81068754196167
    9. '(' → logprob: -6.31068754196167
    10. '(n' → logprob: -6.68568754196167

Token 61: 'read' (ID: 1293)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6613193154335022
    2. '

' → logprob: -0.7863193154335022
    3. 'def' → logprob: -3.9113192558288574
    4. '\n' → logprob: -5.161319255828857
    5. 'n' → logprob: -7.661319255828857
    6. '


' → logprob: -7.661319255828857
    7. '\' → logprob: -8.161319732666016
    8. '#' → logprob: -8.286319732666016
    9. '
' → logprob: -8.411319732666016
    10. '```' → logprob: -8.661319732666016

Token 62: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.379925012588501
    2. '=' → logprob: -1.629925012588501
    3. ' =' → logprob: -3.004925012588501
    4. ')' → logprob: -4.504924774169922
    5. 'data' → logprob: -4.504924774169922
    6. '(' → logprob: -5.129924774169922
    7. '_tokens' → logprob: -5.129924774169922
    8. 'split' → logprob: -5.254924774169922
    9. '_data' → logprob: -5.379924774169922
    10. '_lines' → logprob: -5.379924774169922

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.056826937943696976
    2. ' =' → logprob: -2.9318268299102783
    3. '()' → logprob: -7.431827068328857
    4. ')' → logprob: -7.556827068328857
    5. '<|end|>' → logprob: -8.1818265914917
    6. '(' → logprob: -9.0568265914917
    7. '[:]' → logprob: -9.4318265914917
    8. '```' → logprob: -9.4318265914917
    9. 'import' → logprob: -10.1818265914917
    10. '[]' → logprob: -10.4318265914917

Token 64: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.636475493200123e-05
    2. ' sys' → logprob: -9.500076293945312
    3. '(sys' → logprob: -13.625076293945312
    4. '=sys' → logprob: -15.750076293945312
    5. '	sys' → logprob: -17.500076293945312
    6. 'read' → logprob: -17.500076293945312
    7. 's' → logprob: -17.625076293945312
    8. '/sys' → logprob: -18.875076293945312
    9. 'stdin' → logprob: -19.250076293945312
    10. 'lines' → logprob: -20.125076293945312

Token 65: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0666171982884407
    2. '.' → logprob: -2.816617250442505
    3. '.stdout' → logprob: -5.941617012023926
    4. '.readline' → logprob: -7.441617012023926
    5. ' .' → logprob: -7.691617012023926
    6. 'stdin' → logprob: -7.941617012023926
    7. '<|end|>' → logprob: -8.941617012023926
    8. '​.' → logprob: -9.191617012023926
    9. '.stderr' → logprob: -9.566617012023926
    10. '.readlines' → logprob: -10.191617012023926

Token 66: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.7724207043647766
    2. '.buffer' → logprob: -1.1474206447601318
    3. '.readlines' → logprob: -1.5224206447601318
    4. 'buffer' → logprob: -6.772420883178711
    5. '.' → logprob: -7.272420883178711
    6. '.lines' → logprob: -8.772420883178711
    7. '.read' → logprob: -9.397420883178711
    8. 'lines' → logprob: -9.772420883178711
    9. '<|end|>' → logprob: -10.147420883178711
    10. '.stdin' → logprob: -10.272420883178711

Token 67: '.readlines' (ID: 92237)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -2.3319124011322856e-05
    2. '.readlines' → logprob: -10.875022888183594
    3. '.readline' → logprob: -13.000022888183594
    4. 're' → logprob: -14.250022888183594
    5. ' readline' → logprob: -14.625022888183594
    6. 'lines' → logprob: -15.375022888183594
    7. '_read' → logprob: -15.375022888183594
    8. 'rstrip' → logprob: -16.000022888183594
    9. 'raw' → logprob: -16.125022888183594
    10. 'rea' → logprob: -16.375022888183594

Token 68: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11930664628744125
    2. '

' → logprob: -2.2443065643310547
    3. '#' → logprob: -6.369306564331055
    4. '\n' → logprob: -6.494306564331055
    5. 'def' → logprob: -6.494306564331055
    6. '
' → logprob: -7.494306564331055
    7. 'import' → logprob: -8.244306564331055
    8. '```' → logprob: -8.369306564331055
    9. '' → logprob: -8.994306564331055
    10. 'n' → logprob: -9.619306564331055

Token 69: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8549298644065857
    2. '
' → logprob: -0.9799298644065857
    3. '

' → logprob: -2.7299299240112305
    4. '\n' → logprob: -2.7299299240112305
    5. '#' → logprob: -3.4799299240112305
    6. '\' → logprob: -4.2299299240112305
    7. 'n' → logprob: -4.8549299240112305
    8. 'import' → logprob: -5.4799299240112305
    9. '```' → logprob: -5.6049299240112305
    10. 'class' → logprob: -5.8549299240112305

Token 70: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00818687304854393
    2. ' def' → logprob: -5.6331868171691895
    3. 'data' → logprob: -6.1331868171691895
    4. 'input' → logprob: -6.8831868171691895
    5. 'class' → logprob: -7.1331868171691895
    6. '#' → logprob: -8.383187294006348
    7. ' data' → logprob: -8.883187294006348
    8. 'n' → logprob: -9.383187294006348
    9. ' input' → logprob: -9.883187294006348
    10. ' n' → logprob: -10.633187294006348

Token 71: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4531199634075165
    2. ' =' → logprob: -2.078119993209839
    3. '(' → logprob: -2.203119993209839
    4. '=' → logprob: -2.328119993209839
    5. 'data' → logprob: -4.07811975479126
    6. 's' → logprob: -5.57811975479126
    7. 'line' → logprob: -6.32811975479126
    8. '_data' → logprob: -6.70311975479126
    9. 'input' → logprob: -6.82811975479126
    10. '_line' → logprob: -7.07811975479126

Token 72: ' dimensions' (ID: 23995)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.9397479295730591
    2. ' data' → logprob: -1.189747929573059
    3. 'data' → logprob: -1.564747929573059
    4. ' input' → logprob: -3.1897478103637695
    5. 'input' → logprob: -4.1897478103637695
    6. ' inputs' → logprob: -4.5647478103637695
    7. 'inputs' → logprob: -5.0647478103637695
    8. ' ' → logprob: -5.1897478103637695
    9. '_' → logprob: -5.3147478103637695
    10. 'd' → logprob: -5.6897478103637695

Token 73: ' :' (ID: 712)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023082641884684563
    2. '()' → logprob: -5.023082733154297
    3. ' (' → logprob: -5.523082733154297
    4. ',' → logprob: -5.523082733154297
    5. ' =' → logprob: -5.648082733154297
    6. 's' → logprob: -6.023082733154297
    7. '(
' → logprob: -7.523082733154297
    8. 'n' → logprob: -7.648082733154297
    9. '(n' → logprob: -8.648082733154297
    10. '=' → logprob: -9.023082733154297

Token 74: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7013944387435913
    2. ' n' → logprob: -0.7013944387435913
    3. ' H' → logprob: -5.951394557952881
    4. ' h' → logprob: -5.951394557952881
    5. 'h' → logprob: -6.826394557952881
    6. 'H' → logprob: -7.076394557952881
    7. ' N' → logprob: -8.076394081115723
    8. 'N' → logprob: -8.576394081115723
    9. 'L' → logprob: -9.701394081115723
    10. ' L' → logprob: -9.701394081115723

Token 75: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009773443453013897
    2. ' =' → logprob: -5.009773254394531
    3. '=' → logprob: -6.384773254394531
    4. ' ,' → logprob: -7.009773254394531
    5. ',N' → logprob: -8.009773254394531
    6. ',n' → logprob: -9.259773254394531
    7. 's' → logprob: -12.009773254394531
    8. ' ' → logprob: -12.509773254394531
    9. ' and' → logprob: -13.134773254394531
    10. ')' → logprob: -13.259773254394531

Token 76: 'tail' (ID: 20472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022918732836842537
    2. ' ,' → logprob: -4.397918701171875
    3. ')' → logprob: -5.147918701171875
    4. ',)' → logprob: -6.272918701171875
    5. '),' → logprob: -6.772918701171875
    6. 'et' → logprob: -7.647918701171875
    7. ' )' → logprob: -8.397918701171875
    8. ',),' → logprob: -9.022918701171875
    9. 'int' → logprob: -9.147918701171875
    10. ',int' → logprob: -9.397918701171875

Token 77: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -6.539801688631997e-05
    2. 'e' → logprob: -10.250065803527832
    3. 'l' → logprob: -11.500065803527832
    4. 'les' → logprob: -11.500065803527832
    5. '#' → logprob: -12.875065803527832
    6. '_le' → logprob: -13.125065803527832
    7. 'lle' → logprob: -13.500065803527832
    8. '```' → logprob: -14.375065803527832
    9. '1' → logprob: -14.500065803527832
    10. '\' → logprob: -14.750065803527832

Token 78: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2590114176273346
    2. ')' → logprob: -1.8840113878250122
    3. ' ,' → logprob: -3.3840115070343018
    4. ' de' → logprob: -4.509011268615723
    5. ' )' → logprob: -4.509011268615723
    6. ' du' → logprob: -4.634011268615723
    7. 'de' → logprob: -5.884011268615723
    8. 'du' → logprob: -6.009011268615723
    9. '),' → logprob: -6.634011268615723
    10. ' ' → logprob: -6.884011268615723

Token 79: ' X' (ID: 2127)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5257589221000671
    2. 'la' → logprob: -1.525758981704712
    3. ' la' → logprob: -2.025758981704712
    4. ' l' → logprob: -3.275758981704712
    5. ')' → logprob: -4.900758743286133
    6. ' tableau' → logprob: -5.775758743286133
    7. 'table' → logprob: -6.400758743286133
    8. 'array' → logprob: -7.088258743286133
    9. 'le' → logprob: -7.213258743286133
    10. ' ' → logprob: -7.213258743286133

Token 80: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28161901235580444
    2. ')' → logprob: -1.7816190719604492
    3. '),' → logprob: -2.906619071960449
    4. ' ,' → logprob: -4.531619071960449
    5. ' )' → logprob: -5.156619071960449
    6. ',)' → logprob: -5.906619071960449
    7. ' ),' → logprob: -6.031619071960449
    8. ' et' → logprob: -8.65661907196045
    9. ',),' → logprob: -8.90661907196045
    10. ' ' → logprob: -8.90661907196045

Token 81: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.2923857569694519
    2. ' M' → logprob: -1.6673858165740967
    3. 'K' → logprob: -3.0423858165740967
    4. ' K' → logprob: -4.292385578155518
    5. 'Q' → logprob: -6.417385578155518
    6. 'T' → logprob: -7.917385578155518
    7. ' ' → logprob: -8.667386054992676
    8. ' Q' → logprob: -8.667386054992676
    9. 'X' → logprob: -8.792386054992676
    10. 'L' → logprob: -8.917386054992676

Token 82: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5260302424430847
    2. ' =' → logprob: -1.5260303020477295
    3. ' (' → logprob: -1.7760303020477295
    4. '=' → logprob: -4.27603006362915
    5. '(' → logprob: -5.27603006362915
    6. ' ,' → logprob: -6.02603006362915
    7. ' ' → logprob: -7.90103006362915
    8. ')' → logprob: -8.026030540466309
    9. ' et' → logprob: -10.151030540466309
    10. ' and' → logprob: -10.526030540466309

Token 83: 'tail' (ID: 20472)
  Prédit: 'tail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.1935749351978302
    2. 'la' → logprob: -2.193574905395508
    3. 'le' → logprob: -3.443574905395508
    4. ' la' → logprob: -4.443574905395508
    5. ')' → logprob: -5.443574905395508
    6. 'l' → logprob: -5.818574905395508
    7. 'nombre' → logprob: -6.068574905395508
    8. 'len' → logprob: -6.318574905395508
    9. 'N' → logprob: -6.318574905395508
    10. ' le' → logprob: -6.568574905395508

Token 84: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3728525638580322
    2. 'e' → logprob: -1.2478525638580322
    3. 'l' → logprob: -3.9978525638580322
    4. 'a' → logprob: -6.247852325439453
    5. 'd' → logprob: -6.497852325439453
    6. 'lle' → logprob: -7.747852325439453
    7. ')' → logprob: -7.997852325439453
    8. 'u' → logprob: -8.372852325439453
    9. ',' → logprob: -8.372852325439453
    10. '=' → logprob: -8.997852325439453

Token 85: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.009036296978592873
    2. 'de' → logprob: -5.259036064147949
    3. ')' → logprob: -5.884036064147949
    4. ' ' → logprob: -8.13403606414795
    5. ' of' → logprob: -8.13403606414795
    6. ' des' → logprob: -8.75903606414795
    7. ' )' → logprob: -9.50903606414795
    8. ' d' → logprob: -9.75903606414795
    9. ' ' → logprob: -9.75903606414795
    10. 'd' → logprob: -11.50903606414795

Token 86: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.20498153567314148
    2. 'Y' → logprob: -1.7049815654754639
    3. ' ' → logprob: -6.204981327056885
    4. ')' → logprob: -7.454981327056885
    5. ' la' → logprob: -9.329981803894043
    6. ' T' → logprob: -9.329981803894043
    7. ' )' → logprob: -9.329981803894043
    8. 'l' → logprob: -9.579981803894043
    9. ' l' → logprob: -9.767481803894043
    10. 's' → logprob: -9.892481803894043

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004128861241042614
    2. ',' → logprob: -5.629128932952881
    3. ' )' → logprob: -7.629128932952881
    4. '),' → logprob: -10.879128456115723
    5. ',)' → logprob: -12.129128456115723
    6. ' ,' → logprob: -12.254128456115723
    7. '')' → logprob: -13.004128456115723
    8. 'a' → logprob: -13.754128456115723
    9. ' ' → logprob: -13.879128456115723
    10. '")' → logprob: -14.129128456115723

Token 88: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03087104670703411
    2. 'X' → logprob: -4.1558709144592285
    3. 'x' → logprob: -5.1558709144592285
    4. 'n' → logprob: -5.5308709144592285
    5. '
' → logprob: -6.5308709144592285
    6. ' 
' → logprob: -6.7808709144592285
    7. ' N' → logprob: -6.9058709144592285
    8. '\n' → logprob: -7.9058709144592285
    9. ',' → logprob: -8.655871391296387
    10. 'data' → logprob: -8.655871391296387

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000182921823579818
    2. ' ,' → logprob: -8.87518310546875
    3. ',M' → logprob: -10.25018310546875
    4. '=' → logprob: -12.75018310546875
    5. ' =' → logprob: -13.12518310546875
    6. ',N' → logprob: -13.37518310546875
    7. ',Y' → logprob: -15.37518310546875
    8. ',m' → logprob: -16.50018310546875
    9. ' ' → logprob: -16.50018310546875
    10. ',K' → logprob: -16.50018310546875

Token 90: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.3538123071193695
    2. ' ' → logprob: -1.228812336921692
    3. 'M' → logprob: -5.603812217712402
    4. '<|end|>' → logprob: -6.603812217712402
    5. ' ' → logprob: -8.728812217712402
    6. '  ' → logprob: -10.228812217712402
    7. 'space' → logprob: -10.603812217712402
    8. ' =' → logprob: -11.103812217712402
    9. ' ,' → logprob: -11.103812217712402
    10. ' ‌' → logprob: -11.728812217712402

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016214663162827492
    2. '=' → logprob: -4.141214847564697
    3. ',' → logprob: -8.641214370727539
    4. ' ' → logprob: -13.266214370727539
    5. ' ,' → logprob: -14.016214370727539
    6. '=input' → logprob: -15.641214370727539
    7. '=int' → logprob: -15.641214370727539
    8. ')' → logprob: -15.766214370727539
    9. ' =
' → logprob: -15.766214370727539
    10. ' ' → logprob: -16.14121437072754

Token 92: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0020318960305303335
    2. 'map' → logprob: -6.5020318031311035
    3. ' ' → logprob: -7.6270318031311035
    4. ' list' → logprob: -11.252032279968262
    5. ' read' → logprob: -11.377032279968262
    6. ' [' → logprob: -11.377032279968262
    7. ' tuple' → logprob: -13.252032279968262
    8. ' int' → logprob: -14.127032279968262
    9. ' mapa' → logprob: -14.377032279968262
    10. '	map' → logprob: -14.377032279968262

Token 93: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012188084423542023
    2. '(lambda' → logprob: -4.637187957763672
    3. '(int' → logprob: -6.262187957763672
    4. '(str' → logprob: -7.887187957763672
    5. '<|end|>' → logprob: -9.637187957763672
    6. '(
' → logprob: -11.012187957763672
    7. '()' → logprob: -11.262187957763672
    8. '(list' → logprob: -12.012187957763672
    9. '(tuple' → logprob: -12.387187957763672
    10. '(len' → logprob: -12.637187957763672

Token 94: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2602311670780182
    2. ',' → logprob: -1.8852311372756958
    3. '(read' → logprob: -2.7602312564849854
    4. '(sys' → logprob: -4.635231018066406
    5. ')' → logprob: -6.635231018066406
    6. '(),' → logprob: -7.010231018066406
    7. '(int' → logprob: -7.885231018066406
    8. ' ,' → logprob: -8.010231018066406
    9. '(lambda' → logprob: -8.260231018066406
    10. '(input' → logprob: -8.385231018066406

Token 95: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1324237436056137
    2. ' readline' → logprob: -2.5074236392974854
    3. ' read' → logprob: -3.2574236392974854
    4. ')' → logprob: -6.3824238777160645
    5. 'sys' → logprob: -7.1324238777160645
    6. 'input' → logprob: -7.5074238777160645
    7. ' input' → logprob: -8.007423400878906
    8. ' sys' → logprob: -8.132423400878906
    9. '(read' → logprob: -8.382423400878906
    10. ' )' → logprob: -9.382423400878906

Token 96: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5135634541511536
    2. '().' → logprob: -1.0135633945465088
    3. '())' → logprob: -3.263563394546509
    4. '()[' → logprob: -9.26356315612793
    5. ')' → logprob: -9.51356315612793
    6. '(' → logprob: -9.51356315612793
    7. '()
' → logprob: -10.13856315612793
    8. '()]' → logprob: -10.88856315612793
    9. '()+' → logprob: -11.13856315612793
    10. '());' → logprob: -11.13856315612793

Token 97: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.9464797377586365
    2. 'strip' → logprob: -1.1964797973632812
    3. 'rstrip' → logprob: -1.6964797973632812
    4. 'decode' → logprob: -2.0714797973632812
    5. ')' → logprob: -8.696479797363281
    6. '().' → logprob: -10.196479797363281
    7. ' split' → logprob: -10.571479797363281
    8. 'read' → logprob: -10.696479797363281
    9. '```' → logprob: -11.071479797363281
    10. '(split' → logprob: -11.446479797363281

Token 98: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005082341376692057
    2. '()' → logprob: -8.250508308410645
    3. '())' → logprob: -8.500508308410645
    4. '))' → logprob: -10.750508308410645
    5. '(' → logprob: -11.625508308410645
    6. ')`' → logprob: -12.125508308410645
    7. ')
' → logprob: -12.500508308410645
    8. ' )' → logprob: -13.250508308410645
    9. ')\' → logprob: -14.875508308410645
    10. '),' → logprob: -15.250508308410645

Token 99: '#' (ID: 2)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.9883254766464233
    2. '
' → logprob: -0.9883254766464233
    3. '\n' → logprob: -1.7383254766464233
    4. '#' → logprob: -3.738325595855713
    5. ' 
' → logprob: -4.238325595855713
    6. '' → logprob: -4.488325595855713
    7. '\' → logprob: -4.738325595855713
    8. 'newline' → logprob: -5.113325595855713
    9. 'x' → logprob: -5.488325595855713
    10. '  
' → logprob: -5.988325595855713

Token 100: ' Lecture' (ID: 106534)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.019184617325663567
    2. ' X' → logprob: -4.269184589385986
    3. '#' → logprob: -5.644184589385986
    4. ' #' → logprob: -7.394184589385986
    5. 'x' → logprob: -8.269185066223145
    6. 'A' → logprob: -9.019185066223145
    7. 'Y' → logprob: -9.144185066223145
    8. ')' → logprob: -9.144185066223145
    9. ' ' → logprob: -9.644185066223145
    10. 'N' → logprob: -10.269185066223145

Token 101: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16103088855743408
    2. ' des' → logprob: -2.4110307693481445
    3. '()' → logprob: -3.4110307693481445
    4. 'des' → logprob: -4.2860307693481445
    5. '(
' → logprob: -4.9110307693481445
    6. ' (' → logprob: -7.1610307693481445
    7. '(X' → logprob: -7.4110307693481445
    8. ' de' → logprob: -7.5360307693481445
    9. 'de' → logprob: -7.6610307693481445
    10. '(int' → logprob: -7.7860307693481445

Token 102: ' tableau' (ID: 67053)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.09835286438465118
    2. ' X' → logprob: -3.2233529090881348
    3. ' tableau' → logprob: -3.3483529090881348
    4. 's' → logprob: -5.348352909088135
    5. 'x' → logprob: -5.723352909088135
    6. ' code' → logprob: -6.098352909088135
    7. 'Y' → logprob: -6.223352909088135
    8. ' ' → logprob: -7.598352909088135
    9. ' array' → logprob: -7.848352909088135
    10. ' data' → logprob: -7.973352909088135

Token 103: ' des' (ID: 731)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.017889801412820816
    2. ' X' → logprob: -4.392889976501465
    3. '(' → logprob: -5.517889976501465
    4. '(X' → logprob: -7.642889976501465
    5. '()' → logprob: -8.142889976501465
    6. 's' → logprob: -8.642889976501465
    7. ',' → logprob: -9.017889976501465
    8. '(
' → logprob: -9.392889976501465
    9. ' (' → logprob: -10.267889976501465
    10. 'a' → logprob: -10.892889976501465

Token 104: ' valeurs' (ID: 73668)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.4121112823486328
    2. ' X' → logprob: -1.5371112823486328
    3. 'positions' → logprob: -3.787111282348633
    4. 'val' → logprob: -3.787111282348633
    5. 'x' → logprob: -4.662111282348633
    6. ' valeurs' → logprob: -4.662111282348633
    7. ' positions' → logprob: -4.912111282348633
    8. 'indices' → logprob: -5.162111282348633
    9. 'ent' → logprob: -5.287111282348633
    10. 'élé' → logprob: -5.537111282348633

Token 105: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07413826882839203
    2. ' X' → logprob: -2.8241381645202637
    3. ',' → logprob: -4.574138164520264
    4. ' ,' → logprob: -8.199138641357422
    5. '(' → logprob: -8.449138641357422
    6. ' (' → logprob: -8.449138641357422
    7. ' ' → logprob: -8.824138641357422
    8. ')' → logprob: -8.824138641357422
    9. ' =' → logprob: -8.949138641357422
    10. 's' → logprob: -9.074138641357422

Token 106: ' (' (ID: 350)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1476954221725464
    2. ' X' → logprob: -2.772695541381836
    3. ' =' → logprob: -3.522695541381836
    4. ',' → logprob: -4.022695541381836
    5. 's' → logprob: -5.272695541381836
    6. '[' → logprob: -5.522695541381836
    7. 'x' → logprob: -5.647695541381836
    8. ' 
' → logprob: -6.022695541381836
    9. ' ' → logprob: -6.022695541381836
    10. '
' → logprob: -6.522695541381836

Token 107: 'tail' (ID: 20472)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.38644281029701233
    2. ')' → logprob: -2.0114428997039795
    3. 'int' → logprob: -2.2614428997039795
    4. 'ints' → logprob: -3.8864428997039795
    5. '[int' → logprob: -4.0114426612854
    6. ' list' → logprob: -4.2614426612854
    7. ' integers' → logprob: -5.1364426612854
    8. ' )' → logprob: -5.8864426612854
    9. '):' → logprob: -6.1364426612854
    10. '
' → logprob: -6.2614426612854

Token 108: 'le' (ID: 282)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.24651503562927246
    2. 'e' → logprob: -2.9965150356292725
    3. 'ist' → logprob: -2.9965150356292725
    4. 'iste' → logprob: -3.6215150356292725
    5. '[int' → logprob: -3.8715150356292725
    6. '[' → logprob: -4.246515274047852
    7. 'ists' → logprob: -5.621515274047852
    8. 'ines' → logprob: -5.621515274047852
    9. 'a' → logprob: -5.621515274047852
    10. 'b' → logprob: -5.746515274047852

Token 109: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8603512644767761
    2. ' N' → logprob: -1.360351324081421
    3. ')' → logprob: -1.610351324081421
    4. ' de' → logprob: -2.735351324081421
    5. 'de' → logprob: -3.735351324081421
    6. ' )' → logprob: -4.610351085662842
    7. '=' → logprob: -4.735351085662842
    8. ' ' → logprob: -5.235351085662842
    9. 'X' → logprob: -6.360351085662842
    10. '=N' → logprob: -6.360351085662842

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016563729150220752
    2. ')
' → logprob: -9.375165939331055
    3. ' )' → logprob: -10.000165939331055
    4. ',' → logprob: -11.375165939331055
    5. '):' → logprob: -11.500165939331055
    6. '),' → logprob: -12.500165939331055
    7. ')
' → logprob: -13.500165939331055
    8. '=' → logprob: -13.625165939331055
    9. ').' → logprob: -13.625165939331055
    10. '))' → logprob: -14.000165939331055

Token 111: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.015298194251954556
    2. ' X' → logprob: -4.265298366546631
    3. 'x' → logprob: -7.015298366546631
    4. '
' → logprob: -8.890297889709473
    5. ' 
' → logprob: -10.265297889709473
    6. ')' → logprob: -10.515297889709473
    7. 'A' → logprob: -12.265297889709473
    8. '`' → logprob: -12.640297889709473
    9. 'a' → logprob: -12.890297889709473
    10. 'Xs' → logprob: -12.890297889709473

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026326768100261688
    2. '=' → logprob: -3.6513266563415527
    3. ',' → logprob: -10.776327133178711
    4. '.' → logprob: -14.026327133178711
    5. ')' → logprob: -14.026327133178711
    6. 's' → logprob: -14.151327133178711
    7. ' ' → logprob: -14.151327133178711
    8. ' ' → logprob: -14.276327133178711
    9. ' ,' → logprob: -14.401327133178711
    10. ' =
' → logprob: -14.651327133178711

Token 113: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.020549828186631203
    2. 'list' → logprob: -3.895549774169922
    3. ' map' → logprob: -12.520549774169922
    4. ' [' → logprob: -13.395549774169922
    5. ' tuple' → logprob: -14.020549774169922
    6. 'map' → logprob: -14.270549774169922
    7. ' lis' → logprob: -14.895549774169922
    8. ' ' → logprob: -15.520549774169922
    9. '[list' → logprob: -15.520549774169922
    10. '[' → logprob: -16.020549774169922

Token 114: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5778266787528992
    2. '(' → logprob: -0.8278266787528992
    3. '(int' → logprob: -6.327826499938965
    4. '(range' → logprob: -10.952826499938965
    5. '(s' → logprob: -11.077826499938965
    6. '(
' → logprob: -11.327826499938965
    7. '(list' → logprob: -11.577826499938965
    8. '()' → logprob: -11.702826499938965
    9. '(eval' → logprob: -12.077826499938965
    10. '(read' → logprob: -12.202826499938965

Token 115: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022179381921887398
    2. '(' → logprob: -6.127217769622803
    3. '(
' → logprob: -11.627218246459961
    4. 'int' → logprob: -11.627218246459961
    5. ',int' → logprob: -12.377218246459961
    6. '<|end|>' → logprob: -13.127218246459961
    7. '[int' → logprob: -13.252218246459961
    8. ']int' → logprob: -13.377218246459961
    9. '(lambda' → logprob: -13.502218246459961
    10. '<int' → logprob: -13.627218246459961

Token 116: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.07515384256839752
    2. ',' → logprob: -2.8251538276672363
    3. '(' → logprob: -4.450153827667236
    4. 'read' → logprob: -7.575153827667236
    5. '(),' → logprob: -8.450154304504395
    6. '(
' → logprob: -8.575154304504395
    7. '.readline' → logprob: -8.950154304504395
    8. ' readline' → logprob: -9.575154304504395
    9. '(line' → logprob: -9.825154304504395
    10. '(reader' → logprob: -9.825154304504395

Token 117: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1271052211523056
    2. ' readline' → logprob: -2.127105236053467
    3. ' read' → logprob: -9.377104759216309
    4. '.readline' → logprob: -9.627104759216309
    5. '(read' → logprob: -11.252104759216309
    6. ' ' → logprob: -12.252104759216309
    7. ')' → logprob: -12.377104759216309
    8. 'readonly' → logprob: -13.752104759216309
    9. 'sys' → logprob: -14.127104759216309
    10. '_read' → logprob: -14.377104759216309

Token 118: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.943783253314905e-05
    2. '()' → logprob: -9.750059127807617
    3. ' ().' → logprob: -14.875059127807617
    4. '().'' → logprob: -16.000059127807617
    5. '())' → logprob: -16.250059127807617
    6. '()[' → logprob: -16.500059127807617
    7. '()
' → logprob: -16.625059127807617
    8. '(' → logprob: -16.625059127807617
    9. '());' → logprob: -17.000059127807617
    10. '()).' → logprob: -17.250059127807617

Token 119: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00046677692444063723
    2. 'strip' → logprob: -7.750466823577881
    3. ' split' → logprob: -11.125466346740723
    4. 'decode' → logprob: -11.500466346740723
    5. 'rstrip' → logprob: -12.125466346740723
    6. '(split' → logprob: -12.750466346740723
    7. ')' → logprob: -13.250466346740723
    8. 'read' → logprob: -14.250466346740723
    9. 'spl' → logprob: -15.375466346740723
    10. '.split' → logprob: -16.37546730041504

Token 120: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.48938122391700745
    2. '()))' → logprob: -0.9893811941146851
    3. ')' → logprob: -5.114381313323975
    4. '()' → logprob: -5.364381313323975
    5. '())' → logprob: -5.739381313323975
    6. '(' → logprob: -6.739381313323975
    7. '()))
' → logprob: -9.864380836486816
    8. '()));' → logprob: -11.239380836486816
    9. '))
' → logprob: -11.864380836486816
    10. '(
' → logprob: -11.989380836486816

Token 121: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.24917510151863098
    2. '#' → logprob: -1.9991750717163086
    3. '
' → logprob: -3.2491750717163086
    4. ' 
' → logprob: -4.499175071716309
    5. '<|end|>' → logprob: -4.749175071716309
    6. '  
' → logprob: -4.999175071716309
    7. '```' → logprob: -5.124175071716309
    8. 'Y' → logprob: -5.624175071716309
    9. '\' → logprob: -6.124175071716309
    10. 'newline' → logprob: -6.249175071716309

Token 122: ' Lecture' (ID: 106534)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.18359895050525665
    2. '#' → logprob: -1.8085989952087402
    3. ' Y' → logprob: -5.93359899520874
    4. ' #' → logprob: -6.93359899520874
    5. 'y' → logprob: -9.933598518371582
    6. 'Lecture' → logprob: -10.058598518371582
    7. ' ' → logprob: -10.183598518371582
    8. 'Lire' → logprob: -10.558598518371582
    9. '```' → logprob: -11.183598518371582
    10. '
' → logprob: -11.308598518371582

Token 123: ' du' (ID: 1462)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.8810478448867798
    2. ' du' → logprob: -0.8810478448867798
    3. '(' → logprob: -2.0060477256774902
    4. '(des' → logprob: -4.00604772567749
    5. 'des' → logprob: -4.63104772567749
    6. '()' → logprob: -6.25604772567749
    7. ' des' → logprob: -6.50604772567749
    8. ' of' → logprob: -6.63104772567749
    9. ' (' → logprob: -7.13104772567749
    10. ' ' → logprob: -7.13104772567749

Token 124: ' tableau' (ID: 67053)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.4040415585041046
    2. ' tableau' → logprob: -1.2790415287017822
    3. ' Y' → logprob: -3.2790415287017822
    4. ' array' → logprob: -5.779041767120361
    5. 'array' → logprob: -5.779041767120361
    6. ' ' → logprob: -6.654041767120361
    7. '(' → logprob: -6.654041767120361
    8. 'table' → logprob: -6.654041767120361
    9. 'list' → logprob: -6.779041767120361
    10. ' list' → logprob: -7.154041767120361

Token 125: ' des' (ID: 731)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.5254679918289185
    2. 'des' → logprob: -1.6504679918289185
    3. '(' → logprob: -2.150467872619629
    4. ' des' → logprob: -2.775467872619629
    5. ' Y' → logprob: -3.900467872619629
    6. ' of' → logprob: -5.025467872619629
    7. '#' → logprob: -5.650467872619629
    8. 'of' → logprob: -6.525467872619629
    9. ',' → logprob: -6.900467872619629
    10. 'y' → logprob: -7.025467872619629

Token 126: ' valeurs' (ID: 73668)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.011605346575379372
    2. ' Y' → logprob: -4.511605262756348
    3. '(' → logprob: -7.886605262756348
    4. '()' → logprob: -9.386605262756348
    5. 'values' → logprob: -10.386605262756348
    6. '(int' → logprob: -11.761605262756348
    7. 'list' → logprob: -12.011605262756348
    8. ' (' → logprob: -12.011605262756348
    9. 'int' → logprob: -12.011605262756348
    10. 'y' → logprob: -12.386605262756348

Token 127: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.35069242119789124
    2. ' Y' → logprob: -1.2256923913955688
    3. '(' → logprob: -6.475692272186279
    4. ' (' → logprob: -8.725692749023438
    5. ' ' → logprob: -8.850692749023438
    6. '<|end|>' → logprob: -8.850692749023438
    7. ',' → logprob: -9.725692749023438
    8. 'y' → logprob: -10.350692749023438
    9. '(Y' → logprob: -10.475692749023438
    10. 's' → logprob: -10.600692749023438

Token 128: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523443341255188
    2. '=' → logprob: -0.898443341255188
    3. '(' → logprob: -9.023443222045898
    4. ' (' → logprob: -9.773443222045898
    5. ')' → logprob: -10.023443222045898
    6. '<|end|>' → logprob: -10.148443222045898
    7. '=list' → logprob: -10.273443222045898
    8. ' ' → logprob: -11.648443222045898
    9. ',' → logprob: -12.148443222045898
    10. '=(' → logprob: -13.648443222045898

Token 129: 'tail' (ID: 20472)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.019924486055970192
    2. ' list' → logprob: -4.269924640655518
    3. 'read' → logprob: -5.894924640655518
    4. ' readline' → logprob: -6.144924640655518
    5. ')' → logprob: -7.894924640655518
    6. '.readline' → logprob: -9.14492416381836
    7. 'map' → logprob: -9.26992416381836
    8. '(list' → logprob: -9.39492416381836
    9. 'split' → logprob: -9.76992416381836
    10. 'line' → logprob: -10.14492416381836

Token 130: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22235772013664246
    2. '.split' → logprob: -3.097357749938965
    3. 'split' → logprob: -3.347357749938965
    4. '()' → logprob: -4.222357749938965
    5. '.readline' → logprob: -4.222357749938965
    6. 'space' → logprob: -4.847357749938965
    7. '=' → logprob: -5.097357749938965
    8. '_' → logprob: -5.097357749938965
    9. '[]' → logprob: -5.347357749938965
    10. '().' → logprob: -5.347357749938965

Token 131: ' M' (ID: 391)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7056998014450073
    2. 'M' → logprob: -1.3306998014450073
    3. '(int' → logprob: -1.8306998014450073
    4. '(M' → logprob: -2.705699920654297
    5. ' M' → logprob: -4.455699920654297
    6. ' int' → logprob: -6.205699920654297
    7. ' (' → logprob: -7.580699920654297
    8. '[int' → logprob: -8.830699920654297
    9. ',' → logprob: -9.080699920654297
    10. ',int' → logprob: -9.330699920654297

Token 132: ')
' (ID: 446)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007534049218520522
    2. ')' → logprob: -7.500753402709961
    3. ' ))' → logprob: -9.375753402709961
    4. '))
' → logprob: -9.625753402709961
    5. '()))' → logprob: -11.375753402709961
    6. ')):' → logprob: -11.625753402709961
    7. '));' → logprob: -11.750753402709961
    8. ''))' → logprob: -12.750753402709961
    9. '):' → logprob: -12.750753402709961
    10. '"))' → logprob: -13.250753402709961

Token 133: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0245232954621315
    2. ' Y' → logprob: -3.7745232582092285
    3. ' list' → logprob: -7.3995232582092285
    4. 'list' → logprob: -7.5245232582092285
    5. 'y' → logprob: -9.399523735046387
    6. ' ' → logprob: -11.274523735046387
    7. 'Ys' → logprob: -12.649523735046387
    8. 'X' → logprob: -12.774523735046387
    9. ' ' → logprob: -12.774523735046387
    10. 'List' → logprob: -12.774523735046387

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868732452392578
    2. '=' → logprob: -1.1368732452392578
    3. ')' → logprob: -13.886873245239258
    4. ' ' → logprob: -14.761873245239258
    5. ',' → logprob: -15.511873245239258
    6. ' =
' → logprob: -15.636873245239258
    7. '＝' → logprob: -16.011873245239258
    8. ' ' → logprob: -16.261873245239258
    9. ')=' → logprob: -17.136873245239258
    10. '=

' → logprob: -17.261873245239258

Token 135: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.00861456897109747
    2. 'list' → logprob: -4.758614540100098
    3. '(list' → logprob: -16.883615493774414
    4. 'List' → logprob: -19.258615493774414
    5. '=list' → logprob: -20.008615493774414
    6. 'int' → logprob: -20.633615493774414
    7. ' ' → logprob: -20.633615493774414
    8. '	list' → logprob: -21.258615493774414
    9. ' ' → logprob: -21.383615493774414
    10. ' map' → logprob: -22.258615493774414

Token 136: '(map' (ID: 16946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20677104592323303
    2. '(map' → logprob: -1.7067710161209106
    3. '(' → logprob: -5.331770896911621
    4. '(list' → logprob: -7.956770896911621
    5. ' (' → logprob: -9.456770896911621
    6. '(in' → logprob: -10.331770896911621
    7. '(lambda' → logprob: -12.081770896911621
    8. '(
' → logprob: -12.206770896911621
    9. '(s' → logprob: -12.331770896911621
    10. '(tuple' → logprob: -12.456770896911621

Token 137: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -11.750012397766113
    3. ' (' → logprob: -13.625012397766113
    4. 'int' → logprob: -14.000012397766113
    5. '(in' → logprob: -14.125012397766113
    6. '<int' → logprob: -14.375012397766113
    7. '=int' → logprob: -14.750012397766113
    8. ',int' → logprob: -15.000012397766113
    9. '[int' → logprob: -15.875012397766113
    10. ']int' → logprob: -16.375011444091797

Token 138: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.39936363697052
    2. ',' → logprob: -1.39936363697052
    3. ',int' → logprob: -2.5243635177612305
    4. '(' → logprob: -6.2743635177612305
    5. ' ,' → logprob: -7.8993635177612305
    6. 'int' → logprob: -9.39936351776123
    7. ' (' → logprob: -10.52436351776123
    8. '(),' → logprob: -11.89936351776123
    9. '```' → logprob: -12.52436351776123
    10. '<int' → logprob: -12.77436351776123

Token 139: ' readline' (ID: 179561)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2195633053779602
    2. 'read' → logprob: -1.7195632457733154
    3. ' readline' → logprob: -4.0945634841918945
    4. '(int' → logprob: -7.4695634841918945
    5. '(read' → logprob: -8.219563484191895
    6. ' int' → logprob: -8.219563484191895
    7. ' read' → logprob: -9.969563484191895
    8. '.readline' → logprob: -10.219563484191895
    9. '[int' → logprob: -10.219563484191895
    10. ')' → logprob: -10.469563484191895

Token 140: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.849109119386412e-06
    2. '()' → logprob: -11.750009536743164
    3. ' ().' → logprob: -13.625009536743164
    4. '.' → logprob: -14.250009536743164
    5. '(' → logprob: -17.000009536743164
    6. '.readline' → logprob: -17.625009536743164
    7. '(.' → logprob: -18.625009536743164
    8. '()).' → logprob: -19.375009536743164
    9. ').' → logprob: -19.500009536743164
    10. '())' → logprob: -19.750009536743164

Token 141: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.114600834436715e-05
    2. '().' → logprob: -9.500091552734375
    3. '(split' → logprob: -11.375091552734375
    4. '.split' → logprob: -13.375091552734375
    5. ' split' → logprob: -13.625091552734375
    6. ').' → logprob: -14.250091552734375
    7. 'decode' → logprob: -15.250091552734375
    8. 'strip' → logprob: -15.250091552734375
    9. ')' → logprob: -15.500091552734375
    10. 'sys' → logprob: -15.875091552734375

Token 142: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7429220676422119
    2. '()))' → logprob: -0.7429220676422119
    3. '()' → logprob: -3.867922067642212
    4. ')' → logprob: -4.242921829223633
    5. '())' → logprob: -4.367921829223633
    6. '()))
' → logprob: -8.367921829223633
    7. '(' → logprob: -8.367921829223633
    8. '()));' → logprob: -9.242921829223633
    9. ' ))' → logprob: -11.742921829223633
    10. '))
' → logprob: -11.742921829223633

Token 143: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07058405131101608
    2. '
' → logprob: -3.6955840587615967
    3. '\n' → logprob: -3.9455840587615967
    4. 'X' → logprob: -4.320583820343018
    5. '\' → logprob: -6.070583820343018
    6. '' → logprob: -6.820583820343018
    7. 'n' → logprob: -7.195583820343018
    8. 'a' → logprob: -7.320583820343018
    9. '#
' → logprob: -7.445583820343018
    10. 'd' → logprob: -7.695583820343018

Token 144: ' ---' (ID: 26691)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5375432372093201
    2. 'dp' → logprob: -1.7875432968139648
    3. 'X' → logprob: -1.9125432968139648
    4. 'sorted' → logprob: -3.412543296813965
    5. 'def' → logprob: -3.662543296813965
    6. 'Y' → logprob: -5.287543296813965
    7. 'from' → logprob: -5.287543296813965
    8. 'A' → logprob: -5.662543296813965
    9. 'idx' → logprob: -6.162543296813965
    10. 'result' → logprob: -6.287543296813965

Token 145: ' Dé' (ID: 27247)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3333534300327301
    2. 'X' → logprob: -1.8333534002304077
    3. 'dp' → logprob: -3.2083535194396973
    4. 'def' → logprob: -3.7083535194396973
    5. 'sorted' → logprob: -3.9583535194396973
    6. 'from' → logprob: -4.958353519439697
    7. 'Y' → logprob: -5.208353519439697
    8. 'result' → logprob: -5.833353519439697
    9. 'import' → logprob: -5.958353519439697
    10. 'prefix' → logprob: -6.833353519439697

Token 146: 'but' (ID: 8293)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0009354014764539897
    2. 'fin' → logprob: -7.1259355545043945
    3. 'fi' → logprob: -10.125935554504395
    4. '#' → logprob: -11.125935554504395
    5. 'def' → logprob: -11.375935554504395
    6. 'fib' → logprob: -11.375935554504395
    7. '```' → logprob: -11.375935554504395
    8. 'ff' → logprob: -11.500935554504395
    9. 'but' → logprob: -12.125935554504395
    10. 'veloppement' → logprob: -13.000935554504395

Token 147: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0000935792922974
    2. '#' → logprob: -1.1250935792922974
    3. '<|end|>' → logprob: -1.3750935792922974
    4. 's' → logprob: -4.625093460083008
    5. '<|end|>' → logprob: -4.750093460083008
    6. ' of' → logprob: -5.000093460083008
    7. '
' → logprob: -5.125093460083008
    8. '```' → logprob: -5.375093460083008
    9. ':' → logprob: -5.750093460083008
    10. ' #' → logprob: -5.875093460083008

Token 148: ' pré' (ID: 9424)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.20700465142726898
    2. ' traitement' → logprob: -2.5820045471191406
    3. ' programme' → logprob: -3.8320045471191406
    4. 'code' → logprob: -3.9570045471191406
    5. '#' → logprob: -4.207004547119141
    6. ' calcul' → logprob: -4.207004547119141
    7. ' main' → logprob: -4.582004547119141
    8. 'programme' → logprob: -5.332004547119141
    9. ' #' → logprob: -5.707004547119141
    10. ' corps' → logprob: -6.082004547119141

Token 149: 'trait' (ID: 18216)
  Prédit: 'trait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.5511103272438049
    2. 'processing' → logprob: -1.6761102676391602
    3. 'calcul' → logprob: -2.55111026763916
    4. '-tr' → logprob: -2.92611026763916
    5. '-cal' → logprob: -4.17611026763916
    6. ' traitement' → logprob: -4.17611026763916
    7. '```' → logprob: -4.17611026763916
    8. 'cal' → logprob: -4.17611026763916
    9. 'calc' → logprob: -4.67611026763916
    10. 'proces' → logprob: -5.17611026763916

Token 150: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -1.0787547826766968
    2. 't' → logprob: -1.2037547826766968
    3. 'rement' → logprob: -1.7037547826766968
    4. 'nement' → logprob: -3.0787549018859863
    5. 'rait' → logprob: -3.0787549018859863
    6. 'ment' → logprob: -3.5787549018859863
    7. 'atement' → logprob: -4.203754901885986
    8. 'reatment' → logprob: -4.703754901885986
    9. 'ait' → logprob: -5.328754901885986
    10. 'a' → logprob: -5.703754901885986

Token 151: ' des' (ID: 731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4936981201171875
    2. '<|end|>' → logprob: -1.3686981201171875
    3. '<|end|>' → logprob: -3.3686981201171875
    4. 'X' → logprob: -3.7436981201171875
    5. 's' → logprob: -3.7436981201171875
    6. '
' → logprob: -4.2436981201171875
    7. ')' → logprob: -4.7436981201171875
    8. ':' → logprob: -4.9936981201171875
    9. ',' → logprob: -5.4936981201171875
    10. '```' → logprob: -5.7436981201171875

Token 152: ' interv' (ID: 37413)
  Prédit: ' tableaux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tableaux' → logprob: -0.5808067917823792
    2. ' indices' → logprob: -1.9558067321777344
    3. 'indices' → logprob: -2.4558067321777344
    4. ' Y' → logprob: -3.0808067321777344
    5. ' données' → logprob: -3.3308067321777344
    6. 'Y' → logprob: -3.3308067321777344
    7. 'X' → logprob: -4.080806732177734
    8. 's' → logprob: -4.455806732177734
    9. ' points' → logprob: -4.705806732177734
    10. ' X' → logprob: -4.830806732177734

Token 153: 'alles' (ID: 28825)
  Prédit: 'erv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erv' → logprob: -1.1112034320831299
    2. 'al' → logprob: -1.2362034320831299
    3. 'als' → logprob: -2.11120343208313
    4. 'ales' → logprob: -2.98620343208313
    5. 'er' → logprob: -3.11120343208313
    6. 'vals' → logprob: -3.36120343208313
    7. 'aux' → logprob: -3.86120343208313
    8. 'v' → logprob: -3.98620343208313
    9. 'alles' → logprob: -3.98620343208313
    10. '#' → logprob: -4.361203193664551

Token 154: ' ---
' (ID: 128468)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6421315670013428
    2. ':' → logprob: -1.7671315670013428
    3. '
' → logprob: -2.6421315670013428
    4. 's' → logprob: -2.8921315670013428
    5. '<|end|>' → logprob: -3.2671315670013428
    6. ',' → logprob: -3.3921315670013428
    7. ')' → logprob: -3.7671315670013428
    8. ' #' → logprob: -4.517131805419922
    9. ']' → logprob: -4.767131805419922
    10. 'X' → logprob: -4.892131805419922

Token 155: 'L' (ID: 43)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34920233488082886
    2. 'X' → logprob: -1.7242023944854736
    3. 'dp' → logprob: -3.3492023944854736
    4. 'interval' → logprob: -3.9742023944854736
    5. 'sorted' → logprob: -4.4742021560668945
    6. 'max' → logprob: -4.7242021560668945
    7. 'diff' → logprob: -5.4742021560668945
    8. 'x' → logprob: -5.9742021560668945
    9. 'length' → logprob: -5.9742021560668945
    10. 'sum' → logprob: -6.3492021560668945

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1193348839879036
    2. '=' → logprob: -2.8693349361419678
    3. 'X' → logprob: -3.4943349361419678
    4. ',' → logprob: -4.494334697723389
    5. '=[]' → logprob: -5.619334697723389
    6. 'x' → logprob: -6.119334697723389
    7. 'eft' → logprob: -6.494334697723389
    8. '_' → logprob: -6.869334697723389
    9. 'Y' → logprob: -7.494334697723389
    10. '_sorted' → logprob: -7.994334697723389

Token 157: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8149669170379639
    2. '[' → logprob: -1.1899669170379639
    3. ' [' → logprob: -2.564966917037964
    4. '[len' → logprob: -2.939966917037964
    5. '[N' → logprob: -3.314966917037964
    6. '0' → logprob: -3.939966917037964
    7. ' []' → logprob: -4.189967155456543
    8. 'N' → logprob: -4.439967155456543
    9. '[M' → logprob: -4.689967155456543
    10. 'len' → logprob: -5.064967155456543

Token 158: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29917803406715393
    2. '<|end|>' → logprob: -2.299178123474121
    3. 'for' → logprob: -3.299178123474121
    4. ')' → logprob: -3.299178123474121
    5. '
' → logprob: -4.049178123474121
    6. '#' → logprob: -4.174178123474121
    7. ',
' → logprob: -4.674178123474121
    8. '[' → logprob: -5.049178123474121
    9. ']' → logprob: -5.799178123474121
    10. '<|end|>' → logprob: -6.049178123474121

Token 159: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5471928119659424
    2. '()' → logprob: -1.4221928119659424
    3. '(' → logprob: -3.4221928119659424
    4. '<|end|>' → logprob: -3.6721928119659424
    5. ')' → logprob: -3.7971928119659424
    6. '[]' → logprob: -4.047192573547363
    7. '()
' → logprob: -4.547192573547363
    8. ']' → logprob: -4.922192573547363
    9. '=' → logprob: -5.172192573547363
    10. '[' → logprob: -5.172192573547363

Token 160: ' Liste' (ID: 61030)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00813946034759283
    2. '[]
' → logprob: -6.133139610290527
    3. ' []' → logprob: -6.133139610290527
    4. '0' → logprob: -6.883139610290527
    5. '[' → logprob: -7.008139610290527
    6. '[int' → logprob: -7.383139610290527
    7. 'X' → logprob: -8.383139610290527
    8. '[(' → logprob: -9.008139610290527
    9. 'bis' → logprob: -9.133139610290527
    10. 'len' → logprob: -9.258139610290527

Token 161: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' dé' (ID: 2393)
  Prédit: ' interv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' interv' → logprob: -1.4342763423919678
    2. 'inter' → logprob: -1.8092763423919678
    3. 'interval' → logprob: -1.8092763423919678
    4. ' points' → logprob: -1.9342763423919678
    5. 'indices' → logprob: -3.3092763423919678
    6. 'positions' → logprob: -3.6842763423919678
    7. 'diff' → logprob: -4.184276580810547
    8. ' intervals' → logprob: -4.184276580810547
    9. ' indices' → logprob: -4.309276580810547
    10. 'élé' → logprob: -4.309276580810547

Token 163: 'cal' (ID: 5842)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.8075025677680969
    2. 'but' → logprob: -0.9325025677680969
    3. 'b' → logprob: -2.057502508163452
    4. 'parts' → logprob: -4.307502746582031
    5. 'm' → logprob: -5.682502746582031
    6. 'mar' → logprob: -6.057502746582031
    7. '```' → logprob: -6.745002746582031
    8. 'placements' → logprob: -6.995002746582031
    9. ' but' → logprob: -7.182502746582031
    10. 'mé' → logprob: -7.557502746582031

Token 164: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.44200456142425537
    2. 'ements' → logprob: -1.3170045614242554
    3. 's' → logprob: -2.817004680633545
    4. 'es' → logprob: -3.817004680633545
    5. 'ments' → logprob: -5.942004680633545
    6. 'aments' → logprob: -6.067004680633545
    7. 'ations' → logprob: -7.442004680633545
    8. 'age' → logprob: -7.567004680633545
    9. ',' → logprob: -8.442004203796387
    10. 'ement' → logprob: -8.567004203796387

Token 165: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7555088996887207
    2. ' =' → logprob: -1.0055088996887207
    3. 's' → logprob: -2.8805088996887207
    4. '=' → logprob: -3.3805088996887207
    5. '<|end|>' → logprob: -4.005508899688721
    6. '=[]' → logprob: -5.005508899688721
    7. 'for' → logprob: -5.255508899688721
    8. ')' → logprob: -5.380508899688721
    9. '[]' → logprob: -5.505508899688721
    10. '_inter' → logprob: -5.630508899688721

Token 166: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7121394872665405
    2. ' gauche' → logprob: -1.3371394872665405
    3. 'dro' → logprob: -1.8371394872665405
    4. 'aj' → logprob: -3.46213960647583
    5. ' droite' → logprob: -3.96213960647583
    6. 's' → logprob: -6.08713960647583
    7. 'l' → logprob: -6.08713960647583
    8. ' ajouter' → logprob: -6.33713960647583
    9. 'j' → logprob: -6.39963960647583
    10. ' ' → logprob: -6.46213960647583

Token 167: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19044986367225647
    2. '<|end|>' → logprob: -2.6904499530792236
    3. 'for' → logprob: -3.3154499530792236
    4. ' ,' → logprob: -3.4404499530792236
    5. 's' → logprob: -4.8154497146606445
    6. ',
' → logprob: -5.1904497146606445
    7. ' ' → logprob: -5.1904497146606445
    8. ')' → logprob: -5.5654497146606445
    9. ' for' → logprob: -5.9404497146606445
    10. 'X' → logprob: -6.8154497146606445

Token 168: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03328174725174904
    2. 'D' → logprob: -4.2832818031311035
    3. 'for' → logprob: -5.1582818031311035
    4. ' R' → logprob: -5.9082818031311035
    5. 'd' → logprob: -6.9082818031311035
    6. 'U' → logprob: -7.0332818031311035
    7. 'offset' → logprob: -7.0332818031311035
    8. ',' → logprob: -7.4082818031311035
    9. 'length' → logprob: -7.4082818031311035
    10. 'W' → logprob: -7.6582818031311035

Token 169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327764391899109
    2. ' =' → logprob: -0.7577764391899109
    3. '=[]' → logprob: -8.757776260375977
    4. '[]' → logprob: -11.507776260375977
    5. ' ' → logprob: -12.007776260375977
    6. ',' → logprob: -13.632776260375977
    7. ']' → logprob: -13.757776260375977
    8. ' []' → logprob: -14.882776260375977
    9. ')' → logprob: -15.507776260375977
    10. '=[]
' → logprob: -15.632776260375977

Token 170: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.013089647516608238
    2. ' []' → logprob: -4.388089656829834
    3. '[' → logprob: -7.513089656829834
    4. '[]
' → logprob: -11.763089179992676
    5. ' ' → logprob: -11.888089179992676
    6. '[]

' → logprob: -12.263089179992676
    7. '[]}' → logprob: -12.388089179992676
    8. ' [' → logprob: -12.513089179992676
    9. '[:]' → logprob: -13.888089179992676
    10. '[])' → logprob: -13.888089179992676

Token 171: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010140403173863888
    2. '#' → logprob: -5.260140419006348
    3. ' #' → logprob: -5.385140419006348
    4. '  ' → logprob: -8.885140419006348
    5. '<|end|>' → logprob: -9.635140419006348
    6. '[]' → logprob: -9.885140419006348
    7. ' ' → logprob: -10.385140419006348
    8. ' []' → logprob: -12.010140419006348
    9. ' =' → logprob: -12.260140419006348
    10. '[' → logprob: -12.510140419006348

Token 172: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1049475446343422
    2. ' ' → logprob: -2.604947566986084
    3. ' #' → logprob: -3.979947566986084
    4. '=' → logprob: -5.479947566986084
    5. ' =' → logprob: -5.979947566986084
    6. '[]' → logprob: -8.604947090148926
    7. '=[]' → logprob: -10.229947090148926
    8. ']' → logprob: -10.354947090148926
    9. '()' → logprob: -10.604947090148926
    10. ' ' → logprob: -10.979947090148926

Token 173: ' Liste' (ID: 61030)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.023749561980366707
    2. ' []' → logprob: -4.023749351501465
    3. '#' → logprob: -5.273749351501465
    4. ' ' → logprob: -8.023749351501465
    5. ' #' → logprob: -10.148749351501465
    6. ']' → logprob: -10.648749351501465
    7. '()' → logprob: -10.773749351501465
    8. 'Liste' → logprob: -11.398749351501465
    9. '=[]' → logprob: -11.648749351501465
    10. 'List' → logprob: -11.648749351501465

Token 174: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.28747081756591797
    2. 'des' → logprob: -1.412470817565918
    3. '_des' → logprob: -5.662470817565918
    4. '<|end|>' → logprob: -6.662470817565918
    5. '[]' → logprob: -7.662470817565918
    6. '(des' → logprob: -7.912470817565918
    7. 's' → logprob: -8.537470817565918
    8. '()' → logprob: -9.412470817565918
    9. ' ' → logprob: -9.912470817565918
    10. '(' → logprob: -9.912470817565918

Token 175: ' dé' (ID: 2393)
  Prédit: ' dé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dé' → logprob: -0.44331446290016174
    2. 'd' → logprob: -1.5683144330978394
    3. 'dé' → logprob: -1.9433144330978394
    4. 'de' → logprob: -6.318314552307129
    5. ' déplacements' → logprob: -6.318314552307129
    6. ' déc' → logprob: -6.818314552307129
    7. ' droits' → logprob: -7.818314552307129
    8. ' d' → logprob: -8.693314552307129
    9. ' déplacement' → logprob: -9.068314552307129
    10. 's' → logprob: -9.068314552307129

Token 176: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -2.0339031834737398e-05
    2. 'placements' → logprob: -12.250020027160645
    3. 'call' → logprob: -13.125020027160645
    4. 'al' → logprob: -13.500020027160645
    5. 'caler' → logprob: -13.625020027160645
    6. 'ocal' → logprob: -14.125020027160645
    7. '```' → logprob: -14.125020027160645
    8. '(cal' → logprob: -14.250020027160645
    9. 'ec' → logprob: -14.375020027160645
    10. 'f' → logprob: -14.625020027160645

Token 177: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.15851068496704102
    2. 'ements' → logprob: -2.783510684967041
    3. 'ots' → logprob: -3.158510684967041
    4. '_offsets' → logprob: -5.033510684967041
    5. 'ost' → logprob: -5.283510684967041
    6. 'gments' → logprob: -5.533510684967041
    7. ' offsets' → logprob: -5.783510684967041
    8. 'gements' → logprob: -6.033510684967041
    9. 'éments' → logprob: -6.158510684967041
    10. 'os' → logprob: -6.283510684967041

Token 178: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.011389324441552162
    2. 'à' → logprob: -4.636389255523682
    3. ' ' → logprob: -7.011389255523682
    4. ''à' → logprob: -8.38638973236084
    5. 's' → logprob: -8.63638973236084
    6. ' ' → logprob: -9.01138973236084
    7. ' a' → logprob: -9.76138973236084
    8. '’à' → logprob: -10.63638973236084
    9. ' to' → logprob: -10.94888973236084
    10. ')' → logprob: -11.57388973236084

Token 179: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.05763343721628189
    2. ' droite' → logprob: -2.932633399963379
    3. 'd' → logprob: -6.182633399963379
    4. '```' → logprob: -8.057633399963379
    5. 'l' → logprob: -8.557633399963379
    6. 'right' → logprob: -9.182633399963379
    7. 'la' → logprob: -11.182633399963379
    8. ']' → logprob: -11.932633399963379
    9. ' ' → logprob: -12.182633399963379
    10. 'dr' → logprob: -12.682633399963379

Token 180: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.410010427236557
    2. '<|end|>' → logprob: -1.1600104570388794
    3. 'for' → logprob: -4.66001033782959
    4. ' 
' → logprob: -5.66001033782959
    5. ' for' → logprob: -5.66001033782959
    6. ' ' → logprob: -6.03501033782959
    7. '<|end|>' → logprob: -6.28501033782959
    8. ')' → logprob: -7.53501033782959
    9. ',' → logprob: -7.66001033782959
    10. '  
' → logprob: -7.78501033782959

Token 181: 'serv' (ID: 1850)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002758272225037217
    2. ' )' → logprob: -6.002758502960205
    3. ' ' → logprob: -10.127758026123047
    4. '#' → logprob: -10.252758026123047
    5. 'for' → logprob: -10.377758026123047
    6. ']' → logprob: -10.377758026123047
    7. ')
' → logprob: -10.877758026123047
    8. ' pour' → logprob: -11.502758026123047
    9. ')#' → logprob: -11.627758026123047
    10. ',' → logprob: -12.002758026123047

Token 182: 'ira' (ID: 2633)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.8690712451934814
    2. 'ant' → logprob: -1.1190712451934814
    3. 'is' → logprob: -2.3690712451934814
    4. 'ent' → logprob: -2.7440712451934814
    5. 'i' → logprob: -2.8690712451934814
    6. 'ice' → logprob: -4.369071006774902
    7. 'aient' → logprob: -5.494071006774902
    8. 'ie' → logprob: -5.619071006774902
    9. '```' → logprob: -5.869071006774902
    10. 'e' → logprob: -6.119071006774902

Token 183: ' pour' (ID: 1930)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.038463715463876724
    2. ' ' → logprob: -3.788463830947876
    3. ')' → logprob: -4.913463592529297
    4. 'à' → logprob: -6.413463592529297
    5. ' )' → logprob: -6.663463592529297
    6. ' ' → logprob: -6.663463592529297
    7. ' pour' → logprob: -6.788463592529297
    8. ' uniquement' → logprob: -8.038463592529297
    9. ' to' → logprob: -8.163463592529297
    10. ' a' → logprob: -8.163463592529297

Token 184: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.792862594127655
    2. ' bis' → logprob: -1.6678626537322998
    3. ' le' → logprob: -2.0428626537323
    4. 'bis' → logprob: -3.0428626537323
    5. 'la' → logprob: -3.1678626537323
    6. ' les' → logprob: -3.2928626537323
    7. ' tri' → logprob: -3.9178626537323
    8. 'l' → logprob: -4.542862415313721
    9. 'les' → logprob: -4.667862415313721
    10. ' l' → logprob: -4.667862415313721

Token 185: ' coordinate' (ID: 30380)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.6452757120132446
    2. 're' → logprob: -1.6452757120132446
    3. ' recherche' → logprob: -2.395275592803955
    4. 'b' → logprob: -3.145275592803955
    5. ' bis' → logprob: -3.145275592803955
    6. 'validation' → logprob: -4.020275592803955
    7. 'construction' → logprob: -4.520275592803955
    8. 'concat' → logprob: -5.020275592803955
    9. 'tri' → logprob: -5.145275592803955
    10. 's' → logprob: -5.145275592803955

Token 186: ' compression' (ID: 41811)
  Prédit: 'compression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compression' → logprob: -0.41210606694221497
    2. ' compression' → logprob: -1.2871060371398926
    3. 'compress' → logprob: -4.162106037139893
    4. 'compressed' → logprob: -4.162106037139893
    5. 's' → logprob: -4.287106037139893
    6. '_com' → logprob: -4.662106037139893
    7. ' compress' → logprob: -5.537106037139893
    8. '_comp' → logprob: -7.662106037139893
    9. '_' → logprob: -7.662106037139893
    10. ' compressed' → logprob: -7.787106037139893

Token 187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011534435179783031
    2. ' )' → logprob: -9.250115394592285
    3. ']' → logprob: -12.625115394592285
    4. '[' → logprob: -12.875115394592285
    5. ')
' → logprob: -13.125115394592285
    6. '#' → logprob: -13.250115394592285
    7. '))' → logprob: -13.375115394592285
    8. '')' → logprob: -13.500115394592285
    9. 'R' → logprob: -14.000115394592285
    10. 's' → logprob: -14.750115394592285

Token 188: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.324650377035141
    2. '<|end|>' → logprob: -1.8246504068374634
    3. '
' → logprob: -2.574650287628174
    4. ' for' → logprob: -3.324650287628174
    5. '<|end|>' → logprob: -6.449650287628174
    6. '#' → logprob: -7.074650287628174
    7. ')' → logprob: -8.074650764465332
    8. '  
' → logprob: -8.574650764465332
    9. 'indices' → logprob: -8.699650764465332
    10. ' 
' → logprob: -9.324650764465332

Token 189: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3487459123134613
    2. ' i' → logprob: -1.4737459421157837
    3. ' _' → logprob: -3.223745822906494
    4. 'x' → logprob: -4.098745822906494
    5. 'i' → logprob: -6.223745822906494
    6. '_x' → logprob: -6.473745822906494
    7. '(x' → logprob: -6.973745822906494
    8. ' a' → logprob: -7.223745822906494
    9. ' xi' → logprob: -7.223745822906494
    10. '_' → logprob: -7.411245822906494

Token 190: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.032263193279504776
    2. ' ' → logprob: -3.7822632789611816
    3. 'in' → logprob: -4.907263278961182
    4. ',' → logprob: -7.407263278961182
    5. '_' → logprob: -7.657263278961182
    6. ' _' → logprob: -9.407262802124023
    7. 's' → logprob: -9.782262802124023
    8. '_in' → logprob: -9.782262802124023
    9. ' ,' → logprob: -10.032262802124023
    10. '  ' → logprob: -10.032262802124023

Token 191: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1245458796620369
    2. ' X' → logprob: -2.2495458126068115
    3. ' range' → logprob: -4.999546051025391
    4. 'range' → logprob: -5.499546051025391
    5. 'Y' → logprob: -7.624546051025391
    6. ' ' → logprob: -8.99954605102539
    7. ' Y' → logprob: -9.37454605102539
    8. ')' → logprob: -9.99954605102539
    9. '(X' → logprob: -11.37454605102539
    10. '[' → logprob: -11.49954605102539

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0105492128059268
    2. '-' → logprob: -5.010549068450928
    3. ':
' → logprob: -6.510549068450928
    4. ',' → logprob: -6.760549068450928
    5. ' :' → logprob: -7.010549068450928
    6. ' -' → logprob: -9.260549545288086
    7. '+' → logprob: -9.385549545288086
    8. '[' → logprob: -10.135549545288086
    9. '+:' → logprob: -11.135549545288086
    10. ':-' → logprob: -11.885549545288086

Token 193: '   ' (ID: 271)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.10717327892780304
    2. '   ' → logprob: -2.607173204421997
    3. 'L' → logprob: -4.732173442840576
    4. ':' → logprob: -4.732173442840576
    5. '-' → logprob: -5.357173442840576
    6. ' if' → logprob: -6.732173442840576
    7. '+' → logprob: -6.982173442840576
    8. ':
' → logprob: -7.232173442840576
    9. ' ' → logprob: -7.982173442840576
    10. ' -' → logprob: -8.107172966003418

Token 194: ' #' (ID: 1069)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.429299533367157
    2. ' L' → logprob: -1.0542995929718018
    3. ' for' → logprob: -9.304299354553223
    4. 'l' → logprob: -9.679299354553223
    5. 'for' → logprob: -9.679299354553223
    6. 'if' → logprob: -9.929299354553223
    7. '-' → logprob: -10.304299354553223
    8. ' if' → logprob: -10.491799354553223
    9. ' ' → logprob: -10.679299354553223
    10. '   ' → logprob: -10.679299354553223

Token 195: ' Recherche' (ID: 114815)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07689093798398972
    2. 'l' → logprob: -3.3268909454345703
    3. ' L' → logprob: -3.5768909454345703
    4. 'left' → logprob: -5.57689094543457
    5. 'for' → logprob: -6.70189094543457
    6. ' l' → logprob: -7.07689094543457
    7. 'if' → logprob: -7.20189094543457
    8. 'offset' → logprob: -7.57689094543457
    9. ' left' → logprob: -7.82689094543457
    10. 'import' → logprob: -7.82689094543457

Token 196: ' de' (ID: 334)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2797865867614746
    2. '(' → logprob: -1.5297865867614746
    3. '_left' → logprob: -2.2797865867614746
    4. 'left' → logprob: -2.6547865867614746
    5. '(i' → logprob: -2.9047865867614746
    6. 'idx' → logprob: -3.2797865867614746
    7. '(left' → logprob: -3.6547865867614746
    8. '_pos' → logprob: -4.279786586761475
    9. '(idx' → logprob: -4.404786586761475
    10. 'l' → logprob: -4.404786586761475

Token 197: ' la' (ID: 557)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4195411801338196
    2. 'idx' → logprob: -2.044541120529175
    3. 'i' → logprob: -2.919541120529175
    4. 'bis' → logprob: -3.669541120529175
    5. 'l' → logprob: -3.794541120529175
    6. 'p' → logprob: -3.919541120529175
    7. 'left' → logprob: -4.169541358947754
    8. 'y' → logprob: -4.169541358947754
    9. 'position' → logprob: -4.669541358947754
    10. 'x' → logprob: -4.794541358947754

Token 198: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.24602524936199188
    2. 'pos' → logprob: -1.8710252046585083
    3. 'bis' → logprob: -3.746025323867798
    4. ' position' → logprob: -4.746025085449219
    5. 'b' → logprob: -5.121025085449219
    6. 'left' → logprob: -5.246025085449219
    7. 'g' → logprob: -5.496025085449219
    8. 'place' → logprob: -5.496025085449219
    9. 'index' → logprob: -6.496025085449219
    10. 'idx' → logprob: -7.121025085449219

Token 199: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7793300747871399
    2. 'pos' → logprob: -1.9043300151824951
    3. '=' → logprob: -2.779330015182495
    4. 'd' → logprob: -3.154330015182495
    5. ' ' → logprob: -3.404330015182495
    6. ')' → logprob: -3.404330015182495
    7. ' d' → logprob: -3.529330015182495
    8. 'idx' → logprob: -3.904330015182495
    9. 'left' → logprob: -4.404330253601074
    10. ' insertion' → logprob: -4.404330253601074

Token 200: ''in' (ID: 17942)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7420936226844788
    2. 'x' → logprob: -1.117093563079834
    3. '(x' → logprob: -2.867093563079834
    4. 'l' → logprob: -3.367093563079834
    5. ' l' → logprob: -3.742093563079834
    6. 'bis' → logprob: -4.117093563079834
    7. ' bis' → logprob: -4.992093563079834
    8. ' ' → logprob: -4.992093563079834
    9. 'e' → logprob: -5.117093563079834
    10. ' la' → logprob: -5.242093563079834

Token 201: 'sertion' (ID: 21747)
  Prédit: 'sertion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sertion' → logprob: -0.00037013579276390374
    2. 'sert' → logprob: -8.000370025634766
    3. 's' → logprob: -11.000370025634766
    4. 'ter' → logprob: -11.500370025634766
    5. 'ser' → logprob: -13.250370025634766
    6. 'cert' → logprob: -13.375370025634766
    7. 't' → logprob: -13.750370025634766
    8. 'sort' → logprob: -14.750370025634766
    9. 'scription' → logprob: -14.750370025634766
    10. '```' → logprob: -14.750370025634766

Token 202: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5955272912979126
    2. '(x' → logprob: -1.2205272912979126
    3. ' (' → logprob: -2.595527172088623
    4. 'bis' → logprob: -3.970527172088623
    5. ' =' → logprob: -4.845527172088623
    6. 'pos' → logprob: -4.970527172088623
    7. '(y' → logprob: -4.970527172088623
    8. ',' → logprob: -5.470527172088623
    9. '(R' → logprob: -5.595527172088623
    10. 'x' → logprob: -6.095527172088623

Token 203: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17643128335475922
    2. 'x' → logprob: -1.9264312982559204
    3. '(x' → logprob: -4.426431179046631
    4. ' (' → logprob: -5.926431179046631
    5. '(' → logprob: -7.301431179046631
    6. ' y' → logprob: -7.926431179046631
    7. ' bis' → logprob: -9.676431655883789
    8. ' ' → logprob: -9.801431655883789
    9. '0' → logprob: -10.051431655883789
    10. 'y' → logprob: -10.238931655883789

Token 204: ' dans' (ID: 2671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2312646210193634
    2. '(x' → logprob: -2.356264591217041
    3. ' (' → logprob: -3.231264591217041
    4. '(L' → logprob: -4.106264591217041
    5. '(R' → logprob: -4.606264591217041
    6. ',' → logprob: -4.856264591217041
    7. '(-' → logprob: -5.356264591217041
    8. ' =' → logprob: -5.606264591217041
    9. '_left' → logprob: -5.606264591217041
    10. ' in' → logprob: -5.731264591217041

Token 205: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00917616207152605
    2. 'L' → logprob: -5.509176254272461
    3. 'R' → logprob: -5.509176254272461
    4. ' Y' → logprob: -7.009176254272461
    5. 'X' → logprob: -9.384176254272461
    6. 'sorted' → logprob: -10.759176254272461
    7. ' R' → logprob: -12.134176254272461
    8. ' L' → logprob: -12.384176254272461
    9. ' ' → logprob: -13.071676254272461
    10. '	Y' → logprob: -13.384176254272461

Token 206: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13368654251098633
    2. ' (' → logprob: -2.8836865425109863
    3. ')' → logprob: -3.5086865425109863
    4. ',' → logprob: -3.7586865425109863
    5. '   ' → logprob: -5.633686542510986
    6. '(x' → logprob: -6.383686542510986
    7. '_' → logprob: -6.758686542510986
    8. 'idx' → logprob: -6.758686542510986
    9. ':' → logprob: -6.883686542510986
    10. '(pos' → logprob: -7.133686542510986

Token 207: 'liste' (ID: 69656)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.8856145143508911
    2. ')' → logprob: -1.1356145143508911
    3. ' bis' → logprob: -1.5106145143508911
    4. 'Y' → logprob: -4.260614395141602
    5. 'y' → logprob: -5.010614395141602
    6. ' )' → logprob: -5.385614395141602
    7. ' ' → logprob: -5.510614395141602
    8. 'x' → logprob: -5.885614395141602
    9. '<|end|>' → logprob: -6.010614395141602
    10. ',' → logprob: -6.010614395141602

Token 208: ' tri' (ID: 12665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2860150635242462
    2. ',' → logprob: -1.4110150337219238
    3. ' )' → logprob: -6.036015033721924
    4. ' ,' → logprob: -7.536015033721924
    5. '<|end|>' → logprob: -8.411015510559082
    6. '),' → logprob: -8.786015510559082
    7. '=' → logprob: -9.036015510559082
    8. ',)' → logprob: -9.161015510559082
    9. '   ' → logprob: -9.286015510559082
    10. ',y' → logprob: -9.411015510559082

Token 209: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.023789141327142715
    2. 'ed' → logprob: -4.023788928985596
    3. 'é' → logprob: -6.398788928985596
    4. 'e' → logprob: -6.773788928985596
    5. 'ted' → logprob: -7.648788928985596
    6. 'd' → logprob: -7.648788928985596
    7. 'née' → logprob: -7.648788928985596
    8. ')' → logprob: -8.273789405822754
    9. 'ee' → logprob: -8.273789405822754
    10. 'sorted' → logprob: -8.523789405822754

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03257697820663452
    2. ',' → logprob: -3.7825770378112793
    3. ' )' → logprob: -4.782577037811279
    4. ')
' → logprob: -7.657577037811279
    5. ' ,' → logprob: -8.657576560974121
    6. '))' → logprob: -9.532576560974121
    7. '),' → logprob: -10.407576560974121
    8. ' )
' → logprob: -10.782576560974121
    9. ',)' → logprob: -10.907576560974121
    10. '):' → logprob: -11.157576560974121

Token 211: '   ' (ID: 271)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10478663444519043
    2. ')' → logprob: -3.2297866344451904
    3. '   ' → logprob: -3.8547866344451904
    4. ' pos' → logprob: -4.4797868728637695
    5. 'i' → logprob: -5.1047868728637695
    6. 'idx' → logprob: -5.4797868728637695
    7. ',' → logprob: -5.4797868728637695
    8. 'position' → logprob: -5.6047868728637695
    9. ' i' → logprob: -6.1047868728637695
    10. '(pos' → logprob: -6.4797868728637695

Token 212: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.01912333257496357
    2. 'idx' → logprob: -4.644123554229736
    3. ' pos' → logprob: -5.269123554229736
    4. 'i' (adapté à ' i') → logprob: -5.894123554229736
    5. 'p' → logprob: -7.144123554229736
    6. ' idx' → logprob: -8.519123077392578
    7. ' i' → logprob: -9.019123077392578
    8. 'index' → logprob: -9.144123077392578
    9. 'j' → logprob: -9.519123077392578
    10. 'position' → logprob: -10.519123077392578

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889056205749512
    2. '=' → logprob: -2.578890562057495
    3. ' ' → logprob: -15.328890800476074
    4. 'x' → logprob: -15.578890800476074
    5. ' =
' → logprob: -15.703890800476074
    6. ')' → logprob: -15.828890800476074
    7. '＝' → logprob: -17.203889846801758
    8. ' ' → logprob: -17.703889846801758
    9. 'n' → logprob: -17.703889846801758
    10. '=i' → logprob: -17.953889846801758

Token 214: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.061967913061380386
    2. ' bis' → logprob: -2.8119678497314453
    3. 'b' → logprob: -15.186967849731445
    4. 'bi' → logprob: -17.561967849731445
    5. '	b' → logprob: -17.811967849731445
    6. 'Bis' → logprob: -18.936967849731445
    7. 'bs' → logprob: -19.061967849731445
    8. ' ' → logprob: -19.311967849731445
    9. 'binary' → logprob: -19.311967849731445
    10. '0' → logprob: -19.561967849731445

Token 215: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.14013858139514923
    2. 'ect' → logprob: -2.390138626098633
    3. 's' → logprob: -4.640138626098633
    4. 'c' → logprob: -4.765138626098633
    5. '_' → logprob: -5.265138626098633
    6. 'ct' → logprob: -5.390138626098633
    7. 'ce' → logprob: -5.765138626098633
    8. 'с' → logprob: -5.765138626098633
    9. 'cept' → logprob: -6.515138626098633
    10. 'cet' → logprob: -7.015138626098633

Token 216: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -12.875003814697266
    3. '_right' → logprob: -14.875003814697266
    4. 'left' → logprob: -15.625003814697266
    5. '_le' → logprob: -16.500003814697266
    6. '_low' → logprob: -16.500003814697266
    7. '_LEFT' → logprob: -16.750003814697266
    8. '_Left' → logprob: -17.875003814697266
    9. '_lower' → logprob: -18.750003814697266
    10. 'Left' → logprob: -19.000003814697266

Token 217: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.0002774246677290648
    2. '(' → logprob: -8.250277519226074
    3. 'Y' → logprob: -11.625277519226074
    4. ' (' → logprob: -12.500277519226074
    5. '(
' → logprob: -13.500277519226074
    6. ' Y' → logprob: -14.000277519226074
    7. '(y' → logprob: -14.250277519226074
    8. ')' → logprob: -15.500277519226074
    9. ',Y' → logprob: -15.750277519226074
    10. '	Y' → logprob: -17.375276565551758

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1290862262248993
    2. ',x' → logprob: -2.1290862560272217
    3. '(x' → logprob: -6.379086017608643
    4. ' ,' → logprob: -8.7540864944458
    5. '(' → logprob: -9.0040864944458
    6. ',i' → logprob: -9.8790864944458
    7. ',(' → logprob: -10.0040864944458
    8. ',y' → logprob: -10.1290864944458
    9. ',
' → logprob: -11.2540864944458
    10. ')' → logprob: -11.5040864944458

Token 219: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020594444125890732
    2. ' x' → logprob: -3.895594358444214
    3. '(x' → logprob: -10.145594596862793
    4. ')' → logprob: -11.645594596862793
    5. ')x' → logprob: -12.520594596862793
    6. '	x' → logprob: -14.770594596862793
    7. ' ' → logprob: -16.395593643188477
    8. '   ' → logprob: -16.645593643188477
    9. ',' → logprob: -16.645593643188477
    10. ',x' → logprob: -16.770593643188477

Token 220: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000822495436295867
    2. ')
' → logprob: -7.1258225440979
    3. ' )' → logprob: -11.500822067260742
    4. '))' → logprob: -13.000822067260742
    5. ')`' → logprob: -13.625822067260742
    6. ')
' → logprob: -13.875822067260742
    7. ')

' → logprob: -13.875822067260742
    8. ')+' → logprob: -14.375822067260742
    9. ')#' → logprob: -15.250822067260742
    10. '   ' → logprob: -15.250822067260742

Token 221: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.913232147693634
    2. '   ' → logprob: -0.913232147693634
    3. '    
' → logprob: -2.7882320880889893
    4. '  
' → logprob: -3.4132320880889893
    5. '<|end|>' → logprob: -3.5382320880889893
    6. ' if' → logprob: -3.9132320880889893
    7. 'if' → logprob: -4.038232326507568
    8. ' 
' → logprob: -4.038232326507568
    9. ' ' → logprob: -5.788232326507568
    10. ')' → logprob: -6.038232326507568

Token 222: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44842976331710815
    2. ' if' → logprob: -1.573429822921753
    3. 'L' → logprob: -2.073429822921753
    4. '   ' → logprob: -4.323429584503174
    5. ' L' → logprob: -4.448429584503174
    6. '#' (adapté à ' #') → logprob: -6.323429584503174
    7. 'i' → logprob: -8.198430061340332
    8. 'l' → logprob: -8.198430061340332
    9. ' #' → logprob: -8.198430061340332
    10. '
' → logprob: -8.948430061340332

Token 223: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4384925961494446
    2. 'L' → logprob: -1.3134925365447998
    3. ' if' → logprob: -2.6884925365448
    4. 'l' → logprob: -4.813492774963379
    5. ' L' → logprob: -4.938492774963379
    6. '#' → logprob: -6.438492774963379
    7. 'left' → logprob: -8.063492774963379
    8. '   ' → logprob: -8.813492774963379
    9. 'd' → logprob: -8.813492774963379
    10. 'offset' → logprob: -8.813492774963379

Token 224: ' considère' (ID: 176437)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.1159143447875977
    2. ' L' → logprob: -1.6159143447875977
    3. 'if' → logprob: -2.2409143447875977
    4. ' continue' → logprob: -2.2409143447875977
    5. ' if' → logprob: -2.7409143447875977
    6. 'append' → logprob: -2.8659143447875977
    7. 'aj' → logprob: -3.3659143447875977
    8. ' append' → logprob: -3.4909143447875977
    9. 'continue' → logprob: -3.7409143447875977
    10. ' ajoute' → logprob: -3.8659143447875977

Token 225: ' seulement' (ID: 32072)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2676824927330017
    2. 'i' → logprob: -2.3926825523376465
    3. ' x' → logprob: -2.8926825523376465
    4. 'x' → logprob: -3.6426825523376465
    5. ' ' → logprob: -4.0176825523376465
    6. ' L' → logprob: -4.7676825523376465
    7. ' (' → logprob: -4.7676825523376465
    8. ' max' → logprob: -5.0176825523376465
    9. 'L' → logprob: -5.2676825523376465
    10. '(' → logprob: -5.8926825523376465

Token 226: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.24884438514709473
    2. 'i' → logprob: -1.8738443851470947
    3. 'if' → logprob: -3.9988443851470947
    4. ' ' → logprob: -4.123844146728516
    5. ' if' → logprob: -4.498844146728516
    6. ' les' → logprob: -4.873844146728516
    7. '(i' → logprob: -6.248844146728516
    8. ' Y' → logprob: -6.373844146728516
    9. ' l' → logprob: -6.748844146728516
    10. ' x' → logprob: -6.748844146728516

Token 227: ' éléments' (ID: 57375)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5427086353302002
    2. 'if' → logprob: -1.4177086353302002
    3. 'L' → logprob: -2.6677086353302
    4. ' if' → logprob: -3.1677086353302
    5. ' i' → logprob: -3.4177086353302
    6. ' L' → logprob: -4.792708396911621
    7. 'R' → logprob: -5.667708396911621
    8. 'x' → logprob: -5.667708396911621
    9. ' distances' → logprob: -6.292708396911621
    10. ' R' → logprob: -6.542708396911621

Token 228: ' x' (ID: 1215)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3880613148212433
    2. 'Y' → logprob: -3.263061285018921
    3. ' à' → logprob: -3.388061285018921
    4. 'if' → logprob: -3.513061285018921
    5. ' Y' → logprob: -3.513061285018921
    6. ' ' → logprob: -3.638061285018921
    7. ' if' → logprob: -3.638061285018921
    8. 'y' → logprob: -4.0130615234375
    9. '[' → logprob: -4.1380615234375
    10. ',' → logprob: -4.2630615234375

Token 229: ' strict' (ID: 12035)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.074613094329834
    2. '-' → logprob: -2.074613094329834
    3. '<' → logprob: -2.574613094329834
    4. ' if' → logprob: -2.824613094329834
    5. ' <=' → logprob: -2.949613094329834
    6. ' -' → logprob: -3.074613094329834
    7. '+' → logprob: -3.324613094329834
    8. ',' → logprob: -3.449613094329834
    9. ')' → logprob: -3.449613094329834
    10. '<=' → logprob: -3.449613094329834

Token 230: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.00025669054593890905
    2. 'ly' → logprob: -8.750256538391113
    3. '<' → logprob: -10.500256538391113
    4. 'e' → logprob: -11.125256538391113
    5. 'ements' → logprob: -11.250256538391113
    6. 'ment' → logprob: -11.750256538391113
    7. 'ément' → logprob: -12.000256538391113
    8. '   ' → logprob: -12.500256538391113
    9. 'EMENT' → logprob: -12.625256538391113
    10. 'lement' → logprob: -12.625256538391113

Token 231: ' enc' (ID: 3219)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4923352301120758
    2. 'inf' → logprob: -1.1173352003097534
    3. '>' → logprob: -4.242335319519043
    4. 'plus' → logprob: -4.617335319519043
    5. ' inf' → logprob: -4.742335319519043
    6. 'sup' → logprob: -4.867335319519043
    7. ' plus' → logprob: -4.992335319519043
    8. ' <' → logprob: -5.242335319519043
    9. 'moins' → logprob: -6.242335319519043
    10. ' inférieur' → logprob: -6.367335319519043

Token 232: 'adr' (ID: 7753)
  Prédit: 'adr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adr' → logprob: -0.16463054716587067
    2. 'ore' → logprob: -2.914630651473999
    3. 'astr' → logprob: -3.289630651473999
    4. 'ad' → logprob: -4.03963041305542
    5. 'on' → logprob: -4.28963041305542
    6. 'onc' → logprob: -4.66463041305542
    7. 'ont' → logprob: -5.28963041305542
    8. 'adre' → logprob: -5.91463041305542
    9. '```' → logprob: -6.53963041305542
    10. 'aps' → logprob: -7.16463041305542

Token 233: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.24865484237670898
    2. 'ant' → logprob: -1.998654842376709
    3. 'lés' → logprob: -3.373654842376709
    4. 'agés' → logprob: -4.123654842376709
    5. 'a' → logprob: -4.498654842376709
    6. 'rés' → logprob: -5.623654842376709
    7. 'çant' → logprob: -5.873654842376709
    8. 'an' → logprob: -6.248654842376709
    9. '   ' → logprob: -6.373654842376709
    10. 'ad' → logprob: -6.498654842376709

Token 234: ' dans' (ID: 2671)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.5569833517074585
    2. ',' → logprob: -1.5569833517074585
    3. ' ' → logprob: -2.431983470916748
    4. ' ,' → logprob: -3.181983470916748
    5. ' entre' → logprob: -3.681983470916748
    6. ' by' → logprob: -3.806983470916748
    7. 'par' → logprob: -4.181983470916748
    8. ' between' → logprob: -5.306983470916748
    9. ')' → logprob: -6.056983470916748
    10. '<|end|>' → logprob: -6.806983470916748

Token 235: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.2759857475757599
    2. ' Y' → logprob: -1.5259857177734375
    3. 'L' → logprob: -4.9009857177734375
    4. ' L' → logprob: -6.1509857177734375
    5. ' ' → logprob: -6.1509857177734375
    6. ' (' → logprob: -6.5259857177734375
    7. ' la' → logprob: -6.6509857177734375
    8. '(' → logprob: -6.7759857177734375
    9. ')' → logprob: -7.1509857177734375
    10. 'range' → logprob: -7.2759857177734375

Token 236: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03994596377015114
    2. ',' → logprob: -4.03994607925415
    3. ' if' → logprob: -4.28994607925415
    4. ':' → logprob: -5.66494607925415
    5. '.' → logprob: -6.78994607925415
    6. ' ' → logprob: -6.91494607925415
    7. ')' → logprob: -7.78994607925415
    8. 'if' → logprob: -8.039945602416992
    9. '<|end|>' → logprob: -8.164945602416992
    10. ' (' → logprob: -8.289945602416992

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011071992106735706
    2. ' if' → logprob: -4.761072158813477
    3. ',' → logprob: -6.761072158813477
    4. '    
' → logprob: -8.261072158813477
    5. ' ' → logprob: -8.636072158813477
    6. ':' → logprob: -8.886072158813477
    7. '<|end|>' → logprob: -8.886072158813477
    8. '	if' → logprob: -9.011072158813477
    9. 'if' → logprob: -9.636072158813477
    10. '  
' → logprob: -10.011072158813477

Token 238: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20521584153175354
    2. 'if' (adapté à ' if') → logprob: -2.0802159309387207
    3. '   ' → logprob: -2.8302159309387207
    4. '	if' → logprob: -6.830215930938721
    5. ' ' → logprob: -7.830215930938721
    6. ' ' → logprob: -9.705215454101562
    7. '    ' → logprob: -10.705215454101562
    8. '  ' → logprob: -10.830215454101562
    9. '   ' → logprob: -11.705215454101562
    10. ' 
' → logprob: -12.080215454101562

Token 239: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5015812516212463
    2. 'i' → logprob: -1.8765811920166016
    3. ' i' → logprob: -2.0015811920166016
    4. ' ' → logprob: -2.8765811920166016
    5. '1' → logprob: -3.0015811920166016
    6. '   ' → logprob: -9.876581192016602
    7. '(i' → logprob: -10.001581192016602
    8. ' (' → logprob: -10.501581192016602
    9. '(' → logprob: -11.751581192016602
    10. '	i' → logprob: -11.876581192016602

Token 240: ' in' (ID: 306)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0621119923889637
    2. '>' → logprob: -2.8121120929718018
    3. '0' → logprob: -9.312111854553223
    4. ' <' → logprob: -10.937111854553223
    5. ' ' → logprob: -11.312111854553223
    6. ' !=' → logprob: -11.812111854553223
    7. '1' → logprob: -12.187111854553223
    8. ' ==' → logprob: -12.312111854553223
    9. ' >
' → logprob: -14.062111854553223
    10. '==' → logprob: -14.062111854553223

Token 241: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25802841782569885
    2. 'range' → logprob: -1.5080283880233765
    3. '0' → logprob: -6.008028507232666
    4. '[' → logprob: -6.633028507232666
    5. ' ' → logprob: -6.633028507232666
    6. '1' → logprob: -7.883028507232666
    7. ' [' → logprob: -8.633028030395508
    8. '(' → logprob: -9.133028030395508
    9. ' (' → logprob: -9.133028030395508
    10. '(range' → logprob: -9.383028030395508

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5861724831629544e-05
    2. ' ' → logprob: -9.875056266784668
    3. ')' → logprob: -13.750056266784668
    4. '{' → logprob: -13.875056266784668
    5. 'len' → logprob: -14.875056266784668
    6. '1' → logprob: -15.000056266784668
    7. 'range' → logprob: -15.000056266784668
    8. '[' → logprob: -15.125056266784668
    9. ',' → logprob: -15.125056266784668
    10. ']' → logprob: -15.375056266784668

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004625460598617792
    2. ',len' → logprob: -6.50462532043457
    3. ',N' → logprob: -6.62962532043457
    4. ' ,' → logprob: -6.62962532043457
    5. ',M' → logprob: -8.87962532043457
    6. ',
' → logprob: -9.25462532043457
    7. ',n' → logprob: -9.62962532043457
    8. ']' → logprob: -9.75462532043457
    9. ',i' → logprob: -10.50462532043457
    10. ',L' → logprob: -10.75462532043457

Token 244: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01800231821835041
    2. 'len' → logprob: -4.143002510070801
    3. ' M' → logprob: -6.268002510070801
    4. ' len' → logprob: -9.7680025100708
    5. ' ' → logprob: -12.7680025100708
    6. '   ' → logprob: -12.8930025100708
    7. 'm' → logprob: -13.2680025100708
    8. '  ' → logprob: -14.2680025100708
    9. 'N' → logprob: -14.3930025100708
    10. '```' → logprob: -14.3930025100708

Token 245: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02188101038336754
    2. ']' → logprob: -4.896881103515625
    3. ']:
' → logprob: -5.146881103515625
    4. '):' → logprob: -5.646881103515625
    5. ',' → logprob: -6.396881103515625
    6. '-' → logprob: -6.771881103515625
    7. ']):' → logprob: -6.771881103515625
    8. ' ]' → logprob: -8.396881103515625
    9. ' ' → logprob: -8.896881103515625
    10. ' -' → logprob: -9.396881103515625

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09500124305486679
    2. '   ' → logprob: -2.720001220703125
    3. ' continue' → logprob: -3.970001220703125
    4. 'continue' → logprob: -5.595001220703125
    5. '	continue' → logprob: -6.220001220703125
    6. '	   ' → logprob: -10.220001220703125
    7. '	' → logprob: -10.345001220703125
    8. '
' → logprob: -10.470001220703125
    9. '    
' → logprob: -10.470001220703125
    10. ' continues' → logprob: -11.220001220703125

Token 247: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4212338328361511
    2. 'continue' (adapté à ' continue') → logprob: -1.546233892440796
    3. ' continue' → logprob: -2.046233892440796
    4. '	continue' → logprob: -7.046233654022217
    5. '       ' → logprob: -7.671233654022217
    6. '    
' → logprob: -10.296234130859375
    7. 'contin' → logprob: -10.671234130859375
    8. '
' → logprob: -10.671234130859375
    9. '   ' → logprob: -10.671234130859375
    10. 'pass' → logprob: -11.046234130859375

Token 248: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1913740187883377
    2. '    
' → logprob: -2.3163740634918213
    3. '
' → logprob: -2.8163740634918213
    4. '  
' → logprob: -5.316373825073242
    5. 'L' → logprob: -6.316373825073242
    6. '\n' → logprob: -6.566373825073242
    7. '<|end|>' → logprob: -6.816373825073242
    8. '   
' → logprob: -6.941373825073242
    9. ' L' → logprob: -7.066373825073242
    10. ')' → logprob: -7.316373825073242

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006167205516248941
    2. '    
' → logprob: -5.881167411804199
    3. 'L' → logprob: -6.381167411804199
    4. '
' → logprob: -7.131167411804199
    5. ' L' → logprob: -7.506167411804199
    6. '\t' → logprob: -10.0061674118042
    7. '  
' → logprob: -10.1311674118042
    8. ' ' → logprob: -10.6311674118042
    9. 'i' → logprob: -11.1311674118042
    10. ')' → logprob: -11.1311674118042

Token 250: ' #' (ID: 1069)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04280687868595123
    2. ' L' → logprob: -3.91780686378479
    3. '   ' → logprob: -3.91780686378479
    4. 'l' → logprob: -6.292807102203369
    5. ' ' → logprob: -10.167806625366211
    6. 'if' → logprob: -10.292806625366211
    7. '	L' → logprob: -10.542806625366211
    8. '    
' → logprob: -10.730306625366211
    9. 'else' → logprob: -10.730306625366211
    10. ' l' → logprob: -11.292806625366211

Token 251: ' On' (ID: 2160)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.007595861330628395
    2. ' L' → logprob: -5.632596015930176
    3. 'l' → logprob: -5.882596015930176
    4. '   ' → logprob: -7.007596015930176
    5. 'left' → logprob: -8.507596015930176
    6. ' left' → logprob: -11.257596015930176
    7. ' ' → logprob: -11.632596015930176
    8. 'if' → logprob: -11.632596015930176
    9. 'd' → logprob: -11.632596015930176
    10. 'li' → logprob: -12.132596015930176

Token 252: ' récup' (ID: 62856)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.13314710557460785
    2. 'L' → logprob: -3.0081470012664795
    3. ' L' → logprob: -3.2581470012664795
    4. '   ' → logprob: -4.008147239685059
    5. ' append' → logprob: -4.758147239685059
    6. 'append' → logprob: -5.383147239685059
    7. '=' → logprob: -7.258147239685059
    8. ' app' → logprob: -7.383147239685059
    9. ' =' → logprob: -7.633147239685059
    10. 'l' → logprob: -7.883147239685059

Token 253: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0014921268448233604
    2. 'ére' → logprob: -7.251492023468018
    3. 'ere' → logprob: -7.376492023468018
    4. 'érer' → logprob: -10.001492500305176
    5. '   ' → logprob: -10.376492500305176
    6. 'è' → logprob: -10.626492500305176
    7. '       ' → logprob: -11.251492500305176
    8. 'e' → logprob: -11.626492500305176
    9. 'èr' → logprob: -12.501492500305176
    10. 'er' → logprob: -12.501492500305176

Token 254: ' les' (ID: 1341)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.25725606083869934
    2. 'Y' → logprob: -2.007256031036377
    3. ' L' → logprob: -2.882256031036377
    4. ' Y' → logprob: -4.757256031036377
    5. 'l' → logprob: -4.882256031036377
    6. 'y' → logprob: -5.007256031036377
    7. 'left' → logprob: -5.257256031036377
    8. '   ' → logprob: -5.632256031036377
    9. ' y' → logprob: -6.757256031036377
    10. ' left' → logprob: -7.382256031036377

Token 255: ' deux' (ID: 10301)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.6610158085823059
    2. 'L' → logprob: -0.9110158085823059
    3. 'y' → logprob: -2.786015748977661
    4. 'left' → logprob: -4.53601598739624
    5. 'i' → logprob: -5.53601598739624
    6. 'l' → logprob: -7.16101598739624
    7. '(Y' → logprob: -7.66101598739624
    8. ' L' → logprob: -8.036015510559082
    9. ' Y' → logprob: -8.036015510559082
    10. 'x' → logprob: -8.036015510559082

Token 256: ' born' (ID: 12275)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.3107573986053467
    2. 'born' → logprob: -1.5607573986053467
    3. 'points' → logprob: -1.5607573986053467
    4. 'positions' → logprob: -2.4357573986053467
    5. ' points' → logprob: -2.5607573986053467
    6. 'Y' → logprob: -3.4357573986053467
    7. ' born' → logprob: -3.4357573986053467
    8. 'b' → logprob: -3.9357573986053467
    9. 'élé' → logprob: -4.060757637023926
    10. ' valeurs' → logprob: -4.560757637023926

Token 257: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -9.710618905955926e-05
    2. 'ages' → logprob: -10.000097274780273
    3. 'e' → logprob: -11.375097274780273
    4. '   ' → logprob: -12.000097274780273
    5. 's' → logprob: -12.125097274780273
    6. 'ess' → logprob: -12.250097274780273
    7. 'esses' → logprob: -12.250097274780273
    8. ' es' → logprob: -12.375097274780273
    9. '[i' → logprob: -12.875097274780273
    10. '[' → logprob: -13.250097274780273

Token 258: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0074279652908444405
    2. 'L' → logprob: -6.382428169250488
    3. ' L' → logprob: -6.507428169250488
    4. ',' → logprob: -7.007428169250488
    5. 'left' → logprob: -7.007428169250488
    6. ' gauche' → logprob: -7.757428169250488
    7. 'Y' → logprob: -8.507428169250488
    8. ' left' → logprob: -8.507428169250488
    9. 'b' → logprob: -9.007428169250488
    10. 'g' → logprob: -9.007428169250488

Token 259: ''enc' (ID: 174736)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.21565866470336914
    2. ' interval' → logprob: -2.965658664703369
    3. ' l' → logprob: -3.090658664703369
    4. 'l' → logprob: -3.340658664703369
    5. 'i' → logprob: -3.840658664703369
    6. 'Y' → logprob: -5.340658664703369
    7. ' enc' → logprob: -5.465658664703369
    8. 'enc' → logprob: -5.590658664703369
    9. ' Y' → logprob: -5.590658664703369
    10. ' i' → logprob: -5.715658664703369

Token 260: 'ad' (ID: 324)
  Prédit: 'ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ad' → logprob: -0.0068144770339131355
    2. 'r' → logprob: -6.256814479827881
    3. 'agement' → logprob: -6.381814479827881
    4. 'adre' → logprob: -7.631814479827881
    5. 'ord' → logprob: -8.006814002990723
    6. 'u' → logprob: -8.006814002990723
    7. 'erc' → logprob: -8.381814002990723
    8. 'rage' → logprob: -8.631814002990723
    9. 'age' → logprob: -8.756814002990723
    10. 'arc' → logprob: -8.756814002990723

Token 261: 'rement' (ID: 66132)
  Prédit: 'rage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rage' → logprob: -0.4715099036693573
    2. 'r' → logprob: -1.0965099334716797
    3. 'age' → logprob: -3.3465099334716797
    4. 'rement' → logprob: -6.59650993347168
    5. 're' → logprob: -6.84650993347168
    6. 'rance' → logprob: -6.97150993347168
    7. 'riage' → logprob: -7.47150993347168
    8. 'e' → logprob: -7.59650993347168
    9. 'ge' → logprob: -7.84650993347168
    10. 'agement' → logprob: -8.34650993347168

Token 262: ' entour' (ID: 130657)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21037499606609344
    2. ' L' → logprob: -2.7103750705718994
    3. 'L' → logprob: -2.8353750705718994
    4. 'left' → logprob: -3.7103750705718994
    5. ' left' → logprob: -4.96037483215332
    6. ',' → logprob: -5.46037483215332
    7. ':' → logprob: -5.46037483215332
    8. ' R' → logprob: -5.83537483215332
    9. 'Y' → logprob: -6.08537483215332
    10. '[left' → logprob: -6.33537483215332

Token 263: 'ant' (ID: 493)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.206767737865448
    2. 'ant' → logprob: -2.0817677974700928
    3. ' x' → logprob: -3.8317677974700928
    4. '   ' → logprob: -4.081767559051514
    5. 'ées' → logprob: -5.206767559051514
    6. 'e' → logprob: -5.331767559051514
    7. 'ent' → logprob: -5.706767559051514
    8. 'le' → logprob: -6.081767559051514
    9. '{x' → logprob: -6.581767559051514
    10. '       ' → logprob: -6.706767559051514

Token 264: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04620750620961189
    2. ' x' → logprob: -3.1712074279785156
    3. 'Y' → logprob: -6.046207427978516
    4. ' Y' → logprob: -8.046207427978516
    5. 'X' → logprob: -8.296207427978516
    6. 'y' → logprob: -9.296207427978516
    7. 'i' → logprob: -10.671207427978516
    8. ' ' → logprob: -10.671207427978516
    9. '   ' → logprob: -11.421207427978516
    10. '
' → logprob: -11.421207427978516

Token 265: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0736871138215065
    2. 'L' → logprob: -3.4486870765686035
    3. ',' → logprob: -4.4486870765686035
    4. ':' → logprob: -4.5736870765686035
    5. ' L' → logprob: -4.9486870765686035
    6. 'R' → logprob: -6.6986870765686035
    7. '    
' → logprob: -6.6986870765686035
    8. '[' → logprob: -6.8236870765686035
    9. ' :' → logprob: -7.1986870765686035
    10. '<|end|>' → logprob: -7.3236870765686035

Token 266: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.1427105963230133
    2. ' Y' → logprob: -2.0177106857299805
    3. ' ' → logprob: -11.64271068572998
    4. 'y' → logprob: -11.89271068572998
    5. '	Y' → logprob: -12.64271068572998
    6. '   ' → logprob: -13.14271068572998
    7. '`' → logprob: -13.14271068572998
    8. '
' → logprob: -13.64271068572998
    9. ',' → logprob: -13.70521068572998
    10. ' la' → logprob: -13.83021068572998

Token 267: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07745451480150223
    2. 'L' → logprob: -2.8274545669555664
    3. ' L' → logprob: -4.952454566955566
    4. ',' → logprob: -5.827454566955566
    5. ':' → logprob: -6.202454566955566
    6. 'R' → logprob: -6.827454566955566
    7. '    
' → logprob: -7.202454566955566
    8. ' R' → logprob: -8.202454566955566
    9. '  ' → logprob: -8.452454566955566
    10. '    ' → logprob: -9.077454566955566

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008801525458693504
    2. 'L' → logprob: -4.883801460266113
    3. ' L' → logprob: -7.258801460266113
    4. '    
' → logprob: -8.758801460266113
    5. '
' → logprob: -9.008801460266113
    6. ',' → logprob: -9.133801460266113
    7. ':' → logprob: -11.508801460266113
    8. '	L' → logprob: -11.633801460266113
    9. '(L' → logprob: -11.758801460266113
    10. '```' → logprob: -11.758801460266113

Token 269: ' y' (ID: 342)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2160467803478241
    2. 'left' → logprob: -2.3410468101501465
    3. 'l' → logprob: -2.8410468101501465
    4. 'g' → logprob: -4.5910468101501465
    5. ' left' → logprob: -4.7160468101501465
    6. ' L' → logprob: -4.7160468101501465
    7. 'a' → logprob: -5.4660468101501465
    8. '   ' → logprob: -6.5910468101501465
    9. 'Lg' → logprob: -6.9660468101501465
    10. 'R' → logprob: -7.2160468101501465

Token 270: '0' (ID: 15)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.2270514965057373
    2. 'g' → logprob: -2.4770514965057373
    3. '_g' → logprob: -3.1020514965057373
    4. 'l' → logprob: -3.4770514965057373
    5. '_l' → logprob: -4.352051734924316
    6. 'L' → logprob: -4.727051734924316
    7. '_lo' → logprob: -5.227051734924316
    8. 'left' → logprob: -5.352051734924316
    9. '1' → logprob: -5.852051734924316
    10. 'i' → logprob: -6.227051734924316

Token 271: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2764699459075928
    2. '=' → logprob: -1.5264699459075928
    3. ',' → logprob: -3.7764699459075928
    4. ',y' → logprob: -7.276470184326172
    5. '=y' → logprob: -7.526470184326172
    6. ' ,' → logprob: -10.401470184326172
    7. '_left' → logprob: -10.526470184326172
    8. ' ' → logprob: -11.151470184326172
    9. ',left' → logprob: -12.026470184326172
    10. ',Y' → logprob: -12.151470184326172

Token 272: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47484779357910156
    2. ' y' → logprob: -0.9748477935791016
    3. 'Y' → logprob: -7.224847793579102
    4. ' Y' → logprob: -10.224847793579102
    5. '<|end|>' → logprob: -12.724847793579102
    6. ' =' → logprob: -14.224847793579102
    7. '	y' → logprob: -14.724847793579102
    8. ' ' → logprob: -14.724847793579102
    9. '    ' → logprob: -15.099847793579102
    10. '   ' → logprob: -15.099847793579102

Token 273: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4246077239513397
    2. '=' → logprob: -1.174607753753662
    3. ',' → logprob: -4.174607753753662
    4. '1' → logprob: -4.424607753753662
    5. '_' → logprob: -5.799607753753662
    6. ']' → logprob: -6.424607753753662
    7. ')' → logprob: -7.424607753753662
    8. '=y' → logprob: -7.424607753753662
    9. ',i' → logprob: -7.549607753753662
    10. 'i' → logprob: -7.674607753753662

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132685720920563
    2. ' =' → logprob: -1.3132685422897339
    3. ',' → logprob: -12.313268661499023
    4. '=y' → logprob: -13.563268661499023
    5. ' ' → logprob: -14.563268661499023
    6. ')' → logprob: -16.063268661499023
    7. '=
' → logprob: -16.313268661499023
    8. ']' → logprob: -16.813268661499023
    9. ']=' → logprob: -17.563268661499023
    10. '=

' → logprob: -17.563268661499023

Token 275: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.4740773141384125
    2. 'Y' → logprob: -0.9740773439407349
    3. '	Y' → logprob: -15.724077224731445
    4. ' ' → logprob: -16.474077224731445
    5. '   ' → logprob: -17.224077224731445
    6. '(Y' → logprob: -17.349077224731445
    7. ' y' → logprob: -17.974077224731445
    8. 'y' → logprob: -18.349077224731445
    9. ',Y' → logprob: -19.099077224731445
    10. ' ' → logprob: -19.224077224731445

Token 276: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00038348292582668364
    2. 'i' → logprob: -8.000383377075195
    3. '[' → logprob: -10.500383377075195
    4. '   ' → logprob: -11.750383377075195
    5. ',i' → logprob: -12.875383377075195
    6. '
' → logprob: -13.125383377075195
    7. '[b' → logprob: -13.625383377075195
    8. '[
' → logprob: -13.625383377075195
    9. ' i' → logprob: -14.125383377075195
    10. ',' → logprob: -14.625383377075195

Token 277: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013580904342234135
    2. ' -' → logprob: -6.6263580322265625
    3. '],' → logprob: -10.626358032226562
    4. '1' → logprob: -12.251358032226562
    5. ']' → logprob: -13.501358032226562
    6. '0' → logprob: -14.376358032226562
    7. 'i' → logprob: -15.126358032226562
    8. '   ' → logprob: -15.126358032226562
    9. ' ' → logprob: -15.376358032226562
    10. '−' → logprob: -15.626358032226562

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0339031834737398e-05
    2. ' ' → logprob: -10.875020027160645
    3. ']' → logprob: -14.375020027160645
    4. ',' → logprob: -15.500020027160645
    5. 'i' → logprob: -16.06252098083496
    6. '2' → logprob: -16.43752098083496
    7. '   ' → logprob: -16.87502098083496
    8. '```' → logprob: -16.93752098083496
    9. '0' → logprob: -17.06252098083496
    10. '],' → logprob: -17.12502098083496

Token 279: ':i' (ID: 34041)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.08953115344047546
    2. ',' → logprob: -2.464531183242798
    3. ']' → logprob: -7.589530944824219
    4. ' ,' → logprob: -10.214530944824219
    5. ' ],' → logprob: -10.339530944824219
    6. ',y' → logprob: -11.339530944824219
    7. 'y' → logprob: -13.589530944824219
    8. '],
' → logprob: -13.839530944824219
    9. '),' → logprob: -14.464530944824219
    10. ',x' → logprob: -14.714530944824219

Token 280: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.805981972021982e-05
    2. '+i' → logprob: -9.62509822845459
    3. ' +' → logprob: -10.75009822845459
    4. 'i' → logprob: -12.50009822845459
    5. '1' → logprob: -12.75009822845459
    6. '2' → logprob: -13.37509822845459
    7. '+
' → logprob: -14.12509822845459
    8. ']' → logprob: -14.25009822845459
    9. '],' → logprob: -15.62509822845459
    10. ']+' → logprob: -16.000097274780273

Token 281: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47670072317123413
    2. '1' → logprob: -0.9767007231712341
    3. '+' → logprob: -5.976700782775879
    4. ' ' → logprob: -9.476700782775879
    5. ']' → logprob: -13.101700782775879
    6. '```' → logprob: -13.976700782775879
    7. '   ' → logprob: -14.351700782775879
    8. ' +' → logprob: -14.664200782775879
    9. '3' → logprob: -14.726700782775879
    10. '=' → logprob: -15.101700782775879

Token 282: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.0590548703912646e-05
    2. ']
' → logprob: -11.000030517578125
    3. ' ]' → logprob: -11.500030517578125
    4. ']
' → logprob: -13.750030517578125
    5. '2' → logprob: -14.000030517578125
    6. '[' → logprob: -14.250030517578125
    7. ']

' → logprob: -15.125030517578125
    8. '0' → logprob: -15.625030517578125
    9. '],' → logprob: -16.000030517578125
    10. '   ' → logprob: -16.000030517578125

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02712530456483364
    2. 'L' → logprob: -4.402125358581543
    3. ',' → logprob: -5.277125358581543
    4. ' L' → logprob: -5.402125358581543
    5. '    
' → logprob: -6.652125358581543
    6. '
' → logprob: -7.152125358581543
    7. '	L' → logprob: -7.777125358581543
    8. ')' → logprob: -8.027125358581543
    9. ',L' → logprob: -8.277125358581543
    10. '  
' → logprob: -8.402125358581543

Token 284: ' #' (ID: 1069)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6978093981742859
    2. '   ' → logprob: -0.8228093981742859
    3. 'l' → logprob: -3.6978094577789307
    4. ' L' → logprob: -4.072809219360352
    5. 'd' → logprob: -4.822809219360352
    6. '
' → logprob: -5.822809219360352
    7. '    
' → logprob: -6.197809219360352
    8. 'delta' → logprob: -6.697809219360352
    9. 'if' → logprob: -6.822809219360352
    10. 'import' → logprob: -7.197809219360352

Token 285: ' On' (ID: 2160)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04277946427464485
    2. ' L' → logprob: -4.167779445648193
    3. 'l' → logprob: -4.667779445648193
    4. 'd' → logprob: -4.917779445648193
    5. 'offset' → logprob: -6.792779445648193
    6. '#' → logprob: -6.917779445648193
    7. 'if' → logprob: -7.042779445648193
    8. 'length' → logprob: -7.292779445648193
    9. 'diff' → logprob: -7.292779445648193
    10. 'delta' → logprob: -7.292779445648193

Token 286: ' ajoute' (ID: 91611)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20241360366344452
    2. 'L' → logprob: -1.952413558959961
    3. ' L' → logprob: -3.827413558959961
    4. 'append' → logprob: -4.327413558959961
    5. '#' → logprob: -6.327413558959961
    6. ' #' → logprob: -7.327413558959961
    7. 'l' → logprob: -7.702413558959961
    8. ' append' → logprob: -7.702413558959961
    9. '.extend' → logprob: -7.702413558959961
    10. '.' → logprob: -8.077413558959961

Token 287: ' la' (ID: 557)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6952291131019592
    2. '(y' → logprob: -1.0702290534973145
    3. ' y' → logprob: -2.0702290534973145
    4. ' (' → logprob: -3.9452290534973145
    5. 'L' → logprob: -5.1952290534973145
    6. '(' → logprob: -5.4452290534973145
    7. ' L' → logprob: -6.5702290534973145
    8. '(L' → logprob: -7.8202290534973145
    9. '(x' → logprob: -8.320229530334473
    10. 'i' → logprob: -8.820229530334473

Token 288: ' différence' (ID: 79196)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.3447563946247101
    2. 'y' → logprob: -1.4697563648223877
    3. ' L' → logprob: -3.9697563648223877
    4. ' y' → logprob: -4.094756603240967
    5. 'R' → logprob: -4.344756603240967
    6. '(y' → logprob: -5.094756603240967
    7. 'i' → logprob: -5.469756603240967
    8. ' R' → logprob: -7.094756603240967
    9. '(L' → logprob: -7.344756603240967
    10. ' (' → logprob: -7.844756603240967

Token 289: ' (' (ID: 350)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3991074562072754
    2. '   ' → logprob: -1.8991074562072754
    3. ' y' → logprob: -2.0241074562072754
    4. ',' → logprob: -3.3991074562072754
    5. '(y' → logprob: -5.024107456207275
    6. ' ,' → logprob: -6.399107456207275
    7. ' (' → logprob: -6.524107456207275
    8. 'L' → logprob: -7.399107456207275
    9. ',y' → logprob: -7.399107456207275
    10. '(' → logprob: -7.399107456207275

Token 290: 'éc' (ID: 5675)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06661029160022736
    2. ' x' → logprob: -2.941610336303711
    3. 'y' → logprob: -4.816610336303711
    4. ' y' → logprob: -5.816610336303711
    5. '(x' → logprob: -8.441610336303711
    6. ')' → logprob: -9.191610336303711
    7. 'L' → logprob: -9.316610336303711
    8. ',' → logprob: -9.816610336303711
    9. ' L' → logprob: -10.816610336303711
    10. '(' → logprob: -11.191610336303711

Token 291: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.003870973829180002
    2. 'arts' → logprob: -6.628870964050293
    3. '   ' → logprob: -7.253870964050293
    4. ' y' → logprob: -7.503870964050293
    5. 'e' → logprob: -8.253870964050293
    6. 'arte' → logprob: -8.753870964050293
    7. ' x' → logprob: -8.878870964050293
    8. 'y' → logprob: -9.253870964050293
    9. '  ' → logprob: -9.503870964050293
    10. 'x' → logprob: -9.753870964050293

Token 292: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6960176229476929
    2. '=' → logprob: -1.5710176229476929
    3. ' y' → logprob: -2.4460177421569824
    4. 'y' → logprob: -2.6960177421569824
    5. 'x' → logprob: -3.8210177421569824
    6. ' -' → logprob: -3.9460177421569824
    7. ')' → logprob: -4.071017742156982
    8. '=y' → logprob: -4.196017742156982
    9. '-' → logprob: -4.446017742156982
    10. '   ' → logprob: -4.571017742156982

Token 293: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18537366390228271
    2. 'y' → logprob: -2.6853737831115723
    3. ',' → logprob: -2.9353737831115723
    4. 'L' → logprob: -3.5603737831115723
    5. ' y' → logprob: -5.060373783111572
    6. 'R' → logprob: -5.935373783111572
    7. ' L' → logprob: -6.435373783111572
    8. ' ,' → logprob: -6.560373783111572
    9. ',y' → logprob: -6.810373783111572
    10. '(y' → logprob: -6.935373783111572

Token 294: ' gauche' (ID: 58367)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.008937172591686249
    2. ' L' → logprob: -4.758937358856201
    3. 'R' → logprob: -8.383936882019043
    4. ' ' → logprob: -9.758936882019043
    5. 'l' → logprob: -12.133936882019043
    6. ' R' → logprob: -12.258936882019043
    7. '(L' → logprob: -12.258936882019043
    8. ' (' → logprob: -13.008936882019043
    9. '   ' → logprob: -13.258936882019043
    10. 'y' → logprob: -13.258936882019043

Token 295: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5819801688194275
    2. 'L' → logprob: -0.9569801688194275
    3. ',' → logprob: -2.9569802284240723
    4. ' L' → logprob: -5.706980228424072
    5. ' ,' → logprob: -7.831980228424072
    6. ',
' → logprob: -8.456979751586914
    7. ',L' → logprob: -8.581979751586914
    8. ' (' → logprob: -8.706979751586914
    9. '(L' → logprob: -8.956979751586914
    10. '=' → logprob: -8.956979751586914

Token 296: ' à' (ID: 1221)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.7290324568748474
    2. 'y' → logprob: -1.1040325164794922
    3. 'R' → logprob: -2.979032516479492
    4. '1' → logprob: -3.229032516479492
    5. ' (' → logprob: -4.354032516479492
    6. ' droite' → logprob: -4.354032516479492
    7. ' R' → logprob: -4.354032516479492
    8. '(y' → logprob: -4.479032516479492
    9. 'right' → logprob: -4.854032516479492
    10. ' right' → logprob: -5.479032516479492

Token 297: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.543624222278595
    2. ' droite' → logprob: -0.918624222278595
    3. 'right' → logprob: -4.293624401092529
    4. 'la' → logprob: -6.043624401092529
    5. '```' → logprob: -6.418624401092529
    6. 'l' → logprob: -7.668624401092529
    7. ' ' → logprob: -7.918624401092529
    8. '`' → logprob: -7.918624401092529
    9. ' ' → logprob: -8.418623924255371
    10. ' right' → logprob: -8.668623924255371

Token 298: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21318605542182922
    2. 'L' → logprob: -1.8381860256195068
    3. ',' → logprob: -3.713186025619507
    4. ' L' → logprob: -5.338186264038086
    5. '	L' → logprob: -6.838186264038086
    6. ',L' → logprob: -7.088186264038086
    7. '(L' → logprob: -7.963186264038086
    8. ' ,' → logprob: -8.588186264038086
    9. ' (' → logprob: -8.588186264038086
    10. '(' → logprob: -8.713186264038086

Token 299: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0007125511183403432
    2. ' L' → logprob: -7.2507123947143555
    3. ' ' → logprob: -13.125712394714355
    4. 'l' → logprob: -15.500712394714355
    5. '(L' → logprob: -16.125713348388672
    6. '	L' → logprob: -16.250713348388672
    7. '   ' → logprob: -16.500713348388672
    8. 'R' → logprob: -16.750713348388672
    9. ',' → logprob: -17.250713348388672
    10. '  ' → logprob: -17.750713348388672

Token 300: ' et' (ID: 859)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003782416461035609
    2. '.' → logprob: -8.125378608703613
    3. ',' → logprob: -10.125378608703613
    4. 'append' → logprob: -10.750378608703613
    5. '.extend' → logprob: -11.125378608703613
    6. ' and' → logprob: -13.375378608703613
    7. ' .' → logprob: -14.125378608703613
    8. 'L' → logprob: -14.250378608703613
    9. '   ' → logprob: -14.250378608703613
    10. '.insert' → logprob: -15.125378608703613

Token 301: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.043006282299757004
    2. ' R' → logprob: -3.168006181716919
    3. ' ' → logprob: -12.66800594329834
    4. ',' → logprob: -13.41800594329834
    5. ')' → logprob: -13.91800594329834
    6. '
' → logprob: -14.66800594329834
    7. '`' → logprob: -15.54300594329834
    8. ' ' → logprob: -16.168006896972656
    9. '   ' → logprob: -16.168006896972656
    10. '#' → logprob: -16.543006896972656

Token 302: '
' (ID: 198)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5549122095108032
    2. '   ' → logprob: -1.4299122095108032
    3. 'L' → logprob: -2.1799120903015137
    4. ',' → logprob: -2.8049120903015137
    5. ',L' → logprob: -5.429912090301514
    6. '[L' → logprob: -6.054912090301514
    7. '
' → logprob: -6.304912090301514
    8. '(L' → logprob: -6.929912090301514
    9. '[' → logprob: -7.429912090301514
    10. ',
' → logprob: -7.554912090301514

Token 303: '   ' (ID: 271)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.15862227976322174
    2. '   ' → logprob: -2.0336222648620605
    3. ',' → logprob: -5.1586222648620605
    4. ' L' → logprob: -5.9086222648620605
    5. ',L' → logprob: -6.2836222648620605
    6. '	L' → logprob: -6.4086222648620605
    7. '.append' → logprob: -6.6586222648620605
    8. '(L' → logprob: -7.1586222648620605
    9. '[' → logprob: -7.4086222648620605
    10. '[L' → logprob: -8.158622741699219

Token 304: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.001347615267150104
    2. ' L' → logprob: -7.251347541809082
    3. '   ' → logprob: -7.376347541809082
    4. ',' → logprob: -13.001347541809082
    5. '(L' → logprob: -13.376347541809082
    6. 'R' → logprob: -13.501347541809082
    7. 'l' → logprob: -13.626347541809082
    8. ',L' → logprob: -13.876347541809082
    9. '	L' → logprob: -14.376347541809082
    10. '```' → logprob: -14.751347541809082

Token 305: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.85235276655294e-05
    2. '.' → logprob: -9.375088691711426
    3. '.app' → logprob: -13.125088691711426
    4. '.ap' → logprob: -14.125088691711426
    5. ' .' → logprob: -14.500088691711426
    6. 'append' → logprob: -15.125088691711426
    7. '.extend' → logprob: -16.62508773803711
    8. ').' → logprob: -17.50008773803711
    9. '.add' → logprob: -18.62508773803711
    10. '.Append' → logprob: -18.87508773803711

Token 306: '(y' (ID: 14684)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0012857100227847695
    2. '(' → logprob: -7.626285552978516
    3. 'x' → logprob: -7.626285552978516
    4. '(y' → logprob: -8.251285552978516
    5. '((' → logprob: -10.251285552978516
    6. '(abs' → logprob: -12.001285552978516
    7. '(min' → logprob: -12.751285552978516
    8. '(max' → logprob: -13.876285552978516
    9. '(
' → logprob: -14.001285552978516
    10. '(i' → logprob: -14.376285552978516

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4442835748195648
    2. '1' → logprob: -1.0692836046218872
    3. '[i' → logprob: -5.069283485412598
    4. 'i' → logprob: -5.444283485412598
    5. '[' → logprob: -6.569283485412598
    6. 'y' → logprob: -6.944283485412598
    7. ')' → logprob: -8.069283485412598
    8. '_' → logprob: -8.506783485412598
    9. '

' → logprob: -8.506783485412598
    10. 'x' → logprob: -8.506783485412598

Token 308: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9837831258773804
    2. ' -' → logprob: -1.1087831258773804
    3. '-' → logprob: -2.10878324508667
    4. '+' → logprob: -2.35878324508667
    5. '-x' → logprob: -2.73378324508667
    6. ' +' → logprob: -5.10878324508667
    7. ' )' → logprob: -5.60878324508667
    8. '+x' → logprob: -5.85878324508667
    9. ')
' → logprob: -7.23378324508667
    10. '-)' → logprob: -7.85878324508667

Token 309: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001573544810526073
    2. ' x' → logprob: -6.50157356262207
    3. 'y' → logprob: -10.12657356262207
    4. '1' → logprob: -11.00157356262207
    5. ')' → logprob: -12.00157356262207
    6. ' ' → logprob: -13.12657356262207
    7. ' y' → logprob: -13.62657356262207
    8. '0' → logprob: -13.87657356262207
    9. '   ' → logprob: -14.12657356262207
    10. ')x' → logprob: -15.06407356262207

Token 310: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005405934061855078
    2. ' )' → logprob: -5.380405902862549
    3. ')
' → logprob: -7.255405902862549
    4. ' )
' → logprob: -9.880406379699707
    5. '+' → logprob: -10.755406379699707
    6. ')
' → logprob: -13.505406379699707
    7. ' +' → logprob: -13.505406379699707
    8. '')' → logprob: -14.380406379699707
    9. ')

' → logprob: -14.755406379699707
    10. '   ' → logprob: -14.880406379699707

Token 311: '   ' (ID: 271)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5368304252624512
    2. ' R' → logprob: -1.2868304252624512
    3. ')' → logprob: -2.411830425262451
    4. ' )' → logprob: -4.161830425262451
    5. '   ' → logprob: -4.911830425262451
    6. ' ' → logprob: -5.036830425262451
    7. '<|end|>' → logprob: -5.036830425262451
    8. ' 
' → logprob: -5.411830425262451
    9. ' )
' → logprob: -6.161830425262451
    10. ')
' → logprob: -6.911830425262451

Token 312: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.0023958671372383833
    2. 'y' → logprob: -6.1273956298828125
    3. ' R' → logprob: -8.752395629882812
    4. 'x' → logprob: -10.752395629882812
    5. ' y' → logprob: -11.127395629882812
    6. 'r' → logprob: -12.252395629882812
    7. '(y' → logprob: -12.502395629882812
    8. '   ' → logprob: -12.627395629882812
    9. 'Y' → logprob: -13.127395629882812
    10. '(' → logprob: -13.877395629882812

Token 313: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0036596914287656546
    2. '.' → logprob: -5.628659725189209
    3. ' .' → logprob: -9.87865924835205
    4. 'append' → logprob: -12.25365924835205
    5. '.extend' → logprob: -13.37865924835205
    6. ').' → logprob: -13.50365924835205
    7. '.ap' → logprob: -15.50365924835205
    8. '].' → logprob: -16.253660202026367
    9. ')' → logprob: -16.503660202026367
    10. ' append' → logprob: -16.753660202026367

Token 314: '(y' (ID: 14684)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.513793408870697
    2. 'x' → logprob: -1.3887934684753418
    3. '(y' → logprob: -2.013793468475342
    4. 'y' → logprob: -4.263793468475342
    5. '(' → logprob: -5.638793468475342
    6. ' x' → logprob: -7.263793468475342
    7. ' y' → logprob: -8.138792991638184
    8. ' (' → logprob: -8.138792991638184
    9. '	x' → logprob: -13.638792991638184
    10. ' ' → logprob: -13.951292991638184

Token 315: '1' (ID: 16)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.7735381722450256
    2. 'x' → logprob: -1.3985381126403809
    3. 'y' → logprob: -1.7735381126403809
    4. ' x' → logprob: -2.273538112640381
    5. ' -' → logprob: -4.773538112640381
    6. '-' → logprob: -6.023538112640381
    7. '1' → logprob: -6.148538112640381
    8. '(x' → logprob: -6.648538112640381
    9. ' ' → logprob: -6.898538112640381
    10. '(y' → logprob: -7.023538112640381

Token 316: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00318163656629622
    2. '-' → logprob: -5.753181457519531
    3. ' ' → logprob: -12.878181457519531
    4. ')' → logprob: -14.378181457519531
    5. '<|end|>' → logprob: -14.878181457519531
    6. ' ' → logprob: -15.878181457519531
    7. '[' → logprob: -16.25318145751953
    8. '-x' → logprob: -16.37818145751953
    9. ' -
' → logprob: -17.25318145751953
    10. ' +' → logprob: -17.75318145751953

Token 317: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.026301225647330284
    2. ' x' → logprob: -3.651301145553589
    3. '1' → logprob: -15.151301383972168
    4. ' ' → logprob: -15.526301383972168
    5. ')x' → logprob: -15.776301383972168
    6. ')' → logprob: -15.901301383972168
    7. '	x' → logprob: -16.02630043029785
    8. 'y' → logprob: -17.02630043029785
    9. '_x' → logprob: -17.02630043029785
    10. '(x' → logprob: -17.27630043029785

Token 318: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001305950863752514
    2. ' )' → logprob: -9.875130653381348
    3. '<|end|>' → logprob: -9.875130653381348
    4. ')
' → logprob: -10.750130653381348
    5. '   ' → logprob: -13.250130653381348
    6. '')' → logprob: -14.000130653381348
    7. '
' → logprob: -14.000130653381348
    8. '```' → logprob: -14.500130653381348
    9. '}' → logprob: -15.125130653381348
    10. '#' → logprob: -15.125130653381348

Token 319: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07383482903242111
    2. '<|end|>' → logprob: -2.9488348960876465
    3. ')' → logprob: -5.0738348960876465
    4. '```' → logprob: -5.6988348960876465
    5. '\n' → logprob: -6.0738348960876465
    6. '#' → logprob: -6.5738348960876465
    7. '  
' → logprob: -7.0738348960876465
    8. 'L' → logprob: -7.1988348960876465
    9. ' 
' → logprob: -7.3238348960876465
    10. '+' → logprob: -7.3238348960876465

Token 320: ' ---' (ID: 26691)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6356918811798096
    2. '#' → logprob: -1.3856918811798096
    3. 'L' → logprob: -2.3856918811798096
    4. 'from' → logprob: -2.7606918811798096
    5. 'import' → logprob: -2.7606918811798096
    6. ' if' → logprob: -7.1356916427612305
    7. 'def' → logprob: -8.88569164276123
    8. 'assert' → logprob: -8.88569164276123
    9. ' #' → logprob: -9.76069164276123
    10. 'If' → logprob: -9.76069164276123

Token 321: ' Dé' (ID: 27247)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.848127007484436
    2. '#' → logprob: -0.973127007484436
    3. 'from' → logprob: -2.4731268882751465
    4. ' import' → logprob: -2.9731268882751465
    5. ' #' → logprob: -3.7231268882751465
    6. ' from' → logprob: -5.0981268882751465
    7. 'coord' → logprob: -5.3481268882751465
    8. '
' → logprob: -5.9731268882751465
    9. 'all' → logprob: -6.2231268882751465
    10. 'L' → logprob: -6.4731268882751465

Token 322: 'but' (ID: 8293)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.024875111877918243
    2. 'f' → logprob: -3.7748751640319824
    3. 'but' → logprob: -6.524875164031982
    4. 'veloppement' → logprob: -9.399874687194824
    5. 'claration' → logprob: -11.649874687194824
    6. '#' → logprob: -11.649874687194824
    7. 'part' → logprob: -11.774874687194824
    8. ' finition' → logprob: -12.024874687194824
    9. '...' → logprob: -12.149874687194824
    10. 'fert' → logprob: -12.274874687194824

Token 323: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.07889331132173538
    2. '<|end|>' → logprob: -3.3288934230804443
    3. '#' → logprob: -4.578893184661865
    4. ' de' → logprob: -4.953893184661865
    5. 'of' → logprob: -5.203893184661865
    6. ' des' → logprob: -5.453893184661865
    7. 'de' → logprob: -5.703893184661865
    8. '```' → logprob: -5.953893184661865
    9. '=' → logprob: -6.578893184661865
    10. 'for' → logprob: -6.953893184661865

Token 324: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08103013038635254
    2. 'la' → logprob: -3.2060301303863525
    3. ' l' → logprob: -4.706029891967773
    4. 'l' → logprob: -4.706029891967773
    5. '#' → logprob: -4.831029891967773
    6. 'import' → logprob: -5.581029891967773
    7. ' #' → logprob: -6.581029891967773
    8. 'R' → logprob: -6.706029891967773
    9. ' R' → logprob: -6.956029891967773
    10. ' ' → logprob: -7.331029891967773

Token 325: ' compression' (ID: 41811)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7158604264259338
    2. 'import' → logprob: -1.090860366821289
    3. 'from' → logprob: -2.215860366821289
    4. 'def' → logprob: -3.090860366821289
    5. 'compression' → logprob: -4.965860366821289
    6. 'for' → logprob: -6.465860366821289
    7. ' #' → logprob: -6.840860366821289
    8. 'dp' → logprob: -6.840860366821289
    9. ' import' → logprob: -6.965860366821289
    10. 'L' → logprob: -7.215860366821289

Token 326: ' des' (ID: 731)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7323350310325623
    2. 'des' → logprob: -1.232335090637207
    3. 'de' → logprob: -2.607335090637207
    4. ' des' → logprob: -2.607335090637207
    5. '#' → logprob: -4.232335090637207
    6. 'of' → logprob: -4.482335090637207
    7. '(R' → logprob: -4.732335090637207
    8. ' of' → logprob: -5.107335090637207
    9. ' R' → logprob: -5.357335090637207
    10. '(
' → logprob: -5.482335090637207

Token 327: ' coordonnées' (ID: 181895)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.4032179117202759
    2. 'val' → logprob: -1.4032179117202759
    3. 'coord' → logprob: -1.4032179117202759
    4. ' coordonnées' → logprob: -2.0282177925109863
    5. ' R' → logprob: -3.1532177925109863
    6. 'coords' → logprob: -4.028217792510986
    7. ' coord' → logprob: -4.153217792510986
    8. 'coordinates' → logprob: -4.528217792510986
    9. 'd' → logprob: -4.903217792510986
    10. ' valeurs' → logprob: -5.028217792510986

Token 328: ' (' (ID: 350)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coords' → logprob: -0.8304691314697266
    2. 'all' → logprob: -0.9554691314697266
    3. 'points' → logprob: -2.5804691314697266
    4. 'vals' → logprob: -3.4554691314697266
    5. 'values' → logprob: -3.7054691314697266
    6. 'L' → logprob: -4.330469131469727
    7. 'coordinates' → logprob: -4.330469131469727
    8. '
' → logprob: -5.205469131469727
    9. 'sorted' → logprob: -6.080469131469727
    10. 'coord' → logprob: -6.330469131469727

Token 329: 'coordinate' (ID: 140563)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08449159562587738
    2. 'L' → logprob: -3.709491491317749
    3. ')
' → logprob: -4.084491729736328
    4. 'R' → logprob: -4.209491729736328
    5. 'import' → logprob: -4.584491729736328
    6. '#' → logprob: -5.334491729736328
    7. 'all' → logprob: -5.834491729736328
    8. 'from' → logprob: -5.959491729736328
    9. 'coords' → logprob: -6.959491729736328
    10. 'sorted' → logprob: -7.209491729736328

Token 330: ' compression' (ID: 41811)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.055506944656372
    2. 'compression' → logprob: -1.180506944656372
    3. '_com' → logprob: -1.680506944656372
    4. ' compression' → logprob: -2.930506944656372
    5. '_' → logprob: -3.180506944656372
    6. 'com' → logprob: -4.180506706237793
    7. ' )' → logprob: -4.555506706237793
    8. 'compress' → logprob: -4.930506706237793
    9. 'import' → logprob: -5.305506706237793
    10. ' ' → logprob: -5.805506706237793

Token 331: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11087298393249512
    2. ')
' → logprob: -2.360872983932495
    3. 'L' → logprob: -5.735873222351074
    4. ' )' → logprob: -5.860873222351074
    5. '#' → logprob: -6.735873222351074
    6. ',' → logprob: -6.860873222351074
    7. ' )
' → logprob: -7.110873222351074
    8. 'R' → logprob: -7.360873222351074
    9. ',
' → logprob: -8.610873222351074
    10. ')

' → logprob: -9.110873222351074

Token 332: ' sur' (ID: 1512)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0293091535568237
    2. 'coords' → logprob: -1.5293091535568237
    3. 'vals' → logprob: -1.6543091535568237
    4. 'points' → logprob: -2.0293092727661133
    5. 'values' → logprob: -3.0293092727661133
    6. 'L' → logprob: -4.279309272766113
    7. ' all' → logprob: -5.029309272766113
    8. 'sorted' → logprob: -5.529309272766113
    9. 'coordinates' → logprob: -5.654309272766113
    10. 'import' → logprob: -5.779309272766113

Token 333: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.11458829045295715
    2. ' R' → logprob: -2.4895882606506348
    3. 'L' → logprob: -3.7395882606506348
    4. ' L' → logprob: -6.489588260650635
    5. ' ' → logprob: -10.989588737487793
    6. '
' → logprob: -11.739588737487793
    7. '   ' → logprob: -11.989588737487793
    8. '(R' → logprob: -12.864588737487793
    9. 'set' → logprob: -14.114588737487793
    10. '	R' → logprob: -14.114588737487793

Token 334: ' ---
' (ID: 128468)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.33341461420059204
    2. 'sorted' → logprob: -2.3334145545959473
    3. 'all' → logprob: -2.9584145545959473
    4. '
' → logprob: -3.0834145545959473
    5. 'values' → logprob: -4.083414554595947
    6. 'vals' → logprob: -4.208414554595947
    7. '#' → logprob: -4.458414554595947
    8. 'coords' → logprob: -4.708414554595947
    9. 'points' → logprob: -5.083414554595947
    10. ',' → logprob: -5.583414554595947

Token 335: 'R' (ID: 49)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8939091563224792
    2. 'vals' → logprob: -1.643909215927124
    3. 'points' → logprob: -1.643909215927124
    4. 'coords' → logprob: -2.518909215927124
    5. 'values' → logprob: -3.143909215927124
    6. 'R' → logprob: -3.393909215927124
    7. 'sorted' → logprob: -4.893908977508545
    8. '#' → logprob: -4.893908977508545
    9. ' all' → logprob: -5.268908977508545
    10. 'unique' → logprob: -5.518908977508545

Token 336: 'toi' (ID: 99509)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.6675969362258911
    2. '=' → logprob: -0.7925969362258911
    3. ' =' → logprob: -4.042596817016602
    4. '.extend' → logprob: -4.792596817016602
    5. '_sorted' → logprob: -5.167596817016602
    6. ',' → logprob: -7.292596817016602
    7. '=set' → logprob: -7.667596817016602
    8. 'sorted' → logprob: -7.917596817016602
    9. '.' → logprob: -7.917596817016602
    10. '+=' → logprob: -8.417596817016602

Token 337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28132688999176025
    2. ' =' → logprob: -1.4063268899917603
    3. 'f' → logprob: -9.281327247619629
    4. ',' → logprob: -10.531327247619629
    5. 'x' → logprob: -11.531327247619629
    6. 'r' → logprob: -11.656327247619629
    7. '_map' → logprob: -11.906327247619629
    8. '_' → logprob: -12.531327247619629
    9. ' ' → logprob: -12.531327247619629
    10. 't' → logprob: -12.906327247619629

Token 338: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5762093663215637
    2. '{}' → logprob: -0.8262093663215637
    3. '{}
' → logprob: -8.95120906829834
    4. 'sorted' → logprob: -9.57620906829834
    5. 'dict' → logprob: -10.07620906829834
    6. ' {' → logprob: -11.32620906829834
    7. '{-' → logprob: -12.32620906829834
    8. ' {}' → logprob: -12.70120906829834
    9. '{}

' → logprob: -13.07620906829834
    10. '{x' → logprob: -13.32620906829834

Token 339: 'val' (ID: 1105)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04318222403526306
    2. 'r' → logprob: -3.293182134628296
    3. 'val' → logprob: -5.418182373046875
    4. 'x' → logprob: -7.668182373046875
    5. '0' → logprob: -9.168182373046875
    6. ' v' → logprob: -10.043182373046875
    7. 'b' → logprob: -10.418182373046875
    8. 'value' → logprob: -11.043182373046875
    9. '```' → logprob: -12.418182373046875
    10. '}' → logprob: -12.668182373046875

Token 340: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002536782529205084
    2. ':i' → logprob: -6.002536773681641
    3. ':index' → logprob: -10.62753677368164
    4. ':R' → logprob: -10.62753677368164
    5. ' :' → logprob: -12.00253677368164
    6. ':k' → logprob: -12.62753677368164
    7. ':r' → logprob: -13.37753677368164
    8. ':j' → logprob: -14.25253677368164
    9. ':v' → logprob: -15.87753677368164
    10. ':n' → logprob: -16.00253677368164

Token 341: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09228535741567612
    2. 'i' → logprob: -2.592285394668579
    3. ' idx' → logprob: -4.34228515625
    4. ' i' → logprob: -8.21728515625
    5. 'ind' → logprob: -11.34228515625
    6. 'index' → logprob: -11.46728515625
    7. 'ix' → logprob: -12.46728515625
    8. '	idx' → logprob: -13.34228515625
    9. 'indx' → logprob: -14.09228515625
    10. 'id' → logprob: -15.09228515625

Token 342: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759523510932922
    2. 'for' → logprob: -0.8259523510932922
    3. ' ' → logprob: -11.700952529907227
    4. ',' → logprob: -13.575952529907227
    5. '	for' → logprob: -13.825952529907227
    6. '}' → logprob: -13.950952529907227
    7. '   ' → logprob: -14.075952529907227
    8. '+' → logprob: -14.825952529907227
    9. '  ' → logprob: -16.200952529907227
    10. '
' → logprob: -16.325952529907227

Token 343: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0019380348967388272
    2. ' idx' → logprob: -6.2519378662109375
    3. 'val' → logprob: -11.876937866210938
    4. '	idx' → logprob: -13.501937866210938
    5. ',' → logprob: -14.001937866210938
    6. '(idx' → logprob: -16.126937866210938
    7. '```' → logprob: -17.626937866210938
    8. '_idx' → logprob: -17.751937866210938
    9. ' ' → logprob: -17.876937866210938
    10. '  ' → logprob: -18.001937866210938

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2823815643787384
    2. ',val' → logprob: -1.532381534576416
    3. 'val' → logprob: -3.657381534576416
    4. 'idx' → logprob: -6.032381534576416
    5. 'in' → logprob: -6.657381534576416
    6. 'enumer' → logprob: -7.907381534576416
    7. ',R' → logprob: -10.532382011413574
    8. 'index' → logprob: -10.782382011413574
    9. ' val' → logprob: -11.157382011413574
    10. 'R' → logprob: -11.157382011413574

Token 345: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0013298832345753908
    2. ' val' → logprob: -6.6263298988342285
    3. 'enumer' → logprob: -12.87632942199707
    4. 'value' → logprob: -14.62632942199707
    5. '	val' → logprob: -15.37632942199707
    6. '[val' → logprob: -15.50132942199707
    7. '```' → logprob: -16.00132942199707
    8. 'v' → logprob: -16.12632942199707
    9. '(val' → logprob: -16.25132942199707
    10. '<|end|>' → logprob: -16.50132942199707

Token 346: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42889219522476196
    2. 'in' → logprob: -1.0538921356201172
    3. 'enumer' → logprob: -8.678892135620117
    4. ' ' → logprob: -12.303892135620117
    5. ',' → logprob: -12.928892135620117
    6. 'en' → logprob: -13.053892135620117
    7. ')' → logprob: -13.178892135620117
    8. ' enumerate' → logprob: -13.303892135620117
    9. 'import' → logprob: -14.053892135620117
    10. 'n' → logprob: -14.178892135620117

Token 347: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.01605841889977455
    2. ' enumerate' → logprob: -4.141058444976807
    3. '
' → logprob: -11.641057968139648
    4. '```' → logprob: -11.641057968139648
    5. 'en' → logprob: -13.516057968139648
    6. 'in' → logprob: -13.641057968139648
    7. ' in' → logprob: -13.641057968139648
    8. 'enum' → logprob: -13.891057968139648
    9. ' ' → logprob: -14.141057968139648
    10. 'value' → logprob: -14.766057968139648

Token 348: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.0001984146365430206
    2. '(R' → logprob: -9.250198364257812
    3. 'sorted' → logprob: -9.250198364257812
    4. '(set' → logprob: -12.375198364257812
    5. '(' → logprob: -14.000198364257812
    6. '(sort' → logprob: -14.750198364257812
    7. ' sorted' → logprob: -15.125198364257812
    8. '(range' → logprob: -15.875198364257812
    9. 'R' → logprob: -16.375198364257812
    10. '(r' → logprob: -17.750198364257812

Token 349: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.05513941869139671
    2. '(R' → logprob: -2.9301393032073975
    3. 'set' → logprob: -8.430139541625977
    4. 'R' → logprob: -10.555139541625977
    5. '(list' → logprob: -12.055139541625977
    6. '(' → logprob: -12.930139541625977
    7. '(
' → logprob: -13.805139541625977
    8. '((' → logprob: -14.055139541625977
    9. ' set' → logprob: -14.180139541625977
    10. '(r' → logprob: -15.055139541625977

Token 350: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -1.9623810658231378e-05
    2. 'R' → logprob: -10.875020027160645
    3. '(
' → logprob: -15.000020027160645
    4. ')' → logprob: -15.750020027160645
    5. ' (' → logprob: -16.875019073486328
    6. '(' → logprob: -17.125019073486328
    7. '
' → logprob: -18.125019073486328
    8. ' R' → logprob: -18.375019073486328
    9. '   ' → logprob: -18.750019073486328
    10. ',R' → logprob: -19.125019073486328

Token 351: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007788912858814001
    2. ')))' → logprob: -4.882789134979248
    3. '))}
' → logprob: -9.38278865814209
    4. '}))' → logprob: -9.88278865814209
    5. ' ))' → logprob: -11.00778865814209
    6. '))))' → logprob: -11.25778865814209
    7. '   ' → logprob: -12.38278865814209
    8. ' ' → logprob: -12.38278865814209
    9. '}' → logprob: -12.50778865814209
    10. '()))' → logprob: -14.13278865814209

Token 352: ' ' (ID: 220)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1474498063325882
    2. '0' → logprob: -2.5224497318267822
    3. ' start' → logprob: -3.6474497318267822
    4. 'reverse' → logprob: -3.7724497318267822
    5. ')' → logprob: -5.522449970245361
    6. ' ' → logprob: -6.772449970245361
    7. ')}' → logprob: -7.397449970245361
    8. ' reverse' → logprob: -7.772449970245361
    9. 'key' → logprob: -8.272449493408203
    10. 'range' → logprob: -8.647449493408203

Token 353: '1' (ID: 16)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.29372087121009827
    2. '0' → logprob: -2.0437209606170654
    3. ')' → logprob: -2.5437209606170654
    4. 'reverse' → logprob: -3.7937209606170654
    5. ')}' → logprob: -4.168720722198486
    6. 'enumer' → logprob: -6.293720722198486
    7. ' start' → logprob: -6.418720722198486
    8. 'key' → logprob: -6.918720722198486
    9. '})' → logprob: -6.918720722198486
    10. '}' → logprob: -7.543720722198486

Token 354: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -9.114600834436715e-05
    2. ')' → logprob: -9.500091552734375
    3. '}' → logprob: -11.500091552734375
    4. ' )' → logprob: -12.625091552734375
    5. ')}
' → logprob: -13.375091552734375
    6. ');}' → logprob: -14.250091552734375
    7. ')}
' → logprob: -15.375091552734375
    8. '})' → logprob: -16.000091552734375
    9. ',' → logprob: -16.500091552734375
    10. ')}

' → logprob: -17.000091552734375

Token 355: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: ' Rem' (ID: 6890)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -1.6471210718154907
    2. 'from' → logprob: -1.8971210718154907
    3. 'fen' → logprob: -2.147120952606201
    4. 'freq' → logprob: -2.397120952606201
    5. 'BIT' → logprob: -2.522120952606201
    6. '#' → logprob: -2.772120952606201
    7. 'Fen' → logprob: -3.022120952606201
    8. 'ft' → logprob: -3.147120952606201
    9. 'bit' → logprob: -3.147120952606201
    10. 'dp' → logprob: -3.522120952606201

Token 357: 'placement' (ID: 17947)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.16382333636283875
    2. 'pl' → logprob: -2.163823366165161
    3. 'pla' → logprob: -3.538823366165161
    4. 'p' → logprob: -5.788823127746582
    5. 'place' → logprob: -6.663823127746582
    6. 'placement' → logprob: -7.163823127746582
    7. 'a' → logprob: -7.163823127746582
    8. 'ple' → logprob: -8.038823127746582
    9. 'plier' → logprob: -8.413823127746582
    10. 'pler' → logprob: -9.038823127746582

Token 358: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6480626463890076
    2. ' des' → logprob: -1.3980627059936523
    3. 'de' → logprob: -2.0230627059936523
    4. ' =' → logprob: -3.5230627059936523
    5. 'des' → logprob: -3.5230627059936523
    6. ' of' → logprob: -4.023062705993652
    7. 'R' → logprob: -4.648062705993652
    8. '=' → logprob: -5.148062705993652
    9. 'for' → logprob: -6.773062705993652
    10. ' for' → logprob: -7.273062705993652

Token 359: ' valeurs' (ID: 73668)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.15667474269866943
    2. ' R' → logprob: -2.156674861907959
    3. 'val' → logprob: -4.656674861907959
    4. 'L' → logprob: -4.656674861907959
    5. 'r' → logprob: -6.281674861907959
    6. ' val' → logprob: -6.406674861907959
    7. 'values' → logprob: -6.656674861907959
    8. ' values' → logprob: -6.781674861907959
    9. ' L' → logprob: -6.906674861907959
    10. 'indices' → logprob: -7.656674861907959

Token 360: ' originales' (ID: 107158)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.32350513339042664
    2. 'R' → logprob: -1.823505163192749
    3. 'de' → logprob: -2.323505163192749
    4. ' dans' → logprob: -4.57350492477417
    5. ' R' → logprob: -5.69850492477417
    6. 'dans' → logprob: -6.07350492477417
    7. 'r' → logprob: -8.198505401611328
    8. ' ' → logprob: -8.448505401611328
    9. 'for' → logprob: -9.198505401611328
    10. ' in' → logprob: -9.573505401611328

Token 361: ' de' (ID: 334)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03460470214486122
    2. ' de' → logprob: -4.034604549407959
    3. 'de' → logprob: -5.034604549407959
    4. ' R' → logprob: -5.159604549407959
    5. ' of' → logprob: -6.409604549407959
    6. 'for' → logprob: -6.909604549407959
    7. ' for' → logprob: -8.409605026245117
    8. ' dans' → logprob: -8.409605026245117
    9. ' in' → logprob: -8.784605026245117
    10. ' =' → logprob: -9.034605026245117

Token 362: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0057941703125834465
    2. 'L' → logprob: -5.380794048309326
    3. ' R' → logprob: -6.755794048309326
    4. ' L' → logprob: -12.255794525146484
    5. 'r' → logprob: -13.380794525146484
    6. ' ' → logprob: -15.193294525146484
    7. '`' → logprob: -15.255794525146484
    8. '_R' → logprob: -15.255794525146484
    9. '#' → logprob: -15.318294525146484
    10. 'A' → logprob: -15.693294525146484

Token 363: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3501701354980469
    2. ' =' → logprob: -1.2251701354980469
    3. '[:]' → logprob: -6.600170135498047
    4. '=[' → logprob: -8.225170135498047
    5. ']' → logprob: -10.600170135498047
    6. ' par' → logprob: -10.975170135498047
    7. '[' → logprob: -11.975170135498047
    8. '[i' → logprob: -11.975170135498047
    9. '[:' → logprob: -12.100170135498047
    10. ' by' → logprob: -12.100170135498047

Token 364: ' leurs' (ID: 16348)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.2581460177898407
    2. '[' → logprob: -1.758146047592163
    3. ' [' → logprob: -3.883146047592163
    4. ' leurs' → logprob: -4.508145809173584
    5. ' leur' → logprob: -4.633145809173584
    6. 'leur' → logprob: -4.758145809173584
    7. 'leurs' → logprob: -6.383145809173584
    8. '[len' → logprob: -7.258145809173584
    9. '[L' → logprob: -7.758145809173584
    10. '[l' → logprob: -7.883145809173584

Token 365: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.11453577131032944
    2. ' indices' → logprob: -2.2395358085632324
    3. '[' → logprob: -7.489535808563232
    4. 'indexes' → logprob: -7.864535808563232
    5. 'index' → logprob: -8.364535331726074
    6. ' R' → logprob: -9.239535331726074
    7. 'R' → logprob: -9.364535331726074
    8. '_indices' → logprob: -9.614535331726074
    9. 'indice' → logprob: -10.239535331726074
    10. 'mapped' → logprob: -10.489535331726074

Token 366: ' compress' (ID: 34112)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5770981311798096
    2. ' =' → logprob: -0.9520981311798096
    3. '=' → logprob: -3.2020981311798096
    4. 'for' → logprob: -5.4520978927612305
    5. ' R' → logprob: -5.8270978927612305
    6. '[:]' → logprob: -6.0770978927612305
    7. 'dans' → logprob: -7.7020978927612305
    8. ' for' → logprob: -8.20209789276123
    9. ' dans' → logprob: -8.70209789276123
    10. 'in' → logprob: -8.82709789276123

Token 367: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.8490257263183594
    2. 's' → logprob: -1.2240257263183594
    3. 'es' → logprob: -1.4740257263183594
    4. 'ed' → logprob: -3.2240257263183594
    5. 'é' → logprob: -5.724025726318359
    6. 'R' → logprob: -6.224025726318359
    7. 'sed' → logprob: -7.099025726318359
    8. 'éd' → logprob: -7.599025726318359
    9. 'ss' → logprob: -8.09902572631836
    10. 'ession' → logprob: -8.22402572631836

Token 368: '
' (ID: 198)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.05441499873995781
    2. '[R' → logprob: -3.679414987564087
    3. 'for' → logprob: -4.304415225982666
    4. ' R' → logprob: -5.179415225982666
    5. '[i' → logprob: -5.804415225982666
    6. '[' → logprob: -5.929415225982666
    7. ' for' → logprob: -7.679415225982666
    8. ' =' → logprob: -8.054414749145508
    9. '[:]' → logprob: -8.054414749145508
    10. ',' → logprob: -8.304414749145508

Token 369: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.008296238258481026
    2. ' R' → logprob: -5.508296012878418
    3. 'for' → logprob: -5.633296012878418
    4. ' for' → logprob: -7.383296012878418
    5. ' ' → logprob: -13.383296012878418
    6. ',' → logprob: -13.633296012878418
    7. ' =' → logprob: -13.758296012878418
    8. '   ' → logprob: -13.758296012878418
    9. '`' → logprob: -13.883296012878418
    10. '[' → logprob: -14.008296012878418

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10036691278219223
    2. ' =' → logprob: -2.3503668308258057
    3. '[:]' → logprob: -9.600366592407227
    4. '=[' → logprob: -9.975366592407227
    5. 'compressed' → logprob: -11.725366592407227
    6. '[' → logprob: -11.725366592407227
    7. '＝' → logprob: -12.100366592407227
    8. '_com' → logprob: -12.850366592407227
    9. ' =[' → logprob: -12.850366592407227
    10. '_' → logprob: -12.850366592407227

Token 371: ' [' (ID: 723)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.07151705771684647
    2. ' [' → logprob: -3.071516990661621
    3. '[' → logprob: -3.821516990661621
    4. '[list' → logprob: -7.571516990661621
    5. '[r' → logprob: -9.071516990661621
    6. '[len' → logprob: -9.821516990661621
    7. '[L' → logprob: -10.321516990661621
    8. '[List' → logprob: -10.321516990661621
    9. '[val' → logprob: -11.696516990661621
    10. '[int' → logprob: -12.071516990661621

Token 372: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.004080062732100487
    2. ' R' → logprob: -5.504080295562744
    3. 'RT' → logprob: -14.254079818725586
    4. '	R' → logprob: -14.629079818725586
    5. '_R' → logprob: -15.629079818725586
    6. '[R' → logprob: -16.504079818725586
    7. 'RCT' → logprob: -16.754079818725586
    8. 'RO' → logprob: -17.004079818725586
    9. '(R' → logprob: -17.004079818725586
    10. ' ' → logprob: -17.004079818725586

Token 373: 'toi' (ID: 99509)
  Prédit: 'toi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'toi' → logprob: -0.1735486090183258
    2. 'to' → logprob: -2.048548698425293
    3. '[' → logprob: -3.923548698425293
    4. '[i' → logprob: -5.923548698425293
    5. 'To' → logprob: -6.673548698425293
    6. '[to' → logprob: -7.048548698425293
    7. '[R' → logprob: -7.173548698425293
    8. '_to' → logprob: -7.548548698425293
    9. ']' → logprob: -7.673548698425293
    10. 'R' → logprob: -7.673548698425293

Token 374: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.576312243938446
    2. '[val' → logprob: -0.826312243938446
    3. '[v' → logprob: -8.326312065124512
    4. '[' → logprob: -9.076312065124512
    5. '[x' → logprob: -12.201312065124512
    6. '(r' → logprob: -12.326312065124512
    7. '(val' → logprob: -13.201312065124512
    8. '[_' → logprob: -13.326312065124512
    9. 'val' → logprob: -14.326312065124512
    10. '[value' → logprob: -14.701312065124512

Token 375: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1756367712223437e-05
    2. ' ]' → logprob: -11.500011444091797
    3. ')' → logprob: -14.625011444091797
    4. ']]' → logprob: -15.125011444091797
    5. ' for' → logprob: -15.375011444091797
    6. 'r' → logprob: -15.500011444091797
    7. '']' → logprob: -15.625011444091797
    8. ' ' → logprob: -16.000011444091797
    9. 'for' → logprob: -16.375011444091797
    10. ')]' → logprob: -17.000011444091797

Token 376: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2016727477312088
    2. 'for' → logprob: -1.7016727924346924
    3. ')' → logprob: -8.326672554016113
    4. ' ' → logprob: -11.951672554016113
    5. ']' → logprob: -12.326672554016113
    6. '	for' → logprob: -12.326672554016113
    7. '   ' → logprob: -13.826672554016113
    8. 'r' → logprob: -14.451672554016113
    9. ' r' → logprob: -15.451672554016113
    10. ' ' → logprob: -15.451672554016113

Token 377: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007745159324258566
    2. ' r' → logprob: -5.007745265960693
    3. 'R' → logprob: -6.882745265960693
    4. ' R' → logprob: -12.882744789123535
    5. '_r' → logprob: -14.132744789123535
    6. '(r' → logprob: -15.382744789123535
    7. '	r' → logprob: -15.507744789123535
    8. ' ' → logprob: -16.75774574279785
    9. '[r' → logprob: -17.44524574279785
    10. '­r' → logprob: -17.69524574279785

Token 378: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4746202230453491
    2. 'in' → logprob: -0.9746202230453491
    3. 'r' → logprob: -7.599620342254639
    4. ' r' → logprob: -11.22461986541748
    5. 'n' → logprob: -11.34961986541748
    6. ']' → logprob: -12.09961986541748
    7. 's' → logprob: -12.47461986541748
    8. ' ' → logprob: -12.97461986541748
    9. 'i' → logprob: -14.09961986541748
    10. 'd' → logprob: -14.22461986541748

Token 379: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0024763736873865128
    2. ' R' → logprob: -6.002476215362549
    3. 'r' → logprob: -14.377476692199707
    4. '(R' → logprob: -16.75247573852539
    5. '_R' → logprob: -17.87747573852539
    6. ' ' → logprob: -18.25247573852539
    7. '	R' → logprob: -18.87747573852539
    8. '   ' → logprob: -19.37747573852539
    9. '[R' → logprob: -19.50247573852539
    10. '  ' → logprob: -19.87747573852539

Token 380: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003373694489710033
    2. ' ]' → logprob: -8.000337600708008
    3. ']
' → logprob: -13.750337600708008
    4. ')' → logprob: -14.875337600708008
    5. ')]' → logprob: -15.500337600708008
    6. ']

' → logprob: -16.375337600708008
    7. ']
' → logprob: -16.750337600708008
    8. '}' → logprob: -17.000337600708008
    9. ' ' → logprob: -17.750337600708008
    10. '`]' → logprob: -17.750337600708008

Token 381: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3592010736465454
    2. 'dp' → logprob: -2.109200954437256
    3. 'from' → logprob: -2.859200954437256
    4. 'c' → logprob: -3.359200954437256
    5. 's' → logprob: -4.109200954437256
    6. 'count' → logprob: -4.234200954437256
    7. 'import' → logprob: -4.984200954437256
    8. 'max' → logprob: -5.109200954437256
    9. 'result' → logprob: -5.109200954437256
    10. 'sum' → logprob: -5.359200954437256

Token 382: ' Cas' (ID: 8066)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4153318703174591
    2. 'from' → logprob: -1.4153318405151367
    3. '#' → logprob: -3.2903318405151367
    4. 'size' → logprob: -3.7903318405151367
    5. 'fen' → logprob: -4.040331840515137
    6. 'import' → logprob: -4.665331840515137
    7. 'freq' → logprob: -6.165331840515137
    8. 'class' → logprob: -6.290331840515137
    9. 'Fen' → logprob: -6.540331840515137
    10. 'max' → logprob: -7.040331840515137

Token 383: ' particulier' (ID: 47842)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.9493569135665894
    2. 's' → logprob: -1.0743569135665894
    3. ' où' → logprob: -2.199357032775879
    4. 'où' → logprob: -2.949357032775879
    5. ' =' → logprob: -3.949357032775879
    6. ' ' → logprob: -4.074357032775879
    7. 'if' → logprob: -4.949357032775879
    8. 'for' → logprob: -5.074357032775879
    9. '=' → logprob: -5.199357032775879
    10. 'where' → logprob: -5.324357032775879

Token 384: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4288862943649292
    2. 'if' → logprob: -1.6788862943649292
    3. ' if' → logprob: -2.0538864135742188
    4. ' :' → logprob: -3.9288864135742188
    5. ' where' → logprob: -4.928886413574219
    6. ' when' → logprob: -5.928886413574219
    7. ' of' → logprob: -6.803886413574219
    8. 'for' → logprob: -7.428886413574219
    9. 's' → logprob: -7.928886413574219
    10. ' for' → logprob: -7.928886413574219

Token 385: ' aucun' (ID: 41678)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000959700730163604
    2. 'print' → logprob: -7.375959873199463
    3. ' if' → logprob: -8.125959396362305
    4. '#' → logprob: -11.875959396362305
    5. 'result' → logprob: -11.875959396362305
    6. '```' → logprob: -12.250959396362305
    7. '
' → logprob: -12.750959396362305
    8. 'from' → logprob: -12.875959396362305
    9. 'len' → logprob: -13.000959396362305
    10. 'If' → logprob: -13.500959396362305

Token 386: ' interval' (ID: 17116)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7445451617240906
    2. 'if' → logprob: -1.4945452213287354
    3. '<|end|>' → logprob: -2.4945452213287354
    4. 'R' → logprob: -2.6195452213287354
    5. ' if' → logprob: -3.1195452213287354
    6. 'X' → logprob: -3.9945452213287354
    7. 's' → logprob: -4.369544982910156
    8. 'x' → logprob: -4.619544982910156
    9. '```' → logprob: -4.869544982910156
    10. 'n' → logprob: -4.994544982910156

Token 387: 'le' (ID: 282)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.018252605572342873
    2. 'ent' → logprob: -4.268252372741699
    3. 'e' → logprob: -5.893252372741699
    4. 'ale' → logprob: -7.018252372741699
    5. 'a' → logprob: -9.0182523727417
    6. '>' → logprob: -10.2682523727417
    7. 'val' → logprob: -10.5182523727417
    8. 't' → logprob: -10.6432523727417
    9. 'alent' → logprob: -10.6432523727417
    10. 'ents' → logprob: -10.8932523727417

Token 388: ' valide' (ID: 137323)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26796796917915344
    2. ' if' → logprob: -1.517967939376831
    3. ' and' → logprob: -4.39296817779541
    4. 'and' → logprob: -5.76796817779541
    5. ':' → logprob: -8.39296817779541
    6. '
' → logprob: -10.14296817779541
    7. ' or' → logprob: -10.14296817779541
    8. ',' → logprob: -10.64296817779541
    9. ' ' → logprob: -10.76796817779541
    10. '<|end|>' → logprob: -11.26796817779541

Token 389: ' trouvé' (ID: 60081)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005125218303874135
    2. ' if' → logprob: -7.625512599945068
    3. '
' → logprob: -10.75051212310791
    4. ':' → logprob: -13.25051212310791
    5. '```' → logprob: -14.37551212310791
    6. 'i' → logprob: -15.75051212310791
    7. ',' → logprob: -15.87551212310791
    8. 'If' → logprob: -16.125513076782227
    9. '  
' → logprob: -17.125513076782227
    10. '

' → logprob: -17.250513076782227

Token 390: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00343161984346807
    2. ' if' → logprob: -5.878431797027588
    3. '
' → logprob: -7.503431797027588
    4. '```' → logprob: -10.50343132019043
    5. 'print' → logprob: -10.87843132019043
    6. ':' → logprob: -11.62843132019043
    7. '\n' → logprob: -12.62843132019043
    8. ',' → logprob: -12.75343132019043
    9. '  
' → logprob: -13.00343132019043
    10. 'i' → logprob: -13.50343132019043

Token 391: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0924895778298378
    2. ' print' → logprob: -2.46748948097229
    3. 'if' → logprob: -6.717489719390869
    4. '   ' → logprob: -7.217489719390869
    5. '
' → logprob: -7.592489719390869
    6. 'return' → logprob: -7.967489719390869
    7. ' if' → logprob: -8.342489242553711
    8. ' return' → logprob: -9.342489242553711
    9. '#' → logprob: -9.467489242553711
    10. '    ' → logprob: -9.592489242553711

Token 392: ' retourne' (ID: 178818)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15169021487236023
    2. ' print' → logprob: -2.0266902446746826
    3. 'return' → logprob: -5.1516900062561035
    4. ' return' → logprob: -6.4016900062561035
    5. 'pr' → logprob: -7.2766900062561035
    6. '   ' → logprob: -9.276690483093262
    7. '```' → logprob: -9.276690483093262
    8. 'exit' → logprob: -9.526690483093262
    9. ' imprime' → logprob: -9.651690483093262
    10. 'raise' → logprob: -9.776690483093262

Token 393: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7864217162132263
    2. '0' → logprob: -0.9114217162132263
    3. '-' → logprob: -2.661421775817871
    4. ' ' → logprob: -3.411421775817871
    5. ' print' → logprob: -3.661421775817871
    6. '1' → logprob: -5.161421775817871
    7. ' -' → logprob: -5.411421775817871
    8. ' N' → logprob: -6.911421775817871
    9. '   ' → logprob: -7.536421775817871
    10. 'N' → logprob: -7.661421775817871

Token 394: '1' (ID: 16)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.639850914478302
    2. '0' → logprob: -0.764850914478302
    3. ' ' → logprob: -6.014851093292236
    4. ' print' → logprob: -6.764851093292236
    5. '1' → logprob: -7.014851093292236
    6. '"' → logprob: -7.514851093292236
    7. '-' → logprob: -7.764851093292236
    8. 'return' → logprob: -7.764851093292236
    9. '
' → logprob: -8.389850616455078
    10. '```' → logprob: -8.389850616455078

Token 395: ' comme' (ID: 7971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07212026417255402
    2. 'print' → logprob: -3.322120189666748
    3. '
' → logprob: -3.447120189666748
    4. ' if' → logprob: -7.447120189666748
    5. '```' → logprob: -7.947120189666748
    6. 'return' → logprob: -8.197120666503906
    7. '\n' → logprob: -8.697120666503906
    8. '  
' → logprob: -9.697120666503906
    9. '

' → logprob: -9.822120666503906
    10. '
' → logprob: -10.447120666503906

Token 396: ' résultat' (ID: 62556)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.5980236530303955
    2. ' résultat' → logprob: -1.5980236530303955
    3. 'output' → logprob: -2.2230236530303955
    4. 'result' → logprob: -2.5980236530303955
    5. 'ré' → logprob: -3.4730236530303955
    6. 'print' → logprob: -4.473023414611816
    7. ' output' → logprob: -5.348023414611816
    8. ' réponse' → logprob: -5.598023414611816
    9. 'solution' → logprob: -5.598023414611816
    10. 'val' → logprob: -6.223023414611816

Token 397: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0325736366212368
    2. '
' → logprob: -3.657573699951172
    3. 'print' → logprob: -5.532573699951172
    4. 'result' → logprob: -6.407573699951172
    5. '```' → logprob: -8.407573699951172
    6. ' if' → logprob: -8.782573699951172
    7. 'return' → logprob: -9.282573699951172
    8. '\n' → logprob: -10.407573699951172
    9. '

' → logprob: -10.407573699951172
    10. '``' → logprob: -10.532573699951172

Token 398: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3473110496997833
    2. 'print' → logprob: -1.347311019897461
    3. 'result' → logprob: -4.097311019897461
    4. '
' → logprob: -4.222311019897461
    5. '```' → logprob: -6.972311019897461
    6. ' if' → logprob: -7.472311019897461
    7. 'return' → logprob: -8.097311019897461
    8. 'res' → logprob: -9.472311019897461
    9. ' print' → logprob: -10.097311019897461
    10. '  
' → logprob: -10.097311019897461

Token 399: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7005586624145508
    2. 'not' → logprob: -0.9505586624145508
    3. 'len' → logprob: -2.325558662414551
    4. ' len' → logprob: -3.950558662414551
    5. 'L' → logprob: -9.57555866241455
    6. ' L' → logprob: -10.57555866241455
    7. '   ' → logprob: -10.57555866241455
    8. ' ' → logprob: -10.82555866241455
    9. 'N' → logprob: -11.20055866241455
    10. '(len' → logprob: -11.20055866241455

Token 400: '(R' (ID: 4092)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0028809530194848776
    2. '(' → logprob: -6.252881050109863
    3. '(R' → logprob: -7.127881050109863
    4. 'L' → logprob: -9.627881050109863
    5. '(X' → logprob: -9.752881050109863
    6. '(
' → logprob: -11.252881050109863
    7. ' (' → logprob: -12.752881050109863
    8. '(N' → logprob: -13.002881050109863
    9. ' L' → logprob: -14.252881050109863
    10. '(I' → logprob: -14.502881050109863

Token 401: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04032845422625542
    2. ')==' → logprob: -3.2903285026550293
    3. '==' → logprob: -6.165328502655029
    4. ' ==' → logprob: -8.665328025817871
    5. ' )' → logprob: -12.790328025817871
    6. ')<' → logprob: -13.165328025817871
    7. '0' → logprob: -13.540328025817871
    8. ']==' → logprob: -13.915328025817871
    9. '）' → logprob: -14.040328025817871
    10. '=' → logprob: -14.290328025817871

Token 402: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.160248801112175
    2. ' ==' → logprob: -1.9102487564086914
    3. '=' → logprob: -11.285248756408691
    4. ')' → logprob: -12.660248756408691
    5. '==
' → logprob: -12.910248756408691
    6. '0' → logprob: -13.035248756408691
    7. ')==' → logprob: -13.410248756408691
    8. '()==' → logprob: -14.035248756408691
    9. ' =' → logprob: -14.285248756408691
    10. ' ' → logprob: -14.660248756408691

Token 403: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '۰' → logprob: -17.87504005432129
    4. '  ' → logprob: -18.00004005432129
    5. '   ' → logprob: -18.00004005432129
    6. '1' → logprob: -18.50004005432129
    7. '=' → logprob: -18.62504005432129
    8. '```' → logprob: -18.75004005432129
    9. ')' → logprob: -19.12504005432129
    10. ' ' → logprob: -19.75004005432129

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.250009536743164
    4. '1' → logprob: -16.875009536743164
    5. '=' → logprob: -17.375009536743164
    6. '  ' → logprob: -18.125009536743164
    7. '۰' → logprob: -18.250009536743164
    8. '
' → logprob: -18.687509536743164
    9. '```' → logprob: -18.875009536743164
    10. '    ' → logprob: -18.875009536743164

Token 405: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6933750510215759
    2. ':
' → logprob: -0.6933750510215759
    3. ':return' → logprob: -9.193374633789062
    4. '   ' → logprob: -9.568374633789062
    5. 'print' → logprob: -10.693374633789062
    6. ':
' → logprob: -11.318374633789062
    7. ' :
' → logprob: -11.693374633789062
    8. ' :' → logprob: -12.193374633789062
    9. ':

' → logprob: -12.693374633789062
    10. '
' → logprob: -13.943374633789062

Token 406: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03892681747674942
    2. '   ' → logprob: -3.413926839828491
    3. ':
' → logprob: -5.788926601409912
    4. ' print' → logprob: -6.788926601409912
    5. ':' → logprob: -7.163926601409912
    6. '
' → logprob: -8.41392707824707
    7. '	print' → logprob: -9.91392707824707
    8. '```' → logprob: -11.03892707824707
    9. 'return' → logprob: -13.03892707824707
    10. '0' → logprob: -13.41392707824707

Token 407: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.077528764260933e-05
    2. '
' → logprob: -9.500081062316895
    3. ' print' → logprob: -12.625081062316895
    4. '   ' → logprob: -13.500081062316895
    5. '```' → logprob: -14.250081062316895
    6. '
' → logprob: -16.375080108642578
    7. 'pr' → logprob: -16.500080108642578
    8. '    
' → logprob: -16.500080108642578
    9. '1' → logprob: -16.500080108642578
    10. '	print' → logprob: -16.750080108642578

Token 408: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31326526403427124
    2. '(' → logprob: -1.313265323638916
    3. '(
' → logprob: -13.188264846801758
    4. ' ' → logprob: -13.563264846801758
    5. '("' → logprob: -15.063264846801758
    6. '('' → logprob: -16.938264846801758
    7. '
' → logprob: -17.688264846801758
    8. ' (' → logprob: -17.813264846801758
    9. '0' → logprob: -18.438264846801758
    10. '"' → logprob: -19.063264846801758

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '"' → logprob: -17.5
    4. '`' → logprob: -20.5
    5. '```' → logprob: -20.5
    6. '   ' → logprob: -20.875
    7. ''' → logprob: -21.25
    8. '
' → logprob: -21.625
    9. '(' → logprob: -21.875
    10. ')' → logprob: -22.25

Token 410: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2519835829734802
    2. ')' → logprob: -1.501983642578125
    3. ')
' → logprob: -10.001983642578125
    4. ' )
' → logprob: -12.126983642578125
    5. ' )' → logprob: -13.376983642578125
    6. ')return' → logprob: -13.501983642578125
    7. ')`
' → logprob: -14.626983642578125
    8. '
' → logprob: -16.501983642578125
    9. ');' → logprob: -16.626983642578125
    10. ')

' → logprob: -16.876983642578125

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055062372237443924
    2. 'else' → logprob: -2.9300622940063477
    3. '    
' → logprob: -9.430062294006348
    4. '
' → logprob: -10.305062294006348
    5. 'import' → logprob: -10.805062294006348
    6. ')' → logprob: -11.055062294006348
    7. 'exit' → logprob: -11.930062294006348
    8. 'elif' → logprob: -12.430062294006348
    9. '	exit' → logprob: -12.430062294006348
    10. '  ' → logprob: -12.805062294006348

Token 412: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.051255784928798676
    2. '   ' → logprob: -3.176255702972412
    3. 'exit' (adapté à ' exit') → logprob: -5.551255702972412
    4. '
' → logprob: -6.301255702972412
    5. 'sys' → logprob: -6.426255702972412
    6. '    
' → logprob: -7.676255702972412
    7. 'import' → logprob: -8.67625617980957
    8. ' else' → logprob: -10.17625617980957
    9. '	exit' → logprob: -10.17625617980957
    10. '' → logprob: -10.67625617980957

Token 413: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005266719032078981
    2. '(' → logprob: -5.2552666664123535
    3. '()
' → logprob: -10.880267143249512
    4. ' ()' → logprob: -12.005267143249512
    5. '0' → logprob: -12.130267143249512
    6. '()\' → logprob: -13.505267143249512
    7. '()`' → logprob: -15.255267143249512
    8. '(
' → logprob: -15.505267143249512
    9. '（）' → logprob: -15.880267143249512
    10. '()]' → logprob: -16.005266189575195

Token 414: '"""
' (ID: 15611)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7231091856956482
    2. '#' → logprob: -1.098109245300293
    3. 'dp' → logprob: -2.723109245300293
    4. 'import' → logprob: -2.973109245300293
    5. 'class' → logprob: -3.223109245300293
    6. 'max' → logprob: -4.223109245300293
    7. 'size' → logprob: -4.848109245300293
    8. 'seg' → logprob: -8.223109245300293
    9. 'bit' → logprob: -8.598109245300293
    10. 'sz' → logprob: -8.848109245300293

Token 415: 'Id' (ID: 906)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3325626850128174
    2. 'from' → logprob: -1.4575626850128174
    3. 'import' → logprob: -3.7075626850128174
    4. 'dp' → logprob: -4.582562446594238
    5. 'def' → logprob: -4.707562446594238
    6. 'class' → logprob: -5.332562446594238
    7. 'fen' → logprob: -7.332562446594238
    8. 'cnt' → logprob: -8.957562446594238
    9. 'max' → logprob: -9.332562446594238
    10. 'res' → logprob: -9.582562446594238

Token 416: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.05178963020443916
    2. 'e' → logprob: -4.0517897605896
    3. 'éal' → logprob: -4.0517897605896
    4. 'ea' → logprob: -4.4267897605896
    5. '#' → logprob: -6.5517897605896
    6. 'é' → logprob: -6.6767897605896
    7. 'ées' → logprob: -8.176789283752441
    8. 'enti' → logprob: -9.051789283752441
    9. 'ee' → logprob: -9.301789283752441
    10. '"""
' → logprob: -9.426789283752441

Token 417: ' générale' (ID: 66899)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012559332884848118
    2. ' :' → logprob: -5.387559413909912
    3. '#' → logprob: -6.262559413909912
    4. 'de' → logprob: -6.387559413909912
    5. ' de' → logprob: -6.512559413909912
    6. '=' → logprob: -7.387559413909912
    7. ':
' → logprob: -7.512559413909912
    8. ' suivante' → logprob: -7.512559413909912
    9. 'for' → logprob: -7.762559413909912
    10. 's' → logprob: -9.387558937072754

Token 418: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025855589658021927
    2. ' :' → logprob: -3.775855541229248
    3. ',' → logprob: -6.775855541229248
    4. ':
' → logprob: -7.150855541229248
    5. '#' → logprob: -8.275856018066406
    6. '=' → logprob: -9.650856018066406
    7. ' =' → logprob: -9.775856018066406
    8. ' :
' → logprob: -9.775856018066406
    9. '"""' → logprob: -9.900856018066406
    10. '```' → logprob: -10.275856018066406

Token 419: '-' (ID: 12)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6876906752586365
    2. 'On' → logprob: -0.8126906752586365
    3. 'Calcul' → logprob: -4.562690734863281
    4. 'for' → logprob: -4.937690734863281
    5. '"""' → logprob: -4.937690734863281
    6. 'Pour' → logprob: -5.187690734863281
    7. 'Constru' → logprob: -5.437690734863281
    8. 'Nous' → logprob: -5.687690734863281
    9. 'Util' → logprob: -5.937690734863281
    10. '"""
' → logprob: -6.562690734863281

Token 420: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.680254340171814
    2. 'On' → logprob: -1.055254340171814
    3. 'Calcul' → logprob: -2.9302544593811035
    4. 'Util' → logprob: -3.8052544593811035
    5. 'from' → logprob: -4.4302544593811035
    6. 'Nous' → logprob: -4.9302544593811035
    7. 'Pour' → logprob: -5.0552544593811035
    8. 'Impl' → logprob: -5.3052544593811035
    9. 'Dé' → logprob: -5.3052544593811035
    10. 'Constru' → logprob: -5.5552544593811035

Token 421: ' veut' (ID: 41653)
  Prédit: 'va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'va' → logprob: -0.882073700428009
    2. 'v' → logprob: -1.8820736408233643
    3. '#' → logprob: -2.1320736408233643
    4. 'continue' → logprob: -2.8820736408233643
    5. 'veux' → logprob: -3.3820736408233643
    6. 'util' → logprob: -3.7570736408233643
    7. 'vais' → logprob: -3.7570736408233643
    8. 've' → logprob: -3.8820736408233643
    9. 'impl' → logprob: -4.007073879241943
    10. ' calc' → logprob: -4.257073879241943

Token 422: ' compter' (ID: 81694)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.9908199906349182
    2. ' compter' → logprob: -1.1158199310302734
    3. ' calcul' → logprob: -2.1158199310302734
    4. 'comp' → logprob: -3.6158199310302734
    5. 'count' → logprob: -3.8658199310302734
    6. 'com' → logprob: -3.9908199310302734
    7. 'comb' → logprob: -4.240819931030273
    8. 'tr' → logprob: -4.365819931030273
    9. 'cal' → logprob: -4.740819931030273
    10. ' utiliser' → logprob: -4.740819931030273

Token 423: ' de' (ID: 334)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3130803406238556
    2. ' le' → logprob: -1.5630803108215332
    3. 'les' → logprob: -2.938080310821533
    4. ' les' → logprob: -6.438080310821533
    5. 'la' → logprob: -6.563080310821533
    6. 'l' → logprob: -6.563080310821533
    7. ' la' → logprob: -6.813080310821533
    8. ' l' → logprob: -7.688080310821533
    9. '_le' → logprob: -9.188080787658691
    10. ' ' → logprob: -10.063080787658691

Token 424: ' combien' (ID: 106648)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.13024432957172394
    2. 'nombre' → logprob: -2.755244255065918
    3. ' manière' → logprob: -3.505244255065918
    4. ' façons' → logprob: -4.755244255065918
    5. ' façon' → logprob: -5.130244255065918
    6. 'f' → logprob: -5.755244255065918
    7. 'man' → logprob: -5.880244255065918
    8. '#' → logprob: -6.755244255065918
    9. '```' → logprob: -6.755244255065918
    10. 'com' → logprob: -7.130244255065918

Token 425: ' de' (ID: 334)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.4491885006427765
    2. 'man' → logprob: -1.449188470840454
    3. 'comb' → logprob: -2.824188470840454
    4. 'de' → logprob: -4.574188709259033
    5. ' façons' → logprob: -4.574188709259033
    6. 's' → logprob: -4.699188709259033
    7. 'd' → logprob: -4.824188709259033
    8. '```' → logprob: -4.824188709259033
    9. '0' → logprob: -5.199188709259033
    10. 'fac' → logprob: -5.949188709259033

Token 426: ' façons' (ID: 165958)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.43369460105895996
    2. 'man' → logprob: -1.30869460105896
    3. 'inter' → logprob: -4.183694839477539
    4. 's' → logprob: -4.433694839477539
    5. 'com' → logprob: -4.433694839477539
    6. 'comb' → logprob: -4.683694839477539
    7. 'fac' → logprob: -5.433694839477539
    8. '#' → logprob: -5.558694839477539
    9. 'fois' → logprob: -5.683694839477539
    10. 'ways' → logprob: -5.933694839477539

Token 427: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6809074878692627
    2. ' on' → logprob: -1.6809074878692627
    3. ' de' → logprob: -2.0559074878692627
    4. ' d' → logprob: -2.8059074878692627
    5. 'on' → logprob: -3.0559074878692627
    6. 'de' → logprob: -3.3059074878692627
    7. 'd' → logprob: -4.680907249450684
    8. ' il' → logprob: -5.305907249450684
    9. '_' → logprob: -5.930907249450684
    10. 'nous' → logprob: -5.930907249450684

Token 428: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0014745104126632214
    2. ' peut' → logprob: -6.626474380493164
    3. 'pour' → logprob: -9.876474380493164
    4. '#' → logprob: -10.251474380493164
    5. 'pu' → logprob: -11.376474380493164
    6. ' ' → logprob: -11.626474380493164
    7. 'p' → logprob: -12.001474380493164
    8. '-pe' → logprob: -12.126474380493164
    9. '-' → logprob: -12.251474380493164
    10. '_pe' → logprob: -12.501474380493164

Token 429: ' sélectionner' (ID: 188432)
  Prédit: 'former'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'former' → logprob: -0.7135146260261536
    2. 'cho' → logprob: -1.3385145664215088
    3. 'composer' → logprob: -3.213514566421509
    4. 'partition' → logprob: -3.463514566421509
    5. 'placer' → logprob: -3.463514566421509
    6. 'form' → logprob: -3.838514566421509
    7. 'comb' → logprob: -4.213514804840088
    8. 'faire' → logprob: -4.213514804840088
    9. 'assembler' → logprob: -4.338514804840088
    10. ' choisir' → logprob: -4.338514804840088

Token 430: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7464888095855713
    2. 'des' → logprob: -0.9964888095855713
    3. 'au' → logprob: -3.3714888095855713
    4. 'les' → logprob: -3.8714888095855713
    5. ' au' → logprob: -3.8714888095855713
    6. 'une' → logprob: -4.121488571166992
    7. ' les' → logprob: -4.496488571166992
    8. ' ' → logprob: -4.746488571166992
    9. 'un' → logprob: -4.996488571166992
    10. 'interval' → logprob: -5.121488571166992

Token 431: ' sous' (ID: 14487)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.6076996326446533
    2. 's' → logprob: -1.4826996326446533
    3. 'élé' → logprob: -2.6076996326446533
    4. 'p' → logprob: -2.8576996326446533
    5. 'interval' → logprob: -2.8576996326446533
    6. ' sous' → logprob: -4.607699394226074
    7. ' p' → logprob: -4.857699394226074
    8. 'sub' → logprob: -6.107699394226074
    9. ' interv' → logprob: -6.232699394226074
    10. 'segments' → logprob: -6.232699394226074

Token 432: '-inter' (ID: 63516)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.020925696939229965
    2. 'inter' → logprob: -4.395925521850586
    3. '-' → logprob: -5.645925521850586
    4. 'sé' → logprob: -6.645925521850586
    5. 'interval' → logprob: -6.895925521850586
    6. '-inter' → logprob: -7.145925521850586
    7. 'sets' → logprob: -7.645925521850586
    8. 's' → logprob: -8.145925521850586
    9. 'ensemble' → logprob: -8.395925521850586
    10. '#' → logprob: -9.020925521850586

Token 433: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.033256836235523224
    2. 'val' → logprob: -3.533256769180298
    3. 'vals' → logprob: -6.658257007598877
    4. '#' → logprob: -6.783257007598877
    5. '```' → logprob: -7.908257007598877
    6. 'erv' → logprob: -9.783256530761719
    7. 'vel' → logprob: -10.033256530761719
    8. 'vall' → logprob: -10.033256530761719
    9. '-' → logprob: -10.158256530761719
    10. '_' → logprob: -10.158256530761719

Token 434: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.14705081284046173
    2. 'al' → logprob: -2.6470508575439453
    3. 'als' → logprob: -3.5220508575439453
    4. 'aux' → logprob: -3.6470508575439453
    5. 'ales' → logprob: -5.647050857543945
    6. 'a' → logprob: -6.522050857543945
    7. '```' → logprob: -7.022050857543945
    8. '#' → logprob: -7.022050857543945
    9. '"' → logprob: -8.022050857543945
    10. '</' → logprob: -8.522050857543945

Token 435: ' selon' (ID: 27571)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5211893916130066
    2. ',' → logprob: -2.0211894512176514
    3. 'de' → logprob: -2.6461894512176514
    4. ' supplémentaires' → logprob: -2.8961894512176514
    5. '<|end|>' → logprob: -3.5211894512176514
    6. ' ,' → logprob: -3.6461894512176514
    7. ' d' → logprob: -4.146189212799072
    8. 's' → logprob: -4.896189212799072
    9. ' (' → logprob: -4.896189212799072
    10. ' des' → logprob: -5.146189212799072

Token 436: ' certains' (ID: 30681)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9702661633491516
    2. 'certain' → logprob: -1.3452661037445068
    3. '#' → logprob: -1.9702661037445068
    4. 'les' → logprob: -2.595266103744507
    5. ' la' → logprob: -3.470266103744507
    6. 'leurs' → logprob: -3.970266103744507
    7. 'cert' → logprob: -4.220266342163086
    8. 'une' → logprob: -4.220266342163086
    9. 'des' → logprob: -4.470266342163086
    10. 'diff' → logprob: -4.720266342163086

Token 437: ' critères' (ID: 105569)
  Prédit: ' critères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' critères' → logprob: -0.05966940522193909
    2. 'criter' → logprob: -3.8096694946289062
    3. 'crit' → logprob: -3.9346694946289062
    4. ' crit' → logprob: -4.559669494628906
    5. 'cr' → logprob: -6.309669494628906
    6. 'constraints' → logprob: -6.934669494628906
    7. '#' → logprob: -7.434669494628906
    8. 'criteria' → logprob: -7.559669494628906
    9. ' criter' → logprob: -7.809669494628906
    10. '```' → logprob: -7.934669494628906

Token 438: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20765118300914764
    2. '\n' → logprob: -2.457651138305664
    3. ',' → logprob: -2.957651138305664
    4. ':' → logprob: -4.457651138305664
    5. '
' → logprob: -5.082651138305664
    6. '.' → logprob: -5.082651138305664
    7. '```' → logprob: -5.332651138305664
    8. 'R' → logprob: -5.832651138305664
    9. 'from' → logprob: -5.957651138305664
    10. 'for' → logprob: -6.082651138305664

Token 439: '-' (ID: 12)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7249287366867065
    2. '"""' → logprob: -0.9749287366867065
    3. '\n' → logprob: -2.349928855895996
    4. '
' → logprob: -4.224928855895996
    5. ')' → logprob: -4.724928855895996
    6. '```' → logprob: -5.349928855895996
    7. 'for' → logprob: -5.849928855895996
    8. '\' → logprob: -5.974928855895996
    9. '"""
' → logprob: -6.224928855895996
    10. 'n' → logprob: -6.849928855895996

Token 440: ' Pour' (ID: 13931)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1037306860089302
    2. '#' → logprob: -2.7287306785583496
    3. 'from' → logprob: -3.4787306785583496
    4. 'import' → logprob: -6.85373067855835
    5. 'max' → logprob: -8.353731155395508
    6. 'DP' → logprob: -8.853731155395508
    7. 'def' → logprob: -9.103731155395508
    8. 'f' → logprob: -9.103731155395508
    9. 'size' → logprob: -9.103731155395508
    10. 'freq' → logprob: -9.353731155395508

Token 441: ' cela' (ID: 17542)
  Prédit: ' cela'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cela' → logprob: -0.8106679916381836
    2. ' i' → logprob: -1.1856679916381836
    3. 'i' → logprob: -3.0606679916381836
    4. ' l' → logprob: -3.1856679916381836
    5. 'r' → logprob: -3.4356679916381836
    6. ' le' → logprob: -4.310667991638184
    7. 'l' → logprob: -4.560667991638184
    8. ' la' → logprob: -4.560667991638184
    9. 'cela' → logprob: -4.560667991638184
    10. ' continuer' → logprob: -4.560667991638184

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009079420939087868
    2. ' ,' → logprob: -5.634079456329346
    3. '#' → logprob: -6.009079456329346
    4. ' on' → logprob: -6.134079456329346
    5. ',
' → logprob: -8.384078979492188
    6. ':' → logprob: -9.509078979492188
    7. '
' → logprob: -9.759078979492188
    8. 'on' → logprob: -9.884078979492188
    9. 'def' → logprob: -9.884078979492188
    10. 'import' → logprob: -9.884078979492188

Token 443: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.0451459176838398
    2. 'on' → logprob: -3.1701459884643555
    3. '#' → logprob: -6.7951459884643555
    4. ' we' → logprob: -7.9201459884643555
    5. ' nous' → logprob: -8.045145988464355
    6. 'nous' → logprob: -9.295145988464355
    7. 'from' → logprob: -9.545145988464355
    8. 'import' → logprob: -10.170145988464355
    9. ' je' → logprob: -10.920145988464355
    10. ''on' → logprob: -10.920145988464355

Token 444: ' ord' (ID: 6608)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.34034138917922974
    2. '#' → logprob: -2.090341329574585
    3. 'continue' → logprob: -3.465341329574585
    4. 'va' → logprob: -3.715341329574585
    5. 'def' → logprob: -3.965341329574585
    6. 'build' → logprob: -4.465341567993164
    7. '...' → logprob: -4.840341567993164
    8. 'from' → logprob: -4.840341567993164
    9. 'pr' → logprob: -4.965341567993164
    10. 'contin' → logprob: -5.090341567993164

Token 445: 'onne' (ID: 25335)
  Prédit: 'onne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onne' → logprob: -0.3846462070941925
    2. 'onnée' → logprob: -2.13464617729187
    3. 're' → logprob: -2.38464617729187
    4. 'onné' → logprob: -2.50964617729187
    5. 'er' → logprob: -4.634646415710449
    6. 'onn' → logprob: -5.384646415710449
    7. 'e' → logprob: -5.509646415710449
    8. 'onner' → logprob: -5.759646415710449
    9. 'ré' → logprob: -5.884646415710449
    10. 'onnance' → logprob: -6.759646415710449

Token 446: ' les' (ID: 1341)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -1.5414332151412964
    2. ' les' → logprob: -1.9164332151412964
    3. '(R' → logprob: -1.9164332151412964
    4. 'R' → logprob: -2.041433334350586
    5. 'L' → logprob: -2.166433334350586
    6. ' L' → logprob: -2.666433334350586
    7. ' la' → logprob: -2.791433334350586
    8. ' R' → logprob: -2.791433334350586
    9. '(' → logprob: -3.291433334350586
    10. '#' → logprob: -5.916433334350586

Token 447: ' interv' (ID: 37413)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10685622692108154
    2. 'pairs' → logprob: -3.106856346130371
    3. 'interval' → logprob: -4.106856346130371
    4. 'inter' → logprob: -4.356856346130371
    5. 'indices' → logprob: -4.981856346130371
    6. '#' → logprob: -4.981856346130371
    7. ' L' → logprob: -5.356856346130371
    8. ' pairs' → logprob: -5.606856346130371
    9. ' intervals' → logprob: -7.356856346130371
    10. 'import' → logprob: -7.606856346130371

Token 448: 'alles' (ID: 28825)
  Prédit: 'alles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alles' → logprob: -0.025955842807888985
    2. 'al' → logprob: -4.275955677032471
    3. 'ales' → logprob: -4.900955677032471
    4. 'aux' → logprob: -6.275955677032471
    5. 'als' → logprob: -6.400955677032471
    6. '#' → logprob: -8.525956153869629
    7. 'a' → logprob: -9.025956153869629
    8. '```' → logprob: -9.400956153869629
    9. '</' → logprob: -10.150956153869629
    10. 'aires' → logprob: -10.650956153869629

Token 449: ' (' (ID: 350)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.015864955261349678
    2. ' L' → logprob: -5.015864849090576
    3. ',' → logprob: -5.265864849090576
    4. '#' → logprob: -6.390864849090576
    5. 'par' → logprob: -7.515864849090576
    6. 'R' → logprob: -7.765864849090576
    7. 'en' → logprob: -8.515865325927734
    8. '.' → logprob: -8.515865325927734
    9. 'sur' → logprob: -8.640865325927734
    10. 's' → logprob: -8.640865325927734

Token 450: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.06787823885679245
    2. '#' → logprob: -3.817878246307373
    3. ')' → logprob: -4.567878246307373
    4. ' L' → logprob: -4.567878246307373
    5. 'par' → logprob: -4.567878246307373
    6. 'R' → logprob: -5.567878246307373
    7. 'en' → logprob: -5.942878246307373
    8. ',' → logprob: -6.067878246307373
    9. ' par' → logprob: -6.317878246307373
    10. ')#' → logprob: -8.317877769470215

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08790601789951324
    2. '.sort' → logprob: -2.9629061222076416
    3. ')' → logprob: -3.5879061222076416
    4. '),' → logprob: -6.7129058837890625
    5. 'sort' → logprob: -6.9629058837890625
    6. ' ,' → logprob: -7.5879058837890625
    7. 'sorted' → logprob: -7.8379058837890625
    8. ',
' → logprob: -8.087905883789062
    9. '_sorted' → logprob: -8.587905883789062
    10. '[' → logprob: -8.712905883789062

Token 452: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.004423825070261955
    2. ' R' → logprob: -5.50442361831665
    3. ')' → logprob: -8.129424095153809
    4. '
' → logprob: -11.754424095153809
    5. 'L' → logprob: -12.129424095153809
    6. ' ' → logprob: -12.129424095153809
    7. '[' → logprob: -12.504424095153809
    8. ',' → logprob: -12.504424095153809
    9. '

' → logprob: -12.754424095153809
    10. ']' → logprob: -12.754424095153809

Token 453: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029699765145778656
    2. ')
' → logprob: -6.502969741821289
    3. '),' → logprob: -7.377969741821289
    4. '])' → logprob: -8.502969741821289
    5. ',' → logprob: -8.877969741821289
    6. ' )' → logprob: -9.627969741821289
    7. ')]' → logprob: -9.752969741821289
    8. '))' → logprob: -10.002969741821289
    9. ')`' → logprob: -10.002969741821289
    10. 'sort' → logprob: -10.377969741821289

Token 454: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7987871170043945
    2. '.sort' → logprob: -1.6737871170043945
    3. ',' → logprob: -1.9237871170043945
    4. '#' → logprob: -2.1737871170043945
    5. 'sorted' → logprob: -3.0487871170043945
    6. 'L' → logprob: -3.6737871170043945
    7. 'sort' → logprob: -4.2987871170043945
    8. ')
' → logprob: -5.4237871170043945
    9. '=' → logprob: -6.1737871170043945
    10. '),' → logprob: -6.4237871170043945

Token 455: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.8885397911071777
    2. ' on' → logprob: -1.0135397911071777
    3. '#' → logprob: -3.1385397911071777
    4. 'tr' → logprob: -3.2635397911071777
    5. 'les' → logprob: -3.3885397911071777
    6. 'R' → logprob: -3.5135397911071777
    7. ' les' → logprob: -3.7635397911071777
    8. ' trie' → logprob: -3.8885397911071777
    9. 'L' → logprob: -5.013539791107178
    10. ' R' → logprob: -5.513539791107178

Token 456: ' construit' (ID: 119882)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1566973626613617
    2. 'tr' → logprob: -2.4066972732543945
    3. 'les' → logprob: -3.7816972732543945
    4. 'tri' → logprob: -4.1566972732543945
    5. 'sort' → logprob: -5.2816972732543945
    6. ' trie' → logprob: -5.2816972732543945
    7. 'range' → logprob: -6.6566972732543945
    8. ' les' → logprob: -7.0316972732543945
    9. 'Trie' → logprob: -7.5316972732543945
    10. 's' → logprob: -7.5316972732543945

Token 457: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.274425208568573
    2. ' un' → logprob: -1.6494252681732178
    3. 'une' → logprob: -3.2744252681732178
    4. 'un' → logprob: -5.274425029754639
    5. ' la' → logprob: -5.524425029754639
    6. 'la' → logprob: -8.649425506591797
    7. '#' → logprob: -9.024425506591797
    8. ' le' → logprob: -9.274425506591797
    9. ' #' → logprob: -9.649425506591797
    10. ' ' → logprob: -9.649425506591797

Token 458: ' DP' (ID: 51992)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.079171061515808
    2. 'dp' → logprob: -1.079171061515808
    3. 'fen' → logprob: -2.2041711807250977
    4. 'Fen' → logprob: -2.4541711807250977
    5. 'DP' → logprob: -3.2041711807250977
    6. 'segment' → logprob: -3.3291711807250977
    7. 'structure' → logprob: -3.8291711807250977
    8. 'import' → logprob: -5.079171180725098
    9. 'seg' → logprob: -5.204171180725098
    10. ' Fen' → logprob: -6.204171180725098

Token 459: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8912160992622375
    2. '.' → logprob: -2.2662160396575928
    3. '
' → logprob: -2.3912160396575928
    4. '[
' → logprob: -2.3912160396575928
    5. '#' → logprob: -2.7662160396575928
    6. ',' → logprob: -3.0162160396575928
    7. '_' → logprob: -3.3912160396575928
    8. ')' → logprob: -3.5162160396575928
    9. ':' → logprob: -3.6412160396575928
    10. 'import' → logprob: -3.7662160396575928

Token 460: 'programm' (ID: 85820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07668371498584747
    2. 'dynamic' → logprob: -4.076683521270752
    3. ')
' → logprob: -4.326683521270752
    4. '")' → logprob: -5.201683521270752
    5. '#' → logprob: -5.326683521270752
    6. ' dynamic' → logprob: -5.451683521270752
    7. '"' → logprob: -5.951683521270752
    8. '"""
' → logprob: -5.951683521270752
    9. ',' → logprob: -6.201683521270752
    10. ' dynamique' → logprob: -6.576683521270752

Token 461: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.058807123452425
    2. 'e' → logprob: -3.683807134628296
    3. ')' → logprob: -4.808806896209717
    4. 'a' → logprob: -5.058806896209717
    5. 'ing' → logprob: -5.433806896209717
    6. '   ' → logprob: -5.933806896209717
    7. '#' → logprob: -6.183806896209717
    8. 'm' → logprob: -6.308806896209717
    9. 'me' → logprob: -6.308806896209717
    10. ' ' → logprob: -7.433806896209717

Token 462: ' dynamique' (ID: 98708)
  Prédit: ' dynamique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamique' → logprob: -0.11465366184711456
    2. ' dynamic' → logprob: -2.9896535873413086
    3. 'dynamic' → logprob: -3.2396535873413086
    4. ')' → logprob: -4.989653587341309
    5. '_dynamic' → logprob: -5.364653587341309
    6. 'd' → logprob: -5.489653587341309
    7. ' dinámica' → logprob: -7.739653587341309
    8. ']' → logprob: -7.989653587341309
    9. 'dyn' → logprob: -7.989653587341309
    10. 'din' → logprob: -8.114653587341309

Token 463: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007971887476742268
    2. ' )' → logprob: -5.75797176361084
    3. ',' → logprob: -6.63297176361084
    4. ').' → logprob: -6.75797176361084
    5. '
' → logprob: -7.63297176361084
    6. ')
' → logprob: -7.88297176361084
    7. '[' → logprob: -8.13297176361084
    8. ']' → logprob: -8.88297176361084
    9. '[]' → logprob: -9.13297176361084
    10. '),' → logprob: -9.38297176361084

Token 464: ' sur' (ID: 1512)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1508108675479889
    2. 'L' → logprob: -2.150810956954956
    3. ',' → logprob: -5.650810718536377
    4. 'import' → logprob: -5.775810718536377
    5. ')' → logprob: -6.025810718536377
    6. '\n' → logprob: -6.150810718536377
    7. 'from' → logprob: -6.150810718536377
    8. '```' → logprob: -6.650810718536377
    9. 'sorted' → logprob: -6.900810718536377
    10. 'R' → logprob: -6.900810718536377

Token 465: ' R' (ID: 460)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4703475832939148
    2. 'les' → logprob: -2.2203476428985596
    3. 'R' → logprob: -2.7203476428985596
    4. 'la' → logprob: -2.8453476428985596
    5. ' la' → logprob: -3.5953476428985596
    6. 'len' → logprob: -3.5953476428985596
    7. 'sorted' → logprob: -3.7203476428985596
    8. ' les' → logprob: -3.8453476428985596
    9. ' L' → logprob: -4.3453474044799805
    10. 'l' → logprob: -4.4703474044799805

Token 466: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0719669759273529
    2. 'L' → logprob: -3.9469668865203857
    3. '"""' → logprob: -4.196967124938965
    4. ')' → logprob: -4.696967124938965
    5. 'sorted' → logprob: -5.071967124938965
    6. 'from' → logprob: -5.571967124938965
    7. '
' → logprob: -5.821967124938965
    8. 'interval' → logprob: -6.071967124938965
    9. '```' → logprob: -6.446967124938965
    10. '"""
' → logprob: -6.446967124938965

Token 467: '-' (ID: 12)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09974274039268494
    2. 'L' → logprob: -3.5997426509857178
    3. 'from' → logprob: -4.099742889404297
    4. '"""
' → logprob: -4.349742889404297
    5. '"""' → logprob: -4.474742889404297
    6. '
' → logprob: -4.849742889404297
    7. ')' → logprob: -5.349742889404297
    8. 'dp' → logprob: -5.974742889404297
    9. 'sorted' → logprob: -5.974742889404297
    10. '\n' → logprob: -6.349742889404297

Token 468: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15848933160305023
    2. 'L' → logprob: -2.283489227294922
    3. 'from' → logprob: -4.033489227294922
    4. 'On' → logprob: -4.783489227294922
    5. 'interval' → logprob: -5.283489227294922
    6. 'sorted' → logprob: -5.783489227294922
    7. '"""
' → logprob: -5.908489227294922
    8. 'Les' → logprob: -6.783489227294922
    9. 'pairs' → logprob: -7.283489227294922
    10. '
' → logprob: -7.533489227294922

Token 469: ' utilise' (ID: 70283)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8246263265609741
    2. 'continue' → logprob: -1.9496263265609741
    3. '.sort' → logprob: -2.4496264457702637
    4. '.append' → logprob: -2.5746264457702637
    5. 'L' → logprob: -2.6996264457702637
    6. '=' → logprob: -3.3246264457702637
    7. ' =' → logprob: -3.3246264457702637
    8. 'tri' → logprob: -3.5746264457702637
    9. 'sort' → logprob: -3.9496264457702637
    10. 'tr' → logprob: -4.199626445770264

Token 470: ' une' (ID: 2463)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.9722353219985962
    2. 'une' → logprob: -0.9722353219985962
    3. ' une' → logprob: -1.7222353219985962
    4. ' un' → logprob: -2.8472352027893066
    5. 'Fen' → logprob: -5.972235202789307
    6. 'import' → logprob: -6.597235202789307
    7. 'fen' → logprob: -6.722235202789307
    8. 'l' → logprob: -7.597235202789307
    9. 'from' → logprob: -8.097235679626465
    10. 'la' → logprob: -8.597235679626465

Token 471: ' Binary' (ID: 32672)
  Prédit: 'Fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Fen' → logprob: -0.784430205821991
    2. 'structure' → logprob: -1.1594302654266357
    3. 'fen' → logprob: -1.5344302654266357
    4. 'segment' → logprob: -5.284430027008057
    5. ' Fen' → logprob: -6.409430027008057
    6. 'seg' → logprob: -6.659430027008057
    7. 'Segment' → logprob: -6.659430027008057
    8. 'import' → logprob: -6.909430027008057
    9. 'from' → logprob: -7.534430027008057
    10. '#' → logprob: -7.659430027008057

Token 472: ' Indexed' (ID: 158810)
  Prédit: ' Indexed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Indexed' → logprob: -0.47601309418678284
    2. 'Indexed' → logprob: -0.9760130643844604
    3. ' indexed' → logprob: -6.47601318359375
    4. 'Index' → logprob: -8.35101318359375
    5. '_' → logprob: -10.22601318359375
    6. ' _' → logprob: -10.47601318359375
    7. '_index' → logprob: -11.10101318359375
    8. '-' → logprob: -11.35101318359375
    9. 'indexed' → logprob: -11.72601318359375
    10. ' Index' → logprob: -11.85101318359375

Token 473: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.04871692508459091
    2. ' Tree' → logprob: -3.0487170219421387
    3. ' tree' → logprob: -9.54871654510498
    4. ' ' → logprob: -10.54871654510498
    5. 'tree' → logprob: -11.29871654510498
    6. 'ree' → logprob: -12.17371654510498
    7. '-' → logprob: -12.42371654510498
    8. '_tree' → logprob: -12.79871654510498
    9. '  ' → logprob: -13.67371654510498
    10. '_T' → logprob: -13.67371654510498

Token 474: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05392197519540787
    2. '(' → logprob: -3.803921937942505
    3. '<|end|>' → logprob: -4.428922176361084
    4. '
' → logprob: -4.803922176361084
    5. '(F' → logprob: -5.303922176361084
    6. '(B' → logprob: -6.553922176361084
    7. ' or' → logprob: -7.303922176361084
    8. ',' → logprob: -8.053921699523926
    9. '(Bit' → logprob: -8.053921699523926
    10. '(
' → logprob: -8.053921699523926

Token 475: 'Fen' (ID: 155141)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09563575685024261
    2. ' (' → logprob: -3.4706356525421143
    3. '(F' → logprob: -3.7206356525421143
    4. ' or' → logprob: -4.345635890960693
    5. '(' → logprob: -4.970635890960693
    6. 'Fen' → logprob: -5.470635890960693
    7. ',' → logprob: -5.720635890960693
    8. '/F' → logprob: -6.220635890960693
    9. ' ou' → logprob: -6.970635890960693
    10. '(B' → logprob: -6.970635890960693

Token 476: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.15539254248142242
    2. 't' → logprob: -2.155392646789551
    3. 'wick' → logprob: -3.655392646789551
    4. 'Tree' → logprob: -7.780392646789551
    5. 'tree' → logprob: -7.905392646789551
    6. ']' → logprob: -8.40539264678955
    7. '#' → logprob: -8.53039264678955
    8. '```' → logprob: -8.65539264678955
    9. 'W' → logprob: -9.03039264678955
    10. 'x' → logprob: -9.03039264678955

Token 477: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.021329889073967934
    2. ' Tree' → logprob: -3.896329879760742
    3. ')' → logprob: -8.271329879760742
    4. 'T' → logprob: -9.021329879760742
    5. ' ' → logprob: -9.021329879760742
    6. ' tree' → logprob: -9.146329879760742
    7. 'ree' → logprob: -9.896329879760742
    8. '	Tree' → logprob: -10.646329879760742
    9. 'tree' → logprob: -10.896329879760742
    10. '_T' → logprob: -11.146329879760742

Token 478: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009904148755595088
    2. 'class' → logprob: -7.500990390777588
    3. ')
' → logprob: -8.625990867614746
    4. ' )' → logprob: -9.750990867614746
    5. ',' → logprob: -10.625990867614746
    6. '）' → logprob: -10.625990867614746
    7. ')...' → logprob: -10.625990867614746
    8. ' class' → logprob: -10.875990867614746
    9. '):' → logprob: -11.125990867614746
    10. ' or' → logprob: -11.375990867614746

Token 479: ' BIT' (ID: 52185)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.0844309329986572
    2. 'class' → logprob: -1.2094309329986572
    3. 'ou' → logprob: -2.3344309329986572
    4. ')' → logprob: -2.5844309329986572
    5. ' class' → logprob: -2.9594309329986572
    6. 'or' → logprob: -3.0844309329986572
    7. ' ou' → logprob: -3.0844309329986572
    8. ' aka' → logprob: -3.9594309329986572
    9. ' aussi' → logprob: -4.584430694580078
    10. 'also' → logprob: -5.709430694580078

Token 480: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0519813671708107
    2. ')
' → logprob: -3.1769814491271973
    3. 'class' → logprob: -5.051981449127197
    4. '):' → logprob: -6.676981449127197
    5. ')

' → logprob: -7.801981449127197
    6. '):
' → logprob: -7.926981449127197
    7. ' class' → logprob: -8.551980972290039
    8. ')
' → logprob: -9.551980972290039
    9. ' )' → logprob: -10.051980972290039
    10. '):

' → logprob: -10.301980972290039

Token 481: ' pour' (ID: 1930)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.020655754953622818
    2. '
' → logprob: -4.520655632019043
    3. ' class' → logprob: -4.770655632019043
    4. ')' → logprob: -7.895655632019043
    5. '

' → logprob: -8.020655632019043
    6. '#' → logprob: -8.520655632019043
    7. ' 
' → logprob: -10.145655632019043
    8. '(
' → logprob: -10.520655632019043
    9. 'import' → logprob: -10.895655632019043
    10. '
' → logprob: -10.895655632019043

Token 482: ' optimiser' (ID: 195777)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.579454779624939
    2. ' gérer' → logprob: -1.204454779624939
    3. ' effectuer' → logprob: -2.7044548988342285
    4. 'impl' → logprob: -4.3294548988342285
    5. ' maintenir' → logprob: -4.5794548988342285
    6. ' accél' → logprob: -4.9544548988342285
    7. ' optimiser' → logprob: -4.9544548988342285
    8. 'maint' → logprob: -5.5794548988342285
    9. 'fac' → logprob: -5.7044548988342285
    10. ' faire' → logprob: -5.7044548988342285

Token 483: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.30290481448173523
    2. 'les' → logprob: -1.8029048442840576
    3. ' l' → logprob: -3.1779048442840576
    4. 'l' → logprob: -3.4279048442840576
    5. ' la' → logprob: -4.3029046058654785
    6. 'la' → logprob: -5.0529046058654785
    7. ' le' → logprob: -6.9279046058654785
    8. 'le' → logprob: -7.1779046058654785
    9. ' ' → logprob: -8.427905082702637
    10. ' the' → logprob: -8.927905082702637

Token 484: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.3562863767147064
    2. ' calcul' → logprob: -2.1062862873077393
    3. 'update' → logprob: -3.1062862873077393
    4. ' update' → logprob: -3.7312862873077393
    5. 'c' → logprob: -3.9812862873077393
    6. '```' → logprob: -4.231286525726318
    7. 's' → logprob: -4.481286525726318
    8. 'cal' → logprob: -4.731286525726318
    9. 'range' → logprob: -4.856286525726318
    10. 'query' → logprob: -4.856286525726318

Token 485: ' de' (ID: 334)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07979230582714081
    2. 's' → logprob: -2.8297922611236572
    3. ' class' → logprob: -4.579792499542236
    4. ' de' → logprob: -5.704792499542236
    5. '
' → logprob: -7.204792499542236
    6. 'de' → logprob: -7.329792499542236
    7. ')' → logprob: -7.579792499542236
    8. 'import' → logprob: -7.829792499542236
    9. '

' → logprob: -7.954792499542236
    10. ' des' → logprob: -8.204792022705078

Token 486: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35943055152893066
    2. 'la' → logprob: -1.7344305515289307
    3. ' la' → logprob: -2.8594305515289307
    4. 'l' → logprob: -3.6094305515289307
    5. 'som' → logprob: -3.6094305515289307
    6. 'prefix' → logprob: -6.234430313110352
    7. ' som' → logprob: -6.609430313110352
    8. ' s' → logprob: -6.734430313110352
    9. ' sommes' → logprob: -6.859430313110352
    10. ' l' → logprob: -6.984430313110352

Token 487: ' DP' (ID: 51992)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7278532385826111
    2. 'dp' → logprob: -1.1028532981872559
    3. 'prefix' → logprob: -2.852853298187256
    4. 'som' → logprob: -3.352853298187256
    5. 'sum' → logprob: -4.102853298187256
    6. 'c' → logprob: -4.477853298187256
    7. '```' → logprob: -4.477853298187256
    8. 'DP' → logprob: -5.102853298187256
    9. ' somme' → logprob: -5.352853298187256
    10. 'max' → logprob: -5.352853298187256

Token 488: ' des' (ID: 731)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005004020873457193
    2. '
' → logprob: -5.505003929138184
    3. '

' → logprob: -7.505003929138184
    4. '#' → logprob: -8.755003929138184
    5. ' class' → logprob: -8.880003929138184
    6. '
' → logprob: -10.880003929138184
    7. 'import' → logprob: -11.005003929138184
    8. '```' → logprob: -11.130003929138184
    9. '\n' → logprob: -11.255003929138184
    10. '\' → logprob: -12.630003929138184

Token 489: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2576700747013092
    2. 'som' → logprob: -2.6326701641082764
    3. ' sommes' → logprob: -3.5076701641082764
    4. 'val' → logprob: -3.8826701641082764
    5. 'suffix' → logprob: -3.8826701641082764
    6. ' sous' → logprob: -4.382669925689697
    7. ' som' → logprob: -4.507669925689697
    8. 'prefix' → logprob: -4.507669925689697
    9. 'ranges' → logprob: -4.882669925689697
    10. ' suffix' → logprob: -5.257669925689697

Token 490: '-inter' (ID: 63516)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.3834267854690552
    2. 'interval' → logprob: -1.7584267854690552
    3. 'inter' → logprob: -2.2584266662597656
    4. '-inter' → logprob: -3.6334266662597656
    5. ' interv' → logprob: -5.133426666259766
    6. '-' → logprob: -6.258426666259766
    7. 'ranges' → logprob: -6.883426666259766
    8. '-in' → logprob: -7.508426666259766
    9. 's' → logprob: -7.508426666259766
    10. '-r' → logprob: -7.508426666259766

Token 491: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2847071588039398
    2. 'val' → logprob: -1.6597071886062622
    3. 'vals' → logprob: -2.9097070693969727
    4. '#' → logprob: -6.784707069396973
    5. 'n' → logprob: -8.284707069396973
    6. '```' → logprob: -8.284707069396973
    7. 'vel' → logprob: -8.534707069396973
    8. 'd' → logprob: -8.659707069396973
    9. 't' → logprob: -9.034707069396973
    10. 'valu' → logprob: -9.284707069396973

Token 492: 'alles' (ID: 28825)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.6408604383468628
    2. 'als' → logprob: -1.3908604383468628
    3. 'alles' → logprob: -2.6408605575561523
    4. 'aux' → logprob: -3.0158605575561523
    5. 'nts' → logprob: -3.3908605575561523
    6. 'nt' → logprob: -4.015860557556152
    7. 'n' → logprob: -4.140860557556152
    8. 'ents' → logprob: -4.890860557556152
    9. '```' → logprob: -5.140860557556152
    10. 'ent' → logprob: -5.265860557556152

Token 493: '.
' (ID: 558)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.023292995989322662
    2. '
' → logprob: -4.0232930183410645
    3. '

' → logprob: -5.7732930183410645
    4. '#' → logprob: -7.1482930183410645
    5. '
' → logprob: -8.023292541503906
    6. ' class' → logprob: -8.273292541503906
    7. ')

' → logprob: -8.898292541503906
    8. ')' → logprob: -9.148292541503906
    9. ')
' → logprob: -9.398292541503906
    10. 'import' → logprob: -9.523292541503906

Token 494: '"""

' (ID: 34508)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.008008908480405807
    2. '
' → logprob: -4.88300895690918
    3. '

' → logprob: -8.50800895690918
    4. '#' → logprob: -9.88300895690918
    5. ' class' → logprob: -10.25800895690918
    6. '
' → logprob: -10.25800895690918
    7. '```' → logprob: -10.38300895690918
    8. '\n' → logprob: -11.25800895690918
    9. '"""
' → logprob: -11.63300895690918
    10. '"""

' → logprob: -12.13300895690918

Token 495: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.668304245569743e-05
    2. '
' → logprob: -10.625046730041504
    3. '#' → logprob: -11.250046730041504
    4. 'def' → logprob: -12.500046730041504
    5. ' class' → logprob: -13.000046730041504
    6. 'from' → logprob: -13.875046730041504
    7. 'n' → logprob: -14.375046730041504
    8. 'import' → logprob: -14.625046730041504
    9. '```' → logprob: -14.625046730041504
    10. '  
' → logprob: -16.250045776367188

Token 496: ' BIT' (ID: 52185)
  Prédit: ' Fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fen' → logprob: -0.12836387753486633
    2. 'Fen' → logprob: -2.128363847732544
    3. ' BIT' → logprob: -6.878364086151123
    4. 'BIT' → logprob: -8.378363609313965
    5. ' Binary' → logprob: -9.253363609313965
    6. ' fen' → logprob: -10.003363609313965
    7. 'Binary' → logprob: -10.503363609313965
    8. ' Bit' → logprob: -12.753363609313965
    9. '_BIT' → logprob: -13.878363609313965
    10. 'Bit' → logprob: -14.003363609313965

Token 497: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003931384126190096
    2. ':
' → logprob: -7.875392913818359
    3. '():' → logprob: -12.25039291381836
    4. '(' → logprob: -12.50039291381836
    5. '(object' → logprob: -14.00039291381836
    6. ' :' → logprob: -14.25039291381836
    7. ':
' → logprob: -14.50039291381836
    8. ':**' → logprob: -14.75039291381836
    9. '_:' → logprob: -14.87539291381836
    10. '[' → logprob: -15.00039291381836

Token 498: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.053729813545942307
    2. '   ' → logprob: -3.428729772567749
    3. ':
' → logprob: -3.928729772567749
    4. '  
' → logprob: -10.303730010986328
    5. '(object' → logprob: -10.553730010986328
    6. '    
' → logprob: -10.553730010986328
    7. 'def' → logprob: -10.553730010986328
    8. '```' → logprob: -11.053730010986328
    9. '  ' → logprob: -11.178730010986328
    10. ' :' → logprob: -11.303730010986328

Token 499: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9031910300254822
    2. ' def' → logprob: -1.153191089630127
    3. 'def' → logprob: -1.278191089630127
    4. '	def' → logprob: -8.153190612792969
    5. ':' → logprob: -9.528190612792969
    6. '    
' → logprob: -9.903190612792969
    7. '__' → logprob: -10.153190612792969
    8. ' __' → logprob: -10.278190612792969
    9. ' ' → logprob: -11.278190612792969
    10. '    ' → logprob: -11.278190612792969

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026154326274991035
    2. ' def' → logprob: -4.276154518127441
    3. '    ' → logprob: -5.026154518127441
    4. 'def' → logprob: -6.026154518127441
    5. 'class' → logprob: -6.276154518127441
    6. '    
' → logprob: -8.276154518127441
    7. '
' → logprob: -8.651154518127441
    8. '  ' → logprob: -8.901154518127441
    9. ' ' → logprob: -8.901154518127441
    10. ' class' → logprob: -9.026154518127441

Token 501: ' Binary' (ID: 32672)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7995668053627014
    2. 'def' → logprob: -0.7995668053627014
    3. '   ' → logprob: -2.2995667457580566
    4. 'class' → logprob: -8.299567222595215
    5. '    ' → logprob: -8.549567222595215
    6. ' """' → logprob: -10.049567222595215
    7. '	def' → logprob: -10.299567222595215
    8. '  ' → logprob: -10.674567222595215
    9. '#' → logprob: -10.674567222595215
    10. 'de' → logprob: -11.424567222595215

Token 502: ' Indexed' (ID: 158810)
  Prédit: 'Indexed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Indexed' → logprob: -0.07893848419189453
    2. ' Indexed' → logprob: -2.5789384841918945
    3. 'Index' → logprob: -10.078938484191895
    4. ' indexed' → logprob: -12.203938484191895
    5. 'indexed' → logprob: -13.828938484191895
    6. 'Indexer' → logprob: -15.328938484191895
    7. ' Index' → logprob: -15.828938484191895
    8. '   ' → logprob: -15.953938484191895
    9. 'In' → logprob: -17.203937530517578
    10. 'Fen' → logprob: -17.453937530517578

Token 503: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.0003428528143558651
    2. ' Tree' → logprob: -8.000343322753906
    3. '	Tree' → logprob: -14.000343322753906
    4. '_T' → logprob: -14.125343322753906
    5. '(Tree' → logprob: -14.250343322753906
    6. 'Tr' → logprob: -14.375343322753906
    7. 'ree' → logprob: -14.500343322753906
    8. '_tree' → logprob: -14.750343322753906
    9. ' tree' → logprob: -14.750343322753906
    10. 'T' → logprob: -14.750343322753906

Token 504: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04226582124829292
    2. '<|end|>' → logprob: -3.4172658920288086
    3. '(' → logprob: -5.417265892028809
    4. ':
' → logprob: -6.792265892028809
    5. '(object' → logprob: -7.417265892028809
    6. '():' → logprob: -7.542265892028809
    7. ' (' → logprob: -7.667265892028809
    8. '[' → logprob: -8.167265892028809
    9. ' or' → logprob: -8.917265892028809
    10. '<|end|>' → logprob: -9.042265892028809

Token 505: 'Fen' (ID: 155141)
  Prédit: 'Fen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fen' → logprob: -0.050686065107584
    2. ')' → logprob: -4.050685882568359
    3. '):' → logprob: -4.175685882568359
    4. ':' → logprob: -5.550685882568359
    5. '):
' → logprob: -5.800685882568359
    6. 'fen' → logprob: -5.800685882568359
    7. ' fen' → logprob: -6.175685882568359
    8. '   ' → logprob: -6.300685882568359
    9. ' Fen' → logprob: -6.300685882568359
    10. 'Binary' → logprob: -8.80068588256836

Token 506: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.25610578060150146
    2. 't' → logprob: -2.381105899810791
    3. 'wick' → logprob: -3.131105899810791
    4. '   ' → logprob: -3.631105899810791
    5. 'Tree' → logprob: -4.131105899810791
    6. '       ' → logprob: -4.506105899810791
    7. '```' → logprob: -4.881105899810791
    8. 'tree' → logprob: -5.631105899810791
    9. '\' → logprob: -6.256105899810791
    10. '  ' → logprob: -6.506105899810791

Token 507: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.049798041582107544
    2. ' Tree' → logprob: -3.049798011779785
    3. ')' → logprob: -7.924798011779785
    4. '   ' → logprob: -7.924798011779785
    5. '	Tree' → logprob: -8.424798011779785
    6. ' ' → logprob: -9.424798011779785
    7. '(Tree' → logprob: -10.049798011779785
    8. '  ' → logprob: -10.049798011779785
    9. '_T' → logprob: -10.924798011779785
    10. '<Tree' → logprob: -10.924798011779785

Token 508: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11647039651870728
    2. '):
' → logprob: -2.4914703369140625
    3. ')' → logprob: -3.6164703369140625
    4. ':' → logprob: -8.991470336914062
    5. '):
' → logprob: -9.741470336914062
    6. '):

' → logprob: -10.741470336914062
    7. '[' → logprob: -10.991470336914062
    8. ')
' → logprob: -11.241470336914062
    9. '<|end|>' → logprob: -11.741470336914062
    10. '   ' → logprob: -11.866470336914062

Token 509: ' permettant' (ID: 61092)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06793816387653351
    2. ':
' → logprob: -2.8179380893707275
    3. '):' → logprob: -5.317938327789307
    4. '):
' → logprob: -7.692938327789307
    5. '   ' → logprob: -8.192937850952148
    6. '
' → logprob: -9.067937850952148
    7. '```' → logprob: -10.067937850952148
    8. '[' → logprob: -10.442937850952148
    9. '():' → logprob: -10.567937850952148
    10. '(object' → logprob: -10.817937850952148

Token 510: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1737690418958664
    2. ' de' → logprob: -2.048768997192383
    3. ' la' → logprob: -4.798768997192383
    4. ' l' → logprob: -5.048768997192383
    5. 'd' → logprob: -5.173768997192383
    6. ' un' → logprob: -5.923768997192383
    7. ' ' → logprob: -6.048768997192383
    8. ' le' → logprob: -6.048768997192383
    9. 'de' → logprob: -6.548768997192383
    10. '   ' → logprob: -7.798768997192383

Token 511: ' réaliser' (ID: 52384)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.7026545405387878
    2. 'def' → logprob: -1.5776546001434326
    3. '   ' → logprob: -2.3276546001434326
    4. 'faire' → logprob: -2.5776546001434326
    5. ' gérer' → logprob: -2.9526546001434326
    6. ' def' → logprob: -4.9526543617248535
    7. ' ' → logprob: -5.0776543617248535
    8. ' mettre' → logprob: -5.0776543617248535
    9. ' effectuer' → logprob: -5.0776543617248535
    10. 'dé' → logprob: -5.3276543617248535

Token 512: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5484750866889954
    2. ' une' → logprob: -1.5484750270843506
    3. ' un' → logprob: -2.4234750270843506
    4. ' la' → logprob: -2.7984750270843506
    5. ' l' → logprob: -3.7984750270843506
    6. ' les' → logprob: -3.9234750270843506
    7. ' ' → logprob: -5.17347526550293
    8. ' le' → logprob: -5.67347526550293
    9. '   ' → logprob: -6.42347526550293
    10. 'des' → logprob: -6.67347526550293

Token 513: '   ' (ID: 271)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3738653063774109
    2. ' un' → logprob: -2.7488653659820557
    3. ' une' → logprob: -2.8738653659820557
    4. ' la' → logprob: -3.2488653659820557
    5. ' ' → logprob: -3.3738653659820557
    6. ' les' → logprob: -3.3738653659820557
    7. ' l' → logprob: -3.4988653659820557
    8. '   ' → logprob: -3.4988653659820557
    9. 'des' → logprob: -4.873865127563477
    10. ' le' → logprob: -5.123865127563477

Token 514: ' efficacement' (ID: 155449)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.823283314704895
    2. ' la' → logprob: -1.323283314704895
    3. '   ' → logprob: -2.4482831954956055
    4. ' un' → logprob: -3.3232831954956055
    5. ' une' → logprob: -3.3232831954956055
    6. ' des' → logprob: -3.4482831954956055
    7. ' les' → logprob: -3.4482831954956055
    8. ' ' → logprob: -4.0732831954956055
    9. 'la' → logprob: -4.1982831954956055
    10. 'l' → logprob: -4.1982831954956055

Token 515: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1606091558933258
    2. ' les' → logprob: -2.410609245300293
    3. ' la' → logprob: -3.535609245300293
    4. 'des' → logprob: -4.410609245300293
    5. ' l' → logprob: -4.535609245300293
    6. ' une' → logprob: -5.910609245300293
    7. 'les' → logprob: -6.285609245300293
    8. 'la' → logprob: -7.535609245300293
    9. ' ' → logprob: -7.785609245300293
    10. '   ' → logprob: -8.160609245300293

Token 516: ' opérations' (ID: 102793)
  Prédit: ' mises'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mises' → logprob: -0.05785330757498741
    2. ' opérations' → logprob: -3.5578532218933105
    3. ' updates' → logprob: -4.5578532218933105
    4. ' mise' → logprob: -5.4328532218933105
    5. ' som' → logprob: -5.8078532218933105
    6. ' operations' → logprob: -5.8078532218933105
    7. ' update' → logprob: -6.8078532218933105
    8. 'updates' → logprob: -7.0578532218933105
    9. 'mise' → logprob: -7.5578532218933105
    10. 'som' → logprob: -7.6828532218933105

Token 517: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6288340091705322
    2. ' d' → logprob: -0.8788340091705322
    3. 'de' → logprob: -3.7538340091705322
    4. 'd' → logprob: -4.003833770751953
    5. ' ' → logprob: -5.378833770751953
    6. ' suivantes' → logprob: -5.878833770751953
    7. '   ' → logprob: -7.503833770751953
    8. '  ' → logprob: -7.628833770751953
    9. ' update' → logprob: -7.628833770751953
    10. '```' → logprob: -9.003833770751953

Token 518: ' pré' (ID: 9424)
  Prédit: ' mise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mise' → logprob: -0.5862777829170227
    2. 'mise' → logprob: -0.8362777829170227
    3. 'update' → logprob: -5.836277961730957
    4. 's' → logprob: -6.086277961730957
    5. ' update' → logprob: -6.586277961730957
    6. ' somme' → logprob: -6.836277961730957
    7. 'prefix' → logprob: -7.961277961730957
    8. 'addition' → logprob: -8.211277961730957
    9. ' mises' → logprob: -8.336277961730957
    10. ' maj' → logprob: -8.336277961730957

Token 519: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.011806213296949863
    2. 'cision' → logprob: -5.511806011199951
    3. 'cis' → logprob: -5.886806011199951
    4. 'c' → logprob: -6.261806011199951
    5. 'sum' → logprob: -6.511806011199951
    6. '```' → logprob: -7.636806011199951
    7. 'ci' → logprob: -8.51180648803711
    8. 'servation' → logprob: -8.76180648803711
    9. '#' → logprob: -8.76180648803711
    10. 'f' → logprob: -9.51180648803711

Token 520: 'es' (ID: 268)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4567204713821411
    2. 'ixe' → logprob: -1.2067204713821411
    3. 'fix' → logprob: -3.7067203521728516
    4. 'som' → logprob: -4.206720352172852
    5. 'x' → logprob: -4.581720352172852
    6. ' somme' → logprob: -5.081720352172852
    7. 's' → logprob: -5.581720352172852
    8. 'xe' → logprob: -6.206720352172852
    9. '_sum' → logprob: -6.331720352172852
    10. 'ix' → logprob: -7.081720352172852

Token 521: ' et' (ID: 859)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.604521632194519
    2. ' sum' → logprob: -1.104521632194519
    3. ' sums' → logprob: -2.3545217514038086
    4. '_sum' → logprob: -4.104521751403809
    5. '   ' → logprob: -5.729521751403809
    6. ' ' → logprob: -6.604521751403809
    7. ' somme' → logprob: -6.979521751403809
    8. 's' → logprob: -6.979521751403809
    9. 'cum' → logprob: -6.979521751403809
    10. 'de' → logprob: -7.104521751403809

Token 522: ' d' (ID: 272)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45641449093818665
    2. 'de' → logprob: -2.5814144611358643
    3. 'suffix' → logprob: -2.5814144611358643
    4. 'mise' → logprob: -2.9564144611358643
    5. 'update' → logprob: -3.5814144611358643
    6. '   ' → logprob: -3.5814144611358643
    7. ' de' → logprob: -3.8314144611358643
    8. ' mise' → logprob: -4.456414699554443
    9. 'som' → logprob: -4.581414699554443
    10. 'd' → logprob: -4.706414699554443

Token 523: ''aj' (ID: 116735)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34520190954208374
    2. 'mise' → logprob: -2.3452019691467285
    3. 'update' → logprob: -2.7202019691467285
    4. 'suffix' → logprob: -2.9702019691467285
    5. 'in' → logprob: -3.8452019691467285
    6. 'som' → logprob: -4.5952019691467285
    7. 'addition' → logprob: -4.9702019691467285
    8. '```' → logprob: -5.3452019691467285
    9. 'sum' → logprob: -5.4702019691467285
    10. 'aj' → logprob: -5.5952019691467285

Token 524: 'outs' (ID: 16513)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.7226790189743042
    2. 'out' → logprob: -1.0976790189743042
    3. 'oute' → logprob: -1.7226790189743042
    4. 'our' → logprob: -7.347679138183594
    5. 'outes' → logprob: -7.472679138183594
    6. 'outez' → logprob: -7.972679138183594
    7. 'ust' → logprob: -8.347679138183594
    8. 'o' → logprob: -8.472679138183594
    9. 'oint' → logprob: -9.097679138183594
    10. 'outs' → logprob: -9.722679138183594

Token 525: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21870288252830505
    2. ' sur' → logprob: -2.718702793121338
    3. ' (' → logprob: -3.218702793121338
    4. ' ' → logprob: -3.468702793121338
    5. 'de' → logprob: -4.218702793121338
    6. ',' → logprob: -4.843702793121338
    7. ':' → logprob: -4.843702793121338
    8. ' de' → logprob: -4.968702793121338
    9. 'sur' → logprob: -4.968702793121338
    10. '   ' → logprob: -5.343702793121338

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026989784091711044
    2. '
' → logprob: -3.901989698410034
    3. ')' → logprob: -6.276989936828613
    4. '    
' → logprob: -6.401989936828613
    5. '"""' → logprob: -6.401989936828613
    6. '"""
' → logprob: -7.651989936828613
    7. '    ' → logprob: -8.401989936828613
    8. ' 
' → logprob: -9.151989936828613
    9. ' """
' → logprob: -9.526989936828613
    10. '```' → logprob: -9.651989936828613

Token 527: ' At' (ID: 3604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34860673546791077
    2. '
' → logprob: -1.8486067056655884
    3. 'def' → logprob: -3.098606824874878
    4. '"""
' → logprob: -3.473606824874878
    5. ' def' → logprob: -3.848606824874878
    6. '    
' → logprob: -4.223606586456299
    7. '"""' → logprob: -4.723606586456299
    8. ')' → logprob: -4.723606586456299
    9. '    ' → logprob: -6.223606586456299
    10. ' """
' → logprob: -6.598606586456299

Token 528: 'tribut' (ID: 2741)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.8223763704299927
    2. 'tribut' → logprob: -0.8223763704299927
    3. 'trib' → logprob: -3.072376251220703
    4. 't' → logprob: -3.697376251220703
    5. 'tention' → logprob: -3.697376251220703
    6. 'tri' → logprob: -4.947376251220703
    7. 'tent' → logprob: -5.447376251220703
    8. 'tributes' → logprob: -6.447376251220703
    9. 'ten' → logprob: -6.572376251220703
    10. 'tribution' → logprob: -6.572376251220703

Token 529: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00020771251001860946
    2. '   ' → logprob: -9.000207901000977
    3. ' s' → logprob: -10.375207901000977
    4. 'es' → logprob: -10.625207901000977
    5. ':' → logprob: -10.750207901000977
    6. ':
' → logprob: -13.375207901000977
    7. 'class' → logprob: -13.875207901000977
    8. 'S' → logprob: -14.250207901000977
    9. '	s' → logprob: -14.500207901000977
    10. ' ' → logprob: -14.750207901000977

Token 530: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6160275936126709
    2. ':
' → logprob: -1.116027593612671
    3. '   ' → logprob: -2.241027593612671
    4. '
' → logprob: -4.74102783203125
    5. ' :
' → logprob: -4.86602783203125
    6. ' :' → logprob: -4.99102783203125
    7. '    
' → logprob: -6.99102783203125
    8. 'self' → logprob: -7.99102783203125
    9. '):
' → logprob: -8.11602783203125
    10. ',' → logprob: -8.61602783203125

Token 531: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.46356555819511414
    2. ':' → logprob: -1.2135655879974365
    3. '   ' → logprob: -2.7135655879974365
    4. ' :
' → logprob: -5.588565349578857
    5. ' :' → logprob: -6.338565349578857
    6. '
' → logprob: -7.463565349578857
    7. 'self' → logprob: -8.213565826416016
    8. ' =' → logprob: -8.713565826416016
    9. ' ' → logprob: -8.838565826416016
    10. '):
' → logprob: -8.963565826416016

Token 532: ' ----------
' (ID: 68058)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0911957025527954
    2. ':' → logprob: -1.3411957025527954
    3. '
' → logprob: -1.4661957025527954
    4. '   ' → logprob: -2.091195583343506
    5. 'self' → logprob: -3.966195583343506
    6. ' :' → logprob: -4.341195583343506
    7. ' :
' → logprob: -4.466195583343506
    8. '    
' → logprob: -6.716195583343506
    9. '):
' → logprob: -7.341195583343506
    10. ' self' → logprob: -7.466195583343506

Token 533: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6279395818710327
    2. 'n' → logprob: -1.3779395818710327
    3. ' n' → logprob: -1.7529395818710327
    4. ' self' → logprob: -4.252939701080322
    5. ' def' → logprob: -4.502939701080322
    6. 'self' → logprob: -4.752939701080322
    7. 'size' → logprob: -6.252939701080322
    8. '    ' → logprob: -6.377939701080322
    9. ' size' → logprob: -6.377939701080322
    10. 'def' → logprob: -6.877939701080322

Token 534: ' size' (ID: 2349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0134106874465942
    2. 'n' → logprob: -1.3884106874465942
    3. ' n' → logprob: -1.7634106874465942
    4. 'size' (adapté à ' size') → logprob: -2.2634105682373047
    5. ' size' → logprob: -3.0134105682373047
    6. 'self' → logprob: -3.2634105682373047
    7. ' self' → logprob: -4.513410568237305
    8. ' def' → logprob: -5.638410568237305
    9. 'def' → logprob: -5.638410568237305
    10. 'data' → logprob: -6.513410568237305

Token 535: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.046799104660749435
    2. ' :' → logprob: -3.2967991828918457
    3. ' =' → logprob: -5.546799182891846
    4. ':int' → logprob: -5.671799182891846
    5. '<|end|>' → logprob: -6.921799182891846
    6. ',' → logprob: -8.296798706054688
    7. '<|end|>' → logprob: -10.171798706054688
    8. '   ' → logprob: -10.171798706054688
    9. ':
' → logprob: -11.171798706054688
    10. ' ' → logprob: -11.796798706054688

Token 536: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04864504933357239
    2. ' int' → logprob: -3.04864501953125
    3. '   ' → logprob: -9.79864501953125
    4. '    ' → logprob: -14.17364501953125
    5. '[int' → logprob: -14.54864501953125
    6. '  ' → logprob: -15.29864501953125
    7. '	int' → logprob: -15.54864501953125
    8. ' ' → logprob: -15.67364501953125
    9. ':int' → logprob: -16.42364501953125
    10. '       ' → logprob: -16.67364501953125

Token 537: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02252635359764099
    2. '<|end|>' → logprob: -3.897526264190674
    3. ')' → logprob: -7.522526264190674
    4. '  
' → logprob: -7.772526264190674
    5. '    
' → logprob: -8.147526741027832
    6. '   ' → logprob: -8.272526741027832
    7. '<|end|>' → logprob: -9.022526741027832
    8. ',' → logprob: -9.272526741027832
    9. '
' → logprob: -9.647526741027832
    10. ')
' → logprob: -10.272526741027832

Token 538: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1274918019771576
    2. '   ' → logprob: -2.2524917125701904
    3. ')' → logprob: -4.5024919509887695
    4. '    
' → logprob: -6.7524919509887695
    5. ',' → logprob: -7.0024919509887695
    6. '):
' → logprob: -7.6274919509887695
    7. '    ' → logprob: -8.75249195098877
    8. '
' → logprob: -9.37749195098877
    9. '

' → logprob: -9.62749195098877
    10. '<|end|>' → logprob: -9.75249195098877

Token 539: ' La' (ID: 3038)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6475393176078796
    2. '   ' → logprob: -1.1475393772125244
    3. 'La' (adapté à ' La') → logprob: -3.1475393772125244
    4. ' la' → logprob: -3.2725393772125244
    5. ' int' → logprob: -3.8975393772125244
    6. 'self' → logprob: -4.022539138793945
    7. 'n' → logprob: -4.522539138793945
    8. ' La' → logprob: -5.147539138793945
    9. ' self' → logprob: -5.647539138793945
    10. '       ' → logprob: -5.897539138793945

Token 540: ' taille' (ID: 41644)
  Prédit: ' taille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taille' → logprob: -0.024633800610899925
    2. 'tail' → logprob: -4.274633884429932
    3. ' size' → logprob: -5.774633884429932
    4. '   ' → logprob: -5.774633884429932
    5. ' ' → logprob: -6.274633884429932
    6. ' capacité' → logprob: -7.649633884429932
    7. ' tail' → logprob: -8.024633407592773
    8. 'size' → logprob: -8.149633407592773
    9. ' plus' → logprob: -8.274633407592773
    10. '  ' → logprob: -8.649633407592773

Token 541: ' maximale' (ID: 76380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7115781903266907
    2. '<|end|>' → logprob: -0.8365781903266907
    3. '=' → logprob: -3.086578130722046
    4. ' =' → logprob: -4.836578369140625
    5. '    ' → logprob: -5.461578369140625
    6. '  ' → logprob: -5.836578369140625
    7. ',' → logprob: -5.836578369140625
    8. ')' → logprob: -5.961578369140625
    9. '       ' → logprob: -6.211578369140625
    10. ' ' → logprob: -6.711578369140625

Token 542: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23123615980148315
    2. '<|end|>' → logprob: -2.356236219406128
    3. '    ' → logprob: -3.981236219406128
    4. '    
' → logprob: -4.231235980987549
    5. ' de' → logprob: -4.481235980987549
    6. ')' → logprob: -4.731235980987549
    7. ',' → logprob: -4.981235980987549
    8. ' ' → logprob: -5.106235980987549
    9. '
' → logprob: -5.106235980987549
    10. '  ' → logprob: -5.106235980987549

Token 543: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.059312671422958374
    2. 'l' → logprob: -3.309312582015991
    3. ' la' → logprob: -4.93431282043457
    4. ' self' → logprob: -5.55931282043457
    5. 'self' → logprob: -5.68431282043457
    6. ' the' → logprob: -5.68431282043457
    7. 'the' → logprob: -6.93431282043457
    8. ' fen' → logprob: -7.43431282043457
    9. ' ' → logprob: -7.80931282043457
    10. 'la' → logprob: -8.18431282043457

Token 544: ''ar' (ID: 54307)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1567788124084473
    2. ' self' → logprob: -1.1567788124084473
    3. 'e' → logprob: -1.5317788124084473
    4. 'self' → logprob: -2.2817788124084473
    5. ''' → logprob: -4.281778812408447
    6. '_' → logprob: -5.031778812408447
    7. ' tableau' → logprob: -5.156778812408447
    8. ''a' → logprob: -5.531778812408447
    9. ' e' → logprob: -5.781778812408447
    10. ' '' → logprob: -6.031778812408447

Token 545: 'bre' (ID: 9945)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.06628546863794327
    2. 'r' → logprob: -2.8162853717803955
    3. 'g' → logprob: -6.566285610198975
    4. 'rray' → logprob: -6.816285610198975
    5. 'y' → logprob: -7.691285610198975
    6. 'e' → logprob: -8.066285133361816
    7. 'bre' → logprob: -8.566285133361816
    8. 'ay' → logprob: -8.566285133361816
    9. 'rey' → logprob: -9.441285133361816
    10. 'rée' → logprob: -9.566285133361816

Token 546: ' (+' (ID: 36088)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5789247155189514
    2. '<|end|>' → logprob: -0.9539247155189514
    3. '   ' → logprob: -3.7039246559143066
    4. ',' → logprob: -4.953924655914307
    5. '    
' → logprob: -4.953924655914307
    6. '  
' → logprob: -5.203924655914307
    7. '.' → logprob: -5.953924655914307
    8. '<|end|>' → logprob: -6.703924655914307
    9. ')' → logprob: -6.953924655914307
    10. '\n' → logprob: -7.328924655914307

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013427316443994641
    2. '=' → logprob: -7.6263427734375
    3. ' ' → logprob: -7.6263427734375
    4. '   ' → logprob: -8.5013427734375
    5. '+' → logprob: -9.5013427734375
    6. '
' → logprob: -10.6263427734375
    7. '       ' → logprob: -11.1263427734375
    8. '2' → logprob: -11.3763427734375
    9. '#' → logprob: -11.6263427734375
    10. 'import' → logprob: -11.7513427734375

Token 548: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037129041738808155
    2. ')
' → logprob: -6.128713130950928
    3. ' )' → logprob: -6.878713130950928
    4. '   ' → logprob: -8.62871265411377
    5. ',' → logprob: -9.12871265411377
    6. ').' → logprob: -10.12871265411377
    7. ')

' → logprob: -10.37871265411377
    8. '
' → logprob: -11.00371265411377
    9. ')
' → logprob: -11.12871265411377
    10. '),' → logprob: -11.12871265411377

Token 549: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.552294373512268
    2. ' on' → logprob: -1.677294373512268
    3. ' self' → logprob: -1.927294373512268
    4. '   ' → logprob: -1.927294373512268
    5. 'self' → logprob: -2.1772942543029785
    6. ')' → logprob: -2.5522942543029785
    7. ' la' → logprob: -3.6772942543029785
    8. ' ' → logprob: -3.6772942543029785
    9. ' l' → logprob: -4.3022942543029785
    10. ' )' → logprob: -4.4272942543029785

Token 550: ''ind' (ID: 82245)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5201799273490906
    2. 'e' → logprob: -1.5201799869537354
    3. ''espace' → logprob: -2.3951799869537354
    4. ''ind' → logprob: -3.8951799869537354
    5. '')' → logprob: -4.770179748535156
    6. 'indice' → logprob: -4.895179748535156
    7. '```' → logprob: -5.270179748535156
    8. 'a' → logprob: -5.270179748535156
    9. '   ' → logprob: -5.395179748535156
    10. 'es' → logprob: -5.395179748535156

Token 551: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -3.893480243277736e-05
    2. 'ice' → logprob: -10.375039100646973
    3. 'e' → logprob: -12.000039100646973
    4. 'é' → logprob: -14.375039100646973
    5. 'ices' → logprob: -15.000039100646973
    6. 'exe' → logprob: -15.250039100646973
    7. 'exp' → logprob: -15.875039100646973
    8. 'expl' → logprob: -16.000038146972656
    9. 'exc' → logprob: -16.750038146972656
    10. '```' → logprob: -17.500038146972656

Token 552: ' ' (ID: 220)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.6586995124816895
    2. 's' → logprob: -2.2836995124816895
    3. ' des' → logprob: -2.2836995124816895
    4. ')' → logprob: -2.4086995124816895
    5. ' de' → logprob: -2.4086995124816895
    6. '   ' → logprob: -2.5336995124816895
    7. ' =' → logprob: -2.6586995124816895
    8. ' ' → logprob: -3.1586995124816895
    9. '_' → logprob: -3.4086995124816895
    10. ' s' → logprob: -3.5336995124816895

Token 553: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.306945562362671
    2. '=' → logprob: -1.681945562362671
    3. ' est' → logprob: -1.806945562362671
    4. 'de' → logprob: -2.931945562362671
    5. ' de' → logprob: -3.181945562362671
    6. ')' → logprob: -3.306945562362671
    7. '0' → logprob: -3.306945562362671
    8. 's' → logprob: -3.431945562362671
    9. '   ' → logprob: -4.18194580078125
    10. 'd' → logprob: -4.18194580078125

Token 554: ' n' (ID: 297)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6846137642860413
    2. ' n' → logprob: -1.0596137046813965
    3. ' is' → logprob: -2.5596137046813965
    4. 'n' → logprob: -3.4346137046813965
    5. ')' → logprob: -3.9346137046813965
    6. '   ' → logprob: -4.3096137046813965
    7. 'est' → logprob: -5.5596137046813965
    8. '```' → logprob: -7.6846137046813965
    9. ' ne' → logprob: -8.559614181518555
    10. '
' → logprob: -8.559614181518555

Token 555: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.04088945686817169
    2. 'est' → logprob: -3.4158895015716553
    3. 'n' → logprob: -5.665889263153076
    4. ''' → logprob: -6.790889263153076
    5. '’est' → logprob: -7.040889263153076
    6. ' n' → logprob: -7.915889263153076
    7. 'e' → logprob: -7.915889263153076
    8. ''était' → logprob: -9.040889739990234
    9. 'es' → logprob: -9.165889739990234
    10. '')' → logprob: -9.665889739990234

Token 556: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.47583529353141785
    2. ' pas' → logprob: -0.9758353233337402
    3. 'util' → logprob: -6.47583532333374
    4. ' jamais' → logprob: -9.725834846496582
    5. ' utilisé' → logprob: -10.475834846496582
    6. 'Pas' → logprob: -10.600834846496582
    7. '_pas' → logprob: -10.725834846496582
    8. ' utilis' → logprob: -10.850834846496582
    9. 'used' → logprob: -10.975834846496582
    10. ' utilisée' → logprob: -11.475834846496582

Token 557: ' utilisé' (ID: 53138)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.10990539193153381
    2. ' utilisé' → logprob: -2.484905481338501
    3. ' utilisée' → logprob: -3.984905481338501
    4. 'used' → logprob: -6.734905242919922
    5. ' utilis' → logprob: -7.359905242919922
    6. ' used' → logprob: -9.109905242919922
    7. ' utilisés' → logprob: -9.234905242919922
    8. ' utilisées' → logprob: -9.734905242919922
    9. 'ut' → logprob: -10.984905242919922
    10. ''util' → logprob: -11.359905242919922

Token 558: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006220517214387655
    2. '   ' → logprob: -5.50622034072876
    3. ')
' → logprob: -6.63122034072876
    4. ').' → logprob: -8.006220817565918
    5. ' )' → logprob: -8.131220817565918
    6. ',' → logprob: -9.506220817565918
    7. '),' → logprob: -10.381220817565918
    8. ')

' → logprob: -11.256220817565918
    9. '.' → logprob: -11.381220817565918
    10. ')
' → logprob: -11.506220817565918

Token 559: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29589954018592834
    2. '
' → logprob: -1.420899510383606
    3. '"""' → logprob: -4.795899391174316
    4. '    
' → logprob: -5.795899391174316
    5. '"""
' → logprob: -5.920899391174316
    6. '    ' → logprob: -8.920899391174316
    7. '

' → logprob: -9.420899391174316
    8. '```' → logprob: -9.545899391174316
    9. '  
' → logprob: -9.795899391174316
    10. '\n' → logprob: -9.920899391174316

Token 560: ' tree' (ID: 8165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8115389347076416
    2. '
' → logprob: -1.0615389347076416
    3. 'data' → logprob: -2.5615389347076416
    4. ' def' → logprob: -2.8115389347076416
    5. ' data' → logprob: -3.8115389347076416
    6. ' tree' → logprob: -4.1865386962890625
    7. 'def' → logprob: -4.6865386962890625
    8. '    
' → logprob: -4.9365386962890625
    9. '"""
' → logprob: -5.3115386962890625
    10. 'tree' (adapté à ' tree') → logprob: -5.8115386962890625

Token 561: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07456398010253906
    2. ' =' → logprob: -2.824563980102539
    3. ' :' → logprob: -4.574563980102539
    4. '=' → logprob: -6.574563980102539
    5. '   ' → logprob: -7.449563980102539
    6. '  ' → logprob: -9.574563980102539
    7. ' ' → logprob: -9.824563980102539
    8. '=[]' → logprob: -10.949563980102539
    9. '[]' → logprob: -11.074563980102539
    10. '```' → logprob: -11.074563980102539

Token 562: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.43113064765930176
    2. ' list' → logprob: -1.6811306476593018
    3. ' [' → logprob: -2.5561306476593018
    4. '[' → logprob: -2.9311306476593018
    5. 'List' → logprob: -4.431130409240723
    6. '[List' → logprob: -4.556130409240723
    7. '[int' → logprob: -5.306130409240723
    8. '[]' → logprob: -5.681130409240723
    9. '[list' → logprob: -6.931130409240723
    10. ' List' → logprob: -7.431130409240723

Token 563: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.029994841665029526
    2. '<|end|>' → logprob: -4.279994964599609
    3. '<int' → logprob: -5.154994964599609
    4. ',' → logprob: -5.279994964599609
    5. '[' → logprob: -6.654994964599609
    6. '(int' → logprob: -6.779994964599609
    7. ' of' → logprob: -6.779994964599609
    8. ' =' → logprob: -8.52999496459961
    9. ':' → logprob: -8.65499496459961
    10. 'int' → logprob: -8.77999496459961

Token 564: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000510260637383908
    2. ' int' → logprob: -7.625510215759277
    3. '   ' → logprob: -11.625510215759277
    4. '[int' → logprob: -11.750510215759277
    5. '(int' → logprob: -13.125510215759277
    6. 'ints' → logprob: -13.125510215759277
    7. '	int' → logprob: -14.875510215759277
    8. '0' → logprob: -15.000510215759277
    9. ']int' → logprob: -15.125510215759277
    10. ',int' → logprob: -15.500510215759277

Token 565: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12588880956172943
    2. '   ' → logprob: -2.8758888244628906
    3. '

' → logprob: -3.8758888244628906
    4. '    
' → logprob: -4.125888824462891
    5. '
    
' → logprob: -4.625888824462891
    6. ')' → logprob: -5.750888824462891
    7. '
' → logprob: -6.000888824462891
    8. '    ' → logprob: -6.500888824462891
    9. '  
' → logprob: -6.875888824462891
    10. ']' → logprob: -7.125888824462891

Token 566: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7396422624588013
    2. '   ' → logprob: -1.2396422624588013
    3. '

' → logprob: -1.9896422624588013
    4. '    
' → logprob: -2.8646421432495117
    5. '
    
' → logprob: -4.739642143249512
    6. ' =' → logprob: -5.364642143249512
    7. '
' → logprob: -5.614642143249512
    8. '    ' → logprob: -5.614642143249512
    9. '=' → logprob: -5.739642143249512
    10. ')' → logprob: -5.989642143249512

Token 567: ' L' (ID: 451)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16946469247341156
    2. '[int' → logprob: -2.544464588165283
    3. '   ' → logprob: -3.419464588165283
    4. 'list' → logprob: -3.919464588165283
    5. ' int' → logprob: -4.544464588165283
    6. ' list' → logprob: -5.294464588165283
    7. 'List' → logprob: -5.794464588165283
    8. 'La' → logprob: -6.294464588165283
    9. '       ' → logprob: -6.794464588165283
    10. '[' → logprob: -6.919464588165283

Token 568: ''ar' (ID: 54307)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6256909370422363
    2. 'ist' → logprob: -1.2506909370422363
    3. 'e' → logprob: -3.3756909370422363
    4. 'isted' → logprob: -3.5006909370422363
    5. 'a' → logprob: -3.6256909370422363
    6. 'iste' → logprob: -4.000690937042236
    7. 'azy' → logprob: -4.250690937042236
    8. 'size' → logprob: -4.500690937042236
    9. '   ' → logprob: -4.875690937042236
    10. '[]' → logprob: -5.000690937042236

Token 569: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.009753373451530933
    2. 'r' → logprob: -5.134753227233887
    3. 'bres' → logprob: -6.134753227233887
    4. 'b' → logprob: -7.634753227233887
    5. 'e' → logprob: -7.884753227233887
    6. 'rée' → logprob: -8.884753227233887
    7. '[' → logprob: -9.009753227233887
    8. 'g' → logprob: -9.509753227233887
    9. 'gue' → logprob: -9.634753227233887
    10. 're' → logprob: -10.259753227233887

Token 570: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33255448937416077
    2. '<|end|>' → logprob: -2.707554578781128
    3. '   ' → logprob: -2.957554578781128
    4. ' de' → logprob: -3.457554578781128
    5. '[]' → logprob: -3.582554578781128
    6. ' des' → logprob: -3.707554578781128
    7. ',' → logprob: -4.457554340362549
    8. '_' → logprob: -4.582554340362549
    9. ' =' → logprob: -4.832554340362549
    10. '[int' → logprob: -5.207554340362549

Token 571: ' pré' (ID: 9424)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.28037428855896
    2. 'int' → logprob: -1.53037428855896
    3. 'c' → logprob: -1.90537428855896
    4. 'val' → logprob: -2.03037428855896
    5. 's' → logprob: -2.15537428855896
    6. 'cum' → logprob: -3.78037428855896
    7. ' cumulative' → logprob: -4.655374526977539
    8. 'som' → logprob: -4.655374526977539
    9. 'size' → logprob: -4.905374526977539
    10. 'z' → logprob: -5.155374526977539

Token 572: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -9.698698704596609e-05
    2. 'sum' → logprob: -10.500097274780273
    3. '```' → logprob: -11.125097274780273
    4. 's' → logprob: -11.375097274780273
    5. 'f' → logprob: -11.750097274780273
    6. '{"' → logprob: -12.250097274780273
    7. '{' → logprob: -12.375097274780273
    8. '#' → logprob: -12.625097274780273
    9. '[' → logprob: -12.625097274780273
    10. '/s' → logprob: -12.750097274780273

Token 573: 'es' (ID: 268)
  Prédit: 'xes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xes' → logprob: -0.05073297768831253
    2. 'fix' → logprob: -3.0507330894470215
    3. 'x' → logprob: -7.1757330894470215
    4. 'ixes' → logprob: -7.8007330894470215
    5. 's' → logprob: -8.675732612609863
    6. 'Fix' → logprob: -8.800732612609863
    7. '```' → logprob: -8.925732612609863
    8. 'f' → logprob: -9.300732612609863
    9. 'sum' → logprob: -9.925732612609863
    10. '   ' → logprob: -10.050732612609863

Token 574: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01794283092021942
    2. ',' → logprob: -5.517942905426025
    3. '.' → logprob: -5.517942905426025
    4. '<|end|>' → logprob: -5.642942905426025
    5. '    ' → logprob: -6.892942905426025
    6. ')' → logprob: -7.142942905426025
    7. '    
' → logprob: -7.142942905426025
    8. '  ' → logprob: -7.142942905426025
    9. '
' → logprob: -7.642942905426025
    10. ']' → logprob: -7.767942905426025

Token 575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04110639542341232
    2. '
' → logprob: -3.7911064624786377
    3. '    
' → logprob: -4.166106224060059
    4. '"""' → logprob: -7.291106224060059
    5. ')' → logprob: -7.541106224060059
    6. '```' → logprob: -8.041106224060059
    7. '"""
' → logprob: -8.791106224060059
    8. ' 
' → logprob: -8.916106224060059
    9. '

' → logprob: -9.791106224060059
    10. '    ' → logprob: -9.791106224060059

Token 576: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05026862770318985
    2. '
' → logprob: -3.8002686500549316
    3. '"""' → logprob: -4.175268650054932
    4. '"""
' (adapté à ' """
') → logprob: -5.175268650054932
    5. '    
' → logprob: -5.550268650054932
    6. ')' → logprob: -7.925268650054932
    7. ' """
' → logprob: -7.925268650054932
    8. ' """' → logprob: -8.175268173217773
    9. '```' → logprob: -8.675268173217773
    10. '"""

' → logprob: -8.800268173217773

Token 577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00394066795706749
    2. '
' → logprob: -6.128940582275391
    3. 'def' → logprob: -7.128940582275391
    4. '    
' → logprob: -7.503940582275391
    5. ' def' → logprob: -7.878940582275391
    6. ' 
' → logprob: -11.62894058227539
    7. '    ' → logprob: -12.62894058227539
    8. ' ' → logprob: -13.00394058227539
    9. '   
' → logprob: -13.50394058227539
    10. '	def' → logprob: -13.75394058227539

Token 578: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6382438540458679
    2. 'def' (adapté à ' def') → logprob: -1.1382439136505127
    3. '   ' → logprob: -1.8882439136505127
    4. '	def' → logprob: -10.013243675231934
    5. '
' → logprob: -12.013243675231934
    6. '    
' → logprob: -12.138243675231934
    7. ' 
' → logprob: -12.763243675231934
    8. '    ' → logprob: -14.138243675231934
    9. ' ' → logprob: -14.263243675231934
    10. ' __' → logprob: -14.638243675231934

Token 579: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.13068541884422302
    2. '__' → logprob: -2.130685329437256
    3. ' __' → logprob: -5.880685329437256
    4. '_init' → logprob: -7.005685329437256
    5. ' init' → logprob: -10.005685806274414
    6. '_' → logprob: -13.005685806274414
    7. '**' → logprob: -13.880685806274414
    8. 'def' → logprob: -14.755685806274414
    9. '___' → logprob: -14.755685806274414
    10. 'int' → logprob: -15.130685806274414

Token 580: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'int' → logprob: -18.625
    3. 'inite' → logprob: -19.0
    4. '_init' → logprob: -19.375
    5. ' init' → logprob: -20.25
    6. 'in' → logprob: -20.875
    7. 'innit' → logprob: -21.25
    8. '	init' → logprob: -21.5
    9. '(init' → logprob: -21.625
    10. 'inti' → logprob: -21.875

Token 581: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.010154330171644688
    2. '__' → logprob: -4.7601542472839355
    3. '(self' → logprob: -6.5101542472839355
    4. '__(
' → logprob: -10.635154724121094
    5. '(' → logprob: -11.135154724121094
    6. '__((' → logprob: -11.760154724121094
    7. '_(' → logprob: -13.510154724121094
    8. '__('' → logprob: -13.760154724121094
    9. '__(*' → logprob: -15.010154724121094
    10. 'self' → logprob: -15.010154724121094

Token 582: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6166903151315637e-05
    2. ' self' → logprob: -11.375016212463379
    3. '   ' → logprob: -12.500016212463379
    4. '(self' → logprob: -14.500016212463379
    5. ',' → logprob: -15.500016212463379
    6. ',self' → logprob: -16.250015258789062
    7. ' ' → logprob: -17.250015258789062
    8. '
' → logprob: -17.875015258789062
    9. '       ' → logprob: -18.000015258789062
    10. '0' → logprob: -18.000015258789062

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005481337197124958
    2. ' ,' → logprob: -5.380481243133545
    3. 'self' → logprob: -7.380481243133545
    4. ',self' → logprob: -9.380481719970703
    5. ',size' → logprob: -9.755481719970703
    6. '(self' → logprob: -10.005481719970703
    7. '(size' → logprob: -10.880481719970703
    8. ' (' → logprob: -12.005481719970703
    9. '(' → logprob: -12.255481719970703
    10. ',(' → logprob: -12.505481719970703

Token 584: ' max' (ID: 2999)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.10126510262489319
    2. 'self' → logprob: -2.4762651920318604
    3. 'n' → logprob: -4.976264953613281
    4. ' size' → logprob: -5.476264953613281
    5. '   ' → logprob: -7.726264953613281
    6. 'max' → logprob: -8.476264953613281
    7. 'int' → logprob: -8.476264953613281
    8. ' self' → logprob: -9.226264953613281
    9. ' n' → logprob: -10.601264953613281
    10. '0' → logprob: -10.601264953613281

Token 585: '_n' (ID: 2170)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.07305561006069183
    2. 'size' → logprob: -2.6980555057525635
    3. ')' → logprob: -6.573055744171143
    4. '_val' → logprob: -7.698055744171143
    5. '_' → logprob: -7.823055744171143
    6. '_n' → logprob: -8.823055267333984
    7. '_len' → logprob: -9.198055267333984
    8. '_idx' → logprob: -9.198055267333984
    9. 'n' → logprob: -9.448055267333984
    10. '):' → logprob: -9.573055267333984

Token 586: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.058569930493831635
    2. '):
' → logprob: -3.43356990814209
    3. '+' → logprob: -3.80856990814209
    4. ',' → logprob: -7.30856990814209
    5. '=' → logprob: -7.30856990814209
    6. ' ):' → logprob: -7.93356990814209
    7. ':' → logprob: -8.43356990814209
    8. '   ' → logprob: -9.05856990814209
    9. ')' → logprob: -9.30856990814209
    10. '):
' → logprob: -9.43356990814209

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01969541795551777
    2. ':' → logprob: -4.019695281982422
    3. ':
' → logprob: -7.394695281982422
    4. ',' → logprob: -8.019695281982422
    5. '):
' → logprob: -8.394695281982422
    6. '   ' → logprob: -9.394695281982422
    7. '	' → logprob: -10.019695281982422
    8. '):' → logprob: -10.269695281982422
    9. ' :' → logprob: -10.394695281982422
    10. '
' → logprob: -10.644695281982422

Token 588: ' """
' (ID: 7037)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16036243736743927
    2. '       ' → logprob: -1.9103624820709229
    3. ' self' → logprob: -8.910362243652344
    4. '   ' → logprob: -12.910362243652344
    5. '	self' → logprob: -14.285362243652344
    6. '	' → logprob: -16.410362243652344
    7. '(self' → logprob: -17.035362243652344
    8. 'super' → logprob: -18.035362243652344
    9. '0' → logprob: -18.285362243652344
    10. '           ' → logprob: -19.160362243652344

Token 589: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007145005743950605
    2. '       ' → logprob: -5.007144927978516
    3. ' self' → logprob: -7.757144927978516
    4. '   ' → logprob: -13.507144927978516
    5. '	self' → logprob: -15.382144927978516
    6. 'super' → logprob: -15.507144927978516
    7. 'max' → logprob: -16.382144927978516
    8. '0' → logprob: -17.132144927978516
    9. '(self' → logprob: -18.632144927978516
    10. 'size' → logprob: -19.132144927978516

Token 590: ' Initialise' (ID: 179601)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20183312892913818
    2. '       ' → logprob: -1.9518331289291382
    3. ' self' → logprob: -3.2018332481384277
    4. '   ' → logprob: -9.70183277130127
    5. 'super' → logprob: -12.45183277130127
    6. '	self' → logprob: -13.45183277130127
    7. ' super' → logprob: -15.32683277130127
    8. ' ' → logprob: -15.57683277130127
    9. 'def' → logprob: -16.201833724975586
    10. ' ' → logprob: -16.576833724975586

Token 591: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08229070156812668
    2. ' self' → logprob: -2.5822906494140625
    3. '(self' → logprob: -5.7072906494140625
    4. '       ' → logprob: -9.582290649414062
    5. '   ' → logprob: -13.207290649414062
    6. '	self' → logprob: -13.957290649414062
    7. ' le' → logprob: -14.832290649414062
    8. ' (' → logprob: -15.207290649414062
    9. '_self' → logprob: -15.457290649414062
    10. '(' → logprob: -15.582290649414062

Token 592: ''ar' (ID: 54307)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3472016155719757
    2. ',' → logprob: -2.3472015857696533
    3. 'self' → logprob: -3.0972015857696533
    4. ')' → logprob: -3.4722015857696533
    5. ' self' → logprob: -3.4722015857696533
    6. '   ' → logprob: -3.8472015857696533
    7. ' ' → logprob: -3.8472015857696533
    8. 'e' → logprob: -4.097201824188232
    9. ''' → logprob: -5.472201824188232
    10. '  ' → logprob: -5.972201824188232

Token 593: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.06674490123987198
    2. 'g' → logprob: -2.941744804382324
    3. 'gv' → logprob: -5.816744804382324
    4. 'e' → logprob: -6.316744804382324
    5. '   ' → logprob: -6.441744804382324
    6. 'ray' → logprob: -6.441744804382324
    7. 't' → logprob: -7.691744804382324
    8. '       ' → logprob: -8.066744804382324
    9. '__' → logprob: -8.066744804382324
    10. 'ay' → logprob: -8.066744804382324

Token 594: ' BIT' (ID: 52185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.987067461013794
    2. '   ' → logprob: -1.362067461013794
    3. ' (' → logprob: -2.112067461013794
    4. ',' → logprob: -2.737067461013794
    5. '(self' → logprob: -2.862067461013794
    6. '(' → logprob: -3.112067461013794
    7. '(max' → logprob: -3.612067461013794
    8. ' de' → logprob: -4.362067222595215
    9. 'self' → logprob: -5.112067222595215
    10. ' avec' → logprob: -5.237067222595215

Token 595: '.

' (ID: 364)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4354006052017212
    2. '       ' → logprob: -1.1854006052017212
    3. ',' → logprob: -3.4354004859924316
    4. 'self' → logprob: -4.560400485992432
    5. '   ' → logprob: -6.935400485992432
    6. '(' → logprob: -7.060400485992432
    7. ' self' → logprob: -7.935400485992432
    8. ':' → logprob: -8.18540096282959
    9. ' avec' → logprob: -8.18540096282959
    10. '(max' → logprob: -8.31040096282959

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015788905147928745
    2. 'self' → logprob: -9.125158309936523
    3. ' self' → logprob: -10.625158309936523
    4. '   ' → logprob: -10.875158309936523
    5. '           ' → logprob: -13.250158309936523
    6. '	   ' → logprob: -14.125158309936523
    7. '        
' → logprob: -14.375158309936523
    8. ',' → logprob: -14.625158309936523
    9. ':' → logprob: -14.625158309936523
    10. '	' → logprob: -14.875158309936523

Token 597: ' Param' (ID: 14796)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28562605381011963
    2. '       ' → logprob: -1.5356260538101196
    3. ' self' → logprob: -3.41062593460083
    4. '   ' → logprob: -9.160626411437988
    5. '	self' → logprob: -12.910626411437988
    6. ' ' → logprob: -13.160626411437988
    7. 'def' → logprob: -13.535626411437988
    8. '           ' → logprob: -13.910626411437988
    9. ' ' → logprob: -14.160626411437988
    10. 'super' → logprob: -14.785626411437988

Token 598: 'ètres' (ID: 40427)
  Prédit: 'eter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eter' → logprob: -0.933929979801178
    2. 'ètre' → logprob: -1.1839299201965332
    3. '   ' → logprob: -1.9339299201965332
    4. 'eters' → logprob: -2.183929920196533
    5. 'etre' → logprob: -3.683929920196533
    6. 'ètres' → logprob: -4.933929920196533
    7. '       ' → logprob: -6.058929920196533
    8. ' ' → logprob: -6.183929920196533
    9. 'etr' → logprob: -6.558929920196533
    10. 'etrize' → logprob: -7.058929920196533

Token 599: '
' (ID: 198)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1760311871767044
    2. ' (' → logprob: -2.5510311126708984
    3. ',' → logprob: -3.3010311126708984
    4. '       ' → logprob: -4.176031112670898
    5. 'self' → logprob: -4.801031112670898
    6. ':' → logprob: -4.801031112670898
    7. ' self' → logprob: -5.176031112670898
    8. '
' → logprob: -6.551031112670898
    9. '):
' → logprob: -6.676031112670898
    10. '=' → logprob: -6.801031112670898

Token 600: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.573798656463623
    2. '       ' → logprob: -1.323798656463623
    3. ' (' → logprob: -3.073798656463623
    4. ',' → logprob: -3.198798656463623
    5. ':' → logprob: -3.448798656463623
    6. 'self' → logprob: -3.823798656463623
    7. ' self' → logprob: -4.573798656463623
    8. '   ' → logprob: -5.198798656463623
    9. ' :' → logprob: -5.948798656463623
    10. '):
' → logprob: -6.073798656463623

Token 601: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7857595086097717
    2. '       ' → logprob: -1.160759449005127
    3. ' self' → logprob: -2.410759449005127
    4. ',' → logprob: -3.035759449005127
    5. ':' → logprob: -3.410759449005127
    6. '(self' → logprob: -4.160759449005127
    7. ' :' → logprob: -4.785759449005127
    8. '
' → logprob: -4.910759449005127
    9. '   ' → logprob: -5.035759449005127
    10. '           ' → logprob: -5.660759449005127

Token 602: '-----------
' (ID: 75736)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39265257120132446
    2. '       ' → logprob: -2.1426525115966797
    3. ':' → logprob: -2.5176525115966797
    4. '(self' → logprob: -2.7676525115966797
    5. ',' → logprob: -4.14265251159668
    6. 'self' → logprob: -4.39265251159668
    7. '=self' → logprob: -4.39265251159668
    8. '):
' → logprob: -5.14265251159668
    9. ':
' → logprob: -5.39265251159668
    10. '   ' → logprob: -5.76765251159668

Token 603: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24512417614459991
    2. ' self' → logprob: -1.7451242208480835
    3. 'max' → logprob: -3.995124101638794
    4. '       ' → logprob: -4.245124340057373
    5. ' max' → logprob: -4.620124340057373
    6. '   ' → logprob: -9.370123863220215
    7. ',' → logprob: -10.495123863220215
    8. ' ' → logprob: -11.745123863220215
    9. '```' → logprob: -11.995123863220215
    10. '        ' → logprob: -12.245123863220215

Token 604: ' max' (ID: 2999)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.41750165820121765
    2. 'max' (adapté à ' max') → logprob: -1.16750168800354
    3. ' self' → logprob: -3.91750168800354
    4. ' max' → logprob: -4.917501449584961
    5. '       ' → logprob: -5.917501449584961
    6. '   ' → logprob: -8.667501449584961
    7. 'size' → logprob: -10.042501449584961
    8. ' ' → logprob: -11.792501449584961
    9. '	max' → logprob: -12.417501449584961
    10. '	self' → logprob: -12.667501449584961

Token 605: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -7.703443770878948e-06
    2. ' _' → logprob: -12.375007629394531
    3. '_' → logprob: -13.500007629394531
    4. '   ' → logprob: -14.750007629394531
    5. '=_' → logprob: -14.750007629394531
    6. ')_' → logprob: -15.375007629394531
    7. '\' → logprob: -15.375007629394531
    8. '(_' → logprob: -15.500007629394531
    9. ')' → logprob: -16.37500762939453
    10. '_x' → logprob: -16.87500762939453

Token 606: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20580969750881195
    2. ':' → logprob: -2.0808095932006836
    3. '):
' → logprob: -2.8308095932006836
    4. ':int' → logprob: -7.205809593200684
    5. '=' → logprob: -8.455809593200684
    6. '<|end|>' → logprob: -8.455809593200684
    7. '       ' → logprob: -8.580809593200684
    8. ')' → logprob: -8.580809593200684
    9. ' :' → logprob: -9.080809593200684
    10. '):
' → logprob: -9.080809593200684

Token 607: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.061054359131958e-06
    2. ' int' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.25000762939453
    4. '       ' → logprob: -18.00000762939453
    5. '	int' → logprob: -20.00000762939453
    6. '[int' → logprob: -21.12500762939453
    7. '           ' → logprob: -21.62500762939453
    8. '  ' → logprob: -21.75000762939453
    9. ':int' → logprob: -21.87500762939453
    10. '(int' → logprob: -22.00000762939453

Token 608: '
' (ID: 198)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4632148742675781
    2. '):' → logprob: -1.0882148742675781
    3. ')' → logprob: -3.463214874267578
    4. '<|end|>' → logprob: -6.588214874267578
    5. '       ' → logprob: -7.338214874267578
    6. '):
' → logprob: -8.463214874267578
    7. ':' → logprob: -9.088214874267578
    8. '   ' → logprob: -9.213214874267578
    9. '```' → logprob: -10.463214874267578
    10. '<|end|>' → logprob: -10.963214874267578

Token 609: '           ' (ID: 352)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.53749680519104
    2. '):' → logprob: -0.91249680519104
    3. '       ' → logprob: -5.037496566772461
    4. ')' → logprob: -5.662496566772461
    5. ':' → logprob: -5.662496566772461
    6. '   ' → logprob: -8.287496566772461
    7. '):
' → logprob: -8.662496566772461
    8. '=' → logprob: -8.912496566772461
    9. '**' → logprob: -9.412496566772461
    10. '<|end|>' → logprob: -9.662496566772461

Token 610: ' L' (ID: 451)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004170171916484833
    2. 'int' → logprob: -5.629169940948486
    3. ' max' → logprob: -7.879169940948486
    4. '       ' → logprob: -9.379170417785645
    5. 'size' → logprob: -9.754170417785645
    6. 'maximum' → logprob: -11.754170417785645
    7. 'le' → logprob: -12.004170417785645
    8. 'la' → logprob: -12.254170417785645
    9. 'Le' → logprob: -12.254170417785645
    10. 'self' → logprob: -12.504170417785645

Token 611: ''ind' (ID: 82245)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2752930521965027
    2. '+' → logprob: -2.2752931118011475
    3. ' max' → logprob: -2.6502931118011475
    4. '   ' → logprob: -3.7752931118011475
    5. '=max' → logprob: -4.150292873382568
    6. '=' → logprob: -5.275292873382568
    7. 'size' → logprob: -5.275292873382568
    8. 'e' → logprob: -5.900292873382568
    9. 'ength' → logprob: -6.025292873382568
    10. ')' → logprob: -6.275292873382568

Token 612: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0009498104336671531
    2. 'ice' → logprob: -7.375949859619141
    3. 'max' → logprob: -8.75094985961914
    4. 'e' → logprob: -9.75094985961914
    5. 'x' → logprob: -10.37594985961914
    6. 't' → logprob: -10.87594985961914
    7. 'expl' → logprob: -11.25094985961914
    8. 'ices' → logprob: -11.50094985961914
    9. '   ' → logprob: -11.75094985961914
    10. 'é' → logprob: -12.50094985961914

Token 613: ' maximal' (ID: 65414)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8596399426460266
    2. 'max' → logprob: -0.9846399426460266
    3. '=' → logprob: -3.234639883041382
    4. '=max' → logprob: -3.359639883041382
    5. ' maximal' → logprob: -3.609639883041382
    6. ' =' → logprob: -3.609639883041382
    7. '_max' → logprob: -3.734639883041382
    8. ' maximum' → logprob: -4.484640121459961
    9. '   ' → logprob: -4.484640121459961
    10. ' +' → logprob: -4.609640121459961

Token 614: ' g' (ID: 329)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6238650679588318
    2. ')' → logprob: -1.9988651275634766
    3. ' +' → logprob: -1.9988651275634766
    4. '):' → logprob: -2.7488651275634766
    5. '       ' → logprob: -3.4988651275634766
    6. '=' → logprob: -3.6238651275634766
    7. '):
' → logprob: -3.7488651275634766
    8. ' )' → logprob: -4.498865127563477
    9. '<|end|>' → logprob: -4.498865127563477
    10. ' ):' → logprob: -5.623865127563477

Token 615: 'éré' (ID: 33338)
  Prédit: 'éré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.8820968866348267
    2. 'u' → logprob: -1.7570968866348267
    3. '+' → logprob: -2.132096767425537
    4. 'enerated' → logprob: -2.382096767425537
    5. 'estion' → logprob: -3.007096767425537
    6. 'én' → logprob: -3.132096767425537
    7. 'érée' → logprob: -3.257096767425537
    8. 'érant' → logprob: -4.132096767425537
    9. 'érés' → logprob: -5.007096767425537
    10. 'eneral' → logprob: -5.007096767425537

Token 616: ' par' (ID: 686)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2778607606887817
    2. ')' → logprob: -1.7778607606887817
    3. '=' → logprob: -1.7778607606887817
    4. '):' → logprob: -1.9028607606887817
    5. '):
' → logprob: -2.652860641479492
    6. '       ' → logprob: -2.777860641479492
    7. ',' → logprob: -3.527860641479492
    8. ' +' → logprob: -3.777860641479492
    9. '   ' → logprob: -4.152860641479492
    10. '.' → logprob: -4.652860641479492

Token 617: ' l' (ID: 305)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5544914603233337
    2. ' max' → logprob: -0.9294914603233337
    3. 'self' → logprob: -3.9294915199279785
    4. ' self' → logprob: -4.5544915199279785
    5. '       ' → logprob: -8.30449104309082
    6. ' l' → logprob: -9.42949104309082
    7. 'l' → logprob: -9.55449104309082
    8. ' la' → logprob: -9.80449104309082
    9. '           ' → logprob: -9.92949104309082
    10. ' le' → logprob: -10.05449104309082

Token 618: ''ar' (ID: 54307)
  Prédit: ' BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BIT' → logprob: -1.0071454048156738
    2. ''' → logprob: -1.7571454048156738
    3. ''ar' → logprob: -2.507145404815674
    4. 'BIT' → logprob: -2.507145404815674
    5. '`' → logprob: -2.632145404815674
    6. 'u' → logprob: -3.382145404815674
    7. '   ' → logprob: -3.507145404815674
    8. ' arbre' → logprob: -3.507145404815674
    9. 'ar' → logprob: -3.632145404815674
    10. 'e' → logprob: -3.757145404815674

Token 619: 'bre' (ID: 9945)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9045652747154236
    2. 'ex' → logprob: -1.6545653343200684
    3. 'é' → logprob: -2.1545653343200684
    4. 'x' → logprob: -3.4045653343200684
    5. 'it' → logprob: -3.4045653343200684
    6. '   ' → logprob: -3.6545653343200684
    7. 'max' → logprob: -3.7795653343200684
    8. 'bit' → logprob: -3.9045653343200684
    9. '```' → logprob: -4.404565334320068
    10. 'r' → logprob: -4.404565334320068

Token 620: ' (' (ID: 350)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.36880072951316833
    2. '):' → logprob: -1.2438007593154907
    3. ')' → logprob: -4.618800640106201
    4. '       ' → logprob: -4.868800640106201
    5. '
' → logprob: -6.868800640106201
    6. '):
' → logprob: -6.868800640106201
    7. '   ' → logprob: -8.36880111694336
    8. ' ):
' → logprob: -9.61880111694336
    9. ')
' → logprob: -10.11880111694336
    10. ' ):' → logprob: -10.49380111694336

Token 621: 'do' (ID: 2408)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3124150335788727
    2. '+' → logprob: -1.9374150037765503
    3. ')' → logprob: -2.68741512298584
    4. ' max' → logprob: -3.93741512298584
    5. ' +' → logprob: -4.31241512298584
    6. '):
' → logprob: -5.06241512298584
    7. ')
' → logprob: -5.06241512298584
    8. ')+' → logprob: -5.56241512298584
    9. '       ' → logprob: -6.18741512298584
    10. 'size' → logprob: -7.06241512298584

Token 622: 'it' (ID: 278)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05696646124124527
    2. 'ne' → logprob: -3.431966543197632
    3. 'cs' → logprob: -5.306966304779053
    4. 'nt' → logprob: -5.556966304779053
    5. 'n' → logprob: -5.681966304779053
    6. 'ct' → logprob: -6.181966304779053
    7. 'n't' → logprob: -6.556966304779053
    8. 'cu' → logprob: -6.806966304779053
    9. 'wn' → logprob: -7.681966304779053
    10. 'uble' → logprob: -7.806966304779053

Token 623: ' correspond' (ID: 11095)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.08452808111906052
    2. '+' → logprob: -4.084527969360352
    3. ' être' → logprob: -4.459527969360352
    4. ')' → logprob: -4.459527969360352
    5. '>' → logprob: -4.834527969360352
    6. '<|end|>' → logprob: -4.834527969360352
    7. '>=' → logprob: -4.834527969360352
    8. ' >=' → logprob: -5.209527969360352
    9. '=' → logprob: -5.459527969360352
    10. ' >' → logprob: -6.834527969360352

Token 624: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0009172935388050973
    2. 'er' → logprob: -7.000917434692383
    3. '   ' → logprob: -13.375917434692383
    4. '=re' → logprob: -14.250917434692383
    5. '       ' → logprob: -14.375917434692383
    6. 'au' → logprob: -14.375917434692383
    7. 'dre' → logprob: -14.500917434692383
    8. 'ure' → logprob: -15.125917434692383
    9. '_re' → logprob: -15.625917434692383
    10. 's' → logprob: -15.625917434692383

Token 625: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16372597217559814
    2. ')' → logprob: -2.4137258529663086
    3. ' au' → logprob: -3.6637258529663086
    4. 'à' → logprob: -4.538725852966309
    5. '   ' → logprob: -4.538725852966309
    6. 'au' → logprob: -5.163725852966309
    7. '):' → logprob: -5.538725852966309
    8. ' )' → logprob: -6.788725852966309
    9. '       ' → logprob: -7.038725852966309
    10. ' a' → logprob: -7.788725852966309

Token 626: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.38849493861198425
    2. ' max' → logprob: -1.1384949684143066
    3. 'size' → logprob: -6.888494968414307
    4. ' size' → logprob: -7.888494968414307
    5. ' maximum' → logprob: -9.138494491577148
    6. 'maximum' → logprob: -9.888494491577148
    7. '   ' → logprob: -10.513494491577148
    8. 'n' → logprob: -11.638494491577148
    9. 'R' → logprob: -11.763494491577148
    10. 'self' → logprob: -11.888494491577148

Token 627: ' des' (ID: 731)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.013071876019239426
    2. ')' → logprob: -6.0130720138549805
    3. ' _' → logprob: -6.2630720138549805
    4. '_' → logprob: -6.2630720138549805
    5. '_r' → logprob: -6.3880720138549805
    6. '+' → logprob: -6.6380720138549805
    7. '   ' → logprob: -6.6380720138549805
    8. ' +' → logprob: -7.1380720138549805
    9. '_size' → logprob: -7.8880720138549805
    10. 'size' → logprob: -8.88807201385498

Token 628: ' indices' (ID: 30378)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.005518446210771799
    2. 'r' → logprob: -5.755518436431885
    3. 'indices' → logprob: -7.005518436431885
    4. 'range' → logprob: -7.755518436431885
    5. ' R' → logprob: -8.130518913269043
    6. 'self' → logprob: -9.130518913269043
    7. 'size' → logprob: -9.755518913269043
    8. ' indices' → logprob: -9.755518913269043
    9. 'values' → logprob: -9.880518913269043
    10. 'indexes' → logprob: -9.880518913269043

Token 629: ' compress' (ID: 34112)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -1.6768728494644165
    2. ' compressed' → logprob: -1.6768728494644165
    3. 'R' → logprob: -1.8018728494644165
    4. ')' → logprob: -1.8018728494644165
    5. 'compressed' → logprob: -2.676872730255127
    6. ' de' → logprob: -2.676872730255127
    7. ' des' → logprob: -3.176872730255127
    8. 'de' → logprob: -3.926872730255127
    9. ' )' → logprob: -3.926872730255127
    10. ' compress' → logprob: -4.051872730255127

Token 630: 'és' (ID: 1756)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.5358164310455322
    2. 'és' → logprob: -0.9108164310455322
    3. 'es' → logprob: -5.410816192626953
    4. ',' → logprob: -6.035816192626953
    5. 'é' → logprob: -6.410816192626953
    6. 'éd' → logprob: -6.410816192626953
    7. 'eds' → logprob: -6.660816192626953
    8. '   ' → logprob: -7.910816192626953
    9. 'R' → logprob: -8.785816192626953
    10. 'e' → logprob: -8.910816192626953

Token 631: ' sur' (ID: 1512)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8350638151168823
    2. 'R' → logprob: -1.5850638151168823
    3. '   ' → logprob: -2.335063934326172
    4. ' de' → logprob: -2.335063934326172
    5. ')
' → logprob: -2.460063934326172
    6. ' R' → logprob: -4.085063934326172
    7. ').' → logprob: -4.335063934326172
    8. 'de' → logprob: -4.335063934326172
    9. ' des' → logprob: -4.835063934326172
    10. '):
' → logprob: -5.335063934326172

Token 632: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.20243793725967407
    2. ' R' → logprob: -1.7024378776550293
    3. 'r' → logprob: -7.952437877655029
    4. ')' → logprob: -8.077438354492188
    5. '   ' → logprob: -8.952438354492188
    6. ',' → logprob: -9.577438354492188
    7. ' ' → logprob: -10.077438354492188
    8. '_R' → logprob: -10.452438354492188
    9. 'self' → logprob: -11.202438354492188
    10. ' r' → logprob: -11.202438354492188

Token 633: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020301861688494682
    2. '):
' → logprob: -4.770301818847656
    3. '):' → logprob: -5.020301818847656
    4. ')
' → logprob: -5.395301818847656
    5. '   ' → logprob: -8.145301818847656
    6. '       ' → logprob: -9.520301818847656
    7. ' )' → logprob: -10.270301818847656
    8. ').' → logprob: -10.645301818847656
    9. '):
' → logprob: -10.770301818847656
    10. ')
' → logprob: -10.895301818847656

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004319804720580578
    2. '   ' → logprob: -8.750432014465332
    3. '	' → logprob: -9.250432014465332
    4. ')' → logprob: -9.500432014465332
    5. 'self' → logprob: -9.750432014465332
    6. '        
' → logprob: -11.500432014465332
    7. ' self' → logprob: -11.500432014465332
    8. '<|end|>' → logprob: -12.000432014465332
    9. '	self' → logprob: -12.625432014465332
    10. '	   ' → logprob: -13.000432014465332

Token 635: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005787412170320749
    2. 'self' → logprob: -5.255787372589111
    3. '):
' → logprob: -9.13078784942627
    4. '
' → logprob: -9.38078784942627
    5. ')' → logprob: -9.50578784942627
    6. '   ' → logprob: -9.63078784942627
    7. '):' → logprob: -9.75578784942627
    8. ' self' → logprob: -9.88078784942627
    9. '"""' → logprob: -10.63078784942627
    10. '```' → logprob: -10.63078784942627

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005371859879232943
    2. 'self' → logprob: -7.625537395477295
    3. '   ' → logprob: -10.250536918640137
    4. ' self' → logprob: -11.875536918640137
    5. '	' → logprob: -12.250536918640137
    6. '	   ' → logprob: -14.125536918640137
    7. '	self' → logprob: -14.375536918640137
    8. '           ' → logprob: -15.750536918640137
    9. '```' → logprob: -16.125537872314453
    10. '        
' → logprob: -16.250537872314453

Token 637: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005255218595266342
    2. '       ' → logprob: -5.255255222320557
    3. ' self' → logprob: -10.755254745483398
    4. 'super' → logprob: -17.5052547454834
    5. '   ' → logprob: -17.7552547454834
    6. '	self' → logprob: -19.0052547454834
    7. '(self' → logprob: -20.5052547454834
    8. '```' → logprob: -21.2552547454834
    9. '        
' → logprob: -21.5052547454834
    10. '
' → logprob: -21.7552547454834

Token 638: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.002017740160226822
    2. '.' → logprob: -6.627017974853516
    3. '.tree' → logprob: -7.627017974853516
    4. '.max' → logprob: -8.752017974853516
    5. '._' → logprob: -11.502017974853516
    6. 'size' → logprob: -11.877017974853516
    7. '.sz' → logprob: -12.252017974853516
    8. ' .' → logprob: -12.502017974853516
    9. '   ' → logprob: -13.002017974853516
    10. '.capacity' → logprob: -13.127017974853516

Token 639: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602243334054947
    2. ' =' → logprob: -1.9102243185043335
    3. '=max' → logprob: -16.16022491455078
    4. '   ' → logprob: -16.91022491455078
    5. '=int' → logprob: -18.28522491455078
    6. '＝' → logprob: -18.41022491455078
    7. '    ' → logprob: -18.66022491455078
    8. ' ' → logprob: -19.03522491455078
    9. ',' → logprob: -19.66022491455078
    10. '=len' → logprob: -19.91022491455078

Token 640: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.547789674485102e-05
    2. ' max' → logprob: -10.250035285949707
    3. '[max' → logprob: -21.125036239624023
    4. '   ' → logprob: -21.875036239624023
    5. '(max' → logprob: -22.750036239624023
    6. '	max' → logprob: -23.000036239624023
    7. '=max' → logprob: -24.250036239624023
    8. ' ' → logprob: -24.375036239624023
    9. 'ma' → logprob: -25.125036239624023
    10. '_max' → logprob: -25.375036239624023

Token 641: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.375
    3. 'n' → logprob: -17.25
    4. '(n' → logprob: -17.875
    5. '\' → logprob: -18.25
    6. '(max' → logprob: -18.25
    7. '```' → logprob: -18.375
    8. '(' → logprob: -18.375
    9. '   ' → logprob: -18.625
    10. '(_' → logprob: -19.0

Token 642: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01899608224630356
    2. ' +' → logprob: -4.018996238708496
    3. '
' → logprob: -7.768996238708496
    4. '       ' → logprob: -8.018996238708496
    5. '+self' → logprob: -9.518996238708496
    6. '+
' → logprob: -11.018996238708496
    7. 'self' → logprob: -13.143996238708496
    8. '   ' → logprob: -13.768996238708496
    9. '```' → logprob: -15.768996238708496
    10. '        ' → logprob: -16.01899528503418

Token 643: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003649017889983952
    2. '2' → logprob: -8.500365257263184
    3. ' ' → logprob: -8.750365257263184
    4. '0' → logprob: -12.875365257263184
    5. '   ' → logprob: -15.625365257263184
    6. '5' → logprob: -16.125364303588867
    7. '7' → logprob: -16.750364303588867
    8. '  ' → logprob: -16.750364303588867
    9. '10' → logprob: -16.875364303588867
    10. '```' → logprob: -17.625364303588867

Token 644: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024977754801511765
    2. '2' → logprob: -6.002497673034668
    3. '0' → logprob: -11.877497673034668
    4. ' ' → logprob: -11.877497673034668
    5. '5' → logprob: -12.127497673034668
    6. '10' → logprob: -13.252497673034668
    7. '3' → logprob: -14.502497673034668
    8. '   ' → logprob: -15.502497673034668
    9. '7' → logprob: -16.002498626708984
    10. '  ' → logprob: -16.502498626708984

Token 645: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005186012131161988
    2. '
' → logprob: -8.000518798828125
    3. '<|end|>' → logprob: -9.250518798828125
    4. 'self' → logprob: -9.625518798828125
    5. ',' → logprob: -11.750518798828125
    6. '   ' → logprob: -13.000518798828125
    7. '	' → logprob: -13.250518798828125
    8. '           ' → logprob: -13.375518798828125
    9. ' self' → logprob: -13.625518798828125
    10. ',
' → logprob: -14.375518798828125

Token 646: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004976509138941765
    2. 'self' → logprob: -5.629976272583008
    3. '
' → logprob: -6.879976272583008
    4. '<|end|>' → logprob: -8.254976272583008
    5. '   ' → logprob: -10.504976272583008
    6. ' self' → logprob: -11.004976272583008
    7. ',' → logprob: -11.879976272583008
    8. '```' → logprob: -12.004976272583008
    9. '	' → logprob: -12.254976272583008
    10. ')' → logprob: -12.629976272583008

Token 647: ' taille' (ID: 41644)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02027616649866104
    2. '       ' → logprob: -4.145276069641113
    3. ' self' → logprob: -5.770276069641113
    4. '0' → logprob: -7.395276069641113
    5. '[' → logprob: -8.520276069641113
    6. '   ' → logprob: -9.145276069641113
    7. '[self' → logprob: -9.145276069641113
    8. '1' → logprob: -10.270276069641113
    9. '<|end|>' → logprob: -10.895276069641113
    10. '	self' → logprob: -11.145276069641113

Token 648: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 649: ' tableau' (ID: 67053)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03879242390394211
    2. 'max' → logprob: -3.288792371749878
    3. ' self' → logprob: -7.288792610168457
    4. ' max' → logprob: -10.413792610168457
    5. 'read' → logprob: -11.288792610168457
    6. 'size' → logprob: -11.413792610168457
    7. '[max' → logprob: -12.288792610168457
    8. ' ' → logprob: -13.038792610168457
    9. '(max' → logprob: -13.288792610168457
    10. '
' → logprob: -14.038792610168457

Token 650: ' BIT' (ID: 52185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03501354157924652
    2. 'self' → logprob: -3.785013437271118
    3. '
' → logprob: -5.160013675689697
    4. '<|end|>' → logprob: -5.285013675689697
    5. ' self' → logprob: -7.285013675689697
    6. '[self' → logprob: -10.035013198852539
    7. ',' → logprob: -10.160013198852539
    8. '   ' → logprob: -10.535013198852539
    9. '<|end|>' → logprob: -10.660013198852539
    10. '(self' → logprob: -10.910013198852539

Token 651: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016810097731649876
    2. 'self' → logprob: -6.751680850982666
    3. '<|end|>' → logprob: -8.001681327819824
    4. ' self' → logprob: -9.501681327819824
    5. ',' → logprob: -9.876681327819824
    6. '
' → logprob: -10.376681327819824
    7. '   ' → logprob: -12.001681327819824
    8. '	self' → logprob: -13.251681327819824
    9. '<|end|>' → logprob: -13.376681327819824
    10. ',
' → logprob: -13.376681327819824

Token 652: 'indice' (ID: 176697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17523722350597382
    2. 'max' → logprob: -2.9252371788024902
    3. 'self' → logprob: -3.3002371788024902
    4. '+' → logprob: -3.6752371788024902
    5. '<|end|>' → logprob: -4.05023717880249
    6. ' )' → logprob: -5.05023717880249
    7. '0' → logprob: -5.42523717880249
    8. '   ' → logprob: -6.17523717880249
    9. '<|end|>' → logprob: -6.55023717880249
    10. ')
' → logprob: -6.55023717880249

Token 653: ' ' (ID: 220)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5919778347015381
    2. '0' → logprob: -1.466977834701538
    3. '+' → logprob: -2.466977834701538
    4. ' =' → logprob: -2.966977834701538
    5. 's' → logprob: -3.466977834701538
    6. '=' → logprob: -4.091978073120117
    7. ' ' → logprob: -4.841978073120117
    8. ')' → logprob: -5.091978073120117
    9. ' max' → logprob: -5.591978073120117
    10. 'max' → logprob: -6.091978073120117

Token 654: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024667879566550255
    2. '=' → logprob: -4.524667739868164
    3. ' =' → logprob: -5.774667739868164
    4. '+' → logprob: -5.899667739868164
    5. ' +' → logprob: -6.274667739868164
    6. ' ' → logprob: -6.399667739868164
    7. 'max' → logprob: -6.524667739868164
    8. 's' → logprob: -7.524667739868164
    9. '1' → logprob: -7.774667739868164
    10. 'self' → logprob: -8.024667739868164

Token 655: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.40639087557792664
    2. ' inutil' → logprob: -1.406390905380249
    3. ' n' → logprob: -3.906390905380249
    4. ' is' → logprob: -4.28139066696167
    5. ' est' → logprob: -4.40639066696167
    6. 'non' → logprob: -4.53139066696167
    7. ' inutile' → logprob: -4.65639066696167
    8. ')' → logprob: -4.78139066696167
    9. 'n' → logprob: -5.28139066696167
    10. 'unused' → logprob: -6.53139066696167

Token 656: ' utilisé' (ID: 53138)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.00044890373828820884
    2. 'used' → logprob: -8.500449180603027
    3. ' utilisé' → logprob: -8.500449180603027
    4. '-util' → logprob: -10.375449180603027
    5. ' utilisée' → logprob: -12.625449180603027
    6. 'use' → logprob: -13.000449180603027
    7. '_util' → logprob: -14.125449180603027
    8. ''util' → logprob: -14.375449180603027
    9. ' used' → logprob: -14.500449180603027
    10. 'utils' → logprob: -14.500449180603027

Token 657: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003636892419308424
    2. ')
' → logprob: -6.128636837005615
    3. '       ' → logprob: -7.253636837005615
    4. ',' → logprob: -7.503636837005615
    5. 'self' → logprob: -9.628637313842773
    6. '<|end|>' → logprob: -9.628637313842773
    7. '   ' → logprob: -10.753637313842773
    8. ' )' → logprob: -11.003637313842773
    9. '),' → logprob: -12.628637313842773
    10. ')
' → logprob: -13.378637313842773

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017280145548284054
    2. 'self' → logprob: -6.376728057861328
    3. ' self' → logprob: -11.501728057861328
    4. '   ' → logprob: -12.126728057861328
    5. '```' → logprob: -12.126728057861328
    6. '           ' → logprob: -13.126728057861328
    7. '
' → logprob: -13.626728057861328
    8. '	self' → logprob: -15.126728057861328
    9. '	' → logprob: -15.376728057861328
    10. ',' → logprob: -15.501728057861328

Token 659: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009574358118698001
    2. '       ' → logprob: -7.000957489013672
    3. ' self' → logprob: -10.000957489013672
    4. '   ' → logprob: -14.750957489013672
    5. '	self' → logprob: -16.500957489013672
    6. '```' → logprob: -17.625957489013672
    7. '[self' → logprob: -18.000957489013672
    8. '(self' → logprob: -18.125957489013672
    9. '           ' → logprob: -19.500957489013672
    10. 'from' → logprob: -20.000957489013672

Token 660: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -9.253090865968261e-06
    2. ' .' → logprob: -12.375009536743164
    3. 'tree' → logprob: -13.000009536743164
    4. '.' → logprob: -13.125009536743164
    5. '	tree' → logprob: -15.375009536743164
    6. '.table' → logprob: -15.500009536743164
    7. '.thread' → logprob: -16.750009536743164
    8. '.Tree' → logprob: -17.125009536743164
    9. ' tree' → logprob: -17.500009536743164
    10. '.user' → logprob: -17.625009536743164

Token 661: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715728435665369
    2. ' =' → logprob: -5.006715774536133
    3. '=[' → logprob: -15.631715774536133
    4. '   ' → logprob: -16.256715774536133
    5. '[' → logprob: -17.256715774536133
    6. '=[]' → logprob: -17.381715774536133
    7. '＝' → logprob: -18.131715774536133
    8. '.=' → logprob: -18.256715774536133
    9. ' ' → logprob: -18.756715774536133
    10. ' =[' → logprob: -18.881715774536133

Token 662: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.941850526549388e-06
    2. ' [' → logprob: -11.750007629394531
    3. '[self' → logprob: -20.37500762939453
    4. '0' → logprob: -21.12500762939453
    5. '   ' → logprob: -21.62500762939453
    6. '[int' → logprob: -22.75000762939453
    7. ' ' → logprob: -22.75000762939453
    8. '=[' → logprob: -23.75000762939453
    9. '([' → logprob: -23.87500762939453
    10. '{' → logprob: -24.62500762939453

Token 663: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '۰' → logprob: -21.75
    4. '000' → logprob: -22.875
    5. '   ' → logprob: -22.875
    6. '(' → logprob: -23.5
    7. '00' → logprob: -23.75
    8. '1' → logprob: -24.375
    9. '٠' → logprob: -24.5
    10. '[' → logprob: -24.75

Token 664: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007868755492381752
    2. ']*' → logprob: -7.625786781311035
    3. ']*(' → logprob: -8.125786781311035
    4. '*' → logprob: -12.875786781311035
    5. ')' → logprob: -15.375786781311035
    6. ' for' → logprob: -16.00078773498535
    7. ' ]' → logprob: -16.75078773498535
    8. ']+' → logprob: -16.75078773498535
    9. 'for' → logprob: -17.00078773498535
    10. ',' → logprob: -17.25078773498535

Token 665: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06270343065261841
    2. ' *' → logprob: -2.9377033710479736
    3. '*(' → logprob: -4.937703609466553
    4. ']' → logprob: -7.812703609466553
    5. '*self' → logprob: -8.812703132629395
    6. ']*(' → logprob: -10.812703132629395
    7. ']*' → logprob: -11.062703132629395
    8. '       ' → logprob: -11.812703132629395
    9. ')' → logprob: -12.062703132629395
    10. '   ' → logprob: -12.187703132629395

Token 666: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47411277890205383
    2. '(self' → logprob: -0.9741127490997314
    3. ' self' → logprob: -10.599112510681152
    4. ' (' → logprob: -11.474112510681152
    5. '   ' → logprob: -15.349112510681152
    6. '[self' → logprob: -15.974112510681152
    7. '(' → logprob: -16.84911346435547
    8. '	self' → logprob: -17.22411346435547
    9. '       ' → logprob: -17.72411346435547
    10. '
' → logprob: -19.22411346435547

Token 667: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.07905039936304092
    2. 'size' → logprob: -2.579050302505493
    3. 'self' → logprob: -9.454050064086914
    4. '	size' → logprob: -10.829050064086914
    5. '(size' → logprob: -10.829050064086914
    6. '[size' → logprob: -10.954050064086914
    7. ' size' → logprob: -11.829050064086914
    8. '       ' → logprob: -12.454050064086914
    9. '_size' → logprob: -13.079050064086914
    10. '.' → logprob: -13.079050064086914

Token 668: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38104191422462463
    2. '    
' → logprob: -2.006042003631592
    3. '
' → logprob: -2.381042003631592
    4. '<|end|>' → logprob: -2.506042003631592
    5. '<|end|>' → logprob: -6.256042003631592
    6. '       ' → logprob: -6.381042003631592
    7. '        
' → logprob: -6.756042003631592
    8. '  
' → logprob: -7.006042003631592
    9. '	
' → logprob: -7.131042003631592
    10. 'def' → logprob: -7.631042003631592

Token 669: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15547612309455872
    2. '    
' → logprob: -2.0304760932922363
    3. '	
' → logprob: -5.530476093292236
    4. '
' → logprob: -5.780476093292236
    5. '	def' → logprob: -6.155476093292236
    6. 'def' → logprob: -6.530476093292236
    7. '        
' → logprob: -7.280476093292236
    8. '  
' → logprob: -7.655476093292236
    9. ' 
' → logprob: -7.905476093292236
    10. '		
' → logprob: -8.905476570129395

Token 670: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10970693826675415
    2. ' def' → logprob: -2.4847068786621094
    3. '   ' → logprob: -3.9847068786621094
    4. '    
' → logprob: -7.109706878662109
    5. '	def' → logprob: -7.234706878662109
    6. '
' → logprob: -8.35970687866211
    7. ' 
' → logprob: -9.60970687866211
    8. '        
' → logprob: -10.23470687866211
    9. '   
' → logprob: -10.85970687866211
    10. ' ' → logprob: -10.98470687866211

Token 671: ' get' (ID: 717)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.11016873270273209
    2. ' update' → logprob: -2.860168695449829
    3. '_update' → logprob: -3.110168695449829
    4. 'add' → logprob: -6.110168933868408
    5. '_add' → logprob: -8.61016845703125
    6. ' add' → logprob: -9.98516845703125
    7. 'query' → logprob: -12.36016845703125
    8. 'low' → logprob: -12.61016845703125
    9. '_' → logprob: -12.86016845703125
    10. 'upd' → logprob: -13.11016845703125

Token 672: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.09252923727035522
    2. 'sum' → logprob: -2.467529296875
    3. '(self' → logprob: -6.842529296875
    4. '(' → logprob: -7.092529296875
    5. 'Sum' → logprob: -7.217529296875
    6. '_prefix' → logprob: -7.967529296875
    7. '<|end|>' → logprob: -8.717529296875
    8. '_' → logprob: -9.842529296875
    9. '_val' → logprob: -9.842529296875
    10. '_max' → logprob: -9.967529296875

Token 673: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011121747083961964
    2. '(' → logprob: -4.51112174987793
    3. ' (' → logprob: -10.38612174987793
    4. '(s' → logprob: -11.38612174987793
    5. 'self' → logprob: -11.51112174987793
    6. '   ' → logprob: -11.76112174987793
    7. '(
' → logprob: -12.88612174987793
    8. '(sel' → logprob: -13.13612174987793
    9. ' ' → logprob: -13.76112174987793
    10. '(idx' → logprob: -13.88612174987793

Token 674: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.039941612631082535
    2. '(' → logprob: -3.2899415493011475
    3. ' (' → logprob: -7.164941787719727
    4. ')' → logprob: -8.039941787719727
    5. ',' → logprob: -8.789941787719727
    6. 'self' → logprob: -9.039941787719727
    7. '<|end|>' → logprob: -9.039941787719727
    8. '[' → logprob: -9.414941787719727
    9. '(
' → logprob: -9.539941787719727
    10. '   ' → logprob: -9.539941787719727

Token 675: ' i' (ID: 575)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7383732199668884
    2. 'self' → logprob: -1.1133732795715332
    3. 'i' → logprob: -2.113373279571533
    4. 'index' → logprob: -2.988373279571533
    5. ' idx' → logprob: -4.613373279571533
    6. 'pos' → logprob: -4.988373279571533
    7. ' self' → logprob: -6.113373279571533
    8. ' i' → logprob: -6.738373279571533
    9. '   ' → logprob: -6.863373279571533
    10. 'x' → logprob: -7.738373279571533

Token 676: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2505201995372772
    2. '):
' → logprob: -2.2505202293395996
    3. '(self' → logprob: -2.3755202293395996
    4. 'self' → logprob: -4.2505202293396
    5. ')' → logprob: -5.0005202293396
    6. ':' → logprob: -7.3755202293396
    7. ',' → logprob: -7.6255202293396
    8. '       ' → logprob: -8.125519752502441
    9. '   ' → logprob: -8.375519752502441
    10. '):
' → logprob: -8.375519752502441

Token 677: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6005875468254089
    2. '       ' → logprob: -0.8505875468254089
    3. '   ' → logprob: -4.600587368011475
    4. '):' → logprob: -5.100587368011475
    5. ':
' → logprob: -6.100587368011475
    6. '```' → logprob: -7.100587368011475
    7. ' :' → logprob: -7.475587368011475
    8. '):
' → logprob: -7.600587368011475
    9. '():' → logprob: -7.600587368011475
    10. '(' → logprob: -8.100587844848633

Token 678: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0479147769510746
    2. '   ' → logprob: -3.922914743423462
    3. '
' → logprob: -4.547914981842041
    4. '        
' → logprob: -5.797914981842041
    5. '    ' → logprob: -6.047914981842041
    6. ' ' → logprob: -6.172914981842041
    7. 'result' → logprob: -6.547914981842041
    8. '        ' → logprob: -7.047914981842041
    9. ' 
' → logprob: -7.297914981842041
    10. ':' → logprob: -7.297914981842041

Token 679: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03991835564374924
    2. '       ' → logprob: -3.2899184226989746
    3. '   ' → logprob: -7.164918422698975
    4. ' ' → logprob: -7.664918422698975
    5. 'result' → logprob: -7.789918422698975
    6. ' result' → logprob: -9.789917945861816
    7. 'res' → logprob: -10.039917945861816
    8. ' res' → logprob: -10.789917945861816
    9. '        
' → logprob: -10.914917945861816
    10. ' 
' → logprob: -11.164917945861816

Token 680: ' Cal' (ID: 4453)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4232673943042755
    2. 's' → logprob: -1.1732673645019531
    3. 'result' → logprob: -3.673267364501953
    4. '       ' → logprob: -4.923267364501953
    5. '   ' → logprob: -6.548267364501953
    6. ' s' → logprob: -7.548267364501953
    7. 'sum' → logprob: -7.798267364501953
    8. ' res' → logprob: -7.923267364501953
    9. 'total' → logprob: -8.298267364501953
    10. '	res' → logprob: -11.173267364501953

Token 681: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.34158608317375183
    2. 'c' → logprob: -1.8415861129760742
    3. 'cul' → logprob: -2.091586112976074
    4. 'culate' → logprob: -5.091586112976074
    5. 'cula' → logprob: -6.966586112976074
    6. 'cules' → logprob: -8.841586112976074
    7. 'cular' → logprob: -10.841586112976074
    8. 'culated' → logprob: -11.716586112976074
    9. 'cu' → logprob: -11.841586112976074
    10. 'culator' → logprob: -11.966586112976074

Token 682: ' la' (ID: 557)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6298723220825195
    2. '       ' → logprob: -1.5048723220825195
    3. '(self' → logprob: -1.6298723220825195
    4. ' self' → logprob: -3.5048723220825195
    5. ' la' → logprob: -5.2548723220825195
    6. '   ' → logprob: -5.8798723220825195
    7. 's' → logprob: -6.1298723220825195
    8. 'the' → logprob: -6.6298723220825195
    9. ' le' → logprob: -6.8798723220825195
    10. 'la' → logprob: -7.5048723220825195

Token 683: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47691577672958374
    2. 'result' → logprob: -1.3519158363342285
    3. 'res' → logprob: -2.8519158363342285
    4. '   ' → logprob: -3.4769158363342285
    5. 'sum' → logprob: -4.6019158363342285
    6. ' result' → logprob: -4.7269158363342285
    7. 'total' → logprob: -5.2269158363342285
    8. ' s' → logprob: -5.3519158363342285
    9. '       ' → logprob: -7.4769158363342285
    10. 'rés' → logprob: -7.6019158363342285

Token 684: ' part' (ID: 997)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.3766349256038666
    2. '       ' → logprob: -1.876634955406189
    3. ' des' → logprob: -2.8766348361968994
    4. '<|end|>' → logprob: -3.6266348361968994
    5. '(self' → logprob: -3.8766348361968994
    6. '   ' → logprob: -4.2516350746154785
    7. '(' → logprob: -4.8766350746154785
    8. '(i' → logprob: -5.1266350746154785
    9. ' up' → logprob: -5.2516350746154785
    10. ' jusque' → logprob: -5.3766350746154785

Token 685: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -0.002695151139050722
    2. 'i' → logprob: -7.127695083618164
    3. 'ie' → logprob: -7.502695083618164
    4. 'iale' → logprob: -8.002695083618164
    5. 'iel' → logprob: -8.252695083618164
    6. 'ic' → logprob: -8.252695083618164
    7. '(i' → logprob: -8.377695083618164
    8. 'ial' → logprob: -9.252695083618164
    9. '```' → logprob: -9.877695083618164
    10. '[i' → logprob: -10.127695083618164

Token 686: ' de' (ID: 334)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.5617902278900146
    2. '       ' → logprob: -0.9367902278900146
    3. '(self' → logprob: -4.186790466308594
    4. ' up' → logprob: -5.436790466308594
    5. '   ' → logprob: -5.561790466308594
    6. '(i' → logprob: -5.686790466308594
    7. ' jusque' → logprob: -6.436790466308594
    8. ' des' → logprob: -6.561790466308594
    9. '(' → logprob: -6.561790466308594
    10. 'self' → logprob: -6.811790466308594

Token 687: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04815791919827461
    2. ' i' → logprob: -3.1731579303741455
    3. 'self' → logprob: -5.798157691955566
    4. 'l' → logprob: -7.173157691955566
    5. '   ' → logprob: -7.798157691955566
    6. ' self' → logprob: -8.798157691955566
    7. ' la' → logprob: -9.048157691955566
    8. 'j' → logprob: -9.173157691955566
    9. 'indices' → logprob: -9.173157691955566
    10. '       ' → logprob: -9.423157691955566

Token 688: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14095251262187958
    2. 'self' → logprob: -2.7659525871276855
    3. 'indices' → logprob: -3.3909525871276855
    4. 'l' → logprob: -4.2659525871276855
    5. 'j' → logprob: -5.1409525871276855
    6. 'la' → logprob: -5.6409525871276855
    7. 'les' → logprob: -5.8909525871276855
    8. '1' → logprob: -6.3909525871276855
    9. 'index' → logprob: -6.5159525871276855
    10. '   ' → logprob: -7.0159525871276855

Token 689: ' à' (ID: 1221)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.422890543937683
    2. ',' → logprob: -2.0478906631469727
    3. '   ' → logprob: -2.1728906631469727
    4. '       ' → logprob: -2.2978906631469727
    5. ' jusqu' → logprob: -2.5478906631469727
    6. '	' → logprob: -2.9228906631469727
    7. ' <=' → logprob: -3.1728906631469727
    8. '  ' → logprob: -3.4228906631469727
    9. '
' → logprob: -3.4228906631469727
    10. ' ' → logprob: -3.6728906631469727

Token 690: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008620604872703552
    2. ' i' → logprob: -4.758620738983154
    3. '	i' → logprob: -12.883620262145996
    4. '   ' → logprob: -13.008620262145996
    5. '       ' → logprob: -13.883620262145996
    6. '_i' → logprob: -16.133621215820312
    7. '    ' → logprob: -16.133621215820312
    8. '```' → logprob: -16.883621215820312
    9. '`' → logprob: -17.633621215820312
    10. ' ' → logprob: -17.758621215820312

Token 691: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021732881665229797
    2. ':' → logprob: -4.146732807159424
    3. ',' → logprob: -6.896732807159424
    4. ':
' → logprob: -7.021732807159424
    5. ' :' → logprob: -7.146732807159424
    6. '   ' → logprob: -7.271732807159424
    7. '.' → logprob: -7.771732807159424
    8. '        ' → logprob: -8.021733283996582
    9. '```' → logprob: -8.271733283996582
    10. ' :
' → logprob: -8.521733283996582

Token 692: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013999987859278917
    2. ' self' → logprob: -6.626399993896484
    3. 'the' → logprob: -10.251399993896484
    4. '       ' → logprob: -11.251399993896484
    5. '   ' → logprob: -11.376399993896484
    6. ' the' → logprob: -12.626399993896484
    7. '
' → logprob: -13.251399993896484
    8. '`' → logprob: -13.501399993896484
    9. '```' → logprob: -13.626399993896484
    10. '	self' → logprob: -13.751399993896484

Token 693: ''ar' (ID: 54307)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1645224690437317
    2. '       ' → logprob: -2.039522409439087
    3. ' self' → logprob: -4.664522647857666
    4. '   ' → logprob: -4.664522647857666
    5. '[' → logprob: -7.289522647857666
    6. 'def' → logprob: -7.664522647857666
    7. '[self' → logprob: -8.289522171020508
    8. '#' → logprob: -8.539522171020508
    9. ' range' → logprob: -8.914522171020508
    10. '
' → logprob: -9.039522171020508

Token 694: 'bre' (ID: 9945)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.22260116040706635
    2. 'bre' → logprob: -1.8476011753082275
    3. 'tree' → logprob: -4.097600936889648
    4. 'r' → logprob: -4.347600936889648
    5. 'e' → logprob: -4.722600936889648
    6. 't' → logprob: -6.972600936889648
    7. 'g' → logprob: -7.347600936889648
    8. 'y' → logprob: -7.847600936889648
    9. '```' → logprob: -8.222600936889648
    10. 'self' → logprob: -8.597600936889648

Token 695: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06176385655999184
    2. ':' → logprob: -3.9367637634277344
    3. '   ' → logprob: -3.9367637634277344
    4. '[' → logprob: -5.561763763427734
    5. '.' → logprob: -5.811763763427734
    6. 'self' → logprob: -6.436763763427734
    7. '        ' → logprob: -6.561763763427734
    8. ',' → logprob: -6.561763763427734
    9. '        
' → logprob: -6.686763763427734
    10. '    ' → logprob: -6.811763763427734

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008582198061048985
    2. ':' → logprob: -7.875858306884766
    3. '   ' → logprob: -8.625858306884766
    4. '```' → logprob: -10.000858306884766
    5. '	' → logprob: -10.250858306884766
    6. '        
' → logprob: -10.500858306884766
    7. ',' → logprob: -10.625858306884766
    8. ' :' → logprob: -10.625858306884766
    9. '    ' → logprob: -10.750858306884766
    10. '        ' → logprob: -11.500858306884766

Token 697: ' Param' (ID: 14796)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031031573191285133
    2. 'result' → logprob: -4.031031608581543
    3. ' result' → logprob: -4.906031608581543
    4. '   ' → logprob: -5.531031608581543
    5. 'res' → logprob: -7.781031608581543
    6. '    ' → logprob: -8.031031608581543
    7. ' res' → logprob: -8.406031608581543
    8. 's' → logprob: -8.781031608581543
    9. 'def' → logprob: -9.406031608581543
    10. '	' → logprob: -10.031031608581543

Token 698: 'ètres' (ID: 40427)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37914592027664185
    2. 'ètre' → logprob: -1.254145860671997
    3. '   ' → logprob: -3.879145860671997
    4. ':' → logprob: -5.379146099090576
    5. '      ' → logprob: -7.379146099090576
    6. ' :' → logprob: -7.504146099090576
    7. 'def' → logprob: -8.004145622253418
    8. '           ' → logprob: -8.004145622253418
    9. 'etre' → logprob: -8.004145622253418
    10. 'ètres' → logprob: -8.254145622253418

Token 699: '
' (ID: 198)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16454723477363586
    2. '       ' → logprob: -2.6645472049713135
    3. 'self' → logprob: -2.7895472049713135
    4. ' self' → logprob: -4.789547443389893
    5. '<|end|>' → logprob: -5.289547443389893
    6. '   ' → logprob: -5.539547443389893
    7. ' (' → logprob: -6.539547443389893
    8. '        
' → logprob: -7.414547443389893
    9. '	self' → logprob: -8.539546966552734
    10. ' ' → logprob: -8.664546966552734

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09524209797382355
    2. '(self' → logprob: -3.2202420234680176
    3. '   ' → logprob: -3.8452420234680176
    4. ' (' → logprob: -4.595242023468018
    5. ' self' → logprob: -5.095242023468018
    6. '(i' → logprob: -5.345242023468018
    7. 'self' → logprob: -5.720242023468018
    8. ' i' → logprob: -6.220242023468018
    9. '        
' → logprob: -7.345242023468018
    10. ':' → logprob: -7.720242023468018

Token 701: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28129640221595764
    2. '       ' → logprob: -1.6562963724136353
    3. ' self' → logprob: -3.781296491622925
    4. '(self' → logprob: -3.781296491622925
    5. '   ' → logprob: -4.906296253204346
    6. '        
' → logprob: -7.531296253204346
    7. '	self' → logprob: -8.906296730041504
    8. '    ' → logprob: -9.406296730041504
    9. ' ' → logprob: -9.531296730041504
    10. '
' → logprob: -9.531296730041504

Token 702: '-----------
' (ID: 75736)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05743378773331642
    2. 'self' → logprob: -3.307433843612671
    3. '(self' → logprob: -5.057433605194092
    4. '   ' → logprob: -5.432433605194092
    5. ' self' → logprob: -5.432433605194092
    6. '<|end|>' → logprob: -6.307433605194092
    7. '        
' → logprob: -7.432433605194092
    8. '
' → logprob: -7.932433605194092
    9. ':' → logprob: -8.80743408203125
    10. '        ' → logprob: -8.93243408203125

Token 703: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5207692980766296
    2. 'i' → logprob: -1.3957693576812744
    3. '       ' → logprob: -2.0207693576812744
    4. ' i' → logprob: -4.270769119262695
    5. ' self' → logprob: -4.520769119262695
    6. '   ' → logprob: -7.145769119262695
    7. 'def' → logprob: -10.645769119262695
    8. '	i' → logprob: -10.645769119262695
    9. '	self' → logprob: -11.270769119262695
    10. ' ' → logprob: -11.520769119262695

Token 704: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0009532637195661664
    2. '       ' → logprob: -7.500953197479248
    3. 'self' → logprob: -8.000953674316406
    4. ' i' → logprob: -10.000953674316406
    5. '   ' → logprob: -11.000953674316406
    6. 'def' → logprob: -13.625953674316406
    7. 'int' → logprob: -14.500953674316406
    8. '```' → logprob: -14.625953674316406
    9. '	i' → logprob: -15.000953674316406
    10. ' self' → logprob: -16.125953674316406

Token 705: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6317266821861267
    2. ':' → logprob: -0.8817266821861267
    3. ')' → logprob: -4.2567267417907715
    4. ':int' → logprob: -4.3817267417907715
    5. '):
' → logprob: -4.5067267417907715
    6. '       ' → logprob: -4.8817267417907715
    7. '<|end|>' → logprob: -5.7567267417907715
    8. ' :' → logprob: -5.7567267417907715
    9. '   ' → logprob: -7.1317267417907715
    10. '<|end|>' → logprob: -8.131726264953613

Token 706: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0206720617134124e-05
    2. ' int' → logprob: -11.50001049041748
    3. '       ' → logprob: -18.000009536743164
    4. '   ' → logprob: -18.875009536743164
    5. '[int' → logprob: -19.375009536743164
    6. '	int' → logprob: -20.500009536743164
    7. '(int' → logprob: -22.000009536743164
    8. '  ' → logprob: -22.500009536743164
    9. '=int' → logprob: -22.500009536743164
    10. '<int' → logprob: -22.750009536743164

Token 707: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07896392047405243
    2. '       ' → logprob: -3.0789639949798584
    3. '):
' → logprob: -4.078963756561279
    4. '):' → logprob: -4.578963756561279
    5. '<|end|>' → logprob: -6.453963756561279
    6. '   ' → logprob: -8.078964233398438
    7. '
' → logprob: -8.828964233398438
    8. '        
' → logprob: -8.828964233398438
    9. ')
' → logprob: -9.078964233398438
    10. ' )' → logprob: -9.953964233398438

Token 708: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6375554203987122
    2. '       ' → logprob: -1.1375553607940674
    3. '):' → logprob: -2.2625553607940674
    4. '):
' → logprob: -4.1375555992126465
    5. ':' → logprob: -4.2625555992126465
    6. '<|end|>' → logprob: -4.8875555992126465
    7. '   ' → logprob: -6.5125555992126465
    8. '        
' → logprob: -6.5125555992126465
    9. ',' → logprob: -6.8875555992126465
    10. '
' → logprob: -7.1375555992126465

Token 709: ' L' (ID: 451)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02919607050716877
    2. 'L' (adapté à ' L') → logprob: -3.90419602394104
    3. 'Indice' → logprob: -6.154196262359619
    4. 'Index' → logprob: -6.654196262359619
    5. ' int' → logprob: -6.904196262359619
    6. '       ' → logprob: -7.279196262359619
    7. 'Ind' → logprob: -7.654196262359619
    8. 'Indices' → logprob: -7.779196262359619
    9. 'La' → logprob: -7.904196262359619
    10. 'indice' → logprob: -8.029195785522461

Token 710: ''ind' (ID: 82245)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5292844176292419
    2. '<|end|>' → logprob: -1.9042844772338867
    3. ')' → logprob: -2.7792844772338867
    4. ' index' → logprob: -3.4042844772338867
    5. '    ' → logprob: -3.7792844772338867
    6. '   ' → logprob: -3.7792844772338867
    7. 'index' → logprob: -4.029284477233887
    8. '        ' → logprob: -4.029284477233887
    9. 'indice' → logprob: -5.029284477233887
    10. ' i' → logprob: -5.154284477233887

Token 711: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.349535197019577
    2. 'ice' → logprob: -1.2245352268218994
    3. 'dex' → logprob: -6.97453498840332
    4. 'exe' → logprob: -10.34953498840332
    5. 'dice' → logprob: -10.84953498840332
    6. 'ices' → logprob: -10.97453498840332
    7. 'e' → logprob: -11.09953498840332
    8. '   ' → logprob: -11.59953498840332
    9. 'é' → logprob: -11.84953498840332
    10. 'x' → logprob: -12.22453498840332

Token 712: ' jusqu' (ID: 21961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 713: ''où' (ID: 186468)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.07096543908119202
    2. '       ' → logprob: -3.695965528488159
    3. '’à' → logprob: -3.945965528488159
    4. ' à' → logprob: -4.57096529006958
    5. 'à' → logprob: -5.69596529006958
    6. ''au' → logprob: -5.94596529006958
    7. '   ' → logprob: -5.94596529006958
    8. 'o' → logprob: -6.19596529006958
    9. '=' → logprob: -6.57096529006958
    10. 'i' → logprob: -7.94596529006958

Token 714: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0567036047577858
    2. '   ' → logprob: -3.681703567504883
    3. '    ' → logprob: -4.431703567504883
    4. '        ' → logprob: -5.931703567504883
    5. ' on' → logprob: -6.056703567504883
    6. '           ' → logprob: -6.056703567504883
    7. ')' → logprob: -6.806703567504883
    8. ' to' → logprob: -6.931703567504883
    9. '<|end|>' → logprob: -7.181703567504883
    10. '      ' → logprob: -7.306703567504883

Token 715: ' souhaite' (ID: 68897)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8675163388252258
    2. ' souhaite' → logprob: -1.242516279220581
    3. '   ' → logprob: -1.992516279220581
    4. ' veut' → logprob: -2.867516279220581
    5. ' calc' → logprob: -3.617516279220581
    6. ' doit' → logprob: -3.992516279220581
    7. ' somme' → logprob: -4.99251651763916
    8. '    ' → logprob: -5.24251651763916
    9. 've' → logprob: -5.49251651763916
    10. ' sum' → logprob: -5.61751651763916

Token 716: ' calcul' (ID: 7559)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2412126362323761
    2. 'faire' → logprob: -2.6162126064300537
    3. 's' → logprob: -2.9912126064300537
    4. 'som' → logprob: -3.4912126064300537
    5. '       ' → logprob: -4.366212844848633
    6. ' ' → logprob: -4.741212844848633
    7. 'calcul' → logprob: -5.116212844848633
    8. 'acc' → logprob: -5.366212844848633
    9. ' faire' → logprob: -5.366212844848633
    10. ' sommer' → logprob: -5.616212844848633

Token 717: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.735893965815194e-05
    2. '   ' → logprob: -11.500017166137695
    3. 'e' → logprob: -13.125017166137695
    4. 'uer' → logprob: -13.500017166137695
    5. 'é' → logprob: -13.750017166137695
    6. 'r' → logprob: -14.000017166137695
    7. '       ' → logprob: -14.250017166137695
    8. '```' → logprob: -14.875017166137695
    9. 'ér' → logprob: -16.000017166137695
    10. '           ' → logprob: -16.125017166137695

Token 718: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5103910565376282
    2. ',' → logprob: -2.3853909969329834
    3. ' i' → logprob: -2.6353909969329834
    4. '   ' → logprob: -2.8853909969329834
    5. 'i' → logprob: -3.1353909969329834
    6. ')' → logprob: -3.5103909969329834
    7. ' +=' → logprob: -4.1353912353515625
    8. '```' → logprob: -4.2603912353515625
    9. '`' → logprob: -4.6353912353515625
    10. ' =' → logprob: -4.8853912353515625

Token 719: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3259457051753998
    2. 'sum' → logprob: -1.9509457349777222
    3. ' somme' → logprob: -2.0759456157684326
    4. 'som' → logprob: -5.450945854187012
    5. ' sum' → logprob: -5.700945854187012
    6. '   ' → logprob: -6.325945854187012
    7. 'i' → logprob: -7.325945854187012
    8. '       ' → logprob: -9.325945854187012
    9. ' som' → logprob: -9.450945854187012
    10. ' ' → logprob: -9.575945854187012

Token 720: ' pré' (ID: 9424)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5082899332046509
    2. ')' → logprob: -1.7582899332046509
    3. '):
' → logprob: -2.2582898139953613
    4. '):' → logprob: -2.2582898139953613
    5. ':' → logprob: -5.383289813995361
    6. '
' → logprob: -5.758289813995361
    7. '   ' → logprob: -6.008289813995361
    8. '        
' → logprob: -6.008289813995361
    9. '.' → logprob: -7.383289813995361
    10. '<|end|>' → logprob: -7.633289813995361

Token 721: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.0006422612932510674
    2. '   ' → logprob: -8.375641822814941
    3. '       ' → logprob: -9.625641822814941
    4. 'f' → logprob: -9.750641822814941
    5. '_fix' → logprob: -9.875641822814941
    6. 'cis' → logprob: -10.125641822814941
    7. '```' → logprob: -10.375641822814941
    8. ' fix' → logprob: -10.500641822814941
    9. '	' → logprob: -11.125641822814941
    10. 'sum' → logprob: -11.125641822814941

Token 722: 'e' (ID: 68)
  Prédit: 'ixe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ixe' → logprob: -1.0167243480682373
    2. 'fix' → logprob: -1.2667243480682373
    3. '       ' → logprob: -1.7667243480682373
    4. '   ' → logprob: -2.0167243480682373
    5. 'i' → logprob: -4.516724586486816
    6. 'x' → logprob: -4.891724586486816
    7. 'f' → logprob: -5.141724586486816
    8. 'ix' → logprob: -5.266724586486816
    9. 'e' → logprob: -5.641724586486816
    10. ' ' → logprob: -6.016724586486816

Token 723: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38163822889328003
    2. ')' → logprob: -1.7566382884979248
    3. '
' → logprob: -3.506638288497925
    4. '<|end|>' → logprob: -4.006638050079346
    5. '```' → logprob: -4.131638050079346
    6. '        
' → logprob: -4.381638050079346
    7. '):
' → logprob: -4.631638050079346
    8. ',' → logprob: -4.631638050079346
    9. '.' → logprob: -4.756638050079346
    10. '   ' → logprob: -5.006638050079346

Token 724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002125161001458764
    2. '   ' → logprob: -7.252125263214111
    3. '	' → logprob: -8.252124786376953
    4. '    ' → logprob: -8.252124786376953
    5. 'result' → logprob: -8.502124786376953
    6. '```' → logprob: -8.502124786376953
    7. ' 
' → logprob: -9.377124786376953
    8. '        
' → logprob: -9.502124786376953
    9. '        ' → logprob: -9.627124786376953
    10. ' result' → logprob: -9.877124786376953

Token 725: ' Retour' (ID: 146830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16329434514045715
    2. 'result' → logprob: -2.0382943153381348
    3. 'res' → logprob: -4.538294315338135
    4. ' result' → logprob: -5.038294315338135
    5. '   ' → logprob: -6.663294315338135
    6. ' res' → logprob: -7.288294315338135
    7. 'ret' → logprob: -8.038294792175293
    8. 's' → logprob: -8.538294792175293
    9. '        
' → logprob: -8.538294792175293
    10. '"""
' → logprob: -9.163294792175293

Token 726: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.6757411956787109
    2. '       ' → logprob: -0.8007411956787109
    3. ':' → logprob: -4.050741195678711
    4. ' :' → logprob: -4.175741195678711
    5. '   ' → logprob: -5.800741195678711
    6. 'n' → logprob: -6.800741195678711
    7. ' int' → logprob: -7.175741195678711
    8. 'u' → logprob: -7.300741195678711
    9. '        ' → logprob: -7.300741195678711
    10. 'neur' → logprob: -7.675741195678711

Token 727: '
' (ID: 198)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7213770747184753
    2. ' int' → logprob: -0.9713770747184753
    3. '       ' → logprob: -2.34637713432312
    4. ':' → logprob: -4.346376895904541
    5. '(int' → logprob: -4.846376895904541
    6. 'self' → logprob: -5.096376895904541
    7. '[int' → logprob: -5.221376895904541
    8. ':int' → logprob: -6.221376895904541
    9. ' self' → logprob: -6.596376895904541
    10. '<int' → logprob: -6.721376895904541

Token 728: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.107613444328308
    2. '       ' → logprob: -1.232613444328308
    3. ' self' → logprob: -1.482613444328308
    4. 'self' → logprob: -2.3576135635375977
    5. 'int' → logprob: -3.2326135635375977
    6. ':' → logprob: -4.732613563537598
    7. '   ' → logprob: -5.732613563537598
    8. '<int' → logprob: -6.607613563537598
    9. ':int' → logprob: -7.107613563537598
    10. '(int' → logprob: -7.482613563537598

Token 729: ' --------' (ID: 40758)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5120185017585754
    2. '       ' → logprob: -2.2620184421539307
    3. 'int' → logprob: -2.3870184421539307
    4. '[int' → logprob: -2.7620184421539307
    5. ':int' → logprob: -3.0120184421539307
    6. ':' → logprob: -3.1370184421539307
    7. '<int' → logprob: -4.13701868057251
    8. '(int' → logprob: -4.13701868057251
    9. ' :' → logprob: -4.26201868057251
    10. '```' → logprob: -7.26201868057251

Token 730: '
' (ID: 198)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31779715418815613
    2. ' int' → logprob: -1.3177971839904785
    3. '       ' → logprob: -5.4427971839904785
    4. ':' → logprob: -9.56779670715332
    5. ':int' → logprob: -9.81779670715332
    6. '[int' → logprob: -10.81779670715332
    7. '        ' → logprob: -11.56779670715332
    8. '   ' → logprob: -11.69279670715332
    9. '(int' → logprob: -12.19279670715332
    10. '<int' → logprob: -12.19279670715332

Token 731: '       ' (ID: 309)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13553734123706818
    2. ' int' → logprob: -2.1355373859405518
    3. '       ' → logprob: -4.760537147521973
    4. '   ' → logprob: -12.760537147521973
    5. '        ' → logprob: -13.510537147521973
    6. '(int' → logprob: -13.635537147521973
    7. ':int' → logprob: -13.885537147521973
    8. '
' → logprob: -14.010537147521973
    9. '<int' → logprob: -14.135537147521973
    10. ':' → logprob: -14.260537147521973

Token 732: ' s' (ID: 265)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001957179047167301
    2. ' int' → logprob: -6.251957416534424
    3. '       ' → logprob: -10.501956939697266
    4. '   ' → logprob: -14.251956939697266
    5. '
' → logprob: -15.626956939697266
    6. '(int' → logprob: -15.751956939697266
    7. ':int' → logprob: -16.251956939697266
    8. '<int' → logprob: -17.251956939697266
    9. '[int' → logprob: -17.501956939697266
    10. '	int' → logprob: -18.001956939697266

Token 733: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2988831698894501
    2. 'um' → logprob: -1.7988831996917725
    3. '   ' → logprob: -3.9238831996917725
    4. ':int' → logprob: -3.9238831996917725
    5. '=int' → logprob: -4.173882961273193
    6. ' =' → logprob: -4.423882961273193
    7. ' :' → logprob: -4.548882961273193
    8. '=' → logprob: -5.673882961273193
    9. 'elf' → logprob: -5.673882961273193
    10. 'int' → logprob: -5.798882961273193

Token 734: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005538671393878758
    2. ' int' → logprob: -7.500554084777832
    3. '       ' → logprob: -14.125554084777832
    4. '   ' → logprob: -16.500553131103516
    5. '(int' → logprob: -17.000553131103516
    6. '[int' → logprob: -17.625553131103516
    7. '	int' → logprob: -19.000553131103516
    8. '<int' → logprob: -19.500553131103516
    9. ''int' → logprob: -20.125553131103516
    10. '=int' → logprob: -20.625553131103516

Token 735: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5910159945487976
    2. '
' → logprob: -1.7160160541534424
    3. '<|end|>' → logprob: -1.7160160541534424
    4. '=' → logprob: -4.091015815734863
    5. ' =' → logprob: -4.216015815734863
    6. ':' → logprob: -4.591015815734863
    7. 'int' → logprob: -4.716015815734863
    8. '        
' → logprob: -5.091015815734863
    9. '<|end|>' → logprob: -5.341015815734863
    10. ',' → logprob: -5.466015815734863

Token 736: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004420624580234289
    2. '        ' → logprob: -6.504420757293701
    3. ' =' → logprob: -7.379420757293701
    4. ':' → logprob: -7.379420757293701
    5. '
' → logprob: -7.879420757293701
    6. '           ' → logprob: -7.879420757293701
    7. '        
' → logprob: -8.254420280456543
    8. '=' → logprob: -8.879420280456543
    9. ',' → logprob: -9.379420280456543
    10. '   ' → logprob: -9.629420280456543

Token 737: ' La' (ID: 3038)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007681157439947128
    2. '0' → logprob: -5.507681369781494
    3. 'self' → logprob: -6.257681369781494
    4. ' int' → logprob: -7.132681369781494
    5. '       ' → logprob: -7.257681369781494
    6. 'La' (adapté à ' La') → logprob: -9.632680892944336
    7. '(int' → logprob: -10.632680892944336
    8. '   ' → logprob: -11.007680892944336
    9. 'The' → logprob: -11.382680892944336
    10. '[int' → logprob: -11.382680892944336

Token 738: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02275978960096836
    2. 'sum' → logprob: -4.772759914398193
    3. '0' → logprob: -5.022759914398193
    4. 'som' → logprob: -5.772759914398193
    5. ' somme' → logprob: -5.772759914398193
    6. 'val' → logprob: -7.397759914398193
    7. 'pré' → logprob: -8.522759437561035
    8. 'summ' → logprob: -9.272759437561035
    9. 'rés' → logprob: -9.397759437561035
    10. 'result' → logprob: -9.522759437561035

Token 739: ' totale' (ID: 52898)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 740: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 741: ' éléments' (ID: 57375)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.022093014791607857
    2. ' self' → logprob: -4.022092819213867
    3. 'tree' → logprob: -6.772092819213867
    4. 's' → logprob: -7.272092819213867
    5. 'val' → logprob: -7.272092819213867
    6. 'i' → logprob: -7.897092819213867
    7. ' tree' → logprob: -8.272092819213867
    8. 'values' → logprob: -8.397092819213867
    9. 'prefix' → logprob: -9.647092819213867
    10. ' i' → logprob: -9.772092819213867

Token 742: ' de' (ID: 334)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.012087870389223099
    2. ' up' → logprob: -5.387087821960449
    3. ' jusque' → logprob: -5.762087821960449
    4. ' self' → logprob: -6.387087821960449
    5. ' ' → logprob: -7.137087821960449
    6. 'jus' → logprob: -7.637087821960449
    7. 'self' → logprob: -8.26208782196045
    8. '   ' → logprob: -8.51208782196045
    9. '[' → logprob: -9.63708782196045
    10. ' dans' → logprob: -9.63708782196045

Token 743: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18912777304649353
    2. ' self' → logprob: -3.1891276836395264
    3. 'la' → logprob: -3.3141276836395264
    4. 'l' → logprob: -3.4391276836395264
    5. ' la' → logprob: -3.5641276836395264
    6. '1' → logprob: -4.1891279220581055
    7. '0' → logprob: -4.5641279220581055
    8. ' l' → logprob: -5.3141279220581055
    9. ' ' → logprob: -6.8141279220581055
    10. '[' → logprob: -7.6891279220581055

Token 744: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4332050383090973
    2. '1' → logprob: -1.308205008506775
    3. 'l' → logprob: -3.5582051277160645
    4. '0' → logprob: -3.5582051277160645
    5. 'la' → logprob: -3.9332051277160645
    6. '[' → logprob: -6.0582051277160645
    7. 'index' → logprob: -7.1832051277160645
    8. 'indices' → logprob: -7.9332051277160645
    9. 'tree' → logprob: -8.183204650878906
    10. '```' → logprob: -8.308204650878906

Token 745: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.06214873120188713
    2. '   ' → logprob: -3.5621488094329834
    3. 'à' → logprob: -4.437148571014404
    4. ' jusqu' → logprob: -5.437148571014404
    5. ' i' → logprob: -5.562148571014404
    6. ' to' → logprob: -5.812148571014404
    7. '       ' → logprob: -6.062148571014404
    8. '
' → logprob: -6.812148571014404
    9. 'i' → logprob: -6.937148571014404
    10. ',' → logprob: -7.437148571014404

Token 746: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008615399710834026
    2. ' i' → logprob: -4.758615493774414
    3. '	i' → logprob: -14.758615493774414
    4. '   ' → logprob: -15.883615493774414
    5. '```' → logprob: -16.008615493774414
    6. '`' → logprob: -16.508615493774414
    7. '_i' → logprob: -17.133615493774414
    8. '[i' → logprob: -17.758615493774414
    9. '       ' → logprob: -18.008615493774414
    10. ' ' → logprob: -18.133615493774414

Token 747: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09678911417722702
    2. '
' → logprob: -2.7217891216278076
    3. '        ' → logprob: -5.3467888832092285
    4. ',' → logprob: -5.4717888832092285
    5. '.' → logprob: -5.5967888832092285
    6. '   ' → logprob: -6.0967888832092285
    7. ')' → logprob: -6.7217888832092285
    8. ':' → logprob: -6.7217888832092285
    9. '    ' → logprob: -6.7217888832092285
    10. '+' → logprob: -7.2217888832092285

Token 748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060891930013895035
    2. ' 
' → logprob: -3.56089186668396
    3. '
' → logprob: -4.060892105102539
    4. '  
' → logprob: -5.685892105102539
    5. '\n' → logprob: -5.685892105102539
    6. '        
' → logprob: -6.185892105102539
    7. '\' → logprob: -7.185892105102539
    8. '        ' → logprob: -7.310892105102539
    9. '   ' → logprob: -7.435892105102539
    10. '   
' → logprob: -8.060892105102539

Token 749: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006024802569299936
    2. 's' → logprob: -8.250602722167969
    3. '
' → logprob: -8.625602722167969
    4. '   ' → logprob: -9.500602722167969
    5. '```' → logprob: -10.875602722167969
    6. ' s' → logprob: -11.125602722167969
    7. '        
' → logprob: -11.125602722167969
    8. '        ' → logprob: -11.375602722167969
    9. 'def' → logprob: -12.000602722167969
    10. '           ' → logprob: -12.250602722167969

Token 750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018897585570812225
    2. 's' → logprob: -4.018897533416748
    3. ' s' → logprob: -7.268897533416748
    4. '   ' → logprob: -10.893898010253906
    5. 'result' → logprob: -11.393898010253906
    6. 'res' → logprob: -11.518898010253906
    7. 'sum' → logprob: -12.393898010253906
    8. '	' → logprob: -12.893898010253906
    9. 'def' → logprob: -13.518898010253906
    10. ' res' → logprob: -14.768898010253906

Token 751: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0004574863996822387
    2. '       ' → logprob: -7.750457286834717
    3. 'res' → logprob: -11.000457763671875
    4. 'result' → logprob: -11.875457763671875
    5. ' s' → logprob: -13.000457763671875
    6. 'sum' → logprob: -14.250457763671875
    7. '   ' → logprob: -15.250457763671875
    8. '```' → logprob: -17.000457763671875
    9. 'ans' → logprob: -17.750457763671875
    10. '        ' → logprob: -18.750457763671875

Token 752: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141714811325073
    2. ' =' → logprob: -1.7014172077178955
    3. '   ' → logprob: -13.451416969299316
    4. ',' → logprob: -13.701416969299316
    5. ' +=' → logprob: -14.701416969299316
    6. ' ' → logprob: -15.326416969299316
    7. '+=' → logprob: -15.451416969299316
    8. '       ' → logprob: -16.076417922973633
    9. '	' → logprob: -16.576417922973633
    10. '    ' → logprob: -17.076417922973633

Token 753: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '۰' → logprob: -18.750024795532227
    4. '   ' → logprob: -19.250024795532227
    5. 'self' → logprob: -20.375024795532227
    6. '٠' → logprob: -21.750024795532227
    7. '	' → logprob: -22.125024795532227
    8. '```' → logprob: -22.187524795532227
    9. '০' → logprob: -22.250024795532227
    10. '０' → logprob: -22.500024795532227

Token 754: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. 'self' → logprob: -19.5
    4. '۰' → logprob: -20.5
    5. '   ' → logprob: -22.0
    6. 's' → logprob: -22.625
    7. '০' → logprob: -23.625
    8. '٠' → logprob: -23.625
    9. '０' → logprob: -24.125
    10. '  ' → logprob: -24.25

Token 755: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06454633921384811
    2. '
' → logprob: -2.8145463466644287
    3. 'while' → logprob: -6.93954610824585
    4. '        
' → logprob: -7.68954610824585
    5. ' while' → logprob: -8.189546585083008
    6. '   ' → logprob: -8.439546585083008
    7. '	' → logprob: -9.314546585083008
    8. ';' → logprob: -9.314546585083008
    9. 'i' → logprob: -9.564546585083008
    10. '	while' → logprob: -9.939546585083008

Token 756: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021330123767256737
    2. '
' → logprob: -4.3963303565979
    3. 'while' → logprob: -4.8963303565979
    4. ' while' → logprob: -7.3963303565979
    5. '	' → logprob: -8.271329879760742
    6. '	while' → logprob: -9.146329879760742
    7. 'i' → logprob: -9.396329879760742
    8. '        
' → logprob: -9.521329879760742
    9. '   ' → logprob: -9.896329879760742
    10. ';' → logprob: -11.146329879760742

Token 757: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.017879605293273926
    2. 'i' → logprob: -4.767879486083984
    3. '       ' → logprob: -4.767879486083984
    4. ' while' → logprob: -7.267879486083984
    5. '	while' → logprob: -11.017879486083984
    6. '   ' → logprob: -11.892879486083984
    7. ' i' → logprob: -13.017879486083984
    8. 'While' → logprob: -14.517879486083984
    9. '           ' → logprob: -16.017879486083984
    10. '	' → logprob: -16.517879486083984

Token 758: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38687753677368164
    2. ' i' → logprob: -1.1368775367736816
    3. '   ' → logprob: -12.261877059936523
    4. '	i' → logprob: -13.886877059936523
    5. '    ' → logprob: -14.761877059936523
    6. ' ' → logprob: -16.261877059936523
    7. '       ' → logprob: -16.261877059936523
    8. '  ' → logprob: -16.886877059936523
    9. '_i' → logprob: -17.011877059936523
    10. '(i' → logprob: -17.261877059936523

Token 759: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -6.659005157416686e-05
    2. ' >' → logprob: -9.625066757202148
    3. '>=' → logprob: -15.375066757202148
    4. '&gt' → logprob: -15.375066757202148
    5. '   ' → logprob: -17.37506675720215
    6. ':' → logprob: -18.12506675720215
    7. '">' → logprob: -18.25006675720215
    8. '>
' → logprob: -19.00006675720215
    9. '＞' → logprob: -19.12506675720215
    10. '>#' → logprob: -19.12506675720215

Token 760: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13904061913490295
    2. '
' → logprob: -2.88904070854187
    3. 's' → logprob: -3.38904070854187
    4. 'i' → logprob: -4.014040470123291
    5. '       ' → logprob: -4.389040470123291
    6. ':
' → logprob: -5.889040470123291
    7. ' s' → logprob: -6.264040470123291
    8. '   ' → logprob: -6.639040470123291
    9. '```' → logprob: -6.639040470123291
    10. ',' → logprob: -7.514040470123291

Token 761: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -5.240481914370321e-05
    2. '           ' → logprob: -10.500052452087402
    3. ' s' → logprob: -10.625052452087402
    4. '   ' → logprob: -15.625052452087402
    5. '               ' → logprob: -15.750052452087402
    6. '       ' → logprob: -15.750052452087402
    7. '```' → logprob: -16.750051498413086
    8. '	s' → logprob: -17.500051498413086
    9. '``' → logprob: -18.750051498413086
    10. '_s' → logprob: -19.500051498413086

Token 762: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16420498490333557
    2. ' +=' → logprob: -1.9142049551010132
    3. '=' → logprob: -6.664205074310303
    4. '       ' → logprob: -6.789205074310303
    5. '+' → logprob: -8.164204597473145
    6. 's' → logprob: -8.289204597473145
    7. ',' → logprob: -8.664204597473145
    8. '           ' → logprob: -8.789204597473145
    9. '   ' → logprob: -8.914204597473145
    10. '<' → logprob: -9.164204597473145

Token 763: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.088346359931165e-07
    2. ' self' → logprob: -14.000000953674316
    3. '[self' → logprob: -18.5
    4. '       ' → logprob: -19.875
    5. '(self' → logprob: -19.875
    6. '	self' → logprob: -20.125
    7. '           ' → logprob: -20.5
    8. '   ' → logprob: -20.875
    9. '=self' → logprob: -21.125
    10. '```' → logprob: -24.125

Token 764: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -4.127333340875339e-06
    2. 'tree' → logprob: -12.750003814697266
    3. '.' → logprob: -14.000003814697266
    4. '	tree' → logprob: -15.375003814697266
    5. '.table' → logprob: -17.125003814697266
    6. '.t' → logprob: -18.000003814697266
    7. '.user' → logprob: -18.000003814697266
    8. ' .' → logprob: -18.000003814697266
    9. ' tree' → logprob: -18.250003814697266
    10. '.thread' → logprob: -18.750003814697266

Token 765: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. 'i' → logprob: -12.87500286102295
    3. '[' → logprob: -14.50000286102295
    4. '[
' → logprob: -18.250003814697266
    5. 's' → logprob: -19.125003814697266
    6. ' i' → logprob: -19.125003814697266
    7. '\[' → logprob: -19.625003814697266
    8. '   ' → logprob: -19.875003814697266
    9. '```' → logprob: -20.125003814697266
    10. ' [' → logprob: -20.750003814697266

Token 766: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001525452476926148
    2. ']
' → logprob: -7.376525402069092
    3. ']+=' → logprob: -8.00152587890625
    4. ' ]' → logprob: -8.75152587890625
    5. ')' → logprob: -8.87652587890625
    6. '           ' → logprob: -9.00152587890625
    7. '       ' → logprob: -9.87652587890625
    8. '   ' → logprob: -11.50152587890625
    9. '
' → logprob: -11.62652587890625
    10. ']%' → logprob: -11.87652587890625

Token 767: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7547140717506409
    2. '           ' → logprob: -0.8797140717506409
    3. ' i' → logprob: -2.254714012145996
    4. '[i' → logprob: -5.879714012145996
    5. ',i' → logprob: -6.379714012145996
    6. '       ' → logprob: -6.754714012145996
    7. '   ' → logprob: -7.129714012145996
    8. ',' → logprob: -7.129714012145996
    9. '
' → logprob: -7.254714012145996
    10. '```' → logprob: -7.629714012145996

Token 768: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -3.173704271830502e-06
    2. ' i' → logprob: -12.75000286102295
    3. '           ' → logprob: -15.37500286102295
    4. '       ' → logprob: -17.000003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '	i' → logprob: -19.750003814697266
    7. 's' → logprob: -20.250003814697266
    8. '```' → logprob: -21.500003814697266
    9. '    ' → logprob: -22.750003814697266
    10. '        ' → logprob: -23.125003814697266

Token 769: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.3207903504371643
    2. ' -=' → logprob: -1.5707902908325195
    3. '&' → logprob: -2.8207902908325195
    4. '-' → logprob: -5.0707902908325195
    5. ' &=' → logprob: -7.5707902908325195
    6. ' &' → logprob: -8.94579029083252
    7. '   ' → logprob: -10.82079029083252
    8. '&nbsp' → logprob: -11.19579029083252
    9. ' ' → logprob: -11.82079029083252
    10. ' -' → logprob: -12.32079029083252

Token 770: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.05499910004437e-05
    2. ' i' → logprob: -9.750090599060059
    3. '(i' → logprob: -10.375090599060059
    4. '(' → logprob: -14.750090599060059
    5. '	i' → logprob: -15.125090599060059
    6. '   ' → logprob: -15.750090599060059
    7. ' (' → logprob: -16.000089645385742
    8. ' ' → logprob: -17.750089645385742
    9. '{i' → logprob: -18.250089645385742
    10. '  ' → logprob: -18.375089645385742

Token 771: ' &' (ID: 827)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.751746746478602e-05
    2. '(i' → logprob: -10.75004768371582
    3. ' i' → logprob: -10.87504768371582
    4. '&i' → logprob: -12.75004768371582
    5. '	i' → logprob: -13.50004768371582
    6. '   ' → logprob: -13.50004768371582
    7. '  ' → logprob: -15.37504768371582
    8. ' ' → logprob: -15.50004768371582
    9. ',i' → logprob: -15.62504768371582
    10. '           ' → logprob: -15.75004768371582

Token 772: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.16829411685466766
    2. '-' → logprob: -1.918294072151184
    3. 'i' → logprob: -5.2932939529418945
    4. '(-' → logprob: -6.0432939529418945
    5. ' -' → logprob: -7.4182939529418945
    6. '(i' → logprob: -10.793293952941895
    7. ' i' → logprob: -11.418293952941895
    8. '_i' → logprob: -13.418293952941895
    9. ' (-' → logprob: -13.918293952941895
    10. '	i' → logprob: -14.043293952941895

Token 773: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.842555426876061e-06
    2. ' i' → logprob: -12.250004768371582
    3. '	i' → logprob: -17.3750057220459
    4. ' ' → logprob: -19.3750057220459
    5. '-i' → logprob: -20.0000057220459
    6. '_i' → logprob: -20.3750057220459
    7. '   ' → logprob: -20.3750057220459
    8. '```' → logprob: -20.3750057220459
    9. 'I' → logprob: -20.5000057220459
    10. '(i' → logprob: -21.2500057220459

Token 774: '  ' (ID: 256)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007100477814674377
    2. ' i' → logprob: -7.2507100105285645
    3. '	i' → logprob: -16.750709533691406
    4. ' ' → logprob: -16.750709533691406
    5. '<|end|>' → logprob: -19.000709533691406
    6. '_i' → logprob: -19.125709533691406
    7. ',i' → logprob: -19.625709533691406
    8. '(i' → logprob: -19.625709533691406
    9. '  ' → logprob: -19.625709533691406
    10. '```' → logprob: -20.000709533691406

Token 775: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 776: ' Desc' (ID: 47040)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020473242329899222
    2. ' i' → logprob: -8.500205039978027
    3. '(i' → logprob: -14.000205039978027
    4. '  ' → logprob: -16.50020408630371
    5. ' ' → logprob: -16.62520408630371
    6. '	i' → logprob: -16.62520408630371
    7. ')i' → logprob: -16.87520408630371
    8. '```' → logprob: -17.12520408630371
    9. '   ' → logprob: -17.50020408630371
    10. ')' → logprob: -17.62520408630371

Token 777: 'end' (ID: 419)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.144138365983963
    2. '           ' → logprob: -2.5191383361816406
    3. 'r' → logprob: -4.269138336181641
    4. '   ' → logprob: -5.269138336181641
    5. 'end' → logprob: -5.269138336181641
    6. '       ' → logprob: -5.269138336181641
    7. ' i' → logprob: -5.519138336181641
    8. '=i' → logprob: -5.519138336181641
    9. 'endre' → logprob: -5.769138336181641
    10. '=' → logprob: -6.019138336181641

Token 778: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.035047028213739395
    2. ' i' → logprob: -3.5350470542907715
    3. '       ' → logprob: -6.9100470542907715
    4. '           ' → logprob: -7.6600470542907715
    5. 'inue' → logprob: -7.6600470542907715
    6. '<|end|>' → logprob: -7.6600470542907715
    7. ')' → logprob: -8.160046577453613
    8. '   ' → logprob: -8.285046577453613
    9. 'u' → logprob: -8.410046577453613
    10. 'x' → logprob: -8.410046577453613

Token 779: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015197417233139277
    2. ' i' → logprob: -6.876519680023193
    3. '(i' → logprob: -8.126520156860352
    4. 'least' → logprob: -9.751520156860352
    5. 'the' → logprob: -10.376520156860352
    6. 'low' → logprob: -10.876520156860352
    7. 'l' → logprob: -11.126520156860352
    8. 'lowest' → logprob: -11.251520156860352
    9. ' (' → logprob: -11.376520156860352
    10. '<|end|>' → logprob: -11.751520156860352

Token 780: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01456091832369566
    2. ' i' → logprob: -4.889560699462891
    3. '(i' → logprob: -5.889560699462891
    4. 'least' → logprob: -6.514560699462891
    5. 'lowest' → logprob: -6.764560699462891
    6. 's' → logprob: -8.01456069946289
    7. ' least' → logprob: -8.13956069946289
    8. 'LS' → logprob: -9.38956069946289
    9. ' lowest' → logprob: -9.51456069946289
    10. 'last' → logprob: -9.76456069946289

Token 781: 'ice' (ID: 603)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01739553175866604
    2. 'ex' → logprob: -4.142395496368408
    3. 'x' → logprob: -7.017395496368408
    4. '(i' → logprob: -8.767395973205566
    5. ' i' → logprob: -9.142395973205566
    6. 'e' → logprob: -9.517395973205566
    7. 'ices' → logprob: -10.392395973205566
    8. '       ' → logprob: -11.017395973205566
    9. 'dex' → logprob: -11.267395973205566
    10. '   ' → logprob: -11.392395973205566

Token 782: ' parent' (ID: 5980)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3007049262523651
    2. ' i' → logprob: -1.5507049560546875
    3. 'lowest' → logprob: -4.1757049560546875
    4. ' (' → logprob: -4.5507049560546875
    5. '(i' → logprob: -5.1757049560546875
    6. '```' → logprob: -5.3007049560546875
    7. 's' → logprob: -6.0507049560546875
    8. 'previous' → logprob: -6.6757049560546875
    9. ' lowest' → logprob: -6.8007049560546875
    10. 'last' → logprob: -7.5507049560546875

Token 783: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 784: ' BIT' (ID: 52185)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00038407891406677663
    2. ' i' → logprob: -7.8753838539123535
    3. '```' → logprob: -13.500384330749512
    4. '(i' → logprob: -14.750384330749512
    5. '	i' → logprob: -15.250384330749512
    6. 'index' → logprob: -15.250384330749512
    7. '   ' → logprob: -15.625384330749512
    8. 'current' → logprob: -15.625384330749512
    9. 'code' → logprob: -15.750384330749512
    10. ' ' → logprob: -16.000383377075195

Token 785: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34292152523994446
    2. '<|end|>' → logprob: -2.092921495437622
    3. '           ' → logprob: -2.467921495437622
    4. '        
' → logprob: -4.217921733856201
    5. '\n' → logprob: -4.467921733856201
    6. '```' → logprob: -4.717921733856201
    7. ' 
' → logprob: -4.967921733856201
    8. '.' → logprob: -5.217921733856201
    9. ',' → logprob: -5.592921733856201
    10. '   ' → logprob: -5.717921733856201

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7513269186019897
    2. '           ' → logprob: -1.5013269186019897
    3. ' 
' → logprob: -2.3763270378112793
    4. '```' → logprob: -2.8763270378112793
    5. '        
' → logprob: -3.6263270378112793
    6. '\' → logprob: -3.7513270378112793
    7. '\n' → logprob: -4.001327037811279
    8. '  
' → logprob: -4.251327037811279
    9. ' ' → logprob: -4.501327037811279
    10. '            
' → logprob: -4.626327037811279

Token 787: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056832455098629
    2. 'return' (adapté à ' return') → logprob: -4.056832313537598
    3. '           ' → logprob: -4.681832313537598
    4. '   ' → logprob: -4.931832313537598
    5. '        ' → logprob: -5.306832313537598
    6. '	return' → logprob: -6.181832313537598
    7. 's' → logprob: -6.181832313537598
    8. '	' → logprob: -6.306832313537598
    9. '    ' → logprob: -6.431832313537598
    10. '<|end|>' → logprob: -6.556832313537598

Token 788: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015023599844425917
    2. ' s' → logprob: -6.501502513885498
    3. '(s' → logprob: -17.876502990722656
    4. '	s' → logprob: -18.501502990722656
    5. '{s' → logprob: -20.251502990722656
    6. '<s' → logprob: -20.501502990722656
    7. '_s' → logprob: -20.876502990722656
    8. ' ' → logprob: -21.126502990722656
    9. ' ' → logprob: -21.251502990722656
    10. 'S' → logprob: -21.251502990722656

Token 789: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5550553202629089
    2. '    
' → logprob: -1.4300553798675537
    3. '
' → logprob: -2.5550553798675537
    4. '<|end|>' → logprob: -2.8050553798675537
    5. ' 
' → logprob: -3.3050553798675537
    6. '  
' → logprob: -5.430055141448975
    7. '   
' → logprob: -5.555055141448975
    8. '<|end|>' → logprob: -7.180055141448975
    9. '        
' → logprob: -7.430055141448975
    10. '	
' → logprob: -7.805055141448975

Token 790: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.462039977312088
    2. '    
' → logprob: -1.5870399475097656
    3. '
' → logprob: -1.9620399475097656
    4. ' 
' → logprob: -3.9620399475097656
    5. '   
' → logprob: -6.337039947509766
    6. '        
' → logprob: -6.587039947509766
    7. '  
' → logprob: -6.712039947509766
    8. 'def' → logprob: -7.962039947509766
    9. '	
' → logprob: -8.212039947509766
    10. '<|end|>' → logprob: -8.212039947509766

Token 791: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005326599348336458
    2. '   ' → logprob: -8.000533103942871
    3. ' def' → logprob: -8.625533103942871
    4. '
' → logprob: -11.375533103942871
    5. '    
' → logprob: -12.375533103942871
    6. '	def' → logprob: -13.750533103942871
    7. ' 
' → logprob: -14.875533103942871
    8. '        
' → logprob: -15.250533103942871
    9. '   
' → logprob: -16.125532150268555
    10. '  
' → logprob: -16.625532150268555

Token 792: ' add' (ID: 1147)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.06252091377973557
    2. ' update' → logprob: -2.812520980834961
    3. 'add' → logprob: -7.562520980834961
    4. '_update' → logprob: -11.062520980834961
    5. ' add' → logprob: -11.187520980834961
    6. 'upd' → logprob: -12.937520980834961
    7. '.update' → logprob: -14.562520980834961
    8. 'increment' → logprob: -15.312520980834961
    9. 'increase' → logprob: -15.562520980834961
    10. '  ' → logprob: -15.937520980834961

Token 793: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012953581754118204
    2. '(' → logprob: -6.751295566558838
    3. '(i' → logprob: -9.12629508972168
    4. ' (' → logprob: -11.12629508972168
    5. '(s' → logprob: -13.87629508972168
    6. '<|end|>' → logprob: -15.25129508972168
    7. '(
' → logprob: -15.62629508972168
    8. 'self' → logprob: -16.75129508972168
    9. '(sel' → logprob: -16.75129508972168
    10. '(Self' → logprob: -17.62629508972168

Token 794: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003323665587231517
    2. '(' → logprob: -8.125332832336426
    3. '(i' → logprob: -10.750332832336426
    4. ' (' → logprob: -11.375332832336426
    5. '(s' → logprob: -13.750332832336426
    6. '<|end|>' → logprob: -14.250332832336426
    7. '(
' → logprob: -14.500332832336426
    8. ',' → logprob: -14.875332832336426
    9. 'self' → logprob: -15.500332832336426
    10. '(sel' → logprob: -16.12533187866211

Token 795: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023253168910741806
    2. ' i' → logprob: -3.7732532024383545
    3. 'index' → logprob: -12.648253440856934
    4. 'self' → logprob: -13.148253440856934
    5. '<|end|>' → logprob: -14.023253440856934
    6. 'idx' → logprob: -14.273253440856934
    7. '   ' → logprob: -15.273253440856934
    8. ' self' → logprob: -15.523253440856934
    9. ' idx' → logprob: -15.773253440856934
    10. ' ' → logprob: -16.148252487182617

Token 796: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005137138650752604
    2. ' ,' → logprob: -7.750513553619385
    3. ',i' → logprob: -9.500514030456543
    4. ',value' → logprob: -12.750514030456543
    5. ',int' → logprob: -12.875514030456543
    6. ',val' → logprob: -14.125514030456543
    7. ',self' → logprob: -15.000514030456543
    8. ',
' → logprob: -15.375514030456543
    9. ',s' → logprob: -15.625514030456543
    10. 'self' → logprob: -15.750514030456543

Token 797: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002752449829131365
    2. ' ' → logprob: -6.377752304077148
    3. 'value' → logprob: -7.627752304077148
    4. 'val' → logprob: -8.127752304077148
    5. 'v' → logprob: -8.752752304077148
    6. 'x' → logprob: -10.752752304077148
    7. 's' → logprob: -10.752752304077148
    8. ' value' → logprob: -11.002752304077148
    9. '   ' → logprob: -11.127752304077148
    10. 'delta' → logprob: -11.627752304077148

Token 798: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20177319645881653
    2. '):
' → logprob: -1.7017731666564941
    3. '):
' → logprob: -8.201773643493652
    4. ',' → logprob: -10.951773643493652
    5. ':' → logprob: -10.951773643493652
    6. '   ' → logprob: -11.076773643493652
    7. ' ):' → logprob: -11.076773643493652
    8. '):

' → logprob: -12.201773643493652
    9. ')' → logprob: -12.326773643493652
    10. '       ' → logprob: -12.576773643493652

Token 799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031019901856780052
    2. '<|end|>' → logprob: -4.406019687652588
    3. ' 
' → logprob: -4.781019687652588
    4. '
' → logprob: -5.406019687652588
    5. '        
' → logprob: -6.156019687652588
    6. '   ' → logprob: -7.031019687652588
    7. '  
' → logprob: -7.406019687652588
    8. '        ' → logprob: -7.531019687652588
    9. '    
' → logprob: -8.531020164489746
    10. '   
' → logprob: -8.781020164489746

Token 800: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023673884570598602
    2. '
' → logprob: -4.773674011230469
    3. '```' → logprob: -5.273674011230469
    4. ' 
' → logprob: -6.023674011230469
    5. ' while' → logprob: -6.148674011230469
    6. '   ' → logprob: -6.523674011230469
    7. 'while' → logprob: -6.773674011230469
    8. '        
' → logprob: -7.648674011230469
    9. '        ' → logprob: -7.773674011230469
    10. '  
' → logprob: -8.023674011230469

Token 801: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006123363971710205
    2. '        ' → logprob: -5.7561235427856445
    3. ' 
' → logprob: -6.8811235427856445
    4. '   ' → logprob: -7.2561235427856445
    5. '        
' → logprob: -7.8811235427856445
    6. '
' → logprob: -8.881123542785645
    7. '           ' → logprob: -9.006123542785645
    8. '    ' → logprob: -9.131123542785645
    9. ' ' → logprob: -9.631123542785645
    10. '               ' → logprob: -9.881123542785645

Token 802: ' In' (ID: 730)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9140557050704956
    2. 'while' → logprob: -1.0390557050704956
    3. ' while' → logprob: -1.4140557050704956
    4. '   ' → logprob: -6.539055824279785
    5. '
' → logprob: -8.164055824279785
    6. '    ' → logprob: -9.039055824279785
    7. '        ' → logprob: -9.414055824279785
    8. ' i' → logprob: -10.164055824279785
    9. ' 
' → logprob: -10.164055824279785
    10. '	while' → logprob: -10.289055824279785

Token 803: 'cré' (ID: 125389)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.21082071959972382
    2. 'def' → logprob: -2.3358206748962402
    3. '   ' → logprob: -3.7108206748962402
    4. 'dé' → logprob: -3.9608206748962402
    5. '       ' → logprob: -4.71082067489624
    6. 'crements' → logprob: -4.96082067489624
    7. 'd' → logprob: -4.96082067489624
    8. 'cré' → logprob: -5.58582067489624
    9. 'dex' → logprob: -5.58582067489624
    10. 'crement' → logprob: -5.71082067489624

Token 804: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.43225589394569397
    2. 'ment' → logprob: -1.5572558641433716
    3. 'r' → logprob: -2.682255983352661
    4. 'rement' → logprob: -2.932255983352661
    5. 'ments' → logprob: -4.557255744934082
    6. 'm' → logprob: -5.182255744934082
    7. 'nte' → logprob: -7.807255744934082
    8. 're' → logprob: -7.807255744934082
    9. '```' → logprob: -8.182255744934082
    10. 'mé' → logprob: -9.182255744934082

Token 805: ' la' (ID: 557)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1857444047927856
    2. '(self' → logprob: -1.1857444047927856
    3. '       ' → logprob: -2.310744285583496
    4. '(i' → logprob: -2.435744285583496
    5. ' self' → logprob: -2.810744285583496
    6. '<|end|>' → logprob: -3.185744285583496
    7. 'i' → logprob: -3.310744285583496
    8. ' i' → logprob: -3.435744285583496
    9. ' (' → logprob: -3.935744285583496
    10. '   ' → logprob: -5.060744285583496

Token 806: ' valeur' (ID: 41664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00150390958879143
    2. ' i' → logprob: -6.501503944396973
    3. '   ' → logprob: -13.751503944396973
    4. '       ' → logprob: -16.001502990722656
    5. ' ' → logprob: -16.126502990722656
    6. '  ' → logprob: -16.251502990722656
    7. '[i' → logprob: -16.501502990722656
    8. '	i' → logprob: -16.876502990722656
    9. '_i' → logprob: -17.876502990722656
    10. ',i' → logprob: -18.251502990722656

Token 807: ' à' (ID: 1221)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12558405101299286
    2. '[i' → logprob: -2.250584125518799
    3. '   ' → logprob: -5.375584125518799
    4. '       ' → logprob: -6.125584125518799
    5. ' (' → logprob: -6.750584125518799
    6. ' ' → logprob: -6.750584125518799
    7. '(' → logprob: -6.750584125518799
    8. ' i' → logprob: -7.750584125518799
    9. ' at' → logprob: -8.37558364868164
    10. '[' → logprob: -8.50058364868164

Token 808: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38687753677368164
    2. ' i' → logprob: -1.1368775367736816
    3. '   ' → logprob: -12.511877059936523
    4. ' ' → logprob: -13.886877059936523
    5. '	i' → logprob: -14.011877059936523
    6. '  ' → logprob: -14.636877059936523
    7. 'indice' → logprob: -15.761877059936523
    8. '    ' → logprob: -16.136877059936523
    9. 'index' → logprob: -16.136877059936523
    10. '       ' → logprob: -16.886877059936523

Token 809: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09665341675281525
    2. ' i' → logprob: -2.846653461456299
    3. 'indice' → logprob: -3.721653461456299
    4. '   ' → logprob: -5.721653461456299
    5. '[i' → logprob: -5.846653461456299
    6. 'index' → logprob: -6.471653461456299
    7. '_i' → logprob: -7.721653461456299
    8. ' index' → logprob: -7.846653461456299
    9. '       ' → logprob: -8.34665298461914
    10. ' indice' → logprob: -8.47165298461914

Token 810: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5552600026130676
    2. 'ice' → logprob: -1.0552599430084229
    3. 'i' → logprob: -2.555259943008423
    4. 'e' → logprob: -8.805259704589844
    5. 'ices' → logprob: -10.055259704589844
    6. 'é' → logprob: -10.305259704589844
    7. 'í' → logprob: -10.430259704589844
    8. 'ce' → logprob: -10.805259704589844
    9. 'ic' → logprob: -11.680259704589844
    10. '```' → logprob: -12.430259704589844

Token 811: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06199020519852638
    2. 'i' → logprob: -2.811990261077881
    3. '	i' → logprob: -11.436989784240723
    4. '   ' → logprob: -12.686989784240723
    5. '[i' → logprob: -12.936989784240723
    6. ' de' → logprob: -13.061989784240723
    7. ' ' → logprob: -13.186989784240723
    8. '```' → logprob: -14.561989784240723
    9. '(i' → logprob: -14.811989784240723
    10. ',i' → logprob: -15.186989784240723

Token 812: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.997227668762207
    2. '       ' → logprob: -1.122227668762207
    3. ' i' → logprob: -2.122227668762207
    4. ' de' → logprob: -2.372227668762207
    5. ' by' → logprob: -3.622227668762207
    6. '   ' → logprob: -3.872227668762207
    7. '```' → logprob: -4.622227668762207
    8. ' +=' → logprob: -4.872227668762207
    9. '[i' → logprob: -5.122227668762207
    10. ' par' → logprob: -5.122227668762207

Token 813: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5493080019950867
    2. ' i' → logprob: -0.9243080019950867
    3. 'x' → logprob: -4.674307823181152
    4. ' x' → logprob: -4.924307823181152
    5. '1' → logprob: -5.049307823181152
    6. ' self' → logprob: -7.299307823181152
    7. 'self' → logprob: -7.549307823181152
    8. 'l' → logprob: -7.799307823181152
    9. '```' → logprob: -8.049307823181152
    10. ' the' → logprob: -8.174307823181152

Token 814: ''ar' (ID: 54307)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6644579768180847
    2. ''' → logprob: -1.4144580364227295
    3. ''ar' → logprob: -2.0394580364227295
    4. ' self' → logprob: -3.1644580364227295
    5. 'e' → logprob: -3.7894580364227295
    6. 'a' → logprob: -3.7894580364227295
    7. '   ' → logprob: -5.41445779800415
    8. '`' → logprob: -5.53945779800415
    9. ' tree' → logprob: -5.91445779800415
    10. 'tree' → logprob: -5.91445779800415

Token 815: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.00917651504278183
    2. 'g' → logprob: -5.509176731109619
    3. 'tree' → logprob: -6.509176731109619
    4. 'e' → logprob: -7.009176731109619
    5. '   ' → logprob: -7.259176731109619
    6. '       ' → logprob: -7.634176731109619
    7. 'r' → logprob: -7.759176731109619
    8. 'ge' → logprob: -8.384176254272461
    9. 'gue' → logprob: -8.384176254272461
    10. 'b' → logprob: -9.634176254272461

Token 816: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5091027617454529
    2. ',' → logprob: -1.0091028213500977
    3. ' de' → logprob: -4.759102821350098
    4. ' by' → logprob: -5.259102821350098
    5. '        ' → logprob: -5.884102821350098
    6. ' i' → logprob: -6.009102821350098
    7. '[i' → logprob: -6.134102821350098
    8. '<|end|>' → logprob: -6.134102821350098
    9. '   ' → logprob: -6.259102821350098
    10. '(i' → logprob: -6.384102821350098

Token 817: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.10023093223571777
    2. 'x' → logprob: -2.3502309322357178
    3. '1' → logprob: -10.725231170654297
    4. ' ' → logprob: -13.600231170654297
    5. '```' → logprob: -15.350231170654297
    6. ' ' → logprob: -15.850231170654297
    7. ' un' → logprob: -15.975231170654297
    8. '(x' → logprob: -16.100231170654297
    9. '	x' → logprob: -16.350231170654297
    10. '   ' → logprob: -16.350231170654297

Token 818: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6182010173797607
    2. ':' → logprob: -1.2432010173797607
    3. ':
' → logprob: -2.8682010173797607
    4. '<|end|>' → logprob: -3.1182010173797607
    5. '.' → logprob: -3.2432010173797607
    6. '):' → logprob: -4.74320125579834
    7. '):
' → logprob: -5.11820125579834
    8. ',' → logprob: -5.24320125579834
    9. ')' → logprob: -5.36820125579834
    10. '   ' → logprob: -5.99320125579834

Token 819: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007116233929991722
    2. '   ' → logprob: -6.382116317749023
    3. ')' → logprob: -6.632116317749023
    4. '<|end|>' → logprob: -6.882116317749023
    5. '        
' → logprob: -7.382116317749023
    6. ' 
' → logprob: -7.507116317749023
    7. '):
' → logprob: -8.132116317749023
    8. '```' → logprob: -8.257116317749023
    9. ',' → logprob: -8.632116317749023
    10. ':' → logprob: -8.632116317749023

Token 820: ' Param' (ID: 14796)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002858370542526245
    2. '   ' → logprob: -6.5028581619262695
    3. '
' → logprob: -7.6278581619262695
    4. ' 
' → logprob: -7.7528581619262695
    5. '        
' → logprob: -8.37785816192627
    6. '        ' → logprob: -9.75285816192627
    7. '    ' → logprob: -10.00285816192627
    8. '           ' → logprob: -10.62785816192627
    9. '    
' → logprob: -11.37785816192627
    10. '  
' → logprob: -11.37785816192627

Token 821: 'ètres' (ID: 40427)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4257121980190277
    2. '       ' → logprob: -1.67571222782135
    3. 'eters' → logprob: -3.0507121086120605
    4. 'ètres' → logprob: -3.4257121086120605
    5. 'ètre' → logprob: -3.8007121086120605
    6. '    ' → logprob: -4.4257121086120605
    7. 'etre' → logprob: -4.5507121086120605
    8. '     ' → logprob: -4.5507121086120605
    9. '      ' → logprob: -5.0507121086120605
    10. '  ' → logprob: -5.8007121086120605

Token 822: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38558533787727356
    2. '(self' → logprob: -1.3855853080749512
    3. 'self' → logprob: -2.885585308074951
    4. ',' → logprob: -5.135585308074951
    5. ' self' → logprob: -5.635585308074951
    6. ' (' → logprob: -5.760585308074951
    7. '   ' → logprob: -8.13558578491211
    8. '[' → logprob: -8.88558578491211
    9. '
' → logprob: -9.26058578491211
    10. '(' → logprob: -9.38558578491211

Token 823: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048675596714019775
    2. '(self' → logprob: -3.548675537109375
    3. ' (' → logprob: -5.298675537109375
    4. ',' → logprob: -5.423675537109375
    5. '(i' → logprob: -5.548675537109375
    6. 'self' → logprob: -5.923675537109375
    7. '   ' → logprob: -7.423675537109375
    8. ' self' → logprob: -8.048675537109375
    9. ' i' → logprob: -8.048675537109375
    10. '        ' → logprob: -8.548675537109375

Token 824: ' ----------
' (ID: 68058)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6504626870155334
    2. 'i' → logprob: -1.2754626274108887
    3. '       ' → logprob: -1.9004626274108887
    4. 'self' → logprob: -3.5254626274108887
    5. '   ' → logprob: -5.275462627410889
    6. ' self' → logprob: -5.525462627410889
    7. ',' → logprob: -5.900462627410889
    8. ' ' → logprob: -6.650462627410889
    9. '  ' → logprob: -7.150462627410889
    10. '        ' → logprob: -7.150462627410889

Token 825: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.37405845522880554
    2. 'i' → logprob: -1.249058485031128
    3. '       ' → logprob: -3.749058485031128
    4. '   ' → logprob: -7.124058246612549
    5. 'int' → logprob: -8.249058723449707
    6. '	i' → logprob: -8.749058723449707
    7. '    ' → logprob: -9.249058723449707
    8. '        ' → logprob: -9.249058723449707
    9. ' 
' → logprob: -9.624058723449707
    10. ' ' → logprob: -9.874058723449707

Token 826: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.22578364610671997
    2. ' i' → logprob: -1.6007835865020752
    3. '   ' → logprob: -8.475783348083496
    4. '       ' → logprob: -8.850783348083496
    5. '	i' → logprob: -11.475783348083496
    6. '    ' → logprob: -13.225783348083496
    7. '  ' → logprob: -13.225783348083496
    8. '
' → logprob: -13.725783348083496
    9. ' ' → logprob: -13.850783348083496
    10. 'self' → logprob: -14.350783348083496

Token 827: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047871763817965984
    2. ' ,' → logprob: -5.504786968231201
    3. ',int' → logprob: -7.629786968231201
    4. ':int' → logprob: -8.87978744506836
    5. ':' → logprob: -10.87978744506836
    6. ',
' → logprob: -11.00478744506836
    7. ',i' → logprob: -11.25478744506836
    8. ' int' → logprob: -11.62978744506836
    9. '       ' → logprob: -11.62978744506836
    10. 'int' → logprob: -11.62978744506836

Token 828: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.615255839889869e-05
    2. ' int' → logprob: -9.250096321105957
    3. '[int' → logprob: -19.00009536743164
    4. '<int' → logprob: -20.12509536743164
    5. '       ' → logprob: -21.87509536743164
    6. ':int' → logprob: -22.12509536743164
    7. '(int' → logprob: -22.25009536743164
    8. '=int' → logprob: -22.37509536743164
    9. '	int' → logprob: -22.37509536743164
    10. '   ' → logprob: -22.75009536743164

Token 829: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009414771921001375
    2. ',
' → logprob: -7.250941276550293
    3. ' ,' → logprob: -8.625941276550293
    4. '       ' → logprob: -10.750941276550293
    5. ',int' → logprob: -11.250941276550293
    6. '<|end|>' → logprob: -11.375941276550293
    7. ',x' → logprob: -13.625941276550293
    8. ' ,
' → logprob: -13.875941276550293
    9. 'int' → logprob: -14.000941276550293
    10. '        ' → logprob: -14.125941276550293

Token 830: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002778727561235428
    2. '<|end|>' → logprob: -6.12777853012085
    3. ',int' → logprob: -8.752779006958008
    4. '       ' → logprob: -9.127779006958008
    5. ' ,' → logprob: -9.377779006958008
    6. ',
' → logprob: -9.502779006958008
    7. '<|end|>' → logprob: -10.127779006958008
    8. 'int' → logprob: -10.627779006958008
    9. ':' → logprob: -10.627779006958008
    10. ':int' → logprob: -11.002779006958008

Token 831: ' Ind' (ID: 2761)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.6240566083070007e-06
    2. ' int' → logprob: -13.375001907348633
    3. '       ' → logprob: -17.000001907348633
    4. 'i' → logprob: -18.250001907348633
    5. '[int' → logprob: -19.125001907348633
    6. '           ' → logprob: -20.000001907348633
    7. '   ' → logprob: -20.000001907348633
    8. 'index' → logprob: -20.375001907348633
    9. '	int' → logprob: -20.500001907348633
    10. '<int' → logprob: -21.250001907348633

Token 832: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0035152568016201258
    2. 'e' → logprob: -6.003515243530273
    3. 'ice' → logprob: -6.878515243530273
    4. 'i' → logprob: -12.503515243530273
    5. 'dex' → logprob: -13.378515243530273
    6. 'é' → logprob: -13.878515243530273
    7. 'exe' → logprob: -14.128515243530273
    8. '```' → logprob: -14.628515243530273
    9. '   ' → logprob: -14.878515243530273
    10. 'ent' → logprob: -15.253515243530273

Token 833: ' auquel' (ID: 136484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7472291588783264
    2. ',' → logprob: -1.3722290992736816
    3. ' int' → logprob: -2.4972290992736816
    4. ':int' → logprob: -2.7472290992736816
    5. 'int' → logprob: -3.3722290992736816
    6. ':' → logprob: -3.7472290992736816
    7. ',int' → logprob: -4.497229099273682
    8. ' i' → logprob: -4.747229099273682
    9. ' :' → logprob: -4.872229099273682
    10. '        ' → logprob: -4.997229099273682

Token 834: ' ajouter' (ID: 78457)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0345901250839233
    2. '   ' → logprob: -1.4095901250839233
    3. ' ajouter' → logprob: -2.159590244293213
    4. ' on' → logprob: -2.784590244293213
    5. 'i' → logprob: -2.784590244293213
    6. 'on' → logprob: -3.034590244293213
    7. '           ' → logprob: -4.159590244293213
    8. 'self' → logprob: -4.159590244293213
    9. ' il' → logprob: -4.659590244293213
    10. ' i' → logprob: -4.659590244293213

Token 835: ' la' (ID: 557)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6471663117408752
    2. ' x' → logprob: -1.1471662521362305
    3. '<|end|>' → logprob: -2.3971662521362305
    4. 'x' → logprob: -3.3971662521362305
    5. '       ' → logprob: -4.2721662521362305
    6. '           ' → logprob: -5.0221662521362305
    7. ' ,' → logprob: -5.7721662521362305
    8. ',x' → logprob: -5.8971662521362305
    9. ' ' → logprob: -6.1471662521362305
    10. ')' → logprob: -6.6471662521362305

Token 836: ' valeur' (ID: 41664)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38687822222709656
    2. 'x' → logprob: -1.136878252029419
    3. ' ' → logprob: -12.38687801361084
    4. '   ' → logprob: -14.51187801361084
    5. ' value' → logprob: -14.63687801361084
    6. '```' → logprob: -14.63687801361084
    7. '1' → logprob: -15.26187801361084
    8. ' ' → logprob: -15.26187801361084
    9. '(x' → logprob: -15.38687801361084
    10. '       ' → logprob: -15.63687801361084

Token 837: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08439507335424423
    2. ',' → logprob: -2.584395170211792
    3. '<|end|>' → logprob: -5.709394931793213
    4. 'int' → logprob: -7.459394931793213
    5. '        ' → logprob: -8.334395408630371
    6. '        
' → logprob: -8.584395408630371
    7. ' ,' → logprob: -8.584395408630371
    8. '      ' → logprob: -8.959395408630371
    9. '<|end|>' → logprob: -9.209395408630371
    10. '           ' → logprob: -9.209395408630371

Token 838: 'do' (ID: 2408)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5095122456550598
    2. ' x' → logprob: -1.384512186050415
    3. ')' → logprob: -2.384512186050415
    4. ',' → logprob: -3.884512186050415
    5. '       ' → logprob: -4.759512424468994
    6. '           ' → logprob: -4.884512424468994
    7. 'int' → logprob: -5.384512424468994
    8. ')x' → logprob: -5.634512424468994
    9. '),' → logprob: -5.759512424468994
    10. 'i' → logprob: -6.009512424468994

Token 839: 'it' (ID: 278)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.09391137957572937
    2. 'ne' → logprob: -3.5939114093780518
    3. 'c' → logprob: -4.218911170959473
    4. '   ' → logprob: -4.843911170959473
    5. 'n' → logprob: -5.093911170959473
    6. 'ct' → logprob: -5.343911170959473
    7. 'cs' → logprob: -5.593911170959473
    8. 't' → logprob: -5.718911170959473
    9. 'x' → logprob: -6.218911170959473
    10. ' =' → logprob: -6.343911170959473

Token 840: ' être' (ID: 9104)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6933162212371826
    2. ' >=' → logprob: -2.0683162212371826
    3. '>' → logprob: -2.3183162212371826
    4. '>=' → logprob: -2.4433162212371826
    5. ' être' → logprob: -2.6933162212371826
    6. ' <=' → logprob: -3.0683162212371826
    7. ' >' → logprob: -3.1933162212371826
    8. '<=' → logprob: -4.443316459655762
    9. '<|end|>' → logprob: -4.568316459655762
    10. 'être' → logprob: -5.693316459655762

Token 841: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6212450861930847
    2. '>' → logprob: -0.8712450861930847
    3. ' >' → logprob: -4.12124490737915
    4. '1' → logprob: -4.24624490737915
    5. ' >=' → logprob: -4.62124490737915
    6. '<=' → logprob: -5.74624490737915
    7. ' <=' → logprob: -8.621245384216309
    8. '   ' → logprob: -8.996245384216309
    9. 'int' → logprob: -9.496245384216309
    10. '<' → logprob: -9.746245384216309

Token 842: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.125016212463379
    3. '   ' → logprob: -13.375016212463379
    4. '```' → logprob: -17.750017166137695
    5. '       ' → logprob: -17.875017166137695
    6. ' ' → logprob: -20.125017166137695
    7. '    ' → logprob: -20.500017166137695
    8. ',' → logprob: -20.625017166137695
    9. '  ' → logprob: -20.625017166137695
    10. '=' → logprob: -21.125017166137695

Token 843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -17.25
    4. '```' → logprob: -17.75
    5. '0' → logprob: -19.875
    6. '
' → logprob: -20.875
    7. '>' → logprob: -21.125
    8. '``' → logprob: -22.5
    9. '       ' → logprob: -22.625
    10. '  ' → logprob: -22.75

Token 844: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028762388974428177
    2. '       ' → logprob: -3.7787623405456543
    3. '<|end|>' → logprob: -5.528762340545654
    4. ')
' → logprob: -6.903762340545654
    5. ',' → logprob: -8.653762817382812
    6. '):
' → logprob: -9.403762817382812
    7. ').' → logprob: -9.403762817382812
    8. ' and' → logprob: -10.278762817382812
    9. '),' → logprob: -10.403762817382812
    10. '   ' → logprob: -10.653762817382812

Token 845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007598110940307379
    2. '   ' → logprob: -6.007597923278809
    3. '        
' → logprob: -6.882597923278809
    4. ' 
' → logprob: -7.257597923278809
    5. '<|end|>' → logprob: -7.507597923278809
    6. ' ' → logprob: -7.632597923278809
    7. '        ' → logprob: -7.757597923278809
    8. '      ' → logprob: -8.257597923278809
    9. '```' → logprob: -8.257597923278809
    10. '    ' → logprob: -8.382597923278809

Token 846: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27378344535827637
    2. ' x' → logprob: -2.1487834453582764
    3. 'x' (adapté à ' x') → logprob: -2.3987834453582764
    4. '   ' → logprob: -5.1487836837768555
    5. ' 
' → logprob: -5.2737836837768555
    6. ' ' → logprob: -5.3987836837768555
    7. ',' → logprob: -5.5237836837768555
    8. '    ' → logprob: -5.8987836837768555
    9. '        ' → logprob: -5.8987836837768555
    10. '           ' → logprob: -6.7737836837768555

Token 847: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04629354923963547
    2. '):' → logprob: -3.2962934970855713
    3. ')' → logprob: -5.92129373550415
    4. ',' → logprob: -6.29629373550415
    5. '=' → logprob: -6.42129373550415
    6. '<|end|>' → logprob: -6.67129373550415
    7. '):
' → logprob: -8.296293258666992
    8. '<|end|>' → logprob: -8.796293258666992
    9. ':int' → logprob: -9.546293258666992
    10. ' :' → logprob: -9.671293258666992

Token 848: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031777136027812958
    2. ' int' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.003177642822266
    4. '(int' → logprob: -17.378177642822266
    5. '       ' → logprob: -18.253177642822266
    6. '	int' → logprob: -19.628177642822266
    7. '[int' → logprob: -19.753177642822266
    8. ' ' → logprob: -20.753177642822266
    9. '<int' → logprob: -21.378177642822266
    10. '           ' → logprob: -21.753177642822266

Token 849: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34369948506355286
    2. '):
' → logprob: -2.3436994552612305
    3. '       ' → logprob: -2.4686994552612305
    4. '<|end|>' → logprob: -2.4686994552612305
    5. '):' → logprob: -4.7186994552612305
    6. ':' → logprob: -5.2186994552612305
    7. '<|end|>' → logprob: -5.4686994552612305
    8. ':
' → logprob: -6.2186994552612305
    9. '   ' → logprob: -6.3436994552612305
    10. ':int' → logprob: -7.2186994552612305

Token 850: '           ' (ID: 352)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9390833377838135
    2. '):' → logprob: -0.9390833377838135
    3. '       ' → logprob: -1.9390833377838135
    4. ')' → logprob: -3.8140833377838135
    5. ':' → logprob: -3.9390833377838135
    6. '   ' → logprob: -4.189083099365234
    7. '<|end|>' → logprob: -4.439083099365234
    8. '<|end|>' → logprob: -6.439083099365234
    9. '):
' → logprob: -7.314083099365234
    10. '           ' → logprob: -7.689083099365234

Token 851: ' Vale' (ID: 55242)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2046234905719757
    2. ' x' → logprob: -2.0796234607696533
    3. '(x' → logprob: -3.0796234607696533
    4. ' (' → logprob: -4.329623699188232
    5. '(int' → logprob: -7.579623699188232
    6. '(' → logprob: -8.579623222351074
    7. 'int' → logprob: -8.704623222351074
    8. ' int' → logprob: -11.079623222351074
    9. 'val' → logprob: -11.829623222351074
    10. 'value' → logprob: -11.954623222351074

Token 852: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.002760771894827485
    2. 'eur' → logprob: -6.627760887145996
    3. 'u' → logprob: -7.002760887145996
    4. '   ' → logprob: -9.002760887145996
    5. 'au' → logprob: -9.127760887145996
    6. '+' → logprob: -9.752760887145996
    7. '       ' → logprob: -10.627760887145996
    8. ' ' → logprob: -10.752760887145996
    9. ' +=' → logprob: -10.752760887145996
    10. 'r' → logprob: -10.752760887145996

Token 853: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 854: ' ajouter' (ID: 78457)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7734534740447998
    2. ' x' → logprob: -1.1484534740447998
    3. '(x' → logprob: -1.8984534740447998
    4. ' (' → logprob: -3.3984534740448
    5. '   ' → logprob: -4.148453712463379
    6. ' ajouter' → logprob: -5.273453712463379
    7. '(' → logprob: -5.398453712463379
    8. '       ' → logprob: -5.523453712463379
    9. 'Ajouter' → logprob: -5.523453712463379
    10. '  ' → logprob: -7.648453712463379

Token 855: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49092379212379456
    2. '
' → logprob: -0.9909237623214722
    3. '        
' → logprob: -5.615923881530762
    4. '\n' → logprob: -6.365923881530762
    5. '<|end|>' → logprob: -6.365923881530762
    6. '
' → logprob: -6.615923881530762
    7. '  
' → logprob: -6.615923881530762
    8. '):
' → logprob: -6.615923881530762
    9. ')' → logprob: -6.865923881530762
    10. '   ' → logprob: -7.115923881530762

Token 857: ' """
' (ID: 7037)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8882853984832764
    2. '       ' → logprob: -1.2632853984832764
    3. '
' → logprob: -2.3882853984832764
    4. ' 
' → logprob: -2.6382853984832764
    5. '"""
' (adapté à ' """
') → logprob: -2.6382853984832764
    6. ')' → logprob: -3.8882853984832764
    7. ')
' → logprob: -4.5132856369018555
    8. '        
' → logprob: -4.6382856369018555
    9. '   ' → logprob: -5.3882856369018555
    10. ' ):
' → logprob: -5.5132856369018555

Token 858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017314712749794126
    2. ' while' → logprob: -9.750173568725586
    3. ' i' → logprob: -10.375173568725586
    4. '	' → logprob: -11.125173568725586
    5. '   ' → logprob: -11.375173568725586
    6. '           ' → logprob: -11.500173568725586
    7. '        
' → logprob: -11.625173568725586
    8. '
' → logprob: -11.875173568725586
    9. 'i' → logprob: -12.250173568725586
    10. 'while' → logprob: -12.250173568725586

Token 859: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0126713952049613
    2. ' while' → logprob: -4.76267147064209
    3. '       ' → logprob: -5.51267147064209
    4. '	while' → logprob: -11.76267147064209
    5. '   ' → logprob: -12.38767147064209
    6. 'n' → logprob: -14.38767147064209
    7. 't' → logprob: -15.13767147064209
    8. '```' → logprob: -16.012670516967773
    9. 'def' → logprob: -16.262670516967773
    10. '      ' → logprob: -16.512670516967773

Token 860: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2519305646419525
    2. 'i' → logprob: -1.501930594444275
    3. '   ' → logprob: -13.876930236816406
    4. '	i' → logprob: -15.001930236816406
    5. '(i' → logprob: -15.626930236816406
    6. ' ' → logprob: -18.126930236816406
    7. ',i' → logprob: -18.251930236816406
    8. '_i' → logprob: -18.251930236816406
    9. '<i' → logprob: -18.626930236816406
    10. '  ' → logprob: -19.001930236816406

Token 861: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6945759057998657
    2. ' <' → logprob: -0.6945759057998657
    3. '<size' → logprob: -6.694575786590576
    4. '<int' → logprob: -10.194576263427734
    5. '<n' → logprob: -10.194576263427734
    6. '<len' → logprob: -10.194576263427734
    7. '<s' → logprob: -10.694576263427734
    8. '<=' → logprob: -11.194576263427734
    9. ' <=' → logprob: -11.194576263427734
    10. ' +=' → logprob: -11.819576263427734

Token 862: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.704273118884885e-07
    2. ' self' → logprob: -14.375000953674316
    3. 'len' → logprob: -18.0
    4. '       ' → logprob: -18.875
    5. '   ' → logprob: -20.0
    6. '[self' → logprob: -20.125
    7. '=self' → logprob: -20.5
    8. '(self' → logprob: -21.25
    9. '	self' → logprob: -21.5
    10. '
' → logprob: -21.75

Token 863: '.size' (ID: 4463)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023298820480704308
    2. 'size' → logprob: -3.773298740386963
    3. '.size' → logprob: -10.023299217224121
    4. '[self' → logprob: -13.523299217224121
    5. '_size' → logprob: -13.773299217224121
    6. 'len' → logprob: -13.773299217224121
    7. ' self' → logprob: -13.773299217224121
    8. 'elf' → logprob: -13.898299217224121
    9. ' size' → logprob: -14.148299217224121
    10. '[size' → logprob: -14.398299217224121

Token 864: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03836987167596817
    2. ':' → logprob: -3.28836989402771
    3. '           ' → logprob: -8.663370132446289
    4. '       ' → logprob: -9.913370132446289
    5. ' and' → logprob: -10.413370132446289
    6. ':
' → logprob: -10.663370132446289
    7. ' :
' → logprob: -10.788370132446289
    8. '):
' → logprob: -10.788370132446289
    9. '=' → logprob: -12.913370132446289
    10. '```' → logprob: -13.663370132446289

Token 865: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005402852548286319
    2. 'self' → logprob: -7.625540256500244
    3. '       ' → logprob: -11.000540733337402
    4. ' self' → logprob: -11.125540733337402
    5. '   ' → logprob: -11.625540733337402
    6. '```' → logprob: -11.625540733337402
    7. '	       ' → logprob: -14.000540733337402
    8. '          ' → logprob: -14.750540733337402
    9. '[self' → logprob: -15.250540733337402
    10. '               ' → logprob: -15.375540733337402

Token 866: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0042007979936897755
    2. '           ' → logprob: -5.5042009353637695
    3. ' self' → logprob: -9.12920093536377
    4. '               ' → logprob: -11.37920093536377
    5. '   ' → logprob: -13.50420093536377
    6. '```' → logprob: -14.87920093536377
    7. '	self' → logprob: -15.50420093536377
    8. '(self' → logprob: -16.004199981689453
    9. '``' → logprob: -16.129199981689453
    10. '[self' → logprob: -16.379199981689453

Token 867: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -7.5649528298527e-05
    2. '.' → logprob: -9.875075340270996
    3. '           ' → logprob: -12.375075340270996
    4. '       ' → logprob: -12.500075340270996
    5. '.table' → logprob: -12.500075340270996
    6. 'tree' → logprob: -12.625075340270996
    7. '.thread' → logprob: -12.875075340270996
    8. '.user' → logprob: -13.375075340270996
    9. '	tree' → logprob: -13.750075340270996
    10. ' .' → logprob: -14.375075340270996

Token 868: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. '```' → logprob: -17.875
    4. 'i' → logprob: -18.25
    5. '[I' → logprob: -18.75
    6. ' [' → logprob: -20.5
    7. '           ' → logprob: -20.625
    8. '[idx' → logprob: -21.0
    9. '\[' → logprob: -21.0
    10. '[index' → logprob: -21.625

Token 869: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006982714403420687
    2. ' +=' → logprob: -5.006982803344727
    3. ']+=' → logprob: -8.256982803344727
    4. '=' → logprob: -12.381982803344727
    5. '       ' → logprob: -13.506982803344727
    6. '           ' → logprob: -13.756982803344727
    7. '   ' → logprob: -15.131982803344727
    8. '```' → logprob: -15.381982803344727
    9. '        ' → logprob: -15.506982803344727
    10. '[' → logprob: -15.756982803344727

Token 870: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00041053479071706533
    2. '=' → logprob: -8.000410079956055
    3. ' +=' → logprob: -9.500410079956055
    4. ' =' → logprob: -15.250410079956055
    5. ']+=' → logprob: -17.375410079956055
    6. '%=' → logprob: -18.750410079956055
    7. '+=(' → logprob: -18.875410079956055
    8. '.=' → logprob: -20.250410079956055
    9. '   ' → logprob: -20.500410079956055
    10. '+' → logprob: -21.500410079956055

Token 871: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.941850526549388e-06
    2. ' x' → logprob: -11.750007629394531
    3. '	x' → logprob: -20.50000762939453
    4. '   ' → logprob: -22.62500762939453
    5. '(x' → logprob: -24.00000762939453
    6. '$x' → logprob: -25.87500762939453
    7. '"x' → logprob: -26.25000762939453
    8. '       ' → logprob: -26.25000762939453
    9. '```' → logprob: -26.37500762939453
    10. ')x' → logprob: -26.62500762939453

Token 872: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.5649528298527e-05
    2. 'x' → logprob: -10.250075340270996
    3. 'i' → logprob: -11.375075340270996
    4. 'mod' → logprob: -11.750075340270996
    5. '       ' → logprob: -12.000075340270996
    6. '               ' → logprob: -12.625075340270996
    7. '
' → logprob: -12.750075340270996
    8. '   ' → logprob: -12.875075340270996
    9. ',' → logprob: -13.500075340270996
    10. '[i' → logprob: -13.875075340270996

Token 873: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014828969724476337
    2. 'i' → logprob: -4.389829158782959
    3. ' i' → logprob: -6.889829158782959
    4. 'x' → logprob: -7.014829158782959
    5. ',' → logprob: -8.6398286819458
    6. ',i' → logprob: -10.0148286819458
    7. '            
' → logprob: -10.0148286819458
    8. '               ' → logprob: -10.3898286819458
    9. '[i' → logprob: -10.7648286819458
    10. '
' → logprob: -11.0148286819458

Token 874: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.06341000646352768
    2. '           ' → logprob: -2.8134100437164307
    3. ' i' → logprob: -6.563409805297852
    4. 'x' → logprob: -10.438409805297852
    5. '   ' → logprob: -15.063409805297852
    6. '               ' → logprob: -15.313409805297852
    7. 'self' → logprob: -16.43840980529785
    8. '            
' → logprob: -16.56340980529785
    9. '(i' → logprob: -16.93840980529785
    10. ',i' → logprob: -17.18840980529785

Token 875: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004118411801755428
    2. ' +=' → logprob: -5.5041184425354
    3. '&' → logprob: -10.254117965698242
    4. '|' → logprob: -13.004117965698242
    5. ']+=' → logprob: -13.504117965698242
    6. '=' → logprob: -14.754117965698242
    7. '   ' → logprob: -15.004117965698242
    8. '+=(' → logprob: -15.754117965698242
    9. '```' → logprob: -16.129117965698242
    10. ' |=' → logprob: -17.004117965698242

Token 876: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.639096970204264e-05
    2. ' i' → logprob: -9.250096321105957
    3. '(i' → logprob: -16.875097274780273
    4. '	i' → logprob: -17.000097274780273
    5. '   ' → logprob: -17.625097274780273
    6. '  ' → logprob: -19.500097274780273
    7. '(' → logprob: -20.000097274780273
    8. ' (' → logprob: -20.750097274780273
    9. '\' → logprob: -21.125097274780273
    10. '{i' → logprob: -21.250097274780273

Token 877: ' &' (ID: 827)
  Prédit: '&i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&i' → logprob: -0.2765856683254242
    2. '&' → logprob: -1.9015856981277466
    3. ' &' → logprob: -2.526585578918457
    4. 'i' → logprob: -4.526585578918457
    5. '[i' → logprob: -6.901585578918457
    6. '(i' → logprob: -9.026585578918457
    7. 's' → logprob: -9.401585578918457
    8. ' i' → logprob: -9.651585578918457
    9. ' ' → logprob: -9.901585578918457
    10. '.i' → logprob: -10.276585578918457

Token 878: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.009262388572096825
    2. '-' → logprob: -4.884262561798096
    3. ' -' → logprob: -6.759262561798096
    4. 'i' → logprob: -7.634262561798096
    5. ' i' → logprob: -11.884262084960938
    6. '(-' → logprob: -12.759262084960938
    7. '-I' → logprob: -14.759262084960938
    8. '	i' → logprob: -15.759262084960938
    9. '-x' → logprob: -16.009262084960938
    10. '-ip' → logprob: -16.259262084960938

Token 879: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.816093228830141e-06
    2. '-i' → logprob: -13.00000286102295
    3. ' i' → logprob: -14.50000286102295
    4. '-' → logprob: -18.250001907348633
    5. '	i' → logprob: -18.375001907348633
    6. '_i' → logprob: -18.750001907348633
    7. ' ' → logprob: -20.000001907348633
    8. '   ' → logprob: -20.125001907348633
    9. 'x' → logprob: -20.625001907348633
    10. '<i' → logprob: -20.750001907348633

Token 880: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 881: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 882: ' Monte' (ID: 35632)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005234121344983578
    2. ' i' → logprob: -5.255234241485596
    3. '	i' → logprob: -16.130233764648438
    4. '           ' → logprob: -16.630233764648438
    5. '(i' → logprob: -17.505233764648438
    6. ' ' → logprob: -17.880233764648438
    7. '   ' → logprob: -18.005233764648438
    8. '1' → logprob: -18.005233764648438
    9. '       ' → logprob: -18.630233764648438
    10. '```' → logprob: -18.880233764648438

Token 883: ' à' (ID: 1221)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4044022858142853
    2. ' i' → logprob: -1.154402256011963
    3. '<|end|>' → logprob: -4.154402256011963
    4. '(i' → logprob: -6.904402256011963
    5. '           ' → logprob: -8.654402732849121
    6. '[i' → logprob: -9.529402732849121
    7. '	i' → logprob: -9.654402732849121
    8. '   ' → logprob: -9.654402732849121
    9. ' ' → logprob: -9.904402732849121
    10. ')' → logprob: -10.279402732849121

Token 884: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019299437990412116
    2. ' i' → logprob: -6.251929759979248
    3. '(i' → logprob: -13.876930236816406
    4. ' ' → logprob: -15.751930236816406
    5. '   ' → logprob: -16.001930236816406
    6. '	i' → logprob: -16.751930236816406
    7. '  ' → logprob: -16.876930236816406
    8. 'the' → logprob: -17.001930236816406
    9. ' (' → logprob: -17.626930236816406
    10. '```' → logprob: -17.751930236816406

Token 885: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038113780319690704
    2. ' i' → logprob: -3.288113832473755
    3. '(i' → logprob: -9.788113594055176
    4. '-i' → logprob: -11.538113594055176
    5. '-' → logprob: -13.163113594055176
    6. '_i' → logprob: -13.538113594055176
    7. '	i' → logprob: -14.163113594055176
    8. '[i' → logprob: -14.413113594055176
    9. '.i' → logprob: -14.788113594055176
    10. ' ' → logprob: -15.038113594055176

Token 886: 'ice' (ID: 603)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7136609554290771
    2. 'ex' → logprob: -0.9636609554290771
    3. 'i' → logprob: -2.088660955429077
    4. 'ices' → logprob: -6.838661193847656
    5. 'dex' → logprob: -6.838661193847656
    6. '(i' → logprob: -7.338661193847656
    7. 'xi' → logprob: -7.463661193847656
    8. 'e' → logprob: -8.338661193847656
    9. 'xes' → logprob: -8.963661193847656
    10. ' i' → logprob: -9.463661193847656

Token 887: ' suivant' (ID: 68705)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5321481227874756
    2. '[i' → logprob: -0.9071481227874756
    3. ' i' → logprob: -5.157148361206055
    4. '(i' → logprob: -6.657148361206055
    5. '[-' → logprob: -6.907148361206055
    6. 'lowest' → logprob: -8.782148361206055
    7. '   ' → logprob: -9.282148361206055
    8. '&i' → logprob: -9.407148361206055
    9. '1' → logprob: -9.532148361206055
    10. '{i' → logprob: -9.657148361206055

Token 888: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 889: ' BIT' (ID: 52185)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003825293097179383
    2. ' i' → logprob: -7.875382423400879
    3. '(i' → logprob: -13.875382423400879
    4. '   ' → logprob: -14.375382423400879
    5. '	i' → logprob: -14.875382423400879
    6. ' ' → logprob: -15.375382423400879
    7. '  ' → logprob: -15.750382423400879
    8. ' (' → logprob: -17.625383377075195
    9. ',i' → logprob: -18.125383377075195
    10. '       ' → logprob: -18.125383377075195

Token 890: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 891: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 892: ' Initial' (ID: 9209)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 893: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.22980087995529175
    2. 'izer' → logprob: -2.3548009395599365
    3. '#' → logprob: -3.1048009395599365
    4. 'e' → logprob: -4.104800701141357
    5. 'ialize' → logprob: -4.479800701141357
    6. 'R' → logprob: -4.729800701141357
    7. 'er' → logprob: -5.229800701141357
    8. 'ized' → logprob: -5.354800701141357
    9. 'ization' → logprob: -5.479800701141357
    10. 'al' → logprob: -5.604800701141357

Token 894: ' de' (ID: 334)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.125198632478714
    2. 'max' → logprob: -2.8751986026763916
    3. ' =' → logprob: -3.0001986026763916
    4. '=' → logprob: -5.000198841094971
    5. '(bit' → logprob: -6.125198841094971
    6. ' bit' → logprob: -7.250198841094971
    7. 'BIT' → logprob: -8.000198364257812
    8. '   ' → logprob: -8.000198364257812
    9. 'fen' → logprob: -8.625198364257812
    10. 'n' → logprob: -8.750198364257812

Token 895: ' la' (ID: 557)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.44241026043891907
    2. ' self' → logprob: -2.0674102306365967
    3. 'BIT' → logprob: -2.0674102306365967
    4. 'bit' → logprob: -3.6924102306365967
    5. ' BIT' → logprob: -3.8174102306365967
    6. ' the' → logprob: -4.817410469055176
    7. 'max' → logprob: -5.067410469055176
    8. '   ' → logprob: -5.192410469055176
    9. 'the' → logprob: -5.442410469055176
    10. ' bit' → logprob: -5.442410469055176

Token 896: ' Binary' (ID: 32672)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.06526178121566772
    2. 'BIT' → logprob: -2.9402618408203125
    3. 'def' → logprob: -5.6902618408203125
    4. 'max' → logprob: -6.3152618408203125
    5. 'size' → logprob: -6.5652618408203125
    6. '(bit' → logprob: -6.8152618408203125
    7. ' bit' → logprob: -7.8152618408203125
    8. '#' → logprob: -8.315261840820312
    9. '   ' → logprob: -8.315261840820312
    10. 'tree' → logprob: -9.065261840820312

Token 897: ' Indexed' (ID: 158810)
  Prédit: 'Indexed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Indexed' → logprob: -0.0037270416505634785
    2. ' Indexed' → logprob: -5.628726959228516
    3. 'indexed' → logprob: -9.503726959228516
    4. ' indexed' → logprob: -11.003726959228516
    5. 'I' → logprob: -11.378726959228516
    6. 'Index' → logprob: -11.378726959228516
    7. '_index' → logprob: -12.503726959228516
    8. '   ' → logprob: -13.503726959228516
    9. '_' → logprob: -14.003726959228516
    10. 'class' → logprob: -14.128726959228516

Token 898: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.0011522440472617745
    2. ' Tree' → logprob: -6.876152038574219
    3. 'tree' → logprob: -9.376152038574219
    4. '_tree' → logprob: -10.626152038574219
    5. ' tree' → logprob: -12.376152038574219
    6. 'T' → logprob: -13.251152038574219
    7. '	Tree' → logprob: -13.751152038574219
    8. 'ree' → logprob: -14.251152038574219
    9. '(Tree' → logprob: -14.626152038574219
    10. 'Tr' → logprob: -15.001152038574219

Token 899: ' pour' (ID: 1930)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.002138720825314522
    2. ' bit' → logprob: -6.877138614654541
    3. '(bit' → logprob: -8.0021390914917
    4. 'fen' → logprob: -8.1271390914917
    5. 'BIT' → logprob: -8.3771390914917
    6. 'max' → logprob: -9.0021390914917
    7. 'bt' → logprob: -10.5021390914917
    8. ' =' → logprob: -10.8771390914917
    9. '=' → logprob: -11.2521390914917
    10. 'ft' → logprob: -11.5021390914917

Token 900: ' le' (ID: 505)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.027639608830213547
    2. 'max' → logprob: -3.777639627456665
    3. 'R' → logprob: -6.527639389038086
    4. 'MOD' → logprob: -6.527639389038086
    5. 'BIT' → logprob: -7.652639389038086
    6. '(len' → logprob: -8.152639389038086
    7. ' len' → logprob: -8.277639389038086
    8. 'size' → logprob: -8.777639389038086
    9. 'MAX' → logprob: -9.652639389038086
    10. 'mod' → logprob: -10.402639389038086

Token 901: ' DP' (ID: 51992)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.21793289482593536
    2. 'BIT' → logprob: -1.842932939529419
    3. 'max' → logprob: -3.717932939529419
    4. 'size' → logprob: -5.34293270111084
    5. 'R' → logprob: -5.84293270111084
    6. 'bit' → logprob: -6.71793270111084
    7. 'MOD' → logprob: -6.84293270111084
    8. '(len' → logprob: -7.59293270111084
    9. 'MAX' → logprob: -8.21793270111084
    10. '=len' → logprob: -8.34293270111084

Token 902: '
' (ID: 198)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.002208900870755315
    2. 'max' → logprob: -6.877208709716797
    3. 'dp' → logprob: -7.627208709716797
    4. '(bit' → logprob: -8.377208709716797
    5. 'BIT' → logprob: -8.627208709716797
    6. ' bit' → logprob: -8.877208709716797
    7. ' =' → logprob: -10.252208709716797
    8. 'fen' → logprob: -10.377208709716797
    9. '=' → logprob: -10.752208709716797
    10. 'bt' → logprob: -10.877208709716797

Token 903: 'dp' (ID: 19037)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0006506018689833581
    2. 'max' → logprob: -7.750650405883789
    3. ' bit' → logprob: -9.000650405883789
    4. 'BIT' → logprob: -9.750650405883789
    5. 'fen' → logprob: -10.875650405883789
    6. '(bit' → logprob: -12.500650405883789
    7. 'dp' → logprob: -12.625650405883789
    8. 'bt' → logprob: -13.250650405883789
    9. '
' → logprob: -13.500650405883789
    10. 'size' → logprob: -14.000650405883789

Token 904: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004157345276325941
    2. '=' → logprob: -5.629157543182373
    3. '_bit' → logprob: -8.004157066345215
    4. '_BIT' → logprob: -9.629157066345215
    5. '_tree' → logprob: -9.754157066345215
    6. '_' → logprob: -10.254157066345215
    7. '_size' → logprob: -10.879157066345215
    8. 'bit' → logprob: -11.254157066345215
    9. 'tree' → logprob: -11.629157066345215
    10. 'size' → logprob: -12.129157066345215

Token 905: ' BIT' (ID: 52185)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -4.310693111619912e-05
    2. ' BIT' → logprob: -10.125042915344238
    3. '	BIT' → logprob: -13.625042915344238
    4. 'B' → logprob: -14.125042915344238
    5. 'BITS' → logprob: -15.250042915344238
    6. 'bit' → logprob: -15.500042915344238
    7. '   ' → logprob: -15.875042915344238
    8. 'BI' → logprob: -16.000043869018555
    9. 'Bit' → logprob: -16.000043869018555
    10. '_BIT' → logprob: -16.375043869018555

Token 906: '(max' (ID: 17178)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.006781926844269037
    2. '(max' → logprob: -5.131782054901123
    3. 'len' → logprob: -7.506782054901123
    4. '(R' → logprob: -8.756781578063965
    5. '[len' → logprob: -9.006781578063965
    6. ' len' → logprob: -11.756781578063965
    7. 'max' → logprob: -11.756781578063965
    8. '(' → logprob: -12.756781578063965
    9. '(L' → logprob: -12.881781578063965
    10. '(size' → logprob: -14.131781578063965

Token 907: '_n' (ID: 2170)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.0025906353257596493
    2. 'R' → logprob: -6.002590656280518
    3. '(max' → logprob: -10.12759017944336
    4. '(r' → logprob: -10.87759017944336
    5. '_R' → logprob: -11.00259017944336
    6. 'max' → logprob: -11.25259017944336
    7. 'len' → logprob: -12.62759017944336
    8. '(len' → logprob: -12.75259017944336
    9. '(set' → logprob: -12.87759017944336
    10. '(' → logprob: -13.25259017944336

Token 908: '=max' (ID: 102952)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.6349983215332031
    2. '(max' → logprob: -1.3849983215332031
    3. '(len' → logprob: -1.7599983215332031
    4. '=max' → logprob: -3.259998321533203
    5. '=len' → logprob: -5.384998321533203
    6. '=' → logprob: -6.259998321533203
    7. 'len' → logprob: -6.884998321533203
    8. ' =' → logprob: -7.634998321533203
    9. 'R' → logprob: -7.884998321533203
    10. ')' → logprob: -8.009998321533203

Token 909: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.009985917247831821
    2. 'R' → logprob: -4.63498592376709
    3. 'len' → logprob: -9.00998592376709
    4. 'max' → logprob: -9.88498592376709
    5. '(max' → logprob: -11.25998592376709
    6. '(r' → logprob: -11.75998592376709
    7. '(len' → logprob: -11.88498592376709
    8. 'L' → logprob: -12.13498592376709
    9. 'N' → logprob: -12.63498592376709
    10. '[R' → logprob: -12.88498592376709

Token 910: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.030103465542197227
    2. '[-' → logprob: -3.6551034450531006
    3. '[' → logprob: -6.28010368347168
    4. ']))' → logprob: -7.03010368347168
    5. ')' → logprob: -7.78010368347168
    6. '])' → logprob: -8.65510368347168
    7. ' ))' → logprob: -9.53010368347168
    8. ')))' → logprob: -9.53010368347168
    9. '[i' → logprob: -9.65510368347168
    10. ')+' → logprob: -9.65510368347168

Token 911: '#' (ID: 2)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.735353946685791
    2. 'L' → logprob: -1.985353946685791
    3. 'ans' → logprob: -2.360353946685791
    4. '#' → logprob: -2.485353946685791
    5. 'res' → logprob: -2.610353946685791
    6. 'result' → logprob: -3.110353946685791
    7. 'for' → logprob: -3.985353946685791
    8. 'answer' → logprob: -4.235353946685791
    9. 'X' → logprob: -4.360353946685791
    10. 'sorted' → logprob: -4.360353946685791

Token 912: ' On' (ID: 2160)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.4602207839488983
    2. '#' → logprob: -1.2102208137512207
    3. 'L' → logprob: -3.3352208137512207
    4. 'pairs' → logprob: -3.9602208137512207
    5. 'res' → logprob: -5.210220813751221
    6. 'ans' → logprob: -6.085220813751221
    7. 'sorted' → logprob: -6.710220813751221
    8. 'result' → logprob: -6.835220813751221
    9. 'dp' → logprob: -7.085220813751221
    10. 'arr' → logprob: -7.460220813751221

Token 913: ' traite' (ID: 180696)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.210495948791504
    2. 'sort' → logprob: -1.460495948791504
    3. '.sort' → logprob: -1.585495948791504
    4. '=' → logprob: -2.460495948791504
    5. 'continue' → logprob: -3.210495948791504
    6. 'L' → logprob: -3.210495948791504
    7. ' =' → logprob: -3.585495948791504
    8. '.append' → logprob: -4.960495948791504
    9. 'sorted' → logprob: -4.960495948791504
    10. 'R' → logprob: -5.710495948791504

Token 914: ' chaque' (ID: 21194)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6504212617874146
    2. 'range' → logprob: -2.025421142578125
    3. 'sorted' → logprob: -2.650421142578125
    4. 'len' → logprob: -2.775421142578125
    5. 'enumer' → logprob: -3.525421142578125
    6. 'zip' → logprob: -3.525421142578125
    7. '(' → logprob: -4.650421142578125
    8. 'L' → logprob: -4.650421142578125
    9. ' for' → logprob: -4.650421142578125
    10. '(L' → logprob: -4.650421142578125

Token 915: ' interval' (ID: 17116)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.42420193552970886
    2. '(_,' → logprob: -2.7992019653320312
    3. '_,' → logprob: -2.9242019653320312
    4. 'i' → logprob: -3.1742019653320312
    5. 'idx' → logprob: -3.1742019653320312
    6. ',' → logprob: -3.6742019653320312
    7. 'l' → logprob: -3.6742019653320312
    8. 'L' → logprob: -4.049201965332031
    9. ' (' → logprob: -4.174201965332031
    10. '(l' → logprob: -4.549201965332031

Token 916: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8901728987693787
    2. 'val' → logprob: -1.5151729583740234
    3. 'al' → logprob: -1.5151729583740234
    4. 'ale' → logprob: -2.1401729583740234
    5. 'e' → logprob: -3.7651729583740234
    6. 'vale' → logprob: -5.265172958374023
    7. 'able' → logprob: -7.640172958374023
    8. 'L' → logprob: -8.140172958374023
    9. ')' → logprob: -8.390172958374023
    10. ']' → logprob: -8.515172958374023

Token 917: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02482732944190502
    2. ' for' → logprob: -5.399827480316162
    3. ',' → logprob: -5.649827480316162
    4. 'L' → logprob: -6.024827480316162
    5. '
' → logprob: -6.149827480316162
    6. 'sorted' → logprob: -6.399827480316162
    7. 'in' → logprob: -6.774827480316162
    8. ' =' → logprob: -6.774827480316162
    9. 'from' → logprob: -7.149827480316162
    10. '=' → logprob: -7.149827480316162

Token 918: 'L' (ID: 43)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.21662175655365
    2. 'idx' → logprob: -1.59162175655365
    3. '),' → logprob: -2.0916218757629395
    4. ',' → logprob: -2.7166218757629395
    5. 'L' → logprob: -2.7166218757629395
    6. ')' → logprob: -3.2166218757629395
    7. 'sorted' → logprob: -3.3416218757629395
    8. 'range' → logprob: -3.4666218757629395
    9. '_,' → logprob: -3.8416218757629395
    10. 'zip' → logprob: -3.8416218757629395

Token 919: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07589145749807358
    2. ',R' → logprob: -2.8258914947509766
    3. 'sorted' → logprob: -5.325891494750977
    4. '),' → logprob: -5.700891494750977
    5. '[i' → logprob: -6.450891494750977
    6. 'sort' → logprob: -7.700891494750977
    7. ' ,' → logprob: -7.950891494750977
    8. 'R' → logprob: -8.075891494750977
    9. '_,' → logprob: -8.075891494750977
    10. '.sort' → logprob: -8.200891494750977

Token 920: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0036585067864507437
    2. ' R' → logprob: -5.628658294677734
    3. ')' → logprob: -10.753658294677734
    4. '0' → logprob: -11.878658294677734
    5. 'sorted' → logprob: -11.878658294677734
    6. '),' → logprob: -12.378658294677734
    7. ' ' → logprob: -12.378658294677734
    8. ',' → logprob: -12.503658294677734
    9. 'r' → logprob: -13.378658294677734
    10. '   ' → logprob: -13.753658294677734

Token 921: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015717117115855217
    2. '),' → logprob: -5.390717029571533
    3. ')
' → logprob: -5.765717029571533
    4. '):' → logprob: -6.015717029571533
    5. ',' → logprob: -6.515717029571533
    6. '):
' → logprob: -6.765717029571533
    7. 'sorted' → logprob: -6.890717029571533
    8. '   ' → logprob: -8.265717506408691
    9. '#' → logprob: -8.515717506408691
    10. ')[' → logprob: -8.765717506408691

Token 922: ' unique' (ID: 5746)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3780103325843811
    2. 'sorted' → logprob: -2.5030102729797363
    3. 'L' → logprob: -3.0030102729797363
    4. '
' → logprob: -3.5030102729797363
    5. 'in' → logprob: -3.7530102729797363
    6. ')' → logprob: -4.003010272979736
    7. ',' → logprob: -4.128010272979736
    8. ' in' → logprob: -4.378010272979736
    9. ' =' → logprob: -4.753010272979736
    10. '=' → logprob: -4.753010272979736

Token 923: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33129093050956726
    2. 'L' → logprob: -1.9562909603118896
    3. '
' → logprob: -2.8312909603118896
    4. ',' → logprob: -3.7062909603118896
    5. 'sorted' → logprob: -3.7062909603118896
    6. ' for' → logprob: -5.3312907218933105
    7. ')' → logprob: -5.4562907218933105
    8. 'from' → logprob: -5.8312907218933105
    9. '#' → logprob: -5.9562907218933105
    10. 'R' → logprob: -6.0812907218933105

Token 924: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9895874261856079
    2. 'key' → logprob: -1.239587426185608
    3. 'sorted' → logprob: -1.489587426185608
    4. ' key' → logprob: -3.8645873069763184
    5. '_' → logprob: -4.114587306976318
    6. '#' → logprob: -4.364587306976318
    7. 'L' → logprob: -4.489587306976318
    8. '_=' → logprob: -4.989587306976318
    9. 'pairs' → logprob: -5.239587306976318
    10. ' for' → logprob: -5.614587306976318

Token 925: ' L' (ID: 451)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.759557843208313
    2. 'ordre' → logprob: -1.384557843208313
    3. 'pairs' → logprob: -2.2595577239990234
    4. ' ordre' → logprob: -3.7595577239990234
    5. 'zip' → logprob: -3.8845577239990234
    6. 'enumer' → logprob: -4.134557723999023
    7. 'ord' → logprob: -4.134557723999023
    8. '#' → logprob: -4.634557723999023
    9. ' pairs' → logprob: -4.884557723999023
    10. 'i' → logprob: -5.009557723999023

Token 926: ' décro' (ID: 176854)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -1.4152112007141113
    2. '=' → logprob: -1.9152112007141113
    3. 'sorted' → logprob: -1.9152112007141113
    4. 'sort' → logprob: -2.2902112007141113
    5. 'for' → logprob: -2.6652112007141113
    6. '_sorted' → logprob: -2.7902112007141113
    7. 'L' → logprob: -2.9152112007141113
    8. ',' → logprob: -2.9152112007141113
    9. ' =' → logprob: -3.6652112007141113
    10. 'in' → logprob: -4.040211200714111

Token 927: 'issant' (ID: 31359)
  Prédit: '=-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=-' → logprob: -0.43867212533950806
    2. 'ending' → logprob: -3.0636720657348633
    3. ',' → logprob: -3.1886720657348633
    4. 's' → logprob: -3.5636720657348633
    5. 'sent' → logprob: -3.5636720657348633
    6. 'sorted' → logprob: -3.5636720657348633
    7. 'es' → logprob: -3.8136720657348633
    8. ',-' → logprob: -3.9386720657348633
    9. 'sort' → logprob: -3.9386720657348633
    10. '=' → logprob: -3.9386720657348633

Token 928: ' (' (ID: 350)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.496882826089859
    2. 'for' → logprob: -1.6218827962875366
    3. '
' → logprob: -3.496882915496826
    4. '=' → logprob: -3.496882915496826
    5. ',' → logprob: -3.621882915496826
    6. '(sorted' → logprob: -3.871882915496826
    7. ')' → logprob: -3.996882915496826
    8. '_sorted' → logprob: -4.621882915496826
    9. 'L' → logprob: -4.871882915496826
    10. 'sort' → logprob: -5.246882915496826

Token 929: 'ordre' (ID: 59831)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7428187131881714
    2. ')
' → logprob: -1.4928187131881714
    3. '),' → logprob: -1.6178187131881714
    4. 'sorted' → logprob: -4.117818832397461
    5. 'reverse' → logprob: -4.117818832397461
    6. ',' → logprob: -4.367818832397461
    7. '):
' → logprob: -4.492818832397461
    8. '=' → logprob: -4.867818832397461
    9. '),
' → logprob: -5.117818832397461
    10. 'L' → logprob: -5.242818832397461

Token 930: ' reverse' (ID: 18199)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3647442162036896
    2. 'sorted' → logprob: -1.7397441864013672
    3. '_sorted' → logprob: -3.239744186401367
    4. '.sort' → logprob: -3.489744186401367
    5. 'sort' → logprob: -3.489744186401367
    6. '=L' → logprob: -5.489744186401367
    7. ',' → logprob: -5.489744186401367
    8. ' =' → logprob: -5.614744186401367
    9. ')' → logprob: -5.739744186401367
    10. 'de' → logprob: -5.989744186401367

Token 931: ')
' (ID: 446)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4514343738555908
    2. '=True' → logprob: -1.3264343738555908
    3. 'sorted' → logprob: -2.826434373855591
    4. '=False' → logprob: -4.951434135437012
    5. '(sorted' → logprob: -4.951434135437012
    6. ',' → logprob: -5.326434135437012
    7. ' =' → logprob: -5.576434135437012
    8. ')' → logprob: -5.701434135437012
    9. 'sort' → logprob: -5.951434135437012
    10. '):' → logprob: -6.201434135437012

Token 932: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16409733891487122
    2. 'L' → logprob: -2.164097309112549
    3. 'interval' → logprob: -4.414097309112549
    4. ' for' → logprob: -5.164097309112549
    5. 'sorted' → logprob: -5.914097309112549
    6. ')' → logprob: -5.914097309112549
    7. 'pairs' → logprob: -6.414097309112549
    8. 'R' → logprob: -6.539097309112549
    9. 'from' → logprob: -6.539097309112549
    10. ']' → logprob: -6.664097309112549

Token 933: ' _,' (ID: 18042)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.482426255941391
    2. ' l' → logprob: -1.2324262857437134
    3. 'i' → logprob: -3.857426166534424
    4. '_,' → logprob: -3.982426166534424
    5. '(l' → logprob: -4.732426166534424
    6. ' i' → logprob: -4.857426166534424
    7. ' (' → logprob: -4.982426166534424
    8. 'idx' → logprob: -5.232426166534424
    9. 'r' → logprob: -5.357426166534424
    10. 'L' → logprob: -5.482426166534424

Token 934: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003184233792126179
    2. ' r' → logprob: -8.25031852722168
    3. 'rr' → logprob: -10.50031852722168
    4. '_r' → logprob: -10.87531852722168
    5. 'rp' → logprob: -12.50031852722168
    6. 'ri' → logprob: -13.12531852722168
    7. 'idx' → logprob: -13.62531852722168
    8. 'rc' → logprob: -14.62531852722168
    9. '_,' → logprob: -14.62531852722168
    10. '(r' → logprob: -14.62531852722168

Token 935: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8727731704711914
    2. ',' → logprob: -0.9977731704711914
    3. 'in' → logprob: -1.6227731704711914
    4. ',r' → logprob: -4.747773170471191
    5. 'r' → logprob: -5.372773170471191
    6. ')' → logprob: -6.372773170471191
    7. ' ,' → logprob: -7.747773170471191
    8. '),' → logprob: -9.247773170471191
    9. 'n' → logprob: -9.497773170471191
    10. '```' → logprob: -9.872773170471191

Token 936: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -5.967624019831419e-05
    2. 'zip' → logprob: -10.250060081481934
    3. ' sorted' → logprob: -10.875060081481934
    4. '   ' → logprob: -12.750060081481934
    5. '(sorted' → logprob: -14.000060081481934
    6. 'reverse' → logprob: -14.875060081481934
    7. '  ' → logprob: -15.125060081481934
    8. ' ' → logprob: -15.375060081481934
    9. 're' → logprob: -15.500060081481934
    10. '
' → logprob: -15.625060081481934

Token 937: '(set' (ID: 25904)
  Prédit: '(zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.166249617934227
    2. '(L' → logprob: -2.1662495136260986
    3. 'zip' → logprob: -3.5412495136260986
    4. '(reverse' → logprob: -5.666249752044678
    5. '((' → logprob: -6.416249752044678
    6. '(range' → logprob: -6.791249752044678
    7. '((-' → logprob: -6.791249752044678
    8. '(re' → logprob: -7.791249752044678
    9. '(
' → logprob: -8.04124927520752
    10. 'enumer' → logprob: -8.16624927520752

Token 938: '(zip' (ID: 87520)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.6425781846046448
    2. '(zip' → logprob: -0.8925781846046448
    3. 'zip' → logprob: -3.892578125
    4. '((' → logprob: -4.267578125
    5. 'L' → logprob: -4.517578125
    6. '(
' → logprob: -4.892578125
    7. '([(' → logprob: -5.267578125
    8. '((-' → logprob: -6.267578125
    9. '(((' → logprob: -6.392578125
    10. '(' → logprob: -7.267578125

Token 939: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.013930774293839931
    2. '(-' → logprob: -4.638930797576904
    3. 'L' → logprob: -5.513930797576904
    4. '([-' → logprob: -9.513930320739746
    5. '((-' → logprob: -10.138930320739746
    6. '(
' → logprob: -11.513930320739746
    7. '(' → logprob: -13.138930320739746
    8. '(-(' → logprob: -13.263930320739746
    9. '-L' → logprob: -13.513930320739746
    10. ')L' → logprob: -13.638930320739746

Token 940: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043380171060562134
    2. '[::-' → logprob: -3.9183802604675293
    3. ',R' → logprob: -5.043380260467529
    4. '),' → logprob: -5.043380260467529
    5. ',-' → logprob: -5.293380260467529
    6. ' ,' → logprob: -6.418380260467529
    7. ',r' → logprob: -6.418380260467529
    8. ',L' → logprob: -7.668380260467529
    9. ')),' → logprob: -8.543379783630371
    10. '   ' → logprob: -9.043379783630371

Token 941: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.005290323402732611
    2. ' R' → logprob: -5.255290508270264
    3. '[-' → logprob: -10.880290031433105
    4. '[' → logprob: -11.505290031433105
    5. ' ' → logprob: -12.130290031433105
    6. '-' → logprob: -12.380290031433105
    7. '-R' → logprob: -12.880290031433105
    8. ')' → logprob: -13.005290031433105
    9. ' -' → logprob: -13.130290031433105
    10. '[R' → logprob: -13.130290031433105

Token 942: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.00404753303155303
    2. '),' → logprob: -5.754047393798828
    3. '))' → logprob: -7.379047393798828
    4. '))[' → logprob: -8.754047393798828
    5. ',' → logprob: -10.379047393798828
    6. ')' → logprob: -10.754047393798828
    7. ' ' → logprob: -11.004047393798828
    8. '[::-' → logprob: -12.004047393798828
    9. '   ' → logprob: -13.254047393798828
    10. '()' → logprob: -13.379047393798828

Token 943: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.022423194721341133
    2. ' reverse' → logprob: -4.022423267364502
    3. 'key' → logprob: -5.522423267364502
    4. ' key' → logprob: -8.272422790527344
    5. '(reverse' → logprob: -11.522422790527344
    6. '   ' → logprob: -14.147422790527344
    7. '_reverse' → logprob: -14.522422790527344
    8. ' ' → logprob: -14.897422790527344
    9. '(key' → logprob: -14.897422790527344
    10. '  ' → logprob: -16.022422790527344

Token 944: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.00515323132276535
    2. '(True' → logprob: -5.380153179168701
    3. '(),' → logprob: -8.25515365600586
    4. '()' → logprob: -9.25515365600586
    5. '=' → logprob: -9.50515365600586
    6. '(' → logprob: -9.75515365600586
    7. '())' → logprob: -11.13015365600586
    8. ',' → logprob: -11.88015365600586
    9. '   ' → logprob: -12.25515365600586
    10. '```' → logprob: -12.50515365600586

Token 945: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030082877725362778
    2. '):
' → logprob: -3.530082941055298
    3. ')' → logprob: -9.280082702636719
    4. '):
' → logprob: -9.280082702636719
    5. ',' → logprob: -9.530082702636719
    6. ':' → logprob: -10.530082702636719
    7. '(r' → logprob: -10.655082702636719
    8. ' ):' → logprob: -11.780082702636719
    9. '   ' → logprob: -12.155082702636719
    10. 'r' → logprob: -13.405082702636719

Token 946: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024198003113269806
    2. 'dp' → logprob: -3.774198055267334
    3. '    
' → logprob: -8.274197578430176
    4. ' dp' → logprob: -8.524197578430176
    5. ':' → logprob: -8.899197578430176
    6. '```' → logprob: -9.524197578430176
    7. '(dp' → logprob: -10.024197578430176
    8. '	dp' → logprob: -10.024197578430176
    9. '#' → logprob: -10.149197578430176
    10. '):
' → logprob: -10.649197578430176

Token 947: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6472406983375549
    2. 'dp' → logprob: -0.8972406983375549
    3. 'val' → logprob: -3.14724063873291
    4. 'current' → logprob: -4.89724063873291
    5. 's' → logprob: -5.27224063873291
    6. 'cur' → logprob: -6.02224063873291
    7. 'sum' → logprob: -6.02224063873291
    8. ' dp' → logprob: -6.27224063873291
    9. 'curr' → logprob: -6.64724063873291
    10. 'ways' → logprob: -6.64724063873291

Token 948: ' Calcul' (ID: 57243)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2895011603832245
    2. 'dp' → logprob: -1.9145011901855469
    3. '   ' → logprob: -3.039501190185547
    4. 'cur' → logprob: -4.164501190185547
    5. 'current' → logprob: -4.289501190185547
    6. 'ways' → logprob: -4.789501190185547
    7. 'curr' → logprob: -4.789501190185547
    8. 's' → logprob: -5.664501190185547
    9. 'res' → logprob: -6.789501190185547
    10. 'sum' → logprob: -6.789501190185547

Token 949: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21619506180286407
    2. 'dp' → logprob: -1.9661951065063477
    3. '=' → logprob: -4.091195106506348
    4. ' =' → logprob: -4.466195106506348
    5. 'val' → logprob: -5.216195106506348
    6. '(dp' → logprob: -5.466195106506348
    7. 's' → logprob: -5.591195106506348
    8. 'of' → logprob: -5.966195106506348
    9. 'res' → logprob: -6.591195106506348
    10. 'cur' → logprob: -6.716195106506348

Token 950: ' nombre' (ID: 9733)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6319383978843689
    2. 'cur' → logprob: -2.1319384574890137
    3. 'ways' → logprob: -2.3819384574890137
    4. 'current' → logprob: -2.6319384574890137
    5. 'dp' → logprob: -2.8819384574890137
    6. 's' → logprob: -3.3819384574890137
    7. 'curr' → logprob: -3.6319384574890137
    8. 'total' → logprob: -3.7569384574890137
    9. 'res' → logprob: -4.006938457489014
    10. 'count' → logprob: -5.131938457489014

Token 951: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26364827156066895
    2. 'de' → logprob: -1.888648271560669
    3. ' de' → logprob: -3.763648271560669
    4. 'dp' → logprob: -4.13864803314209
    5. 'ways' → logprob: -4.63864803314209
    6. '    ' → logprob: -5.13864803314209
    7. 'of' → logprob: -5.63864803314209
    8. '_de' → logprob: -5.63864803314209
    9. 'd' → logprob: -5.88864803314209
    10. ' ways' → logprob: -6.26364803314209

Token 952: ' façons' (ID: 165958)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.027936184778809547
    2. 'fa' → logprob: -4.152935981750488
    3. 'man' → logprob: -4.902935981750488
    4. 'dp' → logprob: -6.527935981750488
    5. 's' → logprob: -7.277935981750488
    6. 'formes' → logprob: -7.652935981750488
    7. ' façons' → logprob: -8.152935981750488
    8. ' ways' → logprob: -8.402935981750488
    9. 'way' → logprob: -8.652935981750488
    10. 'che' → logprob: -8.777935981750488

Token 953: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006154527422040701
    2. 'dp' → logprob: -5.756154537200928
    3. 'de' → logprob: -6.381154537200928
    4. 'ways' → logprob: -8.13115406036377
    5. 'd' → logprob: -8.25615406036377
    6. '=' → logprob: -8.75615406036377
    7. ' =' → logprob: -9.38115406036377
    8. '  ' → logprob: -10.00615406036377
    9. ' de' → logprob: -10.13115406036377
    10. ':' → logprob: -10.25615406036377

Token 954: ' constit' (ID: 14227)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09389238804578781
    2. 'cho' → logprob: -3.0938923358917236
    3. 'faire' → logprob: -3.7188923358917236
    4. 'aj' → logprob: -5.093892574310303
    5. ' choisir' → logprob: -5.468892574310303
    6. ' dp' → logprob: -5.968892574310303
    7. 'sé' → logprob: -6.468892574310303
    8. 'select' → logprob: -6.468892574310303
    9. 'contin' → logprob: -7.468892574310303
    10. 'comb' → logprob: -7.468892574310303

Token 955: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -3.128163257315464e-07
    2. 'u' → logprob: -16.75
    3. 'ue' → logprob: -17.25
    4. 'uter' → logprob: -17.75
    5. 'ues' → logprob: -18.625
    6. '=' → logprob: -18.875
    7. 'uez' → logprob: -19.0
    8. '#' → logprob: -19.125
    9. 'UER' → logprob: -19.75
    10. '   ' → logprob: -19.875

Token 956: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007237432990223169
    2. 'la' → logprob: -6.257237434387207
    3. 'ways' → logprob: -6.757237434387207
    4. ' dp' → logprob: -6.882237434387207
    5. 'le' → logprob: -7.507237434387207
    6. 's' → logprob: -7.757237434387207
    7. '(dp' → logprob: -8.007237434387207
    8. '1' → logprob: -8.007237434387207
    9. ' ways' → logprob: -8.507237434387207
    10. 'un' → logprob: -8.632237434387207

Token 957: ' suite' (ID: 13800)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8110255599021912
    2. 'comb' → logprob: -1.436025619506836
    3. 'man' → logprob: -2.311025619506836
    4. 'fa' → logprob: -2.561025619506836
    5. 'val' → logprob: -3.311025619506836
    6. 'suite' → logprob: -3.561025619506836
    7. 'dp' → logprob: -4.186025619506836
    8. 'som' → logprob: -4.436025619506836
    9. 'sub' → logprob: -4.436025619506836
    10. 'che' → logprob: -5.061025619506836

Token 958: ' fin' (ID: 2131)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5453670620918274
    2. 'dp' → logprob: -0.9203670620918274
    3. 'de' → logprob: -4.920367240905762
    4. 'val' → logprob: -5.920367240905762
    5. '+' → logprob: -6.045367240905762
    6. '=' → logprob: -6.420367240905762
    7. 'd' → logprob: -6.670367240905762
    8. '(dp' → logprob: -6.795367240905762
    9. 'possible' → logprob: -7.170367240905762
    10. 'ways' → logprob: -7.295367240905762

Token 959: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.028602764010429382
    2. 'ant' → logprob: -4.528602600097656
    3. 't' → logprob: -5.153602600097656
    4. 'issante' → logprob: -5.778602600097656
    5. 'ss' → logprob: -5.903602600097656
    6. 'd' → logprob: -6.653602600097656
    7. 'e' → logprob: -6.653602600097656
    8. '   ' → logprob: -7.028602600097656
    9. 'r' → logprob: -8.278602600097656
    10. 'tant' → logprob: -8.278602600097656

Token 960: ' avant' (ID: 13339)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.1751863807439804
    2. 'par' → logprob: -2.3001863956451416
    3. 'au' → logprob: -3.4251863956451416
    4. ' à' → logprob: -4.8001861572265625
    5. 'r' → logprob: -5.1751861572265625
    6. 'sur' → logprob: -5.1751861572265625
    7. '   ' → logprob: -5.8001861572265625
    8. ' par' → logprob: -6.5501861572265625
    9. 'avec' → logprob: -6.8001861572265625
    10. 'at' → logprob: -7.4251861572265625

Token 961: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00027456742827780545
    2. '   ' → logprob: -8.750274658203125
    3. ' r' → logprob: -9.125274658203125
    4. '(r' → logprob: -13.500274658203125
    5. '=' → logprob: -13.625274658203125
    6. 'l' → logprob: -13.750274658203125
    7. '=r' → logprob: -14.125274658203125
    8. 'or' → logprob: -14.875274658203125
    9. ' =' → logprob: -15.125274658203125
    10. 'ou' → logprob: -15.125274658203125

Token 962: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006586763076484203
    2. 'dp' → logprob: -6.00658655166626
    3. ' =' → logprob: -6.50658655166626
    4. '=' → logprob: -7.13158655166626
    5. ':' → logprob: -7.75658655166626
    6. ',' → logprob: -7.88158655166626
    7. '(dp' → logprob: -8.381587028503418
    8. '
' → logprob: -9.131587028503418
    9. 's' → logprob: -9.631587028503418
    10. 'val' → logprob: -9.756587028503418

Token 963: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4948732852935791
    2. 'dp' → logprob: -0.9948732852935791
    3. 'ways' → logprob: -4.494873046875
    4. 'count' → logprob: -6.119873046875
    5. 'cnt' → logprob: -6.494873046875
    6. 'res' → logprob: -6.869873046875
    7. 'val' → logprob: -6.869873046875
    8. 's' → logprob: -6.869873046875
    9. 'cur' → logprob: -8.119873046875
    10. ':' → logprob: -8.244873046875

Token 964: ' x' (ID: 1215)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9149991869926453
    2. 'ways' → logprob: -0.9149991869926453
    3. 'cur' → logprob: -2.28999924659729
    4. 'count' → logprob: -3.78999924659729
    5. 'res' → logprob: -4.414999008178711
    6. 'curr' → logprob: -4.414999008178711
    7. 'cnt' → logprob: -4.664999008178711
    8. 'current' → logprob: -4.789999008178711
    9. '   ' → logprob: -4.789999008178711
    10. 'dp' → logprob: -5.164999008178711

Token 965: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3488270938396454
    2. '=' → logprob: -1.2238271236419678
    3. '_val' → logprob: -9.223827362060547
    4. '_sum' → logprob: -9.598827362060547
    5. 's' → logprob: -9.723827362060547
    6. 'sum' → logprob: -10.348827362060547
    7. 'dp' → logprob: -10.723827362060547
    8. '   ' → logprob: -10.848827362060547
    9. '_' → logprob: -11.223827362060547
    10. '_count' → logprob: -11.723827362060547

Token 966: ' dp' (ID: 21546)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.6048129200935364
    2. 'dp' → logprob: -0.9798129200935364
    3. '(' → logprob: -2.7298128604888916
    4. '1' → logprob: -4.354813098907471
    5. ' (' → logprob: -9.229812622070312
    6. '((' → logprob: -9.604812622070312
    7. ' dp' → logprob: -10.229812622070312
    8. '(mod' → logprob: -10.354812622070312
    9. '(d' → logprob: -10.479812622070312
    10. '(M' → logprob: -10.604812622070312

Token 967: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0001443035143893212
    2. '.' → logprob: -9.000144004821777
    3. ' .' → logprob: -11.750144004821777
    4. 'get' → logprob: -11.750144004821777
    5. '.add' → logprob: -12.625144004821777
    6. '`.' → logprob: -15.500144004821777
    7. '_get' → logprob: -15.625144004821777
    8. '..' → logprob: -15.750144004821777
    9. 's' → logprob: -15.750144004821777
    10. '   ' → logprob: -15.875144004821777

Token 968: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.128163257315464e-07
    2. 'sum' → logprob: -15.25
    3. '_s' → logprob: -17.5
    4. '_' → logprob: -17.875
    5. ' sum' → logprob: -18.625
    6. 's' → logprob: -18.875
    7. '\' → logprob: -19.75
    8. '_add' → logprob: -20.125
    9. '(sum' → logprob: -20.25
    10. '_SUM' → logprob: -20.25

Token 969: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.6776029699249193e-05
    2. '(' → logprob: -11.50002670288086
    3. '(dp' → logprob: -11.62502670288086
    4. '(R' → logprob: -12.25002670288086
    5. 'r' → logprob: -13.87502670288086
    6. '(len' → logprob: -14.87502670288086
    7. '(max' → logprob: -14.87502670288086
    8. '(x' → logprob: -14.87502670288086
    9. '((' → logprob: -15.62502670288086
    10. '[r' → logprob: -16.12502670288086

Token 970: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20167313516139984
    2. '-' → logprob: -1.701673150062561
    3. ')' → logprob: -8.32667350769043
    4. '()-' → logprob: -11.95167350769043
    5. '-)' → logprob: -12.70167350769043
    6. ')-' → logprob: -13.57667350769043
    7. ' )' → logprob: -13.57667350769043
    8. '1' → logprob: -13.82667350769043
    9. '   ' → logprob: -13.82667350769043
    10. 'r' → logprob: -14.45167350769043

Token 971: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. ')' → logprob: -17.375001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '
' → logprob: -18.750001907348633
    6. '```' → logprob: -19.000001907348633
    7. '  ' → logprob: -19.562501907348633
    8. '<|end|>' → logprob: -20.312501907348633
    9. '

' → logprob: -20.437501907348633
    10. '۱' → logprob: -21.000001907348633

Token 972: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.375001907348633
    4. ')' → logprob: -19.000001907348633
    5. '```' → logprob: -19.125001907348633
    6. '<|end|>' → logprob: -19.375001907348633
    7. '  ' → logprob: -19.875001907348633
    8. '
' → logprob: -20.500001907348633
    9. '۱' → logprob: -20.937501907348633
    10. '१' → logprob: -21.312501907348633

Token 973: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003957293927669525
    2. '+' → logprob: -6.503957271575928
    3. ')+' → logprob: -6.628957271575928
    4. ')
' → logprob: -7.003957271575928
    5. ' +' → logprob: -8.753957748413086
    6. ' )' → logprob: -10.128957748413086
    7. '   ' → logprob: -11.753957748413086
    8. '```' → logprob: -12.878957748413086
    9. ')
' → logprob: -13.128957748413086
    10. ')*' → logprob: -13.628957748413086

Token 974: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.308353453874588
    2. '   ' → logprob: -1.9333534240722656
    3. '
' → logprob: -2.9333534240722656
    4. ' +' → logprob: -3.1833534240722656
    5. '+
' → logprob: -4.433353424072266
    6. '%' → logprob: -4.808353424072266
    7. '    
' → logprob: -6.308353424072266
    8. 'dp' → logprob: -6.683353424072266
    9. ')' → logprob: -7.308353424072266
    10. ' 
' → logprob: -7.808353424072266

Token 975: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -15.625001907348633
    4. '<|end|>' → logprob: -17.500001907348633
    5. '```' → logprob: -18.000001907348633
    6. '+' → logprob: -18.875001907348633
    7. '  ' → logprob: -19.125001907348633
    8. '0' → logprob: -19.125001907348633
    9. '
' → logprob: -19.375001907348633
    10. 'import' → logprob: -20.000001907348633

Token 976: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.625007629394531
    4. '<|end|>' → logprob: -16.50000762939453
    5. '  ' → logprob: -17.75000762939453
    6. 'mod' → logprob: -18.12500762939453
    7. '```' → logprob: -18.12500762939453
    8. '
' → logprob: -18.25000762939453
    9. '0' → logprob: -18.50000762939453
    10. '...' → logprob: -19.25000762939453

Token 977: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16532598435878754
    2. '   ' → logprob: -2.040325880050659
    3. '    
' → logprob: -4.290326118469238
    4. 'dp' → logprob: -5.790326118469238
    5. '  
' → logprob: -6.165326118469238
    6. '   
' → logprob: -6.915326118469238
    7. '	dp' → logprob: -7.415326118469238
    8. '
' → logprob: -7.540326118469238
    9. ')' → logprob: -7.915326118469238
    10. '(dp' → logprob: -8.290326118469238

Token 978: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5411734580993652
    2. '
' → logprob: -0.9161734580993652
    3. '(dp' → logprob: -5.791173458099365
    4. '	dp' → logprob: -5.791173458099365
    5. '   ' → logprob: -5.916173458099365
    6. ')' → logprob: -6.291173458099365
    7. '    
' → logprob: -6.541173458099365
    8. ' dp' → logprob: -6.541173458099365
    9. '%' → logprob: -6.916173458099365
    10. '  
' → logprob: -7.041173458099365

Token 979: ' +' (ID: 659)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2659168541431427
    2. 'x' → logprob: -1.5159168243408203
    3. ' dp' → logprob: -4.51591682434082
    4. ' x' → logprob: -6.89091682434082
    5. 'mod' → logprob: -7.26591682434082
    6. ')' → logprob: -7.64091682434082
    7. '%' → logprob: -8.51591682434082
    8. '   ' → logprob: -8.64091682434082
    9. '
' → logprob: -9.14091682434082
    10. '(dp' → logprob: -9.51591682434082

Token 980: '1' (ID: 16)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 981: ' pour' (ID: 1930)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3924006521701813
    2. '
' → logprob: -1.8924006223678589
    3. ')' → logprob: -2.2674007415771484
    4. ' %' → logprob: -2.8924007415771484
    5. '   ' → logprob: -5.392400741577148
    6. ')%' → logprob: -5.517400741577148
    7. '<|end|>' → logprob: -5.517400741577148
    8. '    
' → logprob: -7.142400741577148
    9. '  
' → logprob: -8.392400741577148
    10. '%
' → logprob: -8.517400741577148

Token 982: ' compter' (ID: 81694)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2885117530822754
    2. 'l' → logprob: -2.5385117530822754
    3. ' la' → logprob: -2.5385117530822754
    4. 'la' → logprob: -3.5385117530822754
    5. ' l' → logprob: -4.038511753082275
    6. 'x' → logprob: -4.788511753082275
    7. 'le' → logprob: -4.788511753082275
    8. ' le' → logprob: -5.288511753082275
    9. ' ' → logprob: -6.038511753082275
    10. 'prendre' → logprob: -6.163511753082275

Token 983: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03401598334312439
    2. '<|end|>' → logprob: -4.159016132354736
    3. 'x' → logprob: -4.909016132354736
    4. ' ' → logprob: -5.909016132354736
    5. ' la' → logprob: -6.409016132354736
    6. 'the' → logprob: -6.784016132354736
    7. 'l' → logprob: -6.909016132354736
    8. ' x' → logprob: -7.034016132354736
    9. 'mod' → logprob: -7.534016132354736
    10. 'le' → logprob: -7.659016132354736

Token 984: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5132102966308594
    2. 'e' → logprob: -2.0132102966308594
    3. ''espace' → logprob: -2.5132102966308594
    4. ''inter' → logprob: -2.7632102966308594
    5. ''ensemble' → logprob: -3.8882102966308594
    6. ''' → logprob: -4.013210296630859
    7. '')' → logprob: -4.388210296630859
    8. ''instant' → logprob: -4.513210296630859
    9. 'es' → logprob: -4.763210296630859
    10. ''esp' → logprob: -4.888210296630859

Token 985: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.010716465301811695
    2. 'inter' → logprob: -5.510716438293457
    3. ''' → logprob: -6.635716438293457
    4. 'ensemble' → logprob: -6.760716438293457
    5. 'élé' → logprob: -6.885716438293457
    6. ' interval' → logprob: -7.260716438293457
    7. ''ensemble' → logprob: -7.385716438293457
    8. ''inter' → logprob: -7.510716438293457
    9. 'option' → logprob: -8.510716438293457
    10. 'empty' → logprob: -8.760716438293457

Token 986: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6971471905708313
    2. 'le' → logprob: -0.9471471905708313
    3. 'val' → logprob: -3.0721471309661865
    4. 'ale' → logprob: -3.8221471309661865
    5. 'v' → logprob: -4.197147369384766
    6. '#' → logprob: -4.822147369384766
    7. 'al' → logprob: -4.947147369384766
    8. 'vale' → logprob: -5.322147369384766
    9. 'alle' → logprob: -5.947147369384766
    10. 'aire' → logprob: -6.447147369384766

Token 987: ' actuel' (ID: 113646)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8123162984848022
    2. ')' → logprob: -1.1873162984848022
    3. '(r' → logprob: -1.9373162984848022
    4. ' r' → logprob: -3.562316417694092
    5. ' at' → logprob: -4.062316417694092
    6. '[r' → logprob: -4.187316417694092
    7. '   ' → logprob: -4.562316417694092
    8. 'x' → logprob: -5.562316417694092
    9. ',' → logprob: -5.687316417694092
    10. 'at' → logprob: -6.312316417694092

Token 988: ' lui' (ID: 10623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02039542980492115
    2. 'dp' → logprob: -4.145395278930664
    3. '	dp' → logprob: -6.395395278930664
    4. ' dp' → logprob: -6.895395278930664
    5. '    
' → logprob: -7.020395278930664
    6. '(dp' → logprob: -8.145395278930664
    7. '
' → logprob: -8.645395278930664
    8. ')' → logprob: -9.770395278930664
    9. '.dp' → logprob: -10.020395278930664
    10. '  
' → logprob: -10.020395278930664

Token 989: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -5.264322317088954e-05
    2. 'm' → logprob: -10.875052452087402
    3. '-' → logprob: -11.000052452087402
    4. ' même' → logprob: -11.750052452087402
    5. '-m' → logprob: -11.875052452087402
    6. '-mêmes' → logprob: -14.000052452087402
    7. '```' → logprob: -14.625052452087402
    8. 'self' → logprob: -14.750052452087402
    9. 'Même' → logprob: -15.125052452087402
    10. '   ' → logprob: -16.75005340576172

Token 990: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9537257552146912
    2. '
' → logprob: -1.328725814819336
    3. '   ' → logprob: -1.328725814819336
    4. '    
' → logprob: -3.078725814819336
    5. '	dp' → logprob: -4.328725814819336
    6. '(dp' → logprob: -5.078725814819336
    7. '  
' → logprob: -5.078725814819336
    8. ' dp' → logprob: -5.578725814819336
    9. '   
' → logprob: -5.703725814819336
    10. ')' → logprob: -5.953725814819336

Token 991: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.028375454246997833
    2. '   ' → logprob: -3.6533753871917725
    3. '	dp' → logprob: -6.903375625610352
    4. ' dp' → logprob: -7.403375625610352
    5. '(dp' → logprob: -8.278375625610352
    6. '.dp' → logprob: -9.153375625610352
    7. ')' → logprob: -10.153375625610352
    8. '    
' → logprob: -10.903375625610352
    9. '_dp' → logprob: -11.278375625610352
    10. '.' → logprob: -11.528375625610352

Token 992: ' x' (ID: 1215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009607452899217606
    2. 'x' (adapté à ' x') → logprob: -4.884607315063477
    3. '   ' → logprob: -6.509607315063477
    4. ' dp' → logprob: -7.634607315063477
    5. '(dp' → logprob: -11.759607315063477
    6. '	dp' → logprob: -12.009607315063477
    7. '.dp' → logprob: -12.259607315063477
    8. '_dp' → logprob: -12.634607315063477
    9. '```' → logprob: -14.009607315063477
    10. ' x' → logprob: -14.509607315063477

Token 993: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.28295689821243286
    2. ' %=' → logprob: -1.532956838607788
    3. '=' → logprob: -3.782956838607788
    4. '%' → logprob: -4.907957077026367
    5. ' =' → logprob: -8.282957077026367
    6. ' %' → logprob: -9.782957077026367
    7. ')' → logprob: -11.157957077026367
    8. 'mod' → logprob: -11.157957077026367
    9. ' ' → logprob: -11.407957077026367
    10. ',' → logprob: -11.657957077026367

Token 994: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.7697225252486533e-06
    2. ' MOD' → logprob: -12.500003814697266
    3. '_MOD' → logprob: -21.500003814697266
    4. '.MOD' → logprob: -23.250003814697266
    5. 'MO' → logprob: -24.500003814697266
    6. 'mod' → logprob: -24.875003814697266
    7. ' ' → logprob: -25.000003814697266
    8. '   ' → logprob: -25.750003814697266
    9. '(M' → logprob: -26.375003814697266
    10. 'MD' → logprob: -26.500003814697266

Token 995: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4892640709877014
    2. '
' → logprob: -1.6142640113830566
    3. '   ' → logprob: -1.7392640113830566
    4. ' dp' → logprob: -5.364264011383057
    5. '    
' → logprob: -5.364264011383057
    6. '(dp' → logprob: -6.864264011383057
    7. '	dp' → logprob: -6.989264011383057
    8. '  
' → logprob: -7.739264011383057
    9. '   
' → logprob: -8.864264488220215
    10. '.dp' → logprob: -9.114264488220215

Token 996: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2020118683576584
    2. '   ' → logprob: -1.7020118236541748
    3. ' dp' → logprob: -7.577012062072754
    4. '	dp' → logprob: -9.702012062072754
    5. '    
' → logprob: -11.827012062072754
    6. '  ' → logprob: -12.327012062072754
    7. '```' → logprob: -12.327012062072754
    8. '(dp' → logprob: -12.452012062072754
    9. ' ' → logprob: -13.077012062072754
    10. '_dp' → logprob: -14.452012062072754

Token 997: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00010282796574756503
    2. '   ' → logprob: -9.500102996826172
    3. ' dp' → logprob: -10.500102996826172
    4. '	dp' → logprob: -15.625102996826172
    5. '(dp' → logprob: -16.750102996826172
    6. '```' → logprob: -17.375102996826172
    7. '.dp' → logprob: -17.500102996826172
    8. '
' → logprob: -17.500102996826172
    9. '    
' → logprob: -18.250102996826172
    10. '_dp' → logprob: -18.750102996826172

Token 998: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.644463479053229e-05
    2. '.' → logprob: -10.000046730041504
    3. ' .' → logprob: -14.000046730041504
    4. '​.' → logprob: -16.625045776367188
    5. ').' → logprob: -17.000045776367188
    6. '}.' → logprob: -17.625045776367188
    7. '`.' → logprob: -17.750045776367188
    8. 'add' → logprob: -18.000045776367188
    9. '\.' → logprob: -18.250045776367188
    10. '.Add' → logprob: -18.500045776367188

Token 999: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.87500286102295
    3. '(
' → logprob: -15.25000286102295
    4. 'r' → logprob: -17.500003814697266
    5. '(R' → logprob: -19.125003814697266
    6. ' (' → logprob: -19.875003814697266
    7. '((' → logprob: -20.750003814697266
    8. '[r' → logprob: -21.000003814697266
    9. '(re' → logprob: -21.125003814697266
    10. '(x' → logprob: -21.625003814697266

Token 1000: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007447104435414076
    2. ',x' → logprob: -7.250744819641113
    3. ' ,' → logprob: -10.625744819641113
    4. 'x' → logprob: -11.750744819641113
    5. ',
' → logprob: -13.875744819641113
    6. '(x' → logprob: -14.000744819641113
    7. ' x' → logprob: -15.000744819641113
    8. ')' → logprob: -15.625744819641113
    9. ',r' → logprob: -16.375743865966797
    10. '(' → logprob: -16.875743865966797

Token 1001: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024756586644798517
    2. ' x' → logprob: -6.002475738525391
    3. '	x' → logprob: -19.62747573852539
    4. ')x' → logprob: -21.25247573852539
    5. '   ' → logprob: -21.50247573852539
    6. '%x' → logprob: -22.25247573852539
    7. '(x' → logprob: -23.25247573852539
    8. '$x' → logprob: -23.62747573852539
    9. '"x' → logprob: -24.00247573852539
    10. '{x' → logprob: -24.62747573852539

Token 1002: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020509003661572933
    2. ' )' → logprob: -9.375205039978027
    3. '<|end|>' → logprob: -9.750205039978027
    4. ')
' → logprob: -10.000205039978027
    5. ')return' → logprob: -13.000205039978027
    6. '#' → logprob: -13.000205039978027
    7. ')#' → logprob: -13.250205039978027
    8. ')%' → logprob: -13.250205039978027
    9. '<|end|>' → logprob: -13.375205039978027
    10. '%' → logprob: -13.875205039978027

Token 1003: '                ' (ID: 408)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020674681290984154
    2. 'result' → logprob: -6.877067565917969
    3. '
' → logprob: -7.502067565917969
    4. '#' → logprob: -8.252067565917969
    5. 'total' → logprob: -9.377067565917969
    6. '  
' → logprob: -9.502067565917969
    7. '    
' → logprob: -10.502067565917969
    8. '

' → logprob: -12.127067565917969
    9. ' print' → logprob: -12.502067565917969
    10. '#print' → logprob: -12.502067565917969

Token 1004: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21933750808238983
    2. '
' → logprob: -1.9693374633789062
    3. ')' → logprob: -3.5943374633789062
    4. '<|end|>' → logprob: -4.094337463378906
    5. '#' (adapté à ' #') → logprob: -4.469337463378906
    6. '```' → logprob: -7.969337463378906
    7. '#print' → logprob: -8.219337463378906
    8. '  
' → logprob: -8.344337463378906
    9. ' print' → logprob: -8.594337463378906
    10. 'x' → logprob: -8.844337463378906

Token 1005: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1006: ' ajoute' (ID: 91611)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.23418709635734558
    2. '.add' → logprob: -1.609187126159668
    3. ' add' → logprob: -4.984187126159668
    4. 'continue' → logprob: -7.359187126159668
    5. 'aj' → logprob: -7.984187126159668
    6. ')add' → logprob: -7.984187126159668
    7. '.' → logprob: -8.484187126159668
    8. ')' → logprob: -9.484187126159668
    9. ':add' → logprob: -9.484187126159668
    10. '   ' → logprob: -9.734187126159668

Token 1007: ' cette' (ID: 7696)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.47423186898231506
    2. 'r' → logprob: -0.9742318391799927
    3. 'x' → logprob: -9.474231719970703
    4. ' r' → logprob: -10.099231719970703
    5. '(x' → logprob: -10.974231719970703
    6. '(' → logprob: -11.349231719970703
    7. '   ' → logprob: -12.974231719970703
    8. 'dp' → logprob: -13.474231719970703
    9. ' (' → logprob: -13.599231719970703
    10. '(
' → logprob: -13.849231719970703

Token 1008: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8585478067398071
    2. ' valeur' → logprob: -1.3585478067398071
    3. 'x' → logprob: -1.6085478067398071
    4. ' x' → logprob: -2.3585476875305176
    5. 'value' → logprob: -4.358547687530518
    6. ' val' → logprob: -5.358547687530518
    7. '
' → logprob: -6.108547687530518
    8. ' contribution' → logprob: -6.608547687530518
    9. ' value' → logprob: -6.733547687530518
    10. ' vale' → logprob: -7.233547687530518

Token 1009: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1010: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.451116051815916e-05
    2. ' r' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.000024795532227
    4. 'dp' → logprob: -17.000024795532227
    5. '
' → logprob: -18.125024795532227
    6. ' ' → logprob: -18.375024795532227
    7. '	r' → logprob: -19.125024795532227
    8. 'rp' → logprob: -19.750024795532227
    9. '```' → logprob: -20.125024795532227
    10. '  ' → logprob: -20.375024795532227

Token 1011: ' position' (ID: 4010)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07033363729715347
    2. 'r' → logprob: -2.69533371925354
    3. 'position' → logprob: -8.445333480834961
    4. ' dp' → logprob: -9.070333480834961
    5. 'rp' → logprob: -10.070333480834961
    6. 'p' → logprob: -11.445333480834961
    7. ' position' → logprob: -13.195333480834961
    8. ' r' → logprob: -13.320333480834961
    9. 'pt' → logprob: -13.570333480834961
    10. 'pos' → logprob: -13.695333480834961

Token 1012: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000194361709873192
    2. '(r' → logprob: -8.750194549560547
    3. ' r' → logprob: -10.250194549560547
    4. '   ' → logprob: -14.500194549560547
    5. ' ' → logprob: -17.125194549560547
    6. '[r' → logprob: -17.875194549560547
    7. '	r' → logprob: -18.375194549560547
    8. '_r' → logprob: -18.375194549560547
    9. '```' → logprob: -18.625194549560547
    10. '`' → logprob: -18.750194549560547

Token 1013: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016219941899180412
    2. '
' → logprob: -4.1412200927734375
    3. '<|end|>' → logprob: -10.016220092773438
    4. '

' → logprob: -10.391220092773438
    5. '    
' → logprob: -10.516220092773438
    6. '  
' → logprob: -10.516220092773438
    7. ')' → logprob: -11.016220092773438
    8. '#' → logprob: -11.266220092773438
    9. ' print' → logprob: -11.516220092773438
    10. '```' → logprob: -12.391220092773438

Token 1014: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004635184071958065
    2. '
' → logprob: -6.004635334014893
    3. 'result' → logprob: -6.254635334014893
    4. 'total' → logprob: -8.879634857177734
    5. '    
' → logprob: -10.629634857177734
    6. '

' → logprob: -10.754634857177734
    7. '  
' → logprob: -11.129634857177734
    8. 'res' → logprob: -11.379634857177734
    9. '#' → logprob: -11.504634857177734
    10. '```' → logprob: -12.754634857177734

Token 1015: ' Le' (ID: 2018)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02723957970738411
    2. 'result' → logprob: -3.7772395610809326
    3. 'res' → logprob: -5.652239799499512
    4. 'ans' → logprob: -7.902239799499512
    5. '#' → logprob: -9.652239799499512
    6. 'answer' → logprob: -10.652239799499512
    7. 'total' → logprob: -11.402239799499512
    8. 'rés' → logprob: -13.152239799499512
    9. 'ret' → logprob: -13.902239799499512
    10. 'r' → logprob: -13.902239799499512

Token 1016: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1010359525680542
    2. 'result' → logprob: -2.3510360717773438
    3. 'res' → logprob: -7.976036071777344
    4. 'answer' → logprob: -8.226036071777344
    5. ' print' → logprob: -9.726036071777344
    6. 'r' → logprob: -9.976036071777344
    7. 'total' → logprob: -10.101036071777344
    8. 'rés' → logprob: -10.851036071777344
    9. 'prin' → logprob: -11.226036071777344
    10. ' result' → logprob: -11.476036071777344

Token 1017: ' final' (ID: 1721)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004533011931926012
    2. ' =' → logprob: -5.629532814025879
    3. 'print' → logprob: -7.004532814025879
    4. '=
' → logprob: -11.004532814025879
    5. ',' → logprob: -13.879532814025879
    6. 'result' → logprob: -14.004532814025879
    7. ' print' → logprob: -14.004532814025879
    8. 's' → logprob: -14.004532814025879
    9. ':' → logprob: -14.254532814025879
    10. '=

' → logprob: -14.629532814025879

Token 1018: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0359322614967823
    2. ' =' → logprob: -3.6609323024749756
    3. 'print' → logprob: -4.6609320640563965
    4. '=
' → logprob: -9.410932540893555
    5. ',' → logprob: -10.285932540893555
    6. ' =
' → logprob: -12.910932540893555
    7. ' print' → logprob: -13.035932540893555
    8. 's' → logprob: -13.535932540893555
    9. '=

' → logprob: -13.910932540893555
    10. '
' → logprob: -14.035932540893555

Token 1019: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04212765023112297
    2. '(dp' → logprob: -3.2921276092529297
    3. 'print' → logprob: -6.04212760925293
    4. ' dp' → logprob: -6.41712760925293
    5. '(' → logprob: -10.29212760925293
    6. ' (' → logprob: -10.41712760925293
    7. ' print' → logprob: -13.66712760925293
    8. '   ' → logprob: -14.29212760925293
    9. '(print' → logprob: -14.41712760925293
    10. '1' → logprob: -14.91712760925293

Token 1020: ' somme' (ID: 64484)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006854142528027296
    2. 'print' → logprob: -5.256854057312012
    3. '(dp' → logprob: -6.756854057312012
    4. ' dp' → logprob: -7.756854057312012
    5. 'sum' → logprob: -11.006854057312012
    6. ' print' → logprob: -13.006854057312012
    7. 'total' → logprob: -13.131854057312012
    8. 'result' → logprob: -13.381854057312012
    9. '(' → logprob: -13.881854057312012
    10. 'max' → logprob: -14.131854057312012

Token 1021: ' de' (ID: 334)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.738685667514801
    2. '=' → logprob: -1.3636856079101562
    3. '(' → logprob: -1.8636856079101562
    4. 'dp' → logprob: -2.7386856079101562
    5. ' =' → logprob: -3.1136856079101562
    6. '()' → logprob: -7.488685607910156
    7. ')' → logprob: -7.863685607910156
    8. '(
' → logprob: -8.363685607910156
    9. 'result' → logprob: -8.363685607910156
    10. '_dp' → logprob: -8.738685607910156

Token 1022: ' toutes' (ID: 17502)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007981942966580391
    2. '(dp' → logprob: -5.132981777191162
    3. ' dp' → logprob: -6.757981777191162
    4. 'all' → logprob: -7.632981777191162
    5. 't' → logprob: -9.13298225402832
    6. 'tout' → logprob: -9.13298225402832
    7. 'the' → logprob: -9.38298225402832
    8. 'la' → logprob: -9.88298225402832
    9. '(' → logprob: -11.38298225402832
    10. 'l' → logprob: -11.50798225402832

Token 1023: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018872670829296112
    2. ' dp' → logprob: -4.5188727378845215
    3. '(dp' → logprob: -6.3938727378845215
    4. 'val' → logprob: -6.5188727378845215
    5. 'les' → logprob: -6.8938727378845215
    6. 'positions' → logprob: -7.1438727378845215
    7. 'des' → logprob: -7.1438727378845215
    8. 'values' → logprob: -7.5188727378845215
    9. 'ways' → logprob: -8.143872261047363
    10. ' les' → logprob: -8.893872261047363

Token 1024: ' façons' (ID: 165958)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07458876073360443
    2. 'val' → logprob: -2.6995887756347656
    3. ' dp' → logprob: -6.074588775634766
    4. 'values' → logprob: -6.699588775634766
    5. 'tree' → logprob: -7.824588775634766
    6. 'vals' → logprob: -8.824588775634766
    7. 'ways' → logprob: -8.949588775634766
    8. 'elements' → logprob: -9.699588775634766
    9. 's' → logprob: -9.949588775634766
    10. 'positions' → logprob: -10.074588775634766

Token 1025: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0610865354537964
    2. '=' → logprob: -1.3110865354537964
    3. ' =' → logprob: -1.5610865354537964
    4. 'print' → logprob: -2.186086654663086
    5. '(dp' → logprob: -3.186086654663086
    6. 'result' → logprob: -4.936086654663086
    7. '(' → logprob: -5.061086654663086
    8. ',' → logprob: -5.811086654663086
    9. 'final' → logprob: -7.186086654663086
    10. ' dp' → logprob: -7.186086654663086

Token 1026: ' finir' (ID: 97022)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00010103991371579468
    2. ' dp' → logprob: -9.625101089477539
    3. 'faire' → logprob: -11.125101089477539
    4. 'com' → logprob: -11.375101089477539
    5. '(dp' → logprob: -12.750101089477539
    6. 'comp' → logprob: -13.750101089477539
    7. 'comb' → logprob: -14.500101089477539
    8. 'final' → logprob: -14.625101089477539
    9. 'cho' → logprob: -14.750101089477539
    10. 'penser' → logprob: -14.875101089477539

Token 1027: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09304889291524887
    2. '(dp' → logprob: -3.0930488109588623
    3. 'sur' → logprob: -3.8430488109588623
    4. 'à' → logprob: -4.468049049377441
    5. 'dans' → logprob: -5.093049049377441
    6. 'au' → logprob: -5.968049049377441
    7. 'at' → logprob: -7.718049049377441
    8. ' dp' → logprob: -7.968049049377441
    9. 'de' → logprob: -7.968049049377441
    10. 'aux' → logprob: -8.593049049377441

Token 1028: 't' (ID: 83)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0018382027046754956
    2. 'print' → logprob: -7.126838207244873
    3. ' dp' → logprob: -7.501838207244873
    4. 'range' → logprob: -8.126837730407715
    5. 'dans' → logprob: -9.501837730407715
    6. 'n' → logprob: -10.626837730407715
    7. '(dp' → logprob: -11.376837730407715
    8. ')' → logprob: -11.501837730407715
    9. 's' → logprob: -12.126837730407715
    10. 'mod' → logprob: -12.126837730407715

Token 1029: 'ous' (ID: 784)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.031092708930373192
    2. 'p' → logprob: -4.406092643737793
    3. ' dp' → logprob: -4.406092643737793
    4. '(dp' → logprob: -5.406092643737793
    5. 'ype' → logprob: -7.781092643737793
    6. 'he' → logprob: -8.281092643737793
    7. 'y' → logprob: -8.531092643737793
    8. 'o' → logprob: -8.656092643737793
    9. 'r' → logprob: -8.656092643737793
    10. 'yp' → logprob: -9.531092643737793

Token 1030: ' les' (ID: 1341)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11727071553468704
    2. 'indices' → logprob: -2.8672707080841064
    3. 'positions' → logprob: -3.6172707080841064
    4. 'les' → logprob: -4.4922709465026855
    5. 'à' → logprob: -5.2422709465026855
    6. 'R' → logprob: -5.9922709465026855
    7. ' indices' → logprob: -6.4922709465026855
    8. 'au' → logprob: -6.8672709465026855
    9. 'la' → logprob: -6.9922709465026855
    10. ' positions' → logprob: -6.9922709465026855

Token 1031: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.26170405745506287
    2. 'indices' → logprob: -1.5117040872573853
    3. 'inter' → logprob: -5.636703968048096
    4. 'R' → logprob: -6.011703968048096
    5. 'positions' → logprob: -6.761703968048096
    6. ' indices' → logprob: -7.261703968048096
    7. 'interval' → logprob: -7.761703968048096
    8. 'n' → logprob: -8.511704444885254
    9. 'ind' → logprob: -8.761704444885254
    10. 'ranges' → logprob: -8.761704444885254

Token 1032: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7802212238311768
    2. 'indices' → logprob: -1.2802212238311768
    3. 's' → logprob: -3.1552212238311768
    4. ',' → logprob: -3.1552212238311768
    5. 'positions' → logprob: -3.1552212238311768
    6. 'dans' → logprob: -3.5302212238311768
    7. 'in' → logprob: -4.030220985412598
    8. ' indices' → logprob: -4.280220985412598
    9. 'de' → logprob: -4.405220985412598
    10. 'en' → logprob: -4.905220985412598

Token 1033: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001438266917830333
    2. 'result' → logprob: -8.875144004821777
    3. 'answer' → logprob: -13.750144004821777
    4. ' print' → logprob: -13.875144004821777
    5. '```' → logprob: -13.875144004821777
    6. 'res' → logprob: -14.750144004821777
    7. '`' → logprob: -15.750144004821777
    8. 'pr' → logprob: -16.25014305114746
    9. 'ans' → logprob: -16.37514305114746
    10. '(print' → logprob: -16.62514305114746

Token 1034: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007050448912195861
    2. '0' → logprob: -8.500704765319824
    3. ' ' → logprob: -8.500704765319824
    4. 'print' → logprob: -8.750704765319824
    5. '
' → logprob: -9.375704765319824
    6. '`' → logprob: -11.750704765319824
    7. ' print' → logprob: -11.750704765319824
    8. '```' → logprob: -11.750704765319824
    9. '#' → logprob: -11.875704765319824
    10. '   ' → logprob: -12.000704765319824

Token 1035: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.12127808178775e-05
    2. ' ' → logprob: -11.125051498413086
    3. 'print' → logprob: -11.500051498413086
    4. '0' → logprob: -11.750051498413086
    5. '
' → logprob: -12.000051498413086
    6. 'mod' → logprob: -12.250051498413086
    7. '```' → logprob: -12.875051498413086
    8. '   ' → logprob: -14.000051498413086
    9. '#' → logprob: -14.250051498413086
    10. '`' → logprob: -14.375051498413086

Token 1036: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02319270931184292
    2. '=' → logprob: -4.773192882537842
    3. ' =' → logprob: -5.523192882537842
    4. '(' → logprob: -5.648192882537842
    5. ' print' → logprob: -6.023192882537842
    6. 'dp' → logprob: -6.773192882537842
    7. '(print' → logprob: -7.148192882537842
    8. '
' → logprob: -8.023192405700684
    9. ',' → logprob: -8.273192405700684
    10. '(dp' → logprob: -8.273192405700684

Token 1037: 'answer' (ID: 17021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003727582807186991
    2. '
' → logprob: -8.125372886657715
    3. ' print' → logprob: -9.750372886657715
    4. '(print' → logprob: -11.625372886657715
    5. '+
' → logprob: -12.750372886657715
    6. '+' → logprob: -12.750372886657715
    7. 'pr' → logprob: -14.000372886657715
    8. '  
' → logprob: -14.750372886657715
    9. '\n' → logprob: -14.875372886657715
    10. ' 
' → logprob: -14.875372886657715

Token 1038: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3138576149940491
    2. '=' → logprob: -1.3138575553894043
    3. '_' → logprob: -7.688857555389404
    4. ')' → logprob: -10.313858032226562
    5. ' +=' → logprob: -10.438858032226562
    6. '.' → logprob: -11.063858032226562
    7. 's' → logprob: -11.563858032226562
    8. '()' → logprob: -11.688858032226562
    9. ',' → logprob: -11.938858032226562
    10. '   ' → logprob: -12.188858032226562

Token 1039: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.43914666771888733
    2. '(dp' → logprob: -1.689146637916565
    3. '1' → logprob: -1.814146637916565
    4. ' dp' → logprob: -5.689146518707275
    5. '(' → logprob: -5.939146518707275
    6. ' (' → logprob: -6.439146518707275
    7. ' ' → logprob: -9.439146995544434
    8. 'sum' → logprob: -11.189146995544434
    9. '(M' → logprob: -12.064146995544434
    10. 'mod' → logprob: -12.314146995544434

Token 1040: '1' (ID: 16)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7049309611320496
    2. '(dp' → logprob: -0.7049309611320496
    3. '1' → logprob: -4.579930782318115
    4. '(' → logprob: -6.579930782318115
    5. 'sum' → logprob: -10.954931259155273
    6. ' dp' → logprob: -10.954931259155273
    7. ' (' → logprob: -11.079931259155273
    8. '(sum' → logprob: -12.079931259155273
    9. '((' → logprob: -13.329931259155273
    10. '(d' → logprob: -13.454931259155273

Token 1041: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03299112990498543
    2. ' +' → logprob: -3.5329911708831787
    3. '+
' → logprob: -5.7829909324646
    4. '
' → logprob: -9.032991409301758
    5. ' +
' → logprob: -10.532991409301758
    6. '+=' → logprob: -12.157991409301758
    7. 'for' → logprob: -13.407991409301758
    8. '+x' → logprob: -13.907991409301758
    9. ' +=' → logprob: -15.157991409301758
    10. '+

' → logprob: -15.407991409301758

Token 1042: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0280383548888494e-06
    2. ' dp' → logprob: -13.875000953674316
    3. '	dp' → logprob: -19.500001907348633
    4. '(dp' → logprob: -20.750001907348633
    5. '   ' → logprob: -21.375001907348633
    6. 'sum' → logprob: -21.500001907348633
    7. 'd' → logprob: -21.750001907348633
    8. 'df' → logprob: -21.875001907348633
    9. '  ' → logprob: -22.500001907348633
    10. 'dc' → logprob: -23.000001907348633

Token 1043: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.5776860184123507e-06
    2. '.' → logprob: -13.25000286102295
    3. 'get' → logprob: -14.37500286102295
    4. ' .' → logprob: -15.62500286102295
    5. '.tree' → logprob: -17.375001907348633
    6. 'tree' → logprob: -19.500001907348633
    7. '`.' → logprob: -20.375001907348633
    8. '​.' → logprob: -20.750001907348633
    9. '.Get' → logprob: -21.250001907348633
    10. '\.' → logprob: -21.750001907348633

Token 1044: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0009380202973261476
    2. 'sum' → logprob: -7.0009379386901855
    3. '_max' → logprob: -11.000938415527344
    4. 'max' → logprob: -12.125938415527344
    5. ' sum' → logprob: -13.875938415527344
    6. 'dp' → logprob: -14.000938415527344
    7. '_' → logprob: -14.875938415527344
    8. '(sum' → logprob: -15.000938415527344
    9. '_s' → logprob: -15.125938415527344
    10. ')' → logprob: -15.375938415527344

Token 1045: '(max' (ID: 17178)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.006601683329790831
    2. '(max' → logprob: -5.256601810455322
    3. 'dp' → logprob: -7.256601810455322
    4. '(len' → logprob: -7.381601810455322
    5. '(' → logprob: -10.256601333618164
    6. 'max' → logprob: -13.006601333618164
    7. ' dp' → logprob: -14.756601333618164
    8. '(
' → logprob: -15.506601333618164
    9. '(MAX' → logprob: -15.506601333618164
    10. 'len' → logprob: -15.756601333618164

Token 1046: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.00021295747137628496
    2. 'R' → logprob: -8.625212669372559
    3. '_R' → logprob: -10.500212669372559
    4. '_n' → logprob: -12.375212669372559
    5. 'n' → logprob: -14.375212669372559
    6. '[R' → logprob: -14.875212669372559
    7. '(' → logprob: -15.875212669372559
    8. '_r' → logprob: -16.000213623046875
    9. '(r' → logprob: -16.125213623046875
    10. ' R' → logprob: -16.500213623046875

Token 1047: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014009888283908367
    2. ')' → logprob: -4.389009952545166
    3. '))
' → logprob: -6.639009952545166
    4. ')
' → logprob: -9.514009475708008
    5. '])' → logprob: -10.514009475708008
    6. ')))' → logprob: -10.639009475708008
    7. '))

' → logprob: -11.139009475708008
    8. '(' → logprob: -11.139009475708008
    9. ' ))' → logprob: -11.389009475708008
    10. '()))' → logprob: -12.389009475708008

Token 1048: 'answer' (ID: 17021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015655691968277097
    2. '
' → logprob: -6.501565456390381
    3. '```' → logprob: -9.751565933227539
    4. '\n' → logprob: -13.251565933227539
    5. ' print' → logprob: -13.876565933227539
    6. ')
' → logprob: -13.876565933227539
    7. '``' → logprob: -14.876565933227539
    8. '\' → logprob: -15.376565933227539
    9. '  
' → logprob: -15.751565933227539
    10. '#print' → logprob: -15.876565933227539

Token 1049: ' %=' (ID: 117035)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.21112538874149323
    2. '<|end|>' → logprob: -1.961125373840332
    3. ')' → logprob: -3.836125373840332
    4. '```' → logprob: -4.336125373840332
    5. 'print' → logprob: -5.211125373840332
    6. '#' → logprob: -5.336125373840332
    7. '
' → logprob: -6.086125373840332
    8. '%\' → logprob: -7.461125373840332
    9. '<|end|>' → logprob: -7.961125373840332
    10. ')%' → logprob: -8.461125373840332

Token 1050: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.1472419600977446e-06
    2. ' MOD' → logprob: -13.750000953674316
    3. '_MOD' → logprob: -19.750001907348633
    4. '10' → logprob: -21.000001907348633
    5. 'MO' → logprob: -22.250001907348633
    6. '.MOD' → logprob: -22.875001907348633
    7. '   ' → logprob: -24.375001907348633
    8. 'mod' → logprob: -24.750001907348633
    9. '(M' → logprob: -25.125001907348633
    10. '```' → logprob: -25.250001907348633

Token 1051: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. '```' → logprob: -13.250001907348633
    3. '
' → logprob: -16.500001907348633
    4. ' print' → logprob: -17.625001907348633
    5. '``' → logprob: -18.500001907348633
    6. '(print' → logprob: -20.625001907348633
    7. '  
' → logprob: -20.750001907348633
    8. 'pr' → logprob: -20.875001907348633
    9. '#print' → logprob: -21.125001907348633
    10. '    
' → logprob: -22.250001907348633

Token 1052: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.45848218582978e-06
    2. '```' → logprob: -13.00000286102295
    3. '
' → logprob: -16.000001907348633
    4. ' print' → logprob: -18.375001907348633
    5. '``' → logprob: -18.500001907348633
    6. '#print' → logprob: -19.125001907348633
    7. 'pr' → logprob: -19.750001907348633
    8. '    
' → logprob: -21.250001907348633
    9. '(print' → logprob: -21.375001907348633
    10. '  
' → logprob: -21.375001907348633

Token 1053: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.750000953674316
    3. 'answer' → logprob: -14.875000953674316
    4. '(ans' → logprob: -15.000000953674316
    5. '(question' → logprob: -17.375001907348633
    6. ' (' → logprob: -17.875001907348633
    7. '(angle' → logprob: -19.625001907348633
    8. '(f' → logprob: -19.750001907348633
    9. '(
' → logprob: -19.875001907348633
    10. '(anchor' → logprob: -19.875001907348633

Token 1054: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001872094871941954
    2. '()' → logprob: -9.125186920166016
    3. '())' → logprob: -10.375186920166016
    4. '```' → logprob: -10.750186920166016
    5. ' )' → logprob: -11.875186920166016
    6. ')
' → logprob: -12.250186920166016
    7. '#' → logprob: -12.875186920166016
    8. '(' → logprob: -13.000186920166016
    9. '`)' → logprob: -13.125186920166016
    10. '<|end|>' → logprob: -13.250186920166016


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1052
Tokens correctement prédits (1ère position, stricte): 258
Tokens correctement prédits (1ère position, avec adaptation): 275
Tokens correctement prédits (top 10): 665
Précision stricte (1ère position): 24.52%
Précision adaptée (1ère position): 26.14%
Précision (top 10): 63.21%
================================================================================
