================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
ab = {i: [] for i in range(n)}
for j in range(n - 1):
    a, b = [int(i) - 1 for i in input().split()]
    ab[a].append((b, j))
    ab[b].append((a, j))

def dfs(a, b, d=None, c=-1):
    if d is None:
        d = []
    if a == b:
        return d
    for i in ab[a]:
        if i[0] == c:
            continue
        e = dfs(i[0], b, d + [i[1]], a)
        if len(e) != 0:
            return set(e)
    return set()

m = int(input())
ms = []
for _ in range(m):
    u, p = [int(i) - 1 for i in input().split()]
    ms.append(dfs(u, p))

ans = 0
for i in range(1 << m):
    k = 0
    a = set()
    for j in range(m):
        if (i >> j) & 1 == 1:
            k += 1
            a |= ms[j]
    if k % 2 == 1:
        ans += 2 ** (n - 1 - len(a))
    elif k != 0:
        ans -= 2 ** (n - 1 - len(a))

print(2 ** (n - 1) - ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.7530574849806726e-05
    2. ''' → logprob: -10.750057220458984
    3. '('' → logprob: -11.125057220458984
    4. '(
' → logprob: -11.750057220458984
    5. '(n' → logprob: -13.000057220458984
    6. '```' → logprob: -13.125057220458984
    7. '("("' → logprob: -13.125057220458984
    8. '()' → logprob: -13.500057220458984
    9. '`' → logprob: -13.500057220458984
    10. '[' → logprob: -14.125057220458984

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2073645442724228
    2. ')' → logprob: -1.707364559173584
    3. '()' → logprob: -5.457364559173584
    4. '())' → logprob: -7.082364559173584
    5. '(
' → logprob: -8.082364082336426
    6. '```' → logprob: -9.582364082336426
    7. '))' → logprob: -9.707364082336426
    8. '[' → logprob: -10.582364082336426
    9. '')' → logprob: -10.582364082336426
    10. '")' → logprob: -10.582364082336426

Token 5: 'ab' (ID: 378)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01547838281840086
    2. 's' → logprob: -5.265478610992432
    3. '[i' → logprob: -6.140478610992432
    4. '+' → logprob: -6.265478610992432
    5. '[]' → logprob: -6.890478610992432
    6. '[a' → logprob: -6.890478610992432
    7. ')' → logprob: -7.015478610992432
    8. ' =' → logprob: -7.015478610992432
    9. 'a' → logprob: -8.140478134155273
    10. ' +' → logprob: -8.640478134155273

Token 7: ' {' (ID: 354)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7925480008125305
    2. 'list' → logprob: -1.4175479412078857
    3. '[input' → logprob: -2.5425479412078857
    4. ' input' → logprob: -2.6675479412078857
    5. '[]' → logprob: -3.0425479412078857
    6. ' list' → logprob: -3.1675479412078857
    7. '[' → logprob: -3.4175479412078857
    8. ' [' → logprob: -4.417548179626465
    9. ' []' → logprob: -4.792548179626465
    10. ' ab' → logprob: -5.042548179626465

Token 8: 'i' (ID: 72)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.7165965437889099
    2. ''' → logprob: -0.8415965437889099
    3. '   ' → logprob: -3.3415966033935547
    4. ''}' → logprob: -4.091596603393555
    5. '}' → logprob: -4.841596603393555
    6. ''ab' → logprob: -5.716596603393555
    7. '"' → logprob: -5.841596603393555
    8. ' ' → logprob: -6.091596603393555
    9. ''\' → logprob: -6.466596603393555
    10. ''A' → logprob: -6.466596603393555

Token 9: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028357718139886856
    2. ':i' → logprob: -3.653357744216919
    3. ' :' → logprob: -6.27835750579834
    4. ':n' → logprob: -9.90335750579834
    5. ':j' → logprob: -11.02835750579834
    6. ',' → logprob: -11.52835750579834
    7. ':(' → logprob: -11.52835750579834
    8. ':k' → logprob: -11.77835750579834
    9. '+' → logprob: -11.90335750579834
    10. ' for' → logprob: -12.27835750579834

Token 10: ' []' (ID: 6126)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.362461119890213
    2. ' ' → logprob: -1.7374610900878906
    3. '[]' → logprob: -3.2374610900878906
    4. ' i' → logprob: -4.112461090087891
    5. ' []' → logprob: -4.237461090087891
    6. 'i' → logprob: -4.362461090087891
    7. '[' → logprob: -4.612461090087891
    8. ' [' → logprob: -4.612461090087891
    9. '1' → logprob: -4.987461090087891
    10. '[i' → logprob: -5.487461090087891

Token 11: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.67029869556427
    2. ' for' → logprob: -0.79529869556427
    3. 'for' → logprob: -3.5452985763549805
    4. ' ' → logprob: -5.2952985763549805
    5. '   ' → logprob: -6.9202985763549805
    6. '    ' → logprob: -7.6702985763549805
    7. ')' → logprob: -7.7952985763549805
    8. '(' → logprob: -7.9202985763549805
    9. ' ,' → logprob: -8.29529857635498
    10. '}' → logprob: -8.54529857635498

Token 12: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4998285472393036
    2. 'i' → logprob: -0.999828577041626
    3. ' range' → logprob: -3.874828577041626
    4. 'range' → logprob: -5.374828338623047
    5. ' ' → logprob: -10.749828338623047
    6. ' in' → logprob: -11.999828338623047
    7. ' ' → logprob: -13.374828338623047
    8. '_' → logprob: -13.499828338623047
    9. '	i' → logprob: -14.374828338623047
    10. '	range' → logprob: -15.249828338623047

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07005458325147629
    2. 'in' → logprob: -2.695054531097412
    3. 'range' → logprob: -9.44505500793457
    4. 'n' → logprob: -10.69505500793457
    5. ' range' → logprob: -11.57005500793457
    6. ' ' → logprob: -12.69505500793457
    7. 'i' → logprob: -14.32005500793457
    8. '_' → logprob: -14.44505500793457
    9. ' ' → logprob: -15.07005500793457
    10. 's' → logprob: -15.07005500793457

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02630285546183586
    2. ' range' → logprob: -3.6513028144836426
    3. 'n' → logprob: -14.0263032913208
    4. '(range' → logprob: -14.5263032913208
    5. 'ab' → logprob: -15.0263032913208
    6. ' ' → logprob: -15.7763032913208
    7. '	range' → logprob: -16.151302337646484
    8. 'ran' → logprob: -16.151302337646484
    9. 'ra' → logprob: -16.276302337646484
    10. 'r' → logprob: -16.401302337646484

Token 15: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08894655108451843
    2. '(' → logprob: -2.463946580886841
    3. ' (' → logprob: -13.338946342468262
    4. '(
' → logprob: -13.963946342468262
    5. '(len' → logprob: -13.963946342468262
    6. '((' → logprob: -13.963946342468262
    7. '(-' → logprob: -14.088946342468262
    8. 'n' → logprob: -14.088946342468262
    9. '(\' → logprob: -15.463946342468262
    10. '(N' → logprob: -15.963946342468262

Token 16: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.000874539720825851
    2. ')' → logprob: -7.1258745193481445
    3. ' )' → logprob: -10.250874519348145
    4. '+' → logprob: -11.250874519348145
    5. ')}

' → logprob: -11.750874519348145
    6. '}' → logprob: -12.375874519348145
    7. ')}
' → logprob: -13.125874519348145
    8. '-' → logprob: -13.625874519348145
    9. '")}' → logprob: -13.875874519348145
    10. '})' → logprob: -13.875874519348145

Token 17: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009688799269497395
    2. ' for' → logprob: -4.759688854217529
    3. ')' → logprob: -8.384688377380371
    4. '<|end|>' → logprob: -8.884688377380371
    5. 'n' → logprob: -9.134688377380371
    6. 'a' → logprob: -9.509688377380371
    7. ',' → logprob: -9.634688377380371
    8. 'i' → logprob: -9.759688377380371
    9. '
' → logprob: -9.759688377380371
    10. 'x' → logprob: -10.134688377380371

Token 18: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03143804520368576
    2. ' _' → logprob: -3.656438112258911
    3. '_' → logprob: -5.406437873840332
    4. 'i' → logprob: -7.781437873840332
    5. ' ' → logprob: -8.781437873840332
    6. ' range' → logprob: -10.281437873840332
    7. ' ' → logprob: -10.906437873840332
    8. ' in' → logprob: -12.906437873840332
    9. ' j' → logprob: -12.906437873840332
    10. '_i' → logprob: -13.156437873840332

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028140312060713768
    2. 'in' → logprob: -4.028140544891357
    3. ' ' → logprob: -4.653140544891357
    4. ',' → logprob: -9.1531400680542
    5. '  ' → logprob: -9.5281400680542
    6. '_' → logprob: -9.7781400680542
    7. 'n' → logprob: -9.9031400680542
    8. ' ,' → logprob: -10.2781400680542
    9. '(' → logprob: -11.5281400680542
    10. '1' → logprob: -11.7781400680542

Token 20: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.048637669533491135
    2. 'range' → logprob: -3.048637628555298
    3. ' n' → logprob: -10.298637390136719
    4. 'n' → logprob: -11.798637390136719
    5. ' ' → logprob: -11.798637390136719
    6. '	range' → logprob: -15.048637390136719
    7. ' xrange' → logprob: -15.298637390136719
    8. '(range' → logprob: -15.423637390136719
    9. ' ab' → logprob: -15.798637390136719
    10. ' ' → logprob: -16.04863739013672

Token 21: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011734353378415108
    2. '(' → logprob: -4.511734485626221
    3. ' (' → logprob: -8.011734008789062
    4. 'n' → logprob: -8.761734008789062
    5. ' n' → logprob: -8.761734008789062
    6. '(i' → logprob: -10.636734008789062
    7. ' ' → logprob: -11.761734008789062
    8. '1' → logprob: -13.011734008789062
    9. '(j' → logprob: -13.511734008789062
    10. '2' → logprob: -13.761734008789062

Token 22: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008579814457334578
    2. ' ):' → logprob: -7.750857830047607
    3. ')' → logprob: -8.500858306884766
    4. '):
' → logprob: -8.625858306884766
    5. '+' → logprob: -10.625858306884766
    6. '-' → logprob: -12.000858306884766
    7. ':' → logprob: -12.000858306884766
    8. '**' → logprob: -13.875858306884766
    9. '}:' → logprob: -14.250858306884766
    10. ')}' → logprob: -14.250858306884766

Token 23: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17987757921218872
    2. ' ' → logprob: -1.804877519607544
    3. '2' → logprob: -9.804877281188965
    4. '   ' → logprob: -9.929877281188965
    5. ' j' → logprob: -11.054877281188965
    6. 'j' → logprob: -12.804877281188965
    7. '  ' → logprob: -12.929877281188965
    8. '-' → logprob: -13.179877281188965
    9. ')' → logprob: -13.554877281188965
    10. '+' → logprob: -13.617377281188965

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010533124441280961
    2. ' ' → logprob: -9.250104904174805
    3. '2' → logprob: -11.750104904174805
    4. 'j' → logprob: -14.375104904174805
    5. '   ' → logprob: -15.000104904174805
    6. '-' → logprob: -16.250104904174805
    7. '  ' → logprob: -16.375104904174805
    8. '0' → logprob: -16.625104904174805
    9. 'i' → logprob: -17.125104904174805
    10. '3' → logprob: -17.375104904174805

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013073522597551346
    2. ')' → logprob: -4.638073444366455
    3. ':' → logprob: -6.013073444366455
    4. ' ):' → logprob: -7.388073444366455
    5. '):
' → logprob: -8.638073921203613
    6. ',' → logprob: -10.138073921203613
    7. ' )' → logprob: -11.513073921203613
    8. '+' → logprob: -11.763073921203613
    9. ' :' → logprob: -13.138073921203613
    10. '}:' → logprob: -13.388073921203613

Token 26: '   ' (ID: 271)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -0.6390855312347412
    2. '   ' → logprob: -1.1390855312347412
    3. ' a' → logprob: -2.514085531234741
    4. ' i' → logprob: -3.139085531234741
    5. ' k' → logprob: -5.26408576965332
    6. 'a' → logprob: -5.51408576965332
    7. ' ' → logprob: -5.51408576965332
    8. ' u' → logprob: -6.01408576965332
    9. ' 
' → logprob: -6.13908576965332
    10. '    
' → logprob: -7.01408576965332

Token 27: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.4447120130062103
    2. ' a' → logprob: -1.4447120428085327
    3. ' u' → logprob: -2.694711923599243
    4. 'u' → logprob: -2.944711923599243
    5. ' line' → logprob: -6.944712162017822
    6. '   ' → logprob: -7.569712162017822
    7. 's' → logprob: -8.069711685180664
    8. 'x' → logprob: -8.444711685180664
    9. ' ' → logprob: -8.819711685180664
    10. ' s' → logprob: -8.944711685180664

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5907600522041321
    2. ' ,' → logprob: -1.2157599925994873
    3. ',b' → logprob: -2.2157599925994873
    4. 'b' → logprob: -3.2157599925994873
    5. '[' → logprob: -8.590760231018066
    6. ' b' → logprob: -9.715760231018066
    7. ' ' → logprob: -10.090760231018066
    8. ' =' → logprob: -10.715760231018066
    9. '_b' → logprob: -11.090760231018066
    10. '[i' → logprob: -11.090760231018066

Token 29: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2015913873910904
    2. ' b' → logprob: -1.7015913724899292
    3. ' ' → logprob: -8.826591491699219
    4. ',' → logprob: -11.451591491699219
    5. ',b' → logprob: -11.701591491699219
    6. '<|end|>' → logprob: -11.951591491699219
    7. ' ,' → logprob: -12.951591491699219
    8. '=' → logprob: -13.826591491699219
    9. 'space' → logprob: -14.326591491699219
    10. '_b' → logprob: -14.826591491699219

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38713786005973816
    2. ' =' → logprob: -1.1371378898620605
    3. ',' → logprob: -8.262137413024902
    4. '=input' → logprob: -12.762137413024902
    5. ')' → logprob: -13.262137413024902
    6. ' ' → logprob: -14.137137413024902
    7. '   ' → logprob: -14.262137413024902
    8. '```' → logprob: -14.637137413024902
    9. '=int' → logprob: -15.012137413024902
    10. 'a' → logprob: -15.262137413024902

Token 31: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07073633372783661
    2. 'map' → logprob: -2.6957364082336426
    3. ' input' → logprob: -7.945736408233643
    4. ' list' → logprob: -8.070735931396484
    5. 'input' → logprob: -9.445735931396484
    6. 'list' → logprob: -10.945735931396484
    7. ' [' → logprob: -11.320735931396484
    8. '[' → logprob: -11.820735931396484
    9. '   ' → logprob: -12.070735931396484
    10. ' ' → logprob: -12.945735931396484

Token 32: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0006579888286069036
    2. 'map' → logprob: -7.37565803527832
    3. ' int' → logprob: -10.50065803527832
    4. ' map' → logprob: -13.37565803527832
    5. '*' → logprob: -14.00065803527832
    6. '```' → logprob: -14.50065803527832
    7. ']int' → logprob: -15.00065803527832
    8. '[int' → logprob: -15.37565803527832
    9. '   ' → logprob: -15.50065803527832
    10. '<int' → logprob: -16.87565803527832

Token 33: '(i' (ID: 3649)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.039278414100408554
    2. '(x' → logprob: -3.289278507232666
    3. '(' → logprob: -7.289278507232666
    4. '()]' → logprob: -8.664278030395508
    5. '(i' → logprob: -8.664278030395508
    6. '()' → logprob: -9.414278030395508
    7. 'input' → logprob: -9.539278030395508
    8. ']' → logprob: -11.789278030395508
    9. '(token' → logprob: -12.164278030395508
    10. '(inp' → logprob: -12.289278030395508

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001805130043067038
    2. '())' → logprob: -6.376805305480957
    3. 'input' → logprob: -10.376805305480957
    4. ' )' → logprob: -10.626805305480957
    5. '(x' → logprob: -11.376805305480957
    6. '()' → logprob: -11.501805305480957
    7. '(input' → logprob: -11.751805305480957
    8. ')]' → logprob: -12.001805305480957
    9. ')x' → logprob: -12.501805305480957
    10. '）' → logprob: -14.001805305480957

Token 35: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2473496049642563
    2. '()' → logprob: -1.9973496198654175
    3. ' for' → logprob: -3.247349500656128
    4. 'input' → logprob: -3.997349500656128
    5. 'for' → logprob: -4.122349739074707
    6. '(input' → logprob: -5.247349739074707
    7. '(' → logprob: -7.497349739074707
    8. '().' → logprob: -7.622349739074707
    9. '<|end|>' → logprob: -7.747349739074707
    10. '.split' → logprob: -7.997349739074707

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25194668769836426
    2. ' ' → logprob: -1.5019466876983643
    3. '<|end|>' → logprob: -11.126946449279785
    4. '```' → logprob: -14.251946449279785
    5. '<|end|>' → logprob: -14.251946449279785
    6. ' one' → logprob: -15.126946449279785
    7. ' ' → logprob: -15.376946449279785
    8. '１' → logprob: -15.626946449279785
    9. '...' → logprob: -16.3769474029541
    10. ')' → logprob: -16.5019474029541

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.62504005432129
    4. '１' → logprob: -18.06254005432129
    5. '```' → logprob: -18.12504005432129
    6. '2' → logprob: -19.18754005432129
    7. '`' → logprob: -19.56254005432129
    8. '১' → logprob: -19.75004005432129
    9. '0' → logprob: -19.93754005432129
    10. '۱' → logprob: -20.18754005432129

Token 38: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04461594298481941
    2. ' for' → logprob: -3.2946159839630127
    3. ']' → logprob: -6.294615745544434
    4. 'for' → logprob: -6.294615745544434
    5. ')]' → logprob: -6.794615745544434
    6. ',' → logprob: -6.794615745544434
    7. '<|end|>' → logprob: -7.919615745544434
    8. ' ' → logprob: -9.919615745544434
    9. ' )' → logprob: -9.919615745544434
    10. '   ' → logprob: -10.294615745544434

Token 39: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10021260380744934
    2. 'input' → logprob: -2.350212574005127
    3. '=input' → logprob: -13.225213050842285
    4. ' range' → logprob: -13.850213050842285
    5. '(input' → logprob: -13.850213050842285
    6. ' ' → logprob: -14.350213050842285
    7. 'range' → logprob: -14.725213050842285
    8. '<input' → logprob: -15.600213050842285
    9. '	input' → logprob: -15.600213050842285
    10. ',input' → logprob: -15.725213050842285

Token 40: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.18006308376789093
    2. 'input' → logprob: -1.8050631284713745
    3. '(input' → logprob: -8.930063247680664
    4. '=input' → logprob: -9.305063247680664
    5. ' in' → logprob: -10.180063247680664
    6. 'in' → logprob: -10.430063247680664
    7. ' ' → logprob: -11.430063247680664
    8. '(' → logprob: -12.430063247680664
    9. '	input' → logprob: -13.055063247680664
    10. ',input' → logprob: -13.180063247680664

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02325444668531418
    2. ' input' → logprob: -3.77325439453125
    3. 'list' → logprob: -12.02325439453125
    4. 'range' → logprob: -13.14825439453125
    5. ' list' → logprob: -15.39825439453125
    6. '(input' → logprob: -15.77325439453125
    7. '[input' → logprob: -16.27325439453125
    8. ' range' → logprob: -16.39825439453125
    9. '=input' → logprob: -16.39825439453125
    10. ' ' → logprob: -16.39825439453125

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015574743738397956
    2. '()' → logprob: -6.751557350158691
    3. '()]' → logprob: -7.876557350158691
    4. '()].' → logprob: -12.626557350158691
    5. '())' → logprob: -12.751557350158691
    6. '()
' → logprob: -14.376557350158691
    7. '()

' → logprob: -15.501557350158691
    8. '(' → logprob: -15.626557350158691
    9. 'split' → logprob: -16.251558303833008
    10. '()][' → logprob: -16.251558303833008

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00017112065688706934
    2. 'strip' → logprob: -8.750170707702637
    3. 'rstrip' → logprob: -12.250170707702637
    4. ' split' → logprob: -12.375170707702637
    5. 's' → logprob: -13.250170707702637
    6. 'spl' → logprob: -13.875170707702637
    7. '(split' → logprob: -14.875170707702637
    8. 'sp' → logprob: -15.125170707702637
    9. ' ' → logprob: -15.625170707702637
    10. ')' → logprob: -17.250171661376953

Token 44: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.002659839577972889
    2. '()' → logprob: -6.002659797668457
    3. '())' → logprob: -8.627659797668457
    4. ')]' → logprob: -12.877659797668457
    5. ']' → logprob: -14.127659797668457
    6. '(' → logprob: -14.252659797668457
    7. '()][' → logprob: -15.252659797668457
    8. '()],' → logprob: -15.252659797668457
    9. '()]
' → logprob: -15.377659797668457
    10. '(),' → logprob: -15.377659797668457

Token 45: '   ' (ID: 271)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.05840521678328514
    2. '   ' → logprob: -4.05840539932251
    3. ' ab' → logprob: -4.18340539932251
    4. '<|end|>' → logprob: -4.30840539932251
    5. '
' → logprob: -5.93340539932251
    6. ' ' → logprob: -6.18340539932251
    7. ' 
' → logprob: -6.43340539932251
    8. '    
' → logprob: -6.55840539932251
    9. '```' → logprob: -6.80840539932251
    10. 'a' → logprob: -8.183404922485352

Token 46: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.00753988791257143
    2. ' ab' → logprob: -5.007539749145508
    3. ' 
' → logprob: -8.257539749145508
    4. 'a' → logprob: -8.757539749145508
    5. '
' → logprob: -8.882539749145508
    6. '   ' → logprob: -9.882539749145508
    7. '<|end|>' → logprob: -10.007539749145508
    8. '_ab' → logprob: -10.507539749145508
    9. '```' → logprob: -10.507539749145508
    10. ' ' → logprob: -10.757539749145508

Token 47: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.491498531133402e-06
    2. 'a' → logprob: -12.250009536743164
    3. '[' → logprob: -12.625009536743164
    4. '```' → logprob: -14.875009536743164
    5. '[i' → logprob: -15.125009536743164
    6. '[b' → logprob: -15.125009536743164
    7. ' [' → logprob: -15.625009536743164
    8. ' a' → logprob: -17.375009536743164
    9. '[A' → logprob: -17.500009536743164
    10. '   ' → logprob: -17.500009536743164

Token 48: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00020616286201402545
    2. ']' → logprob: -8.500205993652344
    3. ' ].' → logprob: -13.625205993652344
    4. '.append' → logprob: -14.125205993652344
    5. ''].' → logprob: -14.625205993652344
    6. '"].' → logprob: -16.125205993652344
    7. '][' → logprob: -16.750205993652344
    8. '.' → logprob: -16.750205993652344
    9. '[' → logprob: -17.000205993652344
    10. '}.' → logprob: -17.750205993652344

Token 49: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.1008713702030946e-06
    2. 'appen' → logprob: -13.500001907348633
    3. ' append' → logprob: -14.875001907348633
    4. '.append' → logprob: -14.875001907348633
    5. 'app' → logprob: -17.250001907348633
    6. '	append' → logprob: -17.875001907348633
    7. 'appe' → logprob: -18.625001907348633
    8. '_append' → logprob: -18.875001907348633
    9. 'Append' → logprob: -19.375001907348633
    10. 'add' → logprob: -20.000001907348633

Token 50: '((' (ID: 2054)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.91732100979425e-05
    2. 'b' → logprob: -10.250039100646973
    3. '(' → logprob: -12.500039100646973
    4. '(
' → logprob: -17.50004005432129
    5. ' b' → logprob: -17.75004005432129
    6. ')b' → logprob: -17.87504005432129
    7. '((' → logprob: -18.50004005432129
    8. ' (' → logprob: -19.12504005432129
    9. '	b' → logprob: -20.12504005432129
    10. '(B' → logprob: -20.25004005432129

Token 51: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001929228543303907
    2. ' b' → logprob: -6.25192928314209
    3. ')b' → logprob: -15.25192928314209
    4. '   ' → logprob: -15.75192928314209
    5. 'a' → logprob: -15.75192928314209
    6. ' ' → logprob: -16.251928329467773
    7. '	b' → logprob: -17.626928329467773
    8. ''b' → logprob: -17.876928329467773
    9. 'j' → logprob: -18.376928329467773
    10. '  ' → logprob: -18.626928329467773

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007353413384407759
    2. ')' → logprob: -5.63235330581665
    3. '))' → logprob: -5.75735330581665
    4. ' ,' → logprob: -7.75735330581665
    5. ',)' → logprob: -9.507353782653809
    6. ' )' → logprob: -10.132353782653809
    7. ' ))' → logprob: -10.757353782653809
    8. ',b' → logprob: -12.257353782653809
    9. '<|end|>' → logprob: -12.382353782653809
    10. '   ' → logprob: -12.882353782653809

Token 53: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.038172073662281036
    2. ' j' → logprob: -3.5381720066070557
    3. '1' → logprob: -5.288172245025635
    4. '0' → logprob: -6.913172245025635
    5. 'True' → logprob: -7.413172245025635
    6. ' ' → logprob: -7.663172245025635
    7. '   ' → logprob: -8.288171768188477
    8. ')' → logprob: -8.413171768188477
    9. 'False' → logprob: -8.663171768188477
    10. 'a' → logprob: -8.913171768188477

Token 54: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.061821114271879196
    2. ')' → logprob: -2.936821222305298
    3. ',' → logprob: -5.061820983886719
    4. ' ))' → logprob: -8.436820983886719
    5. '))
' → logprob: -8.936820983886719
    6. '),' → logprob: -9.061820983886719
    7. ' )' → logprob: -9.686820983886719
    8. ')))' → logprob: -11.561820983886719
    9. '   ' → logprob: -11.811820983886719
    10. ' ,' → logprob: -12.186820983886719

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0413534939289093
    2. 'ab' → logprob: -3.291353464126587
    3. ' ab' → logprob: -5.791353702545166
    4. '<|end|>' → logprob: -8.416353225708008
    5. '```' → logprob: -12.416353225708008
    6. ' ' → logprob: -12.416353225708008
    7. '    
' → logprob: -12.791353225708008
    8. '#ab' → logprob: -12.916353225708008
    9. ',' → logprob: -13.041353225708008
    10. '(ab' → logprob: -13.166353225708008

Token 56: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.12145105749368668
    2. ' ab' → logprob: -2.3714511394500732
    3. '   ' → logprob: -3.8714511394500732
    4. 'b' → logprob: -8.746451377868652
    5. ' ' → logprob: -11.121451377868652
    6. '  ' → logprob: -12.621451377868652
    7. '_ab' → logprob: -12.621451377868652
    8. '(ab' → logprob: -13.371451377868652
    9. '    ' → logprob: -13.621451377868652
    10. 'a' → logprob: -13.871451377868652

Token 57: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.333223139634356e-05
    2. 'b' → logprob: -10.500033378601074
    3. '[a' → logprob: -12.500033378601074
    4. '[' → logprob: -13.500033378601074
    5. '```' → logprob: -16.000032424926758
    6. '<|end|>' → logprob: -17.000032424926758
    7. '	b' → logprob: -17.125032424926758
    8. '[B' → logprob: -17.375032424926758
    9. ' ' → logprob: -17.625032424926758
    10. '][' → logprob: -17.750032424926758

Token 58: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.14349165558815002
    2. ').' → logprob: -2.018491744995117
    3. '.' → logprob: -7.643491744995117
    4. ']' → logprob: -8.518491744995117
    5. ')' → logprob: -10.143491744995117
    6. '[a' → logprob: -10.518491744995117
    7. ' ].' → logprob: -10.768491744995117
    8. '}.' → logprob: -11.518491744995117
    9. ')].' → logprob: -12.018491744995117
    10. '[' → logprob: -12.393491744995117

Token 59: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.7432603272027336e-06
    2. 'appen' → logprob: -14.000001907348633
    3. '.append' → logprob: -14.750001907348633
    4. ' append' → logprob: -14.875001907348633
    5. '	append' → logprob: -16.500001907348633
    6. 'add' → logprob: -17.750001907348633
    7. 'app' → logprob: -18.375001907348633
    8. 'Append' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.875001907348633
    10. '_append' → logprob: -19.000001907348633

Token 60: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.8624639324116288e-06
    2. ' ((' → logprob: -13.750001907348633
    3. '(a' → logprob: -14.500001907348633
    4. ' (' → logprob: -15.875001907348633
    5. '(' → logprob: -17.000001907348633
    6. ' ' → logprob: -17.625001907348633
    7. '```' → logprob: -18.500001907348633
    8. '(
' → logprob: -18.625001907348633
    9. ')((' → logprob: -18.875001907348633
    10. '`' → logprob: -19.500001907348633

Token 61: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0010772300884127617
    2. 'a' → logprob: -6.876077175140381
    3. ' (' → logprob: -10.251077651977539
    4. '(' → logprob: -12.126077651977539
    5. ' a' → logprob: -14.001077651977539
    6. '   ' → logprob: -14.376077651977539
    7. ')a' → logprob: -14.626077651977539
    8. ')' → logprob: -15.001077651977539
    9. '(
' → logprob: -15.251077651977539
    10. '<a' → logprob: -15.376077651977539

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016158436483237892
    2. ' ,' → logprob: -8.750161170959473
    3. ',j' → logprob: -13.000161170959473
    4. 'a' → logprob: -15.375161170959473
    5. ' ' → logprob: -15.375161170959473
    6. '   ' → logprob: -16.12516212463379
    7. ',a' → logprob: -16.25016212463379
    8. '‌,' → logprob: -16.87516212463379
    9. ')' → logprob: -17.00016212463379
    10. ',
' → logprob: -17.62516212463379

Token 63: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6931490898132324
    2. ' j' → logprob: -0.6931490898132324
    3. ' ' → logprob: -14.06814956665039
    4. '   ' → logprob: -14.69314956665039
    5. '	j' → logprob: -14.94314956665039
    6. ')' → logprob: -15.69314956665039
    7. ',j' → logprob: -17.06814956665039
    8. '    ' → logprob: -17.44314956665039
    9. '  ' → logprob: -17.44314956665039
    10. '$j' → logprob: -17.56814956665039

Token 64: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07891159504652023
    2. ')' → logprob: -2.578911542892456
    3. '))
' → logprob: -11.203911781311035
    4. ')))' → logprob: -12.578911781311035
    5. ' ))' → logprob: -12.953911781311035
    6. ')
' → logprob: -14.203911781311035
    7. ' )' → logprob: -14.453911781311035
    8. '),' → logprob: -14.828911781311035
    9. '))

' → logprob: -15.953911781311035
    10. ')}' → logprob: -15.953911781311035

Token 65: 'def' (ID: 1314)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.1439199447631836
    2. 'colors' → logprob: -1.5189199447631836
    3. 'used' → logprob: -1.7689199447631836
    4. 'visited' → logprob: -2.1439199447631836
    5. 'dist' → logprob: -3.0189199447631836
    6. 'q' → logprob: -3.7689199447631836
    7. 'd' → logprob: -4.393919944763184
    8. 'stack' → logprob: -4.768919944763184
    9. 'edges' → logprob: -4.893919944763184
    10. 'dp' → logprob: -5.143919944763184

Token 66: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.05835248529911041
    2. ' bfs' → logprob: -3.058352470397949
    3. ' solve' → logprob: -5.558352470397949
    4. 'dfs' → logprob: -6.183352470397949
    5. ' color' → logprob: -6.933352470397949
    6. ' shortest' → logprob: -7.433352470397949
    7. ' ' → logprob: -7.683352470397949
    8. ' find' → logprob: -7.808352470397949
    9. ' main' → logprob: -8.05835247039795
    10. ' d' → logprob: -8.68335247039795

Token 67: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5684095621109009
    2. '(u' → logprob: -1.6934095621109009
    3. '(node' → logprob: -1.9434095621109009
    4. '(v' → logprob: -2.3184094429016113
    5. '(x' → logprob: -6.193409442901611
    6. '(s' → logprob: -6.318409442901611
    7. '(a' → logprob: -6.443409442901611
    8. ' (' → logprob: -7.443409442901611
    9. '(n' → logprob: -7.693409442901611
    10. '(i' → logprob: -8.31840991973877

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7530574849806726e-05
    2. ' ,' → logprob: -9.875057220458984
    3. '):' → logprob: -12.875057220458984
    4. ',a' → logprob: -13.875057220458984
    5. ',v' → logprob: -14.500057220458984
    6. ',node' → logprob: -15.000057220458984
    7. '   ' → logprob: -15.125057220458984
    8. ',b' → logprob: -15.625057220458984
    9. 'u' → logprob: -15.625057220458984
    10. ',u' → logprob: -15.750057220458984

Token 69: ' b' (ID: 287)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3748822510242462
    2. ' p' → logprob: -1.6248822212219238
    3. 'b' → logprob: -2.749882221221924
    4. ' b' → logprob: -4.124882221221924
    5. ' parent' → logprob: -4.374882221221924
    6. 'parent' → logprob: -4.624882221221924
    7. '-' → logprob: -6.124882221221924
    8. ' ' → logprob: -6.499882221221924
    9. 'visited' → logprob: -6.499882221221924
    10. ' visited' → logprob: -6.499882221221924

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020922427996993065
    2. '):' → logprob: -3.8959224224090576
    3. ')' → logprob: -8.145922660827637
    4. ' ,' → logprob: -10.520922660827637
    5. '):
' → logprob: -10.520922660827637
    6. ',a' → logprob: -12.395922660827637
    7. ' ):' → logprob: -12.520922660827637
    8. '   ' → logprob: -12.520922660827637
    9. 'a' → logprob: -12.895922660827637
    10. 'e' → logprob: -12.895922660827637

Token 71: ' d' (ID: 272)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8241782784461975
    2. 'c' → logprob: -1.0741782188415527
    3. 'visited' → logprob: -2.8241782188415527
    4. ' p' → logprob: -3.1991782188415527
    5. ' visited' → logprob: -3.6991782188415527
    6. 'parent' → logprob: -3.9491782188415527
    7. ' c' → logprob: -3.9491782188415527
    8. 'used' → logprob: -4.699178218841553
    9. ' parent' → logprob: -4.824178218841553
    10. 'v' → logprob: -4.949178218841553

Token 72: '=None' (ID: 12783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06844781339168549
    2. 'ep' → logprob: -3.0684478282928467
    3. '):' → logprob: -4.068447589874268
    4. 'th' → logprob: -7.443447589874268
    5. ')' → logprob: -7.818447589874268
    6. '   ' → logprob: -7.943447589874268
    7. 'pth' → logprob: -8.193448066711426
    8. '=' → logprob: -8.818448066711426
    9. ' ,' → logprob: -8.943448066711426
    10. 'p' → logprob: -9.318448066711426

Token 73: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004284130409359932
    2. ')' → logprob: -5.629283905029297
    3. ',' → logprob: -7.379283905029297
    4. ':' → logprob: -10.379283905029297
    5. '):
' → logprob: -11.129283905029297
    6. ' ):' → logprob: -11.379283905029297
    7. '=' → logprob: -14.379283905029297
    8. ' ' → logprob: -15.254283905029297
    9. '):
' → logprob: -15.504283905029297
    10. '=None' → logprob: -15.754283905029297

Token 74: ' c' (ID: 274)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.48733341693878174
    2. 'p' → logprob: -1.4873334169387817
    3. ' visited' → logprob: -2.737333297729492
    4. ' parent' → logprob: -3.612333297729492
    5. 'visited' → logprob: -4.237333297729492
    6. ' ' → logprob: -4.737333297729492
    7. ' v' → logprob: -4.987333297729492
    8. ' used' → logprob: -5.112333297729492
    9. ' c' → logprob: -5.112333297729492
    10. 'v' → logprob: -5.237333297729492

Token 75: '=-' (ID: 21714)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8570408225059509
    2. '):' → logprob: -0.8570408225059509
    3. '=None' → logprob: -2.1070408821105957
    4. 'ount' → logprob: -4.107040882110596
    5. 'olor' → logprob: -5.982040882110596
    6. 'ol' → logprob: -6.107040882110596
    7. ')' → logprob: -6.107040882110596
    8. ',' → logprob: -7.107040882110596
    9. 'ounter' → logprob: -7.107040882110596
    10. 'nt' → logprob: -7.357040882110596

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002123614540323615
    2. '2' → logprob: -8.750212669372559
    3. ' ' → logprob: -11.000212669372559
    4. '-' → logprob: -11.500212669372559
    5. '10' → logprob: -12.437712669372559
    6. 'd' → logprob: -12.562712669372559
    7. ')' → logprob: -13.187712669372559
    8. '(' → logprob: -13.187712669372559
    9. 'c' → logprob: -13.500212669372559
    10. 'float' → logprob: -13.500212669372559

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00043674863991327584
    2. ')' → logprob: -8.375436782836914
    3. ',' → logprob: -9.250436782836914
    4. '):
' → logprob: -9.375436782836914
    5. ' ):' → logprob: -10.875436782836914
    6. ':' → logprob: -12.875436782836914
    7. '):
' → logprob: -13.000436782836914
    8. '   ' → logprob: -14.625436782836914
    9. '):

' → logprob: -15.250436782836914
    10. ' ' → logprob: -15.750436782836914

Token 78: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19460642337799072
    2. '   ' → logprob: -1.8196064233779907
    3. ' if' → logprob: -5.319606304168701
    4. '):' → logprob: -5.319606304168701
    5. ',' → logprob: -6.569606304168701
    6. ' :' → logprob: -6.569606304168701
    7. ':
' → logprob: -7.194606304168701
    8. '<|end|>' → logprob: -7.444606304168701
    9. 'if' → logprob: -9.06960678100586
    10. '):
' → logprob: -9.19460678100586

Token 79: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.040053170174360275
    2. 'if' (adapté à ' if') → logprob: -3.790053129196167
    3. ' d' → logprob: -4.790053367614746
    4. '   ' → logprob: -5.415053367614746
    5. 'd' → logprob: -5.665053367614746
    6. ' depths' → logprob: -9.415053367614746
    7. 'depth' → logprob: -9.415053367614746
    8. ' depth' → logprob: -9.540053367614746
    9. ' c' → logprob: -9.915053367614746
    10. ' for' → logprob: -10.040053367614746

Token 80: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.14293526113033295
    2. 'd' → logprob: -2.017935276031494
    3. ' a' → logprob: -9.642934799194336
    4. ' not' → logprob: -9.892934799194336
    5. ' ' → logprob: -10.017934799194336
    6. ' c' → logprob: -10.142934799194336
    7. 'a' → logprob: -10.142934799194336
    8. 'c' → logprob: -11.517934799194336
    9. '   ' → logprob: -12.892934799194336
    10. ' ' → logprob: -13.392934799194336

Token 81: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4754509925842285
    2. 'is' → logprob: -0.9754509925842285
    3. '==' → logprob: -6.7254509925842285
    4. ' ==' → logprob: -9.35045051574707
    5. ' ' → logprob: -10.22545051574707
    6. '[' → logprob: -11.10045051574707
    7. '   ' → logprob: -11.72545051574707
    8. 'i' → logprob: -11.85045051574707
    9. ' i' → logprob: -12.97545051574707
    10. 'd' → logprob: -12.97545051574707

Token 82: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0059578376822173595
    2. ' None' → logprob: -5.13095760345459
    3. '   ' → logprob: -11.13095760345459
    4. ' ' → logprob: -12.75595760345459
    5. 'none' → logprob: -13.38095760345459
    6. 'N' → logprob: -13.50595760345459
    7. '0' → logprob: -13.63095760345459
    8. '  ' → logprob: -13.75595760345459
    9. 'not' → logprob: -13.88095760345459
    10. '[]' → logprob: -14.25595760345459

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024837462697178125
    2. ':
' → logprob: -6.00248384475708
    3. ' :' → logprob: -13.502483367919922
    4. ':d' → logprob: -13.502483367919922
    5. '<|end|>' → logprob: -13.877483367919922
    6. ':

' → logprob: -14.377483367919922
    7. '):' → logprob: -14.502483367919922
    8. 'd' → logprob: -14.627483367919922
    9. '   ' → logprob: -14.627483367919922
    10. ':return' → logprob: -14.877483367919922

Token 84: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8429647088050842
    2. '       ' → logprob: -1.0929646492004395
    3. '   ' → logprob: -2.3429646492004395
    4. 'd' → logprob: -2.7179646492004395
    5. ':
' → logprob: -3.4679646492004395
    6. ' d' → logprob: -3.4679646492004395
    7. ',' → logprob: -5.4679646492004395
    8. ':d' → logprob: -6.5929646492004395
    9. ',d' → logprob: -6.7179646492004395
    10. ' :' → logprob: -7.2179646492004395

Token 85: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.10249317437410355
    2. ' d' → logprob: -2.3524932861328125
    3. '   ' → logprob: -7.8524932861328125
    4. '{}' → logprob: -7.8524932861328125
    5. '[]' → logprob: -8.102493286132812
    6. '0' → logprob: -8.477493286132812
    7. ' ' → logprob: -8.727493286132812
    8. '{' → logprob: -8.727493286132812
    9. '    ' → logprob: -8.852493286132812
    10. ' []' → logprob: -9.227493286132812

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31367364525794983
    2. ' =' → logprob: -1.3136736154556274
    3. '={}' → logprob: -8.313673973083496
    4. '=[]' → logprob: -8.813673973083496
    5. ' ' → logprob: -12.563673973083496
    6. '={' → logprob: -12.688673973083496
    7. '=[' → logprob: -12.688673973083496
    8. ',' → logprob: -13.438673973083496
    9. ' ={' → logprob: -13.688673973083496
    10. '=set' → logprob: -13.813673973083496

Token 87: ' []
' (ID: 8911)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.8275567889213562
    2. '[' → logprob: -0.9525567889213562
    3. '{' → logprob: -2.577556848526001
    4. '[]' → logprob: -2.702556848526001
    5. '0' → logprob: -4.327556610107422
    6. 'set' → logprob: -4.577556610107422
    7. '[a' → logprob: -5.452556610107422
    8. '[-' → logprob: -6.077556610107422
    9. '[n' → logprob: -6.077556610107422
    10. '1' → logprob: -8.202556610107422

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11607232689857483
    2. '<|end|>' → logprob: -2.616072416305542
    3. '
' → logprob: -3.866072416305542
    4. '    
' → logprob: -4.866072177886963
    5. '<|end|>' → logprob: -6.741072177886963
    6. ' ' → logprob: -6.991072177886963
    7. '\n' → logprob: -6.991072177886963
    8. 'newline' → logprob: -7.491072177886963
    9. '  
' → logprob: -7.741072177886963
    10. ')' → logprob: -7.866072177886963

Token 89: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25219860672950745
    2. ' for' → logprob: -2.3771986961364746
    3. 'd' → logprob: -3.0021986961364746
    4. ' if' → logprob: -3.2521986961364746
    5. 'for' → logprob: -3.8771986961364746
    6. ' d' → logprob: -4.502198696136475
    7. 'if' (adapté à ' if') → logprob: -4.752198696136475
    8. '    
' → logprob: -8.877198219299316
    9. ' c' → logprob: -9.252198219299316
    10. '```' → logprob: -9.252198219299316

Token 90: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02880929410457611
    2. 'c' → logprob: -4.278809070587158
    3. ' a' → logprob: -4.528809070587158
    4. 'b' → logprob: -6.028809070587158
    5. 'len' → logprob: -7.528809070587158
    6. ' c' → logprob: -7.903809070587158
    7. '   ' → logprob: -8.653809547424316
    8. 'd' → logprob: -9.653809547424316
    9. ' b' → logprob: -10.028809547424316
    10. 'ab' → logprob: -10.153809547424316

Token 91: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5764066576957703
    2. '==' → logprob: -0.8264066576957703
    3. ' in' → logprob: -8.201406478881836
    4. ' not' → logprob: -9.201406478881836
    5. '!=' → logprob: -10.201406478881836
    6. ' !=' → logprob: -10.576406478881836
    7. '==
' → logprob: -11.701406478881836
    8. 'in' → logprob: -12.326406478881836
    9. 'not' → logprob: -12.451406478881836
    10. '=' → logprob: -12.951406478881836

Token 92: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006716317031532526
    2. ' b' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.50671672821045
    4. ' ' → logprob: -16.131715774536133
    5. ')b' → logprob: -16.256715774536133
    6. '	b' → logprob: -16.756715774536133
    7. '<|end|>' → logprob: -17.131715774536133
    8. '>b' → logprob: -17.944215774536133
    9. '    ' → logprob: -18.006715774536133
    10. 'B' → logprob: -18.131715774536133

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002119926968589425
    2. ':
' → logprob: -6.877120018005371
    3. ':return' → logprob: -6.877120018005371
    4. ' or' → logprob: -10.502120018005371
    5. ' :' → logprob: -11.252120018005371
    6. '   ' → logprob: -11.502120018005371
    7. ':
' → logprob: -13.627120018005371
    8. ' and' → logprob: -13.752120018005371
    9. '):' → logprob: -14.252120018005371
    10. '.' → logprob: -14.877120018005371

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05306938290596008
    2. ' return' → logprob: -3.5530693531036377
    3. '   ' → logprob: -4.053069591522217
    4. 'return' → logprob: -5.553069591522217
    5. ':' → logprob: -6.803069591522217
    6. ':return' → logprob: -7.678069591522217
    7. '\n' → logprob: -10.178069114685059
    8. '	return' → logprob: -10.553069114685059
    9. ' ' → logprob: -10.678069114685059
    10. '           ' → logprob: -10.803069114685059

Token 95: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5889636874198914
    2. '       ' → logprob: -1.2139637470245361
    3. ' return' → logprob: -2.463963747024536
    4. '   ' → logprob: -2.838963747024536
    5. 'd' → logprob: -6.213963508605957
    6. '           ' → logprob: -6.463963508605957
    7. ' d' → logprob: -8.338963508605957
    8. '
' → logprob: -8.838963508605957
    9. 'yield' → logprob: -8.963963508605957
    10. 'print' → logprob: -9.088963508605957

Token 96: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5765135884284973
    2. '[d' → logprob: -1.0765135288238525
    3. ' d' → logprob: -3.3265135288238525
    4. '[' → logprob: -3.5765135288238525
    5. ' [' → logprob: -4.201513767242432
    6. '[(' → logprob: -4.701513767242432
    7. '[c' → logprob: -5.951513767242432
    8. '[]' → logprob: -6.326513767242432
    9. '[a' → logprob: -7.201513767242432
    10. ' ' → logprob: -7.326513767242432

Token 97: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1360149383544922
    2. '
' → logprob: -2.261014938354492
    3. '    
' → logprob: -4.636014938354492
    4. 'for' → logprob: -5.136014938354492
    5. ' for' → logprob: -5.261014938354492
    6. '<|end|>' → logprob: -7.261014938354492
    7. '
' → logprob: -7.636014938354492
    8. '  
' → logprob: -8.136014938354492
    9. '  ' → logprob: -9.511014938354492
    10. 'd' → logprob: -9.761014938354492

Token 98: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9131842851638794
    2. '   ' → logprob: -1.0381842851638794
    3. 'for' → logprob: -1.4131842851638794
    4. '```' → logprob: -7.28818416595459
    5. '    
' → logprob: -8.16318416595459
    6. '
' → logprob: -8.66318416595459
    7. '	for' → logprob: -10.91318416595459
    8. 's' → logprob: -11.16318416595459
    9. 'd' → logprob: -11.41318416595459
    10. ' ' → logprob: -11.78818416595459

Token 99: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008322719484567642
    2. ' for' → logprob: -5.008322715759277
    3. '   ' → logprob: -6.508322715759277
    4. 'if' → logprob: -10.133322715759277
    5. '    
' → logprob: -10.508322715759277
    6. 'else' → logprob: -11.133322715759277
    7. '
' → logprob: -12.008322715759277
    8. 's' → logprob: -12.258322715759277
    9. 'c' → logprob: -12.633322715759277
    10. 'd' → logprob: -13.008322715759277

Token 100: ' i' (ID: 575)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2792786359786987
    2. 'i' → logprob: -1.6542786359786987
    3. 'x' → logprob: -2.1542787551879883
    4. 'c' → logprob: -2.2792787551879883
    5. 'w' → logprob: -3.2792787551879883
    6. 'to' → logprob: -3.2792787551879883
    7. 'e' → logprob: -3.6542787551879883
    8. 'u' → logprob: -3.9042787551879883
    9. 'nx' → logprob: -3.9042787551879883
    10. 't' → logprob: -4.279278755187988

Token 101: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3336096405982971
    2. 'in' → logprob: -1.5836095809936523
    3. ' in' → logprob: -2.5836095809936523
    4. ' ,' → logprob: -6.708609580993652
    5. 'n' → logprob: -7.583609580993652
    6. ',n' → logprob: -8.083609580993652
    7. ',(' → logprob: -8.583609580993652
    8. 'ab' → logprob: -9.083609580993652
    9. ' ' → logprob: -9.333609580993652
    10. '   ' → logprob: -9.458609580993652

Token 102: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.10188444703817368
    2. 'range' → logprob: -3.101884365081787
    3. ' ab' → logprob: -3.101884365081787
    4. ' range' → logprob: -4.976884365081787
    5. '   ' → logprob: -10.976884841918945
    6. ' ' → logprob: -10.976884841918945
    7. '(ab' → logprob: -12.851884841918945
    8. '  ' → logprob: -13.476884841918945
    9. 'abel' → logprob: -13.976884841918945
    10. ' xrange' → logprob: -14.976884841918945

Token 103: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.9153885558771435e-06
    2. 'a' → logprob: -12.500005722045898
    3. '[' → logprob: -13.875005722045898
    4. '[i' → logprob: -14.375005722045898
    5. ' [' → logprob: -14.875005722045898
    6. '   ' → logprob: -17.3750057220459
    7. '[b' → logprob: -17.3750057220459
    8. '[c' → logprob: -17.5000057220459
    9. '[A' → logprob: -17.7500057220459
    10. ' a' → logprob: -18.2500057220459

Token 104: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1434338241815567
    2. ']:
' → logprob: -2.0184338092803955
    3. ']:
' → logprob: -7.768434047698975
    4. ']' → logprob: -8.268433570861816
    5. ']:

' → logprob: -10.393433570861816
    6. ' ]' → logprob: -11.268433570861816
    7. ':' → logprob: -11.768433570861816
    8. ']>' → logprob: -12.268433570861816
    9. ']:


' → logprob: -12.393433570861816
    10. '][:' → logprob: -12.643433570861816

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1153920367360115
    2. ' if' → logprob: -2.365391969680786
    3. '   ' → logprob: -4.490392208099365
    4. 'if' → logprob: -5.740392208099365
    5. '```' → logprob: -8.365391731262207
    6. ',' → logprob: -8.865391731262207
    7. '
' → logprob: -9.365391731262207
    8. '    ' → logprob: -9.990391731262207
    9. 'If' → logprob: -10.365391731262207
    10. ' ' → logprob: -10.865391731262207

Token 106: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2622895836830139
    2. ' if' → logprob: -1.5122895240783691
    3. '       ' → logprob: -4.637289524078369
    4. '
' → logprob: -8.387290000915527
    5. '           ' → logprob: -8.762290000915527
    6. '   ' → logprob: -8.887290000915527
    7. '```' → logprob: -9.762290000915527
    8. 'If' → logprob: -11.262290000915527
    9. '        
' → logprob: -11.887290000915527
    10. '        ' → logprob: -12.637290000915527

Token 107: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6362060904502869
    2. ' i' → logprob: -0.7612060904502869
    3. 'c' → logprob: -6.011206150054932
    4. ' c' → logprob: -7.636206150054932
    5. ' not' → logprob: -8.386205673217773
    6. '   ' → logprob: -8.886205673217773
    7. '(i' → logprob: -9.386205673217773
    8. 'not' → logprob: -9.886205673217773
    9. ' ' → logprob: -10.011205673217773
    10. 'd' → logprob: -11.011205673217773

Token 108: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006120878737419844
    2. '(' → logprob: -5.506120681762695
    3. ' ' → logprob: -7.256120681762695
    4. '0' → logprob: -7.256120681762695
    5. ' !=' → logprob: -8.506120681762695
    6. ' not' → logprob: -9.131120681762695
    7. ' (' → logprob: -9.506120681762695
    8. '   ' → logprob: -9.881120681762695
    9. '()[' → logprob: -10.256120681762695
    10. ' [' → logprob: -10.381120681762695

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.723973582556937e-05
    2. '1' → logprob: -11.250017166137695
    3. ' ' → logprob: -12.875017166137695
    4. '(' → logprob: -14.500017166137695
    5. '
' → logprob: -14.625017166137695
    6. '[' → logprob: -15.500017166137695
    7. '   ' → logprob: -16.062517166137695
    8. '```' → logprob: -16.312517166137695
    9. '

' → logprob: -17.062517166137695
    10. '
' → logprob: -17.437517166137695

Token 110: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5358602404594421
    2. ' not' → logprob: -1.535860300064087
    3. ' !=' → logprob: -1.660860300064087
    4. 'not' → logprob: -4.910860061645508
    5. '==' → logprob: -6.285860061645508
    6. ' ==' → logprob: -8.285860061645508
    7. ')' → logprob: -10.035860061645508
    8. ']!=' → logprob: -10.535860061645508
    9. ')!=' → logprob: -10.785860061645508
    10. '!=(' → logprob: -12.410860061645508

Token 111: ' ==' (ID: 951)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3382715582847595
    2. '!=' → logprob: -1.4632716178894043
    3. ' !=' → logprob: -3.3382716178894043
    4. 'not' → logprob: -3.9632716178894043
    5. '==' → logprob: -6.963271617889404
    6. ' ==' → logprob: -9.713271141052246
    7. ' in' → logprob: -12.213271141052246
    8. '()!=' → logprob: -12.963271141052246
    9. 'in' → logprob: -13.463271141052246
    10. 'is' → logprob: -13.713271141052246

Token 112: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0031026117503643036
    2. ' c' → logprob: -5.878102779388428
    3. 'b' → logprob: -8.25310230255127
    4. 'a' → logprob: -10.25310230255127
    5. ' b' → logprob: -14.00310230255127
    6. ' a' → logprob: -14.75310230255127
    7. ' ' → logprob: -14.87810230255127
    8. '   ' → logprob: -15.25310230255127
    9. '	c' → logprob: -16.503103256225586
    10. '  ' → logprob: -17.753103256225586

Token 113: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4336497187614441
    2. ':' → logprob: -1.0586497783660889
    3. '   ' → logprob: -6.18364953994751
    4. '           ' → logprob: -7.18364953994751
    5. ' continue' → logprob: -7.43364953994751
    6. ' or' → logprob: -7.55864953994751
    7. '       ' → logprob: -7.80864953994751
    8. ':
' → logprob: -8.308650016784668
    9. 'continue' → logprob: -9.183650016784668
    10. ' ' → logprob: -9.433650016784668

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12811651825904846
    2. 'continue' → logprob: -2.6281166076660156
    3. ' continue' → logprob: -3.5031166076660156
    4. '       ' → logprob: -4.128116607666016
    5. '	continue' → logprob: -7.128116607666016
    6. '   ' → logprob: -7.253116607666016
    7. '	       ' → logprob: -9.628116607666016
    8. '
' → logprob: -9.753116607666016
    9. '	   ' → logprob: -10.503116607666016
    10. '_continue' → logprob: -10.753116607666016

Token 115: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5739685297012329
    2. ' continue' → logprob: -0.9489685297012329
    3. '           ' → logprob: -3.1989684104919434
    4. '       ' → logprob: -5.198968410491943
    5. '               ' → logprob: -6.073968410491943
    6. '	continue' → logprob: -7.448968410491943
    7. '   ' → logprob: -8.448968887329102
    8. '_continue' → logprob: -10.198968887329102
    9. '	       ' → logprob: -10.323968887329102
    10. 'contin' → logprob: -10.573968887329102

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2288336455821991
    2. '       ' → logprob: -1.7288336753845215
    3. '
' → logprob: -3.9788336753845215
    4. 'd' → logprob: -5.3538336753845215
    5. 'n' → logprob: -6.8538336753845215
    6. '    
' → logprob: -7.2288336753845215
    7. '        
' → logprob: -7.3538336753845215
    8. ' d' → logprob: -7.4788336753845215
    9. '<|end|>' → logprob: -9.103833198547363
    10. ')' → logprob: -9.478833198547363

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38944223523139954
    2. '   ' → logprob: -1.1394422054290771
    3. 'd' → logprob: -6.514442443847656
    4. '
' → logprob: -8.389442443847656
    5. 'n' → logprob: -8.514442443847656
    6. '        
' → logprob: -8.639442443847656
    7. ' d' → logprob: -9.014442443847656
    8. '    
' → logprob: -9.639442443847656
    9. 'dfs' → logprob: -9.639442443847656
    10. ',' → logprob: -10.514442443847656

Token 118: ' e' (ID: 319)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0682259202003479
    2. ' d' → logprob: -3.818225860595703
    3. '   ' → logprob: -3.818225860595703
    4. 'res' → logprob: -4.943225860595703
    5. '       ' → logprob: -4.943225860595703
    6. 'e' (adapté à ' e') → logprob: -6.818225860595703
    7. ' res' → logprob: -6.943225860595703
    8. 'return' → logprob: -7.068225860595703
    9. 'ans' → logprob: -7.318225860595703
    10. 'nd' → logprob: -7.443225860595703

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5067442655563354
    2. '=' → logprob: -1.1317442655563354
    3. ',' → logprob: -2.756744384765625
    4. 'f' → logprob: -5.381744384765625
    5. '=i' → logprob: -5.881744384765625
    6. '0' → logprob: -7.381744384765625
    7. 'lse' → logprob: -7.381744384765625
    8. ',i' → logprob: -7.506744384765625
    9. '[' → logprob: -7.631744384765625
    10. 'x' → logprob: -7.756744384765625

Token 120: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.12652935087680817
    2. ' dfs' → logprob: -2.3765294551849365
    3. 'd' → logprob: -3.7515294551849365
    4. ' d' → logprob: -6.126529216766357
    5. 'df' → logprob: -9.501529693603516
    6. 'i' → logprob: -9.751529693603516
    7. ' ' → logprob: -10.126529693603516
    8. ' i' → logprob: -10.751529693603516
    9. '[' → logprob: -10.876529693603516
    10. 'list' → logprob: -10.876529693603516

Token 121: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.250005722045898
    3. '(
' → logprob: -14.000005722045898
    4. 'i' → logprob: -18.1250057220459
    5. '((' → logprob: -18.6250057220459
    6. '(*' → logprob: -19.7500057220459
    7. '[i' → logprob: -20.0000057220459
    8. '(e' → logprob: -20.0000057220459
    9. '(I' → logprob: -20.0000057220459
    10. '```' → logprob: -20.0000057220459

Token 122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00019126241386402398
    2. '(' → logprob: -9.250191688537598
    3. '0' → logprob: -9.625191688537598
    4. 'i' → logprob: -12.125191688537598
    5. '[i' → logprob: -12.250191688537598
    6. '(i' → logprob: -12.625191688537598
    7. '   ' → logprob: -13.000191688537598
    8. '=' → logprob: -13.250191688537598
    9. '```' → logprob: -13.500191688537598
    10. ' ' → logprob: -13.625191688537598

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -11.875009536743164
    3. ' ' → logprob: -13.750009536743164
    4. '(' → logprob: -14.375009536743164
    5. '1' → logprob: -15.312509536743164
    6. '   ' → logprob: -15.562509536743164
    7. '```' → logprob: -16.000009536743164
    8. ',' → logprob: -16.500009536743164
    9. '۰' → logprob: -17.375009536743164
    10. '
' → logprob: -17.375009536743164

Token 124: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015021702274680138
    2. ',b' → logprob: -4.640021800994873
    3. ' ,' → logprob: -5.390021800994873
    4. 'b' → logprob: -7.390021800994873
    5. ' b' → logprob: -9.640021324157715
    6. '   ' → logprob: -12.515021324157715
    7. ',
' → logprob: -13.015021324157715
    8. '),' → logprob: -15.015021324157715
    9. ' ' → logprob: -15.265021324157715
    10. '       ' → logprob: -15.765021324157715

Token 125: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003805064770858735
    2. ' b' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.000380516052246
    4. '       ' → logprob: -18.00037956237793
    5. ')b' → logprob: -18.37537956237793
    6. '
' → logprob: -18.62537956237793
    7. ' ' → logprob: -18.75037956237793
    8. '	b' → logprob: -18.75037956237793
    9. '    ' → logprob: -19.62537956237793
    10. '  ' → logprob: -20.00037956237793

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009462343878112733
    2. ',d' → logprob: -7.250946044921875
    3. ' ,' → logprob: -8.500946044921875
    4. ',a' → logprob: -11.500946044921875
    5. 'd' → logprob: -11.625946044921875
    6. 'a' → logprob: -11.750946044921875
    7. '   ' → logprob: -12.750946044921875
    8. ',
' → logprob: -13.750946044921875
    9. '
' → logprob: -15.000946044921875
    10. ',b' → logprob: -15.375946044921875

Token 127: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003232852090150118
    2. ' d' → logprob: -5.753232955932617
    3. '   ' → logprob: -10.003232955932617
    4. '[d' → logprob: -12.878232955932617
    5. ' ' → logprob: -13.378232955932617
    6. '  ' → logprob: -13.628232955932617
    7. '[' → logprob: -13.753232955932617
    8. '    ' → logprob: -14.003232955932617
    9. '       ' → logprob: -14.503232955932617
    10. '
' → logprob: -14.628232955932617

Token 128: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.027299324050545692
    2. ' +' → logprob: -4.402299404144287
    3. '+d' → logprob: -5.027299404144287
    4. '+[' → logprob: -5.152299404144287
    5. '[:]' → logprob: -6.152299404144287
    6. 'd' → logprob: -9.277298927307129
    7. '=' → logprob: -10.277298927307129
    8. '[:' → logprob: -10.527298927307129
    9. '+c' → logprob: -10.902298927307129
    10. '   ' → logprob: -12.277298927307129

Token 129: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.060969989746809006
    2. '[' → logprob: -3.5609700679779053
    3. '[(' → logprob: -3.5609700679779053
    4. '[c' → logprob: -6.560969829559326
    5. ' [' → logprob: -7.685969829559326
    6. '[a' → logprob: -8.310970306396484
    7. '[b' → logprob: -9.685970306396484
    8. '[d' → logprob: -10.435970306396484
    9. '[e' → logprob: -10.560970306396484
    10. '[j' → logprob: -10.935970306396484

Token 130: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008408344583585858
    2. ' i' → logprob: -7.250840663909912
    3. 'j' → logprob: -9.00084114074707
    4. '   ' → logprob: -12.75084114074707
    5. ' ' → logprob: -13.62584114074707
    6. '  ' → logprob: -14.25084114074707
    7. '(i' → logprob: -14.50084114074707
    8. '
' → logprob: -14.62584114074707
    9. 'a' → logprob: -14.75084114074707
    10. ' j' → logprob: -15.00084114074707

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004019276238977909
    2. '1' → logprob: -5.629019260406494
    3. '
' → logprob: -8.629019737243652
    4. '][' → logprob: -9.379019737243652
    5. ' [' → logprob: -10.004019737243652
    6. ',' → logprob: -10.629019737243652
    7. ']' → logprob: -10.629019737243652
    8. '(' → logprob: -11.254019737243652
    9. '],' → logprob: -11.504019737243652
    10. '])' → logprob: -12.129019737243652

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.954393079970032e-05
    2. '
' → logprob: -10.125049591064453
    3. '[' → logprob: -13.375049591064453
    4. ']' → logprob: -13.375049591064453
    5. '

' → logprob: -13.375049591064453
    6. ' ' → logprob: -13.625049591064453
    7. '
' → logprob: -14.375049591064453
    8. '0' → logprob: -14.437549591064453
    9. '][' → logprob: -14.562549591064453
    10. '```' → logprob: -14.875049591064453

Token 133: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.20207293331623077
    2. '])' → logprob: -1.7020729780197144
    3. ']' → logprob: -7.702073097229004
    4. ']])' → logprob: -9.327073097229004
    5. ')])' → logprob: -10.327073097229004
    6. '])]' → logprob: -10.452073097229004
    7. ']))' → logprob: -10.952073097229004
    8. ' ],' → logprob: -10.952073097229004
    9. ' ])' → logprob: -12.077073097229004
    10. ']),' → logprob: -12.077073097229004

Token 134: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011200665176147595
    2. ' a' → logprob: -9.12511157989502
    3. '   ' → logprob: -13.25011157989502
    4. ' ' → logprob: -14.75011157989502
    5. '    ' → logprob: -15.25011157989502
    6. '	a' → logprob: -15.62511157989502
    7. '  ' → logprob: -15.75011157989502
    8. ')a' → logprob: -16.500112533569336
    9. '     ' → logprob: -16.750112533569336
    10. 'i' → logprob: -16.875112533569336

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2014288455247879
    2. ')
' → logprob: -1.7014288902282715
    3. '       ' → logprob: -12.701428413391113
    4. ' )' → logprob: -12.701428413391113
    5. ' )
' → logprob: -12.951428413391113
    6. ')
' → logprob: -12.951428413391113
    7. ')

' → logprob: -13.076428413391113
    8. '   ' → logprob: -13.326428413391113
    9. ')return' → logprob: -15.076428413391113
    10. '))' → logprob: -15.951428413391113

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2874194085597992
    2. '   ' → logprob: -2.037419319152832
    3. '           ' → logprob: -2.787419319152832
    4. ')' → logprob: -2.912419319152832
    5. 'return' → logprob: -7.162419319152832
    6. '<|end|>' → logprob: -7.162419319152832
    7. '               ' → logprob: -7.787419319152832
    8. ')
' → logprob: -8.287419319152832
    9. ' if' → logprob: -8.412419319152832
    10. '    ' → logprob: -8.787419319152832

Token 137: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32199233770370483
    2. '       ' → logprob: -1.5719923973083496
    3. ' if' → logprob: -2.6969923973083496
    4. '	if' → logprob: -8.571991920471191
    5. '   ' → logprob: -10.071991920471191
    6. '	' → logprob: -11.571991920471191
    7. 'return' → logprob: -12.196991920471191
    8. '<|end|>' → logprob: -12.571991920471191
    9. '           ' → logprob: -13.071991920471191
    10. ' ' → logprob: -13.946991920471191

Token 138: ' len' (ID: 4631)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.06999912858009338
    2. 'e' → logprob: -2.6949992179870605
    3. 'len' → logprob: -10.069998741149902
    4. ' ' → logprob: -11.569998741149902
    5. ' len' → logprob: -11.569998741149902
    6. '   ' → logprob: -14.819998741149902
    7. '	e' → logprob: -15.069998741149902
    8. ' ' → logprob: -15.444998741149902
    9. '  ' → logprob: -15.694998741149902
    10. ' not' → logprob: -16.06999969482422

Token 139: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.125001907348633
    3. '(d' → logprob: -15.750001907348633
    4. ' (' → logprob: -16.250001907348633
    5. 'e' → logprob: -17.375001907348633
    6. '(
' → logprob: -18.000001907348633
    7. ')' → logprob: -18.500001907348633
    8. '>' → logprob: -19.375001907348633
    9. '(s' → logprob: -19.750001907348633
    10. '(

' → logprob: -20.125001907348633

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015611969865858555
    2. ')>' → logprob: -4.2656121253967285
    3. '):
' → logprob: -6.8906121253967285
    4. '>' → logprob: -8.76561164855957
    5. '):' → logprob: -9.14061164855957
    6. ')!=' → logprob: -9.14061164855957
    7. ' >' → logprob: -11.14061164855957
    8. '):

' → logprob: -11.39061164855957
    9. ' )' → logprob: -11.51561164855957
    10. ' ' → logprob: -11.76561164855957

Token 141: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.030968939885497093
    2. ' >' → logprob: -4.280969142913818
    3. '!=' → logprob: -4.530969142913818
    4. ':' → logprob: -6.030969142913818
    5. ')>' → logprob: -6.780969142913818
    6. '">' → logprob: -7.405969142913818
    7. ')' → logprob: -7.405969142913818
    8. ' !=' → logprob: -7.655969142913818
    9. '()>' → logprob: -8.15596866607666
    10. '<|end|>' → logprob: -9.53096866607666

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003396343090571463
    2. ' ' → logprob: -8.00033950805664
    3. '   ' → logprob: -13.12533950805664
    4. 'n' → logprob: -14.87533950805664
    5. '  ' → logprob: -14.87533950805664
    6. '    ' → logprob: -15.25033950805664
    7. '1' → logprob: -15.50033950805664
    8. '       ' → logprob: -15.62533950805664
    9. '```' → logprob: -16.06283950805664
    10. '
' → logprob: -16.31283950805664

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018422940047457814
    2. ' ' → logprob: -9.125184059143066
    3. 'n' → logprob: -9.625184059143066
    4. '1' → logprob: -12.000184059143066
    5. 'len' → logprob: -13.375184059143066
    6. '(n' → logprob: -15.375184059143066
    7. '   ' → logprob: -15.500184059143066
    8. 'j' → logprob: -15.500184059143066
    9. ' n' → logprob: -15.625184059143066
    10. '```' → logprob: -15.750184059143066

Token 144: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4395015835762024
    2. ':' → logprob: -1.0645015239715576
    3. ':return' → logprob: -4.564501762390137
    4. '):
' → logprob: -9.189501762390137
    5. '   ' → logprob: -9.189501762390137
    6. '       ' → logprob: -9.939501762390137
    7. ' :
' → logprob: -10.939501762390137
    8. ':
' → logprob: -11.189501762390137
    9. ' and' → logprob: -11.814501762390137
    10. '           ' → logprob: -11.814501762390137

Token 145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012198820477351546
    2. 'return' → logprob: -7.001219749450684
    3. ' return' → logprob: -8.251219749450684
    4. '               ' → logprob: -10.751219749450684
    5. '       ' → logprob: -11.251219749450684
    6. '
' → logprob: -11.876219749450684
    7. '   ' → logprob: -13.376219749450684
    8. ':return' → logprob: -13.626219749450684
    9. '          ' → logprob: -13.751219749450684
    10. '		' → logprob: -14.751219749450684

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11177131533622742
    2. ' return' → logprob: -2.61177134513855
    3. '           ' → logprob: -3.48677134513855
    4. '
' → logprob: -6.861771106719971
    5. '               ' → logprob: -7.486771106719971
    6. '       ' → logprob: -9.861771583557129
    7. '   ' → logprob: -10.111771583557129
    8. '	return' → logprob: -10.611771583557129
    9. ':return' → logprob: -11.111771583557129
    10. 'eturn' → logprob: -13.236771583557129

Token 147: ' set' (ID: 920)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02324547804892063
    2. ' e' → logprob: -3.7732455730438232
    3. '	e' → logprob: -18.398244857788086
    4. ' ' → logprob: -18.648244857788086
    5. '(e' → logprob: -20.148244857788086
    6. ' ' → logprob: -20.273244857788086
    7. '   ' → logprob: -20.398244857788086
    8. '`' → logprob: -20.523244857788086
    9. '```' → logprob: -20.523244857788086
    10. 'd' → logprob: -20.648244857788086

Token 148: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -3.440506407059729e-05
    2. '(' → logprob: -11.12503433227539
    3. 'e' → logprob: -11.50003433227539
    4. '()' → logprob: -11.87503433227539
    5. ' (' → logprob: -14.25003433227539
    6. ')' → logprob: -14.62503433227539
    7. '(
' → logprob: -15.00003433227539
    8. ')e' → logprob: -15.50003433227539
    9. '((' → logprob: -15.62503433227539
    10. ')(' → logprob: -15.75003433227539

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015559245366603136
    2. '())' → logprob: -6.501555919647217
    3. ' )' → logprob: -10.751556396484375
    4. '()' → logprob: -10.751556396484375
    5. ')
' → logprob: -12.251556396484375
    6. '))' → logprob: -13.001556396484375
    7. ')}' → logprob: -14.376556396484375
    8. ')}}' → logprob: -14.626556396484375
    9. '})' → logprob: -14.876556396484375
    10. '}' → logprob: -15.001556396484375

Token 150: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' return' (ID: 622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6582652926445007
    2. '<|end|>' → logprob: -1.1582653522491455
    3. ' ' → logprob: -2.1582653522491455
    4. '}' → logprob: -4.408265113830566
    5. ']' → logprob: -4.908265113830566
    6. 'return' (adapté à ' return') → logprob: -5.158265113830566
    7. 'None' → logprob: -5.283265113830566
    8. '   ' → logprob: -6.033265113830566
    9. '_' → logprob: -6.033265113830566
    10. '\' → logprob: -6.158265113830566

Token 152: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00015038289711810648
    2. ' set' → logprob: -8.875150680541992
    3. 'None' → logprob: -11.875150680541992
    4. '[]' → logprob: -13.125150680541992
    5. '{}' → logprob: -14.000150680541992
    6. '(set' → logprob: -15.500150680541992
    7. '0' → logprob: -16.375150680541992
    8. '	set' → logprob: -16.625150680541992
    9. '=set' → logprob: -16.625150680541992
    10. 'False' → logprob: -16.750150680541992

Token 153: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -6.869017852295656e-06
    2. '([]' → logprob: -13.125006675720215
    3. '()
' → logprob: -13.625006675720215
    4. '()<' → logprob: -13.875006675720215
    5. '()}' → logprob: -14.500006675720215
    6. '()</' → logprob: -14.875006675720215
    7. '()]' → logprob: -15.375006675720215
    8. '()`' → logprob: -15.375006675720215
    9. '(),' → logprob: -15.500006675720215
    10. ' ()' → logprob: -15.625006675720215

Token 154: 'm' (ID: 76)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11621147394180298
    2. '<|end|>' → logprob: -2.366211414337158
    3. ' )' → logprob: -4.491211414337158
    4. ' ' → logprob: -5.866211414337158
    5. '[' → logprob: -8.366211891174316
    6. 'n' → logprob: -8.491211891174316
    7. '<|end|>' → logprob: -8.491211891174316
    8. '_' → logprob: -8.741211891174316
    9. '(' → logprob: -8.741211891174316
    10. '   ' → logprob: -8.866211891174316

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38399362564086914
    2. '=' → logprob: -1.3839936256408691
    3. ',' → logprob: -2.883993625640869
    4. 'a' → logprob: -5.883993625640869
    5. 'ax' → logprob: -5.883993625640869
    6. ' ' → logprob: -6.383993625640869
    7. 'e' → logprob: -6.508993625640869
    8. 's' → logprob: -7.758993625640869
    9. '  ' → logprob: -7.883993625640869
    10. '_' → logprob: -8.258993148803711

Token 156: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09791162610054016
    2. 'n' → logprob: -2.4729115962982178
    3. ' int' → logprob: -5.347911834716797
    4. '[int' → logprob: -6.847911834716797
    5. '0' → logprob: -6.972911834716797
    6. ' n' → logprob: -7.472911834716797
    7. '[]' → logprob: -7.847911834716797
    8. '{}' → logprob: -8.222911834716797
    9. '(int' → logprob: -8.347911834716797
    10. 'set' → logprob: -8.597911834716797

Token 157: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.958325295476243e-05
    2. '()' → logprob: -10.000079154968262
    3. '(' → logprob: -10.500079154968262
    4. 'input' → logprob: -12.250079154968262
    5. ' (' → logprob: -13.875079154968262
    6. '=input' → logprob: -14.750079154968262
    7. '(
' → logprob: -15.125079154968262
    8. ' input' → logprob: -16.125080108642578
    9. ' ()' → logprob: -17.625080108642578
    10. ',input' → logprob: -17.750080108642578

Token 158: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10958459973335266
    2. '()' → logprob: -2.3595845699310303
    3. ')' → logprob: -4.859584808349609
    4. '()
' → logprob: -6.984584808349609
    5. '())
' → logprob: -7.359584808349609
    6. '(' → logprob: -11.85958480834961
    7. ')
' → logprob: -12.85958480834961
    8. ' ())' → logprob: -13.23458480834961
    9. '();)' → logprob: -13.85958480834961
    10. '())
' → logprob: -14.48458480834961

Token 159: 'ms' (ID: 1782)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3518249988555908
    2. 'ans' → logprob: -2.351824998855591
    3. 'res' → logprob: -2.726824998855591
    4. 'path' → logprob: -3.601824998855591
    5. 'results' → logprob: -4.101824760437012
    6. 'answers' → logprob: -4.101824760437012
    7. 'paths' → logprob: -4.351824760437012
    8. 'result' → logprob: -4.601824760437012
    9. 'dp' → logprob: -4.726824760437012
    10. 'cd' → logprob: -5.226824760437012

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4749549329280853
    2. ' =' → logprob: -0.9749549627304077
    3. 'for' → logprob: -8.974954605102539
    4. ',' → logprob: -8.974954605102539
    5. '   ' → logprob: -9.349954605102539
    6. 's' → logprob: -9.599954605102539
    7. ')' → logprob: -9.599954605102539
    8. ' ' → logprob: -9.599954605102539
    9. '=[]' → logprob: -9.599954605102539
    10. '_' → logprob: -9.724954605102539

Token 161: ' []
' (ID: 8911)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.12151830643415451
    2. '[]' → logprob: -2.37151837348938
    3. '[' → logprob: -4.871518135070801
    4. '[input' → logprob: -5.496518135070801
    5. ' []' → logprob: -5.621518135070801
    6. ' [' → logprob: -5.621518135070801
    7. '[list' → logprob: -6.746518135070801
    8. '[i' → logprob: -7.371518135070801
    9. '[str' → logprob: -9.3715181350708
    10. '[]
' → logprob: -9.6215181350708

Token 162: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.2378600735682994e-05
    2. ' for' → logprob: -11.125032424926758
    3. 'colors' → logprob: -11.250032424926758
    4. 'ms' → logprob: -13.625032424926758
    5. 'edges' → logprob: -13.750032424926758
    6. 'ans' → logprob: -14.375032424926758
    7. 'results' → logprob: -14.625032424926758
    8. 'answers' → logprob: -14.750032424926758
    9. 'm' → logprob: -15.625032424926758
    10. 'result' → logprob: -15.750032424926758

Token 163: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03554737940430641
    2. '_i' → logprob: -3.9105474948883057
    3. ' _' → logprob: -4.410547256469727
    4. 'i' → logprob: -6.160547256469727
    5. ' i' → logprob: -7.410547256469727
    6. '_k' → logprob: -11.910547256469727
    7. ' ' → logprob: -12.035547256469727
    8. '__' → logprob: -12.660547256469727
    9. '_=' → logprob: -12.910547256469727
    10. '_x' → logprob: -13.160547256469727

Token 164: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02738446556031704
    2. ' in' → logprob: -3.6523845195770264
    3. 'range' → logprob: -6.902384281158447
    4. ' ' → logprob: -10.402384757995605
    5. 'm' → logprob: -10.777384757995605
    6. 's' → logprob: -11.152384757995605
    7. '_' → logprob: -12.527384757995605
    8. 'n' → logprob: -13.152384757995605
    9. ' _' → logprob: -13.402384757995605
    10. 'i' → logprob: -13.402384757995605

Token 165: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004623322281986475
    2. ' range' → logprob: -5.3796234130859375
    3. 'm' → logprob: -14.629623413085938
    4. ' ' → logprob: -14.629623413085938
    5. '[' → logprob: -14.879623413085938
    6. 'ms' → logprob: -15.129623413085938
    7. 'input' → logprob: -15.254623413085938
    8. '	range' → logprob: -15.379623413085938
    9. '(range' → logprob: -15.379623413085938
    10. 'r' → logprob: -15.504623413085938

Token 166: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.799461305141449
    2. ' m' → logprob: -0.799461305141449
    3. '(m' → logprob: -2.2994613647460938
    4. ' range' → logprob: -8.299461364746094
    5. '(' → logprob: -8.424461364746094
    6. 'range' → logprob: -9.799461364746094
    7. ' (' → logprob: -10.924461364746094
    8. '(range' → logprob: -13.674461364746094
    9. '	m' → logprob: -14.049461364746094
    10. '_m' → logprob: -14.174461364746094

Token 167: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4454866051673889
    2. ':' → logprob: -1.4454865455627441
    3. '):' → logprob: -2.320486545562744
    4. ':
' → logprob: -4.070486545562744
    5. '():
' → logprob: -5.570486545562744
    6. ')' → logprob: -6.445486545562744
    7. ' :' → logprob: -6.695486545562744
    8. ' ):
' → logprob: -7.570486545562744
    9. ' :
' → logprob: -7.820486545562744
    10. '):
' → logprob: -8.195487022399902

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.950005054473877
    2. 'a' → logprob: -1.450005054473877
    3. ' a' → logprob: -1.825005054473877
    4. 'x' → logprob: -2.950005054473877
    5. ' u' → logprob: -3.075005054473877
    6. ' s' → logprob: -3.450005054473877
    7. 's' → logprob: -3.450005054473877
    8. 'u' → logprob: -3.700005054473877
    9. ' x' → logprob: -4.700005054473877
    10. 'ms' → logprob: -4.700005054473877

Token 169: ' u' (ID: 337)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9129958152770996
    2. 'u' (adapté à ' u') → logprob: -1.2879958152770996
    3. 's' → logprob: -1.4129958152770996
    4. 'p' → logprob: -3.5379958152770996
    5. 'a' → logprob: -3.6629958152770996
    6. 'ms' → logprob: -4.9129958152771
    7. 'f' → logprob: -5.2879958152771
    8. 'c' → logprob: -5.5379958152771
    9. 'l' → logprob: -5.6629958152771
    10. 'm' → logprob: -6.9129958152771

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022104429081082344
    2. ',v' → logprob: -6.25221061706543
    3. ' ,' → logprob: -8.25221061706543
    4. ',b' → logprob: -11.87721061706543
    5. ',s' → logprob: -12.00221061706543
    6. 's' → logprob: -12.87721061706543
    7. '_,' → logprob: -13.62721061706543
    8. ',u' → logprob: -14.25221061706543
    9. 'v' → logprob: -14.75221061706543
    10. ',p' → logprob: -14.87721061706543

Token 171: ' p' (ID: 275)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0036055364180356264
    2. ' v' → logprob: -5.628605365753174
    3. '	v' → logprob: -12.878605842590332
    4. 'vv' → logprob: -13.628605842590332
    5. ' ' → logprob: -14.378605842590332
    6. '_v' → logprob: -14.878605842590332
    7. ',v' → logprob: -15.753605842590332
    8. '  ' → logprob: -15.878605842590332
    9. '   ' → logprob: -16.128604888916016
    10. 'w' → logprob: -16.378604888916016

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47445952892303467
    2. ' =' → logprob: -0.9744595289230347
    3. ',' → logprob: -8.099459648132324
    4. ')' → logprob: -11.474459648132324
    5. 'p' → logprob: -11.474459648132324
    6. ' ' → logprob: -11.474459648132324
    7. 'c' → logprob: -12.099459648132324
    8. 'a' → logprob: -12.349459648132324
    9. 'b' → logprob: -12.349459648132324
    10. 'u' → logprob: -12.349459648132324

Token 173: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.33684617280960083
    2. '[input' → logprob: -1.711846113204956
    3. ' [' → logprob: -2.586846113204956
    4. '[' → logprob: -4.336846351623535
    5. ' map' → logprob: -4.836846351623535
    6. 'map' → logprob: -5.086846351623535
    7. '[i' → logprob: -6.086846351623535
    8. '[list' → logprob: -8.211846351623535
    9. '[u' → logprob: -9.586846351623535
    10. '[str' → logprob: -9.586846351623535

Token 174: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.531315314830863e-06
    2. ' int' → logprob: -12.750003814697266
    3. '(int' → logprob: -15.750003814697266
    4. '[int' → logprob: -15.750003814697266
    5. '   ' → logprob: -16.625003814697266
    6. 'str' → logprob: -16.750003814697266
    7. 'map' → logprob: -17.750003814697266
    8. '  ' → logprob: -18.000003814697266
    9. ' ' → logprob: -18.125003814697266
    10. '```' → logprob: -18.375003814697266

Token 175: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0007162463734857738
    2. '(x' → logprob: -7.250716209411621
    3. 'i' → logprob: -13.000716209411621
    4. '(s' → logprob: -13.250716209411621
    5. '(k' → logprob: -13.750716209411621
    6. '()' → logprob: -14.750716209411621
    7. '(_)' → logprob: -15.500716209411621
    8. '(' → logprob: -16.125717163085938
    9. '(input' → logprob: -16.500717163085938
    10. '(a' → logprob: -16.625717163085938

Token 176: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08373409509658813
    2. '()' → logprob: -2.5837340354919434
    3. '(i' → logprob: -5.458734035491943
    4. ' for' → logprob: -9.208734512329102
    5. '(x' → logprob: -9.208734512329102
    6. ' ' → logprob: -9.583734512329102
    7. ')i' → logprob: -10.208734512329102
    8. 'for' → logprob: -10.458734512329102
    9. '(input' → logprob: -10.458734512329102
    10. '   ' → logprob: -10.708734512329102

Token 177: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.749750018119812
    2. '()' → logprob: -1.249750018119812
    3. '()-' → logprob: -1.499750018119812
    4. 'input' → logprob: -4.624750137329102
    5. ')' → logprob: -5.874750137329102
    6. ' -' → logprob: -6.249750137329102
    7. ' input' → logprob: -7.749750137329102
    8. '().' → logprob: -7.749750137329102
    9. 'for' → logprob: -7.874750137329102
    10. '(input' → logprob: -7.874750137329102

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004907185211777687
    2. ' ' → logprob: -7.625490665435791
    3. '0' → logprob: -14.37549114227295
    4. 'for' → logprob: -14.50049114227295
    5. '   ' → logprob: -14.50049114227295
    6. '2' → logprob: -15.00049114227295
    7. ' for' → logprob: -15.12549114227295
    8. '```' → logprob: -16.812990188598633
    9. '<|end|>' → logprob: -17.312990188598633
    10. '  ' → logprob: -17.375490188598633

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.250036239624023
    3. '2' → logprob: -14.875036239624023
    4. '0' → logprob: -15.500036239624023
    5. '   ' → logprob: -15.500036239624023
    6. 'for' → logprob: -16.500036239624023
    7. 'int' → logprob: -17.125036239624023
    8. 'p' → logprob: -17.875036239624023
    9. 'input' → logprob: -18.062536239624023
    10. ' for' → logprob: -18.187536239624023

Token 180: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47608819603919983
    2. 'for' → logprob: -0.9760881662368774
    3. ')' → logprob: -6.226088047027588
    4. ' ' → logprob: -11.101088523864746
    5. '	for' → logprob: -11.351088523864746
    6. ',' → logprob: -13.226088523864746
    7. '   ' → logprob: -13.726088523864746
    8. ']' → logprob: -13.851088523864746
    9. '),' → logprob: -14.976088523864746
    10. '()' → logprob: -15.226088523864746

Token 181: ' i' (ID: 575)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519291639328003
    2. ' input' → logprob: -1.5019291639328003
    3. '(input' → logprob: -17.876928329467773
    4. ' ' → logprob: -18.251928329467773
    5. 'in' → logprob: -18.501928329467773
    6. '=input' → logprob: -18.876928329467773
    7. 'Input' → logprob: -19.126928329467773
    8. '   ' → logprob: -19.501928329467773
    9. '	input' → logprob: -19.626928329467773
    10. '<input' → logprob: -19.751928329467773

Token 182: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08014149218797684
    2. 'input' → logprob: -2.580141544342041
    3. ' in' → logprob: -7.580141544342041
    4. '=input' → logprob: -7.705141544342041
    5. '(input' → logprob: -8.830141067504883
    6. 'in' → logprob: -9.455141067504883
    7. ',input' → logprob: -10.205141067504883
    8. '[input' → logprob: -11.205141067504883
    9. '_input' → logprob: -12.330141067504883
    10. ' range' → logprob: -12.705141067504883

Token 183: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.061967797577381134
    2. ' input' → logprob: -2.8119678497314453
    3. ' ' → logprob: -17.061967849731445
    4. 'range' → logprob: -17.561967849731445
    5. '(input' → logprob: -17.561967849731445
    6. '	input' → logprob: -18.811967849731445
    7. 'output' → logprob: -19.061967849731445
    8. '
' → logprob: -19.436967849731445
    9. '<input' → logprob: -19.436967849731445
    10. ' range' → logprob: -19.561967849731445

Token 184: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.2200749754119897e-06
    2. '()' → logprob: -13.125001907348633
    3. '.split' → logprob: -16.375001907348633
    4. ' ().' → logprob: -17.250001907348633
    5. '()].' → logprob: -18.000001907348633
    6. '.' → logprob: -18.500001907348633
    7. '()]' → logprob: -19.000001907348633
    8. '(' → logprob: -19.000001907348633
    9. '()
' → logprob: -19.875001907348633
    10. '].' → logprob: -20.375001907348633

Token 185: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.5577775128767826e-06
    2. ' split' → logprob: -12.125005722045898
    3. 'strip' → logprob: -15.750005722045898
    4. 'plit' → logprob: -17.6250057220459
    5. '(split' → logprob: -19.0000057220459
    6. '.split' → logprob: -19.1250057220459
    7. 'rstrip' → logprob: -19.2500057220459
    8. ' ' → logprob: -19.3750057220459
    9. 'spl' → logprob: -20.2500057220459
    10. 'read' → logprob: -20.7500057220459

Token 186: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0009697027853690088
    2. ']' → logprob: -7.875969886779785
    3. '()]
' → logprob: -7.875969886779785
    4. '()' → logprob: -8.500969886779785
    5. ')]' → logprob: -12.750969886779785
    6. '())' → logprob: -13.375969886779785
    7. '(' → logprob: -14.250969886779785
    8. ']()' → logprob: -14.625969886779785
    9. '()
' → logprob: -14.875969886779785
    10. ']
' → logprob: -15.500969886779785

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00890420749783516
    2. 'ms' → logprob: -5.133903980255127
    3. '
' → logprob: -6.133903980255127
    4. ')' → logprob: -7.883903980255127
    5. 'm' → logprob: -8.758904457092285
    6. ',' → logprob: -9.508904457092285
    7. ')
' → logprob: -9.508904457092285
    8. '	ms' → logprob: -10.633904457092285
    9. '<|end|>' → logprob: -10.633904457092285
    10. ' ms' → logprob: -11.508904457092285

Token 188: ' ms' (ID: 15217)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' (adapté à ' ms') → logprob: -0.012749549932777882
    2. '   ' → logprob: -5.012749671936035
    3. ' ms' → logprob: -5.137749671936035
    4. 'm' → logprob: -9.762749671936035
    5. '
' → logprob: -11.012749671936035
    6. '	ms' → logprob: -11.262749671936035
    7. 'u' → logprob: -11.387749671936035
    8. ' ' → logprob: -12.012749671936035
    9. 's' → logprob: -12.012749671936035
    10. 'cs' → logprob: -12.637749671936035

Token 189: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009794592624530196
    2. '.' → logprob: -7.000979423522949
    3. '.app' → logprob: -10.62597942352295
    4. '.ap' → logprob: -10.62597942352295
    5. '.extend' → logprob: -12.37597942352295
    6. '.setdefault' → logprob: -12.50097942352295
    7. '.push' → logprob: -12.75097942352295
    8. '​.' → logprob: -13.37597942352295
    9. ' .' → logprob: -13.50097942352295
    10. '.add' → logprob: -13.62597942352295

Token 190: '(d' (ID: 2572)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00043102685594931245
    2. '(' → logprob: -8.750431060791016
    3. '(u' → logprob: -8.750431060791016
    4. '(d' → logprob: -9.250431060791016
    5. '(((' → logprob: -12.250431060791016
    6. '(([' → logprob: -12.375431060791016
    7. '([' → logprob: -12.375431060791016
    8. '(df' → logprob: -13.500431060791016
    9. '(p' → logprob: -13.750431060791016
    10. 'dfs' → logprob: -14.750431060791016

Token 191: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0009243228123523295
    2. '(u' → logprob: -7.375924110412598
    3. 's' → logprob: -8.750924110412598
    4. '[u' → logprob: -10.375924110412598
    5. '(fs' → logprob: -10.375924110412598
    6. 'f' → logprob: -10.625924110412598
    7. 'dfs' → logprob: -11.000924110412598
    8. '(s' → logprob: -11.875924110412598
    9. 'su' → logprob: -11.875924110412598
    10. 'sf' → logprob: -12.625924110412598

Token 192: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0025189423467963934
    2. '(p' → logprob: -6.002519130706787
    3. '(' → logprob: -10.252518653869629
    4. 'u' → logprob: -13.252518653869629
    5. ')' → logprob: -13.877518653869629
    6. '(n' → logprob: -14.002518653869629
    7. '(m' → logprob: -14.127518653869629
    8. '(a' → logprob: -14.252518653869629
    9. ')(' → logprob: -14.252518653869629
    10. '((' → logprob: -14.502518653869629

Token 193: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7283709049224854
    2. ',' → logprob: -1.1033709049224854
    3. 'p' → logprob: -1.9783709049224854
    4. ',p' → logprob: -3.2283709049224854
    5. '(' → logprob: -5.478370666503906
    6. '(n' → logprob: -6.353370666503906
    7. '0' → logprob: -7.978370666503906
    8. '(u' → logprob: -7.978370666503906
    9. ' ,' → logprob: -8.853370666503906
    10. 'u' → logprob: -9.353370666503906

Token 194: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009973214473575354
    2. ' p' → logprob: -7.000997543334961
    3. '0' → logprob: -10.000997543334961
    4. '   ' → logprob: -11.125997543334961
    5. 'n' → logprob: -11.375997543334961
    6. ' ' → logprob: -11.375997543334961
    7. 'u' → logprob: -13.750997543334961
    8. '  ' → logprob: -14.625997543334961
    9. '    ' → logprob: -15.125997543334961
    10. 'm' → logprob: -15.500997543334961

Token 195: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0026649541687220335
    2. ')' → logprob: -6.127665042877197
    3. '))
' → logprob: -8.752664566040039
    4. '[' → logprob: -9.127664566040039
    5. '()))' → logprob: -9.502664566040039
    6. ')))' → logprob: -10.502664566040039
    7. ' ))' → logprob: -10.502664566040039
    8. ')[' → logprob: -10.502664566040039
    9. ',' → logprob: -11.377664566040039
    10. '(' → logprob: -11.627664566040039

Token 196: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10067081451416016
    2. '<|end|>' → logprob: -3.22567081451416
    3. ']' → logprob: -4.22567081451416
    4. '[' → logprob: -4.60067081451416
    5. '{' → logprob: -4.72567081451416
    6. '#' → logprob: -5.22567081451416
    7. ' ' → logprob: -5.60067081451416
    8. '}' → logprob: -6.10067081451416
    9. 's' → logprob: -6.22567081451416
    10. 'ms' → logprob: -7.10067081451416

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05503416433930397
    2. '=' → logprob: -2.9300341606140137
    3. 's' → logprob: -9.180034637451172
    4. ' ' → logprob: -10.805034637451172
    5. '_' → logprob: -11.305034637451172
    6. ',' → logprob: -11.930034637451172
    7. ' =
' → logprob: -13.555034637451172
    8. 'es' → logprob: -13.930034637451172
    9. '=[]' → logprob: -14.055034637451172
    10. ' ' → logprob: -14.055034637451172

Token 198: ' ' (ID: 220)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3105495870113373
    2. '[' → logprob: -2.31054949760437
    3. '0' → logprob: -2.56054949760437
    4. '[]' → logprob: -3.81054949760437
    5. '[m' → logprob: -4.185549736022949
    6. '[max' → logprob: -4.435549736022949
    7. '[n' → logprob: -4.685549736022949
    8. '{' → logprob: -4.685549736022949
    9. '{}' → logprob: -4.935549736022949
    10. 'max' → logprob: -5.560549736022949

Token 199: '0' (ID: 15)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.4956631064414978
    2. '0' → logprob: -1.8706631660461426
    3. '[' → logprob: -2.3706631660461426
    4. '[]' → logprob: -3.2456631660461426
    5. '[m' → logprob: -3.4956631660461426
    6. '{}' → logprob: -3.6206631660461426
    7. '{' → logprob: -4.620663166046143
    8. '[n' → logprob: -4.745663166046143
    9. '[max' → logprob: -5.370663166046143
    10. '[-' → logprob: -5.870663166046143

Token 200: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0035612271167337894
    2. '
' → logprob: -6.753561019897461
    3. 'edges' → logprob: -7.378561019897461
    4. 'from' → logprob: -7.753561019897461
    5. 'all' → logprob: -8.128561019897461
    6. ' for' → logprob: -8.878561019897461
    7. 'm' → logprob: -9.128561019897461
    8. 's' → logprob: -9.378561019897461
    9. 'colors' → logprob: -9.378561019897461
    10. 'ms' → logprob: -9.628561019897461

Token 201: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012596650049090385
    2. 'used' → logprob: -5.637596607208252
    3. 'from' → logprob: -5.887596607208252
    4. 'edges' → logprob: -6.262596607208252
    5. 'colors' → logprob: -6.512596607208252
    6. 'color' → logprob: -7.512596607208252
    7. 'visited' → logprob: -7.887596607208252
    8. 'edge' → logprob: -7.887596607208252
    9. 'all' → logprob: -8.26259708404541
    10. 'c' → logprob: -8.76259708404541

Token 202: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4868980050086975
    2. 'ms' → logprob: -1.8618979454040527
    3. 'm' → logprob: -2.1118979454040527
    4. 's' → logprob: -2.9868979454040527
    5. 'x' → logprob: -3.9868979454040527
    6. ' i' → logprob: -3.9868979454040527
    7. ' ms' → logprob: -5.111897945404053
    8. 'a' → logprob: -5.361897945404053
    9. ' s' → logprob: -6.236897945404053
    10. ' m' → logprob: -6.361897945404053

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17120321094989777
    2. 'in' → logprob: -2.046203136444092
    3. ',' → logprob: -3.671203136444092
    4. 's' → logprob: -6.921203136444092
    5. ' ' → logprob: -7.171203136444092
    6. 'm' → logprob: -8.54620361328125
    7. ' ,' → logprob: -8.79620361328125
    8. ',s' → logprob: -9.29620361328125
    9. 'ms' → logprob: -9.29620361328125
    10. '_' → logprob: -9.42120361328125

Token 204: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1891796886920929
    2. 'ms' → logprob: -1.8141796588897705
    3. ' range' → logprob: -4.68917989730835
    4. ' ms' → logprob: -8.689179420471191
    5. 'm' → logprob: -11.939179420471191
    6. 'set' → logprob: -12.189179420471191
    7. 'ab' → logprob: -12.564179420471191
    8. '(ms' → logprob: -13.189179420471191
    9. '(range' → logprob: -13.501679420471191
    10. 're' → logprob: -13.751679420471191

Token 205: '(' (ID: 7)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.05279632285237312
    2. '(len' → logprob: -3.9277963638305664
    3. '(n' → logprob: -4.427796363830566
    4. '(' → logprob: -4.427796363830566
    5. 'm' → logprob: -4.927796363830566
    6. 'range' → logprob: -8.677796363830566
    7. '(range' → logprob: -8.802796363830566
    8. 'n' → logprob: -9.177796363830566
    9. 'len' → logprob: -9.302796363830566
    10. '(ms' → logprob: -10.927796363830566

Token 206: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00964842364192009
    2. 'len' → logprob: -4.884648323059082
    3. 'n' → logprob: -6.759648323059082
    4. '1' → logprob: -7.384648323059082
    5. '(m' → logprob: -9.134648323059082
    6. '(' → logprob: -10.009648323059082
    7. '(len' → logprob: -10.384648323059082
    8. ' m' → logprob: -10.759648323059082
    9. '2' → logprob: -11.134648323059082
    10. '100' → logprob: -11.884648323059082

Token 207: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005070421029813588
    2. ',m' → logprob: -8.625507354736328
    3. ',n' → logprob: -8.875507354736328
    4. ' ,' → logprob: -9.000507354736328
    5. 'm' → logprob: -10.500507354736328
    6. ' m' → logprob: -10.875507354736328
    7. ' n' → logprob: -12.125507354736328
    8. 'n' → logprob: -12.250507354736328
    9. ',len' → logprob: -13.000507354736328
    10. '(n' → logprob: -13.125507354736328

Token 208: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.246537173457909e-06
    2. ' m' → logprob: -12.875003814697266
    3. 'len' → logprob: -13.625003814697266
    4. 'n' → logprob: -15.125003814697266
    5. '(m' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.875003814697266
    7. ' ' → logprob: -18.250003814697266
    8. '	m' → logprob: -19.375003814697266
    9. '(len' → logprob: -19.375003814697266
    10. ')m' → logprob: -19.875003814697266

Token 209: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0626009851694107
    2. '):
' → logprob: -2.812601089477539
    3. ' ):' → logprob: -7.812601089477539
    4. ':' → logprob: -8.687601089477539
    5. ')' → logprob: -10.812601089477539
    6. ' ):
' → logprob: -10.812601089477539
    7. '):
' → logprob: -10.937601089477539
    8. '):

' → logprob: -14.812601089477539
    9. ' :' → logprob: -14.937601089477539
    10. ':
' → logprob: -15.312601089477539

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07501064240932465
    2. ':' → logprob: -2.8250105381011963
    3. ':
' → logprob: -5.575010776519775
    4. '):' → logprob: -6.075010776519775
    5. 'count' → logprob: -6.450010776519775
    6. '):
' → logprob: -6.450010776519775
    7. ' s' → logprob: -7.200010776519775
    8. '       ' → logprob: -8.200010299682617
    9. ' ' → logprob: -8.575010299682617
    10. 'cnt' → logprob: -8.575010299682617

Token 211: ' k' (ID: 372)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4083940386772156
    2. '   ' → logprob: -2.2833940982818604
    3. 'used' → logprob: -2.4083940982818604
    4. 'edges' → logprob: -3.2833940982818604
    5. ' s' → logprob: -4.658393859863281
    6. 'S' → logprob: -4.783393859863281
    7. ' edges' → logprob: -5.033393859863281
    8. 'tmp' → logprob: -5.033393859863281
    9. 'cur' → logprob: -5.158393859863281
    10. 'count' → logprob: -5.408393859863281

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.050087906420230865
    2. '=' → logprob: -3.0500879287719727
    3. '   ' → logprob: -7.300087928771973
    4. 'count' → logprob: -8.675087928771973
    5. ',' → logprob: -8.925087928771973
    6. '_set' → logprob: -9.675087928771973
    7. 's' → logprob: -9.800087928771973
    8. ' ' → logprob: -9.800087928771973
    9. '_count' → logprob: -9.800087928771973
    10. 'e' → logprob: -10.050087928771973

Token 213: ' ' (ID: 220)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.08909039944410324
    2. '[]' → logprob: -2.714090347290039
    3. '0' → logprob: -4.089090347290039
    4. '{}' → logprob: -6.589090347290039
    5. '{' → logprob: -7.464090347290039
    6. '(set' → logprob: -9.339090347290039
    7. '[' → logprob: -9.839090347290039
    8. ' set' → logprob: -10.089090347290039
    9. '[]
' → logprob: -10.839090347290039
    10. '[]}' → logprob: -11.339090347290039

Token 214: '0' (ID: 15)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.05087880417704582
    2. '0' → logprob: -3.5508787631988525
    3. '[]' → logprob: -4.050879001617432
    4. '{' → logprob: -6.300879001617432
    5. '{}' → logprob: -6.800879001617432
    6. '{i' → logprob: -8.425878524780273
    7. '[' → logprob: -9.175878524780273
    8. '(set' → logprob: -9.300878524780273
    9. 'i' → logprob: -10.425878524780273
    10. 'sum' → logprob: -10.425878524780273

Token 215: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03978272154927254
    2. ' for' → logprob: -3.539782762527466
    3. '
' → logprob: -5.039782524108887
    4. 'for' → logprob: -6.039782524108887
    5. '<|end|>' → logprob: -8.289782524108887
    6. ',' → logprob: -8.414782524108887
    7. '    
' → logprob: -8.914782524108887
    8. '    ' → logprob: -9.414782524108887
    9. ' ' → logprob: -9.539782524108887
    10. '  ' → logprob: -10.289782524108887

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005821037339046597
    2. ' for' → logprob: -7.625582218170166
    3. 'for' → logprob: -9.375581741333008
    4. '
' → logprob: -13.500581741333008
    5. ',' → logprob: -13.625581741333008
    6. ' ' → logprob: -13.875581741333008
    7. 'indices' → logprob: -13.875581741333008
    8. '       ' → logprob: -14.625581741333008
    9. ' sets' → logprob: -15.000581741333008
    10. '    
' → logprob: -15.000581741333008

Token 217: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46856704354286194
    2. '   ' → logprob: -1.8435670137405396
    3. 's' → logprob: -2.343567132949829
    4. 'used' → logprob: -3.218567132949829
    5. 'covered' → logprob: -3.343567132949829
    6. 'colors' → logprob: -4.84356689453125
    7. 'selected' → logprob: -5.21856689453125
    8. 'visited' → logprob: -5.59356689453125
    9. 'edges' → logprob: -5.59356689453125
    10. ' for' → logprob: -5.84356689453125

Token 218: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3462832272052765
    2. 'ns' → logprob: -1.721283197402954
    3. '=' → logprob: -2.221283197402954
    4. 'ms' → logprob: -6.596283435821533
    5. 's' → logprob: -6.971283435821533
    6. 'b' → logprob: -7.471283435821533
    7. 'rr' → logprob: -7.846283435821533
    8. 'll' → logprob: -7.971283435821533
    9. ',' → logprob: -8.096282958984375
    10. 'for' → logprob: -8.346282958984375

Token 219: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6977927684783936
    2. '[]' → logprob: -0.6977927684783936
    3. '{}' → logprob: -6.197793006896973
    4. '[' → logprob: -6.947793006896973
    5. '0' → logprob: -7.822793006896973
    6. '{' → logprob: -7.947793006896973
    7. ' set' → logprob: -7.947793006896973
    8. ' []' → logprob: -8.072793006896973
    9. '[]
' → logprob: -9.697793006896973
    10. '[]}' → logprob: -10.197793006896973

Token 220: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12710174918174744
    2. '()
' → logprob: -2.1271016597747803
    3. '()

' → logprob: -9.00210189819336
    4. '()
' → logprob: -11.00210189819336
    5. '(range' → logprob: -11.12710189819336
    6. '()\' → logprob: -11.25210189819336
    7. 'range' → logprob: -13.25210189819336
    8. '([' → logprob: -14.37710189819336
    9. '()]' → logprob: -14.50210189819336
    10. '[]' → logprob: -14.62710189819336

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002492183819413185
    2. '
' → logprob: -7.0024919509887695
    3. '<|end|>' → logprob: -7.3774919509887695
    4. ' for' → logprob: -7.8774919509887695
    5. 'for' → logprob: -8.25249195098877
    6. '    
' → logprob: -8.25249195098877
    7. ' ' → logprob: -11.00249195098877
    8. '<|end|>' → logprob: -11.62749195098877
    9. '       ' → logprob: -12.12749195098877
    10. '  
' → logprob: -12.25249195098877

Token 222: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7448680996894836
    2. 'for' (adapté à ' for') → logprob: -0.9948680996894836
    3. ' for' → logprob: -1.8698680400848389
    4. '
' → logprob: -6.994868278503418
    5. ' ' → logprob: -9.244868278503418
    6. '	for' → logprob: -10.119868278503418
    7. 'b' → logprob: -10.244868278503418
    8. '       ' → logprob: -10.244868278503418
    9. '<|end|>' → logprob: -10.369868278503418
    10. '  ' → logprob: -10.494868278503418

Token 223: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003614920424297452
    2. ' j' → logprob: -5.628614902496338
    3. 'x' → logprob: -12.253615379333496
    4. 'b' → logprob: -13.253615379333496
    5. 'k' → logprob: -13.253615379333496
    6. 'p' → logprob: -14.003615379333496
    7. 'u' → logprob: -14.253615379333496
    8. '   ' → logprob: -14.378615379333496
    9. 'l' → logprob: -14.503615379333496
    10. 'idx' → logprob: -14.503615379333496

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061972279101610184
    2. 'in' → logprob: -2.8119723796844482
    3. ' ' → logprob: -12.936972618103027
    4. 'range' → logprob: -13.436972618103027
    5. ' range' → logprob: -15.311972618103027
    6. ',' → logprob: -16.18697166442871
    7. '   ' → logprob: -16.31197166442871
    8. '	in' → logprob: -16.43697166442871
    9. '  ' → logprob: -17.06197166442871
    10. '    ' → logprob: -17.43697166442871

Token 225: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164102263748646
    2. ' range' → logprob: -4.264163970947266
    3. '(range' → logprob: -14.514163970947266
    4. ' ' → logprob: -16.389163970947266
    5. '   ' → logprob: -17.889163970947266
    6. '	range' → logprob: -18.389163970947266
    7. 'ran' → logprob: -19.139163970947266
    8. 'r' → logprob: -19.514163970947266
    9. '  ' → logprob: -19.889163970947266
    10. 'rang' → logprob: -20.139163970947266

Token 226: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.006735145580023527
    2. 'm' → logprob: -5.006735324859619
    3. '(' → logprob: -11.506734848022461
    4. '   ' → logprob: -11.881734848022461
    5. ' (' → logprob: -13.506734848022461
    6. ' m' → logprob: -13.631734848022461
    7. '(
' → logprob: -15.756734848022461
    8. '	m' → logprob: -16.38173484802246
    9. ',m' → logprob: -16.88173484802246
    10. '<m' → logprob: -17.38173484802246

Token 227: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2078089416027069
    2. '):' → logprob: -1.7078089714050293
    3. '   ' → logprob: -5.707808971405029
    4. ':' → logprob: -6.832808971405029
    5. ' ' → logprob: -7.082808971405029
    6. ':
' → logprob: -7.957808971405029
    7. '):
' → logprob: -8.082808494567871
    8. '       ' → logprob: -8.957808494567871
    9. ')' → logprob: -9.457808494567871
    10. ' ):
' → logprob: -9.957808494567871

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03952092304825783
    2. ' if' → logprob: -3.6645209789276123
    3. '   ' → logprob: -5.164520740509033
    4. '    ' → logprob: -5.664520740509033
    5. '<|end|>' → logprob: -6.914520740509033
    6. ':' → logprob: -7.539520740509033
    7. ' ' → logprob: -7.539520740509033
    8. ':
' → logprob: -7.664520740509033
    9. 'if' → logprob: -8.039521217346191
    10. '     ' → logprob: -8.414521217346191

Token 229: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3075748383998871
    2. 'if' (adapté à ' if') → logprob: -1.8075748682022095
    3. '       ' → logprob: -2.43257474899292
    4. '   ' → logprob: -4.55757474899292
    5. '    ' → logprob: -6.55757474899292
    6. ' ' → logprob: -7.68257474899292
    7. '
' → logprob: -8.682575225830078
    8. '<|end|>' → logprob: -9.182575225830078
    9. '	if' → logprob: -9.932575225830078
    10. ' 
' → logprob: -9.932575225830078

Token 230: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7016526460647583
    2. ' (' → logprob: -0.8266526460647583
    3. ' i' → logprob: -2.8266525268554688
    4. 'i' → logprob: -4.951652526855469
    5. '(' → logprob: -8.576652526855469
    6. ' ' → logprob: -9.326652526855469
    7. '((' → logprob: -9.326652526855469
    8. '   ' → logprob: -10.451652526855469
    9. ' ((' → logprob: -10.451652526855469
    10. '  ' → logprob: -12.326652526855469

Token 231: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16504575312137604
    2. '(i' → logprob: -1.9150457382202148
    3. ' i' → logprob: -5.665045738220215
    4. ' (' → logprob: -6.665045738220215
    5. '((' → logprob: -10.540045738220215
    6. '   ' → logprob: -11.165045738220215
    7. '(' → logprob: -11.165045738220215
    8. '1' → logprob: -11.790045738220215
    9. ' ' → logprob: -12.540045738220215
    10. ')i' → logprob: -14.040045738220215

Token 232: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.14590370655059814
    2. ' &' → logprob: -2.3959035873413086
    3. '&' → logprob: -3.3959035873413086
    4. ' >>' → logprob: -4.520903587341309
    5. ')' → logprob: -9.020903587341309
    6. ' ' → logprob: -9.770903587341309
    7. ' ' → logprob: -10.395903587341309
    8. '	' → logprob: -10.520903587341309
    9. '   ' → logprob: -11.145903587341309
    10. '>>&' → logprob: -12.145903587341309

Token 233: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.836499985889532e-05
    2. ' j' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.625059127807617
    4. '	j' → logprob: -19.625059127807617
    5. ' ' → logprob: -21.375059127807617
    6. '```' → logprob: -21.750059127807617
    7. ')' → logprob: -22.250059127807617
    8. '[j' → logprob: -22.500059127807617
    9. '$j' → logprob: -23.000059127807617
    10. '_j' → logprob: -23.625059127807617

Token 234: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003017385315615684
    2. ')&' → logprob: -8.125301361083984
    3. '&' → logprob: -12.625301361083984
    4. ' )' → logprob: -13.000301361083984
    5. '&amp' → logprob: -17.250301361083984
    6. '）' → logprob: -17.375301361083984
    7. '&)' → logprob: -18.125301361083984
    8. ' &' → logprob: -19.375301361083984
    9. '")' → logprob: -19.375301361083984
    10. '1' → logprob: -19.500301361083984

Token 235: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.3214743733406067
    2. ')' → logprob: -1.321474313735962
    3. ')&' → logprob: -4.946474552154541
    4. ' &' → logprob: -6.946474552154541
    5. '&amp' → logprob: -9.321474075317383
    6. ' )' → logprob: -11.196474075317383
    7. '&)' → logprob: -13.571474075317383
    8. '   ' → logprob: -13.821474075317383
    9. '＆' → logprob: -13.946474075317383
    10. '&
' → logprob: -14.571474075317383

Token 236: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006272526225075126
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -14.125627517700195
    4. '１' → logprob: -18.000627517700195
    5. '
' → logprob: -18.625627517700195
    6. '  ' → logprob: -18.875627517700195
    7. ' ' → logprob: -19.000627517700195
    8. '    ' → logprob: -19.000627517700195
    9. '           ' → logprob: -19.375627517700195
    10. '
' → logprob: -19.875627517700195

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.125001907348633
    4. '{' → logprob: -18.375001907348633
    5. '

' → logprob: -18.750001907348633
    6. '１' → logprob: -18.750001907348633
    7. '
' → logprob: -18.875001907348633
    8. '
' → logprob: -20.000001907348633
    9. '```' → logprob: -20.000001907348633
    10. '' → logprob: -20.125001907348633

Token 238: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017670800909399986
    2. '==' → logprob: -4.392670631408691
    3. ':
' → logprob: -5.642670631408691
    4. ' ==' → logprob: -7.017670631408691
    5. '):' → logprob: -7.517670631408691
    6. ')==' → logprob: -10.392670631408691
    7. '1' → logprob: -10.517670631408691
    8. '>:' → logprob: -10.892670631408691
    9. ' :' → logprob: -11.142670631408691
    10. '!=' → logprob: -11.267670631408691

Token 239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00218583014793694
    2. ' ' → logprob: -6.127185821533203
    3. '0' → logprob: -14.127185821533203
    4. '   ' → logprob: -18.252185821533203
    5. '  ' → logprob: -20.627185821533203
    6. '１' → logprob: -20.627185821533203
    7. ')' → logprob: -20.752185821533203
    8. '```' → logprob: -21.314685821533203
    9. '۱' → logprob: -21.314685821533203
    10. ' ' → logprob: -21.439685821533203

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001596771035110578
    2. ' ' → logprob: -8.75015926361084
    3. '0' → logprob: -13.62515926361084
    4. '   ' → logprob: -19.000160217285156
    5. '１' → logprob: -20.312660217285156
    6. ')' → logprob: -20.562660217285156
    7. '۱' → logprob: -20.937660217285156
    8. '  ' → logprob: -21.187660217285156
    9. '' → logprob: -21.187660217285156
    10. '```' → logprob: -21.312660217285156

Token 241: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07900270074605942
    2. ':' → logprob: -2.579002618789673
    3. '):
' → logprob: -10.079002380371094
    4. ' :
' → logprob: -10.329002380371094
    5. '       ' → logprob: -11.329002380371094
    6. ' and' → logprob: -11.454002380371094
    7. ':

' → logprob: -12.204002380371094
    8. ':
' → logprob: -12.579002380371094
    9. '   ' → logprob: -12.829002380371094
    10. '():
' → logprob: -13.829002380371094

Token 242: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3730200529098511
    2. ':
' → logprob: -1.623020052909851
    3. ':' → logprob: -3.2480201721191406
    4. 'a' → logprob: -3.7480201721191406
    5. ' a' → logprob: -3.7480201721191406
    6. '           ' → logprob: -4.998020172119141
    7. '):
' → logprob: -5.123020172119141
    8. '   ' → logprob: -5.123020172119141
    9. '
' → logprob: -5.248020172119141
    10. ' ' → logprob: -6.873020172119141

Token 243: ' k' (ID: 372)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3892933428287506
    2. ' a' → logprob: -1.1392933130264282
    3. '   ' → logprob: -6.764293193817139
    4. ' if' → logprob: -7.514293193817139
    5. 'if' → logprob: -8.139293670654297
    6. '
' → logprob: -9.389293670654297
    7. ' for' → logprob: -9.514293670654297
    8. ' ' → logprob: -9.639293670654297
    9. 's' → logprob: -10.639293670654297
    10. 'k' (adapté à ' k') → logprob: -10.764293670654297

Token 244: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12726762890815735
    2. ' +=' → logprob: -2.127267599105835
    3. '|' → logprob: -8.377267837524414
    4. '   ' → logprob: -10.127267837524414
    5. ' ' → logprob: -10.502267837524414
    6. '=' → logprob: -11.627267837524414
    7. '  ' → logprob: -12.127267837524414
    8. ' |=' → logprob: -12.127267837524414
    9. '+' → logprob: -12.252267837524414
    10. ']+=' → logprob: -12.502267837524414

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003646518336609006
    2. 'len' → logprob: -5.628646373748779
    3. ' ' → logprob: -10.128646850585938
    4. 'ms' → logprob: -13.003646850585938
    5. ' len' → logprob: -13.503646850585938
    6. 'bin' → logprob: -14.003646850585938
    7. '   ' → logprob: -14.503646850585938
    8. '0' → logprob: -15.003646850585938
    9. '2' → logprob: -15.253646850585938
    10. 'm' → logprob: -15.628646850585938

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003564383659977466
    2. 'len' → logprob: -8.000356674194336
    3. ' ' → logprob: -10.875356674194336
    4. 'bin' → logprob: -14.500356674194336
    5. 'ms' → logprob: -14.750356674194336
    6. '   ' → logprob: -15.875356674194336
    7. ' len' → logprob: -15.875356674194336
    8. '0' → logprob: -16.125356674194336
    9. '100' → logprob: -16.375356674194336
    10. '2' → logprob: -16.625356674194336

Token 247: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012267575599253178
    2. '           ' → logprob: -5.012267589569092
    3. '   ' → logprob: -5.637267589569092
    4. ' a' → logprob: -8.012267112731934
    5. '    
' → logprob: -8.012267112731934
    6. '
' → logprob: -8.262267112731934
    7. ',' → logprob: -8.387267112731934
    8. '<|end|>' → logprob: -8.512267112731934
    9. 'a' → logprob: -8.637267112731934
    10. '       ' → logprob: -8.887267112731934

Token 248: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08636097609996796
    2. '           ' → logprob: -3.0863609313964844
    3. ' a' → logprob: -3.9613609313964844
    4. '   ' → logprob: -4.836360931396484
    5. 'a' → logprob: -5.836360931396484
    6. ',' → logprob: -6.586360931396484
    7. '       ' → logprob: -6.711360931396484
    8. '<|end|>' → logprob: -6.836360931396484
    9. '    
' → logprob: -6.961360931396484
    10. '  
' → logprob: -7.586360931396484

Token 249: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00833300594240427
    2. ' a' → logprob: -4.883333206176758
    3. '   ' → logprob: -7.383333206176758
    4. 'ms' → logprob: -10.008333206176758
    5. ' ' → logprob: -10.508333206176758
    6. 'ans' → logprob: -11.383333206176758
    7. '  ' → logprob: -12.008333206176758
    8. 'if' → logprob: -12.633333206176758
    9. '       ' → logprob: -12.883333206176758
    10. ' ans' → logprob: -13.008333206176758

Token 250: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.3747884929180145
    2. '=' → logprob: -1.749788522720337
    3. '.update' → logprob: -2.999788522720337
    4. ' |=' → logprob: -2.999788522720337
    5. ' =' → logprob: -3.249788522720337
    6. 'update' → logprob: -8.624788284301758
    7. ' ' → logprob: -9.624788284301758
    8. '.' → logprob: -10.124788284301758
    9. '.union' → logprob: -10.249788284301758
    10. '.=' → logprob: -10.499788284301758

Token 251: ' ms' (ID: 15217)
  Prédit: 'ms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ms' → logprob: -0.0024768433067947626
    2. ' ms' → logprob: -6.002476692199707
    3. '(ms' → logprob: -14.127476692199707
    4. '	ms' → logprob: -15.877476692199707
    5. ' ' → logprob: -16.002477645874023
    6. '   ' → logprob: -16.252477645874023
    7. 'm' → logprob: -16.752477645874023
    8. 'msc' → logprob: -18.377477645874023
    9. '-ms' → logprob: -18.502477645874023
    10. '  ' → logprob: -18.627477645874023

Token 252: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.625000953674316
    3. '[i' → logprob: -16.125
    4. '[s' → logprob: -17.0
    5. '[
' → logprob: -17.375
    6. '[js' → logprob: -17.625
    7. ' [' → logprob: -18.25
    8. '[m' → logprob: -18.375
    9. '[a' → logprob: -18.625
    10. '```' → logprob: -18.75

Token 253: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06554988026618958
    2. '<|end|>' → logprob: -3.190549850463867
    3. ')' → logprob: -3.940549850463867
    4. '<|end|>' → logprob: -7.440549850463867
    5. '
' → logprob: -7.815549850463867
    6. ' ]' → logprob: -7.815549850463867
    7. '}' → logprob: -8.315549850463867
    8. '']' → logprob: -8.440549850463867
    9. '   ' → logprob: -8.690549850463867
    10. 's' → logprob: -8.940549850463867

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018649426056072116
    2. 'if' → logprob: -8.875186920166016
    3. ' if' → logprob: -10.625186920166016
    4. '<|end|>' → logprob: -11.125186920166016
    5. '
' → logprob: -12.750186920166016
    6. '  ' → logprob: -13.750186920166016
    7. '```' → logprob: -13.750186920166016
    8. '       ' → logprob: -14.125186920166016
    9. ' ' → logprob: -14.875186920166016
    10. ',' → logprob: -15.500186920166016

Token 255: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033015317749232054
    2. 'if' (adapté à ' if') → logprob: -5.878301620483398
    3. ' if' → logprob: -7.628301620483398
    4. '
' → logprob: -12.753301620483398
    5. '```' → logprob: -12.878301620483398
    6. '<|end|>' → logprob: -13.503301620483398
    7. ' ' → logprob: -13.878301620483398
    8. '       ' → logprob: -14.003301620483398
    9. ',' → logprob: -14.878301620483398
    10. '	if' → logprob: -15.003301620483398

Token 256: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.39172908663749695
    2. ' k' → logprob: -1.2667291164398193
    3. ' len' → logprob: -3.6417291164398193
    4. 'len' → logprob: -4.14172887802124
    5. ' ' → logprob: -9.391729354858398
    6. ' a' → logprob: -10.391729354858398
    7. '   ' → logprob: -10.516729354858398
    8. 'a' → logprob: -10.516729354858398
    9. 'ans' → logprob: -10.766729354858398
    10. ' not' → logprob: -11.079229354858398

Token 257: ' %' (ID: 1851)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.19992788136005402
    2. ' >' → logprob: -2.449927806854248
    3. '<=' → logprob: -2.574927806854248
    4. '>=' → logprob: -4.449927806854248
    5. ' <=' → logprob: -5.074927806854248
    6. ' >=' → logprob: -7.574927806854248
    7. ' ' → logprob: -8.949928283691406
    8. '==' → logprob: -9.074928283691406
    9. '<' → logprob: -10.199928283691406
    10. '+' → logprob: -12.449928283691406

Token 258: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001177012687548995
    2. ' ' → logprob: -6.751176834106445
    3. '3' → logprob: -12.126176834106445
    4. '4' → logprob: -16.188676834106445
    5. '7' → logprob: -16.313676834106445
    6. '1' → logprob: -16.376176834106445
    7. '200' → logprob: -16.501176834106445
    8. '==' → logprob: -16.501176834106445
    9. '202' → logprob: -16.813676834106445
    10. '(' → logprob: -16.876176834106445

Token 259: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.337155355140567e-05
    2. ' ' → logprob: -9.875062942504883
    3. '3' → logprob: -11.500062942504883
    4. '4' → logprob: -14.625062942504883
    5. '```' → logprob: -15.000062942504883
    6. '1' → logprob: -15.500062942504883
    7. '==' → logprob: -16.000062942504883
    8. '(' → logprob: -16.000062942504883
    9. '  ' → logprob: -16.500062942504883
    10. '   ' → logprob: -16.625062942504883

Token 260: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020587904378771782
    2. ' ==' → logprob: -3.895587921142578
    3. '=' → logprob: -10.645587921142578
    4. '1' → logprob: -11.770587921142578
    5. '!=' → logprob: -12.270587921142578
    6. '==
' → logprob: -12.270587921142578
    7. '0' → logprob: -12.895587921142578
    8. ':' → logprob: -14.020587921142578
    9. '()==' → logprob: -14.520587921142578
    10. '===' → logprob: -14.770587921142578

Token 261: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38802841305732727
    2. '1' → logprob: -1.1380283832550049
    3. ' ' → logprob: -6.763028621673584
    4. '=' → logprob: -15.888028144836426
    5. '   ' → logprob: -16.575529098510742
    6. '01' → logprob: -16.700529098510742
    7. '```' → logprob: -16.825529098510742
    8. 'a' → logprob: -16.888029098510742
    9. ' ' → logprob: -16.950529098510742
    10. '
' → logprob: -17.013029098510742

Token 262: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20144258439540863
    2. '1' → logprob: -1.7014425992965698
    3. ' ' → logprob: -10.45144271850586
    4. '```' → logprob: -16.07644271850586
    5. '
' → logprob: -16.32644271850586
    6. '

' → logprob: -17.32644271850586
    7. '   ' → logprob: -17.45144271850586
    8. '2' → logprob: -17.63894271850586
    9. '01' → logprob: -17.63894271850586
    10. '  ' → logprob: -18.13894271850586

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5486273169517517
    2. ' and' → logprob: -1.0486273765563965
    3. 'and' → logprob: -2.9236273765563965
    4. '==' → logprob: -5.1736273765563965
    5. ':
' → logprob: -5.4236273765563965
    6. ' ==' → logprob: -5.5486273765563965
    7. '>' → logprob: -5.7986273765563965
    8. ' >' → logprob: -7.4236273765563965
    9. ' :' → logprob: -8.298626899719238
    10. '   ' → logprob: -8.923626899719238

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20208151638507843
    2. 'ans' → logprob: -1.827081561088562
    3. '   ' → logprob: -3.9520814418792725
    4. 'continue' → logprob: -6.827081680297852
    5. ' ans' → logprob: -7.452081680297852
    6. 'if' → logprob: -7.952081680297852
    7. ':' → logprob: -8.702081680297852
    8. '==' → logprob: -8.702081680297852
    9. ':
' → logprob: -9.327081680297852
    10. '           ' → logprob: -9.702081680297852

Token 265: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.002008814597502351
    2. '   ' → logprob: -6.87700891494751
    3. ' ans' → logprob: -7.00200891494751
    4. '       ' → logprob: -10.877008438110352
    5. ' ' → logprob: -11.502008438110352
    6. '	ans' → logprob: -11.502008438110352
    7. 'continue' → logprob: -11.752008438110352
    8. '           ' → logprob: -12.752008438110352
    9. '
' → logprob: -12.877008438110352
    10. '  ' → logprob: -12.877008438110352

Token 266: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06721024215221405
    2. ' +=' → logprob: -3.0672101974487305
    3. '=' → logprob: -4.4422101974487305
    4. '-=' → logprob: -5.6922101974487305
    5. ' =' → logprob: -6.6922101974487305
    6. ' -=' → logprob: -7.4422101974487305
    7. ' ^=' → logprob: -7.8172101974487305
    8. '^' → logprob: -8.19221019744873
    9. '|' → logprob: -8.44221019744873
    10. '<' → logprob: -9.06721019744873

Token 267: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0772688165307045
    2. '1' → logprob: -2.9522688388824463
    3. '2' → logprob: -4.202268600463867
    4. '(' → logprob: -5.827268600463867
    5. '(len' → logprob: -6.077268600463867
    6. '(-' → logprob: -7.202268600463867
    7. 'pow' → logprob: -7.827268600463867
    8. '-' → logprob: -8.202268600463867
    9. ' len' → logprob: -8.452268600463867
    10. 'n' → logprob: -8.827268600463867

Token 268: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.17906203866004944
    2. '1' → logprob: -2.6790621280670166
    3. '2' → logprob: -3.1790621280670166
    4. '(-' → logprob: -3.4290621280670166
    5. '(' → logprob: -5.1790618896484375
    6. '(len' → logprob: -5.3040618896484375
    7. '-' → logprob: -5.4290618896484375
    8. 'pow' → logprob: -5.5540618896484375
    9. 'n' → logprob: -7.1790618896484375
    10. '-(' → logprob: -7.4290618896484375

Token 269: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.006968025118112564
    2. 'k' → logprob: -5.131968021392822
    3. ' **' → logprob: -7.381968021392822
    4. '*k' → logprob: -8.50696849822998
    5. ' k' → logprob: -9.00696849822998
    6. '(k' → logprob: -10.50696849822998
    7. '```' → logprob: -10.75696849822998
    8. '^' → logprob: -12.00696849822998
    9. '"k' → logprob: -12.38196849822998
    10. '[k' → logprob: -12.63196849822998

Token 270: ' (' (ID: 350)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.14887182414531708
    2. '(len' → logprob: -2.148871898651123
    3. '(n' → logprob: -4.523871898651123
    4. 'n' → logprob: -4.773871898651123
    5. '(' → logprob: -6.523871898651123
    6. '16' → logprob: -8.773871421813965
    7. '20' → logprob: -8.898871421813965
    8. 'k' → logprob: -9.398871421813965
    9. '(-' → logprob: -9.523871421813965
    10. ' len' → logprob: -9.648871421813965

Token 271: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006463001482188702
    2. '(n' → logprob: -5.131463050842285
    3. 'len' → logprob: -7.631463050842285
    4. ' n' → logprob: -10.631463050842285
    5. 'k' → logprob: -12.006463050842285
    6. '(len' → logprob: -12.756463050842285
    7. '   ' → logprob: -12.881463050842285
    8. 'ans' → logprob: -13.006463050842285
    9. '
' → logprob: -13.256463050842285
    10. 'm' → logprob: -13.381463050842285

Token 272: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47444412112236023
    2. ' -' → logprob: -0.9744441509246826
    3. '   ' → logprob: -8.849444389343262
    4. '1' → logprob: -9.224444389343262
    5. '
' → logprob: -9.974444389343262
    6. ' ' → logprob: -10.599444389343262
    7. '-k' → logprob: -11.224444389343262
    8. 'minus' → logprob: -11.974444389343262
    9. 'n' → logprob: -12.099444389343262
    10. 'k' → logprob: -12.224444389343262

Token 273: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014931005716789514
    2. 'k' → logprob: -9.250149726867676
    3. ' ' → logprob: -10.125149726867676
    4. 'len' → logprob: -12.125149726867676
    5. '   ' → logprob: -13.000149726867676
    6. '2' → logprob: -13.250149726867676
    7. '-' → logprob: -13.500149726867676
    8. '
' → logprob: -14.625149726867676
    9. ' ' → logprob: -14.750149726867676
    10. ' k' → logprob: -15.500149726867676

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.625007629394531
    3. 'k' → logprob: -13.125007629394531
    4. '   ' → logprob: -13.875007629394531
    5. '-' → logprob: -14.750007629394531
    6. '2' → logprob: -15.250007629394531
    7. '
' → logprob: -15.875007629394531
    8. '           ' → logprob: -16.50000762939453
    9. '  ' → logprob: -17.50000762939453
    10. 'len' → logprob: -17.62500762939453

Token 275: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3870849311351776
    2. '-' → logprob: -1.1370849609375
    3. '-k' → logprob: -9.0120849609375
    4. ' ' → logprob: -9.5120849609375
    5. '  ' → logprob: -11.8870849609375
    6. '   ' → logprob: -11.8870849609375
    7. ')' → logprob: -13.0120849609375
    8. '-l' → logprob: -14.6370849609375
    9. ' ' → logprob: -14.8870849609375
    10. '-n' → logprob: -15.1370849609375

Token 276: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.165027217415627e-05
    2. ' len' → logprob: -10.750021934509277
    3. '(len' → logprob: -16.25002098083496
    4. '	len' → logprob: -17.50002098083496
    5. '=len' → logprob: -19.25002098083496
    6. 'le' → logprob: -19.37502098083496
    7. 'k' → logprob: -20.25002098083496
    8. '[len' → logprob: -20.25002098083496
    9. ',len' → logprob: -20.37502098083496
    10. ' ' → logprob: -21.25002098083496

Token 277: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.250004768371582
    3. ' (' → logprob: -15.500004768371582
    4. 'a' → logprob: -17.5000057220459
    5. '(
' → logprob: -18.7500057220459
    6. '(A' → logprob: -19.1250057220459
    7. '((' → logprob: -21.0000057220459
    8. '   ' → logprob: -21.5000057220459
    9. '```' → logprob: -21.5000057220459
    10. '(ai' → logprob: -21.6250057220459

Token 278: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017076305812224746
    2. ')
' → logprob: -9.750170707702637
    3. ' )' → logprob: -9.750170707702637
    4. '))' → logprob: -9.875170707702637
    5. '})' → logprob: -13.875170707702637
    6. ')}' → logprob: -14.250170707702637
    7. '}' → logprob: -15.000170707702637
    8. '）' → logprob: -15.875170707702637
    9. ')

' → logprob: -16.000171661376953
    10. ')))' → logprob: -16.250171661376953

Token 279: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.000001907348633
    3. '```' → logprob: -18.000001907348633
    4. '
' → logprob: -18.750001907348633
    5. ')' → logprob: -20.250001907348633
    6. '(print' → logprob: -20.500001907348633
    7. '-print' → logprob: -21.125001907348633
    8. '#print' → logprob: -21.750001907348633
    9. 'for' → logprob: -22.000001907348633
    10. 'else' → logprob: -22.125001907348633

Token 280: ' elif' (ID: 9497)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.759734732331708e-05
    2. 'else' → logprob: -11.000017166137695
    3. ' print' → logprob: -14.875017166137695
    4. 'return' → logprob: -15.500017166137695
    5. '```' → logprob: -16.750017166137695
    6. 'ans' → logprob: -17.250017166137695
    7. ')' → logprob: -17.625017166137695
    8. 'elif' (adapté à ' elif') → logprob: -17.625017166137695
    9. 'pr' → logprob: -18.125017166137695
    10. 'for' → logprob: -18.250017166137695

Token 281: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5762186646461487
    2. ' k' → logprob: -0.8262186646461487
    3. 'False' → logprob: -9.576218605041504
    4. ' ' → logprob: -10.201218605041504
    5. ' False' → logprob: -10.326218605041504
    6. '0' → logprob: -10.576218605041504
    7. 'ans' → logprob: -10.826218605041504
    8. ' (' → logprob: -11.201218605041504
    9. '   ' → logprob: -11.201218605041504
    10. '(k' → logprob: -11.326218605041504

Token 282: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7663387060165405
    2. ' ==' → logprob: -1.5163387060165405
    3. '>' → logprob: -1.6413387060165405
    4. '==' → logprob: -2.14133882522583
    5. ' !=' → logprob: -6.26633882522583
    6. '!=' → logprob: -6.89133882522583
    7. ' ' → logprob: -7.26633882522583
    8. '%' → logprob: -7.51633882522583
    9. ' %' → logprob: -8.266338348388672
    10. '=' → logprob: -9.391338348388672

Token 283: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150296062231064
    2. ' ' → logprob: -4.018150329589844
    3. '   ' → logprob: -16.205650329589844
    4. '=' → logprob: -16.768150329589844
    5. '1' → logprob: -16.830650329589844
    6. '  ' → logprob: -16.893150329589844
    7. ' ' → logprob: -17.080650329589844
    8. '           ' → logprob: -17.580650329589844
    9. '
' → logprob: -17.830650329589844
    10. '۰' → logprob: -17.830650329589844

Token 284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -17.62537956237793
    4. '
' → logprob: -18.00037956237793
    5. '  ' → logprob: -18.18787956237793
    6. '```' → logprob: -18.25037956237793
    7. '۰' → logprob: -18.50037956237793
    8. '1' → logprob: -18.62537956237793
    9. '=' → logprob: -18.68787956237793
    10. '０' → logprob: -18.81287956237793

Token 285: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3869134783744812
    2. ':' → logprob: -1.136913537979126
    3. ':

' → logprob: -11.136913299560547
    4. ':
' → logprob: -11.386913299560547
    5. '       ' → logprob: -11.761913299560547
    6. '   ' → logprob: -12.136913299560547
    7. ',' → logprob: -14.386913299560547
    8. ' and' → logprob: -14.636913299560547
    9. 'and' → logprob: -14.636913299560547
    10. 'else' → logprob: -15.136913299560547

Token 286: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03521956503391266
    2. ' ans' → logprob: -4.035219669342041
    3. '-' → logprob: -4.785219669342041
    4. '   ' → logprob: -5.035219669342041
    5. '	ans' → logprob: -6.660219669342041
    6. '       ' → logprob: -7.285219669342041
    7. '(ans' → logprob: -10.285219192504883
    8. '           ' → logprob: -10.410219192504883
    9. ' -' → logprob: -10.535219192504883
    10. ' ' → logprob: -12.535219192504883

Token 287: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -3.225939872208983e-05
    2. ' ans' → logprob: -10.500032424926758
    3. '	ans' → logprob: -12.375032424926758
    4. '   ' → logprob: -15.125032424926758
    5. '(ans' → logprob: -15.625032424926758
    6. '       ' → logprob: -17.750032424926758
    7. '
' → logprob: -18.625032424926758
    8. '           ' → logprob: -19.000032424926758
    9. 'answer' → logprob: -19.250032424926758
    10. '_ans' → logprob: -19.500032424926758

Token 288: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0028714460786432028
    2. ' -=' → logprob: -6.252871513366699
    3. '+=' → logprob: -7.127871513366699
    4. '-' → logprob: -8.8778715133667
    5. ' +=' → logprob: -15.0028715133667
    6. '=' → logprob: -17.002870559692383
    7. '   ' → logprob: -17.877870559692383
    8. ' -' → logprob: -18.252870559692383
    9. ' ' → logprob: -18.377870559692383
    10. '	' → logprob: -18.377870559692383

Token 289: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009152670972980559
    2. ' ' → logprob: -7.000915050506592
    3. '   ' → logprob: -12.50091552734375
    4. '1' → logprob: -15.62591552734375
    5. '(' → logprob: -17.62591552734375
    6. '  ' → logprob: -18.00091552734375
    7. '
' → logprob: -19.00091552734375
    8. '       ' → logprob: -19.00091552734375
    9. '```' → logprob: -19.50091552734375
    10. '    ' → logprob: -20.25091552734375

Token 290: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.250003814697266
    4. '1' → logprob: -19.250003814697266
    5. '(' → logprob: -21.500003814697266
    6. '  ' → logprob: -22.625003814697266
    7. 'pow' → logprob: -23.250003814697266
    8. '```' → logprob: -23.625003814697266
    9. '       ' → logprob: -24.375003814697266
    10. '    ' → logprob: -25.375003814697266

Token 291: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.02326492965221405
    2. '**' → logprob: -3.7732648849487305
    3. '(n' → logprob: -11.39826488494873
    4. ' *' → logprob: -13.39826488494873
    5. ' (' → logprob: -13.52326488494873
    6. '
' → logprob: -13.64826488494873
    7. ' ' → logprob: -14.14826488494873
    8. ' **
' → logprob: -14.39826488494873
    9. '^(' → logprob: -14.89826488494873
    10. '*(' → logprob: -14.89826488494873

Token 292: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25207075476646423
    2. ' (' → logprob: -1.5020707845687866
    3. '(' → logprob: -8.877070426940918
    4. ' ' → logprob: -14.252070426940918
    5. '
' → logprob: -14.502070426940918
    6. '   ' → logprob: -14.752070426940918
    7. '  ' → logprob: -15.752070426940918
    8. '(
' → logprob: -16.377071380615234
    9. '```' → logprob: -16.627071380615234
    10. '（' → logprob: -17.627071380615234

Token 293: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018337585031986237
    2. 'n' → logprob: -4.018337726593018
    3. ' (' → logprob: -8.64333724975586
    4. '(' → logprob: -12.01833724975586
    5. ' n' → logprob: -12.26833724975586
    6. '   ' → logprob: -15.39333724975586
    7. '{' → logprob: -16.01833724975586
    8. '(
' → logprob: -16.26833724975586
    9. '
' → logprob: -17.14333724975586
    10. '	n' → logprob: -17.39333724975586

Token 294: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2520509362220764
    2. '-' → logprob: -1.5020508766174316
    3. '   ' → logprob: -9.12705135345459
    4. ' ' → logprob: -12.00205135345459
    5. '           ' → logprob: -12.87705135345459
    6. '    ' → logprob: -14.25205135345459
    7. '(' → logprob: -14.50205135345459
    8. '  ' → logprob: -14.62705135345459
    9. '[' → logprob: -14.75205135345459
    10. '(-' → logprob: -15.12705135345459

Token 295: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.750006675720215
    4. '(' → logprob: -15.875006675720215
    5. '```' → logprob: -16.0000057220459
    6. '
' → logprob: -16.5000057220459
    7. '-' → logprob: -16.8750057220459
    8. '2' → logprob: -17.0000057220459
    9. '           ' → logprob: -17.5625057220459
    10. 'a' → logprob: -17.6875057220459

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.750009536743164
    3. '   ' → logprob: -14.500009536743164
    4. '
' → logprob: -15.562509536743164
    5. '-' → logprob: -15.937509536743164
    6. 'len' → logprob: -16.375009536743164
    7. '2' → logprob: -16.625009536743164
    8. '```' → logprob: -16.687509536743164
    9. '{' → logprob: -17.062509536743164
    10. '(' → logprob: -17.062509536743164

Token 297: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20146068930625916
    2. '-' → logprob: -1.7014607191085815
    3. ' ' → logprob: -10.951460838317871
    4. '-l' → logprob: -11.201460838317871
    5. '   ' → logprob: -11.576460838317871
    6. '  ' → logprob: -13.201460838317871
    7. '    ' → logprob: -13.201460838317871
    8. '       ' → logprob: -14.326460838317871
    9. '           ' → logprob: -14.451460838317871
    10. '          ' → logprob: -14.701460838317871

Token 298: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.676292231422849e-05
    2. ' len' → logprob: -11.000017166137695
    3. '(len' → logprob: -17.500017166137695
    4. '[len' → logprob: -22.250017166137695
    5. '	len' → logprob: -22.625017166137695
    6. '   ' → logprob: -23.625017166137695
    7. '=len' → logprob: -24.125017166137695
    8. '
' → logprob: -24.625017166137695
    9. ' ' → logprob: -24.625017166137695
    10. '<len' → logprob: -25.250017166137695

Token 299: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.153795766294934e-06
    2. 'a' → logprob: -12.500005722045898
    3. '(' → logprob: -13.000005722045898
    4. ' (' → logprob: -15.750005722045898
    5. '(
' → logprob: -17.5000057220459
    6. '```' → logprob: -18.5000057220459
    7. ' a' → logprob: -19.0000057220459
    8. ')a' → logprob: -19.5000057220459
    9. '(A' → logprob: -19.7500057220459
    10. ')' → logprob: -20.3750057220459

Token 300: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015456913970410824
    2. '))' → logprob: -6.5015459060668945
    3. ')
' → logprob: -10.626545906066895
    4. ' )' → logprob: -11.501545906066895
    5. ')))' → logprob: -12.501545906066895
    6. ')}' → logprob: -12.876545906066895
    7. '   ' → logprob: -14.626545906066895
    8. '())' → logprob: -15.001545906066895
    9. '})' → logprob: -15.001545906066895
    10. '])' → logprob: -15.501545906066895

Token 301: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.961759259458631e-06
    2. '```' → logprob: -12.625004768371582
    3. ' print' → logprob: -14.125004768371582
    4. '
' → logprob: -14.875004768371582
    5. ')
' → logprob: -15.875004768371582
    6. '``' → logprob: -16.2500057220459
    7. ')' → logprob: -16.6250057220459
    8. '#print' → logprob: -16.8750057220459
    9. '(print' → logprob: -17.5000057220459
    10. 'ans' → logprob: -18.1250057220459

Token 302: '(' (ID: 7)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.468279752880335e-05
    2. 'ans' → logprob: -10.250064849853516
    3. '(' → logprob: -10.875064849853516
    4. '()' → logprob: -11.500064849853516
    5. '(answer' → logprob: -15.875064849853516
    6. '(abs' → logprob: -17.500064849853516
    7. '(len' → logprob: -17.875064849853516
    8. '(sum' → logprob: -18.000064849853516
    9. ' (' → logprob: -18.125064849853516
    10. '(
' → logprob: -18.375064849853516

Token 303: '2' (ID: 17)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. ' ans' → logprob: -17.75
    3. '(ans' → logprob: -18.5
    4. '	ans' → logprob: -22.5
    5. 'ANS' → logprob: -25.0
    6. 'answer' → logprob: -25.125
    7. '_ans' → logprob: -25.625
    8. 'Ans' → logprob: -26.125
    9. 'a' → logprob: -26.5
    10. 'ann' → logprob: -26.5

Token 304: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6891934275627136
    2. '**' → logprob: -0.8141934275627136
    3. '-' → logprob: -3.8141934871673584
    4. ' -' → logprob: -4.064193248748779
    5. ' **' → logprob: -4.689193248748779
    6. '(n' → logprob: -5.439193248748779
    7. '**)' → logprob: -7.439193248748779
    8. ' )' → logprob: -7.689193248748779
    9. ')**' → logprob: -7.689193248748779
    10. '(' → logprob: -8.314193725585938

Token 305: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006652730517089367
    2. '(n' → logprob: -5.13165283203125
    3. ' n' → logprob: -7.25665283203125
    4. '(' → logprob: -11.25665283203125
    5. ' (' → logprob: -12.25665283203125
    6. '
' → logprob: -15.00665283203125
    7. '((' → logprob: -16.38165283203125
    8. '_n' → logprob: -16.63165283203125
    9. '(
' → logprob: -16.75665283203125
    10. ' ' → logprob: -16.88165283203125

Token 306: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8193366486229934e-05
    2. '(n' → logprob: -11.125018119812012
    3. ' n' → logprob: -12.625018119812012
    4. '(' → logprob: -16.750019073486328
    5. '
' → logprob: -18.250019073486328
    6. ' (' → logprob: -19.000019073486328
    7. '   ' → logprob: -19.375019073486328
    8. '0' → logprob: -19.375019073486328
    9. '_n' → logprob: -19.875019073486328
    10. '	n' → logprob: -20.250019073486328

Token 307: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002701566321775317
    2. ')' → logprob: -6.502701759338379
    3. ' -' → logprob: -6.877701759338379
    4. ')-' → logprob: -8.752701759338379
    5. '(n' → logprob: -13.002701759338379
    6. ' ' → logprob: -13.627701759338379
    7. ' )' → logprob: -13.752701759338379
    8. ')-(' → logprob: -13.877701759338379
    9. '-)' → logprob: -14.002701759338379
    10. 'n' → logprob: -14.127701759338379

Token 308: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00573964836075902
    2. '(n' → logprob: -5.505739688873291
    3. 'n' → logprob: -7.255739688873291
    4. '-' → logprob: -7.380739688873291
    5. '(' → logprob: -8.505739212036133
    6. '0' → logprob: -9.755739212036133
    7. ' ' → logprob: -10.630739212036133
    8. '   ' → logprob: -10.755739212036133
    9. ' n' → logprob: -11.880739212036133
    10. '
' → logprob: -11.880739212036133

Token 309: '1' (ID: 16)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4107859134674072
    2. 'n' → logprob: -1.1607859134674072
    3. '-' → logprob: -4.035785675048828
    4. '1' → logprob: -5.410785675048828
    5. '2' → logprob: -7.410785675048828
    6. '0' → logprob: -8.035785675048828
    7. '(' → logprob: -8.660785675048828
    8. '
' → logprob: -8.910785675048828
    9. '   ' → logprob: -9.035785675048828
    10. ' n' → logprob: -9.410785675048828

Token 310: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11316930502653122
    2. '))' → logprob: -2.2381691932678223
    3. ' )' → logprob: -8.73816967010498
    4. ')-' → logprob: -8.98816967010498
    5. ' ))' → logprob: -11.11316967010498
    6. ')))' → logprob: -11.11316967010498
    7. '-' → logprob: -12.11316967010498
    8. ',' → logprob: -12.11316967010498
    9. '})' → logprob: -12.61316967010498
    10. '}' → logprob: -12.86316967010498

Token 311: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.600407063961029
    2. '-' → logprob: -1.2254071235656738
    3. ' -' → logprob: -1.8504071235656738
    4. '-)' → logprob: -7.850407123565674
    5. ' )' → logprob: -9.475406646728516
    6. '-end' → logprob: -10.225406646728516
    7. '))' → logprob: -10.475406646728516
    8. ',' → logprob: -11.725406646728516
    9. ')-' → logprob: -11.725406646728516
    10. '-ex' → logprob: -11.725406646728516

Token 312: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0003357006062287837
    2. ' ans' → logprob: -8.000335693359375
    3. '(ans' → logprob: -15.625335693359375
    4. '	ans' → logprob: -18.500335693359375
    5. '1' → logprob: -18.750335693359375
    6. 'answer' → logprob: -19.625335693359375
    7. '   ' → logprob: -20.750335693359375
    8. 'ANS' → logprob: -21.375335693359375
    9. '_ans' → logprob: -21.500335693359375
    10. ' ' → logprob: -21.625335693359375

Token 313: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '))' → logprob: -14.625001907348633
    3. '`)' → logprob: -14.750001907348633
    4. ')
' → logprob: -14.875001907348633
    5. ')`' → logprob: -15.500001907348633
    6. ' )' → logprob: -16.000001907348633
    7. '())' → logprob: -16.375001907348633
    8. '()' → logprob: -17.625001907348633
    9. '）' → logprob: -17.750001907348633
    10. '```' → logprob: -17.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 311
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 129
Tokens correctement prédits (top 10): 271
Précision stricte (1ère position): 36.98%
Précision adaptée (1ère position): 41.48%
Précision (top 10): 87.14%
================================================================================
