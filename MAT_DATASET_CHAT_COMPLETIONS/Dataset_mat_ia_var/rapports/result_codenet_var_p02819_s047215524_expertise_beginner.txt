================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x = int(input())
i = x
while i <= 100003:
    est_premier = True
    j = 2
    while j < i:
        if i % j == 0:
            est_premier = False
            break
        j = j + 1
    if est_premier:
        print(i)
        break
    i = i + 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008079635445028543
    2. ''' → logprob: -8.375807762145996
    3. '(x' → logprob: -8.500807762145996
    4. '```' → logprob: -8.750807762145996
    5. '`' → logprob: -10.125807762145996
    6. '('' → logprob: -10.250807762145996
    7. '_' → logprob: -10.500807762145996
    8. ')' → logprob: -10.875807762145996
    9. '[' → logprob: -10.875807762145996
    10. '("("' → logprob: -11.125807762145996

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06802859157323837
    2. ')' → logprob: -2.818028688430786
    3. '()' → logprob: -5.568028450012207
    4. '())' → logprob: -6.568028450012207
    5. '(x' → logprob: -8.693028450012207
    6. '```' → logprob: -9.193028450012207
    7. '(()' → logprob: -9.818028450012207
    8. '(
' → logprob: -9.818028450012207
    9. '))' → logprob: -10.068028450012207
    10. '('' → logprob: -10.193028450012207

Token 5: 'i' (ID: 72)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22136865556240082
    2. 'if' → logprob: -2.2213685512542725
    3. '%' → logprob: -2.7213685512542725
    4. '*' → logprob: -3.9713685512542725
    5. '+
' → logprob: -6.471368789672852
    6. ' if' → logprob: -7.096368789672852
    7. '#' → logprob: -7.846368789672852
    8. 'i' → logprob: -7.846368789672852
    9. '**' → logprob: -8.096368789672852
    10. 'x' → logprob: -8.221368789672852

Token 6: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.022405365481972694
    2. 'n' → logprob: -4.39740514755249
    3. '+' → logprob: -4.77240514755249
    4. '=' → logprob: -7.14740514755249
    5. ' f' → logprob: -9.522405624389648
    6. ' =' → logprob: -9.522405624389648
    7. ' ' → logprob: -9.772405624389648
    8. 's' → logprob: -9.772405624389648
    9. '++' → logprob: -9.897405624389648
    10. ' +=' → logprob: -10.022405624389648

Token 7: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21889254450798035
    2. '0' → logprob: -1.7188925743103027
    3. '1' → logprob: -4.093892574310303
    4. ' x' → logprob: -7.593892574310303
    5. 'x' → logprob: -8.968892097473145
    6. '2' → logprob: -11.093892097473145
    7. '`' → logprob: -13.218892097473145
    8. '10' → logprob: -13.843892097473145
    9. ' `' → logprob: -14.343892097473145
    10. ' ' → logprob: -14.343892097473145

Token 8: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4475370943546295
    2. ' ' → logprob: -1.3225370645523071
    3. ' +' → logprob: -3.8225371837615967
    4. '-' → logprob: -3.8225371837615967
    5. ')' → logprob: -4.447536945343018
    6. '>' → logprob: -4.822536945343018
    7. '```' → logprob: -5.197536945343018
    8. '=' → logprob: -5.697536945343018
    9. '<|end|>' → logprob: -5.697536945343018
    10. ' >' → logprob: -5.697536945343018

Token 9: 'while' (ID: 7032)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3063395321369171
    2. '+' → logprob: -1.8063395023345947
    3. ' ' → logprob: -3.8063395023345947
    4. '>' → logprob: -3.9313395023345947
    5. ' -' → logprob: -4.681339740753174
    6. '<|end|>' → logprob: -4.806339740753174
    7. ')' → logprob: -5.056339740753174
    8. ' +' → logprob: -5.181339740753174
    9. '=' → logprob: -5.181339740753174
    10. '%' → logprob: -5.681339740753174

Token 10: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05717949569225311
    2. ' i' → logprob: -2.9321794509887695
    3. 'i' → logprob: -6.5571794509887695
    4. ' x' → logprob: -7.6821794509887695
    5. '  ' → logprob: -7.9321794509887695
    6. 'x' → logprob: -10.30717945098877
    7. ' (' → logprob: -11.93217945098877
    8. '(i' → logprob: -12.55717945098877
    9. ' not' → logprob: -13.30717945098877
    10. '   ' → logprob: -13.55717945098877

Token 11: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03206881135702133
    2. '>' → logprob: -3.5320687294006348
    3. ' >=' → logprob: -6.657068729400635
    4. ' ' → logprob: -7.407068729400635
    5. ' <' → logprob: -8.907069206237793
    6. ' <=' → logprob: -9.032069206237793
    7. ' !=' → logprob: -10.282069206237793
    8. '  ' → logprob: -10.407069206237793
    9. '<' → logprob: -10.907069206237793
    10. '>=' → logprob: -10.907069206237793

Token 12: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2707960605621338
    2. 'x' → logprob: -1.6457960605621338
    3. ' ' → logprob: -3.395796060562134
    4. '10' → logprob: -5.145795822143555
    5. '100' → logprob: -5.395795822143555
    6. '9' → logprob: -8.645795822143555
    7. '20' → logprob: -9.145795822143555
    8. '99' → logprob: -9.895795822143555
    9. '1' → logprob: -10.395795822143555
    10. '999' → logprob: -10.645795822143555

Token 13: '100' (ID: 1353)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.039979979395866394
    2. ' x' → logprob: -4.164979934692383
    3. '10' → logprob: -4.539979934692383
    4. '100' → logprob: -4.664979934692383
    5. ' ' → logprob: -5.914979934692383
    6. '20' → logprob: -8.164979934692383
    7. '9' → logprob: -8.914979934692383
    8. '0' → logprob: -9.039979934692383
    9. '999' → logprob: -9.414979934692383
    10. '1' → logprob: -9.664979934692383

Token 14: '003' (ID: 11822)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028514713048934937
    2. ' :' → logprob: -5.877851486206055
    3. ':
' → logprob: -10.252851486206055
    4. ':**' → logprob: -12.252851486206055
    5. '+:' → logprob: -12.752851486206055
    6. ' :
' → logprob: -13.877851486206055
    7. ':i' → logprob: -14.377851486206055
    8. '):' → logprob: -14.502851486206055
    9. '：' → logprob: -15.752851486206055
    10. '   ' → logprob: -16.002851486206055

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07008793205022812
    2. ' :' → logprob: -2.6950879096984863
    3. ':
' → logprob: -9.195088386535645
    4. ' :
' → logprob: -10.445088386535645
    5. '+:' → logprob: -11.945088386535645
    6. ':**' → logprob: -12.695088386535645
    7. ':i' → logprob: -13.195088386535645
    8. '   ' → logprob: -13.320088386535645
    9. '):' → logprob: -13.695088386535645
    10. '```' → logprob: -13.820088386535645

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06683744490146637
    2. '   ' → logprob: -2.9418375492095947
    3. ':
' → logprob: -6.191837310791016
    4. ' :' → logprob: -6.191837310791016
    5. '    ' → logprob: -6.316837310791016
    6. ' ' → logprob: -6.566837310791016
    7. ' i' → logprob: -7.066837310791016
    8. '```' → logprob: -7.316837310791016
    9. ',' → logprob: -7.441837310791016
    10. '):' → logprob: -7.941837310791016

Token 17: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37208226323127747
    2. 'print' → logprob: -1.872082233428955
    3. ' print' → logprob: -2.247082233428955
    4. ' i' → logprob: -3.872082233428955
    5. ' if' → logprob: -4.497082233428955
    6. '    ' → logprob: -4.872082233428955
    7. '```' → logprob: -4.997082233428955
    8. 'i' → logprob: -6.497082233428955
    9. 'if' → logprob: -7.122082233428955
    10. ' ' → logprob: -7.122082233428955

Token 18: '_p' (ID: 1359)
  Prédit: 'imate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imate' → logprob: -0.04897020012140274
    2. 'imated' → logprob: -4.2989702224731445
    3. ' =' → logprob: -4.9239702224731445
    4. 'imator' → logprob: -5.0489702224731445
    5. 'im' → logprob: -5.4239702224731445
    6. 'mate' → logprob: -5.6739702224731445
    7. 'r' → logprob: -5.9239702224731445
    8. '=' → logprob: -6.2989702224731445
    9. 'ime' → logprob: -6.4239702224731445
    10. 'imation' → logprob: -6.6739702224731445

Token 19: 'rem' (ID: 1935)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01790490932762623
    2. 'er' → logprob: -4.142904758453369
    3. '_r' → logprob: -8.142905235290527
    4. 'rob' → logprob: -8.142905235290527
    5. 'imate' → logprob: -8.517905235290527
    6. 'rim' → logprob: -8.517905235290527
    7. 'rice' → logprob: -8.767905235290527
    8. 'op' → logprob: -9.142905235290527
    9. 'ring' → logprob: -9.767905235290527
    10. '_' → logprob: -10.267905235290527

Token 20: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0012997613521292806
    2. 'iere' → logprob: -7.376299858093262
    3. 'i' → logprob: -7.751299858093262
    4. 'ière' → logprob: -8.876299858093262
    5. 'iers' → logprob: -9.751299858093262
    6. 'iert' → logprob: -11.376299858093262
    7. 'ie' → logprob: -11.501299858093262
    8. 'ié' → logprob: -12.501299858093262
    9. 'ieur' → logprob: -12.751299858093262
    10. 'ire' → logprob: -13.001299858093262

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.618133008480072
    2. 'e' → logprob: -1.7431330680847168
    3. '_' → logprob: -1.9931330680847168
    4. ' =' → logprob: -2.493133068084717
    5. 's' → logprob: -3.493133068084717
    6. 'er' → logprob: -4.243133068084717
    7. '(i' → logprob: -4.743133068084717
    8. '(' → logprob: -5.118133068084717
    9. '(e' → logprob: -6.118133068084717
    10. 'i' → logprob: -6.368133068084717

Token 22: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.12694953382015228
    2. 'True' → logprob: -2.1269495487213135
    3. '(True' → logprob: -11.501949310302734
    4. '   ' → logprob: -11.876949310302734
    5. '1' → logprob: -12.626949310302734
    6. ' ' → logprob: -14.501949310302734
    7. '0' → logprob: -15.501949310302734
    8. 'False' → logprob: -15.876949310302734
    9. ' true' → logprob: -16.751949310302734
    10. '=True' → logprob: -16.876949310302734

Token 23: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5430161952972412
    2. '    
' → logprob: -2.043016195297241
    3. ' ' → logprob: -3.043016195297241
    4. '    ' → logprob: -3.043016195297241
    5. ':' → logprob: -3.293016195297241
    6. '     
' → logprob: -3.918016195297241
    7. ' 
' → logprob: -4.04301643371582
    8. '\' → logprob: -4.04301643371582
    9. '   
' → logprob: -4.04301643371582
    10. '<|end|>' → logprob: -4.29301643371582

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026868414133787155
    2. ' ' → logprob: -5.0268683433532715
    3. '    ' → logprob: -5.2768683433532715
    4. '    
' → logprob: -5.2768683433532715
    5. '<|end|>' → logprob: -6.0268683433532715
    6. '  ' → logprob: -6.7768683433532715
    7. ' 
' → logprob: -6.9018683433532715
    8. 'i' → logprob: -7.2768683433532715
    9. '       ' → logprob: -7.2768683433532715
    10. '  
' → logprob: -7.7768683433532715

Token 25: ' j' (ID: 441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23601192235946655
    2. ' for' → logprob: -2.8610119819641113
    3. ' ' → logprob: -3.1110119819641113
    4. '    ' → logprob: -3.8610119819641113
    5. 'i' → logprob: -3.9860119819641113
    6. 'for' → logprob: -4.111011981964111
    7. ' if' → logprob: -4.111011981964111
    8. 'if' → logprob: -4.236011981964111
    9. '       ' → logprob: -5.111011981964111
    10. ' i' → logprob: -5.361011981964111

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01607038453221321
    2. '=' → logprob: -4.141070365905762
    3. ' in' → logprob: -11.516070365905762
    4. ' ' → logprob: -11.516070365905762
    5. '<|end|>' → logprob: -12.266070365905762
    6. '   ' → logprob: -13.141070365905762
    7. '<|end|>' → logprob: -13.891070365905762
    8. ' for' → logprob: -14.016070365905762
    9. 'in' → logprob: -14.016070365905762
    10. '    ' → logprob: -14.016070365905762

Token 27: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026327352970838547
    2. ' ' → logprob: -3.65132737159729
    3. '   ' → logprob: -10.651327133178711
    4. '  ' → logprob: -14.026327133178711
    5. '3' → logprob: -14.901327133178711
    6. '    ' → logprob: -15.026327133178711
    7. '1' → logprob: -15.088827133178711
    8. ' ' → logprob: -15.276327133178711
    9. 'i' → logprob: -15.588827133178711
    10. 'x' → logprob: -15.713827133178711

Token 28: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000989699736237526
    2. ' ' → logprob: -7.00098991394043
    3. 'i' → logprob: -9.75098991394043
    4. '   ' → logprob: -12.00098991394043
    5. 'x' → logprob: -12.25098991394043
    6. ' i' → logprob: -13.25098991394043
    7. '1' → logprob: -13.62598991394043
    8. ')' → logprob: -14.00098991394043
    9. '  ' → logprob: -14.06348991394043
    10. '    ' → logprob: -14.12598991394043

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.006837322376668453
    2. 'j' → logprob: -5.006837368011475
    3. ' ' → logprob: -9.131836891174316
    4. ' ' → logprob: -12.256836891174316
    5. '	j' → logprob: -12.881836891174316
    6. '    ' → logprob: -13.131836891174316
    7. ' i' → logprob: -13.506836891174316
    8. ' (' → logprob: -14.006836891174316
    9. '<|end|>' → logprob: -14.131836891174316
    10. '$j' → logprob: -15.256836891174316

Token 33: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.47325465083122253
    2. ' *' → logprob: -1.098254680633545
    3. '*j' → logprob: -3.598254680633545
    4. '*' → logprob: -4.473254680633545
    5. '<=' → logprob: -5.598254680633545
    6. '*i' → logprob: -7.348254680633545
    7. ' <' → logprob: -8.848254203796387
    8. '**' → logprob: -9.348254203796387
    9. ' ' → logprob: -9.723254203796387
    10. ' **' → logprob: -9.848254203796387

Token 34: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8646053671836853
    2. '=' → logprob: -1.11460542678833
    3. ' i' → logprob: -1.61460542678833
    4. '=i' → logprob: -3.48960542678833
    5. '=int' → logprob: -3.98960542678833
    6. 'int' → logprob: -6.86460542678833
    7. ' =' → logprob: -6.98960542678833
    8. ' int' → logprob: -7.86460542678833
    9. '=(' → logprob: -9.739604949951172
    10. 'x' → logprob: -9.739604949951172

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06415008753538132
    2. ' and' → logprob: -2.939150094985962
    3. 'and' → logprob: -5.564149856567383
    4. '**' → logprob: -5.814149856567383
    5. ':
' → logprob: -6.939149856567383
    6. ' :' → logprob: -6.939149856567383
    7. '   ' → logprob: -8.939149856567383
    8. ':**' → logprob: -9.439149856567383
    9. ' ' → logprob: -9.689149856567383
    10. '):' → logprob: -10.064149856567383

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.308601438999176
    2. '<|end|>' → logprob: -1.8086013793945312
    3. '   ' → logprob: -2.6836013793945312
    4. '    ' → logprob: -4.683601379394531
    5. ' ' → logprob: -4.933601379394531
    6. '<|end|>' → logprob: -5.183601379394531
    7. ':' → logprob: -6.058601379394531
    8. ' 
' → logprob: -6.433601379394531
    9. ' if' → logprob: -6.683601379394531
    10. '
' → logprob: -7.058601379394531

Token 37: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04913148656487465
    2. '       ' → logprob: -3.674131393432617
    3. 'if' (adapté à ' if') → logprob: -4.049131393432617
    4. '<|end|>' → logprob: -5.799131393432617
    5. '   ' → logprob: -6.924131393432617
    6. ' ' → logprob: -7.424131393432617
    7. '<|end|>' → logprob: -8.674131393432617
    8. ' 
' → logprob: -8.924131393432617
    9. '    ' → logprob: -9.799131393432617
    10. '        
' → logprob: -10.299131393432617

Token 38: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.020631344988942146
    2. 'i' → logprob: -3.8956313133239746
    3. ' ' → logprob: -9.645631790161133
    4. ' (' → logprob: -11.770631790161133
    5. '(i' → logprob: -11.770631790161133
    6. '	i' → logprob: -13.020631790161133
    7. '   ' → logprob: -13.020631790161133
    8. ' ' → logprob: -13.270631790161133
    9. '%i' → logprob: -13.395631790161133
    10. '  ' → logprob: -13.770631790161133

Token 39: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02329043485224247
    2. '%' → logprob: -3.7732903957366943
    3. ' ' → logprob: -10.273290634155273
    4. ' ' → logprob: -11.898290634155273
    5. '%i' → logprob: -12.648290634155273
    6. '%s' → logprob: -16.398290634155273
    7. '%d' → logprob: -16.648290634155273
    8. '   ' → logprob: -16.773290634155273
    9. '%e' → logprob: -16.773290634155273
    10. '%c' → logprob: -17.148290634155273

Token 40: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005240037105977535
    2. ' j' → logprob: -5.255239963531494
    3. ' ' → logprob: -12.255240440368652
    4. '	j' → logprob: -14.005240440368652
    5. '2' → logprob: -14.755240440368652
    6. '   ' → logprob: -15.505240440368652
    7. '$j' → logprob: -17.255239486694336
    8. ' ' → logprob: -17.380239486694336
    9. '  ' → logprob: -18.130239486694336
    10. '_j' → logprob: -18.755239486694336

Token 41: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10027287900447845
    2. '==' → logprob: -2.3502728939056396
    3. ' ' → logprob: -10.475273132324219
    4. ' !=' → logprob: -11.100273132324219
    5. '=' → logprob: -11.350273132324219
    6. ')' → logprob: -12.725273132324219
    7. ')==' → logprob: -12.850273132324219
    8. ' ' → logprob: -13.600273132324219
    9. '<|end|>' → logprob: -14.225273132324219
    10. ' =' → logprob: -14.225273132324219

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759441256523132
    2. '0' → logprob: -0.8259441256523132
    3. ' ' → logprob: -12.325943946838379
    4. '<|end|>' → logprob: -16.200944900512695
    5. '   ' → logprob: -17.075944900512695
    6. '  ' → logprob: -17.325944900512695
    7. '```' → logprob: -17.325944900512695
    8. '۰' → logprob: -17.450944900512695
    9. '1' → logprob: -18.075944900512695
    10. '==' → logprob: -18.388444900512695

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059289163909852505
    2. ' ' → logprob: -5.130928993225098
    3. ' ' → logprob: -16.63092803955078
    4. '```' → logprob: -17.50592803955078
    5. '۰' → logprob: -17.75592803955078
    6. '   ' → logprob: -17.88092803955078
    7. '  ' → logprob: -18.19342803955078
    8. '00' → logprob: -18.56842803955078
    9. 'o' → logprob: -19.19342803955078
    10. '٠' → logprob: -19.25592803955078

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017262301407754421
    2. ':
' → logprob: -6.376726150512695
    3. ' :' → logprob: -11.626726150512695
    4. '       ' → logprob: -12.376726150512695
    5. ':return' → logprob: -12.751726150512695
    6. '   ' → logprob: -13.001726150512695
    7. ' and' → logprob: -13.251726150512695
    8. '           ' → logprob: -14.001726150512695
    9. '<|end|>' → logprob: -14.001726150512695
    10. ' or' → logprob: -14.876726150512695

Token 45: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016501873033121228
    2. '       ' → logprob: -7.126650333404541
    3. ' est' → logprob: -8.126649856567383
    4. '   ' → logprob: -9.501649856567383
    5. ' ' → logprob: -9.501649856567383
    6. '            
' → logprob: -9.626649856567383
    7. ' break' → logprob: -10.001649856567383
    8. '               ' → logprob: -10.251649856567383
    9. '```' → logprob: -10.251649856567383
    10. ' 
' → logprob: -10.376649856567383

Token 46: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.24948160350322723
    2. 'est' (adapté à ' est') → logprob: -2.124481678009033
    3. '           ' → logprob: -2.374481678009033
    4. '       ' → logprob: -5.499481678009033
    5. '   ' → logprob: -6.999481678009033
    6. ' ' → logprob: -7.124481678009033
    7. '               ' → logprob: -7.249481678009033
    8. ' break' → logprob: -7.374481678009033
    9. '```' → logprob: -8.249481201171875
    10. 'break' → logprob: -8.374481201171875

Token 47: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00464526517316699
    2. '_' → logprob: -5.379645347595215
    3. ' _' → logprob: -10.879645347595215
    4. 'prem' → logprob: -12.754645347595215
    5. '_pr' → logprob: -14.379645347595215
    6. ' ' → logprob: -15.254645347595215
    7. '_pet' → logprob: -15.379645347595215
    8. '<|end|>' → logprob: -15.379645347595215
    9. '_s' → logprob: -15.504645347595215
    10. '_possible' → logprob: -15.754645347595215

Token 48: 'rem' (ID: 1935)
  Prédit: 'rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -6.56364209135063e-05
    2. 'r' → logprob: -10.500065803527832
    3. 'prem' → logprob: -10.875065803527832
    4. '_rem' → logprob: -12.125065803527832
    5. 'rm' → logprob: -12.500065803527832
    6. 'rim' → logprob: -12.625065803527832
    7. 'erm' → logprob: -13.500065803527832
    8. 'ram' → logprob: -13.625065803527832
    9. 're' → logprob: -13.625065803527832
    10. 'remium' → logprob: -14.500065803527832

Token 49: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: 0.0
    2. 'iers' → logprob: -18.125
    3. 'ierd' → logprob: -18.375
    4. 'er' → logprob: -18.5
    5. 'i' → logprob: -19.625
    6. ' ier' → logprob: -20.0
    7. 'iert' → logprob: -20.125
    8. 'ieur' → logprob: -21.125
    9. 'is' → logprob: -21.5
    10. 'e' → logprob: -21.5

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04306644946336746
    2. '=' → logprob: -3.1680665016174316
    3. '=False' → logprob: -9.668066024780273
    4. ' ' → logprob: -13.043066024780273
    5. 's' → logprob: -14.418066024780273
    6. '   ' → logprob: -14.668066024780273
    7. 'False' → logprob: -14.793066024780273
    8. '=True' → logprob: -16.168066024780273
    9. ' ' → logprob: -16.418066024780273
    10. ' False' → logprob: -16.793066024780273

Token 51: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.3132616877555847
    2. 'False' → logprob: -1.3132617473602295
    3. ' True' → logprob: -18.063261032104492
    4. '=False' → logprob: -18.313261032104492
    5. '(False' → logprob: -18.813261032104492
    6. 'True' → logprob: -20.063261032104492
    7. '_false' → logprob: -20.938261032104492
    8. '   ' → logprob: -21.188261032104492
    9. ' false' → logprob: -21.563261032104492
    10. ' ' → logprob: -23.063261032104492

Token 52: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012316323816776276
    2. '
' → logprob: -5.7623162269592285
    3. '       ' → logprob: -5.8873162269592285
    4. '            
' → logprob: -6.1373162269592285
    5. '<|end|>' → logprob: -6.7623162269592285
    6. '               ' → logprob: -7.0123162269592285
    7. ' 
' → logprob: -7.8873162269592285
    8. '\n' → logprob: -8.012316703796387
    9. 'break' → logprob: -8.012316703796387
    10. '        
' → logprob: -8.137316703796387

Token 53: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003215261036530137
    2. '\n' → logprob: -7.003215312957764
    3. '            
' → logprob: -7.628215312957764
    4. '
' → logprob: -7.628215312957764
    5. '       ' → logprob: -7.753215312957764
    6. '               ' → logprob: -7.878215312957764
    7. '<|end|>' → logprob: -8.378214836120605
    8. ' 
' → logprob: -9.628214836120605
    9. '        
' → logprob: -9.878214836120605
    10. 'break' → logprob: -10.378214836120605

Token 54: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5865024924278259
    2. 'break' (adapté à ' break') → logprob: -0.8365024924278259
    3. '           ' → logprob: -4.586502552032471
    4. '       ' → logprob: -8.211502075195312
    5. '	break' → logprob: -10.586502075195312
    6. '               ' → logprob: -11.711502075195312
    7. '   ' → logprob: -11.961502075195312
    8. '```' → logprob: -12.586502075195312
    9. ' ' → logprob: -13.836502075195312
    10. '_break' → logprob: -13.961502075195312

Token 55: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09833817183971405
    2. '       ' → logprob: -2.7233381271362305
    3. ' 
' → logprob: -4.0983381271362305
    4. '        
' → logprob: -5.3483381271362305
    5. '\n' → logprob: -6.3483381271362305
    6. '    
' → logprob: -6.5983381271362305
    7. '```' → logprob: -6.7233381271362305
    8. '   ' → logprob: -7.4733381271362305
    9. 'j' → logprob: -7.7233381271362305
    10. '  
' → logprob: -7.8483381271362305

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11293358355760574
    2. '
' → logprob: -2.36293363571167
    3. '        
' → logprob: -4.61293363571167
    4. '<|end|>' → logprob: -7.48793363571167
    5. ' 
' → logprob: -7.73793363571167
    6. '```' → logprob: -7.86293363571167
    7. '\n' → logprob: -8.237933158874512
    8. '    
' → logprob: -8.612933158874512
    9. 'j' → logprob: -8.612933158874512
    10. '    ' → logprob: -8.737933158874512

Token 57: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003504684427753091
    2. '   ' → logprob: -7.003504753112793
    3. 'j' (adapté à ' j') → logprob: -7.128504753112793
    4. '
' → logprob: -7.253504753112793
    5. '        
' → logprob: -8.253504753112793
    6. '	' → logprob: -8.378504753112793
    7. '	j' → logprob: -8.378504753112793
    8. ' j' → logprob: -8.753504753112793
    9. '    
' → logprob: -9.628504753112793
    10. ' 
' → logprob: -10.628504753112793

Token 58: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25348013639450073
    2. '+=' → logprob: -1.5034801959991455
    3. '+' → logprob: -6.628479957580566
    4. '=' → logprob: -8.753479957580566
    5. ' ' → logprob: -10.003479957580566
    6. ' +' → logprob: -11.128479957580566
    7. ' =' → logprob: -12.503479957580566
    8. '    ' → logprob: -13.378479957580566
    9. ' ' → logprob: -13.628479957580566
    10. '+='' → logprob: -13.878479957580566

Token 59: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3869050443172455
    2. ' j' → logprob: -1.1369050741195679
    3. '1' → logprob: -10.6369047164917
    4. '+' → logprob: -12.5119047164917
    5. ' ' → logprob: -12.5119047164917
    6. '	j' → logprob: -13.2619047164917
    7. '+j' → logprob: -15.2619047164917
    8. '$j' → logprob: -15.6369047164917
    9. '2' → logprob: -15.7619047164917
    10. ' ' → logprob: -16.636905670166016

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014168561436235905
    2. ' +' → logprob: -4.264168739318848
    3. ' plus' → logprob: -13.264168739318848
    4. '1' → logprob: -13.264168739318848
    5. ' ' → logprob: -14.139168739318848
    6. '+j' → logprob: -15.014168739318848
    7. '+
' → logprob: -15.764168739318848
    8. '+i' → logprob: -16.38916778564453
    9. '+=' → logprob: -17.13916778564453
    10. '   ' → logprob: -17.13916778564453

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.625380516052246
    4. ' ' → logprob: -17.75037956237793
    5. '  ' → logprob: -18.25037956237793
    6. '    ' → logprob: -19.00037956237793
    7. '2' → logprob: -19.50037956237793
    8. '```' → logprob: -19.56287956237793
    9. '۱' → logprob: -19.93787956237793
    10. '１' → logprob: -20.37537956237793

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.500028610229492
    4. '  ' → logprob: -16.750028610229492
    5. '```' → logprob: -18.062528610229492
    6. '<|end|>' → logprob: -18.437528610229492
    7. '۱' → logprob: -18.562528610229492
    8. ' ' → logprob: -19.000028610229492
    9. '    ' → logprob: -19.437528610229492
    10. '১' → logprob: -19.500028610229492

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06251039355993271
    2. '   ' → logprob: -2.8125104904174805
    3. '    
' → logprob: -7.9375104904174805
    4. '
' → logprob: -9.43751049041748
    5. '   
' → logprob: -10.31251049041748
    6. ' 
' → logprob: -11.18751049041748
    7. '

' → logprob: -11.18751049041748
    8. '```' → logprob: -11.31251049041748
    9. '<|end|>' → logprob: -11.56251049041748
    10. '  
' → logprob: -11.68751049041748

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23308812081813812
    2. '
' → logprob: -1.6080881357192993
    3. '    
' → logprob: -5.10808801651001
    4. '   
' → logprob: -7.23308801651001
    5. ' 
' → logprob: -7.60808801651001
    6. '  
' → logprob: -8.733088493347168
    7. '```' → logprob: -8.858088493347168
    8. '        
' → logprob: -11.108088493347168
    9. '<|end|>' → logprob: -11.233088493347168
    10. '
' → logprob: -11.608088493347168

Token 65: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009648543782532215
    2. 'if' (adapté à ' if') → logprob: -4.759648323059082
    3. '    
' → logprob: -7.509648323059082
    4. '
' → logprob: -8.009648323059082
    5. ' if' → logprob: -9.134648323059082
    6. ' ' → logprob: -10.884648323059082
    7. '```' → logprob: -11.759648323059082
    8. ' 
' → logprob: -12.259648323059082
    9. '        
' → logprob: -12.509648323059082
    10. '  
' → logprob: -12.509648323059082

Token 66: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.00021641071361955255
    2. ' ' → logprob: -9.375216484069824
    3. 'est' → logprob: -9.375216484069824
    4. ' ' → logprob: -10.000216484069824
    5. '(est' → logprob: -14.000216484069824
    6. ' i' → logprob: -16.125215530395508
    7. ' es' → logprob: -16.250215530395508
    8. '  ' → logprob: -16.500215530395508
    9. ' ' → logprob: -16.750215530395508
    10. '   ' → logprob: -17.625215530395508

Token 67: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0007300666766241193
    2. '_' → logprob: -7.250730037689209
    3. ' _' → logprob: -11.000730514526367
    4. '   ' → logprob: -15.000730514526367
    5. '._' → logprob: -15.375730514526367
    6. '_pal' → logprob: -15.375730514526367
    7. 'prem' → logprob: -15.500730514526367
    8. '_s' → logprob: -15.625730514526367
    9. '<|end|>' → logprob: -15.625730514526367
    10. '```' → logprob: -15.750730514526367

Token 68: 'rem' (ID: 1935)
  Prédit: 'rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.0026646002661436796
    2. 'r' → logprob: -6.002664566040039
    3. 'erm' → logprob: -9.627664566040039
    4. 'prem' → logprob: -10.127664566040039
    5. 're' → logprob: -10.377664566040039
    6. 'em' → logprob: -10.877664566040039
    7. 'rm' → logprob: -11.627664566040039
    8. 'ri' → logprob: -11.877664566040039
    9. 'ram' → logprob: -11.877664566040039
    10. 'rim' → logprob: -12.627664566040039

Token 69: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -4.008129963040119e-06
    2. 'i' → logprob: -13.000003814697266
    3. 'er' → logprob: -14.000003814697266
    4. 'iers' → logprob: -15.500003814697266
    5. 'e' → logprob: -15.625003814697266
    6. ' ier' → logprob: -16.250003814697266
    7. 'iert' → logprob: -16.875003814697266
    8. '   ' → logprob: -17.125003814697266
    9. 'ierd' → logprob: -17.250003814697266
    10. 'ie' → logprob: -17.500003814697266

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003222342347726226
    2. ' :' → logprob: -8.875322341918945
    3. ':
' → logprob: -9.625322341918945
    4. '   ' → logprob: -9.750322341918945
    5. ' and' → logprob: -10.000322341918945
    6. '       ' → logprob: -12.625322341918945
    7. '=' → logprob: -13.250322341918945
    8. 'and' → logprob: -13.375322341918945
    9. '==' → logprob: -13.625322341918945
    10. ',' → logprob: -14.000322341918945

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6654666662216187
    2. '   ' → logprob: -0.7904666662216187
    3. ' print' → logprob: -4.040466785430908
    4. 'print' → logprob: -5.415466785430908
    5. ':' → logprob: -6.040466785430908
    6. '    ' → logprob: -6.165466785430908
    7. '    
' → logprob: -6.290466785430908
    8. '        
' → logprob: -7.040466785430908
    9. '```' → logprob: -7.165466785430908
    10. ' 
' → logprob: -7.665466785430908

Token 72: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2527795433998108
    2. 'print' (adapté à ' print') → logprob: -1.502779483795166
    3. '   ' → logprob: -7.127779483795166
    4. '```' → logprob: -11.377779960632324
    5. '    ' → logprob: -11.752779960632324
    6. '       ' → logprob: -12.127779960632324
    7. ' i' → logprob: -12.627779960632324
    8. ' 
' → logprob: -12.627779960632324
    9. ' break' → logprob: -12.752779960632324
    10. '	print' → logprob: -12.752779960632324

Token 73: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.47409096360206604
    2. '(' → logprob: -0.9740909337997437
    3. '('' → logprob: -11.849090576171875
    4. '((' → logprob: -13.349090576171875
    5. '(x' → logprob: -13.474090576171875
    6. '(
' → logprob: -13.849090576171875
    7. '("("' → logprob: -13.974090576171875
    8. 'i' → logprob: -14.724090576171875
    9. '(f' → logprob: -14.849090576171875
    10. '(`' → logprob: -14.974090576171875

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8219583075260743e-05
    2. ')
' → logprob: -10.250038146972656
    3. ' )' → logprob: -14.125038146972656
    4. '   ' → logprob: -14.125038146972656
    5. ',' → logprob: -14.750038146972656
    6. ')`' → logprob: -15.500038146972656
    7. '+' → logprob: -15.750038146972656
    8. '*' → logprob: -16.000038146972656
    9. ')
' → logprob: -16.375038146972656
    10. '),' → logprob: -16.625038146972656

Token 75: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034964739461429417
    2. 'i' → logprob: -8.625349998474121
    3. ' i' → logprob: -9.000349998474121
    4. '    
' → logprob: -10.625349998474121
    5. '
' → logprob: -11.750349998474121
    6. '```' → logprob: -11.875349998474121
    7. '	i' → logprob: -12.500349998474121
    8. '  ' → logprob: -14.375349998474121
    9. '   
' → logprob: -14.500349998474121
    10. '       ' → logprob: -14.500349998474121

Token 76: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.019766826182603836
    2. 'i' → logprob: -4.269766807556152
    3. '   ' → logprob: -5.894766807556152
    4. ' break' → logprob: -5.894766807556152
    5. ' i' → logprob: -9.894766807556152
    6. '	break' → logprob: -11.644766807556152
    7. 'b' → logprob: -11.769766807556152
    8. ' ' → logprob: -12.394766807556152
    9. '```' → logprob: -12.769766807556152
    10. 'return' → logprob: -13.769766807556152

Token 77: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044673629105091095
    2. 'i' → logprob: -3.4196736812591553
    3. '    
' → logprob: -5.669673442840576
    4. ' ' → logprob: -6.294673442840576
    5. ' i' → logprob: -6.294673442840576
    6. '  ' → logprob: -7.044673442840576
    7. '
' → logprob: -7.169673442840576
    8. '<|end|>' → logprob: -7.419673442840576
    9. '    ' → logprob: -7.669673442840576
    10. '  
' → logprob: -8.044673919677734

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0385364405810833
    2. 'i' → logprob: -3.288536548614502
    3. ' i' → logprob: -8.288536071777344
    4. '    
' → logprob: -8.538536071777344
    5. '	i' → logprob: -11.038536071777344
    6. '  ' → logprob: -12.163536071777344
    7. '<|end|>' → logprob: -12.288536071777344
    8. ' ' → logprob: -12.788536071777344
    9. '    ' → logprob: -13.038536071777344
    10. '+' → logprob: -13.288536071777344

Token 79: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.06202537938952446
    2. '   ' → logprob: -2.812025308609009
    3. ' i' → logprob: -10.18702507019043
    4. '    
' → logprob: -11.68702507019043
    5. '	i' → logprob: -12.06202507019043
    6. '
' → logprob: -13.06202507019043
    7. ' ' → logprob: -13.56202507019043
    8. ' 
' → logprob: -14.06202507019043
    9. '```' → logprob: -14.68702507019043
    10. '  ' → logprob: -14.93702507019043

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08467300236225128
    2. ' +=' → logprob: -3.3346729278564453
    3. '+=' → logprob: -3.9596729278564453
    4. ' =' → logprob: -3.9596729278564453
    5. '+' → logprob: -4.959672927856445
    6. ' ' → logprob: -7.834672927856445
    7. '<|end|>' → logprob: -12.834672927856445
    8. '=i' → logprob: -13.459672927856445
    9. ' +' → logprob: -13.459672927856445
    10. '   ' → logprob: -13.709672927856445

Token 81: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25192946195602417
    2. ' i' → logprob: -1.501929521560669
    3. '	i' → logprob: -15.25192928314209
    4. '   ' → logprob: -16.001930236816406
    5. 'x' → logprob: -17.751930236816406
    6. ' ' → logprob: -18.626930236816406
    7. '_i' → logprob: -18.876930236816406
    8. 'I' → logprob: -19.251930236816406
    9. '1' → logprob: -19.251930236816406
    10. ' ' → logprob: -19.751930236816406

Token 82: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003360582049936056
    2. ' +' → logprob: -8.000335693359375
    3. '1' → logprob: -14.500335693359375
    4. ' plus' → logprob: -16.875335693359375
    5. '+
' → logprob: -17.000335693359375
    6. ' ' → logprob: -17.625335693359375
    7. 'plus' → logprob: -18.500335693359375
    8. '＋' → logprob: -18.875335693359375
    9. '++' → logprob: -18.875335693359375
    10. '```' → logprob: -19.125335693359375

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -17.500024795532227
    4. '  ' → logprob: -18.500024795532227
    5. '```' → logprob: -18.500024795532227
    6. '   ' → logprob: -18.750024795532227
    7. ' ' → logprob: -19.937524795532227
    8. '۱' → logprob: -20.125024795532227
    9. '১' → logprob: -20.625024795532227
    10. 's' → logprob: -20.625024795532227

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -14.750009536743164
    4. '<|end|>' → logprob: -17.312509536743164
    5. '```' → logprob: -17.562509536743164
    6. 'x' → logprob: -17.687509536743164
    7. '১' → logprob: -18.125009536743164
    8. '2' → logprob: -18.312509536743164
    9. '  ' → logprob: -18.312509536743164
    10. '१' → logprob: -18.375009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 82
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 43.90%
Précision adaptée (1ère position): 46.34%
Précision (top 10): 84.15%
================================================================================
