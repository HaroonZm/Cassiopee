================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import numpy as np

def read_input():
    return map(int, input().split())

def generate_coef(n):
    return np.minimum(np.arange(n,1,-1), np.arange(1,n))

def initialize_dp(n):
    dp = np.zeros(n, dtype=np.int64)
    set_dp_base(dp)
    return dp

def set_dp_base(dp):
    dp[0] = 1

def copy_dp(dp):
    return dp.copy()

def compute_ndp(ndp, dp, c, n):
    for i in generate_range(c, n):
        add_to_ndp(ndp, dp, i, n)
    return ndp

def generate_range(c, n):
    return range(c, n, c)

def add_to_ndp(ndp, dp, i, n):
    ndp[i:] += dp[:n-i]

def mod_dp(ndp, m):
    return ndp % m

def final_result(dp, n, m):
    arr = compute_arr(n)
    res = (dp * arr) % m
    return np.sum(res) % m

def compute_arr(n):
    return np.arange(n, 0, -1)

def main():
    n, m = read_input()
    coef = generate_coef(n)
    dp = initialize_dp(n)
    for c in coef:
        ndp = copy_dp(dp)
        ndp = compute_ndp(ndp, dp, c, n)
        dp = mod_dp(ndp, m)
    print(final_result(dp, n, m))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0005276533775031567
    2. 'np' → logprob: -7.625527858734131
    3. ' ' → logprob: -10.250527381896973
    4. ' numpy' → logprob: -12.500527381896973
    5. ' ' → logprob: -14.500527381896973
    6. '_np' → logprob: -17.37552833557129
    7. 'numpy' → logprob: -17.75052833557129
    8. ' n' → logprob: -18.00052833557129
    9. ',np' → logprob: -18.25052833557129
    10. ' npc' → logprob: -18.50052833557129

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4912054240703583
    2. 'newline' → logprob: -1.9912054538726807
    3. '\n' → logprob: -2.1162054538726807
    4. 'import' → logprob: -2.7412054538726807
    5. '\' → logprob: -3.8662054538726807
    6. '```' → logprob: -4.116205215454102
    7. '<|end|>' → logprob: -4.366205215454102
    8. '
' → logprob: -5.866205215454102
    9. '<|end|>' → logprob: -6.241205215454102
    10. '[' → logprob: -6.366205215454102

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27373868227005005
    2. '\n' → logprob: -2.1487386226654053
    3. '```' → logprob: -2.8987386226654053
    4. '\' → logprob: -3.7737386226654053
    5. 'newline' → logprob: -4.148738861083984
    6. '<|end|>' → logprob: -4.273738861083984
    7. 'import' → logprob: -5.648738861083984
    8. '[' → logprob: -6.148738861083984
    9. '\[' → logprob: -6.898738861083984
    10. '\r' → logprob: -7.023738861083984

Token 6: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.025421956554055214
    2. ' space' → logprob: -4.525422096252441
    3. ' array' → logprob: -6.150422096252441
    4. ' process' → logprob: -6.275422096252441
    5. ' calculate' → logprob: -6.650422096252441
    6. ' my' → logprob: -6.775422096252441
    7. ' f' → logprob: -7.400422096252441
    8. ' ' → logprob: -7.525422096252441
    9. ' func' → logprob: -7.775422096252441
    10. ' create' → logprob: -7.900422096252441

Token 7: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2864112854003906
    2. '(' → logprob: -1.4114112854003906
    3. ' (' → logprob: -6.161411285400391
    4. '_csv' → logprob: -6.661411285400391
    5. '_file' → logprob: -6.911411285400391
    6. '_data' → logprob: -8.41141128540039
    7. '_line' → logprob: -9.03641128540039
    8. ' ' → logprob: -9.28641128540039
    9. '(file' → logprob: -9.91141128540039
    10. 's' → logprob: -9.91141128540039

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030122430995106697
    2. '_' → logprob: -3.5301225185394287
    3. ' (' → logprob: -9.530122756958008
    4. '(_' → logprob: -10.030122756958008
    5. '```' → logprob: -10.280122756958008
    6. ':' → logprob: -10.655122756958008
    7. '_input' → logprob: -10.905122756958008
    8. '_(' → logprob: -11.030122756958008
    9. '_line' → logprob: -11.030122756958008
    10. '(_:' → logprob: -11.280122756958008

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38550227880477905
    2. '(' → logprob: -2.385502338409424
    3. 'return' → logprob: -2.760502338409424
    4. ' return' → logprob: -3.135502338409424
    5. '```' → logprob: -3.635502338409424
    6. '\' → logprob: -4.010502338409424
    7. ' ' → logprob: -4.385502338409424
    8. '(
' → logprob: -4.385502338409424
    9. '()' → logprob: -4.760502338409424
    10. '():' → logprob: -5.135502338409424

Token 10: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8384302258491516
    2. 'data' → logprob: -0.9634302258491516
    3. '   ' → logprob: -3.213430166244507
    4. ' return' → logprob: -3.588430166244507
    5. ' data' → logprob: -3.713430166244507
    6. ' ' → logprob: -3.713430166244507
    7. 'input' → logprob: -3.838430166244507
    8. 'x' → logprob: -4.088430404663086
    9. 'line' → logprob: -5.213430404663086
    10. 'r' → logprob: -5.213430404663086

Token 11: ' map' (ID: 4014)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.20884856581687927
    2. 'np' → logprob: -2.458848476409912
    3. ' ' → logprob: -2.833848476409912
    4. ' input' → logprob: -3.833848476409912
    5. 'input' → logprob: -3.958848476409912
    6. ' int' → logprob: -6.458848476409912
    7. 'int' → logprob: -7.833848476409912
    8. ' []' → logprob: -7.833848476409912
    9. ' list' → logprob: -7.958848476409912
    10. ' None' → logprob: -8.45884895324707

Token 12: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07230614125728607
    2. '(int' → logprob: -2.6973061561584473
    3. '(np' → logprob: -6.947306156158447
    4. '(str' → logprob: -7.822306156158447
    5. '(lambda' → logprob: -7.822306156158447
    6. '(list' → logprob: -9.322305679321289
    7. '(input' → logprob: -9.447305679321289
    8. '(s' → logprob: -9.947305679321289
    9. '(float' → logprob: -10.072305679321289
    10. ' (' → logprob: -10.072305679321289

Token 13: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13262002170085907
    2. '(' → logprob: -2.632620096206665
    3. '(input' → logprob: -3.132620096206665
    4. '())' → logprob: -7.007619857788086
    5. '(line' → logprob: -7.382619857788086
    6. '('' → logprob: -7.507619857788086
    7. '(
' → logprob: -7.507619857788086
    8. 'input' → logprob: -7.507619857788086
    9. '<|end|>' → logprob: -7.507619857788086
    10. '`)' → logprob: -7.757619857788086

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.35138943791389465
    2. ' input' → logprob: -1.2263894081115723
    3. ')' → logprob: -5.851389408111572
    4. '(input' → logprob: -10.97638988494873
    5. ',input' → logprob: -11.47638988494873
    6. ' )' → logprob: -11.72638988494873
    7. '=input' → logprob: -12.10138988494873
    8. '	input' → logprob: -12.47638988494873
    9. '.input' → logprob: -12.47638988494873
    10. '[input' → logprob: -12.60138988494873

Token 15: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6465796828269958
    2. '()' → logprob: -0.7715796828269958
    3. '('' → logprob: -5.021579742431641
    4. '(' → logprob: -5.646579742431641
    5. ' ())' → logprob: -6.896579742431641
    6. '());' → logprob: -7.021579742431641
    7. '(()' → logprob: -7.271579742431641
    8. ')' → logprob: -8.02157974243164
    9. '()))' → logprob: -8.39657974243164
    10. ' ()' → logprob: -9.14657974243164

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015127197839319706
    2. 'strip' → logprob: -6.50151252746582
    3. 'rstrip' → logprob: -11.62651252746582
    4. ' split' → logprob: -13.62651252746582
    5. 'read' → logprob: -16.12651252746582
    6. '(split' → logprob: -16.25151252746582
    7. 'spl' → logprob: -17.75151252746582
    8. ')' → logprob: -18.12651252746582
    9. ' strip' → logprob: -19.12651252746582
    10. 's' → logprob: -19.62651252746582

Token 17: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06475954502820969
    2. '()))' → logprob: -2.8147594928741455
    3. '()' → logprob: -6.564759731292725
    4. ')' → logprob: -7.064759731292725
    5. '))' → logprob: -7.689759731292725
    6. '(' → logprob: -10.689759254455566
    7. ' ())' → logprob: -11.189759254455566
    8. '())
' → logprob: -11.689759254455566
    9. '()),' → logprob: -12.064759254455566
    10. '())))' → logprob: -12.439759254455566

Token 18: 'def' (ID: 1314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5576849579811096
    2. 'def' → logprob: -1.6826848983764648
    3. 'data' → logprob: -2.432684898376465
    4. 'n' → logprob: -2.932684898376465
    5. 'for' → logprob: -3.182684898376465
    6. 'x' → logprob: -3.932684898376465
    7. 'numbers' → logprob: -4.682684898376465
    8. 'nums' → logprob: -5.057684898376465
    9. '\n' → logprob: -5.557684898376465
    10. 'num' → logprob: -5.682684898376465

Token 19: ' generate' (ID: 10419)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.047309160232544
    2. ' calculate' → logprob: -1.297309160232544
    3. ' solve' → logprob: -1.547309160232544
    4. ' process' → logprob: -2.797309160232544
    5. ' compute' → logprob: -3.297309160232544
    6. ' factorial' → logprob: -4.297308921813965
    7. ' sum' → logprob: -4.797308921813965
    8. ' find' → logprob: -5.297308921813965
    9. ' fibonacci' → logprob: -5.297308921813965
    10. ' count' → logprob: -5.547308921813965

Token 20: '_coef' (ID: 162984)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7465102076530457
    2. '_array' → logprob: -1.1215102672576904
    3. '(' → logprob: -2.2465102672576904
    4. '_numbers' → logprob: -3.4965102672576904
    5. '_data' → logprob: -3.8715102672576904
    6. '_matrix' → logprob: -4.871510028839111
    7. '_numpy' → logprob: -5.871510028839111
    8. '_code' → logprob: -5.871510028839111
    9. '_s' → logprob: -6.371510028839111
    10. '_p' → logprob: -6.371510028839111

Token 21: '(n' (ID: 2406)
  Prédit: 'fic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fic' → logprob: -0.3329232633113861
    2. 'icients' → logprob: -1.5829232931137085
    3. 'fficients' → logprob: -2.832923173904419
    4. 's' → logprob: -4.332923412322998
    5. 'f' → logprob: -5.582923412322998
    6. '_' → logprob: -6.957923412322998
    7. '_f' → logprob: -7.457923412322998
    8. 'icient' → logprob: -9.20792293548584
    9. '(s' → logprob: -9.33292293548584
    10. '```' → logprob: -9.58292293548584

Token 22: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5812031626701355
    2. '):' → logprob: -0.9562031626701355
    3. ',' → logprob: -2.9562032222747803
    4. 's' → logprob: -6.581202983856201
    5. '_' → logprob: -7.331202983856201
    6. 'umer' → logprob: -7.956202983856201
    7. '):
' → logprob: -8.33120346069336
    8. 'u' → logprob: -8.45620346069336
    9. ')_' → logprob: -8.70620346069336
    10. '_coeff' → logprob: -8.95620346069336

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007071489933878183
    2. ' return' → logprob: -6.257071495056152
    3. '[' → logprob: -6.382071495056152
    4. 'np' → logprob: -6.507071495056152
    5. 'return' → logprob: -7.507071495056152
    6. ' np' → logprob: -7.507071495056152
    7. '[np' → logprob: -9.132071495056152
    8. '    
' → logprob: -9.132071495056152
    9. '(np' → logprob: -9.132071495056152
    10. '[]' → logprob: -9.632071495056152

Token 24: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8976181149482727
    2. ' np' → logprob: -1.022618055343628
    3. '   ' → logprob: -1.897618055343628
    4. 'np' → logprob: -2.897618055343628
    5. 'return' (adapté à ' return') → logprob: -3.647618055343628
    6. '[np' → logprob: -7.022618293762207
    7. ' [' → logprob: -8.022618293762207
    8. '[' → logprob: -8.147618293762207
    9. '```' → logprob: -10.522618293762207
    10. '(np' → logprob: -10.522618293762207

Token 25: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.004519127309322357
    2. 'np' → logprob: -5.504518985748291
    3. ' [' → logprob: -8.12951946258545
    4. ' list' → logprob: -9.75451946258545
    5. ' ' → logprob: -10.12951946258545
    6. '[np' → logprob: -11.25451946258545
    7. '[' → logprob: -11.75451946258545
    8. ' n' → logprob: -11.75451946258545
    9. ' []' → logprob: -12.50451946258545
    10. '(np' → logprob: -12.50451946258545

Token 26: '.minimum' (ID: 126839)
  Prédit: '.random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.random' → logprob: -0.8056813478469849
    2. '.linspace' → logprob: -0.8056813478469849
    3. '.' → logprob: -3.1806812286376953
    4. '.ones' → logprob: -3.4306812286376953
    5. '.zeros' → logprob: -4.180681228637695
    6. '.arange' → logprob: -4.555681228637695
    7. '.full' → logprob: -5.555681228637695
    8. '.array' → logprob: -7.055681228637695
    9. '.randn' → logprob: -7.430681228637695
    10. ' .' → logprob: -8.555681228637695

Token 27: '(np' (ID: 21997)
  Prédit: '(np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.009941774420440197
    2. '(' → logprob: -5.259941577911377
    3. '(n' → logprob: -5.634941577911377
    4. '([' → logprob: -7.009941577911377
    5. '.reduce' → logprob: -9.759942054748535
    6. '(.' → logprob: -10.384942054748535
    7. '(range' → logprob: -10.509942054748535
    8. '.acc' → logprob: -11.009942054748535
    9. 'np' → logprob: -11.384942054748535
    10. '([-' → logprob: -11.509942054748535

Token 28: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -0.012902426533401012
    2. '.ones' → logprob: -4.88790225982666
    3. '.linspace' → logprob: -6.01290225982666
    4. '.random' → logprob: -6.88790225982666
    5. '.' → logprob: -7.38790225982666
    6. '.array' → logprob: -7.88790225982666
    7. 'ar' → logprob: -8.63790225982666
    8. '.abs' → logprob: -8.88790225982666
    9. '.zeros' → logprob: -9.26290225982666
    10. '.full' → logprob: -9.51290225982666

Token 29: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.026330027729272842
    2. '(' → logprob: -3.65132999420166
    3. 'n' → logprob: -11.27632999420166
    4. '(-' → logprob: -11.90132999420166
    5. ' (' → logprob: -12.15132999420166
    6. '(start' → logprob: -13.27632999420166
    7. '1' → logprob: -14.77632999420166
    8. '(
' → logprob: -15.15132999420166
    9. '(np' → logprob: -15.15132999420166
    10. '((' → logprob: -15.27632999420166

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05233247950673103
    2. '),' → logprob: -3.3023324012756348
    3. ' ,' → logprob: -4.677332401275635
    4. ')' → logprob: -6.052332401275635
    5. ' ),' → logprob: -6.677332401275635
    6. '+' → logprob: -7.927332401275635
    7. ',n' → logprob: -7.927332401275635
    8. ' +' → logprob: -8.677332878112793
    9. ',),' → logprob: -9.552332878112793
    10. ' ' → logprob: -9.677332878112793

Token 31: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.392502099275589
    2. ' ' → logprob: -1.8925020694732666
    3. ' n' → logprob: -2.5175020694732666
    4. 'n' → logprob: -2.7675020694732666
    5. '1' → logprob: -3.6425020694732666
    6. ' -' → logprob: -6.392502307891846
    7. '-' → logprob: -7.017502307891846
    8. '2' → logprob: -7.517502307891846
    9. ',' → logprob: -7.642502307891846
    10. '-n' → logprob: -8.642501831054688

Token 32: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.02377365715801716
    2. ',' → logprob: -3.898773670196533
    3. '-' → logprob: -6.023773670196533
    4. '0' → logprob: -7.648773670196533
    5. ' ,-' → logprob: -8.273773193359375
    6. ' -' → logprob: -10.023773193359375
    7. ' ,' → logprob: -11.148773193359375
    8. '-,' → logprob: -13.023773193359375
    9. ' ' → logprob: -13.148773193359375
    10. '1' → logprob: -13.148773193359375

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011018721852451563
    2. '-' → logprob: -6.876101970672607
    3. ' -' → logprob: -9.87610149383545
    4. ',-' → logprob: -11.50110149383545
    5. '```' → logprob: -13.12610149383545
    6. ')' → logprob: -13.37610149383545
    7. ',' → logprob: -14.25110149383545
    8. '   ' → logprob: -14.37610149383545
    9. ' ' → logprob: -14.50110149383545
    10. '2' → logprob: -14.50110149383545

Token 34: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.46357905864715576
    2. ')' → logprob: -1.7135790586471558
    3. ',' → logprob: -1.7135790586471558
    4. ',-' → logprob: -5.463579177856445
    5. ' ,' → logprob: -6.713579177856445
    6. '))' → logprob: -6.838579177856445
    7. ' ),' → logprob: -6.963579177856445
    8. ',),' → logprob: -6.963579177856445
    9. ',)' → logprob: -7.088579177856445
    10. '-' → logprob: -7.463579177856445

Token 35: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.6573703289031982
    2. 'np' → logprob: -0.7823703289031982
    3. 'n' → logprob: -4.532370567321777
    4. ' n' → logprob: -4.657370567321777
    5. '2' → logprob: -6.532370567321777
    6. ' ' → logprob: -6.782370567321777
    7. '1' → logprob: -7.282370567321777
    8. '3' → logprob: -8.282370567321777
    9. '4' → logprob: -8.782370567321777
    10. '5' → logprob: -9.282370567321777

Token 36: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -0.0004418743774294853
    2. '.' → logprob: -8.000441551208496
    3. '.array' → logprob: -9.625441551208496
    4. '.ndarray' → logprob: -10.875441551208496
    5. '.linspace' → logprob: -11.375441551208496
    6. '.arr' → logprob: -12.625441551208496
    7. '.range' → logprob: -13.125441551208496
    8. '.asarray' → logprob: -13.375441551208496
    9. ' .' → logprob: -14.375441551208496
    10. '.concatenate' → logprob: -15.125441551208496

Token 37: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004377075005322695
    2. '(n' → logprob: -5.5043768882751465
    3. ' (' → logprob: -9.254377365112305
    4. '((' → logprob: -9.504377365112305
    5. 'n' → logprob: -10.379377365112305
    6. '(-' → logprob: -10.504377365112305
    7. '(
' → logprob: -10.754377365112305
    8. 's' → logprob: -11.879377365112305
    9. '1' → logprob: -12.129377365112305
    10. '2' → logprob: -12.941877365112305

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20823834836483002
    2. 'n' → logprob: -2.333238363265991
    3. '0' → logprob: -2.583238363265991
    4. '(' → logprob: -5.208238124847412
    5. ' ' → logprob: -5.458238124847412
    6. '2' → logprob: -5.958238124847412
    7. ' n' → logprob: -6.458238124847412
    8. '(n' → logprob: -6.833238124847412
    9. ',' → logprob: -8.95823860168457
    10. ')' → logprob: -9.58323860168457

Token 39: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.31561005115509033
    2. ',' → logprob: -1.3156100511550903
    3. ' ,' → logprob: -6.065609931945801
    4. ',np' → logprob: -11.4406099319458
    5. 'n' → logprob: -12.8156099319458
    6. ' ' → logprob: -12.9406099319458
    7. ',num' → logprob: -13.4406099319458
    8. ',
' → logprob: -14.0656099319458
    9. ',:,' → logprob: -14.1906099319458
    10. ',len' → logprob: -14.3156099319458

Token 40: '))

' (ID: 9746)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05133482813835144
    2. ' +' → logprob: -4.051334857940674
    3. ',' → logprob: -4.301334857940674
    4. '))' → logprob: -4.426334857940674
    5. ')' → logprob: -5.676334857940674
    6. '+,' → logprob: -6.676334857940674
    7. '),' → logprob: -7.426334857940674
    8. ',+' → logprob: -7.676334857940674
    9. ',n' → logprob: -8.301334381103516
    10. '+)' → logprob: -8.426334381103516

Token 41: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015058089978992939
    2. '[' → logprob: -4.7650580406188965
    3. '(' → logprob: -5.8900580406188965
    4. '+' → logprob: -6.7650580406188965
    5. '*' → logprob: -7.7650580406188965
    6. '<|end|>' → logprob: -8.015058517456055
    7. '**' → logprob: -8.140058517456055
    8. ' ' → logprob: -8.515058517456055
    9. '(n' → logprob: -8.765058517456055
    10. ',' → logprob: -8.765058517456055

Token 42: ' initialize' (ID: 18400)
  Prédit: ' generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.2282315045595169
    2. ' calculate' → logprob: -2.478231430053711
    3. ' evaluate' → logprob: -4.103231430053711
    4. ' compute' → logprob: -4.228231430053711
    5. ' polynomial' → logprob: -4.603231430053711
    6. ' find' → logprob: -4.853231430053711
    7. ' multiply' → logprob: -4.853231430053711
    8. ' apply' → logprob: -4.978231430053711
    9. ' solve' → logprob: -5.228231430053711
    10. ' factorial' → logprob: -5.228231430053711

Token 43: '_dp' (ID: 133252)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6763009428977966
    2. '_coeff' → logprob: -1.9263010025024414
    3. '_coef' → logprob: -2.3013010025024414
    4. '(n' → logprob: -2.8013010025024414
    5. '_array' → logprob: -2.8013010025024414
    6. '_' → logprob: -2.9263010025024414
    7. '_co' → logprob: -4.051301002502441
    8. '_matrix' → logprob: -4.301301002502441
    9. '_weights' → logprob: -5.176301002502441
    10. '_parameters' → logprob: -5.676301002502441

Token 44: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0433073416352272
    2. '(' → logprob: -3.168307304382324
    3. '_array' → logprob: -9.043307304382324
    4. ' (' → logprob: -9.418307304382324
    5. '_(' → logprob: -11.168307304382324
    6. '_' → logprob: -11.293307304382324
    7. '(len' → logprob: -11.418307304382324
    8. '((' → logprob: -11.543307304382324
    9. '_arrays' → logprob: -11.543307304382324
    10. '   ' → logprob: -11.918307304382324

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011506980517879128
    2. '):
' → logprob: -7.751150608062744
    3. ',' → logprob: -7.876150608062744
    4. ')' → logprob: -8.126151084899902
    5. ' ):' → logprob: -10.751151084899902
    6. ',n' → logprob: -11.751151084899902
    7. '):
' → logprob: -12.376151084899902
    8. ':' → logprob: -12.626151084899902
    9. '   ' → logprob: -12.751151084899902
    10. '+' → logprob: -13.126151084899902

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025843506678938866
    2. ' return' → logprob: -4.525843620300293
    3. 'return' → logprob: -5.275843620300293
    4. '):
' → logprob: -5.900843620300293
    5. 'np' → logprob: -6.400843620300293
    6. '(np' → logprob: -6.650843620300293
    7. 'dp' → logprob: -7.150843620300293
    8. ' np' → logprob: -7.400843620300293
    9. '():
' → logprob: -7.900843620300293
    10. ')' → logprob: -8.025843620300293

Token 47: ' dp' (ID: 21546)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.3670083284378052
    2. ' np' → logprob: -1.8670083284378052
    3. 'return' → logprob: -2.4920082092285156
    4. ' return' → logprob: -2.7420082092285156
    5. 'dp' (adapté à ' dp') → logprob: -5.742008209228516
    6. '   ' → logprob: -6.492008209228516
    7. ' dp' → logprob: -8.242008209228516
    8. 'import' → logprob: -9.242008209228516
    9. '```' → logprob: -9.617008209228516
    10. 'n' → logprob: -9.867008209228516

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00865865871310234
    2. '=' → logprob: -4.7586588859558105
    3. '[' → logprob: -10.758658409118652
    4. ' ' → logprob: -11.008658409118652
    5. '=np' → logprob: -13.258658409118652
    6. ' =[' → logprob: -13.758658409118652
    7. ')' → logprob: -14.008658409118652
    8. '   ' → logprob: -14.758658409118652
    9. ',' → logprob: -14.883658409118652
    10. '=[' → logprob: -15.008658409118652

Token 49: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.3870404064655304
    2. 'np' → logprob: -1.137040376663208
    3. ' [' → logprob: -10.387040138244629
    4. '[' → logprob: -10.762040138244629
    5. ' [[' → logprob: -10.762040138244629
    6. '(np' → logprob: -11.012040138244629
    7. '[[' → logprob: -11.137040138244629
    8. ' ' → logprob: -11.137040138244629
    9. '[np' → logprob: -11.262040138244629
    10. '0' → logprob: -12.574540138244629

Token 50: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.002833172446116805
    2. '.full' → logprob: -6.127833366394043
    3. '.' → logprob: -7.752833366394043
    4. '.ndarray' → logprob: -9.252833366394043
    5. '.ones' → logprob: -9.752833366394043
    6. ' .' → logprob: -10.627833366394043
    7. '.empty' → logprob: -10.752833366394043
    8. '.arange' → logprob: -11.752833366394043
    9. ' zeros' → logprob: -12.252833366394043
    10. '.eye' → logprob: -13.127833366394043

Token 51: '(n' (ID: 2406)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.049484167248010635
    2. '(n' → logprob: -3.0494842529296875
    3. '(' → logprob: -7.0494842529296875
    4. '(int' → logprob: -11.049484252929688
    5. '(shape' → logprob: -12.049484252929688
    6. ' (' → logprob: -13.299484252929688
    7. '([' → logprob: -13.549484252929688
    8. ' ((' → logprob: -14.424484252929688
    9. '(s' → logprob: -14.799484252929688
    10. ')' → logprob: -14.924484252929688

Token 52: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44547179341316223
    2. ',' → logprob: -1.6954717636108398
    3. '+' → logprob: -1.8204717636108398
    4. ',d' → logprob: -5.19547176361084
    5. ',)' → logprob: -5.82047176361084
    6. ' +' → logprob: -6.44547176361084
    7. '),' → logprob: -6.82047176361084
    8. '*' → logprob: -7.69547176361084
    9. ' ,' → logprob: -7.69547176361084
    10. '))' → logprob: -7.94547176361084

Token 53: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.11209428310394287
    2. ')' → logprob: -2.8620944023132324
    3. ' dtype' → logprob: -3.1120944023132324
    4. 'float' → logprob: -6.487094402313232
    5. 'int' → logprob: -6.487094402313232
    6. 'np' → logprob: -7.362094402313232
    7. ' np' → logprob: -7.862094402313232
    8. ' float' → logprob: -8.862093925476074
    9. '(dtype' → logprob: -10.112093925476074
    10. ' int' → logprob: -10.987093925476074

Token 54: '=np' (ID: 40593)
  Prédit: '=int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.12392396479845047
    2. '=' → logprob: -2.6239240169525146
    3. '=np' → logprob: -3.1239240169525146
    4. '=float' → logprob: -9.998924255371094
    5. 'int' → logprob: -12.748924255371094
    6. '=

' → logprob: -14.498924255371094
    7. '=
' → logprob: -14.748924255371094
    8. '=n' → logprob: -14.873924255371094
    9. '=pd' → logprob: -15.123924255371094
    10. '=torch' → logprob: -15.123924255371094

Token 55: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.0226695965975523
    2. '.float' → logprob: -4.522669792175293
    3. '.uint' → logprob: -4.647669792175293
    4. '.bool' → logprob: -6.897669792175293
    5. 'int' → logprob: -7.522669792175293
    6. '.' → logprob: -8.022669792175293
    7. '.i' → logprob: -9.897669792175293
    8. 'uint' → logprob: -12.022669792175293
    9. ']int' → logprob: -12.022669792175293
    10. '.in' → logprob: -12.272669792175293

Token 56: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -0.4741244912147522
    2. '32' → logprob: -0.9741244912147522
    3. 'p' → logprob: -10.599124908447266
    4. 'c' → logprob: -10.849124908447266
    5. '16' → logprob: -13.349124908447266
    6. ')' → logprob: -14.474124908447266
    7. '8' → logprob: -14.849124908447266
    8. '_' → logprob: -15.849124908447266
    9. '```' → logprob: -15.849124908447266
    10. '_)' → logprob: -16.349124908447266

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.03521392197581e-05
    2. ')
' → logprob: -11.125030517578125
    3. ' )' → logprob: -11.375030517578125
    4. '()' → logprob: -13.625030517578125
    5. ')

' → logprob: -13.625030517578125
    6. '))' → logprob: -15.000030517578125
    7. '),' → logprob: -15.000030517578125
    8. '())' → logprob: -15.375030517578125
    9. ')
' → logprob: -15.625030517578125
    10. ')`' → logprob: -15.625030517578125

Token 58: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' set' (ID: 920)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37128186225891113
    2. ' dp' → logprob: -1.7462818622589111
    3. '   ' → logprob: -2.246281862258911
    4. 'return' → logprob: -5.371281623840332
    5. ' return' → logprob: -5.746281623840332
    6. ' for' → logprob: -5.871281623840332
    7. '	dp' → logprob: -5.871281623840332
    8. '[' → logprob: -5.996281623840332
    9. ' ' → logprob: -5.996281623840332
    10. ')' → logprob: -6.121281623840332

Token 60: '_dp' (ID: 133252)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.2393662929534912
    2. '(dp' → logprob: -2.364366292953491
    3. 'ter' → logprob: -3.489366292953491
    4. 'item' → logprob: -3.989366292953491
    5. 'dp' → logprob: -3.989366292953491
    6. '_index' → logprob: -4.11436653137207
    7. 'tlement' → logprob: -5.23936653137207
    8. '_dp' → logprob: -5.23936653137207
    9. '_item' → logprob: -5.73936653137207
    10. '_' → logprob: -5.86436653137207

Token 61: '_base' (ID: 17096)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.07218293845653534
    2. '(' → logprob: -3.6971828937530518
    3. ' =' → logprob: -4.322183132171631
    4. '_value' → logprob: -4.822183132171631
    5. '_values' → logprob: -5.447183132171631
    6. '(np' → logprob: -5.697183132171631
    7. '=' → logprob: -5.822183132171631
    8. '=np' → logprob: -6.697183132171631
    9. '_val' → logprob: -6.822183132171631
    10. 'up' → logprob: -6.947183132171631

Token 62: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.023058177903294563
    2. 'dp' → logprob: -5.2730584144592285
    3. '(' → logprob: -5.3980584144592285
    4. 'value' → logprob: -5.5230584144592285
    5. 'case' → logprob: -5.8980584144592285
    6. 'val' → logprob: -6.3980584144592285
    7. 'values' → logprob: -7.0230584144592285
    8. 'line' → logprob: -7.5230584144592285
    9. '[' → logprob: -7.6480584144592285
    10. '()' → logprob: -7.6480584144592285

Token 63: ')
' (ID: 446)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06445872038602829
    2. '(dp' → logprob: -2.8144586086273193
    3. ')' → logprob: -6.564458847045898
    4. '[' → logprob: -8.064458847045898
    5. '(n' → logprob: -8.314458847045898
    6. ')(' → logprob: -8.314458847045898
    7. '(np' → logprob: -9.314458847045898
    8. ' (' → logprob: -9.439458847045898
    9. '((' → logprob: -10.689458847045898
    10. '([' → logprob: -10.814458847045898

Token 64: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0121268033981323
    2. '()' → logprob: -1.1371268033981323
    3. '(dp' → logprob: -1.2621268033981323
    4. ')' → logprob: -4.387126922607422
    5. '(n' → logprob: -4.762126922607422
    6. '(
' → logprob: -5.762126922607422
    7. 'def' → logprob: -6.137126922607422
    8. '[' → logprob: -6.637126922607422
    9. '(np' → logprob: -7.012126922607422
    10. 'dp' → logprob: -7.387126922607422

Token 65: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15720529854297638
    2. 'def' → logprob: -2.78220534324646
    3. '    
' → logprob: -3.65720534324646
    4. 'dp' → logprob: -4.407205104827881
    5. '(dp' → logprob: -4.532205104827881
    6. '<|end|>' → logprob: -5.032205104827881
    7. ' 
' → logprob: -5.407205104827881
    8. '    ' → logprob: -5.657205104827881
    9. '
' → logprob: -5.782205104827881
    10. '```' → logprob: -6.157205104827881

Token 66: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.011315181851387024
    2. 'dp' → logprob: -4.51131534576416
    3. '(dp' → logprob: -8.26131534576416
    4. '	dp' → logprob: -11.76131534576416
    5. '_dp' → logprob: -15.01131534576416
    6. ' ' → logprob: -15.51131534576416
    7. ' d' → logprob: -16.136314392089844
    8. ' None' → logprob: -16.261314392089844
    9. ' ' → logprob: -16.261314392089844
    10. ' np' → logprob: -16.636314392089844

Token 67: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5607749223709106
    2. '(' → logprob: -0.9357749223709106
    3. 'def' → logprob: -4.060774803161621
    4. '(
' → logprob: -4.685774803161621
    5. '[' → logprob: -5.560774803161621
    6. ')' → logprob: -6.435774803161621
    7. '()
' → logprob: -6.810774803161621
    8. '<|end|>' → logprob: -6.810774803161621
    9. '[]' → logprob: -7.560774803161621
    10. '()

' → logprob: -7.685774803161621

Token 68: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24542489647865295
    2. 'def' → logprob: -2.87042498588562
    3. '_' → logprob: -3.12042498588562
    4. '[' → logprob: -3.37042498588562
    5. ')' → logprob: -3.74542498588562
    6. '(
' → logprob: -4.120424747467041
    7. '()' → logprob: -4.245424747467041
    8. '<|end|>' → logprob: -4.620424747467041
    9. '```' → logprob: -5.870424747467041
    10. ' ' → logprob: -6.370424747467041

Token 69: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.012323154136538506
    2. ' update' → logprob: -5.387323379516602
    3. ' compute' → logprob: -6.012323379516602
    4. ' calculate' → logprob: -6.637323379516602
    5. ' initialize' → logprob: -6.637323379516602
    6. ' solve' → logprob: -7.137323379516602
    7. ' process' → logprob: -7.387323379516602
    8. 'set' → logprob: -8.012323379516602
    9. ' generate' → logprob: -9.262323379516602
    10. ' main' → logprob: -9.387323379516602

Token 70: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.625000953674316
    3. '_df' → logprob: -15.250000953674316
    4. '_dn' → logprob: -16.500001907348633
    5. '_dt' → logprob: -16.750001907348633
    6. '_pd' → logprob: -17.500001907348633
    7. '_dc' → logprob: -17.500001907348633
    8. '_dl' → logprob: -17.625001907348633
    9. '_py' → logprob: -17.625001907348633
    10. '_ds' → logprob: -17.625001907348633

Token 71: '_base' (ID: 17096)
  Prédit: '_base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -1.6240566083070007e-06
    2. '_bas' → logprob: -14.750001907348633
    3. '_' → logprob: -15.000001907348633
    4. '_basis' → logprob: -15.500001907348633
    5. '```' → logprob: -15.500001907348633
    6. '_Base' → logprob: -15.875001907348633
    7. '_basic' → logprob: -16.125001907348633
    8. '_based' → logprob: -16.625001907348633
    9. '_BASE' → logprob: -17.000001907348633
    10. 'base' → logprob: -17.375001907348633

Token 72: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0031796174589544535
    2. '(' → logprob: -5.753179550170898
    3. '(df' → logprob: -14.378179550170898
    4. ' (' → logprob: -15.253179550170898
    5. '(np' → logprob: -15.378179550170898
    6. '(lp' → logprob: -15.753179550170898
    7. '(dt' → logprob: -16.0031795501709
    8. '(ds' → logprob: -16.3781795501709
    9. '()' → logprob: -16.8781795501709
    10. '_dp' → logprob: -17.5031795501709

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007868874818086624
    2. ')' → logprob: -5.257868766784668
    3. '):
' → logprob: -6.882868766784668
    4. '(dp' → logprob: -7.382868766784668
    5. ' ):' → logprob: -8.257868766784668
    6. '(' → logprob: -8.382868766784668
    7. '[' → logprob: -8.632868766784668
    8. '[]):' → logprob: -9.007868766784668
    9. ',' → logprob: -9.257868766784668
    10. '):

' → logprob: -11.132868766784668

Token 74: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3797193765640259
    2. ' dp' → logprob: -1.2547193765640259
    3. '   ' → logprob: -3.5047192573547363
    4. '	dp' → logprob: -7.879719257354736
    5. '(dp' → logprob: -8.629719734191895
    6. '[' → logprob: -9.379719734191895
    7. '```' → logprob: -10.129719734191895
    8. '_dp' → logprob: -10.379719734191895
    9. ' ' → logprob: -11.629719734191895
    10. '.dp' → logprob: -12.254719734191895

Token 75: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.056898560374975204
    2. ' dp' → logprob: -3.056898593902588
    3. '   ' → logprob: -4.806898593902588
    4. '	dp' → logprob: -9.55689811706543
    5. ' ' → logprob: -10.80689811706543
    6. '```' → logprob: -12.68189811706543
    7. '  ' → logprob: -12.93189811706543
    8. '(dp' → logprob: -13.30689811706543
    9. 'for' → logprob: -13.68189811706543
    10. '_dp' → logprob: -14.30689811706543

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00047535591875202954
    2. '[:' → logprob: -8.25047492980957
    3. '[-' → logprob: -9.12547492980957
    4. ' [' → logprob: -10.00047492980957
    5. '[:]' → logprob: -10.12547492980957
    6. '[np' → logprob: -12.37547492980957
    7. '[:-' → logprob: -12.87547492980957
    8. '```' → logprob: -13.00047492980957
    9. '[[' → logprob: -13.12547492980957
    10. '=' → logprob: -13.37547492980957

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0053915842436254025
    2. ' ' → logprob: -5.880391597747803
    3. '1' → logprob: -6.630391597747803
    4. ':' → logprob: -7.505391597747803
    5. '-' → logprob: -7.880391597747803
    6. '[' → logprob: -8.505391120910645
    7. ']' → logprob: -9.505391120910645
    8. ' :' → logprob: -10.505391120910645
    9. ':]' → logprob: -11.755391120910645
    10. '2' → logprob: -12.192891120910645

Token 78: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011960632400587201
    2. ' ]' → logprob: -7.126195907592773
    3. ']=' → logprob: -7.876195907592773
    4. '[' → logprob: -12.751195907592773
    5. ']==' → logprob: -13.501195907592773
    6. ']+=' → logprob: -13.501195907592773
    7. ':]' → logprob: -13.876195907592773
    8. ',' → logprob: -14.001195907592773
    9. ' :]' → logprob: -14.126195907592773
    10. '`]' → logprob: -14.626195907592773

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326680779457092
    2. '=' → logprob: -0.7576680779457092
    3. '[' → logprob: -11.132668495178223
    4. ']' → logprob: -11.507668495178223
    5. ' +=' → logprob: -11.507668495178223
    6. '+=' → logprob: -11.507668495178223
    7. ']=' → logprob: -12.007668495178223
    8. ' ' → logprob: -12.507668495178223
    9. '[:]' → logprob: -12.507668495178223
    10. ',' → logprob: -12.632668495178223

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04463453218340874
    2. ' ' → logprob: -3.1696345806121826
    3. '0' → logprob: -6.6696343421936035
    4. '2' → logprob: -9.044634819030762
    5. 'np' → logprob: -9.169634819030762
    6. '100' → logprob: -10.919634819030762
    7. 'dp' → logprob: -10.982134819030762
    8. '10' → logprob: -11.107134819030762
    9. '3' → logprob: -11.169634819030762
    10. ' np' → logprob: -11.919634819030762

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007474825251847506
    2. '0' → logprob: -5.007474899291992
    3. '2' → logprob: -8.132474899291992
    4. 'np' → logprob: -8.757474899291992
    5. ' ' → logprob: -9.507474899291992
    6. '-' → logprob: -9.632474899291992
    7. '3' → logprob: -10.132474899291992
    8. '10' → logprob: -10.632474899291992
    9. '100' → logprob: -10.757474899291992
    10. '4' → logprob: -11.132474899291992

Token 82: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03029903955757618
    2. '<|end|>' → logprob: -4.030299186706543
    3. '[' → logprob: -5.280299186706543
    4. '#' → logprob: -6.155299186706543
    5. ')' → logprob: -6.280299186706543
    6. '<|end|>' → logprob: -7.155299186706543
    7. '*' → logprob: -7.655299186706543
    8. '\' → logprob: -8.155299186706543
    9. '```' → logprob: -8.155299186706543
    10. 'for' → logprob: -8.405299186706543

Token 84: ' copy' (ID: 5150)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.248098611831665
    2. ' initialize' → logprob: -1.623098611831665
    3. ' solve' → logprob: -2.123098611831665
    4. ' compute' → logprob: -2.248098611831665
    5. ' main' → logprob: -2.498098611831665
    6. ' generate' → logprob: -3.373098611831665
    7. ' ' → logprob: -3.623098611831665
    8. '_' → logprob: -3.873098611831665
    9. ' _' → logprob: -4.248098373413086
    10. ' process' → logprob: -4.498098373413086

Token 85: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.464297890663147
    2. '(dp' → logprob: -1.339297890663147
    3. '(' → logprob: -2.8392977714538574
    4. '_' → logprob: -3.2142977714538574
    5. ' (' → logprob: -4.964297771453857
    6. '_array' → logprob: -6.589297771453857
    7. '_(' → logprob: -7.589297771453857
    8. 'dp' → logprob: -7.714297771453857
    9. '_to' → logprob: -8.964298248291016
    10. ' ' → logprob: -9.214298248291016

Token 86: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.004513788968324661
    2. '(' → logprob: -5.879513740539551
    3. ' (' → logprob: -6.379513740539551
    4. '(old' → logprob: -12.62951374053955
    5. '(np' → logprob: -13.12951374053955
    6. '(prev' → logprob: -13.62951374053955
    7. '(def' → logprob: -14.37951374053955
    8. '(parent' → logprob: -14.75451374053955
    9. '(src' → logprob: -15.00451374053955
    10. '(lp' → logprob: -15.00451374053955

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023807650431990623
    2. ' ):' → logprob: -4.648807525634766
    3. '):
' → logprob: -4.773807525634766
    4. ')' → logprob: -5.898807525634766
    5. ',' → logprob: -6.023807525634766
    6. '):
' → logprob: -8.773807525634766
    7. ' )' → logprob: -9.773807525634766
    8. ' ):
' → logprob: -9.898807525634766
    9. ' ,' → logprob: -11.148807525634766
    10. 'dp' → logprob: -11.148807525634766

Token 88: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.34137335419654846
    2. '   ' → logprob: -1.466373324394226
    3. 'return' → logprob: -2.8413734436035156
    4. ' np' → logprob: -10.341373443603516
    5. ' dp' → logprob: -10.966373443603516
    6. 'def' → logprob: -11.591373443603516
    7. '	return' → logprob: -11.716373443603516
    8. '    ' → logprob: -11.966373443603516
    9. ':return' → logprob: -12.216373443603516
    10. '
' → logprob: -12.466373443603516

Token 89: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.42488715052604675
    2. 'return' (adapté à ' return') → logprob: -1.1748871803283691
    3. '   ' → logprob: -3.299887180328369
    4. ' dp' → logprob: -8.674886703491211
    5. 'dp' → logprob: -8.674886703491211
    6. 'import' → logprob: -10.799886703491211
    7. 'np' → logprob: -11.174886703491211
    8. ' np' → logprob: -11.299886703491211
    9. '    ' → logprob: -11.549886703491211
    10. 'def' → logprob: -12.049886703491211

Token 90: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4294915199279785
    2. ' dp' → logprob: -1.0544915199279785
    3. ' np' → logprob: -7.6794915199279785
    4. 'np' → logprob: -8.05449104309082
    5. '	dp' → logprob: -12.05449104309082
    6. ' ' → logprob: -12.92949104309082
    7. '(dp' → logprob: -13.55449104309082
    8. '_dp' → logprob: -14.92949104309082
    9. '.dp' → logprob: -15.92949104309082
    10. ' ' → logprob: -16.30449104309082

Token 91: '.copy' (ID: 22925)
  Prédit: '.copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.04886837676167488
    2. '.' → logprob: -3.048868417739868
    3. '[:]' → logprob: -8.798868179321289
    4. ' .' → logprob: -9.548868179321289
    5. '.deepcopy' → logprob: -11.298868179321289
    6. '.reshape' → logprob: -11.673868179321289
    7. '[' → logprob: -11.798868179321289
    8. '.Copy' → logprob: -12.048868179321289
    9. ' ' → logprob: -12.173868179321289
    10. 'copy' → logprob: -12.798868179321289

Token 92: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004646691959351301
    2. '(' → logprob: -5.3796467781066895
    3. ' ()' → logprob: -12.254646301269531
    4. '()

' → logprob: -12.629646301269531
    5. '()(' → logprob: -12.629646301269531
    6. '()
' → logprob: -12.754646301269531
    7. '()]' → logprob: -12.879646301269531
    8. '()`' → logprob: -13.004646301269531
    9. '`()' → logprob: -13.754646301269531
    10. '().' → logprob: -14.004646301269531

Token 93: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13678233325481415
    2. '<|end|>' → logprob: -2.26178240776062
    3. '<|end|>' → logprob: -4.261782169342041
    4. '
' → logprob: -5.136782169342041
    5. '[' → logprob: -6.886782169342041
    6. '

' → logprob: -7.011782169342041
    7. ' def' → logprob: -7.261782169342041
    8. '```' → logprob: -7.636782169342041
    9. '\' → logprob: -9.5117826461792
    10. ')' → logprob: -9.5117826461792

Token 94: ' compute' (ID: 23864)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -1.096090316772461
    2. ' update' → logprob: -1.721090316772461
    3. 'solve' → logprob: -2.096090316772461
    4. 'main' → logprob: -2.721090316772461
    5. ' main' → logprob: -2.971090316772461
    6. ' solve' → logprob: -3.221090316772461
    7. 'multiply' → logprob: -3.721090316772461
    8. 'add' → logprob: -3.971090316772461
    9. 'process' → logprob: -4.096090316772461
    10. 'combine' → logprob: -4.096090316772461

Token 95: '_nd' (ID: 104814)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0729372501373291
    2. '_next' → logprob: -2.947937250137329
    3. '_transition' → logprob: -5.94793701171875
    4. '_' → logprob: -5.94793701171875
    5. '_new' → logprob: -6.07293701171875
    6. '_sum' → logprob: -6.19793701171875
    7. '_step' → logprob: -6.69793701171875
    8. '_diff' → logprob: -7.19793701171875
    9. '_max' → logprob: -7.19793701171875
    10. '_coef' → logprob: -7.32293701171875

Token 96: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006330567877739668
    2. 'array' → logprob: -6.006330490112305
    3. 'ps' → logprob: -7.006330490112305
    4. 'ay' → logprob: -8.006330490112305
    5. '(p' → logprob: -8.131330490112305
    6. '(dp' → logprob: -8.381330490112305
    7. 'im' → logprob: -8.631330490112305
    8. 'iff' → logprob: -9.131330490112305
    9. '_p' → logprob: -9.443830490112305
    10. '(' → logprob: -9.568830490112305

Token 97: '(nd' (ID: 131841)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.16871947050094604
    2. '(n' → logprob: -1.9187195301055908
    3. '(' → logprob: -5.543719291687012
    4. '(prev' → logprob: -6.168719291687012
    5. ' (' → logprob: -6.918719291687012
    6. '(old' → logprob: -7.543719291687012
    7. '(current' → logprob: -7.793719291687012
    8. '(nd' → logprob: -8.668719291687012
    9. '(p' → logprob: -10.293719291687012
    10. '(s' → logprob: -10.293719291687012

Token 98: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.47626737493556e-05
    2. 'array' → logprob: -10.87503433227539
    3. ')' → logprob: -12.87503433227539
    4. '_p' → logprob: -13.25003433227539
    5. '(p' → logprob: -13.37503433227539
    6. ' p' → logprob: -13.37503433227539
    7. ')p' → logprob: -13.50003433227539
    8. '   ' → logprob: -13.75003433227539
    9. 'px' → logprob: -14.00003433227539
    10. '```' → logprob: -14.75003433227539

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037311585037969053
    2. ' ,' → logprob: -8.250372886657715
    3. ',n' → logprob: -9.250372886657715
    4. '):' → logprob: -12.500372886657715
    5. ',d' → logprob: -12.875372886657715
    6. ',p' → logprob: -13.000372886657715
    7. ',np' → logprob: -13.500372886657715
    8. ',
' → logprob: -14.625372886657715
    9. '_,' → logprob: -14.625372886657715
    10. '   ' → logprob: -14.750372886657715

Token 100: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.24949990212917328
    2. 'dp' → logprob: -1.7494999170303345
    3. ' coef' → logprob: -4.124499797821045
    4. ' n' → logprob: -5.124499797821045
    5. ' p' → logprob: -5.874499797821045
    6. 'coef' → logprob: -6.311999797821045
    7. ' c' → logprob: -6.311999797821045
    8. ' k' → logprob: -6.374499797821045
    9. 'p' → logprob: -6.624499797821045
    10. ' pd' → logprob: -6.749499797821045

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002742469310760498
    2. ' ,' → logprob: -6.377742290496826
    3. '):' → logprob: -7.252742290496826
    4. ',n' → logprob: -8.502742767333984
    5. '):
' → logprob: -9.877742767333984
    6. '   ' → logprob: -11.502742767333984
    7. ' ):' → logprob: -11.627742767333984
    8. '_,' → logprob: -12.127742767333984
    9. ',p' → logprob: -12.627742767333984
    10. ',d' → logprob: -12.627742767333984

Token 102: ' c' (ID: 274)
  Prédit: ' coef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coef' → logprob: -0.38003113865852356
    2. 'coef' → logprob: -2.255031108856201
    3. ' n' → logprob: -2.505031108856201
    4. ' a' → logprob: -3.755031108856201
    5. 'n' → logprob: -4.005031108856201
    6. ' i' → logprob: -4.380031108856201
    7. ' c' → logprob: -4.817531108856201
    8. 'a' → logprob: -4.942531108856201
    9. ' co' → logprob: -5.005031108856201
    10. ' x' → logprob: -5.255031108856201

Token 103: ',' (ID: 11)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.044295310974121
    2. '):' → logprob: -1.044295310974121
    3. '):
' → logprob: -1.544295310974121
    4. 'oe' → logprob: -3.294295310974121
    5. ',' → logprob: -4.044295310974121
    6. '):

' → logprob: -4.794295310974121
    7. 'of' → logprob: -5.169295310974121
    8. ')' → logprob: -5.294295310974121
    9. '   ' → logprob: -5.544295310974121
    10. 'on' → logprob: -7.044295310974121

Token 104: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9276114106178284
    2. ' i' → logprob: -1.9276113510131836
    3. 'n' → logprob: -2.0526113510131836
    4. 'i' → logprob: -2.4276113510131836
    5. ' idx' → logprob: -3.5526113510131836
    6. ' x' → logprob: -3.6776113510131836
    7. ' k' → logprob: -4.052611351013184
    8. 'k' → logprob: -4.552611351013184
    9. 'x' → logprob: -4.552611351013184
    10. ' a' → logprob: -4.552611351013184

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35266491770744324
    2. '):
' → logprob: -1.6026649475097656
    3. ',' → logprob: -2.3526649475097656
    4. ' ):' → logprob: -8.977664947509766
    5. 'p' → logprob: -9.352664947509766
    6. ' ,' → logprob: -9.477664947509766
    7. '   ' → logprob: -9.602664947509766
    8. '):
' → logprob: -9.977664947509766
    9. 'ext' → logprob: -10.102664947509766
    10. '):

' → logprob: -10.352664947509766

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014813347719609737
    2. ' for' → logprob: -4.264813423156738
    3. 'for' → logprob: -7.889813423156738
    4. ' nd' → logprob: -8.764813423156738
    5. '	for' → logprob: -10.014813423156738
    6. 'nd' → logprob: -10.139813423156738
    7. '```' → logprob: -11.264813423156738
    8. '    
' → logprob: -12.264813423156738
    9. '
' → logprob: -12.514813423156738
    10. ' ind' → logprob: -12.639813423156738

Token 107: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4656103849411011
    2. 'for' (adapté à ' for') → logprob: -1.340610384941101
    3. '   ' → logprob: -2.2156105041503906
    4. ' nd' → logprob: -6.965610504150391
    5. 'nd' → logprob: -7.965610504150391
    6. '
' → logprob: -9.96561050415039
    7. '	for' → logprob: -10.34061050415039
    8. ' ind' → logprob: -10.46561050415039
    9. ' range' → logprob: -11.46561050415039
    10. '```' → logprob: -11.46561050415039

Token 108: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.32478246092796326
    2. 'i' → logprob: -1.3247824907302856
    3. ' j' → logprob: -5.449782371520996
    4. ' k' → logprob: -5.949782371520996
    5. 'j' → logprob: -6.949782371520996
    6. 'k' → logprob: -6.949782371520996
    7. ' x' → logprob: -7.324782371520996
    8. ' ' → logprob: -8.074782371520996
    9. 'x' → logprob: -8.074782371520996
    10. ' c' → logprob: -8.324782371520996

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011452965438365936
    2. 'in' → logprob: -4.511453151702881
    3. ' ' → logprob: -8.011452674865723
    4. '   ' → logprob: -10.386452674865723
    5. '	in' → logprob: -11.511452674865723
    6. '  ' → logprob: -11.636452674865723
    7. 'range' → logprob: -12.511452674865723
    8. ',' → logprob: -12.511452674865723
    9. '1' → logprob: -13.011452674865723
    10. '0' → logprob: -13.136452674865723

Token 110: ' generate' (ID: 10419)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6326484084129333
    2. 'range' → logprob: -0.7576484084129333
    3. '(range' → logprob: -11.382648468017578
    4. '   ' → logprob: -11.632648468017578
    5. 'n' → logprob: -12.382648468017578
    6. '	range' → logprob: -12.507648468017578
    7. ' ' → logprob: -12.507648468017578
    8. 'np' → logprob: -12.632648468017578
    9. ' xrange' → logprob: -13.132648468017578
    10. 're' → logprob: -13.132648468017578

Token 111: '_range' (ID: 22022)
  Prédit: '_coef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_coef' → logprob: -1.652451464906335e-05
    2. 'coef' → logprob: -11.125016212463379
    3. '_co' → logprob: -15.000016212463379
    4. '_' → logprob: -15.250016212463379
    5. '_coeff' → logprob: -15.375016212463379
    6. ' coef' → logprob: -16.125017166137695
    7. '```' → logprob: -16.125017166137695
    8. '(' → logprob: -16.500017166137695
    9. ' ' → logprob: -16.500017166137695
    10. 'Coef' → logprob: -16.625017166137695

Token 112: '(c' (ID: 2410)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16541682183742523
    2. '(' → logprob: -1.9154168367385864
    3. '(c' → logprob: -5.290416717529297
    4. '(nd' → logprob: -10.665416717529297
    5. ' (' → logprob: -11.040416717529297
    6. '1' → logprob: -11.040416717529297
    7. '((' → logprob: -11.165416717529297
    8. 'n' → logprob: -11.665416717529297
    9. '(len' → logprob: -11.915416717529297
    10. 's' → logprob: -12.165416717529297

Token 113: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3400650024414062
    2. ',' → logprob: -1.7150650024414062
    3. ',n' → logprob: -1.8400650024414062
    4. '):' → logprob: -1.9650650024414062
    5. '):
' → logprob: -2.2150650024414062
    6. '(n' → logprob: -2.8400650024414062
    7. ' +' → logprob: -2.8400650024414062
    8. '(' → logprob: -4.715065002441406
    9. '   ' → logprob: -5.340065002441406
    10. '-' → logprob: -5.340065002441406

Token 114: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.025847921147942543
    2. ' n' → logprob: -3.775847911834717
    3. '0' → logprob: -7.025847911834717
    4. '1' → logprob: -7.775847911834717
    5. '   ' → logprob: -8.525848388671875
    6. 'np' → logprob: -8.525848388671875
    7. ')' → logprob: -8.650848388671875
    8. 'c' → logprob: -8.775848388671875
    9. 'min' → logprob: -9.025848388671875
    10. ' ' → logprob: -9.900848388671875

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1171942725777626
    2. '):
' → logprob: -2.242194175720215
    3. '-' → logprob: -5.992194175720215
    4. '+' → logprob: -7.742194175720215
    5. ' ):' → logprob: -7.867194175720215
    6. ' -' → logprob: -8.242194175720215
    7. '   ' → logprob: -8.367194175720215
    8. ')' → logprob: -8.992194175720215
    9. '():' → logprob: -9.242194175720215
    10. '):
' → logprob: -9.492194175720215

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010685560293495655
    2. '   ' → logprob: -6.010685443878174
    3. '+' → logprob: -6.135685443878174
    4. ':' → logprob: -6.760685443878174
    5. ' nd' → logprob: -7.135685443878174
    6. '    ' → logprob: -7.510685443878174
    7. '        
' → logprob: -7.510685443878174
    8. ' ' → logprob: -7.510685443878174
    9. '[' → logprob: -8.260685920715332
    10. ' +' → logprob: -8.385685920715332

Token 117: ' add' (ID: 1147)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.035112641751766205
    2. 'nd' → logprob: -3.5351126194000244
    3. '       ' → logprob: -5.2851128578186035
    4. '_nd' → logprob: -8.785112380981445
    5. '   ' → logprob: -10.285112380981445
    6. '(nd' → logprob: -10.535112380981445
    7. '           ' → logprob: -11.035112380981445
    8. '
' → logprob: -11.660112380981445
    9. ' if' → logprob: -12.035112380981445
    10. ' ind' → logprob: -12.035112380981445

Token 118: '_to' (ID: 5089)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.989866316318512
    2. '   ' → logprob: -1.6148662567138672
    3. '_nd' → logprob: -1.6148662567138672
    4. '(nd' → logprob: -2.364866256713867
    5. 'ed' → logprob: -3.239866256713867
    6. 'ress' → logprob: -3.864866256713867
    7. '=' → logprob: -4.114866256713867
    8. ' =' → logprob: -4.239866256713867
    9. ' ' → logprob: -4.489866256713867
    10. '       ' → logprob: -5.364866256713867

Token 119: '_nd' (ID: 104814)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.01595037616789341
    2. ' nd' → logprob: -4.6409502029418945
    3. 'nd' → logprob: -5.2659502029418945
    4. ' (' → logprob: -7.5159502029418945
    5. '_nd' → logprob: -9.015950202941895
    6. '[' → logprob: -9.390950202941895
    7. ' ' → logprob: -10.265950202941895
    8. '(dp' → logprob: -10.265950202941895
    9. '(' → logprob: -10.265950202941895
    10. '(n' → logprob: -10.640950202941895

Token 120: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.75
    3. '<p' → logprob: -17.25
    4. '```' → logprob: -17.5
    5. 'п' → logprob: -17.75
    6. ' p' → logprob: -18.0
    7. '	p' → logprob: -18.0
    8. '[p' → logprob: -18.125
    9. '(p' → logprob: -18.5
    10. '
' → logprob: -19.125

Token 121: '(nd' (ID: 131841)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20372988283634186
    2. '(nd' → logprob: -1.7037298679351807
    3. '[i' → logprob: -7.07873010635376
    4. '   ' → logprob: -7.07873010635376
    5. '       ' → logprob: -8.328729629516602
    6. '```' → logprob: -9.453729629516602
    7. ' [' → logprob: -9.703729629516602
    8. ' (' → logprob: -9.828729629516602
    9. '[ind' → logprob: -10.578729629516602
    10. ' ' → logprob: -10.953729629516602

Token 122: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.676981345459353e-06
    2. '[p' → logprob: -12.875005722045898
    3. '[' → logprob: -14.500005722045898
    4. '(p' → logprob: -14.750005722045898
    5. '   ' → logprob: -14.875005722045898
    6. '```' → logprob: -15.000005722045898
    7. '
' → logprob: -15.250005722045898
    8. '<p' → logprob: -15.250005722045898
    9. ' p' → logprob: -15.750005722045898
    10. '	p' → logprob: -15.875005722045898

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0071277194656431675
    2. ',i' → logprob: -5.63212776184082
    3. '[i' → logprob: -6.00712776184082
    4. ' ,' → logprob: -7.63212776184082
    5. '   ' → logprob: -8.13212776184082
    6. '[' → logprob: -8.88212776184082
    7. '       ' → logprob: -9.63212776184082
    8. ',n' → logprob: -11.13212776184082
    9. ',
' → logprob: -11.25712776184082
    10. '(i' → logprob: -11.88212776184082

Token 124: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.30920958518981934
    2. 'dp' → logprob: -1.6842095851898193
    3. ' i' → logprob: -3.1842095851898193
    4. 'i' → logprob: -3.3092095851898193
    5. '   ' → logprob: -7.059209823608398
    6. '    ' → logprob: -7.934209823608398
    7. '       ' → logprob: -8.309209823608398
    8. ' nd' → logprob: -8.559209823608398
    9. ' ' → logprob: -9.184209823608398
    10. '	dp' → logprob: -9.184209823608398

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6108828186988831
    2. '[i' → logprob: -0.8608828186988831
    3. ',i' → logprob: -3.7358827590942383
    4. '[' → logprob: -5.485882759094238
    5. ' ,' → logprob: -5.735882759094238
    6. '   ' → logprob: -6.485882759094238
    7. '       ' → logprob: -7.360882759094238
    8. ')' → logprob: -8.860882759094238
    9. 'i' → logprob: -9.110882759094238
    10. '-' → logprob: -9.235882759094238

Token 126: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28967294096946716
    2. ' i' → logprob: -1.4146729707717896
    3. 'c' → logprob: -5.2896728515625
    4. ' c' → logprob: -6.0396728515625
    5. '       ' → logprob: -8.2896728515625
    6. '   ' → logprob: -8.5396728515625
    7. '    ' → logprob: -8.7896728515625
    8. 'n' → logprob: -9.2896728515625
    9. ' ' → logprob: -9.2896728515625
    10. ')' → logprob: -9.4146728515625

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7960963845252991
    2. '-' → logprob: -1.2960963249206543
    3. ' -' → logprob: -1.6710963249206543
    4. '-c' → logprob: -3.5460963249206543
    5. ')' → logprob: -3.7960963249206543
    6. '   ' → logprob: -4.046096324920654
    7. ',c' → logprob: -4.171096324920654
    8. ' ,' → logprob: -6.421096324920654
    9. '-i' → logprob: -7.296096324920654
    10. '       ' → logprob: -8.296096801757812

Token 128: ' n' (ID: 297)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07507599890232086
    2. 'i' → logprob: -2.950076103210449
    3. ' c' → logprob: -4.200076103210449
    4. '   ' → logprob: -6.575076103210449
    5. ' i' → logprob: -6.700076103210449
    6. 'n' → logprob: -7.200076103210449
    7. '1' → logprob: -7.825076103210449
    8. ')' → logprob: -8.20007610321045
    9. ' ' → logprob: -8.82507610321045
    10. '  ' → logprob: -9.20007610321045

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5978288054466248
    2. '-' → logprob: -1.5978288650512695
    3. ' -' → logprob: -1.8478288650512695
    4. ',' → logprob: -2.7228288650512695
    5. '-c' → logprob: -4.4728288650512695
    6. '   ' → logprob: -5.5978288650512695
    7. ',c' → logprob: -5.5978288650512695
    8. '       ' → logprob: -6.2228288650512695
    9. ')
' → logprob: -6.2228288650512695
    10. ' )' → logprob: -8.09782886505127

Token 130: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15286791324615479
    2. '<|end|>' → logprob: -2.0278677940368652
    3. '
' → logprob: -5.902867794036865
    4. '   ' → logprob: -6.027867794036865
    5. '<|end|>' → logprob: -7.027867794036865
    6. ' def' → logprob: -7.027867794036865
    7. '    
' → logprob: -7.402867794036865
    8. ' 
' → logprob: -7.402867794036865
    9. ')' → logprob: -7.527867794036865
    10. '  
' → logprob: -7.777867794036865

Token 131: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17822420597076416
    2. '<|end|>' → logprob: -2.0532240867614746
    3. '
' → logprob: -3.9282240867614746
    4. '   ' → logprob: -5.303224086761475
    5. ' 
' → logprob: -6.553224086761475
    6. ' ' → logprob: -6.553224086761475
    7. ')' → logprob: -6.553224086761475
    8. '  
' → logprob: -6.678224086761475
    9. '<|end|>' → logprob: -6.928224086761475
    10. '\n' → logprob: -7.053224086761475

Token 132: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.1659443974494934
    2. 'None' → logprob: -2.5409443378448486
    3. 'nd' → logprob: -3.0409443378448486
    4. ' None' → logprob: -3.6659443378448486
    5. '(nd' → logprob: -8.16594409942627
    6. '<|end|>' → logprob: -9.54094409942627
    7. 'n' → logprob: -9.79094409942627
    8. 'def' → logprob: -9.91594409942627
    9. ' ' → logprob: -10.04094409942627
    10. ' 

' → logprob: -10.16594409942627

Token 133: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. 'п' → logprob: -16.375
    3. '[' → logprob: -16.625
    4. '```' → logprob: -16.75
    5. '_p' → logprob: -16.875
    6. '[p' → logprob: -17.25
    7. 'pdata' → logprob: -17.75
    8. '<p' → logprob: -18.0
    9. 'dp' → logprob: -18.125
    10. '	p' → logprob: -18.125

Token 134: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8557735085487366
    2. '[' → logprob: -1.3557734489440918
    3. '   ' → logprob: -2.105773448944092
    4. '<|end|>' → logprob: -2.105773448944092
    5. ':' → logprob: -3.730773448944092
    6. '[i' → logprob: -4.230773448944092
    7. ')' → logprob: -5.605773448944092
    8. '(' → logprob: -5.730773448944092
    9. '(n' → logprob: -5.730773448944092
    10. '[
' → logprob: -5.855773448944092

Token 136: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.009473086334764957
    2. ' generate' → logprob: -4.7594733238220215
    3. 'add' → logprob: -7.6344733238220215
    4. 'main' → logprob: -8.634472846984863
    5. 'copy' → logprob: -10.134472846984863
    6. 'update' → logprob: -10.259472846984863
    7. ' add' → logprob: -10.759472846984863
    8. 'compute' → logprob: -11.009472846984863
    9. ' main' → logprob: -11.134472846984863
    10. 'enerate' → logprob: -11.509472846984863

Token 137: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -3.869639476761222e-05
    2. 'range' → logprob: -11.125039100646973
    3. 'def' → logprob: -11.625039100646973
    4. '_ranges' → logprob: -12.000039100646973
    5. '_token' → logprob: -14.000039100646973
    6. '_code' → logprob: -14.250039100646973
    7. '_indices' → logprob: -14.250039100646973
    8. '_tokens' → logprob: -14.250039100646973
    9. '_index' → logprob: -14.500039100646973
    10. '_' → logprob: -14.625039100646973

Token 138: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0010398367885500193
    2. '(n' → logprob: -7.501039981842041
    3. '(' → logprob: -7.876039981842041
    4. '(start' → logprob: -9.376039505004883
    5. '(size' → logprob: -11.751039505004883
    6. ' (' → logprob: -12.501039505004883
    7. '(i' → logprob: -12.626039505004883
    8. '(length' → logprob: -12.626039505004883
    9. '(a' → logprob: -13.876039505004883
    10. '(len' → logprob: -14.626039505004883

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008046258008107543
    2. ',n' → logprob: -7.375804424285889
    3. ' ,' → logprob: -8.750804901123047
    4. ',c' → logprob: -11.000804901123047
    5. '(n' → logprob: -14.125804901123047
    6. ',
' → logprob: -14.750804901123047
    7. 'n' → logprob: -14.750804901123047
    8. 'def' → logprob: -15.500804901123047
    9. ',int' → logprob: -15.500804901123047
    10. ',size' → logprob: -15.875804901123047

Token 140: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07026206701993942
    2. ' n' → logprob: -2.6952619552612305
    3. 'c' → logprob: -8.32026195526123
    4. ' c' → logprob: -10.32026195526123
    5. '   ' → logprob: -11.07026195526123
    6. 'def' → logprob: -11.32026195526123
    7. ')' → logprob: -12.19526195526123
    8. ')n' → logprob: -13.32026195526123
    9. ' ' → logprob: -13.44526195526123
    10. ',' → logprob: -13.44526195526123

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0891103446483612
    2. '):
' → logprob: -2.4641103744506836
    3. '):
' → logprob: -8.839110374450684
    4. '   ' → logprob: -11.714110374450684
    5. ')' → logprob: -11.839110374450684
    6. ' ):' → logprob: -12.214110374450684
    7. ':' → logprob: -12.839110374450684
    8. '):

' → logprob: -13.839110374450684
    9. 'def' → logprob: -14.964110374450684
    10. ',' → logprob: -15.089110374450684

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00427938112989068
    2. 'return' → logprob: -5.879279613494873
    3. ' range' → logprob: -7.504279613494873
    4. ' return' → logprob: -7.629279613494873
    5. 'range' → logprob: -7.754279613494873
    6. 'np' → logprob: -12.629279136657715
    7. '```' → logprob: -13.379279136657715
    8. ' np' → logprob: -14.379279136657715
    9. '   ' → logprob: -14.629279136657715
    10. '	return' → logprob: -14.754279136657715

Token 143: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024441517889499664
    2. 'range' → logprob: -3.7744414806365967
    3. 'np' → logprob: -7.774441719055176
    4. '   ' → logprob: -7.774441719055176
    5. ' return' → logprob: -8.274441719055176
    6. 'if' → logprob: -9.774441719055176
    7. ' range' → logprob: -10.274441719055176
    8. 'def' → logprob: -12.899441719055176
    9. 'max' → logprob: -13.899441719055176
    10. 'for' → logprob: -14.399441719055176

Token 144: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014821809716522694
    2. ' range' → logprob: -4.389822006225586
    3. 'np' → logprob: -6.139822006225586
    4. ' np' → logprob: -9.264822006225586
    5. '(range' → logprob: -10.014822006225586
    6. 'c' → logprob: -12.764822006225586
    7. 'max' → logprob: -13.389822006225586
    8. 're' → logprob: -13.764822006225586
    9. '	range' → logprob: -13.827322006225586
    10. '   ' → logprob: -14.014822006225586

Token 145: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.1018645316362381
    2. '(' → logprob: -2.3518645763397217
    3. '(max' → logprob: -6.851864337921143
    4. '(n' → logprob: -7.976864337921143
    5. '((' → logprob: -9.2268648147583
    6. '(np' → logprob: -9.3518648147583
    7. '(min' → logprob: -10.4768648147583
    8. ' (' → logprob: -11.7268648147583
    9. '1' → logprob: -11.9768648147583
    10. '(-' → logprob: -12.2268648147583

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03043549880385399
    2. ' ,' → logprob: -4.280435562133789
    3. ',n' → logprob: -4.405435562133789
    4. '+' → logprob: -6.030435562133789
    5. ' +' → logprob: -6.530435562133789
    6. '+n' → logprob: -10.905435562133789
    7. '-' → logprob: -11.030435562133789
    8. ' -' → logprob: -11.280435562133789
    9. ')' → logprob: -12.530435562133789
    10. 'n' → logprob: -12.655435562133789

Token 147: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0430099181830883
    2. ' n' → logprob: -3.1680099964141846
    3. '   ' → logprob: -12.668009757995605
    4. ' ' → logprob: -12.918009757995605
    5. '(n' → logprob: -13.918009757995605
    6. '  ' → logprob: -14.043009757995605
    7. '_n' → logprob: -14.793009757995605
    8. '1' → logprob: -14.793009757995605
    9. '	n' → logprob: -14.793009757995605
    10. '    ' → logprob: -14.918009757995605

Token 148: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08327879011631012
    2. '+' → logprob: -2.5832788944244385
    3. ' +' → logprob: -6.333278656005859
    4. ' )' → logprob: -6.708278656005859
    5. '-n' → logprob: -7.708278656005859
    6. '-' → logprob: -7.833278656005859
    7. ' -' → logprob: -8.08327865600586
    8. ',' → logprob: -9.83327865600586
    9. '+n' → logprob: -10.08327865600586
    10. '+)' → logprob: -10.20827865600586

Token 149: ' c' (ID: 274)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002854328602552414
    2. ' ' → logprob: -5.877854347229004
    3. '2' → logprob: -10.377854347229004
    4. '   ' → logprob: -11.627854347229004
    5. '+' → logprob: -12.377854347229004
    6. ')' → logprob: -13.377854347229004
    7. 'c' → logprob: -13.627854347229004
    8. '  ' → logprob: -14.127854347229004
    9. ' -' → logprob: -15.002854347229004
    10. '-' → logprob: -15.252854347229004

Token 150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -14.500000953674316
    4. ')

' → logprob: -17.750001907348633
    5. ')#' → logprob: -17.750001907348633
    6. '))' → logprob: -17.875001907348633
    7. '),' → logprob: -18.875001907348633
    8. '())' → logprob: -19.625001907348633
    9. '+' → logprob: -19.750001907348633
    10. '')' → logprob: -19.750001907348633

Token 151: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009136591106653214
    2. '+' → logprob: -5.38413667678833
    3. '<|end|>' → logprob: -5.88413667678833
    4. '[' → logprob: -7.00913667678833
    5. ' def' → logprob: -8.009136199951172
    6. '_' → logprob: -9.259136199951172
    7. '   ' → logprob: -9.759136199951172
    8. ')' → logprob: -9.884136199951172
    9. '_add' → logprob: -10.009136199951172
    10. '[]' → logprob: -10.259136199951172

Token 152: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.06761019676923752
    2. ' add' → logprob: -2.817610263824463
    3. 'def' → logprob: -5.317610263824463
    4. ' def' → logprob: -8.817609786987305
    5. 'nd' → logprob: -9.192609786987305
    6. 'update' → logprob: -9.317609786987305
    7. 'increment' → logprob: -10.317609786987305
    8. 'n' → logprob: -10.567609786987305
    9. 'multiply' → logprob: -10.567609786987305
    10. 'generate' → logprob: -10.692609786987305

Token 153: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -13.750001907348633
    3. '##_' → logprob: -16.000001907348633
    4. '_t' → logprob: -16.125001907348633
    5. '(_' → logprob: -16.875001907348633
    6. ' _' → logprob: -17.500001907348633
    7. 'to' → logprob: -17.500001907348633
    8. 'To' → logprob: -18.000001907348633
    9. '_from' → logprob: -18.375001907348633
    10. '_token' → logprob: -18.375001907348633

Token 154: '_nd' (ID: 104814)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.4355195462703705
    2. '_nd' → logprob: -1.0605195760726929
    3. 'dp' → logprob: -5.185519695281982
    4. '(nd' → logprob: -7.060519695281982
    5. ' nd' → logprob: -8.935519218444824
    6. 'def' → logprob: -9.435519218444824
    7. '_dp' → logprob: -9.435519218444824
    8. '```' → logprob: -11.435519218444824
    9. 'n' → logprob: -11.685519218444824
    10. 'array' → logprob: -12.560519218444824

Token 155: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.319370302458992e-06
    2. 'dp' → logprob: -12.750005722045898
    3. '(dp' → logprob: -14.500005722045898
    4. 'п' → logprob: -15.000005722045898
    5. 'def' → logprob: -15.125005722045898
    6. '_dp' → logprob: -15.750005722045898
    7. '```' → logprob: -15.875005722045898
    8. 'P' → logprob: -16.3125057220459
    9. '_p' → logprob: -16.4375057220459
    10. '
' → logprob: -16.5000057220459

Token 156: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.002342588733881712
    2. '(' → logprob: -6.752342700958252
    3. ' (' → logprob: -6.752342700958252
    4. '(n' → logprob: -13.002342224121094
    5. '(np' → logprob: -14.127342224121094
    6. '(nn' → logprob: -15.127342224121094
    7. '(
' → logprob: -15.752342224121094
    8. '(nb' → logprob: -16.502342224121094
    9. '(ld' → logprob: -17.502342224121094
    10. '(nt' → logprob: -18.377342224121094

Token 157: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0206720617134124e-05
    2. 'dp' → logprob: -13.25001049041748
    3. '(dp' → logprob: -13.62501049041748
    4. '```' → logprob: -13.87501049041748
    5. 'P' → logprob: -14.12501049041748
    6. '(' → logprob: -14.37501049041748
    7. '_p' → logprob: -14.37501049041748
    8. '
' → logprob: -14.68751049041748
    9. ' p' → logprob: -14.81251049041748
    10. ')' → logprob: -14.93751049041748

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.492120155598968e-05
    2. ' ,' → logprob: -10.125064849853516
    3. '[' → logprob: -11.625064849853516
    4. ',n' → logprob: -12.750064849853516
    5. ',d' → logprob: -13.000064849853516
    6. ')' → logprob: -13.125064849853516
    7. ',[' → logprob: -13.375064849853516
    8. ',np' → logprob: -13.750064849853516
    9. '   ' → logprob: -14.000064849853516
    10. ',
' → logprob: -14.125064849853516

Token 159: ' dp' (ID: 21546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5259960293769836
    2. ' i' → logprob: -0.9009960293769836
    3. 'dp' → logprob: -6.275996208190918
    4. ' dp' → logprob: -7.650996208190918
    5. ' nd' → logprob: -8.775996208190918
    6. 'np' → logprob: -9.275996208190918
    7. ' np' → logprob: -9.275996208190918
    8. 'nd' → logprob: -10.025996208190918
    9. 'c' → logprob: -10.525996208190918
    10. ')' → logprob: -11.025996208190918

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003654978354461491
    2. ' ,' → logprob: -8.125365257263184
    3. ',i' → logprob: -10.000365257263184
    4. '[i' → logprob: -11.375365257263184
    5. '   ' → logprob: -11.750365257263184
    6. ',
' → logprob: -14.000365257263184
    7. '[' → logprob: -14.125365257263184
    8. '[],' → logprob: -14.625365257263184
    9. ',n' → logprob: -14.750365257263184
    10. 'def' → logprob: -15.000365257263184

Token 161: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02978578582406044
    2. ' i' → logprob: -3.5297858715057373
    3. ')' → logprob: -11.279786109924316
    4. '   ' → logprob: -11.654786109924316
    5. ' ' → logprob: -12.529786109924316
    6. '<|end|>' → logprob: -12.654786109924316
    7. '<|end|>' → logprob: -13.654786109924316
    8. '  ' → logprob: -13.654786109924316
    9. '    ' → logprob: -13.779786109924316
    10. '	i' → logprob: -13.904786109924316

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010278081754222512
    2. ' ,' → logprob: -7.001027584075928
    3. '-' → logprob: -10.126028060913086
    4. ',n' → logprob: -10.126028060913086
    5. '   ' → logprob: -11.001028060913086
    6. ' -' → logprob: -12.001028060913086
    7. ',i' → logprob: -12.751028060913086
    8. '+,' → logprob: -13.751028060913086
    9. '[],' → logprob: -13.876028060913086
    10. '```' → logprob: -14.251028060913086

Token 163: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3132692873477936
    2. 'n' → logprob: -1.3132692575454712
    3. ')' → logprob: -12.56326961517334
    4. '1' → logprob: -14.06326961517334
    5. ')n' → logprob: -14.06326961517334
    6. ' ' → logprob: -14.18826961517334
    7. '_n' → logprob: -14.68826961517334
    8. '	n' → logprob: -14.81326961517334
    9. 'i' → logprob: -14.93826961517334
    10. ' )' → logprob: -16.188268661499023

Token 164: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1800410896539688
    2. '):' → logprob: -1.8050410747528076
    3. '):
' → logprob: -8.555041313171387
    4. '   ' → logprob: -9.555041313171387
    5. ',' → logprob: -10.555041313171387
    6. '):

' → logprob: -12.555041313171387
    7. ' ):
' → logprob: -13.680041313171387
    8. ' ):' → logprob: -14.680041313171387
    9. ')' → logprob: -14.930041313171387
    10. ':' → logprob: -15.555041313171387

Token 165: '   ' (ID: 271)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.5278126001358032
    2. '   ' → logprob: -0.9028126001358032
    3. ' nd' → logprob: -5.652812480926514
    4. '_nd' → logprob: -7.152812480926514
    5. '       ' → logprob: -8.777812957763672
    6. '(nd' → logprob: -10.152812957763672
    7. '  ' → logprob: -10.402812957763672
    8. '   ' → logprob: -10.402812957763672
    9. '	' → logprob: -10.652812957763672
    10. '    
' → logprob: -10.902812957763672

Token 166: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.0011296173324808478
    2. 'if' → logprob: -7.501129627227783
    3. ' nd' → logprob: -8.251129150390625
    4. '   ' → logprob: -8.751129150390625
    5. 'for' → logprob: -8.876129150390625
    6. 'index' → logprob: -12.751129150390625
    7. ' ' → logprob: -13.376129150390625
    8. ' if' → logprob: -13.501129150390625
    9. 'j' → logprob: -13.751129150390625
    10. 'idx' → logprob: -13.751129150390625

Token 167: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.088346359931165e-07
    2. ' p' → logprob: -14.875000953674316
    3. '[p' → logprob: -15.250000953674316
    4. '[' → logprob: -15.750000953674316
    5. '
' → logprob: -16.875
    6. '```' → logprob: -16.875
    7. '	p' → logprob: -17.75
    8. 'п' → logprob: -17.75
    9. '   ' → logprob: -17.875
    10. '_p' → logprob: -18.0

Token 168: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.5014188799541444e-05
    2. '[' → logprob: -10.125044822692871
    3. '[:]' → logprob: -13.000044822692871
    4. '[:' → logprob: -14.750044822692871
    5. '[np' → logprob: -15.000044822692871
    6. ' [' → logprob: -15.000044822692871
    7. '   ' → logprob: -15.250044822692871
    8. 'i' → logprob: -15.375044822692871
    9. '[n' → logprob: -15.375044822692871
    10. ' +=' → logprob: -15.750044822692871

Token 169: ':]' (ID: 67377)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029845943208783865
    2. ']+=' → logprob: -5.877984523773193
    3. '-' → logprob: -9.002985000610352
    4. ' ]' → logprob: -10.377985000610352
    5. ']=' → logprob: -11.877985000610352
    6. '   ' → logprob: -12.252985000610352
    7. ':]' → logprob: -12.377985000610352
    8. ' -' → logprob: -12.752985000610352
    9. '[' → logprob: -13.252985000610352
    10. ']+' → logprob: -13.627985000610352

Token 170: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023529160767793655
    2. ' +=' → logprob: -3.773529052734375
    3. '=' → logprob: -9.148529052734375
    4. ']+=' → logprob: -9.148529052734375
    5. '+' → logprob: -9.898529052734375
    6. '   ' → logprob: -11.523529052734375
    7. ' ' → logprob: -12.648529052734375
    8. '[' → logprob: -12.898529052734375
    9. ' =' → logprob: -13.398529052734375
    10. '```' → logprob: -13.648529052734375

Token 171: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008636554703116417
    2. ' dp' → logprob: -4.758636474609375
    3. '   ' → logprob: -11.008636474609375
    4. '	dp' → logprob: -12.883636474609375
    5. 'np' → logprob: -13.383636474609375
    6. '(dp' → logprob: -14.508636474609375
    7. ' ' → logprob: -14.758636474609375
    8. '  ' → logprob: -15.508636474609375
    9. 'nd' → logprob: -16.633636474609375
    10. '_dp' → logprob: -16.883636474609375

Token 172: '[:' (ID: 7808)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5557307004928589
    2. '[:' → logprob: -1.4307307004928589
    3. '[:-' → logprob: -1.6807307004928589
    4. '[' → logprob: -7.430730819702148
    5. ':i' → logprob: -8.180730819702148
    6. '[(' → logprob: -9.805730819702148
    7. '(i' → logprob: -11.305730819702148
    8. 'i' → logprob: -11.555730819702148
    9. ':(' → logprob: -11.555730819702148
    10. ':' → logprob: -12.555730819702148

Token 173: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004377022560220212
    2. '(n' → logprob: -7.8754377365112305
    3. ' n' → logprob: -10.37543773651123
    4. 'i' → logprob: -10.75043773651123
    5. '   ' → logprob: -13.25043773651123
    6. 'len' → logprob: -14.00043773651123
    7. ':n' → logprob: -14.37543773651123
    8. '(' → logprob: -14.62543773651123
    9. '	n' → logprob: -14.75043773651123
    10. '-n' → logprob: -15.50043773651123

Token 174: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.05015071853995323
    2. ' -' → logprob: -3.0501506328582764
    3. '-' → logprob: -6.9251508712768555
    4. '[i' → logprob: -8.300150871276855
    5. '-n' → logprob: -8.675150871276855
    6. 'i' → logprob: -9.925150871276855
    7. '   ' → logprob: -10.050150871276855
    8. ':i' → logprob: -10.925150871276855
    9. '[:-' → logprob: -11.300150871276855
    10. '[' → logprob: -11.425150871276855

Token 175: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036171816755086184
    2. ' ]' → logprob: -5.628617286682129
    3. '   ' → logprob: -12.253617286682129
    4. ']
' → logprob: -12.503617286682129
    5. '])' → logprob: -12.503617286682129
    6. ' ' → logprob: -13.628617286682129
    7. ')]' → logprob: -14.378617286682129
    8. '`]' → logprob: -14.503617286682129
    9. ']

' → logprob: -15.003617286682129
    10. '_]' → logprob: -15.128617286682129

Token 176: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' mod' (ID: 1812)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0468294732272625
    2. ' def' → logprob: -3.5468294620513916
    3. 'def' → logprob: -4.921829700469971
    4. 'main' → logprob: -5.296829700469971
    5. ' generate' → logprob: -6.046829700469971
    6. ' solve' → logprob: -7.296829700469971
    7. ' run' → logprob: -7.671829700469971
    8. ' process' → logprob: -8.171829223632812
    9. ' ' → logprob: -8.921829223632812
    10. 'generate' → logprob: -9.046829223632812

Token 178: '_dp' (ID: 133252)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16255199909210205
    2. '_' → logprob: -2.7875518798828125
    3. '=' → logprob: -3.1625518798828125
    4. '_val' → logprob: -3.9125518798828125
    5. '_value' → logprob: -4.5375518798828125
    6. 'ulus' → logprob: -5.6625518798828125
    7. 'ulo' → logprob: -5.7875518798828125
    8. 'ular' → logprob: -6.2875518798828125
    9. ' ' → logprob: -6.6625518798828125
    10. '_mask' → logprob: -6.7875518798828125

Token 179: '(nd' (ID: 131841)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.10099198669195175
    2. '(' → logprob: -2.35099196434021
    3. '(nd' → logprob: -8.225992202758789
    4. '_(' → logprob: -9.225992202758789
    5. '(np' → logprob: -9.225992202758789
    6. '_' → logprob: -9.350992202758789
    7. '_dp' → logprob: -9.850992202758789
    8. '(n' → logprob: -9.975992202758789
    9. ' (' → logprob: -10.475992202758789
    10. '(_' → logprob: -10.475992202758789

Token 180: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.512236498361744e-07
    2. ' p' → logprob: -15.625000953674316
    3. '(dp' → logprob: -16.5
    4. 'dp' → logprob: -16.625
    5. '_p' → logprob: -16.625
    6. '(p' → logprob: -17.25
    7. 'def' → logprob: -17.625
    8. 'P' → logprob: -18.0
    9. ')' → logprob: -18.25
    10. 'п' → logprob: -18.75

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014764729887247086
    2. '):' → logprob: -4.264764785766602
    3. ' ,' → logprob: -7.764764785766602
    4. ')' → logprob: -9.389764785766602
    5. '):
' → logprob: -10.014764785766602
    6. ' ):' → logprob: -10.264764785766602
    7. ',n' → logprob: -11.639764785766602
    8. ',
' → logprob: -14.014764785766602
    9. ' )' → logprob: -14.514764785766602
    10. ' ' → logprob: -14.889764785766602

Token 182: ' m' (ID: 284)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7324687838554382
    2. ' ' → logprob: -1.982468843460083
    3. '10' → logprob: -1.982468843460083
    4. 'mod' → logprob: -1.982468843460083
    5. ' mod' → logprob: -4.107468605041504
    6. '1' → logprob: -4.107468605041504
    7. 'MOD' → logprob: -4.357468605041504
    8. 'm' → logprob: -4.857468605041504
    9. 'n' → logprob: -5.107468605041504
    10. 'np' → logprob: -5.232468605041504

Token 183: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0054752943105995655
    2. '):
' → logprob: -5.2554755210876465
    3. ',' → logprob: -8.755475044250488
    4. ')' → logprob: -9.755475044250488
    5. ' ):' → logprob: -11.130475044250488
    6. '):
' → logprob: -11.755475044250488
    7. ':' → logprob: -14.380475044250488
    8. '):

' → logprob: -14.505475044250488
    9. '[]):' → logprob: -15.005475044250488
    10. 'd' → logprob: -15.130475044250488

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4824587404727936
    2. 'nd' → logprob: -1.1074587106704712
    3. ' nd' → logprob: -3.2324588298797607
    4. 'np' → logprob: -4.607458591461182
    5. '```' → logprob: -6.857458591461182
    6. ' np' → logprob: -7.732458591461182
    7. ' for' → logprob: -7.982458591461182
    8. 'for' → logprob: -7.982458591461182
    9. 'return' → logprob: -8.85745906829834
    10. 'dp' → logprob: -8.98245906829834

Token 185: ' return' (ID: 622)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.15928803384304047
    2. 'np' → logprob: -2.034287929534912
    3. ' nd' → logprob: -4.284287929534912
    4. ' np' → logprob: -6.534287929534912
    5. '   ' → logprob: -7.159287929534912
    6. 'return' (adapté à ' return') → logprob: -8.28428840637207
    7. 'for' → logprob: -9.28428840637207
    8. ' return' → logprob: -10.53428840637207
    9. ' ' → logprob: -10.78428840637207
    10. '(nd' → logprob: -11.03428840637207

Token 186: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.5523037910461426
    2. 'nd' → logprob: -1.1773037910461426
    3. 'np' → logprob: -2.6773037910461426
    4. ' np' → logprob: -3.0523037910461426
    5. '(nd' → logprob: -8.427303314208984
    6. '_nd' → logprob: -11.552303314208984
    7. '(np' → logprob: -11.802303314208984
    8. 'mod' → logprob: -12.302303314208984
    9. 'n' → logprob: -12.552303314208984
    10. ' (' → logprob: -12.739803314208984

Token 187: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -17.625
    3. 'py' → logprob: -17.875
    4. '
' → logprob: -18.0
    5. '```' → logprob: -18.0
    6. 'dp' → logprob: -18.375
    7. 'array' → logprob: -18.375
    8. 'pm' → logprob: -18.5
    9. '[p' → logprob: -18.875
    10. '   ' → logprob: -18.875

Token 188: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.14301998913288116
    2. ' %' → logprob: -2.018019914627075
    3. '%i' → logprob: -9.143019676208496
    4. '%d' → logprob: -9.518019676208496
    5. '%n' → logprob: -9.768019676208496
    6. ' %=' → logprob: -10.768019676208496
    7. '%m' → logprob: -10.893019676208496
    8. '%c' → logprob: -11.143019676208496
    9. '%=' → logprob: -11.143019676208496
    10. 'mod' → logprob: -11.518019676208496

Token 189: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.8961017202818766e-05
    2. ' m' → logprob: -9.750059127807617
    3. '100' → logprob: -14.625059127807617
    4. '10' → logprob: -16.625059127807617
    5. ' ' → logprob: -17.250059127807617
    6. 'mod' → logprob: -17.250059127807617
    7. '1' → logprob: -18.000059127807617
    8. '	m' → logprob: -19.000059127807617
    9. '   ' → logprob: -19.250059127807617
    10. '0' → logprob: -19.250059127807617

Token 190: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39314353466033936
    2. '<|end|>' → logprob: -1.1431435346603394
    3. '<|end|>' → logprob: -5.768143653869629
    4. '```' → logprob: -6.768143653869629
    5. '
' → logprob: -7.018143653869629
    6. '#' → logprob: -7.518143653869629
    7. ')' → logprob: -8.518143653869629
    8. '[' → logprob: -9.518143653869629
    9. '\n' → logprob: -9.518143653869629
    10. '%' → logprob: -10.018143653869629

Token 191: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005723524838685989
    2. '<|end|>' → logprob: -5.630723476409912
    3. '```' → logprob: -7.005723476409912
    4. 'if' → logprob: -8.00572395324707
    5. 'n' → logprob: -8.25572395324707
    6. ')' → logprob: -8.38072395324707
    7. '#' → logprob: -8.63072395324707
    8. '<|end|>' → logprob: -9.88072395324707
    9. '
' → logprob: -10.75572395324707
    10. 'm' → logprob: -10.88072395324707

Token 192: ' final' (ID: 1721)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4771006405353546
    2. ' main' → logprob: -0.9771006107330322
    3. 'solve' → logprob: -6.602100849151611
    4. ' solve' → logprob: -6.977100849151611
    5. 'process' → logprob: -8.477100372314453
    6. 'update' → logprob: -9.227100372314453
    7. ' update' → logprob: -9.602100372314453
    8. ' process' → logprob: -9.727100372314453
    9. 'count' → logprob: -9.852100372314453
    10. 'multiply' → logprob: -10.227100372314453

Token 193: '_result' (ID: 11623)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.020753370597958565
    2. '_result' → logprob: -5.145753383636475
    3. 'def' → logprob: -5.395753383636475
    4. '_' → logprob: -5.520753383636475
    5. '_answer' → logprob: -5.520753383636475
    6. '_output' → logprob: -7.395753383636475
    7. 'ly' → logprob: -8.145752906799316
    8. '_value' → logprob: -8.395752906799316
    9. '_mod' → logprob: -8.395752906799316
    10. '_def' → logprob: -8.895752906799316

Token 194: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.002085308311507106
    2. '(' → logprob: -6.877085208892822
    3. '(n' → logprob: -7.752085208892822
    4. '():' → logprob: -8.50208568572998
    5. '(result' → logprob: -8.87708568572998
    6. ' (' → logprob: -9.00208568572998
    7. '(def' → logprob: -10.00208568572998
    8. '(m' → logprob: -10.37708568572998
    9. '(s' → logprob: -11.75208568572998
    10. '(nd' → logprob: -11.75208568572998

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4402158260345459
    2. '):' → logprob: -1.315215826034546
    3. '):
' → logprob: -2.440215826034546
    4. ' ):' → logprob: -8.815216064453125
    5. ')' → logprob: -9.065216064453125
    6. ',n' → logprob: -9.565216064453125
    7. ' ,' → logprob: -9.940216064453125
    8. '):
' → logprob: -9.940216064453125
    9. ' ):
' → logprob: -10.065216064453125
    10. ',m' → logprob: -10.315216064453125

Token 196: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7240915298461914
    2. ' m' → logprob: -1.4740915298461914
    3. ' n' → logprob: -1.8490915298461914
    4. 'n' → logprob: -2.0990915298461914
    5. 'k' → logprob: -6.474091529846191
    6. 'mod' → logprob: -6.724091529846191
    7. 'dp' → logprob: -6.974091529846191
    8. ' k' → logprob: -7.474091529846191
    9. ' dp' → logprob: -7.474091529846191
    10. ' mod' → logprob: -7.849091529846191

Token 197: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3725684583187103
    2. '):' → logprob: -1.2475684881210327
    3. ',' → logprob: -3.747568368911743
    4. ')' → logprob: -9.247568130493164
    5. '):
' → logprob: -9.372568130493164
    6. '   ' → logprob: -10.497568130493164
    7. '-' → logprob: -11.247568130493164
    8. ' ):' → logprob: -11.247568130493164
    9. ' ):
' → logprob: -11.747568130493164
    10. '):

' → logprob: -12.497568130493164

Token 198: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.32505691051483154
    2. ' m' → logprob: -1.3250569105148315
    3. 'k' → logprob: -5.075057029724121
    4. ' k' → logprob: -6.325057029724121
    5. 'c' → logprob: -7.200057029724121
    6. 'mod' → logprob: -7.450057029724121
    7. ' c' → logprob: -7.700057029724121
    8. ' mod' → logprob: -8.387557029724121
    9. 'x' → logprob: -8.637557029724121
    10. 'dp' → logprob: -8.700057029724121

Token 199: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1744353324174881
    2. '):
' → logprob: -1.9244353771209717
    3. ',' → logprob: -4.299435138702393
    4. ')' → logprob: -8.29943561553955
    5. '):
' → logprob: -8.92443561553955
    6. ' ):' → logprob: -9.17443561553955
    7. '   ' → logprob: -10.79943561553955
    8. ' ):
' → logprob: -11.29943561553955
    9. 'def' → logprob: -12.54943561553955
    10. ' ,' → logprob: -13.04943561553955

Token 200: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0383320115506649
    2. '   ' → logprob: -3.288331985473633
    3. ' return' → logprob: -8.163331985473633
    4. '```' → logprob: -12.913331985473633
    5. '	return' → logprob: -13.913331985473633
    6. '
' → logprob: -14.288331985473633
    7. 'def' → logprob: -14.413331985473633
    8. ':return' → logprob: -15.413331985473633
    9. '{return' → logprob: -15.538331985473633
    10. 'print' → logprob: -15.663331985473633

Token 201: ' arr' (ID: 1724)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0003541734768077731
    2. ' return' → logprob: -8.250353813171387
    3. 'result' → logprob: -10.250353813171387
    4. 'print' → logprob: -10.625353813171387
    5. '   ' → logprob: -11.250353813171387
    6. 'total' → logprob: -11.500353813171387
    7. 'def' → logprob: -12.500353813171387
    8. 'res' → logprob: -13.125353813171387
    9. 'for' → logprob: -13.875353813171387
    10. 'dp' → logprob: -14.000353813171387

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08491995930671692
    2. '=' → logprob: -3.3349199295043945
    3. 'ay' → logprob: -3.5849199295043945
    4. '_sum' → logprob: -4.7099199295043945
    5. '=np' → logprob: -5.3349199295043945
    6. 'ays' → logprob: -6.0849199295043945
    7. '   ' → logprob: -7.4599199295043945
    8. '_' → logprob: -7.7099199295043945
    9. ' ' → logprob: -9.084919929504395
    10. '[' → logprob: -9.334919929504395

Token 203: ' compute' (ID: 23864)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5474596619606018
    2. 'np' → logprob: -1.297459602355957
    3. 'mod' → logprob: -2.922459602355957
    4. '(dp' → logprob: -3.547459602355957
    5. ' np' → logprob: -4.172459602355957
    6. '(np' → logprob: -4.297459602355957
    7. ' dp' → logprob: -4.297459602355957
    8. '(mod' → logprob: -4.797459602355957
    9. '(' → logprob: -5.297459602355957
    10. ' (' → logprob: -5.797459602355957

Token 204: '_arr' (ID: 25121)
  Prédit: '_nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nd' → logprob: -0.18686078488826752
    2. '_dp' → logprob: -1.8118607997894287
    3. '_mod' → logprob: -6.31186056137085
    4. '_result' → logprob: -7.18686056137085
    5. '_sum' → logprob: -7.31186056137085
    6. '_final' → logprob: -7.56186056137085
    7. '_coef' → logprob: -7.93686056137085
    8. '_np' → logprob: -8.061861038208008
    9. '_' → logprob: -8.561861038208008
    10. '_range' → logprob: -8.811861038208008

Token 205: '(n' (ID: 2406)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.01101327408105135
    2. '(n' → logprob: -5.511013507843018
    3. '(dp' → logprob: -5.886013507843018
    4. 'ays' → logprob: -6.011013507843018
    5. '_dp' → logprob: -7.761013507843018
    6. '(np' → logprob: -8.13601303100586
    7. '_(' → logprob: -8.63601303100586
    8. '_result' → logprob: -8.63601303100586
    9. '_final' → logprob: -9.51101303100586
    10. '_sum' → logprob: -9.63601303100586

Token 206: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003424850758165121
    2. ')' → logprob: -6.003424644470215
    3. ' ,' → logprob: -7.628424644470215
    4. '-' → logprob: -8.503424644470215
    5. ',m' → logprob: -8.753424644470215
    6. ')
' → logprob: -10.628424644470215
    7. ',n' → logprob: -10.753424644470215
    8. ' -' → logprob: -11.253424644470215
    9. '+' → logprob: -11.753424644470215
    10. '   ' → logprob: -11.878424644470215

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6823954582214355
    2. 'def' → logprob: -0.8073954582214355
    3. 'arr' → logprob: -4.4323954582214355
    4. '
' → logprob: -4.5573954582214355
    5. ' def' → logprob: -5.1823954582214355
    6. '(' → logprob: -5.5573954582214355
    7. ',' → logprob: -5.6823954582214355
    8. '[' → logprob: -6.1823954582214355
    9. '(n' → logprob: -6.3073954582214355
    10. '```' → logprob: -6.3073954582214355

Token 208: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.43087777495384216
    2. ' return' → logprob: -1.5558778047561646
    3. 'result' → logprob: -2.930877685546875
    4. 'dp' → logprob: -3.430877685546875
    5. '   ' → logprob: -3.930877685546875
    6. ' result' → logprob: -4.555877685546875
    7. ' dp' → logprob: -4.930877685546875
    8. 'res' (adapté à ' res') → logprob: -4.930877685546875
    9. 'arr' → logprob: -5.680877685546875
    10. ' res' → logprob: -5.930877685546875

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06118575483560562
    2. '=' → logprob: -2.936185836791992
    3. 'ult' → logprob: -5.186185836791992
    4. '   ' → logprob: -7.936185836791992
    5. ' ' → logprob: -8.561185836791992
    6. 's' → logprob: -9.561185836791992
    7. 'ults' → logprob: -10.311185836791992
    8. '  ' → logprob: -11.936185836791992
    9. '=np' → logprob: -12.061185836791992
    10. ',' → logprob: -12.061185836791992

Token 210: ' (' (ID: 350)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.9122544527053833
    2. ' np' → logprob: -1.4122544527053833
    3. '(np' → logprob: -2.5372543334960938
    4. '(dp' → logprob: -2.5372543334960938
    5. 'dp' → logprob: -2.9122543334960938
    6. '0' → logprob: -3.0372543334960938
    7. ' (' → logprob: -3.4122543334960938
    8. ' dp' → logprob: -3.5372543334960938
    9. '(' → logprob: -4.787254333496094
    10. '(arr' → logprob: -5.162254333496094

Token 211: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.021963121369481087
    2. 'arr' → logprob: -5.021963119506836
    3. ' dp' → logprob: -5.021963119506836
    4. 'np' → logprob: -5.396963119506836
    5. '(dp' → logprob: -5.646963119506836
    6. '(arr' → logprob: -9.521963119506836
    7. '(' → logprob: -9.521963119506836
    8. ' (' → logprob: -9.646963119506836
    9. ' np' → logprob: -9.646963119506836
    10. ' arr' → logprob: -9.896963119506836

Token 212: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12593284249305725
    2. '*' → logprob: -2.5009329319000244
    3. '[arr' → logprob: -3.5009329319000244
    4. '[' → logprob: -6.000932693481445
    5. '[:' → logprob: -6.125932693481445
    6. '[-' → logprob: -7.625932693481445
    7. '**' → logprob: -7.875932693481445
    8. ' **' → logprob: -8.625932693481445
    9. ' @' → logprob: -9.125932693481445
    10. '@' → logprob: -9.875932693481445

Token 213: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.31335076689720154
    2. ' arr' → logprob: -1.313350796699524
    3. '(arr' → logprob: -10.063350677490234
    4. '	arr' → logprob: -11.313350677490234
    5. 'np' → logprob: -11.438350677490234
    6. ' np' → logprob: -11.938350677490234
    7. '   ' → logprob: -12.188350677490234
    8. '[arr' → logprob: -12.563350677490234
    9. ' ' → logprob: -13.188350677490234
    10. '_arr' → logprob: -13.313350677490234

Token 214: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017802569782361388
    2. ')%' → logprob: -6.751780033111572
    3. ').' → logprob: -7.751780033111572
    4. ' )' → logprob: -9.50178050994873
    5. '[:' → logprob: -9.50178050994873
    6. '[::-' → logprob: -10.75178050994873
    7. '%' → logprob: -12.62678050994873
    8. '[' → logprob: -12.87678050994873
    9. ')[' → logprob: -14.12678050994873
    10. '   ' → logprob: -14.25178050994873

Token 215: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7704242467880249
    2. ' %' → logprob: -1.145424246788025
    3. '.sum' → logprob: -1.520424246788025
    4. ')' → logprob: -9.020423889160156
    5. 'sum' → logprob: -9.145423889160156
    6. '.' → logprob: -10.020423889160156
    7. '
' → logprob: -10.395423889160156
    8. ' ' → logprob: -10.395423889160156
    9. ' .' → logprob: -10.520423889160156
    10. '.reshape' → logprob: -10.770423889160156

Token 216: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.061967913061380386
    2. ' m' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.311967849731445
    4. '   ' → logprob: -17.311967849731445
    5. '(m' → logprob: -17.686967849731445
    6. '  ' → logprob: -18.436967849731445
    7. 'mod' → logprob: -18.561967849731445
    8. '	m' → logprob: -18.686967849731445
    9. ' ' → logprob: -18.686967849731445
    10. '```' → logprob: -19.186967849731445

Token 217: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25607386231422424
    2. '   ' → logprob: -1.5060738325119019
    3. 'return' → logprob: -5.756073951721191
    4. ' return' → logprob: -7.506073951721191
    5. '
' → logprob: -8.881073951721191
    6. '    
' → logprob: -9.381073951721191
    7. '  
' → logprob: -9.756073951721191
    8. '<|end|>' → logprob: -10.631073951721191
    9. 'def' → logprob: -10.881073951721191
    10. '	return' → logprob: -10.881073951721191

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013048811815679073
    2. 'return' → logprob: -4.6380486488342285
    3. '
' → logprob: -5.8880486488342285
    4. '    
' → logprob: -8.638049125671387
    5. ' return' → logprob: -9.013049125671387
    6. '	return' → logprob: -10.013049125671387
    7. 'def' → logprob: -10.263049125671387
    8. '  
' → logprob: -10.513049125671387
    9. '```' → logprob: -10.888049125671387
    10. '[' → logprob: -11.013049125671387

Token 219: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004912092816084623
    2. ' return' → logprob: -5.37991189956665
    3. '
' → logprob: -8.629912376403809
    4. '   ' → logprob: -9.129912376403809
    5. '```' → logprob: -13.254912376403809
    6. 'print' → logprob: -14.129912376403809
    7. '	return' → logprob: -15.004912376403809
    8. ' ' → logprob: -15.004912376403809
    9. 'result' → logprob: -15.129912376403809
    10. 'def' → logprob: -15.379912376403809

Token 220: ' np' (ID: 5374)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.7695366740226746
    2. 'res' → logprob: -1.3945367336273193
    3. ' np' → logprob: -1.7695367336273193
    4. 'np' → logprob: -2.1445367336273193
    5. 'int' → logprob: -7.39453649520874
    6. ' int' → logprob: -7.51953649520874
    7. ' ' → logprob: -9.269536972045898
    8. '(res' → logprob: -11.519536972045898
    9. '(np' → logprob: -11.769536972045898
    10. ' ' → logprob: -11.894536972045898

Token 221: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.00045307583059184253
    2. '.array' → logprob: -8.750452995300293
    3. '.ndarray' → logprob: -9.250452995300293
    4. '.prod' → logprob: -9.375452995300293
    5. '.dot' → logprob: -9.750452995300293
    6. '.argmax' → logprob: -10.625452995300293
    7. '.asarray' → logprob: -11.875452995300293
    8. '.' → logprob: -12.000452995300293
    9. '.max' → logprob: -12.250452995300293
    10. '
' → logprob: -13.125452995300293

Token 222: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00014740281039848924
    2. ' (' → logprob: -9.125147819519043
    3. '(' → logprob: -10.250147819519043
    4. 'res' → logprob: -13.750147819519043
    5. '((' → logprob: -14.250147819519043
    6. '(arr' → logprob: -14.250147819519043
    7. '(np' → logprob: -14.750147819519043
    8. '(dp' → logprob: -15.500147819519043
    9. '(
' → logprob: -16.750146865844727
    10. ' res' → logprob: -17.375146865844727

Token 223: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003939728485420346
    2. ')%' → logprob: -8.125393867492676
    3. ' )' → logprob: -9.375393867492676
    4. '%' → logprob: -12.500393867492676
    5. '   ' → logprob: -13.000393867492676
    6. '[' → logprob: -13.375393867492676
    7. ',' → logprob: -14.250393867492676
    8. ' ' → logprob: -14.250393867492676
    9. ')`' → logprob: -14.250393867492676
    10. ')
' → logprob: -14.375393867492676

Token 224: ' %' (ID: 1851)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05211229994893074
    2. '<|end|>' → logprob: -3.177112340927124
    3. '(' → logprob: -5.677112102508545
    4. '()' → logprob: -6.302112102508545
    5. '```' → logprob: -7.177112102508545
    6. '[' → logprob: -7.302112102508545
    7. '
' → logprob: -7.552112102508545
    8. '%' → logprob: -7.927112102508545
    9. '(n' → logprob: -8.302112579345703
    10. '*' → logprob: -8.427112579345703

Token 225: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0031777136027812958
    2. ' m' → logprob: -5.753177642822266
    3. ' ' → logprob: -20.003177642822266
    4. '	m' → logprob: -21.753177642822266
    5. ' м' → logprob: -21.878177642822266
    6. 'mod' → logprob: -22.128177642822266
    7. '   ' → logprob: -22.253177642822266
    8. '```' → logprob: -22.878177642822266
    9. 'м' → logprob: -23.378177642822266
    10. ')m' → logprob: -23.878177642822266

Token 226: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7044690251350403
    2. '<|end|>' → logprob: -0.8294690251350403
    3. '
' → logprob: -2.7044689655303955
    4. '

' → logprob: -6.454469203948975
    5. '<|end|>' → logprob: -7.704469203948975
    6. '```' → logprob: -8.329468727111816
    7. '[' → logprob: -9.579468727111816
    8. '\' → logprob: -10.829468727111816
    9. '  
' → logprob: -10.954468727111816
    10. '\n' → logprob: -11.204468727111816

Token 227: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.85366350505501e-05
    2. 'import' → logprob: -9.37509822845459
    3. '
' → logprob: -11.87509822845459
    4. 'arr' → logprob: -12.87509822845459
    5. '```' → logprob: -13.25009822845459
    6. ' def' → logprob: -13.75009822845459
    7. 'ndef' → logprob: -14.37509822845459
    8. ':def' → logprob: -15.50009822845459
    9. 'n' → logprob: -16.375099182128906
    10. '    
' → logprob: -16.375099182128906

Token 228: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06787623465061188
    2. ' main' → logprob: -2.8178763389587402
    3. 'compute' → logprob: -5.56787633895874
    4. 'solve' → logprob: -6.81787633895874
    5. ' solve' → logprob: -8.317875862121582
    6. ' compute' → logprob: -8.567875862121582
    7. 'process' → logprob: -9.067875862121582
    8. 'read' → logprob: -9.067875862121582
    9. 'generate' → logprob: -9.192875862121582
    10. 'count' → logprob: -9.942875862121582

Token 229: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -6.754368223482743e-05
    2. '_array' → logprob: -10.250067710876465
    3. '_coef' → logprob: -11.250067710876465
    4. 'arr' → logprob: -11.375067710876465
    5. '_factor' → logprob: -12.500067710876465
    6. '_range' → logprob: -14.500067710876465
    7. '_coeff' → logprob: -14.500067710876465
    8. '_sum' → logprob: -14.750067710876465
    9. '_' → logprob: -14.750067710876465
    10. '_pow' → logprob: -15.250067710876465

Token 230: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.3902033970225602e-05
    2. ' (' → logprob: -11.625014305114746
    3. '(' → logprob: -12.500014305114746
    4. 'def' → logprob: -13.625014305114746
    5. '(N' → logprob: -18.50001335144043
    6. '```' → logprob: -18.87501335144043
    7. '(
' → logprob: -19.12501335144043
    8. 'n' → logprob: -19.37501335144043
    9. '(size' → logprob: -19.62501335144043
    10. '(def' → logprob: -20.12501335144043

Token 231: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.201559916138649
    2. '):' → logprob: -1.7015599012374878
    3. '):
' → logprob: -8.951560020446777
    4. ' ):
' → logprob: -12.076560020446777
    5. '):

' → logprob: -12.701560020446777
    6. '():
' → logprob: -12.826560020446777
    7. ' ):' → logprob: -12.826560020446777
    8. ')' → logprob: -13.451560020446777
    9. '   ' → logprob: -14.576560020446777
    10. ':' → logprob: -14.701560020446777

Token 232: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5452734231948853
    2. 'np' → logprob: -1.5452734231948853
    3. '   ' → logprob: -1.7952734231948853
    4. ' return' → logprob: -3.4202733039855957
    5. 'def' → logprob: -5.420273303985596
    6. ' np' → logprob: -6.795273303985596
    7. '=np' → logprob: -7.420273303985596
    8. '(np' → logprob: -7.670273303985596
    9. '):
' → logprob: -7.920273303985596
    10. 'import' → logprob: -7.920273303985596

Token 233: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.46751949191093445
    2. 'np' → logprob: -1.0925195217132568
    3. 'generate' → logprob: -3.467519521713257
    4. 'def' → logprob: -5.717519283294678
    5. '1' → logprob: -6.717519283294678
    6. 'import' → logprob: -6.967519283294678
    7. ' return' → logprob: -7.092519283294678
    8. ' np' → logprob: -8.717519760131836
    9. 'n' → logprob: -8.842519760131836
    10. '(' → logprob: -9.967519760131836

Token 234: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0030753985047340393
    2. ' np' → logprob: -6.50307559967041
    3. 'generate' → logprob: -6.62807559967041
    4. '(np' → logprob: -8.62807559967041
    5. '1' → logprob: -10.12807559967041
    6. '(' → logprob: -12.00307559967041
    7. 'initialize' → logprob: -12.00307559967041
    8. ' generate' → logprob: -12.25307559967041
    9. '(generate' → logprob: -12.62807559967041
    10. '2' → logprob: -13.00307559967041

Token 235: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -0.03097379393875599
    2. '.ones' → logprob: -3.7809739112854004
    3. '.minimum' → logprob: -5.5309739112854
    4. '.c' → logprob: -6.7809739112854
    5. 'ar' → logprob: -7.5309739112854
    6. '.array' → logprob: -7.7809739112854
    7. '.linspace' → logprob: -7.7809739112854
    8. '.full' → logprob: -8.280973434448242
    9. '.concatenate' → logprob: -8.405973434448242
    10. '.flip' → logprob: -9.155973434448242

Token 236: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4745529890060425
    2. '(' → logprob: -0.9745529890060425
    3. '1' → logprob: -7.974553108215332
    4. 'n' → logprob: -8.974553108215332
    5. ' (' → logprob: -13.474553108215332
    6. '(
' → logprob: -13.849553108215332
    7. '(start' → logprob: -13.849553108215332
    8. '(-' → logprob: -15.474553108215332
    9. '2' → logprob: -15.849553108215332
    10. 'start' → logprob: -15.974553108215332

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1675785630941391
    2. ')' → logprob: -1.9175785779953003
    3. ' ,' → logprob: -5.79257869720459
    4. '-' → logprob: -6.41757869720459
    5. '1' → logprob: -7.41757869720459
    6. ')[' → logprob: -7.54257869720459
    7. ' )' → logprob: -8.04257869720459
    8. '0' → logprob: -8.16757869720459
    9. ' -' → logprob: -8.41757869720459
    10. ',-' → logprob: -8.91757869720459

Token 238: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39543417096138
    2. '1' → logprob: -1.1454341411590576
    3. 'n' → logprob: -4.895434379577637
    4. '2' → logprob: -8.020434379577637
    5. ' ' → logprob: -8.020434379577637
    6. '-' → logprob: -8.395434379577637
    7. ',' → logprob: -10.020434379577637
    8. ' -' → logprob: -10.395434379577637
    9. ' n' → logprob: -10.520434379577637
    10. 'start' → logprob: -11.520434379577637

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02788390778005123
    2. '1' → logprob: -3.652884006500244
    3. 'n' → logprob: -6.652884006500244
    4. ' ' → logprob: -9.027883529663086
    5. '-' → logprob: -9.652883529663086
    6. 'start' → logprob: -10.277883529663086
    7. '2' → logprob: -10.777883529663086
    8. 'dtype' → logprob: -11.027883529663086
    9. ' n' → logprob: -12.027883529663086
    10. ')' → logprob: -12.152883529663086

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3869488537311554
    2. ',-' → logprob: -1.136948823928833
    3. ' ,' → logprob: -10.136948585510254
    4. ' ,-' → logprob: -10.636948585510254
    5. '0' → logprob: -11.386948585510254
    6. '   ' → logprob: -14.136948585510254
    7. '-' → logprob: -14.386948585510254
    8. ',
' → logprob: -14.511948585510254
    9. '```' → logprob: -15.761948585510254
    10. '  ' → logprob: -15.886948585510254

Token 241: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0036070786882191896
    2. ' -' → logprob: -5.628607273101807
    3. '-step' → logprob: -13.253606796264648
    4. ',-' → logprob: -13.253606796264648
    5. '  ' → logprob: -13.628606796264648
    6. '```' → logprob: -14.503606796264648
    7. '   ' → logprob: -14.628606796264648
    8. ' ' → logprob: -14.878606796264648
    9. '-python' → logprob: -15.628606796264648
    10. '0' → logprob: -15.628606796264648

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. '-' → logprob: -12.375004768371582
    3. ' ' → logprob: -15.625004768371582
    4. '<|end|>' → logprob: -15.625004768371582
    5. ' -' → logprob: -16.0000057220459
    6. ')' → logprob: -17.0000057220459
    7. '```' → logprob: -17.3750057220459
    8. ',' → logprob: -18.7500057220459
    9. '2' → logprob: -19.0625057220459
    10. 'def' → logprob: -19.5625057220459

Token 243: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. ' )' → logprob: -12.00001049041748
    3. ')
' → logprob: -13.00001049041748
    4. ',' → logprob: -13.50001049041748
    5. ')}' → logprob: -16.000011444091797
    6. ',)' → logprob: -16.000011444091797
    7. '))' → logprob: -16.125011444091797
    8. ')#' → logprob: -16.125011444091797
    9. '),' → logprob: -16.250011444091797
    10. '   ' → logprob: -16.500011444091797

Token 244: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1459484100341797
    2. 'main' → logprob: -2.1459484100341797
    3. '__' → logprob: -4.77094841003418
    4. 'if' → logprob: -5.52094841003418
    5. ' __' → logprob: -6.02094841003418
    6. ' if' → logprob: -7.02094841003418
    7. ' solve' → logprob: -7.02094841003418
    8. ' generate' → logprob: -7.77094841003418
    9. ' ' → logprob: -8.02094841003418
    10. 'generate' → logprob: -8.27094841003418

Token 246: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00012047011114191264
    2. '():
' → logprob: -9.375120162963867
    3. ' ():' → logprob: -10.375120162963867
    4. '()' → logprob: -12.500120162963867
    5. '(' → logprob: -15.000120162963867
    6. '():
' → logprob: -15.250120162963867
    7. '():

' → logprob: -16.750120162963867
    8. '()>' → logprob: -17.125120162963867
    9. '_' → logprob: -17.375120162963867
    10. ':' → logprob: -17.625120162963867

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18114864826202393
    2. ' n' → logprob: -2.4311485290527344
    3. 'n' → logprob: -2.5561485290527344
    4. '(n' → logprob: -9.431148529052734
    5. '	n' → logprob: -10.306148529052734
    6. '```' → logprob: -11.931148529052734
    7. 'def' → logprob: -12.181148529052734
    8. '()' → logprob: -12.306148529052734
    9. '    
' → logprob: -12.431148529052734
    10. '
' → logprob: -13.056148529052734

Token 248: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.1549718976020813
    2. ' n' → logprob: -2.0299718379974365
    3. '   ' → logprob: -4.404972076416016
    4. 'import' → logprob: -13.154972076416016
    5. '	n' → logprob: -13.779972076416016
    6. ' ' → logprob: -14.529972076416016
    7. '```' → logprob: -14.654972076416016
    8. '  ' → logprob: -15.279972076416016
    9. '
' → logprob: -15.279972076416016
    10. '    
' → logprob: -15.654972076416016

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33851659297943115
    2. ' =' → logprob: -1.3385165929794312
    3. '=' → logprob: -3.7135167121887207
    4. ',m' → logprob: -7.838516712188721
    5. ' ,' → logprob: -9.338516235351562
    6. 'm' → logprob: -10.213516235351562
    7. '=int' → logprob: -11.838516235351562
    8. '   ' → logprob: -12.213516235351562
    9. ' m' → logprob: -12.713516235351562
    10. ' ' → logprob: -12.963516235351562

Token 250: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.25199347734451294
    2. 'm' → logprob: -1.5019934177398682
    3. ' ' → logprob: -9.751993179321289
    4. '    ' → logprob: -13.126993179321289
    5. ',' → logprob: -14.376993179321289
    6. ' n' → logprob: -14.376993179321289
    7. '  ' → logprob: -14.626993179321289
    8. ' =' → logprob: -14.626993179321289
    9. ' 
' → logprob: -15.001993179321289
    10. '_m' → logprob: -15.126993179321289

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022564470767975
    2. '=' → logprob: -1.9102256298065186
    3. ',' → logprob: -13.660225868225098
    4. '=input' → logprob: -15.910225868225098
    5. ' ' → logprob: -16.78522491455078
    6. ')' → logprob: -16.91022491455078
    7. '   ' → logprob: -17.66022491455078
    8. '＝' → logprob: -17.78522491455078
    9. '=int' → logprob: -17.91022491455078
    10. ' =)' → logprob: -18.03522491455078

Token 252: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.2536713778972626
    2. 'read' → logprob: -1.503671407699585
    3. ' map' → logprob: -6.503671169281006
    4. 'map' → logprob: -8.503671646118164
    5. ' tuple' → logprob: -10.878671646118164
    6. '   ' → logprob: -11.753671646118164
    7. ' ' → logprob: -12.378671646118164
    8. 'tuple' → logprob: -12.753671646118164
    9. '	read' → logprob: -13.003671646118164
    10. '  ' → logprob: -13.378671646118164

Token 253: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0033040239941328764
    2. '_input' → logprob: -6.1283040046691895
    3. '(' → logprob: -7.8783040046691895
    4. 'input' → logprob: -8.253304481506348
    5. '()
' → logprob: -8.628304481506348
    6. '_' → logprob: -9.628304481506348
    7. ' ()' → logprob: -9.753304481506348
    8. '())' → logprob: -10.253304481506348
    9. '()]' → logprob: -10.878304481506348
    10. '().' → logprob: -11.003304481506348

Token 254: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31419429183006287
    2. '()
' → logprob: -1.3141943216323853
    3. '   ' → logprob: -7.939194202423096
    4. '
' → logprob: -8.564194679260254
    5. '()\' → logprob: -8.939194679260254
    6. '```' → logprob: -9.564194679260254
    7. '()

' → logprob: -10.314194679260254
    8. '<|end|>' → logprob: -10.689194679260254
    9. '();' → logprob: -10.814194679260254
    10. '()
' → logprob: -10.939194679260254

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06171241030097008
    2. '
' → logprob: -3.0617125034332275
    3. '<|end|>' → logprob: -5.186712265014648
    4. '    
' → logprob: -5.561712265014648
    5. 'dp' → logprob: -6.436712265014648
    6. '```' → logprob: -7.811712265014648
    7. 'n' → logprob: -7.936712265014648
    8. '<|end|>' → logprob: -8.186712265014648
    9. '(dp' → logprob: -8.561712265014648
    10. 'def' → logprob: -8.936712265014648

Token 256: ' coef' (ID: 107584)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5770763158798218
    2. ' dp' → logprob: -0.9520763158798218
    3. '   ' → logprob: -2.9520764350891113
    4. '	dp' → logprob: -9.077075958251953
    5. '```' → logprob: -9.327075958251953
    6. '
' → logprob: -10.702075958251953
    7. ' ' → logprob: -11.077075958251953
    8. '    
' → logprob: -11.452075958251953
    9. '  ' → logprob: -11.952075958251953
    10. '    ' → logprob: -12.077075958251953

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059622181579470634
    2. '=' → logprob: -5.130962371826172
    3. 's' → logprob: -11.005962371826172
    4. ',' → logprob: -11.130962371826172
    5. ' ' → logprob: -14.005962371826172
    6. '(' → logprob: -14.380962371826172
    7. ')' → logprob: -14.755962371826172
    8. '(n' → logprob: -15.380962371826172
    9. '   ' → logprob: -15.630962371826172
    10. ' ,' → logprob: -16.005962371826172

Token 258: ' generate' (ID: 10419)
  Prédit: ' generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.16025236248970032
    2. 'generate' → logprob: -1.910252332687378
    3. '(generate' → logprob: -11.035252571105957
    4. ' np' → logprob: -12.160252571105957
    5. ' ' → logprob: -13.285252571105957
    6. 'enerate' → logprob: -13.535252571105957
    7. 'np' → logprob: -13.660252571105957
    8. '   ' → logprob: -14.160252571105957
    9. ' compute' → logprob: -14.910252571105957
    10. ' initialize' → logprob: -15.035252571105957

Token 259: '_coef' (ID: 162984)
  Prédit: '_coef'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coef' → logprob: -3.976922744186595e-05
    2. '_coeff' → logprob: -11.250040054321289
    3. '_co' → logprob: -11.750040054321289
    4. '_' → logprob: -12.000040054321289
    5. 'coef' → logprob: -12.000040054321289
    6. '(n' → logprob: -12.750040054321289
    7. '```' → logprob: -13.750040054321289
    8. '(' → logprob: -14.625040054321289
    9. ' _' → logprob: -15.125040054321289
    10. '(_' → logprob: -15.375040054321289

Token 260: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.676981345459353e-06
    2. ' (' → logprob: -12.375005722045898
    3. '(' → logprob: -13.500005722045898
    4. 'n' → logprob: -17.8750057220459
    5. ')(' → logprob: -18.7500057220459
    6. '(len' → logprob: -18.8750057220459
    7. ',' → logprob: -19.1250057220459
    8. '(m' → logprob: -19.5000057220459
    9. '```' → logprob: -19.5000057220459
    10. '<n' → logprob: -19.6250057220459

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007437567692250013
    2. ')
' → logprob: -7.250743865966797
    3. '(n' → logprob: -11.250743865966797
    4. '   ' → logprob: -11.750743865966797
    5. '()' → logprob: -12.750743865966797
    6. '())' → logprob: -12.875743865966797
    7. ')

' → logprob: -13.125743865966797
    8. ' )' → logprob: -13.375743865966797
    9. ')
' → logprob: -13.500743865966797
    10. '(' → logprob: -14.000743865966797

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07139752060174942
    2. '
' → logprob: -3.196397542953491
    3. ' dp' → logprob: -4.946397304534912
    4. 'dp' → logprob: -5.071397304534912
    5. '<|end|>' → logprob: -5.071397304534912
    6. '    
' → logprob: -5.321397304534912
    7. '	dp' → logprob: -6.571397304534912
    8. '(dp' → logprob: -7.696397304534912
    9. '  
' → logprob: -8.19639778137207
    10. ' 
' → logprob: -8.57139778137207

Token 263: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00014287306112237275
    2. ' dp' → logprob: -9.500143051147461
    3. '   ' → logprob: -9.625143051147461
    4. '```' → logprob: -13.500143051147461
    5. '	dp' → logprob: -14.750143051147461
    6. '
' → logprob: -17.25014305114746
    7. ' ' → logprob: -17.37514305114746
    8. '_dp' → logprob: -17.37514305114746
    9. '(dp' → logprob: -18.00014305114746
    10. '    
' → logprob: -18.00014305114746

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324594371020794
    2. '=' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.148245811462402
    4. '[' → logprob: -16.39824676513672
    5. ',' → logprob: -16.89824676513672
    6. '   ' → logprob: -17.64824676513672
    7. '=np' → logprob: -18.64824676513672
    8. '＝' → logprob: -18.64824676513672
    9. ' ' → logprob: -18.77324676513672
    10. ' =
' → logprob: -19.14824676513672

Token 265: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.011193300597369671
    2. ' initialize' → logprob: -4.51119327545166
    3. 'np' → logprob: -9.01119327545166
    4. ' np' → logprob: -11.13619327545166
    5. '   ' → logprob: -13.01119327545166
    6. 'initial' → logprob: -13.13619327545166
    7. 'coef' → logprob: -13.51119327545166
    8. '	initialize' → logprob: -13.76119327545166
    9. ' ' → logprob: -14.51119327545166
    10. 'init' → logprob: -15.01119327545166

Token 266: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.007619291078299284
    2. 'dp' → logprob: -4.882619380950928
    3. '(dp' → logprob: -12.13261890411377
    4. '(' → logprob: -13.25761890411377
    5. 'DP' → logprob: -13.25761890411377
    6. '```' → logprob: -13.25761890411377
    7. '(n' → logprob: -14.25761890411377
    8. ' dp' → logprob: -14.75761890411377
    9. '	dp' → logprob: -14.88261890411377
    10. '_df' → logprob: -16.007619857788086

Token 267: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.6537622034084052e-05
    2. ' (' → logprob: -10.75002670288086
    3. '(' → logprob: -12.25002670288086
    4. 'n' → logprob: -15.87502670288086
    5. '
' → logprob: -17.50002670288086
    6. 'def' → logprob: -17.87502670288086
    7. '(
' → logprob: -18.25002670288086
    8. '```' → logprob: -18.25002670288086
    9. ' n' → logprob: -18.87502670288086
    10. ' ' → logprob: -19.00002670288086

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31360307335853577
    2. ')
' → logprob: -1.3136030435562134
    3. ')

' → logprob: -8.188603401184082
    4. ')
' → logprob: -10.063603401184082
    5. '   ' → logprob: -11.063603401184082
    6. ' )' → logprob: -13.438603401184082
    7. ' )
' → logprob: -13.813603401184082
    8. '()' → logprob: -14.438603401184082
    9. '
' → logprob: -15.313603401184082
    10. '())
' → logprob: -15.313603401184082

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0760684534907341
    2. '
' → logprob: -3.07606840133667
    3. ' for' → logprob: -4.20106840133667
    4. '```' → logprob: -5.32606840133667
    5. '    
' → logprob: -5.70106840133667
    6. 'for' → logprob: -5.95106840133667
    7. '<|end|>' → logprob: -7.82606840133667
    8. ' while' → logprob: -8.326068878173828
    9. '  
' → logprob: -9.201068878173828
    10. 'nd' → logprob: -9.451068878173828

Token 270: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01212473027408123
    2. ' for' → logprob: -4.887124538421631
    3. '   ' → logprob: -6.137124538421631
    4. 'dp' → logprob: -6.262124538421631
    5. 'nd' → logprob: -7.887124538421631
    6. 'while' → logprob: -10.512125015258789
    7. '```' → logprob: -11.137125015258789
    8. 'c' → logprob: -11.637125015258789
    9. 'coef' → logprob: -12.637125015258789
    10. ' nd' → logprob: -13.137125015258789

Token 271: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.09924263507127762
    2. ' _' → logprob: -2.724242687225342
    3. ' i' → logprob: -4.099242687225342
    4. '_' → logprob: -4.724242687225342
    5. ' ' → logprob: -6.724242687225342
    6. 'c' → logprob: -6.849242687225342
    7. ' coef' → logprob: -7.349242687225342
    8. 'i' → logprob: -9.099242210388184
    9. '_i' → logprob: -10.036742210388184
    10. '   ' → logprob: -10.161742210388184

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0033004588913172483
    2. 'in' → logprob: -5.753300666809082
    3. ' ' → logprob: -9.128300666809082
    4. '   ' → logprob: -12.878300666809082
    5. 'n' → logprob: -13.003300666809082
    6. 'space' → logprob: -13.253300666809082
    7. 's' → logprob: -13.878300666809082
    8. 'range' → logprob: -14.003300666809082
    9. '  ' → logprob: -14.128300666809082
    10. 'c' → logprob: -14.128300666809082

Token 273: ' coef' (ID: 107584)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.15584056079387665
    2. 'range' → logprob: -2.6558406352996826
    3. ' generate' → logprob: -2.9058406352996826
    4. 'generate' → logprob: -4.0308403968811035
    5. ' coef' → logprob: -7.5308403968811035
    6. 'coef' → logprob: -7.6558403968811035
    7. ' np' → logprob: -8.530840873718262
    8. 'np' → logprob: -9.155840873718262
    9. ' ' → logprob: -9.530840873718262
    10. '(generate' → logprob: -10.405840873718262

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028129592537879944
    2. ':
' → logprob: -5.87781286239624
    3. ' :' → logprob: -12.002813339233398
    4. '   ' → logprob: -14.627813339233398
    5. '):' → logprob: -15.002813339233398
    6. ':
' → logprob: -15.127813339233398
    7. ':

' → logprob: -15.752813339233398
    8. '):
' → logprob: -15.752813339233398
    9. '=' → logprob: -15.877813339233398
    10. '[' → logprob: -15.877813339233398

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024765800684690475
    2. '        
' → logprob: -4.649765968322754
    3. '
' → logprob: -5.899765968322754
    4. ' nd' → logprob: -6.024765968322754
    5. '<|end|>' → logprob: -6.274765968322754
    6. ' 
' → logprob: -6.774765968322754
    7. '   ' → logprob: -7.024765968322754
    8. ' dp' → logprob: -7.149765968322754
    9. '[' → logprob: -7.274765968322754
    10. 'dp' → logprob: -7.274765968322754

Token 276: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.02509451098740101
    2. 'nd' (adapté à ' nd') → logprob: -3.775094509124756
    3. '       ' → logprob: -6.400094509124756
    4. '   ' → logprob: -9.275094985961914
    5. ' dp' → logprob: -10.150094985961914
    6. 'dp' → logprob: -11.525094985961914
    7. '           ' → logprob: -11.525094985961914
    8. 'n' → logprob: -12.275094985961914
    9. '_nd' → logprob: -12.400094985961914
    10. '    ' → logprob: -12.400094985961914

Token 277: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. ' p' → logprob: -16.625
    3. 'п' → logprob: -16.875
    4. '=' → logprob: -17.75
    5. ' =' → logprob: -18.125
    6. '_p' → logprob: -18.625
    7. '	p' → logprob: -18.875
    8. 'dp' → logprob: -18.875
    9. '   ' → logprob: -19.125
    10. 'پ' → logprob: -20.5

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890080660581589
    2. '=' → logprob: -2.5789008140563965
    3. ',' → logprob: -11.453900337219238
    4. ' ,' → logprob: -16.453901290893555
    5. '＝' → logprob: -16.578901290893555
    6. ' ' → logprob: -16.703901290893555
    7. '  ' → logprob: -17.328901290893555
    8. ' ' → logprob: -17.578901290893555
    9. '=np' → logprob: -17.578901290893555
    10. '   ' → logprob: -17.703901290893555

Token 279: ' copy' (ID: 5150)
  Prédit: ' copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' copy' → logprob: -0.647106945514679
    2. ' np' → logprob: -1.2721068859100342
    3. 'np' → logprob: -2.272106885910034
    4. 'copy' → logprob: -2.522106885910034
    5. ' initialize' → logprob: -4.647107124328613
    6. 'initialize' → logprob: -5.897107124328613
    7. 'dp' → logprob: -8.522107124328613
    8. ' dp' → logprob: -8.772107124328613
    9. ' ' → logprob: -10.772107124328613
    10. '.copy' → logprob: -11.147107124328613

Token 280: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0005276533775031567
    2. '(dp' → logprob: -7.750527858734131
    3. 'dp' → logprob: -9.250527381896973
    4. '	dp' → logprob: -14.875527381896973
    5. '```' → logprob: -15.875527381896973
    6. '(' → logprob: -16.62552833557129
    7. ' dp' → logprob: -17.25052833557129
    8. '_df' → logprob: -17.37552833557129
    9. 'DP' → logprob: -17.50052833557129
    10. '_lp' → logprob: -17.50052833557129

Token 281: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.3199920178740285e-05
    2. 'dp' → logprob: -10.750022888183594
    3. '	dp' → logprob: -14.375022888183594
    4. '(' → logprob: -14.625022888183594
    5. ' (' → logprob: -15.125022888183594
    6. ' dp' → logprob: -15.500022888183594
    7. '(
' → logprob: -17.250022888183594
    8. '   ' → logprob: -17.375022888183594
    9. '_dp' → logprob: -17.375022888183594
    10. '```' → logprob: -17.875022888183594

Token 282: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.012886187992990017
    2. '       ' → logprob: -5.012886047363281
    3. ')' → logprob: -5.262886047363281
    4. '()
' → logprob: -7.262886047363281
    5. ')
' → logprob: -8.512886047363281
    6. '())
' → logprob: -10.262886047363281
    7. '()' → logprob: -10.512886047363281
    8. ' )
' → logprob: -13.012886047363281
    9. '   ' → logprob: -13.512886047363281
    10. '
' → logprob: -14.262886047363281

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1555129587650299
    2. '
' → logprob: -2.155513048171997
    3. '        
' → logprob: -4.780512809753418
    4. '  
' → logprob: -5.530512809753418
    5. '   ' → logprob: -5.905512809753418
    6. 'compute' → logprob: -5.905512809753418
    7. '<|end|>' → logprob: -6.280512809753418
    8. ' compute' → logprob: -6.655512809753418
    9. '    
' → logprob: -7.030512809753418
    10. '```' → logprob: -7.030512809753418

Token 284: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.06779614090919495
    2. 'dp' → logprob: -3.192796230316162
    3. 'compute' → logprob: -3.817796230316162
    4. '       ' → logprob: -6.442796230316162
    5. ' nd' → logprob: -7.442796230316162
    6. '   ' → logprob: -8.192795753479004
    7. ' compute' → logprob: -10.942795753479004
    8. '           ' → logprob: -11.567795753479004
    9. '```' → logprob: -11.567795753479004
    10. ' dp' → logprob: -12.442795753479004

Token 285: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. ' p' → logprob: -20.5
    3. '_p' → logprob: -20.625
    4. '	p' → logprob: -20.75
    5. '   ' → logprob: -20.875
    6. 'pr' → logprob: -21.25
    7. 'п' → logprob: -21.25
    8. '[' → logprob: -21.5
    9. '<p' → logprob: -21.625
    10. 'pc' → logprob: -22.25

Token 286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4744318127632141
    2. ' =' → logprob: -0.9744318127632141
    3. ' +=' → logprob: -9.099431991577148
    4. '[' → logprob: -9.099431991577148
    5. '+=' → logprob: -9.599431991577148
    6. ',' → logprob: -10.724431991577148
    7. ' -=' → logprob: -10.849431991577148
    8. '[:]' → logprob: -12.474431991577148
    9. '-=' → logprob: -12.724431991577148
    10. ' *=' → logprob: -12.724431991577148

Token 287: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.38715946674346924
    2. 'compute' → logprob: -1.1371594667434692
    3. 'mod' → logprob: -8.51215934753418
    4. ' mod' → logprob: -9.51215934753418
    5. '.compute' → logprob: -12.38715934753418
    6. '   ' → logprob: -13.38715934753418
    7. '_compute' → logprob: -13.63715934753418
    8. ' ' → logprob: -14.01215934753418
    9. 'copy' → logprob: -14.13715934753418
    10. 'nd' → logprob: -14.26215934753418

Token 288: '_nd' (ID: 104814)
  Prédit: '_nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nd' → logprob: -3.128163257315464e-07
    2. '_dp' → logprob: -16.375
    3. 'nd' → logprob: -16.625
    4. '```' → logprob: -17.625
    5. '_md' → logprob: -18.0
    6. '_np' → logprob: -18.125
    7. '_nt' → logprob: -18.125
    8. '_n' → logprob: -18.25
    9. '_' → logprob: -18.375
    10. '_nc' → logprob: -18.625

Token 289: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.908022285439074e-05
    2. '_p' → logprob: -11.375059127807617
    3. 'dp' → logprob: -11.500059127807617
    4. '```' → logprob: -11.500059127807617
    5. '(dp' → logprob: -12.500059127807617
    6. '(p' → logprob: -12.625059127807617
    7. 'п' → logprob: -12.937559127807617
    8. '(
' → logprob: -13.250059127807617
    9. '<p' → logprob: -13.250059127807617
    10. '_dp' → logprob: -13.562559127807617

Token 290: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.0006072447285987437
    2. '(' → logprob: -7.500607013702393
    3. ' (' → logprob: -9.87560749053955
    4. '(n' → logprob: -13.00060749053955
    5. '(
' → logprob: -15.37560749053955
    6. '(np' → logprob: -15.87560749053955
    7. '```' → logprob: -16.375606536865234
    8. '(nn' → logprob: -17.250606536865234
    9. '(nx' → logprob: -17.250606536865234
    10. '(nt' → logprob: -17.750606536865234

Token 291: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. 'п' → logprob: -16.375
    3. '```' → logprob: -16.5
    4. 'پ' → logprob: -16.75
    5. '(p' → logprob: -16.75
    6. '	p' → logprob: -17.5
    7. '<p' → logprob: -17.5
    8. '_p' → logprob: -17.625
    9. 'dp' → logprob: -17.625
    10. '(dp' → logprob: -17.75

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002425240818411112
    2. '(dp' → logprob: -6.127425193786621
    3. '(' → logprob: -8.502425193786621
    4. ' ,' → logprob: -10.502425193786621
    5. ')' → logprob: -12.127425193786621
    6. ',
' → logprob: -13.627425193786621
    7. ',(' → logprob: -13.752425193786621
    8. ' (' → logprob: -14.752425193786621
    9. ',d' → logprob: -15.502425193786621
    10. 'dp' → logprob: -15.502425193786621

Token 293: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5759451985359192
    2. 'dp' → logprob: -0.8259451985359192
    3. '	dp' → logprob: -13.075944900512695
    4. '(dp' → logprob: -13.200944900512695
    5. ',' → logprob: -13.700944900512695
    6. '_dp' → logprob: -14.700944900512695
    7. ')' → logprob: -16.450944900512695
    8. ' ' → logprob: -16.825944900512695
    9. '
' → logprob: -16.950944900512695
    10. '   ' → logprob: -17.575944900512695

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001143314759247005
    2. ',c' → logprob: -7.001143455505371
    3. ' ,' → logprob: -8.376143455505371
    4. ',int' → logprob: -14.126143455505371
    5. 'c' → logprob: -15.251143455505371
    6. ')' → logprob: -15.876143455505371
    7. ',
' → logprob: -16.251142501831055
    8. '   ' → logprob: -17.001142501831055
    9. ' c' → logprob: -17.126142501831055
    10. ',n' → logprob: -17.376142501831055

Token 295: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03435168042778969
    2. ' c' → logprob: -3.4093515872955322
    3. 'int' → logprob: -7.409351825714111
    4. ' int' → logprob: -9.534351348876953
    5. '   ' → logprob: -10.659351348876953
    6. ' ' → logprob: -13.284351348876953
    7. '    ' → logprob: -14.409351348876953
    8. '       ' → logprob: -14.659351348876953
    9. '	c' → logprob: -14.659351348876953
    10. '  ' → logprob: -15.159351348876953

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046212802408263087
    2. ',n' → logprob: -7.750462055206299
    3. ' ,' → logprob: -10.375462532043457
    4. '   ' → logprob: -16.62546157836914
    5. ')' → logprob: -17.25046157836914
    6. 'n' → logprob: -17.37546157836914
    7. ',
' → logprob: -17.37546157836914
    8. '),' → logprob: -19.25046157836914
    9. '+' → logprob: -19.75046157836914
    10. ' n' → logprob: -19.87546157836914

Token 297: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02324605919420719
    2. ' n' → logprob: -3.7732460498809814
    3. '	n' → logprob: -15.148245811462402
    4. '   ' → logprob: -15.648245811462402
    5. ')n' → logprob: -16.02324676513672
    6. 'len' → logprob: -17.52324676513672
    7. '
' → logprob: -17.64824676513672
    8. ')' → logprob: -17.77324676513672
    9. '_n' → logprob: -18.39824676513672
    10. ' ' → logprob: -18.52324676513672

Token 298: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15473102033138275
    2. ',' → logprob: -2.279731035232544
    3. '       ' → logprob: -3.279731035232544
    4. ')
' → logprob: -5.779730796813965
    5. ',
' → logprob: -9.029730796813965
    6. ',n' → logprob: -9.654730796813965
    7. '   ' → logprob: -9.779730796813965
    8. ',)' → logprob: -10.904730796813965
    9. ',m' → logprob: -11.654730796813965
    10. ')n' → logprob: -11.654730796813965

Token 299: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8476302027702332
    2. '       ' → logprob: -0.9726302027702332
    3. '   ' → logprob: -2.347630262374878
    4. '<|end|>' → logprob: -2.472630262374878
    5. '```' → logprob: -5.097630023956299
    6. '[' → logprob: -5.597630023956299
    7. '
' → logprob: -7.222630023956299
    8. ' dp' → logprob: -7.472630023956299
    9. ',' → logprob: -8.097630500793457
    10. '<|end|>' → logprob: -8.097630500793457

Token 300: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.13119961321353912
    2. 'nd' → logprob: -2.256199598312378
    3. ' dp' → logprob: -4.381199836730957
    4. '       ' → logprob: -5.631199836730957
    5. ' nd' → logprob: -6.256199836730957
    6. '   ' → logprob: -8.631199836730957
    7. '	dp' → logprob: -11.631199836730957
    8. 'ndl' → logprob: -13.131199836730957
    9. ' ' → logprob: -13.881199836730957
    10. '  ' → logprob: -14.006199836730957

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313608318567276
    2. '=' → logprob: -1.3136082887649536
    3. ' %=' → logprob: -8.063608169555664
    4. '%=' → logprob: -10.563608169555664
    5. ',' → logprob: -13.188608169555664
    6. ' ' → logprob: -13.813608169555664
    7. ' +=' → logprob: -13.938608169555664
    8. '%' → logprob: -14.438608169555664
    9. '[:]' → logprob: -14.563608169555664
    10. '[' → logprob: -15.063608169555664

Token 302: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.28226742148399353
    2. 'mod' → logprob: -1.407267451286316
    3. ' nd' → logprob: -7.5322675704956055
    4. 'nd' → logprob: -7.7822675704956055
    5. ' np' → logprob: -9.157267570495605
    6. 'np' → logprob: -10.657267570495605
    7. '(mod' → logprob: -11.657267570495605
    8. '	mod' → logprob: -12.157267570495605
    9. ' ' → logprob: -12.407267570495605
    10. 'md' → logprob: -12.907267570495605

Token 303: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.6240566083070007e-06
    2. '(dp' → logprob: -14.125001907348633
    3. 'dp' → logprob: -14.250001907348633
    4. '_df' → logprob: -16.125001907348633
    5. '	dp' → logprob: -16.750001907348633
    6. '_dt' → logprob: -17.500001907348633
    7. '_' → logprob: -18.250001907348633
    8. '_lp' → logprob: -18.250001907348633
    9. '_py' → logprob: -18.500001907348633
    10. '_DP' → logprob: -18.625001907348633

Token 304: '(nd' (ID: 131841)
  Prédit: '(nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.0008415495976805687
    2. '(dp' → logprob: -7.5008416175842285
    3. '(' → logprob: -8.25084114074707
    4. ' (' → logprob: -10.75084114074707
    5. '(n' → logprob: -12.62584114074707
    6. '(np' → logprob: -13.00084114074707
    7. '(
' → logprob: -15.00084114074707
    8. '(pd' → logprob: -17.25084114074707
    9. '(lp' → logprob: -17.75084114074707
    10. '(d' → logprob: -18.25084114074707

Token 305: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.107425062713446e-06
    2. 'dp' → logprob: -13.375006675720215
    3. ' p' → logprob: -14.000006675720215
    4. '```' → logprob: -14.812506675720215
    5. '
' → logprob: -14.875006675720215
    6. '   ' → logprob: -15.062506675720215
    7. '_p' → logprob: -15.125006675720215
    8. '<p' → logprob: -15.375006675720215
    9. '[' → logprob: -15.437506675720215
    10. 'п' → logprob: -15.687506675720215

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034654809860512614
    2. ',m' → logprob: -8.500346183776855
    3. ' ,' → logprob: -8.875346183776855
    4. 'm' → logprob: -12.750346183776855
    5. '(' → logprob: -16.125347137451172
    6. '   ' → logprob: -17.000347137451172
    7. ' m' → logprob: -17.375347137451172
    8. ',
' → logprob: -17.375347137451172
    9. ')' → logprob: -17.375347137451172
    10. ' ' → logprob: -17.500347137451172

Token 307: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6931484341621399
    2. ' m' → logprob: -0.6931484341621399
    3. ' ' → logprob: -14.068148612976074
    4. ')' → logprob: -15.443148612976074
    5. ')m' → logprob: -16.818147659301758
    6. '	m' → logprob: -17.193147659301758
    7. ' ' → logprob: -17.193147659301758
    8. '   ' → logprob: -18.193147659301758
    9. '    ' → logprob: -18.568147659301758
    10. '```' → logprob: -19.693147659301758

Token 308: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003081928938627243
    2. '<|end|>' → logprob: -5.878081798553467
    3. ')
' → logprob: -8.878082275390625
    4. '   ' → logprob: -10.003082275390625
    5. ')return' → logprob: -10.753082275390625
    6. ' )' → logprob: -10.878082275390625
    7. '<|end|>' → logprob: -11.503082275390625
    8. '```' → logprob: -11.628082275390625
    9. '
' → logprob: -12.253082275390625
    10. '+' → logprob: -12.378082275390625

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06971576809883118
    2. '
' → logprob: -3.069715738296509
    3. 'print' → logprob: -4.069715976715088
    4. '    
' → logprob: -6.194715976715088
    5. '```' → logprob: -7.069715976715088
    6. ' print' → logprob: -7.444715976715088
    7. '<|end|>' → logprob: -8.81971549987793
    8. '  
' → logprob: -9.31971549987793
    9. 'return' → logprob: -10.69471549987793
    10. ' return' → logprob: -10.81971549987793

Token 310: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011552432551980019
    2. '   ' → logprob: -4.511552333831787
    3. ' print' → logprob: -8.136552810668945
    4. '```' → logprob: -9.011552810668945
    5. 'result' → logprob: -9.386552810668945
    6. 'res' → logprob: -12.761552810668945
    7. '    
' → logprob: -13.761552810668945
    8. '
' → logprob: -14.386552810668945
    9. ' result' → logprob: -14.511552810668945
    10. 'return' → logprob: -14.636552810668945

Token 311: '(final' (ID: 14111)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.6679531931877136
    2. '(' → logprob: -1.4179532527923584
    3. '(np' → logprob: -1.4179532527923584
    4. '(sum' → logprob: -6.417953014373779
    5. '()' → logprob: -7.042953014373779
    6. '((' → logprob: -8.667953491210938
    7. '(len' → logprob: -10.667953491210938
    8. '(final' → logprob: -10.792953491210938
    9. '(max' → logprob: -11.167953491210938
    10. '(int' → logprob: -11.167953491210938

Token 312: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -8.65707261255011e-06
    2. '_res' → logprob: -12.500008583068848
    3. '_' → logprob: -12.875008583068848
    4. '_results' → logprob: -13.375008583068848
    5. ' _' → logprob: -15.375008583068848
    6. 'result' → logprob: -16.000009536743164
    7. ')' → logprob: -16.625009536743164
    8. ' result' → logprob: -16.750009536743164
    9. '_Result' → logprob: -17.125009536743164
    10. '_RESULT' → logprob: -17.250009536743164

Token 313: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -12.000009536743164
    3. ' (' → logprob: -12.875009536743164
    4. ')' → logprob: -14.875009536743164
    5. '(df' → logprob: -16.750009536743164
    6. ')(' → logprob: -17.625009536743164
    7. '(dx' → logprob: -18.500009536743164
    8. '(dt' → logprob: -18.750009536743164
    9. '(lp' → logprob: -18.750009536743164
    10. '(np' → logprob: -19.000009536743164

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0045938920229673386
    2. ',n' → logprob: -5.879593849182129
    3. '(n' → logprob: -6.379593849182129
    4. '(' → logprob: -9.754593849182129
    5. ' ,' → logprob: -10.379593849182129
    6. ')' → logprob: -14.004593849182129
    7. ',
' → logprob: -14.379593849182129
    8. '   ' → logprob: -14.879593849182129
    9. ',(' → logprob: -16.129594802856445
    10. ' (' → logprob: -16.379594802856445

Token 315: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12692810595035553
    2. 'n' → logprob: -2.1269280910491943
    3. '   ' → logprob: -17.501928329467773
    4. ' ' → logprob: -17.626928329467773
    5. '	n' → logprob: -18.251928329467773
    6. '  ' → logprob: -18.376928329467773
    7. '    ' → logprob: -18.376928329467773
    8. ')n' → logprob: -18.501928329467773
    9. '
' → logprob: -19.001928329467773
    10. ')' → logprob: -19.376928329467773

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002226093056378886
    2. ' ,' → logprob: -8.500222206115723
    3. ',m' → logprob: -10.875222206115723
    4. ',
' → logprob: -16.12522315979004
    5. 'm' → logprob: -17.75022315979004
    6. '‌,' → logprob: -17.87522315979004
    7. '   ' → logprob: -18.25022315979004
    8. '```' → logprob: -18.50022315979004
    9. ' ' → logprob: -18.62522315979004
    10. ')' → logprob: -18.62522315979004

Token 317: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5759395956993103
    2. ' m' → logprob: -0.8259395956993103
    3. '   ' → logprob: -16.325939178466797
    4. ' ' → logprob: -16.575939178466797
    5. '    ' → logprob: -16.950939178466797
    6. ' м' → logprob: -18.325939178466797
    7. '	m' → logprob: -18.450939178466797
    8. '  ' → logprob: -19.325939178466797
    9. ' ' → logprob: -19.575939178466797
    10. ')m' → logprob: -20.200939178466797

Token 318: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004311460361350328
    2. '))' → logprob: -7.750431060791016
    3. ' )' → logprob: -16.000431060791016
    4. ')`' → logprob: -16.125431060791016
    5. ')}' → logprob: -16.750431060791016
    6. ')
' → logprob: -17.000431060791016
    7. '())' → logprob: -17.250431060791016
    8. '})' → logprob: -17.375431060791016
    9. ')))' → logprob: -17.625431060791016
    10. '`)' → logprob: -18.500431060791016

Token 319: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00019781860464718193
    2. ' if' → logprob: -8.875197410583496
    3. '
' → logprob: -11.250197410583496
    4. '[' → logprob: -11.750197410583496
    5. '```' → logprob: -11.875197410583496
    6. '#' → logprob: -12.250197410583496
    7. 'print' → logprob: -12.250197410583496
    8. '\n' → logprob: -12.375197410583496
    9. 'main' → logprob: -12.375197410583496
    10. 'n' → logprob: -12.875197410583496

Token 320: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 318
Tokens correctement prédits (1ère position, stricte): 160
Tokens correctement prédits (1ère position, avec adaptation): 172
Tokens correctement prédits (top 10): 267
Précision stricte (1ère position): 50.31%
Précision adaptée (1ère position): 54.09%
Précision (top 10): 83.96%
================================================================================
