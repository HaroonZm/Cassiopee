================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
WORDS = []
append_word = WORDS.append
for x in range(N): append_word(input())
C = 0
IDX = 0
while IDX < N:
    SUBIDX = IDX + 1
    while SUBIDX < N:
        if WORDS[IDX] is WORDS[SUBIDX] or WORDS[IDX] == WORDS[SUBIDX]:
            C += 1
        SUBIDX += 1
    IDX += 1
K = 0
while K < N-1:
    if WORDS[K][-1:] != WORDS[K+1][:1]:
        C = C + 1
    K += 1
print("Yes"*(C==0)+"No"*(C!=0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001940040965564549
    2. '```' → logprob: -9.50019359588623
    3. '(N' → logprob: -10.50019359588623
    4. '`' → logprob: -10.87519359588623
    5. '(
' → logprob: -11.00019359588623
    6. ')' → logprob: -11.62519359588623
    7. '("("' → logprob: -11.62519359588623
    8. ''' → logprob: -11.62519359588623
    9. '()' → logprob: -11.75019359588623
    10. '('' → logprob: -12.25019359588623

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5316423177719116
    2. ')' → logprob: -0.9066423177719116
    3. '()' → logprob: -5.156642436981201
    4. '())' → logprob: -6.656642436981201
    5. '(
' → logprob: -7.656642436981201
    6. '```' → logprob: -8.781641960144043
    7. '))' → logprob: -8.906641960144043
    8. '")' → logprob: -9.406641960144043
    9. '')' → logprob: -9.531641960144043
    10. '(

' → logprob: -9.906641960144043

Token 5: 'WORDS' (ID: 175051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8439445495605469
    2. 'for' → logprob: -1.8439445495605469
    3. 'a' → logprob: -2.093944549560547
    4. 's' → logprob: -2.218944549560547
    5. '*' → logprob: -2.593944549560547
    6. ''' → logprob: -2.843944549560547
    7. ')' → logprob: -3.218944549560547
    8. 'x' → logprob: -3.218944549560547
    9. 'i' → logprob: -3.218944549560547
    10. '#' → logprob: -3.218944549560547

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27680397033691406
    2. '.' → logprob: -2.401803970336914
    3. '=' → logprob: -2.651803970336914
    4. ' =' → logprob: -3.401803970336914
    5. '_' → logprob: -3.526803970336914
    6. ')' → logprob: -5.276803970336914
    7. '[]' → logprob: -5.776803970336914
    8. 's' → logprob: -6.401803970336914
    9. '[:]' → logprob: -6.526803970336914
    10. '```' → logprob: -6.901803970336914

Token 7: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.02147330529987812
    2. '[]' → logprob: -3.8964734077453613
    3. ' set' → logprob: -8.146472930908203
    4. ' [' → logprob: -8.521472930908203
    5. 'set' → logprob: -8.771472930908203
    6. ' {}' → logprob: -9.396472930908203
    7. ' ' → logprob: -9.896472930908203
    8. '[' → logprob: -10.271472930908203
    9. '{}' → logprob: -10.646472930908203
    10. '[input' → logprob: -10.896472930908203

Token 8: 'append' (ID: 9132)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009256341145373881
    2. ' for' → logprob: -7.625925540924072
    3. '```' → logprob: -7.750925540924072
    4. '[' → logprob: -13.37592601776123
    5. '``' → logprob: -13.87592601776123
    6. '`' → logprob: -14.12592601776123
    7. '
' → logprob: -14.25092601776123
    8. '   ' → logprob: -14.25092601776123
    9. '\n' → logprob: -14.37592601776123
    10. '\' → logprob: -14.87592601776123

Token 9: '_word' (ID: 32074)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.056032851338386536
    2. '()' → logprob: -2.93103289604187
    3. '_' → logprob: -8.18103313446045
    4. '(W' → logprob: -8.30603313446045
    5. '_words' → logprob: -9.05603313446045
    6. ')' → logprob: -9.30603313446045
    7. '((' → logprob: -9.80603313446045
    8. '(_' → logprob: -9.80603313446045
    9. '('' → logprob: -10.18103313446045
    10. '(()' → logprob: -10.68103313446045

Token 10: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0083471536636353
    2. 's' → logprob: -1.2583471536636353
    3. '=' → logprob: -1.5083471536636353
    4. ' =' → logprob: -2.6333470344543457
    5. '()' → logprob: -2.8833470344543457
    6. '(s' → logprob: -7.633347034454346
    7. '('' → logprob: -7.883347034454346
    8. ')' → logprob: -8.258347511291504
    9. '_' → logprob: -9.133347511291504
    10. '.' → logprob: -9.383347511291504

Token 11: ' WORD' (ID: 73189)
  Prédit: ' WORD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' WORD' → logprob: -0.17986084520816803
    2. 'WORDS' → logprob: -1.8048608303070068
    3. 'WORD' → logprob: -9.804861068725586
    4. '_WORD' → logprob: -10.054861068725586
    5. ' WOR' → logprob: -12.429861068725586
    6. ' ' → logprob: -12.429861068725586
    7. '.append' → logprob: -13.054861068725586
    8. ' .' → logprob: -13.429861068725586
    9. 'append' → logprob: -13.679861068725586
    10. '.words' → logprob: -14.179861068725586

Token 12: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.650518920039758e-06
    2. 's' → logprob: -13.875003814697266
    3. 'WORDS' → logprob: -14.375003814697266
    4. '	S' → logprob: -14.750003814697266
    5. '```' → logprob: -15.000003814697266
    6. ' S' → logprob: -15.250003814697266
    7. '<S' → logprob: -15.875003814697266
    8. '_S' → logprob: -16.000003814697266
    9. 'Ｓ' → logprob: -16.250003814697266
    10. 'SOR' → logprob: -16.250003814697266

Token 13: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002087853499688208
    2. '.' → logprob: -8.500208854675293
    3. 'append' → logprob: -13.250208854675293
    4. '.extend' → logprob: -13.875208854675293
    5. '.add' → logprob: -14.375208854675293
    6. '.pop' → logprob: -15.000208854675293
    7. '.app' → logprob: -15.250208854675293
    8. '.push' → logprob: -15.250208854675293
    9. '.setdefault' → logprob: -15.500208854675293
    10. ').' → logprob: -15.500208854675293

Token 14: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3305177390575409
    2. 'for' → logprob: -1.3305177688598633
    3. '(
' → logprob: -4.205517768859863
    4. ''' → logprob: -7.705517768859863
    5. '
' → logprob: -8.205517768859863
    6. ' for' → logprob: -8.330517768859863
    7. '\n' → logprob: -8.455517768859863
    8. '"' → logprob: -8.705517768859863
    9. '`' → logprob: -8.705517768859863
    10. '_' → logprob: -9.330517768859863

Token 15: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05109109356999397
    2. '(' → logprob: -3.176091194152832
    3. ' for' → logprob: -5.801091194152832
    4. '\n' → logprob: -6.926091194152832
    5. '(
' → logprob: -7.426091194152832
    6. '\' → logprob: -7.551091194152832
    7. '_' → logprob: -7.926091194152832
    8. '
' → logprob: -8.176091194152832
    9. '()' → logprob: -8.176091194152832
    10. ')' → logprob: -8.551091194152832

Token 16: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8118577003479004
    2. ' i' → logprob: -0.9368577003479004
    3. ' _' → logprob: -1.8118577003479004
    4. '_' → logprob: -7.5618577003479
    5. '  ' → logprob: -9.436857223510742
    6. ' word' → logprob: -9.561857223510742
    7. 'i' → logprob: -10.311857223510742
    8. ' w' → logprob: -11.436857223510742
    9. ' I' → logprob: -11.561857223510742
    10. ' ‌' → logprob: -11.936857223510742

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02652716636657715
    2. 'in' → logprob: -4.276527404785156
    3. ' ' → logprob: -4.776527404785156
    4. '(' → logprob: -6.026527404785156
    5. '  ' → logprob: -6.901527404785156
    6. '_' → logprob: -9.276527404785156
    7. '   ' → logprob: -10.151527404785156
    8. ' (' → logprob: -10.276527404785156
    9. '    ' → logprob: -10.651527404785156
    10. '	in' → logprob: -10.651527404785156

Token 18: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20142708718776703
    2. 'range' → logprob: -1.7014271020889282
    3. '(range' → logprob: -12.826427459716797
    4. ' ' → logprob: -12.826427459716797
    5. '	range' → logprob: -12.826427459716797
    6. ' xrange' → logprob: -13.701427459716797
    7. 'input' → logprob: -14.826427459716797
    8. 'ran' → logprob: -14.826427459716797
    9. ' input' → logprob: -14.888927459716797
    10. ' ran' → logprob: -14.951427459716797

Token 19: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009804255329072475
    2. '(N' → logprob: -4.6348042488098145
    3. ' (' → logprob: -10.759804725646973
    4. '(n' → logprob: -11.384804725646973
    5. '(x' → logprob: -12.134804725646973
    6. '(
' → logprob: -12.134804725646973
    7. '(len' → logprob: -13.134804725646973
    8. '((' → logprob: -13.884804725646973
    9. '('' → logprob: -15.134804725646973
    10. '(`' → logprob: -15.259804725646973

Token 20: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008764417842030525
    2. ')' → logprob: -4.758764266967773
    3. ' ):' → logprob: -9.508764266967773
    4. ':' → logprob: -10.383764266967773
    5. '):
' → logprob: -10.883764266967773
    6. '+' → logprob: -11.508764266967773
    7. ',' → logprob: -11.883764266967773
    8. '():' → logprob: -13.883764266967773
    9. ' ' → logprob: -14.133764266967773
    10. ' )' → logprob: -14.133764266967773

Token 21: ' append' (ID: 17147)
  Prédit: ' append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.22803497314453125
    2. ' 
' → logprob: -2.7280349731445312
    3. '   ' → logprob: -3.3530349731445312
    4. ' ' → logprob: -3.9780349731445312
    5. '<|end|>' → logprob: -3.9780349731445312
    6. ' input' → logprob: -4.103034973144531
    7. '    ' → logprob: -4.228034973144531
    8. '     
' → logprob: -4.478034973144531
    9. '    
' → logprob: -4.603034973144531
    10. 'append' → logprob: -5.103034973144531

Token 22: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -8.65707261255011e-06
    2. '_words' → logprob: -11.750008583068848
    3. '_w' → logprob: -15.625008583068848
    4. 'er' → logprob: -16.125009536743164
    5. '_' → logprob: -16.250009536743164
    6. '_WORD' → logprob: -16.375009536743164
    7. ' _' → logprob: -16.625009536743164
    8. 'ed' → logprob: -16.750009536743164
    9. '_world' → logprob: -17.750009536743164
    10. '_wp' → logprob: -18.250009536743164

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012793336063623428
    2. '(' → logprob: -4.38779354095459
    3. '(str' → logprob: -8.38779354095459
    4. '((' → logprob: -10.63779354095459
    5. '(
' → logprob: -11.88779354095459
    6. ' (' → logprob: -11.88779354095459
    7. '('' → logprob: -12.01279354095459
    8. '(int' → logprob: -12.76279354095459
    9. '(x' → logprob: -13.13779354095459
    10. 'input' → logprob: -13.51279354095459

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0023649439681321383
    2. '()' → logprob: -6.1273651123046875
    3. '()))' → logprob: -9.002365112304688
    4. ')' → logprob: -10.502365112304688
    5. '())
' → logprob: -11.002365112304688
    6. ' ())' → logprob: -11.877365112304688
    7. '();)' → logprob: -13.377365112304688
    8. '())

' → logprob: -13.627365112304688
    9. '());' → logprob: -14.252365112304688
    10. '().' → logprob: -14.377365112304688

Token 25: 'C' (ID: 34)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.051254309713840485
    2. '<|end|>' → logprob: -3.6762542724609375
    3. ' 
' → logprob: -5.0512542724609375
    4. '  
' → logprob: -5.0512542724609375
    5. '
' → logprob: -6.4262542724609375
    6. '\n' → logprob: -6.6762542724609375
    7. 'for' → logprob: -6.8012542724609375
    8. 'if' → logprob: -6.9262542724609375
    9. ' ' → logprob: -6.9262542724609375
    10. '```' → logprob: -7.4262542724609375

Token 26: ' =' (ID: 314)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.5293132066726685
    2. 'ount' → logprob: -1.5293132066726685
    3. 'O' → logprob: -2.029313087463379
    4. 'o' → logprob: -4.029313087463379
    5. 'OUNT' → logprob: -4.029313087463379
    6. 'OUN' → logprob: -4.404313087463379
    7. 'ou' → logprob: -5.404313087463379
    8. '=' → logprob: -6.154313087463379
    9. 'ounters' → logprob: -6.404313087463379
    10. 'ol' → logprob: -6.779313087463379

Token 27: ' ' (ID: 220)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.580130696296692
    2. ' WORD' → logprob: -1.705130696296692
    3. ' {}' → logprob: -2.3301305770874023
    4. ' ' → logprob: -2.3301305770874023
    5. ' input' → logprob: -2.9551305770874023
    6. ' []' → logprob: -2.9551305770874023
    7. 'int' → logprob: -2.9551305770874023
    8. ' len' → logprob: -3.0801305770874023
    9. ' [' → logprob: -3.2051305770874023
    10. '{}' → logprob: -3.3301305770874023

Token 28: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06346751749515533
    2. '{}' → logprob: -3.563467502593994
    3. 'input' → logprob: -3.938467502593994
    4. '0' → logprob: -5.688467502593994
    5. 'len' → logprob: -5.688467502593994
    6. 'Counter' → logprob: -6.563467502593994
    7. '[int' → logprob: -6.563467502593994
    8. 'sum' → logprob: -7.188467502593994
    9. '{' → logprob: -7.313467502593994
    10. 'max' → logprob: -7.938467502593994

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5137360692024231
    2. 'for' → logprob: -1.6387360095977783
    3. '<|end|>' → logprob: -2.0137360095977783
    4. ' for' → logprob: -3.3887360095977783
    5. '\n' → logprob: -3.8887360095977783
    6. ' 
' → logprob: -4.638736248016357
    7. '\' → logprob: -5.388736248016357
    8. '' → logprob: -6.513736248016357
    9. 'f' → logprob: -7.513736248016357
    10. 'n' → logprob: -7.638736248016357

Token 30: 'IDX' (ID: 107492)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003510976443067193
    2. '
' → logprob: -5.87851095199585
    3. ' for' → logprob: -7.37851095199585
    4. '\' → logprob: -10.503511428833008
    5. '\n' → logprob: -11.003511428833008
    6. 'f' → logprob: -11.378511428833008
    7. ' 
' → logprob: -11.878511428833008
    8. '```' → logprob: -12.128511428833008
    9. '' → logprob: -13.253511428833008
    10. '  
' → logprob: -13.378511428833008

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6376577019691467
    2. ' =' → logprob: -0.7626577019691467
    3. '_' → logprob: -5.512657642364502
    4. 'ex' → logprob: -8.13765811920166
    5. 's' → logprob: -8.76265811920166
    6. ' ' → logprob: -8.88765811920166
    7. ',' → logprob: -8.88765811920166
    8. 'S' → logprob: -9.13765811920166
    9. 'x' → logprob: -9.76265811920166
    10. 'EX' → logprob: -10.26265811920166

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18011166155338287
    2. ' ' → logprob: -1.8051116466522217
    3. ' -' → logprob: -8.5551118850708
    4. '-' → logprob: -8.9301118850708
    5. 'len' → logprob: -11.6801118850708
    6. '1' → logprob: -11.8051118850708
    7. '<|end|>' → logprob: -11.9301118850708
    8. ' len' → logprob: -12.4301118850708
    9. 'N' → logprob: -12.8051118850708
    10. '[' → logprob: -13.2426118850708

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04902196303009987
    2. '-' → logprob: -3.1740219593048096
    3. 'N' → logprob: -6.049022197723389
    4. 'len' → logprob: -7.174022197723389
    5. ' ' → logprob: -7.299022197723389
    6. '[]' → logprob: -7.549022197723389
    7. '{}' → logprob: -7.799022197723389
    8. '1' → logprob: -8.04902172088623
    9. '[' → logprob: -8.17402172088623
    10. ' -' → logprob: -8.54902172088623

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49584048986434937
    2. '<|end|>' → logprob: -1.3708405494689941
    3. ' 
' → logprob: -2.495840549468994
    4. 'for' → logprob: -3.370840549468994
    5. ' ' → logprob: -5.120840549468994
    6. ' for' → logprob: -5.245840549468994
    7. '\n' → logprob: -5.870840549468994
    8. '\' → logprob: -6.870840549468994
    9. 'while' → logprob: -7.245840549468994
    10. ' while' → logprob: -7.245840549468994

Token 35: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09829311817884445
    2. 'for' → logprob: -2.8482930660247803
    3. ' 
' → logprob: -4.348293304443359
    4. ' for' → logprob: -4.723293304443359
    5. 'while' → logprob: -5.348293304443359
    6. '\n' → logprob: -5.598293304443359
    7. '<|end|>' → logprob: -6.098293304443359
    8. ' while' → logprob: -6.723293304443359
    9. '' → logprob: -7.473293304443359
    10. '```' → logprob: -8.59829330444336

Token 36: ' IDX' (ID: 123225)
  Prédit: ' IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' IDX' → logprob: -0.013296580873429775
    2. ' ' → logprob: -5.013296604156494
    3. ' True' → logprob: -6.013296604156494
    4. ' ID' → logprob: -6.138296604156494
    5. ' C' → logprob: -6.763296604156494
    6. 'IDX' → logprob: -7.888296604156494
    7. ' N' → logprob: -9.513296127319336
    8. ' idx' → logprob: -9.763296127319336
    9. ' len' → logprob: -10.013296127319336
    10. '_IDX' → logprob: -10.388296127319336

Token 37: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.180780291557312
    2. '<' → logprob: -1.805780291557312
    3. ' ' → logprob: -7.055780410766602
    4. '<len' → logprob: -8.805780410766602
    5. '<N' → logprob: -10.805780410766602
    6. '<size' → logprob: -14.555780410766602
    7. '<n' → logprob: -15.055780410766602
    8. '[' → logprob: -15.305780410766602
    9. '+' → logprob: -15.555780410766602
    10. ' <
' → logprob: -15.555780410766602

Token 38: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.39648962020874023
    2. 'N' → logprob: -1.1464896202087402
    3. ' len' → logprob: -5.14648962020874
    4. 'len' → logprob: -6.02148962020874
    5. ' ' → logprob: -6.64648962020874
    6. '  ' → logprob: -11.646490097045898
    7. '   ' → logprob: -12.646490097045898
    8. '	N' → logprob: -12.771490097045898
    9. 'LEN' → logprob: -12.896490097045898
    10. '(len' → logprob: -13.708990097045898

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018875879468396306
    2. ':
' → logprob: -6.626887798309326
    3. ' :' → logprob: -7.876887798309326
    4. ' and' → logprob: -9.001887321472168
    5. '   ' → logprob: -11.001887321472168
    6. '+' → logprob: -11.626887321472168
    7. '+:' → logprob: -11.876887321472168
    8. ' ' → logprob: -12.001887321472168
    9. ':**' → logprob: -12.251887321472168
    10. ' :
' → logprob: -12.376887321472168

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1132877841591835
    2. ' ' → logprob: -3.6132876873016357
    3. '    ' → logprob: -3.6132876873016357
    4. '    
' → logprob: -3.8632876873016357
    5. ' if' → logprob: -4.238287925720215
    6. '<|end|>' → logprob: -5.613287925720215
    7. ' 
' → logprob: -5.863287925720215
    8. '     
' → logprob: -5.988287925720215
    9. 'if' → logprob: -7.238287925720215
    10. ':' → logprob: -7.488287925720215

Token 41: ' SUB' (ID: 31189)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4748193323612213
    2. ' if' → logprob: -2.0998194217681885
    3. 'if' → logprob: -2.5998194217681885
    4. 'word' → logprob: -3.0998194217681885
    5. ' word' → logprob: -3.3498194217681885
    6. 'WORD' → logprob: -4.349819183349609
    7. ' WORD' → logprob: -4.474819183349609
    8. 'words' → logprob: -4.849819183349609
    9. ' w' → logprob: -5.099819183349609
    10. 'WORDS' → logprob: -5.349819183349609

Token 42: 'IDX' (ID: 107492)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13971073925495148
    2. '=' → logprob: -3.3897106647491455
    3. '   ' → logprob: -3.8897106647491455
    4. 'LEN' → logprob: -3.8897106647491455
    5. 'WORDS' → logprob: -4.389710903167725
    6. 'WORD' → logprob: -4.639710903167725
    7. 'STR' → logprob: -4.889710903167725
    8. '_WORD' → logprob: -5.139710903167725
    9. '_LEN' → logprob: -5.389710903167725
    10. '_' → logprob: -5.514710903167725

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07056649774312973
    2. '=' → logprob: -2.695566415786743
    3. ' +=' → logprob: -7.820566654205322
    4. '   ' → logprob: -9.445566177368164
    5. '+=' → logprob: -9.570566177368164
    6. ' ' → logprob: -10.570566177368164
    7. '+' → logprob: -10.820566177368164
    8. ')' → logprob: -12.570566177368164
    9. ' <=' → logprob: -12.570566177368164
    10. '    ' → logprob: -12.570566177368164

Token 44: ' IDX' (ID: 123225)
  Prédit: ' IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' IDX' → logprob: -0.33968594670295715
    2. ' ' → logprob: -1.4646859169006348
    3. 'IDX' → logprob: -3.8396859169006348
    4. '0' → logprob: -3.9646859169006348
    5. ' WORD' → logprob: -4.839685916900635
    6. ' N' → logprob: -5.714685916900635
    7. ' ID' → logprob: -6.839685916900635
    8. 'N' → logprob: -7.089685916900635
    9. '1' → logprob: -7.214685916900635
    10. '2' → logprob: -8.089686393737793

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07063092291355133
    2. ' +' → logprob: -2.6956310272216797
    3. '   ' → logprob: -7.57063102722168
    4. '<|end|>' → logprob: -9.32063102722168
    5. '+
' → logprob: -10.57063102722168
    6. '2' → logprob: -11.07063102722168
    7. '<|end|>' → logprob: -11.44563102722168
    8. '1' → logprob: -11.94563102722168
    9. ' +
' → logprob: -12.32063102722168
    10. '```' → logprob: -12.44563102722168

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012313504703342915
    2. ' ' → logprob: -4.512313365936279
    3. '2' → logprob: -6.887313365936279
    4. '3' → logprob: -9.887313842773438
    5. '10' → logprob: -10.387313842773438
    6. '7' → logprob: -10.387313842773438
    7. '5' → logprob: -11.262313842773438
    8. '   ' → logprob: -11.262313842773438
    9. '6' → logprob: -11.449813842773438
    10. 'C' → logprob: -11.512313842773438

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012034466490149498
    2. '2' → logprob: -7.251203536987305
    3. ' ' → logprob: -8.626203536987305
    4. 'C' → logprob: -8.876203536987305
    5. '3' → logprob: -10.001203536987305
    6. '7' → logprob: -10.501203536987305
    7. '   ' → logprob: -10.626203536987305
    8. '5' → logprob: -11.626203536987305
    9. '10' → logprob: -11.626203536987305
    10. '6' → logprob: -11.876203536987305

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9600656628608704
    2. '<|end|>' → logprob: -1.4600656032562256
    3. 'while' → logprob: -1.8350656032562256
    4. '
' → logprob: -1.9600656032562256
    5. 'if' → logprob: -2.9600656032562256
    6. ' while' → logprob: -4.210065841674805
    7. ' if' → logprob: -5.210065841674805
    8. '<|end|>' → logprob: -5.960065841674805
    9. '    
' → logprob: -6.335065841674805
    10. ')' → logprob: -6.335065841674805

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3832300305366516
    2. 'while' → logprob: -1.5082299709320068
    3. '   ' → logprob: -3.383229970932007
    4. 'if' → logprob: -3.508229970932007
    5. '<|end|>' → logprob: -4.383230209350586
    6. '    
' → logprob: -4.883230209350586
    7. ' while' → logprob: -5.008230209350586
    8. ' if' → logprob: -7.008230209350586
    9. 'and' → logprob: -7.133230209350586
    10. '<' → logprob: -7.258230209350586

Token 50: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3204805850982666
    2. '<|end|>' → logprob: -2.0704805850982666
    3. ' while' → logprob: -2.1954805850982666
    4. '   ' → logprob: -3.6954805850982666
    5. '	while' → logprob: -5.3204803466796875
    6. ' ' → logprob: -6.4454803466796875
    7. '    ' → logprob: -6.9454803466796875
    8. '<|end|>' → logprob: -7.0704803466796875
    9. 'if' → logprob: -7.1954803466796875
    10. '```' → logprob: -7.5704803466796875

Token 51: ' SUB' (ID: 31189)
  Prédit: ' SUB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' SUB' → logprob: -0.575946569442749
    2. 'SUB' → logprob: -0.825946569442749
    3. '_SUB' → logprob: -13.075946807861328
    4. 'Sub' → logprob: -13.325946807861328
    5. ' ' → logprob: -13.700946807861328
    6. '.SUB' → logprob: -14.075946807861328
    7. ' Sub' → logprob: -15.075946807861328
    8. 'sub' → logprob: -15.325946807861328
    9. 'SU' → logprob: -15.825946807861328
    10. '   ' → logprob: -15.950946807861328

Token 52: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -0.00022547018306795508
    2. 'SUB' → logprob: -9.625225067138672
    3. 'idx' → logprob: -9.875225067138672
    4. 'DX' → logprob: -9.875225067138672
    5. 'ID' → logprob: -11.000225067138672
    6. 'X' → logprob: -11.250225067138672
    7. '_IDX' → logprob: -11.875225067138672
    8. 'INDEX' → logprob: -12.500225067138672
    9. ' IDX' → logprob: -12.750225067138672
    10. '<' → logprob: -12.875225067138672

Token 53: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5761385560035706
    2. ' <' → logprob: -0.8261385560035706
    3. '<N' → logprob: -8.576138496398926
    4. '<n' → logprob: -11.951138496398926
    5. '<len' → logprob: -13.326138496398926
    6. '<|end|>' → logprob: -14.576138496398926
    7. ' ' → logprob: -14.826138496398926
    8. '<size' → logprob: -15.076138496398926
    9. '<num' → logprob: -16.076139450073242
    10. ' <=' → logprob: -16.201139450073242

Token 54: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012514480389654636
    2. ' N' → logprob: -4.387514591217041
    3. '   ' → logprob: -12.762514114379883
    4. ' ' → logprob: -13.762514114379883
    5. '	N' → logprob: -14.762514114379883
    6. 'len' → logprob: -15.137514114379883
    7. ' len' → logprob: -16.387514114379883
    8. '  ' → logprob: -16.637514114379883
    9. '    ' → logprob: -17.137514114379883
    10. 'n' → logprob: -17.262514114379883

Token 55: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3015432059764862
    2. ':' → logprob: -1.4265432357788086
    3. 'and' → logprob: -4.426543235778809
    4. ':
' → logprob: -5.176543235778809
    5. '   ' → logprob: -6.051543235778809
    6. '       ' → logprob: -8.926543235778809
    7. '	and' → logprob: -11.051543235778809
    8. '):' → logprob: -11.176543235778809
    9. ')' → logprob: -11.301543235778809
    10. '<|end|>' → logprob: -11.801543235778809

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37177467346191406
    2. ' and' → logprob: -1.246774673461914
    3. ':' → logprob: -4.246774673461914
    4. 'and' → logprob: -5.996774673461914
    5. '   ' → logprob: -6.621774673461914
    6. ':
' → logprob: -6.746774673461914
    7. ' ' → logprob: -6.871774673461914
    8. '    ' → logprob: -7.121774673461914
    9. ' if' → logprob: -7.746774673461914
    10. ' :' → logprob: -7.871774673461914

Token 57: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9374339580535889
    2. ' if' → logprob: -1.6874339580535889
    3. ' and' → logprob: -1.9374339580535889
    4. '           ' → logprob: -2.062433958053589
    5. '       ' → logprob: -2.687433958053589
    6. ':' → logprob: -3.812433958053589
    7. '<|end|>' → logprob: -4.312434196472168
    8. '    ' → logprob: -4.937434196472168
    9. '   ' → logprob: -4.937434196472168
    10. ' :' → logprob: -5.312434196472168

Token 58: ' WORD' (ID: 73189)
  Prédit: ' WORD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' WORD' → logprob: -0.0024386707227677107
    2. ' len' → logprob: -7.502438545227051
    3. ' WOR' → logprob: -7.502438545227051
    4. ' '' → logprob: -8.00243854522705
    5. 'WORDS' → logprob: -8.12743854522705
    6. ' ' → logprob: -8.50243854522705
    7. ' Words' → logprob: -8.75243854522705
    8. ' words' → logprob: -9.12743854522705
    9. ' "' → logprob: -10.12743854522705
    10. '    ' → logprob: -10.50243854522705

Token 59: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0022966822143644094
    2. '[S' → logprob: -6.127296447753906
    3. '[' → logprob: -10.002296447753906
    4. 'SUB' → logprob: -10.502296447753906
    5. 's' → logprob: -11.127296447753906
    6. '   ' → logprob: -12.377296447753906
    7. 'SID' → logprob: -12.502296447753906
    8. 'Ｓ' → logprob: -13.127296447753906
    9. '	S' → logprob: -13.252296447753906
    10. '(S' → logprob: -13.252296447753906

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014704519708175212
    2. '[S' → logprob: -9.125146865844727
    3. '[idx' → logprob: -11.625146865844727
    4. '   ' → logprob: -11.875146865844727
    5. ' [' → logprob: -11.875146865844727
    6. 'IDX' → logprob: -12.500146865844727
    7. 'SUB' → logprob: -13.000146865844727
    8. '[I' → logprob: -13.250146865844727
    9. ' ' → logprob: -13.500146865844727
    10. '[T' → logprob: -14.000146865844727

Token 61: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -0.08912703394889832
    2. 'SUB' → logprob: -2.4641270637512207
    3. 'ID' → logprob: -9.839126586914062
    4. ' IDX' → logprob: -10.339126586914062
    5. '[' → logprob: -10.589126586914062
    6. '_IDX' → logprob: -10.839126586914062
    7. 'INDEX' → logprob: -10.839126586914062
    8. '][' → logprob: -11.714126586914062
    9. 'IX' → logprob: -12.214126586914062
    10. '   ' → logprob: -12.464126586914062

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5472990870475769
    2. ']==' → logprob: -1.0472991466522217
    3. '][:' → logprob: -3.2972991466522217
    4. '==' → logprob: -4.297298908233643
    5. '].' → logprob: -5.422298908233643
    6. '][' → logprob: -5.547298908233643
    7. '[' → logprob: -5.922298908233643
    8. '[:' → logprob: -6.297298908233643
    9. ' in' → logprob: -6.922298908233643
    10. '>' → logprob: -7.172298908233643

Token 63: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2984778881072998
    2. 'in' → logprob: -1.7984778881072998
    3. '==' → logprob: -2.6734778881073
    4. ' ==' → logprob: -4.298478126525879
    5. '<' → logprob: -5.673478126525879
    6. '>' → logprob: -6.048478126525879
    7. '.' → logprob: -7.048478126525879
    8. ' <' → logprob: -7.173478126525879
    9. '.startswith' → logprob: -7.923478126525879
    10. '[' → logprob: -8.048478126525879

Token 64: ' WORD' (ID: 73189)
  Prédit: ' WORD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' WORD' → logprob: -0.28956013917922974
    2. ' ' → logprob: -2.414560079574585
    3. ' SUB' → logprob: -2.664560079574585
    4. ' not' → logprob: -3.414560079574585
    5. 'WORDS' → logprob: -4.039560317993164
    6. 'SUB' → logprob: -5.164560317993164
    7. 'WORD' → logprob: -5.289560317993164
    8. '"' → logprob: -5.289560317993164
    9. 'not' → logprob: -5.289560317993164
    10. ' WOR' → logprob: -6.039560317993164

Token 65: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.300083648762666e-05
    2. '[S' → logprob: -11.125053405761719
    3. '[' → logprob: -11.500053405761719
    4. 's' → logprob: -11.875053405761719
    5. ' S' → logprob: -12.000053405761719
    6. ']' → logprob: -12.750053405761719
    7. 'WORDS' → logprob: -12.750053405761719
    8. '```' → logprob: -13.250053405761719
    9. '   ' → logprob: -13.500053405761719
    10. ''S' → logprob: -14.250053405761719

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00017386233957950026
    2. '   ' → logprob: -10.250173568725586
    3. 'SUB' → logprob: -10.375173568725586
    4. ' [' → logprob: -10.500173568725586
    5. '[S' → logprob: -11.125173568725586
    6. '][' → logprob: -11.250173568725586
    7. ')[' → logprob: -11.500173568725586
    8. '[sub' → logprob: -11.625173568725586
    9. '       ' → logprob: -11.750173568725586
    10. ' ' → logprob: -12.250173568725586

Token 67: 'SUB' (ID: 58665)
  Prédit: 'SUB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUB' → logprob: -0.004261461552232504
    2. ' SUB' → logprob: -5.629261493682861
    3. 'IDX' → logprob: -8.754261016845703
    4. '   ' → logprob: -9.129261016845703
    5. '[' → logprob: -9.254261016845703
    6. ']' → logprob: -9.379261016845703
    7. '_SUB' → logprob: -9.879261016845703
    8. ' ' → logprob: -10.254261016845703
    9. '][' → logprob: -10.504261016845703
    10. 'S' → logprob: -11.004261016845703

Token 68: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -0.0011761783389374614
    2. 'IX' → logprob: -8.126175880432129
    3. '_IDX' → logprob: -8.251175880432129
    4. 'S' → logprob: -8.751175880432129
    5. '[' → logprob: -9.001175880432129
    6. 'X' → logprob: -9.126175880432129
    7. ' IDX' → logprob: -9.876175880432129
    8. ']' → logprob: -10.126175880432129
    9. 'WORDS' → logprob: -10.126175880432129
    10. 'DS' → logprob: -10.626175880432129

Token 69: ']' (ID: 60)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.022854287177324295
    2. ']' → logprob: -3.8978543281555176
    3. ':' → logprob: -6.772854328155518
    4. ']:
' → logprob: -7.522854328155518
    5. '):' → logprob: -8.14785385131836
    6. ' and' → logprob: -9.52285385131836
    7. ']:
' → logprob: -9.64785385131836
    8. ']==' → logprob: -9.64785385131836
    9. 'and' → logprob: -10.52285385131836
    10. ' or' → logprob: -10.77285385131836

Token 70: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04557356610894203
    2. ' and' → logprob: -3.4205734729766846
    3. ' :' → logprob: -4.545573711395264
    4. 'and' → logprob: -8.045573234558105
    5. ' or' → logprob: -8.795573234558105
    6. '):' → logprob: -9.170573234558105
    7. '           ' → logprob: -9.170573234558105
    8. '       ' → logprob: -9.295573234558105
    9. '   ' → logprob: -9.420573234558105
    10. '==' → logprob: -9.420573234558105

Token 71: ' WORD' (ID: 73189)
  Prédit: ' WORD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' WORD' → logprob: -0.0010821137111634016
    2. 'WORDS' → logprob: -7.626081943511963
    3. ' ' → logprob: -8.501082420349121
    4. ' '' → logprob: -9.376082420349121
    5. ' WOR' → logprob: -9.376082420349121
    6. ' len' → logprob: -9.501082420349121
    7. 'WORD' → logprob: -10.251082420349121
    8. ' WR' → logprob: -10.876082420349121
    9. '_WORD' → logprob: -10.876082420349121
    10. '"' → logprob: -11.751082420349121

Token 72: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -7.896309739408025e-07
    2. 'WORDS' → logprob: -16.25
    3. 'SOR' → logprob: -16.375
    4. '[S' → logprob: -16.375
    5. 's' → logprob: -16.75
    6. ')' → logprob: -16.75
    7. 'DS' → logprob: -17.0
    8. 'SPATH' → logprob: -17.125
    9. '```' → logprob: -17.5
    10. 'Ѕ' → logprob: -17.625

Token 73: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8074162653647363e-05
    2. ')[' → logprob: -12.625018119812012
    3. '[idx' → logprob: -13.250018119812012
    4. '[Index' → logprob: -13.500018119812012
    5. '[]' → logprob: -13.625018119812012
    6. '[
' → logprob: -13.750018119812012
    7. '```' → logprob: -13.750018119812012
    8. '][' → logprob: -13.750018119812012
    9. ']' → logprob: -13.875018119812012
    10. '<|end|>' → logprob: -13.875018119812012

Token 74: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -0.0026548474561423063
    2. 'SUB' → logprob: -6.002655029296875
    3. '[' → logprob: -9.127655029296875
    4. ' IDX' → logprob: -10.377655029296875
    5. '_IDX' → logprob: -11.502655029296875
    6. 'IX' → logprob: -12.127655029296875
    7. 'ID' → logprob: -12.377655029296875
    8. ']' → logprob: -12.377655029296875
    9. '[idx' → logprob: -12.502655029296875
    10. 'idx' → logprob: -12.627655029296875

Token 75: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4812162220478058
    2. '==' → logprob: -1.4812161922454834
    3. '[' → logprob: -1.9812161922454834
    4. '.startswith' → logprob: -4.7312164306640625
    5. ']' → logprob: -5.8562164306640625
    6. '[:' → logprob: -6.4812164306640625
    7. ']==' → logprob: -7.3562164306640625
    8. '=' → logprob: -7.7312164306640625
    9. ' ' → logprob: -7.8562164306640625
    10. '[:]' → logprob: -7.9812164306640625

Token 76: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.29840534925460815
    2. '==' → logprob: -1.548405408859253
    3. '[' → logprob: -3.298405408859253
    4. ' in' → logprob: -5.673405170440674
    5. '.startswith' → logprob: -6.048405170440674
    6. ' not' → logprob: -7.548405170440674
    7. ' ' → logprob: -7.673405170440674
    8. '[:]' → logprob: -8.048405647277832
    9. '[:' → logprob: -8.298405647277832
    10. '.' → logprob: -8.423405647277832

Token 77: ' WORD' (ID: 73189)
  Prédit: ' WORD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' WORD' → logprob: -0.12884952127933502
    2. 'WORDS' → logprob: -2.128849506378174
    3. 'WORD' → logprob: -7.003849506378174
    4. ' ' → logprob: -7.253849506378174
    5. ' WOR' → logprob: -8.878849983215332
    6. '_WORD' → logprob: -8.878849983215332
    7. ' Words' → logprob: -12.253849983215332
    8. ' words' → logprob: -12.628849983215332
    9. ' WO' → logprob: -12.753849983215332
    10. ' W' → logprob: -13.128849983215332

Token 78: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.8889261304575484e-06
    2. 'WORDS' → logprob: -12.625003814697266
    3. '[S' → logprob: -16.125003814697266
    4. 's' → logprob: -16.625003814697266
    5. 'Words' → logprob: -16.750003814697266
    6. 'SPATH' → logprob: -17.000003814697266
    7. 'Ｓ' → logprob: -17.125003814697266
    8. '[' → logprob: -17.375003814697266
    9. 'Ѕ' → logprob: -17.500003814697266
    10. ' S' → logprob: -17.500003814697266

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.278864359250292e-05
    2. 'SUB' → logprob: -9.625072479248047
    3. '[sub' → logprob: -12.625072479248047
    4. ' ' → logprob: -14.125072479248047
    5. '```' → logprob: -14.375072479248047
    6. '   ' → logprob: -14.375072479248047
    7. ' [' → logprob: -14.875072479248047
    8. '[S' → logprob: -15.375072479248047
    9. '_SUB' → logprob: -15.500072479248047
    10. ' SUB' → logprob: -15.750072479248047

Token 80: 'SUB' (ID: 58665)
  Prédit: 'SUB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SUB' → logprob: -0.0012046386254951358
    2. '[' → logprob: -6.751204490661621
    3. '[sub' → logprob: -10.376204490661621
    4. ' SUB' → logprob: -13.251204490661621
    5. '[S' → logprob: -14.251204490661621
    6. 'sub' → logprob: -15.626204490661621
    7. '.SUB' → logprob: -15.626204490661621
    8. ' ' → logprob: -16.126205444335938
    9. '   ' → logprob: -16.251205444335938
    10. 'WORDS' → logprob: -16.251205444335938

Token 81: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -0.0010311421938240528
    2. 'WORDS' → logprob: -7.376030921936035
    3. 'IX' → logprob: -9.001030921936035
    4. 'IDS' → logprob: -9.626030921936035
    5. 'STR' → logprob: -10.126030921936035
    6. '_IDX' → logprob: -10.126030921936035
    7. 'idx' → logprob: -10.626030921936035
    8. 'S' → logprob: -10.751030921936035
    9. 'INDEX' → logprob: -11.251030921936035
    10. 'ID' → logprob: -11.376030921936035

Token 82: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006381387356668711
    2. ':' → logprob: -5.131381511688232
    3. '):
' → logprob: -8.631381034851074
    4. ' ):' → logprob: -8.631381034851074
    5. ')' → logprob: -9.756381034851074
    6. '       ' → logprob: -11.006381034851074
    7. ']:' → logprob: -12.506381034851074
    8. '   ' → logprob: -12.756381034851074
    9. ' :' → logprob: -12.881381034851074
    10. '):
' → logprob: -13.256381034851074

Token 83: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13214834034442902
    2. '           ' → logprob: -2.382148265838623
    3. ':
' → logprob: -3.507148265838623
    4. '       ' → logprob: -7.382148265838623
    5. ' :' → logprob: -7.632148265838623
    6. '):' → logprob: -9.257148742675781
    7. ' and' → logprob: -9.632148742675781
    8. ' :
' → logprob: -10.007148742675781
    9. '):
' → logprob: -10.507148742675781
    10. ' or' → logprob: -10.882148742675781

Token 84: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.8315067887306213
    2. '               ' → logprob: -1.0815067291259766
    3. 'C' (adapté à ' C') → logprob: -1.8315067291259766
    4. '           ' → logprob: -3.0815067291259766
    5. ' SUB' → logprob: -4.956506729125977
    6. 'SUB' → logprob: -5.206506729125977
    7. ' ' → logprob: -6.331506729125977
    8. ' ' → logprob: -6.706506729125977
    9. '                
' → logprob: -6.831506729125977
    10. ' 
' → logprob: -7.581506729125977

Token 85: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759779214859009
    2. '+=' → logprob: -0.8259779214859009
    3. '=' → logprob: -10.95097827911377
    4. '+' → logprob: -11.32597827911377
    5. ' =' → logprob: -11.95097827911377
    6. '   ' → logprob: -13.57597827911377
    7. ' +' → logprob: -15.20097827911377
    8. '+='' → logprob: -15.20097827911377
    9. '    ' → logprob: -15.57597827911377
    10. ' ' → logprob: -15.95097827911377

Token 86: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326029300689697
    2. '1' → logprob: -0.7576029300689697
    3. '<|end|>' → logprob: -13.63260269165039
    4. '2' → logprob: -14.25760269165039
    5. ' ' → logprob: -14.50760269165039
    6. '  ' → logprob: -14.75760269165039
    7. '   ' → logprob: -14.88260269165039
    8. '    ' → logprob: -16.13260269165039
    9. '```' → logprob: -16.38260269165039
    10. '+' → logprob: -16.69510269165039

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.000019073486328
    3. '2' → logprob: -13.500019073486328
    4. 'SUB' → logprob: -14.500019073486328
    5. '10' → logprob: -16.750019073486328
    6. '   ' → logprob: -17.250019073486328
    7. '3' → logprob: -17.500019073486328
    8. '-' → logprob: -17.875019073486328
    9. 'WORD' → logprob: -17.875019073486328
    10. '100' → logprob: -17.875019073486328

Token 88: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3602101504802704
    2. '
' → logprob: -1.2352101802825928
    3. '       ' → logprob: -5.860209941864014
    4. '            
' → logprob: -5.985209941864014
    5. ' 
' → logprob: -6.360209941864014
    6. '               ' → logprob: -6.610209941864014
    7. '\n' → logprob: -6.735209941864014
    8. '        
' → logprob: -6.985209941864014
    9. '
' → logprob: -8.110210418701172
    10. '  
' → logprob: -8.235210418701172

Token 89: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01102023757994175
    2. '               ' → logprob: -5.636020183563232
    3. '       ' → logprob: -6.261020183563232
    4. '            
' → logprob: -6.261020183563232
    5. ' 
' → logprob: -6.636020183563232
    6. '
' → logprob: -6.636020183563232
    7. '        
' → logprob: -8.01102066040039
    8. '                
' → logprob: -8.76102066040039
    9. '\n' → logprob: -8.88602066040039
    10. '    
' → logprob: -10.13602066040039

Token 90: ' SUB' (ID: 31189)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003525002161040902
    2. '           ' → logprob: -6.0035247802734375
    3. ' SUB' → logprob: -7.1285247802734375
    4. '   ' → logprob: -9.253524780273438
    5. 'SUB' (adapté à ' SUB') → logprob: -9.378524780273438
    6. '
' → logprob: -10.628524780273438
    7. '               ' → logprob: -10.753524780273438
    8. '      ' → logprob: -12.628524780273438
    9. '        
' → logprob: -12.878524780273438
    10. ' 
' → logprob: -13.128524780273438

Token 91: 'IDX' (ID: 107492)
  Prédit: 'IDX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' → logprob: -1.2664456789934775e-06
    2. 'ID' → logprob: -14.000000953674316
    3. 'idx' → logprob: -15.750000953674316
    4. 'SUB' → logprob: -16.125001907348633
    5. 'INDEX' → logprob: -16.625001907348633
    6. ' IDX' → logprob: -16.875001907348633
    7. 'IND' → logprob: -17.125001907348633
    8. '_IDX' → logprob: -18.125001907348633
    9. 'IX' → logprob: -19.625001907348633
    10. 'I' → logprob: -19.625001907348633

Token 92: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8438063859939575
    2. '+=' → logprob: -0.8438063859939575
    3. '+' → logprob: -1.9688063859939575
    4. ' +' → logprob: -8.593806266784668
    5. '=' → logprob: -10.468806266784668
    6. '++' → logprob: -11.843806266784668
    7. ' ' → logprob: -12.593806266784668
    8. '+="' → logprob: -12.968806266784668
    9. '<|end|>' → logprob: -13.218806266784668
    10. '+='' → logprob: -13.343806266784668

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '<|end|>' → logprob: -17.250261306762695
    4. '   ' → logprob: -18.500261306762695
    5. '+' → logprob: -19.250261306762695
    6. '۱' → logprob: -19.750261306762695
    7. '```' → logprob: -19.750261306762695
    8. '１' → logprob: -19.875261306762695
    9. '  ' → logprob: -19.875261306762695
    10. ' ' → logprob: -21.312761306762695

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -17.250001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '```' → logprob: -17.625001907348633
    6. '  ' → logprob: -19.375001907348633
    7. '۱' → logprob: -19.625001907348633
    8. '+' → logprob: -20.375001907348633
    9. '１' → logprob: -20.625001907348633
    10. '१' → logprob: -20.937501907348633

Token 95: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.282706081867218
    2. '
' → logprob: -1.4077060222625732
    3. 'IDX' → logprob: -7.032706260681152
    4. '    
' → logprob: -8.157706260681152
    5. '<|end|>' → logprob: -8.782706260681152
    6. ' IDX' → logprob: -10.032706260681152
    7. '
' → logprob: -10.157706260681152
    8. '\n' → logprob: -10.782706260681152
    9. '	ID' → logprob: -10.782706260681152
    10. '```' → logprob: -10.782706260681152

Token 96: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8386217951774597
    2. '   ' → logprob: -0.9636217951774597
    3. 'IDX' → logprob: -1.7136218547821045
    4. 'ID' → logprob: -5.838621616363525
    5. ' IDX' → logprob: -6.463621616363525
    6. '    
' → logprob: -8.213622093200684
    7. '	ID' → logprob: -8.463622093200684
    8. '```' → logprob: -8.713622093200684
    9. '<|end|>' → logprob: -8.838622093200684
    10. ' ' → logprob: -9.088622093200684

Token 97: ' IDX' (ID: 123225)
  Prédit: 'IDX'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDX' (adapté à ' IDX') → logprob: -0.012005183845758438
    2. '   ' → logprob: -5.13700532913208
    3. ' IDX' → logprob: -5.13700532913208
    4. 'ID' → logprob: -9.012004852294922
    5. '_IDX' → logprob: -10.012004852294922
    6. ' ' → logprob: -12.012004852294922
    7. '	ID' → logprob: -12.887004852294922
    8. 'IND' → logprob: -13.012004852294922
    9. '  ' → logprob: -13.512004852294922
    10. '
' → logprob: -13.887004852294922

Token 98: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6112672686576843
    2. ' +=' → logprob: -0.8612672686576843
    3. '+' → logprob: -3.361267328262329
    4. '=' → logprob: -11.48626708984375
    5. ' +' → logprob: -12.23626708984375
    6. '++' → logprob: -13.61126708984375
    7. ' ' → logprob: -13.98626708984375
    8. '+="' → logprob: -14.36126708984375
    9. '+++' → logprob: -14.36126708984375
    10. '+='' → logprob: -14.48626708984375

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -17.12537956237793
    4. '```' → logprob: -18.12537956237793
    5. '<|end|>' → logprob: -18.75037956237793
    6. '  ' → logprob: -19.50037956237793
    7. '+' → logprob: -19.62537956237793
    8. ' ' → logprob: -20.25037956237793
    9. '    ' → logprob: -20.25037956237793
    10. '۱' → logprob: -20.37537956237793

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.25000762939453
    4. '```' → logprob: -19.37500762939453
    5. '  ' → logprob: -19.75000762939453
    6. '１' → logprob: -20.12500762939453
    7. '۱' → logprob: -20.75000762939453
    8. '2' → logprob: -21.18750762939453
    9. '१' → logprob: -21.18750762939453
    10. '0' → logprob: -21.37500762939453

Token 101: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4610273838043213
    2. '
' → logprob: -1.5860273838043213
    3. '<|end|>' → logprob: -1.8360273838043213
    4. '#' → logprob: -6.211027145385742
    5. ')' → logprob: -6.336027145385742
    6. '```' → logprob: -7.836027145385742
    7. '#print' → logprob: -8.211027145385742
    8. '\n' → logprob: -8.461027145385742
    9. ' print' → logprob: -8.836027145385742
    10. '<|end|>' → logprob: -9.461027145385742

Token 102: 'K' (ID: 42)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20620028674602509
    2. '<|end|>' → logprob: -1.8312002420425415
    3. '#' → logprob: -4.081200122833252
    4. '
' → logprob: -5.456200122833252
    5. ')' → logprob: -5.831200122833252
    6. '```' → logprob: -7.206200122833252
    7. '#print' → logprob: -7.331200122833252
    8. '[' → logprob: -8.70620059967041
    9. ' print' → logprob: -9.08120059967041
    10. '\n' → logprob: -9.70620059967041

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12804803252220154
    2. ' =' → logprob: -2.1280479431152344
    3. '+=' → logprob: -8.378047943115234
    4. '#' → logprob: -9.378047943115234
    5. '+' → logprob: -9.378047943115234
    6. ' +=' → logprob: -9.503047943115234
    7. ')' → logprob: -9.503047943115234
    8. '=C' → logprob: -9.753047943115234
    9. ' ' → logprob: -10.003047943115234
    10. '(' → logprob: -10.003047943115234

Token 104: ' ' (ID: 220)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5796751976013184
    2. ' C' → logprob: -0.8296751976013184
    3. ' max' → logprob: -7.329675197601318
    4. ' ' → logprob: -7.454675197601318
    5. 'int' → logprob: -7.829675197601318
    6. 'max' → logprob: -8.079675674438477
    7. ' sorted' → logprob: -8.079675674438477
    8. '0' → logprob: -8.454675674438477
    9. 'len' → logprob: -8.579675674438477
    10. ' int' → logprob: -8.579675674438477

Token 105: '0' (ID: 15)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00473865307867527
    2. 'int' → logprob: -5.879738807678223
    3. 'N' → logprob: -7.379738807678223
    4. ' C' → logprob: -8.004738807678223
    5. 'len' → logprob: -8.129738807678223
    6. 'max' → logprob: -8.504738807678223
    7. '0' → logprob: -8.754738807678223
    8. 'str' → logprob: -10.004738807678223
    9. 'sorted' → logprob: -10.004738807678223
    10. 'min' → logprob: -10.379738807678223

Token 106: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.45069557428359985
    2. 'for' → logprob: -1.200695514678955
    3. '
' → logprob: -3.700695514678955
    4. ' while' → logprob: -3.700695514678955
    5. ' for' → logprob: -5.075695514678955
    6. '<|end|>' → logprob: -6.075695514678955
    7. 'IDX' → logprob: -6.700695514678955
    8. 'K' → logprob: -7.200695514678955
    9. 'IND' → logprob: -8.200695991516113
    10. ' ' → logprob: -8.325695991516113

Token 107: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20678800344467163
    2. 'IDX' → logprob: -2.2067880630493164
    3. 'for' → logprob: -2.8317880630493164
    4. 'idx' → logprob: -5.331788063049316
    5. '
' → logprob: -5.456788063049316
    6. ' while' → logprob: -5.831788063049316
    7. 'K' → logprob: -6.331788063049316
    8. 'WORDS' → logprob: -6.706788063049316
    9. '<|end|>' → logprob: -7.331788063049316
    10. 'WORD' → logprob: -8.456788063049316

Token 108: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.2152845412492752
    2. 'K' → logprob: -1.7152845859527588
    3. ' True' → logprob: -4.96528434753418
    4. ' C' → logprob: -6.09028434753418
    5. ' ' → logprob: -6.46528434753418
    6. 'True' → logprob: -6.46528434753418
    7. 'C' → logprob: -7.46528434753418
    8. ' IDX' → logprob: -7.96528434753418
    9. ' N' → logprob: -8.71528434753418
    10. 'IDX' → logprob: -9.21528434753418

Token 109: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1456999033689499
    2. '<' → logprob: -2.020699977874756
    3. '<N' → logprob: -5.895699977874756
    4. ' ' → logprob: -8.520699501037598
    5. '<K' → logprob: -10.145699501037598
    6. 'N' → logprob: -11.270699501037598
    7. '<len' → logprob: -12.145699501037598
    8. ' N' → logprob: -12.520699501037598
    9. '<n' → logprob: -12.770699501037598
    10. ' <=' → logprob: -13.020699501037598

Token 110: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11655686795711517
    2. 'C' → logprob: -2.4915568828582764
    3. ' N' → logprob: -3.8665568828582764
    4. ' C' → logprob: -5.241556644439697
    5. 'len' → logprob: -7.741556644439697
    6. ' ' → logprob: -8.116557121276855
    7. '   ' → logprob: -9.366557121276855
    8. '  ' → logprob: -9.491557121276855
    9. ' len' → logprob: -9.491557121276855
    10. '10' → logprob: -12.116557121276855

Token 111: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6800387501716614
    2. ':
' → logprob: -1.0550386905670166
    3. ' and' → logprob: -2.0550386905670166
    4. '   ' → logprob: -4.305038928985596
    5. ' :
' → logprob: -6.305038928985596
    6. 'and' → logprob: -6.805038928985596
    7. ' :' → logprob: -7.430038928985596
    8. ' ' → logprob: -10.180038452148438
    9. '    ' → logprob: -11.805038452148438
    10. ':

' → logprob: -11.805038452148438

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005398084758780897
    2. ' ' → logprob: -7.875539779663086
    3. '2' → logprob: -8.875539779663086
    4. '   ' → logprob: -11.875539779663086
    5. '3' → logprob: -12.188039779663086
    6. '-' → logprob: -13.250539779663086
    7. '  ' → logprob: -14.188039779663086
    8. 'K' → logprob: -14.813039779663086
    9. '    ' → logprob: -14.875539779663086
    10. '4' → logprob: -15.063039779663086

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7585020661354065
    2. ':
' → logprob: -0.8835020661354065
    3. '   ' → logprob: -2.5085020065307617
    4. ' and' → logprob: -3.3835020065307617
    5. ' :
' → logprob: -6.258502006530762
    6. ' :' → logprob: -7.383502006530762
    7. 'and' → logprob: -8.633502006530762
    8. ' ' → logprob: -9.758502006530762
    9. '<|end|>' → logprob: -10.133502006530762
    10. ' if' → logprob: -10.258502006530762

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013475831598043442
    2. 'if' → logprob: -4.7634758949279785
    3. 'print' → logprob: -6.0134758949279785
    4. ' if' → logprob: -6.1384758949279785
    5. 'WORD' → logprob: -9.88847541809082
    6. ' print' → logprob: -10.26347541809082
    7. 'for' → logprob: -10.63847541809082
    8. 'WORDS' → logprob: -10.76347541809082
    9. 'L' → logprob: -11.13847541809082
    10. 'K' → logprob: -11.63847541809082

Token 115: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6336523294448853
    2. '   ' → logprob: -1.1336523294448853
    3. 'print' → logprob: -2.0086522102355957
    4. 'L' → logprob: -5.758652210235596
    5. ' if' → logprob: -6.133652210235596
    6. 'WORDS' → logprob: -6.758652210235596
    7. 'M' → logprob: -7.008652210235596
    8. 'SUB' → logprob: -7.133652210235596
    9. 'K' → logprob: -7.383652210235596
    10. 'WORD' → logprob: -7.383652210235596

Token 116: ' WORD' (ID: 73189)
  Prédit: 'WORDS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WORDS' → logprob: -0.5768439173698425
    2. ' WORD' → logprob: -0.9518439173698425
    3. 'len' → logprob: -3.4518439769744873
    4. ' len' → logprob: -4.201843738555908
    5. 'WORD' → logprob: -5.451843738555908
    6. ' ' → logprob: -8.326844215393066
    7. 'ORD' → logprob: -8.576844215393066
    8. ''' → logprob: -8.701844215393066
    9. '(len' → logprob: -9.076844215393066
    10. '   ' → logprob: -9.201844215393066

Token 117: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00020294437126722187
    2. 'WORDS' → logprob: -8.625203132629395
    3. 'Words' → logprob: -12.500203132629395
    4. '_WORD' → logprob: -12.875203132629395
    5. 'SOR' → logprob: -12.875203132629395
    6. 'ORD' → logprob: -13.000203132629395
    7. '_words' → logprob: -13.250203132629395
    8. 'OS' → logprob: -13.250203132629395
    9. 'DS' → logprob: -13.750203132629395
    10. '[S' → logprob: -13.875203132629395

Token 118: '[K' (ID: 137571)
  Prédit: '[K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[K' → logprob: -0.00018863992590922862
    2. '[' → logprob: -8.750188827514648
    3. 'K' → logprob: -11.750188827514648
    4. '[k' → logprob: -11.875188827514648
    5. ' [' → logprob: -12.000188827514648
    6. '[len' → logprob: -13.625188827514648
    7. ' ==' → logprob: -13.625188827514648
    8. '==' → logprob: -13.750188827514648
    9. ' K' → logprob: -13.875188827514648
    10. '[L' → logprob: -14.000188827514648

Token 119: '][-' (ID: 162298)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07202699035406113
    2. '][' → logprob: -3.5720269680023193
    3. ']==' → logprob: -3.6970269680023193
    4. '][:' → logprob: -4.572027206420898
    5. '+' → logprob: -6.322027206420898
    6. '][-' → logprob: -6.697027206420898
    7. '].' → logprob: -6.947027206420898
    8. ']!=' → logprob: -7.447027206420898
    9. ']<' → logprob: -7.697027206420898
    10. '>' → logprob: -8.322027206420898

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01960587128996849
    2. '2' → logprob: -4.76960563659668
    3. '3' → logprob: -4.76960563659668
    4. '5' → logprob: -7.39460563659668
    5. 'K' → logprob: -7.39460563659668
    6. 'len' → logprob: -7.89460563659668
    7. '4' → logprob: -8.01960563659668
    8. '6' → logprob: -8.89460563659668
    9. '10' → logprob: -9.39460563659668
    10. 'LEN' → logprob: -9.39460563659668

Token 121: ':]' (ID: 67377)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016012312844395638
    2. ']==' → logprob: -4.891012191772461
    3. ' ]' → logprob: -5.391012191772461
    4. '==' → logprob: -6.016012191772461
    5. ' ==' → logprob: -7.266012191772461
    6. ':]' → logprob: -8.391012191772461
    7. ']!=' → logprob: -9.016012191772461
    8. ']=='' → logprob: -9.516012191772461
    9. '!=' → logprob: -9.766012191772461
    10. ')' → logprob: -10.141012191772461

Token 122: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.019445717334747314
    2. ' ==' → logprob: -4.144445896148682
    3. '!=' → logprob: -5.894445896148682
    4. 'is' → logprob: -8.769445419311523
    5. '>' → logprob: -9.269445419311523
    6. 'in' → logprob: -9.394445419311523
    7. '==
' → logprob: -10.144445419311523
    8. '[' → logprob: -10.269445419311523
    9. '=' → logprob: -10.394445419311523
    10. ')' → logprob: -10.519445419311523

Token 123: ' WORD' (ID: 73189)
  Prédit: 'WORDS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WORDS' → logprob: -0.029993455857038498
    2. ' WORD' → logprob: -3.5299935340881348
    3. 'WORD' → logprob: -8.904993057250977
    4. '_WORD' → logprob: -9.654993057250977
    5. ''' → logprob: -10.904993057250977
    6. 'words' → logprob: -11.654993057250977
    7. ' words' → logprob: -12.404993057250977
    8. ' ' → logprob: -12.654993057250977
    9. '"' → logprob: -13.529993057250977
    10. '  ' → logprob: -13.529993057250977

Token 124: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00020222914463374764
    2. '[S' → logprob: -9.500202178955078
    3. '[K' → logprob: -9.750202178955078
    4. 'SK' → logprob: -9.875202178955078
    5. 's' → logprob: -11.625202178955078
    6. ' S' → logprob: -13.375202178955078
    7. 'ST' → logprob: -14.000202178955078
    8. 'Ｓ' → logprob: -14.250202178955078
    9. 'SZ' → logprob: -14.375202178955078
    10. '"S' → logprob: -14.625202178955078

Token 125: '[K' (ID: 137571)
  Prédit: '[K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[K' → logprob: -0.00017565040616318583
    2. '[' → logprob: -9.125175476074219
    3. 'K' → logprob: -9.875175476074219
    4. '[k' → logprob: -11.375175476074219
    5. '[
' → logprob: -14.250175476074219
    6. '   ' → logprob: -14.375175476074219
    7. ' [' → logprob: -14.625175476074219
    8. '```' → logprob: -15.125175476074219
    9. '[N' → logprob: -15.250175476074219
    10. '(K' → logprob: -15.375175476074219

Token 126: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000725656165741384
    2. ' +' → logprob: -7.250725746154785
    3. '[' → logprob: -11.750725746154785
    4. '][' → logprob: -12.625725746154785
    5. '1' → logprob: -13.500725746154785
    6. ' ' → logprob: -14.250725746154785
    7. '+[' → logprob: -14.500725746154785
    8. '+
' → logprob: -14.750725746154785
    9. '[-' → logprob: -14.875725746154785
    10. '-' → logprob: -15.250725746154785

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03402911126613617
    2. '0' → logprob: -3.409029006958008
    3. ' ' → logprob: -8.409029006958008
    4. 'K' → logprob: -8.784029006958008
    5. '```' → logprob: -13.284029006958008
    6. '   ' → logprob: -13.659029006958008
    7. ']' → logprob: -13.909029006958008
    8. '-' → logprob: -13.909029006958008
    9. ' K' → logprob: -14.784029006958008
    10. '  ' → logprob: -14.909029006958008

Token 128: '][:' (ID: 63357)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.7243594527244568
    2. '][-' → logprob: -0.9743594527244568
    3. '[' → logprob: -2.5993595123291016
    4. '[-' → logprob: -3.0993595123291016
    5. '][:' → logprob: -4.099359512329102
    6. ' ' → logprob: -7.474359512329102
    7. '[:-' → logprob: -8.224359512329102
    8. '   ' → logprob: -8.724359512329102
    9. '[:' → logprob: -8.849359512329102
    10. ':' → logprob: -8.974359512329102

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025860045570880175
    2. '-' → logprob: -6.0025858879089355
    3. ' ' → logprob: -9.752586364746094
    4. ' -' → logprob: -10.752586364746094
    5. 'len' → logprob: -11.252586364746094
    6. ']' → logprob: -12.002586364746094
    7. '2' → logprob: -12.502586364746094
    8. '   ' → logprob: -12.502586364746094
    9. '3' → logprob: -14.252586364746094
    10. '  ' → logprob: -14.627586364746094

Token 130: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2569080889225006
    2. ':
' → logprob: -1.8819080591201782
    3. '):' → logprob: -3.3819081783294678
    4. '):
' → logprob: -3.3819081783294678
    5. '   ' → logprob: -5.756907939910889
    6. '       ' → logprob: -6.006907939910889
    7. ' and' → logprob: -8.131908416748047
    8. ')' → logprob: -8.756908416748047
    9. ' or' → logprob: -10.006908416748047
    10. ' ):
' → logprob: -10.006908416748047

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2752797305583954
    2. '   ' → logprob: -1.9002797603607178
    3. ' K' → logprob: -2.7752797603607178
    4. ' break' → logprob: -4.275279521942139
    5. 'K' → logprob: -4.650279521942139
    6. '    ' → logprob: -6.150279521942139
    7. ' print' → logprob: -7.275279521942139
    8. ':
' → logprob: -7.400279521942139
    9. 'break' → logprob: -7.650279521942139
    10. 'print' → logprob: -8.025279998779297

Token 132: ' C' (ID: 363)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38843339681625366
    2. 'break' → logprob: -1.7634334564208984
    3. '       ' → logprob: -3.1384334564208984
    4. 'K' → logprob: -3.1384334564208984
    5. ' break' → logprob: -3.5134334564208984
    6. ' print' → logprob: -4.513433456420898
    7. '   ' → logprob: -4.638433456420898
    8. 'C' (adapté à ' C') → logprob: -5.013433456420898
    9. ' K' → logprob: -6.013433456420898
    10. '           ' → logprob: -6.013433456420898

Token 133: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.28302058577537537
    2. ' +=' → logprob: -1.4080206155776978
    3. '=' → logprob: -6.533020496368408
    4. ' =' → logprob: -8.908020973205566
    5. '+' → logprob: -9.533020973205566
    6. '       ' → logprob: -9.908020973205566
    7. '   ' → logprob: -10.158020973205566
    8. ' -=' → logprob: -10.283020973205566
    9. '-=' → logprob: -10.408020973205566
    10. 'break' → logprob: -11.158020973205566

Token 134: ' C' (ID: 363)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7128435373306274
    2. 'C' → logprob: -1.5878435373306274
    3. '0' → logprob: -1.8378435373306274
    4. 'max' → logprob: -3.337843418121338
    5. '100' → logprob: -3.462843418121338
    6. 'K' → logprob: -3.962843418121338
    7. '999' → logprob: -4.212843418121338
    8. 'float' → logprob: -4.462843418121338
    9. '1' → logprob: -4.712843418121338
    10. 'N' → logprob: -4.837843418121338

Token 135: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0722489207983017
    2. 'C' → logprob: -3.072248935699463
    3. 'K' → logprob: -4.447248935699463
    4. '0' → logprob: -5.072248935699463
    5. '+=' → logprob: -6.947248935699463
    6. '+C' → logprob: -7.322248935699463
    7. '+
' → logprob: -7.322248935699463
    8. '-' → logprob: -7.572248935699463
    9. 'break' → logprob: -7.572248935699463
    10. 'max' → logprob: -8.197248458862305

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041053479071706533
    2. ' ' → logprob: -7.875410556793213
    3. '2' → logprob: -11.250410079956055
    4. '10' → logprob: -12.250410079956055
    5. '100' → logprob: -12.375410079956055
    6. '0' → logprob: -13.375410079956055
    7. 'N' → logprob: -13.750410079956055
    8. '11' → logprob: -14.500410079956055
    9. '(' → logprob: -14.500410079956055
    10. '3' → logprob: -14.625410079956055

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012678056373260915
    2. '2' → logprob: -10.125126838684082
    3. '100' → logprob: -10.500126838684082
    4. '10' → logprob: -10.750126838684082
    5. ' ' → logprob: -11.250126838684082
    6. '11' → logprob: -12.875126838684082
    7. '3' → logprob: -13.000126838684082
    8. 'N' → logprob: -13.125126838684082
    9. '999' → logprob: -13.437626838684082
    10. '0' → logprob: -13.500126838684082

Token 138: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008746705949306488
    2. '
' → logprob: -4.75874662399292
    3. '    
' → logprob: -9.133747100830078
    4. '  
' → logprob: -12.008747100830078
    5. 'K' → logprob: -12.508747100830078
    6. ' 
' → logprob: -12.508747100830078
    7. ' K' → logprob: -12.633747100830078
    8. '
' → logprob: -13.258747100830078
    9. '\n' → logprob: -13.508747100830078
    10. '        
' → logprob: -13.758747100830078

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016612421721220016
    2. 'K' → logprob: -4.266612529754639
    3. ' K' → logprob: -6.016612529754639
    4. '	K' → logprob: -12.89161205291748
    5. ' ' → logprob: -13.14161205291748
    6. '
' → logprob: -13.14161205291748
    7. '       ' → logprob: -13.76661205291748
    8. '  ' → logprob: -15.39161205291748
    9. '    
' → logprob: -16.391613006591797
    10. 'k' → logprob: -16.766613006591797

Token 140: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' (adapté à ' K') → logprob: -0.0011774895247071981
    2. ' K' → logprob: -6.7511773109436035
    3. '   ' → logprob: -12.001177787780762
    4. '
' → logprob: -14.126177787780762
    5. ' ' → logprob: -15.626177787780762
    6. 'break' → logprob: -15.626177787780762
    7. '  ' → logprob: -17.001176834106445
    8. ' break' → logprob: -17.001176834106445
    9. 'k' → logprob: -18.001176834106445
    10. '\
' → logprob: -18.501176834106445

Token 141: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1741994023323059
    2. ' +=' → logprob: -1.9241993427276611
    3. '+' → logprob: -4.29919958114624
    4. '=' → logprob: -8.174199104309082
    5. ' +' → logprob: -11.799199104309082
    6. '++' → logprob: -12.674199104309082
    7. ' ' → logprob: -13.424199104309082
    8. '+="' → logprob: -13.549199104309082
    9. '+='' → logprob: -13.549199104309082
    10. '+++' → logprob: -14.049199104309082

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.75023078918457
    4. '```' → logprob: -18.75023078918457
    5. '  ' → logprob: -19.62523078918457
    6. ' ' → logprob: -20.06273078918457
    7. '１' → logprob: -20.12523078918457
    8. '+' → logprob: -20.56273078918457
    9. '۱' → logprob: -20.68773078918457
    10. '0' → logprob: -21.06273078918457

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.125003814697266
    4. '   ' → logprob: -18.750003814697266
    5. '<|end|>' → logprob: -19.187503814697266
    6. '１' → logprob: -19.750003814697266
    7. '  ' → logprob: -19.750003814697266
    8. '2' → logprob: -19.750003814697266
    9. '۱' → logprob: -20.250003814697266
    10. '१' → logprob: -20.625003814697266

Token 144: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004721919074654579
    2. '<|end|>' → logprob: -5.6297221183776855
    3. '#' → logprob: -7.2547221183776855
    4. '
' → logprob: -8.629721641540527
    5. ')' → logprob: -8.879721641540527
    6. ' print' → logprob: -10.254721641540527
    7. '#print' → logprob: -10.504721641540527
    8. '```' → logprob: -11.129721641540527
    9. '\n' → logprob: -12.754721641540527
    10. 'for' → logprob: -13.129721641540527

Token 145: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.954393079970032e-05
    2. ')' → logprob: -10.500049591064453
    3. '#' → logprob: -12.000049591064453
    4. ' print' → logprob: -12.250049591064453
    5. '<|end|>' → logprob: -12.250049591064453
    6. '#print' → logprob: -13.250049591064453
    7. '
' → logprob: -13.625049591064453
    8. 'if' → logprob: -13.750049591064453
    9. '```' → logprob: -14.750049591064453
    10. 'for' → logprob: -14.750049591064453

Token 146: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029829632490873337
    2. '(C' → logprob: -3.529829740524292
    3. '('' → logprob: -9.529829978942871
    4. '((' → logprob: -12.904829978942871
    5. '(
' → logprob: -13.779829978942871
    6. '("' → logprob: -14.029829978942871
    7. '("("' → logprob: -14.154829978942871
    8. '()' → logprob: -14.404829978942871
    9. '(`' → logprob: -14.654829978942871
    10. '(

' → logprob: -15.904829978942871

Token 147: 'Yes' (ID: 13022)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03132229298353195
    2. '",' → logprob: -4.031322479248047
    3. '{' → logprob: -4.906322479248047
    4. '"C' → logprob: -5.406322479248047
    5. '"' → logprob: -7.656322479248047
    6. '")' → logprob: -8.156322479248047
    7. '{}' → logprob: -8.406322479248047
    8. '{}".' → logprob: -9.531322479248047
    9. '"+' → logprob: -10.156322479248047
    10. ' C' → logprob: -10.656322479248047

Token 148: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.020662521943449974
    2. '")' → logprob: -3.895662546157837
    3. ' if' → logprob: -9.895662307739258
    4. 'if' → logprob: -10.520662307739258
    5. '!"' → logprob: -10.770662307739258
    6. '!")' → logprob: -11.895662307739258
    7. '!' → logprob: -12.395662307739258
    8. ''' → logprob: -13.520662307739258
    9. '")
' → logprob: -13.520662307739258
    10. ')' → logprob: -13.770662307739258

Token 149: '*(' (ID: 14793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011639113072305918
    2. ',' → logprob: -7.376163959503174
    3. ' if' → logprob: -8.126163482666016
    4. ',)' → logprob: -9.001163482666016
    5. 'if' → logprob: -9.376163482666016
    6. '")' → logprob: -11.001163482666016
    7. ' )' → logprob: -11.501163482666016
    8. '))' → logprob: -13.501163482666016
    9. ');' → logprob: -13.751163482666016
    10. '()' → logprob: -14.626163482666016

Token 150: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0035065878182649612
    2. ' C' → logprob: -6.128506660461426
    3. '0' → logprob: -8.003506660461426
    4. '(C' → logprob: -8.128506660461426
    5. '1' → logprob: -8.253506660461426
    6. 'N' → logprob: -8.503506660461426
    7. 'not' → logprob: -8.628506660461426
    8. 'int' → logprob: -11.253506660461426
    9. '(' → logprob: -11.628506660461426
    10. ' not' → logprob: -11.628506660461426

Token 151: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007739955093711615
    2. ' ==' → logprob: -5.007740020751953
    3. '>' → logprob: -7.007740020751953
    4. '!=' → logprob: -9.632740020751953
    5. '<' → logprob: -10.632740020751953
    6. ')' → logprob: -11.257740020751953
    7. '=' → logprob: -12.257740020751953
    8. '<=' → logprob: -12.257740020751953
    9. ' >' → logprob: -12.382740020751953
    10. '0' → logprob: -14.007740020751953

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -16.875024795532227
    4. '1' → logprob: -17.500024795532227
    5. '00' → logprob: -18.562524795532227
    6. '=' → logprob: -18.750024795532227
    7. '```' → logprob: -18.937524795532227
    8. '
' → logprob: -19.000024795532227
    9. '   ' → logprob: -19.125024795532227
    10. '  ' → logprob: -19.125024795532227

Token 153: ')+"' (ID: 54582)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1604144275188446
    2. '))' → logprob: -1.910414457321167
    3. ')+' → logprob: -8.910414695739746
    4. '+' → logprob: -10.410414695739746
    5. ')))' → logprob: -11.660414695739746
    6. ' )' → logprob: -12.035414695739746
    7. '+)' → logprob: -12.660414695739746
    8. ')")' → logprob: -13.410414695739746
    9. ')+"' → logprob: -13.910414695739746
    10. ')
' → logprob: -14.160414695739746

Token 154: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.1517960956552997e-05
    2. '"No' → logprob: -11.500011444091797
    3. ' No' → logprob: -13.625011444091797
    4. 'Yes' → logprob: -16.750011444091797
    5. 'NO' → logprob: -16.750011444091797
    6. '\n' → logprob: -17.500011444091797
    7. '"' → logprob: -18.000011444091797
    8. '")' → logprob: -18.625011444091797
    9. '.No' → logprob: -19.625011444091797
    10. '
' → logprob: -19.625011444091797

Token 155: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.8206473871250637e-05
    2. '"' → logprob: -10.750028610229492
    3. '")
' → logprob: -12.625028610229492
    4. ')")' → logprob: -13.750028610229492
    5. ')' → logprob: -14.125028610229492
    6. '"))' → logprob: -14.375028610229492
    7. '!")' → logprob: -14.750028610229492
    8. '("' → logprob: -16.000028610229492
    9. '"*' → logprob: -16.250028610229492
    10. '")}' → logprob: -16.375028610229492

Token 156: '*(' (ID: 14793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015359772078227252
    2. '))' → logprob: -9.625153541564941
    3. '")' → logprob: -10.250153541564941
    4. '())' → logprob: -10.375153541564941
    5. ')")' → logprob: -11.125153541564941
    6. ')`' → logprob: -13.750153541564941
    7. ')**' → logprob: -13.875153541564941
    8. '`)' → logprob: -14.000153541564941
    9. '()' → logprob: -14.000153541564941
    10. '')' → logprob: -14.875153541564941

Token 157: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -2.8206473871250637e-05
    2. '1' → logprob: -11.000028610229492
    3. ' C' → logprob: -11.625028610229492
    4. 'not' → logprob: -13.125028610229492
    5. '(C' → logprob: -14.750028610229492
    6. 'c' → logprob: -16.625028610229492
    7. '0' → logprob: -17.375028610229492
    8. ' ' → logprob: -17.750028610229492
    9. ' not' → logprob: -17.875028610229492
    10. '(' → logprob: -17.875028610229492

Token 158: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.007458138279616833
    2. '>' → logprob: -5.132458209991455
    3. ' !=' → logprob: -6.507458209991455
    4. '<>' → logprob: -11.382457733154297
    5. ')!=' → logprob: -12.257457733154297
    6. '()!=' → logprob: -12.382457733154297
    7. '==' → logprob: -12.382457733154297
    8. ')' → logprob: -12.507457733154297
    9. ' >' → logprob: -13.007457733154297
    10. '!' → logprob: -13.507457733154297

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -17.000024795532227
    4. '   ' → logprob: -17.500024795532227
    5. '1' → logprob: -17.750024795532227
    6. '  ' → logprob: -17.937524795532227
    7. ' ' → logprob: -19.312524795532227
    8. '```' → logprob: -19.312524795532227
    9. '=' → logprob: -19.375024795532227
    10. 'C' → logprob: -19.375024795532227

Token 160: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.517272024415433e-05
    2. '))' → logprob: -9.500075340270996
    3. ' )' → logprob: -16.25007438659668
    4. ')
' → logprob: -16.87507438659668
    5. '())' → logprob: -17.75007438659668
    6. ')))' → logprob: -17.87507438659668
    7. '")' → logprob: -17.87507438659668
    8. ')")' → logprob: -18.00007438659668
    9. ')`' → logprob: -18.12507438659668
    10. '`)' → logprob: -18.87507438659668


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 158
Tokens correctement prédits (1ère position, stricte): 77
Tokens correctement prédits (1ère position, avec adaptation): 81
Tokens correctement prédits (top 10): 135
Précision stricte (1ère position): 48.73%
Précision adaptée (1ère position): 51.27%
Précision (top 10): 85.44%
================================================================================
