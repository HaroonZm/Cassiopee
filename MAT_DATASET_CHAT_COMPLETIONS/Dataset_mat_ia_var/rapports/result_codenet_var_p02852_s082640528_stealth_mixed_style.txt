================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(1_000_000_000)
INF = 10 ** 18
MOD = 1_000_000_007

from typing import Any

input = lambda : sys.stdin.readline().rstrip()

def _list2d(x, y, f): return [[f]*y for _ in range(x)]
def _list3d(a, b, c, v): return [[[v]*c for _ in range(b)] for _ in range(a)]
def _list4d(a,b,c,d,e): A = []; [A.append(_list3d(b,c,d,e)) for _ in range(a)]; return A

INT = lambda : int(input())
def MAP(): return map(int, input().split())
def LIST(n=None): return list(MAP()) if n is None else [INT() for _ in range(n)]

Yes = lambda: print("Yes")
No = lambda: print("No")
YES = lambda: print("YES")
NO = lambda: print("NO")

def ceil(x, y=1): return int(-(-x//y))

class SegTree:
    # 混合コメント例: Segment Tree for range queries and updates
    def __init__(self, size, op, unit, A=None):
        self.sz = size
        self.op = op
        self.unit = unit
        n2 = 1
        while n2 < size: n2 <<= 1
        self.N = n2
        self.seg = [unit] * (n2<<1)
        if A:
            for idx,item in enumerate(A): self.seg[n2+idx] = item
            for i in range(n2-1, 0, -1): self.seg[i] = op(self.seg[i<<1], self.seg[(i<<1)|1])
    def update(self, i, val):
        index = i + self.N
        self.seg[index] = val
        while index: index >>= 1; self.seg[index] = self.op(self.seg[index << 1], self.seg[(index << 1)|1])
    def query(self, l, r):
        L, R, res = l + self.N, r + self.N, self.unit
        while L < R:
            if R & 1: R -= 1; res = self.op(res, self.seg[R])
            if L & 1: res = self.op(res, self.seg[L]); L += 1
            L >>= 1; R >>= 1
        return res
    def get(self, i):
        return self.seg[i+self.N]
    def all(self): return self.seg[1]

def main():
    N, M = MAP()
    S = input()
    dp = SegTree(N+1, min, INF)
    dp.update(N,0)
    for i in range(N-1, -1, -1):
        if S[i]=='1': continue
        smallest = dp.query(i+1, min(N+1, i+M+1))
        if smallest!=INF: dp.update(i, smallest+1)
    if dp.get(0)==INF:
        print(-1)
        return
    x = dp.get(0)
    c, p = 0, -1
    ret = []
    for i in range(1, N+1):
        g = dp.get(i)
        if g == INF: continue
        if g != x:
            ret.append(i-c)
            p, c = c, i
            x = g
    print(*ret)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.523948907968588e-05
    2. ' .' → logprob: -11.875035285949707
    3. '.import' → logprob: -12.125035285949707
    4. '.user' → logprob: -12.875035285949707
    5. '.readline' → logprob: -12.875035285949707
    6. '.`' → logprob: -13.125035285949707
    7. '.stdout' → logprob: -13.625035285949707
    8. '[' → logprob: -13.625035285949707
    9. '.exit' → logprob: -13.875035285949707
    10. '​.' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037681119283661246
    2. 'ursive' → logprob: -8.37537670135498
    3. 'urs' → logprob: -10.37537670135498
    4. 'limit' → logprob: -10.62537670135498
    5. 'urf' → logprob: -10.62537670135498
    6. 'ur' → logprob: -10.87537670135498
    7. '_limit' → logprob: -11.25037670135498
    8. '_' → logprob: -11.75037670135498
    9. 'ursor' → logprob: -12.37537670135498
    10. 'ursively' → logprob: -12.75037670135498

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5803260207176208
    2. '_limit' → logprob: -0.8303260207176208
    3. '_depth' → logprob: -5.580326080322266
    4. 'depth' → logprob: -7.955326080322266
    5. '_' → logprob: -9.705326080322266
    6. ' limit' → logprob: -10.080326080322266
    7. 'lim' → logprob: -10.705326080322266
    8. '(' → logprob: -11.205326080322266
    9. '_rate' → logprob: -11.205326080322266
    10. '_limits' → logprob: -11.330326080322266

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4140441635390744e-05
    2. '(
' → logprob: -11.875014305114746
    3. ' (' → logprob: -12.375014305114746
    4. '(

' → logprob: -13.375014305114746
    5. '("("' → logprob: -15.250014305114746
    6. '((' → logprob: -15.375014305114746
    7. '('' → logprob: -15.500014305114746
    8. '(
' → logprob: -15.750014305114746
    9. '```' → logprob: -16.12501335144043
    10. '(.' → logprob: -16.50001335144043

Token 9: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07916329801082611
    2. '100' → logprob: -2.5791633129119873
    3. '300' → logprob: -8.954163551330566
    4. ' ' → logprob: -9.579163551330566
    5. '500' → logprob: -10.079163551330566
    6. '999' → logprob: -11.454163551330566
    7. '150' → logprob: -11.579163551330566
    8. '200' → logprob: -11.954163551330566
    9. '  ' → logprob: -13.079163551330566
    10. '   ' → logprob: -13.704163551330566

Token 10: '_' (ID: 62)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7039219737052917
    2. '000' → logprob: -0.8289219737052917
    3. '00' → logprob: -2.7039220333099365
    4. '5' → logprob: -7.078921794891357
    5. '3' → logprob: -7.703921794891357
    6. '6' → logprob: -8.828922271728516
    7. '8' → logprob: -9.578922271728516
    8. '4' → logprob: -9.828922271728516
    9. '05' → logprob: -9.828922271728516
    10. '2' → logprob: -10.078922271728516

Token 11: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41243776679039
    2. '000' → logprob: -1.2874377965927124
    3. '00' → logprob: -2.912437677383423
    4. '_' → logprob: -4.912437915802002
    5. '2' → logprob: -9.162437438964844
    6. '5' → logprob: -10.162437438964844
    7. '6' → logprob: -11.037437438964844
    8. '024' → logprob: -11.037437438964844
    9. '048' → logprob: -11.287437438964844
    10. '8' → logprob: -11.287437438964844

Token 12: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03685024380683899
    2. ',' → logprob: -4.161850452423096
    3. ')' → logprob: -4.411850452423096
    4. '_,' → logprob: -5.661850452423096
    5. ',_' → logprob: -6.286850452423096
    6. ')_' → logprob: -6.661850452423096
    7. '_)' → logprob: -7.036850452423096
    8. ',)' → logprob: -7.661850452423096
    9. '000' → logprob: -8.786849975585938
    10. ' ,' → logprob: -10.036849975585938

Token 13: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.08331476151943207
    2. '_' → logprob: -2.8333146572113037
    3. ',' → logprob: -4.458314895629883
    4. '0' → logprob: -5.333314895629883
    5. '00' → logprob: -6.958314895629883
    6. ')' → logprob: -7.083314895629883
    7. ',_' → logprob: -7.333314895629883
    8. ',)' → logprob: -7.708314895629883
    9. ' ' → logprob: -7.833314895629883
    10. '_,' → logprob: -8.083314895629883

Token 14: '_' (ID: 62)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. '))' → logprob: -13.87500286102295
    3. ')
' → logprob: -14.00000286102295
    4. ' )' → logprob: -14.37500286102295
    5. '`)' → logprob: -15.75000286102295
    6. ')`' → logprob: -17.000001907348633
    7. ')

' → logprob: -17.375001907348633
    8. '')' → logprob: -17.625001907348633
    9. '）' → logprob: -18.000001907348633
    10. '```' → logprob: -18.125001907348633

Token 15: '000' (ID: 1302)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -14.625000953674316
    4. '))' → logprob: -15.625000953674316
    5. '0' → logprob: -16.375001907348633
    6. '),' → logprob: -18.375001907348633
    7. ')

' → logprob: -18.375001907348633
    8. '_' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.625001907348633
    10. '```' → logprob: -18.625001907348633

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -14.000001907348633
    3. ' )' → logprob: -15.250001907348633
    4. '))' → logprob: -15.500001907348633
    5. '0' → logprob: -15.625001907348633
    6. ')

' → logprob: -17.125001907348633
    7. '```' → logprob: -17.625001907348633
    8. ')
' → logprob: -17.750001907348633
    9. ')`' → logprob: -17.750001907348633
    10. '`)' → logprob: -18.000001907348633

Token 17: 'INF' (ID: 64358)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11617836356163025
    2. '
' → logprob: -2.991178274154663
    3. '(' → logprob: -3.241178274154663
    4. '(
' → logprob: -5.116178512573242
    5. '```' → logprob: -5.741178512573242
    6. '\n' → logprob: -5.991178512573242
    7. '\' → logprob: -6.116178512573242
    8. '' → logprob: -6.241178512573242
    9. '#' → logprob: -6.366178512573242
    10. '
' → logprob: -7.616178512573242

Token 18: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5554491877555847
    2. ' =' → logprob: -1.1804492473602295
    3. '=' → logprob: -2.6804492473602295
    4. '_' → logprob: -3.1804492473602295
    5. ' )' → logprob: -5.18044900894165
    6. ' =)' → logprob: -6.80544900894165
    7. ',' → logprob: -6.93044900894165
    8. '_)' → logprob: -8.555449485778809
    9. ':' → logprob: -8.930449485778809
    10. '<|end|>' → logprob: -9.180449485778809

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24902673065662384
    2. ' float' → logprob: -2.1240267753601074
    3. '10' → logprob: -2.8740267753601074
    4. 'float' → logprob: -3.1240267753601074
    5. ' int' → logprob: -8.49902629852295
    6. '1' → logprob: -9.24902629852295
    7. 'int' → logprob: -9.37402629852295
    8. '100' → logprob: -10.87402629852295
    9. ' ' → logprob: -11.99902629852295
    10. '  ' → logprob: -12.24902629852295

Token 20: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20648297667503357
    2. 'float' → logprob: -1.706483006477356
    3. ' ' → logprob: -6.331482887268066
    4. 'int' → logprob: -6.456482887268066
    5. '1' → logprob: -6.956482887268066
    6. ' float' → logprob: -7.331482887268066
    7. '9' → logprob: -10.206482887268066
    8. '100' → logprob: -10.956482887268066
    9. '2' → logprob: -11.456482887268066
    10. 'pow' → logprob: -11.831482887268066

Token 21: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6584804654121399
    2. '9' → logprob: -0.7834804654121399
    3. '0' → logprob: -4.533480644226074
    4. '8' → logprob: -4.783480644226074
    5. '6' → logprob: -6.033480644226074
    6. '7' → logprob: -6.283480644226074
    7. '18' → logprob: -6.908480644226074
    8. '00' → logprob: -7.283480644226074
    9. '10' → logprob: -8.783480644226074
    10. '000' → logprob: -9.408480644226074

Token 22: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.004626052919775248
    2. '18' → logprob: -5.504626274108887
    3. '10' → logprob: -7.879626274108887
    4. '15' → logprob: -9.629626274108887
    5. '12' → logprob: -9.754626274108887
    6. '1' → logprob: -10.254626274108887
    7. '19' → logprob: -12.754626274108887
    8. '16' → logprob: -13.254626274108887
    9. '20' → logprob: -13.629626274108887
    10. '11' → logprob: -14.129626274108887

Token 23: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.09645479172468185
    2. '18' → logprob: -3.0964548587799072
    3. '10' → logprob: -3.7214548587799072
    4. '15' → logprob: -3.8464548587799072
    5. '12' → logprob: -7.221454620361328
    6. '20' → logprob: -8.221454620361328
    7. '16' → logprob: -9.346454620361328
    8. '19' → logprob: -10.596454620361328
    9. '14' → logprob: -10.846454620361328
    10. '13' → logprob: -10.971454620361328

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18714505434036255
    2. '
' → logprob: -2.1871449947357178
    3. '' → logprob: -3.4371449947357178
    4. '\n' → logprob: -4.562145233154297
    5. '

' → logprob: -4.687145233154297
    6. '\' → logprob: -5.562145233154297
    7. '```' → logprob: -6.812145233154297
    8. '

' → logprob: -8.187145233154297
    9. ' 
' → logprob: -8.187145233154297
    10. 'newline' → logprob: -8.562145233154297

Token 25: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16972115635871887
    2. 'def' → logprob: -2.9197211265563965
    3. '
' → logprob: -3.4197211265563965
    4. '\' → logprob: -4.0447211265563965
    5. '\n' → logprob: -4.4197211265563965
    6. '```' → logprob: -4.4197211265563965
    7. '

' → logprob: -4.5447211265563965
    8. '' → logprob: -4.5447211265563965
    9. ' 
' → logprob: -7.1697211265563965
    10. 'n' → logprob: -7.1697211265563965

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07046984136104584
    2. '=' → logprob: -2.695469856262207
    3. ' ' → logprob: -7.820469856262207
    4. '_' → logprob: -9.320469856262207
    5. '  ' → logprob: -11.445469856262207
    6. ')' → logprob: -11.570469856262207
    7. ' =)' → logprob: -11.945469856262207
    8. '.' → logprob: -12.195469856262207
    9. ' =
' → logprob: -12.445469856262207
    10. ' )' → logprob: -13.320469856262207

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22548142075538635
    2. '10' → logprob: -1.600481390953064
    3. '1' → logprob: -10.475481033325195
    4. '100' → logprob: -10.475481033325195
    5. '998' → logprob: -11.725481033325195
    6. ' (' → logprob: -13.350481033325195
    7. '(' → logprob: -13.350481033325195
    8. '2' → logprob: -15.225481033325195
    9. ' ' → logprob: -15.600481033325195
    10. 'int' → logprob: -16.100481033325195

Token 28: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00449325842782855
    2. ' ' → logprob: -5.629493236541748
    3. '1' → logprob: -7.504493236541748
    4. '100' → logprob: -8.129493713378906
    5. '998' → logprob: -10.004493713378906
    6. '2' → logprob: -14.254493713378906
    7. '(' → logprob: -14.504493713378906
    8. '```' → logprob: -14.879493713378906
    9. 'int' → logprob: -15.504493713378906
    10. '9' → logprob: -15.754493713378906

Token 29: '_' (ID: 62)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5502740144729614
    2. '000' → logprob: -0.9252740144729614
    3. '_' → logprob: -3.675273895263672
    4. '9' → logprob: -7.675273895263672
    5. '2' → logprob: -8.050273895263672
    6. '00' → logprob: -8.300273895263672
    7. '09' → logprob: -8.675273895263672
    8. '```' → logprob: -9.300273895263672
    9. '009' → logprob: -9.550273895263672
    10. '8' → logprob: -10.925273895263672

Token 30: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.35963207483291626
    2. '9' → logprob: -1.2346320152282715
    3. '0' → logprob: -5.1096320152282715
    4. '_' → logprob: -5.7346320152282715
    5. '009' → logprob: -6.7346320152282715
    6. '09' → logprob: -7.3596320152282715
    7. '```' → logprob: -11.73463249206543
    8. '+' → logprob: -11.73463249206543
    9. '1' → logprob: -12.98463249206543
    10. '   ' → logprob: -12.98463249206543

Token 31: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16550906002521515
    2. '000' → logprob: -1.9155091047286987
    3. '9' → logprob: -5.540509223937988
    4. '7' → logprob: -8.040509223937988
    5. '0' → logprob: -8.415509223937988
    6. '009' → logprob: -8.540509223937988
    7. '00' → logprob: -8.790509223937988
    8. '007' → logprob: -9.040509223937988
    9. '```' → logprob: -9.165509223937988
    10. '+' → logprob: -10.040509223937988

Token 32: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3873133361339569
    2. '9' → logprob: -1.1373133659362793
    3. '_' → logprob: -8.012312889099121
    4. '009' → logprob: -9.512312889099121
    5. '999' → logprob: -10.887312889099121
    6. '0' → logprob: -12.512312889099121
    7. '```' → logprob: -12.512312889099121
    8. '+' → logprob: -12.762312889099121
    9. '7' → logprob: -13.262312889099121
    10. '10' → logprob: -13.387312889099121

Token 33: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2227037250995636
    2. '7' → logprob: -2.222703695297241
    3. '007' → logprob: -2.472703695297241
    4. '+' → logprob: -5.47270393371582
    5. '07' → logprob: -6.47270393371582
    6. '000' → logprob: -7.34770393371582
    7. '0' → logprob: -7.72270393371582
    8. '009' → logprob: -10.72270393371582
    9. '003' → logprob: -10.84770393371582
    10. ' +' → logprob: -11.09770393371582

Token 34: '007' (ID: 19378)
  Prédit: '007'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '007' → logprob: -0.07000601291656494
    2. '7' → logprob: -2.6950058937072754
    3. '000' → logprob: -9.945006370544434
    4. '009' → logprob: -11.945006370544434
    5. '```' → logprob: -12.070006370544434
    6. '07' → logprob: -13.070006370544434
    7. '+' → logprob: -13.195006370544434
    8. '999' → logprob: -13.945006370544434
    9. '   ' → logprob: -14.195006370544434
    10. ' ' → logprob: -14.195006370544434

Token 35: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1915017068386078
    2. 'def' → logprob: -1.8165017366409302
    3. '

' → logprob: -5.441501617431641
    4. '' → logprob: -5.816501617431641
    5. '
' → logprob: -6.691501617431641
    6. '\' → logprob: -7.191501617431641
    7. 'n' → logprob: -7.191501617431641
    8. '\n' → logprob: -7.191501617431641
    9. '#' → logprob: -7.816501617431641
    10. '```' → logprob: -8.44150161743164

Token 36: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10463516414165497
    2. 'n' → logprob: -2.854635238647461
    3. '
' → logprob: -3.854635238647461
    4. '\' → logprob: -5.229635238647461
    5. 'a' → logprob: -5.604635238647461
    6. '```' → logprob: -5.729635238647461
    7. 'd' → logprob: -5.854635238647461
    8. 'class' → logprob: -6.354635238647461
    9. '\n' → logprob: -7.104635238647461
    10. '(' → logprob: -7.229635238647461

Token 37: ' typing' (ID: 34152)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.06712976843118668
    2. ' math' → logprob: -2.8171298503875732
    3. 'collections' → logprob: -5.817129611968994
    4. ' sys' → logprob: -6.692129611968994
    5. ' itertools' → logprob: -7.692129611968994
    6. ' functools' → logprob: -8.317130088806152
    7. ' typing' → logprob: -9.067130088806152
    8. ' ' → logprob: -9.317130088806152
    9. 'math' → logprob: -10.942130088806152
    10. ' heap' → logprob: -12.192130088806152

Token 38: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.003612781874835491
    2. 'import' → logprob: -5.628612995147705
    3. '<|end|>' → logprob: -11.878612518310547
    4. '	import' → logprob: -13.128612518310547
    5. '_import' → logprob: -13.628612518310547
    6. ' importar' → logprob: -14.753612518310547
    7. ' imports' → logprob: -14.878612518310547
    8. ' ' → logprob: -15.253612518310547
    9. '.import' → logprob: -15.378612518310547
    10. '.' → logprob: -15.378612518310547

Token 39: ' Any' (ID: 8281)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.07104760408401489
    2. ' List' → logprob: -2.69604754447937
    3. 'Generator' → logprob: -7.321047782897949
    4. 'Tuple' → logprob: -8.82104778289795
    5. ' Generator' → logprob: -8.94604778289795
    6. 'Any' → logprob: -10.07104778289795
    7. '```' → logprob: -10.32104778289795
    8. 'Deque' → logprob: -10.69604778289795
    9. 'Counter' → logprob: -11.44604778289795
    10. '_list' → logprob: -11.57104778289795

Token 40: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.660683810710907
    2. 'def' → logprob: -1.0356838703155518
    3. '
' → logprob: -2.4106838703155518
    4. '

' → logprob: -4.160683631896973
    5. 'import' → logprob: -5.035683631896973
    6. 'from' → logprob: -5.285683631896973
    7. 'class' → logprob: -5.785683631896973
    8. ',
' → logprob: -5.910683631896973
    9. '```' → logprob: -6.035683631896973
    10. '_' → logprob: -7.535683631896973

Token 41: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013494300656020641
    2. '
' → logprob: -4.388494491577148
    3. 'class' → logprob: -7.138494491577148
    4. ' def' → logprob: -10.138494491577148
    5. 'from' → logprob: -10.388494491577148
    6. 'd' → logprob: -11.013494491577148
    7. ' 
' → logprob: -11.138494491577148
    8. 'import' → logprob: -11.263494491577148
    9. '\' → logprob: -11.388494491577148
    10. 'de' → logprob: -11.388494491577148

Token 42: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011912708170711994
    2. '(' → logprob: -4.511912822723389
    3. '().' → logprob: -8.13691234588623
    4. '.' → logprob: -9.13691234588623
    5. ' =' → logprob: -9.26191234588623
    6. '=' → logprob: -9.26191234588623
    7. '```' → logprob: -9.76191234588623
    8. ')' → logprob: -9.88691234588623
    9. ' ()' → logprob: -10.38691234588623
    10. '("")' → logprob: -10.63691234588623

Token 43: ' lambda' (ID: 27871)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.039184313267469406
    2. 'input' → logprob: -3.789184331893921
    3. ' sys' → logprob: -4.164184093475342
    4. ' lambda' → logprob: -8.9141845703125
    5. 'sys' → logprob: -9.0391845703125
    6. 'lambda' → logprob: -12.1641845703125
    7. ' ' → logprob: -12.4141845703125
    8. ' iter' → logprob: -13.0391845703125
    9. '=input' → logprob: -13.4141845703125
    10. ' open' → logprob: -14.0391845703125

Token 44: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08581475168466568
    2. '():' → logprob: -3.2108147144317627
    3. '()' → logprob: -3.4608147144317627
    4. ' ' → logprob: -5.585814952850342
    5. ' :' → logprob: -5.960814952850342
    6. '().' → logprob: -6.460814952850342
    7. ' sys' → logprob: -7.210814952850342
    8. '<|end|>' → logprob: -7.960814952850342
    9. ' ()' → logprob: -8.085814476013184
    10. '...' → logprob: -8.710814476013184

Token 45: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4954042136669159
    2. 'sys' → logprob: -0.9954042434692383
    3. 'input' → logprob: -4.245404243469238
    4. ' input' → logprob: -4.995404243469238
    5. 'stdin' → logprob: -14.370404243469238
    6. '=sys' → logprob: -14.370404243469238
    7. '	sys' → logprob: -15.120404243469238
    8. '__' → logprob: -15.370404243469238
    9. ' ' → logprob: -15.620404243469238
    10. '(sys' → logprob: -15.870404243469238

Token 46: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.386147626675665e-05
    2. '.stdout' → logprob: -9.625073432922363
    3. '.readline' → logprob: -12.250073432922363
    4. 'stdin' → logprob: -13.500073432922363
    5. '.std' → logprob: -14.125073432922363
    6. '.' → logprob: -14.250073432922363
    7. ' stdin' → logprob: -16.12507438659668
    8. '.stderr' → logprob: -16.62507438659668
    9. '(stdin' → logprob: -17.50007438659668
    10. '.argv' → logprob: -19.00007438659668

Token 47: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00019376569252926856
    2. 'read' → logprob: -8.62519359588623
    3. 'buffer' → logprob: -12.25019359588623
    4. '.read' → logprob: -12.25019359588623
    5. ' readline' → logprob: -12.62519359588623
    6. '.' → logprob: -14.37519359588623
    7. 'rea' → logprob: -15.12519359588623
    8. '_read' → logprob: -15.50019359588623
    9. '.buffer' → logprob: -16.250194549560547
    10. 'readonly' → logprob: -16.375194549560547

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01604844629764557
    2. '()' → logprob: -4.141048431396484
    3. '(' → logprob: -12.266048431396484
    4. '[:-' → logprob: -12.891048431396484
    5. '.rstrip' → logprob: -13.391048431396484
    6. '()\' → logprob: -13.641048431396484
    7. '.strip' → logprob: -13.891048431396484
    8. '()
' → logprob: -14.016048431396484
    9. '.' → logprob: -14.141048431396484
    10. ' ().' → logprob: -14.641048431396484

Token 49: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06196858361363411
    2. 'rstrip' → logprob: -2.8119685649871826
    3. ' strip' → logprob: -14.061968803405762
    4. '_strip' → logprob: -15.811968803405762
    5. 'str' → logprob: -18.436967849731445
    6. '(strip' → logprob: -18.561967849731445
    7. '-strip' → logprob: -18.811967849731445
    8. '.rstrip' → logprob: -19.061967849731445
    9. 'r' → logprob: -19.436967849731445
    10. 'stripe' → logprob: -19.936967849731445

Token 50: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7322505712509155
    2. '
' → logprob: -0.9822505712509155
    3. '(' → logprob: -2.482250690460205
    4. '()
' → logprob: -4.107250690460205
    5. ')' → logprob: -4.857250690460205
    6. '(
' → logprob: -5.107250690460205
    7. 'def' → logprob: -5.107250690460205
    8. '<|end|>' → logprob: -5.107250690460205
    9. '

' → logprob: -5.357250690460205
    10. '\n' → logprob: -5.482250690460205

Token 51: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0037098159082233906
    2. 'class' → logprob: -6.00370979309082
    3. 'n' → logprob: -6.87870979309082
    4. '
' → logprob: -10.00370979309082
    5. 'from' → logprob: -10.12870979309082
    6. '#' → logprob: -10.37870979309082
    7. 'N' → logprob: -11.00370979309082
    8. '\' → logprob: -11.12870979309082
    9. '@' → logprob: -11.75370979309082
    10. 'd' → logprob: -11.87870979309082

Token 52: ' _' (ID: 1175)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.05206738039851189
    2. ' main' → logprob: -3.177067279815674
    3. ' solve' → logprob: -5.177067279815674
    4. ' factorial' → logprob: -6.802067279815674
    5. ' ' → logprob: -7.302067279815674
    6. ' factor' → logprob: -7.552067279815674
    7. ' DFS' → logprob: -8.427067756652832
    8. ' f' → logprob: -8.552067756652832
    9. ' bfs' → logprob: -8.802067756652832
    10. ' dp' → logprob: -9.302067756652832

Token 53: 'list' (ID: 2641)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.11238483339548111
    2. 'main' → logprob: -2.987384796142578
    3. 'solve' → logprob: -3.362384796142578
    4. 'pow' → logprob: -5.112384796142578
    5. 'factor' → logprob: -5.487384796142578
    6. 'input' → logprob: -5.987384796142578
    7. '_main' → logprob: -6.112384796142578
    8. '_' → logprob: -6.112384796142578
    9. '_factor' → logprob: -6.737384796142578
    10. 'read' → logprob: -8.112384796142578

Token 54: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1663802862167358
    2. '(' → logprob: -1.6663802862167358
    3. '_' → logprob: -2.0413804054260254
    4. '_append' → logprob: -2.1663804054260254
    5. '[int' → logprob: -2.4163804054260254
    6. '(n' → logprob: -3.4163804054260254
    7. '_of' → logprob: -3.9163804054260254
    8. '[]' → logprob: -4.666380405426025
    9. '_generator' → logprob: -4.666380405426025
    10. '[size' → logprob: -4.666380405426025

Token 55: 'd' (ID: 67)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6664970517158508
    2. 'dict' → logprob: -0.9164970517158508
    3. 'tuple' → logprob: -3.291496992111206
    4. 'd' → logprob: -3.416496992111206
    5. 'str' → logprob: -4.416497230529785
    6. 'array' → logprob: -7.166497230529785
    7. 'append' → logprob: -7.541497230529785
    8. 'list' → logprob: -8.291497230529785
    9. 'def' → logprob: -8.291497230529785
    10. '_int' → logprob: -8.416497230529785

Token 56: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6484700441360474
    2. '(n' → logprob: -0.7734700441360474
    3. '(depth' → logprob: -5.023469924926758
    4. '(size' → logprob: -6.148469924926758
    5. '(rows' → logprob: -6.398469924926758
    6. '(length' → logprob: -6.648469924926758
    7. '(dim' → logprob: -7.023469924926758
    8. '(m' → logprob: -7.648469924926758
    9. ' (' → logprob: -7.648469924926758
    10. '(row' → logprob: -7.773469924926758

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036514020757749677
    2. ' ,' → logprob: -8.125365257263184
    3. ',x' → logprob: -10.125365257263184
    4. ',n' → logprob: -11.000365257263184
    5. ',y' → logprob: -12.500365257263184
    6. ',size' → logprob: -13.750365257263184
    7. ',length' → logprob: -13.875365257263184
    8. '):' → logprob: -13.875365257263184
    9. ',k' → logprob: -14.125365257263184
    10. ',int' → logprob: -14.125365257263184

Token 58: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001930301426909864
    2. ' y' → logprob: -6.251930236816406
    3. '	y' → logprob: -14.001930236816406
    4. '*y' → logprob: -15.001930236816406
    5. ')' → logprob: -15.376930236816406
    6. ' ' → logprob: -15.751930236816406
    7. ',y' → logprob: -17.126930236816406
    8. '   ' → logprob: -17.251930236816406
    9. '  ' → logprob: -17.501930236816406
    10. 'n' → logprob: -17.501930236816406

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7968066206085496e-05
    2. '):' → logprob: -11.125027656555176
    3. ' ,' → logprob: -11.375027656555176
    4. ',x' → logprob: -14.125027656555176
    5. ',y' → logprob: -15.375027656555176
    6. ',int' → logprob: -15.375027656555176
    7. ':' → logprob: -16.625028610229492
    8. ')' → logprob: -16.750028610229492
    9. ',value' → logprob: -16.750028610229492
    10. ',)' → logprob: -16.875028610229492

Token 60: ' f' (ID: 285)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.39813047647476196
    2. 'init' → logprob: -1.7731304168701172
    3. 'z' → logprob: -2.523130416870117
    4. 'initial' → logprob: -3.898130416870117
    5. 'value' → logprob: -4.148130416870117
    6. 'k' → logprob: -4.648130416870117
    7. 'None' → logprob: -5.023130416870117
    8. 'a' → logprob: -5.648130416870117
    9. '0' → logprob: -5.648130416870117
    10. 'default' → logprob: -6.023130416870117

Token 61: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033589128870517015
    2. 'unction' → logprob: -6.003358840942383
    3. '):
' → logprob: -7.753358840942383
    4. 'loat' → logprob: -8.378358840942383
    5. ')' → logprob: -9.878358840942383
    6. 'ormat' → logprob: -10.128358840942383
    7. 'unc' → logprob: -10.503358840942383
    8. '=lambda' → logprob: -10.628358840942383
    9. 'orm' → logprob: -11.253358840942383
    10. 'actory' → logprob: -11.378358840942383

Token 62: ' return' (ID: 622)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0094766141846776
    2. '   ' → logprob: -6.009476661682129
    3. ':return' → logprob: -6.634476661682129
    4. ' return' → logprob: -7.009476661682129
    5. ' ->' → logprob: -7.009476661682129
    6. '):' → logprob: -7.259476661682129
    7. '<|end|>' → logprob: -7.384476661682129
    8. ' :' → logprob: -7.509476661682129
    9. ')' → logprob: -8.259476661682129
    10. ',' → logprob: -8.384476661682129

Token 63: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.009430807083845139
    2. '[' → logprob: -4.759430885314941
    3. ' [[' → logprob: -7.259430885314941
    4. '[f' → logprob: -9.759430885314941
    5. ' [' → logprob: -10.134430885314941
    6. '[list' → logprob: -11.759430885314941
    7. '[x' → logprob: -12.634430885314941
    8. '[
' → logprob: -13.259430885314941
    9. '[n' → logprob: -14.509430885314941
    10. '[List' → logprob: -14.634430885314941

Token 64: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4855663721391466e-05
    2. ' f' → logprob: -11.125015258789062
    3. '	f' → logprob: -18.250015258789062
    4. '
' → logprob: -19.000015258789062
    5. '   ' → logprob: -20.250015258789062
    6. '
' → logprob: -20.625015258789062
    7. ' ' → logprob: -20.875015258789062
    8. '_f' → logprob: -21.000015258789062
    9. ' ' → logprob: -21.625015258789062
    10. '```' → logprob: -21.750015258789062

Token 65: ']*' (ID: 18579)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -9.088346359931165e-07
    2. '()]' → logprob: -14.750000953674316
    3. '(x' → logprob: -15.750000953674316
    4. ' for' → logprob: -15.750000953674316
    5. ' ()' → logprob: -16.125
    6. '(i' → logprob: -17.0
    7. 'for' → logprob: -17.25
    8. '(' → logprob: -17.5
    9. ']' → logprob: -19.125
    10. ']()' → logprob: -19.125

Token 66: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02342284470796585
    2. 'x' → logprob: -3.773422956466675
    3. ' y' → logprob: -8.648423194885254
    4. '(y' → logprob: -13.523423194885254
    5. ' x' → logprob: -15.023423194885254
    6. '(x' → logprob: -15.398423194885254
    7. '	y' → logprob: -17.148422241210938
    8. '0' → logprob: -17.273422241210938
    9. '1' → logprob: -17.523422241210938
    10. 'f' → logprob: -17.648422241210938

Token 67: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20143985748291016
    2. 'for' → logprob: -1.7014398574829102
    3. ']' → logprob: -11.07643985748291
    4. '	for' → logprob: -11.82643985748291
    5. ' ' → logprob: -12.95143985748291
    6. ' ]' → logprob: -14.45143985748291
    7. ')' → logprob: -14.95143985748291
    8. '```' → logprob: -15.57643985748291
    9. ' ' → logprob: -16.451438903808594
    10. '   ' → logprob: -16.951438903808594

Token 68: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2068847417831421
    2. ' range' → logprob: -1.706884741783142
    3. '_' → logprob: -5.581884860992432
    4. ' in' → logprob: -6.831884860992432
    5. 'in' → logprob: -8.081884384155273
    6. ' xrange' → logprob: -9.206884384155273
    7. '(range' → logprob: -9.956884384155273
    8. 'x' → logprob: -10.081884384155273
    9. '	range' → logprob: -10.081884384155273
    10. '_range' → logprob: -10.581884384155273

Token 69: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2610950767993927
    2. ' in' → logprob: -1.6360950469970703
    3. 'range' → logprob: -3.3860950469970703
    4. 'x' → logprob: -6.88609504699707
    5. ' range' → logprob: -9.26109504699707
    6. ' ' → logprob: -9.63609504699707
    7. '(range' → logprob: -11.88609504699707
    8. '  ' → logprob: -12.26109504699707
    9. ' xrange' → logprob: -12.26109504699707
    10. '(x' → logprob: -12.88609504699707

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007100477814674377
    2. ' range' → logprob: -7.2507100105285645
    3. '	range' → logprob: -16.875709533691406
    4. '(range' → logprob: -17.000709533691406
    5. 'x' → logprob: -18.125709533691406
    6. '[' → logprob: -18.875709533691406
    7. 'r' → logprob: -19.125709533691406
    8. 'rang' → logprob: -19.750709533691406
    9. ' xrange' → logprob: -20.250709533691406
    10. ' ' → logprob: -20.875709533691406

Token 71: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00033879990223795176
    2. '(' → logprob: -8.625338554382324
    3. 'x' → logprob: -8.750338554382324
    4. ')x' → logprob: -15.000338554382324
    5. ' x' → logprob: -15.375338554382324
    6. '	x' → logprob: -16.00033950805664
    7. ' (' → logprob: -16.25033950805664
    8. ',x' → logprob: -18.25033950805664
    9. '(
' → logprob: -18.50033950805664
    10. '0' → logprob: -19.12533950805664

Token 72: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011849920265376568
    2. ']' → logprob: -6.751184940338135
    3. ')' → logprob: -11.501185417175293
    4. '])' → logprob: -13.376185417175293
    5. ' ]' → logprob: -13.751185417175293
    6. ')],' → logprob: -14.001185417175293
    7. '])]' → logprob: -15.126185417175293
    8. ' )' → logprob: -15.251185417175293
    9. '}]' → logprob: -15.751185417175293
    10. ')]
' → logprob: -15.876185417175293

Token 73: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' _' (ID: 1175)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0005227696383371949
    2. ' _' → logprob: -7.625522613525391
    3. '_' → logprob: -11.37552261352539
    4. '_set' → logprob: -11.87552261352539
    5. ' list' → logprob: -13.12552261352539
    6. '_map' → logprob: -13.12552261352539
    7. '_input' → logprob: -13.62552261352539
    8. '_string' → logprob: -14.12552261352539
    9. 'list' → logprob: -14.25052261352539
    10. '_lst' → logprob: -14.25052261352539

Token 75: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00036810929304920137
    2. 'tuple' → logprob: -9.875368118286133
    3. '_list' → logprob: -10.125368118286133
    4. 'LIST' → logprob: -10.250368118286133
    5. 'nested' → logprob: -10.500368118286133
    6. 'copy' → logprob: -10.625368118286133
    7. 'empty' → logprob: -10.875368118286133
    8. 'ilist' → logprob: -11.250368118286133
    9. 'lst' → logprob: -11.375368118286133
    10. 'deep' → logprob: -11.500368118286133

Token 76: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.018557947129011154
    2. '1' → logprob: -4.143558025360107
    3. 'd' → logprob: -6.518558025360107
    4. '2' → logprob: -7.018558025360107
    5. 'n' → logprob: -10.01855754852295
    6. 'y' → logprob: -10.64355754852295
    7. 'a' → logprob: -11.01855754852295
    8. 'c' → logprob: -11.51855754852295
    9. 'f' → logprob: -11.64355754852295
    10. 'def' → logprob: -12.01855754852295

Token 77: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: 0.0
    2. ' d' → logprob: -19.25
    3. 'def' → logprob: -19.375
    4. 'д' → logprob: -19.375
    5. '	d' → logprob: -19.625
    6. 'a' → logprob: -20.0
    7. '<|end|>' → logprob: -20.125
    8. '```' → logprob: -20.25
    9. 'dtype' → logprob: -20.25
    10. '(d' → logprob: -20.5

Token 78: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.578184497309849e-05
    2. '(' → logprob: -9.375085830688477
    3. '<|end|>' → logprob: -14.500085830688477
    4. ' (' → logprob: -15.875085830688477
    5. 'x' → logprob: -17.000085830688477
    6. '(y' → logprob: -17.125085830688477
    7. '<|end|>' → logprob: -17.375085830688477
    8. '(s' → logprob: -17.375085830688477
    9. '(
' → logprob: -17.625085830688477
    10. '(figsize' → logprob: -18.000085830688477

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007907784543931484
    2. ',b' → logprob: -4.882907867431641
    3. ',x' → logprob: -8.75790786743164
    4. ',a' → logprob: -9.13290786743164
    5. ' ,' → logprob: -11.13290786743164
    6. ',y' → logprob: -11.25790786743164
    7. ',n' → logprob: -12.25790786743164
    8. '):' → logprob: -14.00790786743164
    9. '(x' → logprob: -14.38290786743164
    10. ',j' → logprob: -14.88290786743164

Token 80: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00026181264547631145
    2. ' b' → logprob: -8.250262260437012
    3. '_b' → logprob: -15.125262260437012
    4. 'x' → logprob: -15.250262260437012
    5. 'a' → logprob: -17.875261306762695
    6. '	b' → logprob: -17.875261306762695
    7. '_' → logprob: -17.875261306762695
    8. '*b' → logprob: -18.625261306762695
    9. '```' → logprob: -18.625261306762695
    10. ',b' → logprob: -18.750261306762695

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021748353901784867
    2. ',c' → logprob: -8.50021743774414
    3. ' ,' → logprob: -11.37521743774414
    4. 'c' → logprob: -13.12521743774414
    5. ',x' → logprob: -16.00021743774414
    6. ' c' → logprob: -16.25021743774414
    7. ',f' → logprob: -16.37521743774414
    8. ',y' → logprob: -16.62521743774414
    9. ',a' → logprob: -17.12521743774414
    10. '_,' → logprob: -17.25021743774414

Token 82: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002189279766753316
    2. ' c' → logprob: -6.1271891593933105
    3. '  ' → logprob: -13.752189636230469
    4. ' ' → logprob: -13.752189636230469
    5. 'x' → logprob: -14.377189636230469
    6. '	c' → logprob: -14.627189636230469
    7. '```' → logprob: -15.252189636230469
    8. '   ' → logprob: -15.377189636230469
    9. ' ' → logprob: -15.752189636230469
    10. 'f' → logprob: -15.752189636230469

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001117711653932929
    2. ',f' → logprob: -7.376117706298828
    3. ' ,' → logprob: -7.751117706298828
    4. '(x' → logprob: -10.501117706298828
    5. '):' → logprob: -11.376117706298828
    6. '(f' → logprob: -11.501117706298828
    7. ',x' → logprob: -12.376117706298828
    8. ',a' → logprob: -13.126117706298828
    9. 'f' → logprob: -13.251117706298828
    10. ' (' → logprob: -13.751117706298828

Token 84: ' v' (ID: 323)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003602798329666257
    2. ' f' → logprob: -5.628602981567383
    3. ' ' → logprob: -13.503602981567383
    4. '	f' → logprob: -14.628602981567383
    5. 'd' → logprob: -15.003602981567383
    6. '  ' → logprob: -15.503602981567383
    7. '   ' → logprob: -15.628602981567383
    8. ' ' → logprob: -16.128602981567383
    9. '```' → logprob: -18.003602981567383
    10. ',f' → logprob: -19.378602981567383

Token 85: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.4391956685576588e-05
    2. ' ):' → logprob: -11.375024795532227
    3. ':' → logprob: -12.125024795532227
    4. '):
' → logprob: -12.375024795532227
    5. ')' → logprob: -13.375024795532227
    6. '=' → logprob: -13.750024795532227
    7. '=None' → logprob: -15.500024795532227
    8. ']:' → logprob: -15.875024795532227
    9. '):
' → logprob: -16.375024795532227
    10. 'alue' → logprob: -16.750024795532227

Token 86: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02761583775281906
    2. 'return' → logprob: -3.652615785598755
    3. ' [[[' → logprob: -7.277616024017334
    4. '[[' → logprob: -8.277615547180176
    5. ' [[' → logprob: -8.527615547180176
    6. '   ' → logprob: -9.277615547180176
    7. ' [' → logprob: -10.027615547180176
    8. ' ' → logprob: -11.652615547180176
    9. '	return' → logprob: -11.902615547180176
    10. '[' → logprob: -12.527615547180176

Token 87: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.62500286102295
    3. ' [[' → logprob: -13.75000286102295
    4. ' [[[' → logprob: -15.00000286102295
    5. '[_' → logprob: -16.125003814697266
    6. '```' → logprob: -17.000003814697266
    7. '[['' → logprob: -17.875003814697266
    8. '[
' → logprob: -18.000003814697266
    9. '[a' → logprob: -18.250003814697266
    10. '([[' → logprob: -18.750003814697266

Token 88: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: 0.0
    2. ' v' → logprob: -17.5
    3. '	v' → logprob: -18.375
    4. '_v' → logprob: -19.875
    5. 'vj' → logprob: -20.875
    6. '[v' → logprob: -22.375
    7. ')v' → logprob: -22.375
    8. 'vq' → logprob: -22.5
    9. '$v' → logprob: -22.5
    10. 'в' → logprob: -23.25

Token 89: ']*' (ID: 18579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5780758857727051
    2. ' for' → logprob: -0.8280758857727051
    3. ']*' → logprob: -6.203075885772705
    4. ']' → logprob: -9.453075408935547
    5. '	for' → logprob: -10.578075408935547
    6. ' ' → logprob: -12.203075408935547
    7. '   ' → logprob: -14.328075408935547
    8. '*' → logprob: -14.953075408935547
    9. ' ]' → logprob: -15.328075408935547
    10. ']*(' → logprob: -15.578075408935547

Token 90: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00012487331696320325
    2. ' c' → logprob: -9.00012493133545
    3. '	c' → logprob: -14.37512493133545
    4. '   ' → logprob: -15.00012493133545
    5. '```' → logprob: -16.000123977661133
    6. '    ' → logprob: -16.250123977661133
    7. '  ' → logprob: -16.375123977661133
    8. 'с' → logprob: -16.500123977661133
    9. '(c' → logprob: -16.625123977661133
    10. ')c' → logprob: -16.875123977661133

Token 91: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061973292380571365
    2. ' for' → logprob: -2.8119733333587646
    3. '	for' → logprob: -12.186973571777344
    4. ' ' → logprob: -15.186973571777344
    5. '   ' → logprob: -16.186973571777344
    6. ')' → logprob: -16.186973571777344
    7. ']' → logprob: -16.811973571777344
    8. '```' → logprob: -17.936973571777344
    9. ' ' → logprob: -18.061973571777344
    10. '  ' → logprob: -18.436973571777344

Token 92: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012101294472813606
    2. ' _' → logprob: -5.137101173400879
    3. '_b' → logprob: -5.137101173400879
    4. '_j' → logprob: -8.512101173400879
    5. '_in' → logprob: -10.512101173400879
    6. '_bc' → logprob: -10.887101173400879
    7. '_c' → logprob: -11.012101173400879
    8. '_bb' → logprob: -12.512101173400879
    9. ' in' → logprob: -12.762101173400879
    10. '_i' → logprob: -13.262101173400879

Token 93: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07509048283100128
    2. ' in' → logprob: -3.0750904083251953
    3. ' range' → logprob: -3.7000904083251953
    4. 'in' → logprob: -6.575090408325195
    5. '<|end|>' → logprob: -11.075090408325195
    6. '_range' → logprob: -11.950090408325195
    7. '	range' → logprob: -12.200090408325195
    8. '(range' → logprob: -12.325090408325195
    9. ' ' → logprob: -12.575090408325195
    10. '<|end|>' → logprob: -13.825090408325195

Token 94: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196891888976097
    2. ' range' → logprob: -2.8119688034057617
    3. '_range' → logprob: -14.311968803405762
    4. '	range' → logprob: -14.936968803405762
    5. '(range' → logprob: -15.436968803405762
    6. '_' → logprob: -17.561969757080078
    7. '.range' → logprob: -19.061969757080078
    8. ' ' → logprob: -19.936969757080078
    9. '<|end|>' → logprob: -20.436969757080078
    10. '```' → logprob: -20.686969757080078

Token 95: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0005545823951251805
    2. 'b' → logprob: -7.50055456161499
    3. '	b' → logprob: -14.125555038452148
    4. '(' → logprob: -15.000555038452148
    5. ')b' → logprob: -15.250555038452148
    6. '(a' → logprob: -16.00055503845215
    7. ' (' → logprob: -16.25055503845215
    8. ' b' → logprob: -16.75055503845215
    9. ')' → logprob: -17.12555503845215
    10. '   ' → logprob: -17.37555503845215

Token 96: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5654223561286926
    2. ')]' → logprob: -1.0654222965240479
    3. ']' → logprob: -2.440422296524048
    4. ' )' → logprob: -9.565422058105469
    5. '<|end|>' → logprob: -10.440422058105469
    6. ' ]' → logprob: -10.815422058105469
    7. ')],' → logprob: -11.190422058105469
    8. ' ' → logprob: -12.065422058105469
    9. 'for' → logprob: -12.190422058105469
    10. '<|end|>' → logprob: -12.565422058105469

Token 97: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38703009486198425
    2. ' for' → logprob: -1.1370301246643066
    3. '<|end|>' → logprob: -9.012029647827148
    4. ')' → logprob: -11.387029647827148
    5. '	for' → logprob: -11.637029647827148
    6. ' in' → logprob: -12.262029647827148
    7. ' ' → logprob: -12.387029647827148
    8. ']' → logprob: -12.887029647827148
    9. '<|end|>' → logprob: -12.887029647827148
    10. '[' → logprob: -14.387029647827148

Token 98: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5864658355712891
    2. 'range' → logprob: -0.8364658355712891
    3. '_' → logprob: -4.586465835571289
    4. '_range' → logprob: -8.461465835571289
    5. '(range' → logprob: -10.711465835571289
    6. ' in' → logprob: -11.086465835571289
    7. '	range' → logprob: -11.336465835571289
    8. ' _' → logprob: -11.586465835571289
    9. 'a' → logprob: -12.086465835571289
    10. '_a' → logprob: -12.711465835571289

Token 99: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.041215188801288605
    2. 'in' → logprob: -3.416215181350708
    3. ' in' → logprob: -5.791215419769287
    4. ' range' → logprob: -6.166215419769287
    5. '(range' → logprob: -6.291215419769287
    6. '_' → logprob: -7.666215419769287
    7. '_range' → logprob: -9.916214942932129
    8. '(' → logprob: -12.416214942932129
    9. '_in' → logprob: -12.666214942932129
    10. '	range' → logprob: -12.791214942932129

Token 100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003318995935842395
    2. ' range' → logprob: -5.753318786621094
    3. 'a' → logprob: -9.503318786621094
    4. '(range' → logprob: -9.628318786621094
    5. '(a' → logprob: -14.253318786621094
    6. '	range' → logprob: -15.503318786621094
    7. '_range' → logprob: -17.253318786621094
    8. ' a' → logprob: -18.128318786621094
    9. ' xrange' → logprob: -18.253318786621094
    10. '(' → logprob: -18.878318786621094

Token 101: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00028255043434910476
    2. 'a' → logprob: -8.375282287597656
    3. '(' → logprob: -9.875282287597656
    4. 'range' → logprob: -16.375282287597656
    5. '(c' → logprob: -16.500282287597656
    6. '	a' → logprob: -16.875282287597656
    7. ' (' → logprob: -17.000282287597656
    8. '_a' → logprob: -17.125282287597656
    9. '(s' → logprob: -17.750282287597656
    10. '(range' → logprob: -17.750282287597656

Token 102: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012210815213620663
    2. ']' → logprob: -4.512210845947266
    3. ')' → logprob: -6.762210845947266
    4. '])' → logprob: -12.387210845947266
    5. ')])' → logprob: -14.262210845947266
    6. '])]' → logprob: -14.887210845947266
    7. ')],' → logprob: -15.137210845947266
    8. ' ]' → logprob: -16.262210845947266
    9. '')]' → logprob: -17.262210845947266
    10. '](' → logprob: -17.637210845947266

Token 103: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026701882015913725
    2. '
' → logprob: -6.0026702880859375
    3. '<|end|>' → logprob: -8.877670288085938
    4. '_' → logprob: -11.377670288085938
    5. '```' → logprob: -11.502670288085938
    6. '\' → logprob: -11.502670288085938
    7. ' def' → logprob: -11.752670288085938
    8. '_
' → logprob: -12.377670288085938
    9. '_def' → logprob: -13.002670288085938
    10. '<|end|>' → logprob: -13.252670288085938

Token 104: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2520327568054199
    2. '_list' → logprob: -1.50203275680542
    3. '_' → logprob: -9.377033233642578
    4. ' ' → logprob: -12.252033233642578
    5. ' ' → logprob: -12.252033233642578
    6. '_List' → logprob: -13.002033233642578
    7. ' List' → logprob: -13.127033233642578
    8. '_lst' → logprob: -14.002033233642578
    9. '_l' → logprob: -14.752033233642578
    10. 'List' → logprob: -14.877033233642578

Token 105: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.999452772201039e-05
    2. '_list' → logprob: -11.000029563903809
    3. 'ist' → logprob: -11.375029563903809
    4. 'tuple' → logprob: -15.375029563903809
    5. 'lst' → logprob: -15.500029563903809
    6. 'List' → logprob: -15.875029563903809
    7. 'int' → logprob: -15.875029563903809
    8. 'l' → logprob: -16.000030517578125
    9. 'range' → logprob: -16.250030517578125
    10. 'lists' → logprob: -16.250030517578125

Token 106: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.004644553642719984
    2. '2' → logprob: -5.379644393920898
    3. '1' → logprob: -11.504644393920898
    4. 'nd' → logprob: -12.004644393920898
    5. '<|end|>' → logprob: -12.879644393920898
    6. 'n' → logprob: -13.754644393920898
    7. 'd' → logprob: -14.004644393920898
    8. 'def' → logprob: -14.379644393920898
    9. 'deque' → logprob: -14.379644393920898
    10. '```' → logprob: -14.504644393920898

Token 107: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: 0.0
    2. 'a' → logprob: -18.5
    3. '(d' → logprob: -18.75
    4. 'д' → logprob: -18.875
    5. '_d' → logprob: -19.25
    6. 'dim' → logprob: -19.5
    7. 'c' → logprob: -19.75
    8. 'def' → logprob: -20.0
    9. ' d' → logprob: -20.25
    10. '```' → logprob: -20.75

Token 108: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0038708543870598078
    2. '(' → logprob: -5.628870964050293
    3. '(x' → logprob: -8.253870964050293
    4. 'a' → logprob: -12.128870964050293
    5. '<|end|>' → logprob: -13.003870964050293
    6. '(n' → logprob: -13.503870964050293
    7. '(s' → logprob: -15.253870964050293
    8. '(lambda' → logprob: -15.628870964050293
    9. ' (' → logprob: -15.753870964050293
    10. '(ax' → logprob: -16.003870010375977

Token 109: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002205451251938939
    2. ' ,' → logprob: -6.3772053718566895
    3. '<|end|>' → logprob: -8.252205848693848
    4. ',a' → logprob: -8.752205848693848
    5. ',b' → logprob: -9.752205848693848
    6. '(' → logprob: -11.627205848693848
    7. '(a' → logprob: -13.002205848693848
    8. '_,' → logprob: -13.002205848693848
    9. ',x' → logprob: -13.252205848693848
    10. 'a' → logprob: -13.502205848693848

Token 110: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.16034100949764252
    2. ',' → logprob: -1.9103410243988037
    3. ' ,' → logprob: -9.535341262817383
    4. 'c' → logprob: -10.035341262817383
    5. ',C' → logprob: -15.535341262817383
    6. ' c' → logprob: -15.535341262817383
    7. ',d' → logprob: -15.910341262817383
    8. ',s' → logprob: -17.160341262817383
    9. ',a' → logprob: -17.285341262817383
    10. ',_' → logprob: -17.285341262817383

Token 111: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0297706201672554
    2. ',' → logprob: -3.529770612716675
    3. ' ,' → logprob: -10.904770851135254
    4. 'd' → logprob: -13.529770851135254
    5. ',D' → logprob: -16.154769897460938
    6. ',
' → logprob: -16.279769897460938
    7. ',s' → logprob: -16.404769897460938
    8. ',c' → logprob: -16.904769897460938
    9. ',v' → logprob: -17.154769897460938
    10. ',_' → logprob: -17.779769897460938

Token 112: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25444725155830383
    2. ',v' → logprob: -1.5044472217559814
    3. ' ,' → logprob: -6.0044474601745605
    4. ',f' → logprob: -10.004446983337402
    5. ',value' → logprob: -14.254446983337402
    6. ',_' → logprob: -15.004446983337402
    7. ',s' → logprob: -15.129446983337402
    8. '_,' → logprob: -15.879446983337402
    9. 'v' → logprob: -16.50444793701172
    10. ' v' → logprob: -16.62944793701172

Token 113: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006234621629118919
    2. ' ):' → logprob: -5.381234645843506
    3. ',' → logprob: -6.881234645843506
    4. ',v' → logprob: -8.131234169006348
    5. ')' → logprob: -9.131234169006348
    6. ':' → logprob: -9.756234169006348
    7. ']:' → logprob: -10.006234169006348
    8. '):
' → logprob: -10.756234169006348
    9. ' ' → logprob: -11.381234169006348
    10. ' ,' → logprob: -11.631234169006348

Token 114: ' A' (ID: 355)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23544111847877502
    2. 'return' → logprob: -1.6104410886764526
    3. 'eturn' → logprob: -4.860441207885742
    4. ' =' → logprob: -7.110441207885742
    5. '	return' → logprob: -7.735441207885742
    6. ':return' → logprob: -7.860441207885742
    7. '   ' → logprob: -8.735441207885742
    8. '=[[' → logprob: -9.110441207885742
    9. '=' → logprob: -9.360441207885742
    10. ' ' → logprob: -9.610441207885742

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08960974961519241
    2. ' =' → logprob: -2.4646098613739014
    3. '=[' → logprob: -8.33961009979248
    4. '=[]' → logprob: -9.58961009979248
    5. ' =[' → logprob: -9.58961009979248
    6. '=[]
' → logprob: -10.21461009979248
    7. '_=' → logprob: -10.21461009979248
    8. '_' → logprob: -10.33961009979248
    9. '=_' → logprob: -10.58961009979248
    10. '=[[' → logprob: -10.96461009979248

Token 116: ' [];' (ID: 103967)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.002597776474431157
    2. '[e' → logprob: -6.002597808837891
    3. ' [[' → logprob: -9.37759780883789
    4. '[_' → logprob: -11.25259780883789
    5. '[a' → logprob: -11.75259780883789
    6. '[' → logprob: -11.87759780883789
    7. ' [[[' → logprob: -12.50259780883789
    8. '[]' → logprob: -13.25259780883789
    9. ' [' → logprob: -13.25259780883789
    10. 'e' → logprob: -13.50259780883789

Token 117: ' [' (ID: 723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04859498515725136
    2. ' for' → logprob: -3.0485949516296387
    3. '	for' → logprob: -12.548595428466797
    4. '   ' → logprob: -12.673595428466797
    5. 'def' → logprob: -15.298595428466797
    6. '[' → logprob: -15.423595428466797
    7. '
' → logprob: -15.923595428466797
    8. ' ' → logprob: -16.423595428466797
    9. ' ' → logprob: -17.048595428466797
    10. ' 
' → logprob: -17.048595428466797

Token 118: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00015467056073248386
    2. '[A' → logprob: -9.875154495239258
    3. '_' → logprob: -10.000154495239258
    4. ' A' → logprob: -10.250154495239258
    5. '_A' → logprob: -11.750154495239258
    6. '(A' → logprob: -12.375154495239258
    7. '[' → logprob: -13.000154495239258
    8. 'def' → logprob: -13.125154495239258
    9. '
' → logprob: -13.375154495239258
    10. '[
' → logprob: -13.500154495239258

Token 119: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005821037339046597
    2. '.' → logprob: -8.125581741333008
    3. '.extend' → logprob: -8.375581741333008
    4. 'append' → logprob: -9.875581741333008
    5. '.app' → logprob: -13.000581741333008
    6. '.ap' → logprob: -13.875581741333008
    7. 'Append' → logprob: -15.125581741333008
    8. '_append' → logprob: -15.250581741333008
    9. ':=' → logprob: -15.625581741333008
    10. '.Append' → logprob: -16.500581741333008

Token 120: '(_' (ID: 4963)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.08118502050638199
    2. '(_' → logprob: -2.7061851024627686
    3. '([]' → logprob: -4.5811848640441895
    4. '(' → logprob: -7.4561848640441895
    5. '([])
' → logprob: -9.331185340881348
    6. '([[' → logprob: -9.456185340881348
    7. '((' → logprob: -9.831185340881348
    8. '[_' → logprob: -10.206185340881348
    9. '((_' → logprob: -10.706185340881348
    10. '(([' → logprob: -10.831185340881348

Token 121: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.5491004129871726e-05
    2. '_list' → logprob: -10.000045776367188
    3. 'for' → logprob: -19.250045776367188
    4. ' list' → logprob: -19.500045776367188
    5. '(list' → logprob: -19.875045776367188
    6. '[' → logprob: -21.250045776367188
    7. '-list' → logprob: -21.375045776367188
    8. '([' → logprob: -21.750045776367188
    9. '[list' → logprob: -21.750045776367188
    10. '[_' → logprob: -22.375045776367188

Token 122: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11316780745983124
    2. 'd' → logprob: -2.3631677627563477
    3. '4' → logprob: -4.613167762756348
    4. 'a' → logprob: -6.113167762756348
    5. 'e' → logprob: -7.613167762756348
    6. 'c' → logprob: -8.863167762756348
    7. 'def' → logprob: -10.113167762756348
    8. '2' → logprob: -10.363167762756348
    9. 'list' → logprob: -10.863167762756348
    10. '(a' → logprob: -11.988167762756348

Token 123: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.512236498361744e-07
    2. '4' → logprob: -14.625000953674316
    3. 'a' → logprob: -16.75
    4. 'def' → logprob: -17.125
    5. 'д' → logprob: -18.625
    6. 'dim' → logprob: -18.875
    7. 'c' → logprob: -19.625
    8. '3' → logprob: -19.625
    9. '```' → logprob: -19.875
    10. 'f' → logprob: -20.875

Token 124: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.375006675720215
    3. 'a' → logprob: -13.125006675720215
    4. ' (' → logprob: -15.625006675720215
    5. '(
' → logprob: -16.37500762939453
    6. ')(' → logprob: -17.00000762939453
    7. '```' → logprob: -17.00000762939453
    8. '](' → logprob: -17.12500762939453
    9. '<|end|>' → logprob: -17.12500762939453
    10. '(b' → logprob: -17.50000762939453

Token 125: ',c' (ID: 22261)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.017643632367253304
    2. '(a' → logprob: -4.517643451690674
    3. ',c' → logprob: -5.767643451690674
    4. 'c' → logprob: -5.892643451690674
    5. '(' → logprob: -8.017643928527832
    6. 'a' → logprob: -8.767643928527832
    7. ')' → logprob: -9.892643928527832
    8. ',' → logprob: -9.892643928527832
    9. ')c' → logprob: -10.017643928527832
    10. '(d' → logprob: -10.517643928527832

Token 126: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0030121726449579
    2. 'd' → logprob: -5.878012180328369
    3. ',' → logprob: -8.503011703491211
    4. ',e' → logprob: -13.503011703491211
    5. ' ,' → logprob: -13.753011703491211
    6. ' d' → logprob: -13.878011703491211
    7. '(d' → logprob: -14.378011703491211
    8. ')d' → logprob: -15.628011703491211
    9. '```' → logprob: -16.25301170349121
    10. '	d' → logprob: -16.25301170349121

Token 127: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.0003967071825172752
    2. ',' → logprob: -8.125396728515625
    3. 'e' → logprob: -9.250396728515625
    4. ' ,' → logprob: -12.375396728515625
    5. ',v' → logprob: -16.375396728515625
    6. '(e' → logprob: -16.625396728515625
    7. '	e' → logprob: -16.875396728515625
    8. ' e' → logprob: -17.125396728515625
    9. ';e' → logprob: -17.125396728515625
    10. ')e' → logprob: -17.625396728515625

Token 128: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ' )' → logprob: -12.125009536743164
    3. '))' → logprob: -12.875009536743164
    4. '())' → logprob: -14.125009536743164
    5. ')]' → logprob: -14.625009536743164
    6. ')
' → logprob: -15.375009536743164
    7. ')`' → logprob: -16.750009536743164
    8. '])' → logprob: -16.875009536743164
    9. '）' → logprob: -17.250009536743164
    10. '`)' → logprob: -18.625009536743164

Token 129: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16023346781730652
    2. 'for' → logprob: -1.910233497619629
    3. ']' → logprob: -12.535233497619629
    4. '	for' → logprob: -12.785233497619629
    5. ' ' → logprob: -13.535233497619629
    6. ')' → logprob: -14.660233497619629
    7. '()' → logprob: -14.660233497619629
    8. ' or' → logprob: -15.035233497619629
    9. '
' → logprob: -15.035233497619629
    10. ';' → logprob: -16.285232543945312

Token 130: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38979393243789673
    2. '_' → logprob: -1.139793872833252
    3. ' range' → logprob: -5.889793872833252
    4. '_range' → logprob: -8.88979434967041
    5. 'in' → logprob: -11.76479434967041
    6. '	range' → logprob: -13.51479434967041
    7. ' _' → logprob: -14.01479434967041
    8. ' in' → logprob: -14.26479434967041
    9. '_in' → logprob: -14.26479434967041
    10. '_]' → logprob: -14.38979434967041

Token 131: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002868417650461197
    2. ' range' → logprob: -8.500287055969238
    3. 'in' → logprob: -10.125287055969238
    4. '_' → logprob: -10.250287055969238
    5. '_range' → logprob: -11.875287055969238
    6. 'A' → logprob: -14.875287055969238
    7. '(range' → logprob: -15.500287055969238
    8. '_in' → logprob: -16.000286102294922
    9. '	range' → logprob: -16.250286102294922
    10. ' in' → logprob: -16.750286102294922

Token 132: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.627176768844947e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -17.25009536743164
    4. '_range' → logprob: -17.37509536743164
    5. '_' → logprob: -17.75009536743164
    6. '	range' → logprob: -17.75009536743164
    7. 'ra' → logprob: -18.62509536743164
    8. 'ran' → logprob: -18.62509536743164
    9. 'r' → logprob: -19.25009536743164
    10. '
' → logprob: -19.37509536743164

Token 133: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.023249205201864243
    2. 'a' → logprob: -3.7732491493225098
    3. '(' → logprob: -12.648249626159668
    4. ' (' → logprob: -15.148249626159668
    5. ' a' → logprob: -16.14824867248535
    6. '	a' → logprob: -17.27324867248535
    7. ')a' → logprob: -17.39824867248535
    8. '(
' → logprob: -18.27324867248535
    9. ' ' → logprob: -18.39824867248535
    10. '   ' → logprob: -18.52324867248535

Token 134: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009989929385483265
    2. ']
' → logprob: -5.2599897384643555
    3. ')]' → logprob: -5.5099897384643555
    4. ')' → logprob: -7.6349897384643555
    5. 'return' → logprob: -9.009989738464355
    6. '];' → logprob: -9.884989738464355
    7. ' ]' → logprob: -11.384989738464355
    8. ']

' → logprob: -11.509989738464355
    9. ')
' → logprob: -12.509989738464355
    10. ']
' → logprob: -12.509989738464355

Token 135: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01365470141172409
    2. 'return' → logprob: -4.388654708862305
    3. ']
' → logprob: -7.638654708862305
    4. ')' → logprob: -8.138654708862305
    5. ' ]' → logprob: -9.013654708862305
    6. ' return' → logprob: -9.138654708862305
    7. '];' → logprob: -10.013654708862305
    8. ')]' → logprob: -10.263654708862305
    9. ';' → logprob: -10.638654708862305
    10. ')return' → logprob: -11.138654708862305

Token 136: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03805021569132805
    2. ' return' → logprob: -3.2880501747131348
    3. '	return' → logprob: -12.413050651550293
    4. ' 
' → logprob: -14.288050651550293
    5. 'eturn' → logprob: -14.288050651550293
    6. '   ' → logprob: -14.413050651550293
    7. '```' → logprob: -14.538050651550293
    8. ' ' → logprob: -14.913050651550293
    9. '
' → logprob: -15.038050651550293
    10. 'print' → logprob: -15.538050651550293

Token 137: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007100477814674377
    2. ' A' → logprob: -7.2507100105285645
    3. '	A' → logprob: -18.000709533691406
    4. '(A' → logprob: -18.375709533691406
    5. ' ' → logprob: -19.750709533691406
    6. '[A' → logprob: -19.750709533691406
    7. ' ' → logprob: -20.875709533691406
    8. 'Ａ' → logprob: -21.125709533691406
    9. 'a' → logprob: -21.500709533691406
    10. '_A' → logprob: -22.000709533691406

Token 138: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: 'INT' (ID: 7154)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06580282747745514
    2. '<|end|>' → logprob: -3.565802812576294
    3. '#' → logprob: -4.565803050994873
    4. ' ' → logprob: -5.065803050994873
    5. ')' → logprob: -5.440803050994873
    6. '
' → logprob: -5.815803050994873
    7. '_' → logprob: -6.190803050994873
    8. ' 
' → logprob: -6.690803050994873
    9. 'd' → logprob: -6.690803050994873
    10. ' def' → logprob: -7.065803050994873

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18463265895843506
    2. '=' → logprob: -2.3096327781677246
    3. '()' → logprob: -3.6846327781677246
    4. '_' → logprob: -4.434632778167725
    5. 'ERRUP' → logprob: -4.559632778167725
    6. '_MIN' → logprob: -4.684632778167725
    7. '8' → logprob: -6.059632778167725
    8. '_MAX' → logprob: -6.309632778167725
    9. '=[]' → logprob: -7.309632778167725
    10. '=_' → logprob: -7.309632778167725

Token 141: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1734333336353302
    2. '10' → logprob: -2.173433303833008
    3. '1' → logprob: -4.048433303833008
    4. '100' → logprob: -4.798433303833008
    5. '0' → logprob: -5.173433303833008
    6. '(int' → logprob: -5.423433303833008
    7. 'lambda' → logprob: -5.673433303833008
    8. ' ' → logprob: -6.048433303833008
    9. ' int' → logprob: -6.298433303833008
    10. '123' → logprob: -7.048433303833008

Token 142: ' :' (ID: 712)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.03244473412632942
    2. 'x' → logprob: -3.532444715499878
    3. 'int' → logprob: -6.032444953918457
    4. ' s' → logprob: -9.532444953918457
    5. ' int' → logprob: -9.657444953918457
    6. 's' → logprob: -9.657444953918457
    7. 'a' → logprob: -10.407444953918457
    8. ':' → logprob: -11.032444953918457
    9. ' n' → logprob: -11.157444953918457
    10. 'n' → logprob: -12.032444953918457

Token 143: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804171830415726
    2. ' int' → logprob: -3.288041830062866
    3. '	int' → logprob: -15.788042068481445
    4. '(int' → logprob: -16.413042068481445
    5. ' ' → logprob: -17.163042068481445
    6. ':int' → logprob: -18.163042068481445
    7. '<int' → logprob: -18.538042068481445
    8. '[int' → logprob: -18.663042068481445
    9. 'ints' → logprob: -19.038042068481445
    10. '=int' → logprob: -19.788042068481445

Token 144: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.042915720492601395
    2. '(' → logprob: -3.9179158210754395
    3. 'input' → logprob: -4.2929158210754395
    4. '()' → logprob: -4.7929158210754395
    5. '(sys' → logprob: -9.417915344238281
    6. ' input' → logprob: -9.917915344238281
    7. ' (' → logprob: -11.167915344238281
    8. '(
' → logprob: -11.167915344238281
    9. '_input' → logprob: -13.167915344238281
    10. '=input' → logprob: -13.542915344238281

Token 145: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00022094044834375381
    2. '()' → logprob: -8.500221252441406
    3. ')' → logprob: -11.250221252441406
    4. ' ())' → logprob: -13.000221252441406
    5. '())
' → logprob: -13.875221252441406
    6. '(' → logprob: -14.125221252441406
    7. '()))' → logprob: -16.000221252441406
    8. '()
' → logprob: -16.125221252441406
    9. '().' → logprob: -16.500221252441406
    10. '();)' → logprob: -16.625221252441406

Token 146: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5607256889343262
    2. 'STR' → logprob: -1.9357256889343262
    3. 'LIST' → logprob: -2.310725688934326
    4. '<|end|>' → logprob: -2.560725688934326
    5. 'INT' → logprob: -3.435725688934326
    6. 'FLOAT' → logprob: -3.685725688934326
    7. 'UINT' → logprob: -4.560725688934326
    8. 'FLT' → logprob: -5.435725688934326
    9. 'STRA' → logprob: -5.685725688934326
    10. '#' → logprob: -5.810725688934326

Token 147: ' MAP' (ID: 53455)
  Prédit: ' LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' LIST' → logprob: -0.9486499428749084
    2. ' MAP' → logprob: -1.1986498832702637
    3. 'STR' → logprob: -2.4486498832702637
    4. 'LIST' → logprob: -2.5736498832702637
    5. ' STR' → logprob: -2.6986498832702637
    6. 'MAP' → logprob: -3.1986498832702637
    7. ' list' → logprob: -4.823649883270264
    8. 'List' → logprob: -5.323649883270264
    9. ' map' → logprob: -5.448649883270264
    10. 'INT' → logprob: -5.573649883270264

Token 148: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.013812391087412834
    2. '()' → logprob: -4.51381254196167
    3. '(lambda' → logprob: -6.13881254196167
    4. '(' → logprob: -8.013812065124512
    5. '():
' → logprob: -8.513812065124512
    6. ' ()' → logprob: -10.888812065124512
    7. ' ():' → logprob: -11.013812065124512
    8. '():

' → logprob: -11.388812065124512
    9. '();' → logprob: -11.888812065124512
    10. '(int' → logprob: -12.513812065124512

Token 149: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.24948829412460327
    2. ' map' → logprob: -1.874488353729248
    3. ' list' → logprob: -2.999488353729248
    4. 'return' → logprob: -4.249488353729248
    5. 'map' → logprob: -6.124488353729248
    6. 'list' → logprob: -6.874488353729248
    7. ' ' → logprob: -10.62448787689209
    8. '   ' → logprob: -10.99948787689209
    9. ' ' → logprob: -11.37448787689209
    10. '	return' → logprob: -12.49948787689209

Token 150: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6939484477043152
    2. 'map' → logprob: -0.6939484477043152
    3. ' map' → logprob: -7.443948268890381
    4. ' list' → logprob: -8.443948745727539
    5. '	map' → logprob: -15.318948745727539
    6. '(map' → logprob: -15.568948745727539
    7. 'tuple' → logprob: -15.818948745727539
    8. '[' → logprob: -17.06894874572754
    9. '[list' → logprob: -17.06894874572754
    10. 'lambda' → logprob: -17.69394874572754

Token 151: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009253957541659474
    2. 'int' → logprob: -7.000925540924072
    3. '(' → logprob: -11.500925064086914
    4. '<int' → logprob: -12.750925064086914
    5. '=int' → logprob: -15.250925064086914
    6. '[int' → logprob: -15.875925064086914
    7. ',int' → logprob: -16.250925064086914
    8. '(
' → logprob: -17.000925064086914
    9. ' int' → logprob: -17.000925064086914
    10. ':int' → logprob: -17.000925064086914

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7343482971191406
    2. '())' → logprob: -1.7343482971191406
    3. 'input' → logprob: -2.1093482971191406
    4. '(),' → logprob: -2.2343482971191406
    5. ',input' → logprob: -3.1093482971191406
    6. '()' → logprob: -3.3593482971191406
    7. ')' → logprob: -3.4843482971191406
    8. ' input' → logprob: -5.984348297119141
    9. ' ()' → logprob: -7.234348297119141
    10. '(' → logprob: -7.359348297119141

Token 153: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018151231110095978
    2. ' input' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.26815128326416
    4. '	input' → logprob: -15.01815128326416
    5. ')' → logprob: -16.268150329589844
    6. '(input' → logprob: -16.268150329589844
    7. '=input' → logprob: -16.643150329589844
    8. '<input' → logprob: -17.018150329589844
    9. '_input' → logprob: -17.393150329589844
    10. 'inp' → logprob: -17.643150329589844

Token 154: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3425219549390022e-05
    2. '()' → logprob: -11.37501335144043
    3. ' ().' → logprob: -13.37501335144043
    4. '(' → logprob: -15.12501335144043
    5. ')' → logprob: -17.00001335144043
    6. '.' → logprob: -18.75001335144043
    7. ' ()' → logprob: -18.87501335144043
    8. '())' → logprob: -19.37501335144043
    9. 'split' → logprob: -19.75001335144043
    10. '.split' → logprob: -20.25001335144043

Token 155: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.363617962459102e-05
    2. 'strip' → logprob: -9.500083923339844
    3. 'rstrip' → logprob: -12.000083923339844
    4. ' split' → logprob: -13.000083923339844
    5. 'spl' → logprob: -15.250083923339844
    6. '(split' → logprob: -18.125083923339844
    7. '.split' → logprob: -19.000083923339844
    8. ')' → logprob: -19.875083923339844
    9. 'plit' → logprob: -20.000083923339844
    10. 's' → logprob: -20.000083923339844

Token 156: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0822334885597229
    2. ')' → logprob: -2.582233428955078
    3. '()' → logprob: -5.707233428955078
    4. '())
' → logprob: -11.707233428955078
    5. '(' → logprob: -13.207233428955078
    6. '))' → logprob: -13.332233428955078
    7. ' ())' → logprob: -13.582233428955078
    8. '()
' → logprob: -13.707233428955078
    9. ' )' → logprob: -14.457233428955078
    10. '()))' → logprob: -14.707233428955078

Token 157: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007851249538362026
    2. 'from' → logprob: -4.8828511238098145
    3. 'import' → logprob: -9.632851600646973
    4. '#' → logprob: -10.257851600646973
    5. '<|end|>' → logprob: -10.507851600646973
    6. 'class' → logprob: -10.757851600646973
    7. ' ' → logprob: -11.382851600646973
    8. ')' → logprob: -11.507851600646973
    9. '[]' → logprob: -11.507851600646973
    10. ' def' → logprob: -11.882851600646973

Token 158: ' LIST' (ID: 49854)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.022499775514006615
    2. ' LIST' → logprob: -3.8974997997283936
    3. 'list' → logprob: -7.2724995613098145
    4. 'S' → logprob: -8.022500038146973
    5. 'L' → logprob: -8.147500038146973
    6. ' list' → logprob: -9.022500038146973
    7. '_LIST' → logprob: -9.397500038146973
    8. 'LS' → logprob: -9.522500038146973
    9. '_list' → logprob: -9.772500038146973
    10. 'LIN' → logprob: -9.772500038146973

Token 159: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -3.845798710244708e-05
    2. '()' → logprob: -10.250038146972656
    3. '():
' → logprob: -13.125038146972656
    4. ' ():' → logprob: -13.875038146972656
    5. '():

' → logprob: -16.625038146972656
    6. '();' → logprob: -17.375038146972656
    7. ' ()' → logprob: -17.875038146972656
    8. '()>' → logprob: -18.125038146972656
    9. '(' → logprob: -18.875038146972656
    10. '():
' → logprob: -19.000038146972656

Token 160: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.034164026379585266
    2. '=None' → logprob: -3.7841639518737793
    3. '=n' → logprob: -5.284163951873779
    4. '=' → logprob: -5.784163951873779
    5. '(n' → logprob: -6.034163951873779
    6. ',n' → logprob: -9.159164428710938
    7. ',' → logprob: -9.784164428710938
    8. ')' → logprob: -9.784164428710938
    9. ' ):' → logprob: -10.534164428710938
    10. '):
' → logprob: -10.784164428710938

Token 161: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0031941127963364124
    2. '():' → logprob: -6.128194332122803
    3. '):
' → logprob: -8.003193855285645
    4. '=None' → logprob: -8.253193855285645
    5. '()' → logprob: -8.628193855285645
    6. ' ):' → logprob: -8.878193855285645
    7. ')' → logprob: -10.128193855285645
    8. '(n' → logprob: -11.378193855285645
    9. ',' → logprob: -11.378193855285645
    10. '=[]' → logprob: -11.753193855285645

Token 162: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11323125660419464
    2. 'return' → logprob: -2.2382311820983887
    3. ' list' → logprob: -8.863231658935547
    4. '   ' → logprob: -8.863231658935547
    5. '[]' → logprob: -10.238231658935547
    6. '	return' → logprob: -10.738231658935547
    7. 'list' → logprob: -11.113231658935547
    8. ' if' → logprob: -11.613231658935547
    9. ' None' → logprob: -11.738231658935547
    10. ' [' → logprob: -12.113231658935547

Token 163: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0007894979789853096
    2. '[list' → logprob: -7.750789642333984
    3. ' list' → logprob: -8.000789642333984
    4. '[]' → logprob: -11.250789642333984
    5. '(list' → logprob: -12.250789642333984
    6. '[' → logprob: -12.250789642333984
    7. '[int' → logprob: -14.625789642333984
    8. '[n' → logprob: -16.375789642333984
    9. '=list' → logprob: -16.500789642333984
    10. '	list' → logprob: -16.625789642333984

Token 164: '(M' (ID: 6103)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0012273734901100397
    2. '()' → logprob: -8.001227378845215
    3. '(input' → logprob: -8.001227378845215
    4. '(M' → logprob: -8.376227378845215
    5. '(' → logprob: -8.626227378845215
    6. '(int' → logprob: -9.376227378845215
    7. 'map' → logprob: -10.626227378845215
    8. '(L' → logprob: -10.751227378845215
    9. '((' → logprob: -12.251227378845215
    10. '(list' → logprob: -12.626227378845215

Token 165: 'AP' (ID: 2685)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08112367987632751
    2. '(L' → logprob: -3.4561235904693604
    3. '(input' → logprob: -3.9561235904693604
    4. 'ap' → logprob: -4.0811238288879395
    5. '(map' → logprob: -5.9561238288879395
    6. '(int' → logprob: -6.0811238288879395
    7. '([]' → logprob: -6.3311238288879395
    8. '())' → logprob: -6.3311238288879395
    9. '().' → logprob: -7.5811238288879395
    10. '(range' → logprob: -8.706123352050781

Token 166: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38790756464004517
    2. '(n' → logprob: -1.3879075050354004
    3. '())' → logprob: -2.6379075050354004
    4. '(' → logprob: -8.262907981872559
    5. '()))' → logprob: -9.137907981872559
    6. ')' → logprob: -11.262907981872559
    7. '(None' → logprob: -11.262907981872559
    8. '((' → logprob: -11.637907981872559
    9. '())
' → logprob: -12.387907981872559
    10. '(N' → logprob: -13.012907981872559

Token 167: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008643647655844688
    2. ' n' → logprob: -4.758643627166748
    3. 'not' → logprob: -10.883644104003906
    4. ' not' → logprob: -11.508644104003906
    5. '(n' → logprob: -15.383644104003906
    6. '	n' → logprob: -16.758644104003906
    7. '_n' → logprob: -18.883644104003906
    8. 'n't' → logprob: -19.258644104003906
    9. ' ' → logprob: -19.633644104003906
    10. '$n' → logprob: -20.008644104003906

Token 169: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.07890751957893372
    2. ' is' → logprob: -2.5789074897766113
    3. '==' → logprob: -11.32890796661377
    4. 'else' → logprob: -12.70390796661377
    5. '()' → logprob: -13.57890796661377
    6. ')is' → logprob: -14.70390796661377
    7. ')' → logprob: -15.20390796661377
    8. '	is' → logprob: -15.45390796661377
    9. '=is' → logprob: -15.70390796661377
    10. 'in' → logprob: -16.453907012939453

Token 170: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.141186450899113e-05
    2. ' None' → logprob: -11.250020980834961
    3. 'not' → logprob: -11.750020980834961
    4. 'none' → logprob: -15.625020980834961
    5. 'Not' → logprob: -16.62502098083496
    6. '_None' → logprob: -16.62502098083496
    7. 'N' → logprob: -17.37502098083496
    8. '0' → logprob: -17.37502098083496
    9. '=None' → logprob: -17.87502098083496
    10. 'n' → logprob: -19.25002098083496

Token 171: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.018150178715586662
    2. ' else' → logprob: -4.018150329589844
    3. '()' → logprob: -16.518150329589844
    4. '[]' → logprob: -16.893150329589844
    5. '	else' → logprob: -17.268150329589844
    6. '_else' → logprob: -17.268150329589844
    7. 'elses' → logprob: -17.518150329589844
    8. ' ' → logprob: -17.643150329589844
    9. '
' → logprob: -18.393150329589844
    10. '```' → logprob: -18.768150329589844

Token 172: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.008754377253353596
    2. '[list' → logprob: -4.758754253387451
    3. ' list' → logprob: -9.50875473022461
    4. '[' → logprob: -9.75875473022461
    5. '_list' → logprob: -13.00875473022461
    6. '[int' → logprob: -13.13375473022461
    7. '[n' → logprob: -13.50875473022461
    8. '[_' → logprob: -14.63375473022461
    9. '[List' → logprob: -14.88375473022461
    10. ' [' → logprob: -15.00875473022461

Token 173: 'INT' (ID: 7154)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06199177727103233
    2. 'INT' → logprob: -2.8119916915893555
    3. '_INT' → logprob: -11.936991691589355
    4. '_int' → logprob: -12.186991691589355
    5. ' INT' → logprob: -12.436991691589355
    6. ' int' → logprob: -12.436991691589355
    7. '
' → logprob: -13.061991691589355
    8. 'Int' → logprob: -13.311991691589355
    9. '```' → logprob: -15.061991691589355
    10. '0' → logprob: -16.186992645263672

Token 174: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.7432603272027336e-06
    2. '()]' → logprob: -13.375001907348633
    3. ' ()' → logprob: -16.625001907348633
    4. 'for' → logprob: -18.375001907348633
    5. '（）' → logprob: -19.000001907348633
    6. '()<<' → logprob: -19.125001907348633
    7. '()=>' → logprob: -19.375001907348633
    8. '()
' → logprob: -19.625001907348633
    9. ' for' → logprob: -19.750001907348633
    10. '(' → logprob: -20.250001907348633

Token 175: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.7120533811976202e-05
    2. 'for' → logprob: -11.750017166137695
    3. ' for' → logprob: -12.125017166137695
    4. '()]' → logprob: -13.000017166137695
    5. ' ()' → logprob: -13.500017166137695
    6. '()
' → logprob: -17.500017166137695
    7. '（）' → logprob: -17.875017166137695
    8. '(' → logprob: -18.250017166137695
    9. '	for' → logprob: -18.625017166137695
    10. '()<<' → logprob: -18.750017166137695

Token 176: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.3226136767771095e-05
    2. '_range' → logprob: -10.875042915344238
    3. '_in' → logprob: -11.500042915344238
    4. '_i' → logprob: -11.750042915344238
    5. ' in' → logprob: -12.625042915344238
    6. ' _' → logprob: -13.000042915344238
    7. '_x' → logprob: -16.250043869018555
    8. '_n' → logprob: -16.500043869018555
    9. ' range' → logprob: -17.250043869018555
    10. '_id' → logprob: -17.250043869018555

Token 177: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.15357127785682678
    2. ' in' → logprob: -2.153571367263794
    3. 'range' → logprob: -3.653571367263794
    4. ' range' → logprob: -7.903571128845215
    5. '_' → logprob: -10.903571128845215
    6. ' ' → logprob: -13.653571128845215
    7. '_range' → logprob: -13.903571128845215
    8. 'i' → logprob: -14.153571128845215
    9. '(range' → logprob: -14.653571128845215
    10. '	range' → logprob: -14.903571128845215

Token 178: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00021867557370569557
    2. ' range' → logprob: -8.500218391418457
    3. '_' → logprob: -11.375218391418457
    4. '_range' → logprob: -12.625218391418457
    5. '	range' → logprob: -15.000218391418457
    6. '(range' → logprob: -18.125219345092773
    7. 'ran' → logprob: -18.875219345092773
    8. 'rang' → logprob: -19.250219345092773
    9. 'r' → logprob: -19.375219345092773
    10. '[' → logprob: -19.625219345092773

Token 179: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. 'n' → logprob: -16.25
    4. '	n' → logprob: -19.625
    5. '((' → logprob: -20.75
    6. ' n' → logprob: -21.125
    7. '(int' → logprob: -21.375
    8. '(
' → logprob: -21.875
    9. ' (' → logprob: -22.0
    10. '﻿' → logprob: -22.125

Token 180: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2133074253797531
    2. ']' → logprob: -1.9633073806762695
    3. '()]' → logprob: -2.9633073806762695
    4. ']()' → logprob: -10.83830738067627
    5. '])' → logprob: -11.21330738067627
    6. ')' → logprob: -11.33830738067627
    7. '])]' → logprob: -13.71330738067627
    8. '()' → logprob: -13.83830738067627
    9. '}]' → logprob: -14.21330738067627
    10. ' ]' → logprob: -14.33830738067627

Token 181: 'Yes' (ID: 13022)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11537960916757584
    2. 'class' → logprob: -2.240379571914673
    3. 'from' → logprob: -6.240379810333252
    4. '#' → logprob: -7.740379810333252
    5. 'import' → logprob: -9.115379333496094
    6. '@' → logprob: -11.240379333496094
    7. ' class' → logprob: -11.740379333496094
    8. 'N' → logprob: -12.115379333496094
    9. ' ' → logprob: -12.615379333496094
    10. ' def' → logprob: -12.865379333496094

Token 182: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2814118266105652
    2. ',' → logprob: -2.03141188621521
    3. ')' → logprob: -3.65641188621521
    4. '<|end|>' → logprob: -3.78141188621521
    5. ':' → logprob: -4.031411647796631
    6. '#' → logprob: -4.156411647796631
    7. '(
' → logprob: -4.531411647796631
    8. '_' → logprob: -4.906411647796631
    9. '.' → logprob: -5.906411647796631
    10. '[' → logprob: -6.281411647796631

Token 183: ' lambda' (ID: 27871)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.13379989564418793
    2. ''' → logprob: -2.1337997913360596
    3. ' "' → logprob: -5.133800029754639
    4. 'True' → logprob: -7.883800029754639
    5. ' '' → logprob: -8.25879955291748
    6. ' True' → logprob: -8.38379955291748
    7. '"No' → logprob: -10.00879955291748
    8. ' ' → logprob: -11.38379955291748
    9. ' lambda' → logprob: -11.88379955291748
    10. ' =' → logprob: -12.50879955291748

Token 184: ':' (ID: 25)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.26250535249710083
    2. 'True' → logprob: -2.262505292892456
    3. ' lambda' → logprob: -2.637505292892456
    4. ':' → logprob: -3.387505292892456
    5. 'lambda' → logprob: -4.262505531311035
    6. ' :' → logprob: -6.137505531311035
    7. ' ' → logprob: -6.137505531311035
    8. '"' → logprob: -6.512505531311035
    9. ' "' → logprob: -7.137505531311035
    10. '(lambda' → logprob: -9.137505531311035

Token 185: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31421777606010437
    2. '"' → logprob: -1.9392178058624268
    3. ' print' → logprob: -2.4392178058624268
    4. ' True' → logprob: -4.439217567443848
    5. 'True' → logprob: -4.689217567443848
    6. ''' → logprob: -4.814217567443848
    7. ' "' → logprob: -4.814217567443848
    8. ' '' → logprob: -7.064217567443848
    9. ' ' → logprob: -8.689217567443848
    10. '1' → logprob: -9.064217567443848

Token 186: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00667961360886693
    2. '('' → logprob: -5.506679534912109
    3. '(' → logprob: -6.006679534912109
    4. '(True' → logprob: -9.75667953491211
    5. '(
' → logprob: -10.13167953491211
    6. ' ("' → logprob: -10.88167953491211
    7. '"' → logprob: -11.38167953491211
    8. '(("' → logprob: -13.25667953491211
    9. '(*' → logprob: -13.75667953491211
    10. '()' → logprob: -13.88167953491211

Token 187: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0023193915840238333
    2. 'YES' → logprob: -6.1273193359375
    3. '"' → logprob: -9.1273193359375
    4. ' Yes' → logprob: -11.0023193359375
    5. 'Y' → logprob: -12.5023193359375
    6. 'yes' → logprob: -13.2523193359375
    7. 'Hello' → logprob: -13.7523193359375
    8. 'OK' → logprob: -14.8773193359375
    9. 'No' → logprob: -15.0023193359375
    10. 'Possible' → logprob: -15.2523193359375

Token 188: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.190178904333152e-05
    2. '")
' → logprob: -10.500031471252441
    3. '()' → logprob: -13.125031471252441
    4. ')' → logprob: -13.875031471252441
    5. ')")' → logprob: -14.375031471252441
    6. '"' → logprob: -14.625031471252441
    7. '");' → logprob: -16.500032424926758
    8. '")

' → logprob: -16.625032424926758
    9. '!")' → logprob: -16.625032424926758
    10. ' ")' → logprob: -16.875032424926758

Token 189: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0002016331272898242
    2. 'def' → logprob: -8.750201225280762
    3. ' No' → logprob: -10.125201225280762
    4. '
' → logprob: -13.500201225280762
    5. 'print' → logprob: -14.875201225280762
    6. '_No' → logprob: -15.000201225280762
    7. '_no' → logprob: -15.500201225280762
    8. 'NO' → logprob: -15.625201225280762
    9. '"No' → logprob: -16.125202178955078
    10. 'Yes' → logprob: -16.500202178955078

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008142299950122833
    2. ' =' → logprob: -5.008142471313477
    3. '()' → logprob: -6.758142471313477
    4. '=lambda' → logprob: -8.258142471313477
    5. '(' → logprob: -12.758142471313477
    6. '()=>' → logprob: -14.758142471313477
    7. '(lambda' → logprob: -15.133142471313477
    8. '()
' → logprob: -15.133142471313477
    9. '＝' → logprob: -15.133142471313477
    10. 'lambda' → logprob: -15.883142471313477

Token 191: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5797296762466431
    2. 'lambda' → logprob: -0.8297296762466431
    3. '(lambda' → logprob: -5.5797295570373535
    4. '=lambda' → logprob: -12.329730033874512
    5. 'ambda' → logprob: -12.579730033874512
    6. 'lam' → logprob: -14.579730033874512
    7. '_lambda' → logprob: -15.079730033874512
    8. '()' → logprob: -15.204730033874512
    9. ' λ' → logprob: -15.954730033874512
    10. ' lamb' → logprob: -15.954730033874512

Token 192: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6935720443725586
    2. '():' → logprob: -0.6935720443725586
    3. '()' → logprob: -7.818572044372559
    4. ' ():' → logprob: -10.818572044372559
    5. ' :' → logprob: -13.068572044372559
    6. ' ()' → logprob: -15.068572044372559
    7. 'print' → logprob: -15.943572044372559
    8. '(' → logprob: -16.693572998046875
    9. ':void' → logprob: -17.943572998046875
    10. '()
' → logprob: -17.943572998046875

Token 193: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01814994215965271
    2. ' print' → logprob: -4.0181498527526855
    3. '(print' → logprob: -17.893150329589844
    4. '	print' → logprob: -18.518150329589844
    5. ' ' → logprob: -19.143150329589844
    6. '   ' → logprob: -20.018150329589844
    7. 'pr' → logprob: -20.518150329589844
    8. ' ' → logprob: -20.643150329589844
    9. '.print' → logprob: -20.893150329589844
    10. '  ' → logprob: -21.393150329589844

Token 194: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -4.56102097814437e-05
    2. '(' → logprob: -10.000045776367188
    3. '('' → logprob: -16.625045776367188
    4. '(
' → logprob: -18.375045776367188
    5. '"' → logprob: -19.000045776367188
    6. ' ("' → logprob: -19.000045776367188
    7. '()' → logprob: -19.375045776367188
    8. '("")' → logprob: -19.750045776367188
    9. '(No' → logprob: -20.000045776367188
    10. '"No' → logprob: -20.125045776367188

Token 195: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00020377879263833165
    2. '"No' → logprob: -8.500204086303711
    3. '"' → logprob: -16.12520408630371
    4. '")' → logprob: -16.37520408630371
    5. ' No' → logprob: -16.62520408630371
    6. 'NO' → logprob: -18.00020408630371
    7. '“No' → logprob: -19.00020408630371
    8. 'no' → logprob: -19.25020408630371
    9. '(No' → logprob: -19.37520408630371
    10. 'Nein' → logprob: -20.37520408630371

Token 196: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0036032749339938164
    2. '()' → logprob: -5.753603458404541
    3. ')' → logprob: -8.003602981567383
    4. ')")' → logprob: -9.378602981567383
    5. '")
' → logprob: -12.378602981567383
    6. '())' → logprob: -13.753602981567383
    7. '("' → logprob: -14.378602981567383
    8. '"' → logprob: -15.378602981567383
    9. '")

' → logprob: -15.753602981567383
    10. '!")' → logprob: -16.253602981567383

Token 197: 'YES' (ID: 31958)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007897263392806053
    2. 'from' → logprob: -5.00789737701416
    3. '#' → logprob: -7.38289737701416
    4. '@' → logprob: -8.75789737701416
    5. 'class' → logprob: -9.00789737701416
    6. '...' → logprob: -9.88289737701416
    7. 'DEBUG' → logprob: -10.38289737701416
    8. 'Yes' → logprob: -11.00789737701416
    9. 'T' → logprob: -11.13289737701416
    10. 'import' → logprob: -11.13289737701416

Token 198: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0041603147983551025
    2. '=' → logprob: -5.629160404205322
    3. ' =' → logprob: -7.754160404205322
    4. '()
' → logprob: -10.254159927368164
    5. '=lambda' → logprob: -10.504159927368164
    6. ')' → logprob: -10.629159927368164
    7. '(' → logprob: -10.629159927368164
    8. ' ()' → logprob: -12.004159927368164
    9. '())' → logprob: -12.754159927368164
    10. '(lambda' → logprob: -13.379159927368164

Token 199: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.20496375858783722
    2. 'lambda' → logprob: -1.7049638032913208
    3. '(lambda' → logprob: -5.704963684082031
    4. '=lambda' → logprob: -8.454963684082031
    5. ' lamb' → logprob: -13.829963684082031
    6. '_lambda' → logprob: -14.079963684082031
    7. '.lambda' → logprob: -16.95496368408203
    8. ' =' → logprob: -17.95496368408203
    9. ' λ' → logprob: -18.32996368408203
    10. ')' → logprob: -18.57996368408203

Token 200: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.031630706042051315
    2. '()' → logprob: -3.531630754470825
    3. ':' → logprob: -6.281630516052246
    4. ' ():' → logprob: -12.406630516052246
    5. '(' → logprob: -13.406630516052246
    6. '();' → logprob: -14.281630516052246
    7. ' :' → logprob: -14.406630516052246
    8. '()
' → logprob: -15.281630516052246
    9. ' ()' → logprob: -15.531630516052246
    10. '()>' → logprob: -15.906630516052246

Token 201: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00861468818038702
    2. ' print' → logprob: -4.758614540100098
    3. '(print' → logprob: -16.133615493774414
    4. '	print' → logprob: -18.383615493774414
    5. ' ' → logprob: -18.758615493774414
    6. 'pr' → logprob: -19.008615493774414
    7. '   ' → logprob: -19.133615493774414
    8. '```' → logprob: -19.508615493774414
    9. ' ' → logprob: -19.758615493774414
    10. '_print' → logprob: -20.383615493774414

Token 202: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.375001907348633
    3. '('' → logprob: -14.750001907348633
    4. '"' → logprob: -15.500001907348633
    5. '()' → logprob: -17.375001907348633
    6. ' ("' → logprob: -18.750001907348633
    7. '("""' → logprob: -20.375001907348633
    8. '(("' → logprob: -20.500001907348633
    9. '(\"' → logprob: -20.500001907348633
    10. '(
' → logprob: -20.625001907348633

Token 203: 'YES' (ID: 31958)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -8.745069499127567e-05
    2. 'Yes' → logprob: -10.12508773803711
    3. '"No' → logprob: -10.25008773803711
    4. '("' → logprob: -11.50008773803711
    5. ''' → logprob: -14.25008773803711
    6. '")' → logprob: -14.87508773803711
    7. 'YES' → logprob: -15.25008773803711
    8. '“Yes' → logprob: -15.50008773803711
    9. '"W' → logprob: -16.12508773803711
    10. '"A' → logprob: -16.87508773803711

Token 204: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13695719838142395
    2. '")' → logprob: -2.6369571685791016
    3. '()' → logprob: -2.8869571685791016
    4. '())' → logprob: -7.386957168579102
    5. ')")' → logprob: -10.011957168579102
    6. ')
' → logprob: -13.636957168579102
    7. ' )' → logprob: -14.136957168579102
    8. '')' → logprob: -14.511957168579102
    9. ')"' → logprob: -14.886957168579102
    10. ' ()' → logprob: -15.136957168579102

Token 205: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.3891644775867462
    2. 'No' → logprob: -1.1391644477844238
    3. '=' → logprob: -6.639164447784424
    4. 'def' → logprob: -8.014164924621582
    5. 'lambda' → logprob: -8.139164924621582
    6. 'N' → logprob: -8.764164924621582
    7. ' =' → logprob: -10.014164924621582
    8. '=lambda' → logprob: -10.014164924621582
    9. ' No' → logprob: -10.389164924621582
    10. '_NO' → logprob: -10.639164924621582

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02330324426293373
    2. ' =' → logprob: -3.773303270339966
    3. '=lambda' → logprob: -9.773303031921387
    4. '()' → logprob: -14.273303031921387
    5. '＝' → logprob: -15.523303031921387
    6. ' ' → logprob: -18.523303985595703
    7. '(lambda' → logprob: -19.898303985595703
    8. '=
' → logprob: -20.023303985595703
    9. '=l' → logprob: -20.023303985595703
    10. ')' → logprob: -20.148303985595703

Token 207: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3213973343372345
    2. 'lambda' → logprob: -1.321397304534912
    3. '(lambda' → logprob: -4.821397304534912
    4. '()' → logprob: -10.82139778137207
    5. '=lambda' → logprob: -10.94639778137207
    6. '(' → logprob: -12.32139778137207
    7. ' lamb' → logprob: -13.57139778137207
    8. ' ()' → logprob: -13.82139778137207
    9. '_lambda' → logprob: -14.32139778137207
    10. 'lam' → logprob: -14.57139778137207

Token 208: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6204307675361633
    2. '()' → logprob: -1.1204307079315186
    3. '():' → logprob: -1.9954307079315186
    4. '=' → logprob: -9.120430946350098
    5. ' ()' → logprob: -10.245430946350098
    6. '(' → logprob: -10.620430946350098
    7. ' :' → logprob: -11.870430946350098
    8. ' ():' → logprob: -11.870430946350098
    9. ' =' → logprob: -13.245430946350098
    10. '()>' → logprob: -13.495430946350098

Token 209: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00861456897109747
    2. ' print' → logprob: -4.758614540100098
    3. '(print' → logprob: -19.258615493774414
    4. '	print' → logprob: -19.883615493774414
    5. 'pr' → logprob: -20.508615493774414
    6. '_print' → logprob: -22.008615493774414
    7. '.print' → logprob: -22.508615493774414
    8. ' ' → logprob: -22.758615493774414
    9. 'println' → logprob: -23.258615493774414
    10. ' ' → logprob: -23.258615493774414

Token 210: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4750719368457794
    2. '("' → logprob: -0.975071907043457
    3. '(' → logprob: -6.975071907043457
    4. '()"' → logprob: -10.225071907043457
    5. '("")' → logprob: -11.225071907043457
    6. '('' → logprob: -12.725071907043457
    7. '"' → logprob: -13.225071907043457
    8. '()
' → logprob: -13.725071907043457
    9. '(lambda' → logprob: -13.850071907043457
    10. '().' → logprob: -14.350071907043457

Token 211: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.00013607845176011324
    2. '")' → logprob: -9.000136375427246
    3. 'No' → logprob: -12.250136375427246
    4. '"' → logprob: -12.250136375427246
    5. ')' → logprob: -13.125136375427246
    6. '"No' → logprob: -14.000136375427246
    7. 'YES' → logprob: -16.00013542175293
    8. 'N' → logprob: -16.50013542175293
    9. '")
' → logprob: -17.62513542175293
    10. '"N' → logprob: -17.62513542175293

Token 212: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013220344670116901
    2. '()' → logprob: -4.888220310211182
    3. '")' → logprob: -5.388220310211182
    4. '())' → logprob: -6.888220310211182
    5. '')' → logprob: -12.63822078704834
    6. ')
' → logprob: -13.38822078704834
    7. '`)' → logprob: -14.01322078704834
    8. '#' → logprob: -14.51322078704834
    9. ')")' → logprob: -14.51322078704834
    10. ' )' → logprob: -14.88822078704834

Token 213: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03126949071884155
    2. 'class' → logprob: -3.5312695503234863
    3. 'from' → logprob: -6.531269550323486
    4. '#' → logprob: -10.656269073486328
    5. 'import' → logprob: -10.656269073486328
    6. '@' → logprob: -12.031269073486328
    7. 'n' → logprob: -12.906269073486328
    8. 'N' → logprob: -13.281269073486328
    9. ' def' → logprob: -14.281269073486328
    10. 'a' → logprob: -14.781269073486328

Token 214: ' ceil' (ID: 35964)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0227251835167408
    2. ' dfs' → logprob: -4.3977251052856445
    3. ' solve' → logprob: -4.7727251052856445
    4. 'main' → logprob: -7.1477251052856445
    5. 'dfs' → logprob: -8.647725105285645
    6. 'solve' → logprob: -8.772725105285645
    7. ' factorial' → logprob: -9.272725105285645
    8. ' input' → logprob: -9.522725105285645
    9. ' factor' → logprob: -9.897725105285645
    10. ' bfs' → logprob: -10.147725105285645

Token 215: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.27415600419044495
    2. '_div' → logprob: -1.8991559743881226
    3. '(x' → logprob: -3.149156093597412
    4. 'div' → logprob: -3.274156093597412
    5. '(' → logprob: -4.899156093597412
    6. '(n' → logprob: -6.899156093597412
    7. '(div' → logprob: -7.274156093597412
    8. 'Div' → logprob: -10.274155616760254
    9. '_DIV' → logprob: -10.399155616760254
    10. 'division' → logprob: -10.774155616760254

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.8497312895488e-05
    2. ' ,' → logprob: -10.875068664550781
    3. ',x' → logprob: -10.875068664550781
    4. ',a' → logprob: -11.000068664550781
    5. ',n' → logprob: -12.125068664550781
    6. '):' → logprob: -13.250068664550781
    7. 'div' → logprob: -13.250068664550781
    8. ',y' → logprob: -13.625068664550781
    9. ',num' → logprob: -13.750068664550781
    10. '_div' → logprob: -13.875068664550781

Token 217: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0008812114829197526
    2. ' y' → logprob: -7.375881195068359
    3. 'a' → logprob: -8.50088119506836
    4. 'm' → logprob: -11.12588119506836
    5. 'b' → logprob: -11.25088119506836
    6. 'div' → logprob: -11.75088119506836
    7. 'n' → logprob: -12.00088119506836
    8. 'k' → logprob: -12.12588119506836
    9. 'd' → logprob: -12.87588119506836
    10. ' ' → logprob: -14.00088119506836

Token 218: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011021859245374799
    2. ')' → logprob: -9.250110626220703
    3. '):
' → logprob: -11.875110626220703
    4. '=' → logprob: -12.125110626220703
    5. ' ):' → logprob: -13.500110626220703
    6. '=None' → logprob: -15.500110626220703
    7. ':' → logprob: -17.125110626220703
    8. '):
' → logprob: -17.250110626220703
    9. ')：' → logprob: -17.375110626220703
    10. ')=' → logprob: -17.500110626220703

Token 219: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08883868902921677
    2. ')' → logprob: -3.088838577270508
    3. '1' → logprob: -3.963838577270508
    4. ' y' → logprob: -4.088838577270508
    5. '0' → logprob: -6.588838577270508
    6. '):' → logprob: -6.963838577270508
    7. '):
' → logprob: -7.463838577270508
    8. ')y' → logprob: -7.713838577270508
    9. ' ' → logprob: -9.213838577270508
    10. ' )' → logprob: -9.713838577270508

Token 220: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003048378275707364
    2. '):
' → logprob: -8.62530517578125
    3. ')' → logprob: -9.00030517578125
    4. ' ):' → logprob: -13.50030517578125
    5. '):
' → logprob: -15.62530517578125
    6. ':' → logprob: -16.00030517578125
    7. ')：' → logprob: -16.37530517578125
    8. '):

' → logprob: -16.75030517578125
    9. '）：' → logprob: -17.50030517578125
    10. '*' → logprob: -18.12530517578125

Token 221: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6100689172744751
    2. '   ' → logprob: -1.360068917274475
    3. 'return' → logprob: -1.610068917274475
    4. '	return' → logprob: -8.985069274902344
    5. ' ' → logprob: -10.235069274902344
    6. '   ' → logprob: -12.735069274902344
    7. 'import' → logprob: -13.235069274902344
    8. 'from' → logprob: -13.735069274902344
    9. '    ' → logprob: -14.235069274902344
    10. '  ' → logprob: -14.360069274902344

Token 222: ' int' (ID: 677)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.018725503236055374
    2. '-' → logprob: -4.018725395202637
    3. ' (' → logprob: -7.893725395202637
    4. '-(' → logprob: -9.143725395202637
    5. ' -' → logprob: -9.393725395202637
    6. '-x' → logprob: -11.768725395202637
    7. 'x' → logprob: -13.268725395202637
    8. '((' → logprob: -13.893725395202637
    9. '(X' → logprob: -14.643725395202637
    10. ' ' → logprob: -15.393725395202637

Token 223: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.021251831203699112
    2. '(-' → logprob: -4.271251678466797
    3. '(' → logprob: -5.146251678466797
    4. '(x' → logprob: -7.396251678466797
    5. '-(' → logprob: -8.146251678466797
    6. '((' → logprob: -8.521251678466797
    7. ' -' → logprob: -9.021251678466797
    8. '-x' → logprob: -12.021251678466797
    9. '-div' → logprob: -12.896251678466797
    10. ' (' → logprob: -13.021251678466797

Token 224: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.6346918344497681
    2. '-' → logprob: -0.8846918344497681
    3. '-(' → logprob: -2.8846917152404785
    4. '(-(' → logprob: -7.2596917152404785
    5. '-x' → logprob: -8.009692192077637
    6. '(' → logprob: -9.634692192077637
    7. '(x' → logprob: -10.634692192077637
    8. '-div' → logprob: -10.634692192077637
    9. ' -' → logprob: -10.759692192077637
    10. '((' → logprob: -11.884692192077637

Token 225: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.5776860184123507e-06
    2. ' x' → logprob: -13.00000286102295
    3. 'int' → logprob: -15.12500286102295
    4. '(x' → logprob: -17.750001907348633
    5. '
' → logprob: -21.000001907348633
    6. '	x' → logprob: -21.625001907348633
    7. '{x' → logprob: -22.125001907348633
    8. '-x' → logprob: -22.125001907348633
    9. '   ' → logprob: -23.375001907348633
    10. '```' → logprob: -23.500001907348633

Token 226: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.05620945990085602
    2. ' //' → logprob: -2.9312095642089844
    3. '/' → logprob: -7.056209564208984
    4. '/y' → logprob: -8.306209564208984
    5. ' ' → logprob: -9.181209564208984
    6. 'y' → logprob: -9.806209564208984
    7. ' /' → logprob: -9.931209564208984
    8. '
' → logprob: -13.056209564208984
    9. ' y' → logprob: -13.181209564208984
    10. ' ' → logprob: -13.306209564208984

Token 227: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.836499985889532e-05
    2. ' y' → logprob: -9.7500581741333
    3. '	y' → logprob: -18.875059127807617
    4. '(y' → logprob: -21.875059127807617
    5. ')y' → logprob: -22.000059127807617
    6. 'int' → logprob: -22.500059127807617
    7. '
' → logprob: -22.500059127807617
    8. ',y' → logprob: -22.500059127807617
    9. ''y' → logprob: -23.375059127807617
    10. ' ' → logprob: -23.500059127807617

Token 228: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008067715098150074
    2. ')' → logprob: -7.12580680847168
    3. '))
' → logprob: -14.00080680847168
    4. ' ))' → logprob: -14.00080680847168
    5. ')))' → logprob: -14.37580680847168
    6. '))

' → logprob: -17.50080680847168
    7. ')
' → logprob: -18.37580680847168
    8. '()))' → logprob: -18.62580680847168
    9. '),' → logprob: -18.75080680847168
    10. ' )' → logprob: -19.12580680847168

Token 229: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018865150632336736
    2. 'from' → logprob: -6.626886367797852
    3. 'class' → logprob: -7.626886367797852
    4. '#' → logprob: -10.001886367797852
    5. 'import' → logprob: -10.876886367797852
    6. '@' → logprob: -12.126886367797852
    7. ' def' → logprob: -13.501886367797852
    8. ')' → logprob: -14.251886367797852
    9. '...' → logprob: -15.126886367797852
    10. ' from' → logprob: -15.626886367797852

Token 230: ' Seg' (ID: 13616)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.7681093215942383
    2. ' Segment' → logprob: -2.0181093215942383
    3. ' Counter' → logprob: -2.5181093215942383
    4. 'Segment' → logprob: -2.7681093215942383
    5. ' Solution' → logprob: -3.2681093215942383
    6. ' deque' → logprob: -3.2681093215942383
    7. 'Union' → logprob: -3.5181093215942383
    8. ' Fraction' → logprob: -3.7681093215942383
    9. 'Counter' → logprob: -4.393109321594238
    10. 'Fraction' → logprob: -4.393109321594238

Token 231: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.06755126267671585
    2. 'tree' → logprob: -2.817551374435425
    3. 'ment' → logprob: -5.442551136016846
    4. 'ement' → logprob: -7.442551136016846
    5. 'mented' → logprob: -7.692551136016846
    6. '```' → logprob: -9.942551612854004
    7. 'mentation' → logprob: -10.567551612854004
    8. ' Tree' → logprob: -10.567551612854004
    9. ' tree' → logprob: -10.567551612854004
    10. 'Ment' → logprob: -10.692551612854004

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013679367839358747
    2. '():' → logprob: -9.750136375427246
    3. ':
' → logprob: -10.000136375427246
    4. ' :' → logprob: -10.875136375427246
    5. '(object' → logprob: -12.000136375427246
    6. '>:' → logprob: -13.625136375427246
    7. '_:' → logprob: -13.625136375427246
    8. '(' → logprob: -13.875136375427246
    9. ':**' → logprob: -14.250136375427246
    10. ':

' → logprob: -14.750136375427246

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05102438107132912
    2. ' def' → logprob: -3.1760244369506836
    3. 'def' → logprob: -4.926024436950684
    4. '	def' → logprob: -7.551024436950684
    5. '   ' → logprob: -9.801024436950684
    6. ' ' → logprob: -10.176024436950684
    7. '    
' → logprob: -10.801024436950684
    8. '    ' → logprob: -11.051024436950684
    9. 'n' → logprob: -11.301024436950684
    10. ':' → logprob: -11.301024436950684

Token 234: ' #' (ID: 1069)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.24116858839988708
    2. ' __' → logprob: -1.9911686182022095
    3. 'def' → logprob: -3.24116849899292
    4. '__' → logprob: -3.74116849899292
    5. '   ' → logprob: -4.36616849899292
    6. 'class' → logprob: -6.86616849899292
    7. ' None' → logprob: -7.24116849899292
    8. ' class' → logprob: -8.866168975830078
    9. ' """' → logprob: -9.116168975830078
    10. ' ' → logprob: -10.616168975830078

Token 235: ' �' (ID: 35063)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2068023532629013
    2. 'def' → logprob: -2.7068023681640625
    3. ' def' → logprob: -2.7068023681640625
    4. ' __' → logprob: -3.0818023681640625
    5. 'class' → logprob: -5.2068023681640625
    6. 'None' → logprob: -7.9568023681640625
    7. 'init' → logprob: -8.581802368164062
    8. ':' → logprob: -8.581802368164062
    9. '   ' → logprob: -8.831802368164062
    10. ' None' → logprob: -8.956802368164062

Token 236: '�' (ID: 115)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.33813387155532837
    2. 'init' → logprob: -2.3381338119506836
    3. 'class' → logprob: -2.4631338119506836
    4. '   ' → logprob: -3.8381338119506836
    5. ' def' → logprob: -3.8381338119506836
    6. 'def' → logprob: -3.9631338119506836
    7. '_' → logprob: -4.463133811950684
    8. ' __' → logprob: -4.713133811950684
    9. 'n' → logprob: -5.463133811950684
    10. '_init' → logprob: -5.463133811950684

Token 237: '合' (ID: 4377)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.048108458518982
    2. 'class' → logprob: -1.298108458518982
    3. '__' → logprob: -1.548108458518982
    4. '   ' → logprob: -3.2981085777282715
    5. ' __' → logprob: -3.2981085777282715
    6. '_' → logprob: -3.5481085777282715
    7. 'def' → logprob: -3.9231085777282715
    8. 'init' → logprob: -4.2981085777282715
    9. ' ' → logprob: -4.5481085777282715
    10. ' class' → logprob: -4.9231085777282715

Token 238: 'コメント' (ID: 41460)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8246505260467529
    2. '合' → logprob: -1.699650526046753
    3. ')' → logprob: -3.074650526046753
    4. 'int' → logprob: -3.574650526046753
    5. '）' → logprob: -3.699650526046753
    6. '__' → logprob: -3.699650526046753
    7. 'op' → logprob: -4.074650764465332
    8. '計' → logprob: -4.074650764465332
    9. 'く' → logprob: -4.074650764465332
    10. 'def' → logprob: -4.199650764465332

Token 239: '例' (ID: 18647)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.059134479612112045
    2. '(' → logprob: -4.559134483337402
    3. '   ' → logprob: -4.684134483337402
    4. 'ーション' → logprob: -5.184134483337402
    5. ' ' → logprob: -5.309134483337402
    6. '(object' → logprob: -5.809134483337402
    7. ' def' → logprob: -6.184134483337402
    8. ':
' → logprob: -6.434134483337402
    9. '：' → logprob: -6.434134483337402
    10. '(n' → logprob: -6.934134483337402

Token 240: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42394450306892395
    2. ' def' → logprob: -1.5489444732666016
    3. ':' → logprob: -2.5489444732666016
    4. ' ' → logprob: -3.7989444732666016
    5. ' :' → logprob: -4.548944473266602
    6. ' =' → logprob: -5.423944473266602
    7. ' """
' → logprob: -5.673944473266602
    8. ' """' → logprob: -6.673944473266602
    9. ' #' → logprob: -6.798944473266602
    10. ' class' → logprob: -6.798944473266602

Token 241: ' Segment' (ID: 64922)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.16157932579517365
    2. '   ' → logprob: -2.7865793704986572
    3. 'class' → logprob: -3.4115793704986572
    4. 'def' → logprob: -3.9115793704986572
    5. ' """' → logprob: -4.286579132080078
    6. ' pass' → logprob: -4.911579132080078
    7. ' class' → logprob: -5.161579132080078
    8. '"""' → logprob: -5.536579132080078
    9. '#' → logprob: -6.661579132080078
    10. ' #' → logprob: -6.911579132080078

Token 242: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.09286770969629288
    2. 'ree' → logprob: -3.342867612838745
    3. ' Tree' → logprob: -3.342867612838745
    4. 'tree' → logprob: -4.717867851257324
    5. ' tree' → logprob: -4.967867851257324
    6. '木' → logprob: -7.092867851257324
    7. '<Tree' → logprob: -7.342867851257324
    8. '_tree' → logprob: -8.842867851257324
    9. '(Tree' → logprob: -9.092867851257324
    10. '	Tree' → logprob: -9.342867851257324

Token 243: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4976673126220703
    2. '   ' → logprob: -1.7476673126220703
    3. '(Tree' → logprob: -1.9976673126220703
    4. '(' → logprob: -2.2476673126220703
    5. '<|end|>' → logprob: -2.6226673126220703
    6. '<|end|>' → logprob: -3.4976673126220703
    7. '(tree' → logprob: -3.6226673126220703
    8. '
' → logprob: -3.7476673126220703
    9. '(Node' → logprob: -3.8726673126220703
    10. '<Tree' → logprob: -4.12266731262207

Token 244: ' range' (ID: 3352)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8162840008735657
    2. 'sum' → logprob: -1.066283941268921
    3. 'range' → logprob: -2.316283941268921
    4. 'max' → logprob: -2.941283941268921
    5. ' sum' → logprob: -3.816283941268921
    6. ' range' → logprob: -3.941283941268921
    7. 'RM' → logprob: -4.9412841796875
    8. 'minimum' → logprob: -5.4412841796875
    9. ' min' → logprob: -6.4412841796875
    10. 'maximum' → logprob: -6.8162841796875

Token 245: ' queries' (ID: 32122)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.3229708671569824
    2. 'sum' → logprob: -2.1979708671569824
    3. 'min' → logprob: -2.3229708671569824
    4. ' minimum' → logprob: -2.8229708671569824
    5. ' sum' → logprob: -5.322970867156982
    6. 'maximum' → logprob: -6.947970867156982
    7. 'max' → logprob: -7.447970867156982
    8. '_sum' → logprob: -8.07297134399414
    9. ' min' → logprob: -8.69797134399414
    10. '_min' → logprob: -8.82297134399414

Token 246: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' updates' (ID: 12663)
  Prédit: 'updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'updates' → logprob: -0.4177216589450836
    2. 'update' → logprob: -1.4177216291427612
    3. 'point' → logprob: -3.167721748352051
    4. '更新' → logprob: -3.792721748352051
    5. 'range' → logprob: -3.792721748352051
    6. ' updates' → logprob: -4.917721748352051
    7. '点' → logprob: -7.167721748352051
    8. 'up' → logprob: -7.167721748352051
    9. ' update' → logprob: -7.292721748352051
    10. 'lazy' → logprob: -7.667721748352051

Token 248: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.83684241771698
    2. '<|end|>' → logprob: -1.21184241771698
    3. '   ' → logprob: -2.3368425369262695
    4. '
' → logprob: -2.7118425369262695
    5. ':
' → logprob: -3.2118425369262695
    6. ' ' → logprob: -4.0868425369262695
    7. '<|end|>' → logprob: -4.5868425369262695
    8. '(' → logprob: -4.7118425369262695
    9. ',' → logprob: -5.0868425369262695
    10. '```' → logprob: -5.8368425369262695

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3217428922653198
    2. '<|end|>' → logprob: -2.1967430114746094
    3. ':' → logprob: -3.0717430114746094
    4. ' def' → logprob: -3.3217430114746094
    5. ' ' → logprob: -3.4467430114746094
    6. '
' → logprob: -4.321743011474609
    7. 'def' → logprob: -4.946743011474609
    8. '<|end|>' → logprob: -5.071743011474609
    9. 'class' → logprob: -5.446743011474609
    10. '  
' → logprob: -5.571743011474609

Token 250: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6623888611793518
    2. '   ' → logprob: -1.162388801574707
    3. 'def' (adapté à ' def') → logprob: -3.037388801574707
    4. '
' → logprob: -3.162388801574707
    5. 'class' → logprob: -3.412388801574707
    6. ' ' → logprob: -3.662388801574707
    7. ' 
' → logprob: -5.037388801574707
    8. '    
' → logprob: -5.162388801574707
    9. '  
' → logprob: -5.662388801574707
    10. ':' → logprob: -6.537388801574707

Token 251: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2520306408405304
    2. '__' → logprob: -1.502030611038208
    3. '_init' → logprob: -9.252030372619629
    4. ' ' → logprob: -12.377030372619629
    5. ' _' → logprob: -14.377030372619629
    6. 'init' → logprob: -15.252030372619629
    7. '_' → logprob: -15.252030372619629
    8. '___' → logprob: -15.377030372619629
    9. ' init' → logprob: -15.752030372619629
    10. ' ' → logprob: -17.877031326293945

Token 252: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '_init' → logprob: -18.875
    3. ' init' → logprob: -19.375
    4. 'ini' → logprob: -19.375
    5. 'int' → logprob: -19.75
    6. 'inite' → logprob: -21.5
    7. '```' → logprob: -22.25
    8. '
' → logprob: -22.375
    9. '	init' → logprob: -22.75
    10. '_' → logprob: -22.875

Token 253: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00027682865038514137
    2. '__(' → logprob: -8.625276565551758
    3. '(' → logprob: -9.500276565551758
    4. '(this' → logprob: -11.750276565551758
    5. 'self' → logprob: -12.000276565551758
    6. ' (' → logprob: -12.500276565551758
    7. '(s' → logprob: -13.375276565551758
    8. '(sel' → logprob: -14.000276565551758
    9. '(
' → logprob: -14.625276565551758
    10. '(se' → logprob: -15.500276565551758

Token 254: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.644463479053229e-05
    2. ' self' → logprob: -10.250046730041504
    3. '(self' → logprob: -11.625046730041504
    4. '
' → logprob: -13.750046730041504
    5. ' ' → logprob: -15.125046730041504
    6. 's' → logprob: -15.250046730041504
    7. ',' → logprob: -16.125045776367188
    8. ')' → logprob: -16.500045776367188
    9. ',self' → logprob: -16.875045776367188
    10. '   ' → logprob: -17.125045776367188

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029420440550893545
    2. 'self' → logprob: -5.877942085266113
    3. ',self' → logprob: -9.127942085266113
    4. '(self' → logprob: -11.127942085266113
    5. ' ,' → logprob: -11.377942085266113
    6. ' self' → logprob: -13.127942085266113
    7. ',n' → logprob: -16.127941131591797
    8. ' ' → logprob: -16.502941131591797
    9. ',(' → logprob: -17.127941131591797
    10. ' (' → logprob: -17.377941131591797

Token 256: ' size' (ID: 2349)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008291634730994701
    2. 'n' → logprob: -7.125829219818115
    3. ' self' → logprob: -10.750828742980957
    4. 'init' → logprob: -13.250828742980957
    5. 'N' → logprob: -14.375828742980957
    6. 'data' → logprob: -14.625828742980957
    7. ' n' → logprob: -15.625828742980957
    8. '(self' → logprob: -16.500829696655273
    9. 'A' → logprob: -16.750829696655273
    10. 'size' → logprob: -16.750829696655273

Token 257: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5792290568351746
    2. ',' → logprob: -0.8292290568351746
    3. ':' → logprob: -5.95422887802124
    4. ')' → logprob: -7.70422887802124
    5. ' ):' → logprob: -8.454229354858398
    6. ' ,' → logprob: -12.079229354858398
    7. ':int' → logprob: -12.204229354858398
    8. '):
' → logprob: -12.579229354858398
    9. ',size' → logprob: -12.829229354858398
    10. ',)' → logprob: -13.329229354858398

Token 258: ' op' (ID: 991)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8409748673439026
    2. 'func' → logprob: -1.4659748077392578
    3. 'op' → logprob: -1.7159748077392578
    4. 'seg' → logprob: -2.965974807739258
    5. 'ide' → logprob: -3.090974807739258
    6. 'function' → logprob: -3.840974807739258
    7. 'init' → logprob: -4.215974807739258
    8. 'default' → logprob: -5.215974807739258
    9. 'f' → logprob: -5.590974807739258
    10. '   ' → logprob: -5.965974807739258

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004597439547069371
    2. '=' → logprob: -8.375459671020508
    3. '=lambda' → logprob: -8.875459671020508
    4. '):' → logprob: -9.625459671020508
    5. ' ,' → logprob: -11.125459671020508
    6. '   ' → logprob: -12.875459671020508
    7. ':' → logprob: -13.250459671020508
    8. '=None' → logprob: -13.750459671020508
    9. ' ' → logprob: -14.250459671020508
    10. '_,' → logprob: -15.000459671020508

Token 260: ' unit' (ID: 7670)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0038326175417751074
    2. 'ide' → logprob: -6.378832817077637
    3. 'ie' → logprob: -7.003832817077637
    4. 'identity' → logprob: -7.503832817077637
    5. 'id' → logprob: -8.128832817077637
    6. 'ee' → logprob: -9.503832817077637
    7. 'ei' → logprob: -9.753832817077637
    8. 'eg' → logprob: -9.878832817077637
    9. 'ele' → logprob: -10.003832817077637
    10. 'init' → logprob: -10.628832817077637

Token 261: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014418165199458599
    2. ',' → logprob: -4.264418125152588
    3. ')' → logprob: -9.139418601989746
    4. '):
' → logprob: -9.389418601989746
    5. ' ):' → logprob: -10.139418601989746
    6. '=None' → logprob: -11.139418601989746
    7. '=' → logprob: -12.139418601989746
    8. '_value' → logprob: -13.889418601989746
    9. '   ' → logprob: -14.389418601989746
    10. ':' → logprob: -14.639418601989746

Token 262: ' A' (ID: 355)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.8025270104408264
    2. 'data' → logprob: -1.5525269508361816
    3. 'e' → logprob: -1.8025269508361816
    4. 'build' → logprob: -2.8025269508361816
    5. 'default' → logprob: -4.302526950836182
    6. 'dat' → logprob: -4.552526950836182
    7. 'def' → logprob: -4.677526950836182
    8. 'v' → logprob: -4.802526950836182
    9. 'update' → logprob: -4.927526950836182
    10. 'args' → logprob: -5.052526950836182

Token 263: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.0007962852250784636
    2. '=' → logprob: -7.250796318054199
    3. '=[]' → logprob: -10.0007963180542
    4. '):' → logprob: -10.1257963180542
    5. '):
' → logprob: -14.2507963180542
    6. ':' → logprob: -15.6257963180542
    7. ' =' → logprob: -16.500795364379883
    8. 'None' → logprob: -17.250795364379883
    9. '=list' → logprob: -17.875795364379883
    10. ')' → logprob: -17.875795364379883

Token 264: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.873571692267433e-05
    2. '):
' → logprob: -10.000068664550781
    3. ')' → logprob: -10.875068664550781
    4. ',' → logprob: -13.250068664550781
    5. ' ):' → logprob: -13.250068664550781
    6. '):
' → logprob: -14.500068664550781
    7. ':' → logprob: -15.125068664550781
    8. ')：' → logprob: -17.12506866455078
    9. '=None' → logprob: -17.62506866455078
    10. '）：' → logprob: -18.00006866455078

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004393324721604586
    2. ':' → logprob: -6.379393100738525
    3. '<|end|>' → logprob: -6.504393100738525
    4. ')' → logprob: -8.004393577575684
    5. '):' → logprob: -8.254393577575684
    6. '	' → logprob: -8.379393577575684
    7. ',' → logprob: -8.504393577575684
    8. '<|end|>' → logprob: -10.129393577575684
    9. '   ' → logprob: -10.504393577575684
    10. '```' → logprob: -11.129393577575684

Token 266: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7123717665672302
    2. 'self' (adapté à ' self') → logprob: -0.7123717665672302
    3. '       ' → logprob: -3.962371826171875
    4. '	self' → logprob: -11.337371826171875
    5. ' super' → logprob: -12.462371826171875
    6. '	' → logprob: -13.337371826171875
    7. 'super' → logprob: -13.462371826171875
    8. '   ' → logprob: -13.462371826171875
    9. ' ' → logprob: -14.212371826171875
    10. ' ' → logprob: -14.712371826171875

Token 267: '.sz' (ID: 172462)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.0026005071122199297
    2. '._' → logprob: -6.62760066986084
    3. '.' → logprob: -6.87760066986084
    4. ' .' → logprob: -8.75260066986084
    5. '.n' → logprob: -10.12760066986084
    6. '.sz' → logprob: -10.75260066986084
    7. 'size' → logprob: -11.37760066986084
    8. '.SIZE' → logprob: -12.75260066986084
    9. ' size' → logprob: -13.50260066986084
    10. '.__' → logprob: -13.87760066986084

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133317828178406
    2. '=' → logprob: -1.3133318424224854
    3. '=size' → logprob: -9.938331604003906
    4. '=int' → logprob: -11.313331604003906
    5. ' ' → logprob: -12.813331604003906
    6. '＝' → logprob: -13.188331604003906
    7. '   ' → logprob: -13.813331604003906
    8. ',' → logprob: -14.188331604003906
    9. '_' → logprob: -14.438331604003906
    10. ' ' → logprob: -14.938331604003906

Token 269: ' size' (ID: 2349)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. 'size' → logprob: -10.125041007995605
    3. '
' → logprob: -14.625041007995605
    4. ' ' → logprob: -15.500041007995605
    5. '１' → logprob: -17.62504005432129
    6. '16' → logprob: -18.12504005432129
    7. '   ' → logprob: -18.50004005432129
    8. '_' → logprob: -18.75004005432129
    9. '32' → logprob: -18.75004005432129
    10. '(' → logprob: -18.75004005432129

Token 270: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09245968610048294
    2. '
' → logprob: -3.3424596786499023
    3. '<|end|>' → logprob: -3.8424596786499023
    4. '<<' → logprob: -4.717459678649902
    5. '*' → logprob: -4.967459678649902
    6. ' <<=' → logprob: -5.217459678649902
    7. ' if' → logprob: -5.842459678649902
    8. '<|end|>' → logprob: -6.592459678649902
    9. 'if' → logprob: -6.717459678649902
    10. 'while' → logprob: -7.217459678649902

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010154220508411527
    2. '
' → logprob: -7.6260151863098145
    3. 'self' → logprob: -8.626015663146973
    4. '+' → logprob: -9.751015663146973
    5. ' if' → logprob: -9.751015663146973
    6. '*' → logprob: -9.876015663146973
    7. '<<' → logprob: -10.376015663146973
    8. '<|end|>' → logprob: -10.376015663146973
    9. 'if' → logprob: -11.001015663146973
    10. '#' → logprob: -11.251015663146973

Token 272: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008891870966181159
    2. '   ' → logprob: -8.37588882446289
    3. 'while' → logprob: -8.37588882446289
    4. '       ' → logprob: -8.50088882446289
    5. ' self' → logprob: -9.25088882446289
    6. 'op' → logprob: -9.87588882446289
    7. '0' → logprob: -10.62588882446289
    8. '1' → logprob: -10.87588882446289
    9. ' ' → logprob: -11.37588882446289
    10. 'if' → logprob: -12.37588882446289

Token 273: '.op' (ID: 19357)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.n' → logprob: -1.3722562789916992
    2. '.size' → logprob: -1.3722562789916992
    3. '.sz' → logprob: -1.3722562789916992
    4. ' =' → logprob: -3.122256278991699
    5. '.num' → logprob: -3.247256278991699
    6. '=' → logprob: -3.622256278991699
    7. '.val' → logprob: -4.247256278991699
    8. '.x' → logprob: -4.247256278991699
    9. '.buf' → logprob: -4.247256278991699
    10. '.bit' → logprob: -4.747256278991699

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12695130705833435
    2. ' =' → logprob: -2.126951217651367
    3. '=lambda' → logprob: -11.751951217651367
    4. ')' → logprob: -12.501951217651367
    5. '   ' → logprob: -13.126951217651367
    6. ',' → logprob: -13.251951217651367
    7. ' ' → logprob: -13.376951217651367
    8. '=self' → logprob: -13.876951217651367
    9. '(' → logprob: -14.126951217651367
    10. 's' → logprob: -14.251951217651367

Token 275: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0019286326132714748
    2. ' op' → logprob: -6.251928806304932
    3. '	op' → logprob: -17.626928329467773
    4. 'opt' → logprob: -18.376928329467773
    5. '(op' → logprob: -20.126928329467773
    6. '_op' → logprob: -20.501928329467773
    7. 'opf' → logprob: -21.626928329467773
    8. ' ' → logprob: -21.626928329467773
    9. 'opi' → logprob: -22.001928329467773
    10. '   ' → logprob: -22.126928329467773

Token 276: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02908491902053356
    2. '<|end|>' → logprob: -4.1540846824646
    3. '
' → logprob: -4.5290846824646
    4. 'self' → logprob: -6.4040846824646
    5. '<|end|>' → logprob: -8.529085159301758
    6. ',' → logprob: -9.029085159301758
    7. ',
' → logprob: -10.404085159301758
    8. '   ' → logprob: -10.654085159301758
    9. ' self' → logprob: -10.779085159301758
    10. ')' → logprob: -11.154085159301758

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044711565715260804
    2. 'self' → logprob: -8.250447273254395
    3. '<|end|>' → logprob: -9.250447273254395
    4. ',' → logprob: -9.500447273254395
    5. ' self' → logprob: -12.250447273254395
    6. '	' → logprob: -12.875447273254395
    7. '
' → logprob: -13.000447273254395
    8. '   ' → logprob: -13.375447273254395
    9. '<|end|>' → logprob: -14.250447273254395
    10. '      ' → logprob: -14.375447273254395

Token 278: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -3.130576806142926e-05
    2. '       ' → logprob: -10.875031471252441
    3. 'unit' → logprob: -12.125031471252441
    4. ' self' → logprob: -12.375031471252441
    5. 'while' → logprob: -13.250031471252441
    6. '   ' → logprob: -14.875031471252441
    7. 's' → logprob: -15.750031471252441
    8. '
' → logprob: -15.875031471252441
    9. '        
' → logprob: -16.125030517578125
    10. '	self' → logprob: -17.125030517578125

Token 279: '.unit' (ID: 51513)
  Prédit: '.unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.unit' → logprob: -0.004783730488270521
    2. 'unit' → logprob: -6.129783630371094
    3. '_unit' → logprob: -6.129783630371094
    4. 'UNIT' → logprob: -8.754783630371094
    5. 'Unit' → logprob: -9.629783630371094
    6. 'u' → logprob: -9.879783630371094
    7. '.u' → logprob: -10.879783630371094
    8. '.Unit' → logprob: -10.879783630371094
    9. '._' → logprob: -11.379783630371094
    10. '.' → logprob: -11.379783630371094

Token 280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326863169670105
    2. ' =' → logprob: -0.7576863169670105
    3. '<|end|>' → logprob: -10.382686614990234
    4. '   ' → logprob: -11.007686614990234
    5. '<|end|>' → logprob: -11.757686614990234
    6. ' ' → logprob: -12.132686614990234
    7. 'unit' → logprob: -12.382686614990234
    8. '=self' → logprob: -12.382686614990234
    9. '=None' → logprob: -12.882686614990234
    10. '    ' → logprob: -13.007686614990234

Token 281: ' unit' (ID: 7670)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -6.2729995988775045e-06
    2. ' unit' → logprob: -12.000006675720215
    3. '(unit' → logprob: -18.3750057220459
    4. '	unit' → logprob: -19.7500057220459
    5. 'un' → logprob: -20.0000057220459
    6. 'user' → logprob: -20.2500057220459
    7. 'union' → logprob: -21.0000057220459
    8. 'u' → logprob: -21.2500057220459
    9. '_unit' → logprob: -21.5000057220459
    10. 'uni' → logprob: -21.8750057220459

Token 282: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005143099115230143
    2. 'self' → logprob: -8.000514030456543
    3. ',' → logprob: -8.875514030456543
    4. '<|end|>' → logprob: -10.875514030456543
    5. ' self' → logprob: -12.125514030456543
    6. 'import' → logprob: -12.250514030456543
    7. '<|end|>' → logprob: -13.500514030456543
    8. '	' → logprob: -13.750514030456543
    9. '   ' → logprob: -14.000514030456543
    10. ')' → logprob: -14.125514030456543

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009263493702746928
    2. 'self' → logprob: -7.000926494598389
    3. ' self' → logprob: -11.87592601776123
    4. ',' → logprob: -12.25092601776123
    5. '   ' → logprob: -14.12592601776123
    6. 'if' → logprob: -14.50092601776123
    7. '	' → logprob: -15.00092601776123
    8. 'import' → logprob: -15.25092601776123
    9. '	self' → logprob: -15.37592601776123
    10. '<|end|>' → logprob: -15.50092601776123

Token 284: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014354011043906212
    2. '       ' → logprob: -4.264354228973389
    3. ' self' → logprob: -9.51435375213623
    4. 'n' (adapté à ' n') → logprob: -10.01435375213623
    5. 'if' → logprob: -10.01435375213623
    6. '   ' → logprob: -11.63935375213623
    7. 'A' → logprob: -12.51435375213623
    8. 'import' → logprob: -12.88935375213623
    9. 's' → logprob: -13.13935375213623
    10. 'size' → logprob: -13.13935375213623

Token 285: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7392191886901855
    2. ' =' → logprob: -0.7392191886901855
    3. 'ext' → logprob: -3.1142191886901855
    4. 'ex' → logprob: -8.614219665527344
    5. 'um' → logprob: -8.864219665527344
    6. '_' → logprob: -9.864219665527344
    7. '   ' → logprob: -10.364219665527344
    8. 'a' → logprob: -10.489219665527344
    9. 'x' → logprob: -10.739219665527344
    10. 'e' → logprob: -10.864219665527344

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11299524456262589
    2. '=' → logprob: -2.237995147705078
    3. 'o' → logprob: -9.612995147705078
    4. 'x' → logprob: -10.362995147705078
    5. '   ' → logprob: -10.862995147705078
    6. 'ext' → logprob: -11.112995147705078
    7. ' ' → logprob: -11.612995147705078
    8. 'um' → logprob: -11.987995147705078
    9. 'ex' → logprob: -12.237995147705078
    10. 'p' → logprob: -12.487995147705078

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '2' → logprob: -16.75
    4. '   ' → logprob: -17.5
    5. 'self' → logprob: -17.625
    6. '32' → logprob: -17.75
    7. 'n' → logprob: -18.25
    8. '64' → logprob: -18.5
    9. '
' → logprob: -18.75
    10. '(' → logprob: -18.75

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.375000953674316
    3. '
' → logprob: -15.625000953674316
    4. 'self' → logprob: -17.0
    5. ' ' → logprob: -17.625
    6. '１' → logprob: -18.375
    7. '   ' → logprob: -18.5
    8. '32' → logprob: -18.625
    9. '_' → logprob: -19.0
    10. 'n' → logprob: -19.125

Token 289: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021088307723402977
    2. '<<' → logprob: -3.8960883617401123
    3. 'while' → logprob: -8.396088600158691
    4. '<<(' → logprob: -8.771088600158691
    5. ' <<=' → logprob: -9.271088600158691
    6. '
' → logprob: -10.646088600158691
    7. ' <<' → logprob: -10.646088600158691
    8. '<' → logprob: -12.021088600158691
    9. '  
' → logprob: -12.146088600158691
    10. ' 
' → logprob: -12.521088600158691

Token 290: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05182427167892456
    2. 'while' → logprob: -3.0518243312835693
    3. '<<' → logprob: -5.80182409286499
    4. ' while' → logprob: -9.176824569702148
    5. '       ' → logprob: -10.676824569702148
    6. ' <<=' → logprob: -10.676824569702148
    7. '<<(' → logprob: -11.051824569702148
    8. '   ' → logprob: -11.176824569702148
    9. '
' → logprob: -11.926824569702148
    10. '	while' → logprob: -12.176824569702148

Token 291: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.002000607782974839
    2. ' while' → logprob: -6.50200080871582
    3. '
' → logprob: -7.87700080871582
    4. '       ' → logprob: -9.75200080871582
    5. '	while' → logprob: -9.87700080871582
    6. 'While' → logprob: -12.25200080871582
    7. 'n' → logprob: -13.25200080871582
    8. '   ' → logprob: -14.12700080871582
    9. '<<' → logprob: -14.12700080871582
    10. '<n' → logprob: -15.00200080871582

Token 292: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.061969030648469925
    2. ' n' → logprob: -2.811969041824341
    3. '	n' → logprob: -14.436968803405762
    4. 'self' → logprob: -14.561968803405762
    5. '(n' → logprob: -15.186968803405762
    6. '
' → logprob: -16.561969757080078
    7. '   ' → logprob: -17.811969757080078
    8. '$n' → logprob: -18.186969757080078
    9. '_n' → logprob: -18.561969757080078
    10. '<n' → logprob: -18.811969757080078

Token 293: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011034219060093164
    2. '_' → logprob: -7.251103401184082
    3. '<' → logprob: -8.001103401184082
    4. '<n' → logprob: -10.376103401184082
    5. ' <' → logprob: -11.001103401184082
    6. '_<' → logprob: -13.376103401184082
    7. 'n' → logprob: -13.501103401184082
    8. '<size' → logprob: -13.501103401184082
    9. '<_' → logprob: -13.626103401184082
    10. '<<' → logprob: -13.751103401184082

Token 294: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7640604972839355
    2. ' <' → logprob: -1.0140604972839355
    3. '<n' → logprob: -1.7640604972839355
    4. '<size' → logprob: -9.389060974121094
    5. '<len' → logprob: -10.389060974121094
    6. ' <<=' → logprob: -11.639060974121094
    7. '<num' → logprob: -12.639060974121094
    8. '<<' → logprob: -13.139060974121094
    9. '<s' → logprob: -13.264060974121094
    10. '<int' → logprob: -14.014060974121094

Token 295: ' size' (ID: 2349)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10022435337305069
    2. 'size' → logprob: -2.350224256515503
    3. ' self' → logprob: -11.475224494934082
    4. ' size' → logprob: -11.850224494934082
    5. 'sz' → logprob: -15.850224494934082
    6. '(self' → logprob: -16.975223541259766
    7. '	self' → logprob: -17.475223541259766
    8. '   ' → logprob: -17.850223541259766
    9. '(size' → logprob: -18.100223541259766
    10. '	size' → logprob: -18.350223541259766

Token 296: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5768770575523376
    2. ':' → logprob: -0.8268770575523376
    3. ':n' → logprob: -7.576877117156982
    4. '<<' → logprob: -8.201876640319824
    5. 'n' → logprob: -9.451876640319824
    6. '1' → logprob: -10.576876640319824
    7. ' <<=' → logprob: -10.826876640319824
    8. '<n' → logprob: -11.326876640319824
    9. '2' → logprob: -12.826876640319824
    10. ':s' → logprob: -13.326876640319824

Token 297: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4842304289340973
    2. 'n' → logprob: -0.9842303991317749
    3. '           ' → logprob: -4.6092305183410645
    4. '   ' → logprob: -9.234230041503906
    5. '
' → logprob: -10.609230041503906
    6. '	n' → logprob: -11.609230041503906
    7. '       ' → logprob: -12.359230041503906
    8. ' ' → logprob: -13.609230041503906
    9. ',n' → logprob: -13.609230041503906
    10. '_n' → logprob: -13.734230041503906

Token 298: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '₂' → logprob: -16.625
    3. '_' → logprob: -17.125
    4. '۲' → logprob: -17.875
    5. '２' → logprob: -18.125
    6. 'n' → logprob: -18.375
    7. '```' → logprob: -19.875
    8. 'ext' → logprob: -20.125
    9. '' → logprob: -20.25
    10. '   ' → logprob: -20.375

Token 299: ' <<=' (ID: 134025)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.10496149957180023
    2. ' <<=' → logprob: -2.354961395263672
    3. '*=' → logprob: -5.354961395263672
    4. '<' → logprob: -11.229961395263672
    5. ' *=' → logprob: -12.729961395263672
    6. '&lt' → logprob: -13.979961395263672
    7. '=' → logprob: -14.229961395263672
    8. '```' → logprob: -14.854961395263672
    9. '+=' → logprob: -15.354961395263672
    10. '2' → logprob: -15.479961395263672

Token 300: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '
' → logprob: -19.75
    4. '１' → logprob: -19.875
    5. '   ' → logprob: -20.125
    6. '```' → logprob: -20.625
    7. '' → logprob: -20.75
    8. '۱' → logprob: -21.875
    9. 'n' → logprob: -21.875
    10. '[' → logprob: -21.9375

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '１' → logprob: -19.0
    4. '' → logprob: -19.625
    5. '0' → logprob: -19.75
    6. '```' → logprob: -19.875
    7. '   ' → logprob: -20.0
    8. '
' → logprob: -20.375
    9. 'n' → logprob: -20.5625
    10. '2' → logprob: -21.25

Token 302: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4688311219215393
    2. 'self' → logprob: -1.4688310623168945
    3. '
' → logprob: -1.9688310623168945
    4. 'n' → logprob: -5.4688310623168945
    5. ' self' → logprob: -9.343831062316895
    6. '
' → logprob: -9.593831062316895
    7. 's' → logprob: -11.343831062316895
    8. '   ' → logprob: -11.718831062316895
    9. '1' → logprob: -11.968831062316895
    10. ';
' → logprob: -12.593831062316895

Token 303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23164577782154083
    2. 'self' → logprob: -1.6066458225250244
    3. ' self' → logprob: -5.106645584106445
    4. '
' → logprob: -9.731645584106445
    5. '   ' → logprob: -9.856645584106445
    6. '	self' → logprob: -11.231645584106445
    7. 's' → logprob: -11.856645584106445
    8. 'n' → logprob: -11.856645584106445
    9. '	' → logprob: -12.606645584106445
    10. 'def' → logprob: -13.356645584106445

Token 304: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.018257638439536095
    2. '       ' → logprob: -4.0182576179504395
    3. ' self' → logprob: -9.143258094787598
    4. '
' → logprob: -15.268258094787598
    5. '	self' → logprob: -15.393258094787598
    6. '        
' → logprob: -16.14325714111328
    7. '   ' → logprob: -16.39325714111328
    8. '(self' → logprob: -17.51825714111328
    9. 'class' → logprob: -17.51825714111328
    10. 's' → logprob: -18.39325714111328

Token 305: '.N' (ID: 4439)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.00021438424300868064
    2. 'n' → logprob: -9.125214576721191
    3. '.size' → logprob: -9.750214576721191
    4. '.N' → logprob: -10.375214576721191
    5. '	n' → logprob: -12.375214576721191
    6. '.num' → logprob: -12.500214576721191
    7. 'size' → logprob: -13.375214576721191
    8. '.sz' → logprob: -13.625214576721191
    9. '_n' → logprob: -13.750214576721191
    10. '   ' → logprob: -14.000214576721191

Token 306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.646675705909729
    2. ' =' → logprob: -0.771675705909729
    3. '=n' → logprob: -4.3966755867004395
    4. '2' → logprob: -6.5216755867004395
    5. '   ' → logprob: -10.146676063537598
    6. '=N' → logprob: -10.271676063537598
    7. 'n' → logprob: -10.646676063537598
    8. 'a' → logprob: -11.146676063537598
    9. '=int' → logprob: -11.271676063537598
    10. '=_' → logprob: -11.271676063537598

Token 307: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011706985533237457
    2. ' n' → logprob: -6.751170635223389
    3. '	n' → logprob: -14.626171112060547
    4. '   ' → logprob: -17.001171112060547
    5. 'N' → logprob: -18.876171112060547
    6. '(n' → logprob: -19.126171112060547
    7. '
' → logprob: -19.126171112060547
    8. '[n' → logprob: -19.751171112060547
    9. '```' → logprob: -19.876171112060547
    10. ' ' → logprob: -20.001171112060547

Token 308: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -12.625003814697266
    3. '₂' → logprob: -15.375003814697266
    4. ' ' → logprob: -15.625003814697266
    5. '۲' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.875003814697266
    7. '=' → logprob: -17.375003814697266
    8. 'n' → logprob: -17.625003814697266
    9. '２' → logprob: -17.750003814697266
    10. ' =' → logprob: -18.875003814697266

Token 309: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024575412273406982
    2. 'self' → logprob: -3.7745754718780518
    3. '
' → logprob: -6.899575233459473
    4. '<|end|>' → logprob: -8.774575233459473
    5. ' self' → logprob: -9.024575233459473
    6. ',' → logprob: -11.149575233459473
    7. '<|end|>' → logprob: -11.899575233459473
    8. '   ' → logprob: -12.024575233459473
    9. 'import' → logprob: -12.649575233459473
    10. '	self' → logprob: -13.149575233459473

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008130819769576192
    2. 'self' → logprob: -7.125813007354736
    3. ' self' → logprob: -12.375813484191895
    4. '   ' → logprob: -12.750813484191895
    5. '	' → logprob: -14.875813484191895
    6. '	self' → logprob: -15.125813484191895
    7. ',' → logprob: -15.250813484191895
    8. '<|end|>' → logprob: -15.750813484191895
    9. 'if' → logprob: -16.125812530517578
    10. '        
' → logprob: -16.250812530517578

Token 311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.030254634097218513
    2. '       ' → logprob: -3.530254602432251
    3. 'if' → logprob: -7.65525484085083
    4. ' self' → logprob: -10.780254364013672
    5. 'data' → logprob: -12.155254364013672
    6. '        
' → logprob: -13.280254364013672
    7. '	self' → logprob: -13.905254364013672
    8. '   ' → logprob: -14.030254364013672
    9. 'from' → logprob: -15.780254364013672
    10. '
' → logprob: -15.905254364013672

Token 312: '.seg' (ID: 178516)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.3957027792930603
    2. '.dat' → logprob: -1.145702838897705
    3. '.tree' → logprob: -5.395702838897705
    4. '.node' → logprob: -6.395702838897705
    5. '.seg' → logprob: -6.770702838897705
    6. '.d' → logprob: -6.895702838897705
    7. '.A' → logprob: -9.145702362060547
    8. '.size' → logprob: -9.145702362060547
    9. '.val' → logprob: -9.770702362060547
    10. '.D' → logprob: -10.270702362060547

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0020208319183439016
    2. ' =' → logprob: -6.252020835876465
    3. '=[' → logprob: -10.127020835876465
    4. 'tree' → logprob: -10.127020835876465
    5. '=[]' → logprob: -11.627020835876465
    6. '=array' → logprob: -13.752020835876465
    7. '＝' → logprob: -14.627020835876465
    8. 'Tree' → logprob: -15.252020835876465
    9. '=

' → logprob: -15.752020835876465
    10. 'data' → logprob: -16.00201988220215

Token 314: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.1726074516773224
    2. '[' → logprob: -1.922607421875
    3. '[_' → logprob: -5.172607421875
    4. '[u' → logprob: -5.422607421875
    5. ' [' → logprob: -6.672607421875
    6. '[node' → logprob: -7.797607421875
    7. '[value' → logprob: -8.797607421875
    8. '[n' → logprob: -9.797607421875
    9. '[val' → logprob: -10.297607421875
    10. '[user' → logprob: -10.547607421875

Token 315: 'unit' (ID: 5400)
  Prédit: 'unit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.001170460251159966
    2. 'self' → logprob: -6.751170635223389
    3. ' unit' → logprob: -16.126171112060547
    4. '(unit' → logprob: -16.751171112060547
    5. '   ' → logprob: -17.501171112060547
    6. '	unit' → logprob: -18.126171112060547
    7. '.unit' → logprob: -18.376171112060547
    8. 'units' → logprob: -18.501171112060547
    9. 'un' → logprob: -18.626171112060547
    10. '_unit' → logprob: -19.126171112060547

Token 316: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09808531403541565
    2. ']*(' → logprob: -2.598085403442383
    3. ']*' → logprob: -3.973085403442383
    4. ' for' → logprob: -8.973085403442383
    5. 'for' → logprob: -9.598085403442383
    6. ' ]' → logprob: -14.098085403442383
    7. '*' → logprob: -15.098085403442383
    8. '*(' → logprob: -15.473085403442383
    9. '()]' → logprob: -15.598085403442383
    10. '](' → logprob: -15.723085403442383

Token 317: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.711310088634491
    2. ']*(' → logprob: -1.4613101482391357
    3. ']*' → logprob: -1.5863101482391357
    4. '*' → logprob: -2.7113101482391357
    5. '*(' → logprob: -5.211309909820557
    6. 'for' → logprob: -8.711310386657715
    7. ' for' → logprob: -9.086310386657715
    8. '*self' → logprob: -9.211310386657715
    9. '*n' → logprob: -10.086310386657715
    10. ' *' → logprob: -10.711310386657715

Token 318: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01019374467432499
    2. '(self' → logprob: -4.760193824768066
    3. '(n' → logprob: -6.510193824768066
    4. '(N' → logprob: -10.135193824768066
    5. '((' → logprob: -10.260193824768066
    6. ' (' → logprob: -11.260193824768066
    7. '   ' → logprob: -14.260193824768066
    8. '2' → logprob: -14.260193824768066
    9. 'self' → logprob: -14.510193824768066
    10. '       ' → logprob: -15.635193824768066

Token 319: 'n' (ID: 77)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02071869745850563
    2. 'self' → logprob: -4.020718574523926
    3. '(' → logprob: -6.145718574523926
    4. 'n' → logprob: -8.020718574523926
    5. '(self' → logprob: -9.770718574523926
    6. '(n' → logprob: -10.395718574523926
    7. ' ' → logprob: -12.395718574523926
    8. '   ' → logprob: -14.020718574523926
    9. ' self' → logprob: -14.020718574523926
    10. ' (' → logprob: -14.770718574523926

Token 320: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4736459888808895e-05
    2. '_' → logprob: -11.750014305114746
    3. '*' → logprob: -12.875014305114746
    4. '
' → logprob: -14.000014305114746
    5. 'self' → logprob: -14.000014305114746
    6. '```' → logprob: -15.000014305114746
    7. ')' → logprob: -15.625014305114746
    8. ' ' → logprob: -15.687514305114746
    9. ')
' → logprob: -15.750014305114746
    10. '   ' → logprob: -15.937514305114746

Token 321: '<<' (ID: 5354)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.062015634030103683
    2. '<<' → logprob: -2.8120155334472656
    3. '2' → logprob: -10.437015533447266
    4. ' *' → logprob: -11.187015533447266
    5. ' <<' → logprob: -12.562015533447266
    6. '   ' → logprob: -15.062015533447266
    7. ' ' → logprob: -15.062015533447266
    8. '**' → logprob: -15.562015533447266
    9. '()<<' → logprob: -16.062015533447266
    10. '	' → logprob: -16.312015533447266

Token 322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '' → logprob: -16.5
    4. '```' → logprob: -16.625
    5. '2' → logprob: -17.375
    6. '１' → logprob: -17.625
    7. '
' → logprob: -17.625
    8. ' ' → logprob: -17.625
    9. '   ' → logprob: -18.25
    10. '' → logprob: -18.8125

Token 323: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001343446783721447
    2. ' )' → logprob: -6.626343250274658
    3. ')
' → logprob: -11.001343727111816
    4. ' )
' → logprob: -15.626343727111816
    5. ')

' → logprob: -16.2513427734375
    6. '))' → logprob: -16.3763427734375
    7. ')`' → logprob: -16.5013427734375
    8. '       ' → logprob: -16.6263427734375
    9. ')
' → logprob: -16.7513427734375
    10. '   ' → logprob: -16.8763427734375

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04124116152524948
    2. '<|end|>' → logprob: -3.66624116897583
    3. ' if' → logprob: -4.91624116897583
    4. '
' → logprob: -6.04124116897583
    5. '	' → logprob: -6.41624116897583
    6. 'if' → logprob: -6.66624116897583
    7. '<|end|>' → logprob: -7.16624116897583
    8. '        
' → logprob: -7.66624116897583
    9. '	if' → logprob: -8.666240692138672
    10. ',' → logprob: -8.791240692138672

Token 325: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00031973462319001555
    2. ' if' → logprob: -8.750319480895996
    3. '       ' → logprob: -8.750319480895996
    4. 'for' → logprob: -13.125319480895996
    5. '   ' → logprob: -14.625319480895996
    6. '	if' → logprob: -15.750319480895996
    7. 'If' → logprob: -15.875319480895996
    8. '        
' → logprob: -18.125320434570312
    9. '
' → logprob: -18.250320434570312
    10. '```' → logprob: -18.625320434570312

Token 326: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10020699352025986
    2. ' A' → logprob: -2.3502070903778076
    3. '	A' → logprob: -15.225207328796387
    4. ' ' → logprob: -16.85020637512207
    5. ' not' → logprob: -17.10020637512207
    6. ' ' → logprob: -17.22520637512207
    7. 'not' → logprob: -17.47520637512207
    8. '(A' → logprob: -18.22520637512207
    9. '   ' → logprob: -18.97520637512207
    10. '=A' → logprob: -18.97520637512207

Token 327: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4742138981819153
    2. 'is' → logprob: -0.9742138981819153
    3. ':' → logprob: -8.974213600158691
    4. '!=' → logprob: -12.224213600158691
    5. ')' → logprob: -12.474213600158691
    6. ')is' → logprob: -14.349213600158691
    7. '	is' → logprob: -14.974213600158691
    8. ' ' → logprob: -16.099214553833008
    9. '!==' → logprob: -16.349214553833008
    10. '{' → logprob: -16.349214553833008

Token 328: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.508978545665741
    2. '           ' → logprob: -1.2589786052703857
    3. ' for' → logprob: -2.2589786052703857
    4. ':
' → logprob: -4.883978366851807
    5. ',' → logprob: -6.633978366851807
    6. '	       ' → logprob: -6.758978366851807
    7. '       ' → logprob: -9.258978843688965
    8. '        ' → logprob: -9.633978843688965
    9. 'for' → logprob: -9.758978843688965
    10. ' ' → logprob: -10.633978843688965

Token 329: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005264595616608858
    2. ' for' → logprob: -5.255264759063721
    3. '           ' → logprob: -10.505264282226562
    4. '               ' → logprob: -12.630264282226562
    5. '   ' → logprob: -16.630264282226562
    6. '	for' → logprob: -17.380264282226562
    7. '
' → logprob: -17.505264282226562
    8. 'import' → logprob: -18.005264282226562
    9. '       ' → logprob: -18.630264282226562
    10. 'from' → logprob: -19.880264282226562

Token 330: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001170460251159966
    2. ' i' → logprob: -6.751170635223389
    3. '	i' → logprob: -15.25117015838623
    4. '   ' → logprob: -18.126171112060547
    5. ' ' → logprob: -18.751171112060547
    6. '(i' → logprob: -19.626171112060547
    7. '  ' → logprob: -21.251171112060547
    8. '_i' → logprob: -21.501171112060547
    9. ',i' → logprob: -21.751171112060547
    10. ' ' → logprob: -22.001171112060547

Token 331: ',item' (ID: 136244)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008156483061611652
    2. ',' → logprob: -5.5081562995910645
    3. 'in' → logprob: -5.5081562995910645
    4. ' ,' → logprob: -12.133156776428223
    5. '	in' → logprob: -13.008156776428223
    6. ',in' → logprob: -13.008156776428223
    7. ' ' → logprob: -13.508156776428223
    8. 'In' → logprob: -14.008156776428223
    9. '
' → logprob: -14.508156776428223
    10. '```' → logprob: -14.883156776428223

Token 332: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026309119537472725
    2. 'in' → logprob: -3.651309013366699
    3. 's' → logprob: -12.6513090133667
    4. ',' → logprob: -13.4013090133667
    5. ' ' → logprob: -13.6513090133667
    6. '	in' → logprob: -14.0263090133667
    7. 'n' → logprob: -14.2763090133667
    8. 'In' → logprob: -15.2763090133667
    9. 'i' → logprob: -15.6513090133667
    10. ' i' → logprob: -15.9013090133667

Token 333: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -7.576873758807778e-05
    2. ' enumerate' → logprob: -9.500075340270996
    3. '```' → logprob: -15.000075340270996
    4. '
' → logprob: -15.375075340270996
    5. 'enum' → logprob: -16.375076293945312
    6. 'range' → logprob: -16.875076293945312
    7. '(' → logprob: -17.375076293945312
    8. 'A' → logprob: -17.625076293945312
    9. '(en' → logprob: -17.750076293945312
    10. '   ' → logprob: -18.000076293945312

Token 334: '(A' (ID: 10706)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.13364043831825256
    2. ' A' → logprob: -2.1336405277252197
    3. '(A' → logprob: -5.008640289306641
    4. '	A' → logprob: -12.50864028930664
    5. '(' → logprob: -13.13364028930664
    6. 'enumer' → logprob: -13.13364028930664
    7. ' ' → logprob: -13.88364028930664
    8. 'range' → logprob: -14.63364028930664
    9. ',A' → logprob: -14.88364028930664
    10. ' (' → logprob: -15.75864028930664

Token 335: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5865773558616638
    2. '):' → logprob: -0.8365773558616638
    3. ':' → logprob: -5.086577415466309
    4. ':
' → logprob: -5.461577415466309
    5. '):
' → logprob: -10.461577415466309
    6. ' ):
' → logprob: -10.586577415466309
    7. ']:' → logprob: -10.836577415466309
    8. '       ' → logprob: -10.836577415466309
    9. ' ):' → logprob: -11.086577415466309
    10. '():
' → logprob: -11.211577415466309

Token 336: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018648747354745865
    2. 'self' → logprob: -4.518648624420166
    3. ' self' → logprob: -4.893648624420166
    4. '	           ' → logprob: -10.018649101257324
    5. '           ' → logprob: -11.643649101257324
    6. '		       ' → logprob: -12.393649101257324
    7. '	self' → logprob: -12.393649101257324
    8. '   ' → logprob: -13.143649101257324
    9. '              ' → logprob: -13.268649101257324
    10. '                   ' → logprob: -13.268649101257324

Token 337: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -0.00016361083544325083
    2. 'seg' → logprob: -9.000164031982422
    3. '.update' → logprob: -10.250164031982422
    4. '_seg' → logprob: -13.875164031982422
    5. 'update' → logprob: -14.125164031982422
    6. '(seg' → logprob: -14.250164031982422
    7. '.' → logprob: -14.500164031982422
    8. '.set' → logprob: -14.750164031982422
    9. ' .' → logprob: -15.125164031982422
    10. '._' → logprob: -15.750164031982422

Token 338: '[n' (ID: 15433)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.6362111568450928
    2. '[n' → logprob: -0.7612111568450928
    3. '[N' → logprob: -6.261211395263672
    4. 'self' → logprob: -6.761211395263672
    5. '[' → logprob: -7.886211395263672
    6. ' self' → logprob: -10.511211395263672
    7. 'n' → logprob: -11.011211395263672
    8. '   ' → logprob: -11.136211395263672
    9. '[idx' → logprob: -11.511211395263672
    10. '[len' → logprob: -11.511211395263672

Token 339: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002198676229454577
    2. 'idx' → logprob: -8.62522029876709
    3. 'x' → logprob: -11.37522029876709
    4. '+' → logprob: -12.50022029876709
    5. '```' → logprob: -12.50022029876709
    6. '_idx' → logprob: -12.75022029876709
    7. '<|end|>' → logprob: -12.75022029876709
    8. '   ' → logprob: -12.87522029876709
    9. 'n' → logprob: -13.25022029876709
    10. 'self' → logprob: -13.62522029876709

Token 340: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003601021133363247
    2. ' +' → logprob: -5.62860107421875
    3. '+
' → logprob: -15.00360107421875
    4. '＋' → logprob: -15.37860107421875
    5. '+=' → logprob: -16.12860107421875
    6. ']' → logprob: -16.50360107421875
    7. '[idx' → logprob: -16.75360107421875
    8. ']+' → logprob: -16.87860107421875
    9. '
' → logprob: -16.87860107421875
    10. ' plus' → logprob: -17.00360107421875

Token 341: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -2.339278580620885e-06
    2. ' idx' → logprob: -13.000001907348633
    3. '	idx' → logprob: -16.875001907348633
    4. '[idx' → logprob: -17.625001907348633
    5. '(idx' → logprob: -17.625001907348633
    6. '_idx' → logprob: -18.625001907348633
    7. 'index' → logprob: -18.750001907348633
    8. '
' → logprob: -21.125001907348633
    9. ' ' → logprob: -21.375001907348633
    10. '   ' → logprob: -21.500001907348633

Token 342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4274197518825531
    2. '=' → logprob: -1.1774197816848755
    3. ' =' → logprob: -3.802419662475586
    4. ']=' → logprob: -4.052419662475586
    5. ' ]' → logprob: -10.177419662475586
    6. ')' → logprob: -14.052419662475586
    7. '=item' → logprob: -14.177419662475586
    8. ')=' → logprob: -15.052419662475586
    9. ']+=' → logprob: -15.552419662475586
    10. '[' → logprob: -16.302419662475586

Token 343: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07892272621393204
    2. ' =' → logprob: -2.578922748565674
    3. '=item' → logprob: -10.328922271728516
    4. '=user' → logprob: -16.078922271728516
    5. '=

' → logprob: -17.203922271728516
    6. '＝' → logprob: -17.328922271728516
    7. '=
' → logprob: -17.578922271728516
    8. '=value' → logprob: -17.578922271728516
    9. '=data' → logprob: -18.203922271728516
    10. ']=' → logprob: -18.328922271728516

Token 344: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.0001234428636962548
    2. ' item' → logprob: -9.000123023986816
    3. '	item' → logprob: -18.500123977661133
    4. '=item' → logprob: -19.875123977661133
    5. ')item' → logprob: -20.625123977661133
    6. '(item' → logprob: -21.125123977661133
    7. '$item' → logprob: -21.375123977661133
    8. ' ' → logprob: -21.875123977661133
    9. 'getitem' → logprob: -21.875123977661133
    10. '.item' → logprob: -22.375123977661133

Token 345: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009295457974076271
    2. 'for' → logprob: -5.509295463562012
    3. ' for' → logprob: -5.634295463562012
    4. '
' → logprob: -6.884295463562012
    5. '       ' → logprob: -7.759295463562012
    6. 'self' → logprob: -9.509295463562012
    7. '               ' → logprob: -10.259295463562012
    8. ',' → logprob: -10.384295463562012
    9. '	       ' → logprob: -11.884295463562012
    10. ' self' → logprob: -12.009295463562012

Token 346: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034078553318977356
    2. ' for' → logprob: -4.409078598022461
    3. 'for' → logprob: -4.534078598022461
    4. '           ' → logprob: -4.784078598022461
    5. '
' → logprob: -6.284078598022461
    6. 'self' → logprob: -9.034078598022461
    7. ',' → logprob: -9.409078598022461
    8. '```' → logprob: -10.409078598022461
    9. '  
' → logprob: -10.784078598022461
    10. '        
' → logprob: -10.909078598022461

Token 347: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019803799223154783
    2. '       ' → logprob: -6.751980304718018
    3. ' for' → logprob: -7.126980304718018
    4. '   ' → logprob: -12.626980781555176
    5. 'self' → logprob: -13.751980781555176
    6. 'def' → logprob: -13.876980781555176
    7. '	for' → logprob: -14.751980781555176
    8. '
' → logprob: -15.376980781555176
    9. '           ' → logprob: -15.501980781555176
    10. '        
' → logprob: -16.25197982788086

Token 348: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1605953425168991
    2. ' i' → logprob: -1.9105952978134155
    3. 'idx' → logprob: -8.160594940185547
    4. 'k' → logprob: -10.160594940185547
    5. 'p' → logprob: -10.410594940185547
    6. ' idx' → logprob: -11.285594940185547
    7. ' p' → logprob: -13.035594940185547
    8. ' k' → logprob: -14.285594940185547
    9. 'pos' → logprob: -14.660594940185547
    10. 'v' → logprob: -15.035594940185547

Token 349: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11312107741832733
    2. 'in' → logprob: -2.2381210327148438
    3. 'n' → logprob: -8.363121032714844
    4. 'range' → logprob: -9.863121032714844
    5. ' range' → logprob: -12.863121032714844
    6. ' reversed' → logprob: -13.613121032714844
    7. 's' → logprob: -13.738121032714844
    8. 'd' → logprob: -13.988121032714844
    9. '   ' → logprob: -14.113121032714844
    10. '	in' → logprob: -14.238121032714844

Token 350: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011474176310002804
    2. 're' → logprob: -4.761474132537842
    3. ' range' → logprob: -5.886474132537842
    4. ' reversed' → logprob: -9.761474609375
    5. '   ' → logprob: -11.011474609375
    6. ' ' → logprob: -13.261474609375
    7. 'reverse' → logprob: -13.761474609375
    8. '
' → logprob: -14.386474609375
    9. '(range' → logprob: -14.886474609375
    10. '  ' → logprob: -15.136474609375

Token 351: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015408077742904425
    2. '(n' → logprob: -6.501540660858154
    3. ' n' → logprob: -10.501541137695312
    4. '	n' → logprob: -12.126541137695312
    5. 'self' → logprob: -13.001541137695312
    6. '   ' → logprob: -13.251541137695312
    7. '
' → logprob: -13.626541137695312
    8. '       ' → logprob: -15.876541137695312
    9. ',n' → logprob: -16.376541137695312
    10. '(self' → logprob: -16.501541137695312

Token 352: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.360996485454962e-05
    2. '-' → logprob: -9.7500638961792
    3. '   ' → logprob: -13.3750638961792
    4. ' ' → logprob: -13.7500638961792
    5. ' -' → logprob: -14.3750638961792
    6. '```' → logprob: -14.3750638961792
    7. '       ' → logprob: -14.7500638961792
    8. '     ' → logprob: -15.7500638961792
    9. '    ' → logprob: -16.000062942504883
    10. '``' → logprob: -16.187562942504883

Token 353: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2014227956533432
    2. ' -' → logprob: -1.7014228105545044
    3. ' ' → logprob: -11.701422691345215
    4. '   ' → logprob: -14.201422691345215
    5. '  ' → logprob: -15.951422691345215
    6. '
' → logprob: -16.32642364501953
    7. ' ' → logprob: -16.45142364501953
    8. '1' → logprob: -17.32642364501953
    9. '```' → logprob: -17.70142364501953
    10. '	' → logprob: -18.20142364501953

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.500001907348633
    3. '2' → logprob: -15.125001907348633
    4. '
' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.125001907348633
    6. '１' → logprob: -16.875001907348633
    7. '

' → logprob: -18.250001907348633
    8. '```' → logprob: -18.625001907348633
    9. '
' → logprob: -19.687501907348633
    10. '  ' → logprob: -19.750001907348633

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047539533115923405
    2. ' ,' → logprob: -5.379754066467285
    3. ',-' → logprob: -9.254754066467285
    4. '0' → logprob: -10.879754066467285
    5. '   ' → logprob: -11.754754066467285
    6. '-' → logprob: -12.379754066467285
    7. '1' → logprob: -12.879754066467285
    8. ' ,-' → logprob: -13.504754066467285
    9. ' -' → logprob: -13.629754066467285
    10. ',
' → logprob: -14.629754066467285

Token 356: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '-' → logprob: -16.125553131103516
    4. '   ' → logprob: -17.125553131103516
    5. '
' → logprob: -17.500553131103516
    6. '０' → logprob: -18.250553131103516
    7. '    ' → logprob: -18.500553131103516
    8. ' -' → logprob: -18.875553131103516
    9. '     ' → logprob: -19.250553131103516
    10. '           ' → logprob: -19.375553131103516

Token 357: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011856284982059151
    2. ' ' → logprob: -9.125118255615234
    3. '-' → logprob: -11.625118255615234
    4. ' -' → logprob: -15.250118255615234
    5. '
' → logprob: -16.125118255615234
    6. '０' → logprob: -16.750118255615234
    7. '   ' → logprob: -17.375118255615234
    8. '  ' → logprob: -18.375118255615234
    9. '```' → logprob: -18.500118255615234
    10. '۰' → logprob: -18.750118255615234

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027469824999570847
    2. ',-' → logprob: -3.7774698734283447
    3. '-' → logprob: -5.902469635009766
    4. ' ,' → logprob: -6.652469635009766
    5. ' ,-' → logprob: -9.527469635009766
    6. ' -' → logprob: -9.652469635009766
    7. '   ' → logprob: -10.277469635009766
    8. '-,' → logprob: -11.527469635009766
    9. '0' → logprob: -12.527469635009766
    10. '  ' → logprob: -13.152469635009766

Token 359: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001238004770129919
    2. ' -' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.375123977661133
    4. '```' → logprob: -15.875123977661133
    5. '  ' → logprob: -17.625123977661133
    6. '	' → logprob: -17.875123977661133
    7. '-i' → logprob: -18.000123977661133
    8. ',' → logprob: -19.000123977661133
    9. '-step' → logprob: -19.000123977661133
    10. ' ' → logprob: -19.250123977661133

Token 360: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.1928003813372925e-05
    2. ' -' → logprob: -9.875051498413086
    3. '1' → logprob: -15.125051498413086
    4. '   ' → logprob: -16.750051498413086
    5. '  ' → logprob: -19.500051498413086
    6. '−' → logprob: -19.500051498413086
    7. '-i' → logprob: -19.875051498413086
    8. ' ' → logprob: -19.875051498413086
    9. ',-' → logprob: -20.000051498413086
    10. '```' → logprob: -20.125051498413086

Token 361: '):' (ID: 3127)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2784583866596222
    2. '):
' → logprob: -1.6534583568572998
    3. ',-' → logprob: -3.7784583568573
    4. '):' → logprob: -4.153458595275879
    5. ' -' → logprob: -4.903458595275879
    6. ',' → logprob: -5.528458595275879
    7. '   ' → logprob: -6.903458595275879
    8. '):-' → logprob: -8.528458595275879
    9. ' ):
' → logprob: -8.903458595275879
    10. '       ' → logprob: -9.528458595275879

Token 362: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08881796896457672
    2. 'self' → logprob: -2.963818073272705
    3. '           ' → logprob: -3.463818073272705
    4. '               ' → logprob: -6.338818073272705
    5. ' ' → logprob: -8.338817596435547
    6. '   ' → logprob: -10.713817596435547
    7. '	self' → logprob: -11.463817596435547
    8. '            ' → logprob: -11.713817596435547
    9. ',self' → logprob: -13.088817596435547
    10. '       ' → logprob: -13.338817596435547

Token 363: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -1.9146995327901095e-05
    2. 'seg' → logprob: -11.000019073486328
    3. '.se' → logprob: -14.125019073486328
    4. '.' → logprob: -14.375019073486328
    5. '_seg' → logprob: -15.250019073486328
    6. '.sem' → logprob: -15.375019073486328
    7. ' .' → logprob: -15.625019073486328
    8. '(seg' → logprob: -16.375019073486328
    9. '.segment' → logprob: -16.625019073486328
    10. '.sec' → logprob: -16.875019073486328

Token 364: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.375001907348633
    3. ' [' → logprob: -14.625001907348633
    4. '```' → logprob: -14.875001907348633
    5. 'i' → logprob: -16.125001907348633
    6. '[I' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '=' → logprob: -18.375001907348633
    9. ' ' → logprob: -18.375001907348633
    10. ' =' → logprob: -18.500001907348633

Token 365: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7638939023017883
    2. ']' → logprob: -0.7638939023017883
    3. ' =' → logprob: -3.2638938426971436
    4. ']=' → logprob: -3.5138938426971436
    5. ' ]' → logprob: -8.763894081115723
    6. '=self' → logprob: -9.388894081115723
    7. 'self' → logprob: -10.513894081115723
    8. ')=' → logprob: -12.263894081115723
    9. ')' → logprob: -12.763894081115723
    10. ' self' → logprob: -12.888894081115723

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009149204124696553
    2. ' =' → logprob: -7.000915050506592
    3. '=self' → logprob: -12.625914573669434
    4. '=
' → logprob: -18.37591552734375
    5. 'self' → logprob: -18.62591552734375
    6. '＝' → logprob: -19.37591552734375
    7. '=

' → logprob: -19.62591552734375
    8. ']=' → logprob: -20.25091552734375
    9. ' self' → logprob: -20.62591552734375
    10. '.=' → logprob: -20.75091552734375

Token 367: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.040120624005794525
    2. 'self' → logprob: -3.2901206016540527
    3. ' op' → logprob: -6.290120601654053
    4. ' self' → logprob: -8.415121078491211
    5. '	op' → logprob: -14.790121078491211
    6. '   ' → logprob: -15.165121078491211
    7. '       ' → logprob: -15.915121078491211
    8. '
' → logprob: -16.54012107849121
    9. 'ops' → logprob: -17.04012107849121
    10. 'opt' → logprob: -17.16512107849121

Token 368: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.061676347395405e-05
    2. 'self' → logprob: -10.12505054473877
    3. '(' → logprob: -11.62505054473877
    4. '(seg' → logprob: -14.12505054473877
    5. '(
' → logprob: -15.25005054473877
    6. ' self' → logprob: -16.000051498413086
    7. '(sel' → logprob: -16.125051498413086
    8. '(se' → logprob: -16.500051498413086
    9. '	self' → logprob: -16.625051498413086
    10. ' (' → logprob: -16.875051498413086

Token 369: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -3.8889261304575484e-06
    2. 'seg' → logprob: -12.875003814697266
    3. '(seg' → logprob: -15.000003814697266
    4. '.sig' → logprob: -15.125003814697266
    5. '.sem' → logprob: -15.375003814697266
    6. '.se' → logprob: -15.625003814697266
    7. '.sel' → logprob: -16.250003814697266
    8. '_seg' → logprob: -17.125003814697266
    9. '.' → logprob: -17.375003814697266
    10. ',' → logprob: -17.375003814697266

Token 370: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003682140028104186
    2. 'i' → logprob: -5.6286821365356445
    3. '[' → logprob: -9.503682136535645
    4. '2' → logprob: -12.378682136535645
    5. ' i' → logprob: -13.128682136535645
    6. '	i' → logprob: -14.128682136535645
    7. ',i' → logprob: -16.37868309020996
    8. '   ' → logprob: -16.37868309020996
    9. '  ' → logprob: -16.50368309020996
    10. ' ' → logprob: -16.62868309020996

Token 371: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -7.874882430769503e-05
    2. ' <<' → logprob: -9.500079154968262
    3. '2' → logprob: -13.250079154968262
    4. '*' → logprob: -13.750079154968262
    5. 'i' → logprob: -14.250079154968262
    6. '[i' → logprob: -15.750079154968262
    7. '<<(' → logprob: -16.500078201293945
    8. '1' → logprob: -16.625078201293945
    9. '[' → logprob: -17.125078201293945
    10. ' ' → logprob: -17.750078201293945

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.750000953674316
    3. 'i' → logprob: -15.750000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '```' → logprob: -16.375
    6. '0' → logprob: -17.0
    7. ' ' → logprob: -17.6875
    8. '１' → logprob: -17.8125
    9. '2' → logprob: -17.9375
    10. '' → logprob: -18.1875

Token 373: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.002529760589823127
    2. ',' → logprob: -6.127529621124268
    3. ' ],' → logprob: -8.252530097961426
    4. ' ,' → logprob: -10.252530097961426
    5. '],
' → logprob: -10.752530097961426
    6. ']' → logprob: -11.377530097961426
    7. ' ' → logprob: -12.752530097961426
    8. '1' → logprob: -12.877530097961426
    9. '>,' → logprob: -13.252530097961426
    10. '   ' → logprob: -13.377530097961426

Token 374: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02324594371020794
    2. ' self' → logprob: -3.7732460498809814
    3. ' ' → logprob: -16.02324676513672
    4. '	self' → logprob: -16.14824676513672
    5. '   ' → logprob: -16.27324676513672
    6. '    ' → logprob: -17.39824676513672
    7. 'se' → logprob: -17.64824676513672
    8. ' ' → logprob: -17.77324676513672
    9. '  ' → logprob: -18.02324676513672
    10. 'seg' → logprob: -18.27324676513672

Token 375: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -0.12037201970815659
    2. 'i' → logprob: -3.1203720569610596
    3. '.i' → logprob: -3.1203720569610596
    4. 'seg' → logprob: -3.7453720569610596
    5. '[i' → logprob: -6.8703718185424805
    6. 's' → logprob: -8.24537181854248
    7. '.se' → logprob: -9.49537181854248
    8. '(i' → logprob: -9.87037181854248
    9. '.' → logprob: -10.99537181854248
    10. 'Seg' → logprob: -11.62037181854248

Token 376: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002112886286340654
    2. '[(' → logprob: -8.500211715698242
    3. '(i' → logprob: -11.875211715698242
    4. '[' → logprob: -14.625211715698242
    5. '
' → logprob: -16.250211715698242
    6. 'i' → logprob: -16.500211715698242
    7. '[
' → logprob: -16.750211715698242
    8. ' [' → logprob: -16.875211715698242
    9. '1' → logprob: -17.250211715698242
    10. '][' → logprob: -17.625211715698242

Token 377: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.12258882028982e-05
    2. '(i' → logprob: -10.00006103515625
    3. ' i' → logprob: -11.12506103515625
    4. ' ' → logprob: -14.12506103515625
    5. '   ' → logprob: -15.75006103515625
    6. '	i' → logprob: -16.62506103515625
    7. ' (' → logprob: -17.50006103515625
    8. '  ' → logprob: -17.75006103515625
    9. '(' → logprob: -17.75006103515625
    10. '     ' → logprob: -19.00006103515625

Token 378: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -2.6776029699249193e-05
    2. '1' → logprob: -11.00002670288086
    3. ' <<' → logprob: -12.62502670288086
    4. '(i' → logprob: -12.87502670288086
    5. ']<<' → logprob: -13.00002670288086
    6. ')<<' → logprob: -13.87502670288086
    7. '()<<' → logprob: -15.12502670288086
    8. '[i' → logprob: -15.25002670288086
    9. 'i' → logprob: -15.62502670288086
    10. '<<(' → logprob: -16.12502670288086

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -16.75
    4. '
' → logprob: -17.375
    5. 'i' → logprob: -17.75
    6. '  ' → logprob: -19.5
    7. '     ' → logprob: -20.0
    8. '(i' → logprob: -20.125
    9. '```' → logprob: -20.25
    10. '	' → logprob: -20.375

Token 380: ')|' (ID: 47976)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.27219513058662415
    2. ')+' → logprob: -1.6471951007843018
    3. ')' → logprob: -3.7721951007843018
    4. ')|' → logprob: -4.022195339202881
    5. '1' → logprob: -6.147195339202881
    6. ' |' → logprob: -7.022195339202881
    7. ']+' → logprob: -7.272195339202881
    8. ')+(' → logprob: -8.022194862365723
    9. ')|(' → logprob: -8.522194862365723
    10. '
' → logprob: -8.647194862365723

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '0' → logprob: -19.375
    4. '   ' → logprob: -21.0
    5. '１' → logprob: -22.625
    6. '2' → logprob: -23.125
    7. '```' → logprob: -23.125
    8. 'i' → logprob: -23.125
    9. '
' → logprob: -23.625
    10. ' ' → logprob: -23.75

Token 382: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02996707707643509
    2. ')' → logprob: -3.5299670696258545
    3. ' ])' → logprob: -9.279967308044434
    4. ')])' → logprob: -9.654967308044434
    5. ' )' → logprob: -10.904967308044434
    6. '))' → logprob: -11.029967308044434
    7. ')]' → logprob: -11.779967308044434
    8. '])
' → logprob: -11.779967308044434
    9. ')
' → logprob: -12.279967308044434
    10. ']' → logprob: -12.904967308044434

Token 383: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5151382684707642
    2. '
' → logprob: -1.1401382684707642
    3. '<|end|>' → logprob: -3.1401381492614746
    4. '   ' → logprob: -4.390138149261475
    5. ' def' → logprob: -4.640138149261475
    6. '    
' → logprob: -5.015138149261475
    7. '  
' → logprob: -5.390138149261475
    8. '```' → logprob: -6.265138149261475
    9. ' 
' → logprob: -6.390138149261475
    10. '<|end|>' → logprob: -7.765138149261475

Token 385: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.4571242332458496
    2. ' update' → logprob: -2.0821242332458496
    3. 'set' → logprob: -2.2071242332458496
    4. ' set' → logprob: -2.5821242332458496
    5. 'build' → logprob: -3.8321242332458496
    6. '__' → logprob: -4.58212423324585
    7. '_set' → logprob: -5.08212423324585
    8. '_' → logprob: -5.08212423324585
    9. '_update' → logprob: -5.20712423324585
    10. ' build' → logprob: -5.33212423324585

Token 386: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0802738870552275e-05
    2. '(' → logprob: -11.50001049041748
    3. '(s' → logprob: -15.12501049041748
    4. ' (' → logprob: -15.75001049041748
    5. '(i' → logprob: -16.625011444091797
    6. '(sel' → logprob: -16.625011444091797
    7. '(idx' → logprob: -17.875011444091797
    8. '(k' → logprob: -18.000011444091797
    9. '   ' → logprob: -18.375011444091797
    10. '(index' → logprob: -18.500011444091797

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3438327843905427e-05
    2. ' ,' → logprob: -11.37502384185791
    3. 'self' → logprob: -12.25002384185791
    4. ',index' → logprob: -12.87502384185791
    5. ',i' → logprob: -13.12502384185791
    6. ',k' → logprob: -13.50002384185791
    7. ',pos' → logprob: -14.37502384185791
    8. ',p' → logprob: -15.50002384185791
    9. ',
' → logprob: -16.000022888183594
    10. ' ' → logprob: -16.500022888183594

Token 388: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.27763500809669495
    2. 'i' → logprob: -2.527635097503662
    3. 'idx' → logprob: -2.527635097503662
    4. 'p' → logprob: -2.777635097503662
    5. 'pos' → logprob: -3.902635097503662
    6. 'index' → logprob: -8.277634620666504
    7. ' k' → logprob: -10.402634620666504
    8. ' i' → logprob: -10.402634620666504
    9. ' p' → logprob: -10.777634620666504
    10. ' idx' → logprob: -11.277634620666504

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.134509021649137e-05
    2. ' ,' → logprob: -9.87506103515625
    3. ',value' → logprob: -11.75006103515625
    4. ',v' → logprob: -13.87506103515625
    5. ',val' → logprob: -14.12506103515625
    6. ',x' → logprob: -16.37506103515625
    7. ',k' → logprob: -17.00006103515625
    8. ',item' → logprob: -17.25006103515625
    9. 'a' → logprob: -17.37506103515625
    10. ',a' → logprob: -17.37506103515625

Token 390: ' val' (ID: 1459)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0013832130935043097
    2. 'v' → logprob: -6.876383304595947
    3. ' x' → logprob: -8.251382827758789
    4. 'val' → logprob: -9.626382827758789
    5. 'value' → logprob: -10.751382827758789
    6. ' v' → logprob: -14.251382827758789
    7. ' val' → logprob: -14.626382827758789
    8. 'b' → logprob: -14.626382827758789
    9. 'a' → logprob: -15.501382827758789
    10. 'd' → logprob: -16.00138282775879

Token 391: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003325883997604251
    2. '):
' → logprob: -5.753325939178467
    3. ')' → logprob: -8.878325462341309
    4. ' ):' → logprob: -12.378325462341309
    5. '):
' → logprob: -12.628325462341309
    6. ':' → logprob: -14.128325462341309
    7. '   ' → logprob: -15.253325462341309
    8. ' ' → logprob: -16.378326416015625
    9. ')->' → logprob: -16.628326416015625
    10. '):

' → logprob: -16.878326416015625

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005903251585550606
    2. ' self' → logprob: -8.500590324401855
    3. ':' → logprob: -9.125590324401855
    4. '   ' → logprob: -9.375590324401855
    5. '```' → logprob: -9.875590324401855
    6. 'self' → logprob: -10.125590324401855
    7. ':
' → logprob: -10.250590324401855
    8. '):
' → logprob: -11.125590324401855
    9. ',' → logprob: -11.375590324401855
    10. '	' → logprob: -11.750590324401855

Token 393: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27091655135154724
    2. ' i' → logprob: -1.5209165811538696
    3. '       ' → logprob: -4.02091646194458
    4. '   ' → logprob: -7.64591646194458
    5. 'pos' → logprob: -8.020916938781738
    6. ' pos' → logprob: -10.270916938781738
    7. 'idx' → logprob: -11.520916938781738
    8. 'p' → logprob: -11.770916938781738
    9. '	i' → logprob: -12.395916938781738
    10. ' p' → logprob: -12.395916938781738

Token 394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144014060497284
    2. '=' → logprob: -1.7014400959014893
    3. '=i' → logprob: -10.70143985748291
    4. ' ' → logprob: -13.45143985748291
    5. '=index' → logprob: -13.57643985748291
    6. '＝' → logprob: -14.45143985748291
    7. '	' → logprob: -15.32643985748291
    8. '   ' → logprob: -15.45143985748291
    9. '=int' → logprob: -16.451440811157227
    10. '=
' → logprob: -16.576440811157227

Token 395: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1299513578414917
    2. 'self' → logprob: -2.1299514770507812
    3. ' self' → logprob: -6.379951477050781
    4. ' i' → logprob: -6.629951477050781
    5. '(self' → logprob: -13.754951477050781
    6. '	self' → logprob: -14.004951477050781
    7. '	i' → logprob: -14.379951477050781
    8. '   ' → logprob: -14.754951477050781
    9. ' ' → logprob: -15.254951477050781
    10. '=self' → logprob: -16.37995147705078

Token 396: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.733757495880127
    2. '+self' → logprob: -0.983757495880127
    3. ' +' → logprob: -1.983757495880127
    4. '+=' → logprob: -4.983757495880127
    5. '+n' → logprob: -6.983757495880127
    6. '+i' → logprob: -7.983757495880127
    7. ' +=' → logprob: -8.858757019042969
    8. '+
' → logprob: -9.358757019042969
    9. '=' → logprob: -9.733757019042969
    10. '   ' → logprob: -11.608757019042969

Token 397: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.615255839889869e-05
    2. ' self' → logprob: -9.250096321105957
    3. '
' → logprob: -16.75009536743164
    4. '(self' → logprob: -17.50009536743164
    5. '[self' → logprob: -18.25009536743164
    6. '   ' → logprob: -18.50009536743164
    7. '       ' → logprob: -18.75009536743164
    8. '	self' → logprob: -19.75009536743164
    9. '=self' → logprob: -20.62509536743164
    10. ' ' → logprob: -21.75009536743164

Token 398: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.47408103942871094
    2. 'N' → logprob: -0.9740810394287109
    3. '	N' → logprob: -12.849081039428711
    4. 'sz' → logprob: -14.474081039428711
    5. '   ' → logprob: -15.599081039428711
    6. ' ' → logprob: -15.974081039428711
    7. ' N' → logprob: -16.47408103942871
    8. 'size' → logprob: -16.59908103942871
    9. '.n' → logprob: -16.72408103942871
    10. '.' → logprob: -16.84908103942871

Token 399: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009365377016365528
    2. '       ' → logprob: -5.009365558624268
    3. '        
' → logprob: -7.134365558624268
    4. '
' → logprob: -8.13436508178711
    5. 'self' → logprob: -8.13436508178711
    6. '  
' → logprob: -8.25936508178711
    7. '<|end|>' → logprob: -8.38436508178711
    8. ' 
' → logprob: -8.50936508178711
    9. '    
' → logprob: -9.25936508178711
    10. ')
' → logprob: -9.38436508178711

Token 400: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045971520245075226
    2. '       ' → logprob: -3.170971632003784
    3. '        
' → logprob: -6.920971393585205
    4. '
' → logprob: -7.420971393585205
    5. 'self' → logprob: -7.920971393585205
    6. ' 
' → logprob: -8.045971870422363
    7. '    
' → logprob: -8.545971870422363
    8. '  
' → logprob: -8.670971870422363
    9. '   ' → logprob: -9.670971870422363
    10. '\n' → logprob: -10.170971870422363

Token 401: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0014223761390894651
    2. '       ' → logprob: -7.00142240524292
    3. ' self' → logprob: -7.87642240524292
    4. 'while' → logprob: -9.126421928405762
    5. '   ' → logprob: -11.751421928405762
    6. '        
' → logprob: -12.126421928405762
    7. '
' → logprob: -12.501421928405762
    8. '	self' → logprob: -12.751421928405762
    9. ' while' → logprob: -13.876421928405762
    10. 'val' → logprob: -14.876421928405762

Token 402: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -0.00030602619517594576
    2. 'seg' → logprob: -8.375306129455566
    3. '.' → logprob: -9.875306129455566
    4. '.segment' → logprob: -11.500306129455566
    5. ' .' → logprob: -13.125306129455566
    6. '   ' → logprob: -13.250306129455566
    7. '.sel' → logprob: -13.375306129455566
    8. '.sem' → logprob: -13.625306129455566
    9. '(seg' → logprob: -13.875306129455566
    10. '.sig' → logprob: -14.000306129455566

Token 403: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -3.7697225252486533e-06
    2. 'index' → logprob: -13.250003814697266
    3. '[ind' → logprob: -14.000003814697266
    4. '[i' → logprob: -14.250003814697266
    5. '[' → logprob: -15.125003814697266
    6. '[in' → logprob: -15.875003814697266
    7. '[Index' → logprob: -16.625003814697266
    8. '#index' → logprob: -18.125003814697266
    9. '=index' → logprob: -18.125003814697266
    10. '[idx' → logprob: -19.500003814697266

Token 404: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02342284470796585
    2. ' =' → logprob: -3.773422956466675
    3. ']=' → logprob: -9.273423194885254
    4. ']' → logprob: -9.398423194885254
    5. ')=' → logprob: -14.648423194885254
    6. ')' → logprob: -15.648423194885254
    7. ' ]' → logprob: -18.273422241210938
    8. '>' → logprob: -18.398422241210938
    9. '}=' → logprob: -19.148422241210938
    10. ']+=' → logprob: -19.148422241210938

Token 405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '.=' → logprob: -19.129077911376953
    4. '＝' → logprob: -20.379077911376953
    5. '+=' → logprob: -22.879077911376953
    6. '=

' → logprob: -23.254077911376953
    7. '	' → logprob: -23.879077911376953
    8. ')=' → logprob: -23.879077911376953
    9. '   ' → logprob: -24.004077911376953
    10. '=}' → logprob: -24.129077911376953

Token 406: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0009115827269852161
    2. ' val' → logprob: -7.000911712646484
    3. '	val' → logprob: -16.625911712646484
    4. '_val' → logprob: -20.875911712646484
    5. '   ' → logprob: -21.250911712646484
    6. '       ' → logprob: -21.250911712646484
    7. '[val' → logprob: -21.750911712646484
    8. '.val' → logprob: -22.000911712646484
    9. ',val' → logprob: -22.625911712646484
    10. 'Val' → logprob: -22.750911712646484

Token 407: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2850275933742523
    2. 'index' → logprob: -1.4100276231765747
    3. 'while' → logprob: -6.410027503967285
    4. ' index' → logprob: -7.160027503967285
    5. ' while' → logprob: -8.035027503967285
    6. '
' → logprob: -8.285027503967285
    7. '   ' → logprob: -8.285027503967285
    8. '	' → logprob: -8.535027503967285
    9. ',' → logprob: -9.035027503967285
    10. ',index' → logprob: -9.035027503967285

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008143364451825619
    2. 'index' → logprob: -5.133143424987793
    3. ' while' → logprob: -7.508143424987793
    4. '	' → logprob: -7.758143424987793
    5. ' index' → logprob: -7.758143424987793
    6. ',' → logprob: -8.383143424987793
    7. 'while' → logprob: -8.508143424987793
    8. '   ' → logprob: -8.883143424987793
    9. '	index' → logprob: -9.758143424987793
    10. '	while' → logprob: -10.133143424987793

Token 409: ' while' (ID: 2049)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.16052763164043427
    2. 'while' (adapté à ' while') → logprob: -2.1605277061462402
    3. '       ' → logprob: -3.4105277061462402
    4. '   ' → logprob: -12.035527229309082
    5. 'i' → logprob: -12.285527229309082
    6. ' while' → logprob: -12.535527229309082
    7. ' index' → logprob: -12.660527229309082
    8. '	while' → logprob: -16.4105281829834
    9. '	index' → logprob: -16.7855281829834
    10. 'indices' → logprob: -17.2855281829834

Token 410: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0005580356228165329
    2. ' index' → logprob: -7.500557899475098
    3. 'True' → logprob: -13.125557899475098
    4. '1' → logprob: -13.500557899475098
    5. '(index' → logprob: -14.125557899475098
    6. ' ' → logprob: -14.500557899475098
    7. '   ' → logprob: -15.000557899475098
    8. ' True' → logprob: -16.750558853149414
    9. '	index' → logprob: -16.875558853149414
    10. '
' → logprob: -18.375558853149414

Token 411: ':' (ID: 25)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3132860064506531
    2. '>>' → logprob: -1.3132860660552979
    3. '   ' → logprob: -12.063285827636719
    4. ':=' → logprob: -12.188285827636719
    5. '≫' → logprob: -12.688285827636719
    6. ' ' → logprob: -13.313285827636719
    7. ' >>=' → logprob: -13.438285827636719
    8. '>>>' → logprob: -13.563285827636719
    9. ' >' → logprob: -13.563285827636719
    10. '＞' → logprob: -13.688285827636719

Token 412: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.1322648972272873
    2. 'index' → logprob: -2.1322648525238037
    3. '           ' → logprob: -6.257265090942383
    4. '        ' → logprob: -6.507265090942383
    5. '       ' → logprob: -6.882265090942383
    6. '#index' → logprob: -8.257265090942383
    7. ',index' → logprob: -9.132265090942383
    8. '(index' → logprob: -9.382265090942383
    9. '1' → logprob: -9.632265090942383
    10. '	       ' → logprob: -9.757265090942383

Token 413: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0004484269011300057
    2. ' >>=' → logprob: -8.000448226928711
    3. '//=' → logprob: -9.250448226928711
    4. '=' → logprob: -12.125448226928711
    5. '   ' → logprob: -12.125448226928711
    6. '>' → logprob: -12.625448226928711
    7. ' ' → logprob: -13.625448226928711
    8. '≫' → logprob: -14.625448226928711
    9. '  ' → logprob: -15.750448226928711
    10. '    ' → logprob: -15.875448226928711

Token 414: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -18.75
    4. '１' → logprob: -19.125
    5. '<|end|>' → logprob: -20.25
    6. '   ' → logprob: -20.375
    7. '' → logprob: -20.625
    8. '१' → logprob: -21.125
    9. '۱' → logprob: -21.625
    10. '<|end|>' → logprob: -21.75

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.875
    4. '   ' → logprob: -19.25
    5. '１' → logprob: -19.5
    6. '' → logprob: -20.0
    7. '१' → logprob: -20.1875
    8. 'One' → logprob: -20.5
    9. '
' → logprob: -20.5625
    10. '১' → logprob: -20.75

Token 416: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023480605334043503
    2. ',' → logprob: -4.648480415344238
    3. '           ' → logprob: -4.898480415344238
    4. 'self' → logprob: -5.273480415344238
    5. '   ' → logprob: -7.773480415344238
    6. ' self' → logprob: -8.398480415344238
    7. ' and' → logprob: -9.148480415344238
    8. ',self' → logprob: -9.898480415344238
    9. '​' → logprob: -10.523480415344238
    10. '```' → logprob: -10.773480415344238

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011525211855769157
    2. ' self' → logprob: -4.5115251541137695
    3. '       ' → logprob: -8.13652515411377
    4. '           ' → logprob: -8.76152515411377
    5. ' ' → logprob: -11.38652515411377
    6. '   ' → logprob: -11.51152515411377
    7. '	self' → logprob: -12.76152515411377
    8. 'if' → logprob: -13.51152515411377
    9. '  ' → logprob: -14.88652515411377
    10. 'index' → logprob: -15.01152515411377

Token 418: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -0.0021362213883548975
    2. 'seg' → logprob: -6.50213623046875
    3. '       ' → logprob: -8.62713623046875
    4. '   ' → logprob: -9.25213623046875
    5. '>' → logprob: -9.62713623046875
    6. ' ' → logprob: -9.62713623046875
    7. '(seg' → logprob: -10.00213623046875
    8. '1' → logprob: -11.00213623046875
    9. '=' → logprob: -11.00213623046875
    10. ' =' → logprob: -11.00213623046875

Token 419: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -3.292907877039397e-06
    2. 'index' → logprob: -13.25000286102295
    3. '[' → logprob: -13.62500286102295
    4. '[ind' → logprob: -16.375003814697266
    5. '[parent' → logprob: -16.625003814697266
    6. '   ' → logprob: -17.000003814697266
    7. '```' → logprob: -17.000003814697266
    8. '[i' → logprob: -17.125003814697266
    9. '[in' → logprob: -17.125003814697266
    10. '=index' → logprob: -17.625003814697266

Token 420: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016077011823654175
    2. ']=' → logprob: -6.501607894897461
    3. '=' → logprob: -9.501607894897461
    4. ' ]' → logprob: -10.501607894897461
    5. ' =' → logprob: -13.126607894897461
    6. 's' → logprob: -14.501607894897461
    7. '[' → logprob: -16.00160789489746
    8. 'index' → logprob: -16.37660789489746
    9. ']=(' → logprob: -16.37660789489746
    10. '   ' → logprob: -16.50160789489746

Token 421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067156096920371056
    2. ' =' → logprob: -5.006715774536133
    3. '=self' → logprob: -15.506715774536133
    4. '＝' → logprob: -17.506715774536133
    5. '.=' → logprob: -19.006715774536133
    6. ']=' → logprob: -20.006715774536133
    7. '=_' → logprob: -20.631715774536133
    8. ')=' → logprob: -20.881715774536133
    9. ']' → logprob: -21.006715774536133
    10. 's' → logprob: -21.256715774536133

Token 422: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975442260503769
    2. ' self' → logprob: -3.529754400253296
    3. '	self' → logprob: -13.154754638671875
    4. 'op' → logprob: -13.904754638671875
    5. '   ' → logprob: -15.529754638671875
    6. '(self' → logprob: -15.529754638671875
    7. ' ' → logprob: -15.654754638671875
    8. ' ' → logprob: -16.154754638671875
    9. '[self' → logprob: -16.529754638671875
    10. '  ' → logprob: -17.029754638671875

Token 423: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -4.084206375409849e-05
    2. 'op' → logprob: -10.125041007995605
    3. '	op' → logprob: -14.875041007995605
    4. '.seg' → logprob: -15.000041007995605
    5. ' op' → logprob: -17.12504005432129
    6. '.' → logprob: -17.37504005432129
    7. '_op' → logprob: -19.50004005432129
    8. '.opt' → logprob: -20.12504005432129
    9. ''op' → logprob: -20.37504005432129
    10. '[' → logprob: -20.50004005432129

Token 424: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.7120533811976202e-05
    2. 'self' → logprob: -11.000017166137695
    3. '(' → logprob: -14.875017166137695
    4. '(
' → logprob: -17.625017166137695
    5. '=self' → logprob: -18.625017166137695
    6. ' self' → logprob: -19.625017166137695
    7. '(this' → logprob: -19.750017166137695
    8. '   ' → logprob: -19.875017166137695
    9. '(seg' → logprob: -20.000017166137695
    10. '[self' → logprob: -20.250017166137695

Token 425: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -0.0003123439964838326
    2. 'seg' → logprob: -8.125312805175781
    3. '(seg' → logprob: -11.375312805175781
    4. '.sel' → logprob: -13.500312805175781
    5. '.segment' → logprob: -14.375312805175781
    6. '.sec' → logprob: -14.750312805175781
    7. '_seg' → logprob: -14.875312805175781
    8. '.se' → logprob: -14.875312805175781
    9. 'self' → logprob: -15.125312805175781
    10. ',' → logprob: -15.250312805175781

Token 426: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. '[(' → logprob: -16.625
    4. 'index' → logprob: -17.625
    5. '[ind' → logprob: -17.875
    6. '[self' → logprob: -18.625
    7. ',index' → logprob: -19.125
    8. '[i' → logprob: -19.125
    9. '[Index' → logprob: -19.375
    10. '(index' → logprob: -19.5

Token 427: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0029109083116054535
    2. 'index' → logprob: -5.87791109085083
    3. '[index' → logprob: -10.752910614013672
    4. '(index' → logprob: -10.752910614013672
    5. '*' → logprob: -11.002910614013672
    6. ' <<' → logprob: -11.627910614013672
    7. ',index' → logprob: -11.752910614013672
    8. '1' → logprob: -12.127910614013672
    9. '```' → logprob: -12.127910614013672
    10. '   ' → logprob: -12.627910614013672

Token 428: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -17.75
    4. '```' → logprob: -18.0
    5. '2' → logprob: -19.0
    6. '１' → logprob: -19.125
    7. '' → logprob: -19.875
    8. '0' → logprob: -19.875
    9. '' → logprob: -20.0
    10. ' ' → logprob: -21.0

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -17.5
    3. ' ' → logprob: -17.75
    4. '```' → logprob: -18.625
    5. '１' → logprob: -19.125
    6. '   ' → logprob: -19.125
    7. '0' → logprob: -19.5
    8. '' → logprob: -20.6875
    9. '``' → logprob: -20.875
    10. '' → logprob: -21.0625

Token 430: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004832969047129154
    2. ' ,' → logprob: -5.629832744598389
    3. ',index' → logprob: -7.379832744598389
    4. '],' → logprob: -7.504832744598389
    5. '   ' → logprob: -10.629833221435547
    6. ',self' → logprob: -11.129833221435547
    7. 'index' → logprob: -12.254833221435547
    8. ' ' → logprob: -13.129833221435547
    9. '    ' → logprob: -13.504833221435547
    10. '```' → logprob: -13.629833221435547

Token 431: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007865179213695228
    2. '(self' → logprob: -7.250786304473877
    3. ' self' → logprob: -9.500786781311035
    4. 'index' → logprob: -13.750786781311035
    5. '(' → logprob: -16.12578582763672
    6. '	self' → logprob: -16.25078582763672
    7. '                   ' → logprob: -16.50078582763672
    8. '[self' → logprob: -16.62578582763672
    9. '(index' → logprob: -16.62578582763672
    10. ' (' → logprob: -17.00078582763672

Token 432: '.seg' (ID: 178516)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.5355304479598999
    2. '(index' → logprob: -1.0355304479599
    3. '[index' → logprob: -2.9105305671691895
    4. 'seg' → logprob: -6.2855305671691895
    5. '.index' → logprob: -6.4105305671691895
    6. ':index' → logprob: -7.4105305671691895
    7. ',index' → logprob: -8.410530090332031
    8. '(seg' → logprob: -8.410530090332031
    9. ' (' → logprob: -9.035530090332031
    10. ' index' → logprob: -9.285530090332031

Token 433: '[(' (ID: 20542)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.09967432916164398
    2. 'index' → logprob: -2.5996742248535156
    3. '[index' → logprob: -3.9746742248535156
    4. ' (' → logprob: -7.474674224853516
    5. '((' → logprob: -7.724674224853516
    6. '(' → logprob: -8.224674224853516
    7. '|' → logprob: -8.974674224853516
    8. '1' → logprob: -9.099674224853516
    9. ' index' → logprob: -9.099674224853516
    10. '[(' → logprob: -9.224674224853516

Token 434: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -7.505351095460355e-05
    2. '(index' → logprob: -9.750075340270996
    3. ' index' → logprob: -11.000075340270996
    4. '[index' → logprob: -17.87507438659668
    5. ' (' → logprob: -18.50007438659668
    6. '	index' → logprob: -19.50007438659668
    7. '(' → logprob: -19.87507438659668
    8. ',index' → logprob: -21.00007438659668
    9. '_index' → logprob: -21.37507438659668
    10. '   ' → logprob: -21.37507438659668

Token 435: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.1002274826169014
    2. ' <<' → logprob: -2.3502275943756104
    3. '1' → logprob: -11.350227355957031
    4. ' ' → logprob: -11.850227355957031
    5. '>>' → logprob: -13.725227355957031
    6. ' >>' → logprob: -15.475227355957031
    7. '   ' → logprob: -15.850227355957031
    8. '|' → logprob: -16.35022735595703
    9. '  ' → logprob: -16.72522735595703
    10. 'index' → logprob: -16.85022735595703

Token 436: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '0' → logprob: -14.750008583068848
    4. '   ' → logprob: -17.62500762939453
    5. 'index' → logprob: -18.75000762939453
    6. ' ' → logprob: -19.50000762939453
    7. '```' → logprob: -19.75000762939453
    8. '     ' → logprob: -20.00000762939453
    9. '[' → logprob: -20.25000762939453
    10. '  ' → logprob: -20.37500762939453

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.625
    3. ' ' → logprob: -18.0
    4. '
' → logprob: -19.375
    5. '```' → logprob: -20.625
    6. '   ' → logprob: -22.25
    7. ' ' → logprob: -22.75
    8. '``' → logprob: -22.75
    9. '１' → logprob: -23.125
    10. '4' → logprob: -23.375

Token 438: ')|' (ID: 47976)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16396743059158325
    2. ')|' → logprob: -1.9139673709869385
    3. '|' → logprob: -5.663967609405518
    4. ')|(' → logprob: -9.16396713256836
    5. ' )' → logprob: -9.78896713256836
    6. ' |' → logprob: -9.78896713256836
    7. ')+' → logprob: -10.53896713256836
    8. '   ' → logprob: -11.28896713256836
    9. '1' → logprob: -12.03896713256836
    10. ' ' → logprob: -14.03896713256836

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -18.375
    4. '0' → logprob: -19.125
    5. '１' → logprob: -21.125
    6. '```' → logprob: -21.125
    7. '     ' → logprob: -21.75
    8. '  ' → logprob: -21.875
    9. '7' → logprob: -22.25
    10. '           ' → logprob: -22.375

Token 440: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018252724781632423
    2. '])' → logprob: -4.018252849578857
    3. ' )' → logprob: -9.7682523727417
    4. ')]' → logprob: -10.6432523727417
    5. ')])' → logprob: -11.7682523727417
    6. '))' → logprob: -11.8932523727417
    7. ']' → logprob: -12.8932523727417
    8. ')
' → logprob: -13.3932523727417
    9. ' ])' → logprob: -13.7682523727417
    10. '})' → logprob: -14.1432523727417

Token 441: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5647241473197937
    2. '<|end|>' → logprob: -1.4397242069244385
    3. ' ' → logprob: -2.1897242069244385
    4. ':' → logprob: -3.0647242069244385
    5. '        ' → logprob: -4.064723968505859
    6. '	' → logprob: -5.939723968505859
    7. ' ' → logprob: -6.189723968505859
    8. ')' → logprob: -6.439723968505859
    9. '    ' → logprob: -6.814723968505859
    10. '[' → logprob: -6.814723968505859

Token 442: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5982791781425476
    2. '<|end|>' → logprob: -1.2232792377471924
    3. '       ' → logprob: -2.5982792377471924
    4. ' ' → logprob: -2.9732792377471924
    5. ')' → logprob: -4.598278999328613
    6. '0' → logprob: -5.848278999328613
    7. '_' → logprob: -5.848278999328613
    8. '[' → logprob: -5.973278999328613
    9. '#' → logprob: -6.473278999328613
    10. '```' → logprob: -6.723278999328613

Token 443: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.006584516726434231
    2. ' query' → logprob: -6.006584644317627
    3. '_query' → logprob: -6.131584644317627
    4. 'get' → logprob: -6.881584644317627
    5. 'build' → logprob: -7.631584644317627
    6. '__' → logprob: -8.756584167480469
    7. 'prod' → logprob: -8.881584167480469
    8. 'prop' → logprob: -9.631584167480469
    9. '_prod' → logprob: -11.881584167480469
    10. 'all' → logprob: -12.131584167480469

Token 444: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0802738870552275e-05
    2. '   ' → logprob: -12.37501049041748
    3. '(' → logprob: -12.50001049041748
    4. 'def' → logprob: -13.62501049041748
    5. 'self' → logprob: -13.75001049041748
    6. ' (' → logprob: -16.250011444091797
    7. '(s' → logprob: -16.875011444091797
    8. '(
' → logprob: -16.875011444091797
    9. '0' → logprob: -17.250011444091797
    10. '(Self' → logprob: -17.375011444091797

Token 445: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030428793281316757
    2. ',' → logprob: -3.530428886413574
    3. ')(' → logprob: -8.530428886413574
    4. 'self' → logprob: -9.030428886413574
    5. ',self' → logprob: -9.030428886413574
    6. ')' → logprob: -9.030428886413574
    7. '(' → logprob: -9.780428886413574
    8. 'def' → logprob: -10.155428886413574
    9. '   ' → logprob: -12.405428886413574
    10. ' (' → logprob: -12.905428886413574

Token 446: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0059920744970440865
    2. 'self' → logprob: -5.2559919357299805
    3. 'left' → logprob: -7.2559919357299805
    4. ' l' → logprob: -10.00599193572998
    5. 'a' → logprob: -12.88099193572998
    6. ' self' → logprob: -13.63099193572998
    7. ' left' → logprob: -14.00599193572998
    8. 'L' → logprob: -14.13099193572998
    9. 'lx' → logprob: -14.50599193572998
    10. 'ql' → logprob: -15.50599193572998

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.016616291366518e-05
    2. ',r' → logprob: -10.000070571899414
    3. ' ,' → logprob: -10.625070571899414
    4. 'r' → logprob: -14.750070571899414
    5. '_,' → logprob: -17.750070571899414
    6. ',int' → logprob: -17.875070571899414
    7. ' r' → logprob: -18.000070571899414
    8. ',right' → logprob: -18.375070571899414
    9. ',
' → logprob: -18.875070571899414
    10. '   ' → logprob: -19.375070571899414

Token 448: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0024756586644798517
    2. ' r' → logprob: -6.002475738525391
    3. '	r' → logprob: -18.50247573852539
    4. '   ' → logprob: -20.87747573852539
    5. ',r' → logprob: -23.25247573852539
    6. '
' → logprob: -23.50247573852539
    7. ' ' → logprob: -23.75247573852539
    8. ' ' → logprob: -24.37747573852539
    9. '_r' → logprob: -24.75247573852539
    10. ' 
' → logprob: -24.87747573852539

Token 449: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002394170151092112
    2. '):
' → logprob: -8.875239372253418
    3. ',' → logprob: -9.750239372253418
    4. ')' → logprob: -10.750239372253418
    5. ' ):' → logprob: -11.000239372253418
    6. '   ' → logprob: -13.625239372253418
    7. '):
' → logprob: -14.000239372253418
    8. ':' → logprob: -14.375239372253418
    9. '=None' → logprob: -16.000240325927734
    10. ')：' → logprob: -16.625240325927734

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02148602344095707
    2. ' l' → logprob: -4.146485805511475
    3. ':' → logprob: -6.271485805511475
    4. 'l' → logprob: -6.896485805511475
    5. ',' → logprob: -7.146485805511475
    6. '	' → logprob: -7.271485805511475
    7. 'r' → logprob: -8.771486282348633
    8. '   ' → logprob: -8.896486282348633
    9. '	l' → logprob: -8.896486282348633
    10. '    ' → logprob: -9.396486282348633

Token 451: ' L' (ID: 451)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.12775768339633942
    2. 'l' → logprob: -2.8777577877044678
    3. ' res' → logprob: -2.8777577877044678
    4. 's' → logprob: -5.002757549285889
    5. '       ' → logprob: -8.377758026123047
    6. 'result' → logprob: -9.002758026123047
    7. ' l' → logprob: -9.002758026123047
    8. 'ret' → logprob: -9.752758026123047
    9. '	res' → logprob: -9.877758026123047
    10. '   ' → logprob: -10.377758026123047

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.225917249917984
    2. ' =' → logprob: -1.9759172201156616
    3. '=' → logprob: -2.850917339324951
    4. ' ,' → logprob: -5.225917339324951
    5. ',r' → logprob: -8.725916862487793
    6. ',l' → logprob: -9.100916862487793
    7. '   ' → logprob: -9.350916862487793
    8. '=l' → logprob: -10.475916862487793
    9. '=r' → logprob: -11.975916862487793
    10. '=int' → logprob: -11.975916862487793

Token 453: ' R' (ID: 460)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3139832019805908
    2. 'R' → logprob: -1.3139832019805908
    3. ' r' → logprob: -7.813982963562012
    4. ' R' → logprob: -8.063982963562012
    5. '   ' → logprob: -13.563982963562012
    6. 'res' → logprob: -14.938982963562012
    7. '=' → logprob: -15.563982963562012
    8. ' ' → logprob: -15.813982963562012
    9. ' =' → logprob: -15.813982963562012
    10. '
' → logprob: -16.063983917236328

Token 454: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20147649943828583
    2. ' =' → logprob: -1.7014764547348022
    3. '=l' → logprob: -9.701476097106934
    4. ',' → logprob: -13.701476097106934
    5. '=self' → logprob: -15.576476097106934
    6. '=int' → logprob: -15.951476097106934
    7. '=L' → logprob: -15.951476097106934
    8. '   ' → logprob: -16.07647705078125
    9. '=index' → logprob: -16.07647705078125
    10. '=i' → logprob: -16.82647705078125

Token 455: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.031525492668151855
    2. 's' → logprob: -3.5315256118774414
    3. 'L' → logprob: -6.531525611877441
    4. 'l' → logprob: -9.031525611877441
    5. 'ans' → logprob: -9.156525611877441
    6. 'ret' → logprob: -10.156525611877441
    7. 'S' → logprob: -10.906525611877441
    8. ' res' → logprob: -11.031525611877441
    9. 'resp' → logprob: -12.031525611877441
    10. 'sm' → logprob: -13.156525611877441

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587825149297714
    2. ' =' → logprob: -3.0485877990722656
    3. '=l' → logprob: -15.923587799072266
    4. '=int' → logprob: -16.048587799072266
    5. '=self' → logprob: -16.673587799072266
    6. '＝' → logprob: -17.298587799072266
    7. '=sys' → logprob: -17.298587799072266
    8. ',' → logprob: -17.798587799072266
    9. ' ' → logprob: -18.548587799072266
    10. '=L' → logprob: -18.548587799072266

Token 457: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.688212614681106e-05
    2. ' l' → logprob: -11.000017166137695
    3. 'self' → logprob: -16.500017166137695
    4. '	l' → logprob: -17.000017166137695
    5. '(l' → logprob: -17.000017166137695
    6. '   ' → logprob: -18.375017166137695
    7. '_l' → logprob: -20.500017166137695
    8. '
' → logprob: -21.000017166137695
    9. ' ' → logprob: -21.125017166137695
    10. 'L' → logprob: -21.375017166137695

Token 458: ' +' (ID: 659)
  Prédit: '+r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.6730369329452515
    2. '+' → logprob: -1.1730369329452515
    3. ' +' → logprob: -2.173037052154541
    4. ',' → logprob: -2.798037052154541
    5. ',r' → logprob: -5.548037052154541
    6. 'r' → logprob: -7.798037052154541
    7. '+l' → logprob: -8.298036575317383
    8. '+,' → logprob: -8.298036575317383
    9. '+self' → logprob: -8.673036575317383
    10. '+(' → logprob: -9.048036575317383

Token 459: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.5954712075181305e-05
    2. ' self' → logprob: -10.250036239624023
    3. '(self' → logprob: -14.875036239624023
    4. '[self' → logprob: -17.125036239624023
    5. '
' → logprob: -17.625036239624023
    6. '	self' → logprob: -17.750036239624023
    7. '   ' → logprob: -18.250036239624023
    8. '=self' → logprob: -19.250036239624023
    9. '       ' → logprob: -19.750036239624023
    10. '<|end|>' → logprob: -20.125036239624023

Token 460: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.10023082792758942
    2. 'N' → logprob: -2.3502309322357178
    3. 'self' → logprob: -10.975231170654297
    4. '	N' → logprob: -12.475231170654297
    5. '   ' → logprob: -13.350231170654297
    6. ' N' → logprob: -14.475231170654297
    7. '.' → logprob: -15.725231170654297
    8. ',N' → logprob: -15.725231170654297
    9. '<N' → logprob: -15.725231170654297
    10. '       ' → logprob: -16.475231170654297

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02348235622048378
    2. ' ,' → logprob: -4.398482322692871
    3. ',r' → logprob: -4.523482322692871
    4. ',R' → logprob: -10.523482322692871
    5. ',res' → logprob: -10.773482322692871
    6. ',
' → logprob: -11.898482322692871
    7. 'r' → logprob: -13.023482322692871
    8. ',y' → logprob: -13.523482322692871
    9. ' r' → logprob: -14.523482322692871
    10. ',n' → logprob: -14.773482322692871

Token 462: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00010902655776590109
    2. ' r' → logprob: -9.12510871887207
    3. '   ' → logprob: -17.62510871887207
    4. '	r' → logprob: -18.00010871887207
    5. ' ' → logprob: -20.62510871887207
    6. '_r' → logprob: -21.37510871887207
    7. '­r' → logprob: -21.37510871887207
    8. '  ' → logprob: -21.62510871887207
    9. '(r' → logprob: -21.75010871887207
    10. '    ' → logprob: -21.75010871887207

Token 463: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061972394585609436
    2. ' +' → logprob: -2.8119723796844482
    3. '+r' → logprob: -12.561972618103027
    4. '+self' → logprob: -13.686972618103027
    5. '+
' → logprob: -17.31197166442871
    6. '＋' → logprob: -18.06197166442871
    7. '+n' → logprob: -18.31197166442871
    8. ' ' → logprob: -18.43697166442871
    9. '+xml' → logprob: -18.43697166442871
    10. '   ' → logprob: -18.68697166442871

Token 464: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009178404696285725
    2. ' self' → logprob: -5.134178638458252
    3. '1' → logprob: -5.759178638458252
    4. 'r' → logprob: -9.384178161621094
    5. ' ' → logprob: -13.009178161621094
    6. '(self' → logprob: -13.634178161621094
    7. '	self' → logprob: -14.009178161621094
    8. '   ' → logprob: -14.509178161621094
    9. '[self' → logprob: -14.634178161621094
    10. '+' → logprob: -15.009178161621094

Token 465: '.N' (ID: 4439)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3711246848106384
    2. '.N' → logprob: -1.3711247444152832
    3. 'self' → logprob: -3.746124744415283
    4. '_N' → logprob: -3.871124744415283
    5. '1' → logprob: -4.621124744415283
    6. ' self' → logprob: -7.121124744415283
    7. ' N' → logprob: -7.371124744415283
    8. '	N' → logprob: -8.746124267578125
    9. ' ' → logprob: -9.371124267578125
    10. '   ' → logprob: -9.496124267578125

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026163244619965553
    2. ',res' → logprob: -6.7526164054870605
    3. '+' → logprob: -6.8776164054870605
    4. ' ,' → logprob: -8.252615928649902
    5. ',None' → logprob: -10.252615928649902
    6. 'res' → logprob: -10.502615928649902
    7. ' +' → logprob: -10.502615928649902
    8. '       ' → logprob: -10.877615928649902
    9. ',
' → logprob: -11.127615928649902
    10. '   ' → logprob: -11.127615928649902

Token 467: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000555416801944375
    2. ' self' → logprob: -7.500555515289307
    3. '   ' → logprob: -13.875555038452148
    4. '       ' → logprob: -14.000555038452148
    5. '    ' → logprob: -15.500555038452148
    6. '(self' → logprob: -16.12555503845215
    7. '     ' → logprob: -16.12555503845215
    8. ' ' → logprob: -16.37555503845215
    9. '[self' → logprob: -17.37555503845215
    10. '
' → logprob: -17.75055503845215

Token 468: '.unit' (ID: 51513)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3427877724170685
    2. 'unit' → logprob: -1.717787742614746
    3. '.unit' → logprob: -2.217787742614746
    4. '.self' → logprob: -7.467787742614746
    5. ' self' → logprob: -7.717787742614746
    6. '0' → logprob: -8.592787742614746
    7. '.' → logprob: -8.842787742614746
    8. ' ' → logprob: -8.967787742614746
    9. '   ' → logprob: -9.092787742614746
    10. ' unit' → logprob: -9.467787742614746

Token 469: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012826398946344852
    2. '<|end|>' → logprob: -4.762826442718506
    3. ' 
' → logprob: -6.262826442718506
    4. '  
' → logprob: -7.012826442718506
    5. '<|end|>' → logprob: -7.887826442718506
    6. ')' → logprob: -8.387825965881348
    7. '    
' → logprob: -8.637825965881348
    8. '       ' → logprob: -8.887825965881348
    9. ' ' → logprob: -9.512825965881348
    10. 'while' → logprob: -9.762825965881348

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3374815583229065
    2. '
' → logprob: -1.7124814987182617
    3. '        
' → logprob: -3.5874814987182617
    4. 'while' → logprob: -3.8374814987182617
    5. ' while' → logprob: -3.9624814987182617
    6. ' 
' → logprob: -4.212481498718262
    7. '   ' → logprob: -4.837481498718262
    8. '    
' → logprob: -5.462481498718262
    9. '<|end|>' → logprob: -5.587481498718262
    10. '  
' → logprob: -5.712481498718262

Token 471: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0005190743831917644
    2. ' while' → logprob: -7.750519275665283
    3. '       ' → logprob: -9.500518798828125
    4. '
' → logprob: -11.375518798828125
    5. '   ' → logprob: -13.625518798828125
    6. '	while' → logprob: -14.375518798828125
    7. 'While' → logprob: -14.750518798828125
    8. '        
' → logprob: -17.875518798828125
    9. '```' → logprob: -18.375518798828125
    10. '           ' → logprob: -19.375518798828125

Token 472: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.002185472520068288
    2. ' L' → logprob: -6.127185344696045
    3. '(L' → logprob: -15.627185821533203
    4. '	L' → logprob: -16.877185821533203
    5. 'l' → logprob: -17.377185821533203
    6. ' ' → logprob: -17.502185821533203
    7. ' ' → logprob: -18.002185821533203
    8. '>L' → logprob: -18.252185821533203
    9. 'LTR' → logprob: -18.377185821533203
    10. '_L' → logprob: -19.002185821533203

Token 473: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.017074014991521835
    2. ' <' → logprob: -4.142074108123779
    3. '<=' → logprob: -7.142074108123779
    4. '<R' → logprob: -9.017073631286621
    5. '<L' → logprob: -10.017073631286621
    6. ' <=' → logprob: -10.892073631286621
    7. '<Q' → logprob: -11.642073631286621
    8. '<th' → logprob: -11.892073631286621
    9. '<n' → logprob: -12.017073631286621
    10. '<len' → logprob: -12.142073631286621

Token 474: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0017021986423060298
    2. ' R' → logprob: -6.376702308654785
    3. 'r' → logprob: -16.75170135498047
    4. ' ' → logprob: -17.12670135498047
    5. '	R' → logprob: -17.75170135498047
    6. '   ' → logprob: -17.75170135498047
    7. '=' → logprob: -19.75170135498047
    8. '```' → logprob: -19.75170135498047
    9. '
' → logprob: -19.81420135498047
    10. ')' → logprob: -19.93920135498047

Token 475: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4289983808994293
    2. ':' → logprob: -1.053998351097107
    3. '       ' → logprob: -9.303997993469238
    4. ' and' → logprob: -9.428997993469238
    5. '           ' → logprob: -9.803997993469238
    6. ':
' → logprob: -10.553997993469238
    7. ' :
' → logprob: -10.928997993469238
    8. '):
' → logprob: -11.678997993469238
    9. ' :' → logprob: -11.803997993469238
    10. ',' → logprob: -12.428997993469238

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005408661440014839
    2. ' if' → logprob: -5.755408763885498
    3. '```' → logprob: -6.630408763885498
    4. 'if' → logprob: -7.880408763885498
    5. '
' → logprob: -9.00540828704834
    6. '[' → logprob: -9.38040828704834
    7. ' ' → logprob: -9.63040828704834
    8. '   ' → logprob: -9.75540828704834
    9. ' 
' → logprob: -10.63040828704834
    10. '#' → logprob: -10.88040828704834

Token 477: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13559699058532715
    2. '           ' → logprob: -2.510596990585327
    3. ' if' → logprob: -3.260596990585327
    4. '               ' → logprob: -5.135597229003906
    5. '   ' → logprob: -7.635597229003906
    6. ' ' → logprob: -7.885597229003906
    7. '            ' → logprob: -8.885597229003906
    8. 'If' → logprob: -8.885597229003906
    9. '```' → logprob: -10.010597229003906
    10. '	if' → logprob: -10.760597229003906

Token 478: ' R' (ID: 460)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0009206312242895365
    2. ' L' → logprob: -7.00092077255249
    3. '(L' → logprob: -11.625920295715332
    4. ' (' → logprob: -16.12592124938965
    5. ' ' → logprob: -16.50092124938965
    6. '	L' → logprob: -17.37592124938965
    7. 'R' → logprob: -18.12592124938965
    8. '   ' → logprob: -18.25092124938965
    9. '(' → logprob: -18.50092124938965
    10. 'LS' → logprob: -19.37592124938965

Token 479: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.581239640712738
    2. '&' → logprob: -0.831239640712738
    3. '-' → logprob: -5.706239700317383
    4. '>' → logprob: -7.206239700317383
    5. ' ' → logprob: -7.581239700317383
    6. ' -' → logprob: -8.206239700317383
    7. ' >' → logprob: -8.831239700317383
    8. '   ' → logprob: -9.956239700317383
    9. ' not' → logprob: -10.331239700317383
    10. '>>' → logprob: -10.956239700317383

Token 480: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '-' → logprob: -15.875019073486328
    4. 'R' → logprob: -17.625019073486328
    5. 'r' → logprob: -18.125019073486328
    6. '#' → logprob: -19.125019073486328
    7. '
' → logprob: -19.125019073486328
    8. '   ' → logprob: -19.125019073486328
    9. '' → logprob: -19.250019073486328
    10. '```' → logprob: -19.250019073486328

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8219583075260743e-05
    2. 'R' → logprob: -10.250038146972656
    3. '-' → logprob: -13.125038146972656
    4. 'L' → logprob: -14.375038146972656
    5. ' ' → logprob: -15.625038146972656
    6. 'r' → logprob: -16.750038146972656
    7. ' R' → logprob: -17.750038146972656
    8. '#' → logprob: -18.625038146972656
    9. '' → logprob: -18.625038146972656
    10. ' -' → logprob: -18.750038146972656

Token 482: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007496473845094442
    2. ':
' → logprob: -5.007496356964111
    3. '==' → logprob: -8.00749683380127
    4. ' :' → logprob: -8.00749683380127
    5. ' ==' → logprob: -10.13249683380127
    6. '>' → logprob: -10.63249683380127
    7. ' ' → logprob: -11.63249683380127
    8. '-' → logprob: -11.88249683380127
    9. '=' → logprob: -12.38249683380127
    10. '   ' → logprob: -12.50749683380127

Token 483: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6882955431938171
    2. '               ' → logprob: -0.9382955431938171
    3. ' R' → logprob: -2.313295602798462
    4. '           ' → logprob: -5.438295364379883
    5. 'r' → logprob: -6.438295364379883
    6. '   ' → logprob: -7.188295364379883
    7. ' r' → logprob: -9.063295364379883
    8. ' ' → logprob: -9.063295364379883
    9. '             ' → logprob: -9.313295364379883
    10. '              ' → logprob: -9.313295364379883

Token 484: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03167714178562164
    2. ' -=' → logprob: -3.78167724609375
    3. '-' → logprob: -4.78167724609375
    4. '=' → logprob: -12.40667724609375
    5. '+=' → logprob: -12.53167724609375
    6. ' -' → logprob: -13.03167724609375
    7. ' ' → logprob: -13.78167724609375
    8. '   ' → logprob: -14.03167724609375
    9. '_' → logprob: -14.90667724609375
    10. '>' → logprob: -14.90667724609375

Token 485: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -19.25
    4. '-' → logprob: -20.375
    5. '<|end|>' → logprob: -20.5
    6. '
' → logprob: -20.5
    7. ')' → logprob: -21.5
    8. '>' → logprob: -22.0
    9. '   ' → logprob: -22.25
    10. '۱' → logprob: -22.875

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.0000057220459
    4. '```' → logprob: -19.1250057220459
    5. '
' → logprob: -20.2500057220459
    6. '-' → logprob: -20.2500057220459
    7. '``' → logprob: -21.5000057220459
    8. 'r' → logprob: -21.5000057220459
    9. '.' → logprob: -22.1250057220459
    10. ')' → logprob: -22.1875057220459

Token 487: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6795193552970886
    2. '               ' → logprob: -0.8045193552970886
    3. ',' → logprob: -3.8045194149017334
    4. ' if' → logprob: -5.429519176483154
    5. ':
' → logprob: -5.679519176483154
    6. ' :' → logprob: -5.804519176483154
    7. ':' → logprob: -6.179519176483154
    8. ';' → logprob: -6.554519176483154
    9. ' and' → logprob: -6.554519176483154
    10. '<|end|>' → logprob: -6.679519176483154

Token 488: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.023330731317400932
    2. ' res' → logprob: -3.7733306884765625
    3. '           ' → logprob: -10.023330688476562
    4. '	res' → logprob: -11.023330688476562
    5. '               ' → logprob: -11.648330688476562
    6. '   ' → logprob: -11.898330688476562
    7. 'if' → logprob: -11.898330688476562
    8. ' if' → logprob: -14.398330688476562
    9. ' ' → logprob: -14.648330688476562
    10. ' ' → logprob: -15.523330688476562

Token 489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007105246186256409
    2. ' =' → logprob: -7.250710487365723
    3. '=self' → logprob: -14.250710487365723
    4. 'self' → logprob: -18.87571144104004
    5. '＝' → logprob: -19.37571144104004
    6. '.=' → logprob: -19.50071144104004
    7. '=
' → logprob: -19.75071144104004
    8. '=}' → logprob: -20.62571144104004
    9. '=

' → logprob: -20.62571144104004
    10. ' ' → logprob: -21.00071144104004

Token 490: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015074820257723331
    2. ' self' → logprob: -6.50150728225708
    3. 'op' → logprob: -12.751507759094238
    4. '	self' → logprob: -13.876507759094238
    5. '(self' → logprob: -15.001507759094238
    6. '   ' → logprob: -15.501507759094238
    7. ' ' → logprob: -15.876507759094238
    8. '           ' → logprob: -16.126506805419922
    9. '`' → logprob: -16.126506805419922
    10. '[self' → logprob: -16.251506805419922

Token 491: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -1.5451681974809617e-05
    2. 'op' → logprob: -11.125015258789062
    3. '.' → logprob: -14.500015258789062
    4. '	op' → logprob: -16.500015258789062
    5. ' .' → logprob: -18.500015258789062
    6. ' op' → logprob: -18.750015258789062
    7. '(op' → logprob: -19.750015258789062
    8. '_op' → logprob: -19.875015258789062
    9. '
' → logprob: -20.250015258789062
    10. '/op' → logprob: -20.250015258789062

Token 492: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.1269727349281311
    2. '(self' → logprob: -2.1269726753234863
    3. 'res' → logprob: -10.501973152160645
    4. 'self' → logprob: -11.001973152160645
    5. '(' → logprob: -14.626973152160645
    6. '	res' → logprob: -17.626972198486328
    7. ',res' → logprob: -17.751972198486328
    8. '=res' → logprob: -17.876972198486328
    9. '(r' → logprob: -18.251972198486328
    10. ' self' → logprob: -18.376972198486328

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032358209136873484
    2. 'self' → logprob: -6.378235816955566
    3. ',self' → logprob: -6.628235816955566
    4. ' ,' → logprob: -8.503235816955566
    5. ' self' → logprob: -12.878235816955566
    6. '(self' → logprob: -13.378235816955566
    7. ',res' → logprob: -13.378235816955566
    8. ',
' → logprob: -13.878235816955566
    9. 'res' → logprob: -15.128235816955566
    10. ')' → logprob: -16.503236770629883

Token 494: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.6087021473795176e-05
    2. ' self' → logprob: -10.000045776367188
    3. '(self' → logprob: -14.500045776367188
    4. '   ' → logprob: -16.875045776367188
    5. '	self' → logprob: -17.375045776367188
    6. '[self' → logprob: -18.125045776367188
    7. '=self' → logprob: -18.625045776367188
    8. ' ' → logprob: -19.125045776367188
    9. ',self' → logprob: -19.750045776367188
    10. '  ' → logprob: -20.375045776367188

Token 495: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -0.00016098834748845547
    2. 'seg' → logprob: -8.750161170959473
    3. '(seg' → logprob: -14.250161170959473
    4. '.sem' → logprob: -14.375161170959473
    5. '.sig' → logprob: -15.125161170959473
    6. '.' → logprob: -15.250161170959473
    7. '.sel' → logprob: -15.375161170959473
    8. '.segment' → logprob: -15.875161170959473
    9. '.se' → logprob: -16.250160217285156
    10. '.op' → logprob: -16.625160217285156

Token 496: '[R' (ID: 115069)
  Prédit: '[R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -1.9385402993066236e-05
    2. 'R' → logprob: -11.000019073486328
    3. '[' → logprob: -13.250019073486328
    4. '[r' → logprob: -14.375019073486328
    5. ')[' → logprob: -16.250019073486328
    6. ')' → logprob: -17.125019073486328
    7. '   ' → logprob: -17.250019073486328
    8. '(R' → logprob: -17.750019073486328
    9. ',R' → logprob: -18.750019073486328
    10. ' R' → logprob: -18.750019073486328

Token 497: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029774438589811325
    2. ')
' → logprob: -3.5297744274139404
    3. ' )' → logprob: -11.52977466583252
    4. ')
' → logprob: -11.77977466583252
    5. ');' → logprob: -12.90477466583252
    6. ' )
' → logprob: -13.40477466583252
    7. ')

' → logprob: -14.40477466583252
    8. ')`' → logprob: -14.65477466583252
    9. ');
' → logprob: -15.02977466583252
    10. '           ' → logprob: -15.52977466583252

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3298598527908325
    2. '<|end|>' → logprob: -2.329859733581543
    3. ' ' → logprob: -2.454859733581543
    4. '       ' → logprob: -3.079859733581543
    5. '```' → logprob: -4.579859733581543
    6. '   ' → logprob: -4.704859733581543
    7. '[' → logprob: -5.329859733581543
    8. '<|end|>' → logprob: -5.329859733581543
    9. ' 
' → logprob: -5.954859733581543
    10. ';' → logprob: -6.079859733581543

Token 499: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3673783540725708
    2. '           ' → logprob: -1.2423783540725708
    3. ' if' → logprob: -3.9923782348632812
    4. ' ' → logprob: -8.867378234863281
    5. 'If' → logprob: -9.867378234863281
    6. '       ' → logprob: -9.867378234863281
    7. '   ' → logprob: -10.617378234863281
    8. '1' → logprob: -11.617378234863281
    9. '  ' → logprob: -12.367378234863281
    10. '```' → logprob: -12.742378234863281

Token 500: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00010962257510982454
    2. ' L' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.000109672546387
    4. '(L' → logprob: -15.625109672546387
    5. '	L' → logprob: -16.00010871887207
    6. 'l' → logprob: -17.62510871887207
    7. '[L' → logprob: -18.12510871887207
    8. ' ' → logprob: -18.75010871887207
    9. '
' → logprob: -19.25010871887207
    10. '>L' → logprob: -19.37510871887207

Token 501: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.4740803837776184
    2. ' &' → logprob: -0.9740803837776184
    3. '&amp' → logprob: -13.974080085754395
    4. '&
' → logprob: -13.974080085754395
    5. '1' → logprob: -15.224080085754395
    6. '&nbsp' → logprob: -15.224080085754395
    7. ' ' → logprob: -15.474080085754395
    8. ' &
' → logprob: -16.22408103942871
    9. '＆' → logprob: -16.34908103942871
    10. ')' → logprob: -16.59908103942871

Token 502: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -20.250003814697266
    4. '１' → logprob: -20.625003814697266
    5. '१' → logprob: -21.500003814697266
    6. '```' → logprob: -21.562503814697266
    7. '۱' → logprob: -21.687503814697266
    8. '১' → logprob: -21.812503814697266
    9. '           ' → logprob: -22.125003814697266
    10. '(' → logprob: -22.375003814697266

Token 503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -19.625001907348633
    4. '１' → logprob: -20.375001907348633
    5. '#' → logprob: -20.625001907348633
    6. '১' → logprob: -20.750001907348633
    7. 'True' → logprob: -21.000001907348633
    8. '१' → logprob: -21.062501907348633
    9. '   ' → logprob: -21.125001907348633
    10. '۱' → logprob: -21.187501907348633

Token 504: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050709739327430725
    2. ' :' → logprob: -3.0507097244262695
    3. ':
' → logprob: -7.4257097244262695
    4. '               ' → logprob: -7.5507097244262695
    5. ' +=' → logprob: -8.05070972442627
    6. ' ==' → logprob: -8.92570972442627
    7. ' :
' → logprob: -9.17570972442627
    8. '):' → logprob: -9.17570972442627
    9. '==' → logprob: -9.55070972442627
    10. '           ' → logprob: -9.55070972442627

Token 505: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.018288657069206238
    2. ' res' → logprob: -4.018288612365723
    3. '               ' → logprob: -9.768288612365723
    4. '           ' → logprob: -10.268288612365723
    5. '   ' → logprob: -10.393288612365723
    6. '
' → logprob: -11.893288612365723
    7. ' ' → logprob: -11.893288612365723
    8. '	res' → logprob: -13.393288612365723
    9. '                   ' → logprob: -15.268288612365723
    10. ',res' → logprob: -15.643288612365723

Token 506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. '=
' → logprob: -15.75192928314209
    4. ' ' → logprob: -16.251930236816406
    5. '=self' → logprob: -16.626930236816406
    6. ',' → logprob: -17.376930236816406
    7. '=

' → logprob: -18.001930236816406
    8. '.=' → logprob: -18.126930236816406
    9. '  ' → logprob: -18.376930236816406
    10. '_=' → logprob: -18.876930236816406

Token 507: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007183883571997285
    2. ' self' → logprob: -7.250718593597412
    3. '(self' → logprob: -12.125718116760254
    4. 'op' → logprob: -13.125718116760254
    5. '	self' → logprob: -14.625718116760254
    6. '[self' → logprob: -15.125718116760254
    7. '=self' → logprob: -16.75071907043457
    8. ' ' → logprob: -16.87571907043457
    9. '`' → logprob: -17.50071907043457
    10. 's' → logprob: -17.87571907043457

Token 508: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.0005537479883059859
    2. 'op' → logprob: -7.500553607940674
    3. '	op' → logprob: -14.625554084777832
    4. '.' → logprob: -15.500554084777832
    5. '(op' → logprob: -17.000553131103516
    6. ' op' → logprob: -17.125553131103516
    7. '_op' → logprob: -18.750553131103516
    8. 'self' → logprob: -18.875553131103516
    9. '
' → logprob: -19.750553131103516
    10. '.opt' → logprob: -20.500553131103516

Token 509: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.6240566083070007e-06
    2. 'res' → logprob: -13.500001907348633
    3. '(' → logprob: -16.500001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '=res' → logprob: -19.125001907348633
    6. ',res' → logprob: -19.500001907348633
    7. '	res' → logprob: -19.625001907348633
    8. '(self' → logprob: -19.750001907348633
    9. '(
' → logprob: -19.875001907348633
    10. ' (' → logprob: -19.875001907348633

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03900834545493126
    2. '(res' → logprob: -3.914008378982544
    3. 'res' → logprob: -4.539008140563965
    4. ',res' → logprob: -4.914008140563965
    5. '),' → logprob: -9.164008140563965
    6. ' res' → logprob: -9.914008140563965
    7. ')' → logprob: -10.039008140563965
    8. ' ,' → logprob: -10.164008140563965
    9. '   ' → logprob: -11.164008140563965
    10. ' ' → logprob: -12.539008140563965

Token 511: ' self' (ID: 1051)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1875571544806007e-05
    2. 'self' → logprob: -11.375011444091797
    3. ' res' → logprob: -15.125011444091797
    4. '(res' → logprob: -20.125011444091797
    5. '
' → logprob: -20.375011444091797
    6. '	res' → logprob: -20.375011444091797
    7. 'ress' → logprob: -20.625011444091797
    8. '$res' → logprob: -21.250011444091797
    9. 'resc' → logprob: -21.625011444091797
    10. 'resent' → logprob: -21.875011444091797

Token 512: '.seg' (ID: 178516)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.6478779315948486
    2. 'self' → logprob: -1.5228779315948486
    3. '.seg' → logprob: -1.5228779315948486
    4. 'L' → logprob: -3.2728779315948486
    5. ' L' → logprob: -7.1478776931762695
    6. '.L' → logprob: -7.5228776931762695
    7. ' self' → logprob: -8.14787769317627
    8. '[L' → logprob: -8.27287769317627
    9. ' seg' → logprob: -8.77287769317627
    10. 'sel' → logprob: -8.89787769317627

Token 513: '[L' (ID: 112100)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00014931005716789514
    2. '[L' → logprob: -9.750149726867676
    3. ' L' → logprob: -10.375149726867676
    4. ')' → logprob: -10.875149726867676
    5. ',' → logprob: -11.125149726867676
    6. '),' → logprob: -11.875149726867676
    7. '[' → logprob: -12.250149726867676
    8. '(L' → logprob: -12.375149726867676
    9. ',L' → logprob: -13.375149726867676
    10. '```' → logprob: -13.625149726867676

Token 514: ']);' (ID: 34389)
  Prédit: ');'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ');' → logprob: -0.07109834253787994
    2. ')
' → logprob: -3.0710983276367188
    3. ')' → logprob: -3.8210983276367188
    4. ' );' → logprob: -8.946098327636719
    5. '),' → logprob: -9.571098327636719
    6. ')
' → logprob: -9.571098327636719
    7. '+' → logprob: -10.196098327636719
    8. ');
' → logprob: -11.071098327636719
    9. '           ' → logprob: -11.196098327636719
    10. ')+' → logprob: -12.196098327636719

Token 515: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.07900578528642654
    2. 'L' → logprob: -2.579005718231201
    3. '           ' → logprob: -9.70400619506836
    4. '               ' → logprob: -10.45400619506836
    5. '            ' → logprob: -11.07900619506836
    6. '	L' → logprob: -12.57900619506836
    7. ' ' → logprob: -12.82900619506836
    8. '   ' → logprob: -13.45400619506836
    9. '    ' → logprob: -13.70400619506836
    10. '++' → logprob: -15.32900619506836

Token 516: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009115827269852161
    2. ' +=' → logprob: -7.000911712646484
    3. ']+=' → logprob: -16.750911712646484
    4. '=' → logprob: -18.375911712646484
    5. '+' → logprob: -20.375911712646484
    6. '+=(' → logprob: -20.875911712646484
    7. '|' → logprob: -21.375911712646484
    8. '```' → logprob: -22.500911712646484
    9. '+="' → logprob: -22.875911712646484
    10. '+='' → logprob: -23.000911712646484

Token 517: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -21.875001907348633
    4. '   ' → logprob: -22.375001907348633
    5. '  ' → logprob: -23.750001907348633
    6. '１' → logprob: -23.875001907348633
    7. '۱' → logprob: -24.625001907348633
    8. '0' → logprob: -25.125001907348633
    9. '2' → logprob: -26.000001907348633
    10. '<|end|>' → logprob: -26.125001907348633

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -22.25
    5. '<|end|>' → logprob: -22.25
    6. '۱' → logprob: -22.625
    7. '１' → logprob: -22.625
    8. '  ' → logprob: -23.75
    9. '
' → logprob: -24.25
    10. '2' → logprob: -24.625

Token 519: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01478259265422821
    2. '       ' → logprob: -4.639782428741455
    3. ' L' → logprob: -5.764782428741455
    4. ' return' → logprob: -8.139782905578613
    5. 'return' → logprob: -8.264782905578613
    6. ';' → logprob: -8.389782905578613
    7. '   ' → logprob: -8.389782905578613
    8. '<|end|>' → logprob: -9.139782905578613
    9. ' ' → logprob: -9.264782905578613
    10. ',' → logprob: -9.264782905578613

Token 520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1674431711435318
    2. '       ' → logprob: -1.9174431562423706
    3. ' return' → logprob: -6.04244327545166
    4. '```' → logprob: -6.54244327545166
    5. ' L' → logprob: -6.66744327545166
    6. '   ' → logprob: -7.16744327545166
    7. 'return' → logprob: -7.54244327545166
    8. ' ' → logprob: -8.04244327545166
    9. 'L' → logprob: -9.41744327545166
    10. '          ' → logprob: -9.66744327545166

Token 521: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.0004309076175559312
    2. ' L' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.750431060791016
    4. '       ' → logprob: -16.875431060791016
    5. '           ' → logprob: -17.250431060791016
    6. '    ' → logprob: -17.625431060791016
    7. ' ' → logprob: -18.500431060791016
    8. '```' → logprob: -18.875431060791016
    9. '  ' → logprob: -20.250431060791016
    10. '	L' → logprob: -20.500431060791016

Token 522: ' >>=' (ID: 81952)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03716558963060379
    2. ' +=' → logprob: -3.412165641784668
    3. ' <<=' → logprob: -6.037165641784668
    4. ',' → logprob: -8.037165641784668
    5. '<<' → logprob: -8.287165641784668
    6. '=' → logprob: -8.537165641784668
    7. ' >>=' → logprob: -8.537165641784668
    8. '>>' → logprob: -8.912165641784668
    9. '|' → logprob: -12.037165641784668
    10. ' ,' → logprob: -12.787165641784668

Token 523: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -16.875009536743164
    4. '```' → logprob: -20.875009536743164
    5. '<|end|>' → logprob: -21.000009536743164
    6. '１' → logprob: -21.875009536743164
    7. '
' → logprob: -22.000009536743164
    8. '   ' → logprob: -23.000009536743164
    9. '१' → logprob: -23.000009536743164
    10. '01' → logprob: -23.062509536743164

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '0' → logprob: -21.625
    4. '１' → logprob: -22.75
    5. '```' → logprob: -22.75
    6. '   ' → logprob: -23.375
    7. '<|end|>' → logprob: -23.625
    8. '۱' → logprob: -23.875
    9. '१' → logprob: -24.375
    10. '01' → logprob: -24.375

Token 525: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010221583768725395
    2. 'R' → logprob: -5.510221481323242
    3. ';' → logprob: -6.010221481323242
    4. ' R' → logprob: -6.260221481323242
    5. '
' → logprob: -7.385221481323242
    6. ',R' → logprob: -7.510221481323242
    7. ',' → logprob: -7.760221481323242
    8. '       ' → logprob: -9.885221481323242
    9. '   ' → logprob: -10.135221481323242
    10. 'r' → logprob: -11.510221481323242

Token 526: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.676292231422849e-05
    2. ' R' → logprob: -11.000017166137695
    3. '   ' → logprob: -21.750017166137695
    4. ' ' → logprob: -21.875017166137695
    5. 'r' → logprob: -23.875017166137695
    6. '    ' → logprob: -24.625017166137695
    7. ' ' → logprob: -24.625017166137695
    8. '```' → logprob: -24.875017166137695
    9. 'RSpec' → logprob: -25.125017166137695
    10. '       ' → logprob: -25.125017166137695

Token 527: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -9.627176768844947e-05
    2. ' >>=' → logprob: -9.250096321105957
    3. '<<' → logprob: -18.12509536743164
    4. '>>&' → logprob: -18.25009536743164
    5. '>>>' → logprob: -18.75009536743164
    6. '//=' → logprob: -18.75009536743164
    7. '≫' → logprob: -19.12509536743164
    8. ')>>' → logprob: -19.50009536743164
    9. '>>,' → logprob: -19.50009536743164
    10. '=' → logprob: -20.25009536743164

Token 528: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.000001907348633
    4. '0' → logprob: -20.000001907348633
    5. '```' → logprob: -20.250001907348633
    6. '１' → logprob: -21.750001907348633
    7. '۱' → logprob: -22.375001907348633
    8. '2' → logprob: -22.625001907348633
    9. ' ' → logprob: -22.625001907348633
    10. '	' → logprob: -22.750001907348633

Token 529: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -20.125
    4. '0' → logprob: -21.25
    5. '   ' → logprob: -21.5
    6. '<|end|>' → logprob: -22.0
    7. '2' → logprob: -22.375
    8. '１' → logprob: -22.375
    9. '۱' → logprob: -22.5
    10. '१' → logprob: -23.0

Token 530: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0043091727420687675
    2. 'return' → logprob: -5.504309177398682
    3. ' return' → logprob: -8.504308700561523
    4. '<|end|>' → logprob: -11.004308700561523
    5. '	return' → logprob: -12.879308700561523
    6. '	' → logprob: -13.129308700561523
    7. '   ' → logprob: -13.629308700561523
    8. ',' → logprob: -14.379308700561523
    9. ':return' → logprob: -14.504308700561523
    10. '
' → logprob: -14.629308700561523

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002861939137801528
    2. 'return' → logprob: -5.877861976623535
    3. ' return' → logprob: -10.627861976623535
    4. '	' → logprob: -11.627861976623535
    5. '<|end|>' → logprob: -11.877861976623535
    6. '	return' → logprob: -12.252861976623535
    7. '```' → logprob: -12.252861976623535
    8. '   ' → logprob: -13.377861976623535
    9. ':return' → logprob: -13.627861976623535
    10. '@return' → logprob: -14.127861976623535

Token 532: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20847295224666595
    2. '       ' → logprob: -1.7084729671478271
    3. ' return' → logprob: -4.958472728729248
    4. '	return' → logprob: -11.833473205566406
    5. '{return' → logprob: -13.833473205566406
    6. '   ' → logprob: -13.958473205566406
    7. ':return' → logprob: -14.083473205566406
    8. '	' → logprob: -15.583473205566406
    9. '      ' → logprob: -15.583473205566406
    10. '           ' → logprob: -15.708473205566406

Token 533: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -4.5491004129871726e-05
    2. ' res' → logprob: -10.000045776367188
    3. '	res' → logprob: -21.875045776367188
    4. '(res' → logprob: -22.375045776367188
    5. '$res' → logprob: -24.125045776367188
    6. 'r' → logprob: -24.500045776367188
    7. 'result' → logprob: -24.750045776367188
    8. 'rest' → logprob: -24.875045776367188
    9. '_res' → logprob: -25.000045776367188
    10. '
' → logprob: -25.125045776367188

Token 534: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 536: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 537: ' get' (ID: 717)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2758614420890808
    2. 'get' → logprob: -1.7758615016937256
    3. 'build' → logprob: -3.0258615016937256
    4. ' __' → logprob: -4.2758612632751465
    5. 'all' → logprob: -5.7758612632751465
    6. 'find' → logprob: -5.9008612632751465
    7. 'max' → logprob: -6.9008612632751465
    8. 're' → logprob: -7.4008612632751465
    9. ' get' → logprob: -7.5258612632751465
    10. ' build' → logprob: -7.9008612632751465

Token 538: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011716912500560284
    2. 'all' → logprob: -4.886716842651367
    3. 'size' → logprob: -6.761716842651367
    4. 'self' → logprob: -7.386716842651367
    5. '_all' → logprob: -7.636716842651367
    6. 'val' → logprob: -7.761716842651367
    7. '_size' → logprob: -8.136716842651367
    8. 'list' → logprob: -8.636716842651367
    9. 'root' → logprob: -9.136716842651367
    10. '_root' → logprob: -9.136716842651367

Token 539: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6487386226654053
    2. ',' → logprob: -1.6487386226654053
    3. ' self' → logprob: -2.2737386226654053
    4. 'size' → logprob: -2.5237386226654053
    5. 'val' → logprob: -3.8987386226654053
    6. '(self' → logprob: -4.023738861083984
    7. ' size' → logprob: -4.148738861083984
    8. 'all' → logprob: -5.148738861083984
    9. '_size' → logprob: -5.273738861083984
    10. 'root' → logprob: -5.273738861083984

Token 540: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7576308250427246
    2. 'self' → logprob: -0.7576308250427246
    3. ' self' → logprob: -3.1326308250427246
    4. ' i' → logprob: -4.007630825042725
    5. '   ' → logprob: -8.132631301879883
    6. 'index' → logprob: -8.382631301879883
    7. ' ' → logprob: -9.507631301879883
    8. 'idx' → logprob: -10.507631301879883
    9. ' index' → logprob: -11.257631301879883
    10. '       ' → logprob: -11.507631301879883

Token 541: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.034380245953798294
    2. '):
' → logprob: -3.9093801975250244
    3. 'self' → logprob: -4.4093804359436035
    4. '(self' → logprob: -6.6593804359436035
    5. '   ' → logprob: -9.159379959106445
    6. ')' → logprob: -9.409379959106445
    7. ',' → logprob: -10.159379959106445
    8. '       ' → logprob: -11.034379959106445
    9. '):
' → logprob: -11.034379959106445
    10. ' self' → logprob: -11.659379959106445

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44836732745170593
    2. ' return' → logprob: -1.1983673572540283
    3. 'return' → logprob: -2.8233673572540283
    4. '	return' → logprob: -8.69836711883545
    5. '	' → logprob: -10.57336711883545
    6. '   ' → logprob: -11.44836711883545
    7. 'index' → logprob: -11.44836711883545
    8. ' index' → logprob: -12.07336711883545
    9. ':return' → logprob: -12.07336711883545
    10. '    ' → logprob: -12.82336711883545

Token 543: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005236360710114241
    2. ' return' → logprob: -5.2552361488342285
    3. '       ' → logprob: -13.005236625671387
    4. '   ' → logprob: -15.380236625671387
    5. '	return' → logprob: -15.630236625671387
    6. '```' → logprob: -18.38023567199707
    7. 'self' → logprob: -18.88023567199707
    8. '{return' → logprob: -19.63023567199707
    9. ':return' → logprob: -19.88023567199707
    10. '    ' → logprob: -20.25523567199707

Token 544: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024758970830589533
    2. ' self' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.12747573852539
    4. '       ' → logprob: -16.87747573852539
    5. '(self' → logprob: -17.75247573852539
    6. '	self' → logprob: -18.00247573852539
    7. '[self' → logprob: -18.25247573852539
    8. '=self' → logprob: -19.12747573852539
    9. ' ' → logprob: -20.75247573852539
    10. '```' → logprob: -20.87747573852539

Token 545: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -5.200166469876422e-06
    2. '.sz' → logprob: -13.250004768371582
    3. 'seg' → logprob: -14.000004768371582
    4. '.' → logprob: -14.125004768371582
    5. '.sem' → logprob: -14.500004768371582
    6. '.sig' → logprob: -15.500004768371582
    7. '.sep' → logprob: -15.625004768371582
    8. '.sel' → logprob: -15.625004768371582
    9. '.se' → logprob: -15.750004768371582
    10. '.sg' → logprob: -15.750004768371582

Token 546: '[i' (ID: 1768)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.006844072602689266
    2. 'self' → logprob: -5.5068440437316895
    3. '[i' → logprob: -6.0068440437316895
    4. 'i' → logprob: -8.131844520568848
    5. '   ' → logprob: -13.006844520568848
    6. '[' → logprob: -13.631844520568848
    7. '(self' → logprob: -13.756844520568848
    8. '```' → logprob: -14.881844520568848
    9. ' self' → logprob: -15.381844520568848
    10. '=self' → logprob: -15.631844520568848

Token 547: '+self' (ID: 195959)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1431449055671692
    2. '+self' → logprob: -2.5181448459625244
    3. ' +' → logprob: -3.5181448459625244
    4. '+i' → logprob: -3.7681448459625244
    5. '+
' → logprob: -12.393144607543945
    6. '   ' → logprob: -12.893144607543945
    7. '+[' → logprob: -13.768144607543945
    8. '+n' → logprob: -14.143144607543945
    9. '+(' → logprob: -14.268144607543945
    10. '+p' → logprob: -14.393144607543945

Token 548: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.0009153862483799458
    2. 'N' → logprob: -7.00091552734375
    3. '	N' → logprob: -13.75091552734375
    4. 'self' → logprob: -14.00091552734375
    5. '.S' → logprob: -15.37591552734375
    6. '   ' → logprob: -15.37591552734375
    7. 'def' → logprob: -15.50091552734375
    8. '<N' → logprob: -15.62591552734375
    9. '_N' → logprob: -15.62591552734375
    10. '.seg' → logprob: -15.75091552734375

Token 549: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.774276774493046e-05
    2. ' ]' → logprob: -10.250038146972656
    3. ']
' → logprob: -13.625038146972656
    4. '[i' → logprob: -14.625038146972656
    5. '<|end|>' → logprob: -15.500038146972656
    6. ')' → logprob: -15.875038146972656
    7. '()]' → logprob: -16.500038146972656
    8. '[' → logprob: -16.625038146972656
    9. '   ' → logprob: -16.875038146972656
    10. '`]' → logprob: -17.250038146972656

Token 550: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 551: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 552: ' all' (ID: 722)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4919176995754242
    2. 'all' → logprob: -1.1169177293777466
    3. 'size' → logprob: -3.616917610168457
    4. '_all' → logprob: -4.241917610168457
    5. 'build' → logprob: -5.366917610168457
    6. 'prod' → logprob: -5.616917610168457
    7. '_size' → logprob: -5.866917610168457
    8. 'max' → logprob: -5.991917610168457
    9. 'find' → logprob: -6.116917610168457
    10. 'copy' → logprob: -7.116917610168457

Token 553: '(self' (ID: 2402)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.4871584177017212
    2. '_query' → logprob: -1.4871584177017212
    3. 'sum' → logprob: -2.9871582984924316
    4. '_items' → logprob: -4.612158298492432
    5. '()' → logprob: -4.737158298492432
    6. '_reduce' → logprob: -4.737158298492432
    7. '_product' → logprob: -4.862158298492432
    8. '_nodes' → logprob: -5.487158298492432
    9. '_segments' → logprob: -5.487158298492432
    10. '_apply' → logprob: -5.737158298492432

Token 554: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23212632536888123
    2. '):
' → logprob: -1.6071263551712036
    3. ')' → logprob: -6.482126235961914
    4. 'def' → logprob: -6.732126235961914
    5. 'self' → logprob: -6.982126235961914
    6. 'size' → logprob: -7.232126235961914
    7. '):

' → logprob: -7.482126235961914
    8. '_size' → logprob: -8.482126235961914
    9. '():' → logprob: -9.232126235961914
    10. '   ' → logprob: -9.232126235961914

Token 555: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3541560471057892
    2. 'return' → logprob: -1.3541560173034668
    3. '       ' → logprob: -3.229156017303467
    4. '	return' → logprob: -8.354156494140625
    5. '   ' → logprob: -8.479156494140625
    6. ':return' → logprob: -11.354156494140625
    7. '        
' → logprob: -11.854156494140625
    8. '{return' → logprob: -12.229156494140625
    9. '    ' → logprob: -12.479156494140625
    10. ' ' → logprob: -13.479156494140625

Token 556: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.547789674485102e-05
    2. ' self' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.250036239624023
    4. '  ' → logprob: -19.375036239624023
    5. '(self' → logprob: -19.375036239624023
    6. '[self' → logprob: -19.875036239624023
    7. ' ' → logprob: -20.250036239624023
    8. ' ' → logprob: -20.375036239624023
    9. '0' → logprob: -20.875036239624023
    10. '
' → logprob: -21.125036239624023

Token 557: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -1.27099974633893e-05
    2. '.query' → logprob: -11.750012397766113
    3. 'seg' → logprob: -13.125012397766113
    4. '.segment' → logprob: -13.875012397766113
    5. '.sel' → logprob: -14.500012397766113
    6. '.op' → logprob: -15.000012397766113
    7. '.' → logprob: -15.750012397766113
    8. '.se' → logprob: -15.875012397766113
    9. ' .' → logprob: -16.00001335144043
    10. '.sem' → logprob: -16.12501335144043

Token 558: '[' (ID: 58)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.6826289892196655
    2. '1' → logprob: -1.1826289892196655
    3. '[' → logprob: -1.6826289892196655
    4. 'self' → logprob: -6.057629108428955
    5. '   ' → logprob: -12.557628631591797
    6. '(self' → logprob: -12.932628631591797
    7. '[-' → logprob: -12.932628631591797
    8. ' ' → logprob: -13.057628631591797
    9. ' self' → logprob: -13.557628631591797
    10. '```' → logprob: -13.807628631591797

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.375
    4. '  ' → logprob: -18.375
    5. '１' → logprob: -19.25
    6. '    ' → logprob: -19.375
    7. '     ' → logprob: -19.5
    8. '```' → logprob: -19.75
    9. 'self' → logprob: -20.75
    10. '>' → logprob: -20.75

Token 560: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.717296517104842e-05
    2. ']
' → logprob: -10.125057220458984
    3. ' ]' → logprob: -11.250057220458984
    4. '<|end|>' → logprob: -13.125057220458984
    5. '()]' → logprob: -14.125057220458984
    6. ']

' → logprob: -14.500057220458984
    7. ']()' → logprob: -15.125057220458984
    8. ']]' → logprob: -16.375057220458984
    9. ']<<' → logprob: -16.750057220458984
    10. '[' → logprob: -16.750057220458984

Token 561: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2817375659942627
    2. 'main' → logprob: -1.5317375659942627
    3. ' solve' → logprob: -4.906737327575684
    4. 'pow' → logprob: -5.656737327575684
    5. 'solve' → logprob: -5.656737327575684
    6. ' dfs' → logprob: -5.781737327575684
    7. 'dfs' → logprob: -6.031737327575684
    8. ' gcd' → logprob: -6.281737327575684
    9. ' pow' → logprob: -7.156737327575684
    10. ' factorial' → logprob: -7.281737327575684

Token 563: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.4121114822482923e-06
    2. '():
' → logprob: -12.875003814697266
    3. ' ():' → logprob: -14.250003814697266
    4. '()' → logprob: -16.375003814697266
    5. '():
' → logprob: -18.375003814697266
    6. '().' → logprob: -20.875003814697266
    7. '():

' → logprob: -21.125003814697266
    8. '(' → logprob: -21.125003814697266
    9. '_' → logprob: -21.500003814697266
    10. '(":' → logprob: -22.000003814697266

Token 564: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011144500225782394
    2. 'n' → logprob: -4.761144638061523
    3. ' n' → logprob: -6.136144638061523
    4. '(n' → logprob: -8.261144638061523
    5. '	n' → logprob: -9.511144638061523
    6. ',n' → logprob: -12.136144638061523
    7. '    ' → logprob: -12.261144638061523
    8. '   ' → logprob: -12.261144638061523
    9. '()' → logprob: -12.386144638061523
    10. ' pass' → logprob: -12.636144638061523

Token 565: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05726347863674164
    2. ' n' → logprob: -3.3072633743286133
    3. 'N' (adapté à ' N') → logprob: -4.432263374328613
    4. '   ' → logprob: -5.057263374328613
    5. ' N' → logprob: -7.932263374328613
    6. ' pass' → logprob: -8.682263374328613
    7. '	n' → logprob: -9.432263374328613
    8. '    ' → logprob: -9.557263374328613
    9. '#' → logprob: -10.057263374328613
    10. 'pass' → logprob: -10.307263374328613

Token 566: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1809767782688141
    2. '=' → logprob: -2.0559768676757812
    3. ',' → logprob: -3.3059768676757812
    4. '=int' → logprob: -7.055976867675781
    5. ' ' → logprob: -10.805976867675781
    6. ',K' → logprob: -11.430976867675781
    7. ' ,' → logprob: -12.055976867675781
    8. ',int' → logprob: -12.930976867675781
    9. ',N' → logprob: -12.930976867675781
    10. ',Q' → logprob: -13.430976867675781

Token 567: ' M' (ID: 391)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.26272058486938477
    2. 'K' → logprob: -1.6377205848693848
    3. 'M' → logprob: -3.3877205848693848
    4. 'X' → logprob: -7.637720584869385
    5. ' Q' → logprob: -7.762720584869385
    6. 'W' → logprob: -7.887720584869385
    7. 'D' → logprob: -8.387720108032227
    8. 'C' → logprob: -8.512720108032227
    9. 'A' → logprob: -8.512720108032227
    10. '=' → logprob: -8.512720108032227

Token 568: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16025133430957794
    2. ' =' → logprob: -1.9102513790130615
    3. ',' → logprob: -10.53525161743164
    4. '=M' → logprob: -15.53525161743164
    5. '＝' → logprob: -15.66025161743164
    6. ' ' → logprob: -16.78525161743164
    7. '=list' → logprob: -17.03525161743164
    8. '=sys' → logprob: -17.53525161743164
    9. ')' → logprob: -17.78525161743164
    10. '   ' → logprob: -17.91025161743164

Token 569: ' MAP' (ID: 53455)
  Prédit: 'MAP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAP' → logprob: -0.026446830481290817
    2. ' MAP' → logprob: -4.27644681930542
    3. 'LIST' → logprob: -5.40144681930542
    4. ' map' → logprob: -5.40144681930542
    5. 'map' → logprob: -5.77644681930542
    6. ' LIST' → logprob: -10.026447296142578
    7. 'list' → logprob: -10.651447296142578
    8. ' ' → logprob: -11.651447296142578
    9. ' list' → logprob: -11.776447296142578
    10. '_MAP' → logprob: -13.776447296142578

Token 570: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006389308837242424
    2. '()
' → logprob: -7.375638961791992
    3. ')' → logprob: -11.625638961791992
    4. '())' → logprob: -14.000638961791992
    5. '()
' → logprob: -14.500638961791992
    6. ' ()' → logprob: -14.625638961791992
    7. '();' → logprob: -14.625638961791992
    8. '#' → logprob: -15.250638961791992
    9. '   ' → logprob: -15.250638961791992
    10. '()`' → logprob: -15.625638961791992

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007703172159381211
    2. '    
' → logprob: -7.375770092010498
    3. '
' → logprob: -9.625770568847656
    4. 'A' → logprob: -10.375770568847656
    5. 'a' → logprob: -11.500770568847656
    6. '```' → logprob: -12.000770568847656
    7. ' A' → logprob: -12.250770568847656
    8. ')' → logprob: -12.875770568847656
    9. '' → logprob: -13.000770568847656
    10. '	A' → logprob: -13.250770568847656

Token 572: ' S' (ID: 336)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3605736792087555
    2. 'S' (adapté à ' S') → logprob: -2.2355737686157227
    3. 'edges' → logprob: -3.2355737686157227
    4. 'G' → logprob: -3.3605737686157227
    5. 'AB' → logprob: -3.7355737686157227
    6. 'Q' → logprob: -4.110573768615723
    7. 'graph' → logprob: -4.485573768615723
    8. 'X' → logprob: -4.610573768615723
    9. 'W' → logprob: -5.110573768615723
    10. 'C' → logprob: -5.110573768615723

Token 573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10039914399385452
    2. ' =' → logprob: -2.3503992557525635
    3. ',' → logprob: -8.725399017333984
    4. '=input' → logprob: -11.475399017333984
    5. '_' → logprob: -12.225399017333984
    6. '[' → logprob: -12.850399017333984
    7. '=list' → logprob: -13.100399017333984
    8. '=[]' → logprob: -13.725399017333984
    9. '```' → logprob: -13.725399017333984
    10. ')' → logprob: -14.100399017333984

Token 574: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.27079322934150696
    2. 'LIST' → logprob: -1.5207931995391846
    3. 'list' → logprob: -4.770793437957764
    4. '[input' → logprob: -4.895793437957764
    5. ' input' → logprob: -6.520793437957764
    6. '[' → logprob: -7.270793437957764
    7. 'INPUT' → logprob: -8.645792961120605
    8. ' LIST' → logprob: -9.270792961120605
    9. '_list' → logprob: -9.770792961120605
    10. '[L' → logprob: -9.895792961120605

Token 575: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.526570384972729e-05
    2. '()
' → logprob: -9.875055313110352
    3. '())' → logprob: -13.000055313110352
    4. '().' → logprob: -13.875055313110352
    5. '()
' → logprob: -15.750055313110352
    6. ')' → logprob: -16.00005531311035
    7. ' ()' → logprob: -16.37505531311035
    8. '()]' → logprob: -16.62505531311035
    9. '()

' → logprob: -16.62505531311035
    10. '()`' → logprob: -17.50005531311035

Token 576: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008502408862113953
    2. '    
' → logprob: -5.25850248336792
    3. 'A' → logprob: -6.50850248336792
    4. 'T' → logprob: -7.75850248336792
    5. ' T' → logprob: -8.383502006530762
    6. ' A' → logprob: -8.758502006530762
    7. 't' → logprob: -8.883502006530762
    8. 'B' → logprob: -9.508502006530762
    9. '
' → logprob: -9.883502006530762
    10. '    ' → logprob: -10.008502006530762

Token 577: ' dp' (ID: 21546)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.016083836555481
    2. 'dp' (adapté à ' dp') → logprob: -1.516083836555481
    3. 'seg' → logprob: -1.766083836555481
    4. 'st' → logprob: -2.6410837173461914
    5. 'tree' → logprob: -3.3910837173461914
    6. 't' → logprob: -4.266083717346191
    7. 'A' → logprob: -4.266083717346191
    8. 'se' → logprob: -4.391083717346191
    9. 'pos' → logprob: -5.016083717346191
    10. 'Q' → logprob: -5.016083717346191

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007615968119353056
    2. '=' → logprob: -4.88261604309082
    3. '[' → logprob: -12.38261604309082
    4. '=[' → logprob: -13.00761604309082
    5. ' =[' → logprob: -13.63261604309082
    6. '_' → logprob: -14.63261604309082
    7. ' ' → logprob: -14.63261604309082
    8. '0' → logprob: -15.13261604309082
    9. ',' → logprob: -15.25761604309082
    10. '1' → logprob: -16.13261604309082

Token 579: ' Seg' (ID: 13616)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5495590567588806
    2. '[' → logprob: -0.9245590567588806
    3. ' [' → logprob: -4.799559116363525
    4. '[List' → logprob: -4.799559116363525
    5. '[S' → logprob: -5.549559116363525
    6. '[_' → logprob: -6.174559116363525
    7. '[-' → logprob: -6.924559116363525
    8. ' _' → logprob: -7.049559116363525
    9. '[[' → logprob: -7.924559116363525
    10. '[len' → logprob: -8.424558639526367

Token 580: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.0206720617134124e-05
    2. 'tree' → logprob: -12.00001049041748
    3. ' =' → logprob: -13.50001049041748
    4. '[N' → logprob: -14.12501049041748
    5. '(S' → logprob: -15.00001049041748
    6. '(N' → logprob: -15.12501049041748
    7. '   ' → logprob: -15.37501049041748
    8. '[' → logprob: -15.50001049041748
    9. '([' → logprob: -15.75001049041748
    10. '=' → logprob: -15.87501049041748

Token 581: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0019142382079735398
    2. '(M' → logprob: -6.376914024353027
    3. '(' → logprob: -8.751914024353027
    4. '   ' → logprob: -10.376914024353027
    5. '(len' → logprob: -11.251914024353027
    6. '((' → logprob: -12.876914024353027
    7. '(S' → logprob: -12.876914024353027
    8. ' (' → logprob: -13.251914024353027
    9. ',' → logprob: -14.251914024353027
    10. 'N' → logprob: -14.876914024353027

Token 582: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10953032225370407
    2. '+' → logprob: -2.359530210494995
    3. ' +' → logprob: -5.109530448913574
    4. '   ' → logprob: -5.859530448913574
    5. ' ,' → logprob: -8.984530448913574
    6. '+,' → logprob: -9.484530448913574
    7. '*' → logprob: -10.484530448913574
    8. ',
' → logprob: -10.609530448913574
    9. '```' → logprob: -11.359530448913574
    10. ')' → logprob: -11.359530448913574

Token 583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002768859500065446
    2. 'M' → logprob: -6.5027689933776855
    3. '2' → logprob: -7.3777689933776855
    4. '10' → logprob: -7.8777689933776855
    5. '5' → logprob: -9.252768516540527
    6. ' ' → logprob: -10.127768516540527
    7. '3' → logprob: -10.127768516540527
    8. '7' → logprob: -10.627768516540527
    9. 'N' → logprob: -11.627768516540527
    10. '11' → logprob: -11.752768516540527

Token 584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026516327634453773
    2. ',max' → logprob: -6.377651691436768
    3. ',min' → logprob: -8.00265121459961
    4. ' ,' → logprob: -8.00265121459961
    5. ',int' → logprob: -8.75265121459961
    6. 'max' → logprob: -9.50265121459961
    7. ',sum' → logprob: -11.25265121459961
    8. ',bool' → logprob: -12.12765121459961
    9. ')' → logprob: -12.37765121459961
    10. '   ' → logprob: -12.75265121459961

Token 585: ' min' (ID: 1349)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7325102686882019
    2. 'min' → logprob: -1.2325103282928467
    3. 'max' → logprob: -1.4825103282928467
    4. '(lambda' → logprob: -7.482510089874268
    5. ' lambda' → logprob: -9.607510566711426
    6. 'int' → logprob: -11.107510566711426
    7. '   ' → logprob: -11.857510566711426
    8. '=lambda' → logprob: -12.107510566711426
    9. ' min' → logprob: -12.482510566711426
    10. '(min' → logprob: -12.732510566711426

Token 586: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007449488039128482
    2. ',int' → logprob: -7.625744819641113
    3. ',float' → logprob: -8.500744819641113
    4. ' ,' → logprob: -10.125744819641113
    5. 'lambda' → logprob: -13.250744819641113
    6. ',bool' → logprob: -13.375744819641113
    7. ',
' → logprob: -13.750744819641113
    8. '```' → logprob: -14.250744819641113
    9. ',None' → logprob: -14.250744819641113
    10. ',Integer' → logprob: -14.625744819641113

Token 587: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0009271837188862264
    2. '10' → logprob: -7.375926971435547
    3. 'float' → logprob: -8.125926971435547
    4. ' INF' → logprob: -13.000926971435547
    5. 'inf' → logprob: -13.500926971435547
    6. '_INF' → logprob: -14.750926971435547
    7. '1' → logprob: -15.250926971435547
    8. 'IN' → logprob: -15.875926971435547
    9. 'INT' → logprob: -15.875926971435547
    10. '100' → logprob: -16.750926971435547

Token 588: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038419815246015787
    2. ')
' → logprob: -8.000384330749512
    3. ' )' → logprob: -10.500384330749512
    4. ',' → logprob: -12.000384330749512
    5. ',)' → logprob: -12.125384330749512
    6. ')
' → logprob: -13.000384330749512
    7. ')`' → logprob: -13.125384330749512
    8. '`)' → logprob: -13.625384330749512
    9. '),' → logprob: -14.000384330749512
    10. '_)' → logprob: -14.125384330749512

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08306410908699036
    2. 'dp' → logprob: -2.583064079284668
    3. ' dp' → logprob: -5.583064079284668
    4. '	dp' → logprob: -8.083064079284668
    5. ')' → logprob: -10.208064079284668
    6. '(dp' → logprob: -10.708064079284668
    7. '    
' → logprob: -11.208064079284668
    8. '_dp' → logprob: -11.958064079284668
    9. ',' → logprob: -12.083064079284668
    10. ' ' → logprob: -13.208064079284668

Token 590: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0004601015243679285
    2. ' dp' → logprob: -8.625459671020508
    3. 'for' → logprob: -8.750459671020508
    4. '   ' → logprob: -9.625459671020508
    5. ' for' → logprob: -11.000459671020508
    6. '(dp' → logprob: -11.625459671020508
    7. '[' → logprob: -11.625459671020508
    8. 'def' → logprob: -11.875459671020508
    9. '_dp' → logprob: -12.625459671020508
    10. ')' → logprob: -12.750459671020508

Token 591: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.0003827676991932094
    2. '.' → logprob: -7.875382900238037
    3. ' .' → logprob: -13.500382423400879
    4. 'update' → logprob: -13.875382423400879
    5. '.up' → logprob: -16.500383377075195
    6. '=' → logprob: -17.000383377075195
    7. ':update' → logprob: -17.000383377075195
    8. '.set' → logprob: -17.375383377075195
    9. '   ' → logprob: -17.500383377075195
    10. '.Update' → logprob: -18.000383377075195

Token 592: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.755678961984813e-05
    2. '0' → logprob: -9.500077247619629
    3. ' (' → logprob: -12.875077247619629
    4. '(N' → logprob: -16.375078201293945
    5. '(
' → logprob: -17.625078201293945
    6. ' ' → logprob: -17.750078201293945
    7. ')(' → logprob: -19.125078201293945
    8. '((' → logprob: -19.375078201293945
    9. ',' → logprob: -19.375078201293945
    10. 'N' → logprob: -19.875078201293945

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013478536857292056
    2. '(),' → logprob: -7.12634801864624
    3. ' ,' → logprob: -7.62634801864624
    4. '(' → logprob: -11.376347541809082
    5. '(N' → logprob: -11.501347541809082
    6. ',N' → logprob: -11.501347541809082
    7. '),' → logprob: -12.251347541809082
    8. ')' → logprob: -12.501347541809082
    9. ',
' → logprob: -12.626347541809082
    10. '+' → logprob: -12.876347541809082

Token 594: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '1' → logprob: -14.750024795532227
    4. ')' → logprob: -17.500024795532227
    5. '   ' → logprob: -17.750024795532227
    6. ' ' → logprob: -18.625024795532227
    7. '۰' → logprob: -19.000024795532227
    8. '```' → logprob: -19.375024795532227
    9. '  ' → logprob: -19.500024795532227
    10. '000' → logprob: -19.562524795532227

Token 595: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009377855458296835
    2. ')
' → logprob: -7.0009379386901855
    3. '   ' → logprob: -10.875937461853027
    4. ' )' → logprob: -12.000937461853027
    5. ')
' → logprob: -14.125937461853027
    6. '
' → logprob: -15.875937461853027
    7. ')`' → logprob: -16.125938415527344
    8. ')

' → logprob: -16.625938415527344
    9. ' ' → logprob: -16.750938415527344
    10. '`)' → logprob: -17.250938415527344

Token 596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001567949540913105
    2. '<|end|>' → logprob: -7.126567840576172
    3. ' for' → logprob: -7.501567840576172
    4. '    
' → logprob: -9.376567840576172
    5. '
' → logprob: -9.501567840576172
    6. 'for' → logprob: -10.251567840576172
    7. '	for' → logprob: -11.751567840576172
    8. '```' → logprob: -12.876567840576172
    9. '<|end|>' → logprob: -13.126567840576172
    10. ')' → logprob: -14.751567840576172

Token 597: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5821883082389832
    2. ' for' → logprob: -0.8321883082389832
    3. '   ' → logprob: -5.082188129425049
    4. '
' → logprob: -11.832188606262207
    5. '```' → logprob: -11.832188606262207
    6. '	for' → logprob: -12.582188606262207
    7. '    
' → logprob: -13.082188606262207
    8. ' ' → logprob: -13.707188606262207
    9. 'from' → logprob: -14.207188606262207
    10. '``' → logprob: -15.332188606262207

Token 598: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1002136841416359
    2. ' i' → logprob: -2.3502137660980225
    3. '_i' → logprob: -12.975214004516602
    4. 'pos' → logprob: -14.100214004516602
    5. 'x' → logprob: -14.350214004516602
    6. '```' → logprob: -14.600214004516602
    7. ' ' → logprob: -14.725214004516602
    8. '(i' → logprob: -14.975214004516602
    9. '   ' → logprob: -14.975214004516602
    10. 'r' → logprob: -15.100214004516602

Token 599: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17985548079013824
    2. 'in' → logprob: -1.804855465888977
    3. ',' → logprob: -10.679855346679688
    4. '_' → logprob: -10.929855346679688
    5. ' ' → logprob: -10.929855346679688
    6. '   ' → logprob: -11.304855346679688
    7. 'n' → logprob: -11.804855346679688
    8. 'range' → logprob: -12.054855346679688
    9. 'In' → logprob: -12.554855346679688
    10. 's' → logprob: -12.929855346679688

Token 600: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015496177366003394
    2. 're' → logprob: -6.50154972076416
    3. ' range' → logprob: -10.00154972076416
    4. '   ' → logprob: -14.12654972076416
    5. 'reverse' → logprob: -14.37654972076416
    6. ' reversed' → logprob: -15.50154972076416
    7. 'r' → logprob: -15.75154972076416
    8. ' ' → logprob: -16.626548767089844
    9. '
' → logprob: -16.626548767089844
    10. '```' → logprob: -16.876548767089844

Token 601: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.12712642550468445
    2. 'N' → logprob: -2.127126455307007
    3. ' N' → logprob: -9.252126693725586
    4. '(' → logprob: -10.002126693725586
    5. '(M' → logprob: -10.627126693725586
    6. '   ' → logprob: -11.502126693725586
    7. 'M' → logprob: -11.627126693725586
    8. '	N' → logprob: -12.252126693725586
    9. '1' → logprob: -12.627126693725586
    10. '()' → logprob: -14.502126693725586

Token 602: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06564398854970932
    2. ' -' → logprob: -2.8156440258026123
    3. ',' → logprob: -6.190643787384033
    4. '):
' → logprob: -7.315643787384033
    5. ',-' → logprob: -7.440643787384033
    6. '):' → logprob: -8.565644264221191
    7. '   ' → logprob: -8.940644264221191
    8. '+' → logprob: -11.440644264221191
    9. ' ,' → logprob: -11.690644264221191
    10. ' ,-' → logprob: -11.690644264221191

Token 603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.125018119812012
    3. '-' → logprob: -13.125018119812012
    4. '2' → logprob: -14.250018119812012
    5. '```' → logprob: -15.875018119812012
    6. '0' → logprob: -16.125017166137695
    7. '
' → logprob: -16.375017166137695
    8. ',' → logprob: -16.375017166137695
    9. '   ' → logprob: -16.500017166137695
    10. ' -' → logprob: -16.875017166137695

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027611342375166714
    2. ',-' → logprob: -8.250276565551758
    3. ' ,' → logprob: -11.875276565551758
    4. '-' → logprob: -11.875276565551758
    5. ',
' → logprob: -14.750276565551758
    6. ' -' → logprob: -15.750276565551758
    7. ' ,-' → logprob: -16.500276565551758
    8. '
' → logprob: -16.625276565551758
    9. '-,' → logprob: -16.875276565551758
    10. '```' → logprob: -17.500276565551758

Token 605: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002619318547658622
    2. ' -' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.500262260437012
    4. ' ' → logprob: -15.875262260437012
    5. '	' → logprob: -18.625261306762695
    6. '0' → logprob: -19.125261306762695
    7. '  ' → logprob: -19.125261306762695
    8. '
' → logprob: -19.625261306762695
    9. '     ' → logprob: -19.625261306762695
    10. '−' → logprob: -19.625261306762695

Token 606: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '-' → logprob: -14.750000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '
' → logprob: -15.750000953674316
    5. '   ' → logprob: -15.750000953674316
    6. ' -' → logprob: -16.500001907348633
    7. '2' → logprob: -16.750001907348633
    8. '```' → logprob: -17.000001907348633
    9. '１' → logprob: -17.687501907348633
    10. '

' → logprob: -18.125001907348633

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011692758649587631
    2. ',-' → logprob: -4.761692523956299
    3. '-' → logprob: -5.886692523956299
    4. ' ,' → logprob: -8.636693000793457
    5. ' -' → logprob: -9.511693000793457
    6. ' ,-' → logprob: -10.761693000793457
    7. '   ' → logprob: -11.136693000793457
    8. '-,' → logprob: -12.136693000793457
    9. ',
' → logprob: -12.761693000793457
    10. '1' → logprob: -14.886693000793457

Token 608: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.611323624383658e-05
    2. ' -' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.25006675720215
    4. ' ' → logprob: -17.75006675720215
    5. '```' → logprob: -18.25006675720215
    6. '−' → logprob: -18.37506675720215
    7. ',' → logprob: -20.50006675720215
    8. '1' → logprob: -20.62506675720215
    9. '	' → logprob: -20.62506675720215
    10. '﻿' → logprob: -20.75006675720215

Token 609: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -17.375
    4. '   ' → logprob: -18.375
    5. '```' → logprob: -18.375
    6. '１' → logprob: -19.375
    7. ')' → logprob: -20.0
    8. '2' → logprob: -20.3125
    9. '۱' → logprob: -20.5625
    10. '

' → logprob: -20.75

Token 610: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4262806177139282
    2. '-' → logprob: -1.3012806177139282
    3. '):
' → logprob: -3.0512804985046387
    4. '):' → logprob: -4.176280498504639
    5. ',-' → logprob: -4.551280498504639
    6. ' -' → logprob: -7.426280498504639
    7. '   ' → logprob: -7.926280498504639
    8. ')' → logprob: -8.551280975341797
    9. ':' → logprob: -8.801280975341797
    10. ' ,' → logprob: -8.926280975341797

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001533547299914062
    2. ' if' → logprob: -7.001533508300781
    3. '   ' → logprob: -8.001533508300781
    4. 'if' → logprob: -8.876533508300781
    5. ' for' → logprob: -9.251533508300781
    6. '    ' → logprob: -11.001533508300781
    7. 'for' → logprob: -11.501533508300781
    8. '     ' → logprob: -12.501533508300781
    9. ',' → logprob: -12.626533508300781
    10. '      ' → logprob: -12.751533508300781

Token 612: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.34997671842575073
    2. 'j' → logprob: -2.3499767780303955
    3. 'dp' → logprob: -2.7249767780303955
    4. 'res' → logprob: -3.2249767780303955
    5. 'for' → logprob: -3.3499767780303955
    6. 'r' → logprob: -4.224976539611816
    7. 'pos' → logprob: -5.099976539611816
    8. 'l' → logprob: -5.349976539611816
    9. 'min' → logprob: -5.349976539611816
    10. '   ' → logprob: -5.349976539611816

Token 613: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.009832115843892097
    2. 'i' → logprob: -5.00983190536499
    3. ' S' → logprob: -5.88483190536499
    4. 'dp' → logprob: -9.259832382202148
    5. ' i' → logprob: -9.509832382202148
    6. 'M' → logprob: -9.634832382202148
    7. 'not' → logprob: -10.384832382202148
    8. ' ' → logprob: -11.509832382202148
    9. '   ' → logprob: -11.634832382202148
    10. ' not' → logprob: -12.009832382202148

Token 614: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00043734462815336883
    2. '[' → logprob: -7.875437259674072
    3. '==' → logprob: -10.25043773651123
    4. ' ==' → logprob: -11.62543773651123
    5. '[I' → logprob: -12.25043773651123
    6. '[
' → logprob: -13.62543773651123
    7. ' [' → logprob: -13.75043773651123
    8. ''[' → logprob: -14.00043773651123
    9. 'i' → logprob: -14.25043773651123
    10. '[j' → logprob: -14.37543773651123

Token 615: ']=='' (ID: 71177)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.46326136589050293
    2. ' ==' → logprob: -1.963261365890503
    3. ']' → logprob: -2.088261365890503
    4. '=='' → logprob: -2.588261365890503
    5. ']==' → logprob: -4.713261604309082
    6. '!=' → logprob: -5.213261604309082
    7. ' in' → logprob: -5.713261604309082
    8. 'in' → logprob: -6.088261604309082
    9. ')' → logprob: -6.088261604309082
    10. ''' → logprob: -6.338261604309082

Token 616: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35096150636672974
    2. '1' → logprob: -1.725961446762085
    3. ''' → logprob: -3.100961446762085
    4. '.' → logprob: -3.475961446762085
    5. '#' → logprob: -3.600961446762085
    6. '?' → logprob: -5.350961685180664
    7. ''.' → logprob: -5.850961685180664
    8. ''#' → logprob: -5.975961685180664
    9. '.'' → logprob: -7.225961685180664
    10. ''?' → logprob: -7.475961685180664

Token 617: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014513333328068256
    2. '':' → logprob: -4.7645134925842285
    3. '):' → logprob: -5.5145134925842285
    4. ':
' → logprob: -6.3895134925842285
    5. ' :' → logprob: -9.38951301574707
    6. '):
' → logprob: -9.76451301574707
    7. ')' → logprob: -11.01451301574707
    8. '':
' → logprob: -12.63951301574707
    9. '=' → logprob: -13.26451301574707
    10. ']:' → logprob: -13.26451301574707

Token 618: ' continue' (ID: 4901)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3978223204612732
    2. 'continue' → logprob: -1.397822380065918
    3. '           ' → logprob: -2.647822380065918
    4. ' continue' → logprob: -5.147822380065918
    5. '       ' → logprob: -5.647822380065918
    6. ' dp' → logprob: -7.272822380065918
    7. '   ' → logprob: -9.397822380065918
    8. '```' → logprob: -10.147822380065918
    9. '	dp' → logprob: -10.522822380065918
    10. '	continue' → logprob: -11.272822380065918

Token 619: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003160393098369241
    2. 'dp' → logprob: -9.12531566619873
    3. 'for' → logprob: -9.50031566619873
    4. 'next' → logprob: -10.00031566619873
    5. 'val' → logprob: -11.25031566619873
    6. '        
' → logprob: -11.37531566619873
    7. 'res' → logprob: -11.62531566619873
    8. ' for' → logprob: -12.12531566619873
    9. 'l' → logprob: -12.25031566619873
    10. 'n' → logprob: -12.62531566619873

Token 620: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005539863486774266
    2. 'next' → logprob: -9.125554084777832
    3. 'dp' → logprob: -9.125554084777832
    4. 'res' → logprob: -9.625554084777832
    5. '        
' → logprob: -10.125554084777832
    6. 'for' → logprob: -10.625554084777832
    7. 'val' → logprob: -10.625554084777832
    8. ' for' → logprob: -10.875554084777832
    9. 'j' → logprob: -10.875554084777832
    10. 'm' → logprob: -11.375554084777832

Token 621: ' smallest' (ID: 42173)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.35397785902023315
    2. 'mn' → logprob: -1.728977918624878
    3. 'mi' → logprob: -2.478977918624878
    4. 'val' → logprob: -4.728977680206299
    5. 'v' → logprob: -5.103977680206299
    6. 'x' → logprob: -5.478977680206299
    7. 'min' → logprob: -5.478977680206299
    8. 'cost' → logprob: -5.853977680206299
    9. 'dp' → logprob: -5.853977680206299
    10. 'm' → logprob: -5.853977680206299

Token 622: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09948397427797318
    2. '=' → logprob: -3.0994839668273926
    3. '_jump' → logprob: -3.2244839668273926
    4. '_step' → logprob: -5.474483966827393
    5. '=j' → logprob: -5.724483966827393
    6. 'jump' → logprob: -6.974483966827393
    7. '_j' → logprob: -7.724483966827393
    8. '_cost' → logprob: -8.59948444366455
    9. 'Jump' → logprob: -8.84948444366455
    10. 'step' → logprob: -8.84948444366455

Token 623: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018294397741556168
    2. 'INF' → logprob: -4.018294334411621
    3. ' dp' → logprob: -9.893294334411621
    4. 'inf' → logprob: -10.018294334411621
    5. '(dp' → logprob: -11.393294334411621
    6. '	dp' → logprob: -11.518294334411621
    7. 'IN' → logprob: -12.143294334411621
    8. ' INF' → logprob: -12.393294334411621
    9. '
' → logprob: -12.768294334411621
    10. '   ' → logprob: -13.455794334411621

Token 624: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.0002755174064077437
    2. '.get' → logprob: -8.500275611877441
    3. '.all' → logprob: -10.000275611877441
    4. '.' → logprob: -11.000275611877441
    5. 'query' → logprob: -11.875275611877441
    6. ' .' → logprob: -14.375275611877441
    7. '.q' → logprob: -14.375275611877441
    8. '.min' → logprob: -15.375275611877441
    9. '.segment' → logprob: -15.750275611877441
    10. '=query' → logprob: -15.875275611877441

Token 625: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.375005722045898
    3. 'i' → logprob: -14.000005722045898
    4. '   ' → logprob: -14.125005722045898
    5. ' (' → logprob: -16.3750057220459
    6. '((' → logprob: -17.2500057220459
    7. '(
' → logprob: -17.8750057220459
    8. '```' → logprob: -18.2500057220459
    9. '  ' → logprob: -19.0000057220459
    10. ' ' → logprob: -19.2500057220459

Token 626: '+' (ID: 10)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.045756228268146515
    2. ',' → logprob: -3.1707563400268555
    3. ',i' → logprob: -6.2957563400268555
    4. '   ' → logprob: -7.9207563400268555
    5. ' i' → logprob: -7.9207563400268555
    6. '(i' → logprob: -9.045756340026855
    7. ' ,' → logprob: -11.045756340026855
    8. '	i' → logprob: -11.295756340026855
    9. '[i' → logprob: -11.795756340026855
    10. '+' → logprob: -12.045756340026855

Token 627: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1278085559606552
    2. '1' → logprob: -2.1278085708618164
    3. '   ' → logprob: -7.877808570861816
    4. 'min' → logprob: -8.502808570861816
    5. ' i' → logprob: -8.627808570861816
    6. ' ' → logprob: -10.377808570861816
    7. '       ' → logprob: -11.252808570861816
    8. '(i' → logprob: -11.502808570861816
    9. '     ' → logprob: -11.627808570861816
    10. '  ' → logprob: -11.877808570861816

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016193199902772903
    2. ',i' → logprob: -4.141193389892578
    3. ',min' → logprob: -9.516193389892578
    4. ' ,' → logprob: -10.141193389892578
    5. 'i' → logprob: -10.766193389892578
    6. '   ' → logprob: -11.641193389892578
    7. '(i' → logprob: -11.891193389892578
    8. ',
' → logprob: -12.516193389892578
    9. 'min' → logprob: -13.016193389892578
    10. ' i' → logprob: -14.141193389892578

Token 629: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0002537104592192918
    2. 'i' → logprob: -8.750253677368164
    3. ' min' → logprob: -9.750253677368164
    4. 'N' → logprob: -10.375253677368164
    5. '   ' → logprob: -12.375253677368164
    6. '	min' → logprob: -14.000253677368164
    7. '(min' → logprob: -15.625253677368164
    8. '[min' → logprob: -15.625253677368164
    9. '=min' → logprob: -16.000253677368164
    10. '```' → logprob: -16.750253677368164

Token 630: '(N' (ID: 10564)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0009132515988312662
    2. '(N' → logprob: -7.000913143157959
    3. '(' → logprob: -13.875913619995117
    4. 'i' → logprob: -14.875913619995117
    5. '(M' → logprob: -15.875913619995117
    6. '(n' → logprob: -16.000913619995117
    7. 'N' → logprob: -16.000913619995117
    8. ' (' → logprob: -17.750913619995117
    9. '(I' → logprob: -18.250913619995117
    10. '((' → logprob: -18.375913619995117

Token 631: '+' (ID: 10)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.534558552724775e-05
    2. '(' → logprob: -11.500025749206543
    3. ',' → logprob: -11.750025749206543
    4. 'i' → logprob: -12.625025749206543
    5. ',i' → logprob: -12.875025749206543
    6. ' (' → logprob: -14.375025749206543
    7. '(
' → logprob: -14.875025749206543
    8. '   ' → logprob: -16.000024795532227
    9. '(M' → logprob: -16.250024795532227
    10. ')' → logprob: -16.625024795532227

Token 632: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.055299945175647736
    2. '(i' → logprob: -2.930299997329712
    3. 'M' → logprob: -8.055299758911133
    4. ' i' → logprob: -9.930299758911133
    5. '(M' → logprob: -10.680299758911133
    6. '1' → logprob: -11.930299758911133
    7. '(' → logprob: -11.930299758911133
    8. '   ' → logprob: -12.180299758911133
    9. ')' → logprob: -12.805299758911133
    10. 'N' → logprob: -13.555299758911133

Token 633: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004092174116522074
    2. ',' → logprob: -5.629092216491699
    3. ',i' → logprob: -7.754092216491699
    4. ',(' → logprob: -10.2540922164917
    5. ' (' → logprob: -11.2540922164917
    6. '(' → logprob: -11.5040922164917
    7. ')' → logprob: -13.6290922164917
    8. ' ,' → logprob: -14.1290922164917
    9. '(
' → logprob: -14.5040922164917
    10. 'i' → logprob: -14.5040922164917

Token 634: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010068230039905757
    2. ' i' → logprob: -9.625101089477539
    3. '(i' → logprob: -10.625101089477539
    4. '   ' → logprob: -11.625101089477539
    5. '	i' → logprob: -14.750101089477539
    6. '```' → logprob: -15.375101089477539
    7. ' ' → logprob: -15.625101089477539
    8. '
' → logprob: -15.875101089477539
    9. ')i' → logprob: -15.875101089477539
    10. '  ' → logprob: -16.00010108947754

Token 635: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015340105630457401
    2. 'M' → logprob: -4.265340328216553
    3. ' +' → logprob: -6.765340328216553
    4. ' M' → logprob: -11.015339851379395
    5. '+
' → logprob: -12.765339851379395
    6. '+i' → logprob: -12.890339851379395
    7. '   ' → logprob: -14.765339851379395
    8. '+m' → logprob: -15.765339851379395
    9. '++' → logprob: -15.890339851379395
    10. '＋' → logprob: -16.26534080505371

Token 636: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.02996603585779667
    2. '1' → logprob: -3.529966115951538
    3. ' M' → logprob: -8.904966354370117
    4. '   ' → logprob: -9.904966354370117
    5. ' ' → logprob: -11.154966354370117
    6. '  ' → logprob: -12.779966354370117
    7. '
' → logprob: -13.279966354370117
    8. '       ' → logprob: -13.779966354370117
    9. '           ' → logprob: -13.904966354370117
    10. '                   ' → logprob: -14.029966354370117

Token 637: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016873658751137555
    2. ' +' → logprob: -9.250168800354004
    3. '+i' → logprob: -10.000168800354004
    4. '2' → logprob: -11.375168800354004
    5. '()+' → logprob: -11.500168800354004
    6. '1' → logprob: -13.250168800354004
    7. ')+' → logprob: -13.625168800354004
    8. '```' → logprob: -14.375168800354004
    9. '(' → logprob: -14.500168800354004
    10. 'i' → logprob: -14.875168800354004

Token 638: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. '2' → logprob: -12.375009536743164
    3. ' ' → logprob: -12.500009536743164
    4. '+' → logprob: -13.875009536743164
    5. ')' → logprob: -15.125009536743164
    6. '   ' → logprob: -16.375009536743164
    7. '```' → logprob: -17.125009536743164
    8. '
' → logprob: -18.625009536743164
    9. '``' → logprob: -18.625009536743164
    10. '`' → logprob: -19.375009536743164

Token 639: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025239013135433197
    2. ')
' → logprob: -3.7752389907836914
    3. ')+' → logprob: -6.400238990783691
    4. '))' → logprob: -8.150238990783691
    5. ')
' → logprob: -10.900238990783691
    6. ')`' → logprob: -12.025238990783691
    7. '))
' → logprob: -12.275238990783691
    8. ')`
' → logprob: -12.525238990783691
    9. ' )' → logprob: -12.900238990783691
    10. ')))' → logprob: -13.150238990783691

Token 640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34077465534210205
    2. '+' → logprob: -1.715774655342102
    3. 'dp' → logprob: -2.9657745361328125
    4. ' +' → logprob: -3.3407745361328125
    5. '
' → logprob: -4.9657745361328125
    6. ' if' → logprob: -5.3407745361328125
    7. 'if' → logprob: -5.9657745361328125
    8. ')' → logprob: -5.9657745361328125
    9. ')
' → logprob: -6.2157745361328125
    10. ' dp' → logprob: -6.4657745361328125

Token 641: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.8351892473874614e-05
    2. ' dp' → logprob: -10.500048637390137
    3. 'if' (adapté à ' if') → logprob: -11.125048637390137
    4. '       ' → logprob: -12.125048637390137
    5. '	dp' → logprob: -15.250048637390137
    6. ' if' → logprob: -16.25004768371582
    7. '```' → logprob: -16.37504768371582
    8. '   ' → logprob: -16.50004768371582
    9. '
' → logprob: -17.50004768371582
    10. '(dp' → logprob: -17.75004768371582

Token 642: ' smallest' (ID: 42173)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.07073821872472763
    2. ' smallest' → logprob: -2.6957383155822754
    3. ' small' → logprob: -7.195738315582275
    4. 'sm' → logprob: -10.820737838745117
    5. '(s' → logprob: -11.070737838745117
    6. ' ' → logprob: -12.195737838745117
    7. '   ' → logprob: -12.445737838745117
    8. 's' → logprob: -13.070737838745117
    9. '	s' → logprob: -13.570737838745117
    10. '
' → logprob: -14.445737838745117

Token 643: '!=' (ID: 11408)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.35254520177841187
    2. '!=' → logprob: -1.4775452613830566
    3. ' ==' → logprob: -2.9775452613830566
    4. ' !=' → logprob: -4.477545261383057
    5. '<' → logprob: -5.102545261383057
    6. '```' → logprob: -8.602544784545898
    7. '<=' → logprob: -9.477544784545898
    8. '=' → logprob: -9.852544784545898
    9. '>' → logprob: -9.977544784545898
    10. ' <' → logprob: -10.102544784545898

Token 644: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -2.1008713702030946e-06
    2. ' INF' → logprob: -13.500001907348633
    3. 'IN' → logprob: -15.375001907348633
    4. '-INF' → logprob: -15.375001907348633
    5. '_INF' → logprob: -16.000001907348633
    6. ' ' → logprob: -17.375001907348633
    7. '
' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.125001907348633
    9. 'MOD' → logprob: -18.625001907348633
    10. ' ' → logprob: -18.625001907348633

Token 645: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07557085901498795
    2. '+' → logprob: -3.325570821762085
    3. ':
' → logprob: -3.325570821762085
    4. ' +' → logprob: -7.700571060180664
    5. '=' → logprob: -9.075571060180664
    6. '):' → logprob: -9.950571060180664
    7. '       ' → logprob: -10.075571060180664
    8. ')' → logprob: -10.075571060180664
    9. '):
' → logprob: -10.325571060180664
    10. ':return' → logprob: -10.700571060180664

Token 646: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19955046474933624
    2. ' dp' → logprob: -1.8245505094528198
    3. '           ' → logprob: -3.9495503902435303
    4. '	dp' → logprob: -8.07455062866211
    5. '       ' → logprob: -11.69955062866211
    6. '   ' → logprob: -11.94955062866211
    7. '(dp' → logprob: -11.94955062866211
    8. '	       ' → logprob: -12.82455062866211
    9. ' ' → logprob: -12.94955062866211
    10. '_dp' → logprob: -13.32455062866211

Token 647: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -5.919942486798391e-05
    2. '.' → logprob: -9.750059127807617
    3. 'update' → logprob: -14.375059127807617
    4. ' .' → logprob: -16.750059127807617
    5. ').' → logprob: -16.875059127807617
    6. '>.' → logprob: -17.000059127807617
    7. '   ' → logprob: -18.125059127807617
    8. '`.' → logprob: -18.125059127807617
    9. '‌.' → logprob: -18.125059127807617
    10. '​.' → logprob: -18.125059127807617

Token 648: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.625001907348633
    3. 'i' → logprob: -16.375001907348633
    4. '(
' → logprob: -16.500001907348633
    5. ' (' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.875001907348633
    7. '```' → logprob: -20.250001907348633
    8. ',i' → logprob: -20.500001907348633
    9. '	i' → logprob: -20.875001907348633
    10. ' i' → logprob: -21.625001907348633

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010616567305987701
    2. ' ,' → logprob: -9.250105857849121
    3. ',s' → logprob: -11.625105857849121
    4. ',
' → logprob: -14.500105857849121
    5. ' smallest' → logprob: -15.750105857849121
    6. ',int' → logprob: -16.375106811523438
    7. '   ' → logprob: -16.375106811523438
    8. '`,' → logprob: -17.375106811523438
    9. '```' → logprob: -17.375106811523438
    10. 'small' → logprob: -17.500106811523438

Token 650: ' smallest' (ID: 42173)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.0002525184245314449
    2. ' smallest' → logprob: -8.875252723693848
    3. '1' → logprob: -9.250252723693848
    4. 'sm' → logprob: -11.250252723693848
    5. ' small' → logprob: -13.625252723693848
    6. '   ' → logprob: -13.625252723693848
    7. '_small' → logprob: -15.250252723693848
    8. '
' → logprob: -15.500252723693848
    9. 's' → logprob: -15.500252723693848
    10. '(s' → logprob: -15.875252723693848

Token 651: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0067156096920371056
    2. ' +' → logprob: -5.006715774536133
    3. '()+' → logprob: -16.006715774536133
    4. '＋' → logprob: -16.256715774536133
    5. '+
' → logprob: -17.381715774536133
    6. ')+' → logprob: -17.756715774536133
    7. '+i' → logprob: -18.256715774536133
    8. '```' → logprob: -18.631715774536133
    9. '   ' → logprob: -18.756715774536133
    10. '1' → logprob: -19.131715774536133

Token 652: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. ')' → logprob: -16.250019073486328
    4. '   ' → logprob: -16.625019073486328
    5. '```' → logprob: -17.375019073486328
    6. '+' → logprob: -17.937519073486328
    7. '<|end|>' → logprob: -17.937519073486328
    8. '
' → logprob: -18.437519073486328
    9. '  ' → logprob: -19.312519073486328
    10. '100' → logprob: -19.375019073486328

Token 653: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019872826524078846
    2. ')
' → logprob: -6.251987457275391
    3. '<|end|>' → logprob: -10.50198745727539
    4. ')return' → logprob: -10.87698745727539
    5. ')

' → logprob: -12.37698745727539
    6. '       ' → logprob: -12.62698745727539
    7. '   ' → logprob: -13.37698745727539
    8. ' )' → logprob: -14.25198745727539
    9. '())' → logprob: -14.50198745727539
    10. '```' → logprob: -15.25198745727539

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27331846952438354
    2. '<|end|>' → logprob: -1.8983185291290283
    3. 'return' → logprob: -3.1483185291290283
    4. 'print' → logprob: -4.398318290710449
    5. 'if' → logprob: -4.398318290710449
    6. ')' → logprob: -5.023318290710449
    7. 'dp' → logprob: -5.773318290710449
    8. '```' → logprob: -5.898318290710449
    9. ' return' → logprob: -6.023318290710449
    10. '}' → logprob: -6.148318290710449

Token 655: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017725196667015553
    2. '   ' → logprob: -7.376772403717041
    3. 'dp' → logprob: -8.0017728805542
    4. 'if' (adapté à ' if') → logprob: -8.5017728805542
    5. ' print' → logprob: -8.5017728805542
    6. 'return' → logprob: -8.6267728805542
    7. 'NO' → logprob: -9.5017728805542
    8. ')' → logprob: -10.1267728805542
    9. '<|end|>' → logprob: -10.5017728805542
    10. '#print' → logprob: -11.3767728805542

Token 656: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029755238443613052
    2. ' dp' → logprob: -3.5297553539276123
    3. '(dp' → logprob: -12.279755592346191
    4. '	dp' → logprob: -15.654755592346191
    5. 'd' → logprob: -18.654754638671875
    6. ' ' → logprob: -19.404754638671875
    7. '_dp' → logprob: -19.779754638671875
    8. ' ' → logprob: -20.029754638671875
    9. '   ' → logprob: -20.279754638671875
    10. '.dp' → logprob: -21.654754638671875

Token 657: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -5.466968650580384e-05
    2. '.query' → logprob: -10.125054359436035
    3. 'get' → logprob: -11.250054359436035
    4. '.all' → logprob: -14.625054359436035
    5. ' .' → logprob: -14.875054359436035
    6. 'query' → logprob: -15.125054359436035
    7. 'all' → logprob: -15.750054359436035
    8. '.' → logprob: -15.750054359436035
    9. '   ' → logprob: -17.00005531311035
    10. '```' → logprob: -17.25005531311035

Token 658: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019294669618830085
    2. '0' → logprob: -6.25192928314209
    3. ' (' → logprob: -14.25192928314209
    4. '(
' → logprob: -16.251930236816406
    5. '```' → logprob: -17.251930236816406
    6. ' ' → logprob: -18.251930236816406
    7. '   ' → logprob: -18.876930236816406
    8. '[' → logprob: -19.251930236816406
    9. ')(' → logprob: -19.501930236816406
    10. ')' → logprob: -19.501930236816406

Token 659: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.375001907348633
    4. ')' → logprob: -19.375001907348633
    5. '０' → logprob: -19.375001907348633
    6. '(' → logprob: -19.500001907348633
    7. '۰' → logprob: -19.625001907348633
    8. '  ' → logprob: -20.000001907348633
    9. '    ' → logprob: -21.250001907348633
    10. '[' → logprob: -21.500001907348633

Token 660: ')==' (ID: 35269)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01963217370212078
    2. ' ==' → logprob: -4.269632339477539
    3. ')==' → logprob: -5.894632339477539
    4. '()==' → logprob: -6.769632339477539
    5. ')' → logprob: -7.144632339477539
    6. '>=' → logprob: -7.769632339477539
    7. ']==' → logprob: -8.269632339477539
    8. '()' → logprob: -10.019632339477539
    9. '```' → logprob: -10.894632339477539
    10. '>' → logprob: -12.269632339477539

Token 661: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -2.45848218582978e-06
    2. ' INF' → logprob: -13.00000286102295
    3. '_INF' → logprob: -17.125001907348633
    4. '-INF' → logprob: -17.625001907348633
    5. '   ' → logprob: -17.750001907348633
    6. ' ' → logprob: -18.000001907348633
    7. 'IN' → logprob: -18.500001907348633
    8. '0' → logprob: -18.875001907348633
    9. '
' → logprob: -19.500001907348633
    10. '```' → logprob: -19.750001907348633

Token 662: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011099467054009438
    2. ':
' → logprob: -4.511099338531494
    3. ':NO' → logprob: -11.011099815368652
    4. '   ' → logprob: -11.386099815368652
    5. ' :' → logprob: -11.511099815368652
    6. '):' → logprob: -12.761099815368652
    7. ':return' → logprob: -12.761099815368652
    8. ':
' → logprob: -13.386099815368652
    9. ':YES' → logprob: -13.511099815368652
    10. ')' → logprob: -14.136099815368652

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011170309036970139
    2. '   ' → logprob: -4.761170387268066
    3. 'print' → logprob: -7.011170387268066
    4. ' print' → logprob: -7.636170387268066
    5. 'No' → logprob: -8.136170387268066
    6. 'NO' → logprob: -8.136170387268066
    7. ' No' → logprob: -8.261170387268066
    8. ' NO' → logprob: -8.386170387268066
    9. ' return' → logprob: -10.261170387268066
    10. '    ' → logprob: -11.011170387268066

Token 664: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04715452715754509
    2. 'No' → logprob: -3.797154426574707
    3. 'NO' → logprob: -3.922154426574707
    4. '   ' → logprob: -5.672154426574707
    5. '-' → logprob: -8.797154426574707
    6. ' print' → logprob: -9.297154426574707
    7. '       ' → logprob: -9.547154426574707
    8. 'return' → logprob: -10.922154426574707
    9. ' No' → logprob: -11.297154426574707
    10. ' NO' → logprob: -11.797154426574707

Token 665: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.07891236990690231
    2. '-' → logprob: -2.5789122581481934
    3. '()-' → logprob: -11.328912734985352
    4. '(' → logprob: -12.078912734985352
    5. '("-' → logprob: -12.328912734985352
    6. ' -' → logprob: -15.453912734985352
    7. '()' → logprob: -16.57891273498535
    8. '   ' → logprob: -16.70391273498535
    9. '"-' → logprob: -16.95391273498535
    10. '```' → logprob: -17.45391273498535

Token 666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '１' → logprob: -17.5
    4. '
' → logprob: -19.75
    5. '۱' → logprob: -20.375
    6. ' ' → logprob: -20.75
    7. '   ' → logprob: -20.875
    8. '{' → logprob: -21.25
    9. '```' → logprob: -21.25
    10. '``' → logprob: -21.625

Token 667: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7625014185905457
    2. ')
' → logprob: -0.7625014185905457
    3. '       ' → logprob: -2.7625014781951904
    4. '   ' → logprob: -5.637501239776611
    5. ')return' → logprob: -8.26250171661377
    6. ');' → logprob: -10.51250171661377
    7. ')
' → logprob: -11.38750171661377
    8. '	' → logprob: -12.63750171661377
    9. ' )' → logprob: -13.13750171661377
    10. ' )
' → logprob: -13.63750171661377

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012519778683781624
    2. '   ' → logprob: -4.387519836425781
    3. 'else' → logprob: -11.887519836425781
    4. 'return' → logprob: -13.637519836425781
    5. ' ' → logprob: -14.262519836425781
    6. '```' → logprob: -14.887519836425781
    7. ' else' → logprob: -15.137519836425781
    8. '  ' → logprob: -15.762519836425781
    9. '      ' → logprob: -16.13751983642578
    10. ' return' → logprob: -16.26251983642578

Token 669: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026830928400158882
    2. 'return' (adapté à ' return') → logprob: -4.276831150054932
    3. '   ' → logprob: -4.401831150054932
    4. ' return' → logprob: -8.276830673217773
    5. 'else' → logprob: -10.151830673217773
    6. '
' → logprob: -11.026830673217773
    7. '	return' → logprob: -11.401830673217773
    8. '  ' → logprob: -12.651830673217773
    9. ' ' → logprob: -13.401830673217773
    10. '      ' → logprob: -13.401830673217773

Token 670: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1519274264574051
    2. 'steps' → logprob: -2.4019274711608887
    3. '    
' → logprob: -4.026927471160889
    4. 'path' → logprob: -4.151927471160889
    5. '
' → logprob: -5.026927471160889
    6. 'moves' → logprob: -5.651927471160889
    7. 'res' → logprob: -6.151927471160889
    8. ' steps' → logprob: -6.776927471160889
    9. 'step' → logprob: -7.276927471160889
    10. 'pos' → logprob: -7.401927471160889

Token 671: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6486518383026123
    2. 'res' → logprob: -0.8986518383026123
    3. 'pos' → logprob: -3.1486518383026123
    4. 'ans' → logprob: -4.898652076721191
    5. 'path' → logprob: -5.023652076721191
    6. 'steps' → logprob: -5.148652076721191
    7. 'cur' → logprob: -5.898652076721191
    8. 'result' → logprob: -6.773652076721191
    9. '    
' → logprob: -6.898652076721191
    10. 'moves' → logprob: -7.023652076721191

Token 672: ' x' (ID: 1215)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.20533768832683563
    2. 'pos' → logprob: -2.4553377628326416
    3. 'ans' → logprob: -3.2053377628326416
    4. 'path' → logprob: -3.2053377628326416
    5. '   ' → logprob: -4.7053375244140625
    6. 'cur' → logprob: -4.8303375244140625
    7. 'steps' → logprob: -8.080337524414062
    8. '    
' → logprob: -8.205337524414062
    9. 'result' → logprob: -8.330337524414062
    10. 'answer' → logprob: -8.455337524414062

Token 673: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02065073326230049
    2. '=' → logprob: -3.895650625228882
    3. '=i' → logprob: -9.520650863647461
    4. ',' → logprob: -11.395650863647461
    5. '＝' → logprob: -12.020650863647461
    6. '=x' → logprob: -12.645650863647461
    7. '=int' → logprob: -13.020650863647461
    8. 's' → logprob: -13.270650863647461
    9. '=index' → logprob: -13.270650863647461
    10. '=current' → logprob: -13.395650863647461

Token 674: ' dp' (ID: 21546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.500041007995605
    3. '[]' → logprob: -11.250041007995605
    4. '[' → logprob: -15.500041007995605
    5. ' []' → logprob: -16.87504005432129
    6. '[]
' → logprob: -17.87504005432129
    7. 'dp' → logprob: -19.62504005432129
    8. '０' → logprob: -19.87504005432129
    9. ' [' → logprob: -20.00004005432129
    10. '00' → logprob: -20.50004005432129

Token 675: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0011345010716468096
    2. 'get' → logprob: -7.126134395599365
    3. '0' → logprob: -8.376134872436523
    4. '.' → logprob: -9.251134872436523
    5. '
' → logprob: -13.126134872436523
    6. ' ' → logprob: -15.126134872436523
    7. '   ' → logprob: -15.251134872436523
    8. '```' → logprob: -15.251134872436523
    9. '7' → logprob: -15.501134872436523
    10. ' .' → logprob: -15.626134872436523

Token 676: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023246178403496742
    2. '0' → logprob: -3.7732462882995605
    3. ' (' → logprob: -15.523245811462402
    4. '```' → logprob: -15.898245811462402
    5. ' ' → logprob: -16.39824676513672
    6. '(
' → logprob: -16.52324676513672
    7. '<|end|>' → logprob: -16.77324676513672
    8. '[' → logprob: -17.14824676513672
    9. 'x' → logprob: -17.39824676513672
    10. ',' → logprob: -17.64824676513672

Token 677: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.625001907348633
    4. ')' → logprob: -18.750001907348633
    5. '1' → logprob: -19.625001907348633
    6. '<|end|>' → logprob: -20.000001907348633
    7. '۰' → logprob: -20.250001907348633
    8. '０' → logprob: -20.250001907348633
    9. '00' → logprob: -21.250001907348633
    10. '```' → logprob: -21.562501907348633

Token 678: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5762416124343872
    2. ')' → logprob: -0.8262416124343872
    3. ')
' → logprob: -9.076241493225098
    4. ')+' → logprob: -9.576241493225098
    5. '+' → logprob: -9.951241493225098
    6. '   ' → logprob: -10.576241493225098
    7. '
' → logprob: -11.326241493225098
    8. ',' → logprob: -11.826241493225098
    9. ' )' → logprob: -11.951241493225098
    10. ' )
' → logprob: -11.951241493225098

Token 679: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035474475007504225
    2. 'path' → logprob: -6.753547668457031
    3. 'pos' → logprob: -7.003547668457031
    4. 'steps' → logprob: -7.753547668457031
    5. 'moves' → logprob: -8.128547668457031
    6. 'res' → logprob: -8.253547668457031
    7. 'ans' → logprob: -8.253547668457031
    8. 'i' → logprob: -10.128547668457031
    9. ' path' → logprob: -10.128547668457031
    10. '```' → logprob: -10.628547668457031

Token 680: ' c' (ID: 274)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8924719095230103
    2. 'pos' → logprob: -1.1424719095230103
    3. 'ans' → logprob: -1.3924719095230103
    4. 'cur' → logprob: -4.392471790313721
    5. 'path' → logprob: -4.892471790313721
    6. '   ' → logprob: -6.517471790313721
    7. 'idx' → logprob: -7.642471790313721
    8. 'steps' → logprob: -8.267472267150879
    9. ' res' → logprob: -8.642472267150879
    10. 'i' → logprob: -8.642472267150879

Token 681: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0124216079711914
    2. 'ur' → logprob: -1.0124216079711914
    3. ' =' → logprob: -1.6374216079711914
    4. 'urr' → logprob: -3.1374216079711914
    5. 'urrent' → logprob: -3.5124216079711914
    6. 'pos' → logprob: -7.012421607971191
    7. 'urs' → logprob: -7.012421607971191
    8. 'nt' → logprob: -7.512421607971191
    9. 'r' → logprob: -7.762421607971191
    10. 'u' → logprob: -7.762421607971191

Token 682: ' p' (ID: 275)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2834413945674896
    2. 'cur' → logprob: -1.658441424369812
    3. 'i' → logprob: -4.158441543579102
    4. 'ans' → logprob: -4.283441543579102
    5. 'res' → logprob: -4.283441543579102
    6. 'p' → logprob: -4.783441543579102
    7. 'curr' → logprob: -6.533441543579102
    8. 'idx' → logprob: -7.533441543579102
    9. 'r' → logprob: -8.033441543579102
    10. 'current' → logprob: -8.283441543579102

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048608023673295975
    2. ' =' → logprob: -3.0486080646514893
    3. 'ur' → logprob: -12.42360782623291
    4. '=p' → logprob: -12.54860782623291
    5. 'x' → logprob: -12.79860782623291
    6. 'os' → logprob: -13.04860782623291
    7. '=x' → logprob: -13.17360782623291
    8. 'urrent' → logprob: -13.29860782623291
    9. ',' → logprob: -13.54860782623291
    10. 'p' → logprob: -13.92360782623291

Token 684: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013233759440481663
    2. '[]' → logprob: -4.513233661651611
    3. '[' → logprob: -6.138233661651611
    4. '[],' → logprob: -11.51323413848877
    5. '[]
' → logprob: -11.88823413848877
    6. 'x' → logprob: -12.76323413848877
    7. ' ' → logprob: -13.76323413848877
    8. '[]}' → logprob: -13.88823413848877
    9. ' []' → logprob: -14.26323413848877
    10. '[](' → logprob: -14.63823413848877

Token 685: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024124106392264366
    2. '[]' → logprob: -3.8991241455078125
    3. '[' → logprob: -5.6491241455078125
    4. '[],' → logprob: -10.774124145507812
    5. '[]
' → logprob: -11.024124145507812
    6. 'x' → logprob: -11.774124145507812
    7. '[]}' → logprob: -12.899124145507812
    8. '[N' → logprob: -13.149124145507812
    9. '[x' → logprob: -13.649124145507812
    10. ' []' → logprob: -14.399124145507812

Token 686: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027599374298006296
    2. '[]' → logprob: -7.12775993347168
    3. ',
' → logprob: -7.50275993347168
    4. '=[]' → logprob: -8.25275993347168
    5. '<|end|>' → logprob: -8.75275993347168
    6. '   ' → logprob: -9.12775993347168
    7. ',p' → logprob: -9.37775993347168
    8. '
' → logprob: -9.50275993347168
    9. ',n' → logprob: -9.75275993347168
    10. ' ,' → logprob: -9.75275993347168

Token 687: ' -' (ID: 533)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.007576220203191042
    2. '0' → logprob: -5.007575988769531
    3. '[' → logprob: -8.007575988769531
    4. '[]
' → logprob: -8.507575988769531
    5. ' []' → logprob: -8.882575988769531
    6. '[]}' → logprob: -9.007575988769531
    7. '[])' → logprob: -10.382575988769531
    8. '[],' → logprob: -11.007575988769531
    9. '[]

' → logprob: -11.757575988769531
    10. '[]>' → logprob: -12.382575988769531

Token 688: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.0
    3. ' ' → logprob: -17.375
    4. '-' → logprob: -17.875
    5. 'x' → logprob: -18.5
    6. '
' → logprob: -19.0
    7. '0' → logprob: -19.0
    8. '１' → logprob: -19.375
    9. '```' → logprob: -19.875
    10. '   ' → logprob: -20.375

Token 689: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12003429234027863
    2. '   ' → logprob: -2.2450342178344727
    3. '    
' → logprob: -6.120034217834473
    4. ',' → logprob: -6.245034217834473
    5. '<|end|>' → logprob: -6.620034217834473
    6. ' 
' → logprob: -7.370034217834473
    7. '  
' → logprob: -8.495034217834473
    8. '
' → logprob: -8.870034217834473
    9. '	
' → logprob: -9.495034217834473
    10. ' for' → logprob: -9.495034217834473

Token 690: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43151912093162537
    2. '
' → logprob: -1.3065191507339478
    3. ' while' → logprob: -3.931519031524658
    4. 'while' → logprob: -4.306519031524658
    5. ',' → logprob: -4.681519031524658
    6. '    
' → logprob: -4.806519031524658
    7. ' 
' → logprob: -5.181519031524658
    8. 'steps' → logprob: -5.806519031524658
    9. ' steps' → logprob: -6.181519031524658
    10. ' for' → logprob: -6.306519031524658

Token 691: ' ret' (ID: 2881)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5803662538528442
    2. 'ans' → logprob: -0.8303662538528442
    3. 'for' → logprob: -6.455366134643555
    4. 'steps' → logprob: -7.080366134643555
    5. '   ' → logprob: -7.330366134643555
    6. 'out' → logprob: -7.830366134643555
    7. 'while' → logprob: -7.830366134643555
    8. 'result' → logprob: -8.455366134643555
    9. 'answer' → logprob: -8.705366134643555
    10. 'path' → logprob: -10.080366134643555

Token 692: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1609683781862259
    2. '=' → logprob: -1.9109684228897095
    3. '=[]' → logprob: -7.28596830368042
    4. ',' → logprob: -10.160968780517578
    5. '=[]
' → logprob: -12.035968780517578
    6. 's' → logprob: -12.160968780517578
    7. '=[' → logprob: -12.660968780517578
    8. ' =[' → logprob: -13.285968780517578
    9. '=[]
' → logprob: -13.535968780517578
    10. '=[],' → logprob: -14.410968780517578

Token 693: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2471589798224159e-05
    2. '[]
' → logprob: -11.500012397766113
    3. '[' → logprob: -13.125012397766113
    4. '[]

' → logprob: -15.625012397766113
    5. ' []' → logprob: -16.12501335144043
    6. '[]"' → logprob: -16.87501335144043
    7. '[],' → logprob: -17.50001335144043
    8. '[]}' → logprob: -17.75001335144043
    9. '[]>' → logprob: -19.12501335144043
    10. '[])' → logprob: -19.12501335144043

Token 694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8112077713012695
    2. ' while' → logprob: -1.3112077713012695
    3. 'while' → logprob: -1.5612077713012695
    4. 'for' → logprob: -3.3112077713012695
    5. ' for' → logprob: -3.3112077713012695
    6. '```' → logprob: -6.3112077713012695
    7. '	while' → logprob: -7.4362077713012695
    8. '
' → logprob: -8.18620777130127
    9. '<|end|>' → logprob: -8.68620777130127
    10. '    
' → logprob: -8.68620777130127

Token 695: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2006809264421463
    2. ' while' → logprob: -2.20068097114563
    3. 'for' (adapté à ' for') → logprob: -2.70068097114563
    4. ' for' → logprob: -5.575680732727051
    5. '```' → logprob: -9.82568073272705
    6. '   ' → logprob: -10.20068073272705
    7. '	while' → logprob: -11.20068073272705
    8. '
' → logprob: -11.45068073272705
    9. ' 
' → logprob: -11.45068073272705
    10. '    
' → logprob: -12.57568073272705

Token 696: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002726601669564843
    2. 'i' → logprob: -9.000272750854492
    3. '_i' → logprob: -9.500272750854492
    4. 'c' → logprob: -10.125272750854492
    5. '_c' → logprob: -11.375272750854492
    6. '_x' → logprob: -11.625272750854492
    7. 'x' → logprob: -12.125272750854492
    8. '_range' → logprob: -13.000272750854492
    9. 'p' → logprob: -13.500272750854492
    10. '_
' → logprob: -13.625272750854492

Token 697: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06198180466890335
    2. ' in' → logprob: -2.8119819164276123
    3. ',' → logprob: -12.061982154846191
    4. ' ' → logprob: -13.061982154846191
    5. 'n' → logprob: -13.811982154846191
    6. '0' → logprob: -14.061982154846191
    7. '```' → logprob: -14.061982154846191
    8. '	in' → logprob: -14.686982154846191
    9. 'i' → logprob: -14.811982154846191
    10. '
' → logprob: -14.936982154846191

Token 698: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067204674705863
    2. ' range' → logprob: -5.006720542907715
    3. '0' → logprob: -13.256720542907715
    4. '(range' → logprob: -13.631720542907715
    5. '[' → logprob: -14.756720542907715
    6. '_' → logprob: -14.881720542907715
    7. 'r' → logprob: -14.881720542907715
    8. '
' → logprob: -15.756720542907715
    9. 'x' → logprob: -15.756720542907715
    10. ' ' → logprob: -15.881720542907715

Token 699: '(' (ID: 7)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05802430212497711
    2. 'x' → logprob: -2.9330244064331055
    3. '0' → logprob: -5.9330244064331055
    4. '1' → logprob: -7.8080244064331055
    5. '   ' → logprob: -10.058024406433105
    6. 'c' → logprob: -10.683024406433105
    7. ' N' → logprob: -11.433024406433105
    8. '(N' → logprob: -13.808024406433105
    9. ' x' → logprob: -14.058024406433105
    10. 'dp' → logprob: -14.933024406433105

Token 700: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16391430795192719
    2. 'x' → logprob: -1.9139143228530884
    3. '0' → logprob: -5.663914203643799
    4. '1' → logprob: -8.913914680480957
    5. 'c' → logprob: -9.538914680480957
    6. '   ' → logprob: -12.913914680480957
    7. ' N' → logprob: -13.038914680480957
    8. 'dp' → logprob: -13.413914680480957
    9. 'p' → logprob: -14.163914680480957
    10. ' x' → logprob: -14.538914680480957

Token 701: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031035041436553
    2. ',N' → logprob: -3.5310349464416504
    3. 'N' → logprob: -6.90603494644165
    4. ' ,' → logprob: -8.906035423278809
    5. ',n' → logprob: -9.531035423278809
    6. '   ' → logprob: -10.156035423278809
    7. ',x' → logprob: -10.906035423278809
    8. '(N' → logprob: -11.406035423278809
    9. 'x' → logprob: -13.656035423278809
    10. '(' → logprob: -14.406035423278809

Token 702: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.253090865968261e-06
    2. '   ' → logprob: -12.125009536743164
    3. 'x' → logprob: -12.750009536743164
    4. ' N' → logprob: -14.375009536743164
    5. ' ' → logprob: -16.000009536743164
    6. '
' → logprob: -16.500009536743164
    7. 'len' → logprob: -17.250009536743164
    8. '	N' → logprob: -17.375009536743164
    9. '  ' → logprob: -18.500009536743164
    10. '
' → logprob: -19.000009536743164

Token 703: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00045677117304876447
    2. ' +' → logprob: -8.500456809997559
    3. ',' → logprob: -9.125456809997559
    4. 'N' → logprob: -9.500456809997559
    5. '   ' → logprob: -10.125456809997559
    6. '1' → logprob: -11.625456809997559
    7. '
' → logprob: -12.250456809997559
    8. '+
' → logprob: -12.500456809997559
    9. ',N' → logprob: -12.750456809997559
    10. ')' → logprob: -13.375456809997559

Token 704: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11474687606096268
    2. '1' → logprob: -2.3647468090057373
    3. '+' → logprob: -4.364747047424316
    4. 'x' → logprob: -6.614747047424316
    5. '   ' → logprob: -8.364747047424316
    6. ' N' → logprob: -9.989747047424316
    7. ')' → logprob: -10.239747047424316
    8. '(N' → logprob: -11.489747047424316
    9. '```' → logprob: -11.614747047424316
    10. '
' → logprob: -11.614747047424316

Token 705: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012389794923365116
    2. '):' → logprob: -4.762389659881592
    3. ':' → logprob: -6.137389659881592
    4. ':
' → logprob: -6.887389659881592
    5. ' ):
' → logprob: -8.88739013671875
    6. ',' → logprob: -9.01239013671875
    7. ')' → logprob: -9.13739013671875
    8. '   ' → logprob: -9.51239013671875
    9. '):
' → logprob: -10.01239013671875
    10. 'if' → logprob: -11.01239013671875

Token 706: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04140770062804222
    2. ' if' → logprob: -3.291407585144043
    3. 'if' → logprob: -6.291407585144043
    4. '   ' → logprob: -6.916407585144043
    5. '<|end|>' → logprob: -8.166407585144043
    6. '```' → logprob: -9.541407585144043
    7. ',' → logprob: -10.041407585144043
    8. '	if' → logprob: -10.291407585144043
    9. '	   ' → logprob: -10.666407585144043
    10. '	' → logprob: -11.416407585144043

Token 707: ' g' (ID: 329)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0038494786713272333
    2. 'cur' → logprob: -6.628849506378174
    3. '   ' → logprob: -7.003849506378174
    4. '       ' → logprob: -7.128849506378174
    5. ' if' → logprob: -7.753849506378174
    6. 'curr' → logprob: -8.878849029541016
    7. 'current' → logprob: -9.503849029541016
    8. 'while' → logprob: -9.753849029541016
    9. 'v' → logprob: -10.503849029541016
    10. 'd' → logprob: -11.253849029541016

Token 708: ' =' (ID: 314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2505541443824768
    2. '=' → logprob: -2.250554084777832
    3. 'et' → logprob: -2.625554084777832
    4. ' =' → logprob: -4.375554084777832
    5. '       ' → logprob: -5.250554084777832
    6. '   ' → logprob: -5.250554084777832
    7. ' if' → logprob: -5.500554084777832
    8. 'p' → logprob: -5.875554084777832
    9. 't' → logprob: -6.750554084777832
    10. 'g' → logprob: -6.750554084777832

Token 709: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0012696358608081937
    2. 'INF' → logprob: -6.876269817352295
    3. 'sys' → logprob: -9.376269340515137
    4. ' dp' → logprob: -9.751269340515137
    5. 'float' → logprob: -10.001269340515137
    6. 'inf' → logprob: -11.501269340515137
    7. 'None' → logprob: -12.376269340515137
    8. 'S' → logprob: -12.376269340515137
    9. '-' → logprob: -12.751269340515137
    10. '(dp' → logprob: -12.876269340515137

Token 710: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.012642200104892254
    2. '.query' → logprob: -4.3876423835754395
    3. 'get' → logprob: -9.262641906738281
    4. 'query' → logprob: -10.262641906738281
    5. '```' → logprob: -14.262641906738281
    6. '.g' → logprob: -14.637641906738281
    7. '   ' → logprob: -14.762641906738281
    8. '.' → logprob: -15.012641906738281
    9. 'g' → logprob: -15.637641906738281
    10. '       ' → logprob: -15.762641906738281

Token 711: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010831133840838447
    2. '(i' → logprob: -9.50010871887207
    3. 'p' → logprob: -10.75010871887207
    4. ' i' → logprob: -11.62510871887207
    5. 'g' → logprob: -13.62510871887207
    6. '   ' → logprob: -14.25010871887207
    7. 'c' → logprob: -14.25010871887207
    8. '```' → logprob: -15.62510871887207
    9. '[i' → logprob: -16.00010871887207
    10. '	i' → logprob: -16.37510871887207

Token 712: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43605837225914
    2. ')
' → logprob: -1.0610584020614624
    3. ')+' → logprob: -5.186058521270752
    4. ')<=' → logprob: -7.436058521270752
    5. ')<' → logprob: -7.686058521270752
    6. ')==' → logprob: -8.436058044433594
    7. ' )' → logprob: -9.311058044433594
    8. ')-' → logprob: -9.561058044433594
    9. ')
' → logprob: -9.811058044433594
    10. ' )
' → logprob: -9.811058044433594

Token 713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0067363339476287365
    2. ' if' → logprob: -5.3817362785339355
    3. '<|end|>' → logprob: -6.5067362785339355
    4. 'if' → logprob: -8.506736755371094
    5. ',' → logprob: -8.881736755371094
    6. '	' → logprob: -9.881736755371094
    7. '   ' → logprob: -10.506736755371094
    8. '<|end|>' → logprob: -10.631736755371094
    9. '
' → logprob: -10.881736755371094
    10. ' ' → logprob: -11.131736755371094

Token 714: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0018449827330186963
    2. ' if' → logprob: -6.626844882965088
    3. '       ' → logprob: -7.626844882965088
    4. '   ' → logprob: -11.001845359802246
    5. '	if' → logprob: -12.001845359802246
    6. '```' → logprob: -12.001845359802246
    7. 'while' → logprob: -14.001845359802246
    8. 'If' → logprob: -14.626845359802246
    9. 'diff' → logprob: -14.751845359802246
    10. 'd' → logprob: -14.876845359802246

Token 715: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00041935223271138966
    2. 'dp' → logprob: -8.125419616699219
    3. 'x' → logprob: -10.000419616699219
    4. 'p' → logprob: -10.125419616699219
    5. 'c' → logprob: -10.500419616699219
    6. ' g' → logprob: -13.000419616699219
    7. '0' → logprob: -13.375419616699219
    8. 'i' → logprob: -13.750419616699219
    9. 'd' → logprob: -14.000419616699219
    10. '(g' → logprob: -14.125419616699219

Token 716: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.32820338010787964
    2. '==' → logprob: -1.3282034397125244
    3. '!=' → logprob: -4.953203201293945
    4. '+' → logprob: -5.203203201293945
    5. ' ==' → logprob: -7.203203201293945
    6. '<=' → logprob: -7.703203201293945
    7. ' <' → logprob: -8.078203201293945
    8. '<i' → logprob: -8.328203201293945
    9. 'i' → logprob: -9.078203201293945
    10. '```' → logprob: -9.203203201293945

Token 717: ' INF' (ID: 69196)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017489612801000476
    2. 'c' → logprob: -6.376749038696289
    3. 'dp' → logprob: -10.126749038696289
    4. ' x' → logprob: -12.001749038696289
    5. '(x' → logprob: -14.626749038696289
    6. 'p' → logprob: -16.12674903869629
    7. '0' → logprob: -16.50174903869629
    8. ' c' → logprob: -17.50174903869629
    9. 'g' → logprob: -18.00174903869629
    10. 'd' → logprob: -18.00174903869629

Token 718: ':' (ID: 25)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10304314643144608
    2. 'or' → logprob: -2.3530430793762207
    3. '           ' → logprob: -6.728043079376221
    4. ':' → logprob: -6.728043079376221
    5. '       ' → logprob: -8.353043556213379
    6. ' and' → logprob: -9.853043556213379
    7. ' ' → logprob: -9.853043556213379
    8. ':
' → logprob: -10.603043556213379
    9. '        ' → logprob: -11.228043556213379
    10. '	or' → logprob: -11.228043556213379

Token 719: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6371322870254517
    2. ' continue' → logprob: -1.1371322870254517
    3. '       ' → logprob: -2.012132167816162
    4. '	continue' → logprob: -4.887132167816162
    5. '           ' → logprob: -5.012132167816162
    6. '   ' → logprob: -6.137132167816162
    7. '	' → logprob: -9.26213264465332
    8. '	   ' → logprob: -10.01213264465332
    9. '_continue' → logprob: -10.01213264465332
    10. ' ' → logprob: -10.13713264465332

Token 720: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039878119714558125
    2. ' if' → logprob: -6.128987789154053
    3. '<|end|>' → logprob: -6.753987789154053
    4. 'if' → logprob: -8.253988265991211
    5. '   ' → logprob: -9.878988265991211
    6. ' ' → logprob: -10.003988265991211
    7. ',' → logprob: -10.003988265991211
    8. ')' → logprob: -10.003988265991211
    9. '```' → logprob: -10.128988265991211
    10. '	' → logprob: -10.628988265991211

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006715370807796717
    2. 'if' → logprob: -5.631715297698975
    3. ' if' → logprob: -6.006715297698975
    4. '<|end|>' → logprob: -7.631715297698975
    5. '   ' → logprob: -10.756715774536133
    6. '	' → logprob: -10.881715774536133
    7. '```' → logprob: -11.006715774536133
    8. ')' → logprob: -11.131715774536133
    9. ' ' → logprob: -11.256715774536133
    10. '	if' → logprob: -11.631715774536133

Token 722: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3546937108039856
    2. '       ' → logprob: -1.2296936511993408
    3. ' if' → logprob: -5.10469388961792
    4. '   ' → logprob: -9.604693412780762
    5. '```' → logprob: -10.854693412780762
    6. '           ' → logprob: -10.979693412780762
    7. '	if' → logprob: -11.104693412780762
    8. 'diff' → logprob: -11.729693412780762
    9. 'If' → logprob: -11.979693412780762
    10. 'd' → logprob: -11.979693412780762

Token 723: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0020736483857035637
    2. 'dp' → logprob: -6.627073764801025
    3. 'x' → logprob: -8.377073287963867
    4. 'c' → logprob: -8.627073287963867
    5. ' g' → logprob: -8.627073287963867
    6. 'p' → logprob: -8.877073287963867
    7. 'd' → logprob: -12.252073287963867
    8. 'ret' → logprob: -13.002073287963867
    9. 'i' → logprob: -13.127073287963867
    10. '(g' → logprob: -13.377073287963867

Token 724: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.320911705493927
    2. '==' → logprob: -1.5709116458892822
    3. ' <' → logprob: -3.1959116458892822
    4. ' ==' → logprob: -3.6959116458892822
    5. '+' → logprob: -7.695911884307861
    6. '<p' → logprob: -8.445911407470703
    7. '<=' → logprob: -9.195911407470703
    8. ' +' → logprob: -10.695911407470703
    9. '!=' → logprob: -11.445911407470703
    10. '<n' → logprob: -11.445911407470703

Token 725: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006442630663514137
    2. 'c' → logprob: -5.131442546844482
    3. 'dp' → logprob: -8.50644302368164
    4. 'INF' → logprob: -8.50644302368164
    5. ' x' → logprob: -10.00644302368164
    6. 'p' → logprob: -10.00644302368164
    7. '-' → logprob: -12.25644302368164
    8. '0' → logprob: -12.38144302368164
    9. '
' → logprob: -13.50644302368164
    10. 'None' → logprob: -14.00644302368164

Token 726: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.024234425276517868
    2. 'and' → logprob: -4.274234294891357
    3. ':' → logprob: -4.774234294891357
    4. '-' → logprob: -7.524234294891357
    5. '+' → logprob: -8.024234771728516
    6. ':
' → logprob: -8.149234771728516
    7. '       ' → logprob: -9.149234771728516
    8. '           ' → logprob: -9.399234771728516
    9. ' ' → logprob: -9.524234771728516
    10. ' -' → logprob: -10.024234771728516

Token 727: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0242808498442173
    2. 'ret' → logprob: -4.149281024932861
    3. ' ret' → logprob: -5.024281024932861
    4. '       ' → logprob: -7.024281024932861
    5. ' if' → logprob: -8.274280548095703
    6. '```' → logprob: -9.024280548095703
    7. '               ' → logprob: -10.024280548095703
    8. ',' → logprob: -10.024280548095703
    9. 'continue' → logprob: -10.024280548095703
    10. 'if' → logprob: -10.399280548095703

Token 728: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.7946315407752991
    2. ' ret' → logprob: -0.9196315407752991
    3. '           ' → logprob: -1.9196314811706543
    4. 'continue' → logprob: -7.169631481170654
    5. ' continue' → logprob: -7.294631481170654
    6. ' if' → logprob: -8.044631958007812
    7. '       ' → logprob: -8.169631958007812
    8. 'if' → logprob: -8.419631958007812
    9. '   ' → logprob: -8.919631958007812
    10. '	ret' → logprob: -9.669631958007812

Token 729: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002765902318060398
    2. '.' → logprob: -8.250276565551758
    3. ' .' → logprob: -11.375276565551758
    4. '.app' → logprob: -13.375276565551758
    5. '.ap' → logprob: -13.625276565551758
    6. '.extend' → logprob: -14.250276565551758
    7. '.push' → logprob: -16.250276565551758
    8. '.add' → logprob: -16.375276565551758
    9. '   ' → logprob: -16.625276565551758
    10. '       ' → logprob: -16.750276565551758

Token 730: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01027362048625946
    2. ' i' → logprob: -4.760273456573486
    3. 'str' → logprob: -7.135273456573486
    4. '(i' → logprob: -7.260273456573486
    5. ' str' → logprob: -9.510273933410645
    6. '   ' → logprob: -9.760273933410645
    7. '`' → logprob: -12.385273933410645
    8. '(str' → logprob: -12.385273933410645
    9. ' (' → logprob: -12.385273933410645
    10. '(' → logprob: -12.760273933410645

Token 731: '-c' (ID: 3452)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5861911177635193
    2. '-' → logprob: -0.8361911177635193
    3. '-p' → logprob: -4.586191177368164
    4. '   ' → logprob: -13.086191177368164
    5. '-
' → logprob: -13.211191177368164
    6. '           ' → logprob: -14.336191177368164
    7. 'p' → logprob: -14.461191177368164
    8. ' ' → logprob: -14.586191177368164
    9. ')' → logprob: -14.836191177368164
    10. ',' → logprob: -15.086191177368164

Token 732: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29354649782180786
    2. ' -' → logprob: -1.418546438217163
    3. '-c' → logprob: -4.668546676635742
    4. ')' → logprob: -6.293546676635742
    5. '-p' → logprob: -7.043546676635742
    6. ')-' → logprob: -10.293546676635742
    7. '"-' → logprob: -10.293546676635742
    8. '-i' → logprob: -10.668546676635742
    9. ''-' → logprob: -11.043546676635742
    10. '+' → logprob: -11.168546676635742

Token 733: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08166621625423431
    2. 'c' → logprob: -2.5816662311553955
    3. ' c' → logprob: -6.956665992736816
    4. '
' → logprob: -7.331665992736816
    5. '          ' → logprob: -8.706665992736816
    6. '       ' → logprob: -8.706665992736816
    7. '```' → logprob: -8.706665992736816
    8. '		' → logprob: -9.081665992736816
    9. '               ' → logprob: -9.331665992736816
    10. 'x' → logprob: -9.456665992736816

Token 734: ' p' (ID: 275)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12869858741760254
    2. 'x' → logprob: -2.1286985874176025
    3. '           ' → logprob: -6.378698348999023
    4. ' c' → logprob: -10.253698348999023
    5. '
' → logprob: -10.628698348999023
    6. ' x' → logprob: -11.628698348999023
    7. '       ' → logprob: -13.378698348999023
    8. '```' → logprob: -14.628698348999023
    9. '               ' → logprob: -15.503698348999023
    10. '          ' → logprob: -15.503698348999023

Token 735: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002203070791438222
    2. ' =' → logprob: -6.252202987670898
    3. '=c' → logprob: -8.752202987670898
    4. '=p' → logprob: -9.627202987670898
    5. '=i' → logprob: -10.377202987670898
    6. ',' → logprob: -11.002202987670898
    7. 'c' → logprob: -14.127202987670898
    8. '+=' → logprob: -14.877202987670898
    9. '=
' → logprob: -15.127202987670898
    10. '=a' → logprob: -15.502202987670898

Token 736: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006142667261883616
    2. 'x' → logprob: -7.875614166259766
    3. ' c' → logprob: -8.375614166259766
    4. 'i' → logprob: -13.000614166259766
    5. '   ' → logprob: -14.250614166259766
    6. '       ' → logprob: -15.375614166259766
    7. ' x' → logprob: -15.375614166259766
    8. '           ' → logprob: -16.000614166259766
    9. '     ' → logprob: -16.375614166259766
    10. '    ' → logprob: -16.625614166259766

Token 737: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001217813478433527
    2. ' =' → logprob: -9.2501220703125
    3. '=i' → logprob: -10.6251220703125
    4. '=p' → logprob: -14.2501220703125
    5. ',' → logprob: -15.7501220703125
    6. '=n' → logprob: -16.1251220703125
    7. '=c' → logprob: -16.1251220703125
    8. '=k' → logprob: -16.2501220703125
    9. '＝' → logprob: -17.3751220703125
    10. '=user' → logprob: -17.5001220703125

Token 738: ' c' (ID: 274)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008296238258481026
    2. 'p' → logprob: -5.008296012878418
    3. ' i' → logprob: -6.633296012878418
    4. 'c' → logprob: -9.133296012878418
    5. 'x' → logprob: -9.758296012878418
    6. 'g' → logprob: -10.258296012878418
    7. '   ' → logprob: -10.258296012878418
    8. ' p' → logprob: -11.008296012878418
    9. '     ' → logprob: -13.258296012878418
    10. ' ' → logprob: -13.258296012878418

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20350836217403412
    2. 'i' → logprob: -2.3285083770751953
    3. ',i' → logprob: -2.9535083770751953
    4. ' i' → logprob: -4.328508377075195
    5. '=i' → logprob: -4.453508377075195
    6. '=' → logprob: -4.953508377075195
    7. ' ,' → logprob: -7.078508377075195
    8. '+' → logprob: -7.578508377075195
    9. ' =' → logprob: -7.578508377075195
    10. ',p' → logprob: -8.828508377075195

Token 740: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.15310683415737e-05
    2. ' i' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.87502098083496
    4. '	i' → logprob: -18.75002098083496
    5. 'p' → logprob: -19.50002098083496
    6. '  ' → logprob: -19.87502098083496
    7. ' ' → logprob: -20.62502098083496
    8. '`' → logprob: -20.87502098083496
    9. 'x' → logprob: -21.00002098083496
    10. '```' → logprob: -21.00002098083496

Token 741: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026678077410906553
    2. 'x' → logprob: -6.5026679039001465
    3. ',' → logprob: -7.1276679039001465
    4. '<|end|>' → logprob: -9.502667427062988
    5. '          ' → logprob: -9.627667427062988
    6. ' x' → logprob: -9.877667427062988
    7. '       ' → logprob: -10.127667427062988
    8. ',x' → logprob: -10.752667427062988
    9. ';' → logprob: -11.002667427062988
    10. '   ' → logprob: -11.252667427062988

Token 742: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002656989498063922
    2. 'x' → logprob: -6.377656936645508
    3. '       ' → logprob: -7.377656936645508
    4. '   ' → logprob: -8.252656936645508
    5. '```' → logprob: -10.752656936645508
    6. ' x' → logprob: -11.127656936645508
    7. 'if' → logprob: -12.252656936645508
    8. 'print' → logprob: -12.252656936645508
    9. '          ' → logprob: -12.502656936645508
    10. '<|end|>' → logprob: -12.627656936645508

Token 743: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.000527534110005945
    2. ' x' → logprob: -8.250527381896973
    3. '           ' → logprob: -8.250527381896973
    4. '       ' → logprob: -13.375527381896973
    5. '   ' → logprob: -14.000527381896973
    6. '	x' → logprob: -14.750527381896973
    7. '0' → logprob: -15.125527381896973
    8. '```' → logprob: -15.250527381896973
    9. '         ' → logprob: -15.375527381896973
    10. '               ' → logprob: -15.625527381896973

Token 744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04866105690598488
    2. '-=' → logprob: -3.04866099357605
    3. ' =' → logprob: -9.798661231994629
    4. ' -=' → logprob: -11.298661231994629
    5. '=g' → logprob: -12.923661231994629
    6. '-' → logprob: -13.423661231994629
    7. '+=' → logprob: -13.923661231994629
    8. '=

' → logprob: -14.798661231994629
    9. '.=' → logprob: -15.173661231994629
    10. '＝' → logprob: -16.173660278320312

Token 745: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.981667537620524e-06
    2. 'dp' → logprob: -13.250001907348633
    3. ' g' → logprob: -15.875001907348633
    4. 'x' → logprob: -18.375001907348633
    5. '	g' → logprob: -19.500001907348633
    6. 'gp' → logprob: -19.625001907348633
    7. '```' → logprob: -19.750001907348633
    8. '
' → logprob: -20.125001907348633
    9. ' ' → logprob: -20.250001907348633
    10. 'gs' → logprob: -20.500001907348633

Token 746: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08542311191558838
    2. '<|end|>' → logprob: -2.585422992706299
    3. '       ' → logprob: -5.460422992706299
    4. '
' → logprob: -7.085422992706299
    5. ')' → logprob: -7.835422992706299
    6. '<|end|>' → logprob: -8.085423469543457
    7. '[' → logprob: -8.585423469543457
    8. '```' → logprob: -9.085423469543457
    9. '#' → logprob: -10.085423469543457
    10. '    ' → logprob: -10.085423469543457

Token 747: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016079887747764587
    2. '<|end|>' → logprob: -5.141079902648926
    3. 'return' → logprob: -5.266079902648926
    4. ' return' → logprob: -7.016079902648926
    5. 'if' → logprob: -7.516079902648926
    6. '       ' → logprob: -7.641079902648926
    7. 'for' → logprob: -7.641079902648926
    8. 'while' → logprob: -7.766079902648926
    9. 'print' → logprob: -8.016079902648926
    10. ' if' → logprob: -8.141079902648926

Token 748: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011830137111246586
    2. ' return' → logprob: -5.5118303298950195
    3. '   ' → logprob: -5.7618303298950195
    4. 'if' → logprob: -6.2618303298950195
    5. 'for' → logprob: -7.1368303298950195
    6. '<|end|>' → logprob: -7.1368303298950195
    7. '```' → logprob: -7.8868303298950195
    8. 'while' → logprob: -8.76183032989502
    9. 'ret' → logprob: -9.13683032989502
    10. ' if' → logprob: -9.26183032989502

Token 749: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.004997378680855036
    2. '('' → logprob: -5.629997253417969
    3. '("' → logprob: -6.629997253417969
    4. ''' → logprob: -10.254997253417969
    5. '(len' → logprob: -11.254997253417969
    6. '(' → logprob: -11.379997253417969
    7. '"' → logprob: -11.629997253417969
    8. '*' → logprob: -12.879997253417969
    9. '(*)' → logprob: -13.129997253417969
    10. '(*(' → logprob: -13.254997253417969

Token 750: 'ret' (ID: 3431)
  Prédit: 'ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.3856492842023727e-06
    2. ' ret' → logprob: -13.750000953674316
    3. '(ret' → logprob: -15.500000953674316
    4. '$ret' → logprob: -21.375001907348633
    5. 'rets' → logprob: -22.000001907348633
    6. '	ret' → logprob: -22.000001907348633
    7. 're' → logprob: -22.750001907348633
    8. '-ret' → logprob: -22.875001907348633
    9. 'retro' → logprob: -23.125001907348633
    10. '_ret' → logprob: -24.625001907348633

Token 751: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.500108141452074e-05
    2. ')
' → logprob: -10.625035285949707
    3. ' )' → logprob: -11.500035285949707
    4. '```' → logprob: -16.37503433227539
    5. '<|end|>' → logprob: -16.62503433227539
    6. '())' → logprob: -16.75003433227539
    7. ')#' → logprob: -17.00003433227539
    8. '),' → logprob: -17.25003433227539
    9. '   ' → logprob: -17.25003433227539
    10. '()' → logprob: -17.37503433227539

Token 752: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 753: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 751
Tokens correctement prédits (1ère position, stricte): 295
Tokens correctement prédits (1ère position, avec adaptation): 319
Tokens correctement prédits (top 10): 633
Précision stricte (1ère position): 39.28%
Précision adaptée (1ère position): 42.48%
Précision (top 10): 84.29%
================================================================================
