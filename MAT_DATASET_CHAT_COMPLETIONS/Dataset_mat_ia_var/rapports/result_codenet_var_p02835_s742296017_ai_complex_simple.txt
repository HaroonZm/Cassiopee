================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import functools
import operator
import sys

lst = list(map(lambda x: int(x), sys.stdin.read().split()))
result = functools.reduce(operator.add, lst)
print(('win','bust')[operator.ge(result,22)])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.1424973713001236e-05
    2. '.​' → logprob: -12.125031471252441
    3. '.def' → logprob: -12.375031471252441
    4. 'def' → logprob: -12.750031471252441
    5. '\.' → logprob: -13.000031471252441
    6. '\' → logprob: -13.125031471252441
    7. '(' → logprob: -13.250031471252441
    8. '.

' → logprob: -13.750031471252441
    9. '​.' → logprob: -13.875031471252441
    10. '```' → logprob: -13.875031471252441

Token 4: ' operator' (ID: 11019)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.031583476811647415
    2. ' operator' → logprob: -4.156583309173584
    3. ' sys' → logprob: -4.406583309173584
    4. 'os' → logprob: -6.906583309173584
    5. ' math' → logprob: -7.031583309173584
    6. ' itertools' → logprob: -7.531583309173584
    7. 'operator' → logprob: -8.156583786010742
    8. ' collections' → logprob: -8.281583786010742
    9. ' json' → logprob: -8.656583786010742
    10. ' typing' → logprob: -10.531583786010742

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00027611342375166714
    2. '\' → logprob: -9.125276565551758
    3. '.
' → logprob: -10.250276565551758
    4. '```' → logprob: -10.750276565551758
    5. ',' → logprob: -11.250276565551758
    6. 'def' → logprob: -11.625276565551758
    7. 'as' → logprob: -11.750276565551758
    8. '(' → logprob: -12.000276565551758
    9. '\.' → logprob: -12.000276565551758
    10. ' as' → logprob: -12.250276565551758

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007553085451945662
    2. '.
' → logprob: -8.500755310058594
    3. 'def' → logprob: -8.500755310058594
    4. '\' → logprob: -9.875755310058594
    5. ',' → logprob: -10.000755310058594
    6. '```' → logprob: -10.375755310058594
    7. '(' → logprob: -10.625755310058594
    8. '[' → logprob: -10.625755310058594
    9. '.

' → logprob: -10.875755310058594
    10. '_' → logprob: -11.125755310058594

Token 7: ' sys' (ID: 12228)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.29860612750053406
    2. ' math' → logprob: -1.7986061573028564
    3. ' os' → logprob: -3.0486061573028564
    4. ' collections' → logprob: -3.9236061573028564
    5. ' sys' → logprob: -4.673605918884277
    6. 'math' → logprob: -4.923605918884277
    7. 'os' → logprob: -5.798605918884277
    8. ' re' → logprob: -6.173605918884277
    9. 'collections' → logprob: -6.298605918884277
    10. 'it' → logprob: -7.798605918884277

Token 8: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02204929105937481
    2. ',' → logprob: -4.647049427032471
    3. '\n' → logprob: -5.522049427032471
    4. '\' → logprob: -6.272049427032471
    5. '```' → logprob: -6.897049427032471
    6. '.
' → logprob: -7.022049427032471
    7. ';' → logprob: -7.397049427032471
    8. '#' → logprob: -7.647049427032471
    9. 'import' → logprob: -7.647049427032471
    10. '<|end|>' → logprob: -7.647049427032471

Token 9: 'lst' (ID: 65430)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14788514375686646
    2. ',' → logprob: -3.1478850841522217
    3. 'def' → logprob: -3.2728850841522217
    4. '=' → logprob: -3.6478850841522217
    5. '[' → logprob: -5.022885322570801
    6. '#' → logprob: -5.272885322570801
    7. '_' → logprob: -5.772885322570801
    8. ';' → logprob: -5.772885322570801
    9. '*' → logprob: -6.022885322570801
    10. '-' → logprob: -6.647885322570801

Token 10: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1443711668252945
    2. '.' → logprob: -2.019371271133423
    3. '=' → logprob: -7.269371032714844
    4. '[:]' → logprob: -8.144371032714844
    5. ' =' → logprob: -8.269371032714844
    6. '[]' → logprob: -8.644371032714844
    7. '_' → logprob: -9.394371032714844
    8. ')' → logprob: -10.019371032714844
    9. 's' → logprob: -10.519371032714844
    10. '(' → logprob: -10.769371032714844

Token 11: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1654241979122162
    2. ' []' → logprob: -2.165424108505249
    3. '[' → logprob: -3.540424108505249
    4. '[]' → logprob: -4.915424346923828
    5. ' list' → logprob: -7.540424346923828
    6. 'list' → logprob: -7.790424346923828
    7. ' ['' → logprob: -8.665424346923828
    8. ' ' → logprob: -9.915424346923828
    9. 'range' → logprob: -9.915424346923828
    10. '[int' → logprob: -10.165424346923828

Token 12: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1620045006275177
    2. '(map' → logprob: -2.2870044708251953
    3. '(filter' → logprob: -3.9120044708251953
    4. '(range' → logprob: -3.9120044708251953
    5. '(operator' → logprob: -5.412004470825195
    6. '(it' → logprob: -7.662004470825195
    7. '(chain' → logprob: -7.912004470825195
    8. '(sys' → logprob: -8.162004470825195
    9. '.' → logprob: -8.162004470825195
    10. '(f' → logprob: -8.412004470825195

Token 13: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6851907968521118
    2. '(' → logprob: -1.0601907968521118
    3. '(operator' → logprob: -2.4351906776428223
    4. '(lambda' → logprob: -3.4351906776428223
    5. '(str' → logprob: -3.5601906776428223
    6. '(f' → logprob: -7.810190677642822
    7. '(eval' → logprob: -8.18519115447998
    8. '(ord' → logprob: -8.68519115447998
    9. '(len' → logprob: -8.93519115447998
    10. '(op' → logprob: -9.56019115447998

Token 14: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.18195044994354248
    2. 'x' → logprob: -2.431950569152832
    3. ' ' → logprob: -2.806950569152832
    4. ' operator' → logprob: -4.556950569152832
    5. ' s' → logprob: -6.056950569152832
    6. 's' → logprob: -6.806950569152832
    7. ' lambda' → logprob: -7.181950569152832
    8. ' int' → logprob: -7.431950569152832
    9. 'operator' → logprob: -7.806950569152832
    10. ' a' → logprob: -8.306950569152832

Token 15: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02314298413693905
    2. ' :' → logprob: -4.1481428146362305
    3. ',' → logprob: -5.6481428146362305
    4. ':int' → logprob: -6.2731428146362305
    5. ' x' → logprob: -6.8981428146362305
    6. 'x' → logprob: -8.39814281463623
    7. ':x' → logprob: -8.89814281463623
    8. ' ,' → logprob: -9.02314281463623
    9. ',int' → logprob: -10.02314281463623
    10. ' ' → logprob: -11.02314281463623

Token 16: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6594616174697876
    2. ' x' → logprob: -1.4094616174697876
    3. 'int' → logprob: -1.9094616174697876
    4. 'x' → logprob: -2.534461498260498
    5. ' operator' → logprob: -4.909461498260498
    6. 'operator' → logprob: -6.534461498260498
    7. ' sys' → logprob: -7.159461498260498
    8. ' ' → logprob: -8.284461975097656
    9. ' ord' → logprob: -8.284461975097656
    10. 'sys' → logprob: -8.909461975097656

Token 17: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006043266039341688
    2. '(' → logprob: -5.131043434143066
    3. '(sys' → logprob: -9.256043434143066
    4. 'x' → logprob: -11.381043434143066
    5. ')' → logprob: -12.506043434143066
    6. ' (' → logprob: -14.381043434143066
    7. '(
' → logprob: -14.506043434143066
    8. '(s' → logprob: -14.506043434143066
    9. '(operator' → logprob: -14.506043434143066
    10. ')x' → logprob: -15.131043434143066

Token 18: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04670935124158859
    2. ')' → logprob: -3.2967092990875244
    3. ',' → logprob: -5.2967095375061035
    4. '(sys' → logprob: -6.7967095375061035
    5. ')))' → logprob: -7.4217095375061035
    6. 'sys' → logprob: -7.4217095375061035
    7. ' ),' → logprob: -7.7967095375061035
    8. ' ' → logprob: -7.9217095375061035
    9. '(x' → logprob: -8.796709060668945
    10. ' sys' → logprob: -9.796709060668945

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.02976403571665287
    2. 'sys' → logprob: -3.52976393699646
    3. '(sys' → logprob: -11.904764175415039
    4. ' input' → logprob: -12.904764175415039
    5. '=sys' → logprob: -13.279764175415039
    6. '	sys' → logprob: -13.654764175415039
    7. 'input' → logprob: -13.904764175415039
    8. ' ' → logprob: -15.154764175415039
    9. ' ' → logprob: -15.529764175415039
    10. '   ' → logprob: -17.90476417541504

Token 20: '.stdin' (ID: 93480)
  Prédit: '.argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.argv' → logprob: -0.7014471292495728
    2. '.stdin' → logprob: -0.7014471292495728
    3. '.' → logprob: -4.826447010040283
    4. ' .' → logprob: -8.826447486877441
    5. '.stdout' → logprob: -9.326447486877441
    6. '.readline' → logprob: -12.201447486877441
    7. '.stderr' → logprob: -12.701447486877441
    8. '.std' → logprob: -12.701447486877441
    9. '.input' → logprob: -13.951447486877441
    10. 'argv' → logprob: -15.076447486877441

Token 21: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.05042914301156998
    2. '.' → logprob: -3.675429105758667
    3. '.read' → logprob: -3.800429105758667
    4. '.readlines' → logprob: -6.550429344177246
    5. ')' → logprob: -10.800429344177246
    6. ' .' → logprob: -11.300429344177246
    7. '))' → logprob: -11.800429344177246
    8. ')))' → logprob: -12.550429344177246
    9. ').' → logprob: -13.675429344177246
    10. '.Read' → logprob: -13.675429344177246

Token 22: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07634162157773972
    2. '().' → logprob: -3.3263416290283203
    3. '()' → logprob: -3.5763416290283203
    4. '())' → logprob: -4.95134162902832
    5. '(' → logprob: -6.45134162902832
    6. '))' → logprob: -7.95134162902832
    7. '()));' → logprob: -8.45134162902832
    8. '())))' → logprob: -8.57634162902832
    9. ')' → logprob: -9.95134162902832
    10. '()))

' → logprob: -11.20134162902832

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.038080740720033646
    2. 'strip' → logprob: -3.2880806922912598
    3. ' split' → logprob: -10.788081169128418
    4. 'rstrip' → logprob: -11.038081169128418
    5. 'replace' → logprob: -14.163081169128418
    6. '```' → logprob: -14.413081169128418
    7. ' strip' → logprob: -14.538081169128418
    8. 'decode' → logprob: -14.663081169128418
    9. '(split' → logprob: -15.413081169128418
    10. ')' → logprob: -15.788081169128418

Token 24: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2570318877696991
    2. '())' → logprob: -2.1320319175720215
    3. '('' → logprob: -3.2570319175720215
    4. '()' → logprob: -3.2570319175720215
    5. '(' → logprob: -3.5070319175720215
    6. '())))' → logprob: -7.5070319175720215
    7. '()))
' → logprob: -8.882031440734863
    8. '("' → logprob: -9.632031440734863
    9. '()));' → logprob: -9.757031440734863
    10. '(','' → logprob: -9.757031440734863

Token 25: 'result' (ID: 2521)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4938671588897705
    2. ')' → logprob: -0.9938671588897705
    3. '[
' → logprob: -4.993866920471191
    4. '[::-' → logprob: -5.993866920471191
    5. '+' → logprob: -6.118866920471191
    6. '.' → logprob: -6.118866920471191
    7. ')
' → logprob: -7.493866920471191
    8. '\n' → logprob: -7.493866920471191
    9. '\' → logprob: -7.618866920471191
    10. '
' → logprob: -8.243866920471191

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11437129229307175
    2. '=' → logprob: -2.2393712997436523
    3. ' ' → logprob: -7.364371299743652
    4. '[' → logprob: -7.614371299743652
    5. '_' → logprob: -8.739371299743652
    6. '.' → logprob: -9.239371299743652
    7. '[:]' → logprob: -9.864371299743652
    8. ' =[' → logprob: -11.114371299743652
    9. ' =)' → logprob: -11.489371299743652
    10. '=[]' → logprob: -11.489371299743652

Token 27: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.026580214500427246
    2. 'fun' → logprob: -3.651580333709717
    3. ' fun' → logprob: -8.401579856872559
    4. ' ' → logprob: -10.776579856872559
    5. ' list' → logprob: -11.651579856872559
    6. ' f' → logprob: -12.276579856872559
    7. 'sum' → logprob: -12.526579856872559
    8. 'f' → logprob: -12.901579856872559
    9. 'list' → logprob: -12.901579856872559
    10. ' sum' → logprob: -13.151579856872559

Token 28: '.reduce' (ID: 49441)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.432213693857193
    2. '.reduce' → logprob: -1.0572136640548706
    3. '.chain' → logprob: -6.30721378326416
    4. '.groupby' → logprob: -7.68221378326416
    5. ' .' → logprob: -8.43221378326416
    6. '.partial' → logprob: -8.43221378326416
    7. '.operator' → logprob: -8.68221378326416
    8. '.acc' → logprob: -9.68221378326416
    9. '.comp' → logprob: -9.93221378326416
    10. '.sum' → logprob: -10.18221378326416

Token 29: '(operator' (ID: 145734)
  Prédit: '(operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.0067448546178638935
    2. '(' → logprob: -5.006744861602783
    3. '(lambda' → logprob: -10.756744384765625
    4. '(f' → logprob: -12.131744384765625
    5. '(op' → logprob: -14.006744384765625
    6. 'operator' → logprob: -14.506744384765625
    7. '(fun' → logprob: -14.881744384765625
    8. '(operation' → logprob: -15.256744384765625
    9. '```' → logprob: -15.256744384765625
    10. ' (' → logprob: -15.381744384765625

Token 30: '.add' (ID: 1950)
  Prédit: '.mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mul' → logprob: -0.7376787662506104
    2. '.add' → logprob: -1.2376787662506104
    3. '.' → logprob: -1.4876787662506104
    4. ' .' → logprob: -6.237678527832031
    5. '.i' → logprob: -6.237678527832031
    6. '.pow' → logprob: -7.987678527832031
    7. '.multiply' → logprob: -8.362678527832031
    8. '.im' → logprob: -8.612678527832031
    9. '.mult' → logprob: -8.987678527832031
    10. '.x' → logprob: -8.987678527832031

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.864272967912257e-05
    2. ' ,' → logprob: -9.750088691711426
    3. ',l' → logprob: -10.500088691711426
    4. ',
' → logprob: -14.250088691711426
    5. ')' → logprob: -14.625088691711426
    6. ',list' → logprob: -15.250088691711426
    7. 'lst' → logprob: -15.500088691711426
    8. ',ll' → logprob: -15.750088691711426
    9. ',

' → logprob: -15.875088691711426
    10. ',List' → logprob: -16.25008773803711

Token 32: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.06197306513786316
    2. 'lst' → logprob: -2.8119730949401855
    3. '(lst' → logprob: -12.561972618103027
    4. '_lst' → logprob: -13.936972618103027
    5. ' ls' → logprob: -14.561972618103027
    6. '.lst' → logprob: -15.186972618103027
    7. ')' → logprob: -16.311973571777344
    8. ' ' → logprob: -16.561973571777344
    9. 'Lst' → logprob: -16.811973571777344
    10. 'list' → logprob: -17.061973571777344

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001462107611587271
    2. '))' → logprob: -9.12514591217041
    3. ' )' → logprob: -10.50014591217041
    4. ')))' → logprob: -12.25014591217041
    5. ',' → logprob: -12.62514591217041
    6. '[' → logprob: -14.87514591217041
    7. ',)' → logprob: -15.12514591217041
    8. ')`' → logprob: -15.37514591217041
    9. ')
' → logprob: -15.50014591217041
    10. ']' → logprob: -16.375146865844727

Token 34: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4515700042247772
    2. ')' → logprob: -1.5765700340270996
    3. '<|end|>' → logprob: -2.0765700340270996
    4. '\n' → logprob: -4.3265700340271
    5. '
' → logprob: -4.9515700340271
    6. '```' → logprob: -5.2015700340271
    7. '#' → logprob: -5.8265700340271
    8. '+' → logprob: -7.8265700340271
    9. '\' → logprob: -8.326569557189941
    10. '<|end|>' → logprob: -8.826569557189941

Token 35: '(('' (ID: 122195)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4740866422653198
    2. '(result' → logprob: -0.9740866422653198
    3. ' (' → logprob: -12.84908676147461
    4. '()' → logprob: -13.34908676147461
    5. '((' → logprob: -14.47408676147461
    6. '(res' → logprob: -14.47408676147461
    7. '(results' → logprob: -14.59908676147461
    8. '(sum' → logprob: -14.72408676147461
    9. ')' → logprob: -14.97408676147461
    10. '('' → logprob: -14.97408676147461

Token 36: 'win' (ID: 11668)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.031769294291734695
    2. '{}' → logprob: -4.406769275665283
    3. '{' → logprob: -5.031769275665283
    4. '(result' → logprob: -5.531769275665283
    5. ''),' → logprob: -6.156769275665283
    6. ''))' → logprob: -6.156769275665283
    7. '',' → logprob: -6.406769275665283
    8. ' result' → logprob: -7.031769275665283
    9. '('' → logprob: -7.531769275665283
    10. ''' → logprob: -7.656769275665283

Token 37: '','' (ID: 4074)
  Prédit: 'ner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.261307954788208
    2. 'ning' → logprob: -2.011307954788208
    3. ''))' → logprob: -3.136307954788208
    4. ''' → logprob: -4.011307716369629
    5. '','' → logprob: -4.761307716369629
    6. '',' → logprob: -5.011307716369629
    7. ' '' → logprob: -5.886307716369629
    8. ',' → logprob: -6.386307716369629
    9. '"' → logprob: -6.511307716369629
    10. '))' → logprob: -6.636307716369629

Token 38: 'b' (ID: 65)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.27969133853912354
    2. 'lose' → logprob: -1.5296913385391235
    3. 'loss' → logprob: -4.654691219329834
    4. '','' → logprob: -4.904691219329834
    5. ' '' → logprob: -5.904691219329834
    6. ' lose' → logprob: -6.029691219329834
    7. ''d' → logprob: -6.779691219329834
    8. '',' → logprob: -7.029691219329834
    9. ''l' → logprob: -7.154691219329834
    10. 'fail' → logprob: -7.279691219329834

Token 39: 'ust' (ID: 570)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5906631350517273
    2. 'reak' → logprob: -1.340663194656372
    3. 'ust' → logprob: -2.590663194656372
    4. 'lose' → logprob: -3.965663194656372
    5. ''r' → logprob: -3.965663194656372
    6. ''s' → logprob: -5.090662956237793
    7. ''n' → logprob: -5.090662956237793
    8. ''t' → logprob: -5.215662956237793
    9. ''e' → logprob: -5.215662956237793
    10. ''re' → logprob: -5.590662956237793

Token 40: '')[' (ID: 28534)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.8112235069274902
    2. '')[' → logprob: -0.8112235069274902
    3. '')' → logprob: -2.3112235069274902
    4. ')' → logprob: -4.68622350692749
    5. ')[' → logprob: -6.93622350692749
    6. '))' → logprob: -7.56122350692749
    7. ''' → logprob: -7.56122350692749
    8. '','' → logprob: -7.93622350692749
    9. '')))' → logprob: -8.436223983764648
    10. '',' → logprob: -9.186223983764648

Token 41: 'operator' (ID: 15184)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.010012354701757431
    2. ' result' → logprob: -4.635012149810791
    3. '(result' → logprob: -9.38501262664795
    4. 'not' → logprob: -9.51001262664795
    5. 'len' → logprob: -9.88501262664795
    6. ' not' → logprob: -11.13501262664795
    7. 'any' → logprob: -12.26001262664795
    8. ' ' → logprob: -12.26001262664795
    9. '0' → logprob: -13.13501262664795
    10. ')' → logprob: -13.26001262664795

Token 42: '.ge' (ID: 24062)
  Prédit: '.gt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.gt' → logprob: -0.5744267106056213
    2. '.ge' → logprob: -1.9494266510009766
    3. '.eq' → logprob: -2.3244266510009766
    4. '.add' → logprob: -2.3244266510009766
    5. '.contains' → logprob: -2.8244266510009766
    6. '.lt' → logprob: -4.074426651000977
    7. '.le' → logprob: -5.449426651000977
    8. '.get' → logprob: -5.574426651000977
    9. '.ne' → logprob: -5.824426651000977
    10. '.is' → logprob: -5.949426651000977

Token 43: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -9.829823102336377e-05
    2. '](' → logprob: -10.12509822845459
    3. '(' → logprob: -10.75009822845459
    4. ' (' → logprob: -10.87509822845459
    5. 'result' → logprob: -11.75009822845459
    6. ')(' → logprob: -13.12509822845459
    7. '(len' → logprob: -13.62509822845459
    8. ',result' → logprob: -13.62509822845459
    9. '(sum' → logprob: -13.75009822845459
    10. '(res' → logprob: -13.75009822845459

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5838135480880737
    2. '(' → logprob: -0.8338135480880737
    3. ',(' → logprob: -5.583813667297363
    4. ' (' → logprob: -6.708813667297363
    5. ')(' → logprob: -7.208813667297363
    6. ' ,' → logprob: -7.333813667297363
    7. ')' → logprob: -8.458813667297363
    8. '(len' → logprob: -8.958813667297363
    9. ',len' → logprob: -9.458813667297363
    10. '10' → logprob: -9.583813667297363

Token 45: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.01849593035876751
    2. '21' → logprob: -4.268496036529541
    3. ' ' → logprob: -6.393496036529541
    4. '23' → logprob: -6.893496036529541
    5. '5' → logprob: -8.018495559692383
    6. '100' → logprob: -8.143495559692383
    7. '20' → logprob: -9.018495559692383
    8. '10' → logprob: -9.268495559692383
    9. '25' → logprob: -9.518495559692383
    10. '24' → logprob: -9.518495559692383

Token 46: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.006010683253407478
    2. ')' → logprob: -5.25601053237915
    3. ')]' → logprob: -7.75601053237915
    4. '())' → logprob: -8.881011009216309
    5. ')])
' → logprob: -9.006011009216309
    6. ')])

' → logprob: -10.131011009216309
    7. ' )' → logprob: -10.756011009216309
    8. '])' → logprob: -11.506011009216309
    9. '()' → logprob: -12.881011009216309
    10. '(' → logprob: -13.006011009216309


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 44
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 34
Précision stricte (1ère position): 38.64%
Précision adaptée (1ère position): 38.64%
Précision (top 10): 77.27%
================================================================================
