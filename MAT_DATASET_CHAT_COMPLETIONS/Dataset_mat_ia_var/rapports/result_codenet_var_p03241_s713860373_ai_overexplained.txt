================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math  # Importe le module math qui fournit des fonctions mathématiques telles que sqrt (racine carrée)

# Lit une ligne du standard input (par défaut, le clavier), sépare les valeurs par des espaces, convertit chaque valeur en entier, puis assigne le premier à N et le second à M
N, M = map(int, input().split())

A = []  # Initialise une liste vide appelée A qui contiendra certains diviseurs de M

# Commence une boucle for dont la variable de boucle i commence à 1 et va jusqu'à la racine carrée de M incluse (int(math.sqrt(M)) + 1)
for i in range(1, int(math.sqrt(M)) + 1):
    if M % i == 0:  # Vérifie si i est un diviseur de M ; c'est-à-dire que M divisé par i n'a pas de reste
        if M // i >= N:  # Vérifie si le diviseur correspondant (M / i arrondi à l'entier inférieur) est supérieur ou égal à N
            A.append(i)  # Ajoute le diviseur i à la liste A
            if i >= N and M // i > i:  # Vérifie si i lui-même est supérieur ou égal à N et si l'autre diviseur (M // i) est strictement supérieur à i
                A.append(M // i)  # Ajoute ce second diviseur à la liste A

# Trie la liste A en place par ordre croissant (du plus petit au plus grand)
A.sort()

ans = A[-1]  # Récupère le plus grand élément de la liste A (c’est-à-dire le dernier après tri), et l’assigne à la variable ans

print(ans)  # Affiche la valeur de la variable ans (c’est la solution finale)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0020640187431126833
    2. '\' → logprob: -7.002064228057861
    3. '\n' → logprob: -7.627064228057861
    4. '```' → logprob: -8.127063751220703
    5. '(' → logprob: -8.752063751220703
    6. 'import' → logprob: -9.752063751220703
    7. '<|end|>' → logprob: -10.377063751220703
    8. ',' → logprob: -10.752063751220703
    9. '[' → logprob: -11.127063751220703
    10. '#' → logprob: -11.627063751220703

Token 4: ' Im' (ID: 3133)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5391530990600586
    2. ' ' → logprob: -1.1641530990600586
    3. ' .' → logprob: -3.6641530990600586
    4. '_' → logprob: -4.164153099060059
    5. '.sqrt' → logprob: -4.289153099060059
    6. 'import' → logprob: -4.539153099060059
    7. ',' → logprob: -5.039153099060059
    8. ' import' → logprob: -5.164153099060059
    9. ' math' → logprob: -5.414153099060059
    10. ' ,' → logprob: -6.289153099060059

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.0032241756562143564
    2. 'p' → logprob: -5.7532243728637695
    3. 'ported' → logprob: -11.37822437286377
    4. 'por' → logprob: -11.75322437286377
    5. 'porter' → logprob: -12.12822437286377
    6. 'ports' → logprob: -12.37822437286377
    7. 'plement' → logprob: -12.50322437286377
    8. ' ' → logprob: -13.00322437286377
    9. ' port' → logprob: -13.00322437286377
    10. 'po' → logprob: -13.62822437286377

Token 6: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15878024697303772
    2. ' ' → logprob: -2.408780336380005
    3. 's' → logprob: -3.283780336380005
    4. 'd' → logprob: -4.908780097961426
    5. ' r' → logprob: -5.533780097961426
    6. '.' → logprob: -6.033780097961426
    7. 'n' → logprob: -6.658780097961426
    8. 'nt' → logprob: -7.158780097961426
    9. 'm' → logprob: -7.408780097961426
    10. ''s' → logprob: -8.033780097961426

Token 7: ' module' (ID: 8827)
  Prédit: ' module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' module' → logprob: -0.04786728322505951
    2. 'module' → logprob: -3.6728672981262207
    3. 's' → logprob: -4.922867298126221
    4. ' logarith' → logprob: -5.922867298126221
    5. ' math' → logprob: -6.172867298126221
    6. 'mod' → logprob: -7.172867298126221
    7. '```' → logprob: -7.297867298126221
    8. 'log' → logprob: -7.297867298126221
    9. 'pi' → logprob: -7.422867298126221
    10. 'e' → logprob: -7.547867298126221

Token 8: ' math' (ID: 13324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02136256918311119
    2. 'as' → logprob: -5.521362781524658
    3. 'import' → logprob: -5.896362781524658
    4. ',' → logprob: -6.021362781524658
    5. ' as' → logprob: -6.396362781524658
    6. 'a' → logprob: -6.646362781524658
    7. '```' → logprob: -6.646362781524658
    8. ' ' → logprob: -6.771362781524658
    9. '\' → logprob: -7.146362781524658
    10. ''s' → logprob: -7.271362781524658

Token 9: ' qui' (ID: 2780)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018632952123880386
    2. 'import' → logprob: -5.143632888793945
    3. '\' → logprob: -6.143632888793945
    4. '\n' → logprob: -6.268632888793945
    5. '
' → logprob: -6.518632888793945
    6. '```' → logprob: -6.893632888793945
    7. '' → logprob: -7.018632888793945
    8. ',' → logprob: -7.268632888793945
    9. '<|end|>' → logprob: -7.643632888793945
    10. '#' → logprob: -7.768632888793945

Token 10: ' fournit' (ID: 123615)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17531995475292206
    2. ' fournit' → logprob: -2.9253199100494385
    3. ' contient' → logprob: -3.0503199100494385
    4. ' .' → logprob: -4.175320148468018
    5. ' permet' → logprob: -4.175320148468018
    6. '.' → logprob: -4.300320148468018
    7. ' calc' → logprob: -6.050320148468018
    8. ' contains' → logprob: -6.300320148468018
    9. ' s' → logprob: -6.425320148468018
    10. ' provides' → logprob: -6.550320148468018

Token 11: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5915680527687073
    2. 's' → logprob: -1.0915679931640625
    3. ' ' → logprob: -2.4665679931640625
    4. 'des' → logprob: -4.9665679931640625
    5. ' les' → logprob: -5.3415679931640625
    6. '.' → logprob: -5.3415679931640625
    7. ' s' → logprob: -6.3415679931640625
    8. ''s' → logprob: -6.7165679931640625
    9. '```' → logprob: -6.8415679931640625
    10. '_' → logprob: -6.8415679931640625

Token 12: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.1242932379245758
    2. ' fonctionnalités' → logprob: -2.874293327331543
    3. 'fon' → logprob: -3.749293327331543
    4. ' ' → logprob: -3.749293327331543
    5. 'fonction' → logprob: -4.749293327331543
    6. '   ' → logprob: -6.624293327331543
    7. ' fonction' → logprob: -7.124293327331543
    8. 'f' → logprob: -7.249293327331543
    9. '  ' → logprob: -7.624293327331543
    10. ' ' → logprob: -8.874293327331543

Token 13: ' math' (ID: 13324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4306008815765381
    2. ',' → logprob: -2.430600881576538
    3. 'import' → logprob: -2.430600881576538
    4. ' ' → logprob: -2.555600881576538
    5. 'es' → logprob: -3.805600881576538
    6. '```' → logprob: -3.805600881576538
    7. 's' → logprob: -4.180601119995117
    8. ' et' → logprob: -5.555601119995117
    9. ' supplémentaires' → logprob: -5.805601119995117
    10. '  ' → logprob: -5.805601119995117

Token 14: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.0010056582977995276
    2. 'ématique' → logprob: -7.00100564956665
    3. 'ém' → logprob: -10.001006126403809
    4. 'é' → logprob: -10.376006126403809
    5. 'étiques' → logprob: -11.626006126403809
    6. '```' → logprob: -12.751006126403809
    7. '.' → logprob: -13.126006126403809
    8. 'éma' → logprob: -13.751006126403809
    9. 'èm' → logprob: -14.876006126403809
    10. ' é' → logprob: -15.001006126403809

Token 15: ' telles' (ID: 83154)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6581840515136719
    2. '\' → logprob: -1.9081840515136719
    3. '
' → logprob: -2.283184051513672
    4. '\n' → logprob: -2.783184051513672
    5. 'import' → logprob: -3.158184051513672
    6. '

' → logprob: -3.283184051513672
    7. ' ' → logprob: -3.283184051513672
    8. ',' → logprob: -3.783184051513672
    9. '' → logprob: -5.158184051513672
    10. '<|end|>' → logprob: -5.158184051513672

Token 16: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.5094050765037537
    2. ' ' → logprob: -1.1344051361083984
    3. 'que' → logprob: -2.7594051361083984
    4. 'ques' → logprob: -5.509405136108398
    5. ' qu' → logprob: -5.884405136108398
    6. '```' → logprob: -6.134405136108398
    7. 'qu' → logprob: -6.634405136108398
    8. ' ```' → logprob: -6.884405136108398
    9. '  ' → logprob: -7.384405136108398
    10. ' quelles' → logprob: -7.884405136108398

Token 17: ' sqrt' (ID: 44237)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.13759806752204895
    2. '.' → logprob: -3.5125980377197266
    3. '.sin' → logprob: -3.5125980377197266
    4. '.pow' → logprob: -3.7625980377197266
    5. '.pi' → logprob: -4.262598037719727
    6. ''s' → logprob: -5.262598037719727
    7. '.factor' → logprob: -5.512598037719727
    8. '.exp' → logprob: -5.512598037719727
    9. 'sqrt' → logprob: -5.887598037719727
    10. '.log' → logprob: -6.012598037719727

Token 18: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0283243656158447
    2. '
' → logprob: -1.2783243656158447
    3. '\n' → logprob: -2.0283243656158447
    4. '

' → logprob: -2.7783243656158447
    5. '.' → logprob: -2.9033243656158447
    6. '\' → logprob: -2.9033243656158447
    7. 'import' → logprob: -4.028324127197266
    8. '' → logprob: -4.278324127197266
    9. ',' → logprob: -4.778324127197266
    10. '
' → logprob: -4.903324127197266

Token 19: 'rac' (ID: 78549)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020669952500611544
    2. '(' → logprob: -7.3770670890808105
    3. '()' → logprob: -7.8770670890808105
    4. '),' → logprob: -7.8770670890808105
    5. ',' → logprob: -8.127066612243652
    6. ' )' → logprob: -9.002066612243652
    7. ').' → logprob: -9.502066612243652
    8. ' pour' → logprob: -10.002066612243652
    9. '())' → logprob: -11.127066612243652
    10. '```' → logprob: -11.127066612243652

Token 20: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.015196999534964561
    2. 'c' → logprob: -5.890196800231934
    3. 't' → logprob: -5.890196800231934
    4. '```' → logprob: -5.890196800231934
    5. '2' → logprob: -6.765196800231934
    6. 'i' → logprob: -6.890196800231934
    7. '√' → logprob: -7.140196800231934
    8. 'ïne' → logprob: -7.390196800231934
    9. '²' → logprob: -7.640196800231934
    10. 'ines' → logprob: -8.515196800231934

Token 21: ' carr' (ID: 18321)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6654502749443054
    2. ')' → logprob: -1.1654503345489502
    3. '_' → logprob: -2.29045033454895
    4. '```' → logprob: -3.66545033454895
    5. '(' → logprob: -4.540450096130371
    6. '-p' → logprob: -4.665450096130371
    7. '`' → logprob: -4.790450096130371
    8. '`)' → logprob: -6.165450096130371
    9. ')**' → logprob: -6.165450096130371
    10. '**' → logprob: -6.290450096130371

Token 22: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00831692572683096
    2. 'è' → logprob: -6.133316993713379
    3. '```' → logprob: -6.133316993713379
    4. 'és' → logprob: -6.883316993713379
    5. 'ê' → logprob: -7.508316993713379
    6. '�' → logprob: -8.133316993713379
    7. 'e' → logprob: -8.258316993713379
    8. 'ée' → logprob: -8.383316993713379
    9. '²' → logprob: -8.633316993713379
    10. '`' → logprob: -8.633316993713379

Token 23: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000600572966504842
    2. '(' → logprob: -8.125600814819336
    3. '()' → logprob: -8.750600814819336
    4. ',' → logprob: -9.625600814819336
    5. ' )' → logprob: -10.375600814819336
    6. 'e' → logprob: -11.625600814819336
    7. ').' → logprob: -12.125600814819336
    8. '),' → logprob: -12.125600814819336
    9. '`)' → logprob: -12.375600814819336
    10. '```' → logprob: -12.875600814819336

Token 24: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4365808367729187
    2. '\n' → logprob: -1.9365808963775635
    3. '

' → logprob: -2.5615808963775635
    4. '' → logprob: -3.4365808963775635
    5. '\' → logprob: -3.8115808963775635
    6. ',' → logprob: -3.9365808963775635
    7. '#' → logprob: -4.436580657958984
    8. '```' → logprob: -4.561580657958984
    9. 'import' → logprob: -4.811580657958984
    10. ' ' → logprob: -5.186580657958984

Token 25: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5485317707061768
    2. ' def' → logprob: -1.6735317707061768
    3. '#' → logprob: -2.2985317707061768
    4. 'd' → logprob: -3.7985317707061768
    5. ' #' → logprob: -3.9235317707061768
    6. ' Cal' → logprob: -4.298531532287598
    7. 'Calcul' → logprob: -4.548531532287598
    8. ' Calcul' → logprob: -4.673531532287598
    9. ' d' → logprob: -4.798531532287598
    10. ' ' → logprob: -5.048531532287598

Token 26: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009418165311217308
    2. '()' → logprob: -6.00941801071167
    3. ' ()' → logprob: -6.75941801071167
    4. ' a' → logprob: -7.00941801071167
    5. ' une' → logprob: -7.25941801071167
    6. ' la' → logprob: -7.63441801071167
    7. 's' → logprob: -7.75941801071167
    8. ' le' → logprob: -8.009418487548828
    9. ' =' → logprob: -8.009418487548828
    10. ' )' → logprob: -8.134418487548828

Token 27: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.8958302140235901
    2. ' ' → logprob: -1.5208301544189453
    3. ' valeur' → logprob: -1.7708301544189453
    4. ' ligne' → logprob: -2.1458301544189453
    5. 'ligne' → logprob: -3.7708301544189453
    6. ' phrase' → logprob: -3.8958301544189453
    7. 'chaine' → logprob: -4.645830154418945
    8. 'entrée' → logprob: -4.770830154418945
    9. 'val' → logprob: -5.270830154418945
    10. ' chaine' → logprob: -5.645830154418945

Token 28: ' du' (ID: 1462)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6968755125999451
    2. ' =' → logprob: -1.0718755722045898
    3. '=input' → logprob: -2.69687557220459
    4. 's' → logprob: -3.32187557220459
    5. ' input' → logprob: -3.94687557220459
    6. '()' → logprob: -5.19687557220459
    7. 'de' → logprob: -5.19687557220459
    8. ' ' → logprob: -5.32187557220459
    9. '=' → logprob: -5.57187557220459
    10. '_input' → logprob: -5.82187557220459

Token 29: ' standard' (ID: 7024)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.014104620553553104
    2. ' fichier' → logprob: -4.389104843139648
    3. ' f' → logprob: -7.264104843139648
    4. 'code' → logprob: -7.514104843139648
    5. 'stdin' → logprob: -9.639104843139648
    6. ' code' → logprob: -9.764104843139648
    7. 'input' → logprob: -10.014104843139648
    8. 'texte' → logprob: -10.389104843139648
    9. 'flux' → logprob: -10.514104843139648
    10. 's' → logprob: -10.889104843139648

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0638108178973198
    2. ' input' → logprob: -2.9388108253479004
    3. 'e' → logprob: -5.3138108253479
    4. 's' → logprob: -6.8138108253479
    5. '_' → logprob: -7.6888108253479
    6. 'import' → logprob: -7.9388108253479
    7. 'd' → logprob: -8.063810348510742
    8. 'n' → logprob: -8.188810348510742
    9. 'a' → logprob: -8.438810348510742
    10. '(input' → logprob: -8.813810348510742

Token 31: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3354644775390625
    2. 'x' → logprob: -1.4604644775390625
    3. 'i' → logprob: -1.7104644775390625
    4. 'input' → logprob: -2.5854644775390625
    5. '\' → logprob: -2.7104644775390625
    6. '#' → logprob: -3.4604644775390625
    7. 'l' → logprob: -3.4604644775390625
    8. 's' → logprob: -3.8354644775390625
    9. '_' → logprob: -4.3354644775390625
    10. ',' → logprob: -4.5854644775390625

Token 32: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041174618527293205
    2. 'input' → logprob: -6.629117488861084
    3. '),' → logprob: -7.129117488861084
    4. '`)' → logprob: -7.754117488861084
    5. ' )' → logprob: -7.879117488861084
    6. 'n' → logprob: -9.004117012023926
    7. '#' → logprob: -9.129117012023926
    8. 'stdin' → logprob: -9.379117012023926
    9. '")' → logprob: -9.629117012023926
    10. '')' → logprob: -9.754117012023926

Token 33: ' défaut' (ID: 79375)
  Prédit: ' défaut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' défaut' → logprob: -0.3594633936882019
    2. ' def' → logprob: -2.6094634532928467
    3. ' exemple' → logprob: -2.6094634532928467
    4. 'def' → logprob: -2.9844634532928467
    5. 'default' → logprob: -4.234463214874268
    6. ' default' → logprob: -4.484463214874268
    7. 'ex' → logprob: -4.484463214874268
    8. 'd' → logprob: -4.609463214874268
    9. 'dé' → logprob: -4.734463214874268
    10. 'e' → logprob: -5.359463214874268

Token 34: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011252476833760738
    2. ' )' → logprob: -5.511252403259277
    3. '),' → logprob: -5.511252403259277
    4. ',' → logprob: -6.636252403259277
    5. '()' → logprob: -6.636252403259277
    6. ' pour' → logprob: -8.761252403259277
    7. ' par' → logprob: -10.511252403259277
    8. ').' → logprob: -10.636252403259277
    9. ' de' → logprob: -10.636252403259277
    10. ' en' → logprob: -10.636252403259277

Token 35: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9958475828170776
    2. ' input' → logprob: -1.2458475828170776
    3. ' )' → logprob: -2.245847702026367
    4. ' l' → logprob: -2.745847702026367
    5. 'input' → logprob: -2.995847702026367
    6. ' la' → logprob: -3.245847702026367
    7. ' stdin' → logprob: -3.870847702026367
    8. ' une' → logprob: -4.245847702026367
    9. 'stdin' → logprob: -4.745847702026367
    10. 'le' → logprob: -4.745847702026367

Token 36: ' clavier' (ID: 187878)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.892250120639801
    2. 'f' → logprob: -1.2672500610351562
    3. 's' → logprob: -2.5172500610351562
    4. ' utilisateur' → logprob: -3.0172500610351562
    5. 'util' → logprob: -3.1422500610351562
    6. ')' → logprob: -3.5172500610351562
    7. 't' → logprob: -4.017250061035156
    8. 'user' → logprob: -4.142250061035156
    9. 'use' → logprob: -4.517250061035156
    10. ' clavier' → logprob: -4.642250061035156

Token 37: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009069374646060169
    2. ',' → logprob: -8.375906944274902
    3. ' )' → logprob: -8.500906944274902
    4. '#' → logprob: -9.125906944274902
    5. '`)' → logprob: -9.500906944274902
    6. ')
' → logprob: -9.625906944274902
    7. 'e' → logprob: -9.750906944274902
    8. '')' → logprob: -9.750906944274902
    9. '),' → logprob: -10.500906944274902
    10. '")' → logprob: -11.125906944274902

Token 38: ' sé' (ID: 7462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00839743297547102
    2. 's' → logprob: -5.883397579193115
    3. ' input' → logprob: -6.508397579193115
    4. ' et' → logprob: -7.383397579193115
    5. ',' → logprob: -8.008397102355957
    6. ' puis' → logprob: -8.133397102355957
    7. ' ' → logprob: -8.133397102355957
    8. 't' → logprob: -8.633397102355957
    9. ' a' → logprob: -8.633397102355957
    10. ' )' → logprob: -8.758397102355957

Token 39: 'pare' (ID: 6900)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1183078289031982
    2. 'lec' → logprob: -1.3683078289031982
    3. 'u' → logprob: -2.4933078289031982
    4. 'lection' → logprob: -2.4933078289031982
    5. 'ur' → logprob: -2.8683078289031982
    6. 't' → logprob: -3.4933078289031982
    7. 'pare' → logprob: -3.7433078289031982
    8. 'le' → logprob: -4.118308067321777
    9. 'pa' → logprob: -4.368308067321777
    10. 'par' → logprob: -4.493308067321777

Token 40: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.977515459060669
    2. '()' → logprob: -1.352515459060669
    3. ' la' → logprob: -1.602515459060669
    4. ' les' → logprob: -2.227515459060669
    5. 'les' → logprob: -3.852515459060669
    6. 'le' → logprob: -4.85251522064209
    7. ' le' → logprob: -5.10251522064209
    8. ' en' → logprob: -5.35251522064209
    9. 'l' → logprob: -5.85251522064209
    10. 'au' → logprob: -6.22751522064209

Token 41: ' valeurs' (ID: 73668)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3974508047103882
    2. 'tokens' → logprob: -2.6474509239196777
    3. 'élé' → logprob: -2.7724509239196777
    4. ' mots' → logprob: -2.7724509239196777
    5. 'val' → logprob: -3.5224509239196777
    6. 'entrée' → logprob: -3.7724509239196777
    7. 'chaine' → logprob: -4.022450923919678
    8. ' tokens' → logprob: -4.772450923919678
    9. ' chaînes' → logprob: -5.022450923919678
    10. 'input' → logprob: -5.147450923919678

Token 42: ' par' (ID: 686)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1988903284072876
    2. ' =' → logprob: -1.8238903284072876
    3. 's' → logprob: -2.073890209197998
    4. ' par' → logprob: -2.323890209197998
    5. '()' → logprob: -2.448890209197998
    6. ' input' → logprob: -3.073890209197998
    7. 'par' → logprob: -3.323890209197998
    8. ' ' → logprob: -3.323890209197998
    9. '(input' → logprob: -4.198890209197998
    10. '=input' → logprob: -4.323890209197998

Token 43: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.311264991760254
    2. 'space' → logprob: -2.311264991760254
    3. 'des' → logprob: -2.311264991760254
    4. ' espace' → logprob: -2.311264991760254
    5. 'es' → logprob: -2.686264991760254
    6. ' ' → logprob: -2.686264991760254
    7. ' espaces' → logprob: -2.936264991760254
    8. 'spaces' → logprob: -3.436264991760254
    9. 'une' → logprob: -3.561264991760254
    10. 'input' → logprob: -4.061264991760254

Token 44: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.9515894055366516
    2. 'es' → logprob: -1.0765893459320068
    3. ' espaces' → logprob: -1.7015893459320068
    4. ' ' → logprob: -3.326589345932007
    5. 'spaces' → logprob: -4.076589584350586
    6. ' espace' → logprob: -4.701589584350586
    7. ''espace' → logprob: -4.951589584350586
    8. 'space' → logprob: -5.326589584350586
    9. ',' → logprob: -5.326589584350586
    10. ''esp' → logprob: -5.826589584350586

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1840406656265259
    2. 'values' → logprob: -1.6840406656265259
    3. 'input' → logprob: -1.6840406656265259
    4. 's' → logprob: -2.8090405464172363
    5. 'val' → logprob: -3.1840405464172363
    6. 'vals' → logprob: -3.4340405464172363
    7. 'tokens' → logprob: -3.4340405464172363
    8. 'line' → logprob: -3.5590405464172363
    9. ' line' → logprob: -3.8090405464172363
    10. 'ligne' → logprob: -4.184040546417236

Token 46: ' convert' (ID: 8452)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9998143911361694
    2. 'et' → logprob: -1.2498143911361694
    3. ' puis' → logprob: -1.4998143911361694
    4. ' et' → logprob: -3.249814510345459
    5. ' les' → logprob: -3.374814510345459
    6. 'les' → logprob: -4.624814510345459
    7. ' convert' → logprob: -5.374814510345459
    8. ' transforme' → logprob: -5.374814510345459
    9. 'convert' → logprob: -5.499814510345459
    10. 'split' → logprob: -5.749814510345459

Token 47: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0004984631086699665
    2. ' it' → logprob: -8.00049877166748
    3. 'i' → logprob: -9.00049877166748
    4. 'ies' → logprob: -11.00049877166748
    5. 't' → logprob: -12.12549877166748
    6. 'e' → logprob: -12.62549877166748
    7. 'et' → logprob: -12.87549877166748
    8. 'issant' → logprob: -13.00049877166748
    9. 'ie' → logprob: -13.12549877166748
    10. '#' → logprob: -13.37549877166748

Token 48: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9988235831260681
    2. ' chaque' → logprob: -1.623823642730713
    3. ' les' → logprob: -1.873823642730713
    4. ' en' → logprob: -1.998823642730713
    5. 'les' → logprob: -3.123823642730713
    6. ' ' → logprob: -3.123823642730713
    7. 'la' → logprob: -3.498823642730713
    8. ' chacune' → logprob: -4.873823642730713
    9. 'cha' → logprob: -5.498823642730713
    10. 'l' → logprob: -5.748823642730713

Token 49: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8325705528259277
    2. 'int' → logprob: -1.5825705528259277
    3. 'élé' → logprob: -1.8325705528259277
    4. ' ' → logprob: -2.8325705528259277
    5. ' token' → logprob: -3.5825705528259277
    6. 'token' → logprob: -3.7075705528259277
    7. 'str' → logprob: -4.082570552825928
    8. 'entrée' → logprob: -4.082570552825928
    9. ' val' → logprob: -4.957570552825928
    10. ' valeur' → logprob: -5.082570552825928

Token 50: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0019299437990412116
    2. 'en' → logprob: -6.376929759979248
    3. ' ' → logprob: -8.626930236816406
    4. 's' → logprob: -10.626930236816406
    5. ' in' → logprob: -12.126930236816406
    6. '_en' → logprob: -12.876930236816406
    7. ' à' → logprob: -13.126930236816406
    8. ''en' → logprob: -13.251930236816406
    9. '```' → logprob: -13.251930236816406
    10. ',' → logprob: -13.501930236816406

Token 51: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2724887430667877
    2. ' int' → logprob: -2.022488832473755
    3. ' float' → logprob: -3.022488832473755
    4. 'ent' → logprob: -3.647488832473755
    5. 'float' → logprob: -3.647488832473755
    6. ' ent' → logprob: -6.022488594055176
    7. ' entier' → logprob: -6.522488594055176
    8. 'flo' → logprob: -7.522488594055176
    9. ' des' → logprob: -8.272488594055176
    10. ' un' → logprob: -8.647488594055176

Token 52: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6642612218856812
    2. 'x' → logprob: -1.4142612218856812
    3. 'a' → logprob: -2.2892613410949707
    4. 'numbers' → logprob: -2.6642613410949707
    5. 's' → logprob: -3.9142613410949707
    6. 'i' → logprob: -4.539261341094971
    7. 'values' → logprob: -4.789261341094971
    8. 'l' → logprob: -5.039261341094971
    9. ' numbers' → logprob: -5.539261341094971
    10. ':' → logprob: -6.164261341094971

Token 53: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.7900630235671997
    2. ' et' → logprob: -1.4150630235671997
    3. ' and' → logprob: -2.54006290435791
    4. ' ' → logprob: -3.54006290435791
    5. ' lst' → logprob: -3.54006290435791
    6. 'et' → logprob: -3.66506290435791
    7. ' input' → logprob: -3.91506290435791
    8. 'values' → logprob: -4.54006290435791
    9. 's' → logprob: -4.66506290435791
    10. ' liste' → logprob: -4.66506290435791

Token 54: ' ass' (ID: 1680)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7811858057975769
    2. ' stock' → logprob: -1.1561858654022217
    3. ' crée' → logprob: -2.2811858654022217
    4. ' calc' → logprob: -3.2811858654022217
    5. 'les' → logprob: -3.4061858654022217
    6. 'stock' → logprob: -3.5311858654022217
    7. 'cal' → logprob: -4.781185626983643
    8. 's' → logprob: -6.031185626983643
    9. ' met' → logprob: -6.281185626983643
    10. ' affect' → logprob: -6.531185626983643

Token 55: 'igne' (ID: 24120)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.6499645709991455
    2. 'ign' → logprob: -1.0249645709991455
    3. 'igne' → logprob: -2.5249645709991455
    4. 'ig' → logprob: -3.7749645709991455
    5. 'e' → logprob: -5.899964332580566
    6. '#' → logprob: -6.024964332580566
    7. '```' → logprob: -6.024964332580566
    8. 'er' → logprob: -6.399964332580566
    9. 'i' → logprob: -6.524964332580566
    10. 'ing' → logprob: -7.024964332580566

Token 56: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2458772361278534
    2. '_' → logprob: -2.495877265930176
    3. ' la' → logprob: -3.120877265930176
    4. ' a' → logprob: -3.495877265930176
    5. ' les' → logprob: -3.745877265930176
    6. 's' → logprob: -4.870877265930176
    7. ' à' → logprob: -5.245877265930176
    8. ' them' → logprob: -5.370877265930176
    9. '(' → logprob: -5.495877265930176
    10. ' variables' → logprob: -6.370877265930176

Token 57: ' premier' (ID: 15506)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.1473208665847778
    2. 's' → logprob: -1.5223208665847778
    3. 'result' → logprob: -2.0223207473754883
    4. ' input' → logprob: -2.2723207473754883
    5. '_' → logprob: -3.0223207473754883
    6. ' ' → logprob: -3.7723207473754883
    7. ' résultat' → logprob: -3.8973207473754883
    8. ' nombres' → logprob: -4.022320747375488
    9. ' a' → logprob: -4.522320747375488
    10. 'input' → logprob: -4.647320747375488

Token 58: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20877407491207123
    2. ' ' → logprob: -1.8337740898132324
    3. ' _' → logprob: -4.583774089813232
    4. 'e' → logprob: -5.708774089813232
    5. 's' → logprob: -6.083774089813232
    6. ',' → logprob: -6.458774089813232
    7. '_token' → logprob: -6.833774089813232
    8. 'n' → logprob: -7.333774089813232
    9. 'i' → logprob: -7.333774089813232
    10. ' ,' → logprob: -7.458774089813232

Token 59: ' N' (ID: 478)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2015891075134277
    2. 'a' → logprob: -1.3265891075134277
    3. 'n' → logprob: -1.7015891075134277
    4. ' x' → logprob: -2.5765891075134277
    5. ' n' → logprob: -2.8265891075134277
    6. ' a' → logprob: -2.8265891075134277
    7. 'distance' → logprob: -3.9515891075134277
    8. ' distance' → logprob: -4.326589107513428
    9. ' `' → logprob: -5.326589107513428
    10. '`' → logprob: -5.451589107513428

Token 60: ' et' (ID: 859)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16872401535511017
    2. 'n' → logprob: -2.1687240600585938
    3. 's' → logprob: -4.543724060058594
    4. '
' → logprob: -4.668724060058594
    5. ',' → logprob: -5.043724060058594
    6. ' =' → logprob: -5.418724060058594
    7. '=' → logprob: -5.543724060058594
    8. ' N' → logprob: -6.293724060058594
    9. '\n' → logprob: -6.543724060058594
    10. 'x' → logprob: -7.793724060058594

Token 61: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6637481451034546
    2. 'le' → logprob: -0.9137481451034546
    3. '_' → logprob: -2.663748264312744
    4. ' ' → logprob: -5.413748264312744
    5. 'l' → logprob: -5.538748264312744
    6. '_le' → logprob: -6.038748264312744
    7. 's' → logprob: -7.663748264312744
    8. 'n' → logprob: -7.788748264312744
    9. ' the' → logprob: -7.913748264312744
    10. ' _' → logprob: -8.038747787475586

Token 62: ' second' (ID: 3099)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8406263589859009
    2. ' second' → logprob: -1.2156263589859009
    3. 'second' → logprob: -1.5906263589859009
    4. 's' → logprob: -3.0906262397766113
    5. ' deuxième' → logprob: -4.215626239776611
    6. ' ' → logprob: -5.965626239776611
    7. '=' → logprob: -6.215626239776611
    8. '_second' → logprob: -6.715626239776611
    9. ' suivant' → logprob: -7.465626239776611
    10. '_' → logprob: -7.715626239776611

Token 63: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.45167359709739685
    2. 'à' → logprob: -1.2016736268997192
    3. ' ' → logprob: -2.9516735076904297
    4. 'a' → logprob: -5.32667350769043
    5. 'to' → logprob: -6.57667350769043
    6. ' to' → logprob: -6.57667350769043
    7. ''à' → logprob: -6.70167350769043
    8. 'au' → logprob: -8.20167350769043
    9. ' a' → logprob: -8.32667350769043
    10. ',' → logprob: -8.45167350769043

Token 64: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.1827690601348877
    2. 'K' → logprob: -1.4327690601348877
    3. ' M' → logprob: -1.4327690601348877
    4. ' K' → logprob: -1.8077690601348877
    5. 'D' → logprob: -4.807768821716309
    6. 'x' → logprob: -4.932768821716309
    7. 'k' → logprob: -5.682768821716309
    8. 'R' → logprob: -5.807768821716309
    9. 'X' → logprob: -5.807768821716309
    10. 'd' → logprob: -5.932768821716309

Token 65: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0415097177028656
    2. '
' → logprob: -3.4165096282958984
    3. 'n' → logprob: -6.041509628295898
    4. ',' → logprob: -6.416509628295898
    5. '\n' → logprob: -6.666509628295898
    6. 's' → logprob: -7.291509628295898
    7. '```' → logprob: -7.791509628295898
    8. 'x' → logprob: -8.166509628295898
    9. '[' → logprob: -8.791509628295898
    10. '#' → logprob: -9.041509628295898

Token 66: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.7689099018462e-05
    2. 'n' → logprob: -10.25008773803711
    3. '```' → logprob: -11.25008773803711
    4. '\n' → logprob: -11.50008773803711
    5. ' N' → logprob: -11.87508773803711
    6. ',' → logprob: -12.25008773803711
    7. '#' → logprob: -12.37508773803711
    8. '
' → logprob: -12.75008773803711
    9. '[' → logprob: -12.75008773803711
    10. 'x' → logprob: -13.00008773803711

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.073596548754722e-05
    2. ' ,' → logprob: -10.25005054473877
    3. ',M' → logprob: -11.12505054473877
    4. ',N' → logprob: -15.62505054473877
    5. ',m' → logprob: -16.250051498413086
    6. ',
' → logprob: -16.375051498413086
    7. ',

' → logprob: -17.250051498413086
    8. '，' → logprob: -18.250051498413086
    9. '‌,' → logprob: -18.250051498413086
    10. ',\
' → logprob: -18.375051498413086

Token 68: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.18184292316436768
    2. 'M' → logprob: -1.8068429231643677
    3. ' ' → logprob: -6.181842803955078
    4. '  ' → logprob: -11.431842803955078
    5. '=' → logprob: -11.806842803955078
    6. 'space' → logprob: -12.931842803955078
    7. ' =' → logprob: -12.931842803955078
    8. '<|end|>' → logprob: -13.306842803955078
    9. '    ' → logprob: -13.931842803955078
    10. ' ' → logprob: -14.744342803955078

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489052087068558
    2. '=' → logprob: -2.9298906326293945
    3. ',' → logprob: -12.179890632629395
    4. '=input' → logprob: -13.554890632629395
    5. ' =
' → logprob: -14.929890632629395
    6. ' ' → logprob: -14.929890632629395
    7. '=int' → logprob: -15.054890632629395
    8. ' ' → logprob: -15.429890632629395
    9. ')' → logprob: -15.554890632629395
    10. ' =
' → logprob: -16.054889678955078

Token 70: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004130168817937374
    2. 'map' → logprob: -5.5041303634643555
    3. ' list' → logprob: -10.379130363464355
    4. ' ' → logprob: -11.379130363464355
    5. ' ' → logprob: -12.629130363464355
    6. '	map' → logprob: -13.254130363464355
    7. ' [' → logprob: -13.629130363464355
    8. '[' → logprob: -13.754130363464355
    9. '  ' → logprob: -14.254130363464355
    10. '   ' → logprob: -14.879130363464355

Token 71: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.062150295823812485
    2. '(' → logprob: -2.812150239944458
    3. '(input' → logprob: -9.187150001525879
    4. '(list' → logprob: -9.687150001525879
    5. '(str' → logprob: -11.562150001525879
    6. '(
' → logprob: -13.062150001525879
    7. '(lambda' → logprob: -13.437150001525879
    8. '(in' → logprob: -13.687150001525879
    9. '<int' → logprob: -13.812150001525879
    10. ' (' → logprob: -14.187150001525879

Token 72: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06568729877471924
    2. ',input' → logprob: -3.1906871795654297
    3. 'input' → logprob: -4.31568717956543
    4. ',' → logprob: -4.94068717956543
    5. '(' → logprob: -6.81568717956543
    6. ' input' → logprob: -8.06568717956543
    7. ')' → logprob: -8.19068717956543
    8. ' (' → logprob: -9.06568717956543
    9. ' ,' → logprob: -9.56568717956543
    10. '=input' → logprob: -11.19068717956543

Token 73: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12695099413394928
    2. ' input' → logprob: -2.126950979232788
    3. ')' → logprob: -11.501951217651367
    4. '(input' → logprob: -12.001951217651367
    5. ' ' → logprob: -13.001951217651367
    6. ',input' → logprob: -14.001951217651367
    7. '=input' → logprob: -14.126951217651367
    8. '	input' → logprob: -14.126951217651367
    9. '```' → logprob: -14.376951217651367
    10. '   ' → logprob: -14.626951217651367

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001990374643355608
    2. '()' → logprob: -6.25199031829834
    3. '())' → logprob: -10.00199031829834
    4. '()).' → logprob: -12.00199031829834
    5. ')' → logprob: -12.37699031829834
    6. ' ().' → logprob: -12.50199031829834
    7. '(' → logprob: -14.00199031829834
    8. ').' → logprob: -14.75199031829834
    9. '>().' → logprob: -15.37699031829834
    10. '()
' → logprob: -15.87699031829834

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009122979827225208
    2. 'strip' → logprob: -7.000912189483643
    3. 'rstrip' → logprob: -14.7509126663208
    4. ' split' → logprob: -15.0009126663208
    5. '(split' → logprob: -16.500911712646484
    6. 'spl' → logprob: -16.875911712646484
    7. '.split' → logprob: -19.250911712646484
    8. 's' → logprob: -20.250911712646484
    9. '().' → logprob: -20.500911712646484
    10. ')' → logprob: -20.500911712646484

Token 76: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01332869753241539
    2. '()))' → logprob: -4.638328552246094
    3. '()' → logprob: -6.388328552246094
    4. ')' → logprob: -6.388328552246094
    5. '))' → logprob: -8.638328552246094
    6. '(' → logprob: -11.138328552246094
    7. ' ())' → logprob: -12.263328552246094
    8. '('' → logprob: -13.138328552246094
    9. '())
' → logprob: -14.013328552246094
    10. '());' → logprob: -14.013328552246094

Token 77: 'A' (ID: 32)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5193160772323608
    2. ' ' → logprob: -2.0193161964416504
    3. '
' → logprob: -2.7693161964416504
    4. '' → logprob: -3.1443161964416504
    5. 'n' → logprob: -3.7693161964416504
    6. ')' → logprob: -4.01931619644165
    7. ',' → logprob: -4.01931619644165
    8. ' 
' → logprob: -4.01931619644165
    9. '<|end|>' → logprob: -4.14431619644165
    10. 'a' → logprob: -4.64431619644165

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10836560279130936
    2. '=' → logprob: -2.733365535736084
    3. ' ' → logprob: -4.358365535736084
    4. 's' → logprob: -4.608365535736084
    5. '_' → logprob: -5.233365535736084
    6. '[' → logprob: -5.983365535736084
    7. 'rray' → logprob: -6.483365535736084
    8. ',' → logprob: -6.858365535736084
    9. 'r' → logprob: -6.983365535736084
    10. '=[]' → logprob: -7.233365535736084

Token 79: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3552131652832031
    2. '[' → logprob: -1.8552131652832031
    3. 'list' → logprob: -2.230213165283203
    4. '[list' → logprob: -3.855213165283203
    5. ' []' → logprob: -5.480213165283203
    6. '[int' → logprob: -5.855213165283203
    7. ' [' → logprob: -6.105213165283203
    8. ' list' → logprob: -6.355213165283203
    9. '[input' → logprob: -6.480213165283203
    10. '[N' → logprob: -8.105213165283203

Token 80: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0782204195857048
    2. '<|end|>' → logprob: -2.9532203674316406
    3. ' for' → logprob: -3.8282203674316406
    4. '
' → logprob: -7.453220367431641
    5. ' ' → logprob: -7.703220367431641
    6. '<|end|>' → logprob: -8.45322036743164
    7. ')' → logprob: -11.07822036743164
    8. ' 
' → logprob: -11.20322036743164
    9. '' → logprob: -11.57822036743164
    10. '[' → logprob: -12.32822036743164

Token 81: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030042966827750206
    2. '<|end|>' → logprob: -3.780042886734009
    3. ' for' → logprob: -5.280043125152588
    4. '
' → logprob: -6.655043125152588
    5. ' ' → logprob: -8.90504264831543
    6. '<|end|>' → logprob: -9.65504264831543
    7. '' → logprob: -9.90504264831543
    8. '[' → logprob: -10.15504264831543
    9. ' 
' → logprob: -10.15504264831543
    10. ')' → logprob: -11.28004264831543

Token 82: ' Initialise' (ID: 179601)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5175668001174927
    2. '[' → logprob: -1.5175668001174927
    3. ' []' → logprob: -2.017566680908203
    4. ' ' → logprob: -4.142566680908203
    5. 'for' → logprob: -4.267566680908203
    6. ' [' → logprob: -4.392566680908203
    7. '#' → logprob: -5.517566680908203
    8. ' for' → logprob: -6.267566680908203
    9. '[int' → logprob: -6.517566680908203
    10. '[
' → logprob: -7.017566680908203

Token 83: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7760906219482422
    2. '()' → logprob: -1.7760906219482422
    3. ' []' → logprob: -2.151090621948242
    4. '(' → logprob: -2.276090621948242
    5. ' ' → logprob: -2.401090621948242
    6. '<|end|>' → logprob: -3.651090621948242
    7. '([]' → logprob: -3.901090621948242
    8. '[' → logprob: -5.276090621948242
    9. ' (' → logprob: -6.776090621948242
    10. 'A' → logprob: -6.901090621948242

Token 84: ' liste' (ID: 31719)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.015996592119336128
    2. ' []' → logprob: -5.01599645614624
    3. '[' → logprob: -5.76599645614624
    4. 'for' → logprob: -5.76599645614624
    5. 'list' → logprob: -6.64099645614624
    6. 'liste' → logprob: -7.51599645614624
    7. '=[]' → logprob: -8.015996932983398
    8. ' ' → logprob: -8.515996932983398
    9. '[]
' → logprob: -9.390996932983398
    10. 's' → logprob: -9.515996932983398

Token 85: ' vide' (ID: 21835)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' appelée' (ID: 179130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4226981997489929
    2. '<|end|>' → logprob: -1.4226982593536377
    3. ' for' → logprob: -2.2976982593536377
    4. '<|end|>' → logprob: -6.297698020935059
    5. '
' → logprob: -7.047698020935059
    6. ' ' → logprob: -8.172698020935059
    7. '[' → logprob: -10.422698020935059
    8. ',' → logprob: -11.047698020935059
    9. '.' → logprob: -11.047698020935059
    10. '\n' → logprob: -11.047698020935059

Token 87: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006060448009520769
    2. ' A' → logprob: -5.131060600280762
    3. '[]' → logprob: -9.131060600280762
    4. ' ' → logprob: -12.131060600280762
    5. '"A' → logprob: -12.256060600280762
    6. '[A' → logprob: -12.506060600280762
    7. ' []' → logprob: -12.881060600280762
    8. '`' → logprob: -13.506060600280762
    9. 'N' → logprob: -13.631060600280762
    10. '```' → logprob: -14.506060600280762

Token 88: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41449230909347534
    2. '
' → logprob: -1.7894923686981201
    3. '<|end|>' → logprob: -2.16449236869812
    4. ' for' → logprob: -2.91449236869812
    5. '<|end|>' → logprob: -6.414492130279541
    6. ' ' → logprob: -8.0394926071167
    7. '' → logprob: -8.1644926071167
    8. '

' → logprob: -8.5394926071167
    9. '
' → logprob: -8.7894926071167
    10. ' 
' → logprob: -8.9144926071167

Token 89: ' cont' (ID: 836)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.4834933280944824
    2. ' stock' → logprob: -1.2334933280944824
    3. ' cont' → logprob: -3.2334933280944824
    4. 'stock' → logprob: -4.108493328094482
    5. ' accueill' → logprob: -4.233493328094482
    6. 'cont' → logprob: -5.358493328094482
    7. ' serv' → logprob: -5.608493328094482
    8. ' recev' → logprob: -5.733493328094482
    9. ' vont' → logprob: -5.983493328094482
    10. 'va' → logprob: -5.983493328094482

Token 90: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.6262331008911133
    2. 'i' → logprob: -1.6262331008911133
    3. 'inue' → logprob: -1.8762331008911133
    4. 'in' → logprob: -2.2512331008911133
    5. 'e' → logprob: -5.251233100891113
    6. 'iend' → logprob: -6.501233100891113
    7. 'iennent' → logprob: -6.626233100891113
    8. '```' → logprob: -8.001233100891113
    9. 'ent' → logprob: -8.126233100891113
    10. 'ien' → logprob: -8.126233100891113

Token 91: 'endra' (ID: 32364)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010525863617658615
    2. 'n' → logprob: -5.135525703430176
    3. 'tu' → logprob: -6.510525703430176
    4. 'nt' → logprob: -7.885525703430176
    5. 'te' → logprob: -8.010525703430176
    6. 's' → logprob: -8.510525703430176
    7. 'nd' → logprob: -8.510525703430176
    8. 'ts' → logprob: -8.635525703430176
    9. 'st' → logprob: -8.760525703430176
    10. 'to' → logprob: -9.135525703430176

Token 92: ' certains' (ID: 30681)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0656051635742188
    2. ' ' → logprob: -1.6906051635742188
    3. ' des' → logprob: -1.9406051635742188
    4. ' les' → logprob: -2.3156051635742188
    5. 'des' → logprob: -2.9406051635742188
    6. ' []' → logprob: -2.9406051635742188
    7. 's' → logprob: -3.3156051635742188
    8. '  ' → logprob: -3.9406051635742188
    9. '(' → logprob: -4.815605163574219
    10. '[' → logprob: -4.940605163574219

Token 93: ' div' (ID: 4223)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6841951608657837
    2. '_' → logprob: -1.1841951608657837
    3. 's' → logprob: -2.559195041656494
    4. ')' → logprob: -3.434195041656494
    5. ',' → logprob: -4.434195041656494
    6. '<|end|>' → logprob: -5.184195041656494
    7. ' valeurs' → logprob: -5.434195041656494
    8. '\' → logprob: -5.434195041656494
    9. '[' → logprob: -5.684195041656494
    10. 'a' → logprob: -5.684195041656494

Token 94: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.25218987464904785
    2. 'is' → logprob: -2.377189874649048
    3. 'i' → logprob: -2.502189874649048
    4. 'iv' → logprob: -4.127189636230469
    5. '```' → logprob: -5.127189636230469
    6. 'e' → logprob: -5.377189636230469
    7. 'v' → logprob: -5.502189636230469
    8. 'vise' → logprob: -5.627189636230469
    9. 's' → logprob: -6.127189636230469
    10. '   ' → logprob: -6.252189636230469

Token 95: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.007620707154273987
    2. 'u' → logprob: -4.882620811462402
    3. 'rs' → logprob: -12.007620811462402
    4. 'ur' → logprob: -12.757620811462402
    5. '```' → logprob: -13.382620811462402
    6. 's' → logprob: -13.882620811462402
    7. 'n' → logprob: -14.382620811462402
    8. 'urses' → logprob: -14.382620811462402
    9. 'urse' → logprob: -14.632620811462402
    10. 'us' → logprob: -15.007620811462402

Token 96: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4830261766910553
    2. ' for' → logprob: -2.3580262660980225
    3. '<|end|>' → logprob: -2.9830262660980225
    4. '.' → logprob: -3.1080262660980225
    5. '[' → logprob: -3.7330262660980225
    6. '_' → logprob: -3.7330262660980225
    7. ',' → logprob: -3.8580262660980225
    8. ' ' → logprob: -3.8580262660980225
    9. 'n' → logprob: -3.9830262660980225
    10. ':' → logprob: -3.9830262660980225

Token 97: ' M' (ID: 391)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.854822039604187
    2. ' N' → logprob: -0.979822039604187
    3. ' M' → logprob: -2.1048221588134766
    4. 'M' → logprob: -2.6048221588134766
    5. 'i' → logprob: -6.354822158813477
    6. ' i' → logprob: -7.479822158813477
    7. ' ' → logprob: -7.979822158813477
    8. 'l' → logprob: -8.479822158813477
    9. 's' → logprob: -8.854822158813477
    10. 'a' → logprob: -9.104822158813477

Token 98: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4991873800754547
    2. 'for' → logprob: -1.1241873502731323
    3. ' for' → logprob: -3.249187469482422
    4. '<|end|>' → logprob: -4.999187469482422
    5. '```' → logprob: -5.124187469482422
    6. ' 
' → logprob: -5.124187469482422
    7. '' → logprob: -5.624187469482422
    8. '
' → logprob: -6.249187469482422
    9. '\n' → logprob: -6.624187469482422
    10. '  
' → logprob: -6.874187469482422

Token 99: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043911051005125046
    2. '
' → logprob: -3.4189109802246094
    3. ' for' → logprob: -5.418910980224609
    4. '```' → logprob: -6.543910980224609
    5. '' → logprob: -6.668910980224609
    6. '#' → logprob: -7.293910980224609
    7. 'f' → logprob: -7.293910980224609
    8. 'n' → logprob: -7.418910980224609
    9. ' 
' → logprob: -8.04391098022461
    10. 'r' → logprob: -8.91891098022461

Token 100: ' Comm' (ID: 57464)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00288202241063118
    2. 'f' → logprob: -6.37788200378418
    3. ' for' → logprob: -6.75288200378418
    4. 'fo' → logprob: -12.62788200378418
    5. 'r' → logprob: -13.37788200378418
    6. '```' → logprob: -13.37788200378418
    7. '
' → logprob: -13.50288200378418
    8. '#' → logprob: -13.62788200378418
    9. ' 
' → logprob: -13.75288200378418
    10. ' f' → logprob: -15.00288200378418

Token 101: 'ence' (ID: 1082)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.1634974330663681
    2. 'ente' → logprob: -2.0384974479675293
    3. 'e' → logprob: -4.288497447967529
    4. '#' → logprob: -5.538497447967529
    5. 'en' → logprob: -6.413497447967529
    6. 'enta' → logprob: -8.788496971130371
    7. 'ence' → logprob: -8.913496971130371
    8. '```' → logprob: -8.913496971130371
    9. 'ents' → logprob: -9.038496971130371
    10. 'entes' → logprob: -9.288496971130371

Token 102: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05543123558163643
    2. ' a' → logprob: -3.4304311275482178
    3. ' for' → logprob: -4.430431365966797
    4. ' l' → logprob: -6.305431365966797
    5. ' i' → logprob: -6.430431365966797
    6. '  ' → logprob: -6.430431365966797
    7. ' à' → logprob: -6.680431365966797
    8. ' une' → logprob: -7.430431365966797
    9. ' ' → logprob: -7.430431365966797
    10. ' un' → logprob: -8.055431365966797

Token 103: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5875604748725891
    2. 'for' → logprob: -0.9625604748725891
    3. ' boucle' → logprob: -2.9625604152679443
    4. 'bou' → logprob: -6.087560653686523
    5. ' range' → logprob: -6.212560653686523
    6. 'range' → logprob: -6.587560653686523
    7. ' ' → logprob: -6.837560653686523
    8. '```' → logprob: -7.212560653686523
    9. ' ' → logprob: -7.587560653686523
    10. ' ```' → logprob: -8.087560653686523

Token 104: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30734580755233765
    2. ' for' → logprob: -1.4323458671569824
    3. 'f' → logprob: -4.307345867156982
    4. 'i' → logprob: -5.307345867156982
    5. ' i' → logprob: -5.557345867156982
    6. ' 
' → logprob: -6.682345867156982
    7. '
' → logprob: -7.307345867156982
    8. ' f' → logprob: -7.932345867156982
    9. ' ' → logprob: -8.182345390319824
    10. 'd' → logprob: -8.807345390319824

Token 105: ' dont' (ID: 11562)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.027300488203763962
    2. ' ' → logprob: -3.6523005962371826
    3. 'i' → logprob: -7.7773003578186035
    4. ' ' → logprob: -8.652300834655762
    5. ' for' → logprob: -9.152300834655762
    6. ' range' → logprob: -9.277300834655762
    7. ' a' → logprob: -10.402300834655762
    8. '  ' → logprob: -10.652300834655762
    9. ' ‌' → logprob: -10.777300834655762
    10. ' ▁' → logprob: -11.152300834655762

Token 106: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01939660683274269
    2. ' ' → logprob: -4.644396781921387
    3. 'i' → logprob: -4.894396781921387
    4. '_' → logprob: -6.894396781921387
    5. ' _' → logprob: -8.144396781921387
    6. '  ' → logprob: -8.269396781921387
    7. '```' → logprob: -9.019396781921387
    8. ' ' → logprob: -9.144396781921387
    9. '<|end|>' → logprob: -9.644396781921387
    10. ' ' → logprob: -10.269396781921387

Token 107: ' variable' (ID: 11076)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10473639518022537
    2. 'i' → logprob: -3.479736328125
    3. ' range' → logprob: -3.729736328125
    4. ' ' → logprob: -3.854736328125
    5. 'range' → logprob: -4.479736328125
    6. ' variable' → logprob: -5.479736328125
    7. ' plage' → logprob: -5.854736328125
    8. 'v' → logprob: -6.604736328125
    9. 'pl' → logprob: -6.854736328125
    10. 'variable' → logprob: -7.729736328125

Token 108: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05575452744960785
    2. 'i' → logprob: -2.9307544231414795
    3. ' ' → logprob: -7.680754661560059
    4. ' ' → logprob: -9.555754661560059
    5. ' ' → logprob: -9.805754661560059
    6. '```' → logprob: -10.055754661560059
    7. '<|end|>' → logprob: -10.430754661560059
    8. '  ' → logprob: -10.555754661560059
    9. ' d' → logprob: -10.680754661560059
    10. '	i' → logprob: -10.805754661560059

Token 109: ' boucle' (ID: 174211)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9568846821784973
    2. ' i' → logprob: -1.2068846225738525
    3. ' ' → logprob: -1.7068846225738525
    4. '_' → logprob: -2.3318846225738525
    5. 'r' → logprob: -3.9568846225738525
    6. ' range' → logprob: -4.956884860992432
    7. 'c' → logprob: -6.206884860992432
    8. 'a' → logprob: -6.456884860992432
    9. 'range' → logprob: -6.456884860992432
    10. 's' → logprob: -6.581884860992432

Token 110: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47738876938819885
    2. 'i' → logprob: -0.9773887395858765
    3. ' ' → logprob: -6.102388858795166
    4. 's' → logprob: -7.227388858795166
    5. ' s' → logprob: -8.602388381958008
    6. '<|end|>' → logprob: -10.727388381958008
    7. ' `' → logprob: -11.102388381958008
    8. 'I' → logprob: -11.477388381958008
    9. '```' → logprob: -11.477388381958008
    10. 'a' → logprob: -11.477388381958008

Token 111: ' commence' (ID: 44755)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3043210804462433
    2. 'in' → logprob: -2.304321050643921
    3. ' ' → logprob: -2.804321050643921
    4. 's' → logprob: -3.554321050643921
    5. ' range' → logprob: -4.0543212890625
    6. 'range' → logprob: -5.1793212890625
    7. ' va' → logprob: -5.3043212890625
    8. '<|end|>' → logprob: -5.3043212890625
    9. ' i' → logprob: -5.4293212890625
    10. ' est' → logprob: -5.4293212890625

Token 112: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10042145848274231
    2. ' ' → logprob: -2.35042142868042
    3. '2' → logprob: -8.475421905517578
    4. '0' → logprob: -13.225421905517578
    5. '<|end|>' → logprob: -13.725421905517578
    6. 'range' → logprob: -14.100421905517578
    7. ' i' → logprob: -14.225421905517578
    8. '```' → logprob: -14.850421905517578
    9. 'i' → logprob: -15.600421905517578
    10. ' ' → logprob: -15.725421905517578

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005446921568363905
    2. '2' → logprob: -8.000544548034668
    3. ' ' → logprob: -8.875544548034668
    4. '0' → logprob: -9.625544548034668
    5. 'i' → logprob: -14.250544548034668
    6. '```' → logprob: -14.375544548034668
    7. 'N' → logprob: -14.500544548034668
    8. '<|end|>' → logprob: -15.438044548034668
    9. 'int' → logprob: -15.625544548034668
    10. '3' → logprob: -15.938044548034668

Token 115: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5844197273254395
    2. ' ' → logprob: -1.5844197273254395
    3. ' in' → logprob: -1.8344197273254395
    4. ' i' → logprob: -3.4594197273254395
    5. ' ,' → logprob: -3.7094197273254395
    6. ' for' → logprob: -4.2094197273254395
    7. ' to' → logprob: -6.3344197273254395
    8. 'in' → logprob: -6.5844197273254395
    9. ' and' → logprob: -7.3344197273254395
    10. ' range' → logprob: -7.8344197273254395

Token 116: ' va' (ID: 3423)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4891360104084015
    2. ' ' → logprob: -1.364135980606079
    3. 's' → logprob: -2.489135980606079
    4. '<|end|>' → logprob: -3.739135980606079
    5. ' i' → logprob: -4.614136219024658
    6. ',' → logprob: -5.864136219024658
    7. ' continue' → logprob: -6.114136219024658
    8. ' ,' → logprob: -6.364136219024658
    9. ' range' → logprob: -6.739136219024658
    10. 'range' → logprob: -7.239136219024658

Token 117: ' jusqu' (ID: 21961)
  Prédit: ' jusqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.3418010473251343
    2. ' ' → logprob: -1.3418010473251343
    3. ' jusque' → logprob: -4.216801166534424
    4. ' up' → logprob: -4.966801166534424
    5. ' i' → logprob: -6.466801166534424
    6. ' a' → logprob: -6.841801166534424
    7. ',' → logprob: -7.216801166534424
    8. ' à' → logprob: -7.591801166534424
    9. 'jus' → logprob: -7.841801166534424
    10. ' hasta' → logprob: -7.841801166534424

Token 118: ''à' (ID: 33688)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' la' (ID: 557)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.6137794256210327
    2. ' int' → logprob: -1.3637794256210327
    3. ' N' → logprob: -2.1137795448303223
    4. 'M' → logprob: -3.3637795448303223
    5. 'int' → logprob: -4.113779544830322
    6. 'N' → logprob: -4.113779544830322
    7. ' ' → logprob: -4.738779544830322
    8. ' math' → logprob: -5.488779544830322
    9. '(int' → logprob: -7.613779544830322
    10. 'math' → logprob: -8.113779067993164

Token 120: ' rac' (ID: 12334)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.551789402961731
    2. ' int' → logprob: -1.676789402961731
    3. 'M' → logprob: -2.0517892837524414
    4. 'int' → logprob: -2.4267892837524414
    5. ' math' → logprob: -4.426789283752441
    6. ' ' → logprob: -5.426789283752441
    7. 'math' → logprob: -6.426789283752441
    8. ' N' → logprob: -6.926789283752441
    9. 'N' → logprob: -7.426789283752441
    10. '(int' → logprob: -8.301789283752441

Token 121: 'ine' (ID: 514)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06694125384092331
    2. 'i' → logprob: -4.066941261291504
    3. '```' → logprob: -4.066941261291504
    4. 'ine' → logprob: -4.566941261291504
    5. ' ' → logprob: -5.941941261291504
    6. 'e' → logprob: -5.941941261291504
    7. 'oot' → logprob: -5.941941261291504
    8. '   ' → logprob: -5.941941261291504
    9. 'î' → logprob: -6.816941261291504
    10. 'iz' → logprob: -6.816941261291504

Token 122: ' carr' (ID: 18321)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0438343286514282
    2. '(' → logprob: -1.7938343286514282
    3. ')' → logprob: -2.2938342094421387
    4. '<|end|>' → logprob: -2.4188342094421387
    5. ' ' → logprob: -2.5438342094421387
    6. 's' → logprob: -2.6688342094421387
    7. 'int' → logprob: -3.4188342094421387
    8. '(int' → logprob: -4.043834209442139
    9. 'de' → logprob: -4.168834209442139
    10. '(math' → logprob: -4.543834209442139

Token 123: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.05750447139143944
    2. 'ière' → logprob: -3.682504415512085
    3. 'ère' → logprob: -4.182504653930664
    4. 'é' → logprob: -4.682504653930664
    5. 'érée' → logprob: -6.432504653930664
    6. 'è' → logprob: -6.682504653930664
    7. 'ére' → logprob: -7.432504653930664
    8. 'ête' → logprob: -8.182504653930664
    9. 'e' → logprob: -8.307504653930664
    10. 'à' → logprob: -8.432504653930664

Token 124: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.391792893409729
    2. ' ' → logprob: -1.516792893409729
    3. ' (' → logprob: -2.7667927742004395
    4. ' de' → logprob: -4.0167927742004395
    5. '(M' → logprob: -5.0167927742004395
    6. '(int' → logprob: -5.6417927742004395
    7. 'de' → logprob: -5.6417927742004395
    8. ')' → logprob: -6.2667927742004395
    9. ' M' → logprob: -6.5167927742004395
    10. 's' → logprob: -6.8917927742004395

Token 125: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.07928410917520523
    2. 'M' → logprob: -2.579284191131592
    3. ' ' → logprob: -7.954284191131592
    4. '(M' → logprob: -11.829283714294434
    5. ' ' → logprob: -12.079283714294434
    6. '<|end|>' → logprob: -12.079283714294434
    7. 'm' → logprob: -12.329283714294434
    8. ' (' → logprob: -12.329283714294434
    9. '(' → logprob: -12.454283714294434
    10. '	M' → logprob: -12.829283714294434

Token 126: ' incl' (ID: 11368)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2213948369026184
    2. ' (' → logprob: -1.8463947772979736
    3. ',' → logprob: -3.5963947772979736
    4. ' ' → logprob: -4.846395015716553
    5. ' ,' → logprob: -6.346395015716553
    6. ':' → logprob: -6.596395015716553
    7. '(range' → logprob: -7.346395015716553
    8. ' :' → logprob: -7.596395015716553
    9. '(
' → logprob: -8.346394538879395
    10. '1' → logprob: -8.721394538879395

Token 127: 'use' (ID: 1821)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0783248171210289
    2. 'ue' → logprob: -3.078324794769287
    3. 'use' → logprob: -3.578324794769287
    4. 'us' → logprob: -7.828324794769287
    5. '+' → logprob: -8.453325271606445
    6. ')' → logprob: -8.828325271606445
    7. 'ut' → logprob: -9.453325271606445
    8. 'e' → logprob: -9.703325271606445
    9. 'usive' → logprob: -9.703325271606445
    10. 'ues' → logprob: -9.953325271606445

Token 128: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5222856402397156
    2. ':' → logprob: -1.2722856998443604
    3. ' :' → logprob: -3.0222856998443604
    4. ' (' → logprob: -3.3972856998443604
    5. ',' → logprob: -4.147285461425781
    6. ' ' → logprob: -4.647285461425781
    7. ' :
' → logprob: -5.147285461425781
    8. ' for' → logprob: -5.772285461425781
    9. '(range' → logprob: -5.897285461425781
    10. 'for' → logprob: -6.272285461425781

Token 129: 'int' (ID: 491)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6316226124763489
    2. 'int' → logprob: -2.006622552871704
    3. ' ' → logprob: -2.256622552871704
    4. ' )' → logprob: -2.756622552871704
    5. ',' → logprob: -2.881622552871704
    6. ' math' → logprob: -3.381622552871704
    7. ' ,' → logprob: -3.756622552871704
    8. ')' → logprob: -4.006622791290283
    9. ' ):' → logprob: -4.006622791290283
    10. '):' → logprob: -5.631622791290283

Token 130: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.4749927818775177
    2. '(' → logprob: -0.9749927520751953
    3. '(s' → logprob: -8.099992752075195
    4. ')' → logprob: -8.474992752075195
    5. '(
' → logprob: -8.724992752075195
    6. '(M' → logprob: -9.349992752075195
    7. '(Math' → logprob: -10.349992752075195
    8. ' (' → logprob: -10.474992752075195
    9. '(m' → logprob: -10.474992752075195
    10. ')(' → logprob: -10.599992752075195

Token 131: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.1457233875989914
    2. ')' → logprob: -2.645723342895508
    3. '(s' → logprob: -3.645723342895508
    4. '.' → logprob: -4.270723342895508
    5. 'sqrt' → logprob: -4.770723342895508
    6. ').' → logprob: -5.270723342895508
    7. ')s' → logprob: -6.270723342895508
    8. 's' → logprob: -6.395723342895508
    9. '.Sqrt' → logprob: -6.395723342895508
    10. '(' → logprob: -6.520723342895508

Token 132: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.012243435718119144
    2. '(' → logprob: -4.637243270874023
    3. ')' → logprob: -6.762243270874023
    4. ')(' → logprob: -6.887243270874023
    5. '(
' → logprob: -8.512243270874023
    6. ' (' → logprob: -9.887243270874023
    7. '(m' → logprob: -10.762243270874023
    8. '((' → logprob: -12.012243270874023
    9. '))' → logprob: -12.387243270874023
    10. '```' → logprob: -12.512243270874023

Token 133: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.527468204498291
    2. ')' → logprob: -1.027468204498291
    3. '))+' → logprob: -3.027468204498291
    4. ')+' → logprob: -6.152468204498291
    5. ')))' → logprob: -6.777468204498291
    6. '(' → logprob: -9.277467727661133
    7. '()))' → logprob: -9.777467727661133
    8. ' ))' → logprob: -10.527467727661133
    9. '())' → logprob: -11.027467727661133
    10. '()' → logprob: -11.027467727661133

Token 134: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1681601107120514
    2. ')+' → logprob: -2.1681602001190186
    3. '+' → logprob: -3.4181602001190186
    4. ' +' → logprob: -4.9181599617004395
    5. ' )' → logprob: -9.293160438537598
    6. '(' → logprob: -9.668160438537598
    7. '()+' → logprob: -10.293160438537598
    8. ' ' → logprob: -10.543160438537598
    9. '+)' → logprob: -11.043160438537598
    10. '()' → logprob: -11.293160438537598

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02630714885890484
    2. ' ' → logprob: -3.6513071060180664
    3. ')' → logprob: -12.276307106018066
    4. ' ' → logprob: -14.151307106018066
    5. '```' → logprob: -14.276307106018066
    6. '2' → logprob: -15.151307106018066
    7. ' )' → logprob: -15.526307106018066
    8. '(' → logprob: -15.776307106018066
    9. '  ' → logprob: -16.651308059692383
    10. '
' → logprob: -17.588808059692383

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.875008583068848
    3. ')' → logprob: -13.250008583068848
    4. '```' → logprob: -15.500008583068848
    5. '(' → logprob: -17.500009536743164
    6. '),' → logprob: -17.625009536743164
    7. '2' → logprob: -17.625009536743164
    8. '
' → logprob: -17.875009536743164
    9. ').' → logprob: -18.625009536743164
    10. '   ' → logprob: -18.750009536743164

Token 137: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08575621992349625
    2. ')' → logprob: -2.585756301879883
    3. ':' → logprob: -5.335756301879883
    4. ' ):' → logprob: -6.335756301879883
    5. '):
' → logprob: -8.835756301879883
    6. ' )' → logprob: -9.835756301879883
    7. ',' → logprob: -10.835756301879883
    8. ' :' → logprob: -10.960756301879883
    9. ' ' → logprob: -12.085756301879883
    10. ' for' → logprob: -12.960756301879883

Token 138: 'for' (ID: 1938)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3369441330432892
    2. 'for' → logprob: -1.8369441032409668
    3. ' for' → logprob: -2.461944103240967
    4. ':
' → logprob: -3.836944103240967
    5. ' :
' → logprob: -4.586944103240967
    6. ' :' → logprob: -5.086944103240967
    7. '
' → logprob: -6.961944103240967
    8. '' → logprob: -7.711944103240967
    9. ')' → logprob: -7.711944103240967
    10. '  
' → logprob: -8.211944580078125

Token 139: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20231612026691437
    2. ' ' → logprob: -1.702316164970398
    3. 'i' → logprob: -7.0773162841796875
    4. '  ' → logprob: -10.077316284179688
    5. ' ' → logprob: -11.952316284179688
    6. ' ‌' → logprob: -12.577316284179688
    7. '	i' → logprob: -12.702316284179688
    8. '```' → logprob: -13.577316284179688
    9. '_' → logprob: -15.327316284179688
    10. ' ,' → logprob: -15.327316284179688

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011619128286838531
    2. ' ' → logprob: -4.5116190910339355
    3. 'in' → logprob: -7.7616190910339355
    4. '  ' → logprob: -9.136619567871094
    5. ' i' → logprob: -10.761619567871094
    6. '1' → logprob: -12.511619567871094
    7. ' ' → logprob: -12.761619567871094
    8. '	in' → logprob: -13.636619567871094
    9. '```' → logprob: -13.886619567871094
    10. ')' → logprob: -14.011619567871094

Token 141: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003240101272240281
    2. 'range' → logprob: -5.87824010848999
    3. ' ' → logprob: -7.75324010848999
    4. '(range' → logprob: -13.003239631652832
    5. '	range' → logprob: -13.003239631652832
    6. ' ' → logprob: -14.128239631652832
    7. '1' → logprob: -15.503239631652832
    8. ' xrange' → logprob: -16.00324058532715
    9. '  ' → logprob: -16.37824058532715
    10. '(' → logprob: -16.75324058532715

Token 142: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.259079363080673e-05
    2. ' (' → logprob: -11.500012397766113
    3. '(
' → logprob: -13.000012397766113
    4. '(int' → logprob: -16.50001335144043
    5. '((' → logprob: -17.12501335144043
    6. '1' → logprob: -17.25001335144043
    7. '```' → logprob: -18.37501335144043
    8. '<|end|>' → logprob: -18.37501335144043
    9. '(i' → logprob: -19.62501335144043
    10. ' ' → logprob: -20.12501335144043

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024358315858989954
    2. 'int' → logprob: -6.627435684204102
    3. '(' → logprob: -7.127435684204102
    4. ' ' → logprob: -8.377435684204102
    5. '(int' → logprob: -9.627435684204102
    6. ' int' → logprob: -11.877435684204102
    7. '   ' → logprob: -14.002435684204102
    8. ')' → logprob: -14.002435684204102
    9. ' (' → logprob: -15.127435684204102
    10. '  ' → logprob: -15.127435684204102

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015744947595521808
    2. ' ,' → logprob: -6.501574516296387
    3. ',int' → logprob: -9.626574516296387
    4. ',
' → logprob: -12.626574516296387
    5. ' ' → logprob: -13.501574516296387
    6. '```' → logprob: -15.126574516296387
    7. 'int' → logprob: -15.501574516296387
    8. '‌,' → logprob: -16.00157356262207
    9. '(' → logprob: -16.12657356262207
    10. ',(' → logprob: -16.12657356262207

Token 145: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0336616076529026
    2. 'int' → logprob: -3.4086616039276123
    3. ' ' → logprob: -11.533661842346191
    4. ' math' → logprob: -12.783661842346191
    5. '	int' → logprob: -13.783661842346191
    6. '(int' → logprob: -14.158661842346191
    7. ' ' → logprob: -14.783661842346191
    8. 'math' → logprob: -15.033661842346191
    9. ',int' → logprob: -15.908661842346191
    10. ' in' → logprob: -16.158660888671875

Token 146: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.5760847926139832
    2. '(' → logprob: -0.8260847926139832
    3. '(Math' → logprob: -9.576085090637207
    4. ' (' → logprob: -9.826085090637207
    5. '(
' → logprob: -11.201085090637207
    6. '(mat' → logprob: -12.826085090637207
    7. '(m' → logprob: -13.576085090637207
    8. '(int' → logprob: -13.576085090637207
    9. '(s' → logprob: -14.076085090637207
    10. ' ' → logprob: -14.576085090637207

Token 147: '.sqrt' (ID: 38011)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16040761768817902
    2. '.sqrt' → logprob: -1.9104076623916626
    3. '.s' → logprob: -9.285408020019531
    4. '.Sqrt' → logprob: -10.910408020019531
    5. 'sqrt' → logprob: -11.285408020019531
    6. ' .' → logprob: -11.410408020019531
    7. ').' → logprob: -11.785408020019531
    8. '.math' → logprob: -11.785408020019531
    9. '.ceil' → logprob: -12.410408020019531
    10. '.square' → logprob: -12.910408020019531

Token 148: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.12697860598564148
    2. '(' → logprob: -2.126978635787964
    3. '(
' → logprob: -10.501978874206543
    4. ' (' → logprob: -11.251978874206543
    5. '(m' → logprob: -11.751978874206543
    6. ')' → logprob: -13.876978874206543
    7. '(Math' → logprob: -15.251978874206543
    8. '(math' → logprob: -15.501978874206543
    9. '(

' → logprob: -15.626978874206543
    10. ' ' → logprob: -16.126977920532227

Token 149: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5289862155914307
    2. '(M' → logprob: -0.9039862155914307
    3. ')+' → logprob: -5.903985977172852
    4. '(' → logprob: -6.028985977172852
    5. '))' → logprob: -7.903985977172852
    6. '))+' → logprob: -8.653985977172852
    7. ' )' → logprob: -9.153985977172852
    8. ' (' → logprob: -11.028985977172852
    9. ' ' → logprob: -11.028985977172852
    10. '(m' → logprob: -11.653985977172852

Token 150: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4294196665287018
    2. '+' → logprob: -1.0544196367263794
    3. ')+' → logprob: -8.30441951751709
    4. ' ' → logprob: -8.67941951751709
    5. ')' → logprob: -8.80441951751709
    6. '()+' → logprob: -9.05441951751709
    7. ' ' → logprob: -10.80441951751709
    8. '()' → logprob: -11.55441951751709
    9. ' +
' → logprob: -13.92941951751709
    10. ' plus' → logprob: -14.42941951751709

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004082674626260996
    2. ' ' → logprob: -5.504082679748535
    3. '   ' → logprob: -13.254082679748535
    4. '2' → logprob: -13.879082679748535
    5. '(' → logprob: -14.004082679748535
    6. ')' → logprob: -15.254082679748535
    7. '```' → logprob: -15.254082679748535
    8. '  ' → logprob: -16.94158172607422
    9. '       ' → logprob: -17.19158172607422
    10. ' ' → logprob: -17.81658172607422

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '2' → logprob: -17.875009536743164
    4. '   ' → logprob: -18.875009536743164
    5. '```' → logprob: -19.250009536743164
    6. ')' → logprob: -20.125009536743164
    7. '  ' → logprob: -20.250009536743164
    8. '۱' → logprob: -21.375009536743164
    9. '    ' → logprob: -21.750009536743164
    10. '(' → logprob: -22.000009536743164

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007779945153743029
    2. ':' → logprob: -4.882780075073242
    3. '):
' → logprob: -9.382780075073242
    4. ')' → logprob: -9.382780075073242
    5. ' ):' → logprob: -12.507780075073242
    6. ':)' → logprob: -14.507780075073242
    7. ',' → logprob: -15.257780075073242
    8. ':
' → logprob: -15.632780075073242
    9. '():' → logprob: -15.632780075073242
    10. '):
' → logprob: -16.007780075073242

Token 154: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003724303562194109
    2. ' :' → logprob: -6.128724098205566
    3. ':
' → logprob: -6.753724098205566
    4. ' ' → logprob: -8.628724098205566
    5. '   ' → logprob: -9.753724098205566
    6. '):' → logprob: -10.003724098205566
    7. ' :
' → logprob: -10.003724098205566
    8. ')' → logprob: -11.128724098205566
    9. '<|end|>' → logprob: -11.503724098205566
    10. ',' → logprob: -12.128724098205566

Token 155: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09228263795375824
    2. ' ' → logprob: -2.71728253364563
    3. ' :' → logprob: -3.96728253364563
    4. ':
' → logprob: -6.842282772064209
    5. ' :
' → logprob: -7.217282772064209
    6. '   ' → logprob: -8.21728229522705
    7. '<|end|>' → logprob: -8.59228229522705
    8. '):' → logprob: -8.59228229522705
    9. ')' → logprob: -8.71728229522705
    10. ' if' → logprob: -9.21728229522705

Token 156: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.004117699805647135
    2. ' ' → logprob: -5.754117488861084
    3. 'M' → logprob: -7.004117488861084
    4. ' ' → logprob: -10.629117965698242
    5. ' (' → logprob: -13.129117965698242
    6. '(' → logprob: -13.629117965698242
    7. ' М' → logprob: -14.004117965698242
    8. '  ' → logprob: -14.129117965698242
    9. '	M' → logprob: -14.379117965698242
    10. ' ‌' → logprob: -14.879117965698242

Token 157: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4846617877483368
    2. ' %' → logprob: -0.9846618175506592
    3. '%i' → logprob: -4.60966157913208
    4. ' ' → logprob: -7.48466157913208
    5. ' ' → logprob: -11.984662055969238
    6. '%e' → logprob: -13.609662055969238
    7. ' %
' → logprob: -13.859662055969238
    8. '<|end|>' → logprob: -13.859662055969238
    9. '%d' → logprob: -14.734662055969238
    10. '%s' → logprob: -14.859662055969238

Token 158: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3132767677307129
    2. ' i' → logprob: -1.313276767730713
    3. '	i' → logprob: -11.688276290893555
    4. ' ' → logprob: -12.188276290893555
    5. '   ' → logprob: -14.188276290893555
    6. '  ' → logprob: -14.688276290893555
    7. ' ' → logprob: -15.813276290893555
    8. '[i' → logprob: -16.188276290893555
    9. '(i' → logprob: -16.688276290893555
    10. '*i' → logprob: -17.063276290893555

Token 159: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28156179189682007
    2. ' ==' → logprob: -1.4065618515014648
    3. '=' → logprob: -7.906561851501465
    4. ')==' → logprob: -11.031561851501465
    5. ')' → logprob: -12.031561851501465
    6. '0' → logprob: -12.281561851501465
    7. ' =' → logprob: -12.281561851501465
    8. '===' → logprob: -12.406561851501465
    9. ' ' → logprob: -12.531561851501465
    10. ']==' → logprob: -13.781561851501465

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '۰' → logprob: -19.125045776367188
    4. '  ' → logprob: -21.000045776367188
    5. '٠' → logprob: -21.750045776367188
    6. '०' → logprob: -22.500045776367188
    7. '０' → logprob: -22.500045776367188
    8. '০' → logprob: -22.625045776367188
    9. ' ' → logprob: -22.937545776367188
    10. ' ' → logprob: -23.000045776367188

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -18.875009536743164
    4. '  ' → logprob: -20.500009536743164
    5. '   ' → logprob: -20.875009536743164
    6. '٠' → logprob: -21.187509536743164
    7. '০' → logprob: -21.625009536743164
    8. '०' → logprob: -21.750009536743164
    9. '00' → logprob: -21.937509536743164
    10. ' ' → logprob: -21.937509536743164

Token 162: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021319588995538652
    2. ':
' → logprob: -8.625213623046875
    3. '):' → logprob: -10.625213623046875
    4. ' :' → logprob: -11.875213623046875
    5. ' and' → logprob: -13.875213623046875
    6. ':**' → logprob: -14.875213623046875
    7. ')' → logprob: -15.125213623046875
    8. 'and' → logprob: -15.250213623046875
    9. ',' → logprob: -15.625213623046875
    10. '   ' → logprob: -16.125213623046875

Token 163: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35085687041282654
    2. ' ' → logprob: -1.725856900215149
    3. 'A' → logprob: -3.4758567810058594
    4. '<|end|>' → logprob: -3.4758567810058594
    5. '   ' → logprob: -4.225856781005859
    6. ' 
' → logprob: -4.350856781005859
    7. '        
' → logprob: -4.725856781005859
    8. '    
' → logprob: -5.100856781005859
    9. '    ' → logprob: -5.850856781005859
    10. ' A' → logprob: -6.100856781005859

Token 164: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08761872351169586
    2. '       ' → logprob: -3.087618827819824
    3. '   ' → logprob: -3.712618827819824
    4. ' A' → logprob: -4.337618827819824
    5. ' ' → logprob: -7.837618827819824
    6. '    ' → logprob: -8.712618827819824
    7. '    
' → logprob: -10.462618827819824
    8. '#' → logprob: -10.587618827819824
    9. '
' → logprob: -10.712618827819824
    10. '  ' → logprob: -10.712618827819824

Token 165: ' Vér' (ID: 159169)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08879298716783524
    2. ' A' → logprob: -2.8387930393218994
    3. '   ' → logprob: -3.7137930393218994
    4. '       ' → logprob: -6.46379280090332
    5. ' ' → logprob: -8.83879280090332
    6. '#' → logprob: -8.83879280090332
    7. '    ' → logprob: -9.71379280090332
    8. '
' → logprob: -9.83879280090332
    9. '    
' → logprob: -10.58879280090332
    10. ' #' → logprob: -10.71379280090332

Token 166: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0041952175088226795
    2. 'if' → logprob: -6.129195213317871
    3. 'ifiez' → logprob: -7.129195213317871
    4. 'ifies' → logprob: -8.129195213317871
    5. 'ifi' → logprob: -8.254195213317871
    6. 'ify' → logprob: -8.379195213317871
    7. 'ifier' → logprob: -8.379195213317871
    8. '   ' → logprob: -8.879195213317871
    9. 'i' → logprob: -10.504195213317871
    10. ' if' → logprob: -12.004195213317871

Token 167: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12652619183063507
    2. ':' → logprob: -2.626526117324829
    3. '   ' → logprob: -4.126526355743408
    4. '  ' → logprob: -4.251526355743408
    5. '    ' → logprob: -5.251526355743408
    6. ' :' → logprob: -5.501526355743408
    7. ' if' → logprob: -6.251526355743408
    8. '<|end|>' → logprob: -6.376526355743408
    9. ' i' → logprob: -6.501526355743408
    10. '       ' → logprob: -8.00152587890625

Token 168: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.028288770467042923
    2. 'i' → logprob: -3.9032888412475586
    3. ' M' → logprob: -4.903288841247559
    4. 'M' → logprob: -8.278288841247559
    5. '	i' → logprob: -10.778288841247559
    6. ' ' → logprob: -11.528288841247559
    7. '<|end|>' → logprob: -12.403288841247559
    8. '  ' → logprob: -13.278288841247559
    9. ' ‌' → logprob: -13.903288841247559
    10. ' ' → logprob: -14.278288841247559

Token 169: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3691484034061432
    2. ' est' → logprob: -2.1191484928131104
    3. '<|end|>' → logprob: -2.2441484928131104
    4. ' ==' → logprob: -3.1191484928131104
    5. ' is' → logprob: -3.6191484928131104
    6. ')' → logprob: -5.869148254394531
    7. '  ' → logprob: -6.119148254394531
    8. '==' → logprob: -6.744148254394531
    9. 'est' → logprob: -6.869148254394531
    10. ' ' → logprob: -7.619148254394531

Token 170: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.018139293417334557
    2. 'un' → logprob: -4.143139362335205
    3. ' a' → logprob: -6.643139362335205
    4. ' ' → logprob: -8.268138885498047
    5. 'a' → logprob: -8.393138885498047
    6. 'div' → logprob: -8.518138885498047
    7. ' une' → logprob: -9.518138885498047
    8. ' divisible' → logprob: -11.143138885498047
    9. ''un' → logprob: -12.143138885498047
    10. '<|end|>' → logprob: -12.268138885498047

Token 171: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.001184276770800352
    2. ' div' → logprob: -6.751184463500977
    3. 'fact' → logprob: -12.001184463500977
    4. ' facteur' → logprob: -12.751184463500977
    5. '	div' → logprob: -13.126184463500977
    6. '<div' → logprob: -14.251184463500977
    7. '_div' → logprob: -14.501184463500977
    8. ' divisor' → logprob: -14.751184463500977
    9. ' ' → logprob: -14.876184463500977
    10. '(div' → logprob: -15.251184463500977

Token 172: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.008728737011551857
    2. 'ise' → logprob: -5.758728504180908
    3. 'isible' → logprob: -5.883728504180908
    4. '```' → logprob: -6.758728504180908
    5. 'i' → logprob: -8.383728981018066
    6. 'e' → logprob: -8.508728981018066
    7. '   ' → logprob: -9.008728981018066
    8. 'iser' → logprob: -9.383728981018066
    9. 'isor' → logprob: -9.383728981018066
    10. '	' → logprob: -9.633728981018066

Token 173: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9735142588615417
    2. '   ' → logprob: -1.3485143184661865
    3. ' ' → logprob: -1.5985143184661865
    4. ':' → logprob: -2.4735143184661865
    5. '  ' → logprob: -4.098514080047607
    6. '<|end|>' → logprob: -4.223514080047607
    7. ' of' → logprob: -4.348514080047607
    8. ' :' → logprob: -4.348514080047607
    9. ')' → logprob: -5.098514080047607
    10. 'de' → logprob: -5.348514080047607

Token 174: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.38692933320999146
    2. 'M' → logprob: -1.1369292736053467
    3. ' ' → logprob: -9.761929512023926
    4. 'm' → logprob: -15.511929512023926
    5. ' ' → logprob: -15.636929512023926
    6. '	M' → logprob: -15.761929512023926
    7. ' М' → logprob: -16.26192855834961
    8. '  ' → logprob: -16.26192855834961
    9. '   ' → logprob: -17.38692855834961
    10. '
' → logprob: -18.26192855834961

Token 175: ' ;' (ID: 4605)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000509187753777951
    2. ' :' → logprob: -8.500509262084961
    3. ':
' → logprob: -8.750509262084961
    4. '       ' → logprob: -9.875509262084961
    5. '   ' → logprob: -9.875509262084961
    6. ',' → logprob: -10.500509262084961
    7. '):' → logprob: -11.750509262084961
    8. '<|end|>' → logprob: -13.250509262084961
    9. ')' → logprob: -14.250509262084961
    10. '    ' → logprob: -14.375509262084961

Token 176: ' c' (ID: 274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12964972853660583
    2. '   ' → logprob: -2.6296496391296387
    3. 'A' → logprob: -3.3796496391296387
    4. ' A' → logprob: -4.504649639129639
    5. '    ' → logprob: -6.629649639129639
    6. '    
' → logprob: -7.129649639129639
    7. '        
' → logprob: -7.254649639129639
    8. ' ' → logprob: -8.004650115966797
    9. '    ' → logprob: -8.629650115966797
    10. '     
' → logprob: -9.129650115966797

Token 177: ''est' (ID: 6616)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7265415191650391
    2. 'es' → logprob: -1.726541519165039
    3. 'e' → logprob: -2.476541519165039
    4. ''' → logprob: -2.851541519165039
    5. 'a' → logprob: -3.601541519165039
    6. '#' → logprob: -3.851541519165039
    7. 'on' → logprob: -3.851541519165039
    8. ''est' → logprob: -4.226541519165039
    9. ''s' → logprob: -4.476541519165039
    10. ':
' → logprob: -4.726541519165039

Token 178: '-à' (ID: 56297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24631842970848083
    2. ':' → logprob: -2.6213183403015137
    3. '   ' → logprob: -3.6213183403015137
    4. ' i' → logprob: -3.7463183403015137
    5. ' True' → logprob: -4.121318340301514
    6. '  ' → logprob: -4.246318340301514
    7. 'i' → logprob: -4.496318340301514
    8. ' que' → logprob: -5.246318340301514
    9. ' :' → logprob: -5.371318340301514
    10. ')' → logprob: -5.496318340301514

Token 179: '-dire' (ID: 76064)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1393338441848755
    2. ' True' → logprob: -2.139333724975586
    3. '0' → logprob: -5.264333724975586
    4. ' ' → logprob: -6.014333724975586
    5. 'i' → logprob: -6.764333724975586
    6. 'true' → logprob: -7.139333724975586
    7. '=True' → logprob: -7.764333724975586
    8. '   ' → logprob: -8.014333724975586
    9. 'False' → logprob: -8.139333724975586
    10. 'div' → logprob: -8.389333724975586

Token 180: ' que' (ID: 661)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.038857340812683
    2. ' que' → logprob: -1.413857340812683
    3. ' if' → logprob: -1.663857340812683
    4. ' that' → logprob: -2.9138574600219727
    5. ' ' → logprob: -3.0388574600219727
    6. ' ' → logprob: -3.1638574600219727
    7. ' i' → logprob: -3.6638574600219727
    8. '<|end|>' → logprob: -3.9138574600219727
    9. 'M' → logprob: -5.538857460021973
    10. ':' → logprob: -5.538857460021973

Token 181: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5768898129463196
    2. ' M' → logprob: -0.8268898129463196
    3. 'i' → logprob: -7.951889991760254
    4. ' i' → logprob: -8.076889991760254
    5. ' ' → logprob: -8.826889991760254
    6. '   ' → logprob: -10.326889991760254
    7. ' (' → logprob: -10.326889991760254
    8. ' ' → logprob: -11.076889991760254
    9. '  ' → logprob: -11.201889991760254
    10. 'N' → logprob: -11.451889991760254

Token 182: ' div' (ID: 4223)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40024158358573914
    2. '%' → logprob: -2.0252416133880615
    3. ' %' → logprob: -2.1502416133880615
    4. ' mod' → logprob: -3.7752416133880615
    5. ' modulo' → logprob: -4.025241374969482
    6. '<|end|>' → logprob: -4.275241374969482
    7. ')' → logprob: -4.775241374969482
    8. ' divisible' → logprob: -5.275241374969482
    9. ' est' → logprob: -5.775241374969482
    10. '%i' → logprob: -5.775241374969482

Token 183: 'isé' (ID: 30065)
  Prédit: 'isible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -0.22746844589710236
    2. 'ise' → logprob: -1.602468490600586
    3. 'isable' → logprob: -6.352468490600586
    4. '%' → logprob: -9.227468490600586
    5. 'isé' → logprob: -9.477468490600586
    6. 'ide' → logprob: -10.477468490600586
    7. 'i' → logprob: -10.727468490600586
    8. 'sible' → logprob: -10.852468490600586
    9. 'iseur' → logprob: -11.477468490600586
    10. 'is' → logprob: -11.727468490600586

Token 184: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9833344221115112
    2. ' par' → logprob: -1.1083344221115112
    3. '<|end|>' → logprob: -1.6083344221115112
    4. ' i' → logprob: -2.858334541320801
    5. '  ' → logprob: -4.108334541320801
    6. 'par' → logprob: -4.358334541320801
    7. ')' → logprob: -5.858334541320801
    8. ' by' → logprob: -6.358334541320801
    9. 'i' → logprob: -6.608334541320801
    10. '<|end|>' → logprob: -7.233334541320801

Token 185: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38699159026145935
    2. 'i' → logprob: -1.1369916200637817
    3. ' ' → logprob: -10.011991500854492
    4. '	i' → logprob: -10.136991500854492
    5. '<|end|>' → logprob: -10.636991500854492
    6. ' ' → logprob: -12.511991500854492
    7. '  ' → logprob: -13.011991500854492
    8. '```' → logprob: -13.136991500854492
    9. ''i' → logprob: -14.136991500854492
    10. '*i' → logprob: -14.386991500854492

Token 186: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09639222174882889
    2. ' est' → logprob: -3.0963921546936035
    3. ' a' → logprob: -3.8463921546936035
    4. 'a' → logprob: -5.4713921546936035
    5. ')' → logprob: -5.7213921546936035
    6. ' reste' → logprob: -5.8463921546936035
    7. 'est' → logprob: -5.9713921546936035
    8. ' has' → logprob: -5.9713921546936035
    9. ' ne' → logprob: -6.4713921546936035
    10. '<|end|>' → logprob: -7.2213921546936035

Token 187: ''a' (ID: 10443)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.1616666316986084
    2. ''a' → logprob: -1.6616666316986084
    3. 'a' → logprob: -2.0366666316986084
    4. ''' → logprob: -2.2866666316986084
    5. '<|end|>' → logprob: -2.4116666316986084
    6. ' a' → logprob: -3.2866666316986084
    7. ''est' → logprob: -3.7866666316986084
    8. ''%' → logprob: -3.9116666316986084
    9. 'e' → logprob: -4.4116668701171875
    10. ''ont' → logprob: -4.5366668701171875

Token 188: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.25525963306427
    2. 'pas' → logprob: -1.50525963306427
    3. ' aucun' → logprob: -6.0052595138549805
    4. ' ' → logprob: -8.38025951385498
    5. 'auc' → logprob: -8.75525951385498
    6. ' aucune' → logprob: -9.13025951385498
    7. '_pas' → logprob: -9.50525951385498
    8. ' plus' → logprob: -9.88025951385498
    9. 'a' → logprob: -10.38025951385498
    10. '   ' → logprob: -11.00525951385498

Token 189: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6010485887527466
    2. '<|end|>' → logprob: -1.1010485887527466
    3. ' remainder' → logprob: -3.226048469543457
    4. ')' → logprob: -3.351048469543457
    5. ' aucun' → logprob: -4.351048469543457
    6. ' aucune' → logprob: -5.476048469543457
    7. ' de' → logprob: -5.601048469543457
    8. '%' → logprob: -5.976048469543457
    9. 'rest' → logprob: -6.101048469543457
    10. ' rest' → logprob: -6.101048469543457

Token 190: ' reste' (ID: 26769)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.8571841716766357
    2. 'reste' → logprob: -0.9821841716766357
    3. 'rest' → logprob: -2.4821841716766357
    4. 're' → logprob: -2.6071841716766357
    5. 'r' → logprob: -3.8571841716766357
    6. ' reste' → logprob: -4.482184410095215
    7. ' ' → logprob: -4.982184410095215
    8. 'rem' → logprob: -6.232184410095215
    9. ' rest' → logprob: -7.857184410095215
    10. 'rema' → logprob: -8.232184410095215

Token 191: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015612851129844785
    2. ' :' → logprob: -7.001561164855957
    3. '   ' → logprob: -8.001561164855957
    4. ':
' → logprob: -8.251561164855957
    5. ',' → logprob: -11.251561164855957
    6. '):' → logprob: -11.376561164855957
    7. '       ' → logprob: -11.376561164855957
    8. ' :
' → logprob: -11.876561164855957
    9. '.' → logprob: -13.251561164855957
    10. '    ' → logprob: -13.501561164855957

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007653473410755396
    2. '   ' → logprob: -5.25765323638916
    3. 'A' → logprob: -7.00765323638916
    4. ':' → logprob: -7.13265323638916
    5. '    
' → logprob: -8.38265323638916
    6. '        
' → logprob: -8.50765323638916
    7. '```' → logprob: -9.38265323638916
    8. '
' → logprob: -9.88265323638916
    9. '    ' → logprob: -10.88265323638916
    10. '           ' → logprob: -11.13265323638916

Token 193: ' if' (ID: 538)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6345977187156677
    2. ' A' → logprob: -0.7595977187156677
    3. ' if' → logprob: -6.6345977783203125
    4. 'if' (adapté à ' if') → logprob: -7.5095977783203125
    5. '   ' → logprob: -9.884597778320312
    6. ' ' → logprob: -10.009597778320312
    7. '       ' → logprob: -11.634597778320312
    8. '
' → logprob: -11.884597778320312
    9. ' 
' → logprob: -12.259597778320312
    10. '    ' → logprob: -12.634597778320312

Token 194: ' M' (ID: 391)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18122881650924683
    2. 'i' → logprob: -2.0562288761138916
    3. ' len' → logprob: -3.4312288761138916
    4. 'len' → logprob: -5.3062286376953125
    5. ' M' → logprob: -8.306228637695312
    6. ' ' → logprob: -8.931228637695312
    7. ' N' → logprob: -10.056228637695312
    8. '   ' → logprob: -10.556228637695312
    9. 'M' → logprob: -10.806228637695312
    10. 'N' → logprob: -11.181228637695312

Token 195: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6545497179031372
    2. ' //' → logprob: -0.7795497179031372
    3. '%' → logprob: -5.154549598693848
    4. ' ' → logprob: -5.529549598693848
    5. '/' → logprob: -5.779549598693848
    6. ' ' → logprob: -6.029549598693848
    7. '#' → logprob: -7.404549598693848
    8. ' i' → logprob: -7.404549598693848
    9. '/i' → logprob: -7.529549598693848
    10. '```' → logprob: -7.592049598693848

Token 196: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029752103611826897
    2. ' i' → logprob: -3.529752016067505
    3. ' ' → logprob: -13.654751777648926
    4. '	i' → logprob: -15.404751777648926
    5. '   ' → logprob: -16.154752731323242
    6. '_i' → logprob: -16.779752731323242
    7. '2' → logprob: -17.279752731323242
    8. '  ' → logprob: -17.904752731323242
    9. ',i' → logprob: -18.279752731323242
    10. ',' → logprob: -18.404752731323242

Token 197: ' >=' (ID: 5064)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.43428122997283936
    2. ' <=' → logprob: -1.1842812299728394
    3. '%' → logprob: -3.434281349182129
    4. '>=' → logprob: -5.309281349182129
    5. '==' → logprob: -5.684281349182129
    6. ' %' → logprob: -5.934281349182129
    7. ' >=' → logprob: -6.434281349182129
    8. ' ==' → logprob: -7.184281349182129
    9. '!=' → logprob: -8.309281349182129
    10. '>' → logprob: -9.309281349182129

Token 198: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006984960054978728
    2. ' N' → logprob: -7.375698566436768
    3. '1' → logprob: -10.62569808959961
    4. 'i' → logprob: -10.62569808959961
    5. 'A' → logprob: -11.00069808959961
    6. ' ' → logprob: -12.50069808959961
    7. '2' → logprob: -13.87569808959961
    8. '100' → logprob: -15.12569808959961
    9. '10' → logprob: -15.37569808959961
    10. ' i' → logprob: -15.50069808959961

Token 199: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010216631926596165
    2. ':
' → logprob: -4.76021671295166
    3. 'and' → logprob: -6.88521671295166
    4. ' and' → logprob: -7.51021671295166
    5. ' :' → logprob: -10.76021671295166
    6. ':
' → logprob: -13.01021671295166
    7. ':A' → logprob: -13.13521671295166
    8. ':

' → logprob: -13.13521671295166
    9. ' :
' → logprob: -14.01021671295166
    10. '):' → logprob: -14.13521671295166

Token 200: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038535131607204676
    2. ' A' → logprob: -5.7538533210754395
    3. 'A' → logprob: -7.3788533210754395
    4. '       ' → logprob: -11.128853797912598
    5. '	       ' → logprob: -11.503853797912598
    6. '          ' → logprob: -11.753853797912598
    7. '```' → logprob: -12.253853797912598
    8. '               ' → logprob: -12.753853797912598
    9. ' ' → logprob: -13.003853797912598
    10. '            
' → logprob: -13.503853797912598

Token 201: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6930052638053894
    2. 'A' → logprob: -0.8180052638053894
    3. ' A' → logprob: -3.318005323410034
    4. '       ' → logprob: -3.818005323410034
    5. '   ' → logprob: -8.193005561828613
    6. '
' → logprob: -10.443005561828613
    7. '```' → logprob: -10.818005561828613
    8. '               ' → logprob: -11.193005561828613
    9. ' ' → logprob: -11.443005561828613
    10. '            
' → logprob: -11.568005561828613

Token 202: ' Vér' (ID: 159169)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6040599942207336
    2. ' A' → logprob: -0.8540599942207336
    3. 'A' → logprob: -3.854059934616089
    4. '       ' → logprob: -5.104060173034668
    5. '   ' → logprob: -8.604060173034668
    6. '        ' → logprob: -9.229060173034668
    7. '
' → logprob: -10.479060173034668
    8. ' ' → logprob: -10.729060173034668
    9. '            ' → logprob: -10.729060173034668
    10. '          ' → logprob: -10.979060173034668

Token 203: 'ifie' (ID: 46409)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4819282293319702
    2. '           ' → logprob: -1.8569282293319702
    3. '       ' → logprob: -1.9819282293319702
    4. ' A' → logprob: -3.1069283485412598
    5. 'if' → logprob: -4.35692834854126
    6. '   ' → logprob: -4.48192834854126
    7. '#' → logprob: -5.35692834854126
    8. 'i' → logprob: -6.23192834854126
    9. 'es' → logprob: -6.85692834854126
    10. ' ' → logprob: -6.85692834854126

Token 204: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1055645942687988
    2. ' i' → logprob: -1.1055645942687988
    3. ' M' → logprob: -1.3555645942687988
    4. 'M' → logprob: -2.605564594268799
    5. ' ' → logprob: -5.230564594268799
    6. '  ' → logprob: -8.48056411743164
    7. '   ' → logprob: -8.60556411743164
    8. 'N' → logprob: -8.98056411743164
    9. ' N' → logprob: -9.10556411743164
    10. '```' → logprob: -9.73056411743164

Token 206: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.7498239874839783
    2. 'quot' → logprob: -1.624824047088623
    3. 'M' → logprob: -2.124824047088623
    4. ' M' → logprob: -2.124824047088623
    5. ' quotient' → logprob: -2.749824047088623
    6. 'val' → logprob: -5.249824047088623
    7. 'i' → logprob: -5.749824047088623
    8. 'quo' → logprob: -5.749824047088623
    9. 'qu' → logprob: -6.249824047088623
    10. '   ' → logprob: -6.374824047088623

Token 207: 'iseur' (ID: 108637)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8053752779960632
    2. 'A' → logprob: -1.055375337600708
    3. 'div' → logprob: -2.555375337600708
    4. 'N' → logprob: -3.055375337600708
    5. 'iseur' → logprob: -3.430375337600708
    6. 'M' → logprob: -4.805375099182129
    7. '       ' → logprob: -5.930375099182129
    8. '```' → logprob: -6.055375099182129
    9. 'isible' → logprob: -6.180375099182129
    10. 'u' → logprob: -6.430375099182129

Token 208: ' correspondant' (ID: 146058)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14821113646030426
    2. 'i' → logprob: -2.6482112407684326
    3. ' >=' → logprob: -3.7732112407684326
    4. '   ' → logprob: -4.3982110023498535
    5. '>=' → logprob: -4.3982110023498535
    6. ' ' → logprob: -5.1482110023498535
    7. ' M' → logprob: -5.7732110023498535
    8. ' is' → logprob: -6.0232110023498535
    9. ' est' → logprob: -6.7732110023498535
    10. ' A' → logprob: -6.8982110023498535

Token 209: ' (' (ID: 350)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8027877807617188
    2. ' >=' → logprob: -1.9277877807617188
    3. ' à' → logprob: -2.3027877807617188
    4. 'i' → logprob: -2.4277877807617188
    5. ' i' → logprob: -2.9277877807617188
    6. ',' → logprob: -3.0527877807617188
    7. 'à' → logprob: -4.302787780761719
    8. ' est' → logprob: -4.302787780761719
    9. '   ' → logprob: -4.302787780761719
    10. ' to' → logprob: -4.552787780761719

Token 210: 'M' (ID: 44)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17273031175136566
    2. ' i' → logprob: -2.0477302074432373
    3. ')' → logprob: -4.297730445861816
    4. 'M' → logprob: -4.672730445861816
    5. ' M' → logprob: -5.672730445861816
    6. ' )' → logprob: -6.922730445861816
    7. ' ' → logprob: -7.422730445861816
    8. '```' → logprob: -7.547730445861816
    9. ' (' → logprob: -8.297730445861816
    10. ' ' → logprob: -8.547730445861816

Token 211: ' /' (ID: 820)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6464716196060181
    2. ' //' → logprob: -0.7714716196060181
    3. ')' → logprob: -5.1464715003967285
    4. ' ' → logprob: -5.8964715003967285
    5. ' /' → logprob: -6.2714715003967285
    6. '/' → logprob: -6.8964715003967285
    7. '/i' → logprob: -7.1464715003967285
    8. '#' → logprob: -8.021471977233887
    9. ' ' → logprob: -8.146471977233887
    10. '```' → logprob: -8.646471977233887

Token 212: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020618028938770294
    2. ' i' → logprob: -3.895617961883545
    3. ' ' → logprob: -10.520618438720703
    4. ')' → logprob: -11.520618438720703
    5. '```' → logprob: -11.520618438720703
    6. '   ' → logprob: -12.020618438720703
    7. '	i' → logprob: -12.395618438720703
    8. '(i' → logprob: -12.645618438720703
    9. '
' → logprob: -12.645618438720703
    10. ' (' → logprob: -13.270618438720703

Token 213: ' arr' (ID: 1724)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021176543668843806
    2. ')>=' → logprob: -9.000211715698242
    3. ' )' → logprob: -9.500211715698242
    4. '>=' → logprob: -12.875211715698242
    5. '```' → logprob: -13.000211715698242
    6. '#' → logprob: -13.000211715698242
    7. ')
' → logprob: -13.625211715698242
    8. '`)' → logprob: -14.125211715698242
    9. ')is' → logprob: -14.125211715698242
    10. '),' → logprob: -14.875211715698242

Token 214: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.19311481714248657
    2. 'ond' → logprob: -1.9431147575378418
    3. 'êt' → logprob: -3.568114757537842
    4. 'ête' → logprob: -5.943114757537842
    5. ')' → logprob: -7.193114757537842
    6. 'ê' → logprob: -8.943115234375
    7. 'ivée' → logprob: -9.318115234375
    8. '//' → logprob: -9.443115234375
    9. '   ' → logprob: -9.693115234375
    10. '  ' → logprob: -10.318115234375

Token 215: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5630577802658081
    2. 'à' → logprob: -1.063057780265808
    3. 'vers' → logprob: -3.6880578994750977
    4. ' à' → logprob: -3.9380578994750977
    5. ' vers' → logprob: -4.313057899475098
    6. 'ent' → logprob: -4.438057899475098
    7. '   ' → logprob: -5.438057899475098
    8. ' ' → logprob: -5.688057899475098
    9. 'down' → logprob: -5.938057899475098
    10. ' )' → logprob: -6.063057899475098

Token 216: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6409015655517578
    2. 'int' → logprob: -1.0159015655517578
    3. 'ent' → logprob: -3.015901565551758
    4. ' l' → logprob: -3.515901565551758
    5. '0' → logprob: -4.265901565551758
    6. ')' → logprob: -4.765901565551758
    7. ' ' → logprob: -5.765901565551758
    8. 'i' → logprob: -6.140901565551758
    9. '1' → logprob: -7.515901565551758
    10. '  ' → logprob: -7.890901565551758

Token 217: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6748442649841309
    2. 'int' → logprob: -1.2998442649841309
    3. 'inf' → logprob: -1.7998442649841309
    4. '0' → logprob: -4.424844264984131
    5. 'in' → logprob: -4.674844264984131
    6. 'l' → logprob: -4.924844264984131
    7. ')' → logprob: -5.049844264984131
    8. 'i' → logprob: -5.674844264984131
    9. '
' → logprob: -6.049844264984131
    10. ''ent' → logprob: -6.174844264984131

Token 218: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0588068962097168
    2. 'ière' → logprob: -3.433806896209717
    3. 'i' → logprob: -4.683806896209717
    4. 'e' → logprob: -5.933806896209717
    5. 'ieur' → logprob: -6.058806896209717
    6. 'iere' → logprob: -6.308806896209717
    7. 'ié' → logprob: -6.808806896209717
    8. 'érieur' → logprob: -6.933806896209717
    9. 'int' → logprob: -7.058806896209717
    10. 'f' → logprob: -7.308806896209717

Token 219: ' inférieur' (ID: 191498)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.2970332205295563
    2. ')' → logprob: -1.6720331907272339
    3. ' inférieur' → logprob: -3.5470333099365234
    4. 'sup' → logprob: -4.547033309936523
    5. 'in' → logprob: -4.672033309936523
    6. 'près' → logprob: -4.797033309936523
    7. 'infer' → logprob: -4.797033309936523
    8. '```' → logprob: -7.422033309936523
    9. 'down' → logprob: -8.047033309936523
    10. 'vers' → logprob: -8.047033309936523

Token 220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038968685548752546
    2. ' )' → logprob: -5.628896713256836
    3. ')>=' → logprob: -8.753896713256836
    4. '>=' → logprob: -10.128896713256836
    5. '`)' → logprob: -10.253896713256836
    6. ' à' → logprob: -11.128896713256836
    7. '')' → logprob: -11.628896713256836
    8. '```' → logprob: -12.128896713256836
    9. '#' → logprob: -12.253896713256836
    10. '   ' → logprob: -12.378896713256836

Token 221: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.03318130224943161
    2. '>=' → logprob: -3.5331811904907227
    3. '   ' → logprob: -6.283181190490723
    4. ')' → logprob: -7.283181190490723
    5. ')>=' → logprob: -7.783181190490723
    6. '       ' → logprob: -9.533181190490723
    7. ']>=' → logprob: -9.783181190490723
    8. ' ' → logprob: -9.783181190490723
    9. ':' → logprob: -10.158181190490723
    10. ' <=' → logprob: -10.283181190490723

Token 222: ' supérieur' (ID: 98491)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.03881031647324562
    2. ' >=' → logprob: -3.2888102531433105
    3. '   ' → logprob: -8.038810729980469
    4. '>' → logprob: -8.413810729980469
    5. ' ' → logprob: -9.913810729980469
    6. '≥' → logprob: -10.038810729980469
    7. ')' → logprob: -10.913810729980469
    8. ']>=' → logprob: -10.913810729980469
    9. '    ' → logprob: -11.038810729980469
    10. '```' → logprob: -11.288810729980469

Token 223: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4838625192642212
    2. ' or' → logprob: -1.3588625192642212
    3. 'ou' → logprob: -3.2338624000549316
    4. 'à' → logprob: -3.9838624000549316
    5. 'and' → logprob: -4.483862400054932
    6. 'or' → logprob: -4.483862400054932
    7. ')' → logprob: -4.608862400054932
    8. 'et' → logprob: -4.983862400054932
    9. ' ou' → logprob: -4.983862400054932
    10. ' and' → logprob: -5.108862400054932

Token 224: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.023225324228405952
    2. '=' → logprob: -4.0232253074646
    3. ' égal' → logprob: -6.1482253074646
    4. ' ég' → logprob: -6.6482253074646
    5. 'ég' → logprob: -6.8982253074646
    6. 'à' → logprob: -7.8982253074646
    7. 'equal' → logprob: -9.273225784301758
    8. 'egal' → logprob: -9.898225784301758
    9. 'égalité' → logprob: -10.023225784301758
    10. 'é' → logprob: -11.523225784301758

Token 225: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.18228906393051147
    2. 'à' → logprob: -1.8072891235351562
    3. 'a' → logprob: -7.307289123535156
    4. ' ' → logprob: -7.557289123535156
    5. ' a' → logprob: -7.682289123535156
    6. '```' → logprob: -8.557289123535156
    7. ',' → logprob: -9.057289123535156
    8. 'to' → logprob: -9.682289123535156
    9. '       ' → logprob: -9.682289123535156
    10. ' ' → logprob: -9.932289123535156

Token 226: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002186426194384694
    2. ' N' → logprob: -6.127186298370361
    3. ' ' → logprob: -14.75218677520752
    4. ' ' → logprob: -15.00218677520752
    5. '```' → logprob: -16.252185821533203
    6. '	N' → logprob: -16.377185821533203
    7. 'n' → logprob: -16.627185821533203
    8. '   ' → logprob: -17.377185821533203
    9. 'A' → logprob: -17.377185821533203
    10. '
' → logprob: -17.502185821533203

Token 227: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036446149460971355
    2. ':
' → logprob: -6.2536444664001465
    3. '       ' → logprob: -6.8786444664001465
    4. '):' → logprob: -7.7536444664001465
    5. '           ' → logprob: -8.503644943237305
    6. ' :' → logprob: -10.503644943237305
    7. ',' → logprob: -12.003644943237305
    8. ' and' → logprob: -12.253644943237305
    9. '):
' → logprob: -12.628644943237305
    10. '   ' → logprob: -13.128644943237305

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1312444657087326
    2. '       ' → logprob: -2.506244421005249
    3. ':' → logprob: -3.256244421005249
    4. ':
' → logprob: -6.756244659423828
    5. 'A' → logprob: -6.881244659423828
    6. ' :' → logprob: -9.006244659423828
    7. ' A' → logprob: -9.256244659423828
    8. '```' → logprob: -9.256244659423828
    9. ',' → logprob: -9.506244659423828
    10. '               ' → logprob: -9.631244659423828

Token 229: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.00020568605395965278
    2. ' A' → logprob: -9.000205993652344
    3. '           ' → logprob: -9.750205993652344
    4. '   ' → logprob: -10.750205993652344
    5. '       ' → logprob: -13.375205993652344
    6. '               ' → logprob: -15.000205993652344
    7. '	A' → logprob: -15.500205993652344
    8. ' ' → logprob: -16.250205993652344
    9. '```' → logprob: -16.500205993652344
    10. '
' → logprob: -16.625205993652344

Token 230: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011059731245040894
    2. '.' → logprob: -4.511059761047363
    3. '.ap' → logprob: -11.886059761047363
    4. '.app' → logprob: -13.011059761047363
    5. '.add' → logprob: -13.761059761047363
    6. '.Append' → logprob: -14.261059761047363
    7. ' .' → logprob: -14.886059761047363
    8. '.push' → logprob: -15.261059761047363
    9. ').' → logprob: -15.761059761047363
    10. 'append' → logprob: -15.886059761047363

Token 231: '(i' (ID: 3649)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00020544764993246645
    2. '(' → logprob: -8.500205039978027
    3. '((' → logprob: -13.875205039978027
    4. '(i' → logprob: -14.375205039978027
    5. '(m' → logprob: -15.375205039978027
    6. '(
' → logprob: -16.125205993652344
    7. ' (' → logprob: -16.250205993652344
    8. '(int' → logprob: -17.625205993652344
    9. '(Math' → logprob: -18.875205993652344
    10. '(A' → logprob: -19.125205993652344

Token 232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001549089647596702
    2. ')
' → logprob: -9.000154495239258
    3. ' )' → logprob: -10.500154495239258
    4. ')
' → logprob: -13.750154495239258
    5. ')

' → logprob: -14.000154495239258
    6. '))' → logprob: -14.500154495239258
    7. ')`' → logprob: -15.125154495239258
    8. '   ' → logprob: -15.250154495239258
    9. '),' → logprob: -15.750154495239258
    10. '`)' → logprob: -16.375154495239258

Token 233: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2958804666996002
    2. '       ' → logprob: -1.9208804368972778
    3. '<|end|>' → logprob: -2.4208805561065674
    4. '        
' → logprob: -4.545880317687988
    5. '        ' → logprob: -6.295880317687988
    6. ' 
' → logprob: -6.795880317687988
    7. 'newline' → logprob: -7.045880317687988
    8. ' ' → logprob: -7.045880317687988
    9. '' → logprob: -7.170880317687988
    10. '\n' → logprob: -7.420880317687988

Token 234: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03874208778142929
    2. '       ' → logprob: -4.6637420654296875
    3. '<|end|>' → logprob: -4.7887420654296875
    4. '    
' → logprob: -5.7887420654296875
    5. '\n' → logprob: -5.7887420654296875
    6. ' 
' → logprob: -6.0387420654296875
    7. 'else' → logprob: -6.1637420654296875
    8. '' → logprob: -6.5387420654296875
    9. '  
' → logprob: -6.6637420654296875
    10. '   ' → logprob: -6.7887420654296875

Token 235: ' Aj' (ID: 28294)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8009688854217529
    2. '       ' → logprob: -1.300968885421753
    3. '
' → logprob: -2.300968885421753
    4. 'A' → logprob: -3.675968885421753
    5. ' 
' → logprob: -3.800968885421753
    6. '<|end|>' → logprob: -3.925968885421753
    7. '   ' → logprob: -4.050969123840332
    8. '  ' → logprob: -4.550969123840332
    9. ')' → logprob: -4.550969123840332
    10. '    ' → logprob: -4.550969123840332

Token 236: 'oute' (ID: 3509)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.06903031468391418
    2. 'outez' → logprob: -3.444030284881592
    3. 'oute' → logprob: -4.194030284881592
    4. 'out' → logprob: -5.194030284881592
    5. '       ' → logprob: -5.444030284881592
    6. '   ' → logprob: -5.569030284881592
    7. '    ' → logprob: -6.194030284881592
    8. 'our' → logprob: -6.694030284881592
    9. 'uste' → logprob: -7.819030284881592
    10. ')' → logprob: -7.944030284881592

Token 237: ' le' (ID: 505)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2751329839229584
    2. '(' → logprob: -1.5251330137252808
    3. ' i' → logprob: -4.65013313293457
    4. ' (' → logprob: -5.02513313293457
    5. ')' → logprob: -6.02513313293457
    6. 'i' → logprob: -6.27513313293457
    7. '(M' → logprob: -7.40013313293457
    8. ' ' → logprob: -7.65013313293457
    9. '    ' → logprob: -7.90013313293457
    10. ' )' → logprob: -8.02513313293457

Token 238: ' div' (ID: 4223)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02270432375371456
    2. '   ' → logprob: -4.522704124450684
    3. ' i' → logprob: -5.147704124450684
    4. 'div' → logprob: -5.397704124450684
    5. '       ' → logprob: -8.022704124450684
    6. ' ' → logprob: -8.397704124450684
    7. '    ' → logprob: -8.647704124450684
    8. '  ' → logprob: -8.772704124450684
    9. '```' → logprob: -9.397704124450684
    10. 'M' → logprob: -9.772704124450684

Token 239: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.032811641693115234
    2. 'ise' → logprob: -3.7828116416931152
    3. 'iser' → logprob: -5.157811641693115
    4. 'is' → logprob: -6.907811641693115
    5. 'e' → logprob: -7.157811641693115
    6. 'isor' → logprob: -7.907811641693115
    7. ')' → logprob: -8.157812118530273
    8. '       ' → logprob: -8.407812118530273
    9. '```' → logprob: -8.657812118530273
    10. '   ' → logprob: -8.907812118530273

Token 240: ' i' (ID: 575)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35892993211746216
    2. '<|end|>' → logprob: -1.2339298725128174
    3. '<|end|>' → logprob: -5.6089301109313965
    4. '   ' → logprob: -6.7339301109313965
    5. ' ' → logprob: -6.8589301109313965
    6. ' )' → logprob: -6.8589301109313965
    7. ' 
' → logprob: -7.3589301109313965
    8. '  
' → logprob: -7.7339301109313965
    9. '    
' → logprob: -8.108929634094238
    10. ')
' → logprob: -8.108929634094238

Token 241: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8846016526222229
    2. '<|end|>' → logprob: -1.1346015930175781
    3. ')' → logprob: -2.134601593017578
    4. '   ' → logprob: -2.884601593017578
    5. '
' → logprob: -4.009601593017578
    6. '    
' → logprob: -4.134601593017578
    7. '        
' → logprob: -4.384601593017578
    8. ' ' → logprob: -4.634601593017578
    9. '<|end|>' → logprob: -4.759601593017578
    10. '  
' → logprob: -5.134601593017578

Token 242: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011048762127757072
    2. ' A' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.511048316955566
    4. 'the' → logprob: -15.386048316955566
    5. '	A' → logprob: -16.261049270629883
    6. ' the' → logprob: -16.386049270629883
    7. 'l' → logprob: -16.761049270629883
    8. 'a' → logprob: -17.261049270629883
    9. ' ' → logprob: -17.386049270629883
    10. ' la' → logprob: -17.511049270629883

Token 243: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02214747853577137
    2. ' A' → logprob: -3.8971474170684814
    3. ' ' → logprob: -7.6471476554870605
    4. 'liste' → logprob: -8.522147178649902
    5. '```' → logprob: -8.772147178649902
    6. 'a' → logprob: -9.022147178649902
    7. 'list' → logprob: -9.272147178649902
    8. 'es' → logprob: -9.397147178649902
    9. ' 
' → logprob: -9.647147178649902
    10. 'code' → logprob: -10.147147178649902

Token 244: ' A' (ID: 355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1713072657585144
    2. '<|end|>' → logprob: -2.921307325363159
    3. '    
' → logprob: -3.421307325363159
    4. '       ' → logprob: -3.921307325363159
    5. '  
' → logprob: -4.42130708694458
    6. '   ' → logprob: -4.54630708694458
    7. '\n' → logprob: -4.92130708694458
    8. ' 
' → logprob: -4.92130708694458
    9. ' ' → logprob: -5.42130708694458
    10. '        
' → logprob: -5.54630708694458

Token 246: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008619185537099838
    2. '
' → logprob: -5.63361930847168
    3. '<|end|>' → logprob: -5.63361930847168
    4. '+' → logprob: -8.25861930847168
    5. '        
' → logprob: -8.38361930847168
    6. ' ' → logprob: -8.50861930847168
    7. '   ' → logprob: -8.63361930847168
    8. '        ' → logprob: -9.38361930847168
    9. 'else' → logprob: -9.63361930847168
    10. '[' → logprob: -9.75861930847168

Token 247: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.189987912774086
    2. '
' → logprob: -2.814987897872925
    3. ' ' → logprob: -3.314987897872925
    4. '<|end|>' → logprob: -3.814987897872925
    5. 'if' (adapté à ' if') → logprob: -4.189988136291504
    6. '        
' → logprob: -4.939988136291504
    7. '        ' → logprob: -5.064988136291504
    8. ' 
' → logprob: -5.064988136291504
    9. ' if' → logprob: -5.814988136291504
    10. '    ' → logprob: -6.064988136291504

Token 248: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16953866183757782
    2. ' i' → logprob: -1.9195386171340942
    3. 'M' → logprob: -5.044538497924805
    4. ' M' → logprob: -5.919538497924805
    5. '   ' → logprob: -9.544538497924805
    6. ' ' → logprob: -10.169538497924805
    7. '  ' → logprob: -11.919538497924805
    8. '(i' → logprob: -12.169538497924805
    9. ' (' → logprob: -12.919538497924805
    10. '    ' → logprob: -12.919538497924805

Token 249: ' >=' (ID: 5064)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.06588330864906311
    2. ' !=' → logprob: -2.8158833980560303
    3. '*' → logprob: -5.565883159637451
    4. ' *' → logprob: -9.69088363647461
    5. '*i' → logprob: -11.56588363647461
    6. '()!=' → logprob: -12.94088363647461
    7. ' ' → logprob: -13.31588363647461
    8. '!=(' → logprob: -13.56588363647461
    9. '**' → logprob: -13.94088363647461
    10. ')!=' → logprob: -14.19088363647461

Token 250: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.572941179503687e-05
    2. 'int' → logprob: -10.750045776367188
    3. 'math' → logprob: -11.375045776367188
    4. '1' → logprob: -12.375045776367188
    5. ' N' → logprob: -12.500045776367188
    6. 'M' → logprob: -13.000045776367188
    7. 'n' → logprob: -14.000045776367188
    8. '2' → logprob: -14.125045776367188
    9. ' ' → logprob: -15.125045776367188
    10. 'max' → logprob: -16.000045776367188

Token 251: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.48467832803726196
    2. ':' → logprob: -0.984678328037262
    3. 'and' → logprob: -4.609678268432617
    4. ':
' → logprob: -7.609678268432617
    5. ' :' → logprob: -10.359678268432617
    6. '           ' → logprob: -11.109678268432617
    7. '):' → logprob: -11.484678268432617
    8. '   ' → logprob: -11.734678268432617
    9. ' or' → logprob: -12.109678268432617
    10. '       ' → logprob: -12.734678268432617

Token 252: ' M' (ID: 391)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11386463791131973
    2. 'M' → logprob: -2.2388646602630615
    3. ' i' → logprob: -7.363864421844482
    4. ' M' → logprob: -8.36386489868164
    5. '   ' → logprob: -8.98886489868164
    6. '(i' → logprob: -10.86386489868164
    7. '(M' → logprob: -11.23886489868164
    8. ' ' → logprob: -13.11386489868164
    9. ' (' → logprob: -13.23886489868164
    10. '```' → logprob: -13.23886489868164

Token 253: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2650321424007416
    2. '/i' → logprob: -1.640032172203064
    3. ' //' → logprob: -3.7650320529937744
    4. '/' → logprob: -4.7650322914123535
    5. '```' → logprob: -6.0150322914123535
    6. '
' → logprob: -6.3900322914123535
    7. '   ' → logprob: -7.1400322914123535
    8. '    
' → logprob: -8.140031814575195
    9. 'i' → logprob: -8.140031814575195
    10. '//=' → logprob: -8.265031814575195

Token 254: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016042111441493034
    2. ' i' → logprob: -4.141042232513428
    3. ' ' → logprob: -12.64104175567627
    4. '	i' → logprob: -13.26604175567627
    5. '   ' → logprob: -13.76604175567627
    6. 'M' → logprob: -14.64104175567627
    7. '```' → logprob: -15.39104175567627
    8. '  ' → logprob: -15.64104175567627
    9. 'A' → logprob: -15.76604175567627
    10. '(i' → logprob: -16.016042709350586

Token 255: ' >' (ID: 1424)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5780385732650757
    2. ' !=' → logprob: -0.8280385732650757
    3. '==' → logprob: -6.828038692474365
    4. ' i' → logprob: -8.203038215637207
    5. ' ' → logprob: -8.328038215637207
    6. ' ==' → logprob: -8.453038215637207
    7. '```' → logprob: -9.828038215637207
    8. '>=' → logprob: -10.078038215637207
    9. 'i' → logprob: -10.203038215637207
    10. '>' → logprob: -10.578038215637207

Token 256: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14867500960826874
    2. ' i' → logprob: -2.023674964904785
    3. '1' → logprob: -5.398674964904785
    4. ' ' → logprob: -6.648674964904785
    5. '  ' → logprob: -9.773674964904785
    6. '=' → logprob: -10.273674964904785
    7. '   ' → logprob: -11.023674964904785
    8. '	i' → logprob: -11.148674964904785
    9. 'A' → logprob: -11.273674964904785
    10. '=i' → logprob: -12.211174964904785

Token 257: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3135719895362854
    2. ':
' → logprob: -1.3135719299316406
    3. ' and' → logprob: -8.56357192993164
    4. '):
' → logprob: -10.18857192993164
    5. '):' → logprob: -10.68857192993164
    6. ' :
' → logprob: -11.06357192993164
    7. ':
' → logprob: -11.18857192993164
    8. ' :' → logprob: -11.56357192993164
    9. 'and' → logprob: -11.81357192993164
    10. '           ' → logprob: -12.06357192993164

Token 258: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005095356609672308
    2. ' A' → logprob: -5.630095481872559
    3. 'A' → logprob: -6.630095481872559
    4. '           ' → logprob: -8.880095481872559
    5. '	           ' → logprob: -11.380095481872559
    6. '              ' → logprob: -12.505095481872559
    7. '   ' → logprob: -13.005095481872559
    8. ' ' → logprob: -13.255095481872559
    9. '                
' → logprob: -13.380095481872559
    10. '	       ' → logprob: -13.505095481872559

Token 259: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4308924078941345
    2. '               ' → logprob: -1.6808924674987793
    3. ' A' → logprob: -1.9308924674987793
    4. '           ' → logprob: -4.055892467498779
    5. '   ' → logprob: -6.930892467498779
    6. ' ' → logprob: -8.680891990661621
    7. '       ' → logprob: -9.055891990661621
    8. '              ' → logprob: -9.180891990661621
    9. '	A' → logprob: -10.180891990661621
    10. '  ' → logprob: -10.555891990661621

Token 260: ' Vér' (ID: 159169)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11998173594474792
    2. 'A' → logprob: -2.6199817657470703
    3. ' A' → logprob: -3.2449817657470703
    4. '           ' → logprob: -6.86998176574707
    5. '   ' → logprob: -9.36998176574707
    6. ' ' → logprob: -9.74498176574707
    7. '       ' → logprob: -10.36998176574707
    8. '              ' → logprob: -10.86998176574707
    9. ' ' → logprob: -11.61998176574707
    10. '                
' → logprob: -11.61998176574707

Token 261: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0003255719493608922
    2. 'if' → logprob: -8.250325202941895
    3. 'ife' → logprob: -10.750325202941895
    4. 'ifiez' → logprob: -11.000325202941895
    5. 'f' → logprob: -11.875325202941895
    6. 'ifi' → logprob: -12.250325202941895
    7. 'ify' → logprob: -12.375325202941895
    8. 'ifique' → logprob: -13.625325202941895
    9. 'ifies' → logprob: -13.875325202941895
    10. 'ie' → logprob: -13.875325202941895

Token 262: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3146827816963196
    2. '           ' → logprob: -1.4396827220916748
    3. '               ' → logprob: -3.564682722091675
    4. '   ' → logprob: -6.314682960510254
    5. '
' → logprob: -7.189682960510254
    6. ':' → logprob: -7.814682960510254
    7. 'A' → logprob: -8.064682960510254
    8. '            
' → logprob: -8.314682960510254
    9. ' A' → logprob: -9.189682960510254
    10. '  ' → logprob: -9.314682960510254

Token 263: ' i' (ID: 575)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.29573920369148254
    2. ' M' → logprob: -1.5457391738891602
    3. '   ' → logprob: -4.29573917388916
    4. '  ' → logprob: -5.17073917388916
    5. '           ' → logprob: -5.29573917388916
    6. 'True' → logprob: -5.42073917388916
    7. '       ' → logprob: -5.79573917388916
    8. 'i' → logprob: -6.04573917388916
    9. ' True' → logprob: -6.29573917388916
    10. '    ' → logprob: -6.42073917388916

Token 264: ' lui' (ID: 10623)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.28995898365974426
    2. ':' → logprob: -1.7899589538574219
    3. ' !=' → logprob: -4.039958953857422
    4. 'and' → logprob: -4.164958953857422
    5. '!=' → logprob: -4.539958953857422
    6. '           ' → logprob: -4.664958953857422
    7. '   ' → logprob: -4.914958953857422
    8. ' >=' → logprob: -5.164958953857422
    9. '>=' → logprob: -5.789958953857422
    10. '<|end|>' → logprob: -5.789958953857422

Token 265: '-même' (ID: 41085)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.13468128442764282
    2. ' >=' → logprob: -2.134681224822998
    3. '>' → logprob: -7.009681224822998
    4. '<|end|>' → logprob: -7.009681224822998
    5. ']>=' → logprob: -7.009681224822998
    6. '=' → logprob: -7.134681224822998
    7. '-même' → logprob: -7.259681224822998
    8. '==' → logprob: -7.634681224822998
    9. '   ' → logprob: -7.884681224822998
    10. '≥' → logprob: -8.009681701660156

Token 266: ' est' (ID: 893)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8107542991638184
    2. ' >=' → logprob: -1.6857542991638184
    3. '>=' → logprob: -1.8107542991638184
    4. '           ' → logprob: -2.9357542991638184
    5. '<|end|>' → logprob: -2.9357542991638184
    6. 'and' → logprob: -3.3107542991638184
    7. '   ' → logprob: -3.4357542991638184
    8. '       ' → logprob: -4.685754299163818
    9. ':' → logprob: -5.185754299163818
    10. '!=' → logprob: -6.060754299163818

Token 267: ' supérieur' (ID: 98491)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.08408508449792862
    2. ' >=' → logprob: -2.709084987640381
    3. 'égal' → logprob: -5.209084987640381
    4. 'a' → logprob: -5.959084987640381
    5. 'un' → logprob: -6.334084987640381
    6. 'also' → logprob: -6.459084987640381
    7. ' un' → logprob: -6.584084987640381
    8. ' aussi' → logprob: -8.084085464477539
    9. ' also' → logprob: -8.334085464477539
    10. ' également' → logprob: -8.709085464477539

Token 268: ' ou' (ID: 2031)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0040605068206787
    2. ' and' → logprob: -1.6290605068206787
    3. '       ' → logprob: -2.1290605068206787
    4. 'and' → logprob: -2.2540605068206787
    5. '               ' → logprob: -2.6290605068206787
    6. ' à' → logprob: -2.8790605068206787
    7. 'à' → logprob: -3.5040605068206787
    8. 'et' → logprob: -4.004060745239258
    9. ' or' → logprob: -4.754060745239258
    10. '   ' → logprob: -4.879060745239258

Token 269: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010506733087822795
    2. '=N' → logprob: -7.5010504722595215
    3. 'equal' → logprob: -8.62605094909668
    4. '==' → logprob: -9.50105094909668
    5. '>=' → logprob: -10.12605094909668
    6. '=None' → logprob: -10.12605094909668
    7. '=M' → logprob: -10.25105094909668
    8. '=i' → logprob: -10.75105094909668
    9. '=A' → logprob: -11.00105094909668
    10. 'N' → logprob: -11.00105094909668

Token 270: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.25702109932899475
    2. 'à' → logprob: -1.6320210695266724
    3. ' to' → logprob: -4.382020950317383
    4. '           ' → logprob: -4.882020950317383
    5. ' and' → logprob: -5.882020950317383
    6. '   ' → logprob: -6.257020950317383
    7. 'to' → logprob: -6.257020950317383
    8. 'and' → logprob: -6.257020950317383
    9. '               ' → logprob: -7.632020950317383
    10. '       ' → logprob: -8.132020950317383

Token 271: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0007998613873496652
    2. 'M' → logprob: -7.250799655914307
    3. ' N' → logprob: -9.625800132751465
    4. 'i' → logprob: -10.750800132751465
    5. 'int' → logprob: -14.500800132751465
    6. '```' → logprob: -14.625800132751465
    7. ' M' → logprob: -14.875800132751465
    8. 'n' → logprob: -15.125800132751465
    9. '1' → logprob: -15.125800132751465
    10. ' ' → logprob: -15.750800132751465

Token 272: ' et' (ID: 859)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13302887976169586
    2. ':' → logprob: -2.258028984069824
    3. ':
' → logprob: -4.883028984069824
    4. ',' → logprob: -5.383028984069824
    5. '           ' → logprob: -5.633028984069824
    6. ' and' → logprob: -5.758028984069824
    7. '.' → logprob: -7.883028984069824
    8. ' :' → logprob: -7.883028984069824
    9. ' :
' → logprob: -9.633028984069824
    10. '<|end|>' → logprob: -10.258028984069824

Token 273: ' si' (ID: 1784)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013198001310229301
    2. 'A' → logprob: -4.763197898864746
    3. ' A' → logprob: -5.513197898864746
    4. '           ' → logprob: -8.013197898864746
    5. '              ' → logprob: -10.138197898864746
    6. ' not' → logprob: -10.638197898864746
    7. '
' → logprob: -10.888197898864746
    8. 'M' → logprob: -11.013197898864746
    9. ' M' → logprob: -11.138197898864746
    10. '                
' → logprob: -11.263197898864746

Token 274: ' l' (ID: 305)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01393641997128725
    2. 'i' → logprob: -5.013936519622803
    3. ' M' → logprob: -5.138936519622803
    4. 'A' → logprob: -8.138936042785645
    5. '(M' → logprob: -8.263936042785645
    6. 'True' → logprob: -8.388936042785645
    7. 'math' → logprob: -8.888936042785645
    8. '   ' → logprob: -9.388936042785645
    9. 'Math' → logprob: -9.388936042785645
    10. ' i' → logprob: -9.888936042785645

Token 275: ''autre' (ID: 52145)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.10257881134748459
    2. 'M' → logprob: -2.47757887840271
    3. ' i' → logprob: -5.477578639984131
    4. 'i' → logprob: -5.477578639984131
    5. ' math' → logprob: -6.352578639984131
    6. ' ' → logprob: -6.602578639984131
    7. '  ' → logprob: -7.852578639984131
    8. ' (' → logprob: -7.977578639984131
    9. '   ' → logprob: -8.102579116821289
    10. '(M' → logprob: -8.227579116821289

Token 276: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.007189030759036541
    2. ' div' → logprob: -5.25718879699707
    3. '
' → logprob: -8.13218879699707
    4. 'i' → logprob: -8.25718879699707
    5. ' divisor' → logprob: -8.25718879699707
    6. '_div' → logprob: -8.50718879699707
    7. '	div' → logprob: -8.88218879699707
    8. ' i' → logprob: -9.13218879699707
    9. ' divis' → logprob: -9.13218879699707
    10. '```' → logprob: -9.25718879699707

Token 277: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.017336836084723473
    2. 'isor' → logprob: -4.892336845397949
    3. 'ise' → logprob: -5.267336845397949
    4. 'is' → logprob: -6.392336845397949
    5. 'i' → logprob: -6.767336845397949
    6. '   ' → logprob: -7.017336845397949
    7. 'iser' → logprob: -8.39233684539795
    8. '       ' → logprob: -8.89233684539795
    9. 'M' → logprob: -9.64233684539795
    10. '```' → logprob: -10.14233684539795

Token 278: ' (' (ID: 350)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.17422541975975037
    2. '!=' → logprob: -2.424225330352783
    3. ' >=' → logprob: -3.924225330352783
    4. ' >' → logprob: -4.799225330352783
    5. '>' → logprob: -4.924225330352783
    6. '>=' → logprob: -5.174225330352783
    7. ' i' → logprob: -5.299225330352783
    8. 's' → logprob: -5.549225330352783
    9. ',' → logprob: -5.924225330352783
    10. ' M' → logprob: -6.174225330352783

Token 279: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.020126743242144585
    2. ' M' → logprob: -4.395126819610596
    3. ')' → logprob: -5.395126819610596
    4. 'i' → logprob: -6.395126819610596
    5. '1' → logprob: -7.770126819610596
    6. '   ' → logprob: -8.645126342773438
    7. ' ' → logprob: -9.020126342773438
    8. '  ' → logprob: -9.020126342773438
    9. '(M' → logprob: -9.270126342773438
    10. '```' → logprob: -9.645126342773438

Token 280: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6371289491653442
    2. '//' → logprob: -0.7621289491653442
    3. '%' → logprob: -6.262128829956055
    4. ' ' → logprob: -7.262128829956055
    5. ' ' → logprob: -7.387128829956055
    6. 'div' → logprob: -8.137128829956055
    7. '#' → logprob: -8.637128829956055
    8. ')' → logprob: -8.637128829956055
    9. '   ' → logprob: -8.762128829956055
    10. ' %' → logprob: -9.137128829956055

Token 281: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008889487362466753
    2. ' i' → logprob: -7.125888824462891
    3. '   ' → logprob: -10.00088882446289
    4. ' ' → logprob: -11.62588882446289
    5. 'M' → logprob: -12.00088882446289
    6. '(i' → logprob: -12.25088882446289
    7. '2' → logprob: -12.62588882446289
    8. '
' → logprob: -12.75088882446289
    9. '	i' → logprob: -13.25088882446289
    10. ')' → logprob: -13.37588882446289

Token 282: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022286221385002136
    2. ' !=' → logprob: -4.522286415100098
    3. '!=' → logprob: -4.772286415100098
    4. '>' → logprob: -6.772286415100098
    5. ' )' → logprob: -7.772286415100098
    6. ')!=' → logprob: -8.022286415100098
    7. ' >' → logprob: -8.522286415100098
    8. ')>' → logprob: -9.147286415100098
    9. ',' → logprob: -9.397286415100098
    10. '>=' → logprob: -9.397286415100098

Token 283: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8623747229576111
    2. ' not' → logprob: -1.2373747825622559
    3. '!=' → logprob: -1.4873747825622559
    4. 'not' → logprob: -3.987374782562256
    5. ' >=' → logprob: -4.487374782562256
    6. '>=' → logprob: -4.487374782562256
    7. ')' → logprob: -4.737374782562256
    8. '>' → logprob: -5.112374782562256
    9. ' >' → logprob: -5.987374782562256
    10. '           ' → logprob: -6.612374782562256

Token 284: ' strict' (ID: 12035)
  Prédit: ' différent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.3564349412918091
    2. 'different' → logprob: -2.4814348220825195
    3. ' different' → logprob: -2.9814348220825195
    4. ' distinct' → logprob: -3.3564348220825195
    5. '>' → logprob: -3.3564348220825195
    6. 'diff' → logprob: -3.4814348220825195
    7. 'distinct' → logprob: -3.4814348220825195
    8. '!=' → logprob: -4.4814348220825195
    9. 'not' → logprob: -4.6064348220825195
    10. ' not' → logprob: -5.4814348220825195

Token 285: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.4481736421585083
    2. 'ly' → logprob: -1.5731736421585083
    3. '>' → logprob: -1.9481736421585083
    4. 'lement' → logprob: -5.323173522949219
    5. 'ment' → logprob: -6.323173522949219
    6. 'mente' → logprob: -6.948173522949219
    7. '<|end|>' → logprob: -7.698173522949219
    8. 'ément' → logprob: -7.823173522949219
    9. '<' → logprob: -7.948173522949219
    10. ' >' → logprob: -8.073173522949219

Token 286: ' supérieur' (ID: 98491)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6533013582229614
    2. 'i' → logprob: -1.2783013582229614
    3. '1' → logprob: -2.653301239013672
    4. ' i' → logprob: -3.528301239013672
    5. 'greater' → logprob: -4.028301239013672
    6. 'M' → logprob: -4.153301239013672
    7. ' ' → logprob: -4.653301239013672
    8. 'N' → logprob: -4.778301239013672
    9. '<|end|>' → logprob: -5.028301239013672
    10. ')' → logprob: -5.528301239013672

Token 287: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6066688895225525
    2. '           ' → logprob: -1.4816689491271973
    3. ' à' → logprob: -2.1066689491271973
    4. 'à' → logprob: -3.2316689491271973
    5. 'to' → logprob: -3.3566689491271973
    6. ' to' → logprob: -3.9816689491271973
    7. '(i' → logprob: -5.731668949127197
    8. ':' → logprob: -6.231668949127197
    9. '.' → logprob: -6.606668949127197
    10. ',' → logprob: -6.731668949127197

Token 288: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009184855734929442
    2. ' i' → logprob: -7.000918388366699
    3. ' ' → logprob: -12.5009183883667
    4. 'M' → logprob: -13.8759183883667
    5. '	i' → logprob: -14.1259183883667
    6. '1' → logprob: -14.3759183883667
    7. '   ' → logprob: -14.5009183883667
    8. '
' → logprob: -16.000919342041016
    9. '  ' → logprob: -16.125919342041016
    10. 'A' → logprob: -16.750919342041016

Token 289: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.061274897307157516
    2. ':' → logprob: -3.061275005340576
    3. ':
' → logprob: -4.811275005340576
    4. '           ' → logprob: -5.686275005340576
    5. '.' → logprob: -8.186274528503418
    6. '):
' → logprob: -8.436274528503418
    7. ',' → logprob: -8.811274528503418
    8. '):' → logprob: -9.061274528503418
    9. ' :' → logprob: -9.686274528503418
    10. ')' → logprob: -10.061274528503418

Token 290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.666993507067673e-05
    2. ' A' → logprob: -11.125036239624023
    3. '              ' → logprob: -11.875036239624023
    4. '           ' → logprob: -12.250036239624023
    5. 'A' → logprob: -12.375036239624023
    6. '<|end|>' → logprob: -13.500036239624023
    7. ',' → logprob: -14.000036239624023
    8. '                
' → logprob: -14.125036239624023
    9. '	           ' → logprob: -14.750036239624023
    10. ':' → logprob: -14.750036239624023

Token 291: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.014275270514190197
    2. ' A' → logprob: -4.639275074005127
    3. '               ' → logprob: -5.514275074005127
    4. '   ' → logprob: -8.264275550842285
    5. '           ' → logprob: -8.764275550842285
    6. ' ' → logprob: -10.389275550842285
    7. '                   ' → logprob: -10.889275550842285
    8. '  ' → logprob: -12.264275550842285
    9. '	A' → logprob: -12.514275550842285
    10. '              ' → logprob: -12.889275550842285

Token 292: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004087305162101984
    2. '.' → logprob: -5.504087448120117
    3. '.extend' → logprob: -11.754087448120117
    4. '.ap' → logprob: -14.754087448120117
    5. ' .' → logprob: -14.879087448120117
    6. '.app' → logprob: -15.754087448120117
    7. '.insert' → logprob: -16.379087448120117
    8. 'append' → logprob: -17.004087448120117
    9. '.add' → logprob: -17.879087448120117
    10. '.a' → logprob: -18.754087448120117

Token 293: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -3.8219583075260743e-05
    2. '(' → logprob: -10.250038146972656
    3. '((' → logprob: -13.000038146972656
    4. '   ' → logprob: -16.000038146972656
    5. '(m' → logprob: -16.000038146972656
    6. '(
' → logprob: -16.625038146972656
    7. '(math' → logprob: -16.625038146972656
    8. 'M' → logprob: -16.750038146972656
    9. ' (' → logprob: -16.875038146972656
    10. '(int' → logprob: -17.375038146972656

Token 294: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6931546926498413
    2. ' //' → logprob: -0.6931546926498413
    3. ' ' → logprob: -12.443154335021973
    4. '/' → logprob: -13.943154335021973
    5. ' ' → logprob: -14.068154335021973
    6. ' /' → logprob: -14.193154335021973
    7. '/i' → logprob: -15.193154335021973
    8. '   ' → logprob: -15.693154335021973
    9. '```' → logprob: -15.943154335021973
    10. '//=' → logprob: -16.19315528869629

Token 295: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019373197574168444
    2. ' i' → logprob: -6.251937389373779
    3. ')' → logprob: -13.001936912536621
    4. ' ' → logprob: -13.126936912536621
    5. '	i' → logprob: -13.376936912536621
    6. ')i' → logprob: -15.001936912536621
    7. '```' → logprob: -15.064436912536621
    8. ' ' → logprob: -15.064436912536621
    9. '_i' → logprob: -15.126936912536621
    10. '[i' → logprob: -15.126936912536621

Token 296: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.297462171758525e-05
    2. ' )' → logprob: -11.125033378601074
    3. ')
' → logprob: -11.875033378601074
    4. '))' → logprob: -12.000033378601074
    5. '())' → logprob: -13.250033378601074
    6. ')`' → logprob: -13.875033378601074
    7. '   ' → logprob: -14.375033378601074
    8. '       ' → logprob: -14.875033378601074
    9. '])' → logprob: -15.375033378601074
    10. ')}' → logprob: -15.500033378601074

Token 297: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7570773363113403
    2. 'A' → logprob: -1.1320773363113403
    3. 'print' → logprob: -2.757077217102051
    4. '<|end|>' → logprob: -2.882077217102051
    5. '#' → logprob: -3.007077217102051
    6. '

' → logprob: -4.007077217102051
    7. ')' → logprob: -5.382077217102051
    8. '  
' → logprob: -5.507077217102051
    9. '```' → logprob: -5.757077217102051
    10. ' A' → logprob: -6.132077217102051

Token 298: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: ' Aj' (ID: 28294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06167800724506378
    2. '<|end|>' → logprob: -3.436677932739258
    3. ' )' → logprob: -4.561677932739258
    4. '               ' → logprob: -4.936677932739258
    5. '           ' → logprob: -5.561677932739258
    6. ' ' → logprob: -5.811677932739258
    7. 'append' → logprob: -7.311677932739258
    8. 'A' → logprob: -7.811677932739258
    9. '       ' → logprob: -8.061677932739258
    10. ' A' → logprob: -8.186677932739258

Token 300: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.00021402664424385875
    2. 'outer' → logprob: -8.750213623046875
    3. 'outez' → logprob: -10.000213623046875
    4. 'outes' → logprob: -11.625213623046875
    5. 'out' → logprob: -13.875213623046875
    6. 'uste' → logprob: -16.375213623046875
    7. 'd' → logprob: -17.375213623046875
    8. 'j' → logprob: -18.375213623046875
    9. 'ou' → logprob: -19.000213623046875
    10. 'x' → logprob: -19.750213623046875

Token 301: ' ce' (ID: 2357)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.38976067304611206
    2. '(M' → logprob: -1.1397607326507568
    3. ' M' → logprob: -5.889760494232178
    4. '   ' → logprob: -10.264760971069336
    5. ' (' → logprob: -10.764760971069336
    6. ')' → logprob: -11.139760971069336
    7. '(' → logprob: -11.139760971069336
    8. ' ' → logprob: -11.764760971069336
    9. 'i' → logprob: -12.264760971069336
    10. '(i' → logprob: -12.389760971069336

Token 302: ' second' (ID: 3099)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7824745774269104
    2. ' /' → logprob: -1.9074745178222656
    3. '(M' → logprob: -2.2824745178222656
    4. '/' → logprob: -2.2824745178222656
    5. 'div' → logprob: -2.7824745178222656
    6. '/div' → logprob: -3.4074745178222656
    7. '/M' → logprob: -4.032474517822266
    8. ' ' → logprob: -4.282474517822266
    9. '   ' → logprob: -4.407474517822266
    10. 'M' → logprob: -4.407474517822266

Token 303: ' div' (ID: 4223)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5377712845802307
    2. 'div' → logprob: -0.9127712845802307
    3. 'i' → logprob: -4.662771224975586
    4. ' )' → logprob: -6.287771224975586
    5. ' div' → logprob: -7.037771224975586
    6. '(div' → logprob: -7.287771224975586
    7. '(i' → logprob: -7.412771224975586
    8. ' i' → logprob: -7.537771224975586
    9. ' ' → logprob: -9.037771224975586
    10. ' divisor' → logprob: -9.662771224975586

Token 304: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.0023468725848942995
    2. 'ise' → logprob: -6.752346992492676
    3. 'vise' → logprob: -7.502346992492676
    4. 'is' → logprob: -8.252346992492676
    5. '```' → logprob: -9.127346992492676
    6. 'isor' → logprob: -10.127346992492676
    7. ' is' → logprob: -10.377346992492676
    8. '   ' → logprob: -10.377346992492676
    9. ')' → logprob: -11.002346992492676
    10. 'i' → logprob: -11.127346992492676

Token 305: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00773605378344655
    2. '(' → logprob: -5.8827362060546875
    3. '<|end|>' → logprob: -6.7577362060546875
    4. '   ' → logprob: -6.8827362060546875
    5. '()' → logprob: -7.1327362060546875
    6. ' ' → logprob: -8.132736206054688
    7. '(i' → logprob: -8.257736206054688
    8. '```' → logprob: -8.382736206054688
    9. 'i' → logprob: -8.632736206054688
    10. ')i' → logprob: -8.882736206054688

Token 306: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1305062174797058
    2. 'i' → logprob: -2.1305062770843506
    3. 'M' → logprob: -7.1305060386657715
    4. ' A' → logprob: -7.1305060386657715
    5. 'la' → logprob: -7.5055060386657715
    6. 'l' → logprob: -7.7555060386657715
    7. ')' → logprob: -7.8805060386657715
    8. ' i' → logprob: -8.00550651550293
    9. ' ' → logprob: -8.88050651550293
    10. ' la' → logprob: -10.00550651550293

Token 307: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.25373390316963196
    2. 'A' → logprob: -1.5037338733673096
    3. 'list' → logprob: -6.503734111785889
    4. ' liste' → logprob: -8.62873363494873
    5. ' A' → logprob: -9.12873363494873
    6. 'lista' → logprob: -11.75373363494873
    7. '```' → logprob: -12.12873363494873
    8. 'Liste' → logprob: -13.87873363494873
    9. 'la' → logprob: -14.00373363494873
    10. 'lis' → logprob: -14.12873363494873

Token 308: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0415878295898438
    2. ')' → logprob: -2.4165878295898438
    3. 'sorted' → logprob: -2.6665878295898438
    4. '
' → logprob: -2.7915878295898438
    5. '.sort' → logprob: -2.7915878295898438
    6. 'print' → logprob: -3.0415878295898438
    7. 'sort' → logprob: -3.1665878295898438
    8. ' ' → logprob: -3.5415878295898438
    9. '```' → logprob: -3.5415878295898438
    10. '(' → logprob: -3.5415878295898438

Token 309: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2518187165260315
    2. 'A' → logprob: -2.6268186569213867
    3. 'print' → logprob: -3.0018186569213867
    4. '

' → logprob: -3.3768186569213867
    5. '<|end|>' → logprob: -3.3768186569213867
    6. '#' → logprob: -4.501818656921387
    7. ')' → logprob: -5.001818656921387
    8. ' A' → logprob: -5.501818656921387
    9. '```' → logprob: -6.126818656921387
    10. '.sort' → logprob: -6.251818656921387

Token 310: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02369135059416294
    2. 'print' → logprob: -3.773691415786743
    3. '#' → logprob: -8.773691177368164
    4. '
' → logprob: -8.898691177368164
    5. 'if' → logprob: -10.148691177368164
    6. '

' → logprob: -10.273691177368164
    7. 'for' → logprob: -10.898691177368164
    8. '```' → logprob: -11.273691177368164
    9. ' A' → logprob: -11.523691177368164
    10. '    
' → logprob: -11.773691177368164

Token 311: ' Trie' (ID: 131955)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10220219939947128
    2. 'print' → logprob: -2.4772021770477295
    3. 'if' → logprob: -4.352202415466309
    4. 'for' → logprob: -8.727202415466309
    5. ' A' → logprob: -9.727202415466309
    6. '#' → logprob: -11.227202415466309
    7. ' if' → logprob: -11.477202415466309
    8. ' print' → logprob: -11.602202415466309
    9. 'result' → logprob: -11.727202415466309
    10. 'prin' → logprob: -11.977202415466309

Token 312: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007647183374501765
    2. ' A' → logprob: -7.500764846801758
    3. '(A' → logprob: -8.500764846801758
    4. '()' → logprob: -12.500764846801758
    5. '(' → logprob: -13.375764846801758
    6. 'the' → logprob: -13.750764846801758
    7. 's' → logprob: -15.125764846801758
    8. '   ' → logprob: -15.125764846801758
    9. '()
' → logprob: -15.500764846801758
    10. ' the' → logprob: -15.500764846801758

Token 313: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00023357603640761226
    2. ' A' → logprob: -8.37523365020752
    3. 'list' → logprob: -13.37523365020752
    4. 'liste' → logprob: -14.87523365020752
    5. 'sorted' → logprob: -14.87523365020752
    6. 's' → logprob: -15.25023365020752
    7. ' ' → logprob: -15.37523365020752
    8. 'final' → logprob: -16.500232696533203
    9. 'a' → logprob: -16.750232696533203
    10. '
' → logprob: -16.875232696533203

Token 314: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.505351095460355e-05
    2. '(A' → logprob: -9.750075340270996
    3. ' A' → logprob: -11.000075340270996
    4. '(' → logprob: -17.00007438659668
    5. '_A' → logprob: -18.50007438659668
    6. '	A' → logprob: -19.00007438659668
    7. '(
' → logprob: -19.37507438659668
    8. '.sort' → logprob: -19.50007438659668
    9. '
' → logprob: -19.62507438659668
    10. 'sort' → logprob: -19.62507438659668

Token 315: ' en' (ID: 469)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00033593899570405483
    2. '.sort' → logprob: -8.125335693359375
    3. '.' → logprob: -10.500335693359375
    4. ' A' → logprob: -11.625335693359375
    5. '
' → logprob: -13.000335693359375
    6. ',' → logprob: -15.125335693359375
    7. '.A' → logprob: -15.250335693359375
    8. ')' → logprob: -15.625335693359375
    9. '.
' → logprob: -15.625335693359375
    10. 'sort' → logprob: -16.250335693359375

Token 316: ' place' (ID: 2475)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.3243986666202545
    2. 'ordre' → logprob: -1.6993986368179321
    3. 'sorted' → logprob: -3.1993987560272217
    4. 'A' → logprob: -3.3243987560272217
    5. 'descending' → logprob: -4.574398517608643
    6. 'order' → logprob: -5.824398517608643
    7. 'place' → logprob: -7.074398517608643
    8. ' ordre' → logprob: -7.324398517608643
    9. ' A' → logprob: -7.574398517608643
    10. 'd' → logprob: -7.949398517608643

Token 317: ' par' (ID: 686)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.128163257315464e-07
    2. ' A' → logprob: -15.25
    3. '```' → logprob: -21.125
    4. '   ' → logprob: -21.75
    5. '.sort' → logprob: -23.25
    6. 'sort' → logprob: -24.0
    7. '_A' → logprob: -24.0
    8. '
' → logprob: -24.5
    9. '	A' → logprob: -24.875
    10. 'a' → logprob: -25.75

Token 318: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.33550795912742615
    2. 'A' → logprob: -1.3355079889297485
    3. ' ordre' → logprob: -4.085507869720459
    4. ' A' → logprob: -5.460507869720459
    5. 'reverse' → logprob: -7.960507869720459
    6. 'val' → logprob: -8.960508346557617
    7. '#' → logprob: -9.460508346557617
    8. 'order' → logprob: -9.710508346557617
    9. 'ord' → logprob: -10.210508346557617
    10. 'd' → logprob: -10.460508346557617

Token 319: ' cro' (ID: 11270)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.44487011432647705
    2. 'cro' → logprob: -1.069870114326477
    3. ' A' → logprob: -5.1948699951171875
    4. 'asc' → logprob: -5.8198699951171875
    5. 'reverse' → logprob: -6.4448699951171875
    6. '.reverse' → logprob: -6.4448699951171875
    7. '.sort' → logprob: -6.8198699951171875
    8. 'd' → logprob: -7.1948699951171875
    9. '(A' → logprob: -7.3198699951171875
    10. ' cro' → logprob: -7.8198699951171875

Token 320: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.0011847536079585552
    2. 'issent' → logprob: -6.876184940338135
    3. 'issante' → logprob: -10.001184463500977
    4. 'issa' → logprob: -10.626184463500977
    5. 'iss' → logprob: -10.751184463500977
    6. 'ss' → logprob: -11.251184463500977
    7. 'issance' → logprob: -11.251184463500977
    8. 'issement' → logprob: -11.751184463500977
    9. '```' → logprob: -11.751184463500977
    10. 'i' → logprob: -12.126184463500977

Token 321: ' (' (ID: 350)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.704273118884885e-07
    2. ' A' → logprob: -14.500000953674316
    3. '
' → logprob: -15.875000953674316
    4. '   ' → logprob: -19.5
    5. '```' → logprob: -19.625
    6. '.sort' → logprob: -20.5
    7. 'sort' → logprob: -21.75
    8. '    
' → logprob: -22.5
    9. ' ' → logprob: -22.5
    10. 'a' → logprob: -22.5

Token 322: 'du' (ID: 698)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0023848069831728935
    2. ' A' → logprob: -6.252384662628174
    3. ')' → logprob: -7.752384662628174
    4. ')
' → logprob: -10.752385139465332
    5. '   ' → logprob: -12.752385139465332
    6. ' )' → logprob: -14.252385139465332
    7. '```' → logprob: -14.627385139465332
    8. ' ' → logprob: -14.752385139465332
    9. '
' → logprob: -14.877385139465332
    10. ' )
' → logprob: -16.002384185791016

Token 323: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.9090114235877991
    2. 'val' → logprob: -1.2840113639831543
    3. 'A' → logprob: -2.0340113639831543
    4. ' plus' → logprob: -2.2840113639831543
    5. 'élé' → logprob: -3.0340113639831543
    6. 'nombre' → logprob: -4.659011363983154
    7. 'def' → logprob: -5.284011363983154
    8. ' A' → logprob: -5.659011363983154
    9. ')' → logprob: -6.159011363983154
    10. '#' → logprob: -6.409011363983154

Token 324: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.08068565279245377
    2. ' petit' → logprob: -2.705685615539551
    3. 'grand' → logprob: -5.205685615539551
    4. 'A' → logprob: -5.705685615539551
    5. ' A' → logprob: -7.580685615539551
    6. '```' → logprob: -8.08068561553955
    7. ' grand' → logprob: -8.45568561553955
    8. ' pet' → logprob: -8.83068561553955
    9. 'small' → logprob: -9.20568561553955
    10. ')' → logprob: -9.33068561553955

Token 325: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17633874714374542
    2. 'A' → logprob: -1.926338791847229
    3. 'élé' → logprob: -5.0513386726379395
    4. 'à' → logprob: -5.8013386726379395
    5. ' A' → logprob: -6.4263386726379395
    6. ' à' → logprob: -6.8013386726379395
    7. ')
' → logprob: -7.3013386726379395
    8. '```' → logprob: -7.5513386726379395
    9. ',' → logprob: -7.9263386726379395
    10. ' )' → logprob: -8.301339149475098

Token 326: ' plus' (ID: 2932)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.003638915251940489
    2. ' grand' → logprob: -5.878638744354248
    3. 'plus' → logprob: -8.003639221191406
    4. 'large' → logprob: -8.128639221191406
    5. 'gr' → logprob: -9.628639221191406
    6. '```' → logprob: -9.878639221191406
    7. 'pet' → logprob: -10.378639221191406
    8. '#' → logprob: -11.503639221191406
    9. 'python' → logprob: -11.628639221191406
    10. 'élé' → logprob: -11.878639221191406

Token 327: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.00015681622608099133
    2. ' grand' → logprob: -9.37515640258789
    3. 'gr' → logprob: -9.87515640258789
    4. 'large' → logprob: -11.25015640258789
    5. '```' → logprob: -12.37515640258789
    6. 'pet' → logprob: -13.62515640258789
    7. 'Grand' → logprob: -13.87515640258789
    8. 'g' → logprob: -14.75015640258789
    9. 'gran' → logprob: -15.37515640258789
    10. 'plus' → logprob: -15.50015640258789

Token 328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02364536188542843
    2. 'A' → logprob: -4.148645401000977
    3. ')
' → logprob: -4.898645401000977
    4. ')
' → logprob: -10.398645401000977
    5. '(A' → logprob: -11.023645401000977
    6. 'sort' → logprob: -11.148645401000977
    7. ' A' → logprob: -11.398645401000977
    8. '()' → logprob: -11.398645401000977
    9. 'print' → logprob: -11.898645401000977
    10. 'a' → logprob: -12.273645401000977

Token 329: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.320199877838604e-07
    2. ' A' → logprob: -14.75
    3. '```' → logprob: -20.5
    4. 'a' → logprob: -22.125
    5. '
' → logprob: -22.375
    6. '   ' → logprob: -23.625
    7. '	A' → logprob: -23.875
    8. 'print' → logprob: -25.375
    9. 'А' → logprob: -25.75
    10. 'sort' → logprob: -26.0

Token 330: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00033546582562848926
    2. '.' → logprob: -8.000335693359375
    3. ' .' → logprob: -17.000335693359375
    4. 'sort' → logprob: -18.000335693359375
    5. '.sorted' → logprob: -18.625335693359375
    6. '.reverse' → logprob: -18.750335693359375
    7. '.Sort' → logprob: -19.000335693359375
    8. '.s' → logprob: -19.125335693359375
    9. '.append' → logprob: -19.250335693359375
    10. '​.' → logprob: -20.000335693359375

Token 331: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001322639436693862
    2. '(' → logprob: -9.12513256072998
    3. '()
' → logprob: -10.75013256072998
    4. '()

' → logprob: -14.12513256072998
    5. '()`' → logprob: -15.25013256072998
    6. ' ()' → logprob: -15.50013256072998
    7. '()\' → logprob: -16.000131607055664
    8. '()
' → logprob: -16.125131607055664
    9. '())' → logprob: -16.375131607055664
    10. ')' → logprob: -16.500131607055664

Token 332: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10441664606332779
    2. 'for' → logprob: -2.354416608810425
    3. 'if' → logprob: -5.479416847229004
    4. '```' → logprob: -11.604416847229004
    5. ' for' → logprob: -12.354416847229004
    6. '#' → logprob: -12.354416847229004
    7. 'prin' → logprob: -12.604416847229004
    8. ' print' → logprob: -13.229416847229004
    9. 'pr' → logprob: -13.479416847229004
    10. '#print' → logprob: -13.729416847229004

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327192187309265
    2. ' =' → logprob: -0.7577192187309265
    3. '_' → logprob: -10.257719039916992
    4. ' ' → logprob: -10.382719039916992
    5. ')' → logprob: -11.382719039916992
    6. ',' → logprob: -11.882719039916992
    7. '=[]' → logprob: -12.132719039916992
    8. '[' → logprob: -12.382719039916992
    9. ' =
' → logprob: -12.382719039916992
    10. 'space' → logprob: -12.507719039916992

Token 334: ' A' (ID: 355)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41214561462402344
    2. 'A' → logprob: -1.6621456146240234
    3. '-' → logprob: -2.4121456146240234
    4. 'len' → logprob: -3.6621456146240234
    5. ' ' → logprob: -4.162145614624023
    6. ' A' → logprob: -5.037145614624023
    7. ' -' → logprob: -5.912145614624023
    8. 'max' → logprob: -6.162145614624023
    9. '1' → logprob: -6.662145614624023
    10. 'sum' → logprob: -6.662145614624023

Token 335: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.4360518455505371
    2. '[' → logprob: -1.061051845550537
    3. '[::-' → logprob: -6.061051845550537
    4. '[:]' → logprob: -6.436051845550537
    5. '<|end|>' → logprob: -6.811051845550537
    6. '[:' → logprob: -7.811051845550537
    7. '[len' → logprob: -7.936051845550537
    8. '[]' → logprob: -7.936051845550537
    9. '.' → logprob: -8.186052322387695
    10. '[N' → logprob: -8.311052322387695

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -15.625
    3. ' ' → logprob: -16.375
    4. '3' → logprob: -18.5
    5. '0' → logprob: -18.6875
    6. '１' → logprob: -19.375
    7. '```' → logprob: -19.625
    8. '10' → logprob: -19.875
    9. '4' → logprob: -19.9375
    10. ']' → logprob: -20.0

Token 337: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023666091728955507
    2. ')' → logprob: -6.252366542816162
    3. ' ]' → logprob: -8.25236701965332
    4. '}' → logprob: -9.62736701965332
    5. '])' → logprob: -10.00236701965332
    6. ')]' → logprob: -10.12736701965332
    7. ' if' → logprob: -11.75236701965332
    8. 'if' → logprob: -12.00236701965332
    9. ']
' → logprob: -12.25236701965332
    10. '']' → logprob: -13.37736701965332

Token 338: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06317435204982758
    2. '
' → logprob: -2.813174247741699
    3. '<|end|>' → logprob: -7.063174247741699
    4. ' print' → logprob: -8.5631742477417
    5. '
' → logprob: -9.8131742477417
    6. ')' → logprob: -10.6881742477417
    7. ' 
' → logprob: -11.0631742477417
    8. 'if' → logprob: -11.6881742477417
    9. '#' → logprob: -11.6881742477417
    10. '#print' → logprob: -11.9381742477417

Token 339: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007851367816329002
    2. '
' → logprob: -5.007851600646973
    3. '<|end|>' → logprob: -6.882851600646973
    4. ' print' → logprob: -9.507851600646973
    5. ')' → logprob: -11.382851600646973
    6. '
' → logprob: -12.632851600646973
    7. '```' → logprob: -12.882851600646973
    8. '\n' → logprob: -13.007851600646973
    9. '#print' → logprob: -13.132851600646973
    10. 'if' → logprob: -13.132851600646973

Token 340: ' R' (ID: 460)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5213274309644476e-05
    2. ' print' → logprob: -11.125015258789062
    3. 'prin' → logprob: -15.750015258789062
    4. '#' → logprob: -15.875015258789062
    5. '#print' → logprob: -17.000015258789062
    6. 'for' → logprob: -17.000015258789062
    7. 'if' → logprob: -17.500015258789062
    8. 'pr' → logprob: -17.625015258789062
    9. 'Print' → logprob: -18.875015258789062
    10. '```' → logprob: -19.750015258789062

Token 341: 'éc' (ID: 5675)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2035139948129654
    2. 'print' → logprob: -2.7035140991210938
    3. 'eturn' → logprob: -2.8285140991210938
    4. ' =' → logprob: -3.3285140991210938
    5. '#' → logprob: -4.953514099121094
    6. '[' → logprob: -5.578514099121094
    7. 'e' → logprob: -5.953514099121094
    8. 'a' → logprob: -6.078514099121094
    9. 'es' → logprob: -6.953514099121094
    10. 'ans' → logprob: -7.203514099121094

Token 342: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.009969036094844341
    2. 'u' → logprob: -4.759969234466553
    3. 'uper' → logprob: -7.384969234466553
    4. 'upr' → logprob: -8.134968757629395
    5. 'upe' → logprob: -9.134968757629395
    6. 'upp' → logprob: -9.509968757629395
    7. '#' → logprob: -10.634968757629395
    8. 'é' → logprob: -10.759968757629395
    9. '_' → logprob: -10.884968757629395
    10. 'umé' → logprob: -11.259968757629395

Token 343: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6268923282623291
    2. 'ère' → logprob: -1.001892328262329
    3. 'érer' → logprob: -2.876892328262329
    4. 'e' → logprob: -4.12689208984375
    5. 'ere' → logprob: -5.62689208984375
    6. 'ière' → logprob: -5.62689208984375
    7. 'ér' → logprob: -5.75189208984375
    8. 'érez' → logprob: -5.87689208984375
    9. 'ére' → logprob: -6.25189208984375
    10. 'ène' → logprob: -6.75189208984375

Token 344: ' le' (ID: 505)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.9590538144111633
    2. ' la' → logprob: -1.3340537548065186
    3. 'A' → logprob: -1.8340537548065186
    4. ' l' → logprob: -2.2090537548065186
    5. ' le' → logprob: -4.084053993225098
    6. ' the' → logprob: -4.209053993225098
    7. 'the' → logprob: -4.459053993225098
    8. ' ' → logprob: -4.459053993225098
    9. ' len' → logprob: -4.459053993225098
    10. 'len' → logprob: -4.709053993225098

Token 345: ' plus' (ID: 2932)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9944932460784912
    2. 'max' → logprob: -1.9944932460784912
    3. 'maximum' → logprob: -2.119493246078491
    4. 'last' → logprob: -2.369493246078491
    5. ' ' → logprob: -2.494493246078491
    6. 'dern' → logprob: -2.619493246078491
    7. 'largest' → logprob: -3.244493246078491
    8. 'len' → logprob: -4.11949348449707
    9. ' last' → logprob: -4.11949348449707
    10. ' dernier' → logprob: -4.36949348449707

Token 346: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.08937866240739822
    2. ' grand' → logprob: -2.464378595352173
    3. 'élé' → logprob: -9.089378356933594
    4. 'large' → logprob: -9.589378356933594
    5. '_' → logprob: -9.589378356933594
    6. '```' → logprob: -10.464378356933594
    7. 'Grand' → logprob: -10.839378356933594
    8. ' grande' → logprob: -10.964378356933594
    9. 'gr' → logprob: -10.964378356933594
    10. 'g' → logprob: -11.339378356933594

Token 347: ' élément' (ID: 99627)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.5087055563926697
    2. 'élé' → logprob: -1.2587056159973145
    3. ' élément' → logprob: -2.6337056159973145
    4. ' ' → logprob: -4.6337056159973145
    5. '_' → logprob: -4.8837056159973145
    6. 'element' → logprob: -5.0087056159973145
    7. '<|end|>' → logprob: -5.2587056159973145
    8. ')' → logprob: -5.2587056159973145
    9. ' divisible' → logprob: -6.0087056159973145
    10. ' div' → logprob: -6.8837056159973145

Token 348: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0710812583565712
    2. '
' → logprob: -2.9460811614990234
    3. '<|end|>' → logprob: -4.196081161499023
    4. ' print' → logprob: -7.446081161499023
    5. ' 
' → logprob: -9.571081161499023
    6. 'if' → logprob: -9.571081161499023
    7. '
' → logprob: -10.071081161499023
    8. ' if' → logprob: -10.196081161499023
    9. ')' → logprob: -10.321081161499023
    10. '(print' → logprob: -10.571081161499023

Token 349: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.547789674485102e-05
    2. ' A' → logprob: -10.250035285949707
    3. 'ans' → logprob: -17.625036239624023
    4. 'a' → logprob: -20.375036239624023
    5. '(A' → logprob: -20.500036239624023
    6. 'the' → logprob: -21.000036239624023
    7. '```' → logprob: -21.125036239624023
    8. ' ' → logprob: -21.625036239624023
    9. '	A' → logprob: -21.625036239624023
    10. '_A' → logprob: -21.750036239624023

Token 350: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.15125130116939545
    2. 'liste' → logprob: -2.1512513160705566
    3. 'list' → logprob: -4.526251316070557
    4. 'code' → logprob: -5.026251316070557
    5. ' A' → logprob: -6.151251316070557
    6. 'a' → logprob: -6.901251316070557
    7. '```' → logprob: -7.526251316070557
    8. 'ans' → logprob: -7.651251316070557
    9. 's' → logprob: -8.026250839233398
    10. '#' → logprob: -8.151250839233398

Token 351: ' A' (ID: 355)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5570885807392187e-05
    2. ' print' → logprob: -11.125015258789062
    3. 'prin' → logprob: -15.000015258789062
    4. '
' → logprob: -15.250015258789062
    5. '.print' → logprob: -16.875015258789062
    6. 'pr' → logprob: -17.125015258789062
    7. 'pri' → logprob: -17.250015258789062
    8. ')' → logprob: -17.375015258789062
    9. '-print' → logprob: -17.750015258789062
    10. '(print' → logprob: -17.875015258789062

Token 352: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9623810658231378e-05
    2. ' print' → logprob: -10.875020027160645
    3. 'prin' → logprob: -14.875020027160645
    4. '
' → logprob: -15.625020027160645
    5. '.print' → logprob: -16.500019073486328
    6. '#print' → logprob: -17.875019073486328
    7. ')' → logprob: -18.000019073486328
    8. '```' → logprob: -18.125019073486328
    9. '(print' → logprob: -18.250019073486328
    10. 'pri' → logprob: -18.375019073486328

Token 353: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002019047737121582
    2. ' if' → logprob: -6.752018928527832
    3. 'if' → logprob: -7.627018928527832
    4. ')
' → logprob: -8.752018928527832
    5. ' )' → logprob: -9.127018928527832
    6. ']' → logprob: -10.252018928527832
    7. '])' → logprob: -11.502018928527832
    8. '```' → logprob: -11.502018928527832
    9. ' ' → logprob: -11.752018928527832
    10. '
' → logprob: -12.377018928527832

Token 354: '’est' (ID: 6838)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1062636375427246
    2. '']' → logprob: -1.4812636375427246
    3. 'o' → logprob: -2.4812636375427246
    4. '#' → logprob: -2.7312636375427246
    5. 'a' → logprob: -2.8562636375427246
    6. 'e' → logprob: -2.8562636375427246
    7. ')' → logprob: -2.9812636375427246
    8. ']' → logprob: -3.1062636375427246
    9. 'on' → logprob: -3.9812636375427246
    10. ''est' → logprob: -4.106263637542725

Token 355: '-à' (ID: 56297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36255577206611633
    2. 'le' → logprob: -2.362555742263794
    3. ' celui' → logprob: -2.487555742263794
    4. ']' → logprob: -2.862555742263794
    5. 'l' → logprob: -3.737555742263794
    6. 'la' → logprob: -4.987555980682373
    7. ' la' → logprob: -5.112555980682373
    8. ' le' → logprob: -5.362555980682373
    9. '#' → logprob: -5.487555980682373
    10. ' )' → logprob: -5.612555980682373

Token 356: '-dire' (ID: 76064)
  Prédit: '-dire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-dire' → logprob: -1.740358829498291
    2. 'part' → logprob: -2.115358829498291
    3. 'a' → logprob: -2.365358829498291
    4. '-à' → logprob: -2.615358829498291
    5. 'possible' → logprob: -2.615358829498291
    6. ')' → logprob: -2.865358829498291
    7. '#' → logprob: -2.990358829498291
    8. 'fin' → logprob: -2.990358829498291
    9. 'la' → logprob: -3.240358829498291
    10. 'dire' → logprob: -3.240358829498291

Token 357: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.017576631158590317
    2. ')' → logprob: -4.892576694488525
    3. ' le' → logprob: -5.392576694488525
    4. 'la' → logprob: -6.142576694488525
    5. ' celui' → logprob: -6.642576694488525
    6. 'cel' → logprob: -7.392576694488525
    7. 'A' → logprob: -8.642576217651367
    8. 'un' → logprob: -8.642576217651367
    9. 'l' → logprob: -8.767576217651367
    10. '#' → logprob: -8.892576217651367

Token 358: ' dernier' (ID: 27982)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.48196905851364136
    2. 'plus' → logprob: -0.9819690585136414
    3. 'max' → logprob: -5.731968879699707
    4. 'maximum' → logprob: -6.356968879699707
    5. 'dern' → logprob: -6.606968879699707
    6. 'me' → logprob: -6.856968879699707
    7. 'nombre' → logprob: -8.856968879699707
    8. 'prem' → logprob: -9.606968879699707
    9. ' plus' → logprob: -9.856968879699707
    10. 'élé' → logprob: -10.481968879699707

Token 359: ' après' (ID: 16460)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.057474423199892044
    2. '])' → logprob: -3.557474374771118
    3. ')' → logprob: -3.682474374771118
    4. ' ]' → logprob: -6.557474613189697
    5. 'élé' → logprob: -8.057474136352539
    6. ' ])' → logprob: -9.057474136352539
    7. ' élément' → logprob: -9.182474136352539
    8. 'element' → logprob: -9.182474136352539
    9. ' )' → logprob: -9.932474136352539
    10. ' ' → logprob: -10.932474136352539

Token 360: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.035111378878355026
    2. 'le' → logprob: -3.535111427307129
    3. 'tr' → logprob: -5.535111427307129
    4. 'sort' → logprob: -8.035111427307129
    5. 'sorting' → logprob: -8.160111427307129
    6. 'tris' → logprob: -8.160111427307129
    7. 'l' → logprob: -8.285111427307129
    8. 'la' → logprob: -8.785111427307129
    9. 'A' → logprob: -10.410111427307129
    10. 't' → logprob: -10.660111427307129

Token 361: '),' (ID: 936)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6497922539710999
    2. ']' → logprob: -0.8997922539710999
    3. ')' → logprob: -2.649792194366455
    4. ' ])' → logprob: -8.524792671203613
    5. ' ]' → logprob: -9.274792671203613
    6. ')]' → logprob: -9.274792671203613
    7. ')])' → logprob: -10.024792671203613
    8. ']))' → logprob: -11.399792671203613
    9. '])
' → logprob: -11.399792671203613
    10. '])]' → logprob: -11.524792671203613

Token 362: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.500000953674316
    3. '
' → logprob: -16.5
    4. '#print' → logprob: -18.875
    5. 'for' → logprob: -19.75
    6. '
' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. 'if' → logprob: -21.625
    9. '

' → logprob: -22.25
    10. 'prin' → logprob: -22.25

Token 363: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. ' print' → logprob: -13.250001907348633
    3. '#print' → logprob: -18.625001907348633
    4. '
' → logprob: -19.875001907348633
    5. '#' → logprob: -21.000001907348633
    6. '.print' → logprob: -21.625001907348633
    7. 'pr' → logprob: -21.875001907348633
    8. 'prin' → logprob: -22.000001907348633
    9. '```' → logprob: -22.125001907348633
    10. '_print' → logprob: -22.625001907348633

Token 364: '’ass' (ID: 34051)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05676161125302315
    2. '#' → logprob: -3.0567615032196045
    3. '#print' → logprob: -5.431761741638184
    4. ' print' → logprob: -5.681761741638184
    5. ' #' → logprob: -8.306761741638184
    6. '```' → logprob: -10.431761741638184
    7. '_print' → logprob: -10.556761741638184
    8. '=' → logprob: -11.306761741638184
    9. '`' → logprob: -12.056761741638184
    10. 'est' → logprob: -12.056761741638184

Token 365: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.010780034586787224
    2. 'ign' → logprob: -4.635779857635498
    3. '#' → logprob: -7.635779857635498
    4. 'i' → logprob: -8.885780334472656
    5. 'igned' → logprob: -9.135780334472656
    6. 'a' → logprob: -9.510780334472656
    7. 's' → logprob: -10.385780334472656
    8. 'ignee' → logprob: -10.635780334472656
    9. 'igné' → logprob: -10.760780334472656
    10. '

' → logprob: -10.760780334472656

Token 366: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009494528640061617
    2. ')' → logprob: -7.500949382781982
    3. '(print' → logprob: -8.62594985961914
    4. '(ans' → logprob: -9.12594985961914
    5. ' print' → logprob: -10.12594985961914
    6. '(' → logprob: -10.62594985961914
    7. 'ans' → logprob: -11.12594985961914
    8. '#' → logprob: -11.37594985961914
    9. '=' → logprob: -12.75094985961914
    10. '```' → logprob: -13.12594985961914

Token 367: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1279553291387856e-05
    2. ' ans' → logprob: -11.750011444091797
    3. '"' → logprob: -13.125011444091797
    4. ''' → logprob: -14.875011444091797
    5. '	ans' → logprob: -15.000011444091797
    6. '(ans' → logprob: -15.125011444091797
    7. '_ans' → logprob: -15.750011444091797
    8. 'answer' → logprob: -16.000011444091797
    9. ''s' → logprob: -16.500011444091797
    10. 'A' → logprob: -18.000011444091797

Token 368: ' variable' (ID: 11076)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029828587546944618
    2. 'plus' → logprob: -4.6548285484313965
    3. 'variable' → logprob: -5.0298285484313965
    4. 'answer' → logprob: -5.1548285484313965
    5. 'var' → logprob: -6.2798285484313965
    6. 'a' → logprob: -6.9048285484313965
    7. 'result' → logprob: -7.0298285484313965
    8. 'max' → logprob: -7.7798285484313965
    9. 'code' → logprob: -7.9048285484313965
    10. 'nom' → logprob: -8.279829025268555

Token 369: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.127333340875339e-06
    2. 'answer' → logprob: -13.000003814697266
    3. ' ans' → logprob: -14.625003814697266
    4. '=' → logprob: -14.750003814697266
    5. '(ans' → logprob: -14.750003814697266
    6. '_ans' → logprob: -14.750003814697266
    7. '```' → logprob: -16.250003814697266
    8. '`' → logprob: -17.250003814697266
    9. '	ans' → logprob: -18.375003814697266
    10. ' =' → logprob: -19.125003814697266

Token 370: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. ' print' → logprob: -13.250001907348633
    3. '
' → logprob: -15.875001907348633
    4. 'prin' → logprob: -17.375001907348633
    5. '```' → logprob: -18.250001907348633
    6. 'pr' → logprob: -19.375001907348633
    7. '#print' → logprob: -19.500001907348633
    8. '.print' → logprob: -19.750001907348633
    9. '<|end|>' → logprob: -20.000001907348633
    10. '
' → logprob: -20.375001907348633

Token 371: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. ' print' → logprob: -13.375001907348633
    3. '
' → logprob: -16.750001907348633
    4. '```' → logprob: -18.250001907348633
    5. '#print' → logprob: -18.750001907348633
    6. 'prin' → logprob: -19.250001907348633
    7. 'if' → logprob: -19.750001907348633
    8. 'pr' → logprob: -20.625001907348633
    9. '#' → logprob: -21.250001907348633
    10. '.print' → logprob: -21.250001907348633

Token 372: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741240441799164
    2. '(ans' → logprob: -0.9741240739822388
    3. '("("' → logprob: -10.59912395477295
    4. '()' → logprob: -11.59912395477295
    5. '('' → logprob: -12.09912395477295
    6. ' (' → logprob: -13.34912395477295
    7. '("' → logprob: -13.72412395477295
    8. '(
' → logprob: -13.97412395477295
    9. '(`' → logprob: -14.34912395477295
    10. '(a' → logprob: -14.34912395477295

Token 373: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.000000953674316
    3. '))' → logprob: -16.125
    4. ')`' → logprob: -17.0
    5. '()' → logprob: -18.0
    6. '')' → logprob: -18.625
    7. '())' → logprob: -18.75
    8. ')}' → logprob: -19.0
    9. '`)' → logprob: -19.25
    10. '）' → logprob: -20.5

Token 374: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 375: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 376: ' Aff' (ID: 13741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6988147497177124
    2. '<|end|>' → logprob: -0.8238147497177124
    3. 'print' → logprob: -3.073814868927002
    4. ' ' → logprob: -5.198814868927002
    5. '<|end|>' → logprob: -5.823814868927002
    6. '```' → logprob: -6.198814868927002
    7. ' )' → logprob: -6.448814868927002
    8. ' print' → logprob: -6.698814868927002
    9. '#' → logprob: -6.948814868927002
    10. '\n' → logprob: -7.073814868927002

Token 377: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.577422559261322
    2. 'icher' → logprob: -0.827422559261322
    3. 'ichage' → logprob: -7.577422618865967
    4. '#' → logprob: -7.827422618865967
    5. 'ich' → logprob: -7.827422618865967
    6. 'ic' → logprob: -9.952422142028809
    7. 'print' → logprob: -10.452422142028809
    8. 'cher' → logprob: -10.577422142028809
    9. 'ichert' → logprob: -10.952422142028809
    10. 'iché' → logprob: -11.702422142028809

Token 378: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0001478796184528619
    2. 'ans' → logprob: -9.000147819519043
    3. '(' → logprob: -10.625147819519043
    4. '()' → logprob: -15.750147819519043
    5. '	ans' → logprob: -17.75014877319336
    6. '(answer' → logprob: -18.62514877319336
    7. '(max' → logprob: -18.75014877319336
    8. '(
' → logprob: -18.75014877319336
    9. ' ans' → logprob: -19.12514877319336
    10. '(a' → logprob: -19.25014877319336

Token 379: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.30803582072257996
    2. 'plus' → logprob: -1.6830358505249023
    3. ' plus' → logprob: -3.1830358505249023
    4. 'largest' → logprob: -4.558035850524902
    5. 'me' → logprob: -5.183035850524902
    6. ' largest' → logprob: -5.433035850524902
    7. 'answer' → logprob: -5.558035850524902
    8. ' ' → logprob: -6.058035850524902
    9. ' ' → logprob: -6.058035850524902
    10. 'result' → logprob: -6.308035850524902

Token 380: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04858918860554695
    2. '(ans' → logprob: -3.0485892295837402
    3. ' ans' → logprob: -13.298588752746582
    4. '	ans' → logprob: -16.5485897064209
    5. '_ans' → logprob: -18.4235897064209
    6. 'ANS' → logprob: -18.6735897064209
    7. '```' → logprob: -19.0485897064209
    8. 'answer' → logprob: -19.1735897064209
    9. 'l' → logprob: -19.1735897064209
    10. 'a' → logprob: -19.2985897064209

Token 382: ' variable' (ID: 11076)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.44859254360198975
    2. 'ans' → logprob: -1.4485925436019897
    3. 'div' → logprob: -3.0735926628112793
    4. 'answer' → logprob: -3.4485926628112793
    5. 'result' → logprob: -3.8235926628112793
    6. 'largest' → logprob: -5.198592662811279
    7. 'me' → logprob: -5.323592662811279
    8. ' plus' → logprob: -5.323592662811279
    9. '(ans' → logprob: -6.448592662811279
    10. 'ré' → logprob: -6.573592662811279

Token 383: ' ans' (ID: 3345)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13419273495674133
    2. '<|end|>' → logprob: -2.259192705154419
    3. '```' → logprob: -5.259192943572998
    4. '\n' → logprob: -5.259192943572998
    5. '\' → logprob: -5.759192943572998
    6. '(' → logprob: -5.759192943572998
    7. '()' → logprob: -6.759192943572998
    8. ' ' → logprob: -6.884192943572998
    9. '
' → logprob: -7.509192943572998
    10. ' )' → logprob: -7.634192943572998

Token 384: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005848454311490059
    2. '")' → logprob: -8.500584602355957
    3. ' )' → logprob: -8.875584602355957
    4. 'ans' → logprob: -9.250584602355957
    5. '')' → logprob: -9.500584602355957
    6. ')#' → logprob: -10.375584602355957
    7. '(ans' → logprob: -12.250584602355957
    8. 'div' → logprob: -12.500584602355957
    9. ')")' → logprob: -12.500584602355957
    10. 'la' → logprob: -12.875584602355957

Token 386: '’est' (ID: 6838)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1171571016311646
    2. ')' → logprob: -1.4921571016311646
    3. 'omme' → logprob: -2.367156982421875
    4. 'ont' → logprob: -2.492156982421875
    5. 'ode' → logprob: -2.867156982421875
    6. 'on' → logprob: -3.367156982421875
    7. ''est' → logprob: -3.867156982421875
    8. '')' → logprob: -3.992156982421875
    9. 'onne' → logprob: -4.242156982421875
    10. 'onte' → logprob: -4.367156982421875

Token 387: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.027296543121338
    2. ' l' → logprob: -1.402296543121338
    3. ' le' → logprob: -2.152296543121338
    4. 'le' → logprob: -2.152296543121338
    5. ')' → logprob: -2.902296543121338
    6. ' )' → logprob: -2.902296543121338
    7. 'l' → logprob: -3.902296543121338
    8. 'la' → logprob: -4.277296543121338
    9. ' un' → logprob: -4.652296543121338
    10. ' ' → logprob: -6.652296543121338

Token 388: ' solution' (ID: 7578)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.04412012919783592
    2. ' plus' → logprob: -3.2941200733184814
    3. 'div' → logprob: -5.1691203117370605
    4. ')' → logprob: -8.669119834899902
    5. 'solution' → logprob: -10.044119834899902
    6. ' ' → logprob: -11.044119834899902
    7. '```' → logprob: -11.044119834899902
    8. 'Plus' → logprob: -11.169119834899902
    9. 'val' → logprob: -11.669119834899902
    10. '#' → logprob: -11.669119834899902

Token 389: ' finale' (ID: 37759)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. ' )' → logprob: -11.875014305114746
    3. ')
' → logprob: -12.250014305114746
    4. '')' → logprob: -14.750014305114746
    5. ')#' → logprob: -14.875014305114746
    6. ')`' → logprob: -14.875014305114746
    7. '```' → logprob: -15.000014305114746
    8. ')")' → logprob: -15.125014305114746
    9. '))' → logprob: -15.250014305114746
    10. '")' → logprob: -15.250014305114746

Token 390: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -12.625004768371582
    3. ')
' → logprob: -14.000004768371582
    4. '))' → logprob: -15.500004768371582
    5. ')`' → logprob: -15.500004768371582
    6. '')' → logprob: -15.625004768371582
    7. '```' → logprob: -16.3750057220459
    8. '`)' → logprob: -16.3750057220459
    9. '")' → logprob: -16.6250057220459
    10. ').' → logprob: -17.1250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 388
Tokens correctement prédits (1ère position, stricte): 97
Tokens correctement prédits (1ère position, avec adaptation): 99
Tokens correctement prédits (top 10): 222
Précision stricte (1ère position): 25.00%
Précision adaptée (1ère position): 25.52%
Précision (top 10): 57.22%
================================================================================
