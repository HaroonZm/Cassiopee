================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
number_of_inputs = int(input())

string_occurrence_count = {}

for current_input_index in range(number_of_inputs):
    input_string = str(input())
    if input_string not in string_occurrence_count:
        string_occurrence_count[input_string] = 1
    else:
        string_occurrence_count[input_string] += 1

list_of_most_frequent_strings = []
maximum_occurrence = max(string_occurrence_count.values())

for string_value, occurrence_count in string_occurrence_count.items():
    if occurrence_count == maximum_occurrence:
        list_of_most_frequent_strings.append(string_value)

list_of_most_frequent_strings.sort()

for frequent_string in list_of_most_frequent_strings:
    print(frequent_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'number' (ID: 8096)
  → Token d'amorce (pas de prédiction)

Token 1: '_of' (ID: 8023)
  → Token d'amorce (pas de prédiction)

Token 2: '_inputs' (ID: 67304)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11482935398817062
    2. '=' → logprob: -2.6148293018341064
    3. '[' → logprob: -4.3648295402526855
    4. '.' → logprob: -4.8648295402526855
    5. ' =' → logprob: -5.1148295402526855
    6. ')' → logprob: -5.6148295402526855
    7. '```' → logprob: -5.8648295402526855
    8. 's' → logprob: -7.9898295402526855
    9. ',' → logprob: -8.114829063415527
    10. ':' → logprob: -8.614829063415527

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0857621282339096
    2. '0' → logprob: -3.4607620239257812
    3. '4' → logprob: -3.7107620239257812
    4. '5' → logprob: -4.085762023925781
    5. '10' → logprob: -5.210762023925781
    6. '1' → logprob: -6.085762023925781
    7. '3' → logprob: -7.335762023925781
    8. '32' → logprob: -8.585762023925781
    9. '16' → logprob: -8.585762023925781
    10. ' int' → logprob: -8.835762023925781

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002270754659548402
    2. '```' → logprob: -6.627270698547363
    3. ''' → logprob: -8.252270698547363
    4. '_' → logprob: -8.377270698547363
    5. '`' → logprob: -9.002270698547363
    6. '('' → logprob: -9.377270698547363
    7. '("("' → logprob: -10.252270698547363
    8. ')' → logprob: -10.627270698547363
    9. '(
' → logprob: -10.627270698547363
    10. ' (' → logprob: -10.752270698547363

Token 6: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.731867253780365
    2. ')' → logprob: -0.731867253780365
    3. '()' → logprob: -3.9818673133850098
    4. '())' → logprob: -4.10686731338501
    5. '">' → logprob: -7.48186731338501
    6. '```' → logprob: -8.231866836547852
    7. '")' → logprob: -8.231866836547852
    8. '('' → logprob: -8.481866836547852
    9. '))' → logprob: -8.606866836547852
    10. '(()' → logprob: -8.981866836547852

Token 7: 'string' (ID: 1655)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7336606383323669
    2. '*' → logprob: -1.7336606979370117
    3. ')' → logprob: -2.3586606979370117
    4. 'if' → logprob: -2.4836606979370117
    5. ':' → logprob: -3.6086606979370117
    6. '#' → logprob: -3.6086606979370117
    7. 'for' → logprob: -3.8586606979370117
    8. '>' → logprob: -4.233660697937012
    9. 'i' → logprob: -4.483660697937012
    10. ' ' → logprob: -4.608660697937012

Token 8: '_occ' (ID: 180107)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7461780905723572
    2. '[' → logprob: -1.121178150177002
    3. 's' → logprob: -2.371178150177002
    4. '_' → logprob: -2.871178150177002
    5. '(' → logprob: -4.121178150177002
    6. '=' → logprob: -4.371178150177002
    7. ' =' → logprob: -5.371178150177002
    8. '[:]' → logprob: -5.621178150177002
    9. ')' → logprob: -5.746178150177002
    10. '[]' → logprob: -6.371178150177002

Token 9: 'urrence' (ID: 29194)
  Prédit: 'urrences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.062242940068244934
    2. 'urrence' → logprob: -2.9372429847717285
    3. 'urr' → logprob: -6.0622429847717285
    4. 'ur' → logprob: -6.0622429847717285
    5. 'u' → logprob: -6.1872429847717285
    6. 'urre' → logprob: -8.56224250793457
    7. 'urrencies' → logprob: -8.56224250793457
    8. 'urance' → logprob: -9.93724250793457
    9. '```' → logprob: -9.93724250793457
    10. '_' → logprob: -9.93724250793457

Token 10: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39462044835090637
    2. '[' → logprob: -1.394620418548584
    3. '(' → logprob: -3.394620418548584
    4. '_' → logprob: -3.644620418548584
    5. '=' → logprob: -4.394620418548584
    6. ' =' → logprob: -6.394620418548584
    7. '.' → logprob: -6.519620418548584
    8. '[]' → logprob: -7.519620418548584
    9. ')' → logprob: -7.644620418548584
    10. '[s' → logprob: -7.894620418548584

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4254957437515259
    2. '=' → logprob: -2.0504956245422363
    3. ' =' → logprob: -2.0504956245422363
    4. '_' → logprob: -2.8004956245422363
    5. 's' → logprob: -4.050495624542236
    6. '(' → logprob: -5.550495624542236
    7. ' ' → logprob: -6.300495624542236
    8. '['' → logprob: -7.050495624542236
    9. '[]' → logprob: -7.675495624542236
    10. ''' → logprob: -7.800495624542236

Token 12: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.47481808066368103
    2. ' {}' → logprob: -0.9748181104660034
    3. 'dict' → logprob: -7.599818229675293
    4. ' ' → logprob: -9.224818229675293
    5. ' dict' → logprob: -9.474818229675293
    6. '0' → logprob: -11.099818229675293
    7. '[' → logprob: -11.599818229675293
    8. '{' → logprob: -11.849818229675293
    9. '   ' → logprob: -11.849818229675293
    10. ' [' → logprob: -11.974818229675293

Token 13: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0033281452488154173
    2. 'f' → logprob: -5.753328323364258
    3. ' for' → logprob: -10.128328323364258
    4. 'n' → logprob: -10.503328323364258
    5. 'i' → logprob: -10.628328323364258
    6. '```' → logprob: -10.628328323364258
    7. 'if' → logprob: -10.878328323364258
    8. 'a' → logprob: -12.753328323364258
    9. 'w' → logprob: -12.878328323364258
    10. '`' → logprob: -13.003328323364258

Token 14: ' current' (ID: 2208)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5986883044242859
    2. ' i' → logprob: -0.8486883044242859
    3. ' _' → logprob: -4.848688125610352
    4. ' input' → logprob: -4.973688125610352
    5. ' number' → logprob: -6.223688125610352
    6. '_' → logprob: -6.223688125610352
    7. ' variable' → logprob: -6.723688125610352
    8. ' item' → logprob: -7.598688125610352
    9. ' token' → logprob: -7.598688125610352
    10. ' string' → logprob: -7.848688125610352

Token 15: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3719358444213867
    2. '_token' → logprob: -1.9969358444213867
    3. ' ' → logprob: -2.2469358444213867
    4. ' _' → logprob: -3.8719358444213867
    5. '_input' → logprob: -4.121935844421387
    6. '_string' → logprob: -4.496935844421387
    7. '_character' → logprob: -4.996935844421387
    8. ' in' → logprob: -5.746935844421387
    9. '_number' → logprob: -5.871935844421387
    10. '_char' → logprob: -6.246935844421387

Token 16: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35084018111228943
    2. 'in' → logprob: -1.4758402109146118
    3. '_' → logprob: -2.9758400917053223
    4. '_in' → logprob: -4.350840091705322
    5. ' ' → logprob: -6.225840091705322
    6. ' _' → logprob: -7.225840091705322
    7. '	in' → logprob: -8.97584056854248
    8. '  ' → logprob: -9.60084056854248
    9. 's' → logprob: -9.60084056854248
    10. '   ' → logprob: -9.72584056854248

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028003767132759094
    2. 'in' → logprob: -3.653003692626953
    3. ' ' → logprob: -6.653003692626953
    4. '  ' → logprob: -8.903003692626953
    5. '   ' → logprob: -10.153003692626953
    6. ')' → logprob: -10.528003692626953
    7. '```' → logprob: -10.528003692626953
    8. '_' → logprob: -10.653003692626953
    9. '[' → logprob: -10.778003692626953
    10. ',' → logprob: -10.778003692626953

Token 18: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0008126051397994161
    2. 'range' → logprob: -7.125812530517578
    3. ' ' → logprob: -11.875812530517578
    4. '	range' → logprob: -14.000812530517578
    5. ' xrange' → logprob: -16.000812530517578
    6. '(range' → logprob: -16.125812530517578
    7. '_range' → logprob: -17.625812530517578
    8. '```' → logprob: -18.000812530517578
    9. ' space' → logprob: -18.625812530517578
    10. ' rango' → logprob: -18.625812530517578

Token 19: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.3148576021194458
    2. '(' → logprob: -1.3148576021194458
    3. ' (' → logprob: -6.939857482910156
    4. '(len' → logprob: -7.939857482910156
    5. '(current' → logprob: -8.314857482910156
    6. '(length' → logprob: -12.314857482910156
    7. '(`' → logprob: -12.439857482910156
    8. '(
' → logprob: -12.814857482910156
    9. 'number' → logprob: -13.314857482910156
    10. '(n' → logprob: -13.439857482910156

Token 20: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0006489329971373081
    2. '_' → logprob: -7.3756489753723145
    3. '_)' → logprob: -11.625648498535156
    4. ')' → logprob: -12.375648498535156
    5. ')_' → logprob: -12.625648498535156
    6. '_o' → logprob: -13.500648498535156
    7. 'of' → logprob: -13.750648498535156
    8. '(' → logprob: -14.125648498535156
    9. ' _' → logprob: -14.250648498535156
    10. ' of' → logprob: -14.500648498535156

Token 21: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -12.50001049041748
    3. ')_' → logprob: -12.75001049041748
    4. ' _' → logprob: -13.87501049041748
    5. '_i' → logprob: -14.37501049041748
    6. '_outputs' → logprob: -14.50001049041748
    7. '_in' → logprob: -14.50001049041748
    8. '_input' → logprob: -15.12501049041748
    9. '_s' → logprob: -15.62501049041748
    10. '_items' → logprob: -16.625009536743164

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011232435703277588
    2. '+' → logprob: -4.511232376098633
    3. ':' → logprob: -9.761232376098633
    4. '+:' → logprob: -10.261232376098633
    5. '):
' → logprob: -10.386232376098633
    6. ')' → logprob: -10.761232376098633
    7. ' +' → logprob: -10.761232376098633
    8. ' ):' → logprob: -11.261232376098633
    9. '   ' → logprob: -13.136232376098633
    10. '```' → logprob: -14.011232376098633

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45647040009498596
    2. ' string' → logprob: -1.5814703702926636
    3. ' input' → logprob: -2.206470489501953
    4. '    ' → logprob: -3.706470489501953
    5. ' current' → logprob: -4.706470489501953
    6. ' line' → logprob: -5.456470489501953
    7. ' ' → logprob: -6.081470489501953
    8. '    
' → logprob: -6.081470489501953
    9. ' token' → logprob: -6.581470489501953
    10. '     
' → logprob: -6.581470489501953

Token 24: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6710919141769409
    2. ' line' → logprob: -1.546091914176941
    3. ' string' → logprob: -1.671091914176941
    4. ' current' → logprob: -3.7960920333862305
    5. ' user' → logprob: -4.1710920333862305
    6. '    ' → logprob: -4.2960920333862305
    7. '   ' → logprob: -4.5460920333862305
    8. ' ' → logprob: -4.7960920333862305
    9. 'input' (adapté à ' input') → logprob: -4.7960920333862305
    10. ' token' → logprob: -5.4210920333862305

Token 25: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6352640986442566
    2. '_string' → logprob: -1.3852641582489014
    3. '_line' → logprob: -1.8852641582489014
    4. '_text' → logprob: -3.3852641582489014
    5. '_str' → logprob: -3.8852641582489014
    6. '_value' → logprob: -5.260263919830322
    7. '()' → logprob: -5.510263919830322
    8. '_data' → logprob: -5.760263919830322
    9. '_s' → logprob: -8.88526439666748
    10. 's' → logprob: -8.88526439666748

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00600629486143589
    2. '=' → logprob: -5.131006240844727
    3. ' ' → logprob: -9.756006240844727
    4. '_' → logprob: -11.756006240844727
    5. '()' → logprob: -12.631006240844727
    6. ')' → logprob: -13.381006240844727
    7. 's' → logprob: -13.631006240844727
    8. '   ' → logprob: -13.631006240844727
    9. '  ' → logprob: -14.131006240844727
    10. '```' → logprob: -14.131006240844727

Token 27: ' str' (ID: 989)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.007609108928591013
    2. 'input' → logprob: -4.882608890533447
    3. ' ' → logprob: -13.132609367370605
    4. '=input' → logprob: -14.507609367370605
    5. '(input' → logprob: -15.507609367370605
    6. ' ' → logprob: -15.632609367370605
    7. '	input' → logprob: -16.50760841369629
    8. ' str' → logprob: -16.75760841369629
    9. '   ' → logprob: -17.38260841369629
    10. '<input' → logprob: -17.75760841369629

Token 28: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001801801408873871
    2. '(' → logprob: -8.6251802444458
    3. '=input' → logprob: -15.2501802444458
    4. '(
' → logprob: -16.375179290771484
    5. '(in' → logprob: -16.625179290771484
    6. ' (' → logprob: -17.375179290771484
    7. 'input' → logprob: -17.500179290771484
    8. '(i' → logprob: -17.625179290771484
    9. '[input' → logprob: -17.625179290771484
    10. '()' → logprob: -17.750179290771484

Token 29: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002200336428359151
    2. '()' → logprob: -6.377200126647949
    3. '()))' → logprob: -7.752200126647949
    4. '())
' → logprob: -10.50220012664795
    5. ')' → logprob: -10.62720012664795
    6. ' ())' → logprob: -11.87720012664795
    7. '().' → logprob: -12.62720012664795
    8. '(' → logprob: -13.37720012664795
    9. '()).' → logprob: -13.37720012664795
    10. '())

' → logprob: -14.00220012664795

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04097962751984596
    2. '    
' → logprob: -3.9159796237945557
    3. '
' → logprob: -4.665979862213135
    4. ' if' → logprob: -6.040979862213135
    5. '<|end|>' → logprob: -6.165979862213135
    6. ' 
' → logprob: -6.415979862213135
    7. '  
' → logprob: -6.665979862213135
    8. '   
' → logprob: -7.165979862213135
    9. ' ' → logprob: -7.165979862213135
    10. ')' → logprob: -7.540979862213135

Token 31: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33664482831954956
    2. 'if' (adapté à ' if') → logprob: -1.8366448879241943
    3. '   ' → logprob: -2.0866448879241943
    4. 'string' → logprob: -7.711644649505615
    5. '<|end|>' → logprob: -7.836644649505615
    6. ' ' → logprob: -8.086645126342773
    7. '    
' → logprob: -8.086645126342773
    8. '
' → logprob: -8.961645126342773
    9. ' for' → logprob: -8.961645126342773
    10. ')' → logprob: -8.961645126342773

Token 32: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06224775314331055
    2. 'input' → logprob: -2.8122477531433105
    3. ' ' → logprob: -9.187248229980469
    4. ' string' → logprob: -9.562248229980469
    5. '"' → logprob: -10.812248229980469
    6. ' not' → logprob: -11.062248229980469
    7. '(input' → logprob: -11.437248229980469
    8. '_input' → logprob: -11.562248229980469
    9. ' f' → logprob: -11.687248229980469
    10. ' ' → logprob: -12.062248229980469

Token 33: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.008079977706074715
    2. '_' → logprob: -4.883080005645752
    3. '_str' → logprob: -8.258079528808594
    4. '_strings' → logprob: -9.258079528808594
    5. 'string' → logprob: -10.633079528808594
    6. '_s' → logprob: -10.758079528808594
    7. 'String' → logprob: -11.133079528808594
    8. '[_' → logprob: -11.633079528808594
    9. '[' → logprob: -11.883079528808594
    10. '```' → logprob: -12.258079528808594

Token 34: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.034064143896102905
    2. ' not' → logprob: -3.5340640544891357
    3. 'in' → logprob: -5.534064292907715
    4. 'not' → logprob: -8.534064292907715
    5. ' ' → logprob: -8.784064292907715
    6. '_' → logprob: -14.284064292907715
    7. ' )' → logprob: -14.659064292907715
    8. '   ' → logprob: -14.659064292907715
    9. '[' → logprob: -14.784064292907715
    10. ')' → logprob: -15.034064292907715

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06599089503288269
    2. 'in' → logprob: -3.065990924835205
    3. '<|end|>' → logprob: -4.565990924835205
    4. '<|end|>' → logprob: -6.440990924835205
    5. '_' → logprob: -6.565990924835205
    6. ')' → logprob: -7.565990924835205
    7. '    ' → logprob: -7.815990924835205
    8. ' string' → logprob: -8.065990447998047
    9. ' )' → logprob: -8.190990447998047
    10. '[:]' → logprob: -8.315990447998047

Token 36: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.06196993216872215
    2. 'string' → logprob: -2.8119699954986572
    3. '_string' → logprob: -14.561969757080078
    4. ' space' → logprob: -14.811969757080078
    5. ' ' → logprob: -14.936969757080078
    6. 'space' → logprob: -15.061969757080078
    7. '<string' → logprob: -15.311969757080078
    8. '	string' → logprob: -16.061969757080078
    9. '(string' → logprob: -16.561969757080078
    10. 'String' → logprob: -16.811969757080078

Token 37: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -0.00017946491425391287
    2. '_oc' → logprob: -8.750179290771484
    3. '_' → logprob: -10.875179290771484
    4. '_OCC' → logprob: -13.250179290771484
    5. '```' → logprob: -16.125179290771484
    6. ' _' → logprob: -16.125179290771484
    7. '##_' → logprob: -17.500179290771484
    8. '\' → logprob: -17.625179290771484
    9. ''_' → logprob: -18.250179290771484
    10. '__' → logprob: -18.500179290771484

Token 38: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -3.023293538717553e-05
    2. 'urr' → logprob: -11.750030517578125
    3. 'urrent' → logprob: -12.125030517578125
    4. 'urrency' → logprob: -12.125030517578125
    5. 'ur' → logprob: -12.500030517578125
    6. 'urrences' → logprob: -12.625030517578125
    7. '_' → logprob: -13.250030517578125
    8. 'urance' → logprob: -13.625030517578125
    9. 'u' → logprob: -13.875030517578125
    10. '-' → logprob: -16.000030517578125

Token 39: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.811348480870947e-05
    2. '_counts' → logprob: -10.50004768371582
    3. 's' → logprob: -11.50004768371582
    4. '_c' → logprob: -12.37504768371582
    5. '_s' → logprob: -13.12504768371582
    6. '_' → logprob: -13.50004768371582
    7. '_counter' → logprob: -13.75004768371582
    8. '_code' → logprob: -15.00004768371582
    9. '_co' → logprob: -15.00004768371582
    10. ' _' → logprob: -15.00004768371582

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018916261615231633
    2. ']' → logprob: -7.251891613006592
    3. ']:' → logprob: -7.501891613006592
    4. ' :' → logprob: -7.751891613006592
    5. '=' → logprob: -9.62689208984375
    6. '[' → logprob: -9.62689208984375
    7. '   ' → logprob: -11.00189208984375
    8. '):' → logprob: -11.12689208984375
    9. ' =' → logprob: -11.75189208984375
    10. ':]' → logprob: -11.75189208984375

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015035663731396198
    2. ':' → logprob: -5.390035629272461
    3. '   ' → logprob: -5.390035629272461
    4. ' :' → logprob: -5.515035629272461
    5. '    ' → logprob: -7.265035629272461
    6. 'string' → logprob: -9.140035629272461
    7. '[' → logprob: -9.515035629272461
    8. ' :
' → logprob: -9.515035629272461
    9. '<|end|>' → logprob: -9.640035629272461
    10. ' ' → logprob: -9.765035629272461

Token 42: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.805250883102417
    2. 'string' (adapté à ' string') → logprob: -0.930250883102417
    3. '   ' → logprob: -2.180250883102417
    4. '       ' → logprob: -3.680250883102417
    5. '    ' → logprob: -4.805251121520996
    6. ' ' → logprob: -5.430251121520996
    7. '    
' → logprob: -6.055251121520996
    8. '        
' → logprob: -7.305251121520996
    9. '[string' → logprob: -7.430251121520996
    10. '           ' → logprob: -7.555251121520996

Token 43: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -0.001870094332844019
    2. '_oc' → logprob: -6.376870155334473
    3. '_' → logprob: -8.876870155334473
    4. '_OCC' → logprob: -11.501870155334473
    5. ''_' → logprob: -12.126870155334473
    6. '```' → logprob: -12.251870155334473
    7. '_unc' → logprob: -13.876870155334473
    8. '_possible' → logprob: -14.001870155334473
    9. '_completion' → logprob: -14.126870155334473
    10. '"_' → logprob: -14.251870155334473

Token 44: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -0.00015478975547011942
    2. 'ur' → logprob: -9.500154495239258
    3. 'urr' → logprob: -10.250154495239258
    4. 'urance' → logprob: -10.250154495239258
    5. 'urrent' → logprob: -12.250154495239258
    6. '_' → logprob: -13.500154495239258
    7. 'urrency' → logprob: -13.625154495239258
    8. 'u' → logprob: -14.125154495239258
    9. 'urrences' → logprob: -14.500154495239258
    10. '```' → logprob: -15.875154495239258

Token 45: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.339278580620885e-06
    2. 'count' → logprob: -13.625001907348633
    3. '_counts' → logprob: -14.875001907348633
    4. 's' → logprob: -15.500001907348633
    5. '_' → logprob: -15.750001907348633
    6. '_code' → logprob: -16.000001907348633
    7. '_counter' → logprob: -16.750001907348633
    8. '   ' → logprob: -17.000001907348633
    9. ' _' → logprob: -17.250001907348633
    10. '```' → logprob: -17.250001907348633

Token 46: '[input' (ID: 157156)
  Prédit: '[input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.002478508511558175
    2. '[' → logprob: -6.00247859954834
    3. '[current' → logprob: -13.50247859954834
    4. '[in' → logprob: -15.12747859954834
    5. '[data' → logprob: -15.25247859954834
    6. ' [' → logprob: -15.37747859954834
    7. '[user' → logprob: -16.377477645874023
    8. '\[' → logprob: -16.377477645874023
    9. '[string' → logprob: -16.502477645874023
    10. '[token' → logprob: -17.127477645874023

Token 47: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -9.253090865968261e-06
    2. '_strings' → logprob: -12.500009536743164
    3. '_' → logprob: -12.875009536743164
    4. 'string' → logprob: -14.250009536743164
    5. '```' → logprob: -14.250009536743164
    6. '[_' → logprob: -14.625009536743164
    7. '_str' → logprob: -15.000009536743164
    8. ']' → logprob: -15.625009536743164
    9. 'String' → logprob: -16.125009536743164
    10. ' _' → logprob: -16.125009536743164

Token 48: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002026304369792342
    2. ' ]' → logprob: -6.502026081085205
    3. ']=' → logprob: -7.752026081085205
    4. ' =' → logprob: -9.627026557922363
    5. '=' → logprob: -10.627026557922363
    6. '"]' → logprob: -13.502026557922363
    7. '']' → logprob: -13.627026557922363
    8. '`]' → logprob: -14.752026557922363
    9. '[' → logprob: -15.627026557922363
    10. '   ' → logprob: -15.752026557922363

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741244912147522
    2. '=' → logprob: -0.9741244912147522
    3. ']' → logprob: -10.349124908447266
    4. '[' → logprob: -11.724124908447266
    5. '<|end|>' → logprob: -13.474124908447266
    6. ' +=' → logprob: -13.599124908447266
    7. ')' → logprob: -13.599124908447266
    8. ']=' → logprob: -14.099124908447266
    9. ' ' → logprob: -14.474124908447266
    10. ' =
' → logprob: -14.724124908447266

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.160830557346344
    2. ' ' → logprob: -1.9108304977416992
    3. '0' → logprob: -7.410830497741699
    4. '   ' → logprob: -13.9108304977417
    5. ' ' → logprob: -15.4108304977417
    6. '  ' → logprob: -16.410831451416016
    7. '```' → logprob: -16.973331451416016
    8. '`' → logprob: -17.035831451416016
    9. 'int' → logprob: -17.223331451416016
    10. '2' → logprob: -17.535831451416016

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006931356037966907
    2. ' ' → logprob: -7.750693321228027
    3. '0' → logprob: -8.250693321228027
    4. '   ' → logprob: -13.625693321228027
    5. '`' → logprob: -17.37569236755371
    6. '```' → logprob: -17.56319236755371
    7. 'int' → logprob: -18.18819236755371
    8. '       ' → logprob: -18.37569236755371
    9. '  ' → logprob: -18.56319236755371
    10. '           ' → logprob: -19.18819236755371

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07035285234451294
    2. 'else' → logprob: -2.945352792739868
    3. ' else' → logprob: -4.195353031158447
    4. '    
' → logprob: -8.945352554321289
    5. '	else' → logprob: -9.070352554321289
    6. '       ' → logprob: -11.570352554321289
    7. '   
' → logprob: -12.320352554321289
    8. '```' → logprob: -12.820352554321289
    9. '   ' → logprob: -13.070352554321289
    10. 'elif' → logprob: -13.070352554321289

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027453124523162842
    2. 'else' → logprob: -3.6524531841278076
    3. ' else' → logprob: -6.7774529457092285
    4. '	else' → logprob: -12.152453422546387
    5. '```' → logprob: -12.277453422546387
    6. '       ' → logprob: -13.527453422546387
    7. '    
' → logprob: -14.277453422546387
    8. '_else' → logprob: -15.277453422546387
    9. '   ' → logprob: -15.527453422546387
    10. ' ' → logprob: -16.02745246887207

Token 54: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10324840247631073
    2. ' else' → logprob: -2.603248357772827
    3. '   ' → logprob: -3.728248357772827
    4. '	else' → logprob: -10.728248596191406
    5. ' ' → logprob: -13.478248596191406
    6. '_else' → logprob: -13.603248596191406
    7. '       ' → logprob: -14.103248596191406
    8. '    
' → logprob: -14.103248596191406
    9. 'elif' → logprob: -14.228248596191406
    10. '```' → logprob: -14.353248596191406

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05603397637605667
    2. ' :' → logprob: -3.3060340881347656
    3. '       ' → logprob: -4.431034088134766
    4. '    ' → logprob: -5.306034088134766
    5. '   ' → logprob: -7.556034088134766
    6. '        ' → logprob: -8.806034088134766
    7. '.' → logprob: -10.056034088134766
    8. '[' → logprob: -10.306034088134766
    9. '<|end|>' → logprob: -10.306034088134766
    10. '      ' → logprob: -10.556034088134766

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49696287512779236
    2. '    ' → logprob: -1.4969629049301147
    3. ' string' → logprob: -2.121962785720825
    4. 'string' → logprob: -3.621962785720825
    5. '   ' → logprob: -4.121963024139404
    6. ' ' → logprob: -6.621963024139404
    7. '        ' → logprob: -6.746963024139404
    8. '1' → logprob: -7.996963024139404
    9. '     ' → logprob: -8.121962547302246
    10. '+' → logprob: -8.496962547302246

Token 57: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' (adapté à ' string') → logprob: -0.38747960329055786
    2. ' string' → logprob: -1.137479543685913
    3. '    ' → logprob: -8.387479782104492
    4. '   ' → logprob: -8.887479782104492
    5. '       ' → logprob: -9.762479782104492
    6. '        ' → logprob: -9.762479782104492
    7. ' ' → logprob: -10.012479782104492
    8. '           ' → logprob: -10.262479782104492
    9. '_string' → logprob: -12.012479782104492
    10. '1' → logprob: -12.137479782104492

Token 58: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -0.002541178371757269
    2. '_oc' → logprob: -6.0025410652160645
    3. '```' → logprob: -10.127541542053223
    4. '_OCC' → logprob: -11.127541542053223
    5. '_' → logprob: -12.377541542053223
    6. ''_' → logprob: -13.627541542053223
    7. '"_' → logprob: -14.127541542053223
    8. '_of' → logprob: -14.377541542053223
    9. '##_' → logprob: -14.502541542053223
    10. '_completion' → logprob: -15.002541542053223

Token 59: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -0.00029363270732574165
    2. 'urr' → logprob: -9.125293731689453
    3. 'urrent' → logprob: -9.125293731689453
    4. 'ur' → logprob: -10.375293731689453
    5. 'urance' → logprob: -10.625293731689453
    6. 'urrency' → logprob: -11.625293731689453
    7. '_occ' → logprob: -12.375293731689453
    8. 'urrences' → logprob: -12.750293731689453
    9. '```' → logprob: -14.750293731689453
    10. 'rence' → logprob: -14.875293731689453

Token 60: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.5048530030981055e-06
    2. 'count' → logprob: -14.125001907348633
    3. '_' → logprob: -15.375001907348633
    4. 'Count' → logprob: -15.375001907348633
    5. '_counts' → logprob: -15.625001907348633
    6. '```' → logprob: -17.500001907348633
    7. 's' → logprob: -17.625001907348633
    8. '_c' → logprob: -18.125001907348633
    9. '_counter' → logprob: -18.375001907348633
    10. '_Count' → logprob: -18.375001907348633

Token 61: '[input' (ID: 157156)
  Prédit: '[input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.00028302724240347743
    2. '[' → logprob: -8.250283241271973
    3. '[current' → logprob: -11.250283241271973
    4. '[string' → logprob: -11.750283241271973
    5. '```' → logprob: -15.000283241271973
    6. '[in' → logprob: -15.750283241271973
    7. '[data' → logprob: -16.250282287597656
    8. '[str' → logprob: -16.750282287597656
    9. ' [' → logprob: -16.875282287597656
    10. '\[' → logprob: -17.125282287597656

Token 62: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.00011784763046307489
    2. '[string' → logprob: -9.875118255615234
    3. '_strings' → logprob: -10.375118255615234
    4. 'string' → logprob: -11.125118255615234
    5. '[input' → logprob: -11.250118255615234
    6. '```' → logprob: -13.000118255615234
    7. '_input' → logprob: -13.625118255615234
    8. '_STRING' → logprob: -14.125118255615234
    9. '[String' → logprob: -14.375118255615234
    10. '[' → logprob: -14.625118255615234

Token 63: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08669344335794449
    2. '+' → logprob: -2.836693525314331
    3. '+=' → logprob: -4.461693286895752
    4. ' +=' → logprob: -4.961693286895752
    5. ']+=' → logprob: -5.711693286895752
    6. ' ]' → logprob: -6.586693286895752
    7. ']+' → logprob: -7.586693286895752
    8. ')' → logprob: -8.46169376373291
    9. ' +' → logprob: -8.58669376373291
    10. '[' → logprob: -8.83669376373291

Token 64: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20153477787971497
    2. ' +=' → logprob: -1.7015347480773926
    3. '=' → logprob: -9.57653522491455
    4. '+' → logprob: -10.82653522491455
    5. ']+=' → logprob: -11.32653522491455
    6. '[' → logprob: -11.70153522491455
    7. '   ' → logprob: -11.95153522491455
    8. '+='' → logprob: -13.07653522491455
    9. '    ' → logprob: -14.45153522491455
    10. '+="' → logprob: -14.57653522491455

Token 65: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25192928314208984
    2. '1' → logprob: -1.5019292831420898
    3. '```' → logprob: -16.501930236816406
    4. '   ' → logprob: -16.626930236816406
    5. ' ' → logprob: -16.626930236816406
    6. '`' → logprob: -18.251930236816406
    7. '  ' → logprob: -19.626930236816406
    8. '       ' → logprob: -19.876930236816406
    9. '    ' → logprob: -20.126930236816406
    10. ' `' → logprob: -20.251930236816406

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -18.75001335144043
    4. '   ' → logprob: -19.75001335144043
    5. '`' → logprob: -21.00001335144043
    6. '１' → logprob: -21.75001335144043
    7. '  ' → logprob: -22.62501335144043
    8. ' ' → logprob: -22.75001335144043
    9. '0' → logprob: -22.87501335144043
    10. '' → logprob: -22.93751335144043

Token 67: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15338057279586792
    2. 'for' → logprob: -2.4033806324005127
    3. '   ' → logprob: -3.7783806324005127
    4. '
' → logprob: -3.9033806324005127
    5. '    
' → logprob: -6.278380393981934
    6. '<|end|>' → logprob: -6.653380393981934
    7. 'output' → logprob: -6.903380393981934
    8. '```' → logprob: -7.028380393981934
    9. ' for' → logprob: -7.403380393981934
    10. '#' → logprob: -7.528380393981934

Token 68: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1617727279663086
    2. 'print' → logprob: -2.0367727279663086
    3. '   ' → logprob: -4.161772727966309
    4. ' for' → logprob: -6.536772727966309
    5. 'if' → logprob: -7.661772727966309
    6. '```' → logprob: -7.786772727966309
    7. '#' → logprob: -8.536772727966309
    8. 'output' → logprob: -8.661772727966309
    9. '    
' → logprob: -8.786772727966309
    10. 'result' → logprob: -9.036772727966309

Token 69: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34980911016464233
    2. '_' → logprob: -1.474809169769287
    3. '_of' → logprob: -4.099809169769287
    4. '_sorted' → logprob: -4.599809169769287
    5. '_items' → logprob: -4.849809169769287
    6. '_counts' → logprob: -5.349809169769287
    7. 's' → logprob: -5.349809169769287
    8. '_keys' → logprob: -5.599809169769287
    9. '_to' → logprob: -5.724809169769287
    10. '_string' → logprob: -5.974809169769287

Token 70: '_m' (ID: 1285)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.46487703919410706
    2. '_keys' → logprob: -1.9648770093917847
    3. '_' → logprob: -2.839877128601074
    4. '_occ' → logprob: -2.964877128601074
    5. '_unique' → logprob: -3.089877128601074
    6. '_string' → logprob: -4.464877128601074
    7. '_tokens' → logprob: -4.714877128601074
    8. '_items' → logprob: -5.089877128601074
    9. '_sorted' → logprob: -5.089877128601074
    10. '_input' → logprob: -5.214877128601074

Token 71: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.005337524227797985
    2. 'atching' → logprob: -5.630337715148926
    3. 'ax' → logprob: -6.755337715148926
    4. 'atched' → logprob: -8.505337715148926
    5. 'atches' → logprob: -8.755337715148926
    6. 'ultiple' → logprob: -9.630337715148926
    7. 'ultip' → logprob: -10.880337715148926
    8. 'issing' → logprob: -11.005337715148926
    9. 'ult' → logprob: -11.005337715148926
    10. 'ore' → logprob: -11.005337715148926

Token 72: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.6782371401786804
    2. '_common' → logprob: -1.3032371997833252
    3. '_' → logprob: -2.178237199783325
    4. '_oc' → logprob: -2.803237199783325
    5. '_occ' → logprob: -3.303237199783325
    6. '_used' → logprob: -4.803236961364746
    7. '_pres' → logprob: -8.428236961364746
    8. '_comm' → logprob: -8.803236961364746
    9. '_string' → logprob: -8.928236961364746
    10. '_present' → logprob: -9.053236961364746

Token 73: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -0.001108543947339058
    2. 'requency' → logprob: -8.001108169555664
    3. 'requently' → logprob: -8.001108169555664
    4. 'req' → logprob: -8.126108169555664
    5. 'requ' → logprob: -9.376108169555664
    6. 'requencies' → logprob: -10.251108169555664
    7. 're' → logprob: -12.126108169555664
    8. 'request' → logprob: -12.126108169555664
    9. 'or' → logprob: -12.626108169555664
    10. '```' → logprob: -13.126108169555664

Token 74: '_strings' (ID: 87251)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5305644869804382
    2. '_strings' → logprob: -0.9055644869804382
    3. '_string' → logprob: -6.405564308166504
    4. 's' → logprob: -6.530564308166504
    5. '_s' → logprob: -6.905564308166504
    6. '_occ' → logprob: -6.905564308166504
    7. '_items' → logprob: -7.155564308166504
    8. '_tokens' → logprob: -8.405564308166504
    9. '_keys' → logprob: -8.530564308166504
    10. '_oc' → logprob: -8.905564308166504

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002812005812302232
    2. '=' → logprob: -5.877811908721924
    3. '=[]' → logprob: -12.877812385559082
    4. ' =[' → logprob: -13.127812385559082
    5. ',' → logprob: -13.627812385559082
    6. '_' → logprob: -14.877812385559082
    7. '=[' → logprob: -15.377812385559082
    8. ' =
' → logprob: -15.877812385559082
    9. ' ' → logprob: -15.877812385559082
    10. '```' → logprob: -16.627811431884766

Token 76: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5549766421318054
    2. ' []' → logprob: -1.6799767017364502
    3. '[' → logprob: -2.30497670173645
    4. '[]' → logprob: -2.67997670173645
    5. '[max' → logprob: -2.80497670173645
    6. ' sorted' → logprob: -5.054976463317871
    7. '[key' → logprob: -6.554976463317871
    8. 'sorted' → logprob: -7.304976463317871
    9. '[s' → logprob: -7.304976463317871
    10. '[min' → logprob: -8.554976463317871

Token 77: 'maximum' (ID: 78601)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.030726628378033638
    2. 'most' → logprob: -4.405726432800293
    3. 'highest' → logprob: -4.905726432800293
    4. 'maximum' → logprob: -5.530726432800293
    5. ' max' → logprob: -5.655726432800293
    6. 'for' → logprob: -6.280726432800293
    7. 'current' → logprob: -7.530726432800293
    8. ' most' → logprob: -7.780726432800293
    9. ' for' → logprob: -8.905726432800293
    10. ' highest' → logprob: -9.405726432800293

Token 78: '_occ' (ID: 180107)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.08810850977897644
    2. '_occ' → logprob: -2.838108539581299
    3. '_frequency' → logprob: -4.088108539581299
    4. '_' → logprob: -4.963108539581299
    5. '_oc' → logprob: -6.713108539581299
    6. '_value' → logprob: -7.463108539581299
    7. ' =' → logprob: -9.08810806274414
    8. '_number' → logprob: -10.21310806274414
    9. '_freq' → logprob: -10.33810806274414
    10. '_counts' → logprob: -10.96310806274414

Token 79: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -0.0009063414763659239
    2. 'ur' → logprob: -7.875906467437744
    3. 'urrent' → logprob: -8.250905990600586
    4. 'urrency' → logprob: -8.750905990600586
    5. 'urrences' → logprob: -10.000905990600586
    6. 'urr' → logprob: -10.125905990600586
    7. 'urance' → logprob: -11.500905990600586
    8. '```' → logprob: -12.000905990600586
    9. 'urring' → logprob: -13.250905990600586
    10. 'urred' → logprob: -14.125905990600586

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40112683176994324
    2. '_' → logprob: -1.5261268615722656
    3. '=' → logprob: -2.2761268615722656
    4. '_count' → logprob: -4.651126861572266
    5. 's' → logprob: -7.276126861572266
    6. '_=' → logprob: -10.276126861572266
    7. '=_' → logprob: -11.026126861572266
    8. ' ' → logprob: -11.401126861572266
    9. '_number' → logprob: -11.651126861572266
    10. '_space' → logprob: -11.901126861572266

Token 81: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0132120847702026
    2. ' max' → logprob: -1.1382120847702026
    3. 'max' → logprob: -1.2632120847702026
    4. ' ' → logprob: -3.388212203979492
    5. ' -' → logprob: -10.888212203979492
    6. '1' → logprob: -11.638212203979492
    7. '-' → logprob: -11.888212203979492
    8. '(max' → logprob: -12.888212203979492
    9. ' None' → logprob: -13.513212203979492
    10. '	max' → logprob: -13.638212203979492

Token 82: '(string' (ID: 8003)
  Prédit: '(string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(string' → logprob: -0.011060434393584728
    2. '(' → logprob: -4.5110602378845215
    3. '(list' → logprob: -11.51106071472168
    4. '(strings' → logprob: -13.63606071472168
    5. 'string' → logprob: -15.38606071472168
    6. '(
' → logprob: -15.38606071472168
    7. '(s' → logprob: -15.51106071472168
    8. ' (' → logprob: -15.51106071472168
    9. '(object' → logprob: -15.88606071472168
    10. '(str' → logprob: -16.51106071472168

Token 83: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -0.0007529280846938491
    2. '_oc' → logprob: -7.250752925872803
    3. '_' → logprob: -10.125753402709961
    4. '_string' → logprob: -14.250753402709961
    5. 'string' → logprob: -14.375753402709961
    6. '_OCC' → logprob: -14.625753402709961
    7. '```' → logprob: -14.625753402709961
    8. 'occ' → logprob: -15.250753402709961
    9. '_frequency' → logprob: -16.12575340270996
    10. '_of' → logprob: -16.62575340270996

Token 84: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -0.0005704291397705674
    2. 'ur' → logprob: -7.625570297241211
    3. 'urrent' → logprob: -10.000570297241211
    4. 'urance' → logprob: -11.125570297241211
    5. 'urr' → logprob: -11.625570297241211
    6. 'urrency' → logprob: -12.250570297241211
    7. 'rence' → logprob: -12.875570297241211
    8. 'ount' → logprob: -13.500570297241211
    9. '```' → logprob: -13.500570297241211
    10. 'urrences' → logprob: -13.625570297241211

Token 85: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.2233183042553719e-05
    2. '_counts' → logprob: -12.000012397766113
    3. 'count' → logprob: -13.250012397766113
    4. 's' → logprob: -13.250012397766113
    5. ')' → logprob: -14.250012397766113
    6. '_occ' → logprob: -14.500012397766113
    7. '_' → logprob: -14.750012397766113
    8. '_counter' → logprob: -15.500012397766113
    9. 'ount' → logprob: -15.875012397766113
    10. 'es' → logprob: -16.375011444091797

Token 86: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.005342144053429365
    2. '.' → logprob: -5.25534200668335
    3. '.value' → logprob: -10.255342483520508
    4. ').' → logprob: -10.380342483520508
    5. ')' → logprob: -10.630342483520508
    6. ' .' → logprob: -11.255342483520508
    7. 'values' → logprob: -12.880342483520508
    8. '.Values' → logprob: -13.630342483520508
    9. ' values' → logprob: -14.505342483520508
    10. ' )' → logprob: -15.505342483520508

Token 87: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0791860967874527
    2. '())' → logprob: -2.579186201095581
    3. ')' → logprob: -8.45418643951416
    4. '(' → logprob: -9.95418643951416
    5. '(),' → logprob: -11.45418643951416
    6. ' ())' → logprob: -11.82918643951416
    7. ' ()' → logprob: -12.07918643951416
    8. '()]' → logprob: -12.45418643951416
    9. '()>' → logprob: -13.07918643951416
    10. '()`' → logprob: -13.82918643951416

Token 88: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08654870092868805
    2. 'for' → logprob: -2.5865488052368164
    3. ' for' → logprob: -4.961548805236816
    4. '

' → logprob: -8.461548805236816
    5. ' 
' → logprob: -8.586548805236816
    6. '\n' → logprob: -9.336548805236816
    7. '  
' → logprob: -9.711548805236816
    8. '
' → logprob: -10.461548805236816
    9. '<|end|>' → logprob: -10.586548805236816
    10. '' → logprob: -11.711548805236816

Token 89: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.3203331232070923
    2. ' input' → logprob: -2.1953330039978027
    3. ' key' → logprob: -2.3203330039978027
    4. 'string' → logprob: -3.5703330039978027
    5. ' current' → logprob: -3.6953330039978027
    6. ' ' → logprob: -5.195333003997803
    7. ' s' → logprob: -5.820333003997803
    8. 'input' → logprob: -6.320333003997803
    9. 'key' → logprob: -8.195333480834961
    10. ' ' → logprob: -8.195333480834961

Token 90: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6788667440414429
    2. ' in' → logprob: -0.8038667440414429
    3. 'in' → logprob: -3.3038668632507324
    4. '_in' → logprob: -5.303866863250732
    5. ' _' → logprob: -6.178866863250732
    6. 's' → logprob: -7.553866863250732
    7. ' ' → logprob: -8.178866386413574
    8. ',' → logprob: -8.803866386413574
    9. '	in' → logprob: -9.303866386413574
    10. '_i' → logprob: -9.428866386413574

Token 91: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03746969997882843
    2. ',' → logprob: -3.9124696254730225
    3. 'in' → logprob: -4.287469863891602
    4. ' ' → logprob: -6.412469863891602
    5. ' ,' → logprob: -6.662469863891602
    6. '	in' → logprob: -10.537469863891602
    7. 's' → logprob: -10.912469863891602
    8. ' ' → logprob: -11.037469863891602
    9. ',in' → logprob: -11.037469863891602
    10. ' i' → logprob: -11.412469863891602

Token 92: ' occurrence' (ID: 55807)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5234779715538025
    2. ' count' → logprob: -1.3984780311584473
    3. 'occ' → logprob: -2.0234780311584473
    4. ' occurrence' → logprob: -3.7734780311584473
    5. ' frequency' → logprob: -6.398478031158447
    6. 'frequency' → logprob: -6.398478031158447
    7. 'occur' → logprob: -6.773478031158447
    8. ' occurrences' → logprob: -7.773478031158447
    9. ' current' → logprob: -8.773477554321289
    10. ' string' → logprob: -9.523477554321289

Token 93: '_count' (ID: 7536)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6741048693656921
    2. '_' → logprob: -1.924104928970337
    3. '_count' → logprob: -1.924104928970337
    4. 'in' → logprob: -2.174104928970337
    5. '_in' → logprob: -2.924104928970337
    6. 's' → logprob: -4.049104690551758
    7. ' _' → logprob: -5.674104690551758
    8. ',' → logprob: -6.049104690551758
    9. ',_' → logprob: -6.174104690551758
    10. 'count' → logprob: -6.549104690551758

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05557218939065933
    2. 'in' → logprob: -3.305572271347046
    3. ',' → logprob: -4.430572032928467
    4. ' ,' → logprob: -5.555572032928467
    5. ' ' → logprob: -6.805572032928467
    6. '<|end|>' → logprob: -8.680572509765625
    7. '	in' → logprob: -8.930572509765625
    8. '  ' → logprob: -9.430572509765625
    9. ' i' → logprob: -9.930572509765625
    10. ',in' → logprob: -10.930572509765625

Token 95: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.03804171830415726
    2. 'string' → logprob: -3.288041830062866
    3. ' space' → logprob: -16.038042068481445
    4. '[string' → logprob: -16.413042068481445
    5. 'space' → logprob: -16.663042068481445
    6. '	string' → logprob: -17.788042068481445
    7. ' ' → logprob: -18.163042068481445
    8. '_string' → logprob: -18.538042068481445
    9. ',string' → logprob: -18.538042068481445
    10. ' list' → logprob: -18.663042068481445

Token 96: '_occ' (ID: 180107)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.016226500272750854
    2. '_occ' → logprob: -4.141226291656494
    3. '_counts' → logprob: -9.391226768493652
    4. '_' → logprob: -9.516226768493652
    5. '_oc' → logprob: -10.766226768493652
    6. '_counter' → logprob: -12.766226768493652
    7. '._' → logprob: -13.266226768493652
    8. '```' → logprob: -13.516226768493652
    9. '_items' → logprob: -13.641226768493652
    10. '_value' → logprob: -13.891226768493652

Token 97: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -0.04800670966506004
    2. 'ur' → logprob: -3.673006772994995
    3. 'unt' → logprob: -5.298006534576416
    4. '_count' → logprob: -5.298006534576416
    5. 'ount' → logprob: -5.673006534576416
    6. 'urrences' → logprob: -5.923006534576416
    7. 'urr' → logprob: -6.173006534576416
    8. 'urance' → logprob: -6.673006534576416
    9. 'urrent' → logprob: -7.548006534576416
    10. 't' → logprob: -8.048007011413574

Token 98: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.191489642835222e-05
    2. 'count' → logprob: -10.750041961669922
    3. '_counts' → logprob: -11.875041961669922
    4. '.items' → logprob: -12.000041961669922
    5. '_items' → logprob: -13.375041961669922
    6. 'items' → logprob: -13.750041961669922
    7. '```' → logprob: -13.875041961669922
    8. '_' → logprob: -14.125041961669922
    9. 's' → logprob: -14.125041961669922
    10. ' _' → logprob: -14.625041961669922

Token 99: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.062035687267780304
    2. '.' → logprob: -2.8120357990264893
    3. 'items' → logprob: -10.31203556060791
    4. '.iteritems' → logprob: -10.43703556060791
    5. '.Items' → logprob: -12.81203556060791
    6. ' .' → logprob: -13.93703556060791
    7. '.values' → logprob: -14.56203556060791
    8. '<|end|>' → logprob: -15.43703556060791
    9. '_items' → logprob: -15.68703556060791
    10. '```' → logprob: -15.81203556060791

Token 100: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02765561267733574
    2. '()' → logprob: -4.027655601501465
    3. '(' → logprob: -4.777655601501465
    4. ' ():' → logprob: -7.777655601501465
    5. '():
' → logprob: -8.027655601501465
    6. ' ()' → logprob: -8.527655601501465
    7. ':' → logprob: -10.152655601501465
    8. '()>' → logprob: -11.152655601501465
    9. '(),' → logprob: -11.652655601501465
    10. ' (' → logprob: -11.777655601501465

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011880877427756786
    2. '<|end|>' → logprob: -7.251188278198242
    3. ':' → logprob: -8.626188278198242
    4. ' if' → logprob: -9.251188278198242
    5. '    
' → logprob: -9.751188278198242
    6. '    ' → logprob: -10.376188278198242
    7. ' ' → logprob: -10.501188278198242
    8. '       ' → logprob: -11.001188278198242
    9. ' 
' → logprob: -11.126188278198242
    10. '  ' → logprob: -11.251188278198242

Token 102: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9272654056549072
    2. '<|end|>' → logprob: -0.9272654056549072
    3. ' 
' → logprob: -1.8022654056549072
    4. '    
' → logprob: -3.5522654056549072
    5. '    ' → logprob: -5.427265167236328
    6. '<|end|>' → logprob: -5.927265167236328
    7. ' if' → logprob: -6.177265167236328
    8. '```' → logprob: -6.552265167236328
    9. '
' → logprob: -6.802265167236328
    10. '\n' → logprob: -7.302265167236328

Token 103: ' occurrence' (ID: 55807)
  Prédit: ' occurrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occurrence' → logprob: -0.000464631273644045
    2. 'occ' → logprob: -8.00046443939209
    3. ' ' → logprob: -9.75046443939209
    4. ' space' → logprob: -10.00046443939209
    5. ' ' → logprob: -11.37546443939209
    6. '_occ' → logprob: -11.87546443939209
    7. 'occur' → logprob: -13.25046443939209
    8. 'Occurrence' → logprob: -13.75046443939209
    9. 'space' → logprob: -14.25046443939209
    10. ' occur' → logprob: -14.50046443939209

Token 104: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00013166792632546276
    2. '_' → logprob: -9.250131607055664
    3. ' _' → logprob: -10.625131607055664
    4. '_c' → logprob: -12.000131607055664
    5. '__' → logprob: -13.375131607055664
    6. 's' → logprob: -13.500131607055664
    7. '_counts' → logprob: -14.375131607055664
    8. '_counter' → logprob: -15.125131607055664
    9. '```' → logprob: -15.375131607055664
    10. '_co' → logprob: -15.500131607055664

Token 105: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004097635392099619
    2. '==' → logprob: -5.5040974617004395
    3. ' =' → logprob: -11.629097938537598
    4. ' >=' → logprob: -12.004097938537598
    5. '=' → logprob: -12.754097938537598
    6. ' ' → logprob: -14.254097938537598
    7. ' ' → logprob: -15.254097938537598
    8. ' >' → logprob: -15.629097938537598
    9. '>=' → logprob: -17.37909698486328
    10. '>' → logprob: -17.62909698486328

Token 106: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.0003372502396814525
    2. 'maximum' → logprob: -8.000337600708008
    3. ' ' → logprob: -13.375337600708008
    4. ' ' → logprob: -16.625337600708008
    5. ' max' → logprob: -16.875337600708008
    6. '.maximum' → logprob: -17.125337600708008
    7. 'max' → logprob: -17.875337600708008
    8. ' space' → logprob: -18.375337600708008
    9. ' maksimum' → logprob: -18.500337600708008
    10. ' maximal' → logprob: -20.625337600708008

Token 107: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -0.0005433809128589928
    2. '_oc' → logprob: -7.625543594360352
    3. '_' → logprob: -9.875543594360352
    4. '_OCC' → logprob: -13.625543594360352
    5. 'occ' → logprob: -13.875543594360352
    6. ':' → logprob: -14.000543594360352
    7. '_:' → logprob: -14.875543594360352
    8. '\' → logprob: -16.00054359436035
    9. ' _' → logprob: -16.00054359436035
    10. 'Occurrence' → logprob: -16.50054359436035

Token 108: 'urrence' (ID: 29194)
  Prédit: 'urrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -0.03873727098107338
    2. 'ur' → logprob: -3.4137372970581055
    3. 'rence' → logprob: -5.7887372970581055
    4. 'urance' → logprob: -6.4137372970581055
    5. 'rance' → logprob: -8.788737297058105
    6. 'urr' → logprob: -9.038737297058105
    7. 'urrent' → logprob: -9.663737297058105
    8. 'ence' → logprob: -12.038737297058105
    9. 'u' → logprob: -12.288737297058105
    10. 'ar' → logprob: -12.413737297058105

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010437668533995748
    2. ':
' → logprob: -6.876043796539307
    3. ':list' → logprob: -12.251043319702148
    4. '):' → logprob: -12.876043319702148
    5. '       ' → logprob: -13.376043319702148
    6. '   ' → logprob: -13.876043319702148
    7. '):
' → logprob: -14.751043319702148
    8. ':**' → logprob: -15.876043319702148
    9. ' :' → logprob: -16.25104331970215
    10. ':

' → logprob: -16.25104331970215

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024415277875959873
    2. ':' → logprob: -6.62744140625
    3. ' list' → logprob: -7.37744140625
    4. ':list' → logprob: -9.00244140625
    5. '   ' → logprob: -9.25244140625
    6. '_list' → logprob: -10.25244140625
    7. '
' → logprob: -10.25244140625
    8. 'list' → logprob: -10.25244140625
    9. ',' → logprob: -10.50244140625
    10. '[' → logprob: -10.50244140625

Token 111: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.18645119667053223
    2. 'list' (adapté à ' list') → logprob: -2.0614511966705322
    3. '   ' → logprob: -4.061450958251953
    4. '       ' → logprob: -4.061450958251953
    5. '
' → logprob: -4.936450958251953
    6. '	list' → logprob: -8.061450958251953
    7. '_list' → logprob: -8.436450958251953
    8. '           ' → logprob: -8.686450958251953
    9. 'List' → logprob: -8.811450958251953
    10. '```' → logprob: -9.811450958251953

Token 112: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -3.128163257315464e-07
    2. '_for' → logprob: -15.625
    3. '_list' → logprob: -17.125
    4. '_to' → logprob: -17.5
    5. '_' → logprob: -17.625
    6. '_or' → logprob: -18.25
    7. '```' → logprob: -18.5
    8. '._' → logprob: -18.875
    9. '\' → logprob: -19.0
    10. 'of' → logprob: -19.0

Token 113: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.07894442975521088
    2. 'most' → logprob: -2.578944444656372
    3. 'm' → logprob: -10.203944206237793
    4. 'Most' → logprob: -11.328944206237793
    5. ' most' → logprob: -12.203944206237793
    6. '```' → logprob: -15.328944206237793
    7. '-most' → logprob: -16.07894515991211
    8. '_' → logprob: -16.45394515991211
    9. 'more' → logprob: -16.82894515991211
    10. 'м' → logprob: -17.45394515991211

Token 114: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -2.1008713702030946e-06
    2. 'most' → logprob: -13.125001907348633
    3. '```' → logprob: -17.000001907348633
    4. 'ост' → logprob: -18.250001907348633
    5. ' ost' → logprob: -18.625001907348633
    6. 'Most' → logprob: -18.875001907348633
    7. 'osti' → logprob: -18.875001907348633
    8. 'ostr' → logprob: -19.000001907348633
    9. 'o' → logprob: -19.375001907348633
    10. '``' → logprob: -19.750001907348633

Token 115: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -2.6776029699249193e-05
    2. '_' → logprob: -10.62502670288086
    3. '_frequency' → logprob: -13.75002670288086
    4. '_freq' → logprob: -13.87502670288086
    5. ' _' → logprob: -15.87502670288086
    6. '_m' → logprob: -15.87502670288086
    7. 'f' → logprob: -17.75002670288086
    8. 'fre' → logprob: -17.75002670288086
    9. '_value' → logprob: -18.00002670288086
    10. '_F' → logprob: -18.25002670288086

Token 116: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -9.13388703338569e-06
    2. 'requency' → logprob: -12.250009536743164
    3. 'requently' → logprob: -13.625009536743164
    4. 'requ' → logprob: -13.875009536743164
    5. 'request' → logprob: -14.000009536743164
    6. 'req' → logprob: -14.250009536743164
    7. 'or' → logprob: -15.500009536743164
    8. 're' → logprob: -15.500009536743164
    9. 'requencies' → logprob: -16.500009536743164
    10. '```' → logprob: -17.000009536743164

Token 117: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.250001907348633
    3. '_string' → logprob: -14.875001907348633
    4. '_s' → logprob: -15.125001907348633
    5. 'strings' → logprob: -15.750001907348633
    6. 'Strings' → logprob: -16.375001907348633
    7. '_str' → logprob: -16.750001907348633
    8. '```' → logprob: -17.250001907348633
    9. 's' → logprob: -17.375001907348633
    10. '_values' → logprob: -18.875001907348633

Token 118: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6931837797164917
    2. '.append' → logprob: -0.6931837797164917
    3. '.app' → logprob: -11.818183898925781
    4. '.add' → logprob: -11.818183898925781
    5. '.ap' → logprob: -11.943183898925781
    6. ' .' → logprob: -12.193183898925781
    7. '.Append' → logprob: -12.193183898925781
    8. '.setdefault' → logprob: -13.443183898925781
    9. '.extend' → logprob: -14.193183898925781
    10. '.push' → logprob: -14.193183898925781

Token 119: '(string' (ID: 8003)
  Prédit: '(string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(string' → logprob: -0.0031812789384275675
    2. '(' → logprob: -5.753181457519531
    3. '(str' → logprob: -13.378181457519531
    4. '(s' → logprob: -14.378181457519531
    5. '(object' → logprob: -14.878181457519531
    6. '('' → logprob: -15.378181457519531
    7. ' (' → logprob: -15.503181457519531
    8. '(strings' → logprob: -15.628181457519531
    9. '("("' → logprob: -15.878181457519531
    10. '(input' → logprob: -15.878181457519531

Token 120: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.992775888647884e-05
    2. '_string' → logprob: -9.625069618225098
    3. ')_' → logprob: -13.375069618225098
    4. '_' → logprob: -14.500069618225098
    5. '_val' → logprob: -14.625069618225098
    6. ')' → logprob: -14.875069618225098
    7. '```' → logprob: -15.125069618225098
    8. 'value' → logprob: -15.375069618225098
    9. 'string' → logprob: -15.750069618225098
    10. '_Value' → logprob: -15.750069618225098

Token 121: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018029935017693788
    2. '<|end|>' → logprob: -9.0001802444458
    3. ')
' → logprob: -11.1251802444458
    4. '#' → logprob: -11.6251802444458
    5. '
' → logprob: -11.8751802444458
    6. '```' → logprob: -12.1251802444458
    7. 'newline' → logprob: -12.5001802444458
    8. '[' → logprob: -12.6251802444458
    9. ']' → logprob: -13.3751802444458
    10. ' )' → logprob: -13.5001802444458

Token 122: 'list' (ID: 2641)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06157522276043892
    2. 'list' → logprob: -2.936575174331665
    3. 'for' → logprob: -5.311575412750244
    4. 'if' → logprob: -6.811575412750244
    5. 'result' → logprob: -8.561574935913086
    6. '
' → logprob: -9.186574935913086
    7. 'sorted' → logprob: -9.186574935913086
    8. 'most' → logprob: -9.436574935913086
    9. '```' → logprob: -10.436574935913086
    10. ' list' → logprob: -10.686574935913086

Token 123: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -12.375007629394531
    3. '(' → logprob: -13.625007629394531
    4. 'of' → logprob: -15.250007629394531
    5. '`' → logprob: -15.375007629394531
    6. '_OF' → logprob: -16.00000762939453
    7. 'Of' → logprob: -16.00000762939453
    8. '('_' → logprob: -16.00000762939453
    9. '```' → logprob: -16.12500762939453
    10. '_to' → logprob: -16.12500762939453

Token 124: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0002043748099822551
    2. '_' → logprob: -8.500204086303711
    3. '_of' → logprob: -15.375204086303711
    4. 'Most' → logprob: -15.375204086303711
    5. 'most' → logprob: -15.500204086303711
    6. '_more' → logprob: -16.00020408630371
    7. '_the' → logprob: -17.75020408630371
    8. ' most' → logprob: -17.87520408630371
    9. '_for' → logprob: -18.37520408630371
    10. '_best' → logprob: -18.62520408630371

Token 125: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -3.128163257315464e-07
    2. 'most' → logprob: -15.125
    3. ' ost' → logprob: -18.125
    4. 'ост' → logprob: -19.125
    5. '```' → logprob: -19.5
    6. 'ostr' → logprob: -20.625
    7. '_' → logprob: -20.875
    8. 'OST' → logprob: -21.125
    9. 'os' → logprob: -21.25
    10. 'Most' → logprob: -21.375

Token 126: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0019347082125023007
    2. '_' → logprob: -6.25193452835083
    3. '_freq' → logprob: -13.126935005187988
    4. '_m' → logprob: -13.501935005187988
    5. '_frequency' → logprob: -13.876935005187988
    6. 'f' → logprob: -14.251935005187988
    7. 'fre' → logprob: -15.001935005187988
    8. '__' → logprob: -16.126934051513672
    9. '_for' → logprob: -16.626934051513672
    10. ' _' → logprob: -16.876934051513672

Token 127: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -1.5048530030981055e-06
    2. 'requ' → logprob: -13.875001907348633
    3. 'req' → logprob: -15.750001907348633
    4. 'requently' → logprob: -16.000001907348633
    5. 'requency' → logprob: -16.250001907348633
    6. 'request' → logprob: -17.125001907348633
    7. 're' → logprob: -17.500001907348633
    8. 'most' → logprob: -17.625001907348633
    9. 'or' → logprob: -17.625001907348633
    10. 'quent' → logprob: -18.625001907348633

Token 128: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.0005014431662857533
    2. '_' → logprob: -7.62550163269043
    3. '_s' → logprob: -12.00050163269043
    4. '_str' → logprob: -12.50050163269043
    5. 'Strings' → logprob: -13.62550163269043
    6. '_string' → logprob: -13.75050163269043
    7. '```' → logprob: -15.62550163269043
    8. '_chars' → logprob: -16.12550163269043
    9. ')_' → logprob: -16.12550163269043
    10. '_tokens' → logprob: -16.25050163269043

Token 129: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30883464217185974
    2. '<|end|>' → logprob: -1.4338346719741821
    3. '.sort' → logprob: -3.8088345527648926
    4. '.' → logprob: -5.933834552764893
    5. '```' → logprob: -6.933834552764893
    6. '[:]' → logprob: -7.558834552764893
    7. '<|end|>' → logprob: -8.05883502960205
    8. ')' → logprob: -9.05883502960205
    9. '.pop' → logprob: -9.18383502960205
    10. '
' → logprob: -9.55883502960205

Token 130: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010062752291560173
    2. '[' → logprob: -5.2600626945495605
    3. '()
' → logprob: -5.7600626945495605
    4. '(' → logprob: -6.7600626945495605
    5. '()[' → logprob: -8.385063171386719
    6. '(
' → logprob: -8.760063171386719
    7. '()

' → logprob: -10.760063171386719
    8. 'print' → logprob: -11.010063171386719
    9. '()\' → logprob: -11.260063171386719
    10. ')' → logprob: -11.635063171386719

Token 131: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011344417929649353
    2. 'for' → logprob: -4.5113444328308105
    3. 'if' → logprob: -8.136343955993652
    4. '```' → logprob: -13.761343955993652
    5. ' print' → logprob: -13.886343955993652
    6. '#print' → logprob: -14.136343955993652
    7. '#' → logprob: -15.386343955993652
    8. ' for' → logprob: -15.636343955993652
    9. 'output' → logprob: -15.886343955993652
    10. 'result' → logprob: -15.886343955993652

Token 132: ' frequent' (ID: 26836)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.02890055626630783
    2. 'string' → logprob: -3.653900623321533
    3. ' most' → logprob: -6.528900623321533
    4. ' s' → logprob: -7.903900623321533
    5. 'most' → logprob: -8.153900146484375
    6. ' ' → logprob: -9.153900146484375
    7. ' current' → logprob: -9.403900146484375
    8. ' frequent' → logprob: -9.778900146484375
    9. ' word' → logprob: -10.028900146484375
    10. ' item' → logprob: -10.403900146484375

Token 133: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6944073438644409
    2. '_string' → logprob: -0.6944073438644409
    3. '_str' → logprob: -7.1944074630737305
    4. '_strings' → logprob: -8.81940746307373
    5. '_s' → logprob: -9.06940746307373
    6. '_f' → logprob: -9.94440746307373
    7. ' _' → logprob: -10.19440746307373
    8. '_value' → logprob: -10.31940746307373
    9. '_item' → logprob: -10.69440746307373
    10. '_frequency' → logprob: -11.06940746307373

Token 134: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026849035173654556
    2. 'in' → logprob: -4.151849269866943
    3. '_' → logprob: -4.651849269866943
    4. '_in' → logprob: -7.401849269866943
    5. ' ' → logprob: -7.901849269866943
    6. ' _' → logprob: -9.276848793029785
    7. '	in' → logprob: -9.276848793029785
    8. ' ' → logprob: -11.026848793029785
    9. '  ' → logprob: -11.901848793029785
    10. ' i' → logprob: -12.526848793029785

Token 135: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1269282102584839
    2. 'list' → logprob: -2.1269283294677734
    3. ' range' → logprob: -16.751928329467773
    4. 'range' → logprob: -17.626928329467773
    5. '(list' → logprob: -20.001928329467773
    6. '_list' → logprob: -20.001928329467773
    7. ':list' → logprob: -20.501928329467773
    8. 'List' → logprob: -20.751928329467773
    9. '	list' → logprob: -22.001928329467773
    10. ' ' → logprob: -23.251928329467773

Token 136: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -6.034592388459714e-06
    2. '_' → logprob: -12.875005722045898
    3. 'of' → logprob: -13.125005722045898
    4. 's' → logprob: -14.750005722045898
    5. 'Of' → logprob: -15.250005722045898
    6. '_list' → logprob: -15.500005722045898
    7. '_OF' → logprob: -15.750005722045898
    8. '__' → logprob: -16.1250057220459
    9. '   ' → logprob: -16.6250057220459
    10. '_for' → logprob: -16.7500057220459

Token 137: '_m' (ID: 1285)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014444716274738312
    2. '_list' → logprob: -4.889444828033447
    3. ' list' → logprob: -5.139444828033447
    4. '_m' → logprob: -7.139444828033447
    5. 'most' → logprob: -8.889444351196289
    6. '_' → logprob: -11.514444351196289
    7. 'm' → logprob: -12.764444351196289
    8. '_strings' → logprob: -12.889444351196289
    9. '_f' → logprob: -13.264444351196289
    10. '_l' → logprob: -13.764444351196289

Token 138: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -2.339278580620885e-06
    2. 'most' → logprob: -13.125001907348633
    3. 'list' → logprob: -17.000001907348633
    4. 'ост' → logprob: -17.000001907348633
    5. 'ostr' → logprob: -17.375001907348633
    6. '```' → logprob: -17.500001907348633
    7. 'requent' → logprob: -17.750001907348633
    8. 'ist' → logprob: -17.750001907348633
    9. 'o' → logprob: -18.000001907348633
    10. '[' → logprob: -18.250001907348633

Token 139: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.005727320909500122
    2. '_string' → logprob: -5.255727291107178
    3. '_strings' → logprob: -7.755727291107178
    4. '_list' → logprob: -10.755727767944336
    5. 'f' → logprob: -11.005727767944336
    6. '_' → logprob: -12.255727767944336
    7. 'fre' → logprob: -12.380727767944336
    8. 'string' → logprob: -12.505727767944336
    9. '_str' → logprob: -12.505727767944336
    10. 'requent' → logprob: -12.630727767944336

Token 140: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -0.00029995047952979803
    2. 'quent' → logprob: -8.375300407409668
    3. 'req' → logprob: -10.250300407409668
    4. 'rent' → logprob: -11.875300407409668
    5. '_list' → logprob: -11.875300407409668
    6. 'list' → logprob: -12.500300407409668
    7. 'uent' → logprob: -12.625300407409668
    8. 'ront' → logprob: -13.125300407409668
    9. 'luent' → logprob: -13.250300407409668
    10. 'irst' → logprob: -13.375300407409668

Token 141: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -1.4140441635390744e-05
    2. '_' → logprob: -11.750014305114746
    3. '_s' → logprob: -12.250014305114746
    4. '_string' → logprob: -14.000014305114746
    5. 'Strings' → logprob: -15.125014305114746
    6. '_list' → logprob: -15.625014305114746
    7. '_str' → logprob: -15.875014305114746
    8. 'strings' → logprob: -16.87501335144043
    9. 's' → logprob: -17.00001335144043
    10. ' _' → logprob: -18.12501335144043

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001980570232262835
    2. ':
' → logprob: -8.750198364257812
    3. '[' → logprob: -10.500198364257812
    4. 'print' → logprob: -12.875198364257812
    5. ' :' → logprob: -13.250198364257812
    6. '[:]' → logprob: -13.250198364257812
    7. '():' → logprob: -14.125198364257812
    8. ':list' → logprob: -14.250198364257812
    9. '):' → logprob: -14.500198364257812
    10. '<|end|>' → logprob: -14.625198364257812

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009246804984286427
    2. ' print' → logprob: -7.250924587249756
    3. 'print' → logprob: -8.500925064086914
    4. '    
' → logprob: -12.125925064086914
    5. '	print' → logprob: -12.750925064086914
    6. '
' → logprob: -13.625925064086914
    7. '   ' → logprob: -14.500925064086914
    8. '```' → logprob: -14.500925064086914
    9. '\n' → logprob: -15.125925064086914
    10. '       ' → logprob: -15.375925064086914

Token 144: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003386806638445705
    2. ' print' → logprob: -8.000338554382324
    3. '   ' → logprob: -12.750338554382324
    4. 'pr' → logprob: -16.25033950805664
    5. '
' → logprob: -16.75033950805664
    6. 'prin' → logprob: -16.75033950805664
    7. '	print' → logprob: -17.00033950805664
    8. '```' → logprob: -17.75033950805664
    9. '    
' → logprob: -17.87533950805664
    10. '#print' → logprob: -18.12533950805664

Token 145: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.02385840378701687
    2. '(' → logprob: -3.7738583087921143
    3. '('' → logprob: -8.023858070373535
    4. '("("' → logprob: -8.523858070373535
    5. '("' → logprob: -9.398858070373535
    6. '()' → logprob: -13.398858070373535
    7. ' (' → logprob: -14.273858070373535
    8. '(F' → logprob: -14.898858070373535
    9. '("(' → logprob: -15.773858070373535
    10. '(`' → logprob: -15.898858070373535

Token 146: 'requent' (ID: 191346)
  Prédit: 'requent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requent' → logprob: -3.500108141452074e-05
    2. 'quent' → logprob: -10.500035285949707
    3. 're' → logprob: -12.250035285949707
    4. 'requ' → logprob: -13.000035285949707
    5. 'req' → logprob: -15.750035285949707
    6. 'fre' → logprob: -16.25003433227539
    7. 'reu' → logprob: -16.25003433227539
    8. 'request' → logprob: -18.50003433227539
    9. 'requently' → logprob: -19.12503433227539
    10. 'r' → logprob: -19.12503433227539

Token 147: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -3.5597102396423e-05
    2. '_' → logprob: -11.375035285949707
    3. '_strings' → logprob: -11.500035285949707
    4. 'string' → logprob: -11.625035285949707
    5. '_str' → logprob: -13.250035285949707
    6. '"_' → logprob: -13.625035285949707
    7. ')_' → logprob: -14.875035285949707
    8. 'String' → logprob: -15.000035285949707
    9. '_s' → logprob: -15.375035285949707
    10. '_f' → logprob: -15.625035285949707

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006411884678527713
    2. '()' → logprob: -7.500641345977783
    3. '())' → logprob: -10.000640869140625
    4. ' )' → logprob: -10.250640869140625
    5. '(' → logprob: -12.250640869140625
    6. ')
' → logprob: -14.250640869140625
    7. '```' → logprob: -14.625640869140625
    8. '[' → logprob: -15.125640869140625
    9. ',' → logprob: -15.375640869140625
    10. ')`' → logprob: -16.125640869140625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 146
Tokens correctement prédits (1ère position, stricte): 91
Tokens correctement prédits (1ère position, avec adaptation): 94
Tokens correctement prédits (top 10): 128
Précision stricte (1ère position): 62.33%
Précision adaptée (1ère position): 64.38%
Précision (top 10): 87.67%
================================================================================
