================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
import copy
import heapq
import math
import sys
from collections import *
from functools import lru_cache
from itertools import accumulate, combinations, permutations, product

def input():
    """
    Reads a line from sys.stdin and removes the trailing newline character.

    Returns:
        str: The input line without the trailing newline.
    """
    return sys.stdin.readline()[:-1]

def ruiseki(lst):
    """
    Computes the prefix sum (cumulative sum) of a list, returning a new list that prepends 0.

    Args:
        lst (list of int): The input list.

    Returns:
        list of int: The prefix sum array, starting with 0.
    """
    return [0] + list(accumulate(lst))

def celi(a, b):
    """
    Performs ceiling division between a and b, equivalent to math.ceil(a / b).

    Args:
        a (int): Numerator.
        b (int): Denominator (should not be zero).

    Returns:
        int: Ceiling of a divided by b.
    """
    return -(-a // b)

# Increase the recursion limit to allow for deep recursions
sys.setrecursionlimit(5000000)

# Modulo constant (often used for problems involving large numbers or modular arithmetic)
mod = pow(10, 9) + 7

# List of all lowercase English letters
al = [chr(ord('a') + i) for i in range(26)]

# 4-direction movement vectors (down, right, up, left)
direction = [[1, 0], [0, 1], [-1, 0], [0, -1]]

# Read the number of elements
n = int(input())

# Read a list of integers
a = list(map(int, input().split()))

# Initialize answer to 0
ans = 0

# Two pointers l (left) and r (right), both initially at 0
l, r = 0, 0

# cnt will store the sum of the current window, xor the xor-sum.
cnt = 0
xor = 0

# Sliding window approach: count number of contiguous subarrays such that
# the xor equals the sum of all numbers in that subarray.
for i in range(n):
    l = i
    # Expand the window if l == r to initially include the ith element
    if l == r:
        cnt += a[i]
        xor += a[i]
        r += 1
    # Continue expanding right boundary as long as condition holds and we don't exceed list bounds.
    while r + 1 <= n and (xor ^ a[r]) == cnt + a[r]:
        xor ^= a[r]
        cnt += a[r]
        r += 1
    # Remove a[i] from cnt and xor, as left pointer will be moved forward
    cnt -= a[i]
    xor -= a[i]
    # The number of valid subarrays starting at i is r - l
    ans += r - l

# Output the total count of such subarrays
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003348698082845658
    2. '(' → logprob: -8.500334739685059
    3. '.b' → logprob: -10.375334739685059
    4. '\' → logprob: -11.000334739685059
    5. '\n' → logprob: -11.250334739685059
    6. '.\' → logprob: -11.750334739685059
    7. '

' → logprob: -11.875334739685059
    8. '
' → logprob: -12.000334739685059
    9. '.
' → logprob: -12.000334739685059
    10. '```' → logprob: -12.250334739685059

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0014827244449406862
    2. '(' → logprob: -6.7514824867248535
    3. '\' → logprob: -9.876482963562012
    4. '\n' → logprob: -10.251482963562012
    5. ',' → logprob: -10.376482963562012
    6. '

' → logprob: -10.626482963562012
    7. '.
' → logprob: -10.626482963562012
    8. '.b' → logprob: -10.751482963562012
    9. '```' → logprob: -10.751482963562012
    10. '' → logprob: -10.876482963562012

Token 5: ' copy' (ID: 5150)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.21271003782749176
    2. ' math' → logprob: -1.8377100229263306
    3. ' heap' → logprob: -4.212709903717041
    4. ' collections' → logprob: -4.462709903717041
    5. 'sys' → logprob: -6.087709903717041
    6. ' os' → logprob: -6.587709903717041
    7. ' itertools' → logprob: -6.587709903717041
    8. 'collections' → logprob: -7.962709903717041
    9. 'heap' → logprob: -8.2127103805542
    10. 'math' → logprob: -8.4627103805542

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09485521912574768
    2. '
' → logprob: -3.219855308532715
    3. '\' → logprob: -4.594855308532715
    4. '

' → logprob: -4.719855308532715
    5. '\n' → logprob: -4.719855308532715
    6. '(' → logprob: -4.969855308532715
    7. '.
' → logprob: -5.844855308532715
    8. ',' → logprob: -6.344855308532715
    9. '.

' → logprob: -6.469855308532715
    10. 'import' → logprob: -6.594855308532715

Token 7: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14205552637577057
    2. '
' → logprob: -3.1420555114746094
    3. '

' → logprob: -3.5170555114746094
    4. '(' → logprob: -3.6420555114746094
    5. '.

' → logprob: -4.642055511474609
    6. '\' → logprob: -5.392055511474609
    7. '.
' → logprob: -5.767055511474609
    8. '(
' → logprob: -5.767055511474609
    9. ',' → logprob: -6.267055511474609
    10. '(

' → logprob: -6.267055511474609

Token 8: ' heap' (ID: 37237)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9261807203292847
    2. ' heap' → logprob: -1.1761807203292847
    3. ' collections' → logprob: -1.8011807203292847
    4. ' itertools' → logprob: -3.176180839538574
    5. 'collections' → logprob: -3.551180839538574
    6. 'heap' → logprob: -3.676180839538574
    7. ' sys' → logprob: -4.301180839538574
    8. 'math' → logprob: -4.801180839538574
    9. ' os' → logprob: -5.301180839538574
    10. ' threading' → logprob: -6.426180839538574

Token 9: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.2246291337069124e-05
    2. '#' → logprob: -12.250021934509277
    3. '.' → logprob: -12.875021934509277
    4. 'u' → logprob: -13.000021934509277
    5. '<|end|>' → logprob: -13.000021934509277
    6. 'queue' → logprob: -13.500021934509277
    7. 't' → logprob: -13.625021934509277
    8. 'i' → logprob: -13.875021934509277
    9. 's' → logprob: -14.000021934509277
    10. 'space' → logprob: -14.250021934509277

Token 10: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.020105717703700066
    2. 'import' → logprob: -5.145105838775635
    3. '\' → logprob: -5.395105838775635
    4. '<|end|>' → logprob: -6.020105838775635
    5. '
' → logprob: -6.395105838775635
    6. ',' → logprob: -6.770105838775635
    7. '#' → logprob: -6.895105838775635
    8. '\n' → logprob: -7.145105838775635
    9. '.
' → logprob: -7.770105838775635
    10. '

' → logprob: -7.895105838775635

Token 11: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4364888668060303
    2. '
' → logprob: -2.1864888668060303
    3. 'import' → logprob: -2.1864888668060303
    4. '

' → logprob: -2.8114888668060303
    5. '#' → logprob: -4.436489105224609
    6. 'def' → logprob: -4.561489105224609
    7. ',' → logprob: -4.686489105224609
    8. '' → logprob: -4.811489105224609
    9. '.

' → logprob: -5.436489105224609
    10. 'from' → logprob: -5.686489105224609

Token 12: ' math' (ID: 13324)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.029257318004965782
    2. ' math' → logprob: -3.654257297515869
    3. 'math' → logprob: -6.654257297515869
    4. ' io' → logprob: -7.029257297515869
    5. ' collections' → logprob: -8.279257774353027
    6. 'it' → logprob: -8.404257774353027
    7. 'io' → logprob: -9.279257774353027
    8. 'collections' → logprob: -9.404257774353027
    9. ' threading' → logprob: -10.154257774353027
    10. ' json' → logprob: -10.529257774353027

Token 13: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.44188830256462097
    2. '
' → logprob: -2.0668883323669434
    3. '.' → logprob: -2.6918883323669434
    4. '```' → logprob: -2.9418883323669434
    5. ',' → logprob: -3.5668883323669434
    6. '\' → logprob: -3.8168883323669434
    7. 'def' → logprob: -4.316888332366943
    8. '\n' → logprob: -4.566888332366943
    9. '

' → logprob: -4.566888332366943
    10. '#' → logprob: -4.941888332366943

Token 14: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.870063066482544
    2. 'import' → logprob: -1.120063066482544
    3. '
' → logprob: -2.370063066482544
    4. ',' → logprob: -3.245063066482544
    5. 'def' → logprob: -3.620063066482544
    6. '#' → logprob: -4.120062828063965
    7. '```' → logprob: -4.120062828063965
    8. '\' → logprob: -4.370062828063965
    9. '

' → logprob: -4.620062828063965
    10. 'from' → logprob: -4.745062828063965

Token 15: ' sys' (ID: 12228)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.2437105029821396
    2. ' random' → logprob: -2.243710517883301
    3. 'collections' → logprob: -3.618710517883301
    4. 'operator' → logprob: -3.743710517883301
    5. 'sys' → logprob: -4.368710517883301
    6. ' operator' → logprob: -4.368710517883301
    7. 'os' → logprob: -4.993710517883301
    8. ' collections' → logprob: -4.993710517883301
    9. ' sys' → logprob: -4.993710517883301
    10. ' os' → logprob: -5.368710517883301

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4280724823474884
    2. 'import' → logprob: -2.053072452545166
    3. '\n' → logprob: -2.553072452545166
    4. '

' → logprob: -2.678072452545166
    5. '<|end|>' → logprob: -3.553072452545166
    6. '```' → logprob: -3.803072452545166
    7. '\' → logprob: -4.803072452545166
    8. '#' → logprob: -5.303072452545166
    9. '.' → logprob: -6.053072452545166
    10. '<|end|>' → logprob: -6.428072452545166

Token 17: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7819058895111084
    2. 'import' → logprob: -0.9069058895111084
    3. '\n' → logprob: -2.6569058895111084
    4. '

' → logprob: -3.7819058895111084
    5. 'def' → logprob: -5.0319061279296875
    6. '#' → logprob: -5.0319061279296875
    7. '```' → logprob: -5.1569061279296875
    8. 'from' → logprob: -5.1569061279296875
    9. '' → logprob: -5.4069061279296875
    10. '<|end|>' → logprob: -5.4069061279296875

Token 18: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.12615670263767242
    2. 'collections' → logprob: -2.376156806945801
    3. ' typing' → logprob: -4.126156806945801
    4. ' itertools' → logprob: -5.001156806945801
    5. ' functools' → logprob: -7.501156806945801
    6. '_' → logprob: -7.626156806945801
    7. 'typing' → logprob: -7.626156806945801
    8. ' ' → logprob: -7.876156806945801
    9. ' io' → logprob: -8.2511568069458
    10. ' os' → logprob: -8.7511568069458

Token 19: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4760962426662445
    2. 'import' → logprob: -0.9760962724685669
    3. 'abc' → logprob: -7.101096153259277
    4. '.' → logprob: -8.226096153259277
    5. 'collections' → logprob: -8.226096153259277
    6. 'from' → logprob: -9.101096153259277
    7. ' collections' → logprob: -9.476096153259277
    8. '	import' → logprob: -9.476096153259277
    9. ' ' → logprob: -9.851096153259277
    10. '_import' → logprob: -10.226096153259277

Token 20: ' *
' (ID: 2099)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.7453055381774902
    2. ' abc' → logprob: -0.9953055381774902
    3. ' deque' → logprob: -1.9953055381774902
    4. 'deque' → logprob: -4.12030553817749
    5. 'abc' → logprob: -5.74530553817749
    6. ' collections' → logprob: -8.870306015014648
    7. ' named' → logprob: -9.745306015014648
    8. ' itertools' → logprob: -9.745306015014648
    9. 'collections' → logprob: -9.995306015014648
    10. ' functools' → logprob: -10.870306015014648

Token 21: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.030304016545414925
    2. 'from' → logprob: -4.155303955078125
    3. '<|end|>' → logprob: -5.655303955078125
    4. ' import' → logprob: -5.905303955078125
    5. ' ' → logprob: -5.905303955078125
    6. '```' → logprob: -6.155303955078125
    7. ' 
' → logprob: -7.530303955078125
    8. '<|end|>' → logprob: -7.780303955078125
    9. '
' → logprob: -7.905303955078125
    10. '\n' → logprob: -8.030303955078125

Token 22: ' functools' (ID: 142636)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.43826618790626526
    2. ' typing' → logprob: -1.1882661581039429
    3. 'typing' → logprob: -3.4382662773132324
    4. ' functools' → logprob: -5.063266277313232
    5. ' operator' → logprob: -5.938266277313232
    6. '_' → logprob: -6.438266277313232
    7. 'operator' → logprob: -6.813266277313232
    8. ' ' → logprob: -6.938266277313232
    9. ' queue' → logprob: -7.063266277313232
    10. ' heap' → logprob: -7.063266277313232

Token 23: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1003042608499527
    2. 'import' → logprob: -2.350304365158081
    3. '_import' → logprob: -10.47530460357666
    4. ' ' → logprob: -10.60030460357666
    5. '<|end|>' → logprob: -10.72530460357666
    6. '	import' → logprob: -11.85030460357666
    7. ' ' → logprob: -12.60030460357666
    8. '_' → logprob: -13.10030460357666
    9. ' _' → logprob: -13.35030460357666
    10. '.' → logprob: -13.47530460357666

Token 24: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017567144706845284
    2. ' l' → logprob: -4.142567157745361
    3. ' wraps' → logprob: -6.767567157745361
    4. ' reduce' → logprob: -8.392566680908203
    5. ' cmp' → logprob: -10.517566680908203
    6. ' partial' → logprob: -10.517566680908203
    7. 'l' → logprob: -10.767566680908203
    8. '32' → logprob: -10.767566680908203
    9. ' ' → logprob: -10.892566680908203
    10. 'wrap' → logprob: -11.267566680908203

Token 25: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -2.1888679839321412e-05
    2. 'r' → logprob: -10.875021934509277
    3. 'ruz' → logprob: -13.750021934509277
    4. 'ambda' → logprob: -15.000021934509277
    5. 'fu' → logprob: -15.250021934509277
    6. 'z' → logprob: -15.250021934509277
    7. 'a' → logprob: -15.500021934509277
    8. 'azy' → logprob: -15.750021934509277
    9. 'ruh' → logprob: -15.875021934509277
    10. '_ru' → logprob: -15.875021934509277

Token 26: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.058913104236125946
    2. 'cache' → logprob: -2.933912992477417
    3. 'ru' → logprob: -5.558913230895996
    4. 'ut' → logprob: -10.433913230895996
    5. 'fu' → logprob: -10.558913230895996
    6. 'RU' → logprob: -11.058913230895996
    7. 'import' → logprob: -11.308913230895996
    8. 'r' → logprob: -11.308913230895996
    9. 'ac' → logprob: -11.308913230895996
    10. '_cached' → logprob: -11.433913230895996

Token 27: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5665459632873535
    2. '<|end|>' → logprob: -1.0665459632873535
    3. '
' → logprob: -3.4415459632873535
    4. '\n' → logprob: -4.3165459632873535
    5. 'from' → logprob: -4.4415459632873535
    6. '

' → logprob: -4.5665459632873535
    7. ',' → logprob: -4.9415459632873535
    8. '<|end|>' → logprob: -5.4415459632873535
    9. 'def' → logprob: -6.4415459632873535
    10. '```' → logprob: -6.5665459632873535

Token 28: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9684162139892578
    2. '
' → logprob: -1.4684162139892578
    3. '#' → logprob: -2.218416213989258
    4. '<|end|>' → logprob: -2.718416213989258
    5. '

' → logprob: -3.218416213989258
    6. 'from' → logprob: -3.218416213989258
    7. '\n' → logprob: -3.343416213989258
    8. 'class' → logprob: -3.718416213989258
    9. '```' → logprob: -4.218416213989258
    10. ',' → logprob: -4.468416213989258

Token 29: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.10427757352590561
    2. ' typing' → logprob: -2.7292776107788086
    3. ' operator' → logprob: -3.6042776107788086
    4. 'it' → logprob: -6.104277610778809
    5. 'operator' → logprob: -6.229277610778809
    6. 'typing' → logprob: -6.729277610778809
    7. ' ' → logprob: -7.854277610778809
    8. ' math' → logprob: -8.104277610778809
    9. ' io' → logprob: -8.979277610778809
    10. ' heap' → logprob: -9.104277610778809

Token 30: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.038107242435216904
    2. 'import' → logprob: -3.28810715675354
    3. '	import' → logprob: -10.163106918334961
    4. ' ' → logprob: -10.913106918334961
    5. '_import' → logprob: -12.663106918334961
    6. '.' → logprob: -13.288106918334961
    7. '<|end|>' → logprob: -13.413106918334961
    8. '.import' → logprob: -14.788106918334961
    9. ' ' → logprob: -14.913106918334961
    10. ' importar' → logprob: -15.288106918334961

Token 31: ' accumulate' (ID: 74226)
  Prédit: ' accumulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.867465615272522
    2. ' combinations' → logprob: -1.492465615272522
    3. ' permutations' → logprob: -1.492465615272522
    4. '*' → logprob: -3.3674654960632324
    5. 'com' → logprob: -3.4924654960632324
    6. ' product' → logprob: -3.8674654960632324
    7. ' ' → logprob: -4.617465496063232
    8. ' chain' → logprob: -4.867465496063232
    9. ' group' → logprob: -4.992465496063232
    10. 'acc' → logprob: -5.367465496063232

Token 32: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3346634805202484
    2. '<|end|>' → logprob: -2.4596633911132812
    3. '
' → logprob: -2.5846633911132812
    4. ',' → logprob: -2.5846633911132812
    5. 'from' → logprob: -4.334663391113281
    6. '\n' → logprob: -4.459663391113281
    7. '

' → logprob: -4.834663391113281
    8. '<|end|>' → logprob: -5.209663391113281
    9. 'def' → logprob: -6.334663391113281
    10. ',
' → logprob: -6.459663391113281

Token 33: ' combinations' (ID: 43835)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.5696251392364502
    2. 'com' → logprob: -1.4446251392364502
    3. ' chain' → logprob: -1.9446251392364502
    4. 'product' → logprob: -4.319624900817871
    5. 'group' → logprob: -4.694624900817871
    6. 'cycle' → logprob: -4.944624900817871
    7. ' product' → logprob: -5.194624900817871
    8. ' ' → logprob: -5.194624900817871
    9. ' group' → logprob: -5.569624900817871
    10. 'compress' → logprob: -5.694624900817871

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004290064796805382
    2. 'import' → logprob: -6.1292901039123535
    3. 'from' → logprob: -6.7542901039123535
    4. ',
' → logprob: -7.6292901039123535
    5. '<|end|>' → logprob: -8.504289627075195
    6. ' ,' → logprob: -9.379289627075195
    7. '```' → logprob: -10.754289627075195
    8. 'def' → logprob: -10.879289627075195
    9. '<|end|>' → logprob: -11.254289627075195
    10. ',n' → logprob: -11.504289627075195

Token 35: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -1.008704423904419
    2. 'product' → logprob: -1.383704423904419
    3. 'com' → logprob: -2.258704423904419
    4. 'per' → logprob: -2.383704423904419
    5. 'count' → logprob: -2.383704423904419
    6. 'compress' → logprob: -3.383704423904419
    7. ' product' → logprob: -3.758704423904419
    8. 'group' → logprob: -4.25870418548584
    9. 'cycle' → logprob: -5.63370418548584
    10. '```' → logprob: -5.63370418548584

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05375150591135025
    2. '
' → logprob: -3.8037514686584473
    3. 'import' → logprob: -4.428751468658447
    4. '<|end|>' → logprob: -4.928751468658447
    5. ',
' → logprob: -5.303751468658447
    6. 'from' → logprob: -5.803751468658447
    7. '\n' → logprob: -6.928751468658447
    8. '

' → logprob: -7.928751468658447
    9. '<|end|>' → logprob: -7.928751468658447
    10. ' ,' → logprob: -8.553751945495605

Token 37: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.4763365387916565
    2. ' product' → logprob: -0.9763365387916565
    3. ' group' → logprob: -7.476336479187012
    4. ' chain' → logprob: -7.726336479187012
    5. 'group' → logprob: -8.101336479187012
    6. 'chain' → logprob: -8.226336479187012
    7. 'count' → logprob: -8.726336479187012
    8. 'com' → logprob: -9.101336479187012
    9. 'cycle' → logprob: -9.226336479187012
    10. '```' → logprob: -9.226336479187012

Token 38: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3758173882961273
    2. '<|end|>' → logprob: -1.2508174180984497
    3. 'import' → logprob: -4.75081729888916
    4. '
' → logprob: -4.75081729888916
    5. '<|end|>' → logprob: -5.75081729888916
    6. '\n' → logprob: -6.12581729888916
    7. 'from' → logprob: -7.12581729888916
    8. '```' → logprob: -7.37581729888916
    9. ' ' → logprob: -7.62581729888916
    10. '

' → logprob: -7.87581729888916

Token 39: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6585344076156616
    2. 'import' → logprob: -1.9085344076156616
    3. '
' → logprob: -2.283534526824951
    4. '#' → logprob: -2.908534526824951
    5. '

' → logprob: -3.033534526824951
    6. '\n' → logprob: -3.283534526824951
    7. 'def' → logprob: -3.783534526824951
    8. ',
' → logprob: -3.908534526824951
    9. 'class' → logprob: -4.408534526824951
    10. 'from' → logprob: -4.533534526824951

Token 40: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41066867113113403
    2. ' main' → logprob: -1.4106686115264893
    3. ' solve' → logprob: -3.0356686115264893
    4. '_' → logprob: -5.035668849945068
    5. ' max' → logprob: -5.535668849945068
    6. ' binary' → logprob: -5.535668849945068
    7. ' dfs' → logprob: -5.785668849945068
    8. ' two' → logprob: -5.910668849945068
    9. ' _' → logprob: -6.160668849945068
    10. ' s' → logprob: -6.410668849945068

Token 41: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.21309493482112885
    2. '()' → logprob: -2.08809494972229
    3. '(' → logprob: -2.71309494972229
    4. '().' → logprob: -7.838094711303711
    5. '_' → logprob: -8.088094711303711
    6. '():
' → logprob: -8.338094711303711
    7. '("")' → logprob: -9.088094711303711
    8. ' ()' → logprob: -9.588094711303711
    9. '(prompt' → logprob: -9.588094711303711
    10. ' ():' → logprob: -9.713094711303711

Token 42: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16590562462806702
    2. 'return' → logprob: -3.165905714035034
    3. '   ' → logprob: -3.415905714035034
    4. ' return' → logprob: -3.540905714035034
    5. ' ' → logprob: -3.665905714035034
    6. '().' → logprob: -4.790905475616455
    7. ' sys' → logprob: -5.540905475616455
    8. ' =' → logprob: -6.165905475616455
    9. '    ' → logprob: -6.415905475616455
    10. 'input' → logprob: -6.665905475616455

Token 43: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15949863195419312
    2. ' return' → logprob: -2.659498691558838
    3. 'sys' → logprob: -2.909498691558838
    4. ' sys' → logprob: -3.784498691558838
    5. '   ' → logprob: -8.78449821472168
    6. ' ' → logprob: -10.53449821472168
    7. 'input' → logprob: -12.28449821472168
    8. '__' → logprob: -12.40949821472168
    9. 'print' → logprob: -12.40949821472168
    10. 's' → logprob: -12.53449821472168

Token 44: '   ' (ID: 271)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7729811668395996
    2. ' input' → logprob: -1.8979811668395996
    3. ' return' → logprob: -2.5229811668395996
    4. 'return' → logprob: -2.5229811668395996
    5. 'input' → logprob: -2.6479811668395996
    6. '"""' → logprob: -2.8979811668395996
    7. 'sys' → logprob: -2.8979811668395996
    8. '   ' → logprob: -3.8979811668395996
    9. '""' → logprob: -4.6479811668396
    10. ')' → logprob: -5.0229811668396

Token 45: ' Reads' (ID: 88839)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.39820075035095215
    2. 'return' → logprob: -1.6482007503509521
    3. '"""' → logprob: -2.273200750350952
    4. '   ' → logprob: -4.023200988769531
    5. ' pass' → logprob: -5.273200988769531
    6. ' """' → logprob: -5.898200988769531
    7. '()' → logprob: -5.898200988769531
    8. ' ' → logprob: -6.523200988769531
    9. 'Return' → logprob: -7.773200988769531
    10. '  ' → logprob: -8.023200988769531

Token 46: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007240863982588053
    2. ' a' → logprob: -6.0072407722473145
    3. '<|end|>' → logprob: -6.5072407722473145
    4. ' the' → logprob: -7.5072407722473145
    5. '().' → logprob: -7.8822407722473145
    6. ' line' → logprob: -7.8822407722473145
    7. '<|end|>' → logprob: -7.8822407722473145
    8. '()>' → logprob: -8.632241249084473
    9. 'line' → logprob: -8.757241249084473
    10. ' from' → logprob: -8.882241249084473

Token 47: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.23906785249710083
    2. 'line' → logprob: -1.614067792892456
    3. 'n' → logprob: -4.489068031311035
    4. ' single' → logprob: -6.614068031311035
    5. 'll' → logprob: -8.239068031311035
    6. 'l' → logprob: -8.489068031311035
    7. 'single' → logprob: -8.614068031311035
    8. '_line' → logprob: -8.989068031311035
    9. ' ' → logprob: -10.614068031311035
    10. 'string' → logprob: -10.864068031311035

Token 48: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06108460575342178
    2. '   ' → logprob: -3.436084508895874
    3. '().' → logprob: -4.436084747314453
    4. ' from' → logprob: -4.686084747314453
    5. '.' → logprob: -6.186084747314453
    6. 'from' → logprob: -7.561084747314453
    7. '.rstrip' → logprob: -7.561084747314453
    8. ',' → logprob: -7.811084747314453
    9. 'rstrip' → logprob: -8.061084747314453
    10. '    ' → logprob: -8.436084747314453

Token 49: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5848219990730286
    2. 'stdin' → logprob: -1.2098219394683838
    3. ' sys' → logprob: -2.209821939468384
    4. ' stdin' → logprob: -4.209822177886963
    5. ' standard' → logprob: -4.209822177886963
    6. 'standard' → logprob: -5.459822177886963
    7. 'input' → logprob: -7.584822177886963
    8. ' input' → logprob: -8.959821701049805
    9. ' the' → logprob: -9.459821701049805
    10. '   ' → logprob: -9.584821701049805

Token 50: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.001512004528194666
    2. 'stdin' → logprob: -6.626512050628662
    3. '(stdin' → logprob: -9.126511573791504
    4. '.stdout' → logprob: -10.251511573791504
    5. ' stdin' → logprob: -10.376511573791504
    6. '   ' → logprob: -12.126511573791504
    7. '.' → logprob: -12.751511573791504
    8. '.std' → logprob: -14.001511573791504
    9. '```' → logprob: -14.126511573791504
    10. '.readline' → logprob: -15.251511573791504

Token 51: ' and' (ID: 326)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.11480013281106949
    2. '   ' → logprob: -2.989800214767456
    3. '().' → logprob: -3.489800214767456
    4. '.' → logprob: -4.114799976348877
    5. '()' → logprob: -5.239799976348877
    6. ')' → logprob: -6.114799976348877
    7. ',' → logprob: -6.239799976348877
    8. ').' → logprob: -7.989799976348877
    9. 'return' → logprob: -8.239800453186035
    10. '.rstrip' → logprob: -8.364800453186035

Token 52: ' removes' (ID: 52683)
  Prédit: ' strips'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strips' → logprob: -0.43299344182014465
    2. 'rstrip' → logprob: -1.0579934120178223
    3. 'strip' → logprob: -6.057993412017822
    4. ' returns' → logprob: -6.682993412017822
    5. 'str' → logprob: -8.55799388885498
    6. 'returns' → logprob: -9.05799388885498
    7. ' removes' → logprob: -9.43299388885498
    8. ' strip' → logprob: -9.43299388885498
    9. 's' → logprob: -10.05799388885498
    10. '.rstrip' → logprob: -10.05799388885498

Token 53: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.23048540949821472
    2. ' trailing' → logprob: -1.605485439300537
    3. 'the' → logprob: -5.480485439300537
    4. ' any' → logprob: -7.230485439300537
    5. '()' → logprob: -9.730484962463379
    6. 'Trailing' → logprob: -10.605484962463379
    7. ' ' → logprob: -10.980484962463379
    8. ' leading' → logprob: -11.230484962463379
    9. '   ' → logprob: -11.605484962463379
    10. ' its' → logprob: -11.730484962463379

Token 54: ' trailing' (ID: 57985)
  Prédit: ' trailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trailing' → logprob: -0.005954156629741192
    2. 'tr' → logprob: -5.755954265594482
    3. ' newline' → logprob: -6.255954265594482
    4. 'newline' → logprob: -7.130954265594482
    5. 'ending' → logprob: -11.255953788757324
    6. '\n' → logprob: -11.380953788757324
    7. 'trail' → logprob: -11.880953788757324
    8. ' ending' → logprob: -12.630953788757324
    9. 'n' → logprob: -13.005953788757324
    10. 'rstrip' → logprob: -13.130953788757324

Token 55: ' newline' (ID: 95802)
  Prédit: ' newline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' newline' → logprob: -0.5660194158554077
    2. 'newline' → logprob: -0.9410194158554077
    3. '\n' → logprob: -3.3160195350646973
    4. ''\' → logprob: -5.441019535064697
    5. ' whitespace' → logprob: -7.941019535064697
    6. ' '\' → logprob: -8.566019058227539
    7. ' \' → logprob: -8.816019058227539
    8. 'space' → logprob: -9.066019058227539
    9. '\' → logprob: -9.191019058227539
    10. '('\' → logprob: -9.441019058227539

Token 56: ' character' (ID: 5855)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6379876136779785
    2. ' character' → logprob: -1.7629876136779785
    3. '\n' → logprob: -2.0129876136779785
    4. '()' → logprob: -2.5129876136779785
    5. 'character' → logprob: -3.6379876136779785
    6. 'def' → logprob: -4.5129876136779785
    7. ')' → logprob: -5.2629876136779785
    8. '```' → logprob: -5.3879876136779785
    9. '"""' → logprob: -5.6379876136779785
    10. 'rstrip' → logprob: -5.6379876136779785

Token 57: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09960365295410156
    2. ')' → logprob: -3.7246036529541016
    3. '()' → logprob: -4.474603652954102
    4. '():' → logprob: -4.474603652954102
    5. '):' → logprob: -4.849603652954102
    6. 'return' → logprob: -4.849603652954102
    7. '.rstrip' → logprob: -4.849603652954102
    8. ':return' → logprob: -4.849603652954102
    9. '().' → logprob: -5.224603652954102
    10. 'rstrip' → logprob: -5.724603652954102

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004332202952355146
    2. 'return' → logprob: -5.754332065582275
    3. '"""' → logprob: -7.629332065582275
    4. ')' → logprob: -8.129332542419434
    5. ' return' → logprob: -8.129332542419434
    6. '""' → logprob: -10.129332542419434
    7. ':return' → logprob: -11.629332542419434
    8. ' ' → logprob: -11.754332542419434
    9. '```' → logprob: -12.254332542419434
    10. '       ' → logprob: -12.379332542419434

Token 59: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10540637373924255
    2. '   ' → logprob: -2.3554062843322754
    3. ' return' → logprob: -5.355406284332275
    4. 'line' → logprob: -7.980406284332275
    5. ' line' → logprob: -9.355406761169434
    6. 'try' → logprob: -10.980406761169434
    7. ' ' → logprob: -11.855406761169434
    8. 's' → logprob: -13.105406761169434
    9. '	return' → logprob: -13.230406761169434
    10. '       ' → logprob: -13.355406761169434

Token 60: ':
' (ID: 734)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6231470108032227
    2. ' ' → logprob: -1.6231470108032227
    3. '   ' → logprob: -1.7481470108032227
    4. '  ' → logprob: -4.373147010803223
    5. ' readline' → logprob: -4.498147010803223
    6. '<|end|>' → logprob: -4.623147010803223
    7. ' str' → logprob: -4.748147010803223
    8. ' input' → logprob: -5.123147010803223
    9. ':' → logprob: -5.373147010803223
    10. ' :' → logprob: -5.623147010803223

Token 61: '       ' (ID: 309)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.8118183612823486
    2. '   ' → logprob: -1.4368183612823486
    3. ' input' → logprob: -2.1868183612823486
    4. '    ' → logprob: -3.1868183612823486
    5. ' line' → logprob: -3.1868183612823486
    6. 'input' → logprob: -3.3118183612823486
    7. ' ' → logprob: -4.0618181228637695
    8. 'sys' → logprob: -4.1868181228637695
    9. ' str' → logprob: -4.3118181228637695
    10. ' readline' → logprob: -5.0618181228637695

Token 62: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.13431239128112793
    2. ' str' → logprob: -2.259312391281128
    3. 'input' → logprob: -4.634312629699707
    4. 'line' → logprob: -5.634312629699707
    5. ' input' → logprob: -5.759312629699707
    6. ' line' → logprob: -6.259312629699707
    7. 'sys' → logprob: -6.384312629699707
    8. ' sys' → logprob: -7.384312629699707
    9. 'string' → logprob: -8.009312629699707
    10. 's' → logprob: -8.884312629699707

Token 63: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4061128795146942
    2. ':' → logprob: -2.2811129093170166
    3. '):' → logprob: -2.4061129093170166
    4. ')' → logprob: -2.7811129093170166
    5. '""' → logprob: -4.1561126708984375
    6. '"""' → logprob: -4.1561126708984375
    7. '\n' → logprob: -4.7811126708984375
    8. '    ' → logprob: -5.0311126708984375
    9. '       ' → logprob: -5.0311126708984375
    10. '():' → logprob: -5.2811126708984375

Token 64: ' The' (ID: 623)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1540992110967636
    2. 'sys' → logprob: -2.654099225997925
    3. ' input' → logprob: -3.529099225997925
    4. ' super' → logprob: -4.029098987579346
    5. '   ' → logprob: -5.154098987579346
    6. 'input' → logprob: -5.279098987579346
    7. ' line' → logprob: -5.654098987579346
    8. ' next' → logprob: -6.154098987579346
    9. 'super' → logprob: -6.279098987579346
    10. ' The' → logprob: -6.279098987579346

Token 65: ' input' (ID: 3422)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.1392638385295868
    2. ' input' → logprob: -2.764263868331909
    3. ' line' → logprob: -3.514263868331909
    4. ' user' → logprob: -4.38926362991333
    5. ' stripped' → logprob: -4.63926362991333
    6. ' user's' → logprob: -4.88926362991333
    7. 'input' → logprob: -6.26426362991333
    8. ' readline' → logprob: -7.01426362991333
    9. 'line' → logprob: -7.26426362991333
    10. 'next' → logprob: -7.38926362991333

Token 66: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9973425269126892
    2. '()' → logprob: -1.247342586517334
    3. ' ' → logprob: -1.747342586517334
    4. '<|end|>' → logprob: -2.497342586517334
    5. ' string' → logprob: -3.747342586517334
    6. '   ' → logprob: -4.372342586517334
    7. '().' → logprob: -4.747342586517334
    8. '    ' → logprob: -5.247342586517334
    9. '(' → logprob: -5.247342586517334
    10. '  ' → logprob: -5.372342586517334

Token 67: ' without' (ID: 2935)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14609046280384064
    2. '.rstrip' → logprob: -2.396090507507324
    3. '.strip' → logprob: -4.021090507507324
    4. '    ' → logprob: -4.896090507507324
    5. '       ' → logprob: -5.646090507507324
    6. '    
' → logprob: -5.896090507507324
    7. '[:-' → logprob: -6.146090507507324
    8. ')' → logprob: -6.271090507507324
    9. '\n' → logprob: -6.646090507507324
    10. '().' → logprob: -7.271090507507324

Token 68: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5151753425598145
    2. ' trailing' → logprob: -1.0151753425598145
    3. ' a' → logprob: -4.0151753425598145
    4. ' any' → logprob: -4.1401753425598145
    5. 'the' → logprob: -5.2651753425598145
    6. 'a' → logprob: -7.8901753425598145
    7. ' newline' → logprob: -7.8901753425598145
    8. 'any' → logprob: -9.265174865722656
    9. ' leading' → logprob: -9.265174865722656
    10. '   ' → logprob: -9.390174865722656

Token 69: ' trailing' (ID: 57985)
  Prédit: ' trailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trailing' → logprob: -0.00729342782869935
    2. ' newline' → logprob: -5.882293224334717
    3. 'tr' → logprob: -6.007293224334717
    4. 'newline' → logprob: -6.257293224334717
    5. '\n' → logprob: -10.007293701171875
    6. ''\' → logprob: -10.882293701171875
    7. 'final' → logprob: -12.132293701171875
    8. ' final' → logprob: -12.257293701171875
    9. ' terminating' → logprob: -12.507293701171875
    10. 'ending' → logprob: -12.632293701171875

Token 70: ' newline' (ID: 95802)
  Prédit: ' newline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' newline' → logprob: -0.013687511906027794
    2. 'newline' → logprob: -4.513687610626221
    3. '\n' → logprob: -6.013687610626221
    4. ''\' → logprob: -8.888687133789062
    5. '"\' → logprob: -11.138687133789062
    6. ' '\' → logprob: -11.513687133789062
    7. ' whitespace' → logprob: -11.638687133789062
    8. '\' → logprob: -12.513687133789062
    9. ' line' → logprob: -12.513687133789062
    10. ' \' → logprob: -12.888687133789062

Token 71: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6839650869369507
    2. '\n' → logprob: -0.8089650869369507
    3. '"""' → logprob: -3.4339652061462402
    4. '"""
' → logprob: -4.93396520614624
    5. '
' → logprob: -5.93396520614624
    6. '"\' → logprob: -6.43396520614624
    7. '    
' → logprob: -6.55896520614624
    8. ' character' → logprob: -6.55896520614624
    9. '```' → logprob: -7.68396520614624
    10. '""' → logprob: -8.058964729309082

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6993582248687744
    2. '"""' → logprob: -0.6993582248687744
    3. '"""
' → logprob: -5.824357986450195
    4. ' """' → logprob: -6.699357986450195
    5. '""' → logprob: -7.199357986450195
    6. '"' → logprob: -7.699357986450195
    7. ')' → logprob: -8.574357986450195
    8. '\n' → logprob: -8.574357986450195
    9. '```' → logprob: -8.574357986450195
    10. '"\' → logprob: -9.199357986450195

Token 73: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.0031123533844947815
    2. '   ' → logprob: -6.378112316131592
    3. '"""
' (adapté à ' """
') → logprob: -7.378112316131592
    4. ' """' → logprob: -7.628112316131592
    5. '""' → logprob: -8.37811279296875
    6. '"' → logprob: -9.87811279296875
    7. ')' → logprob: -11.50311279296875
    8. ' """
' → logprob: -12.50311279296875
    9. '```' → logprob: -14.12811279296875
    10. '"""

' → logprob: -14.62811279296875

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004001346416771412
    2. 'return' → logprob: -5.754001140594482
    3. ' return' → logprob: -7.129001140594482
    4. '   ' → logprob: -11.87900161743164
    5. '    ' → logprob: -12.62900161743164
    6. '    
' → logprob: -13.50400161743164
    7. '       ' → logprob: -13.50400161743164
    8. 'r' → logprob: -13.62900161743164
    9. '	return' → logprob: -13.87900161743164
    10. '  ' → logprob: -14.00400161743164

Token 75: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0023198684211820364
    2. '   ' → logprob: -6.252319812774658
    3. 'line' → logprob: -8.627320289611816
    4. ' return' → logprob: -8.752320289611816
    5. 'try' → logprob: -10.127320289611816
    6. 'r' → logprob: -12.377320289611816
    7. 'raw' → logprob: -12.627320289611816
    8. 'ret' → logprob: -12.752320289611816
    9. 's' → logprob: -14.252320289611816
    10. 'import' → logprob: -14.377320289611816

Token 76: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07889650017023087
    2. 'sys' → logprob: -2.5788965225219727
    3. '(sys' → logprob: -13.078896522521973
    4. 'input' → logprob: -13.328896522521973
    5. '	sys' → logprob: -13.703896522521973
    6. ' input' → logprob: -13.953896522521973
    7. '=sys' → logprob: -14.203896522521973
    8. ' ' → logprob: -15.203896522521973
    9. ' ' → logprob: -16.328895568847656
    10. '   ' → logprob: -17.328895568847656

Token 77: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.6360820531845093
    2. '.' → logprob: -0.7610820531845093
    3. '.readline' → logprob: -5.761082172393799
    4. '.stdout' → logprob: -9.51108169555664
    5. '.argv' → logprob: -9.51108169555664
    6. '().' → logprob: -9.88608169555664
    7. '.__' → logprob: -10.51108169555664
    8. '.​' → logprob: -11.26108169555664
    9. ' .' → logprob: -11.51108169555664
    10. 'stdin' → logprob: -11.51108169555664

Token 78: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005593468667939305
    2. '.' → logprob: -7.500559329986572
    3. '.read' → logprob: -12.25055980682373
    4. '().' → logprob: -13.62555980682373
    5. 'read' → logprob: -15.37555980682373
    6. ' readline' → logprob: -16.000558853149414
    7. '.readlines' → logprob: -16.500558853149414
    8. '.stdin' → logprob: -16.875558853149414
    9. '.re' → logprob: -17.500558853149414
    10. '.Read' → logprob: -18.250558853149414

Token 79: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.16026028990745544
    2. '()' → logprob: -1.9102603197097778
    3. '(' → logprob: -10.285260200500488
    4. ' ().' → logprob: -14.785260200500488
    5. ' ()' → logprob: -15.035260200500488
    6. '()[' → logprob: -15.410260200500488
    7. '()?.' → logprob: -15.660260200500488
    8. '()
' → logprob: -16.035261154174805
    9. '()\' → logprob: -16.160261154174805
    10. '().__' → logprob: -16.410261154174805

Token 80: '[:-' (ID: 63556)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.029965106397867203
    2. '()' → logprob: -3.5299651622772217
    3. '(' → logprob: -8.5299654006958
    4. '.rstrip' → logprob: -11.7799654006958
    5. '[:-' → logprob: -11.9049654006958
    6. 'rstrip' → logprob: -13.9049654006958
    7. '.' → logprob: -14.6549654006958
    8. '.strip' → logprob: -14.6549654006958
    9. '()
' → logprob: -15.1549654006958
    10. ' ().' → logprob: -15.2799654006958

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '\n' → logprob: -16.375
    4. '   ' → logprob: -17.75
    5. '\' → logprob: -17.875
    6. '```' → logprob: -17.875
    7. '
' → logprob: -18.75
    8. '"\' → logprob: -19.5
    9. '  ' → logprob: -19.625
    10. '１' → logprob: -19.75

Token 82: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020342117932159454
    2. ']' → logprob: -8.625203132629395
    3. ')
' → logprob: -11.500203132629395
    4. '<|end|>' → logprob: -11.500203132629395
    5. '）' → logprob: -13.875203132629395
    6. ' )' → logprob: -14.000203132629395
    7. '}' → logprob: -14.750203132629395
    8. ')]' → logprob: -15.500203132629395
    9. '')' → logprob: -15.625203132629395
    10. ')

' → logprob: -15.625203132629395

Token 83: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.017869472503662
    2. 'def' → logprob: -1.017869472503662
    3. '#' → logprob: -2.267869472503662
    4. 'd' → logprob: -2.267869472503662
    5. '

' → logprob: -2.767869472503662
    6. '\' → logprob: -6.517869472503662
    7. '' → logprob: -6.642869472503662
    8. 'n' → logprob: -7.017869472503662
    9. 'class' → logprob: -7.142869472503662
    10. '\n' → logprob: -7.767869472503662

Token 84: ' r' (ID: 428)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6152655482292175
    2. ' main' → logprob: -1.2402656078338623
    3. ' _' → logprob: -2.1152656078338623
    4. ' ' → logprob: -3.7402656078338623
    5. ' solve' → logprob: -4.490265369415283
    6. ' factorial' → logprob: -6.115265369415283
    7. ' space' → logprob: -6.365265369415283
    8. ' max' → logprob: -6.865265369415283
    9. ' add' → logprob: -6.990265369415283
    10. ' input' → logprob: -7.240265369415283

Token 85: 'uis' (ID: 4560)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4271017909049988
    2. 'ead' → logprob: -1.6771018505096436
    3. 'andom' → logprob: -2.8021018505096436
    4. 'ef' → logprob: -3.0521018505096436
    5. 'ange' → logprob: -3.9271018505096436
    6. 'a' → logprob: -4.4271016120910645
    7. 'e' → logprob: -4.5521016120910645
    8. 'an' → logprob: -5.5521016120910645
    9. 'ec' → logprob: -6.5521016120910645
    10. 'aw' → logprob: -6.9271016120910645

Token 86: 'eki' (ID: 30639)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8039684891700745
    2. 'e' → logprob: -1.5539684295654297
    3. 'h' → logprob: -2.5539684295654297
    4. 'a' → logprob: -2.5539684295654297
    5. '```' → logprob: -2.5539684295654297
    6. 'k' → logprob: -2.6789684295654297
    7. 'uke' → logprob: -4.42896842956543
    8. '``' → logprob: -5.05396842956543
    9. 'uku' → logprob: -5.42896842956543
    10. 'eki' → logprob: -5.92896842956543

Token 87: '(lst' (ID: 95688)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wa' → logprob: -0.24511286616325378
    2. 'w' → logprob: -1.9951128959655762
    3. 'wai' → logprob: -3.495112895965576
    4. 'g' → logprob: -4.245112895965576
    5. 'wari' → logprob: -4.370112895965576
    6. 'war' → logprob: -4.495112895965576
    7. '()' → logprob: -6.495112895965576
    8. 'wan' → logprob: -6.495112895965576
    9. 'waka' → logprob: -6.495112895965576
    10. '_w' → logprob: -6.620112895965576

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033179267775267363
    2. ')' → logprob: -6.128317832946777
    3. ' ):' → logprob: -6.878317832946777
    4. '):
' → logprob: -10.628317832946777
    5. ')=' → logprob: -11.253317832946777
    6. ')：' → logprob: -11.378317832946777
    7. ':' → logprob: -11.753317832946777
    8. '=' → logprob: -12.003317832946777
    9. '_' → logprob: -12.003317832946777
    10. '   ' → logprob: -12.503317832946777

Token 89: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09965932369232178
    2. '   ' → logprob: -2.8496594429016113
    3. '=' → logprob: -4.099659442901611
    4. ' =' → logprob: -4.224659442901611
    5. ',' → logprob: -6.474659442901611
    6. '=[]' → logprob: -6.849659442901611
    7. ':
' → logprob: -6.974659442901611
    8. '[' → logprob: -7.474659442901611
    9. '[:]' → logprob: -7.849659442901611
    10. '):' → logprob: -7.974659442901611

Token 90: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31987491250038147
    2. ' return' → logprob: -1.819874882698059
    3. ' acc' → logprob: -3.1948750019073486
    4. ' res' → logprob: -4.0698747634887695
    5. 'acc' → logprob: -4.1948747634887695
    6. ' result' → logprob: -4.9448747634887695
    7. ' ' → logprob: -4.9448747634887695
    8. 'return' → logprob: -5.3198747634887695
    9. ' r' → logprob: -5.5698747634887695
    10. '    ' → logprob: -5.8198747634887695

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2912631034851074
    2. '"""
' → logprob: -2.0412631034851074
    3. '"""' → logprob: -2.6662631034851074
    4. ' """
' → logprob: -4.291263103485107
    5. ' """' → logprob: -4.416263103485107
    6. '"' → logprob: -5.166263103485107
    7. '#' → logprob: -5.791263103485107
    8. 'n' → logprob: -6.291263103485107
    9. 'Returns' → logprob: -6.291263103485107
    10. 'r' → logprob: -6.291263103485107

Token 92: ' Computes' (ID: 165922)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.1704398393630981
    2. '   ' → logprob: -2.0454397201538086
    3. 'result' → logprob: -2.1704397201538086
    4. ' """' → logprob: -2.6704397201538086
    5. ' result' → logprob: -2.6704397201538086
    6. '"""' → logprob: -2.9204397201538086
    7. '"""
' → logprob: -2.9204397201538086
    8. 'res' → logprob: -3.1704397201538086
    9. ' return' → logprob: -3.7954397201538086
    10. ' """
' → logprob: -3.9204397201538086

Token 93: ' the' (ID: 290)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07376784086227417
    2. ' [' → logprob: -2.698767900466919
    3. 'acc' → logprob: -6.82376766204834
    4. ' ' → logprob: -7.44876766204834
    5. ' the' → logprob: -8.07376766204834
    6. '[]' → logprob: -8.19876766204834
    7. '_acc' → logprob: -8.32376766204834
    8. ' a' → logprob: -8.57376766204834
    9. '   ' → logprob: -9.07376766204834
    10. '_' → logprob: -9.19876766204834

Token 94: ' prefix' (ID: 18633)
  Prédit: ' cumulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cumulative' → logprob: -1.0822945833206177
    2. 'acc' → logprob: -1.3322945833206177
    3. ' accumulated' → logprob: -1.5822945833206177
    4. 'c' → logprob: -1.8322945833206177
    5. ' list' → logprob: -4.832294464111328
    6. '累' → logprob: -4.957294464111328
    7. ' prefix' → logprob: -5.207294464111328
    8. 'prefix' → logprob: -5.707294464111328
    9. 'list' → logprob: -6.082294464111328
    10. ' running' → logprob: -6.332294464111328

Token 95: ' sum' (ID: 4215)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.6614062786102295
    2. '_sum' → logprob: -1.1614062786102295
    3. '_' → logprob: -1.7864062786102295
    4. 'sum' → logprob: -6.036406517028809
    5. 's' → logprob: -8.161406517028809
    6. ' ' → logprob: -8.411406517028809
    7. ' sum' → logprob: -9.036406517028809
    8. ' _' → logprob: -9.036406517028809
    9. ' sums' → logprob: -9.786406517028809
    10. '_array' → logprob: -10.536406517028809

Token 96: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14710669219493866
    2. '_' → logprob: -2.897106647491455
    3. '(' → logprob: -3.147106647491455
    4. '_list' → logprob: -4.522106647491455
    5. '(lst' → logprob: -4.522106647491455
    6. '_array' → logprob: -5.647106647491455
    7. '   ' → logprob: -6.022106647491455
    8. ' (' → logprob: -6.147106647491455
    9. '_lst' → logprob: -6.397106647491455
    10. '(s' → logprob: -6.647106647491455

Token 97: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1268748641014099
    2. 's' → logprob: -3.5018749237060547
    3. '   ' → logprob: -3.8768749237060547
    4. ' of' → logprob: -3.8768749237060547
    5. 'lst' → logprob: -3.8768749237060547
    6. ' )' → logprob: -4.501874923706055
    7. '):' → logprob: -5.251874923706055
    8. ' lst' → logprob: -6.001874923706055
    9. '[' → logprob: -6.501874923706055
    10. 'acc' → logprob: -6.751874923706055

Token 98: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -0.13867850601673126
    2. 'umsum' → logprob: -2.763678550720215
    3. 'um' → logprob: -3.013678550720215
    4. '   ' → logprob: -5.263678550720215
    5. 'om' → logprob: -6.138678550720215
    6. 'umulate' → logprob: -6.388678550720215
    7. 'umulator' → logprob: -6.388678550720215
    8. 'u' → logprob: -6.888678550720215
    9. '```' → logprob: -6.888678550720215
    10. 'umul' → logprob: -7.263678550720215

Token 99: ' sum' (ID: 4215)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.782048761844635
    2. ' sums' → logprob: -1.2820487022399902
    3. ' sum' → logprob: -1.7820487022399902
    4. 'sum' → logprob: -2.4070487022399902
    5. ' of' → logprob: -6.28204870223999
    6. ' ' → logprob: -6.28204870223999
    7. '_sum' → logprob: -7.03204870223999
    8. '_s' → logprob: -7.65704870223999
    9. ' list' → logprob: -7.90704870223999
    10. ')' → logprob: -8.032049179077148

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2214829921722412
    2. '_' → logprob: -2.221482992172241
    3. ' of' → logprob: -2.846482992172241
    4. 's' → logprob: -4.59648323059082
    5. '(' → logprob: -4.59648323059082
    6. '   ' → logprob: -5.09648323059082
    7. '[' → logprob: -6.22148323059082
    8. '_list' → logprob: -7.09648323059082
    9. '[]' → logprob: -7.72148323059082
    10. ' ' → logprob: -7.72148323059082

Token 101: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4052896499633789
    2. ' of' → logprob: -1.780289649963379
    3. '_' → logprob: -2.655289649963379
    4. '(' → logprob: -3.155289649963379
    5. '(lst' → logprob: -3.780289649963379
    6. ' ' → logprob: -5.030289649963379
    7. ')' → logprob: -5.780289649963379
    8. '  ' → logprob: -5.905289649963379
    9. '_list' → logprob: -5.905289649963379
    10. ':' → logprob: -6.280289649963379

Token 102: ' a' (ID: 261)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.5453650951385498
    2. ' lst' → logprob: -0.9203650951385498
    3. ' the' → logprob: -4.045365333557129
    4. 'the' → logprob: -5.670365333557129
    5. '[' → logprob: -7.670365333557129
    6. ' [' → logprob: -8.545365333557129
    7. ' a' → logprob: -8.545365333557129
    8. 'list' → logprob: -10.295365333557129
    9. '(lst' → logprob: -10.295365333557129
    10. 'a' → logprob: -10.545365333557129

Token 103: ' list' (ID: 1562)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.109754778444767
    2. 'list' → logprob: -2.734754800796509
    3. ' list' → logprob: -3.609754800796509
    4. ' lst' → logprob: -4.48475456237793
    5. '[' → logprob: -8.10975456237793
    6. ' [' → logprob: -9.48475456237793
    7. '_lst' → logprob: -9.60975456237793
    8. ' given' → logprob: -9.85975456237793
    9. '[]' → logprob: -10.48475456237793
    10. '_list' → logprob: -10.48475456237793

Token 104: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.701629102230072
    2. '(lst' → logprob: -0.701629102230072
    3. '   ' → logprob: -5.576629161834717
    4. ':' → logprob: -6.701629161834717
    5. ',' → logprob: -7.451629161834717
    6. '_lst' → logprob: -8.076628684997559
    7. '(list' → logprob: -8.076628684997559
    8. '_' → logprob: -8.326628684997559
    9. '(ls' → logprob: -8.576628684997559
    10. '(
' → logprob: -8.576628684997559

Token 105: ' returning' (ID: 22968)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005662121810019016
    2. ' lst' → logprob: -5.880661964416504
    3. '    ' → logprob: -6.630661964416504
    4. ' return' → logprob: -7.630661964416504
    5. '  ' → logprob: -8.755661964416504
    6. ' ' → logprob: -9.005661964416504
    7. ' result' → logprob: -9.255661964416504
    8. '    
' → logprob: -9.255661964416504
    9. ' []' → logprob: -9.630661964416504
    10. 'lst' → logprob: -9.755661964416504

Token 106: ' a' (ID: 261)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10022154450416565
    2. ' [' → logprob: -2.350221633911133
    3. ' a' → logprob: -11.850221633911133
    4. ' ' → logprob: -13.100221633911133
    5. '   ' → logprob: -13.600221633911133
    6. '[len' → logprob: -13.725221633911133
    7. ' the' → logprob: -14.725221633911133
    8. 's' → logprob: -14.725221633911133
    9. 'a' → logprob: -15.225221633911133
    10. '[list' → logprob: -15.350221633911133

Token 107: ' new' (ID: 620)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06655319035053253
    2. ' [' → logprob: -2.8165531158447266
    3. ' new' → logprob: -6.066553115844727
    4. 'new' → logprob: -7.066553115844727
    5. '[new' → logprob: -7.066553115844727
    6. '[n' → logprob: -8.316553115844727
    7. ' ' → logprob: -8.941553115844727
    8. '[len' → logprob: -10.316553115844727
    9. '   ' → logprob: -10.316553115844727
    10. '[list' → logprob: -10.441553115844727

Token 108: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22699639201164246
    2. ' [' → logprob: -1.6019964218139648
    3. ' ' → logprob: -7.226996421813965
    4. '[]' → logprob: -8.101996421813965
    5. '<|end|>' → logprob: -8.476996421813965
    6. ' []' → logprob: -9.476996421813965
    7. '[
' → logprob: -9.601996421813965
    8. '_' → logprob: -10.226996421813965
    9. ' [
' → logprob: -10.601996421813965
    10. '[len' → logprob: -10.601996421813965

Token 109: ' that' (ID: 484)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6036598682403564
    2. '([' → logprob: -1.4786598682403564
    3. '   ' → logprob: -1.8536598682403564
    4. '[' → logprob: -3.3536598682403564
    5. '_' → logprob: -5.228659629821777
    6. ',' → logprob: -5.353659629821777
    7. '([]' → logprob: -5.478659629821777
    8. '(
' → logprob: -5.478659629821777
    9. '(lst' → logprob: -5.728659629821777
    10. ')' → logprob: -6.353659629821777

Token 110: ' prep' (ID: 40049)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.6431738138198853
    2. ' contains' → logprob: -1.0181738138198853
    3. '[' → logprob: -3.2681736946105957
    4. ' starts' → logprob: -3.3931736946105957
    5. '   ' → logprob: -4.143173694610596
    6. ' is' → logprob: -4.643173694610596
    7. 'contains' → logprob: -5.143173694610596
    8. 'has' → logprob: -5.643173694610596
    9. ' [' → logprob: -6.018173694610596
    10. 'starts' → logprob: -7.143173694610596

Token 111: 'ends' (ID: 1847)
  Prédit: 'ends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.0008865646668709815
    2. 'nds' → logprob: -7.1258864402771
    3. '```' → logprob: -10.250886917114258
    4. '   ' → logprob: -10.375886917114258
    5. ' ends' → logprob: -12.500886917114258
    6. 'ands' → logprob: -12.625886917114258
    7. '[' → logprob: -13.125886917114258
    8. 'ents' → logprob: -13.500886917114258
    9. '`' → logprob: -14.250886917114258
    10. 'ended' → logprob: -14.750886917114258

Token 112: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005990233621560037
    2. ' [' → logprob: -7.500598907470703
    3. '0' → logprob: -10.000598907470703
    4. ' a' → logprob: -15.500598907470703
    5. '   ' → logprob: -16.500598907470703
    6. 'a' → logprob: -16.875598907470703
    7. ' ' → logprob: -17.125598907470703
    8. '([' → logprob: -17.250598907470703
    9. '[a' → logprob: -18.000598907470703
    10. '`' → logprob: -18.000598907470703

Token 113: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.995397365652025e-05
    2. '0' → logprob: -9.375089645385742
    3. ' [' → logprob: -12.750089645385742
    4. 'a' → logprob: -13.125089645385742
    5. '`' → logprob: -16.500089645385742
    6. '```' → logprob: -16.750089645385742
    7. '   ' → logprob: -17.375089645385742
    8. '([' → logprob: -17.500089645385742
    9. ' ' → logprob: -17.625089645385742
    10. '
' → logprob: -17.750089645385742

Token 114: '.

' (ID: 364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039070818573236465
    2. '[' → logprob: -4.0390706062316895
    3. '   ' → logprob: -4.2890706062316895
    4. '<|end|>' → logprob: -5.9140706062316895
    5. ')' → logprob: -7.2890706062316895
    6. ']' → logprob: -7.2890706062316895
    7. ' ' → logprob: -7.4140706062316895
    8. '[]' → logprob: -8.039071083068848
    9. ' and' → logprob: -8.164071083068848
    10. ' with' → logprob: -8.414071083068848

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010813994333148003
    2. '[' → logprob: -5.635814189910889
    3. '
' → logprob: -5.760814189910889
    4. ' ' → logprob: -6.760814189910889
    5. '    
' → logprob: -6.760814189910889
    6. '  
' → logprob: -7.385814189910889
    7. ']' → logprob: -8.63581371307373
    8. '  ' → logprob: -8.88581371307373
    9. '```' → logprob: -9.01081371307373
    10. ')' → logprob: -9.26081371307373

Token 116: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05566691607236862
    2. '
' → logprob: -3.055666923522949
    3. '    
' → logprob: -5.430666923522949
    4. '  
' → logprob: -7.430666923522949
    5. ' 
' → logprob: -7.430666923522949
    6. 'result' → logprob: -7.930666923522949
    7. ' result' → logprob: -8.30566692352295
    8. 'n' → logprob: -8.68066692352295
    9. '   
' → logprob: -8.93066692352295
    10. '```' → logprob: -8.93066692352295

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5841106176376343
    2. '):' → logprob: -1.3341106176376343
    3. ',' → logprob: -1.8341106176376343
    4. '   ' → logprob: -4.834110736846924
    5. ')' → logprob: -4.959110736846924
    6. ':list' → logprob: -7.209110736846924
    7. '<|end|>' → logprob: -7.459110736846924
    8. '):
' → logprob: -7.459110736846924
    9. '(lst' → logprob: -7.834110736846924
    10. '[' → logprob: -8.084110260009766

Token 118: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003000696888193488
    2. ' lst' → logprob: -8.375300407409668
    3. '    ' → logprob: -10.500300407409668
    4. '  ' → logprob: -11.500300407409668
    5. 'lst' → logprob: -11.750300407409668
    6. ' ' → logprob: -12.000300407409668
    7. '       ' → logprob: -12.000300407409668
    8. ' list' → logprob: -12.500300407409668
    9. '    
' → logprob: -13.000300407409668
    10. ')' → logprob: -13.375300407409668

Token 119: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' (adapté à ' lst') → logprob: -0.043552059680223465
    2. ' lst' → logprob: -3.1685521602630615
    3. '   ' → logprob: -7.543551921844482
    4. 'list' → logprob: -11.66855239868164
    5. 'l' → logprob: -11.91855239868164
    6. 'arr' → logprob: -13.54355239868164
    7. 'self' → logprob: -13.79355239868164
    8. '(lst' → logprob: -14.04355239868164
    9. ' ' → logprob: -14.29355239868164
    10. '```' → logprob: -14.29355239868164

Token 120: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013059170916676521
    2. ':' → logprob: -4.388059139251709
    3. '):
' → logprob: -8.888059616088867
    4. ':list' → logprob: -9.013059616088867
    5. ' ):' → logprob: -9.388059616088867
    6. ',' → logprob: -9.638059616088867
    7. ')' → logprob: -10.388059616088867
    8. '   ' → logprob: -10.763059616088867
    9. ' :' → logprob: -11.013059616088867
    10. '[]):' → logprob: -11.263059616088867

Token 121: 'list' (ID: 2641)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6555789113044739
    2. ')' → logprob: -1.030578851699829
    3. 'list' → logprob: -2.405578851699829
    4. '):
' → logprob: -4.405579090118408
    5. '   ' → logprob: -4.905579090118408
    6. '[]):' → logprob: -5.530579090118408
    7. 'List' → logprob: -6.155579090118408
    8. ' list' → logprob: -6.530579090118408
    9. ':list' → logprob: -6.530579090118408
    10. '<|end|>' → logprob: -6.655579090118408

Token 122: ' of' (ID: 328)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004182752221822739
    2. ')' → logprob: -5.629182815551758
    3. '):
' → logprob: -8.254182815551758
    4. '[int' → logprob: -8.879182815551758
    5. ' ):' → logprob: -9.879182815551758
    6. '   ' → logprob: -10.129182815551758
    7. ']):' → logprob: -11.129182815551758
    8. ':' → logprob: -11.379182815551758
    9. '[]):' → logprob: -11.379182815551758
    10. '）：' → logprob: -11.629182815551758

Token 123: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0034775976091623306
    2. ' int' → logprob: -5.753477573394775
    3. 'numbers' → logprob: -8.253478050231934
    4. '[int' → logprob: -11.253478050231934
    5. 'numeric' → logprob: -11.503478050231934
    6. ' numbers' → logprob: -11.628478050231934
    7. ')' → logprob: -12.753478050231934
    8. 'ints' → logprob: -13.753478050231934
    9. '(int' → logprob: -14.128478050231934
    10. ':int' → logprob: -14.503478050231934

Token 124: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02419811673462391
    2. ')' → logprob: -3.774198055267334
    3. '):
' → logprob: -7.399198055267334
    4. '[int' → logprob: -8.524198532104492
    5. ' ):' → logprob: -9.399198532104492
    6. ' ' → logprob: -10.649198532104492
    7. '):

' → logprob: -12.024198532104492
    8. 'int' → logprob: -12.024198532104492
    9. '):
' → logprob: -12.524198532104492
    10. '   ' → logprob: -12.774198532104492

Token 125: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1558922827243805
    2. '<|end|>' → logprob: -2.0308923721313477
    3. ')' → logprob: -5.155892372131348
    4. '    ' → logprob: -6.030892372131348
    5. '<|end|>' → logprob: -7.030892372131348
    6. ' ' → logprob: -7.155892372131348
    7. ' The' → logprob: -7.155892372131348
    8. '       ' → logprob: -7.780892372131348
    9. ' 
' → logprob: -7.780892372131348
    10. '    
' → logprob: -7.905892372131348

Token 126: ' input' (ID: 3422)
  Prédit: ' cumulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cumulative' → logprob: -0.8205727338790894
    2. ' input' → logprob: -1.3205727338790894
    3. ' list' → logprob: -1.8205727338790894
    4. ' numbers' → logprob: -3.070572853088379
    5. 'input' → logprob: -3.820572853088379
    6. ' integers' → logprob: -4.945572853088379
    7. ' prefix' → logprob: -5.070572853088379
    8. ' accumulated' → logprob: -5.195572853088379
    9. 'numbers' → logprob: -5.320572853088379
    10. ' sequence' → logprob: -5.570572853088379

Token 127: ' list' (ID: 1562)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.8270663619041443
    2. ' integers' → logprob: -1.327066421508789
    3. ')' → logprob: -2.452066421508789
    4. '   ' → logprob: -2.577066421508789
    5. ' list' → logprob: -3.577066421508789
    6. ' numbers' → logprob: -3.702066421508789
    7. ' elements' → logprob: -3.952066421508789
    8. '[int' → logprob: -4.077066421508789
    9. '<|end|>' → logprob: -4.827066421508789
    10. ' ' → logprob: -4.952066421508789

Token 128: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1167044639587402
    2. '   ' → logprob: -1.1167044639587402
    3. '):' → logprob: -1.1167044639587402
    4. '):
' → logprob: -4.11670446395874
    5. ':' → logprob: -7.49170446395874
    6. '
' → logprob: -7.86670446395874
    7. '):

' → logprob: -9.241704940795898
    8. ' of' → logprob: -9.366704940795898
    9. '    
' → logprob: -9.616704940795898
    10. ' )' → logprob: -9.741704940795898

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06816946715116501
    2. '    
' → logprob: -3.318169355392456
    3. '
' → logprob: -3.943169355392456
    4. ')' → logprob: -4.943169593811035
    5. '  
' → logprob: -7.068169593811035
    6. '"""
' → logprob: -7.318169593811035
    7. ')
' → logprob: -7.818169593811035
    8. ' 
' → logprob: -7.943169593811035
    9. '   
' → logprob: -8.318169593811035
    10. '```' → logprob: -8.318169593811035

Token 130: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.288485050201416
    2. 'Returns' (adapté à ' Returns') → logprob: -1.663485050201416
    3. '"""
' → logprob: -3.788485050201416
    4. ' Returns' → logprob: -3.788485050201416
    5. '
' → logprob: -5.163485050201416
    6. 'returns' → logprob: -5.538485050201416
    7. ' """
' → logprob: -6.038485050201416
    8. '"""' → logprob: -6.913485050201416
    9. 'result' → logprob: -7.538485050201416
    10. ' returns' → logprob: -7.913485050201416

Token 131: ':
' (ID: 734)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.043823424726724625
    2. '[' → logprob: -3.168823480606079
    3. ' ' → logprob: -7.4188232421875
    4. ')' → logprob: -9.0438232421875
    5. '<|end|>' → logprob: -10.2938232421875
    6. ' [
' → logprob: -11.4188232421875
    7. ':' → logprob: -11.4188232421875
    8. '[]' → logprob: -11.7938232421875
    9. '[List' → logprob: -12.0438232421875
    10. '[:]' → logprob: -12.4188232421875

Token 132: '       ' (ID: 309)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3755127787590027
    2. '   ' → logprob: -1.2505128383636475
    3. ' list' → logprob: -4.375512599945068
    4. '[' → logprob: -4.375512599945068
    5. '    ' → logprob: -7.375512599945068
    6. '[List' → logprob: -8.000513076782227
    7. '[list' → logprob: -8.500513076782227
    8. '       ' → logprob: -9.250513076782227
    9. 'list' → logprob: -9.625513076782227
    10. ' ' → logprob: -10.000513076782227

Token 133: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -4.036524842376821e-05
    2. ' list' → logprob: -10.250040054321289
    3. 'List' → logprob: -12.250040054321289
    4. '[list' → logprob: -16.87504005432129
    5. 'lst' → logprob: -17.00004005432129
    6. '   ' → logprob: -17.87504005432129
    7. '(list' → logprob: -18.00004005432129
    8. '_list' → logprob: -19.37504005432129
    9. 'int' → logprob: -20.12504005432129
    10. '```' → logprob: -20.25004005432129

Token 134: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.03404213488101959
    2. ' of' → logprob: -3.5340421199798584
    3. '(int' → logprob: -6.2840423583984375
    4. '<|end|>' → logprob: -6.4090423583984375
    5. '<int' → logprob: -8.659042358398438
    6. '[' → logprob: -8.784042358398438
    7. '<|end|>' → logprob: -9.409042358398438
    8. 'int' → logprob: -9.659042358398438
    9. ':' → logprob: -9.784042358398438
    10. 'of' → logprob: -9.784042358398438

Token 135: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004620949272066355
    2. ' int' → logprob: -5.3796210289001465
    3. '[int' → logprob: -14.754620552062988
    4. '(int' → logprob: -16.129621505737305
    5. '<int' → logprob: -16.379621505737305
    6. ' ' → logprob: -16.504621505737305
    7. '	int' → logprob: -16.879621505737305
    8. 'ints' → logprob: -17.129621505737305
    9. ':int' → logprob: -17.129621505737305
    10. '```' → logprob: -17.754621505737305

Token 136: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08152767270803452
    2. '):' → logprob: -2.8315277099609375
    3. '<|end|>' → logprob: -4.9565277099609375
    4. '   ' → logprob: -5.5815277099609375
    5. ']:' → logprob: -5.9565277099609375
    6. ')' → logprob: -6.3315277099609375
    7. '):
' → logprob: -6.4565277099609375
    8. ':
' → logprob: -6.7065277099609375
    9. '<|end|>' → logprob: -7.8315277099609375
    10. ' :' → logprob: -8.456527709960938

Token 137: ' The' (ID: 623)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.38758623600006104
    2. '[' → logprob: -1.137586236000061
    3. '   ' → logprob: -7.5125861167907715
    4. 'A' → logprob: -9.51258659362793
    5. ' A' → logprob: -10.63758659362793
    6. ' The' → logprob: -10.76258659362793
    7. ' ' → logprob: -10.88758659362793
    8. 'The' → logprob: -11.01258659362793
    9. '
' → logprob: -13.01258659362793
    10. '([' → logprob: -13.13758659362793

Token 138: ' prefix' (ID: 18633)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10571702569723129
    2. ' [' → logprob: -2.6057169437408447
    3. ' prefix' → logprob: -4.105717182159424
    4. ' cumulative' → logprob: -5.105717182159424
    5. 'prefix' → logprob: -5.980717182159424
    6. ' new' → logprob: -7.980717182159424
    7. 'c' → logprob: -8.230716705322266
    8. ' accumulated' → logprob: -8.230716705322266
    9. ' list' → logprob: -8.355716705322266
    10. 'new' → logprob: -9.980716705322266

Token 139: ' sum' (ID: 4215)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3339170217514038
    2. '_' → logprob: -2.2089171409606934
    3. '_s' → logprob: -2.3339171409606934
    4. ' sum' → logprob: -2.9589171409606934
    5. 'sum' → logprob: -4.333917140960693
    6. ' _' → logprob: -4.708917140960693
    7. '   ' → logprob: -6.458917140960693
    8. ' sums' → logprob: -6.833917140960693
    9. ' ' → logprob: -8.833916664123535
    10. '[' → logprob: -9.208916664123535

Token 140: ' array' (ID: 2644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6958556175231934
    2. ' list' → logprob: -1.1958556175231934
    3. ' [' → logprob: -2.4458556175231934
    4. 's' → logprob: -3.4458556175231934
    5. '_list' → logprob: -3.6958556175231934
    6. ']' → logprob: -4.570855617523193
    7. '[]' → logprob: -4.820855617523193
    8. '_lst' → logprob: -5.320855617523193
    9. '(lst' → logprob: -5.570855617523193
    10. ' with' → logprob: -5.570855617523193

Token 141: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8860926032066345
    2. ',' → logprob: -1.1360926628112793
    3. '   ' → logprob: -1.7610926628112793
    4. ']' → logprob: -3.1360926628112793
    5. ')' → logprob: -4.511092662811279
    6. '<|end|>' → logprob: -4.761092662811279
    7. ':' → logprob: -4.886092662811279
    8. ' with' → logprob: -5.136092662811279
    9. ' [' → logprob: -5.761092662811279
    10. ',
' → logprob: -6.511092662811279

Token 142: ' starting' (ID: 8601)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5129349827766418
    2. ' [' → logprob: -1.512934923171997
    3. ' with' → logprob: -2.262934923171997
    4. ' where' → logprob: -3.262934923171997
    5. 'with' → logprob: -3.637934923171997
    6. ' starting' → logprob: -5.137935161590576
    7. '   ' → logprob: -5.887935161590576
    8. 'starting' → logprob: -6.887935161590576
    9. 'where' → logprob: -7.012935161590576
    10. '[start' → logprob: -7.387935161590576

Token 143: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.46879592537879944
    2. ' with' → logprob: -1.093795895576477
    3. '[' → logprob: -3.4687960147857666
    4. '   ' → logprob: -4.9687957763671875
    5. ' [' → logprob: -6.9687957763671875
    6. ' ' → logprob: -9.718795776367188
    7. ',' → logprob: -10.218795776367188
    8. '=[' → logprob: -10.343795776367188
    9. '	with' → logprob: -10.468795776367188
    10. '0' → logprob: -10.718795776367188

Token 144: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6939145922660828
    2. '[' → logprob: -0.6939145922660828
    3. ' [' → logprob: -7.318914413452148
    4. ' ' → logprob: -9.193914413452148
    5. '```' → logprob: -14.068914413452148
    6. '`' → logprob: -14.193914413452148
    7. '   ' → logprob: -15.443914413452148
    8. '[
' → logprob: -15.693914413452148
    9. ' ' → logprob: -16.06891441345215
    10. '\[' → logprob: -16.31891441345215

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012536730617284775
    2. '[' → logprob: -4.387536525726318
    3. ' [' → logprob: -11.012537002563477
    4. ' ' → logprob: -11.512537002563477
    5. '`' → logprob: -16.262537002563477
    6. '```' → logprob: -16.262537002563477
    7. '   ' → logprob: -16.512537002563477
    8. ',' → logprob: -16.762537002563477
    9. '[
' → logprob: -17.012537002563477
    10. '\[' → logprob: -18.012537002563477

Token 146: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08991082012653351
    2. ',' → logprob: -2.8399107456207275
    3. ' ]' → logprob: -3.9649107456207275
    4. '   ' → logprob: -5.089910984039307
    5. '[' → logprob: -7.339910984039307
    6. '.' → logprob: -7.714910984039307
    7. ',
' → logprob: -7.839910984039307
    8. '0' → logprob: -8.214910507202148
    9. ')' → logprob: -8.964910507202148
    10. ']
' → logprob: -9.339910507202148

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03256116434931755
    2. ']' → logprob: -3.9075610637664795
    3. ')' → logprob: -5.407561302185059
    4. '"""' → logprob: -6.032561302185059
    5. '
' → logprob: -6.157561302185059
    6. '    
' → logprob: -7.032561302185059
    7. '):' → logprob: -7.657561302185059
    8. ':' → logprob: -8.407561302185059
    9. '"""
' → logprob: -8.532561302185059
    10. '```' → logprob: -8.657561302185059

Token 148: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0723794475197792
    2. ')' → logprob: -3.0723793506622314
    3. '"""' → logprob: -4.4473795890808105
    4. ']' → logprob: -5.1973795890808105
    5. '"""
' (adapté à ' """
') → logprob: -6.1973795890808105
    6. '
' → logprob: -6.4473795890808105
    7. ')
' → logprob: -6.8223795890808105
    8. '):' → logprob: -7.9473795890808105
    9. '```' → logprob: -7.9473795890808105
    10. '    
' → logprob: -8.072379112243652

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025977328419685364
    2. ' res' → logprob: -4.27597713470459
    3. 'res' → logprob: -5.52597713470459
    4. ' result' → logprob: -6.15097713470459
    5. 'result' → logprob: -6.27597713470459
    6. 's' → logprob: -6.77597713470459
    7. ' s' → logprob: -7.40097713470459
    8. ' return' → logprob: -7.77597713470459
    9. 'return' → logprob: -8.27597713470459
    10. 'ret' → logprob: -8.52597713470459

Token 150: ' return' (ID: 622)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.36839815974235535
    2. 'result' → logprob: -2.3683981895446777
    3. '   ' → logprob: -2.4933981895446777
    4. 'acc' → logprob: -3.3683981895446777
    5. 'return' (adapté à ' return') → logprob: -3.4933981895446777
    6. 's' → logprob: -3.9933981895446777
    7. 'prefix' → logprob: -3.9933981895446777
    8. ' res' → logprob: -4.618398189544678
    9. 'ret' → logprob: -4.868398189544678
    10. 'cum' → logprob: -5.868398189544678

Token 151: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04880446195602417
    2. ' [' → logprob: -3.048804521560669
    3. '[list' → logprob: -8.67380428314209
    4. 'list' → logprob: -10.92380428314209
    5. ' list' → logprob: -11.04880428314209
    6. 'acc' → logprob: -12.04880428314209
    7. '[List' → logprob: -13.79880428314209
    8. '([' → logprob: -13.79880428314209
    9. '[it' → logprob: -13.92380428314209
    10. '[len' → logprob: -14.04880428314209

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.250003814697266
    3. 'lst' → logprob: -13.625003814697266
    4. '
' → logprob: -16.250003814697266
    5. '۰' → logprob: -16.687503814697266
    6. '```' → logprob: -17.187503814697266
    7. '０' → logprob: -17.500003814697266
    8. '   ' → logprob: -17.875003814697266
    9. ']' → logprob: -17.937503814697266
    10. '

' → logprob: -18.062503814697266

Token 153: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.061981018632650375
    2. ']+' → logprob: -2.811980962753296
    3. ']+=' → logprob: -11.811981201171875
    4. '+]' → logprob: -12.811981201171875
    5. '+' → logprob: -13.311981201171875
    6. ',' → logprob: -13.936981201171875
    7. ' ]' → logprob: -15.561981201171875
    8. ']+\' → logprob: -16.811981201171875
    9. '`]' → logprob: -16.936981201171875
    10. ']*(' → logprob: -16.936981201171875

Token 154: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005753128207288682
    2. '+[' → logprob: -7.750575542449951
    3. ' +' → logprob: -9.125575065612793
    4. ']+' → logprob: -10.500575065612793
    5. ']' → logprob: -12.875575065612793
    6. '+=' → logprob: -13.625575065612793
    7. '+]' → logprob: -14.125575065612793
    8. '+++' → logprob: -14.750575065612793
    9. '+c' → logprob: -14.750575065612793
    10. ']+=' → logprob: -15.000575065612793

Token 155: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0002479886752553284
    2. '[list' → logprob: -8.625247955322266
    3. ' list' → logprob: -9.750247955322266
    4. '[' → logprob: -11.625247955322266
    5. 'acc' → logprob: -13.875247955322266
    6. '(list' → logprob: -15.750247955322266
    7. ' [' → logprob: -16.875247955322266
    8. '	list' → logprob: -17.500247955322266
    9. 'lst' → logprob: -17.625247955322266
    10. '=list' → logprob: -17.625247955322266

Token 156: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.005946691147983074
    2. 'acc' → logprob: -5.130946636199951
    3. '	acc' → logprob: -11.75594711303711
    4. '.acc' → logprob: -12.75594711303711
    5. ' accumulate' → logprob: -12.88094711303711
    6. '(' → logprob: -13.13094711303711
    7. '(it' → logprob: -13.88094711303711
    8. '_acc' → logprob: -14.25594711303711
    9. ''acc' → logprob: -14.63094711303711
    10. 'it' → logprob: -15.50594711303711

Token 157: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -3.106736039626412e-05
    2. 'um' → logprob: -10.750031471252441
    3. 'ulate' → logprob: -11.875031471252441
    4. 'umul' → logprob: -14.000031471252441
    5. 'uminate' → logprob: -14.750031471252441
    6. 'ulum' → logprob: -15.375031471252441
    7. 'om' → logprob: -15.375031471252441
    8. 'umulative' → logprob: -15.750031471252441
    9. 'uml' → logprob: -16.250030517578125
    10. 'umu' → logprob: -16.250030517578125

Token 158: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.001507601235061884
    2. '(' → logprob: -6.501507759094238
    3. '(
' → logprob: -13.251507759094238
    4. 'lst' → logprob: -14.001507759094238
    5. '(ls' → logprob: -14.251507759094238
    6. ')' → logprob: -14.751507759094238
    7. '(l' → logprob: -15.001507759094238
    8. ')(' → logprob: -15.376507759094238
    9. '(lhs' → logprob: -15.876507759094238
    10. '(lista' → logprob: -15.876507759094238

Token 159: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04493110626935959
    2. ')]' → logprob: -3.669931173324585
    3. ')' → logprob: -4.669930934906006
    4. ')])' → logprob: -5.419930934906006
    5. '(lst' → logprob: -5.669930934906006
    6. '(' → logprob: -7.544930934906006
    7. ')))' → logprob: -8.419931411743164
    8. ')}' → logprob: -8.794931411743164
    9. '()))' → logprob: -9.419931411743164
    10. ' ))' → logprob: -9.544931411743164

Token 160: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7039178013801575
    2. '<|end|>' → logprob: -0.8289178013801575
    3. '
' → logprob: -2.8289177417755127
    4. '<|end|>' → logprob: -5.828917980194092
    5. '#' → logprob: -6.203917980194092
    6. '[' → logprob: -6.703917980194092
    7. '

' → logprob: -6.703917980194092
    8. '_' → logprob: -7.328917980194092
    9. ')' → logprob: -7.578917980194092
    10. '\' → logprob: -8.203917503356934

Token 161: ' c' (ID: 274)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.28577205538749695
    2. ' binary' → logprob: -2.6607720851898193
    3. 'main' → logprob: -2.7857720851898193
    4. ' solve' → logprob: -3.5357720851898193
    5. 'binary' → logprob: -4.28577184677124
    6. ' bis' → logprob: -4.53577184677124
    7. ' lower' → logprob: -5.28577184677124
    8. 'solve' → logprob: -5.41077184677124
    9. ' is' → logprob: -5.66077184677124
    10. 'lower' → logprob: -5.78577184677124

Token 162: 'eli' (ID: 6039)
  Prédit: 'omb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omb' → logprob: -0.024113181978464127
    2. 'ounter' → logprob: -4.774113178253174
    3. 'ombo' → logprob: -5.524113178253174
    4. 'ho' → logprob: -5.899113178253174
    5. 'om' → logprob: -6.149113178253174
    6. 'ount' → logprob: -6.399113178253174
    7. 'heap' → logprob: -7.274113178253174
    8. 'h' → logprob: -7.524113178253174
    9. 'mb' → logprob: -7.524113178253174
    10. 'umulative' → logprob: -7.774113178253174

Token 163: '(a' (ID: 6271)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.00013834332639817148
    2. 'nge' → logprob: -9.500138282775879
    3. 'n' → logprob: -9.875138282775879
    4. 'ngi' → logprob: -12.000138282775879
    5. 'nger' → logprob: -13.250138282775879
    6. 'ngr' → logprob: -13.500138282775879
    7. 'ngu' → logprob: -14.250138282775879
    8. 'ngx' → logprob: -14.500138282775879
    9. '_ng' → logprob: -15.250138282775879
    10. 'нг' → logprob: -15.250138282775879

Token 164: ',' (ID: 11)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.46458929777145386
    2. 'f' → logprob: -1.8395893573760986
    3. ')' → logprob: -2.7145893573760986
    4. 't' → logprob: -3.0895893573760986
    5. 'n' → logprob: -3.5895893573760986
    6. '):' → logprob: -3.8395893573760986
    7. 'te' → logprob: -4.7145891189575195
    8. 'div' → logprob: -5.0895891189575195
    9. 've' → logprob: -5.2145891189575195
    10. 'p' → logprob: -5.3395891189575195

Token 165: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804366663098335
    2. ' b' → logprob: -3.288043737411499
    3. ' ' → logprob: -14.038043975830078
    4. 'n' → logprob: -14.288043975830078
    5. ')b' → logprob: -15.288043975830078
    6. ')' → logprob: -15.413043975830078
    7. '   ' → logprob: -17.038043975830078
    8. ' n' → logprob: -17.038043975830078
    9. 'k' → logprob: -17.663043975830078
    10. 'l' → logprob: -17.788043975830078

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007641222910024226
    2. ')' → logprob: -7.250763893127441
    3. '):
' → logprob: -9.875763893127441
    4. ':' → logprob: -13.625763893127441
    5. ' ):' → logprob: -14.500763893127441
    6. '):
' → logprob: -14.625763893127441
    7. '):

' → logprob: -15.375763893127441
    8. ')：' → logprob: -15.500763893127441
    9. '():' → logprob: -16.750764846801758
    10. '=' → logprob: -17.375764846801758

Token 167: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20974427461624146
    2. '():' → logprob: -2.3347442150115967
    3. '   ' → logprob: -2.9597442150115967
    4. '):' → logprob: -3.5847442150115967
    5. '(a' → logprob: -5.459744453430176
    6. '(' → logprob: -6.209744453430176
    7. ':
' → logprob: -6.834744453430176
    8. ' :' → logprob: -7.084744453430176
    9. '():
' → logprob: -7.334744453430176
    10. '**' → logprob: -7.459744453430176

Token 168: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3876241445541382
    2. 'return' → logprob: -1.8876241445541382
    3. ' return' → logprob: -2.5126242637634277
    4. ':' → logprob: -3.2626242637634277
    5. '(a' → logprob: -4.637624263763428
    6. '(' → logprob: -4.762624263763428
    7. ' ' → logprob: -4.762624263763428
    8. ' (' → logprob: -5.262624263763428
    9. 'a' → logprob: -5.637624263763428
    10. ')' → logprob: -6.012624263763428

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.208145409822464
    2. ')' → logprob: -2.3331453800201416
    3. ' return' → logprob: -3.5831453800201416
    4. '(a' → logprob: -3.5831453800201416
    5. ' (' → logprob: -4.083145618438721
    6. '(' → logprob: -5.708145618438721
    7. 'a' → logprob: -5.833145618438721
    8. '/' → logprob: -5.958145618438721
    9. 'return' → logprob: -5.958145618438721
    10. ' )' → logprob: -6.833145618438721

Token 170: ' Performs' (ID: 118692)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4987725615501404
    2. '(a' → logprob: -1.3737726211547852
    3. ' return' → logprob: -2.123772621154785
    4. '   ' → logprob: -4.123772621154785
    5. ' (' → logprob: -6.498772621154785
    6. '(' → logprob: -7.373772621154785
    7. ')' → logprob: -7.998772621154785
    8. '(return' → logprob: -7.998772621154785
    9. '((' → logprob: -8.498772621154785
    10. ' ' → logprob: -8.748772621154785

Token 171: ' ceiling' (ID: 32727)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5094650387763977
    2. ' (' → logprob: -1.009464979171753
    3. ' -' → logprob: -3.759464979171753
    4. '-' → logprob: -4.509465217590332
    5. '-(' → logprob: -8.009465217590332
    6. ' ' → logprob: -10.009465217590332
    7. 'div' → logprob: -10.259465217590332
    8. ' -(' → logprob: -11.384465217590332
    9. '-a' → logprob: -12.009465217590332
    10. 'a' → logprob: -12.384465217590332

Token 172: ' division' (ID: 21629)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14905209839344025
    2. '_div' → logprob: -2.149052143096924
    3. '(a' → logprob: -4.649052143096924
    4. 'div' → logprob: -4.899052143096924
    5. ' division' → logprob: -5.524052143096924
    6. 'division' → logprob: -7.899052143096924
    7. '((' → logprob: -8.649051666259766
    8. '(
' → logprob: -8.899051666259766
    9. '-div' → logprob: -10.149051666259766
    10. 'Division' → logprob: -10.274051666259766

Token 173: ' between' (ID: 2870)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023358099162578583
    2. '(a' → logprob: -3.773358106613159
    3. '(
' → logprob: -9.523358345031738
    4. ' (' → logprob: -10.773358345031738
    5. '((' → logprob: -11.148358345031738
    6. 'a' → logprob: -13.148358345031738
    7. '   ' → logprob: -14.273358345031738
    8. '(div' → logprob: -15.023358345031738
    9. '(

' → logprob: -15.398358345031738
    10. 'div' → logprob: -15.648358345031738

Token 174: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00861468818038702
    2. ' a' → logprob: -4.758614540100098
    3. '(a' → logprob: -16.008615493774414
    4. '	a' → logprob: -16.883615493774414
    5. ' ' → logprob: -18.258615493774414
    6. '   ' → logprob: -18.383615493774414
    7. ' the' → logprob: -19.258615493774414
    8. ' two' → logprob: -19.508615493774414
    9. ' (' → logprob: -20.133615493774414
    10. '  ' → logprob: -20.258615493774414

Token 175: ' and' (ID: 326)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8440903425216675
    2. '(a' → logprob: -1.2190903425216675
    3. 'a' → logprob: -1.8440903425216675
    4. ' (' → logprob: -3.344090461730957
    5. '(' → logprob: -3.594090461730957
    6. ' ' → logprob: -3.719090461730957
    7. '   ' → logprob: -4.594090461730957
    8. ' and' → logprob: -5.094090461730957
    9. ' divided' → logprob: -5.844090461730957
    10. 'div' → logprob: -6.094090461730957

Token 176: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47407710552215576
    2. ' b' → logprob: -0.9740771055221558
    3. ' ' → logprob: -16.849077224731445
    4. '	b' → logprob: -17.724077224731445
    5. '*b' → logprob: -18.224077224731445
    6. ' б' → logprob: -19.724077224731445
    7. ')b' → logprob: -19.724077224731445
    8. '   ' → logprob: -20.349077224731445
    9. '>b' → logprob: -20.474077224731445
    10. '(b' → logprob: -20.849077224731445

Token 177: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.46139660477638245
    2. '(' → logprob: -1.08639657497406
    3. '):' → logprob: -3.9613966941833496
    4. ':' → logprob: -5.21139669418335
    5. '(
' → logprob: -5.71139669418335
    6. '   ' → logprob: -6.46139669418335
    7. ')' → logprob: -6.58639669418335
    8. ' (' → logprob: -6.83639669418335
    9. ',' → logprob: -9.461396217346191
    10. ' :' → logprob: -9.961396217346191

Token 178: ' equivalent' (ID: 23458)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7553057074546814
    2. ' return' → logprob: -0.7553057074546814
    3. 'return' → logprob: -3.130305767059326
    4. 'def' → logprob: -5.130305767059326
    5. '    ' → logprob: -5.380305767059326
    6. ' returning' → logprob: -6.130305767059326
    7. ' 
' → logprob: -7.005305767059326
    8. '  ' → logprob: -7.255305767059326
    9. ' ' → logprob: -7.755305767059326
    10. ' def' → logprob: -8.380305290222168

Token 179: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0029023548122495413
    2. 'to' → logprob: -7.627902507781982
    3. '(' → logprob: -7.752902507781982
    4. ' (' → logprob: -7.877902507781982
    5. '=' → logprob: -8.252902030944824
    6. '   ' → logprob: -8.377902030944824
    7. 'def' → logprob: -8.377902030944824
    8. ')' → logprob: -8.627902030944824
    9. '    ' → logprob: -8.752902030944824
    10. ' if' → logprob: -9.252902030944824

Token 180: ' math' (ID: 13324)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8614380955696106
    2. '(a' → logprob: -1.7364380359649658
    3. '-' → logprob: -1.8614380359649658
    4. '-(' → logprob: -1.9864380359649658
    5. ' -' → logprob: -2.236438035964966
    6. ' -(' → logprob: -6.611438274383545
    7. ' ' → logprob: -8.361437797546387
    8. '-a' → logprob: -9.361437797546387
    9. '((' → logprob: -10.111437797546387
    10. '   ' → logprob: -10.111437797546387

Token 181: '.ceil' (ID: 60295)
  Prédit: '.ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -0.0006457181880250573
    2. '.' → logprob: -7.750645637512207
    3. '.floor' → logprob: -9.125645637512207
    4. 'ceil' → logprob: -10.000645637512207
    5. '.div' → logprob: -11.625645637512207
    6. 'import' → logprob: -11.625645637512207
    7. '-' → logprob: -11.750645637512207
    8. '.inf' → logprob: -12.125645637512207
    9. '
' → logprob: -12.250645637512207
    10. '`' → logprob: -12.250645637512207

Token 182: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.22980070114135742
    2. '((' → logprob: -1.8548007011413574
    3. '(' → logprob: -3.6048007011413574
    4. 'div' → logprob: -4.104800701141357
    5. '_div' → logprob: -5.979800701141357
    6. '(-' → logprob: -6.979800701141357
    7. 'division' → logprob: -7.479800701141357
    8. ' division' → logprob: -8.104801177978516
    9. 'def' → logprob: -8.729801177978516
    10. '((-' → logprob: -8.729801177978516

Token 183: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.024662058800458908
    2. ' /' → logprob: -4.524662017822266
    3. '(' → logprob: -5.399662017822266
    4. '/b' → logprob: -5.649662017822266
    5. '/a' → logprob: -6.024662017822266
    6. '(a' → logprob: -6.524662017822266
    7. '/div' → logprob: -7.774662017822266
    8. 'a' → logprob: -8.024662017822266
    9. ')' → logprob: -8.399662017822266
    10. '/
' → logprob: -8.774662017822266

Token 184: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02975083328783512
    2. ' b' → logprob: -3.5297508239746094
    3. '(b' → logprob: -15.77975082397461
    4. '   ' → logprob: -15.90475082397461
    5. ' ' → logprob: -16.02975082397461
    6. ')b' → logprob: -17.02975082397461
    7. 'float' → logprob: -17.65475082397461
    8. ' (' → logprob: -18.40475082397461
    9. '(' → logprob: -18.52975082397461
    10. '  ' → logprob: -19.02975082397461

Token 185: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0600072517991066
    2. '):' → logprob: -3.060007333755493
    3. '):
' → logprob: -4.560007095336914
    4. ')
' → logprob: -7.810007095336914
    5. '   ' → logprob: -7.935007095336914
    6. ' )' → logprob: -9.810007095336914
    7. ').' → logprob: -11.060007095336914
    8. ',' → logprob: -11.435007095336914
    9. ' ):' → logprob: -11.560007095336914
    10. '):

' → logprob: -12.185007095336914

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0958685576915741
    2. ':' → logprob: -2.9708685874938965
    3. '):' → logprob: -3.8458685874938965
    4. ')' → logprob: -4.5958685874938965
    5. '):
' → logprob: -5.8458685874938965
    6. ':
' → logprob: -5.9708685874938965
    7. '    
' → logprob: -6.4708685874938965
    8. 'def' → logprob: -8.345868110656738
    9. ' return' → logprob: -8.470868110656738
    10. '
' → logprob: -8.470868110656738

Token 187: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060587815940380096
    2. ' return' → logprob: -3.0605878829956055
    3. ' 
' → logprob: -5.1855878829956055
    4. 'return' → logprob: -6.4355878829956055
    5. ':' → logprob: -6.8105878829956055
    6. ' ' → logprob: -6.9355878829956055
    7. '    
' → logprob: -7.1855878829956055
    8. '    ' → logprob: -7.8105878829956055
    9. '
' → logprob: -8.185587882995605
    10. '  
' → logprob: -8.435587882995605

Token 188: ':
' (ID: 734)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1775710582733154
    2. '(a' → logprob: -1.1775710582733154
    3. '   ' → logprob: -1.3025710582733154
    4. ':' → logprob: -3.5525710582733154
    5. '):
' → logprob: -3.6775710582733154
    6. '=' → logprob: -3.9275710582733154
    7. '(' → logprob: -4.4275712966918945
    8. ')' → logprob: -4.9275712966918945
    9. ',' → logprob: -5.1775712966918945
    10. ' (' → logprob: -5.3025712966918945

Token 189: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01754278503358364
    2. '(a' → logprob: -4.767542839050293
    3. 'a' → logprob: -5.642542839050293
    4. ':' → logprob: -6.392542839050293
    5. ' a' → logprob: -6.892542839050293
    6. ' :' → logprob: -7.017542839050293
    7. '    
' → logprob: -7.267542839050293
    8. ' (' → logprob: -8.267542839050293
    9. 'def' → logprob: -8.767542839050293
    10. '(' → logprob: -8.892542839050293

Token 190: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -2.45848218582978e-06
    2. ' a' → logprob: -13.12500286102295
    3. '   ' → logprob: -14.75000286102295
    4. '	a' → logprob: -20.875001907348633
    5. ' ' → logprob: -21.250001907348633
    6. '  ' → logprob: -21.250001907348633
    7. '    
' → logprob: -22.125001907348633
    8. '
' → logprob: -23.625001907348633
    9. '`' → logprob: -24.125001907348633
    10. '```' → logprob: -24.250001907348633

Token 191: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023705437779426575
    2. '<|end|>' → logprob: -4.52370548248291
    3. ' ,' → logprob: -5.39870548248291
    4. '   ' → logprob: -5.52370548248291
    5. ':' → logprob: -6.14870548248291
    6. '<|end|>' → logprob: -7.39870548248291
    7. ',
' → logprob: -7.89870548248291
    8. ')' → logprob: -7.89870548248291
    9. '=' → logprob: -8.89870548248291
    10. ' ' → logprob: -9.27370548248291

Token 192: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00025680975522845984
    2. ' int' → logprob: -8.750256538391113
    3. 'a' → logprob: -9.375256538391113
    4. '   ' → logprob: -12.000256538391113
    5. ':int' → logprob: -12.250256538391113
    6. '(int' → logprob: -13.750256538391113
    7. '[int' → logprob: -15.125256538391113
    8. 'b' → logprob: -15.375256538391113
    9. '<|end|>' → logprob: -15.750256538391113
    10. '<int' → logprob: -15.750256538391113

Token 193: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -9.066919301403686e-05
    2. ' ,' → logprob: -10.125090599060059
    3. ',b' → logprob: -10.250090599060059
    4. ',
' → logprob: -11.125090599060059
    5. '   ' → logprob: -15.750090599060059
    6. ',a' → logprob: -16.000091552734375
    7. ',

' → logprob: -16.750091552734375
    8. ',int' → logprob: -16.875091552734375
    9. ':' → logprob: -18.125091552734375
    10. ' ' → logprob: -18.500091552734375

Token 194: ' Numer' (ID: 60273)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007306627230718732
    2. ' int' → logprob: -7.500730514526367
    3. '   ' → logprob: -8.750730514526367
    4. '       ' → logprob: -11.000730514526367
    5. '(int' → logprob: -13.875730514526367
    6. '	int' → logprob: -14.875730514526367
    7. 'def' → logprob: -15.000730514526367
    8. '[int' → logprob: -15.375730514526367
    9. 'b' → logprob: -15.500730514526367
    10. ':int' → logprob: -15.750730514526367

Token 195: 'ator' (ID: 1246)
  Prédit: 'ator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -2.816093228830141e-06
    2. 'ater' → logprob: -13.62500286102295
    3. 'ATOR' → logprob: -15.12500286102295
    4. 'атор' → logprob: -15.50000286102295
    5. 'ateur' → logprob: -15.75000286102295
    6. 'a' → logprob: -15.87500286102295
    7. 'ato' → logprob: -16.250001907348633
    8. 'or' → logprob: -16.250001907348633
    9. 'tor' → logprob: -16.250001907348633
    10. 'artor' → logprob: -16.375001907348633

Token 196: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023653045296669006
    2. ',
' → logprob: -3.773653030395508
    3. ',b' → logprob: -8.273653030395508
    4. ')' → logprob: -9.523653030395508
    5. '   ' → logprob: -9.648653030395508
    6. ' ,' → logprob: -11.648653030395508
    7. '<|end|>' → logprob: -13.398653030395508
    8. ',
' → logprob: -13.898653030395508
    9. ',

' → logprob: -14.023653030395508
    10. ',a' → logprob: -14.398653030395508

Token 197: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002406931249424815
    2. ',' → logprob: -6.877407073974609
    3. 'b' → logprob: -8.00240707397461
    4. '  ' → logprob: -8.12740707397461
    5. ' b' → logprob: -8.37740707397461
    6. '       ' → logprob: -8.87740707397461
    7. ' ' → logprob: -8.87740707397461
    8. '    ' → logprob: -9.50240707397461
    9. ',b' → logprob: -10.12740707397461
    10. '    
' → logprob: -10.37740707397461

Token 198: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1603299379348755
    2. 'b' (adapté à ' b') → logprob: -1.9103299379348755
    3. '   ' → logprob: -9.160329818725586
    4. 'int' → logprob: -14.910329818725586
    5. ' ' → logprob: -15.535329818725586
    6. '	b' → logprob: -16.660329818725586
    7. '    ' → logprob: -16.785329818725586
    8. '  ' → logprob: -17.035329818725586
    9. ' ' → logprob: -17.910329818725586
    10. '       ' → logprob: -18.160329818725586

Token 199: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23894357681274414
    2. ':' → logprob: -1.8639435768127441
    3. '):
' → logprob: -3.863943576812744
    4. ')' → logprob: -4.238943576812744
    5. ':int' → logprob: -4.363943576812744
    6. ',' → logprob: -5.238943576812744
    7. '   ' → logprob: -6.988943576812744
    8. '(int' → logprob: -7.113943576812744
    9. ' ):' → logprob: -7.238943576812744
    10. ' (' → logprob: -7.238943576812744

Token 200: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.537868779967539e-06
    2. ' int' → logprob: -11.750008583068848
    3. '(int' → logprob: -15.500008583068848
    4. '[int' → logprob: -15.625008583068848
    5. '   ' → logprob: -16.25000762939453
    6. ')' → logprob: -16.37500762939453
    7. ':int' → logprob: -17.62500762939453
    8. '=int' → logprob: -18.00000762939453
    9. ']int' → logprob: -18.62500762939453
    10. '```' → logprob: -18.87500762939453

Token 201: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19512605667114258
    2. '):
' → logprob: -1.8201260566711426
    3. ')' → logprob: -4.445126056671143
    4. ':' → logprob: -5.695126056671143
    5. '):

' → logprob: -9.320125579833984
    6. ':int' → logprob: -10.445125579833984
    7. ' ):' → logprob: -11.070125579833984
    8. 'int' → logprob: -11.320125579833984
    9. '):
' → logprob: -11.820125579833984
    10. '   ' → logprob: -12.695125579833984

Token 202: ' Den' (ID: 9622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005243952851742506
    2. ' int' → logprob: -5.25524377822876
    3. '   ' → logprob: -12.380244255065918
    4. ')' → logprob: -12.880244255065918
    5. '(int' → logprob: -12.880244255065918
    6. '[int' → logprob: -14.755244255065918
    7. ':int' → logprob: -14.880244255065918
    8. ' 
' → logprob: -17.1302433013916
    9. '):
' → logprob: -17.1302433013916
    10. '):' → logprob: -17.3802433013916

Token 203: 'ominator' (ID: 96399)
  Prédit: 'ominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ominator' → logprob: -0.0030197796877473593
    2. 'f' → logprob: -6.7530198097229
    3. '   ' → logprob: -7.6280198097229
    4. 'v' → logprob: -7.6280198097229
    5. 'umerator' → logprob: -7.8780198097229
    6. '```' → logprob: -9.128019332885742
    7. ')' → logprob: -9.378019332885742
    8. 'vider' → logprob: -9.753019332885742
    9. 'vided' → logprob: -10.128019332885742
    10. '       ' → logprob: -10.253019332885742

Token 204: ' (' (ID: 350)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17209181189537048
    2. ')' → logprob: -2.4220917224884033
    3. '):' → logprob: -2.6720917224884033
    4. '   ' → logprob: -8.422091484069824
    5. '):
' → logprob: -10.672091484069824
    6. '):

' → logprob: -12.297091484069824
    7. ')
' → logprob: -12.797091484069824
    8. ')->' → logprob: -14.172091484069824
    9. ' ):
' → logprob: -14.422091484069824
    10. '
' → logprob: -14.547091484069824

Token 205: 'should' (ID: 10618)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6087000966072083
    2. ')' → logprob: -0.8587000966072083
    3. '):
' → logprob: -3.6087000370025635
    4. 'int' → logprob: -5.483700275421143
    5. '   ' → logprob: -7.108700275421143
    6. ':int' → logprob: -10.358699798583984
    7. ' ):' → logprob: -10.483699798583984
    8. ' int' → logprob: -10.858699798583984
    9. ':' → logprob: -10.983699798583984
    10. '(int' → logprob: -11.233699798583984

Token 206: ' not' (ID: 625)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4408044219017029
    2. ' not' → logprob: -1.6908044815063477
    3. ')' → logprob: -1.9408044815063477
    4. ')>' → logprob: -4.815804481506348
    5. 'not' → logprob: -5.190804481506348
    6. 'int' → logprob: -5.940804481506348
    7. ')!=' → logprob: -5.940804481506348
    8. '!=' → logprob: -6.065804481506348
    9. '   ' → logprob: -6.690804481506348
    10. ' !=' → logprob: -6.940804481506348

Token 207: ' be' (ID: 413)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5400419235229492
    2. ')' → logprob: -1.2900419235229492
    3. ' be' → logprob: -2.165041923522949
    4. ')==' → logprob: -4.290041923522949
    5. ' ==' → logprob: -4.540041923522949
    6. '==
' → logprob: -6.915041923522949
    7. '=' → logprob: -7.290041923522949
    8. '0' → logprob: -7.915041923522949
    9. ' ' → logprob: -8.16504192352295
    10. '
' → logprob: -9.29004192352295

Token 208: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015955790877342224
    2. ' ' → logprob: -8.75015926361084
    3. ' zero' → logprob: -14.25015926361084
    4. 'zero' → logprob: -14.62515926361084
    5. ')' → logprob: -17.875160217285156
    6. '```' → logprob: -19.125160217285156
    7. '
' → logprob: -19.500160217285156
    8. '==' → logprob: -19.500160217285156
    9. '=' → logprob: -19.875160217285156
    10. '1' → logprob: -20.875160217285156

Token 209: ').

' (ID: 3991)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048918891698122025
    2. '):' → logprob: -3.2989189624786377
    3. ')' → logprob: -4.548918724060059
    4. ')
' → logprob: -9.048918724060059
    5. '   ' → logprob: -9.173918724060059
    6. '):

' → logprob: -11.798918724060059
    7. ' ):
' → logprob: -12.298918724060059
    8. '):
' → logprob: -13.048918724060059
    9. ')**' → logprob: -13.798918724060059
    10. ',' → logprob: -14.173918724060059

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0044921888038516045
    2. ')' → logprob: -6.254492282867432
    3. '):
' → logprob: -6.379492282867432
    4. '):' → logprob: -7.629492282867432
    5. '
' → logprob: -9.004491806030273
    6. '    
' → logprob: -9.004491806030273
    7. '  ' → logprob: -10.754491806030273
    8. ' ' → logprob: -11.004491806030273
    9. ' return' → logprob: -11.254491806030273
    10. ')
' → logprob: -11.379491806030273

Token 211: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028866639360785484
    2. '"""
' → logprob: -4.028866767883301
    3. ')' → logprob: -5.028866767883301
    4. 'Returns' (adapté à ' Returns') → logprob: -6.778866767883301
    5. '):
' → logprob: -6.903866767883301
    6. ')
' → logprob: -6.903866767883301
    7. '"""' → logprob: -7.153866767883301
    8. 'return' → logprob: -9.2788667678833
    9. '```' → logprob: -10.9038667678833
    10. '):' → logprob: -10.9038667678833

Token 212: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.004512123763561249
    2. ' ((' → logprob: -5.629512310028076
    3. '(a' → logprob: -7.129512310028076
    4. ')' → logprob: -10.254511833190918
    5. '((' → logprob: -10.629511833190918
    6. ' ' → logprob: -10.754511833190918
    7. '(' → logprob: -11.629511833190918
    8. ' (
' → logprob: -12.129511833190918
    9. ' )' → logprob: -12.629511833190918
    10. ' (((' → logprob: -12.754511833190918

Token 213: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03630870580673218
    2. '   ' → logprob: -3.536308765411377
    3. '(a' → logprob: -5.036308765411377
    4. 'a' → logprob: -10.661308288574219
    5. ' a' → logprob: -11.786308288574219
    6. '    ' → logprob: -12.786308288574219
    7. ' ' → logprob: -13.536308288574219
    8. '  ' → logprob: -13.661308288574219
    9. ')' → logprob: -13.661308288574219
    10. ' -' → logprob: -14.536308288574219

Token 214: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -2.15310683415737e-05
    2. ' int' → logprob: -10.750021934509277
    3. '(int' → logprob: -19.37502098083496
    4. '   ' → logprob: -21.12502098083496
    5. '[int' → logprob: -22.62502098083496
    6. '```' → logprob: -23.12502098083496
    7. ':int' → logprob: -23.50002098083496
    8. 'float' → logprob: -23.50002098083496
    9. '
' → logprob: -23.50002098083496
    10. '<int' → logprob: -24.00002098083496

Token 215: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0323062501847744
    2. '):' → logprob: -4.28230619430542
    3. '   ' → logprob: -4.78230619430542
    4. ')' → logprob: -4.90730619430542
    5. '):
' → logprob: -7.15730619430542
    6. ':
' → logprob: -7.15730619430542
    7. '(a' → logprob: -8.157306671142578
    8. '((' → logprob: -9.282306671142578
    9. ' (' → logprob: -9.907306671142578
    10. ' :' → logprob: -10.157306671142578

Token 216: ' Ceiling' (ID: 102200)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4743611514568329
    2. '(a' → logprob: -0.9743611812591553
    3. ' -' → logprob: -8.474361419677734
    4. '-' → logprob: -10.099361419677734
    5. '((' → logprob: -11.099361419677734
    6. 'a' → logprob: -11.849361419677734
    7. ' ' → logprob: -12.849361419677734
    8. '   ' → logprob: -13.224361419677734
    9. '(' → logprob: -13.724361419677734
    10. '-(' → logprob: -13.849361419677734

Token 217: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7573067545890808
    2. '((' → logprob: -0.7573067545890808
    3. '(a' → logprob: -3.2573068141937256
    4. ' division' → logprob: -4.7573065757751465
    5. 'div' → logprob: -5.1323065757751465
    6. 'division' → logprob: -5.3823065757751465
    7. '_div' → logprob: -5.6323065757751465
    8. ' (' → logprob: -8.132307052612305
    9. 'Division' → logprob: -8.257307052612305
    10. '(
' → logprob: -8.382307052612305

Token 218: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05742917209863663
    2. ' a' → logprob: -3.182429075241089
    3. '(a' → logprob: -4.807429313659668
    4. ' (' → logprob: -5.182429313659668
    5. '(' → logprob: -7.932429313659668
    6. 'div' → logprob: -9.307429313659668
    7. 'division' → logprob: -10.932429313659668
    8. '-a' → logprob: -11.057429313659668
    9. ' division' → logprob: -11.182429313659668
    10. ' -' → logprob: -11.307429313659668

Token 219: ' divided' (ID: 28261)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -1.5229228734970093
    2. 'div' → logprob: -1.7729228734970093
    3. ' //' → logprob: -1.7729228734970093
    4. '/' → logprob: -2.397922992706299
    5. ' ' → logprob: -2.397922992706299
    6. ' division' → logprob: -2.647922992706299
    7. '_div' → logprob: -3.272922992706299
    8. '   ' → logprob: -3.397922992706299
    9. '(a' → logprob: -3.397922992706299
    10. 'a' → logprob: -3.897922992706299

Token 220: ' by' (ID: 656)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1609906107187271
    2. ' by' → logprob: -2.7859907150268555
    3. ' (' → logprob: -3.1609907150268555
    4. 'by' → logprob: -3.9109907150268555
    5. 'a' → logprob: -4.5359907150268555
    6. '(a' → logprob: -4.6609907150268555
    7. ' ' → logprob: -5.7859907150268555
    8. ')' → logprob: -7.1609907150268555
    9. '(
' → logprob: -9.160990715026855
    10. '   ' → logprob: -9.410990715026855

Token 221: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2365344762802124
    2. ' a' → logprob: -1.6115344762802124
    3. 'b' → logprob: -4.986534595489502
    4. ' b' → logprob: -5.486534595489502
    5. ' ' → logprob: -10.111534118652344
    6. ' division' → logprob: -11.361534118652344
    7. ' (' → logprob: -12.236534118652344
    8. ',' → logprob: -12.361534118652344
    9. ' ' → logprob: -12.486534118652344
    10. 'div' → logprob: -12.486534118652344

Token 222: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1925824135541916
    2. '):
' → logprob: -2.567582368850708
    3. '):' → logprob: -2.692582368850708
    4. '   ' → logprob: -3.692582368850708
    5. ')
' → logprob: -5.317582607269287
    6. ':
' → logprob: -8.442582130432129
    7. '
' → logprob: -8.567582130432129
    8. ':' → logprob: -9.317582130432129
    9. ').' → logprob: -9.567582130432129
    10. 'def' → logprob: -9.692582130432129

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013109642080962658
    2. '):
' → logprob: -4.8881096839904785
    3. ')' → logprob: -6.1381096839904785
    4. ':
' → logprob: -6.6381096839904785
    5. '):' → logprob: -6.8881096839904785
    6. ':' → logprob: -7.7631096839904785
    7. '    
' → logprob: -8.63810920715332
    8. '
' → logprob: -9.01310920715332
    9. ' return' → logprob: -9.76310920715332
    10. 'return' → logprob: -9.88810920715332

Token 224: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10736408829689026
    2. '):
' → logprob: -2.8573641777038574
    3. ')' → logprob: -3.7323641777038574
    4. '):' → logprob: -4.982364177703857
    5. ':
' → logprob: -5.482364177703857
    6. ':' → logprob: -5.982364177703857
    7. '
' → logprob: -6.357364177703857
    8. ' return' → logprob: -6.857364177703857
    9. ':return' → logprob: -6.857364177703857
    10. '    
' → logprob: -7.232364177703857

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004119361750781536
    2. 'return' → logprob: -5.504119396209717
    3. ' return' → logprob: -10.129118919372559
    4. 'def' → logprob: -14.879118919372559
    5. 'if' → logprob: -15.254118919372559
    6. '```' → logprob: -15.379118919372559
    7. '	return' → logprob: -16.504119873046875
    8. '  ' → logprob: -17.379119873046875
    9. ':return' → logprob: -17.629119873046875
    10. '       ' → logprob: -17.629119873046875

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001141526736319065
    2. ' return' → logprob: -7.251141548156738
    3. '   ' → logprob: -7.751141548156738
    4. 'def' → logprob: -14.001141548156738
    5. '(-' → logprob: -15.751141548156738
    6. '	return' → logprob: -16.501140594482422
    7. '-' → logprob: -17.501140594482422
    8. '(return' → logprob: -17.501140594482422
    9. 'if' → logprob: -17.626140594482422
    10. ' ' → logprob: -17.876140594482422

Token 227: ' -' (ID: 533)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2104094922542572
    2. '-' → logprob: -2.33540940284729
    3. '-(' → logprob: -2.96040940284729
    4. ' -' → logprob: -3.58540940284729
    5. ' (' → logprob: -4.335409641265869
    6. '-a' → logprob: -8.710409164428711
    7. ' ' → logprob: -9.710409164428711
    8. '   ' → logprob: -10.085409164428711
    9. 'a' → logprob: -10.335409164428711
    10. ' -(' → logprob: -10.585409164428711

Token 228: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00030948311905376613
    2. '((-' → logprob: -8.750309944152832
    3. '(' → logprob: -9.375309944152832
    4. '(-(' → logprob: -10.250309944152832
    5. 'a' → logprob: -10.875309944152832
    6. '(a' → logprob: -11.875309944152832
    7. '-' → logprob: -12.500309944152832
    8. '-(' → logprob: -14.625309944152832
    9. ' (-' → logprob: -15.250309944152832
    10. '((' → logprob: -15.250309944152832

Token 229: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9361264946837764e-07
    2. ' a' → logprob: -16.25
    3. 'int' → logprob: -20.375
    4. '   ' → logprob: -21.625
    5. '	a' → logprob: -21.625
    6. '
' → logprob: -22.125
    7. '(a' → logprob: -22.375
    8. ' ' → logprob: -23.625
    9. 'а' → logprob: -23.625
    10. '```' → logprob: -24.125

Token 230: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2014162540435791
    2. ' //' → logprob: -1.701416254043579
    3. ' ' → logprob: -13.576416015625
    4. ' b' → logprob: -14.576416015625
    5. 'b' → logprob: -14.701416015625
    6. ' ' → logprob: -14.951416015625
    7. 'a' → logprob: -15.201416015625
    8. ')' → logprob: -16.701416015625
    9. ' //
' → logprob: -17.201416015625
    10. 'div' → logprob: -17.201416015625

Token 231: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.988221684878226e-06
    2. ' b' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.00000762939453
    4. ')b' → logprob: -19.50000762939453
    5. '	b' → logprob: -21.12500762939453
    6. ' ' → logprob: -21.37500762939453
    7. '  ' → logprob: -22.75000762939453
    8. '>b' → logprob: -23.37500762939453
    9. '```' → logprob: -23.50000762939453
    10. '_b' → logprob: -23.87500762939453

Token 232: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.000000953674316
    4. ')b' → logprob: -17.875001907348633
    5. ')}' → logprob: -18.375001907348633
    6. '),' → logprob: -19.000001907348633
    7. ')return' → logprob: -19.000001907348633
    8. '))' → logprob: -19.000001907348633
    9. ')`' → logprob: -19.625001907348633
    10. ')

' → logprob: -19.625001907348633

Token 233: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005655844695866108
    2. '
' → logprob: -5.755655765533447
    3. '<|end|>' → logprob: -6.255655765533447
    4. '#' → logprob: -7.880655765533447
    5. 'class' → logprob: -9.755656242370605
    6. '```' → logprob: -10.630656242370605
    7. ')' → logprob: -10.880656242370605
    8. 'from' → logprob: -11.005656242370605
    9. '<|end|>' → logprob: -11.255656242370605
    10. '

' → logprob: -11.880656242370605

Token 234: ' Increase' (ID: 65344)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000609271228313446
    2. 'class' → logprob: -8.125609397888184
    3. '#' → logprob: -8.250609397888184
    4. 'from' → logprob: -10.875609397888184
    5. 'import' → logprob: -11.125609397888184
    6. ' def' → logprob: -12.250609397888184
    7. '
' → logprob: -12.375609397888184
    8. '<|end|>' → logprob: -13.375609397888184
    9. '```' → logprob: -13.750609397888184
    10. 'data' → logprob: -14.000609397888184

Token 235: ' the' (ID: 290)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.9013932347297668
    2. ' recursion' → logprob: -1.526393175125122
    3. 'rec' → logprob: -1.776393175125122
    4. 'def' → logprob: -2.401393175125122
    5. 'the' → logprob: -2.901393175125122
    6. 'import' → logprob: -3.401393175125122
    7. ' the' → logprob: -3.901393175125122
    8. '=sys' → logprob: -6.401393413543701
    9. '#' → logprob: -6.526393413543701
    10. ' sys' → logprob: -6.776393413543701

Token 236: ' recursion' (ID: 122185)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0030566153582185507
    2. ' recursion' → logprob: -6.378056526184082
    3. 'def' → logprob: -8.253056526184082
    4. '#' → logprob: -8.378056526184082
    5. 're' → logprob: -8.378056526184082
    6. 'limit' → logprob: -8.753056526184082
    7. 'sys' → logprob: -9.253056526184082
    8. 'recursive' → logprob: -9.503056526184082
    9. 'input' → logprob: -9.878056526184082
    10. 'stack' → logprob: -10.003056526184082

Token 237: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -8.2994620242971e-06
    2. ' limit' → logprob: -11.750008583068848
    3. '_limit' → logprob: -15.500008583068848
    4. 'depth' → logprob: -16.37500762939453
    5. '#' → logprob: -18.00000762939453
    6. 'Limit' → logprob: -18.37500762939453
    7. '.limit' → logprob: -19.75000762939453
    8. 'limits' → logprob: -20.12500762939453
    9. '-limit' → logprob: -20.62500762939453
    10. '100' → logprob: -20.75000762939453

Token 238: ' to' (ID: 316)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.000585918256547302
    2. 'import' → logprob: -8.625585556030273
    3. '(sys' → logprob: -8.750585556030273
    4. '
' → logprob: -8.750585556030273
    5. '10' → logprob: -9.750585556030273
    6. ' sys' → logprob: -11.500585556030273
    7. '=sys' → logprob: -11.500585556030273
    8. '100' → logprob: -12.000585556030273
    9. '_sys' → logprob: -14.000585556030273
    10. '(' → logprob: -14.500585556030273

Token 239: ' allow' (ID: 3763)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -5.633853652398102e-05
    2. '100' → logprob: -9.875056266784668
    3. '200' → logprob: -13.750056266784668
    4. ' ' → logprob: -13.875056266784668
    5. '300' → logprob: -13.875056266784668
    6. '(' → logprob: -14.375056266784668
    7. 'sys' → logprob: -14.625056266784668
    8. '2' → logprob: -15.250056266784668
    9. '500' → logprob: -15.375056266784668
    10. 'import' → logprob: -15.500056266784668

Token 240: ' for' (ID: 395)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.8908587662735954e-05
    2. '100' → logprob: -11.125019073486328
    3. 'int' → logprob: -13.000019073486328
    4. 'sys' → logprob: -14.375019073486328
    5. ' ' → logprob: -15.000019073486328
    6. 'for' → logprob: -15.250019073486328
    7. '(' → logprob: -15.500019073486328
    8. 'import' → logprob: -15.625019073486328
    9. '200' → logprob: -16.125019073486328
    10. '   ' → logprob: -16.500019073486328

Token 241: ' deep' (ID: 8103)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00038360210601240396
    2. '100' → logprob: -8.000383377075195
    3. '200' → logprob: -10.250383377075195
    4. '300' → logprob: -12.875383377075195
    5. '500' → logprob: -13.000383377075195
    6. 'sys' → logprob: -13.125383377075195
    7. 'int' → logprob: -13.375383377075195
    8. ' ' → logprob: -13.750383377075195
    9. '150' → logprob: -14.125383377075195
    10. 'import' → logprob: -14.125383377075195

Token 242: ' rec' (ID: 1369)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.02036832831799984
    2. ' recursion' → logprob: -4.0203680992126465
    3. 'recursive' → logprob: -6.1453680992126465
    4. ' rec' → logprob: -10.395368576049805
    5. '```' → logprob: -11.145368576049805
    6. 'sys' → logprob: -11.520368576049805
    7. ' recursive' → logprob: -12.145368576049805
    8. '
' → logprob: -13.020368576049805
    9. '#' → logprob: -13.520368576049805
    10. '   ' → logprob: -13.520368576049805

Token 243: 'urs' (ID: 1628)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.000835120037663728
    2. 'urs' → logprob: -7.125834941864014
    3. 'ursive' → logprob: -10.500835418701172
    4. 'usr' → logprob: -13.750835418701172
    5. '```' → logprob: -14.125835418701172
    6. 'usion' → logprob: -14.250835418701172
    7. '#' → logprob: -16.125835418701172
    8. 'ur' → logprob: -16.125835418701172
    9. '**' → logprob: -16.250835418701172
    10. '###' → logprob: -16.750835418701172

Token 244: 'ions' (ID: 756)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00045188379590399563
    2. 'ision' → logprob: -8.375452041625977
    3. 'urs' → logprob: -8.750452041625977
    4. 'usion' → logprob: -10.625452041625977
    5. 'ion' → logprob: -10.875452041625977
    6. 'ursive' → logprob: -12.250452041625977
    7. 'ersion' → logprob: -12.375452041625977
    8. 'ur' → logprob: -12.750452041625977
    9. 's' → logprob: -12.875452041625977
    10. '   ' → logprob: -13.875452041625977

Token 245: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.3199920178740285e-05
    2. 'import' → logprob: -11.125022888183594
    3. '
' → logprob: -11.875022888183594
    4. ' sys' → logprob: -14.375022888183594
    5. '10' → logprob: -14.625022888183594
    6. '(sys' → logprob: -15.250022888183594
    7. '=sys' → logprob: -15.875022888183594
    8. '#' → logprob: -17.250022888183594
    9. '100' → logprob: -18.000022888183594
    10. '

' → logprob: -18.375022888183594

Token 246: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.008129963040119e-06
    2. 'import' → logprob: -12.750003814697266
    3. ' sys' → logprob: -13.750003814697266
    4. '=sys' → logprob: -21.250003814697266
    5. '	sys' → logprob: -22.125003814697266
    6. '(sys' → logprob: -22.125003814697266
    7. '10' → logprob: -22.375003814697266
    8. '_sys' → logprob: -22.500003814697266
    9. '```' → logprob: -22.500003814697266
    10. '
' → logprob: -22.875003814697266

Token 247: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.00026646157493814826
    2. '.setdefault' → logprob: -8.625266075134277
    3. '.' → logprob: -9.375266075134277
    4. ' .' → logprob: -14.000266075134277
    5. '.stdout' → logprob: -14.500266075134277
    6. '.stdin' → logprob: -15.000266075134277
    7. '.get' → logprob: -15.375266075134277
    8. '#set' → logprob: -16.625267028808594
    9. '.Set' → logprob: -16.750267028808594
    10. '.argv' → logprob: -17.250267028808594

Token 248: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.010846546851098537
    2. '_rec' → logprob: -5.0108466148376465
    3. 'limit' → logprob: -6.5108466148376465
    4. '_limit' → logprob: -7.0108466148376465
    5. 'ursion' → logprob: -7.0108466148376465
    6. ' recursion' → logprob: -8.135846138000488
    7. 'ec' → logprob: -9.010846138000488
    8. 'sys' → logprob: -9.135846138000488
    9. '_depth' → logprob: -10.510846138000488
    10. 'ecution' → logprob: -10.510846138000488

Token 249: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00016659092216286808
    2. 'urs' → logprob: -9.125166893005371
    3. 'limit' → logprob: -10.750166893005371
    4. 'ur' → logprob: -10.875166893005371
    5. 'ursive' → logprob: -11.125166893005371
    6. 'urf' → logprob: -14.500166893005371
    7. 'ursor' → logprob: -14.750166893005371
    8. 'usr' → logprob: -15.000166893005371
    9. '_limit' → logprob: -15.000166893005371
    10. 'ursively' → logprob: -15.125166893005371

Token 250: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0005536287208087742
    2. '_limit' → logprob: -7.500553607940674
    3. 'lim' → logprob: -14.875554084777832
    4. 'depth' → logprob: -16.250553131103516
    5. ' limit' → logprob: -16.250553131103516
    6. '
' → logprob: -17.875553131103516
    7. '-' → logprob: -18.000553131103516
    8. '100' → logprob: -18.250553131103516
    9. '.limit' → logprob: -18.250553131103516
    10. 'Limit' → logprob: -18.375553131103516

Token 251: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '((' → logprob: -14.625000953674316
    3. ' (' → logprob: -16.75
    4. '(
' → logprob: -16.875
    5. '10' → logprob: -17.375
    6. '(int' → logprob: -17.5
    7. '100' → logprob: -17.75
    8. '(sys' → logprob: -19.125
    9. '250' → logprob: -19.875
    10. '500' → logprob: -20.125

Token 252: '500' (ID: 3234)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.2729995988775045e-06
    2. '100' → logprob: -12.000006675720215
    3. '300' → logprob: -16.8750057220459
    4. '200' → logprob: -17.3750057220459
    5. '1' → logprob: -17.8750057220459
    6. 'pow' → logprob: -18.2500057220459
    7. '１０' → logprob: -18.5000057220459
    8. '500' → logprob: -18.8750057220459
    9. ' ' → logprob: -19.6250057220459
    10. '410' → logprob: -19.7500057220459

Token 253: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005785751156508923
    2. '000' → logprob: -5.255785942077637
    3. '00' → logprob: -7.505785942077637
    4. '010' → logprob: -13.255785942077637
    5. '_' → logprob: -16.50578498840332
    6. ')' → logprob: -16.75578498840332
    7. '100' → logprob: -17.13078498840332
    8. '10' → logprob: -18.50578498840332
    9. '050' → logprob: -19.13078498840332
    10. '   ' → logprob: -19.25578498840332

Token 254: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. '0' → logprob: -13.375001907348633
    3. ' )' → logprob: -15.000001907348633
    4. ')
' → logprob: -16.125001907348633
    5. '))' → logprob: -18.000001907348633
    6. '())' → logprob: -19.000001907348633
    7. ')

' → logprob: -19.250001907348633
    8. ')#' → logprob: -19.375001907348633
    9. ')}' → logprob: -20.375001907348633
    10. ')`' → logprob: -20.375001907348633

Token 255: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.625
    3. ')
' → logprob: -16.25
    4. '))' → logprob: -18.0
    5. ')`' → logprob: -19.25
    6. ')#' → logprob: -19.625
    7. ')

' → logprob: -20.125
    8. ')}' → logprob: -21.0
    9. ')
' → logprob: -21.0
    10. '())' → logprob: -21.0

Token 256: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007052833680063486
    2. 'class' → logprob: -7.375705242156982
    3. '#' → logprob: -10.50070571899414
    4. 'from' → logprob: -10.50070571899414
    5. 'n' → logprob: -11.25070571899414
    6. 'N' → logprob: -12.37570571899414
    7. 'import' → logprob: -12.62570571899414
    8. ' def' → logprob: -14.37570571899414
    9. 'dp' → logprob: -14.62570571899414
    10. 'ndef' → logprob: -14.75070571899414

Token 257: ' Mod' (ID: 7191)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015808874741196632
    2. 'class' → logprob: -4.390809059143066
    3. '#' → logprob: -6.765809059143066
    4. 'from' → logprob: -6.890809059143066
    5. 'N' → logprob: -7.765809059143066
    6. 'n' → logprob: -7.890809059143066
    7. 'MOD' → logprob: -8.515809059143066
    8. 'INF' → logprob: -9.765809059143066
    9. 'import' → logprob: -10.640809059143066
    10. 'mod' → logprob: -11.515809059143066

Token 258: 'ulo' (ID: 5953)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0550319068133831
    2. '=' → logprob: -2.9300320148468018
    3. 'ULO' → logprob: -9.180031776428223
    4. 'MOD' → logprob: -11.305031776428223
    5. '=int' → logprob: -11.555031776428223
    6. '998' → logprob: -12.180031776428223
    7. ' ' → logprob: -12.680031776428223
    8. '123' → logprob: -13.305031776428223
    9. '=sys' → logprob: -13.430031776428223
    10. 'ulus' → logprob: -13.430031776428223

Token 259: ' constant' (ID: 9594)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5099097490310669
    2. ' =' → logprob: -1.009909749031067
    3. 'MOD' → logprob: -3.3849096298217773
    4. 'mod' → logprob: -7.384909629821777
    5. ' MOD' → logprob: -7.884909629821777
    6. '_' → logprob: -9.634909629821777
    7. '998' → logprob: -9.884909629821777
    8. '_mod' → logprob: -9.884909629821777
    9. '_MOD' → logprob: -10.009909629821777
    10. '10' → logprob: -11.009909629821777

Token 260: ' (' (ID: 350)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0003598952607717365
    2. 'mod' → logprob: -8.125359535217285
    3. '
' → logprob: -11.000359535217285
    4. ' MOD' → logprob: -11.500359535217285
    5. 'M' → logprob: -11.500359535217285
    6. '=' → logprob: -11.625359535217285
    7. ' =' → logprob: -12.250359535217285
    8. '10' → logprob: -12.375359535217285
    9. 'MD' → logprob: -12.375359535217285
    10. '_MOD' → logprob: -13.125359535217285

Token 261: 'often' (ID: 119288)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.008466706611216068
    2. 'MOD' → logprob: -5.008466720581055
    3. '998' → logprob: -6.883466720581055
    4. ')' → logprob: -7.383466720581055
    5. '100' → logprob: -10.133466720581055
    6. ' ' → logprob: -11.133466720581055
    7. '
' → logprob: -11.508466720581055
    8. ')
' → logprob: -11.758466720581055
    9. '```' → logprob: -11.758466720581055
    10. '1' → logprob: -12.008466720581055

Token 262: ' used' (ID: 2061)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9050572514533997
    2. 'used' → logprob: -1.0300571918487549
    3. 'MOD' → logprob: -1.9050571918487549
    4. ')' → logprob: -2.780057191848755
    5. ' used' → logprob: -3.905057191848755
    6. '10' → logprob: -5.405057430267334
    7. ' =' → logprob: -7.030057430267334
    8. 'mod' → logprob: -7.030057430267334
    9. '998' → logprob: -7.655057430267334
    10. ')=' → logprob: -8.530056953430176

Token 263: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05486084893345833
    2. ')' → logprob: -3.054860830307007
    3. ' =' → logprob: -5.429861068725586
    4. 'for' → logprob: -7.304861068725586
    5. ' in' → logprob: -8.054861068725586
    6. 'MOD' → logprob: -8.179861068725586
    7. ')=' → logprob: -8.429861068725586
    8. ' for' → logprob: -8.554861068725586
    9. ')
' → logprob: -9.554861068725586
    10. 'mod' → logprob: -9.929861068725586

Token 264: ' problems' (ID: 6840)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.15708906948566437
    2. '998' → logprob: -2.1570889949798584
    3. 'MOD' → logprob: -3.5320889949798584
    4. '100' → logprob: -8.407089233398438
    5. 'mod' → logprob: -8.782089233398438
    6. 'int' → logprob: -10.782089233398438
    7. ' MOD' → logprob: -11.157089233398438
    8. ' ' → logprob: -11.157089233398438
    9. '```' → logprob: -11.157089233398438
    10. ')' → logprob: -11.407089233398438

Token 265: ' involving' (ID: 26065)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05464019626379013
    2. ')' → logprob: -3.554640293121338
    3. ' =' → logprob: -4.054640293121338
    4. 'MOD' → logprob: -5.054640293121338
    5. 'mod' → logprob: -7.679640293121338
    6. '#' → logprob: -8.92963981628418
    7. ' in' → logprob: -9.17963981628418
    8. ')=' → logprob: -10.30463981628418
    9. ',' → logprob: -10.42963981628418
    10. ' MOD' → logprob: -10.55463981628418

Token 266: ' large' (ID: 4410)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004210532642900944
    2. 'MOD' → logprob: -6.129210472106934
    3. '998' → logprob: -6.254210472106934
    4. '100' → logprob: -9.504210472106934
    5. 'mod' → logprob: -10.879210472106934
    6. 'int' → logprob: -12.629210472106934
    7. '(' → logprob: -13.629210472106934
    8. ' ' → logprob: -14.129210472106934
    9. ' MOD' → logprob: -14.129210472106934
    10. '#' → logprob: -14.754210472106934

Token 267: ' numbers' (ID: 8663)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.9627291560173035
    2. 'pr' → logprob: -1.2127292156219482
    3. 'mod' → logprob: -1.9627292156219482
    4. 'MOD' → logprob: -2.2127292156219482
    5. ' primes' → logprob: -3.5877292156219482
    6. 'numbers' → logprob: -3.9627292156219482
    7. '10' → logprob: -4.462728977203369
    8. 'inte' → logprob: -4.962728977203369
    9. '998' → logprob: -5.962728977203369
    10. '100' → logprob: -7.587728977203369

Token 268: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15917670726776123
    2. ')
' → logprob: -2.159176826477051
    3. 'MOD' → logprob: -3.534176826477051
    4. '=' → logprob: -7.034176826477051
    5. 'mod' → logprob: -7.659176826477051
    6. ',' → logprob: -7.659176826477051
    7. '_MOD' → logprob: -9.03417682647705
    8. '10' → logprob: -9.03417682647705
    9. '#' → logprob: -9.40917682647705
    10. ')

' → logprob: -9.53417682647705

Token 269: ' modular' (ID: 61198)
  Prédit: '998'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '998' → logprob: -0.9604651927947998
    2. 'MOD' → logprob: -1.3354651927947998
    3. 'mod' → logprob: -1.4604651927947998
    4. '10' → logprob: -2.5854651927948
    5. '#' → logprob: -3.2104651927948
    6. '100' → logprob: -5.460465431213379
    7. '
' → logprob: -7.835465431213379
    8. '```' → logprob: -7.960465431213379
    9. '1' → logprob: -8.460465431213379
    10. ' MOD' → logprob: -8.460465431213379

Token 270: ' arithmetic' (ID: 81645)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.00044795009307563305
    2. ' arithmetic' → logprob: -7.750447750091553
    3. 'arith' → logprob: -11.000448226928711
    4. '_ar' → logprob: -16.37544822692871
    5. 'ex' → logprob: -16.37544822692871
    6. 'Arithmetic' → logprob: -16.62544822692871
    7. 'operations' → logprob: -16.75044822692871
    8. ' ar' → logprob: -17.00044822692871
    9. '```' → logprob: -17.12544822692871
    10. 'inte' → logprob: -17.87544822692871

Token 271: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5247632265090942
    2. ')' → logprob: -1.0247632265090942
    3. 'MOD' → logprob: -3.0247631072998047
    4. ')

' → logprob: -7.524763107299805
    5. 'mod' → logprob: -8.524763107299805
    6. '_MOD' → logprob: -10.149763107299805
    7. ')
' → logprob: -11.274763107299805
    8. '=' → logprob: -11.399763107299805
    9. 'M' → logprob: -11.524763107299805
    10. ' MOD' → logprob: -11.774763107299805

Token 272: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.018485860899090767
    2. 'mod' → logprob: -4.018486022949219
    3. 'M' → logprob: -9.018486022949219
    4. 'MD' → logprob: -9.143486022949219
    5. '10' → logprob: -10.018486022949219
    6. 'md' → logprob: -11.143486022949219
    7. 'Mod' → logprob: -11.393486022949219
    8. '998' → logprob: -11.518486022949219
    9. 'INF' → logprob: -12.018486022949219
    10. ' MOD' → logprob: -12.268486022949219

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740915596485138
    2. ' =' → logprob: -0.9740915298461914
    3. ',' → logprob: -12.099091529846191
    4. '_' → logprob: -12.224091529846191
    5. ':' → logprob: -13.599091529846191
    6. ' ' → logprob: -14.224091529846191
    7. '.' → logprob: -14.599091529846191
    8. '=int' → logprob: -15.099091529846191
    9. ')' → logprob: -15.224091529846191
    10. '=

' → logprob: -15.474091529846191

Token 274: ' pow' (ID: 9779)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00020425561524461955
    2. '998' → logprob: -9.000204086303711
    3. '100' → logprob: -9.625204086303711
    4. ' ' → logprob: -11.250204086303711
    5. '1' → logprob: -13.500204086303711
    6. 'int' → logprob: -15.250204086303711
    7. '999' → logprob: -18.00020408630371
    8. '109' → logprob: -18.25020408630371
    9. '(' → logprob: -18.25020408630371
    10. '=' → logprob: -18.87520408630371

Token 275: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003357006062287837
    2. '10' → logprob: -8.000335693359375
    3. 'int' → logprob: -16.250335693359375
    4. '2' → logprob: -16.625335693359375
    5. '(int' → logprob: -17.375335693359375
    6. '(
' → logprob: -18.375335693359375
    7. '```' → logprob: -18.375335693359375
    8. '()' → logprob: -18.750335693359375
    9. '100' → logprob: -19.500335693359375
    10. '1' → logprob: -19.500335693359375

Token 276: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.320199877838604e-07
    2. '100' → logprob: -15.625
    3. '998' → logprob: -16.75
    4. 'int' → logprob: -17.125
    5. '2' → logprob: -17.25
    6. '1' → logprob: -18.0
    7. ')' → logprob: -19.0
    8. '(' → logprob: -19.125
    9. ' ' → logprob: -19.875
    10. '7' → logprob: -20.0

Token 277: ',' (ID: 11)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.816093228830141e-06
    2. '+' → logprob: -13.50000286102295
    3. '09' → logprob: -13.75000286102295
    4. ',' → logprob: -16.000001907348633
    5. ' ' → logprob: -16.125001907348633
    6. '```' → logprob: -16.750001907348633
    7. ')' → logprob: -17.125001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '=' → logprob: -18.750001907348633
    10. '**' → logprob: -19.000001907348633

Token 278: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '+' → logprob: -18.5
    3. '```' → logprob: -20.375
    4. '
' → logprob: -20.5
    5. ' ' → logprob: -20.875
    6. '09' → logprob: -21.125
    7. '   ' → logprob: -22.375
    8. '

' → logprob: -23.125
    9. '９' → logprob: -23.25
    10. '``' → logprob: -23.75

Token 279: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '+' → logprob: -18.75
    3. '09' → logprob: -20.625
    4. '
' → logprob: -21.5
    5. '

' → logprob: -22.0
    6. ' ' → logprob: -22.375
    7. '   ' → logprob: -22.625
    8. '```' → logprob: -22.875
    9. '９' → logprob: -23.5
    10. '``' → logprob: -23.5

Token 280: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.3596853831550106e-05
    2. ' +' → logprob: -10.625053405761719
    3. ')' → logprob: -11.000053405761719
    4. '7' → logprob: -11.750053405761719
    5. ')+' → logprob: -12.625053405761719
    6. '9' → logprob: -14.000053405761719
    7. ',' → logprob: -15.500053405761719
    8. 'plus' → logprob: -16.37505340576172
    9. '＋' → logprob: -16.75005340576172
    10. '```' → logprob: -16.87505340576172

Token 281: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011021859245374799
    2. ' +' → logprob: -9.250110626220703
    3. '7' → logprob: -11.250110626220703
    4. 'plus' → logprob: -14.750110626220703
    5. '+
' → logprob: -14.875110626220703
    6. '＋' → logprob: -15.250110626220703
    7. '9' → logprob: -17.375110626220703
    8. ' plus' → logprob: -17.500110626220703
    9. '```' → logprob: -18.250110626220703
    10. '
' → logprob: -18.250110626220703

Token 282: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.75
    3. ' ' → logprob: -19.75
    4. '７' → logprob: -22.375
    5. '   ' → logprob: -22.375
    6. '

' → logprob: -22.5
    7. '
' → logprob: -23.125
    8. '```' → logprob: -23.125
    9. '  ' → logprob: -24.0
    10. '07' → logprob: -24.25

Token 283: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -20.125
    3. '

' → logprob: -21.375
    4. ' ' → logprob: -21.5
    5. '７' → logprob: -22.5
    6. '```' → logprob: -23.125
    7. '
' → logprob: -23.375
    8. '   ' → logprob: -23.5
    9. '07' → logprob: -24.625
    10. '  ' → logprob: -24.875

Token 284: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1895107477903366
    2. 'def' → logprob: -1.939510703086853
    3. '<|end|>' → logprob: -3.9395108222961426
    4. 'n' → logprob: -6.064510822296143
    5. '

' → logprob: -6.314510822296143
    6. '#' → logprob: -6.564510822296143
    7. '\n' → logprob: -7.064510822296143
    8. 'class' → logprob: -7.564510822296143
    9. ')' → logprob: -7.689510822296143
    10. '```' → logprob: -7.814510822296143

Token 285: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015716375783085823
    2. 'class' → logprob: -6.6265716552734375
    3. '#' → logprob: -8.751571655273438
    4. '
' → logprob: -9.751571655273438
    5. 'n' → logprob: -11.751571655273438
    6. 'from' → logprob: -11.751571655273438
    7. 'import' → logprob: -12.626571655273438
    8. 'N' → logprob: -12.626571655273438
    9. '\' → logprob: -13.001571655273438
    10. '\n' → logprob: -14.126571655273438

Token 286: ' List' (ID: 2655)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009189629927277565
    2. 'class' → logprob: -5.259189605712891
    3. '#' → logprob: -6.259189605712891
    4. 'from' → logprob: -6.509189605712891
    5. 'INF' → logprob: -8.00918960571289
    6. 'n' → logprob: -9.25918960571289
    7. 'N' → logprob: -10.00918960571289
    8. 'import' → logprob: -10.50918960571289
    9. 'inf' → logprob: -11.13418960571289
    10. 'dp' → logprob: -12.63418960571289

Token 287: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30997782945632935
    2. '=' → logprob: -1.6849777698516846
    3. '=[]' → logprob: -2.6849777698516846
    4. 'of' → logprob: -5.559978008270264
    5. 's' → logprob: -5.684978008270264
    6. '=[]
' → logprob: -6.434978008270264
    7. '_of' → logprob: -7.059978008270264
    8. '_' → logprob: -7.309978008270264
    9. '[]' → logprob: -7.684978008270264
    10. 'A' → logprob: -8.184977531433105

Token 288: ' all' (ID: 722)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2313753068447113
    2. ' primes' → logprob: -3.356375217437744
    3. 'pr' → logprob: -3.606375217437744
    4. 'dire' → logprob: -3.856375217437744
    5. '[' → logprob: -4.106375217437744
    6. 'dp' → logprob: -4.231375217437744
    7. 'inf' → logprob: -4.981375217437744
    8. '__' → logprob: -4.981375217437744
    9. ' []' → logprob: -5.106375217437744
    10. 'prime' → logprob: -5.606375217437744

Token 289: ' lowercase' (ID: 90395)
  Prédit: ' lowercase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lowercase' → logprob: -1.288331389427185
    2. 'import' → logprob: -1.413331389427185
    3. 'dire' → logprob: -2.1633315086364746
    4. 'digits' → logprob: -2.4133315086364746
    5. ' uppercase' → logprob: -3.5383315086364746
    6. 'lower' → logprob: -3.7883315086364746
    7. 'def' → logprob: -3.7883315086364746
    8. 'dirs' → logprob: -4.038331508636475
    9. 's' → logprob: -4.163331508636475
    10. 'pr' → logprob: -4.288331508636475

Token 290: ' English' (ID: 7725)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.534104585647583
    2. '_letters' → logprob: -1.534104585647583
    3. 'letters' → logprob: -2.034104585647583
    4. 'import' → logprob: -3.284104585647583
    5. 'ascii' → logprob: -4.409104347229004
    6. 'alphabet' → logprob: -4.659104347229004
    7. '_ascii' → logprob: -5.534104347229004
    8. 'alph' → logprob: -6.784104347229004
    9. 'string' → logprob: -6.909104347229004
    10. '_' → logprob: -7.784104347229004

Token 291: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.07795106619596481
    2. '_letters' → logprob: -3.577950954437256
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -3.577950954437256
    4. ' letters' → logprob: -4.202950954437256
    5. 'alphabet' → logprob: -6.327950954437256
    6. 'import' → logprob: -6.452950954437256
    7. 'alph' → logprob: -7.952950954437256
    8. 'ascii' → logprob: -8.702951431274414
    9. 'characters' → logprob: -9.327951431274414
    10. '_' → logprob: -9.577951431274414

Token 292: '
' (ID: 198)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.06308023631572723
    2. 'alphabet' → logprob: -3.438080310821533
    3. 'import' → logprob: -4.438080310821533
    4. 'abc' → logprob: -5.063080310821533
    5. 'lower' → logprob: -5.688080310821533
    6. 'a' → logprob: -6.188080310821533
    7. 'alpha' → logprob: -6.563080310821533
    8. 'alph' → logprob: -6.563080310821533
    9. 'letters' → logprob: -6.688080310821533
    10. 'string' → logprob: -7.938080310821533

Token 293: 'al' (ID: 280)
  Prédit: 'alphabet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alphabet' → logprob: -0.6078307628631592
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -1.3578307628631592
    3. 'abc' → logprob: -3.232830762863159
    4. 'import' → logprob: -3.357830762863159
    5. 'alpha' → logprob: -3.482830762863159
    6. 'lower' → logprob: -3.732830762863159
    7. 'alph' → logprob: -3.857830762863159
    8. 'letters' → logprob: -3.982830762863159
    9. 'string' → logprob: -4.482831001281738
    10. 'alp' → logprob: -4.857831001281738

Token 294: ' =' (ID: 314)
  Prédit: 'phabet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'phabet' → logprob: -0.31544554233551025
    2. 'l' → logprob: -1.8154455423355103
    3. 'ph' → logprob: -2.8154454231262207
    4. 'pha' → logprob: -3.0654454231262207
    5. 'p' → logprob: -7.940445423126221
    6. 'phas' → logprob: -7.940445423126221
    7. 'phal' → logprob: -9.065445899963379
    8. '```' → logprob: -9.440445899963379
    9. 'lp' → logprob: -9.940445899963379
    10. 'ls' → logprob: -10.440445899963379

Token 295: ' [' (ID: 723)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.43353891372680664
    2. ''' → logprob: -1.1835389137268066
    3. '[' → logprob: -4.058538913726807
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -4.683538913726807
    5. ' '' → logprob: -5.058538913726807
    6. ' "' → logprob: -5.683538913726807
    7. 'list' → logprob: -5.683538913726807
    8. ' list' → logprob: -6.433538913726807
    9. '[list' → logprob: -6.808538913726807
    10. ' [' → logprob: -7.183538913726807

Token 296: 'chr' (ID: 33902)
  Prédit: 'chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.00021605310030281544
    2. ' chr' → logprob: -9.375216484069824
    3. 'c' → logprob: -9.500216484069824
    4. '(chr' → logprob: -10.625216484069824
    5. ''a' → logprob: -11.500216484069824
    6. ''' → logprob: -11.500216484069824
    7. '_chr' → logprob: -12.125216484069824
    8. 'a' → logprob: -12.875216484069824
    9. ''ch' → logprob: -13.500216484069824
    10. '*' → logprob: -14.000216484069824

Token 297: '(ord' (ID: 199585)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6668263077735901
    2. '(' → logprob: -1.4168262481689453
    3. '(ord' → logprob: -1.4168262481689453
    4. '(x' → logprob: -6.541826248168945
    5. '(o' → logprob: -9.166826248168945
    6. '97' → logprob: -9.291826248168945
    7. '(c' → logprob: -10.666826248168945
    8. '(a' → logprob: -11.166826248168945
    9. 'i' → logprob: -11.791826248168945
    10. '(k' → logprob: -12.791826248168945

Token 298: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0009125363430939615
    2. '("' → logprob: -7.000912666320801
    3. '(' → logprob: -13.8759126663208
    4. '(ord' → logprob: -16.000911712646484
    5. 'a' → logprob: -17.500911712646484
    6. ' ('' → logprob: -17.875911712646484
    7. ''a' → logprob: -18.125911712646484
    8. '(a' → logprob: -19.125911712646484
    9. '97' → logprob: -19.625911712646484
    10. ''' → logprob: -19.875911712646484

Token 299: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03807706758379936
    2. ''a' → logprob: -3.2880771160125732
    3. '97' → logprob: -10.288077354431152
    4. ''' → logprob: -13.913077354431152
    5. '"a' → logprob: -14.913077354431152
    6. '`' → logprob: -15.538077354431152
    7. '('' → logprob: -16.538076400756836
    8. '```' → logprob: -17.163076400756836
    9. '(a' → logprob: -18.288076400756836
    10. '’a' → logprob: -18.288076400756836

Token 300: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4744088649749756
    2. ')+' → logprob: -0.9744088649749756
    3. '')' → logprob: -8.224409103393555
    4. ' )' → logprob: -10.599409103393555
    5. '(ord' → logprob: -11.849409103393555
    6. ')+(' → logprob: -12.099409103393555
    7. 'a' → logprob: -12.224409103393555
    8. '+i' → logprob: -12.599409103393555
    9. '")+' → logprob: -12.849409103393555
    10. '+' → logprob: -13.224409103393555

Token 301: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5708268880844116
    2. '+i' → logprob: -1.3208268880844116
    3. '+' → logprob: -1.8208268880844116
    4. ')+' → logprob: -5.445827007293701
    5. ' +' → logprob: -6.945827007293701
    6. '+x' → logprob: -8.070826530456543
    7. '),' → logprob: -8.070826530456543
    8. 'i' → logprob: -9.695826530456543
    9. '+k' → logprob: -9.945826530456543
    10. '+j' → logprob: -10.070826530456543

Token 302: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.505351095460355e-05
    2. ' i' → logprob: -9.500075340270996
    3. '_' → logprob: -16.12507438659668
    4. '_i' → logprob: -16.62507438659668
    5. ')' → logprob: -16.75007438659668
    6. '_)' → logprob: -17.87507438659668
    7. 'x' → logprob: -18.75007438659668
    8. ' ' → logprob: -19.75007438659668
    9. ')i' → logprob: -20.12507438659668
    10. '	i' → logprob: -20.50007438659668

Token 303: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.856408536899835e-05
    2. ')]' → logprob: -10.500028610229492
    3. ' )' → logprob: -14.375028610229492
    4. '))' → logprob: -15.750028610229492
    5. ')
' → logprob: -16.875028610229492
    6. ')...' → logprob: -16.875028610229492
    7. ')])' → logprob: -17.000028610229492
    8. 'for' → logprob: -17.250028610229492
    9. ')i' → logprob: -17.375028610229492
    10. ']' → logprob: -17.500028610229492

Token 304: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. 'for' → logprob: -12.750006675720215
    3. ' )' → logprob: -13.375006675720215
    4. ')]' → logprob: -13.500006675720215
    5. ' for' → logprob: -15.125006675720215
    6. ')
' → logprob: -17.6250057220459
    7. ']' → logprob: -17.6250057220459
    8. '))' → logprob: -17.6250057220459
    9. '')' → logprob: -18.0000057220459
    10. ' ' → logprob: -19.6250057220459

Token 305: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08081332594156265
    2. ' i' → logprob: -2.580813407897949
    3. 'range' → logprob: -6.830813407897949
    4. ' range' → logprob: -7.080813407897949
    5. ' ' → logprob: -15.20581340789795
    6. ' in' → logprob: -15.45581340789795
    7. 'in' → logprob: -16.455812454223633
    8. '_i' → logprob: -16.705812454223633
    9. '_range' → logprob: -17.205812454223633
    10. '  ' → logprob: -17.455812454223633

Token 306: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31626904010772705
    2. ' in' → logprob: -1.316269040107727
    3. 'range' → logprob: -5.9412689208984375
    4. ' range' → logprob: -8.066268920898438
    5. 'i' → logprob: -9.941268920898438
    6. ' ' → logprob: -12.316268920898438
    7. ' i' → logprob: -12.566268920898438
    8. ')' → logprob: -13.316268920898438
    9. '0' → logprob: -14.191268920898438
    10. '   ' → logprob: -15.066268920898438

Token 307: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -19.125261306762695
    4. '	range' → logprob: -20.625261306762695
    5. ' ' → logprob: -20.875261306762695
    6. '26' → logprob: -21.125261306762695
    7. '   ' → logprob: -21.250261306762695
    8. ' xrange' → logprob: -21.500261306762695
    9. 'rang' → logprob: -21.875261306762695
    10. '
' → logprob: -22.000261306762695

Token 308: '(' (ID: 7)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '27' → logprob: -18.875
    5. '25' → logprob: -20.125
    6. '   ' → logprob: -20.125
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -20.125
    8. '2' → logprob: -20.25
    9. '```' → logprob: -20.875
    10. '0' → logprob: -21.375

Token 309: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '27' → logprob: -17.25
    4. '2' → logprob: -19.0
    5. '25' → logprob: -20.5
    6. '1' → logprob: -22.375
    7. '24' → logprob: -22.5
    8. 'z' → logprob: -22.625
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -23.125
    10. '6' → logprob: -23.25

Token 310: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.0280383548888494e-06
    2. ')]
' → logprob: -15.000000953674316
    3. ']' → logprob: -15.250000953674316
    4. ')' → logprob: -15.625000953674316
    5. '])]' → logprob: -16.750001907348633
    6. '')]' → logprob: -17.125001907348633
    7. ' )' → logprob: -17.750001907348633
    8. ')],' → logprob: -18.250001907348633
    9. ')]

' → logprob: -18.500001907348633
    10. ')])' → logprob: -18.500001907348633

Token 311: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20199063420295715
    2. '<|end|>' → logprob: -2.8269906044006348
    3. '
' → logprob: -3.0769906044006348
    4. '\n' → logprob: -3.7019906044006348
    5. '#' → logprob: -3.9519906044006348
    6. '```' → logprob: -5.326990604400635
    7. 'a' → logprob: -5.451990604400635
    8. 'class' → logprob: -5.451990604400635
    9. ')' → logprob: -5.451990604400635
    10. '<|end|>' → logprob: -5.576990604400635

Token 312: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06836453825235367
    2. '#' → logprob: -3.9433646202087402
    3. 'inf' → logprob: -4.19336462020874
    4. 'INF' → logprob: -4.31836462020874
    5. 'class' → logprob: -5.69336462020874
    6. 'dp' → logprob: -6.19336462020874
    7. 'mod' → logprob: -6.56836462020874
    8. 'from' → logprob: -6.81836462020874
    9. 'al' → logprob: -6.94336462020874
    10. 'dx' → logprob: -6.94336462020874

Token 313: '4' (ID: 19)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0050141094252467155
    2. 'class' → logprob: -6.130013942718506
    3. 'from' → logprob: -6.755013942718506
    4. '#' → logprob: -7.255013942718506
    5. 'INF' → logprob: -7.755013942718506
    6. 'dp' → logprob: -8.380014419555664
    7. 'n' → logprob: -9.755014419555664
    8. 'd' → logprob: -9.880014419555664
    9. 'inf' → logprob: -10.005014419555664
    10. 'N' → logprob: -10.505014419555664

Token 314: '-direction' (ID: 59770)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.553400993347168
    2. '<|end|>' → logprob: -1.678400993347168
    3. '**' → logprob: -2.303400993347168
    4. 'def' → logprob: -2.803400993347168
    5. '0' → logprob: -2.803400993347168
    6. ' directions' → logprob: -2.928400993347168
    7. ' ' → logprob: -3.303400993347168
    8. ']' → logprob: -3.428400993347168
    9. 'd' → logprob: -3.553400993347168
    10. '4' → logprob: -3.803400993347168

Token 315: ' movement' (ID: 12772)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.16515934467315674
    2. 's' → logprob: -1.9151593446731567
    3. ' vectors' → logprob: -7.040159225463867
    4. 'vectors' → logprob: -7.415159225463867
    5. 'moves' → logprob: -7.415159225463867
    6. '_vectors' → logprob: -7.540159225463867
    7. '_moves' → logprob: -7.790159225463867
    8. 'd' → logprob: -7.790159225463867
    9. 'dx' → logprob: -8.415159225463867
    10. '[]' → logprob: -8.540159225463867

Token 316: ' vectors' (ID: 52254)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.171965554356575
    2. 'dire' → logprob: -2.2969655990600586
    3. 'd' → logprob: -3.5469655990600586
    4. 'dirs' → logprob: -4.171965599060059
    5. 'moves' → logprob: -5.046965599060059
    6. 'delta' → logprob: -6.171965599060059
    7. ' dx' → logprob: -7.171965599060059
    8. 's' → logprob: -7.171965599060059
    9. 'dir' → logprob: -7.171965599060059
    10. 'diff' → logprob: -7.546965599060059

Token 317: ' (' (ID: 350)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.028000984340906143
    2. 'd' → logprob: -4.528000831604004
    3. 'dire' → logprob: -5.028000831604004
    4. 'dirs' → logprob: -5.653000831604004
    5. 'dy' → logprob: -5.778000831604004
    6. 'D' → logprob: -6.403000831604004
    7. 'DIR' → logprob: -7.028000831604004
    8. 'dir' → logprob: -7.903000831604004
    9. 'DX' → logprob: -8.653000831604004
    10. 'di' → logprob: -8.903000831604004

Token 318: 'down' (ID: 4653)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0885894298553467
    2. '[' → logprob: -1.0885894298553467
    3. '[(' → logprob: -1.3385894298553467
    4. '(-' → logprob: -3.0885894298553467
    5. '[-' → logprob: -4.713589668273926
    6. 'dx' → logprob: -5.463589668273926
    7. ')' → logprob: -5.838589668273926
    8. ' (' → logprob: -7.213589668273926
    9. '0' → logprob: -7.713589668273926
    10. '
' → logprob: -8.088589668273926

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001726349350064993
    2. '),' → logprob: -7.376726150512695
    3. '[' → logprob: -7.876726150512695
    4. 'dx' → logprob: -8.501726150512695
    5. ' ,' → logprob: -8.751726150512695
    6. ',
' → logprob: -9.751726150512695
    7. ',[' → logprob: -10.001726150512695
    8. '],' → logprob: -10.251726150512695
    9. '),(' → logprob: -10.626726150512695
    10. ',d' → logprob: -10.626726150512695

Token 320: ' right' (ID: 1849)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7647918462753296
    2. 'up' → logprob: -0.7647918462753296
    3. ' up' → logprob: -3.389791965484619
    4. '1' → logprob: -3.514791965484619
    5. '-' → logprob: -6.014791965484619
    6. ' ' → logprob: -7.014791965484619
    7. '[' → logprob: -7.389791965484619
    8. 'right' → logprob: -7.514791965484619
    9. '-up' → logprob: -7.764791965484619
    10. ' -' → logprob: -8.514791488647461

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005984273157082498
    2. '),' → logprob: -8.125597953796387
    3. ')' → logprob: -9.000597953796387
    4. ',
' → logprob: -9.250597953796387
    5. ' ,' → logprob: -10.375597953796387
    6. '[' → logprob: -10.875597953796387
    7. '],' → logprob: -11.875597953796387
    8. 'd' → logprob: -12.125597953796387
    9. ']' → logprob: -12.625597953796387
    10. ',[' → logprob: -12.625597953796387

Token 322: ' up' (ID: 869)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.1848149299621582
    2. '-' → logprob: -2.309814929962158
    3. '0' → logprob: -2.934814929962158
    4. ' up' → logprob: -4.559814929962158
    5. '1' → logprob: -5.684814929962158
    6. '-up' → logprob: -7.184814929962158
    7. '[-' → logprob: -7.434814929962158
    8. 'left' → logprob: -7.934814929962158
    9. ' -' → logprob: -7.934814929962158
    10. '[' → logprob: -8.309814453125

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005297315772622824
    2. '),' → logprob: -5.3802971839904785
    3. ')' → logprob: -8.005297660827637
    4. ' ,' → logprob: -9.755297660827637
    5. '),
' → logprob: -9.755297660827637
    6. '[' → logprob: -10.130297660827637
    7. ',
' → logprob: -10.130297660827637
    8. '],' → logprob: -10.255297660827637
    9. ')
' → logprob: -10.255297660827637
    10. '),(' → logprob: -10.380297660827637

Token 324: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.01491822674870491
    2. ' left' → logprob: -4.264918327331543
    3. '0' → logprob: -7.389918327331543
    4. '-' → logprob: -9.139918327331543
    5. '-left' → logprob: -10.889918327331543
    6. '_left' → logprob: -12.014918327331543
    7. ' -' → logprob: -13.389918327331543
    8. ',left' → logprob: -14.264918327331543
    9. '	left' → logprob: -14.389918327331543
    10. 'Left' → logprob: -14.639918327331543

Token 325: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7352112531661987
    2. ']
' → logprob: -1.2352112531661987
    3. ')' → logprob: -1.7352112531661987
    4. ')
' → logprob: -2.9852113723754883
    5. '])' → logprob: -6.985211372375488
    6. ')]
' → logprob: -7.360211372375488
    7. '])
' → logprob: -7.735211372375488
    8. ')]' → logprob: -7.985211372375488
    9. ']

' → logprob: -8.360211372375488
    10. ']
' → logprob: -9.110211372375488

Token 326: 'direction' (ID: 43278)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.1935549974441528
    2. 'dy' → logprob: -1.5685549974441528
    3. 'dh' → logprob: -1.5685549974441528
    4. 'd' → logprob: -1.6935549974441528
    5. 'di' → logprob: -2.9435548782348633
    6. 'dire' → logprob: -4.193554878234863
    7. 'dd' → logprob: -4.568554878234863
    8. 'D' → logprob: -4.943554878234863
    9. 'dir' → logprob: -6.068554878234863
    10. 'dirs' → logprob: -6.318554878234863

Token 327: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0032968937885016203
    2. ' =' → logprob: -5.878296852111816
    3. '=' → logprob: -7.628296852111816
    4. '_vectors' → logprob: -13.753296852111816
    5. '=[' → logprob: -14.003296852111816
    6. 'S' → logprob: -14.003296852111816
    7. ' s' → logprob: -14.128296852111816
    8. '4' → logprob: -14.128296852111816
    9. '_s' → logprob: -14.878296852111816
    10. 'd' → logprob: -16.003297805786133

Token 328: ' [[' (ID: 9237)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00529151177033782
    2. '[[' → logprob: -5.25529146194458
    3. '[' → logprob: -10.005291938781738
    4. ' [(' → logprob: -11.505291938781738
    5. '[
' → logprob: -13.005291938781738
    6. '((' → logprob: -15.380291938781738
    7. '[((' → logprob: -16.630290985107422
    8. ' [[' → logprob: -17.505290985107422
    9. '([(' → logprob: -18.130290985107422
    10. '[-' → logprob: -19.130290985107422

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.750003814697266
    3. '0' → logprob: -14.000003814697266
    4. '   ' → logprob: -15.875003814697266
    5. '(' → logprob: -16.500003814697266
    6. '
' → logprob: -16.875003814697266
    7. '+' → logprob: -18.000003814697266
    8. '[' → logprob: -18.250003814697266
    9. ']' → logprob: -18.625003814697266
    10. '```' → logprob: -18.625003814697266

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005719788023270667
    2. '0' → logprob: -7.500572204589844
    3. ' ,' → logprob: -10.875572204589844
    4. ',
' → logprob: -16.500572204589844
    5. '],' → logprob: -16.750572204589844
    6. ' ' → logprob: -17.000572204589844
    7. '],[' → logprob: -19.375572204589844
    8. '),' → logprob: -19.625572204589844
    9. '
' → logprob: -19.625572204589844
    10. '],
' → logprob: -20.000572204589844

Token 331: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.875036239624023
    4. '  ' → logprob: -18.000036239624023
    5. '
' → logprob: -19.125036239624023
    6. ' ' → logprob: -19.875036239624023
    7. '	' → logprob: -20.125036239624023
    8. '    ' → logprob: -20.625036239624023
    9. '00' → logprob: -20.625036239624023
    10. '۰' → logprob: -20.875036239624023

Token 332: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.625003814697266
    4. '
' → logprob: -19.250003814697266
    5. '  ' → logprob: -19.625003814697266
    6. '۰' → logprob: -21.000003814697266
    7. '```' → logprob: -21.187503814697266
    8. '	' → logprob: -21.250003814697266
    9. '00' → logprob: -21.437503814697266
    10. '﻿' → logprob: -21.437503814697266

Token 333: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.01487243827432394
    2. '],
' → logprob: -4.2648725509643555
    3. '],[' → logprob: -7.2648725509643555
    4. ']' → logprob: -12.264872550964355
    5. '],

' → logprob: -13.139872550964355
    6. ' ],' → logprob: -13.264872550964355
    7. '],
' → logprob: -14.764872550964355
    8. ' ],
' → logprob: -16.26487159729004
    9. ',' → logprob: -16.51487159729004
    10. '),' → logprob: -17.01487159729004

Token 334: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02368471398949623
    2. '[' → logprob: -3.7736847400665283
    3. ' ' → logprob: -7.773684501647949
    4. ' [' → logprob: -10.89868450164795
    5. '   ' → logprob: -17.773685455322266
    6. '
' → logprob: -18.023685455322266
    7. '(' → logprob: -19.148685455322266
    8. '{' → logprob: -19.398685455322266
    9. '	' → logprob: -19.648685455322266
    10. ' ' → logprob: -19.773685455322266

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.79811754100956e-05
    2. '-' → logprob: -10.500038146972656
    3. ' ' → logprob: -11.500038146972656
    4. '   ' → logprob: -16.625038146972656
    5. '
' → logprob: -16.812538146972656
    6. ' -' → logprob: -17.250038146972656
    7. '[' → logprob: -17.250038146972656
    8. '```' → logprob: -17.500038146972656
    9. '۰' → logprob: -17.500038146972656
    10. '  ' → logprob: -18.000038146972656

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6060808522743173e-05
    2. '1' → logprob: -10.750025749206543
    3. ' ,' → logprob: -12.375025749206543
    4. '],' → logprob: -16.50002670288086
    5. ',-' → logprob: -16.50002670288086
    6. '-' → logprob: -17.50002670288086
    7. ',
' → logprob: -17.75002670288086
    8. ' ' → logprob: -18.50002670288086
    9. '[' → logprob: -19.62502670288086
    10. '
' → logprob: -19.62502670288086

Token 337: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.051066520740278e-05
    2. '-' → logprob: -9.875060081481934
    3. ' ' → logprob: -11.625060081481934
    4. ' -' → logprob: -17.25006103515625
    5. '
' → logprob: -18.25006103515625
    6. '   ' → logprob: -18.75006103515625
    7. '```' → logprob: -19.00006103515625
    8. ']' → logprob: -19.12506103515625
    9. '１' → logprob: -19.25006103515625
    10. '  ' → logprob: -19.75006103515625

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. '-' → logprob: -11.50001049041748
    3. ' ' → logprob: -14.12501049041748
    4. '
' → logprob: -18.500011444091797
    5. ']' → logprob: -19.000011444091797
    6. '```' → logprob: -19.125011444091797
    7. '   ' → logprob: -20.000011444091797
    8. '１' → logprob: -20.000011444091797
    9. ' -' → logprob: -20.125011444091797
    10. '

' → logprob: -20.750011444091797

Token 339: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -3.6312321753939614e-05
    2. ']' → logprob: -10.750036239624023
    3. ' ],' → logprob: -12.250036239624023
    4. '],[' → logprob: -12.250036239624023
    5. ']]' → logprob: -12.750036239624023
    6. '],
' → logprob: -13.000036239624023
    7. '},' → logprob: -17.000036239624023
    8. ']],' → logprob: -18.000036239624023
    9. '],

' → logprob: -18.000036239624023
    10. '()],' → logprob: -18.500036239624023

Token 340: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.228561349213123e-05
    2. '-' → logprob: -10.000052452087402
    3. '[' → logprob: -12.000052452087402
    4. ' [-' → logprob: -14.250052452087402
    5. '   ' → logprob: -16.750051498413086
    6. '{-' → logprob: -18.250051498413086
    7. '(-' → logprob: -19.875051498413086
    8. '
' → logprob: -20.125051498413086
    9. ' ' → logprob: -20.125051498413086
    10. '[:-' → logprob: -21.250051498413086

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '
' → logprob: -18.875
    4. '

' → logprob: -19.375
    5. ']' → logprob: -19.5
    6. '１' → logprob: -19.875
    7. '-' → logprob: -19.875
    8. '   ' → logprob: -20.875
    9. '```' → logprob: -20.875
    10. '१' → logprob: -21.5

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037132782745175064
    2. '0' → logprob: -8.125370979309082
    3. ' ,' → logprob: -9.500370979309082
    4. ' ' → logprob: -15.000370979309082
    5. '[' → logprob: -16.2503719329834
    6. '1' → logprob: -16.5003719329834
    7. ',
' → logprob: -17.3753719329834
    8. '2' → logprob: -18.6253719329834
    9. '],' → logprob: -18.7503719329834
    10. '   ' → logprob: -19.7503719329834

Token 343: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -17.75170135498047
    4. ',' → logprob: -18.31420135498047
    5. '۰' → logprob: -18.62670135498047
    6. '  ' → logprob: -19.00170135498047
    7. ' ' → logprob: -19.43920135498047
    8. '```' → logprob: -19.50170135498047
    9. '０' → logprob: -19.68920135498047
    10. ']' → logprob: -20.12670135498047

Token 344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.125001907348633
    4. '1' → logprob: -20.125001907348633
    5. '```' → logprob: -20.125001907348633
    6. '۰' → logprob: -20.500001907348633
    7. '
' → logprob: -20.625001907348633
    8. '  ' → logprob: -20.875001907348633
    9. '０' → logprob: -21.250001907348633
    10. '-' → logprob: -21.937501907348633

Token 345: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.000797715678345412
    2. ',' → logprob: -7.250797748565674
    3. '],[' → logprob: -10.375797271728516
    4. ' ],' → logprob: -10.500797271728516
    5. ']' → logprob: -10.625797271728516
    6. '[' → logprob: -12.625797271728516
    7. '),' → logprob: -14.500797271728516
    8. '],
' → logprob: -15.125797271728516
    9. '},' → logprob: -15.375797271728516
    10. ' ,' → logprob: -15.875797271728516

Token 346: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002038083504885435
    2. ' [' → logprob: -6.25203800201416
    3. '0' → logprob: -9.12703800201416
    4. ' ' → logprob: -14.12703800201416
    5. '[
' → logprob: -17.502038955688477
    6. ']' → logprob: -17.627038955688477
    7. '(' → logprob: -18.752038955688477
    8. '	' → logprob: -19.002038955688477
    9. ' ' → logprob: -19.002038955688477
    10. '   ' → logprob: -19.002038955688477

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006724014529027045
    2. '[' → logprob: -7.375672340393066
    3. ' ' → logprob: -10.000672340393066
    4. ' [' → logprob: -14.500672340393066
    5. '   ' → logprob: -18.000673294067383
    6. '[
' → logprob: -18.500673294067383
    7. '
' → logprob: -18.875673294067383
    8. ',' → logprob: -19.000673294067383
    9. '{' → logprob: -19.125673294067383
    10. ']' → logprob: -19.250673294067383

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010799680603668094
    2. ',-' → logprob: -6.87608003616333
    3. '-' → logprob: -10.001079559326172
    4. ',
' → logprob: -14.001079559326172
    5. ' ,' → logprob: -14.501079559326172
    6. ' ,-' → logprob: -15.876079559326172
    7. ',\
' → logprob: -16.126079559326172
    8. ' -' → logprob: -16.626079559326172
    9. ',
' → logprob: -17.751079559326172
    10. '1' → logprob: -17.876079559326172

Token 349: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. ' -' → logprob: -18.125
    3. '1' → logprob: -20.5
    4. '[-' → logprob: -20.625
    5. ']-' → logprob: -21.125
    6. '[' → logprob: -21.125
    7. '```' → logprob: -21.125
    8. '-
' → logprob: -21.25
    9. '−' → logprob: -22.375
    10. '   ' → logprob: -22.375

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -18.625
    4. ']' → logprob: -18.875
    5. '
' → logprob: -19.125
    6. '１' → logprob: -20.0
    7. '   ' → logprob: -20.125
    8. ']]' → logprob: -20.5
    9. '[' → logprob: -20.8125
    10. '

' → logprob: -20.875

Token 351: ']]

' (ID: 84024)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.2014443278312683
    2. ']' → logprob: -1.701444387435913
    3. '],' → logprob: -11.326444625854492
    4. ']}' → logprob: -12.076444625854492
    5. ')]' → logprob: -12.576444625854492
    6. ']]]' → logprob: -12.701444625854492
    7. ' ]]' → logprob: -13.076444625854492
    8. ']])' → logprob: -14.326444625854492
    9. '}]' → logprob: -14.451444625854492
    10. ']]
' → logprob: -14.576444625854492

Token 352: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011585543863475323
    2. 'class' → logprob: -4.886585712432861
    3. '#' → logprob: -5.761585712432861
    4. '<|end|>' → logprob: -8.386585235595703
    5. 'import' → logprob: -8.636585235595703
    6. 'from' → logprob: -9.011585235595703
    7. ')' → logprob: -9.636585235595703
    8. '
' → logprob: -9.886585235595703
    9. '```' → logprob: -10.261585235595703
    10. 'dp' → logprob: -10.511585235595703

Token 353: ' Read' (ID: 5405)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07087171822786331
    2. 'INF' → logprob: -3.5708718299865723
    3. 'class' → logprob: -3.6958718299865723
    4. '#' → logprob: -4.820871829986572
    5. 'from' → logprob: -5.320871829986572
    6. 'dp' → logprob: -6.820871829986572
    7. 'inf' → logprob: -7.695871829986572
    8. 'import' → logprob: -8.445871353149414
    9. 'dx' → logprob: -9.195871353149414
    10. 'n' → logprob: -9.695871353149414

Token 354: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2451711893081665
    2. 'H' → logprob: -2.495171070098877
    3. 'N' → logprob: -2.745171070098877
    4. 'h' → logprob: -3.120171070098877
    5. ' =' → logprob: -4.870171070098877
    6. '()' → logprob: -5.620171070098877
    7. 'Q' → logprob: -5.870171070098877
    8. 's' → logprob: -6.120171070098877
    9. ' n' → logprob: -6.370171070098877
    10. 't' → logprob: -6.370171070098877

Token 355: ' number' (ID: 2086)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11384633928537369
    2. 'N' → logprob: -2.4888463020324707
    3. 'def' → logprob: -4.238846302032471
    4. 't' → logprob: -5.988846302032471
    5. 'input' → logprob: -6.488846302032471
    6. 'number' → logprob: -6.613846302032471
    7. 's' → logprob: -6.863846302032471
    8. 'S' → logprob: -7.113846302032471
    9. 'Q' → logprob: -7.863846302032471
    10. 'q' → logprob: -7.988846302032471

Token 356: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.304914116859436
    2. '()' → logprob: -1.304914116859436
    3. '=' → logprob: -2.1799139976501465
    4. 's' → logprob: -2.1799139976501465
    5. 'of' → logprob: -2.4299139976501465
    6. '(' → logprob: -2.6799139976501465
    7. '_' → logprob: -3.3049139976501465
    8. 'n' → logprob: -4.0549139976501465
    9. 'N' → logprob: -4.8049139976501465
    10. '_of' → logprob: -5.0549139976501465

Token 357: ' elements' (ID: 8632)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7724025249481201
    2. 'n' → logprob: -1.0224025249481201
    3. 'test' → logprob: -2.64740252494812
    4. 's' → logprob: -3.14740252494812
    5. 'T' → logprob: -3.39740252494812
    6. 'N' → logprob: -5.647402763366699
    7. ' test' → logprob: -5.772402763366699
    8. 'def' → logprob: -5.897402763366699
    9. 'rows' → logprob: -5.897402763366699
    10. 'Q' → logprob: -6.272402763366699

Token 358: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02463763765990734
    2. 'N' → logprob: -3.7746376991271973
    3. '
' → logprob: -6.899637699127197
    4. ' =' → logprob: -8.524637222290039
    5. '=' → logprob: -8.774637222290039
    6. '(n' → logprob: -11.524637222290039
    7. '_n' → logprob: -11.899637222290039
    8. '=n' → logprob: -11.899637222290039
    9. ':' → logprob: -13.899637222290039
    10. '=
' → logprob: -14.399637222290039

Token 359: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.061980459839105606
    2. 'N' → logprob: -2.8119804859161377
    3. '
' → logprob: -12.186980247497559
    4. 'num' → logprob: -13.186980247497559
    5. '_n' → logprob: -14.061980247497559
    6. ' n' → logprob: -14.061980247497559
    7. '```' → logprob: -14.186980247497559
    8. '   ' → logprob: -14.436980247497559
    9. 'q' → logprob: -14.561980247497559
    10. 'a' → logprob: -14.686980247497559

Token 360: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12701578438282013
    2. ' =' → logprob: -2.1270158290863037
    3. ',' → logprob: -9.627016067504883
    4. '=int' → logprob: -10.752016067504883
    5. '＝' → logprob: -16.252016067504883
    6. ' ' → logprob: -16.252016067504883
    7. '=input' → logprob: -16.377016067504883
    8. '   ' → logprob: -16.627016067504883
    9. '=

' → logprob: -17.127016067504883
    10. ')' → logprob: -17.127016067504883

Token 361: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007102862582542002
    2. ' int' → logprob: -7.250710487365723
    3. '=int' → logprob: -16.125709533691406
    4. 'input' → logprob: -16.250709533691406
    5. '(int' → logprob: -17.375709533691406
    6. '	int' → logprob: -17.625709533691406
    7. ' ' → logprob: -18.000709533691406
    8. 'in' → logprob: -18.250709533691406
    9. 'ints' → logprob: -18.375709533691406
    10. '   ' → logprob: -18.375709533691406

Token 362: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002421202603727579
    2. '(' → logprob: -6.7524213790893555
    3. 'input' → logprob: -6.7524213790893555
    4. '()' → logprob: -10.127421379089355
    5. '(sys' → logprob: -10.127421379089355
    6. '(
' → logprob: -13.627421379089355
    7. ' input' → logprob: -14.752421379089355
    8. '=input' → logprob: -15.377421379089355
    9. ' (' → logprob: -16.25242042541504
    10. ',input' → logprob: -16.50242042541504

Token 363: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012678514467552304
    2. '()' → logprob: -6.751267910003662
    3. ')' → logprob: -9.251267433166504
    4. '())
' → logprob: -14.251267433166504
    5. ' ())' → logprob: -14.751267433166504
    6. '();)' → logprob: -15.376267433166504
    7. '()))' → logprob: -16.12626838684082
    8. '().' → logprob: -16.12626838684082
    9. '()]' → logprob: -16.50126838684082
    10. '(' → logprob: -17.12626838684082

Token 364: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41667529940605164
    2. 'lst' → logprob: -1.291675329208374
    3. 'arr' → logprob: -3.166675329208374
    4. 'data' → logprob: -3.916675329208374
    5. 's' → logprob: -5.916675090789795
    6. 'A' → logprob: -6.916675090789795
    7. 'v' → logprob: -10.291675567626953
    8. 'values' → logprob: -10.416675567626953
    9. 'array' → logprob: -10.791675567626953
    10. 'd' → logprob: -10.791675567626953

Token 365: ' Read' (ID: 5405)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.43686267733573914
    2. 'a' → logprob: -1.4368627071380615
    3. 'arr' → logprob: -2.3118627071380615
    4. 'A' → logprob: -4.686862468719482
    5. 'data' → logprob: -4.936862468719482
    6. 's' → logprob: -7.811862468719482
    7. 'nums' → logprob: -9.43686294555664
    8. 'numbers' → logprob: -9.56186294555664
    9. 'values' → logprob: -9.93686294555664
    10. '#' → logprob: -10.18686294555664

Token 366: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4104611277580261
    2. 'lst' → logprob: -1.410461187362671
    3. 'arr' → logprob: -2.660461187362671
    4. 's' → logprob: -4.535460948944092
    5. '()' → logprob: -6.285460948944092
    6. 'A' → logprob: -6.285460948944092
    7. ' lst' → logprob: -6.535460948944092
    8. ' a' → logprob: -6.785460948944092
    9. 'data' → logprob: -6.910460948944092
    10. '(a' → logprob: -7.285460948944092

Token 367: ' list' (ID: 1562)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.4114369750022888
    2. '()' → logprob: -1.4114370346069336
    3. 's' → logprob: -3.0364370346069336
    4. ' =' → logprob: -4.786437034606934
    5. 'arr' → logprob: -5.036437034606934
    6. 'list' → logprob: -5.161437034606934
    7. '_lst' → logprob: -5.161437034606934
    8. 'a' → logprob: -5.161437034606934
    9. '_list' → logprob: -5.411437034606934
    10. '_' → logprob: -6.286437034606934

Token 368: ' of' (ID: 328)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.2419210970401764
    2. 'a' → logprob: -2.3669211864471436
    3. '=' → logprob: -3.2419211864471436
    4. '(lst' → logprob: -3.3669211864471436
    5. '_lst' → logprob: -4.6169209480285645
    6. '_a' → logprob: -4.8669209480285645
    7. '()' → logprob: -5.1169209480285645
    8. ' =' → logprob: -5.1169209480285645
    9. 's' → logprob: -5.6169209480285645
    10. 'of' → logprob: -5.6169209480285645

Token 369: ' integers' (ID: 54912)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.721968948841095
    2. 'ints' → logprob: -0.971968948841095
    3. 'int' → logprob: -2.72196888923645
    4. ' integers' → logprob: -2.72196888923645
    5. 'numbers' → logprob: -5.846969127655029
    6. 'map' → logprob: -6.846969127655029
    7. 'list' → logprob: -8.346968650817871
    8. ' ints' → logprob: -9.846968650817871
    9. 'integer' → logprob: -10.221968650817871
    10. '[int' → logprob: -10.346968650817871

Token 370: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1476319581270218
    2. 'lst' → logprob: -2.022631883621216
    3. 'A' → logprob: -6.022632122039795
    4. 'arr' → logprob: -6.897632122039795
    5. 'l' → logprob: -7.022632122039795
    6. ' =' → logprob: -8.897631645202637
    7. 'data' → logprob: -9.147631645202637
    8. 'ls' → logprob: -9.897631645202637
    9. 'li' → logprob: -10.147631645202637
    10. '=' → logprob: -10.272631645202637

Token 371: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45728009939193726
    2. 'lst' → logprob: -1.082280158996582
    3. 'A' → logprob: -4.332280158996582
    4. 'arr' → logprob: -4.457280158996582
    5. 'l' → logprob: -7.082280158996582
    6. 'data' → logprob: -7.207280158996582
    7. 'nums' → logprob: -7.832280158996582
    8. 'ls' → logprob: -8.082280158996582
    9. 'p' → logprob: -8.457280158996582
    10. 'v' → logprob: -8.457280158996582

Token 372: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141693949699402
    2. ' =' → logprob: -1.7014169692993164
    3. '()' → logprob: -13.201416969299316
    4. '(' → logprob: -14.951416969299316
    5. ')' → logprob: -15.076416969299316
    6. '=[]' → logprob: -15.451416969299316
    7. '_' → logprob: -15.951416969299316
    8. 'a' → logprob: -15.951416969299316
    9. 's' → logprob: -16.076416015625
    10. '[]' → logprob: -16.201416015625

Token 373: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.836499985889532e-05
    2. ' list' → logprob: -9.7500581741333
    3. '[list' → logprob: -18.750059127807617
    4. 'map' → logprob: -19.625059127807617
    5. '[' → logprob: -19.875059127807617
    6. '=list' → logprob: -21.125059127807617
    7. '	list' → logprob: -21.500059127807617
    8. '(list' → logprob: -21.750059127807617
    9. ':list' → logprob: -23.000059127807617
    10. 'li' → logprob: -23.125059127807617

Token 374: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.4121114822482923e-06
    2. 'map' → logprob: -13.000003814697266
    3. '(' → logprob: -13.750003814697266
    4. '()' → logprob: -17.125003814697266
    5. '(m' → logprob: -17.625003814697266
    6. '(
' → logprob: -18.125003814697266
    7. ' map' → logprob: -19.000003814697266
    8. '(int' → logprob: -20.000003814697266
    9. '	map' → logprob: -20.000003814697266
    10. '(list' → logprob: -20.125003814697266

Token 375: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008722590282559395
    2. 'int' → logprob: -4.75872278213501
    3. '(' → logprob: -9.258722305297852
    4. '(
' → logprob: -12.758722305297852
    5. '[int' → logprob: -13.008722305297852
    6. '<int' → logprob: -13.258722305297852
    7. ',int' → logprob: -13.633722305297852
    8. '=int' → logprob: -13.633722305297852
    9. '(input' → logprob: -14.008722305297852
    10. 'input' → logprob: -14.133722305297852

Token 376: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.17000873386859894
    2. 'input' → logprob: -2.045008659362793
    3. ',' → logprob: -4.045008659362793
    4. '(input' → logprob: -4.670008659362793
    5. ' input' → logprob: -9.920008659362793
    6. '=input' → logprob: -10.795008659362793
    7. ' ,' → logprob: -12.920008659362793
    8. '[input' → logprob: -13.170008659362793
    9. '(' → logprob: -13.545008659362793
    10. '	input' → logprob: -13.795008659362793

Token 377: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002613358374219388
    2. ' input' → logprob: -8.250261306762695
    3. '(input' → logprob: -16.500261306762695
    4. ',input' → logprob: -17.375261306762695
    5. '   ' → logprob: -17.625261306762695
    6. ' ' → logprob: -18.750261306762695
    7. '
' → logprob: -18.875261306762695
    8. 'str' → logprob: -19.250261306762695
    9. '<input' → logprob: -19.500261306762695
    10. '	input' → logprob: -19.500261306762695

Token 378: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.750000953674316
    3. ' ().' → logprob: -16.875001907348633
    4. '(' → logprob: -18.250001907348633
    5. '()
' → logprob: -19.375001907348633
    6. 'split' → logprob: -19.875001907348633
    7. '.split' → logprob: -20.500001907348633
    8. 's' → logprob: -21.875001907348633
    9. '   ' → logprob: -22.375001907348633
    10. '.' → logprob: -22.500001907348633

Token 379: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002614550176076591
    2. 'strip' → logprob: -8.250261306762695
    3. 'rstrip' → logprob: -16.125261306762695
    4. ' split' → logprob: -16.750261306762695
    5. '(split' → logprob: -18.750261306762695
    6. 'spl' → logprob: -19.250261306762695
    7. '.split' → logprob: -19.875261306762695
    8. ')' → logprob: -21.250261306762695
    9. '_split' → logprob: -21.250261306762695
    10. 's' → logprob: -21.500261306762695

Token 380: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.022872356697916985
    2. '()' → logprob: -4.147872447967529
    3. '))' → logprob: -5.022872447967529
    4. '())' → logprob: -8.897871971130371
    5. '(' → logprob: -9.522871971130371
    6. '()))
' → logprob: -11.897871971130371
    7. '()));' → logprob: -12.272871971130371
    8. '(),' → logprob: -12.397871971130371
    9. ')' → logprob: -13.772871971130371
    10. '())))' → logprob: -14.147871971130371

Token 381: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6493247747421265
    2. 'a' → logprob: -1.1493247747421265
    3. '#' → logprob: -2.774324893951416
    4. 'd' → logprob: -3.774324893951416
    5. 'max' → logprob: -4.399324893951416
    6. 'result' → logprob: -4.524324893951416
    7. 'm' → logprob: -4.899324893951416
    8. 'ans' → logprob: -5.024324893951416
    9. 'answer' → logprob: -5.149324893951416
    10. 'sorted' → logprob: -5.274324893951416

Token 382: ' Initialize' (ID: 19496)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8884316086769104
    2. 'a' → logprob: -1.1384315490722656
    3. '#' → logprob: -2.1384315490722656
    4. 'b' → logprob: -3.8884315490722656
    5. 'ans' → logprob: -3.8884315490722656
    6. 'def' → logprob: -3.8884315490722656
    7. 'd' → logprob: -4.388431549072266
    8. 'q' → logprob: -4.513431549072266
    9. 'sorted' → logprob: -4.513431549072266
    10. 'cnt' → logprob: -4.638431549072266

Token 383: ' answer' (ID: 6052)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006386010441929102
    2. 'ans' → logprob: -5.256385803222656
    3. 'b' → logprob: -7.631385803222656
    4. 'res' → logprob: -8.131385803222656
    5. 'answer' → logprob: -9.131385803222656
    6. 'result' → logprob: -9.631385803222656
    7. 'd' → logprob: -9.881385803222656
    8. ' dp' → logprob: -9.881385803222656
    9. 'cnt' → logprob: -10.631385803222656
    10. 'dist' → logprob: -11.131385803222656

Token 384: ' to' (ID: 316)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05282912030816078
    2. ' =' → logprob: -3.5528290271759033
    3. '=' → logprob: -3.8028290271759033
    4. 'answer' → logprob: -8.427828788757324
    5. ' ans' → logprob: -9.052828788757324
    6. 'a' → logprob: -9.302828788757324
    7. '(ans' → logprob: -10.302828788757324
    8. '_ans' → logprob: -10.552828788757324
    9. '0' → logprob: -11.427828788757324
    10. '_' → logprob: -12.802828788757324

Token 385: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016120469197630882
    2. 'float' → logprob: -4.516120433807373
    3. 'math' → logprob: -6.016120433807373
    4. 'a' → logprob: -6.891120433807373
    5. 'max' → logprob: -7.516120433807373
    6. '-' → logprob: -7.891120433807373
    7. ' ' → logprob: -7.891120433807373
    8. 'inf' → logprob: -9.516120910644531
    9. ' float' → logprob: -9.891120910644531
    10. 'n' → logprob: -10.391120910644531

Token 386: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006448837229982018
    2. 'float' → logprob: -7.750644683837891
    3. 'math' → logprob: -9.37564468383789
    4. 'a' → logprob: -9.75064468383789
    5. '-' → logprob: -10.25064468383789
    6. 'max' → logprob: -10.62564468383789
    7. 'n' → logprob: -12.87564468383789
    8. 'ans' → logprob: -12.87564468383789
    9. '[' → logprob: -13.37564468383789
    10. '1' → logprob: -13.62564468383789

Token 387: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0008302362984977663
    2. 'answer' → logprob: -7.125830173492432
    3. 'a' → logprob: -11.37583065032959
    4. '
' → logprob: -12.37583065032959
    5. ' ans' → logprob: -12.62583065032959
    6. '_ans' → logprob: -13.12583065032959
    7. '```' → logprob: -13.37583065032959
    8. '(ans' → logprob: -13.62583065032959
    9. 'ANS' → logprob: -15.00083065032959
    10. '=' → logprob: -15.00083065032959

Token 388: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0003362966235727072
    2. 'answer' → logprob: -8.000336647033691
    3. ' ans' → logprob: -15.375336647033691
    4. '_ans' → logprob: -15.500336647033691
    5. 'a' → logprob: -15.750336647033691
    6. 'ANS' → logprob: -16.250335693359375
    7. '```' → logprob: -16.375335693359375
    8. '(ans' → logprob: -16.375335693359375
    9. 'an' → logprob: -17.000335693359375
    10. 'anw' → logprob: -17.000335693359375

Token 389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014281451702118
    2. '=' → logprob: -1.7014281749725342
    3. ' ' → logprob: -11.201428413391113
    4. ')' → logprob: -14.576428413391113
    5. ',' → logprob: -15.451428413391113
    6. '_' → logprob: -15.951428413391113
    7. ' =)' → logprob: -16.076427459716797
    8. ' =
' → logprob: -16.201427459716797
    9. ' ' → logprob: -16.326427459716797
    10. '.' → logprob: -16.576427459716797

Token 390: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000804745068307966
    2. ' ' → logprob: -7.125804901123047
    3. 'a' → logprob: -16.250804901123047
    4. ' ' → logprob: -17.750804901123047
    5. '=' → logprob: -18.000804901123047
    6. 'max' → logprob: -18.000804901123047
    7. 'n' → logprob: -18.250804901123047
    8. '   ' → logprob: -18.375804901123047
    9. '1' → logprob: -18.438304901123047
    10. '۰' → logprob: -18.563304901123047

Token 391: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. 'a' → logprob: -13.250004768371582
    3. 'max' → logprob: -14.250004768371582
    4. 'float' → logprob: -14.250004768371582
    5. '-' → logprob: -14.625004768371582
    6. ' ' → logprob: -14.625004768371582
    7. 'ans' → logprob: -15.500004768371582
    8. '[' → logprob: -16.2500057220459
    9. 'math' → logprob: -16.3750057220459
    10. 'sum' → logprob: -16.5000057220459

Token 392: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030815793201327324
    2. '#' → logprob: -3.780815839767456
    3. 'dp' → logprob: -6.280815601348877
    4. 'd' → logprob: -6.530815601348877
    5. 'max' → logprob: -6.905815601348877
    6. 'a' → logprob: -7.280815601348877
    7. 'freq' → logprob: -7.780815601348877
    8. 'def' → logprob: -7.905815601348877
    9. 'from' → logprob: -8.280816078186035
    10. ')' → logprob: -8.655816078186035

Token 394: ' Two' (ID: 13311)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29419609904289246
    2. 'dp' → logprob: -2.294196128845215
    3. 'freq' → logprob: -2.919196128845215
    4. 'a' → logprob: -3.294196128845215
    5. 'count' → logprob: -4.044196128845215
    6. 'cnt' → logprob: -4.544196128845215
    7. 'from' → logprob: -4.794196128845215
    8. 'd' → logprob: -5.044196128845215
    9. 'counter' → logprob: -5.169196128845215
    10. '#' → logprob: -5.419196128845215

Token 395: ' pointers' (ID: 58762)
  Prédit: 'pointer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pointer' → logprob: -0.8417121171951294
    2. 'p' → logprob: -1.4667121171951294
    3. '-pointer' → logprob: -1.7167121171951294
    4. 'for' → logprob: -2.09171199798584
    5. '_pointer' → logprob: -4.21671199798584
    6. ' pointers' → logprob: -4.96671199798584
    7. ' for' → logprob: -5.34171199798584
    8. 'ptr' → logprob: -5.46671199798584
    9. '-p' → logprob: -6.46671199798584
    10. '#' → logprob: -7.09171199798584

Token 396: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3063880503177643
    2. 'i' → logprob: -1.431388020515442
    3. 'left' → logprob: -4.056387901306152
    4. ' =' → logprob: -5.056387901306152
    5. ' l' → logprob: -7.681387901306152
    6. ' i' → logprob: -8.556387901306152
    7. '=' → logprob: -8.681387901306152
    8. ' left' → logprob: -9.556387901306152
    9. '
' → logprob: -9.931387901306152
    10. 'L' → logprob: -10.056387901306152

Token 397: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10167469829320908
    2. ' =' → logprob: -2.351674795150757
    3. '=' → logprob: -6.851674556732178
    4. ' ,' → logprob: -7.851674556732178
    5. '1' → logprob: -12.726675033569336
    6. ' and' → logprob: -12.726675033569336
    7. ',r' → logprob: -13.101675033569336
    8. ',l' → logprob: -13.101675033569336
    9. ' ' → logprob: -13.226675033569336
    10. 'f' → logprob: -13.601675033569336

Token 398: 'left' (ID: 4530)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03854619339108467
    2. '=' → logprob: -3.663546085357666
    3. ' =' → logprob: -5.413546085357666
    4. ')' → logprob: -5.538546085357666
    5. ',r' → logprob: -6.288546085357666
    6. ' ,' → logprob: -7.413546085357666
    7. ',right' → logprob: -7.538546085357666
    8. '),' → logprob: -8.663546562194824
    9. 'and' → logprob: -8.788546562194824
    10. 'r' → logprob: -8.913546562194824

Token 399: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008262312039732933
    2. ' =' → logprob: -5.6332621574401855
    3. '=' → logprob: -5.8832621574401855
    4. ')' → logprob: -6.3832621574401855
    5. '),' → logprob: -9.883262634277344
    6. ' ,' → logprob: -10.133262634277344
    7. ',
' → logprob: -10.508262634277344
    8. ' and' → logprob: -10.633262634277344
    9. 'and' → logprob: -11.633262634277344
    10. ',right' → logprob: -12.508262634277344

Token 400: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.722743034362793
    2. '=' → logprob: -0.722743034362793
    3. ' =' → logprob: -4.097743034362793
    4. 'r' → logprob: -4.847743034362793
    5. ',r' → logprob: -5.972743034362793
    6. 'and' → logprob: -6.972743034362793
    7. ' and' → logprob: -7.597743034362793
    8. ',right' → logprob: -7.847743034362793
    9. '=r' → logprob: -9.722743034362793
    10. 'n' → logprob: -9.722743034362793

Token 401: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01815134845674038
    2. ' r' → logprob: -4.01815128326416
    3. '
' → logprob: -15.51815128326416
    4. '	r' → logprob: -15.64315128326416
    5. ',r' → logprob: -15.89315128326416
    6. '=r' → logprob: -16.143152236938477
    7. ' =' → logprob: -16.143152236938477
    8. ' ' → logprob: -16.143152236938477
    9. '```' → logprob: -16.393152236938477
    10. '_r' → logprob: -16.393152236938477

Token 402: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23825930058956146
    2. '=' → logprob: -1.6132593154907227
    3. ',' → logprob: -4.363259315490723
    4. ' ' → logprob: -10.863259315490723
    5. ' ,' → logprob: -12.488259315490723
    6. ')' → logprob: -13.363259315490723
    7. ' =
' → logprob: -14.738259315490723
    8. 'r' → logprob: -14.863259315490723
    9. '=int' → logprob: -15.363259315490723
    10. ' ' → logprob: -15.488259315490723

Token 403: 'right' (ID: 2460)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.037856586277484894
    2. ')' → logprob: -3.5378565788269043
    3. '=' → logprob: -5.912856578826904
    4. '1' → logprob: -6.662856578826904
    5. 'right' → logprob: -6.662856578826904
    6. 'n' → logprob: -6.912856578826904
    7. ' ' → logprob: -7.162856578826904
    8. 'r' → logprob: -7.787856578826904
    9. ' =' → logprob: -8.537857055664062
    10. ' right' → logprob: -9.162857055664062

Token 404: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5581422448158264
    2. ' =' → logprob: -1.5581421852111816
    3. '=' → logprob: -1.8081421852111816
    4. ')' → logprob: -3.4331421852111816
    5. ']' → logprob: -3.9331421852111816
    6. ']=' → logprob: -7.808142185211182
    7. 'r' → logprob: -8.68314266204834
    8. ' ,' → logprob: -8.68314266204834
    9. ')=' → logprob: -8.93314266204834
    10. ' ]' → logprob: -9.68314266204834

Token 405: ' both' (ID: 2973)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3782695531845093
    2. '=' → logprob: -1.3782695531845093
    3. 'l' → logprob: -3.753269672393799
    4. ' l' → logprob: -3.878269672393799
    5. 'r' → logprob: -4.628269672393799
    6. ',' → logprob: -5.003269672393799
    7. '0' → logprob: -7.128269672393799
    8. ' ' → logprob: -7.378269672393799
    9. ' r' → logprob: -7.878269672393799
    10. ' ,' → logprob: -8.62826919555664

Token 406: ' initially' (ID: 25998)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00023083435371518135
    2. ' =' → logprob: -8.37523078918457
    3. ',' → logprob: -15.50023078918457
    4. '0' → logprob: -17.87523078918457
    5. '=
' → logprob: -17.87523078918457
    6. '=l' → logprob: -17.87523078918457
    7. '=int' → logprob: -18.37523078918457
    8. '＝' → logprob: -19.62523078918457
    9. 'l' → logprob: -19.87523078918457
    10. 'r' → logprob: -20.00023078918457

Token 407: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0054118577390909195
    2. '0' → logprob: -5.255411624908447
    3. ' =' → logprob: -9.130412101745605
    4. 'at' → logprob: -9.630412101745605
    5. 'set' → logprob: -12.880412101745605
    6. ' at' → logprob: -15.005412101745605
    7. 'l' → logprob: -15.255412101745605
    8. '=l' → logprob: -15.505412101745605
    9. '=
' → logprob: -15.630412101745605
    10. 'in' → logprob: -15.880412101745605

Token 408: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. 'n' → logprob: -16.625045776367188
    4. 'l' → logprob: -17.625045776367188
    5. 'r' → logprob: -19.375045776367188
    6. 'ans' → logprob: -19.375045776367188
    7. '-' → logprob: -19.375045776367188
    8. '=' → logprob: -19.750045776367188
    9. '   ' → logprob: -19.750045776367188
    10. '1' → logprob: -20.000045776367188

Token 409: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. 'n' → logprob: -13.625001907348633
    3. ' ' → logprob: -15.250001907348633
    4. 'l' → logprob: -16.250001907348633
    5. 'r' → logprob: -16.625001907348633
    6. '=' → logprob: -18.500001907348633
    7. 'zero' → logprob: -18.875001907348633
    8. '1' → logprob: -19.250001907348633
    9. '```' → logprob: -19.375001907348633
    10. 'the' → logprob: -19.375001907348633

Token 410: '
' (ID: 198)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0029104314744472504
    2. '
' → logprob: -6.002910614013672
    3. ',' → logprob: -8.377910614013672
    4. ' l' → logprob: -9.002910614013672
    5. ' =' → logprob: -10.377910614013672
    6. 'r' → logprob: -10.502910614013672
    7. ',l' → logprob: -11.877910614013672
    8. '=' → logprob: -12.127910614013672
    9. ',
' → logprob: -12.627910614013672
    10. '_l' → logprob: -13.127910614013672

Token 411: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4617256056226324e-05
    2. ' l' → logprob: -11.500014305114746
    3. ',' → logprob: -13.250014305114746
    4. 'r' → logprob: -13.500014305114746
    5. '
' → logprob: -14.375014305114746
    6. '[' → logprob: -16.125015258789062
    7. '=' → logprob: -16.250015258789062
    8. ' =' → logprob: -16.500015258789062
    9. '[l' → logprob: -16.500015258789062
    10. '_l' → logprob: -16.750015258789062

Token 412: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6582469344139099
    2. ',' → logprob: -1.1582469940185547
    3. ' =' → logprob: -1.7832469940185547
    4. ',r' → logprob: -9.408246994018555
    5. ',l' → logprob: -11.783246994018555
    6. '=r' → logprob: -11.908246994018555
    7. ' ,' → logprob: -12.533246994018555
    8. ',
' → logprob: -12.658246994018555
    9. ')' → logprob: -13.158246994018555
    10. '=l' → logprob: -13.408246994018555

Token 413: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39209574460983276
    2. ' r' → logprob: -1.1420958042144775
    3. '0' → logprob: -5.517095565795898
    4. ' ' → logprob: -7.142095565795898
    5. '=' → logprob: -8.517095565795898
    6. ' =' → logprob: -8.517095565795898
    7. '=r' → logprob: -14.142095565795898
    8. ',' → logprob: -15.017095565795898
    9. ' 
' → logprob: -15.142095565795898
    10. 'l' → logprob: -15.642095565795898

Token 414: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975199744105339
    2. ' =' → logprob: -3.529752016067505
    3. ',' → logprob: -13.529751777648926
    4. '＝' → logprob: -17.029752731323242
    5. '=l' → logprob: -17.654752731323242
    6. ' ' → logprob: -17.654752731323242
    7. '=}' → logprob: -17.654752731323242
    8. '=int' → logprob: -17.779752731323242
    9. '0' → logprob: -17.904752731323242
    10. '=
' → logprob: -18.154752731323242

Token 415: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '(' → logprob: -14.625031471252441
    4. '00' → logprob: -18.000032424926758
    5. '[' → logprob: -19.000032424926758
    6. '=' → logprob: -19.375032424926758
    7. '   ' → logprob: -19.875032424926758
    8. '۰' → logprob: -20.000032424926758
    9. '
' → logprob: -20.375032424926758
    10. ',' → logprob: -20.500032424926758

Token 416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '(' → logprob: -17.500001907348633
    4. '00' → logprob: -19.500001907348633
    5. '=' → logprob: -20.000001907348633
    6. '[' → logprob: -20.500001907348633
    7. '۰' → logprob: -20.625001907348633
    8. '０' → logprob: -21.062501907348633
    9. 'l' → logprob: -21.125001907348633
    10. '```' → logprob: -21.375001907348633

Token 417: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 418: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -15.625006675720215
    4. 'l' → logprob: -18.7500057220459
    5. 'n' → logprob: -19.0625057220459
    6. '-' → logprob: -19.3125057220459
    7. '۰' → logprob: -19.3750057220459
    8. '   ' → logprob: -20.0625057220459
    9. 'a' → logprob: -20.1875057220459
    10. '０' → logprob: -20.2500057220459

Token 419: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. 'n' → logprob: -12.500004768371582
    3. '-' → logprob: -14.625004768371582
    4. '1' → logprob: -15.625004768371582
    5. 'l' → logprob: -16.125003814697266
    6. ' ' → logprob: -17.000003814697266
    7. 'r' → logprob: -18.687503814697266
    8. 'len' → logprob: -19.062503814697266
    9. '```' → logprob: -19.125003814697266
    10. 'a' → logprob: -19.437503814697266

Token 420: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5266798734664917
    2. '<|end|>' → logprob: -0.9016798734664917
    3. 'while' → logprob: -6.026679992675781
    4. 'max' → logprob: -8.651679992675781
    5. 'sum' → logprob: -9.026679992675781
    6. ')' → logprob: -9.026679992675781
    7. '#' → logprob: -9.151679992675781
    8. ',' → logprob: -9.276679992675781
    9. 'count' → logprob: -9.526679992675781
    10. '<|end|>' → logprob: -9.651679992675781

Token 421: '#' (ID: 2)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.4185841977596283
    2. 'count' → logprob: -1.7935842275619507
    3. 'counter' → logprob: -3.168584108352661
    4. 'counts' → logprob: -3.418584108352661
    5. 'cnt' → logprob: -3.793584108352661
    6. 'seen' → logprob: -3.918584108352661
    7. 'current' → logprob: -4.29358434677124
    8. 'while' → logprob: -4.29358434677124
    9. 'frequency' → logprob: -4.54358434677124
    10. 'visited' → logprob: -5.16858434677124

Token 422: ' cnt' (ID: 27340)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.8139787912368774
    2. 'count' → logprob: -1.4389787912368774
    3. 'counter' → logprob: -2.188978672027588
    4. 'cnt' → logprob: -2.813978672027588
    5. 'counts' → logprob: -2.938978672027588
    6. 'while' → logprob: -3.813978672027588
    7. 'from' → logprob: -4.063978672027588
    8. 'window' → logprob: -4.188978672027588
    9. 'd' → logprob: -4.313978672027588
    10. 'seen' → logprob: -4.438978672027588

Token 423: ' will' (ID: 738)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029752805829048157
    2. '=' → logprob: -3.529752731323242
    3. ',' → logprob: -13.904752731323242
    4. '={}' → logprob: -15.279752731323242
    5. ' ' → logprob: -15.404752731323242
    6. 's' → logprob: -15.404752731323242
    7. '=[' → logprob: -15.904752731323242
    8. '=[]' → logprob: -16.029752731323242
    9. ' =[' → logprob: -16.529752731323242
    10. ' ={' → logprob: -16.654752731323242

Token 424: ' store' (ID: 4897)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020556719973683357
    2. ' =' → logprob: -3.895556688308716
    3. 'default' → logprob: -12.020556449890137
    4. '={}' → logprob: -12.270556449890137
    5. ' defaultdict' → logprob: -12.895556449890137
    6. '={' → logprob: -14.520556449890137
    7. '=[]' → logprob: -14.645556449890137
    8. '=[' → logprob: -16.020557403564453
    9. '<|end|>' → logprob: -16.020557403564453
    10. '[' → logprob: -16.395557403564453

Token 425: ' the' (ID: 290)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.36504581570625305
    2. 'default' → logprob: -1.4900457859039307
    3. '{' → logprob: -2.8650457859039307
    4. ' defaultdict' → logprob: -4.49004602432251
    5. '[' → logprob: -4.86504602432251
    6. '[]' → logprob: -6.24004602432251
    7. '=' → logprob: -7.11504602432251
    8. ')' → logprob: -7.86504602432251
    9. '0' → logprob: -8.490045547485352
    10. ' =' → logprob: -8.490045547485352

Token 426: ' sum' (ID: 4215)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.5801913142204285
    2. '{}' → logprob: -0.8301913142204285
    3. '{' → logprob: -5.580191135406494
    4. '[]' → logprob: -8.955191612243652
    5. 'Counter' → logprob: -9.205191612243652
    6. ' defaultdict' → logprob: -9.205191612243652
    7. '[' → logprob: -10.205191612243652
    8. 'dict' → logprob: -10.955191612243652
    9. '{})' → logprob: -11.205191612243652
    10. '0' → logprob: -11.580191612243652

Token 427: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3388441801071167
    2. '=' → logprob: -1.8388441801071167
    3. '_' → logprob: -2.8388442993164062
    4. 'a' → logprob: -3.8388442993164062
    5. 's' → logprob: -4.338844299316406
    6. ')' → logprob: -5.213844299316406
    7. ',' → logprob: -5.463844299316406
    8. ' of' → logprob: -5.588844299316406
    9. '_counts' → logprob: -5.713844299316406
    10. 'cnt' → logprob: -5.838844299316406

Token 428: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03040740266442299
    2. 'the' → logprob: -4.030407428741455
    3. 'current' → logprob: -4.655407428741455
    4. 'elements' → logprob: -6.530407428741455
    5. '0' → logprob: -8.155406951904297
    6. 'window' → logprob: -8.280406951904297
    7. ' a' → logprob: -8.655406951904297
    8. ' the' → logprob: -9.530406951904297
    9. 'values' → logprob: -9.905406951904297
    10. ' current' → logprob: -10.030406951904297

Token 429: ' current' (ID: 2208)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8319189548492432
    2. 'current' → logprob: -0.8319189548492432
    3. 'elements' → logprob: -2.206918954849243
    4. 'window' → logprob: -4.581918716430664
    5. 'values' → logprob: -4.956918716430664
    6. 'sub' → logprob: -7.331918716430664
    7. 'numbers' → logprob: -7.456918716430664
    8. 'currently' → logprob: -8.206918716430664
    9. ' current' → logprob: -8.331918716430664
    10. ' elements' → logprob: -8.831918716430664

Token 430: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.03823702409863472
    2. 'sub' → logprob: -3.7882370948791504
    3. 'segment' → logprob: -4.78823709487915
    4. 'a' → logprob: -5.91323709487915
    5. ' window' → logprob: -6.16323709487915
    6. 'elements' → logprob: -7.28823709487915
    7. 'values' → logprob: -8.788236618041992
    8. '<|end|>' → logprob: -8.913236618041992
    9. ' sub' → logprob: -9.163236618041992
    10. '_window' → logprob: -9.288236618041992

Token 431: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5247384309768677
    2. ' =' → logprob: -0.8997384309768677
    3. ',' → logprob: -6.899738311767578
    4. 'sum' → logprob: -8.524738311767578
    5. 's' → logprob: -9.274738311767578
    6. 'cnt' → logprob: -9.524738311767578
    7. '=sum' → logprob: -10.149738311767578
    8. ')' → logprob: -10.274738311767578
    9. ' ' → logprob: -10.399738311767578
    10. '_' → logprob: -10.524738311767578

Token 432: ' xor' (ID: 106402)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.273867130279541
    2. ' ' → logprob: -1.648867130279541
    3. 'sum' → logprob: -3.773867130279541
    4. 'cnt' → logprob: -4.648867130279541
    5. 'a' → logprob: -5.398867130279541
    6. '=' → logprob: -6.523867130279541
    7. 's' → logprob: -6.523867130279541
    8. ' sum' → logprob: -7.023867130279541
    9. ' =' → logprob: -7.023867130279541
    10. ')' → logprob: -7.273867130279541

Token 433: ' the' (ID: 290)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1201155185699463
    2. '=' → logprob: -1.1201155185699463
    3. ' =' → logprob: -1.2451155185699463
    4. '_val' → logprob: -4.620115280151367
    5. '_sum' → logprob: -4.620115280151367
    6. '_cnt' → logprob: -4.620115280151367
    7. 's' → logprob: -4.870115280151367
    8. 'sum' → logprob: -4.995115280151367
    9. 'cnt' → logprob: -5.245115280151367
    10. '_' → logprob: -5.995115280151367

Token 434: ' xor' (ID: 106402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39480915665626526
    2. 'current' → logprob: -2.1448092460632324
    3. '0' → logprob: -2.3948092460632324
    4. 'sum' → logprob: -3.3948092460632324
    5. '=' → logprob: -3.8948092460632324
    6. 'elements' → logprob: -4.269809246063232
    7. 'values' → logprob: -5.019809246063232
    8. ' current' → logprob: -5.144809246063232
    9. 'window' → logprob: -5.394809246063232
    10. 's' → logprob: -5.769809246063232

Token 435: '-s' (ID: 2011)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8756839632987976
    2. '=' → logprob: -1.2506840229034424
    3. '_' → logprob: -1.6256840229034424
    4. ',' → logprob: -3.3756840229034424
    5. 's' → logprob: -4.125683784484863
    6. '_sum' → logprob: -4.625683784484863
    7. 'sum' → logprob: -4.625683784484863
    8. '_val' → logprob: -5.000683784484863
    9. '_cnt' → logprob: -5.250683784484863
    10. '_value' → logprob: -6.125683784484863

Token 436: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.17451481521129608
    2. '0' → logprob: -2.6745147705078125
    3. '=' → logprob: -2.9245147705078125
    4. 't' → logprob: -4.0495147705078125
    5. 'of' → logprob: -5.6745147705078125
    6. 'sum' → logprob: -5.9245147705078125
    7. 'cnt' → logprob: -6.2995147705078125
    8. 'val' → logprob: -6.4245147705078125
    9. 'count' → logprob: -6.4245147705078125
    10. 'value' → logprob: -6.7995147705078125

Token 437: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09863244742155075
    2. ' =' → logprob: -2.598632335662842
    3. ',' → logprob: -4.098632335662842
    4. 'cnt' → logprob: -6.723632335662842
    5. 'sum' → logprob: -7.098632335662842
    6. 's' → logprob: -7.598632335662842
    7. '0' → logprob: -8.4736328125
    8. 'xor' → logprob: -10.2236328125
    9. '_sum' → logprob: -10.3486328125
    10. ',sum' → logprob: -10.7236328125

Token 438: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.009940951131284237
    2. '=' → logprob: -5.259941101074219
    3. 'sum' → logprob: -6.009941101074219
    4. ' =' → logprob: -6.759941101074219
    5. '0' → logprob: -8.384941101074219
    6. 's' → logprob: -8.509941101074219
    7. '
' → logprob: -8.759941101074219
    8. '#' → logprob: -8.884941101074219
    9. ',' → logprob: -9.009941101074219
    10. 'xor' → logprob: -10.009941101074219

Token 439: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7118942737579346
    2. ',' → logprob: -0.8368942737579346
    3. ' =' → logprob: -2.5868942737579346
    4. '_sum' → logprob: -8.086894035339355
    5. 'sum' → logprob: -8.211894035339355
    6. ',sum' → logprob: -8.836894035339355
    7. 's' → logprob: -9.336894035339355
    8. ' ,' → logprob: -9.461894035339355
    9. ',s' → logprob: -10.211894035339355
    10. '=sum' → logprob: -11.461894035339355

Token 440: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0057159471325576305
    2. 'a' → logprob: -5.630715847015381
    3. '[' → logprob: -6.255715847015381
    4. '[a' → logprob: -9.005716323852539
    5. '{' → logprob: -9.880716323852539
    6. '(' → logprob: -11.380716323852539
    7. '(a' → logprob: -13.255716323852539
    8. '{}' → logprob: -13.505716323852539
    9. '{'' → logprob: -13.630716323852539
    10. ' ' → logprob: -13.880716323852539

Token 441: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013923371210694313
    2. 'a' → logprob: -4.638923168182373
    3. '[' → logprob: -5.638923168182373
    4. '[a' → logprob: -8.013923645019531
    5. '{' → logprob: -8.513923645019531
    6. '{'' → logprob: -10.388923645019531
    7. '(' → logprob: -11.013923645019531
    8. '{"' → logprob: -12.013923645019531
    9. '(a' → logprob: -12.388923645019531
    10. ' ' → logprob: -13.513923645019531

Token 442: '
' (ID: 198)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.054031189531087875
    2. 'x' → logprob: -3.1790311336517334
    3. ',' → logprob: -4.9290313720703125
    4. '^' → logprob: -6.3040313720703125
    5. 'xr' → logprob: -7.4290313720703125
    6. '
' → logprob: -7.8040313720703125
    7. ' xor' → logprob: -8.054031372070312
    8. ',x' → logprob: -8.929031372070312
    9. 'xo' → logprob: -9.304031372070312
    10. '   ' → logprob: -10.179031372070312

Token 443: 'xor' (ID: 114252)
  Prédit: 'xor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.1164904460310936
    2. 'x' → logprob: -2.366490364074707
    3. 'xr' → logprob: -4.366490364074707
    4. '^' → logprob: -6.991490364074707
    5. 'xo' → logprob: -6.991490364074707
    6. ',' → logprob: -7.491490364074707
    7. 'cur' → logprob: -8.491490364074707
    8. '_x' → logprob: -9.491490364074707
    9. 'xs' → logprob: -9.741490364074707
    10. ' xor' → logprob: -9.866490364074707

Token 444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4115866422653198
    2. ' =' → logprob: -1.6615866422653198
    3. '_' → logprob: -2.2865867614746094
    4. '_sum' → logprob: -3.2865867614746094
    5. '_s' → logprob: -5.536586761474609
    6. 's' → logprob: -6.911586761474609
    7. 'sum' → logprob: -7.036586761474609
    8. '_val' → logprob: -7.161586761474609
    9. '_x' → logprob: -7.161586761474609
    10. '_=' → logprob: -7.661586761474609

Token 445: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '<|end|>' → logprob: -17.000011444091797
    4. '۰' → logprob: -18.875011444091797
    5. '   ' → logprob: -19.000011444091797
    6. '00' → logprob: -19.500011444091797
    7. '=' → logprob: -19.625011444091797
    8. '000' → logprob: -19.875011444091797
    9. '```' → logprob: -20.000011444091797
    10. '  ' → logprob: -20.125011444091797

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '=' → logprob: -19.0
    4. '۰' → logprob: -19.0
    5. '   ' → logprob: -19.4375
    6. '000' → logprob: -19.625
    7. 'a' → logprob: -19.75
    8. 's' → logprob: -19.9375
    9. '00' → logprob: -20.0
    10. '<|end|>' → logprob: -20.1875

Token 447: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6096411347389221
    2. '
' → logprob: -0.9846411347389221
    3. '<|end|>' → logprob: -2.7346410751342773
    4. ' while' → logprob: -4.109641075134277
    5. ')' → logprob: -7.359641075134277
    6. ',' → logprob: -8.484641075134277
    7. '<|end|>' → logprob: -8.734641075134277
    8. ':' → logprob: -9.359641075134277
    9. '#' → logprob: -9.984641075134277
    10. '.' → logprob: -9.984641075134277

Token 448: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6574046611785889
    2. 'while' → logprob: -0.7824046611785889
    3. '<|end|>' → logprob: -3.907404661178589
    4. ' while' → logprob: -5.782404899597168
    5. ':' → logprob: -7.282404899597168
    6. ')' → logprob: -8.782404899597168
    7. '```' → logprob: -9.532404899597168
    8. '<|end|>' → logprob: -9.532404899597168
    9. 'n' → logprob: -9.657404899597168
    10. ',' → logprob: -9.782404899597168

Token 449: ' Sliding' (ID: 158421)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.9623810658231378e-05
    2. 'for' → logprob: -11.000020027160645
    3. 'While' → logprob: -13.375020027160645
    4. 'from' → logprob: -14.375020027160645
    5. ' while' → logprob: -14.750020027160645
    6. 'length' → logprob: -15.500020027160645
    7. 'ans' → logprob: -16.750019073486328
    8. '#' → logprob: -16.750019073486328
    9. 'n' → logprob: -17.250019073486328
    10. 'def' → logprob: -17.875019073486328

Token 450: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.0007698441040702164
    2. ' window' → logprob: -7.25076961517334
    3. 'while' → logprob: -10.25076961517334
    4. '#' → logprob: -11.75076961517334
    5. 'for' → logprob: -12.12576961517334
    6. '-window' → logprob: -12.12576961517334
    7. '_window' → logprob: -12.62576961517334
    8. 'windows' → logprob: -14.37576961517334
    9. 'win' → logprob: -14.50076961517334
    10. 'w' → logprob: -14.75076961517334

Token 451: ' approach' (ID: 7139)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.016385652124881744
    2. '<|end|>' → logprob: -4.891385555267334
    3. 'for' → logprob: -5.266385555267334
    4. '
' → logprob: -6.141385555267334
    5. ' while' → logprob: -7.141385555267334
    6. ':' → logprob: -7.641385555267334
    7. '<|end|>' → logprob: -9.766386032104492
    8. '#' → logprob: -10.766386032104492
    9. ':
' → logprob: -11.391386032104492
    10. '```' → logprob: -11.641386032104492

Token 452: ':' (ID: 25)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0009033614187501371
    2. ' while' → logprob: -7.750903129577637
    3. 'for' → logprob: -8.000903129577637
    4. '<|end|>' → logprob: -9.375903129577637
    5. '
' → logprob: -10.500903129577637
    6. ':' → logprob: -11.250903129577637
    7. '```' → logprob: -12.000903129577637
    8. ')' → logprob: -13.625903129577637
    9. '.' → logprob: -14.125903129577637
    10. '	while' → logprob: -14.375903129577637

Token 453: ' count' (ID: 3605)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -9.555654105497524e-05
    2. ' while' → logprob: -9.75009536743164
    3. 'for' → logprob: -10.25009536743164
    4. '
' → logprob: -13.50009536743164
    5. '```' → logprob: -16.00009536743164
    6. '<|end|>' → logprob: -16.12509536743164
    7. 'n' → logprob: -16.37509536743164
    8. 'While' → logprob: -17.12509536743164
    9. ')' → logprob: -17.37509536743164
    10. '	while' → logprob: -17.87509536743164

Token 454: ' number' (ID: 2086)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9408273696899414
    2. 'for' → logprob: -1.3158273696899414
    3. '<|end|>' → logprob: -1.5658273696899414
    4. ' for' → logprob: -2.5658273696899414
    5. ' while' → logprob: -3.3158273696899414
    6. '<|end|>' → logprob: -5.065827369689941
    7. ')' → logprob: -5.690827369689941
    8. '
' → logprob: -6.440827369689941
    9. ' to' → logprob: -6.940827369689941
    10. 's' → logprob: -7.065827369689941

Token 455: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6045051217079163
    2. 'of' → logprob: -1.4795050621032715
    3. 'while' → logprob: -1.8545050621032715
    4. ' =' → logprob: -2.9795050621032715
    5. 'for' → logprob: -5.4795050621032715
    6. '_of' → logprob: -5.7295050621032715
    7. ' of' → logprob: -5.8545050621032715
    8. 'ans' → logprob: -6.4795050621032715
    9. '   ' → logprob: -6.6045050621032715
    10. 'a' → logprob: -6.8545050621032715

Token 456: ' contiguous' (ID: 130997)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0180190596729517
    2. ' sub' → logprob: -4.143019199371338
    3. 's' → logprob: -7.018019199371338
    4. 'valid' → logprob: -7.143019199371338
    5. 'good' → logprob: -9.26801872253418
    6. 'distinct' → logprob: -9.64301872253418
    7. ' valid' → logprob: -10.39301872253418
    8. '```' → logprob: -11.01801872253418
    9. '[' → logprob: -11.39301872253418
    10. '#' → logprob: -11.51801872253418

Token 457: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0005805541295558214
    2. ' sub' → logprob: -7.500580787658691
    3. 'segments' → logprob: -10.750580787658691
    4. '#' → logprob: -13.125580787658691
    5. 's' → logprob: -13.250580787658691
    6. '_sub' → logprob: -14.375580787658691
    7. 'windows' → logprob: -14.375580787658691
    8. '
' → logprob: -14.500580787658691
    9. '```' → logprob: -14.750580787658691
    10. ' subse' → logprob: -16.375579833984375

Token 458: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.0008415495976805687
    2. 'strings' → logprob: -7.2508416175842285
    3. 'se' → logprob: -9.25084114074707
    4. 'segments' → logprob: -11.00084114074707
    5. 'array' → logprob: -11.12584114074707
    6. 'arr' → logprob: -13.75084114074707
    7. '#' → logprob: -13.87584114074707
    8. 'windows' → logprob: -14.37584114074707
    9. ' arrays' → logprob: -14.37584114074707
    10. 'sets' → logprob: -15.37584114074707

Token 459: ' such' (ID: 2238)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.010995825752615929
    2. ' while' → logprob: -5.385995864868164
    3. 'for' → logprob: -5.760995864868164
    4. 'with' → logprob: -6.385995864868164
    5. ':' → logprob: -7.885995864868164
    6. '
' → logprob: -8.135995864868164
    7. '<|end|>' → logprob: -8.635995864868164
    8. ',' → logprob: -8.885995864868164
    9. 'that' → logprob: -8.885995864868164
    10. 'to' → logprob: -9.635995864868164

Token 460: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.001091162208467722
    2. ' that' → logprob: -6.876091003417969
    3. 'as' → logprob: -10.751091003417969
    4. 'That' → logprob: -11.501091003417969
    5. 'while' → logprob: -11.501091003417969
    6. '_that' → logprob: -11.501091003417969
    7. '#' → logprob: -12.126091003417969
    8. '	that' → logprob: -15.126091003417969
    9. '   ' → logprob: -15.876091003417969
    10. '```' → logprob: -15.876091003417969

Token 461: '
' (ID: 198)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.03851533308625221
    2. 'cnt' → logprob: -3.663515329360962
    3. '(x' → logprob: -5.288515567779541
    4. '(cnt' → logprob: -5.788515567779541
    5. '   ' → logprob: -6.663515567779541
    6. 'while' → logprob: -7.288515567779541
    7. ' xor' → logprob: -7.538515567779541
    8. 'x' → logprob: -7.913515567779541
    9. '#' → logprob: -8.413515090942383
    10. '(r' → logprob: -8.413515090942383

Token 462: '#' (ID: 2)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.7702237963676453
    2. 'cnt' → logprob: -0.8952237963676453
    3. '#' → logprob: -2.14522385597229
    4. '   ' → logprob: -5.145223617553711
    5. 'while' → logprob: -6.020223617553711
    6. 'a' → logprob: -6.645223617553711
    7. '(cnt' → logprob: -7.770223617553711
    8. 'for' → logprob: -8.395223617553711
    9. 'r' → logprob: -8.520223617553711
    10. ' xor' → logprob: -8.645223617553711

Token 463: ' the' (ID: 290)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.16825926303863525
    2. '(cnt' → logprob: -2.5432591438293457
    3. 'xor' → logprob: -2.6682591438293457
    4. ' cnt' → logprob: -6.293259143829346
    5. '(x' → logprob: -6.543259143829346
    6. '#' → logprob: -6.668259143829346
    7. '   ' → logprob: -6.793259143829346
    8. ' (' → logprob: -8.168259620666504
    9. 'x' → logprob: -9.418259620666504
    10. 'sum' → logprob: -9.418259620666504

Token 464: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.443488746881485
    2. 'cnt' → logprob: -1.6934887170791626
    3. 'while' → logprob: -2.068488836288452
    4. 'sum' → logprob: -3.318488836288452
    5. '#' → logprob: -5.318488597869873
    6. 'current' → logprob: -6.068488597869873
    7. '   ' → logprob: -6.318488597869873
    8. '(cnt' → logprob: -7.568488597869873
    9. ' xor' → logprob: -7.568488597869873
    10. ' while' → logprob: -8.068489074707031

Token 465: ' equals' (ID: 29702)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.29696616530418396
    2. 'of' → logprob: -2.546966075897217
    3. 'sum' → logprob: -2.796966075897217
    4. ' sum' → logprob: -3.921966075897217
    5. ' is' → logprob: -4.171966075897217
    6. '<=' → logprob: -4.421966075897217
    7. 'cnt' → logprob: -4.421966075897217
    8. ' <=' → logprob: -4.546966075897217
    9. 'xor' → logprob: -4.546966075897217
    10. 's' → logprob: -5.296966075897217

Token 466: ' the' (ID: 290)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0089953001588583
    2. 'the' → logprob: -5.383995532989502
    3. ' cnt' → logprob: -6.633995532989502
    4. ' the' → logprob: -6.883995532989502
    5. 'sum' → logprob: -7.258995532989502
    6. '0' → logprob: -7.633995532989502
    7. '#' → logprob: -8.383995056152344
    8. 'xor' → logprob: -8.508995056152344
    9. 'count' → logprob: -9.133995056152344
    10. '   ' → logprob: -9.758995056152344

Token 467: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04608764126896858
    2. 'cnt' → logprob: -3.1710877418518066
    3. 'current' → logprob: -6.171087741851807
    4. ' sum' → logprob: -7.796087741851807
    5. '0' → logprob: -8.796087265014648
    6. '#' → logprob: -8.921087265014648
    7. 'count' → logprob: -9.796087265014648
    8. 'total' → logprob: -10.296087265014648
    9. 'sub' → logprob: -10.546087265014648
    10. ' cnt' → logprob: -10.796087265014648

Token 468: ' of' (ID: 328)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07160771638154984
    2. ' while' → logprob: -3.196607828140259
    3. ':' → logprob: -3.696607828140259
    4. '
' → logprob: -6.57160758972168
    5. '<|end|>' → logprob: -7.44660758972168
    6. ',' → logprob: -7.69660758972168
    7. '.' → logprob: -7.82160758972168
    8. ')' → logprob: -8.69660758972168
    9. ':
' → logprob: -9.19660758972168
    10. 'for' → logprob: -9.94660758972168

Token 469: ' all' (ID: 722)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17224496603012085
    2. 'the' → logprob: -2.1722450256347656
    3. 'cnt' → logprob: -3.9222450256347656
    4. 'elements' → logprob: -3.9222450256347656
    5. 'xor' → logprob: -6.547245025634766
    6. 'sub' → logprob: -6.922245025634766
    7. '#' → logprob: -6.922245025634766
    8. '#a' → logprob: -8.047245025634766
    9. 'their' → logprob: -8.172245025634766
    10. 'all' → logprob: -9.047245025634766

Token 470: ' numbers' (ID: 8663)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.10197089612483978
    2. ')' → logprob: -2.976970911026001
    3. ' elements' → logprob: -3.976970911026001
    4. 'a' → logprob: -5.476970672607422
    5. 'numbers' → logprob: -5.476970672607422
    6. 'values' → logprob: -5.726970672607422
    7. 'window' → logprob: -5.976970672607422
    8. 'cnt' → logprob: -6.226970672607422
    9. '^' → logprob: -6.601970672607422
    10. ']' → logprob: -6.726970672607422

Token 471: ' in' (ID: 306)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.02243952453136444
    2. ' while' → logprob: -4.272439479827881
    3. ':' → logprob: -5.022439479827881
    4. '   ' → logprob: -7.272439479827881
    5. '.' → logprob: -8.147439956665039
    6. ',' → logprob: -8.397439956665039
    7. ' ' → logprob: -9.272439956665039
    8. ':
' → logprob: -9.522439956665039
    9. '=' → logprob: -9.772439956665039
    10. '
' → logprob: -9.897439956665039

Token 472: ' that' (ID: 484)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.012241080403327942
    2. 'cnt' → logprob: -5.012240886688232
    3. ' the' → logprob: -5.512240886688232
    4. 'a' → logprob: -6.762240886688232
    5. 'xor' → logprob: -8.63724136352539
    6. 'that' → logprob: -9.88724136352539
    7. 'current' → logprob: -10.13724136352539
    8. '#' → logprob: -11.51224136352539
    9. 'window' → logprob: -11.63724136352539
    10. '```' → logprob: -11.76224136352539

Token 473: ' sub' (ID: 1543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02536163665354252
    2. 'window' → logprob: -4.15036153793335
    3. '   ' → logprob: -5.65036153793335
    4. 'r' → logprob: -6.90036153793335
    5. ' a' → logprob: -7.27536153793335
    6. 'sub' → logprob: -7.40036153793335
    7. 'cnt' → logprob: -7.40036153793335
    8. '[a' → logprob: -8.275362014770508
    9. 'xor' → logprob: -8.400362014770508
    10. ':' → logprob: -8.650362014770508

Token 474: 'array' (ID: 3361)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16797228157520294
    2. 'array' → logprob: -3.0429723262786865
    3. '   ' → logprob: -3.6679723262786865
    4. '):
' → logprob: -3.9179723262786865
    5. ':
' → logprob: -4.167972087860107
    6. ' while' → logprob: -4.417972087860107
    7. 'a' → logprob: -4.792972087860107
    8. ')
' → logprob: -5.042972087860107
    9. ')' → logprob: -6.042972087860107
    10. ']' → logprob: -6.292972087860107

Token 475: '.
' (ID: 558)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0001825642102630809
    2. ' while' → logprob: -8.875182151794434
    3. 'for' → logprob: -11.000182151794434
    4. ':' → logprob: -11.750182151794434
    5. '
' → logprob: -12.000182151794434
    6. '   ' → logprob: -12.625182151794434
    7. ')' → logprob: -13.125182151794434
    8. '```' → logprob: -13.125182151794434
    9. 'n' → logprob: -13.750182151794434
    10. '.' → logprob: -14.375182151794434

Token 476: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -8.895480277715251e-06
    2. 'for' → logprob: -12.500008583068848
    3. '
' → logprob: -12.625008583068848
    4. 'ans' → logprob: -14.250008583068848
    5. ' while' → logprob: -14.375008583068848
    6. 'total' → logprob: -15.125008583068848
    7. 'res' → logprob: -15.375008583068848
    8. 'result' → logprob: -15.750008583068848
    9. 'answer' → logprob: -17.375009536743164
    10. 'While' → logprob: -18.375009536743164

Token 477: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.031481143087148666
    2. ' r' → logprob: -3.5314810276031494
    3. 'l' → logprob: -7.7814812660217285
    4. '_' → logprob: -7.7814812660217285
    5. 'i' → logprob: -7.7814812660217285
    6. '_r' → logprob: -9.15648078918457
    7. 'num' → logprob: -9.28148078918457
    8. ' _' → logprob: -9.53148078918457
    9. ' l' → logprob: -10.40648078918457
    10. ' in' → logprob: -10.53148078918457

Token 478: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17981871962547302
    2. 'in' → logprob: -1.8048187494277954
    3. ' ' → logprob: -10.804819107055664
    4. ',' → logprob: -11.304819107055664
    5. 'n' → logprob: -11.304819107055664
    6. '	in' → logprob: -11.554819107055664
    7. '   ' → logprob: -12.429819107055664
    8. 'import' → logprob: -13.054819107055664
    9. '_in' → logprob: -13.179819107055664
    10. '  ' → logprob: -13.429819107055664

Token 479: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009744709241203964
    2. ' range' → logprob: -7.000974655151367
    3. 'a' → logprob: -9.750974655151367
    4. 'r' → logprob: -12.875974655151367
    5. 'in' → logprob: -14.250974655151367
    6. 'ran' → logprob: -15.250974655151367
    7. '(range' → logprob: -15.500974655151367
    8. ')' → logprob: -15.625974655151367
    9. '   ' → logprob: -15.750974655151367
    10. 'ra' → logprob: -15.875974655151367

Token 480: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2522094249725342
    2. 'n' → logprob: -1.5022094249725342
    3. '(' → logprob: -8.377209663391113
    4. ' n' → logprob: -10.252209663391113
    5. ')n' → logprob: -12.252209663391113
    6. 'l' → logprob: -12.752209663391113
    7. '	n' → logprob: -13.252209663391113
    8. '(
' → logprob: -13.502209663391113
    9. '[n' → logprob: -14.377209663391113
    10. ')' → logprob: -14.502209663391113

Token 481: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023727134976070374
    2. '):
' → logprob: -8.500237464904785
    3. ' ):' → logprob: -10.625237464904785
    4. ':' → logprob: -12.000237464904785
    5. ')' → logprob: -13.500237464904785
    6. ']:' → logprob: -14.375237464904785
    7. '):
' → logprob: -14.875237464904785
    8. 'n' → logprob: -15.000237464904785
    9. '}:' → logprob: -15.500237464904785
    10. ',' → logprob: -16.12523651123047

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5283378958702087
    2. 'while' → logprob: -0.9033378958702087
    3. ' while' → logprob: -5.4033379554748535
    4. '	while' → logprob: -7.6533379554748535
    5. '  ' → logprob: -9.903337478637695
    6. 'r' → logprob: -9.903337478637695
    7. ' ' → logprob: -10.403337478637695
    8. '+' → logprob: -10.403337478637695
    9. 'xor' → logprob: -10.778337478637695
    10. '   ' → logprob: -11.778337478637695

Token 483: ' l' (ID: 305)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.018665367737412453
    2. '   ' → logprob: -4.268665313720703
    3. 'xor' → logprob: -5.643665313720703
    4. 'r' → logprob: -8.018665313720703
    5. 'cnt' → logprob: -8.018665313720703
    6. ' while' → logprob: -8.518665313720703
    7. 'for' → logprob: -10.893665313720703
    8. 'if' → logprob: -11.143665313720703
    9. '	while' → logprob: -11.643665313720703
    10. 'x' → logprob: -11.893665313720703

Token 484: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07765638083219528
    2. ' =' → logprob: -3.0776562690734863
    3. '+=' → logprob: -3.9526562690734863
    4. ',' → logprob: -5.077656269073486
    5. ' +=' → logprob: -6.077656269073486
    6. '=r' → logprob: -7.827656269073486
    7. '=i' → logprob: -7.952656269073486
    8. 'while' → logprob: -9.952656745910645
    9. '=l' → logprob: -10.327656745910645
    10. ',r' → logprob: -10.827656745910645

Token 485: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007822860032320023
    2. 'r' → logprob: -4.8828229904174805
    3. '0' → logprob: -9.38282299041748
    4. 'max' → logprob: -9.38282299041748
    5. ' i' → logprob: -10.75782299041748
    6. 'l' → logprob: -11.13282299041748
    7. 'min' → logprob: -12.25782299041748
    8. '   ' → logprob: -13.13282299041748
    9. ' ' → logprob: -13.88282299041748
    10. 'a' → logprob: -14.50782299041748

Token 486: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25272539258003235
    2. 'while' → logprob: -1.62772536277771
    3. '
' → logprob: -4.252725601196289
    4. ' while' → logprob: -4.502725601196289
    5. '    
' → logprob: -7.627725601196289
    6. '	while' → logprob: -8.377725601196289
    7. '  ' → logprob: -8.377725601196289
    8. ',' → logprob: -8.877725601196289
    9. '<|end|>' → logprob: -8.877725601196289
    10. '  
' → logprob: -9.127725601196289

Token 487: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2892723083496094
    2. '   ' → logprob: -1.4142723083496094
    3. ' while' → logprob: -5.289272308349609
    4. 'for' → logprob: -5.914272308349609
    5. '	while' → logprob: -8.53927230834961
    6. 'r' → logprob: -9.66427230834961
    7. ' for' → logprob: -10.66427230834961
    8. '<|end|>' → logprob: -10.66427230834961
    9. '```' → logprob: -12.03927230834961
    10. ',' → logprob: -12.03927230834961

Token 488: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -7.123899558791891e-05
    2. 'r' → logprob: -9.75007152557373
    3. 'if' → logprob: -12.12507152557373
    4. 'for' → logprob: -12.25007152557373
    5. ' while' → logprob: -13.50007152557373
    6. 'import' → logprob: -14.00007152557373
    7. '#' (adapté à ' #') → logprob: -15.37507152557373
    8. '	while' → logprob: -16.375070571899414
    9. 'While' → logprob: -16.750070571899414
    10. 'from' → logprob: -16.875070571899414

Token 489: ' Expand' (ID: 81299)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00020568605395965278
    2. 'r' → logprob: -8.750205993652344
    3. 'for' → logprob: -10.125205993652344
    4. 'if' → logprob: -12.375205993652344
    5. ' while' → logprob: -13.125205993652344
    6. '#' → logprob: -15.000205993652344
    7. '	while' → logprob: -15.875205993652344
    8. 'While' → logprob: -16.125205993652344
    9. 'import' → logprob: -16.500205993652344
    10. 'j' → logprob: -16.500205993652344

Token 490: ' the' (ID: 290)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00022094044834375381
    2. ' while' → logprob: -9.000221252441406
    3. 'r' → logprob: -9.250221252441406
    4. '   ' → logprob: -14.750221252441406
    5. '	while' → logprob: -14.875221252441406
    6. '<|end|>' → logprob: -14.875221252441406
    7. 'for' → logprob: -15.875221252441406
    8. 'While' → logprob: -16.750221252441406
    9. '
' → logprob: -17.125221252441406
    10. 'if' → logprob: -18.125221252441406

Token 491: ' window' (ID: 5734)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0002100965939462185
    2. 'r' → logprob: -8.87520980834961
    3. ' while' → logprob: -9.62520980834961
    4. 'for' → logprob: -12.87520980834961
    5. '   ' → logprob: -14.12520980834961
    6. 'right' → logprob: -14.75020980834961
    7. 'While' → logprob: -15.87520980834961
    8. '	while' → logprob: -16.12520980834961
    9. '```' → logprob: -17.00020980834961
    10. '
' → logprob: -17.50020980834961

Token 492: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.030685583129525185
    2. '   ' → logprob: -3.7806856632232666
    3. ' while' → logprob: -4.9056854248046875
    4. '	while' → logprob: -12.030685424804688
    5. 'for' → logprob: -14.155685424804688
    6. '```' → logprob: -15.155685424804688
    7. '<|end|>' → logprob: -15.280685424804688
    8. ',' → logprob: -15.530685424804688
    9. '  ' → logprob: -15.530685424804688
    10. '    
' → logprob: -15.530685424804688

Token 493: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001858982432167977
    2. ' r' → logprob: -8.6251859664917
    3. '(r' → logprob: -12.2501859664917
    4. 'l' → logprob: -14.8751859664917
    5. '
' → logprob: -15.0001859664917
    6. 'xor' → logprob: -15.0001859664917
    7. '   ' → logprob: -16.125185012817383
    8. '	r' → logprob: -16.250185012817383
    9. 'while' → logprob: -16.625185012817383
    10. '```' → logprob: -16.875185012817383

Token 494: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.1432498693466187
    2. '<=' → logprob: -1.1432498693466187
    3. ' <=' → logprob: -1.5182498693466187
    4. '<' → logprob: -3.393249988555908
    5. '<n' → logprob: -3.393249988555908
    6. '==' → logprob: -4.018249988555908
    7. '<len' → logprob: -4.268249988555908
    8. ' ==' → logprob: -4.393249988555908
    9. '>' → logprob: -5.393249988555908
    10. '>=' → logprob: -5.518249988555908

Token 495: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003736779559403658
    2. '0' → logprob: -5.753736972808838
    3. 'n' → logprob: -7.628736972808838
    4. '=r' → logprob: -10.25373649597168
    5. ' r' → logprob: -11.37873649597168
    6. '=' → logprob: -11.50373649597168
    7. 'l' → logprob: -12.75373649597168
    8. 'len' → logprob: -12.75373649597168
    9. ' ' → logprob: -13.12873649597168
    10. '   ' → logprob: -13.50373649597168

Token 496: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.061920404434204
    2. 'while' → logprob: -1.186920404434204
    3. ' while' → logprob: -1.186920404434204
    4. ' and' → logprob: -3.811920404434204
    5. ':' → logprob: -4.186920166015625
    6. 'and' → logprob: -5.936920166015625
    7. '	while' → logprob: -7.061920166015625
    8. ' if' → logprob: -7.186920166015625
    9. ':
' → logprob: -7.186920166015625
    10. '       ' → logprob: -7.686920166015625

Token 497: ' initially' (ID: 25998)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006579304579645395
    2. '   ' → logprob: -5.756579399108887
    3. ' r' → logprob: -6.006579399108887
    4. 'continue' → logprob: -8.381579399108887
    5. '=' → logprob: -8.506579399108887
    6. '=r' → logprob: -8.756579399108887
    7. '       ' → logprob: -8.881579399108887
    8. '0' → logprob: -10.756579399108887
    9. 'expand' → logprob: -10.756579399108887
    10. '1' → logprob: -11.131579399108887

Token 498: ' include' (ID: 3931)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.022214513272047043
    2. 'expand' → logprob: -4.772214412689209
    3. '   ' → logprob: -5.022214412689209
    4. ' r' → logprob: -6.522214412689209
    5. 'continue' → logprob: -6.647214412689209
    6. 'extend' → logprob: -7.022214412689209
    7. '1' → logprob: -7.272214412689209
    8. '0' → logprob: -7.397214412689209
    9. 'increase' → logprob: -8.272214889526367
    10. ' ' → logprob: -8.397214889526367

Token 499: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004041475709527731
    2. 'r' → logprob: -5.87904167175293
    3. ' a' → logprob: -7.12904167175293
    4. '   ' → logprob: -8.00404167175293
    5. 'the' → logprob: -10.12904167175293
    6. '0' → logprob: -10.50404167175293
    7. 'xor' → logprob: -12.00404167175293
    8. ' r' → logprob: -12.87904167175293
    9. '```' → logprob: -12.87904167175293
    10. ' the' → logprob: -12.87904167175293

Token 500: ' ith' (ID: 65087)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0025043170899152756
    2. '0' → logprob: -6.752504348754883
    3. 'r' → logprob: -7.502504348754883
    4. ' a' → logprob: -8.127504348754883
    5. '   ' → logprob: -8.502504348754883
    6. '1' → logprob: -8.877504348754883
    7. 'if' → logprob: -9.502504348754883
    8. 'i' → logprob: -11.002504348754883
    9. 'l' → logprob: -11.627504348754883
    10. '[a' → logprob: -11.877504348754883

Token 501: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.034274622797966
    2. ' element' → logprob: -3.4092745780944824
    3. 'token' → logprob: -8.15927505493164
    4. 'index' → logprob: -8.28427505493164
    5. 'position' → logprob: -10.53427505493164
    6. 'elem' → logprob: -11.28427505493164
    7. '-element' → logprob: -12.15927505493164
    8. ' index' → logprob: -12.28427505493164
    9. 'item' → logprob: -12.28427505493164
    10. ' ' → logprob: -12.53427505493164

Token 502: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19866542518138885
    2. 'if' → logprob: -2.1986653804779053
    3. 'while' → logprob: -2.8236653804779053
    4. ' if' → logprob: -4.948665618896484
    5. ' while' → logprob: -5.948665618896484
    6. '       ' → logprob: -9.823665618896484
    7. 'and' → logprob: -11.448665618896484
    8. ',' → logprob: -11.573665618896484
    9. '	while' → logprob: -11.698665618896484
    10. 'r' → logprob: -11.698665618896484

Token 503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4523997902870178
    2. ' if' → logprob: -2.202399730682373
    3. 'if' → logprob: -2.327399730682373
    4. 'while' → logprob: -2.452399730682373
    5. ' while' → logprob: -2.702399730682373
    6. ' and' → logprob: -6.577399730682373
    7. '       ' → logprob: -7.702399730682373
    8. 'and' → logprob: -8.077400207519531
    9. '	while' → logprob: -9.077400207519531
    10. 'r' → logprob: -9.702400207519531

Token 504: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04859304800629616
    2. 'while' → logprob: -3.298593044281006
    3. '   ' → logprob: -4.798593044281006
    4. ' if' → logprob: -6.173593044281006
    5. ' while' → logprob: -8.923593521118164
    6. '       ' → logprob: -11.048593521118164
    7. ' ' → logprob: -11.673593521118164
    8. 'r' → logprob: -12.298593521118164
    9. '	if' → logprob: -12.548593521118164
    10. '  ' → logprob: -13.798593521118164

Token 505: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0005915171932429075
    2. 'r' → logprob: -7.75059175491333
    3. ' l' → logprob: -8.750591278076172
    4. '	l' → logprob: -13.875591278076172
    5. 'i' → logprob: -14.500591278076172
    6. '   ' → logprob: -14.500591278076172
    7. ' r' → logprob: -16.000591278076172
    8. ' ' → logprob: -16.250591278076172
    9. '(l' → logprob: -16.250591278076172
    10. '  ' → logprob: -16.500591278076172

Token 506: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00160317518748343
    2. ' ==' → logprob: -6.501603126525879
    3. '==
' → logprob: -9.501603126525879
    4. '=' → logprob: -10.751603126525879
    5. ']==' → logprob: -13.001603126525879
    6. '>=' → logprob: -13.876603126525879
    7. ')==' → logprob: -14.126603126525879
    8. '===' → logprob: -15.251603126525879
    9. '[' → logprob: -16.001604080200195
    10. ')' → logprob: -16.126604080200195

Token 507: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.318681188422488e-05
    2. ' r' → logprob: -11.25001335144043
    3. '	r' → logprob: -16.25001335144043
    4. '=r' → logprob: -17.62501335144043
    5. ' ' → logprob: -19.12501335144043
    6. '_r' → logprob: -20.00001335144043
    7. '[r' → logprob: -20.37501335144043
    8. '   ' → logprob: -20.62501335144043
    9. '  ' → logprob: -21.00001335144043
    10. '­r' → logprob: -21.12501335144043

Token 508: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39291590452194214
    2. ':
' → logprob: -1.142915964126587
    3. '       ' → logprob: -5.267915725708008
    4. '   ' → logprob: -7.892915725708008
    5. '=' → logprob: -9.142915725708008
    6. 'and' → logprob: -9.267915725708008
    7. ' and' → logprob: -9.392915725708008
    8. '):
' → logprob: -9.892915725708008
    9. '):' → logprob: -10.642915725708008
    10. 'xor' → logprob: -10.767915725708008

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010466240346431732
    2. 'cnt' → logprob: -7.126046657562256
    3. 'xor' → logprob: -9.251046180725098
    4. ' cnt' → logprob: -9.876046180725098
    5. 'r' → logprob: -10.876046180725098
    6. ' xor' → logprob: -11.376046180725098
    7. 'x' → logprob: -11.751046180725098
    8. '   ' → logprob: -11.876046180725098
    9. '      ' → logprob: -11.876046180725098
    10. '     ' → logprob: -12.001046180725098

Token 510: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.004632572643458843
    2. '       ' → logprob: -6.254632472991943
    3. 'xor' → logprob: -6.629632472991943
    4. '           ' → logprob: -6.754632472991943
    5. 'x' → logprob: -9.254632949829102
    6. '   ' → logprob: -10.629632949829102
    7. ' cnt' → logprob: -10.754632949829102
    8. 'r' → logprob: -11.379632949829102
    9. 'sum' → logprob: -11.379632949829102
    10. '	cnt' → logprob: -11.504632949829102

Token 511: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.046947769820690155
    2. ' +=' → logprob: -3.296947717666626
    3. '=' → logprob: -4.796947956085205
    4. ' =' → logprob: -7.421947956085205
    5. '+' → logprob: -11.296947479248047
    6. '=a' → logprob: -14.421947479248047
    7. '+=(' → logprob: -14.546947479248047
    8. ']+=' → logprob: -15.796947479248047
    9. '-=' → logprob: -16.546947479248047
    10. ' +' → logprob: -17.171947479248047

Token 512: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8624639324116288e-06
    2. ' a' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.375001907348633
    4. '	a' → logprob: -19.000001907348633
    5. 'ai' → logprob: -21.500001907348633
    6. '(a' → logprob: -21.750001907348633
    7. '_a' → logprob: -21.875001907348633
    8. '       ' → logprob: -22.000001907348633
    9. '[a' → logprob: -22.000001907348633
    10. '0' → logprob: -22.125001907348633

Token 513: '[i' (ID: 1768)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.04931340739130974
    2. '[l' → logprob: -3.0493133068084717
    3. '[i' → logprob: -7.424313545227051
    4. '[' → logprob: -9.29931354522705
    5. '[a' → logprob: -10.67431354522705
    6. 'r' → logprob: -11.54931354522705
    7. 'l' → logprob: -13.29931354522705
    8. ']' → logprob: -14.42431354522705
    9. '[q' → logprob: -14.92431354522705
    10. '[m' → logprob: -15.42431354522705

Token 514: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.18502281606197357
    2. ']' → logprob: -1.8100228309631348
    3. ')
' → logprob: -5.435022830963135
    4. ')' → logprob: -7.060022830963135
    5. ']
' → logprob: -10.685022354125977
    6. ' ]
' → logprob: -11.685022354125977
    7. ' ]' → logprob: -12.685022354125977
    8. ']

' → logprob: -13.060022354125977
    9. '   ' → logprob: -13.435022354125977
    10. '[' → logprob: -13.685022354125977

Token 515: '       ' (ID: 309)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.03683967888355255
    2. '       ' → logprob: -3.661839723587036
    3. '   ' → logprob: -5.286839485168457
    4. ' xor' → logprob: -5.286839485168457
    5. 'x' → logprob: -9.161839485168457
    6. 'r' → logprob: -9.161839485168457
    7. ',' → logprob: -10.411839485168457
    8. ' ' → logprob: -10.661839485168457
    9. '\x' → logprob: -11.411839485168457
    10. '<|end|>' → logprob: -11.536839485168457

Token 516: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.625
    3. ' xor' → logprob: -17.375
    4. 'r' → logprob: -18.0
    5. 'cnt' → logprob: -19.5
    6. 'xr' → logprob: -19.75
    7. '       ' → logprob: -19.875
    8. 'xo' → logprob: -20.625
    9. '    
' → logprob: -22.25
    10. 'x' → logprob: -22.5

Token 517: ' +=' (ID: 2757)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.02331559546291828
    2. ' ^=' → logprob: -3.773315668106079
    3. '=' → logprob: -9.7733154296875
    4. '^)' → logprob: -12.2733154296875
    5. '+=' → logprob: -12.7733154296875
    6. '_^' → logprob: -13.2733154296875
    7. '^

' → logprob: -13.2733154296875
    8. '^^' → logprob: -14.3983154296875
    9. 'xor' → logprob: -14.5233154296875
    10. 'ˆ' → logprob: -14.8983154296875

Token 518: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.014684110297821e-06
    2. ' a' → logprob: -11.625008583068848
    3. '	a' → logprob: -18.125009536743164
    4. '   ' → logprob: -19.000009536743164
    5. '_a' → logprob: -20.375009536743164
    6. '(a' → logprob: -20.625009536743164
    7. '#a' → logprob: -21.125009536743164
    8. '```' → logprob: -21.625009536743164
    9. 'i' → logprob: -22.000009536743164
    10. ' ' → logprob: -22.000009536743164

Token 519: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[r' → logprob: -13.500001907348633
    3. '[a' → logprob: -15.125001907348633
    4. 'a' → logprob: -15.750001907348633
    5. 'i' → logprob: -16.000001907348633
    6. 'r' → logprob: -16.375001907348633
    7. '[' → logprob: -16.625001907348633
    8. '[l' → logprob: -18.375001907348633
    9. 'xor' → logprob: -19.000001907348633
    10. '```' → logprob: -19.000001907348633

Token 520: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009454108658246696
    2. ')' → logprob: -7.625945568084717
    3. '<|end|>' → logprob: -7.875945568084717
    4. ' ]' → logprob: -10.125945091247559
    5. ')]' → logprob: -11.500945091247559
    6. '   ' → logprob: -11.875945091247559
    7. ']
' → logprob: -12.250945091247559
    8. '}' → logprob: -12.375945091247559
    9. '<|end|>' → logprob: -12.500945091247559
    10. '']' → logprob: -13.500945091247559

Token 521: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1612970232963562
    2. 'while' → logprob: -2.661297082901001
    3. ' while' → logprob: -2.911297082901001
    4. '<|end|>' → logprob: -5.286296844482422
    5. 'else' → logprob: -5.786296844482422
    6. '.' → logprob: -5.911296844482422
    7. '       ' → logprob: -6.036296844482422
    8. ' else' → logprob: -6.286296844482422
    9. ')' → logprob: -6.786296844482422
    10. 'continue' → logprob: -6.911296844482422

Token 522: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0001495484757469967
    2. '   ' → logprob: -9.250149726867676
    3. '       ' → logprob: -9.875149726867676
    4. ' r' → logprob: -13.375149726867676
    5. '           ' → logprob: -15.500149726867676
    6. 'while' → logprob: -15.875149726867676
    7. '	r' → logprob: -17.75014877319336
    8. 'continue' → logprob: -17.87514877319336
    9. '```' → logprob: -18.00014877319336
    10. 'if' → logprob: -18.50014877319336

Token 523: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.015091794542968273
    2. ' +=' → logprob: -4.515091896057129
    3. '=' → logprob: -5.515091896057129
    4. ' =' → logprob: -12.140091896057129
    5. '+' → logprob: -12.390091896057129
    6. ']+=' → logprob: -14.515091896057129
    7. '+='' → logprob: -16.640090942382812
    8. '+=(' → logprob: -17.390090942382812
    9. '++' → logprob: -17.515090942382812
    10. '   ' → logprob: -17.765090942382812

Token 524: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.625001907348633
    4. '```' → logprob: -19.000001907348633
    5. '0' → logprob: -19.875001907348633
    6. '１' → logprob: -20.750001907348633
    7. '  ' → logprob: -21.312501907348633
    8. '۱' → logprob: -21.625001907348633
    9. '
' → logprob: -21.875001907348633
    10. '+' → logprob: -21.937501907348633

Token 525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '0' → logprob: -19.0
    4. '   ' → logprob: -19.375
    5. '１' → logprob: -20.3125
    6. '```' → logprob: -20.3125
    7. '۱' → logprob: -21.625
    8. '१' → logprob: -22.3125
    9. '2' → logprob: -22.375
    10. '  ' → logprob: -22.375

Token 526: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09587613493204117
    2. 'while' → logprob: -2.5958762168884277
    3. ' while' → logprob: -4.095876216888428
    4. '	while' → logprob: -9.09587574005127
    5. '```' → logprob: -10.22087574005127
    6. '<|end|>' → logprob: -11.34587574005127
    7. '    
' → logprob: -11.47087574005127
    8. '       ' → logprob: -12.22087574005127
    9. 'else' → logprob: -12.22087574005127
    10. ')' → logprob: -12.34587574005127

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18804094195365906
    2. 'while' → logprob: -1.8130409717559814
    3. ' while' → logprob: -4.813040733337402
    4. '	while' → logprob: -9.438040733337402
    5. 'else' → logprob: -10.563040733337402
    6. '```' → logprob: -10.938040733337402
    7. 'for' → logprob: -12.813040733337402
    8. '<|end|>' → logprob: -12.938040733337402
    9. ')' → logprob: -13.063040733337402
    10. 'While' → logprob: -13.438040733337402

Token 528: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.003383033908903599
    2. '   ' → logprob: -5.753383159637451
    3. ' while' → logprob: -8.503382682800293
    4. 'else' → logprob: -13.628382682800293
    5. '	while' → logprob: -14.003382682800293
    6. 'for' → logprob: -15.503382682800293
    7. '```' → logprob: -16.25338363647461
    8. 'While' → logprob: -16.62838363647461
    9. '#' (adapté à ' #') → logprob: -17.00338363647461
    10. ' ' → logprob: -18.37838363647461

Token 529: ' Continue' (ID: 16958)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -6.2729995988775045e-06
    2. '   ' → logprob: -12.375006675720215
    3. ' while' → logprob: -13.500006675720215
    4. 'else' → logprob: -15.375006675720215
    5. '#' → logprob: -15.500006675720215
    6. 'for' → logprob: -16.2500057220459
    7. 'While' → logprob: -16.7500057220459
    8. '	while' → logprob: -17.5000057220459
    9. 'if' → logprob: -17.8750057220459
    10. '    
' → logprob: -18.7500057220459

Token 530: ' expanding' (ID: 35479)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08274513483047485
    2. '   ' → logprob: -2.58274507522583
    3. ' while' → logprob: -5.58274507522583
    4. 'for' → logprob: -10.332745552062988
    5. '	while' → logprob: -10.457745552062988
    6. '  ' → logprob: -11.832745552062988
    7. '    ' → logprob: -12.707745552062988
    8. '    
' → logprob: -13.082745552062988
    9. ' ' → logprob: -13.082745552062988
    10. '
' → logprob: -13.332745552062988

Token 531: ' right' (ID: 1849)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.059259314090013504
    2. ' while' → logprob: -3.4342594146728516
    3. '   ' → logprob: -3.6842594146728516
    4. '	while' → logprob: -9.559259414672852
    5. '       ' → logprob: -10.559259414672852
    6. 'if' → logprob: -11.059259414672852
    7. 'r' → logprob: -11.184259414672852
    8. '    ' → logprob: -11.309259414672852
    9. '  ' → logprob: -11.684259414672852
    10. 'for' → logprob: -12.684259414672852

Token 532: ' boundary' (ID: 35021)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15705665946006775
    2. ' while' → logprob: -2.4070565700531006
    3. '   ' → logprob: -2.9070565700531006
    4. '	while' → logprob: -7.90705680847168
    5. ':' → logprob: -9.78205680847168
    6. '       ' → logprob: -10.15705680847168
    7. '  ' → logprob: -10.78205680847168
    8. ' and' → logprob: -10.90705680847168
    9. 'for' → logprob: -10.90705680847168
    10. 'if' → logprob: -11.03205680847168

Token 533: ' as' (ID: 472)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.46625956892967224
    2. 'while' → logprob: -1.4662595987319946
    3. '   ' → logprob: -1.9662595987319946
    4. '	while' → logprob: -6.341259479522705
    5. ' to' → logprob: -9.591259956359863
    6. '<|end|>' → logprob: -10.591259956359863
    7. ',' → logprob: -11.466259956359863
    8. ' until' → logprob: -12.091259956359863
    9. ' and' → logprob: -13.091259956359863
    10. 'While' → logprob: -13.341259956359863

Token 534: ' long' (ID: 1701)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.0964844599366188
    2. ' long' → logprob: -2.471484422683716
    3. 'r' → logprob: -4.971484661102295
    4. 'while' → logprob: -7.721484661102295
    5. ' r' → logprob: -9.971484184265137
    6. '   ' → logprob: -9.971484184265137
    7. 'far' → logprob: -11.221484184265137
    8. 'possible' → logprob: -11.721484184265137
    9. ' far' → logprob: -11.846484184265137
    10. '<long' → logprob: -12.221484184265137

Token 535: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.25609269738197327
    2. ' as' → logprob: -1.7560926675796509
    3. 'r' → logprob: -3.0060927867889404
    4. '   ' → logprob: -5.881092548370361
    5. ' r' → logprob: -7.881092548370361
    6. 'while' → logprob: -8.25609302520752
    7. '(r' → logprob: -8.50609302520752
    8. 'cnt' → logprob: -10.88109302520752
    9. '(cnt' → logprob: -11.25609302520752
    10. '(as' → logprob: -11.63109302520752

Token 536: ' condition' (ID: 7060)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1279553291387856e-05
    2. 'xor' → logprob: -11.750011444091797
    3. '(r' → logprob: -12.875011444091797
    4. ' r' → logprob: -15.000011444091797
    5. '   ' → logprob: -15.875011444091797
    6. '
' → logprob: -16.625011444091797
    7. 'cnt' → logprob: -17.375011444091797
    8. '```' → logprob: -17.500011444091797
    9. '	r' → logprob: -17.875011444091797
    10. '[r' → logprob: -18.750011444091797

Token 537: ' holds' (ID: 18305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.19914251565933228
    2. ' r' → logprob: -3.0741424560546875
    3. 'a' → logprob: -3.3241424560546875
    4. ' and' → logprob: -3.5741424560546875
    5. 'xor' → logprob: -4.1991424560546875
    6. ':' → logprob: -4.4491424560546875
    7. '(r' → logprob: -4.8241424560546875
    8. 'cnt' → logprob: -4.8241424560546875
    9. 'and' → logprob: -4.9491424560546875
    10. '   ' → logprob: -4.9491424560546875

Token 538: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17452022433280945
    2. ' while' → logprob: -1.9245202541351318
    3. 'while' → logprob: -4.549520015716553
    4. ' and' → logprob: -5.799520015716553
    5. '	while' → logprob: -8.424520492553711
    6. '       ' → logprob: -8.674520492553711
    7. 'and' → logprob: -9.549520492553711
    8. ':' → logprob: -9.674520492553711
    9. ',' → logprob: -11.049520492553711
    10. '```' → logprob: -11.924520492553711

Token 539: ' we' (ID: 581)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001173917087726295
    2. ' r' → logprob: -6.751173973083496
    3. 'xor' → logprob: -13.251173973083496
    4. '
' → logprob: -13.876173973083496
    5. '   ' → logprob: -14.251173973083496
    6. '(r' → logprob: -15.626173973083496
    7. '	r' → logprob: -16.62617301940918
    8. ' ' → logprob: -16.87617301940918
    9. ' ' → logprob: -17.25117301940918
    10. ' xor' → logprob: -17.50117301940918

Token 540: ' don't' (ID: 4128)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.17373058199882507
    2. '<' → logprob: -2.1737306118011475
    3. ' can' → logprob: -4.298730373382568
    4. ' r' → logprob: -4.423730373382568
    5. ' <' → logprob: -4.548730373382568
    6. 'can' → logprob: -4.923730373382568
    7. '   ' → logprob: -7.048730373382568
    8. 'continue' → logprob: -8.923730850219727
    9. '<len' → logprob: -9.048730850219727
    10. 'while' → logprob: -9.173730850219727

Token 541: ' exceed' (ID: 23275)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.44915467500686646
    2. 'go' → logprob: -1.5741546154022217
    3. 'reach' → logprob: -2.4491546154022217
    4. ' exceed' → logprob: -3.4491546154022217
    5. ' go' → logprob: -4.324154853820801
    6. 'r' → logprob: -4.699154853820801
    7. 'run' → logprob: -5.699154853820801
    8. 'overflow' → logprob: -5.699154853820801
    9. 'break' → logprob: -5.949154853820801
    10. 'expand' → logprob: -6.574154853820801

Token 542: ' list' (ID: 1562)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006849141791462898
    2. ' n' → logprob: -7.37568473815918
    3. 'r' → logprob: -10.12568473815918
    4. '   ' → logprob: -11.12568473815918
    5. '	n' → logprob: -14.00068473815918
    6. '```' → logprob: -14.25068473815918
    7. '<n' → logprob: -14.50068473815918
    8. 'the' → logprob: -15.37568473815918
    9. '(n' → logprob: -15.75068473815918
    10. 'len' → logprob: -16.12568473815918

Token 543: ' bounds' (ID: 30227)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7543118596076965
    2. ' and' → logprob: -1.3793118000030518
    3. 'and' → logprob: -1.5043118000030518
    4. '   ' → logprob: -3.7543118000030518
    5. 'length' → logprob: -4.004312038421631
    6. ' length' → logprob: -5.504312038421631
    7. '[n' → logprob: -5.879312038421631
    8. 'r' → logprob: -5.879312038421631
    9. 'size' → logprob: -6.254312038421631
    10. ':' → logprob: -7.879312038421631

Token 544: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043169666081666946
    2. ' while' → logprob: -3.4181697368621826
    3. 'while' → logprob: -4.6681694984436035
    4. '	while' → logprob: -9.418169975280762
    5. '       ' → logprob: -13.043169975280762
    6. ',' → logprob: -13.668169975280762
    7. ' and' → logprob: -13.918169975280762
    8. '    
' → logprob: -13.918169975280762
    9. ':' → logprob: -14.043169975280762
    10. '```' → logprob: -14.668169975280762

Token 545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13673178851604462
    2. 'while' → logprob: -2.1367318630218506
    3. ' while' → logprob: -4.6367316246032715
    4. '	while' → logprob: -9.63673210144043
    5. '```' → logprob: -14.13673210144043
    6. '       ' → logprob: -15.38673210144043
    7. 'While' → logprob: -16.01173210144043
    8. '   ' → logprob: -16.38673210144043
    9. '  ' → logprob: -16.88673210144043
    10. '    
' → logprob: -17.13673210144043

Token 546: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.04899891838431358
    2. '   ' → logprob: -3.0489988327026367
    3. ' while' → logprob: -7.798998832702637
    4. '	while' → logprob: -13.673998832702637
    5. '```' → logprob: -16.673999786376953
    6. 'While' → logprob: -17.173999786376953
    7. '    
' → logprob: -18.923999786376953
    8. 'for' → logprob: -19.673999786376953
    9. '       ' → logprob: -20.173999786376953
    10. '  ' → logprob: -20.923999786376953

Token 547: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.318681188422488e-05
    2. ' r' → logprob: -11.37501335144043
    3. '(r' → logprob: -13.75001335144043
    4. '   ' → logprob: -14.62501335144043
    5. '	r' → logprob: -16.00001335144043
    6. '
' → logprob: -17.37501335144043
    7. '_r' → logprob: -18.25001335144043
    8. 'xor' → logprob: -18.62501335144043
    9. ' ' → logprob: -19.00001335144043
    10. '(
' → logprob: -19.62501335144043

Token 548: ' +' (ID: 659)
  Prédit: '<n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.06590116024017334
    2. '<' → logprob: -3.065901279449463
    3. ' <' → logprob: -4.065901279449463
    4. '<len' → logprob: -11.565900802612305
    5. 'n' → logprob: -12.190900802612305
    6. '<num' → logprob: -14.065900802612305
    7. '<size' → logprob: -14.065900802612305
    8. '<N' → logprob: -15.315900802612305
    9. ' n' → logprob: -15.690900802612305
    10. '[n' → logprob: -16.065900802612305

Token 549: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9012699723243713
    2. '0' → logprob: -1.1512699127197266
    3. ' ' → logprob: -1.5262699127197266
    4. '<n' → logprob: -3.6512699127197266
    5. '<=' → logprob: -4.151269912719727
    6. 'n' → logprob: -5.151269912719727
    7. '<' → logprob: -5.651269912719727
    8. ' <=' → logprob: -6.151269912719727
    9. ' n' → logprob: -6.151269912719727
    10. ' <' → logprob: -6.401269912719727

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2502386271953583
    2. '0' → logprob: -1.6252386569976807
    3. '<' → logprob: -5.250238418579102
    4. ' ' → logprob: -5.250238418579102
    5. '<=' → logprob: -5.375238418579102
    6. 'r' → logprob: -6.125238418579102
    7. '<len' → logprob: -6.125238418579102
    8. ' <' → logprob: -6.250238418579102
    9. '<n' → logprob: -6.250238418579102
    10. ' <=' → logprob: -7.375238418579102

Token 551: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.17177781462669373
    2. ' <' → logprob: -2.5467777252197266
    3. '<n' → logprob: -2.9217777252197266
    4. '<=' → logprob: -4.046777725219727
    5. '<len' → logprob: -4.921777725219727
    6. ' <=' → logprob: -7.171777725219727
    7. '<size' → logprob: -9.546777725219727
    8. '<num' → logprob: -10.171777725219727
    9. '<s' → logprob: -12.296777725219727
    10. '<N' → logprob: -13.171777725219727

Token 552: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00014931005716789514
    2. ' n' → logprob: -8.875149726867676
    3. '   ' → logprob: -12.500149726867676
    4. 'len' → logprob: -12.750149726867676
    5. '
' → logprob: -13.750149726867676
    6. '	n' → logprob: -14.750149726867676
    7. '(n' → logprob: -15.875149726867676
    8. '```' → logprob: -15.875149726867676
    9. '[n' → logprob: -16.12514877319336
    10. ')n' → logprob: -16.37514877319336

Token 553: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03810747340321541
    2. 'and' → logprob: -3.288107395172119
    3. '   ' → logprob: -9.913107872009277
    4. '    ' → logprob: -12.288107872009277
    5. ':
' → logprob: -12.538107872009277
    6. '	and' → logprob: -13.163107872009277
    7. ':' → logprob: -13.288107872009277
    8. '       ' → logprob: -13.413107872009277
    9. ' ' → logprob: -13.663107872009277
    10. '      ' → logprob: -14.538107872009277

Token 554: ' (' (ID: 350)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.6894142031669617
    2. 'cnt' → logprob: -1.1894142627716064
    3. 'xor' → logprob: -1.9394142627716064
    4. '(x' → logprob: -3.5644142627716064
    5. '((' → logprob: -4.564414024353027
    6. '(r' → logprob: -5.314414024353027
    7. '(a' → logprob: -5.814414024353027
    8. 'a' → logprob: -7.689414024353027
    9. ' (' → logprob: -7.814414024353027
    10. '0' → logprob: -7.814414024353027

Token 555: 'xor' (ID: 114252)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.49242427945137024
    2. 'cnt' → logprob: -1.4924242496490479
    3. 'xor' → logprob: -2.117424249649048
    4. '(x' → logprob: -3.242424249649048
    5. '((' → logprob: -6.617424488067627
    6. '(r' → logprob: -6.742424488067627
    7. 'x' → logprob: -7.617424488067627
    8. '0' → logprob: -7.992424488067627
    9. ' (' → logprob: -8.242424011230469
    10. '(c' → logprob: -8.742424011230469

Token 556: ' ^' (ID: 7602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6075891852378845
    2. '^' → logprob: -0.9825891852378845
    3. ' ^' → logprob: -2.8575892448425293
    4. ' +' → logprob: -4.232589244842529
    5. '==' → logprob: -5.107589244842529
    6. ')' → logprob: -6.357589244842529
    7. '+a' → logprob: -7.857589244842529
    8. ' ==' → logprob: -8.607588768005371
    9. ' ' → logprob: -9.357588768005371
    10. '^)' → logprob: -9.482588768005371

Token 557: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0041927252896130085
    2. ' a' → logprob: -5.50419282913208
    3. ')' → logprob: -9.879192352294922
    4. 'cnt' → logprob: -10.879192352294922
    5. ')a' → logprob: -11.379192352294922
    6. '   ' → logprob: -11.879192352294922
    7. ' ' → logprob: -12.254192352294922
    8. '(a' → logprob: -12.504192352294922
    9. '0' → logprob: -12.629192352294922
    10. '[a' → logprob: -13.379192352294922

Token 558: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.8624639324116288e-06
    2. 'r' → logprob: -13.750001907348633
    3. '[' → logprob: -14.250001907348633
    4. '	r' → logprob: -17.375001907348633
    5. '[a' → logprob: -17.500001907348633
    6. '(r' → logprob: -19.375001907348633
    7. '[right' → logprob: -19.375001907348633
    8. '```' → logprob: -19.625001907348633
    9. '[i' → logprob: -20.125001907348633
    10. '[root' → logprob: -20.500001907348633

Token 559: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013461013324558735
    2. '])' → logprob: -4.388461112976074
    3. ')==' → logprob: -7.513461112976074
    4. '[i' → logprob: -9.513461112976074
    5. ']' → logprob: -9.513461112976074
    6. ' )' → logprob: -9.888461112976074
    7. '[' → logprob: -10.138461112976074
    8. '[])' → logprob: -10.388461112976074
    9. '[r' → logprob: -10.888461112976074
    10. ')]' → logprob: -10.888461112976074

Token 560: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.013655293732881546
    2. ' ==' → logprob: -4.388655185699463
    3. '<=' → logprob: -7.138655185699463
    4. '+' → logprob: -8.388655662536621
    5. '==
' → logprob: -9.763655662536621
    6. '=' → logprob: -10.513655662536621
    7. ' <=' → logprob: -11.763655662536621
    8. '<' → logprob: -12.138655662536621
    9. '==(' → logprob: -12.263655662536621
    10. '>' → logprob: -12.388655662536621

Token 561: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.4303897023200989
    2. '(cnt' → logprob: -1.055389642715454
    3. ' cnt' → logprob: -6.555389881134033
    4. ' (' → logprob: -9.180389404296875
    5. '[cnt' → logprob: -9.930389404296875
    6. '(c' → logprob: -10.680389404296875
    7. '   ' → logprob: -11.055389404296875
    8. '	cnt' → logprob: -11.055389404296875
    9. '((' → logprob: -11.180389404296875
    10. '(count' → logprob: -11.555389404296875

Token 562: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25303420424461365
    2. '+' → logprob: -1.503034234046936
    3. ' and' → logprob: -7.5030341148376465
    4. 'and' → logprob: -9.003034591674805
    5. '+r' → logprob: -9.128034591674805
    6. ':' → logprob: -9.253034591674805
    7. '   ' → logprob: -9.753034591674805
    8. '+=' → logprob: -9.878034591674805
    9. ' +=' → logprob: -10.628034591674805
    10. '+a' → logprob: -11.378034591674805

Token 563: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009143244242295623
    2. ' a' → logprob: -7.000914096832275
    3. '   ' → logprob: -12.875914573669434
    4. ' ' → logprob: -15.750914573669434
    5. '  ' → logprob: -17.000913619995117
    6. '	a' → logprob: -17.125913619995117
    7. '    ' → logprob: -17.750913619995117
    8. '       ' → logprob: -17.875913619995117
    9. '           ' → logprob: -18.750913619995117
    10. '     ' → logprob: -19.375913619995117

Token 564: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.1472419600977446e-06
    2. 'r' → logprob: -13.750000953674316
    3. '[' → logprob: -17.375001907348633
    4. '[a' → logprob: -18.750001907348633
    5. '(r' → logprob: -19.250001907348633
    6. 'a' → logprob: -19.875001907348633
    7. '	r' → logprob: -20.000001907348633
    8. '[i' → logprob: -20.500001907348633
    9. ' [' → logprob: -20.500001907348633
    10. '   ' → logprob: -21.000001907348633

Token 565: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4378260374069214
    2. ':' → logprob: -1.0628260374069214
    3. '):
' → logprob: -4.937826156616211
    4. ':
' → logprob: -7.187826156616211
    5. ' ):' → logprob: -7.812826156616211
    6. '   ' → logprob: -8.187826156616211
    7. ' and' → logprob: -8.812826156616211
    8. ' :' → logprob: -9.062826156616211
    9. ']:' → logprob: -9.687826156616211
    10. ')' → logprob: -9.812826156616211

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4536825716495514
    2. ':' → logprob: -1.078682541847229
    3. '   ' → logprob: -4.5786824226379395
    4. ':
' → logprob: -5.2036824226379395
    5. '):' → logprob: -5.8286824226379395
    6. ' and' → logprob: -5.9536824226379395
    7. '{' → logprob: -7.2036824226379395
    8. ',' → logprob: -7.3286824226379395
    9. ' :' → logprob: -7.8286824226379395
    10. '):
' → logprob: -7.9536824226379395

Token 567: ' xor' (ID: 106402)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.30713632702827454
    2. '       ' → logprob: -2.057136297225952
    3. 'xor' (adapté à ' xor') → logprob: -2.432136297225952
    4. '   ' → logprob: -3.182136297225952
    5. '           ' → logprob: -5.432136535644531
    6. ' cnt' → logprob: -6.182136535644531
    7. 'r' → logprob: -8.307136535644531
    8. '	cnt' → logprob: -8.432136535644531
    9. ' xor' → logprob: -8.932136535644531
    10. 'x' → logprob: -9.807136535644531

Token 568: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.2524268329143524
    2. ' ^=' → logprob: -1.5024268627166748
    3. '=' → logprob: -7.627426624298096
    4. '^)' → logprob: -12.502427101135254
    5. '_^' → logprob: -13.127427101135254
    6. '+=' → logprob: -13.252427101135254
    7. ' ' → logprob: -14.377427101135254
    8. 'ˆ' → logprob: -15.002427101135254
    9. '^

' → logprob: -15.127427101135254
    10. ' =' → logprob: -15.252427101135254

Token 569: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.306760805164231e-05
    2. ' a' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.25001335144043
    4. '	a' → logprob: -19.37501335144043
    5. '       ' → logprob: -20.37501335144043
    6. '```' → logprob: -20.62501335144043
    7. '_a' → logprob: -21.12501335144043
    8. '[a' → logprob: -21.25001335144043
    9. '  ' → logprob: -22.12501335144043
    10. ' ' → logprob: -22.25001335144043

Token 570: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -7.703443770878948e-06
    2. 'r' → logprob: -11.875007629394531
    3. '[' → logprob: -14.875007629394531
    4. 'a' → logprob: -16.12500762939453
    5. '[a' → logprob: -16.50000762939453
    6. '	r' → logprob: -17.75000762939453
    7. '(r' → logprob: -17.75000762939453
    8. '```' → logprob: -18.00000762939453
    9. '[
' → logprob: -18.12500762939453
    10. '[i' → logprob: -18.87500762939453

Token 571: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08416398614645004
    2. ')' → logprob: -2.5841639041900635
    3. '[r' → logprob: -6.334164142608643
    4. '<|end|>' → logprob: -6.709164142608643
    5. '       ' → logprob: -7.084164142608643
    6. ' ]' → logprob: -7.834164142608643
    7. '   ' → logprob: -8.209163665771484
    8. '[' → logprob: -8.459163665771484
    9. 'r' → logprob: -8.709163665771484
    10. ')]' → logprob: -8.834163665771484

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08595762401819229
    2. 'cnt' → logprob: -3.0859575271606445
    3. '   ' → logprob: -3.3359575271606445
    4. ' cnt' → logprob: -7.9609575271606445
    5. ' ' → logprob: -8.460957527160645
    6. '	cnt' → logprob: -8.960957527160645
    7. '<|end|>' → logprob: -9.460957527160645
    8. ',' → logprob: -9.835957527160645
    9. 'r' → logprob: -9.960957527160645
    10. 'count' → logprob: -10.210957527160645

Token 573: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -2.339278580620885e-06
    2. ' cnt' → logprob: -13.250001907348633
    3. '	cnt' → logprob: -15.375001907348633
    4. '       ' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.375001907348633
    6. 'r' → logprob: -18.125001907348633
    7. 'count' → logprob: -18.250001907348633
    8. '(cnt' → logprob: -18.375001907348633
    9. '[cnt' → logprob: -18.750001907348633
    10. '           ' → logprob: -19.500001907348633

Token 574: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01053800992667675
    2. ' +=' → logprob: -4.760538101196289
    3. '+' → logprob: -6.260538101196289
    4. ']+=' → logprob: -11.885538101196289
    5. '+='' → logprob: -13.385538101196289
    6. '   ' → logprob: -14.385538101196289
    7. '<|end|>' → logprob: -14.510538101196289
    8. '+="' → logprob: -14.635538101196289
    9. '=' → logprob: -14.760538101196289
    10. '+=(' → logprob: -15.135538101196289

Token 575: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.493430894101039e-05
    2. ' a' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.25007438659668
    4. '	a' → logprob: -19.62507438659668
    5. ' ' → logprob: -21.75007438659668
    6. '_a' → logprob: -22.87507438659668
    7. '  ' → logprob: -23.75007438659668
    8. '[a' → logprob: -23.75007438659668
    9. '       ' → logprob: -23.75007438659668
    10. '(a' → logprob: -23.87507438659668

Token 576: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -7.896309739408025e-07
    2. '[a' → logprob: -14.875000953674316
    3. '[' → logprob: -15.250000953674316
    4. 'r' → logprob: -16.5
    5. 'a' → logprob: -18.5
    6. ' [' → logprob: -19.75
    7. '[i' → logprob: -19.875
    8. '	r' → logprob: -19.875
    9. '```' → logprob: -20.0
    10. '(r' → logprob: -20.25

Token 577: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16457079350948334
    2. '<|end|>' → logprob: -2.1645708084106445
    3. ']' → logprob: -3.9145708084106445
    4. '       ' → logprob: -4.2895708084106445
    5. '<|end|>' → logprob: -6.4145708084106445
    6. '}' → logprob: -7.5395708084106445
    7. '[r' → logprob: -7.7895708084106445
    8. '   ' → logprob: -8.414570808410645
    9. '[' → logprob: -9.289570808410645
    10. '```' → logprob: -9.914570808410645

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01055535301566124
    2. 'r' → logprob: -4.760555267333984
    3. '   ' → logprob: -6.260555267333984
    4. ' r' → logprob: -10.760555267333984
    5. '           ' → logprob: -12.635555267333984
    6. '	r' → logprob: -13.635555267333984
    7. '```' → logprob: -14.385555267333984
    8. '      ' → logprob: -14.760555267333984
    9. ' ' → logprob: -14.885555267333984
    10. '	' → logprob: -14.885555267333984

Token 579: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.000599976978264749
    2. '       ' → logprob: -8.00059986114502
    3. '   ' → logprob: -8.25059986114502
    4. ' r' → logprob: -12.62559986114502
    5. '	r' → logprob: -16.375600814819336
    6. '           ' → logprob: -17.250600814819336
    7. '_r' → logprob: -18.875600814819336
    8. '++' → logprob: -20.125600814819336
    9. '     ' → logprob: -20.625600814819336
    10. '```' → logprob: -20.875600814819336

Token 580: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0006510786479339004
    2. '+' → logprob: -7.875650882720947
    3. ' +=' → logprob: -8.250651359558105
    4. '=' → logprob: -11.875651359558105
    5. '++' → logprob: -13.125651359558105
    6. ']+=' → logprob: -15.375651359558105
    7. ')' → logprob: -15.500651359558105
    8. '+='' → logprob: -15.750651359558105
    9. '<|end|>' → logprob: -16.00065040588379
    10. '```' → logprob: -16.25065040588379

Token 581: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. 'r' → logprob: -17.750003814697266
    4. '```' → logprob: -18.250003814697266
    5. '   ' → logprob: -19.000003814697266
    6. '+' → logprob: -19.375003814697266
    7. '2' → logprob: -19.500003814697266
    8. '１' → logprob: -20.375003814697266
    9. '0' → logprob: -20.687503814697266
    10. '  ' → logprob: -21.187503814697266

Token 582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -16.625003814697266
    4. '   ' → logprob: -17.125003814697266
    5. '2' → logprob: -19.125003814697266
    6. '  ' → logprob: -19.250003814697266
    7. '+' → logprob: -19.625003814697266
    8. '0' → logprob: -19.750003814697266
    9. '１' → logprob: -20.062503814697266
    10. 'r' → logprob: -20.125003814697266

Token 583: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3933127224445343
    2. 'ans' → logprob: -1.143312692642212
    3. '	ans' → logprob: -5.893312931060791
    4. ' ans' → logprob: -5.893312931060791
    5. '(ans' → logprob: -7.643312931060791
    6. '<|end|>' → logprob: -9.268312454223633
    7. '_ans' → logprob: -9.268312454223633
    8. '```' → logprob: -9.393312454223633
    9. '
' → logprob: -10.018312454223633
    10. ')' → logprob: -10.393312454223633

Token 584: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1086006835103035
    2. '   ' → logprob: -2.608600616455078
    3. '	ans' → logprob: -4.233600616455078
    4. ' ans' → logprob: -4.733600616455078
    5. '```' → logprob: -5.733600616455078
    6. '(ans' → logprob: -6.233600616455078
    7. '_ans' → logprob: -8.358600616455078
    8. '<|end|>' → logprob: -8.358600616455078
    9. '
' → logprob: -8.733600616455078
    10. ')' → logprob: -9.733600616455078

Token 585: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00010604646377032623
    2. '   ' → logprob: -9.250105857849121
    3. ' ans' → logprob: -11.750105857849121
    4. '	ans' → logprob: -13.500105857849121
    5. '
' → logprob: -15.125105857849121
    6. 'answer' → logprob: -16.000106811523438
    7. '(ans' → logprob: -16.125106811523438
    8. '```' → logprob: -16.625106811523438
    9. '_ans' → logprob: -17.375106811523438
    10. '    
' → logprob: -17.375106811523438

Token 586: ' Remove' (ID: 18141)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -6.630610641877865e-06
    2. '#' → logprob: -12.625006675720215
    3. '   ' → logprob: -13.000006675720215
    4. ' ans' → logprob: -14.500006675720215
    5. '	ans' → logprob: -15.000006675720215
    6. '
' → logprob: -16.5000057220459
    7. '(ans' → logprob: -17.0000057220459
    8. 'if' → logprob: -17.6250057220459
    9. 'answer' → logprob: -18.0000057220459
    10. 'anst' → logprob: -18.1250057220459

Token 587: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.227250610711053e-05
    2. ' a' → logprob: -10.125041961669922
    3. 'cnt' → logprob: -13.750041961669922
    4. '   ' → logprob: -14.000041961669922
    5. '```' → logprob: -16.250041961669922
    6. '	a' → logprob: -16.875041961669922
    7. '  ' → logprob: -18.000041961669922
    8. 'if' → logprob: -18.375041961669922
    9. '#a' → logprob: -18.625041961669922
    10. '(a' → logprob: -18.625041961669922

Token 588: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03180740028619766
    2. '[a' → logprob: -4.1568074226379395
    3. '[l' → logprob: -4.6568074226379395
    4. '[r' → logprob: -5.1568074226379395
    5. '[' → logprob: -8.281806945800781
    6. 'a' → logprob: -9.781806945800781
    7. 'i' → logprob: -10.781806945800781
    8. '[s' → logprob: -11.156806945800781
    9. 'l' → logprob: -11.406806945800781
    10. '[
' → logprob: -12.156806945800781

Token 589: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014059496112167835
    2. 'from' → logprob: -4.389059543609619
    3. ' from' → logprob: -7.139059543609619
    4. ']
' → logprob: -8.014059066772461
    5. 'a' → logprob: -9.889059066772461
    6. ')' → logprob: -9.889059066772461
    7. '[' → logprob: -10.014059066772461
    8. '<|end|>' → logprob: -10.014059066772461
    9. '   ' → logprob: -10.139059066772461
    10. ']=' → logprob: -10.389059066772461

Token 590: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001129498123191297
    2. 'from' → logprob: -7.001129627227783
    3. 'xor' → logprob: -8.876129150390625
    4. 'cnt' → logprob: -9.751129150390625
    5. '  ' → logprob: -12.001129150390625
    6. ' from' → logprob: -12.251129150390625
    7. '```' → logprob: -13.126129150390625
    8. '       ' → logprob: -13.376129150390625
    9. ' ' → logprob: -13.626129150390625
    10. '^' → logprob: -14.001129150390625

Token 591: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0009514793055132031
    2. 'xor' → logprob: -7.000951290130615
    3. 'the' → logprob: -10.500951766967773
    4. 'window' → logprob: -12.500951766967773
    5. ' cnt' → logprob: -12.625951766967773
    6. 'count' → logprob: -13.250951766967773
    7. 'sum' → logprob: -13.750951766967773
    8. 'ans' → logprob: -13.875951766967773
    9. '	cnt' → logprob: -13.875951766967773
    10. '(cnt' → logprob: -15.625951766967773

Token 592: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8074162653647363e-05
    2. 'cnt' → logprob: -11.250018119812012
    3. ' and' → logprob: -13.375018119812012
    4. '  ' → logprob: -13.875018119812012
    5. 'and' → logprob: -14.125018119812012
    6. '```' → logprob: -14.125018119812012
    7. ',' → logprob: -14.625018119812012
    8. '       ' → logprob: -15.250018119812012
    9. ' ' → logprob: -16.000017166137695
    10. 'xor' → logprob: -16.250017166137695

Token 593: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -6.704273118884885e-07
    2. ' xor' → logprob: -14.750000953674316
    3. 'from' → logprob: -15.625000953674316
    4. '   ' → logprob: -18.125
    5. 'remove' → logprob: -18.125
    6. '```' → logprob: -18.625
    7. 'xo' → logprob: -20.5
    8. '#' → logprob: -20.5
    9. '`' → logprob: -20.5
    10. 'x' → logprob: -20.75

Token 594: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016754455282352865
    2. 'cnt' → logprob: -8.875167846679688
    3. '```' → logprob: -10.625167846679688
    4. 'xor' → logprob: -13.875167846679688
    5. ',' → logprob: -14.500167846679688
    6. '       ' → logprob: -14.625167846679688
    7. '``' → logprob: -15.000167846679688
    8. '	cnt' → logprob: -15.125167846679688
    9. '  ' → logprob: -15.500167846679688
    10. ' ' → logprob: -16.250167846679688

Token 595: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1643439531326294
    2. 'cnt' → logprob: -1.9143439531326294
    3. 'xor' → logprob: -5.53934383392334
    4. 'ans' → logprob: -9.78934383392334
    5. ' cnt' → logprob: -9.91434383392334
    6. 'count' → logprob: -11.28934383392334
    7. '  ' → logprob: -11.28934383392334
    8. '	cnt' → logprob: -11.41434383392334
    9. '       ' → logprob: -11.66434383392334
    10. '```' → logprob: -12.03934383392334

Token 596: ' left' (ID: 3561)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.5942567586898804
    2. ' we' → logprob: -1.2192567586898804
    3. 'l' → logprob: -2.46925687789917
    4. 'the' → logprob: -3.59425687789917
    5. 'i' → logprob: -3.84425687789917
    6. ' the' → logprob: -4.34425687789917
    7. 'cnt' → logprob: -6.21925687789917
    8. 'window' → logprob: -6.34425687789917
    9. ' l' → logprob: -7.46925687789917
    10. '   ' → logprob: -7.84425687789917

Token 597: ' pointer' (ID: 16233)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7225680351257324
    2. ' +=' → logprob: -1.5975680351257324
    3. 'boundary' → logprob: -2.5975680351257324
    4. ' ^=' → logprob: -2.7225680351257324
    5. '^' → logprob: -3.5975680351257324
    6. '=' → logprob: -3.5975680351257324
    7. 'bound' → logprob: -3.8475680351257324
    8. '<|end|>' → logprob: -3.9725680351257324
    9. 'pointer' → logprob: -4.097568035125732
    10. ' boundary' → logprob: -4.472568035125732

Token 598: ' will' (ID: 738)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.06052038446068764
    2. '+=' → logprob: -3.5605204105377197
    3. 'increments' → logprob: -4.935520172119141
    4. 'adv' → logprob: -5.060520172119141
    5. ' moves' → logprob: -5.060520172119141
    6. 'is' → logprob: -5.685520172119141
    7. ' advances' → logprob: -5.935520172119141
    8. 'm' → logprob: -6.810520172119141
    9. 'will' → logprob: -6.810520172119141
    10. 'in' → logprob: -7.810520172119141

Token 599: ' be' (ID: 413)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.8103965520858765
    2. '+=' → logprob: -1.5603965520858765
    3. 'be' → logprob: -2.060396671295166
    4. 'advance' → logprob: -2.685396671295166
    5. 'increase' → logprob: -2.685396671295166
    6. 'increment' → logprob: -3.310396671295166
    7. ' move' → logprob: -3.435396671295166
    8. ' be' → logprob: -4.685396671295166
    9. ' +=' → logprob: -6.435396671295166
    10. ' advance' → logprob: -6.810396671295166

Token 600: ' moved' (ID: 12183)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06646695733070374
    2. 'increment' → logprob: -3.066467046737671
    3. 'i' → logprob: -4.691466808319092
    4. ' moved' → logprob: -5.191466808319092
    5. 'advanced' → logprob: -6.566466808319092
    6. '   ' → logprob: -7.191466808319092
    7. ' increment' → logprob: -8.06646728515625
    8. '+=' → logprob: -8.69146728515625
    9. 'in' → logprob: -9.06646728515625
    10. '```' → logprob: -9.69146728515625

Token 601: ' forward' (ID: 6687)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005105206742882729
    2. 'cnt' → logprob: -5.380105018615723
    3. '```' → logprob: -8.880105018615723
    4. '       ' → logprob: -9.130105018615723
    5. '  ' → logprob: -9.255105018615723
    6. ' ' → logprob: -9.755105018615723
    7. 'xor' → logprob: -11.255105018615723
    8. '    
' → logprob: -11.255105018615723
    9. '    ' → logprob: -11.380105018615723
    10. '	cnt' → logprob: -11.880105018615723

Token 602: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.751746746478602e-05
    2. 'cnt' → logprob: -10.25004768371582
    3. '```' → logprob: -11.75004768371582
    4. 'xor' → logprob: -13.12504768371582
    5. ',' → logprob: -13.62504768371582
    6. '  ' → logprob: -15.50004768371582
    7. '``' → logprob: -16.00004768371582
    8. '       ' → logprob: -16.00004768371582
    9. '    
' → logprob: -16.00004768371582
    10. '
' → logprob: -16.12504768371582

Token 603: '   ' (ID: 271)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.39286449551582336
    2. '   ' → logprob: -1.142864465713501
    3. 'xor' → logprob: -5.14286470413208
    4. '```' → logprob: -9.892864227294922
    5. '	cnt' → logprob: -9.892864227294922
    6. ' cnt' → logprob: -11.267864227294922
    7. 'ans' → logprob: -12.767864227294922
    8. '``' → logprob: -13.017864227294922
    9. ' ' → logprob: -13.017864227294922
    10. '`' → logprob: -13.142864227294922

Token 604: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.004422047641128302
    2. '   ' → logprob: -5.504422187805176
    3. 'xor' → logprob: -8.004422187805176
    4. ' cnt' → logprob: -12.254422187805176
    5. '	cnt' → logprob: -12.504422187805176
    6. '```' → logprob: -14.879422187805176
    7. 'count' → logprob: -15.004422187805176
    8. '  ' → logprob: -15.879422187805176
    9. ' ' → logprob: -15.879422187805176
    10. '(cnt' → logprob: -17.12942123413086

Token 605: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.00036216014996171
    2. '-' → logprob: -8.500362396240234
    3. ' -=' → logprob: -8.750362396240234
    4. '=' → logprob: -15.875362396240234
    5. '+=' → logprob: -16.875362396240234
    6. ' -' → logprob: -17.875362396240234
    7. '   ' → logprob: -19.625362396240234
    8. '```' → logprob: -20.375362396240234
    9. '>' → logprob: -20.875362396240234
    10. ')-' → logprob: -22.375362396240234

Token 606: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.125
    3. '   ' → logprob: -21.25
    4. '	a' → logprob: -22.375
    5. '```' → logprob: -24.875
    6. '#a' → logprob: -25.0
    7. '[a' → logprob: -25.5
    8. 'а' → logprob: -25.875
    9. '`' → logprob: -26.0
    10. ''a' → logprob: -26.125

Token 607: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -13.875000953674316
    3. '[' → logprob: -18.375001907348633
    4. '[a' → logprob: -18.625001907348633
    5. '```' → logprob: -19.000001907348633
    6. '[l' → logprob: -19.125001907348633
    7. 'a' → logprob: -19.875001907348633
    8. '{i' → logprob: -20.750001907348633
    9. '\[' → logprob: -20.875001907348633
    10. '[
' → logprob: -21.375001907348633

Token 608: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03437310457229614
    2. ')' → logprob: -3.4093730449676514
    3. '   ' → logprob: -7.9093732833862305
    4. ']
' → logprob: -8.03437328338623
    5. ']' → logprob: -11.53437328338623
    6. ')
' → logprob: -11.65937328338623
    7. ' )
' → logprob: -12.28437328338623
    8. '}
' → logprob: -12.65937328338623
    9. '<|end|>' → logprob: -12.78437328338623
    10. 'xor' → logprob: -13.40937328338623

Token 609: '   ' (ID: 271)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.004107254091650248
    2. '   ' → logprob: -5.504107475280762
    3. '```' → logprob: -10.629107475280762
    4. '
' → logprob: -13.254107475280762
    5. ' xor' → logprob: -13.254107475280762
    6. '``' → logprob: -15.254107475280762
    7. '\x' → logprob: -15.629107475280762
    8. ' ' → logprob: -16.004106521606445
    9. '`' → logprob: -16.004106521606445
    10. '  ' → logprob: -16.129106521606445

Token 610: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -1.9361264946837764e-07
    2. ' xor' → logprob: -16.125
    3. '```' → logprob: -17.375
    4. '^' → logprob: -17.875
    5. '   ' → logprob: -20.375
    6. '`' → logprob: -20.375
    7. 'x' → logprob: -20.75
    8. 'xo' → logprob: -21.375
    9. '
' → logprob: -21.875
    10. '#' → logprob: -22.0

Token 611: ' -=' (ID: 12583)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.07906340062618256
    2. ' ^=' → logprob: -2.5790634155273438
    3. '-=' → logprob: -8.704063415527344
    4. '=' → logprob: -11.954063415527344
    5. '_^' → logprob: -15.079063415527344
    6. '^^' → logprob: -15.329063415527344
    7. '+=' → logprob: -15.454063415527344
    8. '^-' → logprob: -15.954063415527344
    9. '^

' → logprob: -16.204063415527344
    10. 'ˆ' → logprob: -16.579063415527344

Token 612: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00010902655776590109
    2. ' a' → logprob: -9.12510871887207
    3. '   ' → logprob: -18.12510871887207
    4. '	a' → logprob: -18.50010871887207
    5. '_a' → logprob: -20.37510871887207
    6. ' ' → logprob: -20.50010871887207
    7. '  ' → logprob: -20.50010871887207
    8. '[a' → logprob: -20.50010871887207
    9. 'а' → logprob: -21.25010871887207
    10. '(a' → logprob: -21.25010871887207

Token 613: '[i' (ID: 1768)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6948410272598267
    2. '[i' → logprob: -0.6948410272598267
    3. '[a' → logprob: -6.944840908050537
    4. 'i' → logprob: -7.694840908050537
    5. '[' → logprob: -8.319841384887695
    6. ' a' → logprob: -10.694841384887695
    7. '```' → logprob: -13.194841384887695
    8. '[int' → logprob: -13.569841384887695
    9. '[user' → logprob: -14.319841384887695
    10. '[ind' → logprob: -15.069841384887695

Token 614: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5393585562705994
    2. ']' → logprob: -0.9143585562705994
    3. '<|end|>' → logprob: -4.289358615875244
    4. '[i' → logprob: -6.914358615875244
    5. '}' → logprob: -7.664358615875244
    6. '   ' → logprob: -7.914358615875244
    7. '```' → logprob: -8.539358139038086
    8. '#' → logprob: -9.789358139038086
    9. '[' → logprob: -10.039358139038086
    10. '<|end|>' → logprob: -10.164358139038086

Token 615: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00011927806917810813
    2. '
' → logprob: -10.25011920928955
    3. '(ans' → logprob: -10.50011920928955
    4. ' ans' → logprob: -10.75011920928955
    5. '<|end|>' → logprob: -10.75011920928955
    6. '	ans' → logprob: -11.62511920928955
    7. 'print' → logprob: -13.62511920928955
    8. '_ans' → logprob: -14.37511920928955
    9. ')' → logprob: -14.62511920928955
    10. '```' → logprob: -14.75011920928955

Token 616: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006257477682083845
    2. 'ans' → logprob: -5.1312575340271
    3. 'r' → logprob: -8.756257057189941
    4. ')' → logprob: -10.256257057189941
    5. 'continue' → logprob: -10.256257057189941
    6. ' print' → logprob: -10.631257057189941
    7. 'pass' → logprob: -10.756257057189941
    8. '<|end|>' → logprob: -11.256257057189941
    9. 'i' → logprob: -11.381257057189941
    10. '#' (adapté à ' #') → logprob: -12.006257057189941

Token 617: ' The' (ID: 623)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.008129963040119e-06
    2. 'if' → logprob: -13.250003814697266
    3. ' ans' → logprob: -13.750003814697266
    4. '   ' → logprob: -14.625003814697266
    5. 'print' → logprob: -16.000003814697266
    6. '
' → logprob: -16.125003814697266
    7. '(ans' → logprob: -16.125003814697266
    8. '#' → logprob: -16.500003814697266
    9. 'answer' → logprob: -16.500003814697266
    10. 'while' → logprob: -17.250003814697266

Token 618: ' number' (ID: 2086)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00017016702622640878
    2. ' ans' → logprob: -9.50016975402832
    3. '   ' → logprob: -9.75016975402832
    4. 'answer' → logprob: -11.12516975402832
    5. 'r' → logprob: -11.50016975402832
    6. '#' → logprob: -12.12516975402832
    7. '	ans' → logprob: -13.12516975402832
    8. '
' → logprob: -13.37516975402832
    9. '`' → logprob: -14.25016975402832
    10. '(ans' → logprob: -14.75016975402832

Token 619: ' of' (ID: 328)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2816449999809265
    2. '+=' → logprob: -1.4066450595855713
    3. '=' → logprob: -7.906644821166992
    4. '+' → logprob: -9.531644821166992
    5. ' =' → logprob: -10.781644821166992
    6. ']+=' → logprob: -11.656644821166992
    7. ' of' → logprob: -12.031644821166992
    8. 'of' → logprob: -12.281644821166992
    9. 's' → logprob: -12.406644821166992
    10. ' +' → logprob: -13.031644821166992

Token 620: ' valid' (ID: 4529)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02763810008764267
    2. 'sub' → logprob: -3.9026381969451904
    3. 'ans' → logprob: -6.027637958526611
    4. ' +=' → logprob: -6.402637958526611
    5. ' sub' → logprob: -7.402637958526611
    6. '(r' → logprob: -7.527637958526611
    7. '+=' → logprob: -7.527637958526611
    8. ' r' → logprob: -8.02763843536377
    9. 'answer' → logprob: -8.40263843536377
    10. 'res' → logprob: -8.77763843536377

Token 621: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.012737891636788845
    2. ' +=' → logprob: -5.13773775100708
    3. '+=' → logprob: -5.26273775100708
    4. ' sub' → logprob: -6.51273775100708
    5. 'windows' → logprob: -10.262738227844238
    6. 's' → logprob: -10.762738227844238
    7. '_sub' → logprob: -11.012738227844238
    8. '+=(' → logprob: -11.387738227844238
    9. 'segments' → logprob: -12.637738227844238
    10. '   ' → logprob: -12.887738227844238

Token 622: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -1.7120533811976202e-05
    2. ' arrays' → logprob: -11.500017166137695
    3. 'arr' → logprob: -12.625017166137695
    4. 'array' → logprob: -12.875017166137695
    5. '_arrays' → logprob: -15.000017166137695
    6. 'ar' → logprob: -15.125017166137695
    7. '   ' → logprob: -15.750017166137695
    8. 'windows' → logprob: -16.250017166137695
    9. 'Arrays' → logprob: -17.500017166137695
    10. '[i' → logprob: -17.750017166137695

Token 623: ' starting' (ID: 8601)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07914908975362778
    2. ' +=' → logprob: -2.579149007797241
    3. '   ' → logprob: -8.82914924621582
    4. '+=(' → logprob: -9.20414924621582
    5. '=' → logprob: -11.82914924621582
    6. ']+=' → logprob: -12.57914924621582
    7. '
' → logprob: -14.07914924621582
    8. '```' → logprob: -15.57914924621582
    9. ' =' → logprob: -15.95414924621582
    10. '	' → logprob: -16.70414924621582

Token 624: ' at' (ID: 540)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0015755891799927
    2. 'at' → logprob: -1.1265755891799927
    3. ' at' → logprob: -1.3765755891799927
    4. '+=' → logprob: -3.876575469970703
    5. ' from' → logprob: -4.001575469970703
    6. ' +=' → logprob: -4.876575469970703
    7. 'with' → logprob: -5.376575469970703
    8. 'tokens' → logprob: -6.751575469970703
    9. 'i' → logprob: -6.876575469970703
    10. ' with' → logprob: -7.251575469970703

Token 625: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00022046364028938115
    2. ' i' → logprob: -8.75022029876709
    3. 'l' → logprob: -10.00022029876709
    4. 'r' → logprob: -11.87522029876709
    5. '`' → logprob: -12.00022029876709
    6. '[i' → logprob: -13.62522029876709
    7. '```' → logprob: -14.00022029876709
    8. 'a' → logprob: -14.87522029876709
    9. '   ' → logprob: -15.00022029876709
    10. '(i' → logprob: -15.75022029876709

Token 626: ' is' (ID: 382)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4745343327522278
    2. ' +=' → logprob: -0.9745343327522278
    3. ' is' → logprob: -8.974534034729004
    4. '+=(' → logprob: -9.099534034729004
    5. 'is' → logprob: -9.474534034729004
    6. '=' → logprob: -9.599534034729004
    7. '   ' → logprob: -10.099534034729004
    8. ']+=' → logprob: -10.974534034729004
    9. '
' → logprob: -12.599534034729004
    10. '+' → logprob: -12.849534034729004

Token 627: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0020449827425181866
    2. ' r' → logprob: -6.502045154571533
    3. '(r' → logprob: -7.627045154571533
    4. '   ' → logprob: -9.877044677734375
    5. '```' → logprob: -14.002044677734375
    6. '`' → logprob: -14.127044677734375
    7. 'max' → logprob: -14.252044677734375
    8. ' (' → logprob: -14.502044677734375
    9. '[r' → logprob: -15.127044677734375
    10. ' ' → logprob: -15.252044677734375

Token 628: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5760130286216736
    2. '-' → logprob: -0.8260130286216736
    3. '   ' → logprob: -10.07601261138916
    4. '-token' → logprob: -11.45101261138916
    5. '```' → logprob: -11.82601261138916
    6. '-i' → logprob: -12.20101261138916
    7. 'minus' → logprob: -13.20101261138916
    8. ' ' → logprob: -13.57601261138916
    9. ' minus' → logprob: -14.07601261138916
    10. '-r' → logprob: -14.07601261138916

Token 629: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06376148760318756
    2. 'l' → logprob: -2.8137614727020264
    3. 'r' → logprob: -6.9387617111206055
    4. '1' → logprob: -7.1887617111206055
    5. ' i' → logprob: -10.438761711120605
    6. '(i' → logprob: -10.688761711120605
    7. '(' → logprob: -12.438761711120605
    8. ' l' → logprob: -12.813761711120605
    9. '   ' → logprob: -13.063761711120605
    10. '`' → logprob: -13.438761711120605

Token 630: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7370361089706421
    2. '+' → logprob: -1.112036108970642
    3. ' -' → logprob: -2.2370362281799316
    4. '   ' → logprob: -3.4870362281799316
    5. '
' → logprob: -4.112036228179932
    6. ' +=' → logprob: -4.237036228179932
    7. ' ans' → logprob: -4.612036228179932
    8. '-' → logprob: -5.487036228179932
    9. '+=' → logprob: -5.487036228179932
    10. 'ans' → logprob: -5.487036228179932

Token 631: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7059599161148071
    2. '+=' → logprob: -1.7059599161148071
    3. 'ans' → logprob: -2.0809597969055176
    4. '   ' → logprob: -2.5809597969055176
    5. ' +=' → logprob: -2.5809597969055176
    6. ' +' → logprob: -3.9559597969055176
    7. '
' → logprob: -4.580959796905518
    8. ' ans' → logprob: -4.705959796905518
    9. '+
' → logprob: -5.705959796905518
    10. '```' → logprob: -6.455959796905518

Token 632: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -6.2729995988775045e-06
    2. ' ans' → logprob: -12.250006675720215
    3. '	ans' → logprob: -14.250006675720215
    4. '   ' → logprob: -14.375006675720215
    5. '
' → logprob: -16.3750057220459
    6. '(ans' → logprob: -16.7500057220459
    7. '```' → logprob: -17.5000057220459
    8. 'anst' → logprob: -18.1250057220459
    9. 'answer' → logprob: -18.2500057220459
    10. '_ans' → logprob: -18.3750057220459

Token 633: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3132901191711426
    2. ' +=' → logprob: -1.3132901191711426
    3. '+=(' → logprob: -11.813289642333984
    4. '+' → logprob: -12.063289642333984
    5. '=' → logprob: -12.188289642333984
    6. ']+=' → logprob: -12.313289642333984
    7. '+='' → logprob: -13.438289642333984
    8. '   ' → logprob: -13.438289642333984
    9. '+="' → logprob: -13.563289642333984
    10. '```' → logprob: -13.938289642333984

Token 634: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002137882256647572
    2. '(r' → logprob: -8.500213623046875
    3. ' r' → logprob: -11.500213623046875
    4. ' (' → logprob: -16.750213623046875
    5. '   ' → logprob: -18.000213623046875
    6. '(' → logprob: -18.000213623046875
    7. '[r' → logprob: -18.125213623046875
    8. 'max' → logprob: -18.625213623046875
    9. '_r' → logprob: -18.875213623046875
    10. '	r' → logprob: -19.500213623046875

Token 635: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3487056493759155
    2. ' -' → logprob: -1.2237056493759155
    3. '-i' → logprob: -9.473705291748047
    4. '   ' → logprob: -9.598705291748047
    5. '```' → logprob: -9.723705291748047
    6. '`' → logprob: -11.723705291748047
    7. '<|end|>' → logprob: -11.723705291748047
    8. '-
' → logprob: -11.973705291748047
    9. ' ' → logprob: -11.973705291748047
    10. '-token' → logprob: -12.848705291748047

Token 636: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009779345244169235
    2. 'i' → logprob: -4.634779453277588
    3. '1' → logprob: -11.00977897644043
    4. ' l' → logprob: -12.13477897644043
    5. ' i' → logprob: -14.25977897644043
    6. '<|end|>' → logprob: -15.38477897644043
    7. '(i' → logprob: -15.63477897644043
    8. '(' → logprob: -16.25977897644043
    9. '_l' → logprob: -16.38477897644043
    10. '   ' → logprob: -16.50977897644043

Token 637: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6872507333755493
    2. 'print' → logprob: -1.1872507333755493
    3. '\n' → logprob: -2.3122506141662598
    4. '<|end|>' → logprob: -2.5622506141662598
    5. '```' → logprob: -4.93725061416626
    6. ')' → logprob: -5.06225061416626
    7. '#' → logprob: -8.062251091003418
    8. '  
' → logprob: -8.062251091003418
    9. '+' → logprob: -8.437251091003418
    10. '[' → logprob: -8.687251091003418

Token 638: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 639: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '
' → logprob: -20.375
    3. '#print' → logprob: -21.625
    4. ' print' → logprob: -22.0
    5. '```' → logprob: -22.125
    6. 'printf' → logprob: -25.5
    7. 'pr' → logprob: -25.625
    8. 'println' → logprob: -26.125
    9. '``' → logprob: -26.5
    10. '#' → logprob: -26.5

Token 640: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -13.000001907348633
    3. '
' → logprob: -17.375001907348633
    4. '``' → logprob: -17.750001907348633
    5. ' print' → logprob: -18.375001907348633
    6. '(print' → logprob: -20.875001907348633
    7. 'pr' → logprob: -22.750001907348633
    8. '`' → logprob: -24.000001907348633
    9. '`
' → logprob: -24.125001907348633
    10. '.print' → logprob: -24.500001907348633

Token 641: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023248855024576187
    2. 'ans' → logprob: -3.7732489109039307
    3. '(ans' → logprob: -13.023248672485352
    4. 'answer' → logprob: -14.023248672485352
    5. '```' → logprob: -15.648248672485352
    6. ' print' → logprob: -16.64824867248535
    7. '`' → logprob: -17.14824867248535
    8. ' ans' → logprob: -17.89824867248535
    9. 'str' → logprob: -18.02324867248535
    10. '``' → logprob: -19.64824867248535

Token 642: ' count' (ID: 3605)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.27099974633893e-05
    2. 'ans' → logprob: -11.750012397766113
    3. '(ans' → logprob: -12.375012397766113
    4. '
' → logprob: -15.625012397766113
    5. ' print' → logprob: -15.875012397766113
    6. '(print' → logprob: -15.875012397766113
    7. '(' → logprob: -16.50001335144043
    8. '```' → logprob: -18.37501335144043
    9. 'println' → logprob: -18.62501335144043
    10. 'pr' → logprob: -18.87501335144043

Token 643: ' of' (ID: 328)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.8206473871250637e-05
    2. '```' → logprob: -10.500028610229492
    3. '``' → logprob: -14.625028610229492
    4. '
' → logprob: -16.250028610229492
    5. ' print' → logprob: -18.375028610229492
    6. '`' → logprob: -20.375028610229492
    7. '#print' → logprob: -20.375028610229492
    8. '\' → logprob: -20.375028610229492
    9. 'pr' → logprob: -21.375028610229492
    10. '`
' → logprob: -21.625028610229492

Token 644: ' such' (ID: 2238)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03819996863603592
    2. 'valid' → logprob: -3.2881999015808105
    3. ' valid' → logprob: -9.038200378417969
    4. ' ans' → logprob: -10.663200378417969
    5. '(ans' → logprob: -11.288200378417969
    6. 'sub' → logprob: -12.788200378417969
    7. 'answer' → logprob: -14.288200378417969
    8. 'print' → logprob: -15.663200378417969
    9. '	ans' → logprob: -16.28820037841797
    10. 'answers' → logprob: -16.78820037841797

Token 645: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.0348857641220093
    2. 'valid' → logprob: -1.1598857641220093
    3. 'ans' → logprob: -1.2848857641220093
    4. '(ans' → logprob: -3.159885883331299
    5. ' valid' → logprob: -4.909885883331299
    6. '(' → logprob: -6.034885883331299
    7. '(valid' → logprob: -6.784885883331299
    8. ' sub' → logprob: -7.909885883331299
    9. 'print' → logprob: -8.90988540649414
    10. '(sub' → logprob: -8.90988540649414

Token 646: 'arrays' (ID: 158630)
  Prédit: 'arrays'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -5.6100132496794686e-05
    2. 'arr' → logprob: -10.125056266784668
    3. 'strings' → logprob: -12.250056266784668
    4. 'array' → logprob: -12.375056266784668
    5. 'ar' → logprob: -12.750056266784668
    6. 'missions' → logprob: -13.875056266784668
    7. 'ans' → logprob: -14.000056266784668
    8. ' arrays' → logprob: -14.375056266784668
    9. 'quences' → logprob: -14.875056266784668
    10. 'arra' → logprob: -15.000056266784668

Token 647: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2007883671903983e-05
    2. '```' → logprob: -10.750021934509277
    3. '``' → logprob: -14.500021934509277
    4. ' print' → logprob: -19.125022888183594
    5. '#print' → logprob: -20.500022888183594
    6. '
' → logprob: -20.500022888183594
    7. '(print' → logprob: -21.625022888183594
    8. '`' → logprob: -21.625022888183594
    9. 'Print' → logprob: -22.625022888183594
    10. 'prints' → logprob: -22.875022888183594

Token 648: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.75
    3. '``' → logprob: -23.5
    4. ' print' → logprob: -23.875
    5. '#print' → logprob: -24.625
    6. '
' → logprob: -25.0
    7. 'println' → logprob: -25.75
    8. 'printf' → logprob: -26.125
    9. 'pr' → logprob: -27.25
    10. 'Print' → logprob: -27.75

Token 649: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.0280383548888494e-06
    2. 'ans' → logprob: -14.125000953674316
    3. '(' → logprob: -15.625000953674316
    4. '(answer' → logprob: -19.250001907348633
    5. '(a' → logprob: -20.625001907348633
    6. '	ans' → logprob: -20.625001907348633
    7. ' (' → logprob: -21.125001907348633
    8. '(an' → logprob: -21.375001907348633
    9. '(acc' → logprob: -21.625001907348633
    10. '(
' → logprob: -21.625001907348633

Token 650: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. '())' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.750001907348633
    4. ')
' → logprob: -14.875001907348633
    5. '()' → logprob: -15.000001907348633
    6. '))' → logprob: -15.625001907348633
    7. ')`' → logprob: -16.000001907348633
    8. '`)' → logprob: -16.625001907348633
    9. '**' → logprob: -17.375001907348633
    10. '```' → logprob: -17.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 648
Tokens correctement prédits (1ère position, stricte): 149
Tokens correctement prédits (1ère position, avec adaptation): 166
Tokens correctement prédits (top 10): 442
Précision stricte (1ère position): 22.99%
Précision adaptée (1ère position): 25.62%
Précision (top 10): 68.21%
================================================================================
