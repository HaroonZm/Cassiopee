================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return input()

def split_input(user_input):
    return user_input.split()

def map_to_int(str_numbers):
    return map(int, str_numbers)

def unpack_numbers(int_iterable):
    a, b, c = int_iterable
    return a, b, c

def compute_sum(a, b, c):
    return a + b + c

def is_bust(total):
    return total >= 22

def print_bust():
    print('bust')

def print_win():
    print('win')

def main():
    user_input = read_input()
    split_numbers = split_input(user_input)
    int_numbers = map_to_int(split_numbers)
    a, b, c = unpack_numbers(int_numbers)
    total = compute_sum(a, b, c)
    if is_bust(total):
        print_bust()
    else:
        print_win()

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013885974884033203
    2. '():' → logprob: -4.513885974884033
    3. '_' → logprob: -6.388885974884033
    4. '(:' → logprob: -7.888885974884033
    5. '(_:' → logprob: -8.138885498046875
    6. '```' → logprob: -8.388885498046875
    7. ':' → logprob: -10.013885498046875
    8. '()' → logprob: -10.138885498046875
    9. ' (' → logprob: -10.388885498046875
    10. '(_' → logprob: -10.388885498046875

Token 4: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.006394386291504
    2. '```' → logprob: -1.131394386291504
    3. '\' → logprob: -1.506394386291504
    4. '   ' → logprob: -4.006394386291504
    5. ''\' → logprob: -4.506394386291504
    6. '``' → logprob: -4.506394386291504
    7. '    
' → logprob: -4.881394386291504
    8. ':' → logprob: -5.131394386291504
    9. ' 
' → logprob: -5.631394386291504
    10. '
' → logprob: -5.756394386291504

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.49150246381759644
    2. 'input' → logprob: -1.9915025234222412
    3. '```' → logprob: -2.741502523422241
    4. '   ' → logprob: -2.866502523422241
    5. 'data' → logprob: -3.241502523422241
    6. 'x' → logprob: -3.491502523422241
    7. 'user' → logprob: -4.241502285003662
    8. 'n' → logprob: -4.241502285003662
    9. 'text' → logprob: -4.366502285003662
    10. 'r' → logprob: -5.491502285003662

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20023325085639954
    2. ' input' → logprob: -2.200233221054077
    3. 'input' → logprob: -2.825233221054077
    4. '"' → logprob: -4.950233459472656
    5. '  ' → logprob: -6.575233459472656
    6. ''' → logprob: -6.700233459472656
    7. ' []' → logprob: -7.575233459472656
    8. ' None' → logprob: -8.700233459472656
    9. '(input' → logprob: -8.825233459472656
    10. '(' → logprob: -8.950233459472656

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023613937199115753
    2. '()' → logprob: -3.773613929748535
    3. '('' → logprob: -9.148613929748535
    4. '```' → logprob: -10.273613929748535
    5. ' ' → logprob: -10.398613929748535
    6. ''' → logprob: -10.523613929748535
    7. '("("' → logprob: -10.523613929748535
    8. '(
' → logprob: -10.648613929748535
    9. ' (' → logprob: -10.773613929748535
    10. '"' → logprob: -11.273613929748535

Token 8: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9868894219398499
    2. '
' → logprob: -1.736889362335205
    3. '(' → logprob: -1.861889362335205
    4. '()' → logprob: -2.986889362335205
    5. '```' → logprob: -2.986889362335205
    6. '<|end|>' → logprob: -3.111889362335205
    7. '(
' → logprob: -3.611889362335205
    8. 'def' → logprob: -3.736889362335205
    9. '\' → logprob: -4.111889362335205
    10. '#' → logprob: -4.111889362335205

Token 9: ' split' (ID: 12648)
  Prédit: ' write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' write' → logprob: -1.0809872150421143
    2. ' calculate' → logprob: -1.3309872150421143
    3. ' process' → logprob: -1.4559872150421143
    4. ' read' → logprob: -2.7059872150421143
    5. ' main' → logprob: -3.3309872150421143
    6. ' compute' → logprob: -4.455986976623535
    7. ' space' → logprob: -4.580986976623535
    8. ' parse' → logprob: -4.705986976623535
    9. ' user' → logprob: -5.330986976623535
    10. ' validate' → logprob: -5.830986976623535

Token 10: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008182968012988567
    2. '(' → logprob: -5.758183002471924
    3. '_text' → logprob: -6.008183002471924
    4. '_line' → logprob: -7.508183002471924
    5. '_string' → logprob: -7.633183002471924
    6. '_input' → logprob: -8.008182525634766
    7. '_words' → logprob: -8.383182525634766
    8. '_word' → logprob: -9.258182525634766
    9. '_user' → logprob: -9.383182525634766
    10. '_name' → logprob: -9.508182525634766

Token 11: '(user' (ID: 7195)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020785242319107056
    2. '_' → logprob: -4.020785331726074
    3. '('_' → logprob: -6.520785331726074
    4. '_(' → logprob: -8.770785331726074
    5. '("_' → logprob: -9.020785331726074
    6. '_text' → logprob: -9.145785331726074
    7. '_line' → logprob: -9.270785331726074
    8. '("("' → logprob: -9.270785331726074
    9. '(_)' → logprob: -9.395785331726074
    10. '('' → logprob: -9.520785331726074

Token 12: '_input' (ID: 12507)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38233014941215515
    2. '_input' → logprob: -1.6323301792144775
    3. ')' → logprob: -2.7573301792144775
    4. '_' → logprob: -3.2573301792144775
    5. ')_' → logprob: -5.132329940795898
    6. '_string' → logprob: -5.507329940795898
    7. '_text' → logprob: -5.632329940795898
    8. '()' → logprob: -6.007329940795898
    9. '):
' → logprob: -6.632329940795898
    10. ' ):' → logprob: -7.007329940795898

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02372569777071476
    2. ',' → logprob: -4.023725509643555
    3. ')' → logprob: -5.273725509643555
    4. ' ):' → logprob: -8.773725509643555
    5. '):
' → logprob: -9.023725509643555
    6. ':' → logprob: -9.273725509643555
    7. ' ,' → logprob: -11.398725509643555
    8. '(' → logprob: -11.648725509643555
    9. ')):' → logprob: -11.898725509643555
    10. 's' → logprob: -12.773725509643555

Token 14: '   ' (ID: 271)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.13607902824878693
    2. 'user' → logprob: -2.3860790729522705
    3. ' return' → logprob: -4.011078834533691
    4. '   ' → logprob: -4.261078834533691
    5. '(user' → logprob: -6.261078834533691
    6. 'return' → logprob: -6.886078834533691
    7. '_user' → logprob: -11.136078834533691
    8. '[user' → logprob: -11.136078834533691
    9. '```' → logprob: -11.386078834533691
    10. '	user' → logprob: -11.761078834533691

Token 15: ' return' (ID: 622)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.20218408107757568
    2. 'user' → logprob: -1.7021840810775757
    3. ' return' → logprob: -7.952184200286865
    4. '   ' → logprob: -8.327183723449707
    5. 'return' (adapté à ' return') → logprob: -8.702183723449707
    6. '[user' → logprob: -12.452183723449707
    7. '(user' → logprob: -13.202183723449707
    8. '_user' → logprob: -14.077183723449707
    9. '=user' → logprob: -14.327183723449707
    10. '.user' → logprob: -14.327183723449707

Token 16: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.023258758708834648
    2. 'user' → logprob: -3.773258686065674
    3. ' ' → logprob: -12.273259162902832
    4. '(user' → logprob: -12.898259162902832
    5. '[user' → logprob: -13.273259162902832
    6. '"user' → logprob: -13.523259162902832
    7. '	user' → logprob: -14.273259162902832
    8. ''user' → logprob: -14.398259162902832
    9. '.user' → logprob: -14.648259162902832
    10. '=user' → logprob: -15.398259162902832

Token 17: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.019775008782744408
    2. '_' → logprob: -4.269774913787842
    3. '_put' → logprob: -5.769774913787842
    4. ' _' → logprob: -6.644774913787842
    5. '_p' → logprob: -7.769774913787842
    6. '_s' → logprob: -8.019775390625
    7. '_in' → logprob: -9.394775390625
    8. '_output' → logprob: -9.644775390625
    9. '_n' → logprob: -9.644775390625
    10. '```' → logprob: -9.769775390625

Token 18: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.25228798389434814
    2. '.split' → logprob: -1.5022879838943481
    3. '.strip' → logprob: -8.127287864685059
    4. ' .' → logprob: -10.127287864685059
    5. '.s' → logprob: -11.377287864685059
    6. '().' → logprob: -12.502287864685059
    7. '.rstrip' → logprob: -13.252287864685059
    8. 'split' → logprob: -13.377287864685059
    9. '.replace' → logprob: -13.502287864685059
    10. '.
' → logprob: -14.377287864685059

Token 19: '()

' (ID: 5874)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2373877763748169
    2. '(' → logprob: -1.612387776374817
    3. '("("' → logprob: -4.487387657165527
    4. '()' → logprob: -7.612387657165527
    5. ''' → logprob: -9.612387657165527
    6. '(`' → logprob: -10.362387657165527
    7. '('.')' → logprob: -10.987387657165527
    8. '(('' → logprob: -12.112387657165527
    9. '("' → logprob: -12.112387657165527
    10. '(',' → logprob: -12.487387657165527

Token 20: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00023488728038500994
    2. 'd' → logprob: -8.750234603881836
    3. 'de' → logprob: -10.375234603881836
    4. '```' → logprob: -10.500234603881836
    5. '\' → logprob: -12.250234603881836
    6. '#' → logprob: -12.375234603881836
    7. '<|end|>' → logprob: -13.500234603881836
    8. '``' → logprob: -13.625234603881836
    9. ' def' → logprob: -13.875234603881836
    10. '
' → logprob: -13.875234603881836

Token 21: ' map' (ID: 4014)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06526903808116913
    2. ' process' → logprob: -3.3152689933776855
    3. ' join' → logprob: -4.5652689933776855
    4. 'main' → logprob: -4.5652689933776855
    5. 'process' → logprob: -6.1902689933776855
    6. ' parse' → logprob: -7.0652689933776855
    7. ' calculate' → logprob: -7.0652689933776855
    8. ' convert' → logprob: -7.6902689933776855
    9. ' is' → logprob: -8.315269470214844
    10. 'join' → logprob: -8.440269470214844

Token 22: '_to' (ID: 5089)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40379568934440613
    2. '_input' → logprob: -1.5287957191467285
    3. '_' → logprob: -2.2787957191467285
    4. '_user' → logprob: -5.7787957191467285
    5. '(lambda' → logprob: -5.7787957191467285
    6. '_inputs' → logprob: -6.6537957191467285
    7. '_output' → logprob: -6.9037957191467285
    8. '_data' → logprob: -7.2787957191467285
    9. '_lambda' → logprob: -7.7787957191467285
    10. '_tokens' → logprob: -7.9037957191467285

Token 23: '_int' (ID: 12285)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6107662916183472
    2. '_int' → logprob: -1.3607662916183472
    3. ' int' → logprob: -1.6107662916183472
    4. '(int' → logprob: -8.610766410827637
    5. '_list' → logprob: -8.860766410827637
    6. '_tokens' → logprob: -8.860766410827637
    7. '<int' → logprob: -9.735766410827637
    8. ' str' → logprob: -9.860766410827637
    9. '_words' → logprob: -9.860766410827637
    10. 'str' → logprob: -10.360766410827637

Token 24: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009929145453497767
    2. '(user' → logprob: -8.125992774963379
    3. '()' → logprob: -8.500992774963379
    4. ' (' → logprob: -9.125992774963379
    5. 's' → logprob: -9.250992774963379
    6. '("("' → logprob: -9.375992774963379
    7. '(s' → logprob: -10.125992774963379
    8. '_' → logprob: -10.875992774963379
    9. '():' → logprob: -11.625992774963379
    10. '(tokens' → logprob: -11.625992774963379

Token 25: '_numbers' (ID: 76842)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06928884983062744
    2. 'ings' → logprob: -2.944288730621338
    3. 'ing' → logprob: -4.944288730621338
    4. ')' → logprob: -5.569288730621338
    5. '_list' → logprob: -6.694288730621338
    6. '_tokens' → logprob: -6.694288730621338
    7. '_' → logprob: -7.944288730621338
    8. ')s' → logprob: -9.194289207458496
    9. '_)' → logprob: -9.194289207458496
    10. '_s' → logprob: -10.444289207458496

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023534069769084454
    2. ')' → logprob: -6.252353191375732
    3. '):
' → logprob: -8.75235366821289
    4. ' ):' → logprob: -8.75235366821289
    5. ',' → logprob: -9.87735366821289
    6. 's' → logprob: -11.25235366821289
    7. '):

' → logprob: -11.75235366821289
    8. '(' → logprob: -11.87735366821289
    9. '   ' → logprob: -12.00235366821289
    10. '[]):' → logprob: -12.62735366821289

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5646100640296936
    2. ' return' → logprob: -1.1896100044250488
    3. 'return' → logprob: -2.439610004425049
    4. '[' → logprob: -3.564610004425049
    5. ' map' → logprob: -5.814610004425049
    6. '[int' → logprob: -6.064610004425049
    7. '(' → logprob: -6.439610004425049
    8. ' list' → logprob: -6.939610004425049
    9. '	return' → logprob: -7.439610004425049
    10. 'list' → logprob: -7.689610004425049

Token 28: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4339117109775543
    2. ' return' → logprob: -1.683911681175232
    3. 'return' (adapté à ' return') → logprob: -1.808911681175232
    4. '[' → logprob: -6.8089118003845215
    5. ' map' → logprob: -7.3089118003845215
    6. '[int' → logprob: -8.308911323547363
    7. ' list' → logprob: -8.558911323547363
    8. 'map' → logprob: -9.183911323547363
    9. 'list' → logprob: -9.683911323547363
    10. ' [' → logprob: -9.808911323547363

Token 29: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.005026086699217558
    2. ' [' → logprob: -5.630025863647461
    3. ' map' → logprob: -6.630025863647461
    4. 'list' → logprob: -9.380025863647461
    5. '[' → logprob: -11.505025863647461
    6. '[list' → logprob: -11.755025863647461
    7. '[int' → logprob: -14.505025863647461
    8. '   ' → logprob: -14.505025863647461
    9. 'map' → logprob: -14.630025863647461
    10. ' ' → logprob: -14.630025863647461

Token 30: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07287218421697617
    2. '(int' → logprob: -3.1978721618652344
    3. '(lambda' → logprob: -3.5728721618652344
    4. '(str' → logprob: -6.697872161865234
    5. '(
' → logprob: -9.822872161865234
    6. '("("' → logprob: -10.322872161865234
    7. '(list' → logprob: -11.572872161865234
    8. '(

' → logprob: -12.072872161865234
    9. '<|end|>' → logprob: -12.572872161865234
    10. ' (' → logprob: -13.072872161865234

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016786293126642704
    2. ',str' → logprob: -7.126678466796875
    3. ')' → logprob: -7.251678466796875
    4. '(' → logprob: -9.001678466796875
    5. '(str' → logprob: -10.626678466796875
    6. ' ,' → logprob: -11.876678466796875
    7. ',
' → logprob: -12.626678466796875
    8. '   ' → logprob: -13.501678466796875
    9. 's' → logprob: -13.626678466796875
    10. ')(' → logprob: -14.501678466796875

Token 32: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.16023123264312744
    2. 'str' → logprob: -1.9102312326431274
    3. ')' → logprob: -13.285231590270996
    4. '	str' → logprob: -13.285231590270996
    5. '(str' → logprob: -13.285231590270996
    6. 's' → logprob: -14.160231590270996
    7. '_str' → logprob: -14.910231590270996
    8. ' ' → logprob: -15.035231590270996
    9. ' )' → logprob: -15.785231590270996
    10. ' ' → logprob: -16.16023063659668

Token 33: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -2.935296834039036e-06
    2. ')_' → logprob: -13.37500286102295
    3. '_' → logprob: -15.00000286102295
    4. '(numbers' → logprob: -15.12500286102295
    5. '_number' → logprob: -15.75000286102295
    6. '_n' → logprob: -15.87500286102295
    7. '-_' → logprob: -16.125003814697266
    8. '_letters' → logprob: -17.000003814697266
    9. '_-' → logprob: -17.375003814697266
    10. ')' → logprob: -17.500003814697266

Token 34: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.125000953674316
    3. '))' → logprob: -15.500000953674316
    4. ')
' → logprob: -16.5
    5. '   ' → logprob: -16.625
    6. '())' → logprob: -16.875
    7. ')))' → logprob: -17.25
    8. ')`' → logprob: -17.25
    9. ')return' → logprob: -17.875
    10. '()' → logprob: -18.0

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011713240382960066
    2. '```' → logprob: -10.000117301940918
    3. '\' → logprob: -10.625117301940918
    4. '<|end|>' → logprob: -10.875117301940918
    5. '<|end|>' → logprob: -11.750117301940918
    6. '
' → logprob: -12.500117301940918
    7. ' def' → logprob: -12.750117301940918
    8. '#' → logprob: -13.125117301940918
    9. '\n' → logprob: -13.250117301940918
    10. '(' → logprob: -13.625117301940918

Token 36: ' unpack' (ID: 61704)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0653887465596199
    2. 'main' → logprob: -2.9403886795043945
    3. ' process' → logprob: -5.1903886795043945
    4. ' sum' → logprob: -6.0653886795043945
    5. 'process' → logprob: -6.9403886795043945
    6. 'sum' → logprob: -7.1903886795043945
    7. ' calculate' → logprob: -8.190388679504395
    8. 'calculate' → logprob: -8.565388679504395
    9. ' solve' → logprob: -8.815388679504395
    10. ' compute' → logprob: -10.065388679504395

Token 37: '_numbers' (ID: 76842)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39076200127601624
    2. '_' → logprob: -2.3907620906829834
    3. '()' → logprob: -3.6407620906829834
    4. '(user' → logprob: -3.7657620906829834
    5. '_values' → logprob: -3.7657620906829834
    6. '_arguments' → logprob: -3.8907620906829834
    7. '_elements' → logprob: -4.390761852264404
    8. '_input' → logprob: -4.640761852264404
    9. '_list' → logprob: -4.640761852264404
    10. '_user' → logprob: -4.890761852264404

Token 38: '(int' (ID: 2742)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.24758808314800262
    2. '(' → logprob: -1.622588038444519
    3. '()' → logprob: -4.622588157653809
    4. '(user' → logprob: -4.872588157653809
    5. '(numbers' → logprob: -6.372588157653809
    6. '()(' → logprob: -7.122588157653809
    7. '(*' → logprob: -7.747588157653809
    8. '(line' → logprob: -8.372588157653809
    9. '("("' → logprob: -8.497588157653809
    10. '(nums' → logprob: -8.872588157653809

Token 39: '_iter' (ID: 27043)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03793211653828621
    2. '_numbers' → logprob: -3.6629321575164795
    3. '_s' → logprob: -4.5379319190979
    4. ')_' → logprob: -8.537932395935059
    5. '_' → logprob: -8.662932395935059
    6. '):' → logprob: -9.037932395935059
    7. ')' → logprob: -9.412932395935059
    8. '_list' → logprob: -9.412932395935059
    9. '_values' → logprob: -9.912932395935059
    10. ')s' → logprob: -9.912932395935059

Token 40: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.009541683830320835
    2. 'ator' → logprob: -5.3845415115356445
    3. '):
' → logprob: -5.6345415115356445
    4. ')' → logprob: -6.8845415115356445
    5. '):' → logprob: -8.759541511535645
    6. '=' → logprob: -10.509541511535645
    7. '   ' → logprob: -10.634541511535645
    8. '):

' → logprob: -10.759541511535645
    9. '```' → logprob: -11.134541511535645
    10. '**' → logprob: -11.759541511535645

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005474940408021212
    2. ',' → logprob: -5.505475044250488
    3. ')' → logprob: -6.630475044250488
    4. ' ):' → logprob: -9.755475044250488
    5. '):
' → logprob: -12.130475044250488
    6. ':' → logprob: -12.380475044250488
    7. '   ' → logprob: -12.880475044250488
    8. '(' → logprob: -13.630475044250488
    9. ' ' → logprob: -14.005475044250488
    10. '():' → logprob: -14.255475044250488

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02404346503317356
    2. 'return' → logprob: -4.274043560028076
    3. ' return' → logprob: -4.649043560028076
    4. '    ' → logprob: -9.524043083190918
    5. ' ' → logprob: -9.649043083190918
    6. '*' → logprob: -10.774043083190918
    7. '  ' → logprob: -10.774043083190918
    8. 'a' → logprob: -11.149043083190918
    9. '   ' → logprob: -11.524043083190918
    10. ' numbers' → logprob: -11.649043083190918

Token 43: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.037524931132793427
    2. 'a' (adapté à ' a') → logprob: -3.412524938583374
    3. '   ' → logprob: -6.162524700164795
    4. ' return' → logprob: -6.537524700164795
    5. 'x' → logprob: -9.287525177001953
    6. 'first' → logprob: -9.662525177001953
    7. '*a' → logprob: -9.912525177001953
    8. '*' → logprob: -10.162525177001953
    9. 'numbers' → logprob: -10.787525177001953
    10. ' a' → logprob: -11.037525177001953

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008650107774883509
    2. ' ,' → logprob: -7.7508649826049805
    3. ',b' → logprob: -7.7508649826049805
    4. ',a' → logprob: -14.00086498260498
    5. ',n' → logprob: -14.37586498260498
    6. ',v' → logprob: -14.37586498260498
    7. ',s' → logprob: -14.75086498260498
    8. ',
' → logprob: -15.25086498260498
    9. 'b' → logprob: -15.50086498260498
    10. 'a' → logprob: -15.87586498260498

Token 45: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47407761216163635
    2. 'b' → logprob: -0.974077582359314
    3. ' ' → logprob: -14.849077224731445
    4. ' ' → logprob: -15.724077224731445
    5. '*b' → logprob: -16.849077224731445
    6. '	b' → logprob: -18.099077224731445
    7. '_b' → logprob: -18.349077224731445
    8. '>b' → logprob: -18.724077224731445
    9. '<|end|>' → logprob: -18.974077224731445
    10. ' б' → logprob: -19.724077224731445

Token 46: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35534435510635376
    2. '=' → logprob: -1.230344295501709
    3. ',' → logprob: -4.980344295501709
    4. ' ' → logprob: -13.730344772338867
    5. '<|end|>' → logprob: -14.105344772338867
    6. ' ,' → logprob: -14.605344772338867
    7. ')' → logprob: -14.855344772338867
    8. ' =
' → logprob: -14.855344772338867
    9. '=

' → logprob: -15.480344772338867
    10. ' =)' → logprob: -15.605344772338867

Token 47: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6371490359306335
    2. 'c' → logprob: -0.7621490359306335
    3. '=' → logprob: -6.387148857116699
    4. ' =' → logprob: -6.512148857116699
    5. '*c' → logprob: -7.262148857116699
    6. ' ' → logprob: -8.2621488571167
    7. '*' → logprob: -8.6371488571167
    8. ' *' → logprob: -9.6371488571167
    9. '_c' → logprob: -10.0121488571167
    10. '=c' → logprob: -10.2621488571167

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10064903646707535
    2. '=' → logprob: -2.350649118423462
    3. ',' → logprob: -7.725648880004883
    4. ' ' → logprob: -14.600648880004883
    5. ' =
' → logprob: -15.600648880004883
    6. '  ' → logprob: -15.725648880004883
    7. ')' → logprob: -16.850648880004883
    8. '   ' → logprob: -16.975648880004883
    9. ' ,' → logprob: -17.100648880004883
    10. '=

' → logprob: -17.225648880004883

Token 49: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.027060214430093765
    2. 'int' → logprob: -3.9020602703094482
    3. ' list' → logprob: -5.152060031890869
    4. 'list' → logprob: -7.527060031890869
    5. ' tuple' → logprob: -9.027060508728027
    6. ' map' → logprob: -11.027060508728027
    7. 'tuple' → logprob: -11.402060508728027
    8. ' ' → logprob: -11.527060508728027
    9. '[int' → logprob: -13.152060508728027
    10. '<int' → logprob: -13.277060508728027

Token 50: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -6.704273118884885e-07
    2. 's' → logprob: -15.250000953674316
    3. 'iter' → logprob: -15.250000953674316
    4. 'Iterable' → logprob: -16.625
    5. '_iterator' → logprob: -18.125
    6. '_inter' → logprob: -18.75
    7. '_' → logprob: -18.875
    8. '_ITER' → logprob: -19.375
    9. '_int' → logprob: -19.625
    10. ' iterable' → logprob: -19.625

Token 51: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.00010330478107789531
    2. 'ble' → logprob: -9.375102996826172
    3. 'nable' → logprob: -11.125102996826172
    4. '```' → logprob: -12.750102996826172
    5. 'table' → logprob: -15.375102996826172
    6. '   ' → logprob: -16.375102996826172
    7. 'z' → logprob: -16.625102996826172
    8. 'ables' → logprob: -17.000102996826172
    9. 'd' → logprob: -17.250102996826172
    10. 'uble' → logprob: -17.375102996826172

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7048150300979614
    2. '<|end|>' → logprob: -0.8298150300979614
    3. '\n' → logprob: -2.954814910888672
    4. 'newline' → logprob: -5.079814910888672
    5. ')' → logprob: -5.829814910888672
    6. '<|end|>' → logprob: -5.954814910888672
    7. ':return' → logprob: -6.829814910888672
    8. 'return' → logprob: -6.829814910888672
    9. '' → logprob: -7.079814910888672
    10. '\r' → logprob: -7.704814910888672

Token 53: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3677508533000946
    2. '<|end|>' → logprob: -1.617750883102417
    3. '
' → logprob: -2.992750883102417
    4. 'return' (adapté à ' return') → logprob: -3.367750883102417
    5. ' return' → logprob: -4.867750644683838
    6. '	return' → logprob: -5.367750644683838
    7. '\n' → logprob: -5.492750644683838
    8. '<|end|>' → logprob: -6.117750644683838
    9. ' ' → logprob: -6.742750644683838
    10. ':return' → logprob: -6.867750644683838

Token 55: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31359386444091797
    2. 'a' → logprob: -1.313593864440918
    3. ' (' → logprob: -8.563593864440918
    4. ' ' → logprob: -9.188593864440918
    5. '(' → logprob: -11.188593864440918
    6. '(a' → logprob: -11.313593864440918
    7. ' ' → logprob: -11.438593864440918
    8. '	a' → logprob: -13.563593864440918
    9. '  ' → logprob: -14.438593864440918
    10. '   ' → logprob: -15.438593864440918

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1136433407664299
    2. ' ,' → logprob: -2.2386434078216553
    3. ',b' → logprob: -7.988643169403076
    4. ' ' → logprob: -8.363643646240234
    5. '<|end|>' → logprob: -8.613643646240234
    6. ',
' → logprob: -10.363643646240234
    7. ',a' → logprob: -11.863643646240234
    8. ' ,
' → logprob: -12.113643646240234
    9. ',c' → logprob: -12.613643646240234
    10. '  ' → logprob: -12.738643646240234

Token 57: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04350686073303223
    2. 'b' → logprob: -3.1685068607330322
    3. ' ' → logprob: -8.293506622314453
    4. ' ' → logprob: -8.293506622314453
    5. ' ​' → logprob: -13.918506622314453
    6. 'space' → logprob: -14.043506622314453
    7. ''' → logprob: -14.293506622314453
    8. ' б' → logprob: -14.543506622314453
    9. ' `' → logprob: -14.543506622314453
    10. ',b' → logprob: -14.668506622314453

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003436015686020255
    2. ' ,' → logprob: -5.753436088562012
    3. ',c' → logprob: -8.378436088562012
    4. ' ' → logprob: -11.628436088562012
    5. 'c' → logprob: -11.753436088562012
    6. '<|end|>' → logprob: -12.503436088562012
    7. ',
' → logprob: -12.878436088562012
    8. '`,' → logprob: -13.753436088562012
    9. ',b' → logprob: -13.753436088562012
    10. '```' → logprob: -14.503436088562012

Token 59: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.31326884031295776
    2. 'c' → logprob: -1.3132688999176025
    3. ' ' → logprob: -12.188268661499023
    4. ' ' → logprob: -13.188268661499023
    5. '	c' → logprob: -16.688268661499023
    6. 'space' → logprob: -17.188268661499023
    7. 's' → logprob: -17.563268661499023
    8. '<|end|>' → logprob: -17.688268661499023
    9. '_c' → logprob: -18.063268661499023
    10. '`' → logprob: -18.313268661499023

Token 60: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5461267232894897
    2. '
' → logprob: -0.9211267232894897
    3. '

' → logprob: -4.796126842498779
    4. '<|end|>' → logprob: -5.296126842498779
    5. '\n' → logprob: -5.671126842498779
    6. '\' → logprob: -6.046126842498779
    7. '```' → logprob: -6.296126842498779
    8. '#' → logprob: -7.546126842498779
    9. '<|end|>' → logprob: -8.046126365661621
    10. 'newline' → logprob: -8.421126365661621

Token 61: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0034343579318374395
    2. '\' → logprob: -7.003434181213379
    3. 'a' → logprob: -7.253434181213379
    4. '<|end|>' → logprob: -7.753434181213379
    5. '```' → logprob: -8.128434181213379
    6. '\n' → logprob: -8.128434181213379
    7. '#' → logprob: -8.253434181213379
    8. '
' → logprob: -8.753434181213379
    9. 'n' → logprob: -9.753434181213379
    10. 'print' → logprob: -9.753434181213379

Token 62: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00869529228657484
    2. ' calculate' → logprob: -5.133695125579834
    3. ' solve' → logprob: -6.508695125579834
    4. ' sum' → logprob: -7.508695125579834
    5. ' compute' → logprob: -8.633695602416992
    6. 'main' → logprob: -8.758695602416992
    7. ' process' → logprob: -9.258695602416992
    8. ' find' → logprob: -9.258695602416992
    9. ' add' → logprob: -9.508695602416992
    10. 'calculate' → logprob: -10.133695602416992

Token 63: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.05687310919165611
    2. '(' → logprob: -4.056873321533203
    3. '_area' → logprob: -4.806873321533203
    4. '_' → logprob: -4.931873321533203
    5. '_total' → logprob: -4.931873321533203
    6. '(a' → logprob: -5.681873321533203
    7. '_max' → logprob: -5.931873321533203
    8. '_average' → logprob: -6.056873321533203
    9. '_product' → logprob: -6.681873321533203
    10. '_s' → logprob: -6.931873321533203

Token 64: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3484955132007599
    2. '(a' → logprob: -1.2234954833984375
    3. ' (' → logprob: -11.723495483398438
    4. '():' → logprob: -11.973495483398438
    5. '()' → logprob: -12.098495483398438
    6. '(def' → logprob: -12.473495483398438
    7. '((' → logprob: -12.848495483398438
    8. '(user' → logprob: -12.848495483398438
    9. '(A' → logprob: -12.973495483398438
    10. '(
' → logprob: -13.348495483398438

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022094044834375381
    2. ',b' → logprob: -8.875221252441406
    3. ' ,' → logprob: -9.500221252441406
    4. ')' → logprob: -12.875221252441406
    5. ',a' → logprob: -13.125221252441406
    6. '+' → logprob: -14.625221252441406
    7. ',
' → logprob: -14.625221252441406
    8. ',

' → logprob: -16.125221252441406
    9. '+,' → logprob: -16.250221252441406
    10. '‌,' → logprob: -16.500221252441406

Token 66: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3132629096508026
    2. 'b' → logprob: -1.313262939453125
    3. ' ' → logprob: -14.063262939453125
    4. ',b' → logprob: -16.313262939453125
    5. ')b' → logprob: -16.688262939453125
    6. ' ' → logprob: -16.813262939453125
    7. ' б' → logprob: -16.938262939453125
    8. '	b' → logprob: -17.438262939453125
    9. '>b' → logprob: -17.938262939453125
    10. 'c' → logprob: -18.438262939453125

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.333223139634356e-05
    2. ' ,' → logprob: -10.500033378601074
    3. ',c' → logprob: -12.500033378601074
    4. ')' → logprob: -13.500033378601074
    5. '),' → logprob: -15.750033378601074
    6. ',
' → logprob: -15.750033378601074
    7. '):' → logprob: -16.000032424926758
    8. '‌,' → logprob: -16.125032424926758
    9. 'c' → logprob: -16.875032424926758
    10. ',)' → logprob: -17.125032424926758

Token 68: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4740930497646332
    2. 'c' → logprob: -0.9740930795669556
    3. ')c' → logprob: -11.974093437194824
    4. ' ' → logprob: -12.099093437194824
    5. ')' → logprob: -13.224093437194824
    6. ' ' → logprob: -13.474093437194824
    7. '	c' → logprob: -14.974093437194824
    8. ' )' → logprob: -16.099092483520508
    9. '_c' → logprob: -16.224092483520508
    10. '  ' → logprob: -16.599092483520508

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00032628714689053595
    2. ')' → logprob: -8.125326156616211
    3. '):
' → logprob: -11.000326156616211
    4. ':' → logprob: -11.750326156616211
    5. ' ):' → logprob: -12.500326156616211
    6. '   ' → logprob: -14.625326156616211
    7. ',' → logprob: -14.750326156616211
    8. '**' → logprob: -15.500326156616211
    9. ' ' → logprob: -16.00032615661621
    10. '*' → logprob: -16.00032615661621

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009708948782645166
    2. ' return' → logprob: -7.125970840454102
    3. 'return' → logprob: -8.875970840454102
    4. 'a' → logprob: -11.250970840454102
    5. ' a' → logprob: -12.375970840454102
    6. '    
' → logprob: -12.500970840454102
    7. ')' → logprob: -13.500970840454102
    8. '    ' → logprob: -13.625970840454102
    9. '```' → logprob: -14.250970840454102
    10. '  ' → logprob: -14.750970840454102

Token 71: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8696123361587524
    2. ' return' → logprob: -1.1196123361587524
    3. 'return' (adapté à ' return') → logprob: -1.3696123361587524
    4. 'a' → logprob: -8.494612693786621
    5. ' a' → logprob: -9.869612693786621
    6. ' ' → logprob: -11.744612693786621
    7. '    ' → logprob: -12.494612693786621
    8. '  ' → logprob: -12.994612693786621
    9. '	return' → logprob: -13.369612693786621
    10. ' ' → logprob: -14.244612693786621

Token 72: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.25193139910697937
    2. 'a' → logprob: -1.5019314289093018
    3. ' ' → logprob: -13.626931190490723
    4. ' ' → logprob: -14.126931190490723
    5. '	a' → logprob: -15.251931190490723
    6. '   ' → logprob: -16.25193214416504
    7. '(a' → logprob: -18.12693214416504
    8. ' (' → logprob: -19.00193214416504
    9. '    ' → logprob: -19.37693214416504
    10. '0' → logprob: -19.56443214416504

Token 73: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519415020942688
    2. '+' → logprob: -1.501941442489624
    3. '+b' → logprob: -11.626941680908203
    4. ' ' → logprob: -13.251941680908203
    5. ' ' → logprob: -14.376941680908203
    6. ' +
' → logprob: -14.751941680908203
    7. '+B' → logprob: -15.251941680908203
    8. ' plus' → logprob: -16.126941680908203
    9. '_' → logprob: -16.501941680908203
    10. ' ,' → logprob: -17.126941680908203

Token 74: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759397745132446
    2. 'b' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.450940132141113
    4. ' ' → logprob: -16.200939178466797
    5. '	b' → logprob: -17.200939178466797
    6. 'c' → logprob: -17.325939178466797
    7. ' c' → logprob: -17.700939178466797
    8. '<|end|>' → logprob: -18.575939178466797
    9. ' б' → logprob: -18.950939178466797
    10. '+b' → logprob: -19.325939178466797

Token 75: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11958665400743484
    2. '+' → logprob: -2.244586706161499
    3. 'c' → logprob: -5.49458646774292
    4. ' ' → logprob: -6.36958646774292
    5. '+c' → logprob: -7.74458646774292
    6. ' c' → logprob: -8.494586944580078
    7. '<|end|>' → logprob: -9.119586944580078
    8. '_' → logprob: -9.994586944580078
    9. ' ,' → logprob: -10.369586944580078
    10. ')' → logprob: -10.494586944580078

Token 76: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20141568779945374
    2. ' c' → logprob: -1.7014156579971313
    3. ' ' → logprob: -13.326416015625
    4. '	c' → logprob: -15.201416015625
    5. ' ' → logprob: -15.451416015625
    6. '   ' → logprob: -16.326416015625
    7. ')c' → logprob: -16.826416015625
    8. '<|end|>' → logprob: -17.201416015625
    9. '  ' → logprob: -17.326416015625
    10. '_c' → logprob: -17.576416015625

Token 77: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12653996050357819
    2. '
' → logprob: -2.251539945602417
    3. '

' → logprob: -4.626540184020996
    4. '<|end|>' → logprob: -6.001540184020996
    5. '```' → logprob: -7.626540184020996
    6. '\n' → logprob: -8.001540184020996
    7. '\' → logprob: -8.876540184020996
    8. '#' → logprob: -9.001540184020996
    9. 'n' → logprob: -9.626540184020996
    10. 'newline' → logprob: -9.876540184020996

Token 78: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003281214041635394
    2. 'print' → logprob: -6.878281116485596
    3. 'a' → logprob: -7.003281116485596
    4. '```' → logprob: -8.003281593322754
    5. 'user' → logprob: -8.628281593322754
    6. '\' → logprob: -8.753281593322754
    7. 'result' → logprob: -9.003281593322754
    8. '#' → logprob: -9.128281593322754
    9. 'n' → logprob: -9.128281593322754
    10. 'input' → logprob: -9.378281593322754

Token 79: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0012621370842680335
    2. ' compute' → logprob: -7.251262187957764
    3. ' calculate' → logprob: -7.626262187957764
    4. ' process' → logprob: -10.626261711120605
    5. ' solve' → logprob: -11.376261711120605
    6. 'main' → logprob: -12.001261711120605
    7. ' read' → logprob: -12.001261711120605
    8. ' check' → logprob: -13.001261711120605
    9. '_main' → logprob: -13.251261711120605
    10. ' def' → logprob: -13.376261711120605

Token 80: '_b' (ID: 1535)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.43995845317840576
    2. '_' → logprob: -2.1899585723876953
    3. '_prime' → logprob: -2.3149585723876953
    4. '_sum' → logprob: -2.4399585723876953
    5. '_positive' → logprob: -4.064958572387695
    6. '_div' → logprob: -4.314958572387695
    7. '_multiple' → logprob: -4.689958572387695
    8. '_valid' → logprob: -4.814958572387695
    9. '_pal' → logprob: -4.939958572387695
    10. '_equal' → logprob: -6.939958572387695

Token 81: 'ust' (ID: 570)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1970512866973877
    2. 'etween' → logprob: -1.8220512866973877
    3. '_even' → logprob: -1.9470512866973877
    4. '_prime' → logprob: -2.5720512866973877
    5. 'al' → logprob: -3.1970512866973877
    6. '_less' → logprob: -3.3220512866973877
    7. 'igger' → logprob: -3.5720512866973877
    8. 'e' → logprob: -3.6970512866973877
    9. '_equal' → logprob: -3.8220512866973877
    10. '_pal' → logprob: -3.8220512866973877

Token 82: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023512400686740875
    2. '(a' → logprob: -4.898512363433838
    3. '(amount' → logprob: -4.898512363433838
    4. '(_' → logprob: -6.398512363433838
    5. '_' → logprob: -6.648512363433838
    6. '(b' → logprob: -6.898512363433838
    7. '(sum' → logprob: -7.148512363433838
    8. '_(' → logprob: -7.148512363433838
    9. '(value' → logprob: -7.273512363433838
    10. '(s' → logprob: -8.023512840270996

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.045760221779346466
    2. ')' → logprob: -3.420760154724121
    3. ' ):' → logprob: -4.795760154724121
    4. '>' → logprob: -6.795760154724121
    5. '>):' → logprob: -7.420760154724121
    6. ',' → logprob: -8.045760154724121
    7. ':' → logprob: -8.295760154724121
    8. '=' → logprob: -8.295760154724121
    9. '):
' → logprob: -8.295760154724121
    10. ' )' → logprob: -8.420760154724121

Token 84: '   ' (ID: 271)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.10742362588644028
    2. '   ' → logprob: -2.6074235439300537
    3. ' return' → logprob: -3.7324235439300537
    4. 'total' → logprob: -5.607423782348633
    5. '    ' → logprob: -8.232423782348633
    6. '	total' → logprob: -9.482423782348633
    7. 'return' → logprob: -9.732423782348633
    8. ' ' → logprob: -9.857423782348633
    9. '(total' → logprob: -11.232423782348633
    10. ' ' → logprob: -11.232423782348633

Token 85: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.45936301350593567
    2. '   ' → logprob: -1.3343629837036133
    3. ' total' → logprob: -2.4593629837036133
    4. 'return' (adapté à ' return') → logprob: -4.209362983703613
    5. 'total' → logprob: -5.584362983703613
    6. '    ' → logprob: -7.209362983703613
    7. ' ' → logprob: -10.084362983703613
    8. '	return' → logprob: -10.584362983703613
    9. ' if' → logprob: -10.709362983703613
    10. '    
' → logprob: -11.709362983703613

Token 86: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.014166327193379402
    2. 'total' → logprob: -4.264166355133057
    3. '(total' → logprob: -13.014165878295898
    4. '	total' → logprob: -15.139165878295898
    5. ' ' → logprob: -16.5141658782959
    6. ' tot' → logprob: -16.6391658782959
    7. 't' → logprob: -16.8891658782959
    8. ' ' → logprob: -17.1391658782959
    9. '   ' → logprob: -17.5141658782959
    10. ' tota' → logprob: -17.7641658782959

Token 87: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03370863199234009
    2. ' >' → logprob: -3.4087085723876953
    3. '>=' → logprob: -9.908708572387695
    4. ' ' → logprob: -12.283708572387695
    5. ' >=' → logprob: -13.033708572387695
    6. ' ' → logprob: -13.283708572387695
    7. '()>' → logprob: -13.908708572387695
    8. '">' → logprob: -15.033708572387695
    9. '  ' → logprob: -15.408708572387695
    10. '>`' → logprob: -15.408708572387695

Token 88: ' ' (ID: 220)
  Prédit: '22'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.0023962247651070356
    2. ' ' → logprob: -6.877396106719971
    3. '21' → logprob: -7.502396106719971
    4. '2' → logprob: -8.002396583557129
    5. '100' → logprob: -8.127396583557129
    6. '1' → logprob: -10.502396583557129
    7. '10' → logprob: -10.752396583557129
    8. '17' → logprob: -10.877396583557129
    9. '12' → logprob: -11.002396583557129
    10. 's' → logprob: -11.877396583557129

Token 89: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.0009126556105911732
    2. '21' → logprob: -7.500912666320801
    3. '2' → logprob: -9.2509126663208
    4. '100' → logprob: -9.8759126663208
    5. '12' → logprob: -10.6259126663208
    6. '23' → logprob: -10.7509126663208
    7. '10' → logprob: -11.0009126663208
    8. ' ' → logprob: -11.0009126663208
    9. '1' → logprob: -11.0009126663208
    10. 's' → logprob: -11.3759126663208

Token 90: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13312143087387085
    2. '<|end|>' → logprob: -2.8831214904785156
    3. '

' → logprob: -3.0081214904785156
    4. '
' → logprob: -4.008121490478516
    5. '<|end|>' → logprob: -7.258121490478516
    6. '```' → logprob: -8.258121490478516
    7. ' def' → logprob: -10.383121490478516
    8. '#' → logprob: -11.008121490478516
    9. '\' → logprob: -11.008121490478516
    10. ' 

' → logprob: -11.008121490478516

Token 91: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009913649410009384
    2. 'if' → logprob: -7.625991344451904
    3. 'print' → logprob: -8.625991821289062
    4. 'a' → logprob: -9.500991821289062
    5. '#' → logprob: -9.625991821289062
    6. 'n' → logprob: -9.875991821289062
    7. '<|end|>' → logprob: -10.750991821289062
    8. 'user' → logprob: -11.000991821289062
    9. 'result' → logprob: -11.125991821289062
    10. 'for' → logprob: -11.250991821289062

Token 92: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.02471277117729187
    2. ' blackjack' → logprob: -4.399712562561035
    3. ' def' → logprob: -5.774712562561035
    4. ' evaluate' → logprob: -6.024712562561035
    5. ' calculate' → logprob: -6.274712562561035
    6. ' is' → logprob: -6.274712562561035
    7. ' compute' → logprob: -7.774712562561035
    8. 'main' → logprob: -7.899712562561035
    9. ' check' → logprob: -8.024712562561035
    10. ' determine' → logprob: -8.149712562561035

Token 93: '_b' (ID: 1535)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11559000611305237
    2. '_' → logprob: -2.6155900955200195
    3. '_result' → logprob: -3.9905900955200195
    4. '_total' → logprob: -4.4905900955200195
    5. '_output' → logprob: -6.7405900955200195
    6. '_b' → logprob: -6.9905900955200195
    7. '_(' → logprob: -7.3655900955200195
    8. '_final' → logprob: -7.4905900955200195
    9. '_sum' → logprob: -7.7405900955200195
    10. '_results' → logprob: -7.9905900955200195

Token 94: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.00016361083544325083
    2. 'usted' → logprob: -9.875164031982422
    3. 'us' → logprob: -10.125164031982422
    4. 'urst' → logprob: -10.750164031982422
    5. 'u' → logprob: -11.000164031982422
    6. '   ' → logprob: -12.250164031982422
    7. '_' → logprob: -12.375164031982422
    8. '```' → logprob: -13.125164031982422
    9. 'usting' → logprob: -13.125164031982422
    10. ' ust' → logprob: -13.625164031982422

Token 95: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008094288408756256
    2. '_' → logprob: -5.258094310760498
    3. '()' → logprob: -6.883094310760498
    4. '(' → logprob: -7.008094310760498
    5. ' ():' → logprob: -8.00809383392334
    6. '_out' → logprob: -8.75809383392334
    7. '_status' → logprob: -9.25809383392334
    8. '_output' → logprob: -9.63309383392334
    9. ':' → logprob: -10.13309383392334
    10. 'ed' → logprob: -10.13309383392334

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005581548321060836
    2. ' print' → logprob: -8.125557899475098
    3. 'print' → logprob: -8.250557899475098
    4. '```' → logprob: -14.750557899475098
    5. '       ' → logprob: -15.875557899475098
    6. '    ' → logprob: -16.000558853149414
    7. '	print' → logprob: -16.125558853149414
    8. '   ' → logprob: -16.250558853149414
    9. '  ' → logprob: -16.375558853149414
    10. ' ' → logprob: -16.625558853149414

Token 97: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03470200300216675
    2. '   ' → logprob: -3.6597020626068115
    3. ' print' → logprob: -4.784701824188232
    4. '```' → logprob: -12.03470230102539
    5. '	print' → logprob: -13.78470230102539
    6. ' ' → logprob: -13.90970230102539
    7. 'pr' → logprob: -14.03470230102539
    8. '  ' → logprob: -14.65970230102539
    9. '    ' → logprob: -15.15970230102539
    10. '`' → logprob: -16.03470230102539

Token 98: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.16687704622745514
    2. '(' → logprob: -1.916877031326294
    3. '('' → logprob: -5.166877269744873
    4. '("("' → logprob: -7.166877269744873
    5. '(":' → logprob: -10.291876792907715
    6. '()' → logprob: -10.541876792907715
    7. '("")' → logprob: -10.666876792907715
    8. '("(' → logprob: -10.666876792907715
    9. '"' → logprob: -11.541876792907715
    10. '(True' → logprob: -12.041876792907715

Token 99: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31162944436073303
    2. 'Bust' → logprob: -1.8116294145584106
    3. 'B' → logprob: -2.3116295337677
    4. 'バ' → logprob: -6.061629295349121
    5. 'BUR' → logprob: -7.186629295349121
    6. 'Б' → logprob: -7.186629295349121
    7. 'Burst' → logprob: -8.186629295349121
    8. 'BU' → logprob: -9.186629295349121
    9. '爆' → logprob: -9.561629295349121
    10. 'burst' → logprob: -9.811629295349121

Token 100: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.04448551684617996
    2. 'u' → logprob: -3.419485569000244
    3. 'us' → logprob: -4.544485569000244
    4. 'usted' → logprob: -9.669485092163086
    5. ' u' → logprob: -12.106985092163086
    6. '\' → logprob: -12.106985092163086
    7. 'ush' → logprob: -12.481985092163086
    8. ' ust' → logprob: -12.481985092163086
    9. 's' → logprob: -12.544485092163086
    10. 'UST' → logprob: -12.606985092163086

Token 101: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0005768624832853675
    2. '!' → logprob: -7.500576972961426
    3. '')
' → logprob: -11.625576972961426
    4. '")' → logprob: -12.125576972961426
    5. ''' → logprob: -12.625576972961426
    6. ')' → logprob: -12.625576972961426
    7. 'b' → logprob: -14.000576972961426
    8. '')

' → logprob: -14.375576972961426
    9. '')
' → logprob: -15.250576972961426
    10. 's' → logprob: -16.12557601928711

Token 102: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.522638169466518e-05
    2. '
' → logprob: -11.000024795532227
    3. '```' → logprob: -13.000024795532227
    4. 'for' → logprob: -13.500024795532227
    5. '<|end|>' → logprob: -13.750024795532227
    6. 'if' → logprob: -14.125024795532227
    7. 'a' → logprob: -14.500024795532227
    8. '#' → logprob: -15.250024795532227
    9. '    
' → logprob: -15.250024795532227
    10. 'user' → logprob: -15.250024795532227

Token 103: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.040101390331983566
    2. ' play' → logprob: -4.290101528167725
    3. 'main' → logprob: -5.165101528167725
    4. '_main' → logprob: -5.290101528167725
    5. ' run' → logprob: -5.415101528167725
    6. ' print' → logprob: -6.290101528167725
    7. ' check' → logprob: -6.415101528167725
    8. ' def' → logprob: -6.790101528167725
    9. ' blackjack' → logprob: -6.790101528167725
    10. ' process' → logprob: -6.915101528167725

Token 104: '_win' (ID: 63099)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.897544264793396
    2. '('_' → logprob: -1.522544264793396
    3. '('' → logprob: -1.772544264793396
    4. '(' → logprob: -2.1475443840026855
    5. '_total' → logprob: -3.0225443840026855
    6. '()' → logprob: -3.6475443840026855
    7. '_sum' → logprob: -5.7725443840026855
    8. '_result' → logprob: -6.1475443840026855
    9. '_(' → logprob: -6.2725443840026855
    10. '(_' → logprob: -6.3975443840026855

Token 105: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07128775119781494
    2. '()' → logprob: -2.8212876319885254
    3. '():
' → logprob: -4.696287631988525
    4. ' ():' → logprob: -9.196288108825684
    5. ' ()' → logprob: -10.446288108825684
    6. '():
' → logprob: -12.071288108825684
    7. '(' → logprob: -12.196288108825684
    8. '():

' → logprob: -12.571288108825684
    9. ':' → logprob: -14.696288108825684
    10. '()>' → logprob: -14.821288108825684

Token 106: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18184402585029602
    2. '   ' → logprob: -1.8068439960479736
    3. ' print' → logprob: -6.181844234466553
    4. 'def' → logprob: -10.681843757629395
    5. '	print' → logprob: -12.306843757629395
    6. '```' → logprob: -13.931843757629395
    7. ' ' → logprob: -14.181843757629395
    8. '  ' → logprob: -14.931843757629395
    9. '       ' → logprob: -15.931843757629395
    10. 'pass' → logprob: -16.05684471130371

Token 107: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004020713677164167
    2. ' print' → logprob: -7.875401973724365
    3. '   ' → logprob: -10.750402450561523
    4. '	print' → logprob: -15.500402450561523
    5. ' ' → logprob: -16.000402450561523
    6. '```' → logprob: -16.000402450561523
    7. '  ' → logprob: -16.750402450561523
    8. '    ' → logprob: -18.500402450561523
    9. 'pass' → logprob: -18.500402450561523
    10. 'def' → logprob: -18.625402450561523

Token 108: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.014201114885509014
    2. '(' → logprob: -4.2642011642456055
    3. '('(' → logprob: -10.889201164245605
    4. '()' → logprob: -11.389201164245605
    5. '("' → logprob: -12.014201164245605
    6. ''' → logprob: -15.014201164245605
    7. '(
' → logprob: -15.014201164245605
    8. ' ('' → logprob: -15.264201164245605
    9. '(

' → logprob: -16.26420021057129
    10. '(('' → logprob: -16.26420021057129

Token 109: 'win' (ID: 11668)
  Prédit: 'win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.01269269548356533
    2. ''' → logprob: -4.762692928314209
    3. 'black' → logprob: -6.387692928314209
    4. 'winner' → logprob: -8.26269245147705
    5. ''w' → logprob: -8.51269245147705
    6. 'b' → logprob: -8.51269245147705
    7. 'won' → logprob: -8.76269245147705
    8. 'safe' → logprob: -8.88769245147705
    9. 'ok' → logprob: -9.01269245147705
    10. 'winning' → logprob: -9.13769245147705

Token 110: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0019606323912739754
    2. '()' → logprob: -6.251960754394531
    3. '')
' → logprob: -10.501960754394531
    4. ')' → logprob: -13.501960754394531
    5. '')

' → logprob: -13.626960754394531
    6. ''' → logprob: -14.251960754394531
    7. '")' → logprob: -14.376960754394531
    8. '('' → logprob: -14.501960754394531
    9. '!' → logprob: -15.376960754394531
    10. '')
' → logprob: -18.00196075439453

Token 111: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.318681188422488e-05
    2. 'if' → logprob: -11.25001335144043
    3. 'for' → logprob: -16.37501335144043
    4. '```' → logprob: -17.12501335144043
    5. 'user' → logprob: -17.25001335144043
    6. ' def' → logprob: -17.50001335144043
    7. 'while' → logprob: -18.87501335144043
    8. 'a' → logprob: -19.62501335144043
    9. '#' → logprob: -19.75001335144043
    10. 'ndef' → logprob: -20.50001335144043

Token 112: ' main' (ID: 2758)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6388436555862427
    2. 'def' → logprob: -1.5138436555862427
    3. ' main' → logprob: -1.6388436555862427
    4. ' ' → logprob: -3.888843536376953
    5. '_' → logprob: -4.263843536376953
    6. '_main' → logprob: -5.263843536376953
    7. ' 
' → logprob: -5.263843536376953
    8. 'main' → logprob: -5.638843536376953
    9. ' _' → logprob: -5.763843536376953
    10. ' __' → logprob: -6.263843536376953

Token 113: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004388933070003986
    2. '(' → logprob: -5.754388809204102
    3. '()' → logprob: -6.754388809204102
    4. ':' → logprob: -10.754388809204102
    5. '():
' → logprob: -11.754388809204102
    6. '_' → logprob: -12.004388809204102
    7. ' ():' → logprob: -12.879388809204102
    8. '()>' → logprob: -13.004388809204102
    9. '()">' → logprob: -13.879388809204102
    10. '(
' → logprob: -14.379388809204102

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051233358681201935
    2. ' user' → logprob: -3.4262332916259766
    3. 'user' → logprob: -4.051233291625977
    4. '    
' → logprob: -11.301233291625977
    5. '	user' → logprob: -11.926233291625977
    6. '   ' → logprob: -12.676233291625977
    7. 'input' → logprob: -12.926233291625977
    8. '    ' → logprob: -13.301233291625977
    9. '
' → logprob: -13.301233291625977
    10. '       ' → logprob: -14.176233291625977

Token 115: ' user' (ID: 1825)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' (adapté à ' user') → logprob: -0.00871384609490633
    2. ' user' → logprob: -4.758713722229004
    3. '   ' → logprob: -9.383713722229004
    4. 'raw' → logprob: -12.008713722229004
    5. 'numbers' → logprob: -13.508713722229004
    6. 'input' → logprob: -13.883713722229004
    7. 'inputs' → logprob: -14.008713722229004
    8. '    
' → logprob: -14.008713722229004
    9. '	user' → logprob: -14.258713722229004
    10. '
' → logprob: -14.508713722229004

Token 116: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.2378600735682994e-05
    2. '_' → logprob: -10.375032424926758
    3. '_user' → logprob: -15.500032424926758
    4. ' _' → logprob: -15.625032424926758
    5. '_output' → logprob: -15.625032424926758
    6. 'input' → logprob: -16.375032424926758
    7. '_inputs' → logprob: -16.375032424926758
    8. '_in' → logprob: -16.625032424926758
    9. '   ' → logprob: -16.875032424926758
    10. '_data' → logprob: -17.500032424926758

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005965765565633774
    2. '=' → logprob: -5.130965709686279
    3. ' ' → logprob: -10.380966186523438
    4. '_' → logprob: -12.255966186523438
    5. ' ' → logprob: -14.380966186523438
    6. ':' → logprob: -15.505966186523438
    7. '  ' → logprob: -15.630966186523438
    8. '   ' → logprob: -15.755966186523438
    9. ' =
' → logprob: -15.755966186523438
    10. '	' → logprob: -17.005966186523438

Token 118: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.07889176905155182
    2. 'read' → logprob: -2.5788917541503906
    3. '	read' → logprob: -13.70389175415039
    4. ' input' → logprob: -14.20389175415039
    5. 'input' → logprob: -15.70389175415039
    6. '(read' → logprob: -15.95389175415039
    7. ' ' → logprob: -17.45389175415039
    8. '  ' → logprob: -18.95389175415039
    9. 'Read' → logprob: -20.20389175415039
    10. '.read' → logprob: -20.20389175415039

Token 119: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.73183855926618e-05
    2. '_' → logprob: -9.500077247619629
    3. '_user' → logprob: -13.375077247619629
    4. ' _' → logprob: -15.500077247619629
    5. '_output' → logprob: -15.875077247619629
    6. '_Input' → logprob: -16.000078201293945
    7. '_inputs' → logprob: -16.250078201293945
    8. '_in' → logprob: -16.375078201293945
    9. '_line' → logprob: -16.500078201293945
    10. ')_' → logprob: -17.500078201293945

Token 120: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.114600834436715e-05
    2. '()
' → logprob: -9.750091552734375
    3. '(' → logprob: -10.625091552734375
    4. ' ()' → logprob: -12.125091552734375
    5. '()

' → logprob: -13.875091552734375
    6. '()`' → logprob: -14.750091552734375
    7. '();' → logprob: -15.250091552734375
    8. '()<' → logprob: -15.625091552734375
    9. '()>' → logprob: -15.750091552734375
    10. '().' → logprob: -15.875091552734375

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008006542921066284
    2. 'tokens' → logprob: -5.008006572723389
    3. '    
' → logprob: -7.758006572723389
    4. ' tokens' → logprob: -8.13300609588623
    5. ' parts' → logprob: -8.75800609588623
    6. 'words' → logprob: -9.38300609588623
    7. 'parts' → logprob: -9.88300609588623
    8. '  ' → logprob: -10.25800609588623
    9. ' splitted' → logprob: -10.50800609588623
    10. 's' → logprob: -10.75800609588623

Token 122: ' split' (ID: 12648)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4489736557006836
    2. 'numbers' → logprob: -1.8239736557006836
    3. 'split' (adapté à ' split') → logprob: -2.1989736557006836
    4. 'tokens' → logprob: -3.8239736557006836
    5. '   ' → logprob: -4.198973655700684
    6. ' numbers' → logprob: -4.448973655700684
    7. ' str' → logprob: -4.698973655700684
    8. 'parts' → logprob: -4.823973655700684
    9. 'spl' → logprob: -4.948973655700684
    10. ' splitted' → logprob: -5.323973655700684

Token 123: '_numbers' (ID: 76842)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0005980697460472584
    2. '_' → logprob: -7.750597953796387
    3. '_user' → logprob: -8.875597953796387
    4. '_output' → logprob: -10.750597953796387
    5. '_inputs' → logprob: -13.250597953796387
    6. '_in' → logprob: -14.125597953796387
    7. '_users' → logprob: -14.625597953796387
    8. '_result' → logprob: -15.000597953796387
    9. '_line' → logprob: -15.125597953796387
    10. ' _' → logprob: -15.125597953796387

Token 124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7297667860984802
    2. ' =' → logprob: -0.7297667860984802
    3. '=user' → logprob: -3.479766845703125
    4. '(user' → logprob: -5.479766845703125
    5. '_' → logprob: -7.854766845703125
    6. '   ' → logprob: -8.854766845703125
    7. '(' → logprob: -8.979766845703125
    8. '_user' → logprob: -9.479766845703125
    9. 'user' → logprob: -9.604766845703125
    10. 'ed' → logprob: -9.729766845703125

Token 125: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.2519490122795105
    2. 'split' → logprob: -1.5019490718841553
    3. '(split' → logprob: -11.126949310302734
    4. ' ' → logprob: -12.501949310302734
    5. '   ' → logprob: -14.626949310302734
    6. ' ' → logprob: -15.376949310302734
    7. '.split' → logprob: -15.376949310302734
    8. 'plit' → logprob: -16.001949310302734
    9. 'spl' → logprob: -16.001949310302734
    10. '_split' → logprob: -16.501949310302734

Token 126: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.15310683415737e-05
    2. '_user' → logprob: -10.875021934509277
    3. '_' → logprob: -13.250021934509277
    4. '_output' → logprob: -14.750021934509277
    5. '_inputs' → logprob: -16.12502098083496
    6. '_numbers' → logprob: -16.87502098083496
    7. '```' → logprob: -16.87502098083496
    8. '_to' → logprob: -17.12502098083496
    9. 'input' → logprob: -17.75002098083496
    10. ' _' → logprob: -18.12502098083496

Token 127: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.250097274780273
    3. ' (' → logprob: -14.500097274780273
    4. 'user' → logprob: -16.500097274780273
    5. '(
' → logprob: -16.500097274780273
    6. '(users' → logprob: -16.875097274780273
    7. '=user' → logprob: -17.500097274780273
    8. '(u' → logprob: -18.000097274780273
    9. '()' → logprob: -18.500097274780273
    10. ',user' → logprob: -18.875097274780273

Token 128: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.856408536899835e-05
    2. 'put' → logprob: -10.625028610229492
    3. 'input' → logprob: -12.750028610229492
    4. '_put' → logprob: -14.375028610229492
    5. '_' → logprob: -14.750028610229492
    6. '_inputs' → logprob: -16.625028610229492
    7. '_in' → logprob: -16.750028610229492
    8. 'Input' → logprob: -16.750028610229492
    9. '_numbers' → logprob: -17.125028610229492
    10. '```' → logprob: -17.125028610229492

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.3822154111694545e-05
    2. ')
' → logprob: -10.375043869018555
    3. '   ' → logprob: -11.875043869018555
    4. '(user' → logprob: -12.500043869018555
    5. ' ' → logprob: -14.375043869018555
    6. 'user' → logprob: -14.875043869018555
    7. '()' → logprob: -15.125043869018555
    8. ' )' → logprob: -15.125043869018555
    9. '(' → logprob: -15.625043869018555
    10. '[' → logprob: -16.375043869018555

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010115262120962143
    2. 'int' → logprob: -5.010115146636963
    3. '
' → logprob: -6.510115146636963
    4. '    
' → logprob: -7.510115146636963
    5. ' int' → logprob: -8.135115623474121
    6. '  ' → logprob: -8.885115623474121
    7. ' numbers' → logprob: -9.010115623474121
    8. ' ' → logprob: -9.135115623474121
    9. 'numbers' → logprob: -9.135115623474121
    10. 'ints' → logprob: -9.385115623474121

Token 131: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.007592895533889532
    2. 'ints' → logprob: -5.257592678070068
    3. ' int' → logprob: -6.382592678070068
    4. 'numbers' → logprob: -7.882592678070068
    5. 'mapped' → logprob: -9.257593154907227
    6. '   ' → logprob: -9.882593154907227
    7. ' ints' → logprob: -10.632593154907227
    8. 'inte' → logprob: -10.757593154907227
    9. 'num' → logprob: -11.007593154907227
    10. 'str' → logprob: -11.132593154907227

Token 132: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.03734568506479263
    2. '_iter' → logprob: -3.5373456478118896
    3. '_' → logprob: -5.662345886230469
    4. 's' → logprob: -5.662345886230469
    5. '_list' → logprob: -8.537345886230469
    6. '_iterator' → logprob: -9.037345886230469
    7. '_s' → logprob: -9.662345886230469
    8. '_n' → logprob: -9.912345886230469
    9. '_values' → logprob: -10.412345886230469
    10. '_map' → logprob: -10.787345886230469

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804252669215202
    2. '=' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.538042068481445
    4. '   ' → logprob: -15.413042068481445
    5. 's' → logprob: -15.663042068481445
    6. '  ' → logprob: -16.413042068481445
    7. ' =
' → logprob: -16.913042068481445
    8. '	' → logprob: -17.538042068481445
    9. '＝' → logprob: -18.038042068481445
    10. '    ' → logprob: -18.038042068481445

Token 134: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6116686463356018
    2. ' map' → logprob: -0.8616686463356018
    3. 'list' → logprob: -3.986668586730957
    4. ' list' → logprob: -4.111668586730957
    5. '   ' → logprob: -8.861668586730957
    6. ' ' → logprob: -11.736668586730957
    7. '	map' → logprob: -12.736668586730957
    8. '  ' → logprob: -13.736668586730957
    9. '(map' → logprob: -14.111668586730957
    10. '    ' → logprob: -14.736668586730957

Token 135: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.5570885807392187e-05
    2. '_' → logprob: -11.125015258789062
    3. '_t' → logprob: -14.250015258789062
    4. ' _' → logprob: -17.375015258789062
    5. '_TO' → logprob: -17.875015258789062
    6. 'to' → logprob: -18.125015258789062
    7. 'To' → logprob: -18.125015258789062
    8. '(' → logprob: -18.250015258789062
    9. '(_' → logprob: -18.750015258789062
    10. ')_' → logprob: -19.000015258789062

Token 136: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0028117671608924866
    2. 'int' → logprob: -5.877811908721924
    3. ' int' → logprob: -12.502811431884766
    4. 'Int' → logprob: -13.252811431884766
    5. '<int' → logprob: -14.127811431884766
    6. '_in' → logprob: -15.002811431884766
    7. '(int' → logprob: -16.127811431884766
    8. '[int' → logprob: -16.627811431884766
    9. '_' → logprob: -16.877811431884766
    10. 'nt' → logprob: -17.002811431884766

Token 137: '(split' (ID: 74985)
  Prédit: '(split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(split' → logprob: -0.00020473242329899222
    2. '(' → logprob: -8.500205039978027
    3. ' (' → logprob: -14.125205039978027
    4. '(s' → logprob: -15.250205039978027
    5. '(
' → logprob: -16.37520408630371
    6. '(strip' → logprob: -17.87520408630371
    7. '(skip' → logprob: -18.00020408630371
    8. '(sp' → logprob: -18.00020408630371
    9. '((' → logprob: -18.00020408630371
    10. '(sl' → logprob: -19.00020408630371

Token 138: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.282920129597187e-05
    2. 'numbers' → logprob: -11.625012397766113
    3. '_' → logprob: -13.375012397766113
    4. 'umbers' → logprob: -13.875012397766113
    5. '_n' → logprob: -15.000012397766113
    6. '_number' → logprob: -15.500012397766113
    7. '(numbers' → logprob: -15.500012397766113
    8. 'er' → logprob: -15.500012397766113
    9. ')' → logprob: -15.875012397766113
    10. ')_' → logprob: -16.25001335144043

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030157022178173065
    2. ')
' → logprob: -3.5301570892333984
    3. '   ' → logprob: -8.280157089233398
    4. '()' → logprob: -9.155157089233398
    5. '()
' → logprob: -10.780157089233398
    6. '())' → logprob: -12.030157089233398
    7. ' )' → logprob: -12.280157089233398
    8. '())
' → logprob: -12.655157089233398
    9. ')
' → logprob: -12.780157089233398
    10. ' ' → logprob: -12.780157089233398

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03672592341899872
    2. 'a' → logprob: -4.286725997924805
    3. '<|end|>' → logprob: -4.411725997924805
    4. '
' → logprob: -5.536725997924805
    5. '    
' → logprob: -6.161725997924805
    6. ' ' → logprob: -7.036725997924805
    7. ' a' → logprob: -7.036725997924805
    8. '  ' → logprob: -7.286725997924805
    9. '<|end|>' → logprob: -8.286725997924805
    10. '  
' → logprob: -8.411725997924805

Token 141: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.06597616523504257
    2. ' a' → logprob: -2.815976142883301
    3. 'numbers' → logprob: -5.815976142883301
    4. ' numbers' → logprob: -7.690976142883301
    5. 'nums' → logprob: -8.4409761428833
    6. '   ' → logprob: -8.9409761428833
    7. ' unpack' → logprob: -9.9409761428833
    8. 'un' → logprob: -10.1909761428833
    9. 'values' → logprob: -10.3159761428833
    10. ' ' → logprob: -11.0659761428833

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.629921436891891e-05
    2. ' ,' → logprob: -11.12502670288086
    3. ',b' → logprob: -11.37502670288086
    4. 'b' → logprob: -17.00002670288086
    5. '_,' → logprob: -17.00002670288086
    6. 's' → logprob: -18.25002670288086
    7. ',
' → logprob: -18.62502670288086
    8. 'a' → logprob: -18.62502670288086
    9. ',a' → logprob: -18.87502670288086
    10. ' =' → logprob: -19.00002670288086

Token 143: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03408338129520416
    2. ' ' → logprob: -3.784083366394043
    3. 'b' → logprob: -4.534083366394043
    4. ' ' → logprob: -10.659083366394043
    5. '<|end|>' → logprob: -11.034083366394043
    6. 'space' → logprob: -14.409083366394043
    7. '_b' → logprob: -15.034083366394043
    8. ',b' → logprob: -15.409083366394043
    9. '	b' → logprob: -15.534083366394043
    10. '"' → logprob: -15.534083366394043

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005479106330312788
    2. ',c' → logprob: -7.875547885894775
    3. ' ,' → logprob: -8.750548362731934
    4. '=' → logprob: -12.500548362731934
    5. 'c' → logprob: -12.875548362731934
    6. ' =' → logprob: -13.875548362731934
    7. '<|end|>' → logprob: -14.250548362731934
    8. '_,' → logprob: -14.625548362731934
    9. ',b' → logprob: -15.625548362731934
    10. ',
' → logprob: -16.125547409057617

Token 145: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.023315709084272385
    2. 'c' → logprob: -3.773315668106079
    3. ' ' → logprob: -10.2733154296875
    4. '<|end|>' → logprob: -10.3983154296875
    5. ' ' → logprob: -12.2733154296875
    6. '	c' → logprob: -15.2733154296875
    7. '_c' → logprob: -15.5233154296875
    8. '  ' → logprob: -17.2733154296875
    9. ' 
' → logprob: -17.5233154296875
    10. '_' → logprob: -17.6483154296875

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024787469301372766
    2. '=' → logprob: -6.00247859954834
    3. ',' → logprob: -12.87747859954834
    4. ' ' → logprob: -15.50247859954834
    5. ' =
' → logprob: -16.502479553222656
    6. ' =)' → logprob: -16.502479553222656
    7. ' ,' → logprob: -16.752479553222656
    8. '  ' → logprob: -17.127479553222656
    9. ')' → logprob: -17.252479553222656
    10. ' ' → logprob: -18.502479553222656

Token 147: ' unpack' (ID: 61704)
  Prédit: ' unpack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unpack' → logprob: -0.002914596116170287
    2. 'un' → logprob: -6.0029144287109375
    3. ' un' → logprob: -8.127914428710938
    4. '_unpack' → logprob: -9.127914428710938
    5. '.unpack' → logprob: -10.627914428710938
    6. ' unwrap' → logprob: -13.127914428710938
    7. ' list' → logprob: -13.252914428710938
    8. ' unzip' → logprob: -13.377914428710938
    9. 'list' → logprob: -13.502914428710938
    10. '	un' → logprob: -14.002914428710938

Token 148: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -2.3080716346157715e-05
    2. '_' → logprob: -11.000022888183594
    3. '_number' → logprob: -13.500022888183594
    4. '_n' → logprob: -13.625022888183594
    5. ' _' → logprob: -13.750022888183594
    6. '(_' → logprob: -14.750022888183594
    7. '(numbers' → logprob: -15.000022888183594
    8. '_int' → logprob: -15.000022888183594
    9. 'numbers' → logprob: -15.625022888183594
    10. '(int' → logprob: -15.875022888183594

Token 149: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.5716304410016164e-05
    2. '(' → logprob: -10.250035285949707
    3. 'int' → logprob: -15.875035285949707
    4. '(intent' → logprob: -16.875036239624023
    5. ' (' → logprob: -17.375036239624023
    6. '<int' → logprob: -18.125036239624023
    7. '=int' → logprob: -18.375036239624023
    8. '(
' → logprob: -18.500036239624023
    9. '[int' → logprob: -18.625036239624023
    10. '(i' → logprob: -18.875036239624023

Token 150: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -14.375001907348633
    3. 'numbers' → logprob: -14.625001907348633
    4. 'umbers' → logprob: -14.875001907348633
    5. 'er' → logprob: -15.750001907348633
    6. '_number' → logprob: -16.625001907348633
    7. '(numbers' → logprob: -16.625001907348633
    8. 'able' → logprob: -17.375001907348633
    9. 's' → logprob: -17.625001907348633
    10. '_
' → logprob: -18.000001907348633

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043460296001285315
    2. ')
' → logprob: -7.750434398651123
    3. '   ' → logprob: -12.875434875488281
    4. ' )' → logprob: -14.250434875488281
    5. ')

' → logprob: -15.500434875488281
    6. ' ' → logprob: -15.625434875488281
    7. '()' → logprob: -15.750434875488281
    8. ')
' → logprob: -16.00043487548828
    9. ')`' → logprob: -16.87543487548828
    10. '())' → logprob: -17.25043487548828

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4623509347438812
    2. 'total' → logprob: -1.7123509645462036
    3. '
' → logprob: -1.8373509645462036
    4. ' total' → logprob: -3.587350845336914
    5. '    
' → logprob: -6.712350845336914
    6. '  
' → logprob: -7.962350845336914
    7. ' ' → logprob: -7.962350845336914
    8. '  ' → logprob: -8.587350845336914
    9. '	total' → logprob: -8.587350845336914
    10. '```' → logprob: -8.712350845336914

Token 153: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0621807686984539
    2. ' total' → logprob: -2.812180757522583
    3. 'result' → logprob: -9.312180519104004
    4. 'sum' → logprob: -9.687180519104004
    5. '   ' → logprob: -10.687180519104004
    6. '
' → logprob: -10.812180519104004
    7. ' result' → logprob: -12.562180519104004
    8. '_total' → logprob: -12.937180519104004
    9. '```' → logprob: -13.062180519104004
    10. '	total' → logprob: -13.062180519104004

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017258725129067898
    2. '=' → logprob: -6.376725673675537
    3. '_' → logprob: -10.876726150512695
    4. ' ' → logprob: -12.501726150512695
    5. ' ' → logprob: -14.626726150512695
    6. ')' → logprob: -15.376726150512695
    7. ' =
' → logprob: -15.501726150512695
    8. ' _' → logprob: -16.001726150512695
    9. ' =)' → logprob: -16.126726150512695
    10. '  ' → logprob: -17.001726150512695

Token 155: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.2519293427467346
    2. 'compute' → logprob: -1.5019292831420898
    3. '   ' → logprob: -16.001930236816406
    4. '.compute' → logprob: -17.251930236816406
    5. ' ' → logprob: -17.751930236816406
    6. ' ' → logprob: -18.001930236816406
    7. '    ' → logprob: -18.001930236816406
    8. '_compute' → logprob: -18.001930236816406
    9. 'computer' → logprob: -18.751930236816406
    10. '  ' → logprob: -19.001930236816406

Token 156: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.875
    3. 'sum' → logprob: -17.625
    4. '_total' → logprob: -17.75
    5. ' _' → logprob: -20.625
    6. '_s' → logprob: -20.625
    7. '_SUM' → logprob: -22.25
    8. '_
' → logprob: -22.75
    9. ' sum' → logprob: -22.875
    10. '__' → logprob: -23.0

Token 157: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0052354102954268456
    2. '(' → logprob: -5.255235195159912
    3. ' (' → logprob: -13.75523567199707
    4. '(
' → logprob: -15.50523567199707
    5. '(total' → logprob: -15.75523567199707
    6. '(

' → logprob: -17.63023567199707
    7. '((' → logprob: -17.88023567199707
    8. ' ' → logprob: -18.00523567199707
    9. '(A' → logprob: -18.63023567199707
    10. '()' → logprob: -18.63023567199707

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006408308399841189
    2. ',b' → logprob: -7.500640869140625
    3. ' ,' → logprob: -9.375640869140625
    4. ')' → logprob: -13.625640869140625
    5. 'b' → logprob: -14.500640869140625
    6. ',
' → logprob: -14.750640869140625
    7. ' ' → logprob: -14.875640869140625
    8. ',c' → logprob: -16.125640869140625
    9. '<|end|>' → logprob: -16.125640869140625
    10. '   ' → logprob: -16.375640869140625

Token 159: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.038048721849918365
    2. 'b' → logprob: -3.28804874420166
    3. ' ' → logprob: -11.91304874420166
    4. ')' → logprob: -15.41304874420166
    5. ' ' → logprob: -16.288047790527344
    6. '<|end|>' → logprob: -16.538047790527344
    7. ',b' → logprob: -16.788047790527344
    8. 'c' → logprob: -16.913047790527344
    9. ',' → logprob: -17.163047790527344
    10. ')b' → logprob: -17.288047790527344

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012082771718269214
    2. ' ,' → logprob: -9.375121116638184
    3. ')' → logprob: -11.000121116638184
    4. ',b' → logprob: -11.250121116638184
    5. ',
' → logprob: -12.750121116638184
    6. ',c' → logprob: -13.125121116638184
    7. 'b' → logprob: -14.875121116638184
    8. ' ' → logprob: -15.250121116638184
    9. '<|end|>' → logprob: -16.000120162963867
    10. '),' → logprob: -16.375120162963867

Token 161: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5759533643722534
    2. 'c' → logprob: -0.8259533643722534
    3. ' ' → logprob: -11.950953483581543
    4. ')c' → logprob: -12.825953483581543
    5. '   ' → logprob: -13.575953483581543
    6. '	c' → logprob: -13.575953483581543
    7. ')' → logprob: -13.575953483581543
    8. 'b' → logprob: -15.075953483581543
    9. '  ' → logprob: -15.575953483581543
    10. ' ' → logprob: -15.825953483581543

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038102537393569946
    2. ')
' → logprob: -3.288102626800537
    3. ')
' → logprob: -10.538102149963379
    4. '   ' → logprob: -10.788102149963379
    5. ')

' → logprob: -11.288102149963379
    6. ' )' → logprob: -14.288102149963379
    7. ' ' → logprob: -15.163102149963379
    8. ')`' → logprob: -15.913102149963379
    9. '
' → logprob: -16.038103103637695
    10. ' )
' → logprob: -16.163103103637695

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001501175225712359
    2. '
' → logprob: -6.751501083374023
    3. ' if' → logprob: -8.751501083374023
    4. '    
' → logprob: -9.251501083374023
    5. 'if' → logprob: -9.626501083374023
    6. '    ' → logprob: -13.001501083374023
    7. '<|end|>' → logprob: -13.001501083374023
    8. ' 
' → logprob: -13.251501083374023
    9. '```' → logprob: -13.251501083374023
    10. '	if' → logprob: -14.376501083374023

Token 164: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0016023407224565744
    2. ' if' → logprob: -6.7516021728515625
    3. '   ' → logprob: -7.7516021728515625
    4. '
' → logprob: -13.501602172851562
    5. '	if' → logprob: -15.001602172851562
    6. ' ' → logprob: -16.126602172851562
    7. '    
' → logprob: -16.376602172851562
    8. 'If' → logprob: -16.501602172851562
    9. '```' → logprob: -16.751602172851562
    10. ' 
' → logprob: -17.751602172851562

Token 165: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00022117885237094015
    2. 'is' → logprob: -8.500221252441406
    3. ' total' → logprob: -12.125221252441406
    4. ' ' → logprob: -12.125221252441406
    5. ' not' → logprob: -12.375221252441406
    6. ' ' → logprob: -14.125221252441406
    7. 'total' → logprob: -14.125221252441406
    8. '_' → logprob: -14.500221252441406
    9. '(is' → logprob: -15.500221252441406
    10. 'not' → logprob: -15.875221252441406

Token 166: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.1472419600977446e-06
    2. 'b' → logprob: -14.000000953674316
    3. '_' → logprob: -15.500000953674316
    4. '(b' → logprob: -19.750001907348633
    5. '_a' → logprob: -19.875001907348633
    6. 'Bust' → logprob: -20.500001907348633
    7. ' bust' → logprob: -21.500001907348633
    8. '	b' → logprob: -21.625001907348633
    9. '_B' → logprob: -21.625001907348633
    10. 'a' → logprob: -22.000001907348633

Token 167: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -13.125004768371582
    3. 'b' → logprob: -14.625004768371582
    4. 'уст' → logprob: -14.625004768371582
    5. 'u' → logprob: -14.750004768371582
    6. '_b' → logprob: -14.750004768371582
    7. '   ' → logprob: -15.125004768371582
    8. '```' → logprob: -15.375004768371582
    9. '(' → logprob: -15.875004768371582
    10. '[' → logprob: -16.5000057220459

Token 168: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0013736842665821314
    2. '(' → logprob: -6.751373767852783
    3. ' (' → logprob: -8.501373291015625
    4. 'total' → logprob: -16.126373291015625
    5. ' total' → logprob: -16.626373291015625
    6. '(t' → logprob: -17.876373291015625
    7. ' ' → logprob: -18.001373291015625
    8. '(
' → logprob: -19.251373291015625
    9. ',total' → logprob: -19.501373291015625
    10. '(top' → logprob: -19.626373291015625

Token 169: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001942322589457035
    2. ' ):' → logprob: -6.501942157745361
    3. '):
' → logprob: -7.876942157745361
    4. ')' → logprob: -10.37694263458252
    5. '():' → logprob: -10.87694263458252
    6. ':' → logprob: -11.75194263458252
    7. '   ' → logprob: -13.62694263458252
    8. ' ):
' → logprob: -15.12694263458252
    9. ' ' → logprob: -15.25194263458252
    10. '):

' → logprob: -15.87694263458252

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5308968424797058
    2. '
' → logprob: -0.9058968424797058
    3. '\n' → logprob: -5.6558966636657715
    4. '        
' → logprob: -7.0308966636657715
    5. '    
' → logprob: -7.0308966636657715
    6. '<|end|>' → logprob: -7.5308966636657715
    7. '()' → logprob: -7.6558966636657715
    8. '   ' → logprob: -8.03089714050293
    9. ':
' → logprob: -8.78089714050293
    10. ':' → logprob: -8.78089714050293

Token 171: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4741499423980713
    2. ' print' → logprob: -0.9741499423980713
    3. '(print' → logprob: -10.349149703979492
    4. '   ' → logprob: -11.224149703979492
    5. ' 
' → logprob: -11.349149703979492
    6. '    
' → logprob: -12.349149703979492
    7. '
' → logprob: -12.349149703979492
    8. '.print' → logprob: -13.099149703979492
    9. '	print' → logprob: -13.224149703979492
    10. ' ' → logprob: -13.599149703979492

Token 172: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -7.064297824399546e-05
    2. '_' → logprob: -9.875070571899414
    3. '('_' → logprob: -11.750070571899414
    4. '```' → logprob: -12.875070571899414
    5. 'b' → logprob: -13.000070571899414
    6. ''_' → logprob: -13.875070571899414
    7. '}_' → logprob: -14.250070571899414
    8. '(' → logprob: -14.375070571899414
    9. '(_' → logprob: -14.625070571899414
    10. '"_' → logprob: -14.625070571899414

Token 173: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.500000953674316
    3. 'u' → logprob: -15.750000953674316
    4. 'уст' → logprob: -16.625
    5. ' ust' → logprob: -17.375
    6. 'urst' → logprob: -17.625
    7. 'us' → logprob: -18.0
    8. 'usst' → logprob: -18.125
    9. 'b' → logprob: -18.25
    10. 'usti' → logprob: -18.25

Token 174: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05756716430187225
    2. 'else' → logprob: -3.1825671195983887
    3. ' else' → logprob: -4.307567119598389
    4. '
' → logprob: -7.557567119598389
    5. '    
' → logprob: -8.182567596435547
    6. '()
' → logprob: -9.557567596435547
    7. '()' → logprob: -10.182567596435547
    8. '	else' → logprob: -10.307567596435547
    9. '<|end|>' → logprob: -10.682567596435547
    10. '```' → logprob: -11.807567596435547

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005357313901185989
    2. ' else' → logprob: -5.755357265472412
    3. 'else' → logprob: -6.130357265472412
    4. '	else' → logprob: -14.00535774230957
    5. '    
' → logprob: -15.50535774230957
    6. ' ' → logprob: -16.25535774230957
    7. '```' → logprob: -17.13035774230957
    8. '       ' → logprob: -17.63035774230957
    9. 'elif' → logprob: -17.63035774230957
    10. '  ' → logprob: -17.63035774230957

Token 176: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21570730209350586
    2. 'else' (adapté à ' else') → logprob: -2.215707302093506
    3. ' else' → logprob: -2.465707302093506
    4. ' ' → logprob: -13.340707778930664
    5. '	else' → logprob: -13.590707778930664
    6. '  ' → logprob: -15.215707778930664
    7. '```' → logprob: -16.090707778930664
    8. '
' → logprob: -16.215707778930664
    9. '       ' → logprob: -16.340707778930664
    10. '    
' → logprob: -16.465707778930664

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38955721259117126
    2. ':
' → logprob: -1.7645572423934937
    3. '       ' → logprob: -1.8895572423934937
    4. '   ' → logprob: -8.639556884765625
    5. ' :
' → logprob: -10.639556884765625
    6. '      ' → logprob: -11.889556884765625
    7. '     ' → logprob: -12.139556884765625
    8. '    ' → logprob: -12.389556884765625
    9. ' :' → logprob: -12.514556884765625
    10. '           ' → logprob: -12.639556884765625

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001253684633411467
    2. 'print' → logprob: -7.001253604888916
    3. ' print' → logprob: -8.001254081726074
    4. '   ' → logprob: -12.126254081726074
    5. '(print' → logprob: -14.751254081726074
    6. '           ' → logprob: -15.126254081726074
    7. '    ' → logprob: -15.126254081726074
    8. '      ' → logprob: -15.126254081726074
    9. ' ' → logprob: -15.626254081726074
    10. '     ' → logprob: -16.251253128051758

Token 179: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1269812285900116
    2. ' print' → logprob: -2.126981258392334
    3. '       ' → logprob: -10.126980781555176
    4. '   ' → logprob: -11.376980781555176
    5. ' ' → logprob: -14.001980781555176
    6. '	print' → logprob: -14.751980781555176
    7. '.print' → logprob: -16.001981735229492
    8. ' ' → logprob: -16.001981735229492
    9. '(print' → logprob: -16.251981735229492
    10. '           ' → logprob: -17.126981735229492

Token 180: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -12.625007629394531
    3. '('_' → logprob: -13.125007629394531
    4. 'win' → logprob: -13.750007629394531
    5. '_w' → logprob: -15.125007629394531
    6. ''_' → logprob: -15.625007629394531
    7. '("_' → logprob: -16.37500762939453
    8. '(win' → logprob: -16.50000762939453
    9. 'Win' → logprob: -17.12500762939453
    10. '_wrap' → logprob: -17.25000762939453

Token 181: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004108084831386805
    2. '()
' → logprob: -5.50410795211792
    3. '()\' → logprob: -11.379108428955078
    4. '()

' → logprob: -11.504108428955078
    5. '(' → logprob: -12.129108428955078
    6. '(
' → logprob: -13.879108428955078
    7. '()`' → logprob: -14.504108428955078
    8. '()
' → logprob: -14.629108428955078
    9. ' ()' → logprob: -14.879108428955078
    10. '()<' → logprob: -15.504108428955078

Token 182: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4742034375667572
    2. 'main' → logprob: -0.9742034673690796
    3. '#' → logprob: -9.474203109741211
    4. '(main' → logprob: -10.974203109741211
    5. ' main' → logprob: -10.974203109741211
    6. ' if' → logprob: -12.099203109741211
    7. '```' → logprob: -12.599203109741211
    8. 'print' → logprob: -13.724203109741211
    9. '
' → logprob: -14.099203109741211
    10. '\' → logprob: -14.224203109741211

Token 183: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4740999937057495
    2. '(' → logprob: -0.9740999937057495
    3. '(
' → logprob: -11.724100112915039
    4. '();' → logprob: -12.724100112915039
    5. '(

' → logprob: -12.974100112915039
    6. ' (' → logprob: -13.349100112915039
    7. '().' → logprob: -14.099100112915039
    8. ' ()' → logprob: -14.099100112915039
    9. '()
' → logprob: -14.349100112915039
    10. ')' → logprob: -14.349100112915039


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 181
Tokens correctement prédits (1ère position, stricte): 95
Tokens correctement prédits (1ère position, avec adaptation): 105
Tokens correctement prédits (top 10): 158
Précision stricte (1ère position): 52.49%
Précision adaptée (1ère position): 58.01%
Précision (top 10): 87.29%
================================================================================
