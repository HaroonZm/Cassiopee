================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur d'entrer un nombre entier et convertir la saisie en entier
n = int(input())  # 'input()' lit une chaîne, 'int()' la convertit en entier

# Calculer la puissance de 2 la plus élevée qui ne dépasse pas n
# 'n.bit_length()' donne le nombre de bits nécessaires pour représenter n
# Soustraire 1 pour obtenir la position du bit le plus à gauche (plus significatif, indexé à 0)
# '1 << (n.bit_length()-1)' décale le bit 1 à gauche pour positionner un 1 au bit le plus significatif de n
b = 1 << (n.bit_length()-1)

# Vérifie si n est exactement égal à cette puissance de 2 (si n - b == 0)
if n - b == 0:
    # Si c'est le cas, afficher "No" (aucune solution ou condition non satisfaite)
    print("No")
else:
    # Si ce n'est pas le cas, continuer le traitement
    print("Yes")  # Afficher "Yes" pour indiquer qu'on continue
    # Afficher la paire (1, 2)
    print(1, 2)
    # Afficher la paire (2, 3)
    print(2, 3)
    # Afficher la paire (3, n+1), on relie le sommet 3 au sommet n+1 (n+1 entier, pas une addition numérique de caractères)
    print(3, n+1)
    # Afficher la paire (n+1, n+2)
    print(n+1, n+2)
    # Afficher la paire (n+2, n+3)
    print(n+2, n+3)
    # Boucler pour générer et afficher les arêtes supplémentaires
    # On commence à 4 et on va jusqu'à n-1 inclus (car 'range' est exclusif en fin), par pas de 2
    for i in range(4, n, 2):
        # Afficher la paire (i, i+1)
        print(i, i+1)
        # Afficher la paire (i+n, i+n+1)
        # Cela crée un décalage de n pour l'autre copie de l'indice
        print(i+n, i+n+1)
        # Afficher la paire (1+n, i+n)
        # Connecte le sommet 1+n à i+n 
        print(1+n, i+n)
        # Afficher la paire (1+n, i+1)
        # Connecte le sommet 1+n à i+1
        print(1+n, i+1)
    # Après la boucle, vérifier si n est pair
    # '~n' est l'opérateur bitwise NOT, il inverse tous les bits de n
    # '&1' teste le bit de poids faible (parité), donc 'if (~n)&1' est vrai si n est pair
    if (~n)&1:
        # Afficher la paire (n, b+n)
        print(n, b+n)
        # Calculer le XOR entre n, b et 1
        # '^' est l'opérateur bitwise XOR
        a = n ^ b ^ 1
        # Afficher la paire (n+n, a)
        print(n+n, a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4347496032714844
    2. '_la' → logprob: -2.4347496032714844
    3. '_l' → logprob: -2.9347496032714844
    4. ' =' → logprob: -3.1847496032714844
    5. ' la' → logprob: -3.3097496032714844
    6. '_le' → logprob: -3.4347496032714844
    7. ' à' → logprob: -3.9347496032714844
    8. ' ' → logprob: -4.684749603271484
    9. '```' → logprob: -4.684749603271484
    10. '_a' → logprob: -4.809749603271484

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1463419646024704
    2. 'util' → logprob: -2.1463420391082764
    3. 'user' → logprob: -4.646341800689697
    4. ' l' → logprob: -4.771341800689697
    5. 'input' → logprob: -7.521341800689697
    6. ' user' → logprob: -9.146342277526855
    7. 'un' → logprob: -9.271342277526855
    8. 'u' → logprob: -9.396342277526855
    9. 'la' → logprob: -9.771342277526855
    10. 'us' → logprob: -10.396342277526855

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.5588499903678894
    2. 'util' → logprob: -1.1838500499725342
    3. ' utilisateur' → logprob: -2.308850049972534
    4. '’utilisateur' → logprob: -4.058849811553955
    5. 'a' → logprob: -6.308849811553955
    6. 'u' → logprob: -6.933849811553955
    7. 'Utilisateur' → logprob: -7.433849811553955
    8. '_util' → logprob: -7.683849811553955
    9. 'user' → logprob: -8.058850288391113
    10. ''' → logprob: -8.433850288391113

Token 6: ' d' (ID: 272)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.3965097963809967
    2. 's' → logprob: -2.396509885787964
    3. 'input' → logprob: -3.146509885787964
    4. ' nom' → logprob: -3.146509885787964
    5. 'n' → logprob: -3.396509885787964
    6. 'name' → logprob: -4.396509647369385
    7. 'd' → logprob: -4.646509647369385
    8. '```' → logprob: -4.771509647369385
    9. '#' → logprob: -4.896509647369385
    10. ' ' → logprob: -5.021509647369385

Token 7: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.35824382305145264
    2. 'e' → logprob: -1.6082438230514526
    3. ''entrée' → logprob: -2.608243942260742
    4. ''ent' → logprob: -4.233243942260742
    5. 'entrée' → logprob: -6.358243942260742
    6. 'entr' → logprob: -6.983243942260742
    7. 'a' → logprob: -6.983243942260742
    8. '_' → logprob: -6.983243942260742
    9. ''é' → logprob: -7.358243942260742
    10. ''utiliser' → logprob: -7.358243942260742

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.010629544034600258
    2. 'entrée' → logprob: -4.885629653930664
    3. 'ent' → logprob: -6.135629653930664
    4. 'enter' → logprob: -8.260629653930664
    5. 's' → logprob: -8.510629653930664
    6. 'entre' → logprob: -8.885629653930664
    7. 'entra' → logprob: -9.510629653930664
    8. 'input' → logprob: -10.510629653930664
    9. 'entrant' → logprob: -10.635629653930664
    10. 'int' → logprob: -10.635629653930664

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00022070204431656748
    2. 'é' → logprob: -9.12522029876709
    3. 'ée' → logprob: -10.12522029876709
    4. 'éer' → logprob: -10.12522029876709
    5. 'e' → logprob: -10.62522029876709
    6. 'erer' → logprob: -13.62522029876709
    7. 'ées' → logprob: -13.87522029876709
    8. '```' → logprob: -14.12522029876709
    9. 'eer' → logprob: -14.25022029876709
    10. 'er's' → logprob: -14.62522029876709

Token 10: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9704664349555969
    2. ' une' → logprob: -2.095466375350952
    3. ''' → logprob: -2.220466375350952
    4. 'une' → logprob: -2.595466375350952
    5. 'un' → logprob: -2.970466375350952
    6. 'l' → logprob: -3.095466375350952
    7. '_' → logprob: -3.220466375350952
    8. '```' → logprob: -3.470466375350952
    9. ''un' → logprob: -3.595466375350952
    10. '`' → logprob: -3.595466375350952

Token 11: ' nombre' (ID: 9733)
  Prédit: ' nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nom' → logprob: -1.0536017417907715
    2. ' espace' → logprob: -1.4286017417907715
    3. ' ' → logprob: -2.3036017417907715
    4. 'e' → logprob: -2.4286017417907715
    5. ' mot' → logprob: -3.1786017417907715
    6. ' nombre' → logprob: -3.3036017417907715
    7. ' prénom' → logprob: -3.8036017417907715
    8. 'texte' → logprob: -4.0536017417907715
    9. ' texte' → logprob: -4.0536017417907715
    10. 'nom' → logprob: -4.1786017417907715

Token 12: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3099198639392853
    2. 'x' → logprob: -2.684919834136963
    3. 'nombre' → logprob: -2.809919834136963
    4. '```' → logprob: -3.434919834136963
    5. 'i' → logprob: -3.559919834136963
    6. '`' → logprob: -3.934919834136963
    7. 'input' → logprob: -4.184919834136963
    8. '_' → logprob: -4.309919834136963
    9. ':' → logprob: -5.559919834136963
    10. '\n' → logprob: -5.559919834136963

Token 13: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06358397752046585
    2. 'x' → logprob: -3.813584089279175
    3. 'nombre' → logprob: -3.938584089279175
    4. '```' → logprob: -4.938583850860596
    5. '`' → logprob: -5.688583850860596
    6. 'i' → logprob: -5.688583850860596
    7. '\n' → logprob: -6.438583850860596
    8. 'ent' → logprob: -6.938583850860596
    9. 'input' → logprob: -7.438583850860596
    10. 'user' → logprob: -7.563583850860596

Token 14: ' convertir' (ID: 79223)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1775541305541992
    2. ' continuer' → logprob: -1.5525541305541992
    3. ' effectuer' → logprob: -2.427554130554199
    4. ' stock' → logprob: -3.052554130554199
    5. ' calcul' → logprob: -3.052554130554199
    6. 'l' → logprob: -3.052554130554199
    7. 'le' → logprob: -3.177554130554199
    8. 'aff' → logprob: -3.302554130554199
    9. ' vérifier' → logprob: -3.427554130554199
    10. 'contin' → logprob: -3.427554130554199

Token 15: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7687650918960571
    2. ' ' → logprob: -1.1437650918960571
    3. '_' → logprob: -1.7687650918960571
    4. '```' → logprob: -4.018764972686768
    5. ' (' → logprob: -4.893764972686768
    6. 'input' → logprob: -5.018764972686768
    7. '`' → logprob: -6.393764972686768
    8. ' input' → logprob: -6.643764972686768
    9. '(input' → logprob: -6.893764972686768
    10. ':' → logprob: -6.893764972686768

Token 16: ' sais' (ID: 30010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014023995026946068
    2. '_' → logprob: -4.639023780822754
    3. 's' → logprob: -6.639023780822754
    4. ' nombre' → logprob: -7.264023780822754
    5. ' code' → logprob: -8.014023780822754
    6. 'n' → logprob: -8.014023780822754
    7. 'nombre' → logprob: -8.639023780822754
    8. ' ' → logprob: -8.639023780822754
    9. ' input' → logprob: -9.014023780822754
    10. ' espace' → logprob: -9.014023780822754

Token 17: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09031213819980621
    2. 's' → logprob: -3.2153122425079346
    3. 'es' → logprob: -3.5903122425079346
    4. 'ie' → logprob: -4.9653120040893555
    5. 'sie' → logprob: -4.9653120040893555
    6. 'r' → logprob: -6.7153120040893555
    7. '```' → logprob: -7.2153120040893555
    8. 'str' → logprob: -7.5903120040893555
    9. ' ' → logprob: -8.090312004089355
    10. 'string' → logprob: -8.215312004089355

Token 18: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.378505140542984
    2. 'x' → logprob: -2.253505229949951
    3. 'i' → logprob: -2.378505229949951
    4. '_' → logprob: -3.378505229949951
    5. 'nombre' → logprob: -4.003505229949951
    6. 'e' → logprob: -4.253505229949951
    7. '`' → logprob: -4.628505229949951
    8. '```' → logprob: -4.753505229949951
    9. '=' → logprob: -5.128505229949951
    10. 'input' → logprob: -5.628505229949951

Token 19: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.577264666557312
    2. 'ent' → logprob: -1.827264666557312
    3. ' entier' → logprob: -1.827264666557312
    4. ' int' → logprob: -2.4522647857666016
    5. ' un' → logprob: -3.7022647857666016
    6. 'un' → logprob: -5.827264785766602
    7. '```' → logprob: -7.077264785766602
    8. ' ' → logprob: -7.202264785766602
    9. ' ent' → logprob: -7.827264785766602
    10. 'nombre' → logprob: -8.077264785766602

Token 20: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03814132884144783
    2. 'nombre' → logprob: -3.5381412506103516
    3. 'x' → logprob: -5.413141250610352
    4. '```' → logprob: -6.913141250610352
    5. 'number' → logprob: -7.788141250610352
    6. 'ent' → logprob: -7.788141250610352
    7. '\n' → logprob: -7.913141250610352
    8. 'user' → logprob: -7.913141250610352
    9. 'input' → logprob: -8.288141250610352
    10. 'u' → logprob: -8.413141250610352

Token 21: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1327059417963028
    2. 'nombre' → logprob: -2.2577059268951416
    3. 'x' → logprob: -4.632706165313721
    4. '```' → logprob: -5.632706165313721
    5. 'user' → logprob: -6.382706165313721
    6. 'number' → logprob: -6.632706165313721
    7. '\n' → logprob: -7.382706165313721
    8. 'ent' → logprob: -7.632706165313721
    9. '`' → logprob: -7.632706165313721
    10. 'numero' → logprob: -8.007705688476562

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25200793147087097
    2. '=' → logprob: -1.5020079612731934
    3. 'umber' → logprob: -10.752007484436035
    4. '=input' → logprob: -10.752007484436035
    5. '=int' → logprob: -10.877007484436035
    6. 'um' → logprob: -12.127007484436035
    7. ' ' → logprob: -12.502007484436035
    8. '_' → logprob: -13.127007484436035
    9. 'ombre' → logprob: -13.627007484436035
    10. ' ' → logprob: -13.877007484436035

Token 23: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029842931777238846
    2. 'int' → logprob: -3.5298428535461426
    3. ' input' → logprob: -9.4048433303833
    4. 'input' → logprob: -12.1548433303833
    5. ' ' → logprob: -13.2798433303833
    6. '=int' → logprob: -13.2798433303833
    7. ' ' → logprob: -13.7798433303833
    8. '<int' → logprob: -16.279842376708984
    9. '	int' → logprob: -16.779842376708984
    10. '```' → logprob: -17.279842376708984

Token 24: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3132847845554352
    2. '(' → logprob: -1.3132847547531128
    3. '(
' → logprob: -11.938284873962402
    4. ' (' → logprob: -11.938284873962402
    5. 'input' → logprob: -12.063284873962402
    6. '(

' → logprob: -13.563284873962402
    7. '('' → logprob: -14.188284873962402
    8. '(raw' → logprob: -14.438284873962402
    9. '(user' → logprob: -14.563284873962402
    10. '()' → logprob: -14.563284873962402

Token 25: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2254723757505417
    2. '('' → logprob: -1.975472331047058
    3. '("("' → logprob: -3.3504724502563477
    4. '()' → logprob: -3.9754724502563477
    5. '("' → logprob: -5.475472450256348
    6. '("")' → logprob: -5.975472450256348
    7. '(""))' → logprob: -6.225472450256348
    8. '())' → logprob: -8.350472450256348
    9. '(">' → logprob: -8.975472450256348
    10. '(()' → logprob: -9.975472450256348

Token 26: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.298757791519165
    2. ' ' → logprob: -1.423757791519165
    3. '<|end|>' → logprob: -1.923757791519165
    4. '
' → logprob: -2.048757791519165
    5. '*' → logprob: -2.548757791519165
    6. '+' → logprob: -3.173757791519165
    7. '#' → logprob: -3.173757791519165
    8. '\n' → logprob: -4.673757553100586
    9. ' 
' → logprob: -4.798757553100586
    10. '\' → logprob: -4.923757553100586

Token 27: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2052634060382843
    2. '*' → logprob: -3.205263376235962
    3. '#' → logprob: -3.455263376235962
    4. ' ' → logprob: -3.705263376235962
    5. '
' → logprob: -3.705263376235962
    6. '<|end|>' → logprob: -3.705263376235962
    7. ')' → logprob: -3.955263376235962
    8. ' 
' → logprob: -5.205263614654541
    9. 'n' → logprob: -5.580263614654541
    10. '\n' → logprob: -6.205263614654541

Token 28: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006471641361713409
    2. '"' → logprob: -6.381471633911133
    3. '  ' → logprob: -7.006471633911133
    4. ' "' → logprob: -7.131471633911133
    5. ' )' → logprob: -7.256471633911133
    6. ')' → logprob: -7.631471633911133
    7. ' ' → logprob: -7.756471633911133
    8. ''' → logprob: -8.506471633911133
    9. ' n' → logprob: -8.506471633911133
    10. ' Enter' → logprob: -9.006471633911133

Token 29: 'input' (ID: 2586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14151301980018616
    2. '(' → logprob: -2.7665131092071533
    3. ' )' → logprob: -3.0165131092071533
    4. '"' → logprob: -5.516512870788574
    5. '("' → logprob: -5.766512870788574
    6. ' ' → logprob: -6.141512870788574
    7. '')' → logprob: -6.516512870788574
    8. '")' → logprob: -6.891512870788574
    9. '()' → logprob: -7.016512870788574
    10. '(""))' → logprob: -7.016512870788574

Token 30: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04497909173369408
    2. '(' → logprob: -3.7949790954589844
    3. '())' → logprob: -4.919979095458984
    4. '('' → logprob: -5.044979095458984
    5. '("")' → logprob: -5.544979095458984
    6. '("' → logprob: -5.669979095458984
    7. '(""))' → logprob: -8.044979095458984
    8. ')' → logprob: -11.044979095458984
    9. '(prompt' → logprob: -11.669979095458984
    10. '(">' → logprob: -11.794979095458984

Token 31: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8388260006904602
    2. '()' → logprob: -1.0888259410858154
    3. '("' → logprob: -2.4638259410858154
    4. '())' → logprob: -2.7138259410858154
    5. '(""))' → logprob: -3.5888259410858154
    6. '(' → logprob: -3.8388259410858154
    7. '("")' → logprob: -3.9638259410858154
    8. '('' → logprob: -4.8388261795043945
    9. ' )' → logprob: -6.7138261795043945
    10. '')' → logprob: -7.4638261795043945

Token 32: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.46907517313957214
    2. ')' → logprob: -1.7190752029418945
    3. '(' → logprob: -1.9690752029418945
    4. ' )' → logprob: -3.9690752029418945
    5. '())' → logprob: -4.4690752029418945
    6. ' ' → logprob: -5.0940752029418945
    7. '('' → logprob: -5.0940752029418945
    8. '("")' → logprob: -5.2190752029418945
    9. ' ()' → logprob: -6.9690752029418945
    10. '("' → logprob: -6.9690752029418945

Token 33: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.14252443611621857
    2. ' la' → logprob: -2.517524480819702
    3. '()' → logprob: -3.517524480819702
    4. ' l' → logprob: -4.517524242401123
    5. 'une' → logprob: -5.517524242401123
    6. ' ' → logprob: -5.892524242401123
    7. 'l' → logprob: -6.142524242401123
    8. ' un' → logprob: -7.267524242401123
    9. 'la' → logprob: -7.767524242401123
    10. ' ' → logprob: -8.517524719238281

Token 34: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.01723431795835495
    2. ' chaine' → logprob: -5.1422343254089355
    3. ' ligne' → logprob: -5.2672343254089355
    4. ' ' → logprob: -5.5172343254089355
    5. 'chaine' → logprob: -6.8922343254089355
    6. ' string' → logprob: -8.392233848571777
    7. ' valeur' → logprob: -8.892233848571777
    8. 'entrée' → logprob: -8.892233848571777
    9. 'ligne' → logprob: -8.892233848571777
    10. 'cha' → logprob: -9.267233848571777

Token 35: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43938010931015015
    2. '()' → logprob: -2.064380168914795
    3. ' )' → logprob: -2.439380168914795
    4. '<|end|>' → logprob: -3.064380168914795
    5. '("")' → logprob: -3.439380168914795
    6. '.' → logprob: -4.439380168914795
    7. '(' → logprob: -4.689380168914795
    8. '
' → logprob: -5.564380168914795
    9. '#' → logprob: -5.564380168914795
    10. ' ' → logprob: -5.689380168914795

Token 36: ' '' (ID: 461)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.9809265732765198
    2. ' donc' → logprob: -1.730926513671875
    3. ' convertir' → logprob: -2.230926513671875
    4. ' la' → logprob: -2.480926513671875
    5. 'convert' → logprob: -3.355926513671875
    6. ' que' → logprob: -3.605926513671875
    7. ' il' → logprob: -3.855926513671875
    8. ' puis' → logprob: -3.855926513671875
    9. ' mais' → logprob: -3.980926513671875
    10. ' )' → logprob: -3.980926513671875

Token 37: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0441310778260231
    2. ' int' → logprob: -3.16913104057312
    3. 'n' → logprob: -7.544131278991699
    4. ' n' → logprob: -8.4191312789917
    5. 'str' → logprob: -9.4191312789917
    6. '`' → logprob: -9.7941312789917
    7. '=int' → logprob: -9.7941312789917
    8. ')' → logprob: -10.1691312789917
    9. ' ' → logprob: -10.6691312789917
    10. ''' → logprob: -10.7941312789917

Token 38: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47691792249679565
    2. '(' → logprob: -0.9769179224967957
    3. '('' → logprob: -5.976917743682861
    4. '("")' → logprob: -9.72691822052002
    5. '(...)' → logprob: -10.35191822052002
    6. ')' → logprob: -10.35191822052002
    7. '(convert' → logprob: -10.72691822052002
    8. '<|end|>' → logprob: -10.85191822052002
    9. ' ()' → logprob: -11.10191822052002
    10. ''' → logprob: -11.22691822052002

Token 39: ''' (ID: 6)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.8663965463638306
    2. 'convert' → logprob: -0.9913965463638306
    3. ' transforme' → logprob: -2.116396427154541
    4. '()' → logprob: -3.116396427154541
    5. ' convertir' → logprob: -3.991396427154541
    6. ' converts' → logprob: -5.241396427154541
    7. ')' → logprob: -5.366396427154541
    8. '(convert' → logprob: -5.366396427154541
    9. '(' → logprob: -5.866396427154541
    10. '```' → logprob: -6.491396427154541

Token 40: ' la' (ID: 557)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.10058663040399551
    2. ' la' → logprob: -3.1005866527557373
    3. 'convert' → logprob: -3.8505866527557373
    4. ' transforme' → logprob: -4.225586414337158
    5. ' convertir' → logprob: -4.350586414337158
    6. ' converts' → logprob: -7.850586414337158
    7. ' permet' → logprob: -8.600586891174316
    8. '_convert' → logprob: -8.600586891174316
    9. '(convert' → logprob: -8.850586891174316
    10. 'la' → logprob: -9.100586891174316

Token 41: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.0024713745806366205
    2. ' convert' → logprob: -6.502471446990967
    3. 'con' → logprob: -8.002470970153809
    4. ' transforme' → logprob: -8.127470970153809
    5. 'transform' → logprob: -8.252470970153809
    6. '_convert' → logprob: -10.127470970153809
    7. 'conv' → logprob: -11.127470970153809
    8. '.convert' → logprob: -11.877470970153809
    9. 'Convert' → logprob: -12.377470970153809
    10. 'conversion' → logprob: -12.627470970153809

Token 42: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00038038729690015316
    2. ' it' → logprob: -8.625380516052246
    3. 't' → logprob: -9.875380516052246
    4. 'ert' → logprob: -10.000380516052246
    5. 'i' → logprob: -10.625380516052246
    6. 'et' → logprob: -11.375380516052246
    7. 'irt' → logprob: -11.500380516052246
    8. 'iert' → logprob: -11.625380516052246
    9. 'ie' → logprob: -11.875380516052246
    10. 'ît' → logprob: -12.000380516052246

Token 43: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014569957740604877
    2. ')' → logprob: -5.0145697593688965
    3. '()' → logprob: -5.8895697593688965
    4. ' ' → logprob: -6.0145697593688965
    5. '\n' → logprob: -7.2645697593688965
    6. ' (' → logprob: -7.8895697593688965
    7. '(
' → logprob: -8.014570236206055
    8. '\' → logprob: -8.389570236206055
    9. '(n' → logprob: -8.514570236206055
    10. '<|end|>' → logprob: -8.639570236206055

Token 44: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.18818949162960052
    2. 'nombre' → logprob: -2.8131895065307617
    3. 'int' → logprob: -3.0631895065307617
    4. ' entier' → logprob: -3.0631895065307617
    5. ' nombre' → logprob: -4.813189506530762
    6. 'un' → logprob: -4.938189506530762
    7. ' un' → logprob: -6.438189506530762
    8. '```' → logprob: -7.438189506530762
    9. ' int' → logprob: -8.563189506530762
    10. 'integer' → logprob: -8.688189506530762

Token 45: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3655835390090942
    2. '<|end|>' → logprob: -1.3655835390090942
    3. ')' → logprob: -1.8655835390090942
    4. '#' → logprob: -2.3655834197998047
    5. '
' → logprob: -2.8655834197998047
    6. '\n' → logprob: -2.9905834197998047
    7. '*' → logprob: -3.2405834197998047
    8. ' ' → logprob: -3.2405834197998047
    9. '\' → logprob: -4.240583419799805
    10. 'n' → logprob: -4.490583419799805

Token 46: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.023856282234192
    2. '#' → logprob: -1.523856282234192
    3. 'if' → logprob: -2.0238561630249023
    4. '<|end|>' → logprob: -2.6488561630249023
    5. '
' → logprob: -2.8988561630249023
    6. 'n' → logprob: -3.3988561630249023
    7. ' if' → logprob: -3.3988561630249023
    8. ' ' → logprob: -4.023856163024902
    9. ')' → logprob: -4.148856163024902
    10. '*' → logprob: -4.273856163024902

Token 47: ' Calcul' (ID: 57243)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4587336778640747
    2. ' if' → logprob: -1.0837336778640747
    3. 'factor' → logprob: -4.458733558654785
    4. 'for' → logprob: -4.958733558654785
    5. 'result' → logprob: -5.833733558654785
    6. '#' → logprob: -5.833733558654785
    7. ' for' → logprob: -6.083733558654785
    8. 's' → logprob: -7.208733558654785
    9. 'while' → logprob: -7.583733558654785
    10. 'print' → logprob: -7.708733558654785

Token 48: 'er' (ID: 259)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.1687721014022827
    2. 's' → logprob: -1.9187721014022827
    3. ' de' → logprob: -2.0437722206115723
    4. ' s' → logprob: -2.4187722206115723
    5. '_factor' → logprob: -2.4187722206115723
    6. ' factor' → logprob: -2.5437722206115723
    7. ' factorial' → logprob: -3.4187722206115723
    8. ' ' → logprob: -3.5437722206115723
    9. 'result' → logprob: -4.543772220611572
    10. ' facteur' → logprob: -4.793772220611572

Token 49: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12851473689079285
    2. ' la' → logprob: -2.5035147666931152
    3. ' n' → logprob: -4.128514766693115
    4. 'factor' → logprob: -5.253514766693115
    5. ' factorial' → logprob: -5.753514766693115
    6. ' l' → logprob: -5.878514766693115
    7. 's' → logprob: -6.253514766693115
    8. 'n' → logprob: -6.378514766693115
    9. '_factor' → logprob: -6.503514766693115
    10. ' s' → logprob: -7.003514766693115

Token 50: ' puissance' (ID: 63494)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5868880748748779
    2. 'factor' → logprob: -0.8368880748748779
    3. 'c' → logprob: -5.336888313293457
    4. ' carré' → logprob: -6.336888313293457
    5. 's' → logprob: -6.711888313293457
    6. 'f' → logprob: -6.836888313293457
    7. 'n' → logprob: -7.586888313293457
    8. 'cube' → logprob: -7.711888313293457
    9. 'car' → logprob: -8.086888313293457
    10. 'nombre' → logprob: -8.336888313293457

Token 51: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37430477142333984
    2. '(n' → logprob: -1.2493047714233398
    3. 'n' → logprob: -3.99930477142334
    4. 'result' → logprob: -5.12430477142334
    5. 'pow' → logprob: -7.49930477142334
    6. '(pow' → logprob: -8.49930477142334
    7. ' (' → logprob: -9.24930477142334
    8. '**' → logprob: -9.37430477142334
    9. '(
' → logprob: -9.74930477142334
    10. '(result' → logprob: -10.62430477142334

Token 52: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6871527433395386
    2. '2' → logprob: -1.1871527433395386
    3. ' ' → logprob: -2.562152862548828
    4. ' n' → logprob: -2.687152862548828
    5. 'de' → logprob: -3.562152862548828
    6. '(n' → logprob: -4.187152862548828
    7. ' deux' → logprob: -7.062152862548828
    8. '3' → logprob: -7.187152862548828
    9. ' (' → logprob: -8.187152862548828
    10. '10' → logprob: -8.562152862548828

Token 53: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4577406644821167
    2. '2' → logprob: -1.0827406644821167
    3. 'de' → logprob: -3.7077407836914062
    4. ' ' → logprob: -5.957740783691406
    5. ' n' → logprob: -6.832740783691406
    6. 'l' → logprob: -8.957740783691406
    7. '10' → logprob: -9.957740783691406
    8. 'nombre' → logprob: -9.957740783691406
    9. ' deux' → logprob: -10.082740783691406
    10. '3' → logprob: -10.082740783691406

Token 54: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.053662821650505066
    2. '**' → logprob: -3.1786627769470215
    3. ' n' → logprob: -5.4286627769470215
    4. '(n' → logprob: -6.3036627769470215
    5. ' **' → logprob: -6.5536627769470215
    6. ' (' → logprob: -6.6786627769470215
    7. 'result' → logprob: -7.1786627769470215
    8. '```' → logprob: -7.6786627769470215
    9. '2' → logprob: -9.42866325378418
    10. ',' → logprob: -9.55366325378418

Token 55: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.21069568395614624
    2. ' n' → logprob: -2.960695743560791
    3. ' puissance' → logprob: -3.335695743560791
    4. 'n' → logprob: -3.335695743560791
    5. 'plus' → logprob: -3.585695743560791
    6. ' suivante' → logprob: -4.335695743560791
    7. ' **' → logprob: -4.460695743560791
    8. '**' → logprob: -5.085695743560791
    9. '^' → logprob: -6.335695743560791
    10. ' ' → logprob: -6.585695743560791

Token 56: ' élevée' (ID: 150678)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.00017994173686020076
    2. 'gr' → logprob: -9.7501802444458
    3. '```' → logprob: -10.6251802444458
    4. 'près' → logprob: -11.0001802444458
    5. 'pu' → logprob: -11.1251802444458
    6. ' proche' → logprob: -11.3751802444458
    7. 'plus' → logprob: -11.3751802444458
    8. 'import' → logprob: -11.8751802444458
    9. '   ' → logprob: -12.2501802444458
    10. ' ' → logprob: -12.3751802444458

Token 57: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.67519211769104
    2. '```' → logprob: -1.67519211769104
    3. ' qui' → logprob: -1.80019211769104
    4. ' inf' → logprob: -1.80019211769104
    5. ' i' → logprob: -2.55019211769104
    6. 'p' → logprob: -3.30019211769104
    7. 'inf' → logprob: -3.42519211769104
    8. 'pow' → logprob: -3.80019211769104
    9. ' ```' → logprob: -4.550191879272461
    10. '2' → logprob: -4.675191879272461

Token 58: ' ne' (ID: 453)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0314675569534302
    2. 'n' → logprob: -1.2814675569534302
    3. ' soit' → logprob: -1.6564675569534302
    4. ' ne' → logprob: -3.2814674377441406
    5. 's' → logprob: -3.9064674377441406
    6. '<|end|>' → logprob: -4.031467437744141
    7. ' est' → logprob: -4.156467437744141
    8. 'est' → logprob: -4.531467437744141
    9. 'le' → logprob: -4.531467437744141
    10. '<=' → logprob: -5.031467437744141

Token 59: ' dépasse' (ID: 165701)
  Prédit: ' dépasse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépasse' → logprob: -0.020044727250933647
    2. 'd' → logprob: -5.145044803619385
    3. ' dépass' → logprob: -5.270044803619385
    4. 'ex' → logprob: -5.520044803619385
    5. 'exc' → logprob: -6.895044803619385
    6. ' soit' → logprob: -7.270044803619385
    7. '<|end|>' → logprob: -7.895044803619385
    8. 's' → logprob: -7.895044803619385
    9. ' ' → logprob: -8.020044326782227
    10. '```' → logprob: -8.270044326782227

Token 60: ' pas' (ID: 2173)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.009656340815126896
    2. 'n' → logprob: -5.2596564292907715
    3. ' ' → logprob: -5.6346564292907715
    4. ' pas' → logprob: -7.2596564292907715
    5. ' ' → logprob: -9.759655952453613
    6. '	n' → logprob: -10.009655952453613
    7. '<|end|>' → logprob: -12.009655952453613
    8. '<n' → logprob: -12.884655952453613
    9. ' ' → logprob: -12.884655952453613
    10. '_n' → logprob: -13.134655952453613

Token 61: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.026692695915699005
    2. 'n' → logprob: -3.6516926288604736
    3. ' ' → logprob: -7.901692867279053
    4. '	n' → logprob: -11.151692390441895
    5. ' ' → logprob: -13.401692390441895
    6. '(n' → logprob: -13.776692390441895
    7. 'le' → logprob: -13.776692390441895
    8. ' le' → logprob: -14.151692390441895
    9. ' `' → logprob: -14.526692390441895
    10. ' la' → logprob: -14.651692390441895

Token 62: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1858415603637695
    2. '2' → logprob: -1.5608415603637695
    3. '
' → logprob: -1.5608415603637695
    4. ' ' → logprob: -2.9358415603637695
    5. 'pow' → logprob: -3.0608415603637695
    6. '  
' → logprob: -3.4358415603637695
    7. ' power' → logprob: -3.6858415603637695
    8. ' pow' → logprob: -4.0608415603637695
    9. 'power' → logprob: -4.0608415603637695
    10. '
' → logprob: -4.3108415603637695

Token 63: '#' (ID: 2)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.4767267107963562
    2. 'p' → logprob: -1.101726770401001
    3. 'pow' → logprob: -4.101726531982422
    4. ' power' → logprob: -4.101726531982422
    5. 'result' → logprob: -5.726726531982422
    6. 'i' → logprob: -5.726726531982422
    7. ' p' → logprob: -5.851726531982422
    8. ' puissance' → logprob: -6.226726531982422
    9. '```' → logprob: -7.851726531982422
    10. ' i' → logprob: -8.101726531982422

Token 64: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8930630683898926
    2. 'power' → logprob: -0.8930630683898926
    3. ' power' → logprob: -2.3930630683898926
    4. ' p' → logprob: -3.5180630683898926
    5. 'pow' → logprob: -3.8930630683898926
    6. ' puissance' → logprob: -4.518063068389893
    7. 'i' → logprob: -4.768063068389893
    8. ' i' → logprob: -5.268063068389893
    9. 'result' → logprob: -5.393063068389893
    10. 'k' → logprob: -5.893063068389893

Token 65: 'n' (ID: 77)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.8871335387229919
    2. 'p' → logprob: -1.2621335983276367
    3. ' p' → logprob: -2.3871335983276367
    4. ' power' → logprob: -2.6371335983276367
    5. '2' → logprob: -2.7621335983276367
    6. 'pow' → logprob: -3.7621335983276367
    7. ' puissance' → logprob: -4.012133598327637
    8. 'i' → logprob: -4.637133598327637
    9. 'result' → logprob: -5.012133598327637
    10. ' i' → logprob: -5.387133598327637

Token 66: '.bit' (ID: 61866)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.2996662855148315
    2. '_' → logprob: -1.9246662855148315
    3. ' >=' → logprob: -2.049666404724121
    4. '**' → logprob: -2.549666404724121
    5. '>' → logprob: -2.674666404724121
    6. '_bit' → logprob: -2.924666404724121
    7. '_power' → logprob: -3.299666404724121
    8. 'bit' → logprob: -3.674666404724121
    9. ' ' → logprob: -3.674666404724121
    10. '2' → logprob: -3.924666404724121

Token 67: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.580929347255733e-05
    2. '_' → logprob: -11.500016212463379
    3. '_l' → logprob: -12.125016212463379
    4. '_le' → logprob: -16.000015258789062
    5. '_width' → logprob: -17.000015258789062
    6. '_LENGTH' → logprob: -17.500015258789062
    7. '_leg' → logprob: -17.500015258789062
    8. 'length' → logprob: -17.625015258789062
    9. '_Length' → logprob: -18.625015258789062
    10. '```' → logprob: -18.750015258789062

Token 68: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003324580378830433
    2. '())' → logprob: -6.128324508666992
    3. '(' → logprob: -7.253324508666992
    4. ' ()' → logprob: -8.628324508666992
    5. '()`' → logprob: -9.128324508666992
    6. '()-' → logprob: -9.503324508666992
    7. '()
' → logprob: -10.753324508666992
    8. '（）' → logprob: -11.378324508666992
    9. '()"' → logprob: -11.628324508666992
    10. ')' → logprob: -12.503324508666992

Token 69: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016181347891688347
    2. ' ()' → logprob: -4.766181468963623
    3. '())' → logprob: -5.391181468963623
    4. '(' → logprob: -6.516181468963623
    5. ')' → logprob: -7.516181468963623
    6. '()-' → logprob: -7.641181468963623
    7. ' )' → logprob: -8.516180992126465
    8. ' ())' → logprob: -9.891180992126465
    9. '()`' → logprob: -10.016180992126465
    10. '```' → logprob: -10.141180992126465

Token 70: ' donne' (ID: 30004)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015736248344182968
    2. '(' → logprob: -5.515736103057861
    3. ' -' → logprob: -5.640736103057861
    4. ' ()' → logprob: -5.640736103057861
    5. '()-' → logprob: -6.640736103057861
    6. ')' → logprob: -7.015736103057861
    7. '-' → logprob: -7.515736103057861
    8. ' ' → logprob: -8.01573657989502
    9. ' )' → logprob: -8.39073657989502
    10. ' (' → logprob: -8.64073657989502

Token 71: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4670048952102661
    2. ' le' → logprob: -1.0920048952102661
    3. ' ' → logprob: -3.8420047760009766
    4. 'le' → logprob: -5.092004776000977
    5. 'la' → logprob: -5.967004776000977
    6. ' l' → logprob: -6.217004776000977
    7. ' the' → logprob: -6.592004776000977
    8. '1' → logprob: -7.592004776000977
    9. ' n' → logprob: -7.717004776000977
    10. ' ' → logprob: -7.717004776000977

Token 72: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.07036885619163513
    2. 'nombre' → logprob: -2.695368766784668
    3. 'n' → logprob: -8.570368766784668
    4. ' ' → logprob: -10.195368766784668
    5. ' n' → logprob: -10.195368766784668
    6. ' bit' → logprob: -10.570368766784668
    7. '```' → logprob: -10.945368766784668
    8. ' nombres' → logprob: -11.195368766784668
    9. 'Nombre' → logprob: -11.445368766784668
    10. 'ex' → logprob: -11.570368766784668

Token 73: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6517746448516846
    2. '_' → logprob: -1.1517746448516846
    3. ' ' → logprob: -2.4017746448516846
    4. ' d' → logprob: -3.2767746448516846
    5. ' _' → logprob: -4.6517744064331055
    6. ' of' → logprob: -5.0267744064331055
    7. ')' → logprob: -5.6517744064331055
    8. '  ' → logprob: -5.7767744064331055
    9. 'de' → logprob: -6.1517744064331055
    10. '_de' → logprob: -6.5267744064331055

Token 74: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.01311187632381916
    2. 'bits' → logprob: -4.7631120681762695
    3. ' bit' → logprob: -6.3881120681762695
    4. ' ' → logprob: -7.0131120681762695
    5. 'b' → logprob: -7.1381120681762695
    6. ' b' → logprob: -7.2631120681762695
    7. '```' → logprob: -9.38811206817627
    8. 'bit' → logprob: -9.51311206817627
    9. '_bits' → logprob: -9.76311206817627
    10. '	b' → logprob: -9.88811206817627

Token 75: ' nécessaires' (ID: 74402)
  Prédit: ' nécessaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaires' → logprob: -1.381279706954956
    2. ' de' → logprob: -1.631279706954956
    3. ' nécessaire' → logprob: -1.881279706954956
    4. '-' → logprob: -1.881279706954956
    5. ' -' → logprob: -2.381279706954956
    6. ' necess' → logprob: -3.381279706954956
    7. ' ' → logprob: -3.381279706954956
    8. ' utilisé' → logprob: -4.006279945373535
    9. ' pour' → logprob: -4.256279945373535
    10. ' utilisés' → logprob: -4.756279945373535

Token 76: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.05992485210299492
    2. 'pour' → logprob: -3.434924840927124
    3. ' à' → logprob: -5.059925079345703
    4. '-' → logprob: -5.184925079345703
    5. ' -' → logprob: -5.684925079345703
    6. ' n' → logprob: -5.809925079345703
    7. ')' → logprob: -6.559925079345703
    8. ' for' → logprob: -6.809925079345703
    9. 'n' → logprob: -7.059925079345703
    10. ' ' → logprob: -7.309925079345703

Token 77: ' représ' (ID: 31534)
  Prédit: ' représ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représ' → logprob: -0.9493043422698975
    2. 'repr' → logprob: -1.0743043422698975
    3. 're' → logprob: -1.3243043422698975
    4. 'r' → logprob: -5.824304580688477
    5. '_repr' → logprob: -7.699304580688477
    6. 'rep' → logprob: -8.074304580688477
    7. ' repr' → logprob: -8.199304580688477
    8. 'n' → logprob: -8.699304580688477
    9. 'represent' → logprob: -8.824304580688477
    10. 'ré' → logprob: -8.824304580688477

Token 78: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.000954098126385361
    2. ' enter' → logprob: -7.2509541511535645
    3. '_enter' → logprob: -10.000953674316406
    4. 'Enter' → logprob: -10.625953674316406
    5. 'enser' → logprob: -10.625953674316406
    6. 'anter' → logprob: -10.875953674316406
    7. 'ent' → logprob: -11.125953674316406
    8. '	enter' → logprob: -11.625953674316406
    9. 'éter' → logprob: -11.875953674316406
    10. 'érer' → logprob: -11.875953674316406

Token 79: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.048674117773771286
    2. 'n' → logprob: -3.0486741065979004
    3. ' ' → logprob: -10.173674583435059
    4. ' ' → logprob: -11.798674583435059
    5. '(n' → logprob: -12.173674583435059
    6. 'l' → logprob: -12.173674583435059
    7. '	n' → logprob: -12.173674583435059
    8. ' l' → logprob: -12.423674583435059
    9. ' le' → logprob: -12.548674583435059
    10. ' `' → logprob: -12.673674583435059

Token 80: '
' (ID: 198)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.5157022476196289
    2. ' power' → logprob: -2.640702247619629
    3. '2' → logprob: -3.015702247619629
    4. 'p' → logprob: -3.015702247619629
    5. ' puissance' → logprob: -3.015702247619629
    6. 'result' → logprob: -3.265702247619629
    7. 'pow' → logprob: -3.640702247619629
    8. '```' → logprob: -4.015702247619629
    9. '
' → logprob: -4.140702247619629
    10. ' ' → logprob: -4.265702247619629

Token 81: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5592958331108093
    2. 'power' → logprob: -1.309295892715454
    3. ' p' → logprob: -2.434295892715454
    4. ' power' → logprob: -3.559295892715454
    5. 'result' → logprob: -4.184295654296875
    6. ' puissance' → logprob: -5.184295654296875
    7. 'k' → logprob: -5.559295654296875
    8. ' result' → logprob: -5.559295654296875
    9. 'pow' → logprob: -5.934295654296875
    10. 'max' → logprob: -6.059295654296875

Token 82: ' Sou' (ID: 17228)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.534726619720459
    2. 'p' → logprob: -2.034726619720459
    3. ' power' → logprob: -2.409726619720459
    4. 'k' → logprob: -3.159726619720459
    5. ' puissance' → logprob: -3.409726619720459
    6. ' p' → logprob: -3.784726619720459
    7. 'result' → logprob: -4.034726619720459
    8. ' result' → logprob: -4.284726619720459
    9. 'pow' → logprob: -4.409726619720459
    10. 'max' → logprob: -4.409726619720459

Token 83: 'stra' (ID: 14867)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vent' → logprob: -2.1693241596221924
    2. 'str' → logprob: -2.1693241596221924
    3. 'stra' → logprob: -2.1693241596221924
    4. 'hai' → logprob: -2.2943241596221924
    5. 'b' → logprob: -2.6693241596221924
    6. 'p' → logprob: -2.6693241596221924
    7. 'hait' → logprob: -2.7943241596221924
    8. 'vant' → logprob: -3.2943241596221924
    9. 'r' → logprob: -3.4193241596221924
    10. 'h' → logprob: -3.4193241596221924

Token 84: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.2220422327518463
    2. 'it' → logprob: -2.4720423221588135
    3. 'nt' → logprob: -3.3470423221588135
    4. 't' → logprob: -3.8470423221588135
    5. '   ' → logprob: -4.722042083740234
    6. 'cter' → logprob: -5.097042083740234
    7. 'ire' → logprob: -5.222042083740234
    8. 'ction' → logprob: -5.222042083740234
    9. '	' → logprob: -5.597042083740234
    10. '1' → logprob: -6.409542083740234

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11350394040346146
    2. ' ' → logprob: -2.238503932952881
    3. '(' → logprob: -7.613503932952881
    4. ' ' → logprob: -9.613504409790039
    5. '2' → logprob: -9.988504409790039
    6. '   ' → logprob: -10.613504409790039
    7. ' one' → logprob: -11.738504409790039
    8. '  ' → logprob: -11.863504409790039
    9. ' (' → logprob: -11.988504409790039
    10. '    ' → logprob: -12.363504409790039

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036917629186064005
    2. ' ' → logprob: -5.628691673278809
    3. '   ' → logprob: -9.753691673278809
    4. '2' → logprob: -10.878691673278809
    5. '  ' → logprob: -12.003691673278809
    6. ' ' → logprob: -12.878691673278809
    7. '```' → logprob: -13.628691673278809
    8. '(' → logprob: -13.753691673278809
    9. '    ' → logprob: -14.503691673278809
    10. '`' → logprob: -14.816191673278809

Token 87: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.317043662071228
    2. '1' → logprob: -1.942043662071228
    3. ' ' → logprob: -1.942043662071228
    4. ' (' → logprob: -2.0670437812805176
    5. '(' → logprob: -2.3170437812805176
    6. '2' → logprob: -2.9420437812805176
    7. ' **' → logprob: -3.1920437812805176
    8. ' <<' → logprob: -3.3170437812805176
    9. '**' → logprob: -3.9420437812805176
    10. ' )' → logprob: -4.067043781280518

Token 88: ' obtenir' (ID: 54423)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1538954973220825
    2. '2' → logprob: -1.6538954973220825
    3. ' ' → logprob: -2.028895378112793
    4. 'shift' → logprob: -2.403895378112793
    5. 'n' → logprob: -2.778895378112793
    6. ' shift' → logprob: -3.278895378112793
    7. ' pouvoir' → logprob: -3.528895378112793
    8. ' n' → logprob: -4.028895378112793
    9. ' déplacer' → logprob: -4.028895378112793
    10. ' obtenir' → logprob: -4.653895378112793

Token 89: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1747097373008728
    2. '1' → logprob: -2.1747097969055176
    3. ' n' → logprob: -4.049709796905518
    4. '2' → logprob: -4.424709796905518
    5. ' (' → logprob: -5.049709796905518
    6. 'n' → logprob: -6.174709796905518
    7. ' une' → logprob: -6.299709796905518
    8. ' la' → logprob: -6.549709796905518
    9. ' un' → logprob: -7.174709796905518
    10. ' )' → logprob: -7.424709796905518

Token 90: ' position' (ID: 4010)
  Prédit: ' puissance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puissance' → logprob: -0.28514420986175537
    2. ' plus' → logprob: -1.7851442098617554
    3. ' exponent' → logprob: -4.035144329071045
    4. ' ' → logprob: -4.035144329071045
    5. ' dé' → logprob: -4.410144329071045
    6. ' position' → logprob: -4.785144329071045
    7. ' puiss' → logprob: -5.285144329071045
    8. ' expos' → logprob: -6.035144329071045
    9. ' valeur' → logprob: -6.035144329071045
    10. ' déplacement' → logprob: -6.535144329071045

Token 91: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.38771390914917
    2. ' ' → logprob: -1.63771390914917
    3. ' de' → logprob: -1.76271390914917
    4. ' (' → logprob: -1.76271390914917
    5. ' **' → logprob: -2.76271390914917
    6. '**' → logprob: -3.38771390914917
    7. '1' → logprob: -3.76271390914917
    8. ' d' → logprob: -3.88771390914917
    9. ' ' → logprob: -4.13771390914917
    10. ' (
' → logprob: -4.63771390914917

Token 92: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.14247140288352966
    2. 'bit' → logprob: -2.5174713134765625
    3. ' ' → logprob: -4.1424713134765625
    4. ' exponent' → logprob: -4.7674713134765625
    5. '```' → logprob: -5.2674713134765625
    6. '1' → logprob: -5.3924713134765625
    7. 'b' → logprob: -5.3924713134765625
    8. ' plus' → logprob: -6.0174713134765625
    9. ' highest' → logprob: -6.8924713134765625
    10. '2' → logprob: -6.8924713134765625

Token 93: ' le' (ID: 505)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.8708431124687195
    2. ' ' → logprob: -1.8708431720733643
    3. '**' → logprob: -1.9958431720733643
    4. ' ' → logprob: -2.4958431720733643
    5. ' ```' → logprob: -3.2458431720733643
    6. '```' → logprob: -3.7458431720733643
    7. '_' → logprob: -3.8708431720733643
    8. '1' → logprob: -3.8708431720733643
    9. 'n' → logprob: -3.9958431720733643
    10. '2' → logprob: -4.120842933654785

Token 94: ' plus' (ID: 2932)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8763453364372253
    2. 's' → logprob: -1.8763453960418701
    3. 'v' → logprob: -2.37634539604187
    4. 'ast' → logprob: -2.87634539604187
    5. 've' → logprob: -3.37634539604187
    6. ' ' → logprob: -3.50134539604187
    7. ' plus' → logprob: -3.62634539604187
    8. '```' → logprob: -3.87634539604187
    9. 'ading' → logprob: -4.126345157623291
    10. 'ss' → logprob: -4.126345157623291

Token 95: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13290603458881378
    2. ' signific' → logprob: -3.382905960083008
    3. ' élevé' → logprob: -3.632905960083008
    4. ' à' → logprob: -4.007905960083008
    5. ' significant' → logprob: -4.132905960083008
    6. '1' → logprob: -4.882905960083008
    7. ' ```' → logprob: -5.632905960083008
    8. '```' → logprob: -5.757905960083008
    9. ' ' → logprob: -6.007905960083008
    10. ' ﻿' → logprob: -6.632905960083008

Token 96: ' gauche' (ID: 58367)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08948232978582382
    2. ' ' → logprob: -2.589482307434082
    3. ' gauche' → logprob: -5.339482307434082
    4. 'g' → logprob: -5.839482307434082
    5. 'c' → logprob: -6.839482307434082
    6. ' droite' → logprob: -7.089482307434082
    7. '```' → logprob: -8.714482307434082
    8. 'd' → logprob: -9.089482307434082
    9. 'l' → logprob: -9.214482307434082
    10. '  ' → logprob: -9.589482307434082

Token 97: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9748860597610474
    2. ' p' → logprob: -1.9748860597610474
    3. 'power' → logprob: -2.474885940551758
    4. '2' → logprob: -2.724885940551758
    5. ' power' → logprob: -2.724885940551758
    6. 'k' → logprob: -2.849885940551758
    7. ' ' → logprob: -2.974885940551758
    8. 'shift' → logprob: -3.974885940551758
    9. ' k' → logprob: -4.224885940551758
    10. ' shift' → logprob: -4.599885940551758

Token 98: 'plus' (ID: 11601)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.8762229681015015
    2. ' n' → logprob: -1.5012229681015015
    3. ')' → logprob: -1.7512229681015015
    4. 'n' → logprob: -2.251223087310791
    5. ' ' → logprob: -2.626223087310791
    6. '1' → logprob: -5.251223087310791
    7. ' ')' → logprob: -7.501223087310791
    8. '(' → logprob: -7.876223087310791
    9. ')n' → logprob: -7.876223087310791
    10. ')**' → logprob: -7.876223087310791

Token 99: ' signific' (ID: 5404)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23984435200691223
    2. ' ' → logprob: -2.61484432220459
    3. ')' → logprob: -2.86484432220459
    4. ' )' → logprob: -3.23984432220459
    5. ' ```' → logprob: -3.61484432220459
    6. ' significant' → logprob: -5.23984432220459
    7. '```' → logprob: -5.36484432220459
    8. ' ' → logprob: -6.36484432220459
    9. ' -' → logprob: -7.48984432220459
    10. ' élevé' → logprob: -7.73984432220459

Token 100: 'atif' (ID: 23984)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.09597708284854889
    2. 'atif' → logprob: -3.3459770679473877
    3. 'ant' → logprob: -3.5959770679473877
    4. 'fic' → logprob: -5.095977306365967
    5. 't' → logprob: -5.345977306365967
    6. 'a' → logprob: -5.720977306365967
    7. 'at' → logprob: -5.720977306365967
    8. 'n' → logprob: -6.220977306365967
    9. 'c' → logprob: -6.345977306365967
    10. 'ent' → logprob: -6.845977306365967

Token 101: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4975353181362152
    2. ' )' → logprob: -0.9975353479385376
    3. ' )
' → logprob: -4.247535228729248
    4. ' ' → logprob: -5.747535228729248
    5. ')
' → logprob: -5.997535228729248
    6. '1' → logprob: -6.747535228729248
    7. ' )
' → logprob: -7.372535228729248
    8. '`)' → logprob: -8.497535705566406
    9. ')
' → logprob: -8.622535705566406
    10. ')`' → logprob: -8.747535705566406

Token 102: ' index' (ID: 3472)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6426234841346741
    2. ' ' → logprob: -1.3926234245300293
    3. ')' → logprob: -1.6426234245300293
    4. ' ),' → logprob: -4.892623424530029
    5. ' )
' → logprob: -5.267623424530029
    6. '1' → logprob: -5.767623424530029
    7. ' n' → logprob: -5.892623424530029
    8. ' -' → logprob: -6.017623424530029
    9. '  ' → logprob: -6.517623424530029
    10. '```' → logprob: -6.642623424530029

Token 103: 'é' (ID: 377)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1271382570266724
    2. ' )' → logprob: -1.3771382570266724
    3. ' ' → logprob: -2.002138137817383
    4. '_' → logprob: -2.127138137817383
    5. '0' → logprob: -2.377138137817383
    6. '1' → logprob: -3.752138137817383
    7. ' _' → logprob: -4.377138137817383
    8. ' -' → logprob: -4.377138137817383
    9. ' +' → logprob: -4.377138137817383
    10. ' =' → logprob: -5.752138137817383

Token 104: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4392387568950653
    2. ' )' → logprob: -1.9392387866973877
    3. '0' → logprob: -2.5642387866973877
    4. ')' → logprob: -2.5642387866973877
    5. ' -' → logprob: -3.6892387866973877
    6. ' à' → logprob: -4.689238548278809
    7. '1' → logprob: -4.689238548278809
    8. '()' → logprob: -5.939238548278809
    9. ' =' → logprob: -6.064238548278809
    10. ' de' → logprob: -6.439238548278809

Token 105: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38883841037750244
    2. '1' → logprob: -1.1388384103775024
    3. '0' → logprob: -6.888838291168213
    4. ' n' → logprob: -7.513838291168213
    5. ' -' → logprob: -8.763838768005371
    6. ' )' → logprob: -9.763838768005371
    7. ')' → logprob: -10.138838768005371
    8. 'n' → logprob: -10.763838768005371
    9. ' l' → logprob: -10.888838768005371
    10. ' zéro' → logprob: -10.888838768005371

Token 106: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02082260511815548
    2. ' ' → logprob: -4.270822525024414
    3. '0' → logprob: -5.020822525024414
    4. 'n' → logprob: -11.020822525024414
    5. ' n' → logprob: -11.770822525024414
    6. '-' → logprob: -12.895822525024414
    7. 'un' → logprob: -13.020822525024414
    8. '```' → logprob: -13.395822525024414
    9. ' ' → logprob: -13.520822525024414
    10. ' -' → logprob: -14.145822525024414

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38950619101524353
    2. ' )' → logprob: -1.139506220817566
    3. ' )
' → logprob: -7.1395063400268555
    4. ')
' → logprob: -7.8895063400268555
    5. 'n' → logprob: -8.014506340026855
    6. ' ' → logprob: -8.389506340026855
    7. '))' → logprob: -8.514506340026855
    8. ' n' → logprob: -9.139506340026855
    9. '1' → logprob: -9.264506340026855
    10. ' )
' → logprob: -9.639506340026855

Token 108: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.338989794254303
    2. 'power' → logprob: -1.5889897346496582
    3. ' p' → logprob: -3.588989734649658
    4. 'result' → logprob: -4.088989734649658
    5. 'pow' → logprob: -4.713989734649658
    6. ' power' → logprob: -4.838989734649658
    7. 'k' → logprob: -4.963989734649658
    8. 'res' → logprob: -5.588989734649658
    9. '2' → logprob: -5.588989734649658
    10. ' result' → logprob: -6.338989734649658

Token 109: ' '' (ID: 461)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.48130616545677185
    2. 'p' → logprob: -1.4813061952590942
    3. 'result' → logprob: -2.7313060760498047
    4. 'k' → logprob: -3.8563060760498047
    5. ' power' → logprob: -4.106306076049805
    6. 'pow' → logprob: -4.356306076049805
    7. ' p' → logprob: -4.481306076049805
    8. ' result' → logprob: -4.481306076049805
    9. 'highest' → logprob: -5.481306076049805
    10. 'res' → logprob: -5.731306076049805

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09492135047912598
    2. ' ' → logprob: -2.969921350479126
    3. '(' → logprob: -3.844921350479126
    4. ' (' → logprob: -4.594921112060547
    5. '2' → logprob: -5.594921112060547
    6. ' n' → logprob: -6.344921112060547
    7. 'n' → logprob: -6.344921112060547
    8. '(n' → logprob: -9.094921112060547
    9. 'pow' → logprob: -9.094921112060547
    10. 'result' → logprob: -9.594921112060547

Token 111: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.003691643476486206
    2. '<<' → logprob: -5.628691673278809
    3. ' ' → logprob: -10.253691673278809
    4. ' <<=' → logprob: -10.878691673278809
    5. '<' → logprob: -11.253691673278809
    6. ' <' → logprob: -12.003691673278809
    7. '<<(' → logprob: -12.003691673278809
    8. ')' → logprob: -12.378691673278809
    9. ' <<
' → logprob: -12.753691673278809
    10. ')<<' → logprob: -13.003691673278809

Token 112: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3148634433746338
    2. '(n' → logprob: -1.3148634433746338
    3. 'n' → logprob: -7.189863204956055
    4. ' n' → logprob: -7.689863204956055
    5. '(' → logprob: -7.939863204956055
    6. ' ' → logprob: -11.814863204956055
    7. '((' → logprob: -11.939863204956055
    8. ' (
' → logprob: -12.439863204956055
    9. '(
' → logprob: -12.564863204956055
    10. ' ' → logprob: -12.689863204956055

Token 113: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0020970876794308424
    2. ' n' → logprob: -6.252097129821777
    3. '(n' → logprob: -8.752097129821777
    4. ' (' → logprob: -11.752097129821777
    5. ')n' → logprob: -13.877097129821777
    6. '	n' → logprob: -15.127097129821777
    7. '(' → logprob: -15.502097129821777
    8. ' ' → logprob: -15.752097129821777
    9. ')' → logprob: -15.939597129821777
    10. ' ' → logprob: -15.939597129821777

Token 114: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.011783482506871223
    2. '.' → logprob: -4.511783599853516
    3. '.n' → logprob: -7.386783599853516
    4. ' .' → logprob: -10.011783599853516
    5. '.b' → logprob: -11.011783599853516
    6. ').' → logprob: -11.386783599853516
    7. '.bits' → logprob: -11.636783599853516
    8. '-' → logprob: -11.636783599853516
    9. ' ' → logprob: -12.011783599853516
    10. 'n' → logprob: -12.386783599853516

Token 115: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00033832306507974863
    2. '_' → logprob: -8.375338554382324
    3. '_l' → logprob: -9.750338554382324
    4. ' _' → logprob: -10.250338554382324
    5. '_le' → logprob: -11.875338554382324
    6. '_lengths' → logprob: -13.000338554382324
    7. ')' → logprob: -14.125338554382324
    8. '_LENGTH' → logprob: -14.500338554382324
    9. ')_' → logprob: -14.625338554382324
    10. '_width' → logprob: -14.625338554382324

Token 116: '()-' (ID: 31850)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002780511975288391
    2. '()-' → logprob: -6.252780437469482
    3. ' ()' → logprob: -7.377780437469482
    4. '())' → logprob: -9.12778091430664
    5. ')' → logprob: -9.25278091430664
    6. '-' → logprob: -12.12778091430664
    7. ' -' → logprob: -12.25278091430664
    8. '(' → logprob: -12.37778091430664
    9. ' ' → logprob: -12.75278091430664
    10. ' )' → logprob: -13.12778091430664

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033648815006017685
    2. ' ' → logprob: -3.408648729324341
    3. '2' → logprob: -13.533648490905762
    4. ')' → logprob: -14.033648490905762
    5. ' )' → logprob: -15.596148490905762
    6. '```' → logprob: -15.596148490905762
    7. ' ' → logprob: -16.471149444580078
    8. '0' → logprob: -16.721149444580078
    9. '   ' → logprob: -17.283649444580078
    10. '
' → logprob: -17.346149444580078

Token 118: ')'' (ID: 45517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01263713650405407
    2. ' )' → logprob: -4.387637138366699
    3. '))' → logprob: -9.2626371383667
    4. ')`' → logprob: -10.7626371383667
    5. '')' → logprob: -12.8876371383667
    6. ' ))' → logprob: -13.2626371383667
    7. ')))' → logprob: -13.6376371383667
    8. ')**' → logprob: -13.8876371383667
    9. ' ' → logprob: -14.1376371383667
    10. '`)' → logprob: -14.2626371383667

Token 119: ' déc' (ID: 8498)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6989956498146057
    2. '<|end|>' → logprob: -1.073995590209961
    3. ')' → logprob: -1.948995590209961
    4. ' )' → logprob: -5.073995590209961
    5. ' if' → logprob: -5.323995590209961
    6. '<|end|>' → logprob: -6.323995590209961
    7. 'n' → logprob: -6.698995590209961
    8. '  ' → logprob: -7.323995590209961
    9. '**' → logprob: -7.573995590209961
    10. '```' → logprob: -7.698995590209961

Token 120: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.8090953826904297
    2. 'al' → logprob: -1.6840953826904297
    3. 'ide' → logprob: -2.5590953826904297
    4. '```' → logprob: -2.6840953826904297
    5. 'alc' → logprob: -2.8090953826904297
    6. 'id' → logprob: -3.9340953826904297
    7. 'à' → logprob: -4.18409538269043
    8. '%' → logprob: -4.55909538269043
    9. 'oupe' → logprob: -4.80909538269043
    10. 'onne' → logprob: -4.93409538269043

Token 121: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3147362172603607
    2. '1' → logprob: -1.314736247062683
    3. ' n' → logprob: -6.689736366271973
    4. 'n' → logprob: -9.189736366271973
    5. ')' → logprob: -10.439736366271973
    6. '  ' → logprob: -10.939736366271973
    7. ' ' → logprob: -11.064736366271973
    8. '```' → logprob: -11.564736366271973
    9. '   ' → logprob: -11.689736366271973
    10. ' l' → logprob: -11.814736366271973

Token 122: ' bit' (ID: 3546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5772929787635803
    2. '1' → logprob: -0.8272929787635803
    3. ' bit' → logprob: -7.3272929191589355
    4. 'n' → logprob: -8.952293395996094
    5. ' espace' → logprob: -9.077293395996094
    6. 'space' → logprob: -9.452293395996094
    7. 'bit' → logprob: -9.952293395996094
    8. ' space' → logprob: -10.452293395996094
    9. ' )' → logprob: -10.577293395996094
    10. ' '' → logprob: -10.889793395996094

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5818286538124084
    2. ' ' → logprob: -0.9568286538124084
    3. ')' → logprob: -3.2068285942077637
    4. ' )' → logprob: -5.581828594207764
    5. ' d' → logprob: -5.706828594207764
    6. ' de' → logprob: -6.081828594207764
    7. 's' → logprob: -6.456828594207764
    8. ' n' → logprob: -6.456828594207764
    9. 'n' → logprob: -7.081828594207764
    10. '   ' → logprob: -7.206828594207764

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10716791450977325
    2. ' ' → logprob: -2.482167959213257
    3. ')' → logprob: -4.732167720794678
    4. ' d' → logprob: -5.232167720794678
    5. 'd' → logprob: -6.732167720794678
    6. ' de' → logprob: -6.857167720794678
    7. ' )' → logprob: -7.857167720794678
    8. 'n' → logprob: -8.107168197631836
    9. ' n' → logprob: -8.482168197631836
    10. ' à' → logprob: -8.857168197631836

Token 125: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.187025249004364
    2. ' )' → logprob: -2.562025308609009
    3. ' ' → logprob: -2.937025308609009
    4. '<|end|>' → logprob: -4.06202507019043
    5. ' if' → logprob: -4.43702507019043
    6. '```' → logprob: -5.93702507019043
    7. 'n' → logprob: -6.43702507019043
    8. '1' → logprob: -6.56202507019043
    9. ' n' → logprob: -7.18702507019043
    10. '  ' → logprob: -7.43702507019043

Token 126: ' gauche' (ID: 58367)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6580685377120972
    2. ' n' → logprob: -0.7830685377120972
    3. ' ' → logprob: -4.533068656921387
    4. ')' → logprob: -5.533068656921387
    5. ' )' → logprob: -5.533068656921387
    6. ' l' → logprob: -6.408068656921387
    7. 'l' → logprob: -6.783068656921387
    8. ' la' → logprob: -6.908068656921387
    9. '(n' → logprob: -7.658068656921387
    10. ')n' → logprob: -7.908068656921387

Token 127: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9324501156806946
    2. ' n' → logprob: -1.5574500560760498
    3. 'n' → logprob: -1.8074500560760498
    4. ' )' → logprob: -2.18245005607605
    5. ' ' → logprob: -2.68245005607605
    6. ' (' → logprob: -3.80745005607605
    7. '(n' → logprob: -5.307450294494629
    8. '1' → logprob: -5.432450294494629
    9. '```' → logprob: -5.432450294494629
    10. '(' → logprob: -6.057450294494629

Token 128: ' position' (ID: 4010)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3913741409778595
    2. ' n' → logprob: -1.141374111175537
    3. ' ' → logprob: -6.516374111175537
    4. ' obtenir' → logprob: -6.766374111175537
    5. ' (' → logprob: -7.766374111175537
    6. ' pouvoir' → logprob: -8.266374588012695
    7. ' créer' → logprob: -8.641374588012695
    8. '1' → logprob: -9.516374588012695
    9. ' représ' → logprob: -9.516374588012695
    10. ' atteindre' → logprob: -9.516374588012695

Token 129: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.15531079471111298
    2. 'er' → logprob: -2.030310869216919
    3. 'n' → logprob: -4.53031063079834
    4. '1' → logprob: -7.53031063079834
    5. ' ' → logprob: -8.40531063079834
    6. ')' → logprob: -8.40531063079834
    7. ' (' → logprob: -8.40531063079834
    8. '(' → logprob: -8.90531063079834
    9. 'né' → logprob: -9.40531063079834
    10. ' n' → logprob: -9.65531063079834

Token 130: ' un' (ID: 537)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5817869901657104
    2. ' n' → logprob: -1.2067869901657104
    3. ' (' → logprob: -3.456787109375
    4. ')' → logprob: -3.456787109375
    5. ' ' → logprob: -3.706787109375
    6. ' )' → logprob: -4.581787109375
    7. ' la' → logprob: -4.706787109375
    8. '(n' → logprob: -4.831787109375
    9. '1' → logprob: -5.206787109375
    10. 's' → logprob: -5.581787109375

Token 131: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5841233730316162
    2. ' espace' → logprob: -1.0841233730316162
    3. 'e' → logprob: -3.209123373031616
    4. '1' → logprob: -3.584123373031616
    5. ' exponent' → logprob: -5.209123611450195
    6. '  ' → logprob: -5.209123611450195
    7. ' )' → logprob: -5.584123611450195
    8. '```' → logprob: -6.459123611450195
    9. ' bit' → logprob: -6.584123611450195
    10. 'es' → logprob: -6.709123611450195

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21769052743911743
    2. 'bit' → logprob: -2.2176904678344727
    3. 'pu' → logprob: -4.217690467834473
    4. ' ' → logprob: -4.342690467834473
    5. 'b' → logprob: -4.467690467834473
    6. 'n' → logprob: -4.592690467834473
    7. '```' → logprob: -4.967690467834473
    8. 'ex' → logprob: -5.592690467834473
    9. 'nombre' → logprob: -5.717690467834473
    10. '2' → logprob: -5.717690467834473

Token 133: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7532285451889038
    2. 'n' → logprob: -1.2532285451889038
    3. ' n' → logprob: -2.7532286643981934
    4. ' )' → logprob: -2.8782286643981934
    5. ' ' → logprob: -3.0032286643981934
    6. '```' → logprob: -4.003228664398193
    7. '1' → logprob: -4.378228664398193
    8. ' à' → logprob: -5.003228664398193
    9. ',' → logprob: -5.628228664398193
    10. 's' → logprob: -5.753228664398193

Token 134: ' bit' (ID: 3546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4252718687057495
    2. ' n' → logprob: -2.175271987915039
    3. ' ' → logprob: -3.175271987915039
    4. 'position' → logprob: -3.425271987915039
    5. ' position' → logprob: -3.425271987915039
    6. 'bit' → logprob: -3.800271987915039
    7. ' plus' → logprob: -4.050271987915039
    8. 'niveau' → logprob: -4.050271987915039
    9. ' )' → logprob: -4.550271987915039
    10. 'plus' → logprob: -4.550271987915039

Token 135: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1362566947937012
    2. ' n' → logprob: -1.3862566947937012
    3. 'n' → logprob: -2.011256694793701
    4. '(n' → logprob: -2.136256694793701
    5. ' (' → logprob: -2.886256694793701
    6. ' plus' → logprob: -3.136256694793701
    7. ' ' → logprob: -3.886256694793701
    8. 'plus' → logprob: -4.636256694793701
    9. ' most' → logprob: -4.761256694793701
    10. 'le' → logprob: -4.761256694793701

Token 136: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.021097175776958466
    2. ' plus' → logprob: -3.896097183227539
    3. 'n' → logprob: -8.271097183227539
    4. '```' → logprob: -9.021097183227539
    5. '_plus' → logprob: -9.896097183227539
    6. 'niveau' → logprob: -10.646097183227539
    7. '+' → logprob: -10.771097183227539
    8. '1' → logprob: -10.896097183227539
    9. 'Plus' → logprob: -11.646097183227539
    10. '-plus' → logprob: -12.146097183227539

Token 137: ' signific' (ID: 5404)
  Prédit: ' signific'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signific' → logprob: -1.279677152633667
    2. 'sign' → logprob: -1.404677152633667
    3. ' à' → logprob: -1.779677152633667
    4. ' significant' → logprob: -1.779677152633667
    5. ' élevé' → logprob: -2.154677152633667
    6. ' haut' → logprob: -5.029677391052246
    7. 'à' → logprob: -5.279677391052246
    8. ' ' → logprob: -6.029677391052246
    9. '_sign' → logprob: -6.029677391052246
    10. ' gauche' → logprob: -6.654677391052246

Token 138: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.00115486653521657
    2. 'ant' → logprob: -7.251154899597168
    3. 'at' → logprob: -7.876154899597168
    4. ' at' → logprob: -10.626154899597168
    5. 't' → logprob: -11.501154899597168
    6. 'a' → logprob: -11.751154899597168
    7. 'f' → logprob: -12.001154899597168
    8. 'atifs' → logprob: -12.751154899597168
    9. 'ative' → logprob: -12.876154899597168
    10. 'if' → logprob: -13.626154899597168

Token 139: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8671240210533142
    2. 'print' → logprob: -1.992124080657959
    3. ')' → logprob: -2.242124080657959
    4. ' if' → logprob: -2.242124080657959
    5. 'if' → logprob: -2.742124080657959
    6. '**' → logprob: -3.492124080657959
    7. ' ' → logprob: -3.617124080657959
    8. 'power' → logprob: -3.617124080657959
    9. 'res' → logprob: -4.367124080657959
    10. ' )' → logprob: -4.492124080657959

Token 140: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0700683668255806
    2. 'n' → logprob: -2.695068359375
    3. ' ' → logprob: -9.070068359375
    4. ' ' → logprob: -11.695068359375
    5. '	n' → logprob: -12.945068359375
    6. ')n' → logprob: -13.820068359375
    7. ' l' → logprob: -14.070068359375
    8. '(n' → logprob: -14.070068359375
    9. ')' → logprob: -14.195068359375
    10. 'l' → logprob: -14.820068359375

Token 141: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1623538732528687
    2. ' if' → logprob: -1.1623538732528687
    3. 'result' → logprob: -1.6623538732528687
    4. ' ' → logprob: -2.787353992462158
    5. 'print' → logprob: -3.287353992462158
    6. ')' → logprob: -4.037353992462158
    7. ' 
' → logprob: -4.412353992462158
    8. '
' → logprob: -4.662353992462158
    9. 'power' → logprob: -4.662353992462158
    10. ' result' → logprob: -5.037353992462158

Token 142: 'b' (ID: 65)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.40891408920288086
    2. 'power' → logprob: -1.7839140892028809
    3. 'res' → logprob: -2.783914089202881
    4. 'p' → logprob: -3.283914089202881
    5. 'pu' → logprob: -3.908914089202881
    6. ' result' → logprob: -4.408914089202881
    7. 'print' → logprob: -4.408914089202881
    8. ' puissance' → logprob: -4.783914089202881
    9. 'pow' → logprob: -5.533914089202881
    10. ' power' → logprob: -6.158914089202881

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055505212396383286
    2. '=' → logprob: -3.1805052757263184
    3. 'it' → logprob: -5.055505275726318
    4. 'i' → logprob: -5.930505275726318
    5. '2' → logprob: -6.805505275726318
    6. '1' → logprob: -7.055505275726318
    7. 'its' → logprob: -7.680505275726318
    8. ' ' → logprob: -8.18050479888916
    9. '_' → logprob: -8.30550479888916
    10. 'y' → logprob: -9.55550479888916

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5231314897537231
    2. ' ' → logprob: -0.8981314897537231
    3. ' (' → logprob: -12.773131370544434
    4. '(' → logprob: -12.898131370544434
    5. ' ' → logprob: -14.148131370544434
    6. '2' → logprob: -14.648131370544434
    7. 'n' → logprob: -14.648131370544434
    8. '  ' → logprob: -14.648131370544434
    9. ' n' → logprob: -15.398131370544434
    10. '   ' → logprob: -15.648131370544434

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00036275613820180297
    2. ' ' → logprob: -8.125362396240234
    3. '(' → logprob: -9.625362396240234
    4. ' (' → logprob: -14.625362396240234
    5. 'n' → logprob: -15.250362396240234
    6. '2' → logprob: -18.500362396240234
    7. '0' → logprob: -18.500362396240234
    8. '```' → logprob: -18.500362396240234
    9. '   ' → logprob: -18.625362396240234
    10. '  ' → logprob: -18.625362396240234

Token 146: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.012764970771968365
    2. '<<' → logprob: -4.387764930725098
    3. '<' → logprob: -9.387764930725098
    4. ' <<=' → logprob: -9.387764930725098
    5. ' ' → logprob: -10.012764930725098
    6. '<<(' → logprob: -10.887764930725098
    7. ' <' → logprob: -11.262764930725098
    8. ' <<
' → logprob: -12.262764930725098
    9. ')<<' → logprob: -13.012764930725098
    10. '1' → logprob: -13.637764930725098

Token 147: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2014196664094925
    2. ' (' → logprob: -1.701419711112976
    3. 'n' → logprob: -12.576419830322266
    4. '(' → logprob: -13.201419830322266
    5. '(
' → logprob: -14.701419830322266
    6. ' n' → logprob: -15.076419830322266
    7. '((' → logprob: -15.951419830322266
    8. ' ' → logprob: -16.076419830322266
    9. ' (
' → logprob: -17.076419830322266
    10. '
' → logprob: -17.076419830322266

Token 148: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00029756641015410423
    2. ' n' → logprob: -8.125297546386719
    3. '(n' → logprob: -13.500297546386719
    4. ')n' → logprob: -16.50029754638672
    5. '	n' → logprob: -17.25029754638672
    6. '   ' → logprob: -18.00029754638672
    7. ' (' → logprob: -18.25029754638672
    8. '[n' → logprob: -19.12529754638672
    9. '
' → logprob: -19.37529754638672
    10. ',n' → logprob: -19.62529754638672

Token 149: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.003190666902810335
    2. '.' → logprob: -5.753190517425537
    3. ' .' → logprob: -11.753190994262695
    4. '.bits' → logprob: -12.753190994262695
    5. '.b' → logprob: -13.503190994262695
    6. ' bit' → logprob: -15.503190994262695
    7. '.bitmap' → logprob: -16.128190994262695
    8. '.Bit' → logprob: -16.378190994262695
    9. '.n' → logprob: -16.503190994262695
    10. '.byte' → logprob: -16.753190994262695

Token 150: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -4.246537173457909e-06
    2. 'length' → logprob: -12.625003814697266
    3. ' _' → logprob: -15.250003814697266
    4. '_l' → logprob: -15.375003814697266
    5. 'ength' → logprob: -15.875003814697266
    6. '_LENGTH' → logprob: -16.875003814697266
    7. '-' → logprob: -17.250003814697266
    8. '_width' → logprob: -17.375003814697266
    9. '_' → logprob: -17.500003814697266
    10. '_le' → logprob: -17.750003814697266

Token 151: '()-' (ID: 31850)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011728458106517792
    2. '()-' → logprob: -4.511728286743164
    3. ' ()' → logprob: -7.386728286743164
    4. ')' → logprob: -10.011728286743164
    5. '-' → logprob: -11.636728286743164
    6. '(' → logprob: -12.511728286743164
    7. '())' → logprob: -14.011728286743164
    8. ' -' → logprob: -14.136728286743164
    9. ' ' → logprob: -14.386728286743164
    10. '   ' → logprob: -14.511728286743164

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -19.87500762939453
    4. '１' → logprob: -20.37500762939453
    5. '۱' → logprob: -20.37500762939453
    6. '<|end|>' → logprob: -20.50000762939453
    7. '
' → logprob: -20.75000762939453
    8. '   ' → logprob: -21.12500762939453
    9. ')' → logprob: -21.43750762939453
    10. '১' → logprob: -21.68750762939453

Token 153: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.375001907348633
    3. ')
' → logprob: -14.625001907348633
    4. '))' → logprob: -17.000001907348633
    5. ')`' → logprob: -17.875001907348633
    6. ')

' → logprob: -18.125001907348633
    7. '')' → logprob: -18.500001907348633
    8. ')#' → logprob: -19.000001907348633
    9. '()' → logprob: -19.750001907348633
    10. '),' → logprob: -19.875001907348633

Token 154: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002347338479012251
    2. '#' → logprob: -6.502347469329834
    3. ' print' → logprob: -7.877347469329834
    4. '
' → logprob: -8.377346992492676
    5. 'if' → logprob: -9.002346992492676
    6. '<|end|>' → logprob: -10.377346992492676
    7. '#print' → logprob: -10.627346992492676
    8. 'b' → logprob: -10.877346992492676
    9. ')' → logprob: -11.627346992492676
    10. ' ' → logprob: -12.252346992492676

Token 155: ' Vér' (ID: 159169)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.0126840758603066e-05
    2. 'if' → logprob: -10.500040054321289
    3. '#' → logprob: -11.875040054321289
    4. 'result' → logprob: -13.000040054321289
    5. ' print' → logprob: -13.875040054321289
    6. 'while' → logprob: -13.875040054321289
    7. '#print' → logprob: -15.000040054321289
    8. 'pr' → logprob: -15.250040054321289
    9. 'p' → logprob: -15.250040054321289
    10. 'prin' → logprob: -15.375040054321289

Token 156: 'ifie' (ID: 46409)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.002088400535285473
    2. 'if' → logprob: -6.87708854675293
    3. 'i' → logprob: -7.75208854675293
    4. 'ifie' → logprob: -8.37708854675293
    5. ' if' → logprob: -8.75208854675293
    6. '```' → logprob: -9.50208854675293
    7. 'ifi' → logprob: -9.62708854675293
    8. '#' → logprob: -11.12708854675293
    9. 'ifer' → logprob: -11.25208854675293
    10. 'IFIER' → logprob: -11.50208854675293

Token 157: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9525415301322937
    2. ' if' → logprob: -1.0775415897369385
    3. ' (' → logprob: -1.8275415897369385
    4. ' n' → logprob: -2.8275415897369385
    5. 'if' → logprob: -4.077541351318359
    6. ' b' → logprob: -4.577541351318359
    7. '  ' → logprob: -5.077541351318359
    8. 'b' → logprob: -5.077541351318359
    9. 'n' → logprob: -5.702541351318359
    10. ' ' → logprob: -5.827541351318359

Token 158: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.016219472512602806
    2. 'n' → logprob: -4.141219615936279
    3. ' b' → logprob: -9.141219139099121
    4. ' ' → logprob: -9.891219139099121
    5. 'b' → logprob: -11.141219139099121
    6. ' ' → logprob: -11.516219139099121
    7. ' (' → logprob: -13.766219139099121
    8. '(n' → logprob: -14.641219139099121
    9. ' isinstance' → logprob: -14.641219139099121
    10. '  ' → logprob: -15.141219139099121

Token 159: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.344475656747818
    2. ' >' → logprob: -1.5944756269454956
    3. ' ' → logprob: -2.969475746154785
    4. ' >=' → logprob: -4.469475746154785
    5. ' <=' → logprob: -4.469475746154785
    6. '==' → logprob: -4.844475746154785
    7. '>' → logprob: -5.594475746154785
    8. ' <' → logprob: -6.844475746154785
    9. ' %' → logprob: -7.594475746154785
    10. ' !=' → logprob: -8.219475746154785

Token 160: ' exactement' (ID: 108701)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.7803313732147217
    2. ' ' → logprob: -0.9053313732147217
    3. '0' → logprob: -3.1553313732147217
    4. ' positif' → logprob: -3.6553313732147217
    5. ' strict' → logprob: -3.7803313732147217
    6. ' >' → logprob: -4.280331611633301
    7. ' égal' → logprob: -5.030331611633301
    8. 'strict' → logprob: -5.030331611633301
    9. ' inférieur' → logprob: -5.655331611633301
    10. ' greater' → logprob: -5.780331611633301

Token 161: ' égal' (ID: 15059)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.06187793239951134
    2. 'une' → logprob: -3.686877965927124
    3. 'b' → logprob: -4.061877727508545
    4. ' b' → logprob: -4.936877727508545
    5. ' égal' → logprob: -4.936877727508545
    6. 'a' → logprob: -7.061877727508545
    7. 'égal' → logprob: -7.311877727508545
    8. ' ' → logprob: -7.561877727508545
    9. ' a' → logprob: -7.936877727508545
    10. ' un' → logprob: -8.561878204345703

Token 162: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.031067516654729843
    2. 'à' → logprob: -3.9060676097869873
    3. 'b' → logprob: -4.906067371368408
    4. ' b' → logprob: -6.781067371368408
    5. 'a' → logprob: -7.281067371368408
    6. ' to' → logprob: -7.656067371368408
    7. ' ' → logprob: -8.406067848205566
    8. ' a' → logprob: -8.406067848205566
    9. 'to' → logprob: -8.406067848205566
    10. ' ' → logprob: -10.031067848205566

Token 163: ' cette' (ID: 7696)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018157318234443665
    2. ' b' → logprob: -4.018157482147217
    3. ' ' → logprob: -12.643157005310059
    4. '0' → logprob: -12.893157005310059
    5. '1' → logprob: -13.768157005310059
    6. '2' → logprob: -15.643157005310059
    7. 'a' → logprob: -15.768157005310059
    8. 'n' → logprob: -16.518157958984375
    9. ' ' → logprob: -16.518157958984375
    10. '	b' → logprob: -16.893157958984375

Token 164: ' puissance' (ID: 63494)
  Prédit: ' puissance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puissance' → logprob: -0.195754736661911
    2. 'b' → logprob: -2.4457547664642334
    3. 'pu' → logprob: -2.6957547664642334
    4. ' valeur' → logprob: -4.070754528045654
    5. ' b' → logprob: -5.945754528045654
    6. ' ' → logprob: -6.320754528045654
    7. 'val' → logprob: -7.195754528045654
    8. ' ' → logprob: -7.570754528045654
    9. 'pot' → logprob: -8.445755004882812
    10. ' puiss' → logprob: -8.445755004882812

Token 165: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2535130977630615
    2. ' ' → logprob: -1.7535130977630615
    3. ' _' → logprob: -4.378513336181641
    4. 'b' → logprob: -4.753513336181641
    5. ' de' → logprob: -5.128513336181641
    6. ' (' → logprob: -5.378513336181641
    7. ' b' → logprob: -5.628513336181641
    8. '2' → logprob: -5.753513336181641
    9. '(' → logprob: -6.378513336181641
    10. '_b' → logprob: -6.378513336181641

Token 166: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01889677159488201
    2. ' ' → logprob: -4.143896579742432
    3. 'de' → logprob: -6.643896579742432
    4. ' deux' → logprob: -6.643896579742432
    5. ' two' → logprob: -9.51889705657959
    6. 'b' → logprob: -9.64389705657959
    7. ' b' → logprob: -9.76889705657959
    8. ' ' → logprob: -10.51889705657959
    9. 'n' → logprob: -11.14389705657959
    10. ' n' → logprob: -11.89389705657959

Token 167: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018392755882814527
    2. 'de' → logprob: -6.3768391609191895
    3. 'b' → logprob: -9.001839637756348
    4. 'n' → logprob: -12.501839637756348
    5. ' deux' → logprob: -12.501839637756348
    6. ' ' → logprob: -13.251839637756348
    7. 'two' → logprob: -13.251839637756348
    8. '```' → logprob: -13.751839637756348
    9. '1' → logprob: -15.001839637756348
    10. 'd' → logprob: -15.501839637756348

Token 168: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4756922423839569
    2. ' if' → logprob: -1.1006922721862793
    3. '
' → logprob: -3.4756922721862793
    4. ' 
' → logprob: -4.850692272186279
    5. '\n' → logprob: -5.975692272186279
    6. ':' → logprob: -6.975692272186279
    7. '  
' → logprob: -7.475692272186279
    8. ' :
' → logprob: -7.600692272186279
    9. ',' → logprob: -7.725692272186279
    10. ' ' → logprob: -7.850692272186279

Token 169: 'si' (ID: 4778)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7580695152282715
    2. ' b' → logprob: -1.2580695152282715
    3. ' )' → logprob: -2.2580695152282715
    4. 'b' → logprob: -2.7580695152282715
    5. 'n' → logprob: -3.5080695152282715
    6. ')' → logprob: -3.7580695152282715
    7. ' ' → logprob: -3.8830695152282715
    8. ' if' → logprob: -5.8830695152282715
    9. 'if' → logprob: -7.1330695152282715
    10. ' ):' → logprob: -7.7580695152282715

Token 170: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18093092739582062
    2. ' b' → logprob: -2.1809308528900146
    3. 'n' → logprob: -3.3059308528900146
    4. 'b' → logprob: -4.180931091308594
    5. ' ' → logprob: -8.305931091308594
    6. ' (' → logprob: -8.555931091308594
    7. ')' → logprob: -9.805931091308594
    8. '(n' → logprob: -10.180931091308594
    9. ' )' → logprob: -10.180931091308594
    10. ' ' → logprob: -10.805931091308594

Token 171: ' -' (ID: 533)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22407230734825134
    2. '==' → logprob: -1.7240723371505737
    3. ' &' → logprob: -4.849072456359863
    4. ')' → logprob: -5.099072456359863
    5. '&' → logprob: -5.724072456359863
    6. ' >=' → logprob: -6.849072456359863
    7. ' )' → logprob: -6.849072456359863
    8. '%' → logprob: -6.849072456359863
    9. ' ' → logprob: -7.724072456359863
    10. '>=' → logprob: -7.974072456359863

Token 172: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5231460332870483
    2. 'b' → logprob: -0.8981460332870483
    3. ' ' → logprob: -11.89814567565918
    4. ')' → logprob: -12.14814567565918
    5. '1' → logprob: -12.27314567565918
    6. ' ' → logprob: -12.89814567565918
    7. ' )' → logprob: -13.27314567565918
    8. ')b' → logprob: -15.02314567565918
    9. '=' → logprob: -15.77314567565918
    10. '	b' → logprob: -16.02314567565918

Token 173: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4692689776420593
    2. '==' → logprob: -1.219269037246704
    3. ')' → logprob: -2.594269037246704
    4. ')==' → logprob: -6.719268798828125
    5. ' )' → logprob: -7.094268798828125
    6. '=' → logprob: -7.094268798828125
    7. '>' → logprob: -7.219268798828125
    8. ' ' → logprob: -7.469268798828125
    9. ' >' → logprob: -9.469268798828125
    10. ' ' → logprob: -9.969268798828125

Token 174: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815415732562542
    2. ' ' → logprob: -4.018154144287109
    3. ')' → logprob: -13.26815414428711
    4. '1' → logprob: -13.76815414428711
    5. ' ' → logprob: -14.01815414428711
    6. ' )' → logprob: -14.76815414428711
    7. '```' → logprob: -17.45565414428711
    8. '=' → logprob: -17.51815414428711
    9. '۰' → logprob: -17.70565414428711
    10. '   ' → logprob: -17.95565414428711

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009120595059357584
    2. ' ' → logprob: -7.000912189483643
    3. ')' → logprob: -15.250911712646484
    4. '```' → logprob: -16.125911712646484
    5. ' ' → logprob: -16.125911712646484
    6. '1' → logprob: -16.875911712646484
    7. '   ' → logprob: -17.500911712646484
    8. '=' → logprob: -17.750911712646484
    9. 'b' → logprob: -18.250911712646484
    10. ' )' → logprob: -18.938411712646484

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027510300278663635
    2. '):' → logprob: -3.652510404586792
    3. ' )' → logprob: -6.777510166168213
    4. ':' → logprob: -10.402510643005371
    5. ' ):' → logprob: -10.777510643005371
    6. '):
' → logprob: -11.652510643005371
    7. ' and' → logprob: -12.652510643005371
    8. ')
' → logprob: -12.777510643005371
    9. ' ' → logprob: -13.777510643005371
    10. ' or' → logprob: -14.652510643005371

Token 177: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019649123772978783
    2. ' if' → logprob: -4.019649028778076
    3. '
' → logprob: -6.519649028778076
    4. 'i' → logprob: -12.019649505615234
    5. 'print' → logprob: -12.019649505615234
    6. ',' → logprob: -13.144649505615234
    7. ' 
' → logprob: -13.394649505615234
    8. '
' → logprob: -13.394649505615234
    9. '```' → logprob: -13.769649505615234
    10. '' → logprob: -14.144649505615234

Token 178: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020552748814225197
    2. 'n' → logprob: -3.895552635192871
    3. ' ' → logprob: -12.145552635192871
    4. '(n' → logprob: -12.895552635192871
    5. ' (' → logprob: -13.020552635192871
    6. ' ' → logprob: -14.395552635192871
    7. '	n' → logprob: -15.395552635192871
    8. ' b' → logprob: -16.645553588867188
    9. '(' → logprob: -16.770553588867188
    10. ' ' → logprob: -17.770553588867188

Token 179: ' -' (ID: 533)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08654716610908508
    2. ' -' → logprob: -2.8365471363067627
    3. '==' → logprob: -4.211547374725342
    4. '-' → logprob: -5.461547374725342
    5. ' >=' → logprob: -5.586547374725342
    6. ' ' → logprob: -6.836547374725342
    7. ' >' → logprob: -8.711546897888184
    8. '>=' → logprob: -9.586546897888184
    9. ' <=' → logprob: -10.086546897888184
    10. ' !=' → logprob: -10.211546897888184

Token 180: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141352713108063
    2. ' b' → logprob: -1.7014135122299194
    3. ' ' → logprob: -16.201414108276367
    4. '1' → logprob: -16.826414108276367
    5. '	b' → logprob: -16.951414108276367
    6. '<|end|>' → logprob: -17.451414108276367
    7. ' б' → logprob: -18.201414108276367
    8. ' ' → logprob: -18.701414108276367
    9. '_b' → logprob: -18.951414108276367
    10. '0' → logprob: -19.201414108276367

Token 181: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1428072303533554
    2. '==' → logprob: -2.0178072452545166
    3. ':' → logprob: -10.017807006835938
    4. ' !=' → logprob: -10.767807006835938
    5. '=' → logprob: -10.892807006835938
    6. ' ' → logprob: -11.267807006835938
    7. '0' → logprob: -11.392807006835938
    8. ' :' → logprob: -11.517807006835938
    9. '!=' → logprob: -12.642807006835938
    10. '>' → logprob: -13.017807006835938

Token 182: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47407835721969604
    2. '0' → logprob: -0.974078357219696
    3. ' ' → logprob: -13.599078178405762
    4. '  ' → logprob: -17.224079132080078
    5. '```' → logprob: -17.349079132080078
    6. '۰' → logprob: -18.224079132080078
    7. '1' → logprob: -18.724079132080078
    8. '   ' → logprob: -19.161579132080078
    9. ' ' → logprob: -19.661579132080078
    10. '	' → logprob: -19.724079132080078

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. ' ' → logprob: -18.252185821533203
    4. '```' → logprob: -18.627185821533203
    5. '  ' → logprob: -19.127185821533203
    6. '۰' → logprob: -19.252185821533203
    7. '1' → logprob: -19.502185821533203
    8. '   ' → logprob: -19.877185821533203
    9. ')' → logprob: -20.502185821533203
    10. ' ' → logprob: -20.627185821533203

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010640407708706334
    2. ' :' → logprob: -9.625106811523438
    3. ':
' → logprob: -10.125106811523438
    4. ':**' → logprob: -16.375106811523438
    5. ':return' → logprob: -16.750106811523438
    6. '):' → logprob: -17.625106811523438
    7. ' :
' → logprob: -18.000106811523438
    8. '：' → logprob: -18.375106811523438
    9. ':
' → logprob: -18.500106811523438
    10. ':def' → logprob: -18.750106811523438

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040207769721746445
    2. ' print' → logprob: -3.290207862854004
    3. 'print' → logprob: -7.040207862854004
    4. ':' → logprob: -7.040207862854004
    5. '   ' → logprob: -8.540207862854004
    6. ' :' → logprob: -9.290207862854004
    7. ' ' → logprob: -10.790207862854004
    8. '    
' → logprob: -10.915207862854004
    9. '	print' → logprob: -10.915207862854004
    10. ':
' → logprob: -10.915207862854004

Token 186: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6335581541061401
    2. ' print' → logprob: -0.8835581541061401
    3. '   ' → logprob: -2.8835582733154297
    4. ' pass' → logprob: -11.50855827331543
    5. ' ' → logprob: -11.63355827331543
    6. '	print' → logprob: -11.75855827331543
    7. 'pass' → logprob: -12.00855827331543
    8. '
' → logprob: -12.50855827331543
    9. 'b' → logprob: -12.50855827331543
    10. '  ' → logprob: -13.00855827331543

Token 187: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019184265285730362
    2. ' print' → logprob: -4.019184112548828
    3. '   ' → logprob: -7.019184112548828
    4. 'result' → logprob: -9.769184112548828
    5. 'b' → logprob: -10.144184112548828
    6. 'pass' → logprob: -11.394184112548828
    7. ' ' → logprob: -11.519184112548828
    8. '#' → logprob: -12.519184112548828
    9. ' result' → logprob: -12.894184112548828
    10. ' b' → logprob: -13.019184112548828

Token 188: ' c' (ID: 274)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3437407314777374
    2. '   ' → logprob: -1.343740701675415
    3. 'print' → logprob: -3.718740701675415
    4. ' n' → logprob: -5.718740940093994
    5. ' b' → logprob: -7.718740940093994
    6. ' ' → logprob: -7.843740940093994
    7. 'n' → logprob: -7.968740940093994
    8. ' ' → logprob: -8.093740463256836
    9. '    ' → logprob: -8.093740463256836
    10. '   ' → logprob: -8.468740463256836

Token 189: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.712506115436554
    2. ''est' → logprob: -1.0875060558319092
    3. '#' → logprob: -2.712506055831909
    4. 'est' → logprob: -3.712506055831909
    5. 'on' → logprob: -4.087506294250488
    6. 'ont' → logprob: -4.212506294250488
    7. 'e' → logprob: -4.462506294250488
    8. 'ela' → logprob: -4.462506294250488
    9. 'eci' → logprob: -5.087506294250488
    10. '  ' → logprob: -5.837506294250488

Token 190: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16067413985729218
    2. ' n' → logprob: -3.1606740951538086
    3. ' True' → logprob: -3.4106740951538086
    4. 'n' → logprob: -3.6606740951538086
    5. ' print' → logprob: -3.7856740951538086
    6. ' ' → logprob: -4.785674095153809
    7. 'print' → logprob: -5.410674095153809
    8. ' b' → logprob: -6.160674095153809
    9. 'True' → logprob: -6.285674095153809
    10. ' vrai' → logprob: -6.535674095153809

Token 191: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.20411381125450134
    2. ' cas' → logprob: -2.704113721847534
    3. 'nombre' → logprob: -3.329113721847534
    4. 'case' → logprob: -3.954113721847534
    5. 'plus' → logprob: -4.079113960266113
    6. 'print' → logprob: -4.329113960266113
    7. 'n' → logprob: -5.329113960266113
    8. '   ' → logprob: -5.454113960266113
    9. '```' → logprob: -5.579113960266113
    10. 'else' → logprob: -5.704113960266113

Token 192: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07924854010343552
    2. ':' → logprob: -3.3292484283447266
    3. 'print' → logprob: -3.8292484283447266
    4. ' print' → logprob: -4.204248428344727
    5. ':
' → logprob: -5.954248428344727
    6. ' :' → logprob: -7.454248428344727
    7. '   ' → logprob: -8.954248428344727
    8. ' ' → logprob: -9.704248428344727
    9. ' :
' → logprob: -9.829248428344727
    10. '    
' → logprob: -9.954248428344727

Token 193: ' afficher' (ID: 146524)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3223299980163574
    2. 'print' → logprob: -1.3223299980163574
    3. '   ' → logprob: -5.697329998016357
    4. ' b' → logprob: -6.322329998016357
    5. ' result' → logprob: -6.447329998016357
    6. 'b' → logprob: -7.322329998016357
    7. 'result' → logprob: -7.572329998016357
    8. ' resultat' → logprob: -8.072330474853516
    9. ' pass' → logprob: -8.447330474853516
    10. ' puissance' → logprob: -8.822330474853516

Token 194: ' "' (ID: 392)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3042590916156769
    2. 'n' → logprob: -1.8042590618133545
    3. ' b' → logprob: -2.8042590618133545
    4. ' n' → logprob: -3.8042590618133545
    5. '"' → logprob: -4.554259300231934
    6. '1' → logprob: -6.679259300231934
    7. 'print' → logprob: -6.929259300231934
    8. '2' → logprob: -7.304259300231934
    9. ' ' → logprob: -7.679259300231934
    10. '   ' → logprob: -8.179259300231934

Token 195: 'No' (ID: 3160)
  Prédit: 'Pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pu' → logprob: -0.8957525491714478
    2. 'n' → logprob: -1.0207525491714478
    3. '2' → logprob: -2.645752429962158
    4. '"' → logprob: -3.020752429962158
    5. 'Exact' → logprob: -3.145752429962158
    6. 'La' → logprob: -4.020752429962158
    7. 'Power' → logprob: -4.145752429962158
    8. 'Oui' → logprob: -5.020752429962158
    9. 'Yes' → logprob: -5.270752429962158
    10. 'pu' → logprob: -5.395752429962158

Token 196: '"' (ID: 1)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0263780355453491
    2. 'ne' → logprob: -1.1513780355453491
    3. 'n' → logprob: -2.0263781547546387
    4. 'te' → logprob: -2.9013781547546387
    5. 'r' → logprob: -3.5263781547546387
    6. 'u' → logprob: -3.9013781547546387
    7. ' power' → logprob: -4.526378154754639
    8. 'w' → logprob: -4.651378154754639
    9. ' output' → logprob: -4.651378154754639
    10. ' solution' → logprob: -5.026378154754639

Token 197: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6668764352798462
    2. '
' → logprob: -0.9168764352798462
    3. 'print' → logprob: -2.5418763160705566
    4. '\n' → logprob: -6.041876316070557
    5. ' print' → logprob: -6.166876316070557
    6. ':' → logprob: -6.791876316070557
    7. '    
' → logprob: -7.041876316070557
    8. '
' → logprob: -7.541876316070557
    9. ':
' → logprob: -7.791876316070557
    10. '```' → logprob: -8.291876792907715

Token 198: 'auc' (ID: 11816)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7754697203636169
    2. ' print' → logprob: -0.9004697203636169
    3. 'print' → logprob: -2.2754697799682617
    4. ')' → logprob: -4.400469779968262
    5. ' No' → logprob: -4.650469779968262
    6. ' pass' → logprob: -5.650469779968262
    7. 'No' → logprob: -6.025469779968262
    8. ' no' → logprob: -7.525469779968262
    9. ' )' → logprob: -7.650469779968262
    10. '")' → logprob: -8.150469779968262

Token 199: 'une' (ID: 2561)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03495229408144951
    2. 'n' → logprob: -3.659952402114868
    3. ' e' → logprob: -5.409952163696289
    4. 'un' → logprob: -6.534952163696289
    5. ' n' → logprob: -7.409952163696289
    6. 'es' → logprob: -7.909952163696289
    7. 'une' → logprob: -8.034952163696289
    8. 'elif' → logprob: -8.409952163696289
    9. 't' → logprob: -8.909952163696289
    10. ' besoin' → logprob: -9.159952163696289

Token 200: ' solution' (ID: 7578)
  Prédit: ' puissance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puissance' → logprob: -0.4136883020401001
    2. ' action' → logprob: -2.1636881828308105
    3. 'pu' → logprob: -2.9136881828308105
    4. ' solution' → logprob: -3.1636881828308105
    5. ' opération' → logprob: -3.5386881828308105
    6. ' power' → logprob: -4.4136881828308105
    7. ' valeur' → logprob: -4.7886881828308105
    8. 'action' → logprob: -4.7886881828308105
    9. ' modification' → logprob: -4.9136881828308105
    10. 'power' → logprob: -5.1636881828308105

Token 201: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01918356493115425
    2. '")' → logprob: -4.39418363571167
    3. ')
' → logprob: -5.39418363571167
    4. '   ' → logprob: -6.26918363571167
    5. ' )' → logprob: -9.644183158874512
    6. '")
' → logprob: -10.644183158874512
    7. '')' → logprob: -10.894183158874512
    8. ')")' → logprob: -10.894183158874512
    9. 'print' → logprob: -11.019183158874512
    10. '"' → logprob: -11.269183158874512

Token 202: ' condition' (ID: 7060)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5142914056777954
    2. ' possible' → logprob: -2.139291286468506
    3. ' aucune' → logprob: -2.889291286468506
    4. ' espace' → logprob: -2.889291286468506
    5. ' rien' → logprob: -3.014291286468506
    6. ' pas' → logprob: -3.139291286468506
    7. ' aucun' → logprob: -3.139291286468506
    8. ' continue' → logprob: -3.389291286468506
    9. ' space' → logprob: -3.514291286468506
    10. ')' → logprob: -3.764291286468506

Token 203: ' non' (ID: 2893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2197549045085907
    2. '   ' → logprob: -2.594754934310913
    3. ' )' → logprob: -3.219754934310913
    4. '")' → logprob: -3.594754934310913
    5. ')
' → logprob: -4.969754695892334
    6. ' à' → logprob: -4.969754695892334
    7. ' not' → logprob: -5.094754695892334
    8. ' print' → logprob: -5.094754695892334
    9. ' possible' → logprob: -5.344754695892334
    10. ' n' → logprob: -5.469754695892334

Token 204: ' satis' (ID: 56317)
  Prédit: ' rempl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rempl' → logprob: -1.0618386268615723
    2. ' respect' → logprob: -1.3118386268615723
    3. ' valid' → logprob: -2.4368386268615723
    4. ' satis' → logprob: -3.0618386268615723
    5. 'respect' → logprob: -3.1868386268615723
    6. ' satisf' → logprob: -3.3118386268615723
    7. ' valide' → logprob: -3.4368386268615723
    8. 'valid' → logprob: -3.5618386268615723
    9. 'val' → logprob: -3.9368386268615723
    10. ' vér' → logprob: -4.186838626861572

Token 205: 'faite' (ID: 69848)
  Prédit: 'faite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faite' → logprob: -0.002145027741789818
    2. 'f' → logprob: -6.502144813537598
    3. 'fa' → logprob: -7.627144813537598
    4. 'fait' → logprob: -9.252144813537598
    5. 'fi' → logprob: -10.377144813537598
    6. 'faire' → logprob: -10.877144813537598
    7. '#' → logprob: -13.127144813537598
    8. 'ite' → logprob: -13.752144813537598
    9. 'face' → logprob: -13.752144813537598
    10. '   ' → logprob: -14.002144813537598

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005160227883607149
    2. '):' → logprob: -6.005160331726074
    3. '   ' → logprob: -6.130160331726074
    4. ')
' → logprob: -8.005160331726074
    5. ' )' → logprob: -9.755160331726074
    6. '):
' → logprob: -9.880160331726074
    7. ':' → logprob: -10.255160331726074
    8. 'print' → logprob: -11.755160331726074
    9. '")' → logprob: -11.880160331726074
    10. ',' → logprob: -13.630160331726074

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018416560487821698
    2. 'print' → logprob: -7.3768415451049805
    3. ' print' → logprob: -7.5018415451049805
    4. '       ' → logprob: -7.5018415451049805
    5. '
' → logprob: -9.62684154510498
    6. '    
' → logprob: -11.00184154510498
    7. '   ' → logprob: -11.12684154510498
    8. '    ' → logprob: -12.87684154510498
    9. '```' → logprob: -13.00184154510498
    10. '	print' → logprob: -13.12684154510498

Token 208: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008883526897989213
    2. ' print' → logprob: -7.500888347625732
    3. '   ' → logprob: -8.00088882446289
    4. '	print' → logprob: -16.37588882446289
    5. '```' → logprob: -16.87588882446289
    6. ' ' → logprob: -17.25088882446289
    7. '  ' → logprob: -18.00088882446289
    8. '    ' → logprob: -18.75088882446289
    9. '       ' → logprob: -19.50088882446289
    10. 'pr' → logprob: -19.50088882446289

Token 209: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005238975863903761
    2. '(' → logprob: -5.255239009857178
    3. '('' → logprob: -12.63023853302002
    4. '()' → logprob: -14.13023853302002
    5. ' ("' → logprob: -14.50523853302002
    6. '("")' → logprob: -14.50523853302002
    7. '(
' → logprob: -17.505239486694336
    8. ' (' → logprob: -18.005239486694336
    9. '(False' → logprob: -18.005239486694336
    10. '("("' → logprob: -18.255239486694336

Token 210: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -5.512236498361744e-07
    2. ' No' → logprob: -14.875000953674316
    3. 'Yes' → logprob: -15.875000953674316
    4. '"No' → logprob: -17.75
    5. 'N' → logprob: -19.375
    6. '_No' → logprob: -20.375
    7. '   ' → logprob: -20.875
    8. '```' → logprob: -21.0
    9. 'no' → logprob: -21.375
    10. '0' → logprob: -21.5

Token 211: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.927930654550437e-05
    2. '")
' → logprob: -10.875029563903809
    3. '")
' → logprob: -11.750029563903809
    4. ')")' → logprob: -13.375029563903809
    5. ')' → logprob: -14.250029563903809
    6. '"' → logprob: -15.875029563903809
    7. ' ")' → logprob: -17.375028610229492
    8. '”)' → logprob: -17.375028610229492
    9. '")

' → logprob: -18.000028610229492
    10. '");' → logprob: -18.000028610229492

Token 212: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -8.840432565193623e-05
    2. ' else' → logprob: -9.500088691711426
    3. 'elif' → logprob: -11.250088691711426
    4. 'e' → logprob: -16.12508773803711
    5. 'elser' → logprob: -16.12508773803711
    6. 'el' → logprob: -16.37508773803711
    7. '```' → logprob: -16.37508773803711
    8. 'elses' → logprob: -16.62508773803711
    9. 'els' → logprob: -17.37508773803711
    10. '_else' → logprob: -18.25008773803711

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02329893410205841
    2. ':
' → logprob: -3.773298978805542
    3. ' :' → logprob: -10.523299217224121
    4. '   ' → logprob: -10.898299217224121
    5. ' :
' → logprob: -11.773299217224121
    6. ':
' → logprob: -15.398299217224121
    7. ':

' → logprob: -16.398298263549805
    8. ',' → logprob: -18.273298263549805
    9. '    ' → logprob: -18.273298263549805
    10. ':\' → logprob: -19.273298263549805

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004438543692231178
    2. ' print' → logprob: -6.004438400268555
    3. 'print' → logprob: -6.254438400268555
    4. '   ' → logprob: -11.379438400268555
    5. '#' → logprob: -11.504438400268555
    6. ' for' → logprob: -12.504438400268555
    7. 'for' → logprob: -13.129438400268555
    8. '   ' → logprob: -13.379438400268555
    9. ' #' → logprob: -13.504438400268555
    10. '    
' → logprob: -13.504438400268555

Token 215: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06107552722096443
    2. 'print' → logprob: -3.186075448989868
    3. ' print' → logprob: -4.061075687408447
    4. 'for' → logprob: -8.811075210571289
    5. ' for' → logprob: -9.186075210571289
    6. '    
' → logprob: -9.436075210571289
    7. '   ' → logprob: -9.811075210571289
    8. '    ' → logprob: -9.811075210571289
    9. '#' (adapté à ' #') → logprob: -10.436075210571289
    10. ' ' → logprob: -10.561075210571289

Token 216: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4534696638584137
    2. ' print' → logprob: -1.3284696340560913
    3. 'print' → logprob: -2.328469753265381
    4. '    ' → logprob: -7.578469753265381
    5. ' for' → logprob: -7.828469753265381
    6. ' #' → logprob: -7.953469753265381
    7. '#' → logprob: -8.328469276428223
    8. 'for' → logprob: -8.703469276428223
    9. ' b' → logprob: -8.953469276428223
    10. ' n' → logprob: -9.953469276428223

Token 217: ' ce' (ID: 2357)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07571078091859818
    2. '   ' → logprob: -3.3257107734680176
    3. 'n' → logprob: -4.575710773468018
    4. ' not' → logprob: -4.700710773468018
    5. ':' → logprob: -4.825710773468018
    6. '    ' → logprob: -5.575710773468018
    7. ' ' → logprob: -6.075710773468018
    8. '  ' → logprob: -6.700710773468018
    9. ' ' → logprob: -6.700710773468018
    10. ' True' → logprob: -7.950710773468018

Token 218: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.719129204750061
    2. '   ' → logprob: -1.219129204750061
    3. ':' → logprob: -1.844129204750061
    4. ' :' → logprob: -3.8441290855407715
    5. 'n' → logprob: -4.0941290855407715
    6. ' ' → logprob: -4.9691290855407715
    7. '  ' → logprob: -5.4691290855407715
    8. '    ' → logprob: -5.9691290855407715
    9. ' is' → logprob: -6.4691290855407715
    10. 's' → logprob: -7.2191290855407715

Token 219: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4299420118331909
    2. ' n' → logprob: -1.304942011833191
    3. ':' → logprob: -2.8049421310424805
    4. ' !=' → logprob: -4.8049421310424805
    5. ' est' → logprob: -6.0549421310424805
    6. ' ==' → logprob: -6.4299421310424805
    7. '  ' → logprob: -6.5549421310424805
    8. 'est' → logprob: -6.6799421310424805
    9. ' :' → logprob: -7.4299421310424805
    10. ' ' → logprob: -7.5549421310424805

Token 220: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.3767743408679962
    2. ' le' → logprob: -1.5017743110656738
    3. 'pas' → logprob: -3.001774311065674
    4. 'le' → logprob: -4.126774311065674
    5. ' not' → logprob: -4.251774311065674
    6. 'not' → logprob: -4.876774311065674
    7. '   ' → logprob: -6.001774311065674
    8. ' the' → logprob: -7.751774311065674
    9. 'the' → logprob: -9.251774787902832
    10. ' case' → logprob: -9.626774787902832

Token 221: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.0127636743709445
    2. '   ' → logprob: -4.887763500213623
    3. 'le' → logprob: -5.387763500213623
    4. '  ' → logprob: -8.887763977050781
    5. ' ' → logprob: -9.387763977050781
    6. ' ' → logprob: -9.762763977050781
    7. ' case' → logprob: -9.887763977050781
    8. 'the' → logprob: -10.012763977050781
    9. ' the' → logprob: -10.387763977050781
    10. ' la' → logprob: -10.387763977050781

Token 222: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.22570088505744934
    2. ' cas' → logprob: -1.600700855255127
    3. 'case' → logprob: -9.100701332092285
    4. '   ' → logprob: -9.100701332092285
    5. 'c' → logprob: -10.600701332092285
    6. ' ' → logprob: -11.350701332092285
    7. '0' → logprob: -12.225701332092285
    8. '  ' → logprob: -12.600701332092285
    9. ' case' → logprob: -12.725701332092285
    10. ' ' → logprob: -12.725701332092285

Token 223: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31706973910331726
    2. ':' → logprob: -1.3170697689056396
    3. '       ' → logprob: -6.5670695304870605
    4. ',' → logprob: -6.6920695304870605
    5. ' :' → logprob: -7.5670695304870605
    6. ':
' → logprob: -7.8170695304870605
    7. '    ' → logprob: -8.942070007324219
    8. ' print' → logprob: -10.692070007324219
    9. '    
' → logprob: -10.692070007324219
    10. ' :
' → logprob: -10.942070007324219

Token 224: ' continuer' (ID: 75597)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7168911099433899
    2. ' print' → logprob: -0.7168911099433899
    3. 'print' → logprob: -4.216891288757324
    4. '    ' → logprob: -4.841891288757324
    5. ' n' → logprob: -9.091891288757324
    6. '    
' → logprob: -9.216891288757324
    7. ' #' → logprob: -9.341891288757324
    8. ' ' → logprob: -9.466891288757324
    9. '       ' → logprob: -9.591891288757324
    10. ' ' → logprob: -9.966891288757324

Token 225: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14464807510375977
    2. ':' → logprob: -2.0196480751037598
    3. ':
' → logprob: -6.64464807510376
    4. '    ' → logprob: -8.519647598266602
    5. '    
' → logprob: -8.894647598266602
    6. 'print' → logprob: -9.269647598266602
    7. ' print' → logprob: -10.144647598266602
    8. ' :' → logprob: -10.144647598266602
    9. ' with' → logprob: -10.269647598266602
    10. 'with' → logprob: -10.644647598266602

Token 226: ' traitement' (ID: 42434)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.7254876494407654
    2. 'print' → logprob: -1.1004877090454102
    3. '#' → logprob: -3.10048770904541
    4. 'code' → logprob: -3.85048770904541
    5. 'n' → logprob: -3.85048770904541
    6. '   ' → logprob: -4.35048770904541
    7. 'b' → logprob: -4.35048770904541
    8. 'process' → logprob: -4.72548770904541
    9. ' calcul' → logprob: -4.85048770904541
    10. 'if' → logprob: -4.85048770904541

Token 227: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02687990665435791
    2. ':' → logprob: -3.7768797874450684
    3. '    
' → logprob: -6.526879787445068
    4. '    ' → logprob: -6.901879787445068
    5. 'print' → logprob: -8.651880264282227
    6. ':
' → logprob: -8.776880264282227
    7. '       ' → logprob: -9.151880264282227
    8. ' 
' → logprob: -9.276880264282227
    9. ' print' → logprob: -9.276880264282227
    10. ' :' → logprob: -9.526880264282227

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011948640458285809
    2. '    
' → logprob: -5.261948585510254
    3. '    ' → logprob: -5.511948585510254
    4. ' 
' → logprob: -7.386948585510254
    5. '       ' → logprob: -8.136948585510254
    6. '   ' → logprob: -8.136948585510254
    7. ' print' → logprob: -8.386948585510254
    8. 'print' → logprob: -8.511948585510254
    9. '     
' → logprob: -8.511948585510254
    10. '   ' → logprob: -9.136948585510254

Token 229: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8930527567863464
    2. '   ' → logprob: -2.018052816390991
    3. 'print' (adapté à ' print') → logprob: -2.018052816390991
    4. ' for' → logprob: -2.643052816390991
    5. ' p' → logprob: -3.393052816390991
    6. 'for' → logprob: -3.518052816390991
    7. ' m' → logprob: -3.893052816390991
    8. ' r' → logprob: -4.143052577972412
    9. ' k' → logprob: -4.143052577972412
    10. 'p' → logprob: -4.518052577972412

Token 230: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5616327524185181
    2. '(' → logprob: -1.561632752418518
    3. '(b' → logprob: -1.561632752418518
    4. '(n' → logprob: -4.9366326332092285
    5. '((' → logprob: -6.6866326332092285
    6. '("")' → logprob: -7.1866326332092285
    7. '()' → logprob: -7.6866326332092285
    8. '(f' → logprob: -9.311633110046387
    9. '("("' → logprob: -9.436633110046387
    10. '('' → logprob: -9.561633110046387

Token 231: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.01953795552253723
    2. 'b' → logprob: -4.519537925720215
    3. '"' → logprob: -4.894537925720215
    4. '2' → logprob: -8.394537925720215
    5. 'Oui' → logprob: -8.394537925720215
    6. 'n' → logprob: -8.644537925720215
    7. 'No' → logprob: -9.394537925720215
    8. '1' → logprob: -9.394537925720215
    9. '("' → logprob: -10.269537925720215
    10. '")' → logprob: -10.894537925720215

Token 232: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0001612267515156418
    2. ')")' → logprob: -9.125161170959473
    3. ')' → logprob: -9.875161170959473
    4. '()' → logprob: -15.125161170959473
    5. '!")' → logprob: -15.375161170959473
    6. '"' → logprob: -15.750161170959473
    7. ' ")' → logprob: -16.00016212463379
    8. '("' → logprob: -16.87516212463379
    9. '}")' → logprob: -17.25016212463379
    10. '")
' → logprob: -17.37516212463379

Token 233: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: ' Aff' (ID: 13741)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0010499580530449748
    2. 'ichage' → logprob: -7.501049995422363
    3. 'iche' → logprob: -8.126049995422363
    4. '#' → logprob: -9.126049995422363
    5. 'ich' → logprob: -10.126049995422363
    6. 'ic' → logprob: -11.126049995422363
    7. 'ichier' → logprob: -11.876049995422363
    8. '```' → logprob: -12.001049995422363
    9. '   ' → logprob: -12.376049995422363
    10. 'ichert' → logprob: -12.501049995422363

Token 237: ' "' (ID: 392)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6580439209938049
    2. '("' → logprob: -1.2830438613891602
    3. '()' → logprob: -2.03304386138916
    4. '("")' → logprob: -2.65804386138916
    5. ')' → logprob: -6.15804386138916
    6. ' ' → logprob: -7.03304386138916
    7. '   ' → logprob: -8.90804386138916
    8. ' )' → logprob: -9.15804386138916
    9. ' (' → logprob: -9.28304386138916
    10. '<|end|>' → logprob: -9.40804386138916

Token 238: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.5907560586929321
    2. ' Yes' → logprob: -0.8407560586929321
    3. ' ")' → logprob: -4.340755939483643
    4. '")' → logprob: -6.715755939483643
    5. 'No' → logprob: -8.5907564163208
    6. ' ' → logprob: -9.2157564163208
    7. '"' → logprob: -10.0907564163208
    8. ' No' → logprob: -10.2157564163208
    9. ' "' → logprob: -10.5907564163208
    10. ' Oui' → logprob: -10.7157564163208

Token 239: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0015540247550234199
    2. ')' → logprob: -6.501554012298584
    3. ')")' → logprob: -10.626554489135742
    4. '()' → logprob: -11.751554489135742
    5. ' ")' → logprob: -11.751554489135742
    6. '!")' → logprob: -12.251554489135742
    7. '"' → logprob: -12.501554489135742
    8. ' )' → logprob: -13.126554489135742
    9. '")
' → logprob: -15.001554489135742
    10. '')' → logprob: -15.751554489135742

Token 240: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.40737512707710266
    2. ' ind' → logprob: -1.1573750972747803
    3. 'indi' → logprob: -4.657375335693359
    4. 'sign' → logprob: -5.157375335693359
    5. ' continuer' → logprob: -6.407375335693359
    6. 'contin' → logprob: -7.032375335693359
    7. ' confirmer' → logprob: -7.532375335693359
    8. ' montrer' → logprob: -7.907375335693359
    9. 'signal' → logprob: -8.15737533569336
    10. 'la' → logprob: -9.03237533569336

Token 242: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.2702207565307617
    2. 'iquant' → logprob: -1.6452207565307617
    3. 'iqué' → logprob: -3.3952207565307617
    4. 'iqu' → logprob: -5.145220756530762
    5. 'ique' → logprob: -6.395220756530762
    6. 'er' → logprob: -7.020220756530762
    7. 'é' → logprob: -8.145220756530762
    8. 'ex' → logprob: -8.270220756530762
    9. 'ic' → logprob: -8.645220756530762
    10. 'ef' → logprob: -9.020220756530762

Token 243: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.23868802189826965
    2. ' ' → logprob: -2.3636879920959473
    3. ' une' → logprob: -3.1136879920959473
    4. ' la' → logprob: -3.4886879920959473
    5. ' qu' → logprob: -3.9886879920959473
    6. ' that' → logprob: -4.738687992095947
    7. ' l' → logprob: -5.613687992095947
    8. ' un' → logprob: -5.613687992095947
    9. '<|end|>' → logprob: -6.238687992095947
    10. ' ' → logprob: -6.363687992095947

Token 244: ''on' (ID: 25812)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6696079969406128
    2. ' que' → logprob: -1.2946079969406128
    3. ' la' → logprob: -2.4196081161499023
    4. ' il' → logprob: -3.0446081161499023
    5. ' l' → logprob: -3.5446081161499023
    6. ' qu' → logprob: -4.294608116149902
    7. ' there' → logprob: -4.419608116149902
    8. ' le' → logprob: -5.169608116149902
    9. 'n' → logprob: -5.669608116149902
    10. ' ' → logprob: -5.794608116149902

Token 245: ' continue' (ID: 4901)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.3787514567375183
    2. ' a' → logprob: -1.503751516342163
    3. ' continue' → logprob: -2.878751516342163
    4. 'a' → logprob: -3.878751516342163
    5. ' y' → logprob: -5.378751277923584
    6. 'continue' → logprob: -6.003751277923584
    7. 'pe' → logprob: -6.378751277923584
    8. ' peux' → logprob: -6.628751277923584
    9. ' trouve' → logprob: -7.128751277923584
    10. ' pense' → logprob: -7.128751277923584

Token 246: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5630511045455933
    2. ' #' → logprob: -1.9380511045455933
    3. '   ' → logprob: -2.438051223754883
    4. ' n' → logprob: -2.938051223754883
    5. ' x' → logprob: -2.938051223754883
    6. ' m' → logprob: -3.063051223754883
    7. ' s' → logprob: -3.188051223754883
    8. 'n' → logprob: -3.313051223754883
    9. ' k' → logprob: -3.438051223754883
    10. '#' (adapté à ' #') → logprob: -3.438051223754883

Token 249: ' Aff' (ID: 13741)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.3544894456863403
    2. 'for' → logprob: -1.6044894456863403
    3. ' for' → logprob: -2.479489326477051
    4. '#' → logprob: -2.479489326477051
    5. ' m' → logprob: -2.729489326477051
    6. 'r' → logprob: -3.229489326477051
    7. 'x' → logprob: -3.354489326477051
    8. 'p' → logprob: -3.479489326477051
    9. 'k' → logprob: -3.479489326477051
    10. ' #' → logprob: -3.604489326477051

Token 250: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.018115172162652016
    2. '   ' → logprob: -4.268115043640137
    3. 'ichage' → logprob: -6.518115043640137
    4. 'er' → logprob: -6.893115043640137
    5. '#' → logprob: -7.518115043640137
    6. 'iche' → logprob: -8.518115043640137
    7. 'iner' → logprob: -9.018115043640137
    8. 'print' → logprob: -9.143115043640137
    9. 'ich' → logprob: -9.518115043640137
    10. '    ' → logprob: -9.893115043640137

Token 251: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1737959384918213
    2. '(b' → logprob: -1.1737959384918213
    3. '(' → logprob: -1.5487959384918213
    4. ' b' → logprob: -2.5487959384918213
    5. '("' → logprob: -3.5487959384918213
    6. 'b' → logprob: -3.6737959384918213
    7. ' (' → logprob: -3.7987959384918213
    8. ' n' → logprob: -5.298795700073242
    9. 'n' → logprob: -5.298795700073242
    10. '()' → logprob: -6.673795700073242

Token 252: ' paire' (ID: 148856)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6694132685661316
    2. ' b' → logprob: -0.7944132685661316
    3. 'n' → logprob: -4.044413089752197
    4. ' n' → logprob: -4.544413089752197
    5. ' plus' → logprob: -5.919413089752197
    6. ' (' → logprob: -6.419413089752197
    7. 'plus' → logprob: -6.919413089752197
    8. ' ' → logprob: -7.794413089752197
    9. '(n' → logprob: -8.169413566589355
    10. ' nombre' → logprob: -8.419413566589355

Token 253: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8677129745483398
    2. 'b' → logprob: -1.2427129745483398
    3. '(n' → logprob: -1.6177129745483398
    4. '(b' → logprob: -3.61771297454834
    5. ' b' → logprob: -3.86771297454834
    6. '()' → logprob: -4.24271297454834
    7. ' (' → logprob: -4.24271297454834
    8. 'n' → logprob: -4.86771297454834
    9. 'a' → logprob: -6.49271297454834
    10. ' n' → logprob: -6.74271297454834

Token 254: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02616698481142521
    2. 'n' → logprob: -4.526166915893555
    3. '1' → logprob: -4.651166915893555
    4. '0' → logprob: -5.401166915893555
    5. '(' → logprob: -7.901166915893555
    6. ' b' → logprob: -8.526166915893555
    7. '(n' → logprob: -9.026166915893555
    8. '2' → logprob: -9.776166915893555
    9. '(b' → logprob: -9.901166915893555
    10. ')' → logprob: -9.901166915893555

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004372206050902605
    2. ' ,' → logprob: -6.0043721199035645
    3. ',n' → logprob: -6.5043721199035645
    4. ',b' → logprob: -8.129372596740723
    5. ',end' → logprob: -10.504372596740723
    6. ' ' → logprob: -10.879372596740723
    7. ')' → logprob: -11.129372596740723
    8. '1' → logprob: -12.129372596740723
    9. ',
' → logprob: -12.379372596740723
    10. ',",' → logprob: -12.629372596740723

Token 256: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3797600567340851
    2. ' n' → logprob: -1.3797600269317627
    3. 'b' → logprob: -3.3797600269317627
    4. ' b' → logprob: -3.6297600269317627
    5. ' ' → logprob: -5.879760265350342
    6. '1' → logprob: -7.754760265350342
    7. '2' → logprob: -9.004759788513184
    8. '0' → logprob: -9.004759788513184
    9. ',' → logprob: -9.254759788513184
    10. ')' → logprob: -9.504759788513184

Token 257: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015162712894380093
    2. ' n' → logprob: -4.515162944793701
    3. 'b' → logprob: -5.515162944793701
    4. ' b' → logprob: -9.515162467956543
    5. ')' → logprob: -13.015162467956543
    6. ',' → logprob: -13.140162467956543
    7. ' ' → logprob: -13.765162467956543
    8. '1' → logprob: -14.265162467956543
    9. '0' → logprob: -14.515162467956543
    10. '(n' → logprob: -15.390162467956543

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029170021414756775
    2. ',' → logprob: -3.654170036315918
    3. ' )' → logprob: -7.279170036315918
    4. ' ,' → logprob: -7.654170036315918
    5. '0' → logprob: -8.029170036315918
    6. 'n' → logprob: -8.404170036315918
    7. '*n' → logprob: -8.529170036315918
    8. ' ' → logprob: -8.779170036315918
    9. '*b' → logprob: -8.779170036315918
    10. '*' → logprob: -8.779170036315918

Token 259: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5792562961578369
    2. 'print' → logprob: -1.079256296157837
    3. '   ' → logprob: -2.954256296157837
    4. '(' → logprob: -3.579256296157837
    5. '
' → logprob: -5.204256057739258
    6. ')
' → logprob: -6.079256057739258
    7. ' print' → logprob: -6.329256057739258
    8. ')' → logprob: -6.454256057739258
    9. '  
' → logprob: -6.579256057739258
    10. '    
' → logprob: -6.579256057739258

Token 260: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001226062304340303
    2. '(' → logprob: -7.25122594833374
    3. '   ' → logprob: -7.62622594833374
    4. ' print' → logprob: -10.501226425170898
    5. '```' → logprob: -15.126226425170898
    6. '    
' → logprob: -15.501226425170898
    7. ' (' → logprob: -16.0012264251709
    8. ' ' → logprob: -16.1262264251709
    9. '()' → logprob: -16.5012264251709
    10. '  
' → logprob: -16.7512264251709

Token 261: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038825106457807124
    2. '("' → logprob: -7.875388145446777
    3. '((' → logprob: -12.000388145446777
    4. '1' → logprob: -14.000388145446777
    5. ' (' → logprob: -14.375388145446777
    6. '("(' → logprob: -15.125388145446777
    7. '('' → logprob: -15.500388145446777
    8. '(
' → logprob: -17.000389099121094
    9. '"' → logprob: -18.250389099121094
    10. ' ' → logprob: -18.500389099121094

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.889424836728722e-05
    2. '"' → logprob: -9.250099182128906
    3. '(' → logprob: -13.250099182128906
    4. ' ' → logprob: -14.000099182128906
    5. ''' → logprob: -15.875099182128906
    6. '   ' → logprob: -16.750099182128906
    7. ')' → logprob: -18.750099182128906
    8. '("' → logprob: -19.000099182128906
    9. '１' → logprob: -19.875099182128906
    10. '`' → logprob: -20.250099182128906

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004456852038856596
    2. ' ,' → logprob: -7.75044584274292
    3. ',
' → logprob: -12.375445365905762
    4. '2' → logprob: -12.375445365905762
    5. ')' → logprob: -12.500445365905762
    6. ' ' → logprob: -13.875445365905762
    7. ',",' → logprob: -13.875445365905762
    8. '   ' → logprob: -14.750445365905762
    9. ',end' → logprob: -15.750445365905762
    10. ',)' → logprob: -16.000446319580078

Token 264: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004622372332960367
    2. ' ' → logprob: -5.379622459411621
    3. ')' → logprob: -14.129622459411621
    4. '   ' → logprob: -14.504622459411621
    5. '  ' → logprob: -14.629622459411621
    6. ',' → logprob: -15.754622459411621
    7. '    ' → logprob: -16.004621505737305
    8. '3' → logprob: -16.129621505737305
    9. ' ,' → logprob: -16.879621505737305
    10. ' )' → logprob: -17.254621505737305

Token 265: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.875139236450195
    4. ')' → logprob: -17.375139236450195
    5. '  ' → logprob: -18.000139236450195
    6. '２' → logprob: -19.562639236450195
    7. ' )' → logprob: -19.937639236450195
    8. '1' → logprob: -20.000139236450195
    9. ' ' → logprob: -20.062639236450195
    10. '3' → logprob: -20.062639236450195

Token 266: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.75
    3. ' )' → logprob: -16.375
    4. '")' → logprob: -19.125
    5. '))' → logprob: -19.25
    6. ')`' → logprob: -19.75
    7. '')' → logprob: -20.125
    8. ')")' → logprob: -20.375
    9. '   ' → logprob: -20.5
    10. '),' → logprob: -20.625

Token 267: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' Aff' (ID: 13741)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.046639032661914825
    2. 'exit' → logprob: -3.5466389656066895
    3. '#' → logprob: -4.7966389656066895
    4. 'print' → logprob: -5.5466389656066895
    5. 'if' → logprob: -6.6716389656066895
    6. 'i' → logprob: -7.1716389656066895
    7. 'else' → logprob: -7.4216389656066895
    8. 'b' → logprob: -7.7966389656066895
    9. ' for' → logprob: -8.046639442443848
    10. 'a' → logprob: -8.171639442443848

Token 270: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0013097634073346853
    2. '#' → logprob: -7.626309871673584
    3. '   ' → logprob: -7.751309871673584
    4. 'ic' → logprob: -9.251309394836426
    5. 'cher' → logprob: -9.376309394836426
    6. 'er' → logprob: -9.751309394836426
    7. 'ichage' → logprob: -10.376309394836426
    8. 'ich' → logprob: -10.751309394836426
    9. 'icer' → logprob: -11.126309394836426
    10. 'print' → logprob: -11.251309394836426

Token 271: ' la' (ID: 557)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.47475066781044006
    2. 'n' → logprob: -1.3497506380081177
    3. '2' → logprob: -3.3497507572174072
    4. ' ' → logprob: -3.7247507572174072
    5. '1' → logprob: -3.8497507572174072
    6. '(n' → logprob: -3.9747507572174072
    7. '(' → logprob: -4.849750518798828
    8. 'b' → logprob: -5.599750518798828
    9. '   ' → logprob: -6.224750518798828
    10. ' n' → logprob: -6.349750518798828

Token 272: ' paire' (ID: 148856)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7966384887695312
    2. 'n' → logprob: -0.9216384887695312
    3. '2' → logprob: -2.6716384887695312
    4. '(n' → logprob: -3.1716384887695312
    5. '1' → logprob: -4.171638488769531
    6. '(' → logprob: -4.421638488769531
    7. ' ' → logprob: -4.796638488769531
    8. 'b' → logprob: -7.171638488769531
    9. 'range' → logprob: -7.171638488769531
    10. 'end' → logprob: -7.296638488769531

Token 273: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8585375547409058
    2. '(' → logprob: -0.9835375547409058
    3. '2' → logprob: -1.9835375547409058
    4. 'n' → logprob: -3.9835376739501953
    5. '1' → logprob: -4.233537673950195
    6. 'b' → logprob: -4.733537673950195
    7. ' (' → logprob: -5.358537673950195
    8. ',' → logprob: -5.608537673950195
    9. ' ' → logprob: -5.733537673950195
    10. '(b' → logprob: -5.858537673950195

Token 274: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.060358352959156036
    2. '1' → logprob: -3.4353582859039307
    3. 'b' → logprob: -4.18535852432251
    4. 'n' → logprob: -4.56035852432251
    5. '3' → logprob: -7.56035852432251
    6. '(' → logprob: -9.810358047485352
    7. ' ' → logprob: -9.935358047485352
    8. '(n' → logprob: -10.685358047485352
    9. 'a' → logprob: -12.060358047485352
    10. ' b' → logprob: -12.310358047485352

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005024186801165342
    2. ' ,' → logprob: -5.630023956298828
    3. '3' → logprob: -6.630023956298828
    4. ')' → logprob: -10.630023956298828
    5. ',n' → logprob: -10.755023956298828
    6. ' ' → logprob: -11.255023956298828
    7. '+' → logprob: -11.380023956298828
    8. '2' → logprob: -11.880023956298828
    9. ',
' → logprob: -12.005023956298828
    10. 'n' → logprob: -12.005023956298828

Token 276: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05760148912668228
    2. ' ' → logprob: -3.4326014518737793
    3. 'n' → logprob: -4.182601451873779
    4. ' n' → logprob: -5.432601451873779
    5. 'b' → logprob: -6.182601451873779
    6. ' b' → logprob: -6.432601451873779
    7. ')' → logprob: -8.932601928710938
    8. '2' → logprob: -9.807601928710938
    9. '(n' → logprob: -9.807601928710938
    10. '(' → logprob: -10.182601928710938

Token 277: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04433226212859154
    2. 'n' → logprob: -3.169332265853882
    3. ' ' → logprob: -7.294332027435303
    4. 'b' → logprob: -7.794332027435303
    5. ' n' → logprob: -8.669332504272461
    6. '1' → logprob: -10.669332504272461
    7. '(n' → logprob: -11.044332504272461
    8. '4' → logprob: -11.169332504272461
    9. ' b' → logprob: -12.419332504272461
    10. '2' → logprob: -12.544332504272461

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007247024914249778
    2. ')
' → logprob: -7.250724792480469
    3. ',' → logprob: -12.250724792480469
    4. '   ' → logprob: -12.500724792480469
    5. ' )' → logprob: -13.125724792480469
    6. '3' → logprob: -13.375724792480469
    7. ')
' → logprob: -14.250724792480469
    8. ')

' → logprob: -15.125724792480469
    9. '()' → logprob: -15.250724792480469
    10. '")' → logprob: -15.500724792480469

Token 279: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6357621550559998
    2. '   ' → logprob: -0.8857621550559998
    3. '
' → logprob: -3.0107622146606445
    4. ')
' → logprob: -6.3857622146606445
    5. '  
' → logprob: -6.3857622146606445
    6. ',' → logprob: -6.6357622146606445
    7. ')' → logprob: -7.0107622146606445
    8. '    
' → logprob: -7.2607622146606445
    9. '\n' → logprob: -7.6357622146606445
    10. '```' → logprob: -7.7607622146606445

Token 280: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4797001779079437
    2. '2' → logprob: -0.9797002077102661
    3. '3' → logprob: -5.354700088500977
    4. ',' → logprob: -7.854700088500977
    5. '   ' → logprob: -7.979700088500977
    6. ' print' → logprob: -9.729700088500977
    7. '(' → logprob: -9.854700088500977
    8. ' ' → logprob: -11.479700088500977
    9. '    
' → logprob: -11.979700088500977
    10. '```' → logprob: -11.979700088500977

Token 281: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1271941363811493
    2. '2' → logprob: -2.1271941661834717
    3. '3' → logprob: -8.37719440460205
    4. ' ' → logprob: -10.37719440460205
    5. ' (' → logprob: -13.25219440460205
    6. ',' → logprob: -13.87719440460205
    7. '(
' → logprob: -14.12719440460205
    8. '```' → logprob: -14.50219440460205
    9. '   ' → logprob: -15.00219440460205
    10. '("' → logprob: -16.002193450927734

Token 282: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.250009536743164
    4. '3' → logprob: -15.625009536743164
    5. '```' → logprob: -17.875009536743164
    6. ')' → logprob: -18.500009536743164
    7. '  ' → logprob: -18.500009536743164
    8. '1' → logprob: -18.625009536743164
    9. '(' → logprob: -18.625009536743164
    10. '２' → logprob: -19.125009536743164

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032867121626622975
    2. ' ,' → logprob: -8.37532901763916
    3. '3' → logprob: -9.25032901763916
    4. ')' → logprob: -14.50032901763916
    5. '+' → logprob: -14.75032901763916
    6. ',
' → logprob: -14.87532901763916
    7. ' ' → logprob: -15.00032901763916
    8. '   ' → logprob: -15.37532901763916
    9. '```' → logprob: -16.250328063964844
    10. '2' → logprob: -16.625328063964844

Token 284: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.014167741872370243
    2. ' ' → logprob: -4.264167785644531
    3. ')' → logprob: -12.514167785644531
    4. ',' → logprob: -15.139167785644531
    5. ' ' → logprob: -15.139167785644531
    6. '```' → logprob: -17.38916778564453
    7. ' ,' → logprob: -18.01416778564453
    8. ' )' → logprob: -18.01416778564453
    9. '  ' → logprob: -18.38916778564453
    10. '    ' → logprob: -18.51416778564453

Token 285: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -19.00002098083496
    4. '   ' → logprob: -19.62502098083496
    5. ')' → logprob: -19.87502098083496
    6. '  ' → logprob: -20.87502098083496
    7. '4' → logprob: -21.50002098083496
    8. '３' → logprob: -21.50002098083496
    9. '2' → logprob: -21.50002098083496
    10. '1' → logprob: -22.00002098083496

Token 286: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002096197713399306
    2. ')
' → logprob: -8.50020980834961
    3. '   ' → logprob: -12.87520980834961
    4. ' )' → logprob: -13.50020980834961
    5. ')
' → logprob: -14.25020980834961
    6. '4' → logprob: -15.25020980834961
    7. ')`' → logprob: -15.37520980834961
    8. '3' → logprob: -15.87520980834961
    9. '")' → logprob: -16.25020980834961
    10. ',' → logprob: -16.37520980834961

Token 287: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: ' Aff' (ID: 13741)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049710821360349655
    2. 'print' → logprob: -3.549710750579834
    3. '#' → logprob: -4.549710750579834
    4. 'i' → logprob: -5.049710750579834
    5. 'if' → logprob: -6.174710750579834
    6. '   ' → logprob: -8.299711227416992
    7. ' for' → logprob: -8.674711227416992
    8. '3' → logprob: -10.424711227416992
    9. 'n' → logprob: -10.549711227416992
    10. 'a' → logprob: -10.674711227416992

Token 290: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -7.815280696377158e-05
    2. '#' → logprob: -10.750078201293945
    3. '   ' → logprob: -11.500078201293945
    4. 'print' → logprob: -11.625078201293945
    5. 'cher' → logprob: -11.625078201293945
    6. 'iche' → logprob: -12.250078201293945
    7. '(' → logprob: -12.250078201293945
    8. ' print' → logprob: -12.375078201293945
    9. 'ichage' → logprob: -12.750078201293945
    10. 'ichier' → logprob: -13.375078201293945

Token 291: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00201595202088356
    2. '3' → logprob: -6.252016067504883
    3. '(n' → logprob: -9.877016067504883
    4. ' (' → logprob: -10.627016067504883
    5. '   ' → logprob: -12.252016067504883
    6. ' ' → logprob: -12.877016067504883
    7. 'n' → logprob: -13.877016067504883
    8. '(
' → logprob: -14.127016067504883
    9. '((' → logprob: -14.502016067504883
    10. '1' → logprob: -14.502016067504883

Token 292: ' paire' (ID: 148856)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5370014309883118
    2. '(' → logprob: -0.9120014309883118
    3. '(n' → logprob: -5.162001609802246
    4. ' ' → logprob: -6.037001609802246
    5. ' (' → logprob: -6.662001609802246
    6. '...' → logprob: -6.662001609802246
    7. 'print' → logprob: -6.912001609802246
    8. 'range' → logprob: -7.037001609802246
    9. 'n' → logprob: -8.162001609802246
    10. '1' → logprob: -8.787001609802246

Token 293: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005200279993005097
    2. '3' → logprob: -7.6255202293396
    3. ' (' → logprob: -10.750519752502441
    4. '(n' → logprob: -12.500519752502441
    5. '   ' → logprob: -12.750519752502441
    6. '```' → logprob: -13.250519752502441
    7. ',' → logprob: -13.625519752502441
    8. '(
' → logprob: -14.375519752502441
    9. '``' → logprob: -16.250520706176758
    10. '    
' → logprob: -16.375520706176758

Token 294: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004764626733958721
    2. '1' → logprob: -5.379764556884766
    3. ' ' → logprob: -9.379764556884766
    4. '(' → logprob: -10.004764556884766
    5. '(n' → logprob: -12.004764556884766
    6. 'n' → logprob: -12.504764556884766
    7. '2' → logprob: -12.879764556884766
    8. ' (' → logprob: -14.504764556884766
    9. '   ' → logprob: -14.504764556884766
    10. '
' → logprob: -15.067264556884766

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001757764141075313
    2. ' ,' → logprob: -6.376757621765137
    3. '4' → logprob: -10.126757621765137
    4. '3' → logprob: -11.626757621765137
    5. '   ' → logprob: -12.876757621765137
    6. ' ' → logprob: -13.751757621765137
    7. ',
' → logprob: -14.251757621765137
    8. '2' → logprob: -14.626757621765137
    9. '+' → logprob: -14.751757621765137
    10. ',n' → logprob: -14.876757621765137

Token 296: ' n' (ID: 297)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.038847923278808594
    2. ' ' → logprob: -3.2888479232788086
    3. '1' → logprob: -7.913847923278809
    4. ' n' → logprob: -8.038847923278809
    5. 'n' → logprob: -9.288847923278809
    6. ')' → logprob: -11.288847923278809
    7. '2' → logprob: -12.163847923278809
    8. '"' → logprob: -13.788847923278809
    9. ' ' → logprob: -13.788847923278809
    10. 'end' → logprob: -14.413847923278809

Token 297: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4019933044910431
    2. ',' → logprob: -1.1519932746887207
    3. '+' → logprob: -4.776993274688721
    4. '-' → logprob: -5.526993274688721
    5. ' )' → logprob: -7.026993274688721
    6. ',n' → logprob: -7.901993274688721
    7. ' ,' → logprob: -8.026993751525879
    8. '   ' → logprob: -8.526993751525879
    9. ' ' → logprob: -8.776993751525879
    10. ',)' → logprob: -8.776993751525879

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031217450741678476
    2. ')' → logprob: -6.378121852874756
    3. '4' → logprob: -6.628121852874756
    4. ' ' → logprob: -9.503121376037598
    5. '2' → logprob: -11.503121376037598
    6. '3' → logprob: -12.378121376037598
    7. ' )' → logprob: -12.378121376037598
    8. '   ' → logprob: -14.003121376037598
    9. '```' → logprob: -14.503121376037598
    10. '(' → logprob: -15.003121376037598

Token 299: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018077453132718801
    2. ')
' → logprob: -6.376807689666748
    3. '   ' → logprob: -9.626808166503906
    4. ',' → logprob: -11.251808166503906
    5. '4' → logprob: -12.126808166503906
    6. ' )' → logprob: -12.501808166503906
    7. '")' → logprob: -12.501808166503906
    8. '```' → logprob: -12.626808166503906
    9. 'print' → logprob: -12.876808166503906
    10. ')`' → logprob: -13.376808166503906

Token 300: ' on' (ID: 402)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.014698008075356483
    2. ' ' → logprob: -5.014698028564453
    3. 'print' → logprob: -5.014698028564453
    4. '   ' → logprob: -7.639698028564453
    5. '(' → logprob: -8.264698028564453
    6. ' (' → logprob: -8.514698028564453
    7. ' print' → logprob: -9.514698028564453
    8. '"' → logprob: -9.889698028564453
    9. 'end' → logprob: -10.389698028564453
    10. '1' → logprob: -10.389698028564453

Token 301: ' rel' (ID: 1536)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5862210392951965
    2. '+' → logprob: -1.5862209796905518
    3. ' print' → logprob: -2.5862209796905518
    4. ' ' → logprob: -3.0862209796905518
    5. ')' → logprob: -3.5862209796905518
    6. '.print' → logprob: -3.5862209796905518
    7. ' ,' → logprob: -4.586221218109131
    8. '.' → logprob: -4.836221218109131
    9. ',' → logprob: -4.961221218109131
    10. ' )' → logprob: -5.086221218109131

Token 302: 'ie' (ID: 396)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028680266812443733
    2. 'n' → logprob: -5.153680324554443
    3. ' print' → logprob: -5.153680324554443
    4. '   ' → logprob: -5.278680324554443
    5. 'a' → logprob: -5.653680324554443
    6. 'e' → logprob: -6.778680324554443
    7. 'ance' → logprob: -7.153680324554443
    8. '=' → logprob: -7.278680324554443
    9. 'ate' → logprob: -7.278680324554443
    10. 'ease' → logprob: -7.528680324554443

Token 303: ' le' (ID: 505)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0052858153358101845
    2. ' ' → logprob: -5.880285739898682
    3. '(' → logprob: -6.005285739898682
    4. '   ' → logprob: -12.13028621673584
    5. ' (' → logprob: -12.38028621673584
    6. 'print' → logprob: -14.00528621673584
    7. '```' → logprob: -14.50528621673584
    8. ')' → logprob: -15.63028621673584
    9. '33' → logprob: -15.63028621673584
    10. '    ' → logprob: -15.63028621673584

Token 304: ' sommet' (ID: 130502)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.012530370615422726
    2. ' ' → logprob: -4.387530326843262
    3. ' n' → logprob: -12.137530326843262
    4. ' space' → logprob: -12.512530326843262
    5. 'n' → logprob: -12.762530326843262
    6. 'space' → logprob: -13.012530326843262
    7. ')' → logprob: -13.637530326843262
    8. '  ' → logprob: -14.262530326843262
    9. ' ' → logprob: -14.262530326843262
    10. ' code' → logprob: -14.762530326843262

Token 305: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004911500494927168
    2. ' ' → logprob: -5.754911422729492
    3. ',' → logprob: -7.254911422729492
    4. '(' → logprob: -7.629911422729492
    5. ' ,' → logprob: -7.629911422729492
    6. ' (' → logprob: -10.629911422729492
    7. '   ' → logprob: -11.129911422729492
    8. '```' → logprob: -11.879911422729492
    9. ')' → logprob: -12.879911422729492
    10. '  ' → logprob: -14.254911422729492

Token 306: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11705855280160904
    2. ',' → logprob: -2.242058515548706
    3. ' ,' → logprob: -5.492058753967285
    4. ' ' → logprob: -9.367058753967285
    5. ',
' → logprob: -12.117058753967285
    6. '   ' → logprob: -12.242058753967285
    7. '```' → logprob: -12.617058753967285
    8. ')' → logprob: -13.367058753967285
    9. 'n' → logprob: -13.742058753967285
    10. '(' → logprob: -13.867058753967285

Token 307: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013669169507920742
    2. ' ,' → logprob: -4.638669013977051
    3. ',n' → logprob: -6.513669013977051
    4. '   ' → logprob: -6.638669013977051
    5. '+' → logprob: -7.263669013977051
    6. 'n' → logprob: -9.38866901397705
    7. ' ' → logprob: -9.38866901397705
    8. ' n' → logprob: -9.51366901397705
    9. ' +' → logprob: -10.38866901397705
    10. '4' → logprob: -11.01366901397705

Token 308: ' sommet' (ID: 130502)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.527024507522583
    2. ' n' → logprob: -1.027024507522583
    3. '(n' → logprob: -3.152024507522583
    4. ' (' → logprob: -5.277024269104004
    5. '(' → logprob: -6.027024269104004
    6. '4' → logprob: -6.902024269104004
    7. '3' → logprob: -8.902024269104004
    8. ' ' → logprob: -9.402024269104004
    9. '1' → logprob: -11.152024269104004
    10. '"' → logprob: -11.777024269104004

Token 309: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.990942120552063
    2. ' n' → logprob: -1.115942120552063
    3. 'n' → logprob: -1.740942120552063
    4. ' (' → logprob: -2.7409420013427734
    5. ',' → logprob: -3.2409420013427734
    6. ' ,' → logprob: -4.365942001342773
    7. '(' → logprob: -4.990942001342773
    8. '4' → logprob: -6.615942001342773
    9. ',n' → logprob: -8.115942001342773
    10. ''' → logprob: -8.615942001342773

Token 310: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010378103470429778
    2. ' +' → logprob: -6.87603759765625
    3. '   ' → logprob: -12.87603759765625
    4. '+
' → logprob: -14.00103759765625
    5. '```' → logprob: -14.12603759765625
    6. ',' → logprob: -14.62603759765625
    7. 'plus' → logprob: -16.37603759765625
    8. '+n' → logprob: -16.50103759765625
    9. '1' → logprob: -17.37603759765625
    10. '()+' → logprob: -17.62603759765625

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010373335098847747
    2. ' ' → logprob: -6.876037120819092
    3. '```' → logprob: -13.62603759765625
    4. '+' → logprob: -13.87603759765625
    5. '   ' → logprob: -14.00103759765625
    6. ')' → logprob: -14.12603759765625
    7. '2' → logprob: -15.12603759765625
    8. '  ' → logprob: -15.37603759765625
    9. '`' → logprob: -16.56353759765625
    10. '4' → logprob: -16.81353759765625

Token 312: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.579336941242218
    2. '   ' → logprob: -0.954336941242218
    3. ' print' → logprob: -3.5793368816375732
    4. ' ' → logprob: -4.954337120056152
    5. ',' → logprob: -5.079337120056152
    6. '3' → logprob: -5.204337120056152
    7. '(' → logprob: -5.579337120056152
    8. ' (' → logprob: -6.454337120056152
    9. '(n' → logprob: -7.829337120056152
    10. '1' → logprob: -7.954337120056152

Token 313: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.224493384361267
    2. ')' → logprob: -1.474493384361267
    3. '3' → logprob: -1.974493384361267
    4. '")' → logprob: -2.0994935035705566
    5. ' n' → logprob: -2.2244935035705566
    6. '"' → logprob: -3.2244935035705566
    7. ' )' → logprob: -3.5994935035705566
    8. ' ' → logprob: -4.599493503570557
    9. ' "' → logprob: -4.849493503570557
    10. '')' → logprob: -5.224493503570557

Token 314: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0110534792765975
    2. ' +' → logprob: -4.511053562164307
    3. '   ' → logprob: -12.386053085327148
    4. ')' → logprob: -14.761053085327148
    5. '+
' → logprob: -15.136053085327148
    6. '+)' → logprob: -15.511053085327148
    7. '+n' → logprob: -15.636053085327148
    8. ' plus' → logprob: -16.38605308532715
    9. ' ' → logprob: -16.88605308532715
    10. '1' → logprob: -16.88605308532715

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001612267515156418
    2. ' ' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.000161170959473
    4. ')' → logprob: -15.125161170959473
    5. '  ' → logprob: -15.750161170959473
    6. '+' → logprob: -15.750161170959473
    7. '2' → logprob: -17.25016212463379
    8. ' )' → logprob: -18.50016212463379
    9. '    ' → logprob: -18.62516212463379
    10. '```' → logprob: -18.62516212463379

Token 316: ' entier' (ID: 80473)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2267100214958191
    2. ')' → logprob: -1.6017100811004639
    3. ' +' → logprob: -6.851709842681885
    4. '+)' → logprob: -8.601710319519043
    5. ')+' → logprob: -10.351710319519043
    6. ' )' → logprob: -11.476710319519043
    7. ')
' → logprob: -12.726710319519043
    8. '+n' → logprob: -13.101710319519043
    9. '+
' → logprob: -13.726710319519043
    10. '+')' → logprob: -13.976710319519043

Token 317: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3136883080005646
    2. '+' → logprob: -1.3136882781982422
    3. ' +' → logprob: -7.938688278198242
    4. ' )' → logprob: -10.313688278198242
    5. '```' → logprob: -11.563688278198242
    6. '+)' → logprob: -11.688688278198242
    7. ')
' → logprob: -11.813688278198242
    8. ')+' → logprob: -12.563688278198242
    9. '")' → logprob: -13.938688278198242
    10. ')

' → logprob: -14.063688278198242

Token 318: ' pas' (ID: 2173)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31339946389198303
    2. ' )' → logprob: -2.18839955329895
    3. ' n' → logprob: -2.31339955329895
    4. '")' → logprob: -3.81339955329895
    5. ' ' → logprob: -4.438399314880371
    6. 'n' → logprob: -4.938399314880371
    7. '4' → logprob: -5.313399314880371
    8. ' ")' → logprob: -6.188399314880371
    9. '   ' → logprob: -6.313399314880371
    10. '"' → logprob: -6.813399314880371

Token 319: ' une' (ID: 2463)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10233274102210999
    2. ' )' → logprob: -3.852332830429077
    3. ' ' → logprob: -4.102332592010498
    4. '"' → logprob: -4.102332592010498
    5. ' n' → logprob: -4.352332592010498
    6. 'n' → logprob: -4.352332592010498
    7. '")' → logprob: -5.352332592010498
    8. '1' → logprob: -5.477332592010498
    9. ' "' → logprob: -6.227332592010498
    10. '```' → logprob: -6.977332592010498

Token 320: ' addition' (ID: 5856)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3876531720161438
    2. '+' → logprob: -1.887653112411499
    3. ' )' → logprob: -2.012653112411499
    4. 'space' → logprob: -4.012653350830078
    5. '"' → logprob: -5.137653350830078
    6. ' ' → logprob: -5.387653350830078
    7. ' space' → logprob: -5.762653350830078
    8. ''' → logprob: -7.012653350830078
    9. ' +' → logprob: -7.137653350830078
    10. ' ' → logprob: -7.387653350830078

Token 321: ' numérique' (ID: 73962)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16242888569831848
    2. '+' → logprob: -1.912428855895996
    3. ' +' → logprob: -6.537428855895996
    4. ' )' → logprob: -8.537428855895996
    5. '   ' → logprob: -8.537428855895996
    6. '+)' → logprob: -8.662428855895996
    7. ')
' → logprob: -9.662428855895996
    8. '```' → logprob: -10.662428855895996
    9. ',' → logprob: -10.787428855895996
    10. '+n' → logprob: -10.787428855895996

Token 322: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07058481872081757
    2. '+' → logprob: -2.695584774017334
    3. '+)' → logprob: -8.070585250854492
    4. ' +' → logprob: -8.695585250854492
    5. ' )' → logprob: -9.695585250854492
    6. '   ' → logprob: -9.945585250854492
    7. '")' → logprob: -11.445585250854492
    8. '```' → logprob: -11.695585250854492
    9. ')
' → logprob: -12.195585250854492
    10. '1' → logprob: -12.195585250854492

Token 323: ' caractères' (ID: 183106)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2686624825000763
    2. ' "' → logprob: -2.393662452697754
    3. ' n' → logprob: -2.768662452697754
    4. '1' → logprob: -3.768662452697754
    5. 'n' → logprob: -4.143662452697754
    6. ' ' → logprob: -4.143662452697754
    7. ' '' → logprob: -4.893662452697754
    8. ''' → logprob: -5.018662452697754
    9. '")' → logprob: -5.018662452697754
    10. ')' → logprob: -6.143662452697754

Token 324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04940497502684593
    2. '+' → logprob: -3.0494048595428467
    3. '   ' → logprob: -8.424405097961426
    4. ' )' → logprob: -8.549405097961426
    5. '+)' → logprob: -8.674405097961426
    6. ' +' → logprob: -9.299405097961426
    7. ')
' → logprob: -10.049405097961426
    8. '+n' → logprob: -11.299405097961426
    9. '```' → logprob: -11.424405097961426
    10. '4' → logprob: -11.549405097961426

Token 325: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.031021753326058388
    2. '   ' → logprob: -3.5310218334198
    3. '
' → logprob: -8.156022071838379
    4. '    
' → logprob: -8.531022071838379
    5. ' print' → logprob: -8.781022071838379
    6. '3' → logprob: -9.031022071838379
    7. ',' → logprob: -9.281022071838379
    8. '(' → logprob: -9.281022071838379
    9. '  
' → logprob: -9.531022071838379
    10. '\n' → logprob: -10.156022071838379

Token 326: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4318903684616089
    2. '3' → logprob: -1.0568903684616089
    3. ' print' → logprob: -6.431890487670898
    4. '(' → logprob: -6.806890487670898
    5. ' ' → logprob: -8.056890487670898
    6. ',' → logprob: -9.931890487670898
    7. ' (' → logprob: -10.306890487670898
    8. '   ' → logprob: -10.556890487670898
    9. ' ,' → logprob: -11.181890487670898
    10. '(print' → logprob: -11.556890487670898

Token 327: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024827925954014063
    2. '3' → logprob: -6.002482891082764
    3. ' (' → logprob: -12.252482414245605
    4. ' ' → logprob: -13.377482414245605
    5. '(
' → logprob: -14.252482414245605
    6. '("' → logprob: -16.502483367919922
    7. '('' → logprob: -16.877483367919922
    8. '   ' → logprob: -17.627483367919922
    9. '((' → logprob: -18.127483367919922
    10. '()' → logprob: -18.252483367919922

Token 328: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.1250057220459
    4. ')' → logprob: -17.1250057220459
    5. '３' → logprob: -19.3750057220459
    6. '```' → logprob: -19.7500057220459
    7. '  ' → logprob: -19.8750057220459
    8. '"' → logprob: -20.1250057220459
    9. '    ' → logprob: -20.2500057220459
    10. '(' → logprob: -20.5000057220459

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004240093287080526
    2. ' ,' → logprob: -6.004240036010742
    3. ',n' → logprob: -6.379240036010742
    4. ' n' → logprob: -10.004240036010742
    5. '(n' → logprob: -11.879240036010742
    6. '   ' → logprob: -12.254240036010742
    7. 'n' → logprob: -12.754240036010742
    8. '+' → logprob: -13.254240036010742
    9. ',
' → logprob: -13.879240036010742
    10. '+n' → logprob: -14.504240036010742

Token 330: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20157784223556519
    2. 'n' → logprob: -1.70157790184021
    3. '"' → logprob: -9.076578140258789
    4. ' "' → logprob: -11.326578140258789
    5. ' ' → logprob: -11.576578140258789
    6. '(n' → logprob: -11.576578140258789
    7. ' ' → logprob: -12.076578140258789
    8. ''' → logprob: -12.701578140258789
    9. ' '' → logprob: -12.701578140258789
    10. ' (' → logprob: -13.326578140258789

Token 331: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005573204252868891
    2. ' +' → logprob: -7.5005574226379395
    3. '+
' → logprob: -12.500556945800781
    4. '+)' → logprob: -15.000556945800781
    5. ')' → logprob: -16.25055694580078
    6. '1' → logprob: -17.75055694580078
    7. ' +
' → logprob: -17.75055694580078
    8. ')+' → logprob: -17.87555694580078
    9. '+n' → logprob: -17.87555694580078
    10. '   ' → logprob: -18.12555694580078

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.875035285949707
    4. '  ' → logprob: -19.000036239624023
    5. ')' → logprob: -19.125036239624023
    6. '+' → logprob: -20.625036239624023
    7. '```' → logprob: -20.625036239624023
    8. '１' → logprob: -20.750036239624023
    9. '۱' → logprob: -21.375036239624023
    10. '    ' → logprob: -21.625036239624023

Token 333: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.375000953674316
    4. '))' → logprob: -18.0
    5. ')`' → logprob: -18.125
    6. '')' → logprob: -18.375
    7. '")' → logprob: -18.75
    8. '`)' → logprob: -19.125
    9. ')#' → logprob: -19.25
    10. ')}' → logprob: -19.5

Token 334: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: ' Aff' (ID: 13741)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20346838235855103
    2. 'print' → logprob: -1.9534683227539062
    3. '#' → logprob: -3.2034683227539062
    4. ' for' → logprob: -7.078468322753906
    5. '   ' → logprob: -7.828468322753906
    6. '...' → logprob: -8.828468322753906
    7. '```' → logprob: -9.703468322753906
    8. 'pass' → logprob: -9.953468322753906
    9. 'exit' → logprob: -10.203468322753906
    10. 'if' → logprob: -10.203468322753906

Token 337: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -7.946405094116926e-05
    2. '#' → logprob: -10.125079154968262
    3. 'print' → logprob: -10.875079154968262
    4. 'iche' → logprob: -12.750079154968262
    5. ' print' → logprob: -13.000079154968262
    6. 'r' → logprob: -13.000079154968262
    7. 'ichage' → logprob: -13.500079154968262
    8. 'icer' → logprob: -13.625079154968262
    9. 'iquer' → logprob: -13.625079154968262
    10. 'ronter' → logprob: -13.750079154968262

Token 338: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32670629024505615
    2. '(n' → logprob: -2.0767064094543457
    3. '4' → logprob: -2.3267064094543457
    4. '3' → logprob: -2.9517064094543457
    5. 'n' → logprob: -6.451706409454346
    6. '1' → logprob: -6.451706409454346
    7. 'print' → logprob: -8.451705932617188
    8. '2' → logprob: -10.076705932617188
    9. ' ' → logprob: -10.701705932617188
    10. ' (' → logprob: -11.201705932617188

Token 339: ' paire' (ID: 148856)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39816564321517944
    2. '4' → logprob: -2.023165702819824
    3. '(n' → logprob: -2.273165702819824
    4. 'print' → logprob: -2.898165702819824
    5. 'n' → logprob: -3.773165702819824
    6. '3' → logprob: -4.773165702819824
    7. '1' → logprob: -5.398165702819824
    8. 'for' → logprob: -7.523165702819824
    9. '2' → logprob: -7.898165702819824
    10. ' ' → logprob: -8.148165702819824

Token 340: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0256598312407732
    2. '(n' → logprob: -3.7756597995758057
    3. '4' → logprob: -6.400660037994385
    4. '3' → logprob: -7.275660037994385
    5. 'print' → logprob: -10.775659561157227
    6. 'n' → logprob: -11.650659561157227
    7. '   ' → logprob: -11.775659561157227
    8. '1' → logprob: -12.150659561157227
    9. ' (' → logprob: -12.275659561157227
    10. '(
' → logprob: -12.650659561157227

Token 341: 'n' (ID: 77)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.557908296585083
    2. '1' → logprob: -1.057908296585083
    3. 'n' → logprob: -2.807908296585083
    4. '4' → logprob: -4.057908058166504
    5. '2' → logprob: -5.932908058166504
    6. '(n' → logprob: -9.557908058166504
    7. 'i' → logprob: -10.432908058166504
    8. '(' → logprob: -11.432908058166504
    9. ' ' → logprob: -11.932908058166504
    10. 'a' → logprob: -12.682908058166504

Token 342: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014627174474298954
    2. '+' → logprob: -5.139626979827881
    3. ' ,' → logprob: -5.139626979827881
    4. ' ' → logprob: -6.139626979827881
    5. ',n' → logprob: -7.639626979827881
    6. '   ' → logprob: -9.514627456665039
    7. '-' → logprob: -10.389627456665039
    8. ')' → logprob: -11.139627456665039
    9. 'n' → logprob: -11.389627456665039
    10. '  ' → logprob: -11.889627456665039

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023605316877365112
    2. '2' → logprob: -3.7736053466796875
    3. ' ' → logprob: -8.523605346679688
    4. '4' → logprob: -9.273605346679688
    5. '3' → logprob: -11.023605346679688
    6. '   ' → logprob: -11.273605346679688
    7. ')' → logprob: -11.773605346679688
    8. '```' → logprob: -12.023605346679688
    9. '5' → logprob: -12.148605346679688
    10. '
' → logprob: -12.398605346679688

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007431515492498875
    2. ' ,' → logprob: -5.007431507110596
    3. '-' → logprob: -7.507431507110596
    4. ',n' → logprob: -9.632431983947754
    5. ')' → logprob: -10.132431983947754
    6. ' -' → logprob: -10.882431983947754
    7. '+' → logprob: -10.882431983947754
    8. 'n' → logprob: -12.382431983947754
    9. '1' → logprob: -12.507431983947754
    10. ' n' → logprob: -12.757431983947754

Token 345: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005291988607496023
    2. '4' → logprob: -5.380291938781738
    3. 'n' → logprob: -8.005291938781738
    4. ' ' → logprob: -8.255291938781738
    5. '2' → logprob: -10.130291938781738
    6. '3' → logprob: -10.380291938781738
    7. ' n' → logprob: -12.755291938781738
    8. ')' → logprob: -13.505291938781738
    9. '   ' → logprob: -14.380291938781738
    10. 'b' → logprob: -14.692791938781738

Token 346: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7755962014198303
    2. '2' → logprob: -0.9005962014198303
    3. '+' → logprob: -2.0255961418151855
    4. '```' → logprob: -7.1505961418151855
    5. '-' → logprob: -8.900596618652344
    6. ')+' → logprob: -9.275596618652344
    7. '+)' → logprob: -9.275596618652344
    8. ' ' → logprob: -9.525596618652344
    9. '1' → logprob: -9.900596618652344
    10. ' +' → logprob: -11.025596618652344

Token 347: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -12.000012397766113
    3. ')' → logprob: -12.750012397766113
    4. '1' → logprob: -12.750012397766113
    5. '```' → logprob: -16.12501335144043
    6. '3' → logprob: -16.50001335144043
    7. '4' → logprob: -17.18751335144043
    8. '۲' → logprob: -17.56251335144043
    9. '`)' → logprob: -17.56251335144043
    10. '   ' → logprob: -17.68751335144043

Token 348: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048703983426094055
    2. ')
' → logprob: -3.048703908920288
    3. ')
' → logprob: -9.423704147338867
    4. 'print' → logprob: -10.548704147338867
    5. '   ' → logprob: -12.048704147338867
    6. ')

' → logprob: -13.923704147338867
    7. 'n' → logprob: -14.298704147338867
    8. '")' → logprob: -14.548704147338867
    9. ')`
' → logprob: -15.048704147338867
    10. ')`' → logprob: -15.423704147338867

Token 349: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002680112374946475
    2. '   ' → logprob: -9.50026798248291
    3. '
' → logprob: -9.62526798248291
    4. '(n' → logprob: -9.75026798248291
    5. '```' → logprob: -10.37526798248291
    6. 'n' → logprob: -11.37526798248291
    7. '``' → logprob: -11.50026798248291
    8. '(print' → logprob: -12.37526798248291
    9. '    
' → logprob: -12.50026798248291
    10. '\n' → logprob: -13.12526798248291

Token 350: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1472419600977446e-06
    2. '(n' → logprob: -14.875000953674316
    3. ' print' → logprob: -15.125000953674316
    4. '(print' → logprob: -15.500000953674316
    5. 'n' → logprob: -15.750000953674316
    6. '
' → logprob: -16.750001907348633
    7. '```' → logprob: -17.125001907348633
    8. '3' → logprob: -17.500001907348633
    9. '(' → logprob: -17.875001907348633
    10. '    
' → logprob: -18.625001907348633

Token 351: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009223000961355865
    2. '(' → logprob: -7.000922203063965
    3. 'n' → logprob: -11.625922203063965
    4. '3' → logprob: -14.000922203063965
    5. ' (' → logprob: -14.750922203063965
    6. ' n' → logprob: -15.250922203063965
    7. '4' → logprob: -15.500922203063965
    8. '1' → logprob: -16.12592315673828
    9. ' ' → logprob: -16.87592315673828
    10. '(
' → logprob: -17.25092315673828

Token 352: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.0219828002154827e-05
    2. ' +' → logprob: -10.875020027160645
    3. '+
' → logprob: -14.125020027160645
    4. '+,' → logprob: -15.000020027160645
    5. ',' → logprob: -16.12502098083496
    6. ')+' → logprob: -18.12502098083496
    7. '-' → logprob: -18.37502098083496
    8. '1' → logprob: -18.50002098083496
    9. ' ' → logprob: -19.00002098083496
    10. '＋' → logprob: -19.00002098083496

Token 353: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08939360082149506
    2. '1' → logprob: -2.4643936157226562
    3. ' ' → logprob: -7.714393615722656
    4. '   ' → logprob: -12.339393615722656
    5. '+' → logprob: -13.339393615722656
    6. '```' → logprob: -14.589393615722656
    7. '  ' → logprob: -14.964393615722656
    8. '           ' → logprob: -15.589393615722656
    9. '     ' → logprob: -15.839393615722656
    10. '       ' → logprob: -15.964393615722656

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003076950670219958
    2. ',n' → logprob: -8.2503080368042
    3. ' ,' → logprob: -10.0003080368042
    4. ')' → logprob: -14.7503080368042
    5. ',
' → logprob: -14.8753080368042
    6. 'n' → logprob: -16.250307083129883
    7. '),' → logprob: -17.125307083129883
    8. '+' → logprob: -17.375307083129883
    9. '(n' → logprob: -17.500307083129883
    10. ' n' → logprob: -17.625307083129883

Token 355: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38687217235565186
    2. ' n' → logprob: -1.1368721723556519
    3. ' ' → logprob: -14.511872291564941
    4. '	n' → logprob: -15.011872291564941
    5. '   ' → logprob: -15.886872291564941
    6. ')' → logprob: -16.136871337890625
    7. '(n' → logprob: -16.136871337890625
    8. ')n' → logprob: -17.136871337890625
    9. ' ' → logprob: -18.261871337890625
    10. '  ' → logprob: -18.261871337890625

Token 356: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0564331205387134e-05
    2. ' +' → logprob: -11.87501049041748
    3. '+
' → logprob: -12.75001049041748
    4. '2' → logprob: -14.37501049041748
    5. '＋' → logprob: -18.250011444091797
    6. '-' → logprob: -19.000011444091797
    7. '[' → logprob: -19.125011444091797
    8. '```' → logprob: -19.500011444091797
    9. ')+' → logprob: -19.625011444091797
    10. '.' → logprob: -19.875011444091797

Token 357: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۲' → logprob: -17.875001907348633
    4. '```' → logprob: -18.500001907348633
    5. '   ' → logprob: -18.750001907348633
    6. ')' → logprob: -19.125001907348633
    7. '２' → logprob: -19.687501907348633
    8. '২' → logprob: -19.812501907348633
    9. '२' → logprob: -20.437501907348633
    10. '٢' → logprob: -21.125001907348633

Token 358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -15.875000953674316
    4. '))' → logprob: -17.625001907348633
    5. ')`' → logprob: -18.125001907348633
    6. ')#' → logprob: -18.375001907348633
    7. '   ' → logprob: -18.625001907348633
    8. ')}' → logprob: -18.625001907348633
    9. ')

' → logprob: -18.875001907348633
    10. '),' → logprob: -19.000001907348633

Token 359: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24596987664699554
    2. 'for' → logprob: -1.6209698915481567
    3. '#' → logprob: -4.245969772338867
    4. '   ' → logprob: -5.245969772338867
    5. 'n' → logprob: -8.495969772338867
    6. ' for' → logprob: -8.620969772338867
    7. '4' → logprob: -9.245969772338867
    8. ' ' → logprob: -9.870969772338867
    9. 'if' → logprob: -9.870969772338867
    10. '#print' → logprob: -10.370969772338867

Token 362: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.011491977609694004
    2. 'print' → logprob: -5.136491775512695
    3. '#' → logprob: -5.261491775512695
    4. 'iche' → logprob: -9.261491775512695
    5. ' print' → logprob: -9.511491775512695
    6. 'ich' → logprob: -9.636491775512695
    7. '(' → logprob: -10.386491775512695
    8. 'Print' → logprob: -10.761491775512695
    9. 'ic' → logprob: -11.136491775512695
    10. '.print' → logprob: -11.636491775512695

Token 363: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016514986753463745
    2. '(' → logprob: -4.141514778137207
    3. 'n' → logprob: -8.516514778137207
    4. '4' → logprob: -8.891514778137207
    5. '3' → logprob: -9.141514778137207
    6. '1' → logprob: -10.891514778137207
    7. '2' → logprob: -12.141514778137207
    8. 'print' → logprob: -12.891514778137207
    9. '((' → logprob: -13.016514778137207
    10. ' (' → logprob: -13.516514778137207

Token 364: ' paire' (ID: 148856)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2920995354652405
    2. '(' → logprob: -1.6670994758605957
    3. '2' → logprob: -3.7920994758605957
    4. '3' → logprob: -4.167099475860596
    5. 'print' → logprob: -4.292099475860596
    6. '4' → logprob: -5.042099475860596
    7. '1' → logprob: -6.042099475860596
    8. ' ' → logprob: -6.167099475860596
    9. 'n' → logprob: -7.667099475860596
    10. '   ' → logprob: -8.542099952697754

Token 365: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12746135890483856
    2. '(' → logprob: -2.1274614334106445
    3. 'print' → logprob: -8.002461433410645
    4. '3' → logprob: -9.127461433410645
    5. 'n' → logprob: -10.252461433410645
    6. '1' → logprob: -10.752461433410645
    7. '   ' → logprob: -11.127461433410645
    8. '4' → logprob: -11.627461433410645
    9. '(print' → logprob: -12.502461433410645
    10. '2' → logprob: -12.502461433410645

Token 366: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06246548146009445
    2. '3' → logprob: -3.0624654293060303
    3. '1' → logprob: -4.312465667724609
    4. '2' → logprob: -8.93746566772461
    5. '4' → logprob: -9.31246566772461
    6. '   ' → logprob: -9.31246566772461
    7. '(n' → logprob: -10.31246566772461
    8. ' n' → logprob: -10.56246566772461
    9. ' ' → logprob: -12.18746566772461
    10. '	n' → logprob: -13.31246566772461

Token 367: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.990154047845863e-05
    2. ' +' → logprob: -10.500049591064453
    3. '+
' → logprob: -10.875049591064453
    4. '+,' → logprob: -13.500049591064453
    5. '+n' → logprob: -13.875049591064453
    6. '2' → logprob: -15.125049591064453
    7. '-' → logprob: -15.500049591064453
    8. '1' → logprob: -15.750049591064453
    9. ',' → logprob: -15.875049591064453
    10. '   ' → logprob: -16.500049591064453

Token 368: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015014449309092015
    2. '1' → logprob: -8.875149726867676
    3. '+' → logprob: -11.875149726867676
    4. '3' → logprob: -12.875149726867676
    5. ' ' → logprob: -14.500149726867676
    6. '```' → logprob: -16.000150680541992
    7. '
' → logprob: -16.750150680541992
    8. '   ' → logprob: -17.500150680541992
    9. '``' → logprob: -17.875150680541992
    10. '+
' → logprob: -18.062650680541992

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018530222587287426
    2. ' ,' → logprob: -8.875185012817383
    3. ',n' → logprob: -10.125185012817383
    4. ',
' → logprob: -13.000185012817383
    5. ')' → logprob: -13.000185012817383
    6. 'n' → logprob: -15.250185012817383
    7. 'print' → logprob: -16.250185012817383
    8. '),' → logprob: -16.375185012817383
    9. ' n' → logprob: -16.875185012817383
    10. ',
' → logprob: -17.125185012817383

Token 370: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028752496000379324
    2. '3' → logprob: -6.377875328063965
    3. ' ' → logprob: -7.127875328063965
    4. '4' → logprob: -8.752875328063965
    5. 'n' → logprob: -8.752875328063965
    6. '2' → logprob: -10.627875328063965
    7. ' n' → logprob: -11.377875328063965
    8. '   ' → logprob: -11.502875328063965
    9. ')' → logprob: -12.127875328063965
    10. '(' → logprob: -14.190375328063965

Token 371: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010151672904612496
    2. '-' → logprob: -9.375101089477539
    3. ' +' → logprob: -12.000101089477539
    4. '1' → logprob: -12.875101089477539
    5. '+,' → logprob: -13.125101089477539
    6. 'plus' → logprob: -13.625101089477539
    7. '+
' → logprob: -13.625101089477539
    8. '+n' → logprob: -14.000101089477539
    9. ')' → logprob: -14.250101089477539
    10. ',' → logprob: -14.250101089477539

Token 372: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0002988776541315019
    2. '1' → logprob: -8.125298500061035
    3. ' ' → logprob: -13.500298500061035
    4. '+' → logprob: -14.250298500061035
    5. '2' → logprob: -14.625298500061035
    6. ')' → logprob: -15.875298500061035
    7. '```' → logprob: -16.00029945373535
    8. '   ' → logprob: -16.62529945373535
    9. '
' → logprob: -17.75029945373535
    10. '4' → logprob: -18.06279945373535

Token 373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5958358645439148
    2. ')
' → logprob: -0.8458358645439148
    3. ',' → logprob: -3.9708359241485596
    4. ',n' → logprob: -7.9708356857299805
    5. 'n' → logprob: -8.59583568572998
    6. ')n' → logprob: -9.47083568572998
    7. ')
' → logprob: -9.97083568572998
    8. ',
' → logprob: -9.97083568572998
    9. 'print' → logprob: -10.22083568572998
    10. '   ' → logprob: -10.22083568572998

Token 374: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1867799013853073
    2. '(n' → logprob: -2.4367799758911133
    3. ',' → logprob: -2.8117799758911133
    4. 'n' → logprob: -3.9367799758911133
    5. ',n' → logprob: -6.686779975891113
    6. '",' → logprob: -7.561779975891113
    7. '(' → logprob: -8.061779975891113
    8. ' ,' → logprob: -8.061779975891113
    9. ' print' → logprob: -8.186779975891113
    10. '\n' → logprob: -8.686779975891113

Token 375: ' print' (ID: 2123)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04780227690935135
    2. ' n' → logprob: -3.797802209854126
    3. 'print' (adapté à ' print') → logprob: -3.922802209854126
    4. '(n' → logprob: -5.547802448272705
    5. ',n' → logprob: -8.297801971435547
    6. ',' → logprob: -8.672801971435547
    7. ' print' → logprob: -9.297801971435547
    8. '\n' → logprob: -10.172801971435547
    9. ' ,' → logprob: -11.672801971435547
    10. '(' → logprob: -12.547801971435547

Token 376: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0011053291382268071
    2. '(' → logprob: -6.876105308532715
    3. 'n' → logprob: -9.626105308532715
    4. ' (' → logprob: -12.751105308532715
    5. ',' → logprob: -13.251105308532715
    6. ' n' → logprob: -13.376105308532715
    7. ',n' → logprob: -15.876105308532715
    8. '(
' → logprob: -16.75110626220703
    9. '   ' → logprob: -17.12610626220703
    10. '```' → logprob: -17.12610626220703

Token 377: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.226628895296017e-06
    2. ' +' → logprob: -12.000007629394531
    3. '+n' → logprob: -14.875007629394531
    4. '+,' → logprob: -15.000007629394531
    5. ',' → logprob: -15.125007629394531
    6. '+
' → logprob: -16.50000762939453
    7. '2' → logprob: -17.50000762939453
    8. '```' → logprob: -18.62500762939453
    9. ' ' → logprob: -19.62500762939453
    10. '1' → logprob: -19.87500762939453

Token 378: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006965781562030315
    2. '3' → logprob: -5.006965637207031
    3. ' ' → logprob: -8.381965637207031
    4. '1' → logprob: -11.256965637207031
    5. '+' → logprob: -12.131965637207031
    6. '   ' → logprob: -13.631965637207031
    7. 'n' → logprob: -14.006965637207031
    8. '```' → logprob: -14.756965637207031
    9. '  ' → logprob: -15.381965637207031
    10. ' n' → logprob: -16.50696563720703

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.040457421680912e-05
    2. ',n' → logprob: -9.625070571899414
    3. ' ,' → logprob: -12.625070571899414
    4. ')' → logprob: -14.625070571899414
    5. ',
' → logprob: -14.750070571899414
    6. 'n' → logprob: -16.875070571899414
    7. ',

' → logprob: -17.500070571899414
    8. '',' → logprob: -17.625070571899414
    9. ' n' → logprob: -18.250070571899414
    10. '),' → logprob: -18.375070571899414

Token 380: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759406089782715
    2. ' n' → logprob: -0.8259406089782715
    3. ' ' → logprob: -15.07594108581543
    4. ' ' → logprob: -15.20094108581543
    5. ')' → logprob: -15.95094108581543
    6. '(n' → logprob: -16.07594108581543
    7. ''' → logprob: -16.32594108581543
    8. '"' → logprob: -16.57594108581543
    9. '   ' → logprob: -16.82594108581543
    10. ''n' → logprob: -16.95094108581543

Token 381: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.200166469876422e-06
    2. ' +' → logprob: -12.250004768371582
    3. '+n' → logprob: -15.375004768371582
    4. '+
' → logprob: -16.2500057220459
    5. '3' → logprob: -18.2500057220459
    6. ',' → logprob: -18.5000057220459
    7. '-' → logprob: -19.0000057220459
    8. '+,' → logprob: -20.0000057220459
    9. '.n' → logprob: -20.1250057220459
    10. '```' → logprob: -20.2500057220459

Token 382: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -21.375001907348633
    4. '```' → logprob: -21.375001907348633
    5. '۳' → logprob: -21.750001907348633
    6. ')' → logprob: -22.375001907348633
    7. '  ' → logprob: -22.500001907348633
    8. '+' → logprob: -22.750001907348633
    9. 'print' → logprob: -23.000001907348633
    10. '1' → logprob: -23.000001907348633

Token 383: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014096579980105162
    2. ')
' → logprob: -8.875141143798828
    3. ' )' → logprob: -15.500141143798828
    4. '+' → logprob: -15.875141143798828
    5. '   ' → logprob: -16.000141143798828
    6. ')

' → logprob: -16.375141143798828
    7. '),' → logprob: -16.625141143798828
    8. ')n' → logprob: -16.625141143798828
    9. ',' → logprob: -16.750141143798828
    10. ')
' → logprob: -16.875141143798828

Token 384: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1928500384092331
    2. '   ' → logprob: -2.192850112915039
    3. '\n' → logprob: -3.317850112915039
    4. '
' → logprob: -4.442850112915039
    5. ')' → logprob: -5.067850112915039
    6. '(n' → logprob: -5.442850112915039
    7. 'n' → logprob: -5.942850112915039
    8. '```' → logprob: -7.317850112915039
    9. ')
' → logprob: -7.692850112915039
    10. '(' → logprob: -8.192850112915039

Token 385: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4730950593948364
    2. '(n' → logprob: -1.8480950593948364
    3. '   ' → logprob: -2.848094940185547
    4. ')' → logprob: -2.973094940185547
    5. 'n' → logprob: -3.098094940185547
    6. '<|end|>' → logprob: -3.723094940185547
    7. '\n' → logprob: -3.848094940185547
    8. ' ' → logprob: -5.098094940185547
    9. '  ' → logprob: -5.973094940185547
    10. '
' → logprob: -5.973094940185547

Token 386: ' Bou' (ID: 33816)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.034244898706674576
    2. '3' → logprob: -4.159245014190674
    3. 'n' → logprob: -4.659245014190674
    4. 'for' → logprob: -5.284245014190674
    5. '(n' → logprob: -6.159245014190674
    6. '4' → logprob: -7.534245014190674
    7. '#' → logprob: -8.534244537353516
    8. ' print' → logprob: -8.784244537353516
    9. '   ' → logprob: -9.034244537353516
    10. '1' → logprob: -9.034244537353516

Token 387: 'cler' (ID: 55207)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4500476121902466
    2. 'r' → logprob: -1.0750476121902466
    3. ' for' → logprob: -4.450047492980957
    4. 'n' → logprob: -5.450047492980957
    5. '   ' → logprob: -5.700047492980957
    6. 'f' → logprob: -6.825047492980957
    7. 'c' → logprob: -8.325047492980957
    8. 'i' → logprob: -8.825047492980957
    9. 'cle' → logprob: -9.325047492980957
    10. 'k' → logprob: -10.200047492980957

Token 388: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6346030235290527
    2. ' for' → logprob: -0.7596030235290527
    3. ' i' → logprob: -6.884603023529053
    4. 'i' → logprob: -7.759603023529053
    5. '   ' → logprob: -7.759603023529053
    6. 'from' → logprob: -10.009603500366211
    7. '(' → logprob: -10.884603500366211
    8. ' ' → logprob: -11.134603500366211
    9. 'n' → logprob: -11.384603500366211
    10. '	for' → logprob: -12.009603500366211

Token 389: ' génér' (ID: 18939)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3652384579181671
    2. 'i' → logprob: -1.2402384281158447
    3. ' _' → logprob: -4.740238666534424
    4. '_' → logprob: -4.865238666534424
    5. ' ' → logprob: -9.365238189697266
    6. '_i' → logprob: -9.865238189697266
    7. ' range' → logprob: -10.615238189697266
    8. '	i' → logprob: -11.740238189697266
    9. '3' → logprob: -11.865238189697266
    10. ' for' → logprob: -12.240238189697266

Token 390: 'er' (ID: 259)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12625840306282043
    2. 'er' → logprob: -2.251258373260498
    3. ' i' → logprob: -4.876258373260498
    4. 'e' → logprob: -6.126258373260498
    5. 'r' → logprob: -7.126258373260498
    6. 'ate' → logprob: -7.251258373260498
    7. 'range' → logprob: -7.876258373260498
    8. 'a' → logprob: -8.251258850097656
    9. 'n' → logprob: -8.376258850097656
    10. 't' → logprob: -8.501258850097656

Token 391: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2772653102874756
    2. 'i' → logprob: -1.6522653102874756
    3. ' for' → logprob: -4.402265548706055
    4. '4' → logprob: -4.527265548706055
    5. ' i' → logprob: -4.777265548706055
    6. '(' → logprob: -5.027265548706055
    7. '(i' → logprob: -5.527265548706055
    8. 'range' → logprob: -5.902265548706055
    9. '3' → logprob: -6.152265548706055
    10. '(n' → logprob: -6.402265548706055

Token 392: ' afficher' (ID: 146524)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9868714809417725
    2. ' i' → logprob: -1.3618714809417725
    3. 'i' → logprob: -1.6118714809417725
    4. 'range' → logprob: -2.1118714809417725
    5. 'print' → logprob: -4.736871719360352
    6. '_' → logprob: -4.736871719360352
    7. ' print' → logprob: -4.736871719360352
    8. ' _' → logprob: -4.861871719360352
    9. ' for' → logprob: -5.486871719360352
    10. 'for' → logprob: -5.861871719360352

Token 393: ' les' (ID: 1341)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43405866622924805
    2. 'i' → logprob: -1.684058666229248
    3. '(' → logprob: -2.934058666229248
    4. '(i' → logprob: -3.434058666229248
    5. ' for' → logprob: -3.684058666229248
    6. ' i' → logprob: -3.809058666229248
    7. 'range' → logprob: -4.184058666229248
    8. '(n' → logprob: -4.934058666229248
    9. 'n' → logprob: -5.684058666229248
    10. '4' → logprob: -6.684058666229248

Token 394: ' ar' (ID: 646)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1504344344139099
    2. ' i' → logprob: -2.2754344940185547
    3. 'range' → logprob: -4.525434494018555
    4. '(n' → logprob: -5.525434494018555
    5. 'n' → logprob: -5.650434494018555
    6. '3' → logprob: -5.650434494018555
    7. '(i' → logprob: -5.775434494018555
    8. 'print' → logprob: -6.025434494018555
    9. '4' → logprob: -6.150434494018555
    10. '(' → logprob: -6.275434494018555

Token 395: 'êtes' (ID: 23720)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.28869253396987915
    2. 'range' → logprob: -2.2886924743652344
    3. 'r' → logprob: -2.9136924743652344
    4. 'print' → logprob: -3.5386924743652344
    5. 'c' → logprob: -3.5386924743652344
    6. 'for' → logprob: -4.663692474365234
    7. 'êtes' → logprob: -5.038692474365234
    8. 'ts' → logprob: -5.413692474365234
    9. 'e' → logprob: -5.788692474365234
    10. 'gs' → logprob: -6.038692474365234

Token 396: ' supplémentaires' (ID: 99346)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002204143675044179
    2. ' for' → logprob: -6.127203941345215
    3. '
' → logprob: -11.377203941345215
    4. '   ' → logprob: -13.252203941345215
    5. 'from' → logprob: -13.252203941345215
    6. '```' → logprob: -13.502203941345215
    7. '(' → logprob: -14.502203941345215
    8. 'n' → logprob: -15.002203941345215
    9. 'f' → logprob: -15.002203941345215
    10. '(n' → logprob: -15.377203941345215

Token 397: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009181279456242919
    2. ' for' → logprob: -7.250917911529541
    3. '
' → logprob: -9.2509183883667
    4. '   ' → logprob: -9.3759183883667
    5. '```' → logprob: -10.6259183883667
    6. '	for' → logprob: -13.6259183883667
    7. 'n' → logprob: -14.8759183883667
    8. '\n' → logprob: -15.3759183883667
    9. '    
' → logprob: -15.3759183883667
    10. '``' → logprob: -15.7509183883667

Token 398: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000610690622124821
    2. ' for' → logprob: -8.0006103515625
    3. '   ' → logprob: -8.3756103515625
    4. '
' → logprob: -10.2506103515625
    5. '```' → logprob: -11.8756103515625
    6. '	for' → logprob: -13.6256103515625
    7. '    
' → logprob: -14.2506103515625
    8. ' 
' → logprob: -15.8756103515625
    9. ')' → logprob: -16.5006103515625
    10. 'range' → logprob: -16.7506103515625

Token 399: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038191936910152435
    2. ' for' → logprob: -3.2881920337677
    3. '
' → logprob: -9.413191795349121
    4. '   ' → logprob: -9.663191795349121
    5. ' 
' → logprob: -13.663191795349121
    6. '    
' → logprob: -13.913191795349121
    7. '\n' → logprob: -14.163191795349121
    8. '```' → logprob: -14.413191795349121
    9. 'n' → logprob: -14.663191795349121
    10. '	for' → logprob: -14.788191795349121

Token 400: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029956897720694542
    2. ' for' → logprob: -3.529956817626953
    3. '   ' → logprob: -8.529956817626953
    4. '
' → logprob: -12.029956817626953
    5. '	for' → logprob: -13.404956817626953
    6. '```' → logprob: -14.654956817626953
    7. 'f' → logprob: -15.154956817626953
    8. ' ' → logprob: -15.404956817626953
    9. 'from' → logprob: -16.029956817626953
    10. '    
' → logprob: -16.279956817626953

Token 401: ' commence' (ID: 44755)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4644942283630371
    2. 'or' → logprob: -1.464494228363037
    3. ' for' → logprob: -1.964494228363037
    4. ' or' → logprob: -9.589494705200195
    5. ' ' → logprob: -10.589494705200195
    6. 'r' → logprob: -10.839494705200195
    7. '	for' → logprob: -12.589494705200195
    8. '   ' → logprob: -13.339494705200195
    9. 'range' → logprob: -13.339494705200195
    10. '=' → logprob: -13.464494705200195

Token 402: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7664289474487305
    2. 'from' → logprob: -1.5164289474487305
    3. ' for' → logprob: -2.1414289474487305
    4. '   ' → logprob: -2.5164289474487305
    5. ' from' → logprob: -3.1414289474487305
    6. ' i' → logprob: -3.3914289474487305
    7. 'i' → logprob: -4.1414289474487305
    8. '(' → logprob: -5.1414289474487305
    9. 'de' → logprob: -5.6414289474487305
    10. ' de' → logprob: -5.8914289474487305

Token 403: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.021419044584035873
    2. '3' → logprob: -4.146419048309326
    3. '1' → logprob: -6.146419048309326
    4. 'range' → logprob: -6.396419048309326
    5. 'n' → logprob: -7.396419048309326
    6. '5' → logprob: -7.896419048309326
    7. 'i' → logprob: -8.646418571472168
    8. ' ' → logprob: -8.646418571472168
    9. 'for' → logprob: -10.146418571472168
    10. '6' → logprob: -10.146418571472168

Token 404: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.014638925902545452
    2. '3' → logprob: -4.514638900756836
    3. '1' → logprob: -5.889638900756836
    4. 'n' → logprob: -7.389638900756836
    5. '5' → logprob: -9.264638900756836
    6. ' ' → logprob: -9.889638900756836
    7. 'i' → logprob: -11.514638900756836
    8. '6' → logprob: -11.764638900756836
    9. '2' → logprob: -11.889638900756836
    10. '(' → logprob: -11.889638900756836

Token 405: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6139257550239563
    2. ' for' → logprob: -1.6139256954193115
    3. 'for' → logprob: -2.2389256954193115
    4. '   ' → logprob: -2.2389256954193115
    5. ' ' → logprob: -3.7389256954193115
    6. ' ,' → logprob: -4.988925933837891
    7. '  ' → logprob: -5.488925933837891
    8. ' 
' → logprob: -5.863925933837891
    9. '<|end|>' → logprob: -6.113925933837891
    10. '
' → logprob: -6.238925933837891

Token 406: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5494375228881836
    2. 'range' → logprob: -1.2994375228881836
    3. ' for' → logprob: -3.0494375228881836
    4. ' range' → logprob: -3.2994375228881836
    5. 'continue' → logprob: -4.049437522888184
    6. '4' → logprob: -4.174437522888184
    7. 'n' → logprob: -4.174437522888184
    8. ' n' → logprob: -5.174437522888184
    9. ' continue' → logprob: -5.424437522888184
    10. 's' → logprob: -6.174437522888184

Token 407: ' va' (ID: 3423)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9583115577697754
    2. 'for' → logprob: -1.5833115577697754
    3. ' range' → logprob: -1.5833115577697754
    4. ' for' → logprob: -2.3333115577697754
    5. '<=' → logprob: -2.7083115577697754
    6. ' n' → logprob: -3.9583115577697754
    7. ' <=' → logprob: -4.333311557769775
    8. 'n' → logprob: -5.708311557769775
    9. 'le' → logprob: -6.333311557769775
    10. 'ranges' → logprob: -7.083311557769775

Token 408: ' jusqu' (ID: 21961)
  Prédit: 'jus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jus' → logprob: -0.7361354827880859
    2. ' jusqu' → logprob: -0.8611354827880859
    3. ' up' → logprob: -2.861135482788086
    4. ' jusque' → logprob: -3.611135482788086
    5. '4' → logprob: -4.611135482788086
    6. 'up' → logprob: -6.486135482788086
    7. '   ' → logprob: -7.486135482788086
    8. ' ' → logprob: -8.111135482788086
    9. 'j' → logprob: -8.111135482788086
    10. 'range' → logprob: -8.361135482788086

Token 409: ''à' (ID: 33688)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5112994313240051
    2. '(' → logprob: -1.5112993717193604
    3. 'a' → logprob: -2.6362993717193604
    4. 'n' → logprob: -3.6362993717193604
    5. 'à' → logprob: -3.7612993717193604
    6. 'e' → logprob: -4.1362996101379395
    7. 'au' → logprob: -4.3862996101379395
    8. '   ' → logprob: -4.7612996101379395
    9. ' à' → logprob: -5.0112996101379395
    10. ''à' → logprob: -5.6362996101379395

Token 410: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10024873167276382
    2. ' n' → logprob: -2.3502488136291504
    3. ' ' → logprob: -11.100248336791992
    4. '   ' → logprob: -11.100248336791992
    5. '	n' → logprob: -12.475248336791992
    6. '(n' → logprob: -13.225248336791992
    7. 'range' → logprob: -13.475248336791992
    8. '3' → logprob: -13.600248336791992
    9. '    ' → logprob: -14.600248336791992
    10. ' range' → logprob: -14.600248336791992

Token 411: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20368854701519012
    2. 'for' → logprob: -2.203688621520996
    3. ' +' → logprob: -3.328688621520996
    4. ' for' → logprob: -3.953688621520996
    5. '   ' → logprob: -4.828688621520996
    6. ',' → logprob: -5.203688621520996
    7. ':' → logprob: -6.453688621520996
    8. '```' → logprob: -6.828688621520996
    9. '
' → logprob: -7.203688621520996
    10. ':
' → logprob: -7.828688621520996

Token 412: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006086396519094706
    2. '2' → logprob: -5.506086349487305
    3. '3' → logprob: -6.381086349487305
    4. ' ' → logprob: -8.631086349487305
    5. '4' → logprob: -9.006086349487305
    6. '+' → logprob: -12.381086349487305
    7. 'n' → logprob: -12.756086349487305
    8. '```' → logprob: -13.506086349487305
    9. '   ' → logprob: -13.756086349487305
    10. '  ' → logprob: -14.506086349487305

Token 413: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20456917583942413
    2. ' for' → logprob: -1.9545692205429077
    3. ':' → logprob: -3.579569101333618
    4. '   ' → logprob: -4.579569339752197
    5. ':
' → logprob: -5.704569339752197
    6. '
' → logprob: -6.954569339752197
    7. '```' → logprob: -7.954569339752197
    8. ',' → logprob: -9.079568862915039
    9. ' 
' → logprob: -9.454568862915039
    10. '4' → logprob: -9.829568862915039

Token 414: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020981380715966225
    2. '
' → logprob: -4.645981311798096
    3. ' for' → logprob: -4.645981311798096
    4. '   ' → logprob: -6.770981311798096
    5. '```' → logprob: -7.895981311798096
    6. '	for' → logprob: -11.520981788635254
    7. '    
' → logprob: -11.770981788635254
    8. ':' → logprob: -12.020981788635254
    9. ':
' → logprob: -12.395981788635254
    10. ' 
' → logprob: -12.770981788635254

Token 415: 'car' (ID: 6830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7556095123291016
    2. ' for' → logprob: -1.0056095123291016
    3. ' range' → logprob: -3.0056095123291016
    4. ' n' → logprob: -3.1306095123291016
    5. 'range' → logprob: -3.6306095123291016
    6. 'n' → logprob: -3.6306095123291016
    7. '   ' → logprob: -4.380609512329102
    8. '4' → logprob: -5.505609512329102
    9. ')' → logprob: -7.005609512329102
    10. ' ' → logprob: -8.630609512329102

Token 416: ' '' (ID: 461)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4779492914676666
    2. 'n' → logprob: -0.9779492616653442
    3. '   ' → logprob: -5.852949142456055
    4. '4' → logprob: -8.227949142456055
    5. ' range' → logprob: -8.602949142456055
    6. ' ' → logprob: -8.852949142456055
    7. 'range' → logprob: -9.102949142456055
    8. ')' → logprob: -9.852949142456055
    9. '    ' → logprob: -10.102949142456055
    10. '	n' → logprob: -10.352949142456055

Token 417: 'range' (ID: 20967)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009971867315471172
    2. ' n' → logprob: -4.759972095489502
    3. 'range' → logprob: -7.009972095489502
    4. '4' → logprob: -8.634971618652344
    5. 'for' → logprob: -9.759971618652344
    6. '   ' → logprob: -9.884971618652344
    7. 'i' → logprob: -10.509971618652344
    8. ' ' → logprob: -10.509971618652344
    9. ' range' → logprob: -10.759971618652344
    10. '```' → logprob: -10.884971618652344

Token 418: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -4.961759259458631e-06
    2. '4' → logprob: -12.625004768371582
    3. '(
' → logprob: -14.500004768371582
    4. ' (' → logprob: -14.875004768371582
    5. '(n' → logprob: -15.625004768371582
    6. ')' → logprob: -15.625004768371582
    7. ')(' → logprob: -16.3750057220459
    8. '('' → logprob: -16.5000057220459
    9. '')' → logprob: -17.1250057220459
    10. '(start' → logprob: -17.2500057220459

Token 419: ' est' (ID: 893)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00021224225929472595
    2. '(n' → logprob: -9.125212669372559
    3. ' (' → logprob: -10.000212669372559
    4. '4' → logprob: -10.250212669372559
    5. ')' → logprob: -12.250212669372559
    6. ',' → logprob: -12.250212669372559
    7. '(
' → logprob: -12.750212669372559
    8. '   ' → logprob: -12.875212669372559
    9. '1' → logprob: -13.625212669372559
    10. '(start' → logprob: -13.875212669372559

Token 420: ' exclus' (ID: 9398)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.173141747713089
    2. '(' → logprob: -2.6731417179107666
    3. ' ' → logprob: -3.1731417179107666
    4. 'range' → logprob: -3.6731417179107666
    5. ' range' → logprob: -4.923141956329346
    6. '1' → logprob: -5.048141956329346
    7. ' n' → logprob: -5.298141956329346
    8. 'n' → logprob: -5.798141956329346
    9. '(n' → logprob: -7.298141956329346
    10. '   ' → logprob: -9.423141479492188

Token 421: 'if' (ID: 366)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2392144650220871
    2. ',' → logprob: -1.9892144203186035
    3. '(n' → logprob: -3.6142144203186035
    4. 'e' → logprob: -3.7392144203186035
    5. ')' → logprob: -3.8642144203186035
    6. ' ,' → logprob: -6.3642144203186035
    7. 'd' → logprob: -7.6142144203186035
    8. ',n' → logprob: -7.6142144203186035
    9. 'ed' → logprob: -7.9892144203186035
    10. ' (' → logprob: -7.9892144203186035

Token 422: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007047236431390047
    2. ',' → logprob: -5.007047176361084
    3. '4' → logprob: -8.507047653198242
    4. '(n' → logprob: -9.757047653198242
    5. ' ,' → logprob: -10.257047653198242
    6. ')' → logprob: -11.382047653198242
    7. '   ' → logprob: -11.382047653198242
    8. ' (' → logprob: -11.882047653198242
    9. '),' → logprob: -13.507047653198242
    10. '(start' → logprob: -13.507047653198242

Token 423: ' fin' (ID: 2131)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.39275628328323364
    2. 'n' → logprob: -1.6427562236785889
    3. ',' → logprob: -3.392756223678589
    4. 'range' → logprob: -3.642756223678589
    5. ')' → logprob: -4.267756462097168
    6. ' ,' → logprob: -4.392756462097168
    7. ' ' → logprob: -4.517756462097168
    8. ' range' → logprob: -4.892756462097168
    9. 'python' → logprob: -5.267756462097168
    10. ' Python' → logprob: -5.517756462097168

Token 424: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07533938437700272
    2. '(n' → logprob: -3.5753393173217773
    3. '(' → logprob: -3.7003393173217773
    4. ' ,' → logprob: -5.200339317321777
    5. ',n' → logprob: -5.450339317321777
    6. '1' → logprob: -5.825339317321777
    7. ')' → logprob: -5.825339317321777
    8. '4' → logprob: -6.450339317321777
    9. ',
' → logprob: -7.825339317321777
    10. '),' → logprob: -8.075339317321777

Token 425: ' par' (ID: 686)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5815427899360657
    2. 'for' → logprob: -1.081542730331421
    3. '   ' → logprob: -2.706542730331421
    4. '4' → logprob: -4.45654296875
    5. 'range' → logprob: -4.58154296875
    6. '    ' → logprob: -5.70654296875
    7. ' range' → logprob: -5.83154296875
    8. ':' → logprob: -6.33154296875
    9. ' ' → logprob: -7.08154296875
    10. ',' → logprob: -7.33154296875

Token 426: ' pas' (ID: 2173)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7692680954933167
    2. 'range' → logprob: -1.7692680358886719
    3. ' range' → logprob: -2.144268035888672
    4. 'for' → logprob: -2.769268035888672
    5. 'i' → logprob: -3.144268035888672
    6. '1' → logprob: -3.644268035888672
    7. ' i' → logprob: -3.894268035888672
    8. ' ' → logprob: -4.144268035888672
    9. 'e' → logprob: -4.394268035888672
    10. ' for' → logprob: -4.519268035888672

Token 427: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.003844141960144
    2. '=' → logprob: -1.128844141960144
    3. '1' → logprob: -2.0038442611694336
    4. ' ,' → logprob: -2.6288442611694336
    5. ' =' → logprob: -3.0038442611694336
    6. ',' → logprob: -3.2538442611694336
    7. '   ' → logprob: -4.753844261169434
    8. '2' → logprob: -6.253844261169434
    9. ')' → logprob: -6.378844261169434
    10. ' +=' → logprob: -7.253844261169434

Token 428: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.225435271859169
    2. ' ' → logprob: -1.6004352569580078
    3. '2' → logprob: -11.475435256958008
    4. ' one' → logprob: -12.600435256958008
    5. '  ' → logprob: -12.725435256958008
    6. ' ' → logprob: -13.850435256958008
    7. ',' → logprob: -13.975435256958008
    8. '```' → logprob: -14.225435256958008
    9. ')' → logprob: -14.350435256958008
    10. ' ,' → logprob: -14.475435256958008

Token 429: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006812188657931983
    2. ' ' → logprob: -7.625681400299072
    3. '2' → logprob: -8.625680923461914
    4. '3' → logprob: -12.500680923461914
    5. '4' → logprob: -12.938180923461914
    6. ')' → logprob: -13.625680923461914
    7. '```' → logprob: -13.813180923461914
    8. '   ' → logprob: -14.250680923461914
    9. '
' → logprob: -14.250680923461914
    10. '  ' → logprob: -14.500680923461914

Token 430: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2871323823928833
    2. '   ' → logprob: -1.7871323823928833
    3. ' for' → logprob: -3.0371322631835938
    4. '
' → logprob: -4.162132263183594
    5. ':' → logprob: -4.287132263183594
    6. ':
' → logprob: -5.787132263183594
    7. '	for' → logprob: -7.787132263183594
    8. '(' → logprob: -7.912132263183594
    9. '    
' → logprob: -7.912132263183594
    10. '4' → logprob: -8.787132263183594

Token 431: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15162302553653717
    2. '   ' → logprob: -2.526623010635376
    3. ' for' → logprob: -2.901623010635376
    4. '
' → logprob: -5.526623249053955
    5. ':' → logprob: -6.901623249053955
    6. '```' → logprob: -8.276622772216797
    7. '    
' → logprob: -8.401622772216797
    8. '	for' → logprob: -8.776622772216797
    9. ':
' → logprob: -9.901622772216797
    10. ' 
' → logprob: -10.526622772216797

Token 432: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02477719821035862
    2. ' for' → logprob: -4.024777412414551
    3. '   ' → logprob: -5.024777412414551
    4. '
' → logprob: -11.02477741241455
    5. '	for' → logprob: -11.64977741241455
    6. '    
' → logprob: -12.52477741241455
    7. '```' → logprob: -13.39977741241455
    8. ' 
' → logprob: -14.52477741241455
    9. 'range' → logprob: -14.77477741241455
    10. ' ' → logprob: -15.52477741241455

Token 433: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.030577143654227257
    2. 'i' → logprob: -3.5305771827697754
    3. ' u' → logprob: -7.780577182769775
    4. ' x' → logprob: -8.405576705932617
    5. ' v' → logprob: -9.530576705932617
    6. 'u' → logprob: -9.905576705932617
    7. 'x' → logprob: -10.530576705932617
    8. 'v' → logprob: -11.530576705932617
    9. '	i' → logprob: -11.655576705932617
    10. ' ' → logprob: -12.280576705932617

Token 434: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0033914719242602587
    2. 'in' → logprob: -5.753391265869141
    3. ' ' → logprob: -8.50339126586914
    4. ' i' → logprob: -13.12839126586914
    5. '  ' → logprob: -13.12839126586914
    6. '	in' → logprob: -13.12839126586914
    7. '4' → logprob: -14.12839126586914
    8. ')' → logprob: -14.25339126586914
    9. 'range' → logprob: -14.75339126586914
    10. '   ' → logprob: -14.75339126586914

Token 435: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04860427975654602
    2. 'range' → logprob: -3.0486042499542236
    3. ' ' → logprob: -11.548604011535645
    4. '	range' → logprob: -12.173604011535645
    5. '(range' → logprob: -14.048604011535645
    6. '  ' → logprob: -14.548604011535645
    7. '   ' → logprob: -15.173604011535645
    8. '4' → logprob: -15.423604011535645
    9. ' xrange' → logprob: -16.04860496520996
    10. ' rang' → logprob: -16.54860496520996

Token 436: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. '4' → logprob: -13.375001907348633
    3. ' (' → logprob: -15.375001907348633
    4. '(
' → logprob: -15.500001907348633
    5. '<|end|>' → logprob: -20.250001907348633
    6. ',' → logprob: -20.500001907348633
    7. '(i' → logprob: -20.500001907348633
    8. ')' → logprob: -20.625001907348633
    9. '((' → logprob: -20.875001907348633
    10. '3' → logprob: -20.875001907348633

Token 437: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -16.625001907348633
    4. '' → logprob: -17.250001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '(' → logprob: -17.500001907348633
    7. '४' → logprob: -17.812501907348633
    8. '৪' → logprob: -17.875001907348633
    9. '۴' → logprob: -17.875001907348633
    10. '٤' → logprob: -18.312501907348633

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002549024939071387
    2. ',n' → logprob: -8.37525463104248
    3. ' ,' → logprob: -10.62525463104248
    4. '，' → logprob: -17.750255584716797
    5. ',
' → logprob: -18.250255584716797
    6. 'n' → logprob: -18.625255584716797
    7. ',

' → logprob: -19.250255584716797
    8. '   ' → logprob: -19.250255584716797
    9. ',len' → logprob: -19.500255584716797
    10. ' ' → logprob: -19.875255584716797

Token 439: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003179259831085801
    2. ' n' → logprob: -5.75317907333374
    3. '   ' → logprob: -13.753179550170898
    4. '	n' → logprob: -14.753179550170898
    5. ' ' → logprob: -17.5031795501709
    6. ')n' → logprob: -18.1281795501709
    7. '    ' → logprob: -18.3781795501709
    8. '(n' → logprob: -18.5031795501709
    9. ',n' → logprob: -19.3781795501709
    10. '```' → logprob: -19.5031795501709

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09778309613466263
    2. '-' → logprob: -2.472783088684082
    3. '+' → logprob: -5.222783088684082
    4. ' -' → logprob: -5.972783088684082
    5. ' ,' → logprob: -7.472783088684082
    6. '   ' → logprob: -8.722783088684082
    7. ' ' → logprob: -9.597783088684082
    8. ' +' → logprob: -10.972783088684082
    9. '  ' → logprob: -11.472783088684082
    10. '	' → logprob: -11.972783088684082

Token 441: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003601974807679653
    2. ' ' → logprob: -5.628602027893066
    3. '   ' → logprob: -13.878602027893066
    4. '```' → logprob: -15.441102027893066
    5. '  ' → logprob: -15.566102027893066
    6. ' ' → logprob: -15.878602027893066
    7. ')' → logprob: -16.19110107421875
    8. '
' → logprob: -16.62860107421875
    9. '3' → logprob: -17.19110107421875
    10. '	' → logprob: -17.25360107421875

Token 442: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015908108616713434
    2. ' ' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.75015926361084
    4. '```' → logprob: -16.312658309936523
    5. ' ' → logprob: -16.750158309936523
    6. '
' → logprob: -16.875158309936523
    7. '  ' → logprob: -17.062658309936523
    8. ')' → logprob: -17.187658309936523
    9. '２' → logprob: -18.125158309936523
    10. '1' → logprob: -18.125158309936523

Token 443: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03368166461586952
    2. '):
' → logprob: -3.408681631088257
    3. ':' → logprob: -11.158681869506836
    4. ' ):' → logprob: -11.658681869506836
    5. ')' → logprob: -11.908681869506836
    6. '):
' → logprob: -12.408681869506836
    7. '   ' → logprob: -14.033681869506836
    8. ',' → logprob: -14.533681869506836
    9. ' ):
' → logprob: -14.783681869506836
    10. '):

' → logprob: -15.908681869506836

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9462591409683228
    2. '   ' → logprob: -1.0712591409683228
    3. 'print' → logprob: -1.3212591409683228
    4. ' print' → logprob: -6.071259021759033
    5. '	print' → logprob: -9.946259498596191
    6. ':' → logprob: -10.196259498596191
    7. '   ' → logprob: -11.446259498596191
    8. '```' → logprob: -12.196259498596191
    9. '    
' → logprob: -12.446259498596191
    10. '        
' → logprob: -12.571259498596191

Token 445: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00697631761431694
    2. '   ' → logprob: -5.506976127624512
    3. '       ' → logprob: -6.131976127624512
    4. ' print' → logprob: -7.256976127624512
    5. '	print' → logprob: -11.381976127624512
    6. ' ' → logprob: -13.506976127624512
    7. '           ' → logprob: -13.756976127624512
    8. 'if' → logprob: -13.756976127624512
    9. '  ' → logprob: -14.881976127624512
    10. '```' → logprob: -15.006976127624512

Token 446: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.778209353797138e-05
    2. '   ' → logprob: -10.000067710876465
    3. ' print' → logprob: -10.750067710876465
    4. '       ' → logprob: -14.750067710876465
    5. '	print' → logprob: -15.375067710876465
    6. 'if' → logprob: -15.625067710876465
    7. ' ' → logprob: -16.75006866455078
    8. '  ' → logprob: -17.25006866455078
    9. '```' → logprob: -17.87506866455078
    10. '           ' → logprob: -18.25006866455078

Token 447: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.00472666509449482
    2. '   ' → logprob: -6.129726886749268
    3. 'print' → logprob: -7.004726886749268
    4. 'acer' → logprob: -7.754726886749268
    5. 'icer' → logprob: -8.75472640991211
    6. 'iquer' → logprob: -8.75472640991211
    7. '       ' → logprob: -8.87972640991211
    8. 'ic' → logprob: -9.12972640991211
    9. 'ich' → logprob: -9.12972640991211
    10. 'cher' → logprob: -9.62972640991211

Token 448: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39964884519577026
    2. '(i' → logprob: -1.149648904800415
    3. 'print' → logprob: -4.399648666381836
    4. ' i' → logprob: -8.149648666381836
    5. '   ' → logprob: -10.274648666381836
    6. '(' → logprob: -10.524648666381836
    7. '1' → logprob: -10.649648666381836
    8. '{i' → logprob: -10.649648666381836
    9. ' (' → logprob: -12.274648666381836
    10. '3' → logprob: -12.399648666381836

Token 449: ' paire' (ID: 148856)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04514911025762558
    2. 'print' → logprob: -3.170149087905884
    3. ' i' → logprob: -6.545149326324463
    4. '(i' → logprob: -7.545149326324463
    5. '{i' → logprob: -9.670148849487305
    6. ' print' → logprob: -10.045148849487305
    7. '1' → logprob: -10.670148849487305
    8. '3' → logprob: -11.170148849487305
    9. '   ' → logprob: -11.795148849487305
    10. 'p' → logprob: -11.920148849487305

Token 450: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09419958293437958
    2. '(i' → logprob: -2.5941996574401855
    3. ' i' → logprob: -4.2191996574401855
    4. 'print' → logprob: -8.344199180603027
    5. ' (' → logprob: -9.594199180603027
    6. '(' → logprob: -9.719199180603027
    7. '{i' → logprob: -10.219199180603027
    8. '   ' → logprob: -10.219199180603027
    9. '       ' → logprob: -11.594199180603027
    10. '        
' → logprob: -11.969199180603027

Token 451: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.4656579120783135e-05
    2. ' i' → logprob: -10.125044822692871
    3. '   ' → logprob: -13.125044822692871
    4. '(i' → logprob: -14.250044822692871
    5. ')' → logprob: -14.750044822692871
    6. '	i' → logprob: -15.250044822692871
    7. ' ' → logprob: -15.250044822692871
    8. ')i' → logprob: -15.625044822692871
    9. '{i' → logprob: -15.750044822692871
    10. '3' → logprob: -15.875044822692871

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003627627622336149
    2. ' ,' → logprob: -5.753627777099609
    3. ',i' → logprob: -7.878627777099609
    4. 'i' → logprob: -10.25362777709961
    5. ' i' → logprob: -11.25362777709961
    6. '+' → logprob: -11.62862777709961
    7. ',
' → logprob: -12.62862777709961
    8. '   ' → logprob: -12.75362777709961
    9. ' ' → logprob: -13.00362777709961
    10. '```' → logprob: -13.12862777709961

Token 453: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019587287679314613
    2. ' i' → logprob: -6.251958847045898
    3. 'n' → logprob: -11.501958847045898
    4. '   ' → logprob: -11.626958847045898
    5. ' ' → logprob: -12.251958847045898
    6. ')' → logprob: -13.376958847045898
    7. '  ' → logprob: -14.001958847045898
    8. '{i' → logprob: -14.001958847045898
    9. '    ' → logprob: -14.126958847045898
    10. '(i' → logprob: -14.126958847045898

Token 454: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026306571438908577
    2. ' +' → logprob: -3.651306629180908
    3. '+
' → logprob: -13.65130615234375
    4. '+i' → logprob: -13.77630615234375
    5. ' ' → logprob: -14.15130615234375
    6. '   ' → logprob: -14.40130615234375
    7. '+)' → logprob: -14.40130615234375
    8. ')' → logprob: -14.52630615234375
    9. ' +
' → logprob: -15.15130615234375
    10. ' plus' → logprob: -15.40130615234375

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013232150813564658
    2. '2' → logprob: -6.876323223114014
    3. '3' → logprob: -8.501322746276855
    4. ' ' → logprob: -9.376322746276855
    5. '4' → logprob: -13.751322746276855
    6. '   ' → logprob: -14.001322746276855
    7. '  ' → logprob: -15.501322746276855
    8. '```' → logprob: -16.626323699951172
    9. '5' → logprob: -16.751323699951172
    10. '	' → logprob: -16.813823699951172

Token 456: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003739864332601428
    2. ')
' → logprob: -5.628739833831787
    3. '):' → logprob: -9.753740310668945
    4. '       ' → logprob: -10.253740310668945
    5. '):
' → logprob: -10.628740310668945
    6. '   ' → logprob: -11.003740310668945
    7. ' )' → logprob: -13.128740310668945
    8. ',' → logprob: -13.378740310668945
    9. ')
' → logprob: -14.753740310668945
    10. '),' → logprob: -15.003740310668945

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023131117632146925
    2. '   ' → logprob: -9.000231742858887
    3. '           ' → logprob: -10.875231742858887
    4. 'print' → logprob: -11.000231742858887
    5. '```' → logprob: -11.125231742858887
    6. '<|end|>' → logprob: -11.125231742858887
    7. ')' → logprob: -11.375231742858887
    8. '        
' → logprob: -11.750231742858887
    9. '
' → logprob: -12.000231742858887
    10. ':' → logprob: -12.250231742858887

Token 458: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04051026329398155
    2. '       ' → logprob: -3.2905101776123047
    3. ' print' → logprob: -6.040510177612305
    4. '   ' → logprob: -9.415510177612305
    5. '           ' → logprob: -13.540510177612305
    6. '```' → logprob: -13.665510177612305
    7. '	print' → logprob: -14.165510177612305
    8. '
' → logprob: -15.540510177612305
    9. ' ' → logprob: -15.790510177612305
    10. '        
' → logprob: -16.540510177612305

Token 459: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.615255839889869e-05
    2. '(' → logprob: -9.250096321105957
    3. 'i' → logprob: -18.62509536743164
    4. '(
' → logprob: -18.87509536743164
    5. ' (' → logprob: -19.37509536743164
    6. '((' → logprob: -21.50009536743164
    7. '(

' → logprob: -22.25009536743164
    8. '(I' → logprob: -22.37509536743164
    9. ' i' → logprob: -22.50009536743164
    10. '(f' → logprob: -22.62509536743164

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010448360117152333
    2. ' ,' → logprob: -7.501044750213623
    3. ',i' → logprob: -7.626044750213623
    4. '+' → logprob: -13.751045227050781
    5. ')' → logprob: -14.251045227050781
    6. ',
' → logprob: -14.501045227050781
    7. ',end' → logprob: -14.751045227050781
    8. '   ' → logprob: -15.001045227050781
    9. ',)' → logprob: -15.626045227050781
    10. ' ' → logprob: -15.626045227050781

Token 461: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4740985631942749
    2. 'i' → logprob: -0.9740985631942749
    3. ' ' → logprob: -11.474098205566406
    4. ' ' → logprob: -12.599098205566406
    5. ')' → logprob: -13.099098205566406
    6. '   ' → logprob: -13.349098205566406
    7. '	i' → logprob: -13.474098205566406
    8. '  ' → logprob: -13.599098205566406
    9. '    ' → logprob: -14.724098205566406
    10. ' 
' → logprob: -15.099098205566406

Token 462: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009132515988312662
    2. ' +' → logprob: -7.000913143157959
    3. '+)' → logprob: -14.250913619995117
    4. '+i' → logprob: -14.625913619995117
    5. ')' → logprob: -14.875913619995117
    6. '   ' → logprob: -16.125913619995117
    7. '+
' → logprob: -16.500913619995117
    8. ',' → logprob: -17.125913619995117
    9. '+')' → logprob: -17.125913619995117
    10. '+,' → logprob: -17.625913619995117

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. ')' → logprob: -15.375000953674316
    4. '```' → logprob: -17.375001907348633
    5. '2' → logprob: -17.750001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '3' → logprob: -19.875001907348633
    8. '<|end|>' → logprob: -20.000001907348633
    9. '  ' → logprob: -20.750001907348633
    10. '۱' → logprob: -20.875001907348633

Token 464: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -16.000001907348633
    4. '   ' → logprob: -16.625001907348633
    5. ')}' → logprob: -18.250001907348633
    6. '))' → logprob: -19.000001907348633
    7. ')#' → logprob: -19.125001907348633
    8. '),' → logprob: -19.375001907348633
    9. ')`' → logprob: -19.375001907348633
    10. '}' → logprob: -19.750001907348633

Token 465: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39707791805267334
    2. 'print' → logprob: -1.1470779180526733
    3. '<|end|>' → logprob: -5.272078037261963
    4. '   ' → logprob: -5.897078037261963
    5. ' print' → logprob: -6.897078037261963
    6. ')' → logprob: -7.397078037261963
    7. '        
' → logprob: -9.147077560424805
    8. ' ' → logprob: -9.272077560424805
    9. '```' → logprob: -9.772077560424805
    10. '#' (adapté à ' #') → logprob: -9.897077560424805

Token 467: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018661346985027194
    2. '       ' → logprob: -9.125186920166016
    3. ' print' → logprob: -10.375186920166016
    4. 'if' → logprob: -10.375186920166016
    5. '   ' → logprob: -11.250186920166016
    6. 'for' → logprob: -14.750186920166016
    7. '	print' → logprob: -14.875186920166016
    8. ' ' → logprob: -15.000186920166016
    9. '           ' → logprob: -15.375186920166016
    10. '#' → logprob: -15.750186920166016

Token 468: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.018930815160274506
    2. '   ' → logprob: -5.393930912017822
    3. 'print' → logprob: -5.393930912017822
    4. 'cher' → logprob: -5.768930912017822
    5. '#' → logprob: -6.018930912017822
    6. 'r' → logprob: -6.768930912017822
    7. 'rer' → logprob: -7.268930912017822
    8. 'icer' → logprob: -7.643930912017822
    9. 'acer' → logprob: -8.393930435180664
    10. '       ' → logprob: -8.518930435180664

Token 469: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004231547005474567
    2. '(' → logprob: -5.8792314529418945
    3. ' (' → logprob: -6.6292314529418945
    4. ' i' → logprob: -10.129231452941895
    5. '(n' → logprob: -10.879231452941895
    6. '("' → logprob: -11.129231452941895
    7. 'i' → logprob: -11.629231452941895
    8. '('' → logprob: -12.379231452941895
    9. '((' → logprob: -12.504231452941895
    10. ' ' → logprob: -12.504231452941895

Token 470: ' paire' (ID: 148856)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09458152204751968
    2. '(i' → logprob: -2.4695816040039062
    3. 'print' → logprob: -6.344581604003906
    4. ' i' → logprob: -6.594581604003906
    5. '(' → logprob: -6.719581604003906
    6. '1' → logprob: -7.594581604003906
    7. ' (' → logprob: -8.719581604003906
    8. '"' → logprob: -8.844581604003906
    9. ' ' → logprob: -8.969581604003906
    10. '   ' → logprob: -9.969581604003906

Token 471: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02703283354640007
    2. ' (' → logprob: -3.6520328521728516
    3. '(' → logprob: -7.277032852172852
    4. '(n' → logprob: -10.652032852172852
    5. ' i' → logprob: -12.152032852172852
    6. '((' → logprob: -12.777032852172852
    7. '   ' → logprob: -12.777032852172852
    8. ' ' → logprob: -12.902032852172852
    9. '(
' → logprob: -14.402032852172852
    10. '("' → logprob: -14.777032852172852

Token 472: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001943984068930149
    2. ' i' → logprob: -6.376944065093994
    3. '1' → logprob: -9.001943588256836
    4. '   ' → logprob: -10.126943588256836
    5. 'n' → logprob: -10.251943588256836
    6. ' ' → logprob: -10.751943588256836
    7. '3' → logprob: -12.376943588256836
    8. '(i' → logprob: -12.626943588256836
    9. '  ' → logprob: -13.001943588256836
    10. '2' → logprob: -13.126943588256836

Token 473: '+n' (ID: 87683)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000846671755425632
    2. ',' → logprob: -7.750846862792969
    3. ' +' → logprob: -8.000846862792969
    4. '+,' → logprob: -9.750846862792969
    5. '+
' → logprob: -11.625846862792969
    6. '+i' → logprob: -12.625846862792969
    7. ' ,' → logprob: -12.875846862792969
    8. ' ' → logprob: -13.125846862792969
    9. '-' → logprob: -13.625846862792969
    10. '```' → logprob: -13.875846862792969

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009433403611183167
    2. '+' → logprob: -5.384433269500732
    3. ' ,' → logprob: -6.134433269500732
    4. ')' → logprob: -6.634433269500732
    5. '//' → logprob: -7.634433269500732
    6. '-' → logprob: -7.884433269500732
    7. '```' → logprob: -9.13443374633789
    8. ',i' → logprob: -9.38443374633789
    9. ' ' → logprob: -9.75943374633789
    10. '+,' → logprob: -10.63443374633789

Token 475: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2812037169933319
    2. ' i' → logprob: -1.4062037467956543
    3. ' ' → logprob: -10.781203269958496
    4. '   ' → logprob: -11.906203269958496
    5. ' (' → logprob: -11.906203269958496
    6. ' ' → logprob: -12.031203269958496
    7. ' n' → logprob: -12.406203269958496
    8. 'n' → logprob: -13.031203269958496
    9. ')' → logprob: -13.156203269958496
    10. '(i' → logprob: -13.656203269958496

Token 476: '+n' (ID: 87683)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0183174479752779
    2. '+n' → logprob: -4.018317222595215
    3. ' +' → logprob: -8.893317222595215
    4. '+,' → logprob: -10.768317222595215
    5. '+i' → logprob: -12.393317222595215
    6. '+
' → logprob: -13.143317222595215
    7. ',' → logprob: -13.643317222595215
    8. '+k' → logprob: -15.268317222595215
    9. '+s' → logprob: -15.393317222595215
    10. '＋' → logprob: -15.643317222595215

Token 477: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0014255946734920144
    2. ' +' → logprob: -6.626425743103027
    3. '+)' → logprob: -9.626425743103027
    4. ')' → logprob: -11.001425743103027
    5. '+
' → logprob: -11.626425743103027
    6. '1' → logprob: -12.126425743103027
    7. ')+' → logprob: -14.876425743103027
    8. ' plus' → logprob: -15.126425743103027
    9. '+i' → logprob: -15.126425743103027
    10. '+,' → logprob: -15.251425743103027

Token 478: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '2' → logprob: -16.125
    4. ')' → logprob: -17.875
    5. '```' → logprob: -18.375
    6. '   ' → logprob: -20.5
    7. '+' → logprob: -20.5
    8. '۱' → logprob: -20.8125
    9. '  ' → logprob: -21.125
    10. '3' → logprob: -21.1875

Token 479: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.23917081207037e-05
    2. ')
' → logprob: -10.250041961669922
    3. ' )' → logprob: -12.000041961669922
    4. '   ' → logprob: -15.250041961669922
    5. ')i' → logprob: -16.000041961669922
    6. '")' → logprob: -16.375041961669922
    7. '))' → logprob: -16.500041961669922
    8. '),' → logprob: -17.000041961669922
    9. ')}' → logprob: -17.000041961669922
    10. 'print' → logprob: -17.125041961669922

Token 480: '       ' (ID: 309)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.050836995244026184
    2. 'print' → logprob: -4.30083703994751
    3. '()' → logprob: -4.55083703994751
    4. ')' → logprob: -5.17583703994751
    5. '(n' → logprob: -5.30083703994751
    6. '(' → logprob: -5.55083703994751
    7. ' (' → logprob: -5.67583703994751
    8. '   ' → logprob: -6.05083703994751
    9. '       ' → logprob: -6.30083703994751
    10. '(print' → logprob: -6.67583703994751

Token 481: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026263119652867317
    2. '(i' → logprob: -6.002626419067383
    3. 'i' → logprob: -9.752626419067383
    4. ' print' → logprob: -10.002626419067383
    5. '(print' → logprob: -10.252626419067383
    6. '(' → logprob: -11.627626419067383
    7. ' i' → logprob: -13.627626419067383
    8. '.print' → logprob: -14.377626419067383
    9. '(n' → logprob: -14.877626419067383
    10. '   ' → logprob: -15.377626419067383

Token 482: ' Cela' (ID: 44403)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7968066206085496e-05
    2. ' print' → logprob: -10.500027656555176
    3. ')' → logprob: -15.625027656555176
    4. '(print' → logprob: -16.000028610229492
    5. '```' → logprob: -16.500028610229492
    6. '   ' → logprob: -16.750028610229492
    7. '.print' → logprob: -17.500028610229492
    8. '       ' → logprob: -18.625028610229492
    9. 'pr' → logprob: -18.750028610229492
    10. '	print' → logprob: -19.250028610229492

Token 483: ' crée' (ID: 102256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 484: ' un' (ID: 537)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34028124809265137
    2. ' ' → logprob: -2.2152812480926514
    3. '(i' → logprob: -2.4652812480926514
    4. 'i' → logprob: -2.9652812480926514
    5. '"' → logprob: -4.8402814865112305
    6. 'n' → logprob: -5.3402814865112305
    7. ' (' → logprob: -5.3402814865112305
    8. ')' → logprob: -5.5902814865112305
    9. '(n' → logprob: -5.5902814865112305
    10. ' )' → logprob: -5.7152814865112305

Token 485: ' dé' (ID: 2393)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9896654486656189
    2. ' lien' → logprob: -1.6146655082702637
    3. ' i' → logprob: -2.6146655082702637
    4. 'es' → logprob: -2.9896655082702637
    5. ' "' → logprob: -3.1146655082702637
    6. 'pont' → logprob: -3.2396655082702637
    7. 'i' → logprob: -3.6146655082702637
    8. '"' → logprob: -3.6146655082702637
    9. ')' → logprob: -3.6146655082702637
    10. ' espace' → logprob: -3.7396655082702637

Token 486: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.0009538597078062594
    2. 'cale' → logprob: -7.125953674316406
    3. 'double' → logprob: -10.000953674316406
    4. 'lai' → logprob: -10.250953674316406
    5. 'caler' → logprob: -11.500953674316406
    6. 'ca' → logprob: -11.625953674316406
    7. 'print' → logprob: -11.625953674316406
    8. 'c' → logprob: -11.625953674316406
    9. 'lay' → logprob: -11.875953674316406
    10. 'li' → logprob: -12.375953674316406

Token 487: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.0006145051447674632
    2. ' i' → logprob: -8.750614166259766
    3. 'ement' → logprob: -9.000614166259766
    4. 'e' → logprob: -9.125614166259766
    5. 'i' → logprob: -9.375614166259766
    6. ' age' → logprob: -9.875614166259766
    7. '   ' → logprob: -11.000614166259766
    8. 'é' → logprob: -11.125614166259766
    9. 'tage' → logprob: -11.125614166259766
    10. ' ' → logprob: -11.750614166259766

Token 488: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6131557822227478
    2. '(' → logprob: -1.1131558418273926
    3. ' i' → logprob: -3.1131558418273926
    4. ' (' → logprob: -3.2381558418273926
    5. ' ,' → logprob: -3.6131558418273926
    6. ',' → logprob: -4.488155841827393
    7. ' ' → logprob: -5.738155841827393
    8. 'i' → logprob: -6.363155841827393
    9. '(n' → logprob: -6.863155841827393
    10. '+' → logprob: -7.488155841827393

Token 489: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.34928950667381287
    2. 'n' → logprob: -1.2242895364761353
    3. ' ' → logprob: -7.224289417266846
    4. '32' → logprob: -11.099289894104004
    5. '	n' → logprob: -11.224289894104004
    6. ' ' → logprob: -11.349289894104004
    7. '  ' → logprob: -11.599289894104004
    8. '2' → logprob: -11.724289894104004
    9. '10' → logprob: -11.974289894104004
    10. ')n' → logprob: -12.224289894104004

Token 490: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.502277135848999
    2. ')' → logprob: -1.502277135848999
    3. ' ,' → logprob: -2.377277135848999
    4. '<|end|>' → logprob: -3.502277135848999
    5. '   ' → logprob: -4.377277374267578
    6. '+' → logprob: -4.627277374267578
    7. ' )' → logprob: -4.877277374267578
    8. ',i' → logprob: -5.127277374267578
    9. ' ' → logprob: -6.002277374267578
    10. '```' → logprob: -6.252277374267578

Token 491: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44237953424453735
    2. ' i' → logprob: -1.0673794746398926
    3. ')' → logprob: -5.192379474639893
    4. ' )' → logprob: -6.192379474639893
    5. 'print' → logprob: -6.567379474639893
    6. '(i' → logprob: -6.567379474639893
    7. 'n' → logprob: -7.317379474639893
    8. ' ' → logprob: -7.567379474639893
    9. ' n' → logprob: -8.69237995147705
    10. 'l' → logprob: -8.69237995147705

Token 492: ''autre' (ID: 52145)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05594673380255699
    2. ' i' → logprob: -2.9309468269348145
    3. 'print' → logprob: -7.6809468269348145
    4. '```' → logprob: -9.180946350097656
    5. ')' → logprob: -9.305946350097656
    6. '`' → logprob: -9.930946350097656
    7. ''i' → logprob: -10.055946350097656
    8. ' print' → logprob: -10.180946350097656
    9. ''espace' → logprob: -10.430946350097656
    10. 'a' → logprob: -10.555946350097656

Token 493: ' copie' (ID: 134141)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48666784167289734
    2. 'n' → logprob: -1.8616678714752197
    3. '+n' → logprob: -2.8616678714752197
    4. ' n' → logprob: -3.1116678714752197
    5. ' ' → logprob: -3.2366678714752197
    6. ')' → logprob: -3.3616678714752197
    7. ' +' → logprob: -3.9866678714752197
    8. '  ' → logprob: -4.611667633056641
    9. ' ,' → logprob: -5.111667633056641
    10. ',' → logprob: -5.236667633056641

Token 494: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050091877579689026
    2. '       ' → logprob: -3.9250919818878174
    3. '   ' → logprob: -4.050091743469238
    4. ',' → logprob: -5.675091743469238
    5. ' )' → logprob: -6.050091743469238
    6. ')
' → logprob: -6.425091743469238
    7. '(i' → logprob: -6.675091743469238
    8. '<|end|>' → logprob: -6.925091743469238
    9. '[i' → logprob: -8.300091743469238
    10. '(' → logprob: -8.550091743469238

Token 495: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1428142488002777
    2. ' i' → logprob: -2.0178141593933105
    3. 'l' → logprob: -9.767814636230469
    4. ')' → logprob: -10.767814636230469
    5. ' la' → logprob: -10.892814636230469
    6. ' l' → logprob: -11.892814636230469
    7. ' ' → logprob: -12.142814636230469
    8. 'vertices' → logprob: -12.517814636230469
    9. '```' → logprob: -12.642814636230469
    10. 'print' → logprob: -13.017814636230469

Token 496: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5768004655838013
    2. 'n' → logprob: -1.7018004655838013
    3. ''espace' → logprob: -2.5768003463745117
    4. ')' → logprob: -3.3268003463745117
    5. '+' → logprob: -3.4518003463745117
    6. ''i' → logprob: -3.8268003463745117
    7. ''' → logprob: -4.326800346374512
    8. 'range' → logprob: -4.576800346374512
    9. ''esp' → logprob: -4.701800346374512
    10. 'esp' → logprob: -4.826800346374512

Token 497: 'ice' (ID: 603)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8486295342445374
    2. 'ice' → logprob: -1.2236294746398926
    3. 'ices' → logprob: -1.7236294746398926
    4. 'ex' → logprob: -2.3486294746398926
    5. 'ic' → logprob: -6.848629474639893
    6. '```' → logprob: -7.473629474639893
    7. '(i' → logprob: -8.34862995147705
    8. ' i' → logprob: -8.47362995147705
    9. 'e' → logprob: -8.59862995147705
    10. 'exe' → logprob: -8.84862995147705

Token 498: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35054609179496765
    2. '       ' → logprob: -1.97554612159729
    3. '(i' → logprob: -2.47554612159729
    4. 'print' → logprob: -3.35054612159729
    5. ')
' → logprob: -4.725545883178711
    6. '   ' → logprob: -5.225545883178711
    7. ',' → logprob: -5.225545883178711
    8. '(n' → logprob: -5.350545883178711
    9. '(' → logprob: -5.600545883178711
    10. '```' → logprob: -5.850545883178711

Token 499: '       ' (ID: 309)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.41000357270240784
    2. '(' → logprob: -2.035003662109375
    3. 'print' → logprob: -2.285003662109375
    4. ' (' → logprob: -2.910003662109375
    5. ' i' → logprob: -4.660003662109375
    6. ')' → logprob: -4.660003662109375
    7. ' print' → logprob: -5.285003662109375
    8. 'i' → logprob: -5.535003662109375
    9. '   ' → logprob: -5.535003662109375
    10. '(
' → logprob: -5.785003662109375

Token 500: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.2200749754119897e-06
    2. ' print' → logprob: -13.125001907348633
    3. '(print' → logprob: -16.500001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '       ' → logprob: -18.000001907348633
    6. '.print' → logprob: -18.250001907348633
    7. 'pr' → logprob: -18.875001907348633
    8. '```' → logprob: -19.375001907348633
    9. '	print' → logprob: -19.750001907348633
    10. ')' → logprob: -19.875001907348633

Token 501: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03809806704521179
    2. 'i' → logprob: -3.288098096847534
    3. '(' → logprob: -10.038098335266113
    4. ' i' → logprob: -11.413098335266113
    5. '{i' → logprob: -13.663098335266113
    6. ' (' → logprob: -15.163098335266113
    7. '   ' → logprob: -15.413098335266113
    8. '(
' → logprob: -16.038097381591797
    9. '	i' → logprob: -16.288097381591797
    10. ')' → logprob: -17.538097381591797

Token 502: '+n' (ID: 87683)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6104443669319153
    2. '+n' → logprob: -1.3604443073272705
    3. ' +' → logprob: -1.6104443073272705
    4. ',' → logprob: -7.61044454574585
    5. '+i' → logprob: -10.860444068908691
    6. '+,' → logprob: -11.360444068908691
    7. '+
' → logprob: -12.485444068908691
    8. ' ,' → logprob: -12.735444068908691
    9. ' ' → logprob: -12.860444068908691
    10. ',n' → logprob: -13.360444068908691

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011445893906056881
    2. ' ,' → logprob: -4.511445999145508
    3. ',i' → logprob: -8.511445999145508
    4. '+' → logprob: -8.886445999145508
    5. ')' → logprob: -11.261445999145508
    6. ' ' → logprob: -11.886445999145508
    7. '   ' → logprob: -12.011445999145508
    8. '+,' → logprob: -12.136445999145508
    9. '),' → logprob: -12.261445999145508
    10. ',
' → logprob: -12.386445999145508

Token 504: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931559443473816
    2. ' i' → logprob: -0.6931559443473816
    3. '   ' → logprob: -12.443156242370605
    4. ' ' → logprob: -12.943156242370605
    5. '    ' → logprob: -14.943156242370605
    6. ' ' → logprob: -15.193156242370605
    7. 'n' → logprob: -15.193156242370605
    8. '	i' → logprob: -15.193156242370605
    9. ' 
' → logprob: -15.318156242370605
    10. ')' → logprob: -15.318156242370605

Token 505: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.016518034040927887
    2. '+' → logprob: -4.1415181159973145
    3. ' +' → logprob: -7.6415181159973145
    4. '   ' → logprob: -14.266517639160156
    5. '+
' → logprob: -14.266517639160156
    6. 'n' → logprob: -14.516517639160156
    7. '+i' → logprob: -14.891517639160156
    8. '```' → logprob: -15.766517639160156
    9. ',n' → logprob: -15.891517639160156
    10. ')+' → logprob: -16.016517639160156

Token 506: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00017505438881926239
    2. ' +' → logprob: -8.750175476074219
    3. '1' → logprob: -11.500175476074219
    4. '+)' → logprob: -12.500175476074219
    5. '+
' → logprob: -13.500175476074219
    6. ')' → logprob: -13.875175476074219
    7. ')+' → logprob: -15.250175476074219
    8. '   ' → logprob: -17.87517547607422
    9. '[' → logprob: -18.00017547607422
    10. '+

' → logprob: -18.37517547607422

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.875001907348633
    3. '+' → logprob: -14.125001907348633
    4. ')' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.125001907348633
    6. 'n' → logprob: -18.750001907348633
    7. '2' → logprob: -18.750001907348633
    8. '```' → logprob: -18.750001907348633
    9. '۱' → logprob: -19.000001907348633
    10. 'i' → logprob: -19.437501907348633

Token 508: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.875003814697266
    4. '   ' → logprob: -16.875003814697266
    5. ')}' → logprob: -17.500003814697266
    6. '))' → logprob: -17.875003814697266
    7. '<|end|>' → logprob: -18.125003814697266
    8. ')#' → logprob: -18.375003814697266
    9. '}' → logprob: -18.625003814697266
    10. '),' → logprob: -19.000003814697266

Token 509: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 510: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4364653527736664
    2. '   ' → logprob: -1.3114653825759888
    3. 'print' → logprob: -3.561465263366699
    4. '<|end|>' → logprob: -3.561465263366699
    5. ')' → logprob: -4.186465263366699
    6. '#' (adapté à ' #') → logprob: -4.936465263366699
    7. '```' → logprob: -6.686465263366699
    8. ' ' → logprob: -6.811465263366699
    9. '  ' → logprob: -8.1864652633667
    10. '    ' → logprob: -8.5614652633667

Token 511: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0047743613831698895
    2. 'if' → logprob: -5.629774570465088
    3. '#' → logprob: -6.879774570465088
    4. '   ' → logprob: -10.37977409362793
    5. '       ' → logprob: -10.37977409362793
    6. 'break' → logprob: -10.62977409362793
    7. ' print' → logprob: -10.87977409362793
    8. '#print' → logprob: -11.00477409362793
    9. 'pass' → logprob: -12.62977409362793
    10. '
' → logprob: -12.87977409362793

Token 512: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0020650913938879967
    2. '#' → logprob: -6.877065181732178
    3. 'f' → logprob: -7.127065181732178
    4. '   ' → logprob: -10.00206470489502
    5. 'fic' → logprob: -10.50206470489502
    6. 'ichier' → logprob: -10.75206470489502
    7. 'r' → logprob: -10.75206470489502
    8. 'Afficher' → logprob: -10.75206470489502
    9. 'ichage' → logprob: -11.50206470489502
    10. 'cher' → logprob: -11.50206470489502

Token 513: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00922589935362339
    2. '(n' → logprob: -4.759225845336914
    3. '(' → logprob: -7.509225845336914
    4. 'i' → logprob: -10.509225845336914
    5. '((' → logprob: -11.009225845336914
    6. 'n' → logprob: -11.759225845336914
    7. ' (' → logprob: -12.509225845336914
    8. '(
' → logprob: -13.509225845336914
    9. '("' → logprob: -13.509225845336914
    10. '1' → logprob: -13.884225845336914

Token 514: ' paire' (ID: 148856)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3933086395263672
    2. 'print' → logprob: -1.2683086395263672
    3. 'n' → logprob: -3.893308639526367
    4. '(i' → logprob: -4.143308639526367
    5. '(n' → logprob: -6.018308639526367
    6. 'pair' → logprob: -6.643308639526367
    7. ' i' → logprob: -7.018308639526367
    8. '2' → logprob: -7.643308639526367
    9. ' print' → logprob: -7.643308639526367
    10. '1' → logprob: -7.768308639526367

Token 515: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00413444172590971
    2. '(n' → logprob: -5.629134654998779
    3. '(' → logprob: -7.629134654998779
    4. '   ' → logprob: -11.504134178161621
    5. ' (' → logprob: -11.629134178161621
    6. '((' → logprob: -11.629134178161621
    7. 'i' → logprob: -11.629134178161621
    8. '(
' → logprob: -11.879134178161621
    9. 'n' → logprob: -13.254134178161621
    10. '       ' → logprob: -14.879134178161621

Token 516: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001322976779192686
    2. '1' → logprob: -7.7513227462768555
    3. ' i' → logprob: -8.001322746276855
    4. '3' → logprob: -8.251322746276855
    5. 'n' → logprob: -9.126322746276855
    6. '   ' → logprob: -9.251322746276855
    7. '2' → logprob: -10.376322746276855
    8. ' ' → logprob: -11.251322746276855
    9. '(i' → logprob: -11.376322746276855
    10. '4' → logprob: -11.501322746276855

Token 517: '+n' (ID: 87683)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003401451976969838
    2. ' ,' → logprob: -5.753401279449463
    3. ',i' → logprob: -8.628401756286621
    4. ',n' → logprob: -10.628401756286621
    5. 'n' → logprob: -12.503401756286621
    6. ' i' → logprob: -12.628401756286621
    7. ' ' → logprob: -12.878401756286621
    8. '1' → logprob: -12.878401756286621
    9. 'i' → logprob: -13.253401756286621
    10. '+i' → logprob: -13.503401756286621

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.509738564491272
    2. '+n' → logprob: -1.509738564491272
    3. '+' → logprob: -1.759738564491272
    4. ' +' → logprob: -5.634738445281982
    5. ' ,' → logprob: -6.634738445281982
    6. '+,' → logprob: -7.259738445281982
    7. ',n' → logprob: -8.00973892211914
    8. '+i' → logprob: -8.00973892211914
    9. ')' → logprob: -12.13473892211914
    10. '+
' → logprob: -12.25973892211914

Token 519: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3364538550376892
    2. ' i' → logprob: -1.461453914642334
    3. '1' → logprob: -3.586453914642334
    4. 'n' → logprob: -4.461453914642334
    5. ' n' → logprob: -4.711453914642334
    6. ' ' → logprob: -5.586453914642334
    7. ')' → logprob: -6.961453914642334
    8. ',' → logprob: -8.211453437805176
    9. '2' → logprob: -8.711453437805176
    10. '3' → logprob: -9.711453437805176

Token 520: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.40345340967178345
    2. ',' → logprob: -1.6534533500671387
    3. '+' → logprob: -2.0284533500671387
    4. '+i' → logprob: -5.028453350067139
    5. ' +' → logprob: -6.903453350067139
    6. '+,' → logprob: -7.028453350067139
    7. ')' → logprob: -8.903453826904297
    8. ' ,' → logprob: -8.903453826904297
    9. ',n' → logprob: -9.028453826904297
    10. 'n' → logprob: -9.403453826904297

Token 521: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5097525715827942
    2. ',' → logprob: -1.3847525119781494
    3. '+' → logprob: -2.0097525119781494
    4. '+i' → logprob: -5.1347527503967285
    5. ' ,' → logprob: -6.0097527503967285
    6. ' )' → logprob: -6.2597527503967285
    7. ' +' → logprob: -6.7597527503967285
    8. '+n' → logprob: -6.7597527503967285
    9. '),' → logprob: -7.1347527503967285
    10. '   ' → logprob: -7.7597527503967285

Token 522: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018774164840579033
    2. ',' → logprob: -4.893774032592773
    3. ' print' → logprob: -5.143774032592773
    4. '   ' → logprob: -5.643774032592773
    5. ')' → logprob: -7.018774032592773
    6. '```' → logprob: -7.768774032592773
    7. '(print' → logprob: -9.268774032592773
    8. ' ,' → logprob: -9.518774032592773
    9. ')
' → logprob: -9.768774032592773
    10. '1' → logprob: -10.393774032592773

Token 523: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7625375986099243
    2. '1' → logprob: -1.8875375986099243
    3. 'print' → logprob: -2.0125374794006348
    4. ' ' → logprob: -2.0125374794006348
    5. ')' → logprob: -3.5125374794006348
    6. ' )' → logprob: -3.6375374794006348
    7. '   ' → logprob: -3.8875374794006348
    8. ' ,' → logprob: -4.137537479400635
    9. ',' → logprob: -4.762537479400635
    10. ' )
' → logprob: -5.012537479400635

Token 524: ' Connect' (ID: 16834)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023371264338493347
    2. ' print' → logprob: -3.7733712196350098
    3. '       ' → logprob: -9.148371696472168
    4. '   ' → logprob: -10.898371696472168
    5. '	print' → logprob: -14.273371696472168
    6. '    ' → logprob: -16.64837074279785
    7. '.print' → logprob: -16.89837074279785
    8. '```' → logprob: -17.39837074279785
    9. ' ' → logprob: -17.64837074279785
    10. '  ' → logprob: -17.89837074279785

Token 525: 'e' (ID: 68)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2281300574541092
    2. ' ' → logprob: -2.9781301021575928
    3. ' n' → logprob: -3.4781301021575928
    4. 'e' → logprob: -3.6031301021575928
    5. 'er' → logprob: -3.8531301021575928
    6. '+' → logprob: -4.228129863739014
    7. 'n' → logprob: -4.728129863739014
    8. '(' → logprob: -4.728129863739014
    9. ' print' → logprob: -4.853129863739014
    10. 'é' → logprob: -4.978129863739014

Token 526: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3511028587818146
    2. ' ' → logprob: -1.2261028289794922
    3. '(' → logprob: -6.476102828979492
    4. ' n' → logprob: -7.726102828979492
    5. ' (' → logprob: -7.976102828979492
    6. 'n' → logprob: -9.101102828979492
    7. ' ,' → logprob: -9.601102828979492
    8. ' i' → logprob: -10.101102828979492
    9. ',' → logprob: -10.726102828979492
    10. ')' → logprob: -10.976102828979492

Token 527: ' sommet' (ID: 130502)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005778160993941128
    2. ' ' → logprob: -7.625577926635742
    3. 'n' → logprob: -9.500577926635742
    4. 'i' → logprob: -11.750577926635742
    5. '(' → logprob: -12.625577926635742
    6. ' n' → logprob: -13.375577926635742
    7. 'print' → logprob: -14.375577926635742
    8. ' i' → logprob: -14.875577926635742
    9. '   ' → logprob: -15.125577926635742
    10. ' (' → logprob: -15.500577926635742

Token 528: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01705644465982914
    2. ',' → logprob: -4.392056465148926
    3. ' ' → logprob: -5.517056465148926
    4. ' ,' → logprob: -8.142056465148926
    5. 'n' → logprob: -9.142056465148926
    6. '(' → logprob: -10.142056465148926
    7. '```' → logprob: -10.392056465148926
    8. ' n' → logprob: -11.017056465148926
    9. '   ' → logprob: -12.017056465148926
    10. '`,' → logprob: -12.267056465148926

Token 529: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.290784560609609e-05
    2. ' ' → logprob: -9.750072479248047
    3. ',' → logprob: -11.625072479248047
    4. 'n' → logprob: -12.875072479248047
    5. '(' → logprob: -13.500072479248047
    6. '```' → logprob: -14.375072479248047
    7. '   ' → logprob: -15.000072479248047
    8. ' ,' → logprob: -15.250072479248047
    9. '3' → logprob: -15.375072479248047
    10. 'i' → logprob: -16.375072479248047

Token 530: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.134578138589859
    2. '+' → logprob: -2.259578227996826
    3. ',' → logprob: -4.009578227996826
    4. ' +' → logprob: -5.759578227996826
    5. '+i' → logprob: -9.634577751159668
    6. ',n' → logprob: -10.009577751159668
    7. ' ,' → logprob: -10.259577751159668
    8. '+,' → logprob: -10.259577751159668
    9. '   ' → logprob: -10.634577751159668
    10. 'n' → logprob: -11.509577751159668

Token 531: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006305580958724022
    2. ' ,' → logprob: -5.131305694580078
    3. '   ' → logprob: -8.256305694580078
    4. 'print' → logprob: -10.256305694580078
    5. ',n' → logprob: -10.756305694580078
    6. ')' → logprob: -11.006305694580078
    7. '1' → logprob: -11.131305694580078
    8. ',
' → logprob: -11.506305694580078
    9. '+' → logprob: -12.131305694580078
    10. ' print' → logprob: -12.506305694580078

Token 532: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007620233576744795
    2. ' i' → logprob: -4.882620334625244
    3. '(i' → logprob: -12.507619857788086
    4. ' ' → logprob: -12.507619857788086
    5. '   ' → logprob: -13.132619857788086
    6. '```' → logprob: -14.007619857788086
    7. '<|end|>' → logprob: -14.132619857788086
    8. '{i' → logprob: -14.382619857788086
    9. '
' → logprob: -14.882619857788086
    10. '	i' → logprob: -15.007619857788086

Token 533: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.0035621810238808393
    2. '+' → logprob: -6.128561973571777
    3. ' +' → logprob: -6.628561973571777
    4. ',' → logprob: -10.003561973571777
    5. '```' → logprob: -12.628561973571777
    6. '+i' → logprob: -13.003561973571777
    7. '   ' → logprob: -13.253561973571777
    8. ',n' → logprob: -14.503561973571777
    9. ')' → logprob: -15.628561973571777
    10. ' ,' → logprob: -15.753561973571777

Token 534: ' 
' (ID: 793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15387611091136932
    2. ')
' → logprob: -2.9038760662078857
    3. '       ' → logprob: -3.6538760662078857
    4. ',' → logprob: -3.6538760662078857
    5. '   ' → logprob: -4.153876304626465
    6. 'print' → logprob: -4.403876304626465
    7. ' )' → logprob: -5.653876304626465
    8. ' print' → logprob: -6.528876304626465
    9. ' )
' → logprob: -6.903876304626465
    10. '```' → logprob: -7.278876304626465

Token 535: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9159647226333618
    2. 'print' → logprob: -1.5409647226333618
    3. '       ' → logprob: -1.7909647226333618
    4. '   ' → logprob: -2.0409646034240723
    5. ' print' → logprob: -3.2909646034240723
    6. ',' → logprob: -3.5409646034240723
    7. ' )' → logprob: -4.415964603424072
    8. ' ,' → logprob: -5.290964603424072
    9. ')
' → logprob: -6.165964603424072
    10. '```' → logprob: -7.040964603424072

Token 536: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005582740413956344
    2. ' print' → logprob: -7.500558376312256
    3. '   ' → logprob: -12.250557899475098
    4. '       ' → logprob: -15.000557899475098
    5. '.print' → logprob: -17.250558853149414
    6. '	print' → logprob: -17.625558853149414
    7. '```' → logprob: -17.875558853149414
    8. ',' → logprob: -18.250558853149414
    9. '(print' → logprob: -18.250558853149414
    10. '    ' → logprob: -18.500558853149414

Token 537: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028311500791460276
    2. '1' → logprob: -5.877830982208252
    3. '(n' → logprob: -10.62783145904541
    4. ' ' → logprob: -13.62783145904541
    5. ' (' → logprob: -15.12783145904541
    6. '((' → logprob: -15.62783145904541
    7. '(i' → logprob: -15.87783145904541
    8. 'n' → logprob: -16.127830505371094
    9. '   ' → logprob: -16.877830505371094
    10. '(
' → logprob: -17.002830505371094

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.625012397766113
    3. '(' → logprob: -12.875012397766113
    4. '   ' → logprob: -14.875012397766113
    5. 'n' → logprob: -15.875012397766113
    6. '  ' → logprob: -17.625011444091797
    7. '"' → logprob: -18.000011444091797
    8. '１' → logprob: -18.375011444091797
    9. '     ' → logprob: -18.500011444091797
    10. '`' → logprob: -18.500011444091797

Token 539: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.02442406862974167
    2. '+' → logprob: -3.7744240760803223
    3. ' +' → logprob: -6.774424076080322
    4. ',' → logprob: -11.024423599243164
    5. '+,' → logprob: -11.649423599243164
    6. ',n' → logprob: -12.774423599243164
    7. '+i' → logprob: -13.024423599243164
    8. '   ' → logprob: -13.524423599243164
    9. '+
' → logprob: -13.649423599243164
    10. ' ,' → logprob: -14.649423599243164

Token 540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004037402104586363
    2. ' ,' → logprob: -8.12540340423584
    3. ',i' → logprob: -9.37540340423584
    4. ',
' → logprob: -11.25040340423584
    5. ',n' → logprob: -12.00040340423584
    6. ')' → logprob: -13.75040340423584
    7. '+' → logprob: -14.37540340423584
    8. ',

' → logprob: -14.50040340423584
    9. ',end' → logprob: -15.37540340423584
    10. '+,' → logprob: -15.75040340423584

Token 541: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10021087527275085
    2. ' i' → logprob: -2.3502109050750732
    3. '   ' → logprob: -13.850211143493652
    4. '	i' → logprob: -14.350211143493652
    5. '(i' → logprob: -14.350211143493652
    6. ' ' → logprob: -14.600211143493652
    7. ' ' → logprob: -15.350211143493652
    8. ')' → logprob: -15.350211143493652
    9. '    ' → logprob: -15.475211143493652
    10. ' 
' → logprob: -15.600211143493652

Token 542: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.0009627926629036665
    2. '+' → logprob: -7.000962734222412
    3. ' +' → logprob: -10.00096321105957
    4. '+i' → logprob: -12.37596321105957
    5. ',' → logprob: -13.62596321105957
    6. ',n' → logprob: -16.12596321105957
    7. '   ' → logprob: -16.87596321105957
    8. ')' → logprob: -17.00096321105957
    9. '+,' → logprob: -17.12596321105957
    10. ' ' → logprob: -17.25096321105957

Token 543: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.546478935983032e-05
    2. ')
' → logprob: -11.000025749206543
    3. ' )' → logprob: -11.875025749206543
    4. '   ' → logprob: -13.875025749206543
    5. '       ' → logprob: -16.000024795532227
    6. '+' → logprob: -16.000024795532227
    7. ')`' → logprob: -16.125024795532227
    8. '))' → logprob: -16.500024795532227
    9. ')")' → logprob: -17.000024795532227
    10. ')}' → logprob: -17.125024795532227

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2764205038547516
    2. '<|end|>' → logprob: -1.5264204740524292
    3. '   ' → logprob: -4.026420593261719
    4. ')' → logprob: -5.776420593261719
    5. '```' → logprob: -6.901420593261719
    6. '
' → logprob: -7.026420593261719
    7. ' ' → logprob: -7.901420593261719
    8. '<|end|>' → logprob: -8.276420593261719
    9. '	' → logprob: -8.526420593261719
    10. '#' → logprob: -9.026420593261719

Token 545: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00179846934042871
    2. '<|end|>' → logprob: -6.876798629760742
    3. '   ' → logprob: -8.126798629760742
    4. 'print' → logprob: -8.501798629760742
    5. '#' (adapté à ' #') → logprob: -9.251798629760742
    6. '```' → logprob: -9.501798629760742
    7. ' ' → logprob: -10.251798629760742
    8. '	' → logprob: -11.126798629760742
    9. '      ' → logprob: -12.001798629760742
    10. '           ' → logprob: -12.001798629760742

Token 546: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022084240335971117
    2. '       ' → logprob: -7.127208232879639
    3. '#' → logprob: -7.252208232879639
    4. '   ' → logprob: -7.752208232879639
    5. '#print' → logprob: -8.752208709716797
    6. ' print' → logprob: -9.752208709716797
    7. 'i' → logprob: -10.877208709716797
    8. '           ' → logprob: -12.502208709716797
    9. '	print' → logprob: -12.502208709716797
    10. ' ' → logprob: -12.752208709716797

Token 547: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.008605829440057278
    2. 'print' → logprob: -6.13360595703125
    3. 'cher' → logprob: -6.13360595703125
    4. '#' → logprob: -6.50860595703125
    5. 'er' → logprob: -7.13360595703125
    6. 'Print' → logprob: -8.00860595703125
    7. 'acer' → logprob: -8.50860595703125
    8. ' print' → logprob: -8.50860595703125
    9. 'rer' → logprob: -8.63360595703125
    10. '_print' → logprob: -8.88360595703125

Token 548: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2612399458885193
    2. '(' → logprob: -1.511240005493164
    3. '(n' → logprob: -4.761240005493164
    4. 'print' → logprob: -8.511240005493164
    5. '(print' → logprob: -8.761240005493164
    6. '1' → logprob: -9.261240005493164
    7. ' (' → logprob: -9.511240005493164
    8. 'i' → logprob: -9.886240005493164
    9. 'n' → logprob: -10.636240005493164
    10. '   ' → logprob: -10.761240005493164

Token 549: ' paire' (ID: 148856)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5827229619026184
    2. '(i' → logprob: -1.0827229022979736
    3. '(' → logprob: -2.9577229022979736
    4. '(n' → logprob: -3.9577229022979736
    5. '1' → logprob: -4.207723140716553
    6. 'i' → logprob: -4.457723140716553
    7. '2' → logprob: -6.332723140716553
    8. 'pair' → logprob: -6.707723140716553
    9. 'n' → logprob: -7.207723140716553
    10. 'for' → logprob: -8.707722663879395

Token 550: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.14524763822555542
    2. '(' → logprob: -2.0202476978302
    3. '(n' → logprob: -6.020247459411621
    4. ' (' → logprob: -9.145247459411621
    5. '(
' → logprob: -11.395247459411621
    6. '((' → logprob: -12.145247459411621
    7. '(print' → logprob: -12.145247459411621
    8. '1' → logprob: -12.645247459411621
    9. '   ' → logprob: -13.145247459411621
    10. '       ' → logprob: -13.645247459411621

Token 551: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027577335014939308
    2. '1' → logprob: -3.6525774002075195
    3. '2' → logprob: -7.5275774002075195
    4. ' i' → logprob: -7.9025774002075195
    5. 'n' → logprob: -8.27757740020752
    6. '(i' → logprob: -10.40257740020752
    7. '3' → logprob: -10.77757740020752
    8. '   ' → logprob: -11.27757740020752
    9. ' ' → logprob: -11.65257740020752
    10. '(' → logprob: -11.90257740020752

Token 552: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.00014168102643452585
    2. ' +' → logprob: -9.500142097473145
    3. '+' → logprob: -9.625142097473145
    4. '```' → logprob: -16.000141143798828
    5. '+t' → logprob: -16.125141143798828
    6. '+i' → logprob: -16.375141143798828
    7. '   ' → logprob: -16.375141143798828
    8. '+
' → logprob: -16.375141143798828
    9. 'n' → logprob: -16.500141143798828
    10. '-n' → logprob: -17.125141143798828

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037608935963362455
    2. '+' → logprob: -5.628760814666748
    3. ' ,' → logprob: -9.628761291503906
    4. '+n' → logprob: -10.503761291503906
    5. '+,' → logprob: -10.628761291503906
    6. '+i' → logprob: -11.503761291503906
    7. ',n' → logprob: -11.753761291503906
    8. ')' → logprob: -12.003761291503906
    9. ',
' → logprob: -12.378761291503906
    10. '```' → logprob: -12.628761291503906

Token 554: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25195810198783875
    2. ' i' → logprob: -1.5019581317901611
    3. '   ' → logprob: -11.126957893371582
    4. ' ' → logprob: -12.251957893371582
    5. '1' → logprob: -12.876957893371582
    6. '	i' → logprob: -13.626957893371582
    7. '(i' → logprob: -13.751957893371582
    8. ' ' → logprob: -14.001957893371582
    9. 'n' → logprob: -14.626957893371582
    10. '    ' → logprob: -14.751957893371582

Token 555: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5762885212898254
    2. '+n' → logprob: -0.8262885212898254
    3. ' +' → logprob: -8.076288223266602
    4. 'n' → logprob: -10.951288223266602
    5. '+i' → logprob: -11.576288223266602
    6. '+t' → logprob: -13.201288223266602
    7. '+
' → logprob: -13.326288223266602
    8. '+s' → logprob: -13.451288223266602
    9. '+k' → logprob: -14.076288223266602
    10. '+m' → logprob: -14.076288223266602

Token 556: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02855943888425827
    2. '1' → logprob: -3.653559446334839
    3. '+n' → logprob: -6.27855920791626
    4. '+' → logprob: -8.653559684753418
    5. '2' → logprob: -8.903559684753418
    6. ' n' → logprob: -10.403559684753418
    7. '```' → logprob: -10.778559684753418
    8. '   ' → logprob: -12.028559684753418
    9. '
' → logprob: -12.528559684753418
    10. ' ' → logprob: -13.278559684753418

Token 557: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1296336054801941
    2. '+' → logprob: -2.129633665084839
    3. '+n' → logprob: -6.00463342666626
    4. ' +' → logprob: -9.129633903503418
    5. ',' → logprob: -10.129633903503418
    6. ')
' → logprob: -10.504633903503418
    7. ' )' → logprob: -11.129633903503418
    8. '1' → logprob: -11.379633903503418
    9. '+i' → logprob: -11.879633903503418
    10. '   ' → logprob: -11.879633903503418

Token 558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5837038159370422
    2. 'print' → logprob: -1.0837037563323975
    3. ',' → logprob: -2.9587037563323975
    4. '(' → logprob: -3.4587037563323975
    5. ')' → logprob: -5.208703994750977
    6. '   ' → logprob: -5.458703994750977
    7. '```' → logprob: -5.458703994750977
    8. ' print' → logprob: -6.208703994750977
    9. '(print' → logprob: -7.083703994750977
    10. ')
' → logprob: -7.083703994750977

Token 559: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2526431381702423
    2. ' print' → logprob: -1.50264310836792
    3. '1' → logprob: -7.75264310836792
    4. ' ' → logprob: -8.252643585205078
    5. '(' → logprob: -11.627643585205078
    6. '(print' → logprob: -12.252643585205078
    7. ' ,' → logprob: -12.752643585205078
    8. ',' → logprob: -12.877643585205078
    9. '.print' → logprob: -13.127643585205078
    10. '```' → logprob: -13.877643585205078

Token 560: ' Connect' (ID: 16834)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16022777557373047
    2. ' print' → logprob: -1.9102277755737305
    3. '```' → logprob: -13.41022777557373
    4. '(print' → logprob: -14.03522777557373
    5. '.print' → logprob: -14.28522777557373
    6. '       ' → logprob: -14.66022777557373
    7. '	print' → logprob: -16.410228729248047
    8. '   ' → logprob: -16.785228729248047
    9. ' ' → logprob: -17.410228729248047
    10. ' ' → logprob: -17.535228729248047

Token 561: 'e' (ID: 68)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14723540842533112
    2. '1' → logprob: -2.52223539352417
    3. '(i' → logprob: -3.02223539352417
    4. 'i' → logprob: -5.14723539352417
    5. '+' → logprob: -7.14723539352417
    6. 'er' → logprob: -7.77223539352417
    7. ' (' → logprob: -8.272235870361328
    8. 'e' → logprob: -8.647235870361328
    9. '+i' → logprob: -8.772235870361328
    10. ' i' → logprob: -9.147235870361328

Token 562: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005992312915623188
    2. ' ' → logprob: -5.130992412567139
    3. '(' → logprob: -9.75599193572998
    4. ' ' → logprob: -13.25599193572998
    5. 'n' → logprob: -14.13099193572998
    6. ' n' → logprob: -14.25599193572998
    7. '   ' → logprob: -14.25599193572998
    8. ' (' → logprob: -14.38099193572998
    9. '```' → logprob: -14.38099193572998
    10. '  ' → logprob: -15.50599193572998

Token 563: ' sommet' (ID: 130502)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019330393988639116
    2. ' ' → logprob: -6.2519330978393555
    3. 'n' → logprob: -13.376933097839355
    4. ' n' → logprob: -14.376933097839355
    5. '(' → logprob: -14.626933097839355
    6. ' (' → logprob: -14.876933097839355
    7. '   ' → logprob: -14.876933097839355
    8. '  ' → logprob: -15.501933097839355
    9. '```' → logprob: -15.626933097839355
    10. '`' → logprob: -15.751933097839355

Token 564: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030863285064697266
    2. ' ' → logprob: -6.003086090087891
    3. '+n' → logprob: -8.00308609008789
    4. '+' → logprob: -9.12808609008789
    5. 'n' → logprob: -9.25308609008789
    6. '```' → logprob: -10.75308609008789
    7. '(' → logprob: -11.00308609008789
    8. '   ' → logprob: -11.37808609008789
    9. ' n' → logprob: -11.62808609008789
    10. ' +' → logprob: -12.50308609008789

Token 565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001757696009008214
    2. '+n' → logprob: -9.375175476074219
    3. ' ' → logprob: -10.250175476074219
    4. 'n' → logprob: -10.500175476074219
    5. '+' → logprob: -11.125175476074219
    6. '```' → logprob: -12.250175476074219
    7. '(' → logprob: -12.375175476074219
    8. '   ' → logprob: -13.875175476074219
    9. '(n' → logprob: -14.000175476074219
    10. ' +' → logprob: -14.500175476074219

Token 566: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.0012110683601349592
    2. '+' → logprob: -6.751211166381836
    3. ' +' → logprob: -10.126211166381836
    4. '+i' → logprob: -15.126211166381836
    5. '```' → logprob: -15.251211166381836
    6. '   ' → logprob: -16.251211166381836
    7. 'n' → logprob: -17.251211166381836
    8. ' ' → logprob: -17.376211166381836
    9. '+m' → logprob: -17.626211166381836
    10. ')+' → logprob: -17.751211166381836

Token 567: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007505440153181553
    2. ' ,' → logprob: -7.250750541687012
    3. ',n' → logprob: -10.875750541687012
    4. '+' → logprob: -11.125750541687012
    5. ',i' → logprob: -13.250750541687012
    6. '```' → logprob: -13.625750541687012
    7. ')' → logprob: -13.750750541687012
    8. '1' → logprob: -14.000750541687012
    9. '+n' → logprob: -14.750750541687012
    10. ' ' → logprob: -15.000750541687012

Token 568: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6933373212814331
    2. ' i' → logprob: -0.6933373212814331
    3. '(i' → logprob: -9.443337440490723
    4. '1' → logprob: -9.693337440490723
    5. ' ' → logprob: -11.068337440490723
    6. ' ' → logprob: -11.193337440490723
    7. ' (' → logprob: -11.818337440490723
    8. '	i' → logprob: -12.568337440490723
    9. '(' → logprob: -12.943337440490723
    10. '`' → logprob: -13.568337440490723

Token 569: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011889220913872123
    2. '+n' → logprob: -7.1261887550354
    3. ' +' → logprob: -7.8761887550354
    4. '+i' → logprob: -13.001189231872559
    5. '```' → logprob: -14.001189231872559
    6. '1' → logprob: -14.626189231872559
    7. '+l' → logprob: -14.626189231872559
    8. ',' → logprob: -15.626189231872559
    9. ' ' → logprob: -16.376188278198242
    10. '   ' → logprob: -16.376188278198242

Token 570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4034345187828876e-05
    2. '+' → logprob: -11.00002384185791
    3. ' ' → logprob: -11.87502384185791
    4. '```' → logprob: -16.250024795532227
    5. '<|end|>' → logprob: -16.375024795532227
    6. '   ' → logprob: -16.750024795532227
    7. '１' → logprob: -17.125024795532227
    8. '۱' → logprob: -17.562524795532227
    9. ' +' → logprob: -18.062524795532227
    10. '<|end|>' → logprob: -18.187524795532227

Token 571: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38914215564727783
    2. '       ' → logprob: -1.5141421556472778
    3. '   ' → logprob: -3.0141420364379883
    4. ')' → logprob: -3.8891420364379883
    5. ' print' → logprob: -4.014142036437988
    6. ')
' → logprob: -5.514142036437988
    7. '```' → logprob: -5.764142036437988
    8. ',' → logprob: -6.139142036437988
    9. '  
' → logprob: -6.889142036437988
    10. '        
' → logprob: -7.514142036437988

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26389890909194946
    2. 'print' → logprob: -1.7638988494873047
    3. '```' → logprob: -3.8888988494873047
    4. ')' → logprob: -4.013898849487305
    5. '   ' → logprob: -4.513898849487305
    6. ' print' → logprob: -6.138898849487305
    7. '(print' → logprob: -6.513898849487305
    8. '        
' → logprob: -6.638898849487305
    9. '(' → logprob: -6.638898849487305
    10. '  
' → logprob: -6.888898849487305

Token 573: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004093358293175697
    2. ' print' → logprob: -5.504093170166016
    3. '1' → logprob: -11.504093170166016
    4. '(print' → logprob: -12.879093170166016
    5. '.print' → logprob: -13.504093170166016
    6. '(' → logprob: -14.504093170166016
    7. '```' → logprob: -15.254093170166016
    8. ' ' → logprob: -16.129093170166016
    9. '	print' → logprob: -17.129093170166016
    10. '   ' → logprob: -17.629093170166016

Token 574: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003623235272243619
    2. '1' → logprob: -5.628623008728027
    3. ' ' → logprob: -11.753623008728027
    4. ' (' → logprob: -11.878623008728027
    5. '(i' → logprob: -13.003623008728027
    6. '('' → logprob: -13.128623008728027
    7. '(
' → logprob: -13.253623008728027
    8. '("' → logprob: -13.753623008728027
    9. '(n' → logprob: -14.628623008728027
    10. '"' → logprob: -15.253623008728027

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.387458365177736e-05
    2. 'i' → logprob: -9.500083923339844
    3. ' ' → logprob: -11.750083923339844
    4. '(' → logprob: -14.750083923339844
    5. ' i' → logprob: -15.500083923339844
    6. '"' → logprob: -15.750083923339844
    7. 'n' → logprob: -16.125083923339844
    8. '   ' → logprob: -16.500083923339844
    9. '(i' → logprob: -16.500083923339844
    10. ''' → logprob: -16.750083923339844

Token 576: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.0005618501454591751
    2. '+' → logprob: -7.875561714172363
    3. ' +' → logprob: -8.625561714172363
    4. ',' → logprob: -14.500561714172363
    5. '   ' → logprob: -14.625561714172363
    6. '+i' → logprob: -15.000561714172363
    7. ' ' → logprob: -15.750561714172363
    8. ')+' → logprob: -15.750561714172363
    9. ',n' → logprob: -16.37556266784668
    10. '```' → logprob: -16.50056266784668

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023836754262447357
    2. '+' → logprob: -3.773836851119995
    3. ' ,' → logprob: -8.023837089538574
    4. ' +' → logprob: -9.023837089538574
    5. ',i' → logprob: -9.773837089538574
    6. ')' → logprob: -10.648837089538574
    7. '+i' → logprob: -10.898837089538574
    8. ',
' → logprob: -11.023837089538574
    9. '+,' → logprob: -11.773837089538574
    10. ',+' → logprob: -12.648837089538574

Token 578: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005234356038272381
    2. ' i' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.130234718322754
    4. ' ' → logprob: -16.630233764648438
    5. '(i' → logprob: -16.630233764648438
    6. '1' → logprob: -16.755233764648438
    7. ')' → logprob: -17.255233764648438
    8. '	i' → logprob: -17.505233764648438
    9. ' ' → logprob: -18.255233764648438
    10. ')i' → logprob: -18.630233764648438

Token 579: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.440506407059729e-05
    2. ' +' → logprob: -10.50003433227539
    3. '1' → logprob: -12.25003433227539
    4. '+
' → logprob: -14.50003433227539
    5. ')' → logprob: -14.75003433227539
    6. '```' → logprob: -14.87503433227539
    7. ')+' → logprob: -15.25003433227539
    8. ',' → logprob: -15.81253433227539
    9. '+i' → logprob: -16.56253433227539
    10. '-' → logprob: -16.62503433227539

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026896485360339284
    2. '3' → logprob: -8.250268936157227
    3. ' ' → logprob: -12.000268936157227
    4. ')' → logprob: -14.250268936157227
    5. '2' → logprob: -15.250268936157227
    6. '+' → logprob: -15.500268936157227
    7. '```' → logprob: -15.500268936157227
    8. '   ' → logprob: -16.687768936157227
    9. '<|end|>' → logprob: -17.062768936157227
    10. '۱' → logprob: -17.062768936157227

Token 581: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.47495681833243e-05
    2. ')
' → logprob: -10.625024795532227
    3. ' )' → logprob: -15.250024795532227
    4. '   ' → logprob: -17.000024795532227
    5. '))' → logprob: -17.500024795532227
    6. ')}' → logprob: -18.000024795532227
    7. ')`' → logprob: -18.625024795532227
    8. ')
' → logprob: -18.750024795532227
    9. '```' → logprob: -19.250024795532227
    10. '()' → logprob: -19.250024795532227

Token 582: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 583: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 584: ' Après' (ID: 47562)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 585: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3790806531906128
    2. 'le' → logprob: -1.8790806531906128
    3. 'la' → logprob: -2.3790807723999023
    4. 'l' → logprob: -3.6290807723999023
    5. '#' → logprob: -4.129080772399902
    6. '   ' → logprob: -4.254080772399902
    7. '```' → logprob: -5.754080772399902
    8. 'les' → logprob: -6.629080772399902
    9. 'the' → logprob: -6.629080772399902
    10. 'for' → logprob: -6.754080772399902

Token 586: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7022712826728821
    2. 'bou' → logprob: -0.7022712826728821
    3. 'fin' → logprob: -5.577271461486816
    4. ' boucle' → logprob: -5.827271461486816
    5. 'print' → logprob: -6.952271461486816
    6. 'loop' → logprob: -7.452271461486816
    7. '```' → logprob: -8.327271461486816
    8. ' for' → logprob: -8.702271461486816
    9. 'ligne' → logprob: -9.327271461486816
    10. '#' → logprob: -9.452271461486816

Token 587: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2379634529352188
    2. '   ' → logprob: -1.7379634380340576
    3. '<|end|>' → logprob: -3.9879634380340576
    4. '#' → logprob: -4.237963676452637
    5. '```' → logprob: -6.862963676452637
    6. ' print' → logprob: -6.987963676452637
    7. 'for' → logprob: -8.237963676452637
    8. '#print' → logprob: -8.987963676452637
    9. ')' → logprob: -9.237963676452637
    10. '    ' → logprob: -9.487963676452637

Token 588: ' vérifier' (ID: 93671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05541307106614113
    2. '#' → logprob: -3.555413007736206
    3. '   ' → logprob: -3.805413007736206
    4. 'for' → logprob: -6.430413246154785
    5. ' print' → logprob: -7.555413246154785
    6. 'pass' → logprob: -7.805413246154785
    7. 'if' → logprob: -8.555413246154785
    8. '#print' → logprob: -9.055413246154785
    9. '```' → logprob: -9.430413246154785
    10. ' #' → logprob: -9.930413246154785

Token 589: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011967484839260578
    2. ' if' → logprob: -4.886967658996582
    3. '   ' → logprob: -5.511967658996582
    4. 'n' → logprob: -8.511967658996582
    5. 'print' → logprob: -9.886967658996582
    6. 'si' → logprob: -11.261967658996582
    7. '(n' → logprob: -11.261967658996582
    8. ' n' → logprob: -12.011967658996582
    9. 's' → logprob: -12.386967658996582
    10. '1' → logprob: -12.511967658996582

Token 590: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015210502780973911
    2. ' n' → logprob: -4.2652106285095215
    3. '(n' → logprob: -7.3902106285095215
    4. '   ' → logprob: -9.140210151672363
    5. '3' → logprob: -9.390210151672363
    6. '(' → logprob: -9.515210151672363
    7. '4' → logprob: -9.640210151672363
    8. ' (' → logprob: -10.390210151672363
    9. ' ' → logprob: -10.890210151672363
    10. '2' → logprob: -11.390210151672363

Token 591: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1181085854768753
    2. '+' → logprob: -2.9931085109710693
    3. ' %' → logprob: -3.3681085109710693
    4. '>' → logprob: -4.618108749389648
    5. '==' → logprob: -5.493108749389648
    6. '>=' → logprob: -5.493108749389648
    7. '-' → logprob: -5.868108749389648
    8. ' >' → logprob: -5.868108749389648
    9. ' ==' → logprob: -6.868108749389648
    10. ' >=' → logprob: -7.368108749389648

Token 592: ' pair' (ID: 10610)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.31313323974609375
    2. 'odd' → logprob: -1.8131332397460938
    3. '%' → logprob: -2.4381332397460938
    4. ' even' → logprob: -5.188133239746094
    5. ' odd' → logprob: -5.813133239746094
    6. 'not' → logprob: -6.313133239746094
    7. 'n' → logprob: -6.313133239746094
    8. '>' → logprob: -6.438133239746094
    9. 'an' → logprob: -6.938133239746094
    10. '_even' → logprob: -7.438133239746094

Token 593: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006442157551646233
    2. ':' → logprob: -5.506442070007324
    3. 'if' → logprob: -6.131442070007324
    4. ' if' → logprob: -9.131442070007324
    5. ':
' → logprob: -10.381442070007324
    6. '```' → logprob: -10.881442070007324
    7. ' and' → logprob: -11.006442070007324
    8. 'and' → logprob: -11.881442070007324
    9. '  ' → logprob: -13.881442070007324
    10. '    ' → logprob: -14.006442070007324

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031907858792692423
    2. 'if' → logprob: -6.003190994262695
    3. ' if' → logprob: -7.253190994262695
    4. '    
' → logprob: -12.628190994262695
    5. '	if' → logprob: -13.128190994262695
    6. '```' → logprob: -14.253190994262695
    7. '
' → logprob: -14.503190994262695
    8. '       ' → logprob: -15.503190994262695
    9. ',' → logprob: -15.753190994262695
    10. ':' → logprob: -15.878190994262695

Token 595: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39028868079185486
    2. 'if' → logprob: -1.1402887105941772
    3. ' if' → logprob: -5.765288829803467
    4. '```' → logprob: -8.265288352966309
    5. '	if' → logprob: -11.265288352966309
    6. '    
' → logprob: -12.765288352966309
    7. '
' → logprob: -13.015288352966309
    8. '       ' → logprob: -13.890288352966309
    9. '``' → logprob: -14.890288352966309
    10. ':' → logprob: -15.890288352966309

Token 596: ' '~' (ID: 155911)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002159898867830634
    2. '   ' → logprob: -6.25216007232666
    3. ' if' → logprob: -8.37716007232666
    4. '```' → logprob: -13.75216007232666
    5. '
' → logprob: -16.752159118652344
    6. '	if' → logprob: -17.377159118652344
    7. 'elif' → logprob: -17.502159118652344
    8. ' ' → logprob: -17.752159118652344
    9. '    
' → logprob: -18.127159118652344
    10. '  ' → logprob: -18.752159118652344

Token 597: 'n' (ID: 77)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.052393000572919846
    2. 'n' → logprob: -3.1773929595947266
    3. ' if' → logprob: -5.052392959594727
    4. 'if' → logprob: -5.927392959594727
    5. '(n' → logprob: -9.427392959594727
    6. ' ' → logprob: -9.552392959594727
    7. ' (' → logprob: -9.927392959594727
    8. '   ' → logprob: -10.427392959594727
    9. ' not' → logprob: -11.927392959594727
    10. '    ' → logprob: -11.927392959594727

Token 598: ''' (ID: 6)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.4345192611217499
    2. ' &' → logprob: -1.0595192909240723
    3. '%' → logprob: -5.309519290924072
    4. ' %' → logprob: -8.184518814086914
    5. '&amp' → logprob: -8.934518814086914
    6. ' ' → logprob: -8.934518814086914
    7. '&
' → logprob: -8.934518814086914
    8. ' ' → logprob: -9.809518814086914
    9. ' &
' → logprob: -10.059518814086914
    10. 'if' → logprob: -11.309518814086914

Token 599: ' est' (ID: 893)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.5255827903747559
    2. ' &' → logprob: -0.9005827903747559
    3. '%' → logprob: -6.150582790374756
    4. '&amp' → logprob: -8.775583267211914
    5. ' %' → logprob: -9.525583267211914
    6. '&
' → logprob: -10.650583267211914
    7. ' ' → logprob: -11.275583267211914
    8. 'if' → logprob: -11.525583267211914
    9. ' &
' → logprob: -11.650583267211914
    10. ' ' → logprob: -11.775583267211914

Token 600: ' l' (ID: 305)
  Prédit: ' ~'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ~' → logprob: -1.0604232549667358
    2. '(n' → logprob: -1.6854232549667358
    3. '~' → logprob: -2.6854233741760254
    4. 'n' → logprob: -2.8104233741760254
    5. ' (' → logprob: -2.8104233741760254
    6. ' n' → logprob: -2.9354233741760254
    7. ' (~' → logprob: -2.9354233741760254
    8. '-n' → logprob: -3.4354233741760254
    9. ' -' → logprob: -3.5604233741760254
    10. ' ' → logprob: -3.8104233741760254

Token 601: ''op' (ID: 70747)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.24442803859710693
    2. ' &' → logprob: -2.1194281578063965
    3. '%' → logprob: -3.7444281578063965
    4. 'n' → logprob: -3.9944281578063965
    5. ' ' → logprob: -4.2444281578063965
    6. '1' → logprob: -4.7444281578063965
    7. ' ~' → logprob: -4.8694281578063965
    8. ' n' → logprob: -5.4944281578063965
    9. '~' → logprob: -5.7444281578063965
    10. ' not' → logprob: -5.9944281578063965

Token 602: 'érateur' (ID: 108528)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3475448489189148
    2. '%' → logprob: -1.8475449085235596
    3. '~' → logprob: -3.7225449085235596
    4. '-' → logprob: -3.9725449085235596
    5. 'er' → logprob: -3.9725449085235596
    6. '```' → logprob: -4.0975446701049805
    7. '&' → logprob: -4.4725446701049805
    8. '#' → logprob: -5.3475446701049805
    9. '=' → logprob: -5.5975446701049805
    10. '(' → logprob: -5.7225446701049805

Token 603: ' bit' (ID: 3546)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.11033880710601807
    2. ' &' → logprob: -3.1103386878967285
    3. ' ~' → logprob: -3.8603386878967285
    4. '~' → logprob: -4.1103386878967285
    5. '&nbsp' → logprob: -5.2353386878967285
    6. ' ' → logprob: -5.7353386878967285
    7. '1' → logprob: -5.9853386878967285
    8. '%' → logprob: -6.1103386878967285
    9. '<|end|>' → logprob: -6.2353386878967285
    10. '^' → logprob: -6.7353386878967285

Token 604: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.08397515118122101
    2. '&' → logprob: -3.583975076675415
    3. '   ' → logprob: -4.083975315093994
    4. '^' → logprob: -4.958975315093994
    5. '```' → logprob: -4.958975315093994
    6. '~' → logprob: -5.083975315093994
    7. ' ' → logprob: -6.083975315093994
    8. 'if' → logprob: -6.083975315093994
    9. '#' → logprob: -6.458975315093994
    10. 'not' → logprob: -6.583975315093994

Token 605: ' NOT' (ID: 7116)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.5344219207763672
    2. '&' → logprob: -0.9094219207763672
    3. ' ' → logprob: -4.659421920776367
    4. ' ^' → logprob: -6.909421920776367
    5. '%' → logprob: -8.409421920776367
    6. ' or' → logprob: -9.284421920776367
    7. '1' → logprob: -9.284421920776367
    8. '^' → logprob: -9.909421920776367
    9. ' ' → logprob: -9.909421920776367
    10. ' %' → logprob: -10.159421920776367

Token 606: ',' (ID: 11)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.4137687087059021
    2. 'if' → logprob: -1.7887687683105469
    3. ' if' → logprob: -2.163768768310547
    4. '&' → logprob: -3.538768768310547
    5. '   ' → logprob: -4.538768768310547
    6. '%' → logprob: -4.788768768310547
    7. ' %' → logprob: -4.913768768310547
    8. ' ' → logprob: -7.413768768310547
    9. ' and' → logprob: -8.788768768310547
    10. ' ==' → logprob: -9.538768768310547

Token 607: ' il' (ID: 1793)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3397748470306396
    2. ' &' → logprob: -1.3397748470306396
    3. ' if' → logprob: -1.4647748470306396
    4. 'n' → logprob: -3.0897748470306396
    5. ' n' → logprob: -3.3397748470306396
    6. ' and' → logprob: -3.5897748470306396
    7. ' (' → logprob: -3.7147748470306396
    8. '&' → logprob: -3.9647748470306396
    9. '(n' → logprob: -3.9647748470306396
    10. ' not' → logprob: -4.214775085449219

Token 608: ' inverse' (ID: 53743)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.024289574474096298
    2. ' &' → logprob: -3.774289608001709
    3. ' n' → logprob: -8.27428913116455
    4. '%' → logprob: -9.02428913116455
    5. ' not' → logprob: -9.39928913116455
    6. '&nbsp' → logprob: -9.64928913116455
    7. 'n' → logprob: -10.14928913116455
    8. ' ' → logprob: -10.27428913116455
    9. '&amp' → logprob: -10.27428913116455
    10. ' is' → logprob: -10.39928913116455

Token 609: ' tous' (ID: 10688)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5101606845855713
    2. '~' → logprob: -2.1351606845855713
    3. '(n' → logprob: -2.3851606845855713
    4. ' (' → logprob: -3.2601606845855713
    5. ' ~' → logprob: -3.5101606845855713
    6. ' (~' → logprob: -3.5101606845855713
    7. '1' → logprob: -3.6351606845855713
    8. ' n' → logprob: -4.135160446166992
    9. '(~' → logprob: -4.510160446166992
    10. '(' → logprob: -4.885160446166992

Token 610: ' les' (ID: 1341)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5918976664543152
    2. ' n' → logprob: -1.84189772605896
    3. ' bits' → logprob: -2.34189772605896
    4. ' ' → logprob: -2.71689772605896
    5. 'bits' → logprob: -2.71689772605896
    6. '(n' → logprob: -4.341897487640381
    7. '0' → logprob: -4.716897487640381
    8. '   ' → logprob: -4.966897487640381
    9. 'b' → logprob: -4.966897487640381
    10. ' ~' → logprob: -5.091897487640381

Token 611: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.014483846724033356
    2. ' bits' → logprob: -4.38948392868042
    3. 'b' → logprob: -6.26448392868042
    4. 'bit' → logprob: -10.014483451843262
    5. '0' → logprob: -11.389483451843262
    6. '(bits' → logprob: -11.639483451843262
    7. '_bits' → logprob: -12.889483451843262
    8. ' bit' → logprob: -14.389483451843262
    9. '1' → logprob: -15.264483451843262
    10. 'bi' → logprob: -15.389483451843262

Token 612: ' de' (ID: 334)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.8691661953926086
    2. 'if' → logprob: -1.3691661357879639
    3. ' if' → logprob: -1.6191661357879639
    4. '&' → logprob: -2.244166135787964
    5. ' ' → logprob: -4.869166374206543
    6. ' %' → logprob: -4.994166374206543
    7. '%' → logprob: -5.369166374206543
    8. ' n' → logprob: -6.869166374206543
    9. ' and' → logprob: -7.369166374206543
    10. '   ' → logprob: -7.369166374206543

Token 613: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11293656378984451
    2. ' n' → logprob: -2.237936496734619
    3. ' ' → logprob: -9.737936973571777
    4. ' ~' → logprob: -10.737936973571777
    5. '~' → logprob: -11.487936973571777
    6. ' ' → logprob: -12.237936973571777
    7. '	n' → logprob: -12.237936973571777
    8. '(n' → logprob: -12.612936973571777
    9. '   ' → logprob: -12.737936973571777
    10. '`' → logprob: -13.362936973571777

Token 614: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4399338662624359
    2. ' if' → logprob: -1.0649338960647583
    3. '   ' → logprob: -5.189933776855469
    4. ' %' → logprob: -6.314933776855469
    5. ' &' → logprob: -6.814933776855469
    6. '%' → logprob: -7.064933776855469
    7. ' and' → logprob: -7.564933776855469
    8. ' ' → logprob: -7.814933776855469
    9. ' ==' → logprob: -8.189933776855469
    10. '
' → logprob: -9.189933776855469

Token 615: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16540640592575073
    2. ' if' → logprob: -1.9154064655303955
    3. '
' → logprob: -6.165406227111816
    4. '   ' → logprob: -6.290406227111816
    5. '<|end|>' → logprob: -7.165406227111816
    6. ' ' → logprob: -9.415406227111816
    7. ':' → logprob: -9.415406227111816
    8. ' 
' → logprob: -9.915406227111816
    9. '    
' → logprob: -9.915406227111816
    10. '  
' → logprob: -10.290406227111816

Token 616: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14364491403102875
    2. ' if' → logprob: -2.0186448097229004
    3. '   ' → logprob: -7.0186448097229
    4. '
' → logprob: -10.768645286560059
    5. ' ' → logprob: -10.893645286560059
    6. '    
' → logprob: -11.893645286560059
    7. ' 
' → logprob: -11.893645286560059
    8. '```' → logprob: -12.393645286560059
    9. 'n' → logprob: -12.643645286560059
    10. ' n' → logprob: -13.393645286560059

Token 617: ' '&' (ID: 35856)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6941668391227722
    2. ' if' → logprob: -0.6941668391227722
    3. '   ' → logprob: -7.194166660308838
    4. ' n' → logprob: -8.944167137145996
    5. 'n' → logprob: -10.069167137145996
    6. ' ' → logprob: -10.569167137145996
    7. ' and' → logprob: -11.444167137145996
    8. '
' → logprob: -11.819167137145996
    9. 'and' → logprob: -12.444167137145996
    10. '	if' → logprob: -12.694167137145996

Token 618: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43129056692123413
    2. ' ' → logprob: -1.056290626525879
    3. ' n' → logprob: -6.556290626525879
    4. 'n' → logprob: -7.056290626525879
    5. ' (' → logprob: -9.681290626525879
    6. ' ' → logprob: -9.806290626525879
    7. '(' → logprob: -9.931290626525879
    8. '(n' → logprob: -10.181290626525879
    9. '7' → logprob: -11.181290626525879
    10. '   ' → logprob: -11.931290626525879

Token 619: ''' (ID: 6)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16935722529888153
    2. ')' → logprob: -2.5443572998046875
    3. '==' → logprob: -3.0443572998046875
    4. ')==' → logprob: -3.5443572998046875
    5. ' )' → logprob: -8.794357299804688
    6. ' ' → logprob: -8.794357299804688
    7. ']==' → logprob: -9.294357299804688
    8. ' !=' → logprob: -10.169357299804688
    9. ' n' → logprob: -10.294357299804688
    10. 'if' → logprob: -10.419357299804688

Token 620: ' teste' (ID: 62670)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2277066558599472
    2. '==' → logprob: -1.6027066707611084
    3. 'if' → logprob: -7.227706432342529
    4. ' &' → logprob: -7.852706432342529
    5. ' if' → logprob: -7.852706432342529
    6. ' !=' → logprob: -8.102706909179688
    7. ' and' → logprob: -8.852706909179688
    8. '!=' → logprob: -9.602706909179688
    9. ')' → logprob: -9.727706909179688
    10. '&' → logprob: -9.727706909179688

Token 621: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2964078485965729
    2. ' if' → logprob: -2.54640793800354
    3. '(n' → logprob: -2.54640793800354
    4. ' n' → logprob: -2.67140793800354
    5. ' ==' → logprob: -4.796407699584961
    6. ' ' → logprob: -5.046407699584961
    7. 'n' → logprob: -5.421407699584961
    8. '==' → logprob: -5.921407699584961
    9. '=' → logprob: -6.171407699584961
    10. ' not' → logprob: -6.421407699584961

Token 622: ' bit' (ID: 3546)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.108160138130188
    2. '1' → logprob: -1.233160138130188
    3. 'n' → logprob: -1.983160138130188
    4. ' ' → logprob: -2.2331600189208984
    5. ' (' → logprob: -2.3581600189208984
    6. '0' → logprob: -3.8581600189208984
    7. '(n' → logprob: -4.358160018920898
    8. ' bit' → logprob: -6.608160018920898
    9. '(' → logprob: -6.733160018920898
    10. ' not' → logprob: -6.733160018920898

Token 623: ' de' (ID: 334)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.49592921137809753
    2. '(n' → logprob: -1.74592924118042
    3. ' (' → logprob: -1.99592924118042
    4. 'n' → logprob: -3.24592924118042
    5. ' ==' → logprob: -4.49592924118042
    6. ' ' → logprob: -4.49592924118042
    7. ' &' → logprob: -5.12092924118042
    8. '1' → logprob: -5.49592924118042
    9. ' if' → logprob: -6.24592924118042
    10. '```' → logprob: -6.87092924118042

Token 624: ' poids' (ID: 56058)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3316461443901062
    2. 'n' → logprob: -1.456646203994751
    3. ' ' → logprob: -4.081645965576172
    4. ' (' → logprob: -4.331645965576172
    5. '1' → logprob: -4.456645965576172
    6. '(n' → logprob: -5.206645965576172
    7. '~' → logprob: -7.331645965576172
    8. '0' → logprob: -7.831645965576172
    9. ' ~' → logprob: -7.956645965576172
    10. ' (~' → logprob: -7.956645965576172

Token 625: ' faible' (ID: 75786)
  Prédit: ' faible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faible' → logprob: -0.08345064520835876
    2. '```' → logprob: -4.083450794219971
    3. '0' → logprob: -4.208450794219971
    4. ' ' → logprob: -4.208450794219971
    5. '   ' → logprob: -5.083450794219971
    6. '1' → logprob: -5.083450794219971
    7. 'fa' → logprob: -5.208450794219971
    8. ' ' → logprob: -5.583450794219971
    9. ' fort' → logprob: -5.958450794219971
    10. ' n' → logprob: -5.958450794219971

Token 626: ' (' (ID: 350)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0592217855155468
    2. '==' → logprob: -3.5592217445373535
    3. ' if' → logprob: -4.4342217445373535
    4. ' ' → logprob: -5.0592217445373535
    5. 'if' → logprob: -5.5592217445373535
    6. ' n' → logprob: -5.6842217445373535
    7. ')' → logprob: -7.4342217445373535
    8. ')==' → logprob: -7.4342217445373535
    9. '(n' → logprob: -7.8092217445373535
    10. ' (' → logprob: -7.8092217445373535

Token 627: 'par' (ID: 796)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5719417929649353
    2. 'n' → logprob: -2.32194185256958
    3. ' ' → logprob: -2.32194185256958
    4. ')' → logprob: -2.44694185256958
    5. ' (' → logprob: -2.82194185256958
    6. '1' → logprob: -2.82194185256958
    7. ' )' → logprob: -4.32194185256958
    8. '(n' → logprob: -4.94694185256958
    9. '0' → logprob: -5.07194185256958
    10. ' ~' → logprob: -6.07194185256958

Token 628: 'ité' (ID: 3761)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3810963034629822
    2. 'n' → logprob: -1.881096363067627
    3. '0' → logprob: -2.756096363067627
    4. '```' → logprob: -3.006096363067627
    5. 'ex' → logprob: -4.381096363067627
    6. ' ' → logprob: -4.506096363067627
    7. '(n' → logprob: -5.256096363067627
    8. ')' → logprob: -6.256096363067627
    9. ' n' → logprob: -6.256096363067627
    10. 'position' → logprob: -6.506096363067627

Token 629: '),' (ID: 936)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8711452484130859
    2. '==' → logprob: -1.121145248413086
    3. ')' → logprob: -1.496145248413086
    4. ')==' → logprob: -3.496145248413086
    5. ' )' → logprob: -7.246145248413086
    6. ' n' → logprob: -9.246145248413086
    7. '=' → logprob: -9.246145248413086
    8. 'if' → logprob: -9.996145248413086
    9. ' ' → logprob: -9.996145248413086
    10. '(n' → logprob: -10.246145248413086

Token 630: ' donc' (ID: 14206)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11201370507478714
    2. '   ' → logprob: -2.862013816833496
    3. 'if' → logprob: -3.112013816833496
    4. '    ' → logprob: -6.487013816833496
    5. ' ' → logprob: -6.612013816833496
    6. ':' → logprob: -8.237013816833496
    7. ' n' → logprob: -8.987013816833496
    8. '  ' → logprob: -9.112013816833496
    9. '
' → logprob: -9.112013816833496
    10. '    
' → logprob: -9.487013816833496

Token 631: ' '' (ID: 461)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16598539054393768
    2. 'n' → logprob: -2.915985345840454
    3. ' (' → logprob: -2.915985345840454
    4. ' if' → logprob: -3.665985345840454
    5. '(n' → logprob: -4.415985584259033
    6. 'if' → logprob: -5.415985584259033
    7. ' not' → logprob: -6.415985584259033
    8. ' ' → logprob: -8.290985107421875
    9. 'not' → logprob: -8.415985107421875
    10. '   ' → logprob: -9.040985107421875

Token 632: 'if' (ID: 366)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.656364381313324
    2. '(n' → logprob: -1.1563644409179688
    3. ' n' → logprob: -2.5313644409179688
    4. ' (' → logprob: -3.2813644409179688
    5. '~' → logprob: -3.7813644409179688
    6. '(~' → logprob: -3.9063644409179688
    7. ' (~' → logprob: -5.781364440917969
    8. '(' → logprob: -6.906364440917969
    9. '(not' → logprob: -7.281364440917969
    10. 'not' → logprob: -7.531364440917969

Token 633: ' (~' (ID: 65176)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6346381902694702
    2. ' n' → logprob: -1.3846381902694702
    3. '(n' → logprob: -1.8846381902694702
    4. ' (' → logprob: -3.5096383094787598
    5. '~' → logprob: -3.8846383094787598
    6. '(~' → logprob: -4.63463830947876
    7. ' (~' → logprob: -5.63463830947876
    8. ' not' → logprob: -6.75963830947876
    9. ' ~' → logprob: -7.00963830947876
    10. '(' → logprob: -7.38463830947876

Token 634: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.225939872208983e-05
    2. ' n' → logprob: -10.625032424926758
    3. '(n' → logprob: -12.375032424926758
    4. '	n' → logprob: -13.750032424926758
    5. '   ' → logprob: -14.250032424926758
    6. ')n' → logprob: -14.250032424926758
    7. '
' → logprob: -14.750032424926758
    8. ')' → logprob: -15.500032424926758
    9. '_n' → logprob: -15.750032424926758
    10. '```' → logprob: -16.125032424926758

Token 635: ')&' (ID: 34370)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.7548677921295166
    2. ')&' → logprob: -1.5048677921295166
    3. ' &' → logprob: -1.7548677921295166
    4. ')' → logprob: -2.0048677921295166
    5. ' )' → logprob: -8.879867553710938
    6. ' ' → logprob: -9.379867553710938
    7. '[' → logprob: -10.754867553710938
    8. '   ' → logprob: -12.004867553710938
    9. '&
' → logprob: -12.129867553710938
    10. '&amp' → logprob: -12.629867553710938

Token 636: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031781906727701426
    2. ' ' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.503178596496582
    4. '
' → logprob: -16.628177642822266
    5. ' ' → logprob: -16.628177642822266
    6. '0' → logprob: -17.628177642822266
    7. '```' → logprob: -17.753177642822266
    8. '  ' → logprob: -17.878177642822266
    9. '(' → logprob: -18.003177642822266
    10. '`' → logprob: -18.753177642822266

Token 637: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.587608277797699
    2. ' ==' → logprob: -1.3376083374023438
    3. '==' → logprob: -1.8376083374023438
    4. ':'' → logprob: -4.087608337402344
    5. '=='' → logprob: -5.837608337402344
    6. ' :' → logprob: -6.837608337402344
    7. ' =='' → logprob: -6.962608337402344
    8. ' !=' → logprob: -7.962608337402344
    9. ' :'' → logprob: -8.462608337402344
    10. '':' → logprob: -9.462608337402344

Token 638: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017585984896868467
    2. ':
' → logprob: -7.126758575439453
    3. '==' → logprob: -7.626758575439453
    4. ' ==' → logprob: -7.876758575439453
    5. ' :' → logprob: -9.626758575439453
    6. '   ' → logprob: -11.376758575439453
    7. '):' → logprob: -12.376758575439453
    8. '=' → logprob: -13.501758575439453
    9. ' and' → logprob: -14.251758575439453
    10. '>' → logprob: -14.251758575439453

Token 639: ' vrai' (ID: 42682)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2981598675251007
    2. 'True' → logprob: -2.0481598377227783
    3. ' False' → logprob: -2.4231598377227783
    4. 'False' → logprob: -3.2981598377227783
    5. ' ' → logprob: -7.298160076141357
    6. ' n' → logprob: -7.298160076141357
    7. '0' → logprob: -7.548160076141357
    8. ' not' → logprob: -7.798160076141357
    9. '   ' → logprob: -7.923160076141357
    10. 'n' → logprob: -8.1731595993042

Token 640: ' si' (ID: 1784)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012719007208943367
    2. ':
' → logprob: -6.751271724700928
    3. '   ' → logprob: -9.626272201538086
    4. ' :' → logprob: -11.251272201538086
    5. '):' → logprob: -12.251272201538086
    6. ' ==' → logprob: -12.376272201538086
    7. '==' → logprob: -12.376272201538086
    8. ' if' → logprob: -12.626272201538086
    9. '():' → logprob: -13.626272201538086
    10. 'if' → logprob: -13.751272201538086

Token 641: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1910785287618637
    2. 'n' → logprob: -1.816078543663025
    3. ' not' → logprob: -4.9410786628723145
    4. 'not' → logprob: -6.6910786628723145
    5. ' True' → logprob: -6.9410786628723145
    6. 'True' → logprob: -7.5660786628723145
    7. '(n' → logprob: -7.5660786628723145
    8. ' (' → logprob: -7.9410786628723145
    9. ' ' → logprob: -9.066078186035156
    10. 'False' → logprob: -9.191078186035156

Token 642: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0327443890273571
    2. ' is' → logprob: -3.7827444076538086
    3. ' %' → logprob: -5.157744407653809
    4. 'is' → logprob: -6.282744407653809
    5. ')' → logprob: -6.907744407653809
    6. ' est' → logprob: -7.407744407653809
    7. 'est' → logprob: -9.657744407653809
    8. '&' → logprob: -10.657744407653809
    9. ' ' → logprob: -10.907744407653809
    10. 's' → logprob: -11.157744407653809

Token 643: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.05925290286540985
    2. 'imp' → logprob: -3.184252977371216
    3. 'im' → logprob: -4.809252738952637
    4. 'pa' → logprob: -5.309252738952637
    5. ' impair' → logprob: -6.559252738952637
    6. 'even' → logprob: -6.809252738952637
    7. ' pair' → logprob: -8.684252738952637
    8. 'pari' → logprob: -9.184252738952637
    9. 'pairs' → logprob: -9.934252738952637
    10. 'odd' → logprob: -10.184252738952637

Token 644: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04921592399477959
    2. ':
' → logprob: -3.0492160320281982
    3. '   ' → logprob: -7.549215793609619
    4. 'if' → logprob: -10.174216270446777
    5. ' if' → logprob: -10.424216270446777
    6. '):' → logprob: -10.924216270446777
    7. '):
' → logprob: -11.799216270446777
    8. ' :' → logprob: -12.799216270446777
    9. ')' → logprob: -13.424216270446777
    10. ' :
' → logprob: -14.049216270446777

Token 645: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6224327087402344
    2. 'if' → logprob: -1.3724327087402344
    3. ':' → logprob: -1.9974327087402344
    4. ' if' → logprob: -2.7474327087402344
    5. ':
' → logprob: -4.622432708740234
    6. '	if' → logprob: -9.247432708740234
    7. ' :' → logprob: -9.747432708740234
    8. 'If' → logprob: -10.122432708740234
    9. '):
' → logprob: -11.372432708740234
    10. ' :
' → logprob: -11.497432708740234

Token 646: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21396838128566742
    2. ':' → logprob: -2.338968276977539
    3. 'if' (adapté à ' if') → logprob: -2.713968276977539
    4. ' if' → logprob: -3.713968276977539
    5. ':
' → logprob: -5.213968276977539
    6. ' :' → logprob: -10.213968276977539
    7. '       ' → logprob: -10.463968276977539
    8. '	if' → logprob: -10.838968276977539
    9. ' and' → logprob: -12.213968276977539
    10. ' :
' → logprob: -12.338968276977539

Token 647: ' (~' (ID: 65176)
  Prédit: ' (~'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (~' → logprob: -0.28376349806785583
    2. '(~' → logprob: -1.4087635278701782
    3. '(' → logprob: -6.908763408660889
    4. ' (' → logprob: -7.158763408660889
    5. '(n' → logprob: -7.283763408660889
    6. ' ' → logprob: -9.533763885498047
    7. ' ' → logprob: -10.783763885498047
    8. '~' → logprob: -11.408763885498047
    9. '   ' → logprob: -11.408763885498047
    10. '(not' → logprob: -11.658763885498047

Token 648: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.896309739408025e-07
    2. ' n' → logprob: -14.250000953674316
    3. '(n' → logprob: -18.375
    4. ')n' → logprob: -18.5
    5. '	n' → logprob: -18.875
    6. '   ' → logprob: -19.375
    7. '_n' → logprob: -19.5
    8. '
' → logprob: -20.875
    9. ')' → logprob: -21.5
    10. '-n' → logprob: -21.625

Token 649: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.2519557774066925
    2. ')' → logprob: -1.5019557476043701
    3. ' )' → logprob: -10.75195598602295
    4. '&' → logprob: -12.75195598602295
    5. '   ' → logprob: -14.50195598602295
    6. ')&&' → logprob: -14.87695598602295
    7. ')%' → logprob: -15.00195598602295
    8. '[' → logprob: -15.75195598602295
    9. ')>>' → logprob: -15.87695598602295
    10. ')#' → logprob: -16.001955032348633

Token 650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005532711511477828
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.000553131103516
    4. '```' → logprob: -17.000553131103516
    5. '0' → logprob: -17.375553131103516
    6. '
' → logprob: -18.250553131103516
    7. '  ' → logprob: -18.375553131103516
    8. '' → logprob: -18.500553131103516
    9. '[' → logprob: -18.500553131103516
    10. '`' → logprob: -18.875553131103516

Token 651: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03445499762892723
    2. '==' → logprob: -4.409454822540283
    3. ' ==' → logprob: -4.409454822540283
    4. ':
' → logprob: -4.659454822540283
    5. '   ' → logprob: -10.409455299377441
    6. ' :' → logprob: -10.409455299377441
    7. '=' → logprob: -12.159455299377441
    8. '0' → logprob: -13.409455299377441
    9. ' :
' → logprob: -13.409455299377441
    10. ':

' → logprob: -13.659455299377441

Token 652: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021201638504862785
    2. '       ' → logprob: -3.8962016105651855
    3. ':' → logprob: -7.7712016105651855
    4. ' print' → logprob: -8.771202087402344
    5. 'print' → logprob: -9.771202087402344
    6. ':
' → logprob: -11.396202087402344
    7. '
' → logprob: -12.771202087402344
    8. '   ' → logprob: -13.146202087402344
    9. '    ' → logprob: -13.646202087402344
    10. '	   ' → logprob: -14.021202087402344

Token 653: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7999231815338135
    2. '       ' → logprob: -1.6749231815338135
    3. ' print' → logprob: -1.6749231815338135
    4. '   ' → logprob: -1.9249231815338135
    5. '#' (adapté à ' #') → logprob: -3.7999231815338135
    6. ' #' → logprob: -5.049922943115234
    7. ' for' → logprob: -7.674922943115234
    8. 'for' → logprob: -7.799922943115234
    9. ' ' → logprob: -8.674922943115234
    10. '    ' → logprob: -9.549922943115234

Token 654: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18547981977462769
    2. ' print' → logprob: -2.3104798793792725
    3. '#' → logprob: -3.6854798793792725
    4. '       ' → logprob: -4.185479640960693
    5. '   ' → logprob: -4.435479640960693
    6. 'i' → logprob: -4.810479640960693
    7. ' i' → logprob: -5.435479640960693
    8. ' #' → logprob: -5.435479640960693
    9. 'for' → logprob: -8.060480117797852
    10. 'pass' → logprob: -8.810480117797852

Token 655: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.00019066639652010053
    2. '   ' → logprob: -9.375190734863281
    3. 'iche' → logprob: -10.375190734863281
    4. 'print' → logprob: -11.000190734863281
    5. '#' → logprob: -11.125190734863281
    6. 'f' → logprob: -11.250190734863281
    7. '       ' → logprob: -11.375190734863281
    8. 'ic' → logprob: -12.500190734863281
    9. 'cher' → logprob: -12.500190734863281
    10. 'ichage' → logprob: -12.750190734863281

Token 656: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6075455546379089
    2. 'n' → logprob: -0.8575455546379089
    3. '(' → logprob: -3.9825456142425537
    4. '1' → logprob: -4.982545375823975
    5. '3' → logprob: -5.857545375823975
    6. '4' → logprob: -6.482545375823975
    7. '2' → logprob: -7.232545375823975
    8. 'print' → logprob: -8.107545852661133
    9. '0' → logprob: -9.607545852661133
    10. '((' → logprob: -9.982545852661133

Token 657: ' paire' (ID: 148856)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5166652798652649
    2. 'print' → logprob: -1.1416652202606201
    3. '(n' → logprob: -2.89166522026062
    4. '1' → logprob: -4.016665458679199
    5. '2' → logprob: -5.391665458679199
    6. '(' → logprob: -6.266665458679199
    7. '3' → logprob: -6.891665458679199
    8. '4' → logprob: -7.391665458679199
    9. 'pair' → logprob: -7.391665458679199
    10. 'p' → logprob: -7.891665458679199

Token 658: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1607608199119568
    2. '(' → logprob: -1.9107608795166016
    3. '1' → logprob: -8.160760879516602
    4. '((' → logprob: -9.285760879516602
    5. 'n' → logprob: -9.660760879516602
    6. '3' → logprob: -10.660760879516602
    7. ' (' → logprob: -10.785760879516602
    8. '4' → logprob: -11.160760879516602
    9. '2' → logprob: -11.535760879516602
    10. '(i' → logprob: -11.535760879516602

Token 659: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4722404479980469
    2. '1' → logprob: -1.0972404479980469
    3. '2' → logprob: -3.222240447998047
    4. '3' → logprob: -6.597240447998047
    5. '4' → logprob: -7.222240447998047
    6. '(n' → logprob: -8.222240447998047
    7. ' n' → logprob: -8.472240447998047
    8. ' ' → logprob: -9.472240447998047
    9. '(' → logprob: -9.722240447998047
    10. '   ' → logprob: -11.597240447998047

Token 660: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17074866592884064
    2. ',' → logprob: -1.9207487106323242
    3. '-' → logprob: -5.420748710632324
    4. '+n' → logprob: -6.045748710632324
    5. 'n' → logprob: -6.920748710632324
    6. ',n' → logprob: -7.420748710632324
    7. '1' → logprob: -7.795748710632324
    8. '   ' → logprob: -7.920748710632324
    9. ' ' → logprob: -8.045748710632324
    10. ' +' → logprob: -8.420748710632324

Token 661: ' b' (ID: 287)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0063779521733522415
    2. '2' → logprob: -5.756378173828125
    3. '1' → logprob: -6.006378173828125
    4. ' n' → logprob: -7.381378173828125
    5. '3' → logprob: -9.506378173828125
    6. ' ' → logprob: -11.631378173828125
    7. '4' → logprob: -11.631378173828125
    8. ')' → logprob: -12.756378173828125
    9. ')n' → logprob: -12.756378173828125
    10. '(n' → logprob: -12.881378173828125

Token 662: '+n' (ID: 87683)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20943087339401245
    2. ')' → logprob: -1.8344309329986572
    3. '+' → logprob: -3.7094309329986572
    4. ',n' → logprob: -5.834430694580078
    5. ' ,' → logprob: -6.959430694580078
    6. '+n' → logprob: -8.584430694580078
    7. 'n' → logprob: -8.959430694580078
    8. '-' → logprob: -9.084430694580078
    9. ')
' → logprob: -9.334430694580078
    10. '   ' → logprob: -9.584430694580078

Token 663: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005779353086836636
    2. ',' → logprob: -8.500577926635742
    3. ')
' → logprob: -8.625577926635742
    4. '+' → logprob: -9.625577926635742
    5. ' )' → logprob: -9.625577926635742
    6. '       ' → logprob: -10.750577926635742
    7. '   ' → logprob: -11.125577926635742
    8. '),' → logprob: -12.000577926635742
    9. ')
' → logprob: -12.500577926635742
    10. ')`' → logprob: -12.875577926635742

Token 664: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4858348071575165
    2. '       ' → logprob: -0.9858348369598389
    3. ' print' → logprob: -4.73583459854126
    4. '(n' → logprob: -6.36083459854126
    5. '```' → logprob: -7.86083459854126
    6. ',' → logprob: -8.360835075378418
    7. '(' → logprob: -8.485835075378418
    8. ' (' → logprob: -9.485835075378418
    9. '(print' → logprob: -9.485835075378418
    10. '   ' → logprob: -9.985835075378418

Token 665: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.292095299111679e-05
    2. ' print' → logprob: -9.500082969665527
    3. '       ' → logprob: -11.750082969665527
    4. '(print' → logprob: -17.25008201599121
    5. '   ' → logprob: -17.50008201599121
    6. '(' → logprob: -19.25008201599121
    7. '	print' → logprob: -19.25008201599121
    8. '.print' → logprob: -19.37508201599121
    9. '(n' → logprob: -20.25008201599121
    10. 'n' → logprob: -20.25008201599121

Token 666: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00013333676906768233
    2. '(' → logprob: -9.500133514404297
    3. 'n' → logprob: -9.750133514404297
    4. ' (' → logprob: -16.625133514404297
    5. '(
' → logprob: -18.125133514404297
    6. ' n' → logprob: -18.375133514404297
    7. '((' → logprob: -19.375133514404297
    8. ',n' → logprob: -19.750133514404297
    9. '	n' → logprob: -20.125133514404297
    10. '()' → logprob: -20.875133514404297

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006409500492736697
    2. ',n' → logprob: -7.500640869140625
    3. ' ,' → logprob: -9.500640869140625
    4. 'n' → logprob: -11.500640869140625
    5. ',b' → logprob: -13.750640869140625
    6. ' n' → logprob: -14.625640869140625
    7. '+' → logprob: -14.625640869140625
    8. '+n' → logprob: -15.125640869140625
    9. ',
' → logprob: -15.375640869140625
    10. 'b' → logprob: -15.875640869140625

Token 668: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006716436706483364
    2. ' b' → logprob: -5.006716251373291
    3. 'n' → logprob: -14.13171672821045
    4. ' n' → logprob: -15.63171672821045
    5. ' ' → logprob: -15.75671672821045
    6. '1' → logprob: -15.88171672821045
    7. '2' → logprob: -16.881715774536133
    8. ' ' → logprob: -17.381715774536133
    9. '   ' → logprob: -18.631715774536133
    10. '	b' → logprob: -18.881715774536133

Token 669: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -3.9888433093437925e-05
    2. '+' → logprob: -10.625040054321289
    3. ' +' → logprob: -11.125040054321289
    4. 'n' → logprob: -14.375040054321289
    5. '+
' → logprob: -16.62504005432129
    6. ',n' → logprob: -17.50004005432129
    7. '+)' → logprob: -17.75004005432129
    8. '   ' → logprob: -18.00004005432129
    9. '+,' → logprob: -18.12504005432129
    10. ')+' → logprob: -18.50004005432129

Token 670: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3676733690081164e-05
    2. ')
' → logprob: -11.25002384185791
    3. '   ' → logprob: -12.25002384185791
    4. ' )' → logprob: -12.62502384185791
    5. '       ' → logprob: -13.62502384185791
    6. ')}' → logprob: -14.75002384185791
    7. ')
' → logprob: -15.37502384185791
    8. '))' → logprob: -16.000022888183594
    9. ')#' → logprob: -16.125022888183594
    10. ')n' → logprob: -16.250022888183594

Token 671: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 672: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04444344341754913
    2. '<|end|>' → logprob: -3.669443368911743
    3. '   ' → logprob: -4.169443607330322
    4. '```' → logprob: -6.794443607330322
    5. ')' → logprob: -7.419443607330322
    6. 'print' → logprob: -8.169443130493164
    7. '#' (adapté à ' #') → logprob: -8.294443130493164
    8. '<|end|>' → logprob: -9.669443130493164
    9. '        ' → logprob: -10.044443130493164
    10. 'else' → logprob: -10.919443130493164

Token 673: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0036089823115617037
    2. '#' → logprob: -5.7536091804504395
    3. '   ' → logprob: -8.753608703613281
    4. 'b' → logprob: -9.503608703613281
    5. '#print' → logprob: -9.753608703613281
    6. ' print' → logprob: -9.878608703613281
    7. 'n' → logprob: -10.753608703613281
    8. 'return' → logprob: -11.003608703613281
    9. 'for' → logprob: -11.003608703613281
    10. 'exit' → logprob: -11.378608703613281

Token 674: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.22912205755710602
    2. 'b' → logprob: -2.3541221618652344
    3. '       ' → logprob: -3.3541221618652344
    4. 'ate' → logprob: -3.7291221618652344
    5. 'print' → logprob: -4.479122161865234
    6. ' b' → logprob: -4.479122161865234
    7. '=' → logprob: -4.604122161865234
    8. '   ' → logprob: -5.479122161865234
    9. ' =' → logprob: -5.604122161865234
    10. 'n' → logprob: -6.354122161865234

Token 675: ' le' (ID: 505)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.239005908370018
    2. 'a' → logprob: -2.9890058040618896
    3. 'c' → logprob: -3.2390058040618896
    4. 'x' → logprob: -3.6140058040618896
    5. 'n' → logprob: -4.114006042480469
    6. 't' → logprob: -4.614006042480469
    7. '(n' → logprob: -4.739006042480469
    8. 'm' → logprob: -5.114006042480469
    9. 'd' → logprob: -5.239006042480469
    10. 'k' → logprob: -5.364006042480469

Token 676: ' XOR' (ID: 147209)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.19171962141990662
    2. 'c' → logprob: -2.8167195320129395
    3. 'n' → logprob: -3.5667195320129395
    4. 'a' → logprob: -3.9417195320129395
    5. 'i' → logprob: -4.3167195320129395
    6. '1' → logprob: -5.0667195320129395
    7. 'k' → logprob: -5.1917195320129395
    8. 'x' → logprob: -5.3167195320129395
    9. 'm' → logprob: -5.4417195320129395
    10. 't' → logprob: -5.5667195320129395

Token 677: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1762559860944748
    2. '=' → logprob: -1.9262559413909912
    3. '(n' → logprob: -5.92625617980957
    4. 'n' → logprob: -6.17625617980957
    5. '   ' → logprob: -6.42625617980957
    6. '_value' → logprob: -6.42625617980957
    7. 'result' → logprob: -6.55125617980957
    8. '=n' → logprob: -6.80125617980957
    9. '_result' → logprob: -6.80125617980957
    10. '_val' → logprob: -7.05125617980957

Token 678: ' n' (ID: 297)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.43815186619758606
    2. 'n' → logprob: -1.0631518363952637
    3. '1' → logprob: -5.438151836395264
    4. '3' → logprob: -6.563151836395264
    5. '2' → logprob: -7.063151836395264
    6. '(n' → logprob: -7.188151836395264
    7. ' b' → logprob: -7.438151836395264
    8. ' n' → logprob: -7.438151836395264
    9. '(' → logprob: -8.063152313232422
    10. 'i' → logprob: -8.438152313232422

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35516777634620667
    2. '^' → logprob: -1.4801677465438843
    3. 'n' → logprob: -3.980167865753174
    4. ' ^' → logprob: -4.355167865753174
    5. ' ,' → logprob: -4.355167865753174
    6. ',n' → logprob: -4.355167865753174
    7. ' n' → logprob: -5.480167865753174
    8. '(n' → logprob: -5.730167865753174
    9. ' and' → logprob: -6.230167865753174
    10. '(' → logprob: -6.480167865753174

Token 680: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04786239564418793
    2. ' b' → logprob: -3.4228622913360596
    3. 'n' → logprob: -4.547862529754639
    4. ' n' → logprob: -6.297862529754639
    5. '1' → logprob: -6.547862529754639
    6. ' ' → logprob: -9.42286205291748
    7. '2' → logprob: -9.54786205291748
    8. '3' → logprob: -9.54786205291748
    9. '   ' → logprob: -12.17286205291748
    10. 'a' → logprob: -12.42286205291748

Token 681: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16570362448692322
    2. '+n' → logprob: -2.915703535079956
    3. ',n' → logprob: -3.540703535079956
    4. 'n' → logprob: -3.665703535079956
    5. '^' → logprob: -3.790703535079956
    6. 'and' → logprob: -4.790703773498535
    7. ' and' → logprob: -5.040703773498535
    8. '+' → logprob: -6.165703773498535
    9. ' ,' → logprob: -6.915703773498535
    10. ' ^' → logprob: -6.915703773498535

Token 682: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.39604201912879944
    2. 'n' → logprob: -1.271041989326477
    3. '1' → logprob: -4.2710418701171875
    4. '(n' → logprob: -4.3960418701171875
    5. ' b' → logprob: -4.8960418701171875
    6. ' n' → logprob: -4.8960418701171875
    7. '(b' → logprob: -6.1460418701171875
    8. ' (' → logprob: -6.2710418701171875
    9. '(' → logprob: -7.3960418701171875
    10. '2' → logprob: -8.646041870117188

Token 683: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2978179454803467
    2. 'b' → logprob: -1.4228179454803467
    3. '1' → logprob: -4.297818183898926
    4. '(n' → logprob: -6.547818183898926
    5. '(' → logprob: -7.422818183898926
    6. ' n' → logprob: -8.172818183898926
    7. '2' → logprob: -8.422818183898926
    8. '(b' → logprob: -8.797818183898926
    9. '3' → logprob: -9.547818183898926
    10. ' b' → logprob: -9.672818183898926

Token 684: '
' (ID: 198)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.2914204001426697
    2. ' ^' → logprob: -1.4164204597473145
    3. ',' → logprob: -5.6664204597473145
    4. 'print' → logprob: -6.1664204597473145
    5. 'n' → logprob: -7.0414204597473145
    6. '   ' → logprob: -7.0414204597473145
    7. '       ' → logprob: -7.1664204597473145
    8. '1' → logprob: -7.9164204597473145
    9. ' ^
' → logprob: -8.291419982910156
    10. ' =' → logprob: -8.916419982910156

Token 685: '       ' (ID: 309)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.2885839343070984
    2. ' ^' → logprob: -2.163583993911743
    3. 'print' → logprob: -2.663583993911743
    4. '       ' → logprob: -3.538583993911743
    5. '   ' → logprob: -4.538583755493164
    6. ',' → logprob: -4.788583755493164
    7. 'n' → logprob: -5.413583755493164
    8. '(n' → logprob: -5.913583755493164
    9. '1' → logprob: -6.163583755493164
    10. ' =' → logprob: -6.538583755493164

Token 686: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024878140538930893
    2. 'x' → logprob: -4.399878025054932
    3. 'c' → logprob: -5.149878025054932
    4. '^' → logprob: -6.149878025054932
    5. 'xor' → logprob: -6.774878025054932
    6. ' print' → logprob: -7.024878025054932
    7. 'b' → logprob: -7.149878025054932
    8. 'a' → logprob: -7.149878025054932
    9. '   ' → logprob: -8.52487850189209
    10. '1' → logprob: -8.77487850189209

Token 687: ' '^' (ID: 117788)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6863717436790466
    2. 'print' → logprob: -0.8113717436790466
    3. 'c' → logprob: -3.1863718032836914
    4. 'xor' → logprob: -5.436371803283691
    5. 'v' → logprob: -6.811371803283691
    6. ' print' → logprob: -7.311371803283691
    7. 't' → logprob: -7.436371803283691
    8. 'b' → logprob: -7.436371803283691
    9. '   ' → logprob: -7.686371803283691
    10. 'k' → logprob: -7.686371803283691

Token 688: ''' (ID: 6)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8723514080047607
    2. '1' → logprob: -1.2473514080047607
    3. '(' → logprob: -2.7473514080047607
    4. '^' → logprob: -3.1223514080047607
    5. 'b' → logprob: -3.2473514080047607
    6. '(n' → logprob: -3.3723514080047607
    7. ' (' → logprob: -3.3723514080047607
    8. ' n' → logprob: -3.4973514080047607
    9. '=' → logprob: -3.9973514080047607
    10. ' ' → logprob: -4.49735164642334

Token 689: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11839910596609116
    2. ' =' → logprob: -2.618399143218994
    3. '^' → logprob: -4.118399143218994
    4. 'n' → logprob: -5.243399143218994
    5. ' n' → logprob: -5.868399143218994
    6. ' ^' → logprob: -5.868399143218994
    7. ' (' → logprob: -6.243399143218994
    8. '=n' → logprob: -6.493399143218994
    9. '(n' → logprob: -6.618399143218994
    10. '(' → logprob: -6.743399143218994

Token 690: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.267379641532898
    2. ' le' → logprob: -1.392379641532898
    3. ' l' → logprob: -1.392379641532898
    4. 'n' → logprob: -2.3923797607421875
    5. ' ' → logprob: -3.2673797607421875
    6. 'le' → logprob: -3.6423797607421875
    7. ' n' → logprob: -4.3923797607421875
    8. '^' → logprob: -4.3923797607421875
    9. '(' → logprob: -4.8923797607421875
    10. ' (' → logprob: -5.5173797607421875

Token 691: ''op' (ID: 70747)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.5142797827720642
    2. ' opér' → logprob: -1.139279842376709
    3. ' xor' → logprob: -3.764279842376709
    4. 'op' → logprob: -3.889279842376709
    5. ' bit' → logprob: -4.889279842376709
    6. 'X' → logprob: -5.014279842376709
    7. ' XOR' → logprob: -5.139279842376709
    8. 'oper' → logprob: -5.139279842376709
    9. '^' → logprob: -5.264279842376709
    10. 'bit' → logprob: -6.514279842376709

Token 692: 'érateur' (ID: 108528)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.0034979116171598434
    2. 'xor' → logprob: -6.253498077392578
    3. 'perator' → logprob: -7.753498077392578
    4. 'érateur' → logprob: -8.128498077392578
    5. '^)' → logprob: -8.253498077392578
    6. 'ˆ' → logprob: -8.503498077392578
    7. '1' → logprob: -9.753498077392578
    8. '=' → logprob: -10.378498077392578
    9. ')' → logprob: -10.503498077392578
    10. 'ERATOR' → logprob: -10.628498077392578

Token 693: ' bit' (ID: 3546)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.20756836235523224
    2. 'n' → logprob: -2.957568407058716
    3. '^' → logprob: -3.082568407058716
    4. 'b' → logprob: -3.457568407058716
    5. ' xor' → logprob: -3.582568407058716
    6. ' ' → logprob: -4.582568168640137
    7. 'X' → logprob: -5.457568168640137
    8. '1' → logprob: -5.957568168640137
    9. ' n' → logprob: -6.207568168640137
    10. '(' → logprob: -6.332568168640137

Token 694: 'wise' (ID: 7480)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.0004207826859783381
    2. 'xor' → logprob: -8.875420570373535
    3. ')' → logprob: -9.500420570373535
    4. ' ^' → logprob: -10.250420570373535
    5. '=' → logprob: -10.500420570373535
    6. 'n' → logprob: -10.625420570373535
    7. 'wise' → logprob: -10.750420570373535
    8. '^)' → logprob: -10.875420570373535
    9. '(n' → logprob: -11.250420570373535
    10. '1' → logprob: -11.625420570373535

Token 695: ' XOR' (ID: 147209)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.35689839720726013
    2. '1' → logprob: -1.8568984270095825
    3. ' ^' → logprob: -2.856898307800293
    4. ' ' → logprob: -3.731898307800293
    5. 'n' → logprob: -3.856898307800293
    6. 'xor' → logprob: -4.356898307800293
    7. ' n' → logprob: -4.731898307800293
    8. '(' → logprob: -5.731898307800293
    9. 'b' → logprob: -5.856898307800293
    10. ' (' → logprob: -5.981898307800293

Token 696: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8158777356147766
    2. '^' → logprob: -1.6908776760101318
    3. ' =' → logprob: -1.9408776760101318
    4. '=' → logprob: -2.440877676010132
    5. '       ' → logprob: -3.065877676010132
    6. ' ^' → logprob: -3.440877676010132
    7. '   ' → logprob: -3.565877676010132
    8. ' print' → logprob: -3.815877676010132
    9. 'n' → logprob: -5.815877914428711
    10. '(n' → logprob: -6.065877914428711

Token 697: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3590112030506134
    2. '^' → logprob: -1.609011173248291
    3. ' ^' → logprob: -3.109011173248291
    4. ' print' → logprob: -3.734011173248291
    5. '   ' → logprob: -4.109011173248291
    6. ' =' → logprob: -5.234011173248291
    7. '=' → logprob: -5.859011173248291
    8. '       ' → logprob: -6.109011173248291
    9. '(n' → logprob: -6.609011173248291
    10. ' ^
' → logprob: -6.859011173248291

Token 698: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.021447980776429176
    2. 'x' → logprob: -4.271448135375977
    3. ' print' → logprob: -5.646448135375977
    4. 'c' → logprob: -6.646448135375977
    5. '   ' → logprob: -7.271448135375977
    6. '^' → logprob: -7.646448135375977
    7. 'b' → logprob: -7.896448135375977
    8. 'a' (adapté à ' a') → logprob: -9.021448135375977
    9. 'xor' → logprob: -9.021448135375977
    10. 'k' → logprob: -9.771448135375977

Token 699: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14273911714553833
    2. '=' → logprob: -2.0177390575408936
    3. ' ' → logprob: -10.142739295959473
    4. ',' → logprob: -11.767739295959473
    5. ' ' → logprob: -12.517739295959473
    6. ' ^=' → logprob: -12.767739295959473
    7. 'n' → logprob: -12.892739295959473
    8. 'a' → logprob: -13.017739295959473
    9. '=n' → logprob: -13.392739295959473
    10. ' ,' → logprob: -14.142739295959473

Token 700: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04873531684279442
    2. ' n' → logprob: -3.0487353801727295
    3. '1' → logprob: -9.298735618591309
    4. '(n' → logprob: -10.673735618591309
    5. 'b' → logprob: -10.798735618591309
    6. ' (' → logprob: -12.423735618591309
    7. '(' → logprob: -12.798735618591309
    8. ' ' → logprob: -12.923735618591309
    9. ' b' → logprob: -13.173735618591309
    10. '   ' → logprob: -14.423735618591309

Token 701: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.4741067886352539
    2. '^' → logprob: -0.9741067886352539
    3. ' ' → logprob: -10.849106788635254
    4. ' ' → logprob: -12.474106788635254
    5. '   ' → logprob: -12.974106788635254
    6. ' ^
' → logprob: -14.099106788635254
    7. '+' → logprob: -14.474106788635254
    8. '  ' → logprob: -14.974106788635254
    9. ' ^=' → logprob: -15.099106788635254
    10. ')' → logprob: -15.224106788635254

Token 702: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031905474606901407
    2. ' b' → logprob: -5.878190517425537
    3. '1' → logprob: -7.878190517425537
    4. '(' → logprob: -12.628190994262695
    5. ' ' → logprob: -12.878190994262695
    6. ' (' → logprob: -14.878190994262695
    7. '(b' → logprob: -15.003190994262695
    8. '	b' → logprob: -16.753190994262695
    9. '   ' → logprob: -17.753190994262695
    10. 'n' → logprob: -18.503190994262695

Token 703: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.16686029732227325
    2. '^' → logprob: -1.9168603420257568
    3. '<|end|>' → logprob: -5.166860103607178
    4. ' ^
' → logprob: -7.916860103607178
    5. '+' → logprob: -8.291860580444336
    6. ' +' → logprob: -9.666860580444336
    7. '1' → logprob: -10.291860580444336
    8. '   ' → logprob: -10.291860580444336
    9. '<|end|>' → logprob: -10.541860580444336
    10. ' ' → logprob: -10.666860580444336

Token 704: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -21.0
    5. '2' → logprob: -22.125
    6. '0' → logprob: -22.125
    7. '  ' → logprob: -22.375
    8. '3' → logprob: -22.5
    9. '`' → logprob: -22.75
    10. '(' → logprob: -24.0

Token 705: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -21.875
    4. '0' → logprob: -22.125
    5. '   ' → logprob: -23.0
    6. '`' → logprob: -23.5
    7. '2' → logprob: -24.125
    8. '(' → logprob: -24.375
    9. '  ' → logprob: -24.375
    10. '' → logprob: -24.375

Token 706: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 707: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1808517426252365
    2. '   ' → logprob: -2.305851697921753
    3. '       ' → logprob: -2.930851697921753
    4. '
' → logprob: -5.180851936340332
    5. '<|end|>' → logprob: -5.180851936340332
    6. ' print' → logprob: -8.305851936340332
    7. ')' → logprob: -8.430851936340332
    8. '#' → logprob: -9.055851936340332
    9. 'a' → logprob: -9.055851936340332
    10. '    
' → logprob: -9.305851936340332

Token 708: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32190319895744324
    2. 'print' → logprob: -1.3219032287597656
    3. '   ' → logprob: -5.321903228759766
    4. '
' → logprob: -6.446903228759766
    5. ' print' → logprob: -6.821903228759766
    6. '<|end|>' → logprob: -7.196903228759766
    7. '        
' → logprob: -8.946903228759766
    8. '```' → logprob: -10.571903228759766
    9. '#' (adapté à ' #') → logprob: -10.821903228759766
    10. '           ' → logprob: -11.071903228759766

Token 709: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.380904672667384e-05
    2. ' print' → logprob: -10.375033378601074
    3. '   ' → logprob: -14.000033378601074
    4. '#' → logprob: -14.125033378601074
    5. '       ' → logprob: -15.125033378601074
    6. 'a' → logprob: -15.500033378601074
    7. 'if' → logprob: -15.875033378601074
    8. '
' → logprob: -16.00003433227539
    9. '#print' → logprob: -16.62503433227539
    10. 'for' → logprob: -17.37503433227539

Token 710: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.08523276448249817
    2. 'print' → logprob: -2.585232734680176
    3. '   ' → logprob: -5.960232734680176
    4. 'f' → logprob: -6.960232734680176
    5. 'ic' → logprob: -7.335232734680176
    6. '#' → logprob: -7.585232734680176
    7. '       ' → logprob: -8.085232734680176
    8. 'a' → logprob: -8.210232734680176
    9. '#print' → logprob: -8.585232734680176
    10. 'ichier' → logprob: -8.585232734680176

Token 711: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.30134037137031555
    2. '(a' → logprob: -1.4263403415679932
    3. '(n' → logprob: -4.551340579986572
    4. '(' → logprob: -4.926340579986572
    5. '1' → logprob: -6.926340579986572
    6. 'n' → logprob: -7.301340579986572
    7. 'b' → logprob: -8.551340103149414
    8. '(b' → logprob: -8.801340103149414
    9. ' a' → logprob: -9.051340103149414
    10. '3' → logprob: -10.551340103149414

Token 712: ' paire' (ID: 148856)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004825026262551546
    2. 'n' → logprob: -6.254825115203857
    3. 'b' → logprob: -6.879825115203857
    4. '(n' → logprob: -7.504825115203857
    5. '(a' → logprob: -7.629825115203857
    6. ' a' → logprob: -8.3798246383667
    7. '3' → logprob: -8.5048246383667
    8. '1' → logprob: -8.6298246383667
    9. 'print' → logprob: -8.7548246383667
    10. '(' → logprob: -10.7548246383667

Token 713: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.010301116853952408
    2. '(n' → logprob: -5.135301113128662
    3. '(' → logprob: -5.635301113128662
    4. ' (' → logprob: -7.760301113128662
    5. '(b' → logprob: -8.26030158996582
    6. 'a' → logprob: -9.38530158996582
    7. '(i' → logprob: -11.38530158996582
    8. ' a' → logprob: -11.76030158996582
    9. '   ' → logprob: -13.38530158996582
    10. 'b' → logprob: -14.13530158996582

Token 714: 'n' (ID: 77)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03649744763970375
    2. 'n' → logprob: -3.9114973545074463
    3. '1' → logprob: -4.286497592926025
    4. 'b' → logprob: -6.411497592926025
    5. '3' → logprob: -8.286497116088867
    6. ' a' → logprob: -9.161497116088867
    7. '2' → logprob: -11.036497116088867
    8. '(a' → logprob: -11.411497116088867
    9. '(n' → logprob: -11.411497116088867
    10. ' n' → logprob: -11.786497116088867

Token 715: '+n' (ID: 87683)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003270879853516817
    2. 'a' → logprob: -6.753271102905273
    3. ',a' → logprob: -7.128271102905273
    4. ' ,' → logprob: -7.253271102905273
    5. ',n' → logprob: -8.378271102905273
    6. '+' → logprob: -9.128271102905273
    7. '+a' → logprob: -9.253271102905273
    8. ' a' → logprob: -9.378271102905273
    9. '+n' → logprob: -10.003271102905273
    10. 'n' → logprob: -11.128271102905273

Token 716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005076381494291127
    2. ',a' → logprob: -8.000507354736328
    3. ' ,' → logprob: -9.000507354736328
    4. ',n' → logprob: -10.875507354736328
    5. '+a' → logprob: -11.000507354736328
    6. '+' → logprob: -12.250507354736328
    7. 'a' → logprob: -12.625507354736328
    8. '+n' → logprob: -12.875507354736328
    9. 'n' → logprob: -14.250507354736328
    10. ',
' → logprob: -14.875507354736328

Token 717: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04352535679936409
    2. ' a' → logprob: -3.293525457382202
    3. 'n' → logprob: -5.418525218963623
    4. ' n' → logprob: -7.043525218963623
    5. '1' → logprob: -9.168525695800781
    6. 'b' → logprob: -10.418525695800781
    7. ' ' → logprob: -11.293525695800781
    8. ' b' → logprob: -12.043525695800781
    9. '   ' → logprob: -12.543525695800781
    10. '	a' → logprob: -13.168525695800781

Token 718: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033604626078158617
    2. '+' → logprob: -6.503360271453857
    3. '+n' → logprob: -6.628360271453857
    4. ' ,' → logprob: -8.378360748291016
    5. ')' → logprob: -8.878360748291016
    6. ',n' → logprob: -9.628360748291016
    7. '+a' → logprob: -9.628360748291016
    8. ',a' → logprob: -11.378360748291016
    9. 'n' → logprob: -11.753360748291016
    10. ' +' → logprob: -12.503360748291016

Token 719: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13556784391403198
    2. ' print' → logprob: -3.1355679035186768
    3. '(n' → logprob: -3.2605679035186768
    4. '   ' → logprob: -4.010567665100098
    5. ')' → logprob: -4.885567665100098
    6. '(' → logprob: -5.135567665100098
    7. '```' → logprob: -5.385567665100098
    8. ',' → logprob: -5.760567665100098
    9. ' (' → logprob: -6.510567665100098
    10. ' ,' → logprob: -7.135567665100098

Token 720: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.500108141452074e-05
    2. ' print' → logprob: -10.375035285949707
    3. '   ' → logprob: -12.750035285949707
    4. '(n' → logprob: -14.375035285949707
    5. 'n' → logprob: -15.625035285949707
    6. '(print' → logprob: -16.00003433227539
    7. '(' → logprob: -18.12503433227539
    8. '       ' → logprob: -18.37503433227539
    9. '	print' → logprob: -18.62503433227539
    10. '.print' → logprob: -18.75003433227539

Token 721: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20186322927474976
    2. '(n' → logprob: -1.7018632888793945
    3. ' n' → logprob: -7.8268632888793945
    4. '(' → logprob: -10.076863288879395
    5. '2' → logprob: -12.201863288879395
    6. ' (' → logprob: -13.076863288879395
    7. '	n' → logprob: -14.201863288879395
    8. '   ' → logprob: -14.701863288879395
    9. '1' → logprob: -15.201863288879395
    10. '_n' → logprob: -16.451862335205078

Token 722: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.00018363336857873946
    2. '+' → logprob: -8.750184059143066
    3. ' +' → logprob: -10.625184059143066
    4. ',' → logprob: -14.375184059143066
    5. 'n' → logprob: -16.00018310546875
    6. ' ' → logprob: -17.37518310546875
    7. '+
' → logprob: -17.50018310546875
    8. '+,' → logprob: -18.00018310546875
    9. '*' → logprob: -18.25018310546875
    10. '-n' → logprob: -18.50018310546875

Token 723: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1557283111615106e-05
    2. ',a' → logprob: -10.625041961669922
    3. ' ,' → logprob: -11.000041961669922
    4. 'a' → logprob: -15.625041961669922
    5. ')' → logprob: -16.000041961669922
    6. ',n' → logprob: -16.125041961669922
    7. ',
' → logprob: -17.375041961669922
    8. ',b' → logprob: -18.250041961669922
    9. ' a' → logprob: -18.375041961669922
    10. ',end' → logprob: -19.375041961669922

Token 724: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007099286303855479
    2. ' a' → logprob: -7.2507100105285645
    3. '	a' → logprob: -20.000709533691406
    4. ' ' → logprob: -20.375709533691406
    5. ' ' → logprob: -21.125709533691406
    6. ')' → logprob: -21.750709533691406
    7. '   ' → logprob: -22.250709533691406
    8. '
' → logprob: -22.500709533691406
    9. ' 
' → logprob: -22.625709533691406
    10. ')a' → logprob: -22.625709533691406

Token 725: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. ')
' → logprob: -11.125017166137695
    3. '   ' → logprob: -14.000017166137695
    4. ' )' → logprob: -14.000017166137695
    5. ')n' → logprob: -16.250017166137695
    6. ')a' → logprob: -17.125017166137695
    7. '))' → logprob: -17.500017166137695
    8. '+' → logprob: -17.500017166137695
    9. ')}' → logprob: -17.500017166137695
    10. '```' → logprob: -17.875017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 723
Tokens correctement prédits (1ère position, stricte): 228
Tokens correctement prédits (1ère position, avec adaptation): 240
Tokens correctement prédits (top 10): 443
Précision stricte (1ère position): 31.54%
Précision adaptée (1ère position): 33.20%
Précision (top 10): 61.27%
================================================================================
