================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from operator import itemgetter

n, m = map(int, stdin.readline().split())
hs = list(map(int, stdin.readline().split()))
ans = [1] * n

for _ in range(m):
    a, b = map(int, stdin.readline().split())
    a -= 1; b -= 1
    if hs[a] == hs[b]:
        ans[a] = ans[b] = 0
    elif hs[a] < hs[b]:
        ans[a] = 0
    else:
        ans[b] = 0

print(sum(ans))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.050936125218868256
    2. ' argv' → logprob: -3.550936222076416
    3. 'exit' → logprob: -4.050936222076416
    4. ' exit' → logprob: -6.675936222076416
    5. 'stdout' → logprob: -6.800936222076416
    6. 'path' → logprob: -7.550936222076416
    7. 'stdin' → logprob: -8.175935745239258
    8. 'import' → logprob: -8.550935745239258
    9. 'version' → logprob: -9.300935745239258
    10. 'stderr' → logprob: -10.175935745239258

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0016966033726930618
    2. '.readline' → logprob: -6.876696586608887
    3. '\n' → logprob: -8.001696586608887
    4. '.read' → logprob: -9.251696586608887
    5. '.
' → logprob: -9.626696586608887
    6. 'import' → logprob: -10.001696586608887
    7. '
' → logprob: -10.501696586608887
    8. '\' → logprob: -10.876696586608887
    9. '```' → logprob: -11.001696586608887
    10. ',' → logprob: -11.626696586608887

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09893980622291565
    2. 'for' → logprob: -3.598939895629883
    3. 'import' → logprob: -3.848939895629883
    4. '.readline' → logprob: -4.223939895629883
    5. '\n' → logprob: -4.598939895629883
    6. 'print' → logprob: -5.598939895629883
    7. '' → logprob: -5.598939895629883
    8. '```' → logprob: -5.973939895629883
    9. '
' → logprob: -6.348939895629883
    10. ',' → logprob: -6.473939895629883

Token 6: ' operator' (ID: 11019)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.020723707973957062
    2. ' sys' → logprob: -4.145723819732666
    3. ' io' → logprob: -5.770723819732666
    4. 'os' → logprob: -6.895723819732666
    5. ' typing' → logprob: -8.270723342895508
    6. ' math' → logprob: -9.770723342895508
    7. ' space' → logprob: -9.895723342895508
    8. 'sys' → logprob: -10.270723342895508
    9. ' stdout' → logprob: -10.520723342895508
    10. ' string' → logprob: -10.770723342895508

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04893411323428154
    2. 'import' → logprob: -3.0489342212677
    3. ' ' → logprob: -8.798933982849121
    4. '<|end|>' → logprob: -8.923933982849121
    5. '	import' → logprob: -10.048933982849121
    6. '.' → logprob: -12.048933982849121
    7. '_import' → logprob: -12.548933982849121
    8. '<|end|>' → logprob: -13.548933982849121
    9. '  ' → logprob: -13.798933982849121
    10. ' Import' → logprob: -14.048933982849121

Token 8: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.41929757595062256
    2. ' add' → logprob: -1.2942975759506226
    3. ' ' → logprob: -3.419297695159912
    4. ' import' → logprob: -4.294297695159912
    5. 'item' → logprob: -4.294297695159912
    6. 'add' → logprob: -5.294297695159912
    7. ' mul' → logprob: -6.544297695159912
    8. 'import' → logprob: -8.169297218322754
    9. '  ' → logprob: -8.294297218322754
    10. 'getitem' → logprob: -8.419297218322754

Token 9: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0006573928403668106
    2. 'get' → logprob: -7.375657558441162
    3. 'g' → logprob: -11.375657081604004
    4. 'gett' → logprob: -11.500657081604004
    5. 'getitem' → logprob: -11.875657081604004
    6. 'attr' → logprob: -14.250657081604004
    7. 'gte' → logprob: -14.875657081604004
    8. 'gt' → logprob: -15.125657081604004
    9. 'ge' → logprob: -15.250657081604004
    10. 'item' → logprob: -15.875657081604004

Token 10: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7963261604309082
    2. '

' → logprob: -1.2963261604309082
    3. '\n' → logprob: -1.6713261604309082
    4. 'for' → logprob: -3.671326160430908
    5. '\' → logprob: -4.421326160430908
    6. '' → logprob: -4.546326160430908
    7. '```' → logprob: -4.546326160430908
    8. 'newline' → logprob: -4.546326160430908
    9. ',' → logprob: -5.421326160430908
    10. 'import' → logprob: -5.671326160430908

Token 11: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5633329749107361
    2. 'for' → logprob: -1.8133330345153809
    3. '\' → logprob: -2.438333034515381
    4. 'data' → logprob: -2.563333034515381
    5. '`' → logprob: -3.688333034515381
    6. '```' → logprob: -4.188333034515381
    7. '.' → logprob: -4.188333034515381
    8. '' → logprob: -5.438333034515381
    9. '=' → logprob: -5.438333034515381
    10. ',' → logprob: -5.563333034515381

Token 12: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13169796764850616
    2. '=' → logprob: -2.1316978931427
    3. ',' → logprob: -6.006698131561279
    4. ' ' → logprob: -6.256698131561279
    5. '.' → logprob: -9.631697654724121
    6. ' ,' → logprob: -9.631697654724121
    7. '_' → logprob: -9.631697654724121
    8. '  ' → logprob: -9.756697654724121
    9. ')' → logprob: -10.131697654724121
    10. 's' → logprob: -10.756697654724121

Token 13: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5842148661613464
    2. 'm' → logprob: -1.5842149257659912
    3. ' ' → logprob: -1.5842149257659912
    4. ' k' → logprob: -3.834214925765991
    5. ' =' → logprob: -5.334214687347412
    6. '=' → logprob: -5.959214687347412
    7. 'k' → logprob: -7.709214687347412
    8. ' input' → logprob: -7.959214687347412
    9. ' s' → logprob: -8.08421516418457
    10. ' q' → logprob: -8.20921516418457

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055444538593292236
    2. '=' → logprob: -2.9304444789886475
    3. ',' → logprob: -7.555444717407227
    4. ' ,' → logprob: -10.805444717407227
    5. ' ' → logprob: -11.430444717407227
    6. ')' → logprob: -12.680444717407227
    7. ' =
' → logprob: -13.930444717407227
    8. '<|end|>' → logprob: -14.305444717407227
    9. ' =",' → logprob: -14.680444717407227
    10. '=input' → logprob: -14.805444717407227

Token 15: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004305615089833736
    2. 'map' → logprob: -5.504305839538574
    3. ' input' → logprob: -9.129305839538574
    4. ' stdin' → logprob: -9.129305839538574
    5. ' ' → logprob: -12.629305839538574
    6. 'input' → logprob: -12.879305839538574
    7. ' list' → logprob: -13.129305839538574
    8. 'stdin' → logprob: -13.254305839538574
    9. ' [' → logprob: -15.379305839538574
    10. '	map' → logprob: -15.879305839538574

Token 16: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.035756856203079224
    2. '(lambda' → logprob: -4.035757064819336
    3. '(int' → logprob: -4.785757064819336
    4. '(str' → logprob: -5.035757064819336
    5. '<|end|>' → logprob: -6.410757064819336
    6. '(user' → logprob: -9.410757064819336
    7. '<|end|>' → logprob: -9.785757064819336
    8. '(
' → logprob: -9.785757064819336
    9. '(eval' → logprob: -10.035757064819336
    10. '(range' → logprob: -10.035757064819336

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07215842604637146
    2. '(stdin' → logprob: -2.6971583366394043
    3. '(' → logprob: -7.447158336639404
    4. ',int' → logprob: -7.947158336639404
    5. 'stdin' → logprob: -8.072158813476562
    6. '<|end|>' → logprob: -8.322158813476562
    7. ',input' → logprob: -8.447158813476562
    8. ',std' → logprob: -9.322158813476562
    9. ' ,' → logprob: -9.447158813476562
    10. ')' → logprob: -9.822158813476562

Token 18: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.25587931275367737
    2. 'stdin' → logprob: -1.505879282951355
    3. ' input' → logprob: -6.3808794021606445
    4. 'input' → logprob: -6.5058794021606445
    5. '(stdin' → logprob: -7.2558794021606445
    6. ')' → logprob: -10.630879402160645
    7. '.stdin' → logprob: -11.630879402160645
    8. 'str' → logprob: -12.380879402160645
    9. ' ' → logprob: -12.505879402160645
    10. ' )' → logprob: -13.505879402160645

Token 19: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0076799700036644936
    2. '.read' → logprob: -4.8826799392700195
    3. '.' → logprob: -9.63267993927002
    4. '.readlines' → logprob: -12.00767993927002
    5. '.Read' → logprob: -14.13267993927002
    6. ').' → logprob: -14.50767993927002
    7. '.next' → logprob: -15.88267993927002
    8. ' .' → logprob: -16.132680892944336
    9. '.stdin' → logprob: -16.382680892944336
    10. '.READ' → logprob: -16.382680892944336

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3891631066799164
    2. '())' → logprob: -1.2641631364822388
    3. '()' → logprob: -3.264163017272949
    4. '()[' → logprob: -7.514163017272949
    5. '(),' → logprob: -7.889163017272949
    6. ')' → logprob: -7.889163017272949
    7. '(' → logprob: -8.88916301727295
    8. '()))' → logprob: -9.26416301727295
    9. '());' → logprob: -10.63916301727295
    10. '()]' → logprob: -11.13916301727295

Token 21: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1289348155260086
    2. 'split' → logprob: -2.128934860229492
    3. 'rstrip' → logprob: -6.253934860229492
    4. 'read' → logprob: -9.628934860229492
    5. ')' → logprob: -11.503934860229492
    6. ' strip' → logprob: -12.628934860229492
    7. ' split' → logprob: -14.128934860229492
    8. '-strip' → logprob: -14.878934860229492
    9. '_strip' → logprob: -15.128934860229492
    10. '(strip' → logprob: -15.253934860229492

Token 22: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013772407546639442
    2. '))' → logprob: -4.388772487640381
    3. '())' → logprob: -6.763772487640381
    4. '()' → logprob: -9.263772010803223
    5. '()))' → logprob: -12.263772010803223
    6. '),' → logprob: -12.638772010803223
    7. ')))' → logprob: -13.263772010803223
    8. ' )' → logprob: -15.013772010803223
    9. ')")' → logprob: -15.263772010803223
    10. ')`' → logprob: -15.388772010803223

Token 23: 'hs' (ID: 9467)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.2048148512840271
    2. 'arr' → logprob: -3.204814910888672
    3. 'array' → logprob: -3.829814910888672
    4. 'items' → logprob: -4.204814910888672
    5. 'points' → logprob: -4.329814910888672
    6. 'a' → logprob: -4.579814910888672
    7. 'lst' → logprob: -4.954814910888672
    8. 'students' → logprob: -4.954814910888672
    9. 'rows' → logprob: -5.079814910888672
    10. 'lines' → logprob: -5.329814910888672

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42680472135543823
    2. '=' → logprob: -1.176804780960083
    3. 's' → logprob: -3.426804780960083
    4. ',' → logprob: -6.176804542541504
    5. 'paces' → logprob: -6.176804542541504
    6. '[' → logprob: -6.801804542541504
    7. '_' → logprob: -7.926804542541504
    8. '[]' → logprob: -8.676804542541504
    9. ' ' → logprob: -9.176804542541504
    10. '[:]' → logprob: -9.176804542541504

Token 25: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12011896818876266
    2. ' list' → logprob: -2.2451188564300537
    3. '[list' → logprob: -5.495119094848633
    4. ' [' → logprob: -6.870119094848633
    5. '[' → logprob: -6.870119094848633
    6. '[]' → logprob: -7.495119094848633
    7. ' []' → logprob: -7.870119094848633
    8. 'map' → logprob: -9.245119094848633
    9. '[int' → logprob: -11.495119094848633
    10. ' map' → logprob: -11.495119094848633

Token 26: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27531740069389343
    2. '(map' → logprob: -1.5253174304962158
    3. '(range' → logprob: -4.275317192077637
    4. '(int' → logprob: -4.900317192077637
    5. '(stdin' → logprob: -7.650317192077637
    6. '()' → logprob: -7.900317192077637
    7. '(filter' → logprob: -8.650317192077637
    8. '(zip' → logprob: -9.775317192077637
    9. '(s' → logprob: -9.775317192077637
    10. '(
' → logprob: -10.025317192077637

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009190816199406981
    2. '(' → logprob: -7.000918865203857
    3. 'int' → logprob: -13.250919342041016
    4. '=int' → logprob: -13.250919342041016
    5. '<int' → logprob: -13.375919342041016
    6. '[int' → logprob: -14.375919342041016
    7. '(lambda' → logprob: -14.500919342041016
    8. '(str' → logprob: -14.500919342041016
    9. '(
' → logprob: -15.250919342041016
    10. ',int' → logprob: -15.625919342041016

Token 28: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.09382260590791702
    2. ',' → logprob: -2.593822717666626
    3. '(' → logprob: -4.218822479248047
    4. '(),' → logprob: -10.468822479248047
    5. '(st' → logprob: -11.093822479248047
    6. ' ,' → logprob: -11.343822479248047
    7. '(stdout' → logprob: -11.843822479248047
    8. ')' → logprob: -11.843822479248047
    9. '(std' → logprob: -11.843822479248047
    10. 'stdin' → logprob: -12.343822479248047

Token 29: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.01660304144024849
    2. ' stdin' → logprob: -4.141602993011475
    3. '(stdin' → logprob: -7.516602993011475
    4. 'stdout' → logprob: -11.516603469848633
    5. '.stdin' → logprob: -11.641603469848633
    6. ')' → logprob: -12.516603469848633
    7. 'std' → logprob: -14.516603469848633
    8. 'st' → logprob: -14.641603469848633
    9. ' ' → logprob: -15.266603469848633
    10. 'stderr' → logprob: -16.141603469848633

Token 30: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0012855908134952188
    2. '().' → logprob: -6.751285552978516
    3. '.' → logprob: -9.626285552978516
    4. '(stdin' → logprob: -10.126285552978516
    5. '.readlines' → logprob: -12.376285552978516
    6. '.read' → logprob: -13.126285552978516
    7. '.stdin' → logprob: -13.251285552978516
    8. ').' → logprob: -15.126285552978516
    9. ' readline' → logprob: -15.376285552978516
    10. '()' → logprob: -15.376285552978516

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.2961512513575144e-05
    2. '()' → logprob: -10.750022888183594
    3. ' ().' → logprob: -14.125022888183594
    4. '()))' → logprob: -15.875022888183594
    5. '()));' → logprob: -16.375022888183594
    6. '().'' → logprob: -16.500022888183594
    7. '.' → logprob: -16.625022888183594
    8. '()-' → logprob: -16.625022888183594
    9. '().__' → logprob: -16.750022888183594
    10. ')' → logprob: -16.875022888183594

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010926496179308742
    2. 'strip' → logprob: -9.250109672546387
    3. ' split' → logprob: -11.500109672546387
    4. 'rstrip' → logprob: -12.875109672546387
    5. 'read' → logprob: -15.625109672546387
    6. '(split' → logprob: -16.00010871887207
    7. 'spl' → logprob: -16.12510871887207
    8. ')' → logprob: -18.50010871887207
    9. '.split' → logprob: -18.50010871887207
    10. 's' → logprob: -18.75010871887207

Token 33: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3949633240699768
    2. '))' → logprob: -1.144963264465332
    3. '())' → logprob: -5.394963264465332
    4. ')' → logprob: -6.394963264465332
    5. '()' → logprob: -6.394963264465332
    6. '(' → logprob: -9.519963264465332
    7. '()))
' → logprob: -10.519963264465332
    8. ')))' → logprob: -10.894963264465332
    9. '()));' → logprob: -11.019963264465332
    10. '(),' → logprob: -11.519963264465332

Token 34: 'ans' (ID: 616)
  Prédit: 'hs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.26638615131378174
    2. 'dp' → logprob: -3.516386032104492
    3. 'sorted' → logprob: -3.516386032104492
    4. 's' → logprob: -3.891386032104492
    5. 'result' → logprob: -3.891386032104492
    6. '\n' → logprob: -3.891386032104492
    7. 'for' → logprob: -4.141386032104492
    8. '
' → logprob: -4.266386032104492
    9. 'scores' → logprob: -4.891386032104492
    10. 'data' → logprob: -4.891386032104492

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029791107401251793
    2. '=' → logprob: -3.5297911167144775
    3. '_' → logprob: -10.529790878295898
    4. ' ' → logprob: -12.904790878295898
    5. '[:]' → logprob: -12.904790878295898
    6. 's' → logprob: -13.279790878295898
    7. ' =)' → logprob: -13.404790878295898
    8. ',' → logprob: -13.779790878295898
    9. ' +=' → logprob: -13.779790878295898
    10. '[' → logprob: -13.904790878295898

Token 36: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.19666869938373566
    2. ' []' → logprob: -2.6966686248779297
    3. '[' → logprob: -2.9466686248779297
    4. '0' → logprob: -3.4466686248779297
    5. ' [' → logprob: -4.44666862487793
    6. 'float' → logprob: -5.69666862487793
    7. '[max' → logprob: -6.19666862487793
    8. ' ' → logprob: -6.44666862487793
    9. '[h' → logprob: -6.69666862487793
    10. '[int' → logprob: -6.69666862487793

Token 37: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034488745033741
    2. '(' → logprob: -4.534488677978516
    3. '-' → logprob: -4.659488677978516
    4. 'float' → logprob: -5.034488677978516
    5. 'False' → logprob: -6.909488677978516
    6. '[' → logprob: -7.034488677978516
    7. ' ' → logprob: -7.409488677978516
    8. 'hs' → logprob: -7.409488677978516
    9. '100' → logprob: -7.659488677978516
    10. ']' → logprob: -7.909488677978516

Token 38: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010429716669023037
    2. ']*' → logprob: -5.010429859161377
    3. ' ]' → logprob: -6.385429859161377
    4. ')]' → logprob: -7.010429859161377
    5. ' for' → logprob: -7.510429859161377
    6. ']*(' → logprob: -8.385429382324219
    7. ')' → logprob: -8.885429382324219
    8. 'for' → logprob: -9.885429382324219
    9. '])' → logprob: -10.135429382324219
    10. ',' → logprob: -10.635429382324219

Token 39: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6764598488807678
    2. ' for' → logprob: -1.426459789276123
    3. 'for' → logprob: -2.176459789276123
    4. ' ]' → logprob: -2.426459789276123
    5. ' ' → logprob: -4.051459789276123
    6. '0' → logprob: -4.801459789276123
    7. '\n' → logprob: -5.301459789276123
    8. ']*' → logprob: -5.426459789276123
    9. ')' → logprob: -5.801459789276123
    10. '+' → logprob: -6.176459789276123

Token 40: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014669344760477543
    2. 'm' → logprob: -4.514669418334961
    3. ' n' → logprob: -5.764669418334961
    4. '(n' → logprob: -8.014669418334961
    5. '(' → logprob: -9.639669418334961
    6. ' m' → logprob: -10.389669418334961
    7. '(m' → logprob: -10.764669418334961
    8. ' (' → logprob: -10.764669418334961
    9. 'nm' → logprob: -12.764669418334961
    10. 'len' → logprob: -12.889669418334961

Token 41: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13455261290073395
    2. 'for' → logprob: -2.8845527172088623
    3. '
' → logprob: -3.5095527172088623
    4. '\n' → logprob: -4.259552478790283
    5. ' for' → logprob: -4.259552478790283
    6. '' → logprob: -5.259552478790283
    7. '  
' → logprob: -6.134552478790283
    8. ' 
' → logprob: -6.259552478790283
    9. '```' → logprob: -6.634552478790283
    10. '<|end|>' → logprob: -7.759552478790283

Token 42: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005278938449919224
    2. ' for' → logprob: -5.880279064178467
    3. 'hs' → logprob: -6.255279064178467
    4. '
' → logprob: -8.630278587341309
    5. '\n' → logprob: -10.005278587341309
    6. 'indices' → logprob: -10.630278587341309
    7. '```' → logprob: -10.755278587341309
    8. 's' → logprob: -10.755278587341309
    9. '.' → logprob: -10.880278587341309
    10. '  
' → logprob: -10.880278587341309

Token 43: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01132107526063919
    2. ' _' → logprob: -5.136321067810059
    3. 'i' → logprob: -5.636321067810059
    4. '_' → logprob: -6.386321067810059
    5. ' ' → logprob: -9.886321067810059
    6. '_i' → logprob: -10.136321067810059
    7. ' ' → logprob: -11.136321067810059
    8. '	i' → logprob: -11.386321067810059
    9. ' range' → logprob: -12.511321067810059
    10. '  ' → logprob: -12.886321067810059

Token 44: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.03076171875
    2. ' in' → logprob: -1.15576171875
    3. ' ' → logprob: -1.28076171875
    4. 'i' → logprob: -3.90576171875
    5. ' i' → logprob: -3.90576171875
    6. '  ' → logprob: -5.65576171875
    7. '<|end|>' → logprob: -6.28076171875
    8. '_' → logprob: -6.40576171875
    9. 'n' → logprob: -7.15576171875
    10. ' _' → logprob: -7.53076171875

Token 45: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007009698543697596
    2. ' range' → logprob: -5.007009506225586
    3. 'hs' → logprob: -9.132009506225586
    4. '(range' → logprob: -9.257009506225586
    5. 'ange' → logprob: -9.757009506225586
    6. 's' → logprob: -11.632009506225586
    7. 'n' → logprob: -12.257009506225586
    8. ' hs' → logprob: -12.882009506225586
    9. ' xrange' → logprob: -13.007009506225586
    10. '	range' → logprob: -13.007009506225586

Token 46: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.47491851449012756
    2. '(' → logprob: -0.9749184846878052
    3. '(n' → logprob: -7.724918365478516
    4. ' (' → logprob: -7.974918365478516
    5. ' m' → logprob: -10.224918365478516
    6. 'm' → logprob: -11.599918365478516
    7. '(
' → logprob: -12.724918365478516
    8. '(s' → logprob: -12.974918365478516
    9. '(range' → logprob: -13.349918365478516
    10. '(space' → logprob: -13.724918365478516

Token 47: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39037632942199707
    2. '):' → logprob: -1.140376329421997
    3. ' )' → logprob: -6.265376091003418
    4. ' ):' → logprob: -6.515376091003418
    5. ',' → logprob: -9.765376091003418
    6. '):
' → logprob: -10.765376091003418
    7. ':' → logprob: -10.765376091003418
    8. '-' → logprob: -12.515376091003418
    9. '),' → logprob: -12.890376091003418
    10. ' ' → logprob: -13.390376091003418

Token 48: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3670865297317505
    2. '   ' → logprob: -1.9920865297317505
    3. ' hs' → logprob: -2.117086410522461
    4. ' h' → logprob: -2.617086410522461
    5. ',' → logprob: -2.617086410522461
    6. ' readline' → logprob: -2.742086410522461
    7. ':' → logprob: -3.367086410522461
    8. ' 
' → logprob: -3.367086410522461
    9. ' ,' → logprob: -3.492086410522461
    10. '  ' → logprob: -3.867086410522461

Token 49: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.07010304182767868
    2. 'l' → logprob: -3.3201029300689697
    3. 'u' → logprob: -3.8201029300689697
    4. 'x' → logprob: -5.195103168487549
    5. 's' → logprob: -6.820103168487549
    6. 'i' → logprob: -6.945103168487549
    7. 'f' → logprob: -7.695103168487549
    8. ' a' → logprob: -7.945103168487549
    9. 'p' → logprob: -8.82010269165039
    10. 't' → logprob: -8.94510269165039

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013065522536635399
    2. ' ,' → logprob: -4.638065338134766
    3. ',b' → logprob: -5.763065338134766
    4. 'b' → logprob: -10.138065338134766
    5. ' ' → logprob: -10.263065338134766
    6. '1' → logprob: -10.638065338134766
    7. ',v' → logprob: -11.388065338134766
    8. 's' → logprob: -11.513065338134766
    9. ',a' → logprob: -11.638065338134766
    10. 'a' → logprob: -11.638065338134766

Token 51: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023418772965669632
    2. ' b' → logprob: -3.773418664932251
    3. ' ' → logprob: -9.023418426513672
    4. '_' → logprob: -10.148418426513672
    5. '<|end|>' → logprob: -12.398418426513672
    6. 's' → logprob: -13.023418426513672
    7. ',' → logprob: -13.773418426513672
    8. '=' → logprob: -13.898418426513672
    9. ',b' → logprob: -14.148418426513672
    10. '_=' → logprob: -14.273418426513672

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10027147084474564
    2. '=' → logprob: -2.350271463394165
    3. ',' → logprob: -9.850271224975586
    4. ' ' → logprob: -11.975271224975586
    5. ')' → logprob: -12.975271224975586
    6. ' =
' → logprob: -13.475271224975586
    7. ' ,' → logprob: -14.350271224975586
    8. ' =)' → logprob: -15.350271224975586
    9. '<|end|>' → logprob: -15.975271224975586
    10. ' =
' → logprob: -16.100271224975586

Token 53: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.25462430715560913
    2. ' map' → logprob: -1.504624366760254
    3. ' ' → logprob: -6.879624366760254
    4. '	map' → logprob: -7.254624366760254
    5. '=' → logprob: -8.129624366760254
    6. ' =' → logprob: -8.754624366760254
    7. ',map' → logprob: -8.879624366760254
    8. ',' → logprob: -8.879624366760254
    9. '[' → logprob: -10.254624366760254
    10. '(map' → logprob: -10.379624366760254

Token 54: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018228022381663322
    2. '(' → logprob: -4.018228054046631
    3. '(in' → logprob: -10.143227577209473
    4. '(lambda' → logprob: -11.268227577209473
    5. '(str' → logprob: -11.393227577209473
    6. '<int' → logprob: -12.518227577209473
    7. ' (' → logprob: -13.018227577209473
    8. '[int' → logprob: -13.518227577209473
    9. 'int' → logprob: -14.018227577209473
    10. '(i' → logprob: -14.143227577209473

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036323294625617564
    2. ',std' → logprob: -8.37536334991455
    3. '(stdin' → logprob: -9.87536334991455
    4. ' ,' → logprob: -10.50036334991455
    5. ',int' → logprob: -10.87536334991455
    6. ',input' → logprob: -11.37536334991455
    7. '(),' → logprob: -11.50036334991455
    8. 'stdin' → logprob: -12.25036334991455
    9. '(' → logprob: -12.62536334991455
    10. ',line' → logprob: -14.87536334991455

Token 56: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.38921478390693665
    2. ' stdin' → logprob: -1.1392147541046143
    3. '(stdin' → logprob: -6.139214992523193
    4. ')' → logprob: -9.014214515686035
    5. '.stdin' → logprob: -10.889214515686035
    6. 'stdout' → logprob: -11.014214515686035
    7. ' )' → logprob: -11.389214515686035
    8. 'std' → logprob: -12.514214515686035
    9. ' ' → logprob: -12.889214515686035
    10. ' std' → logprob: -13.014214515686035

Token 57: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.555311381816864
    2. '().' → logprob: -1.4303114414215088
    3. '.' → logprob: -1.6803114414215088
    4. ').' → logprob: -7.93031120300293
    5. '.read' → logprob: -10.18031120300293
    6. ')' → logprob: -10.18031120300293
    7. '()' → logprob: -10.55531120300293
    8. '.)' → logprob: -10.93031120300293
    9. ' .' → logprob: -11.18031120300293
    10. '()).' → logprob: -12.05531120300293

Token 58: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010247035970678553
    2. '()' → logprob: -9.250102043151855
    3. ')' → logprob: -12.875102043151855
    4. '(' → logprob: -13.000102043151855
    5. '().__' → logprob: -14.750102043151855
    6. ' ().' → logprob: -15.000102043151855
    7. '())' → logprob: -15.125102043151855
    8. '.' → logprob: -15.750102043151855
    9. '.readline' → logprob: -15.875102043151855
    10. ' ' → logprob: -16.875102996826172

Token 59: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.153795766294934e-06
    2. 'strip' → logprob: -12.375005722045898
    3. ' split' → logprob: -14.000005722045898
    4. 'rstrip' → logprob: -14.500005722045898
    5. 'spl' → logprob: -15.250005722045898
    6. ')' → logprob: -15.500005722045898
    7. '(split' → logprob: -15.875005722045898
    8. '```' → logprob: -18.0000057220459
    9. 's' → logprob: -18.5000057220459
    10. 'plit' → logprob: -19.7500057220459

Token 60: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039170795935206115
    2. '())' → logprob: -8.750391960144043
    3. ')
' → logprob: -9.000391960144043
    4. '()' → logprob: -9.250391960144043
    5. '))' → logprob: -12.500391960144043
    6. '),' → logprob: -13.625391960144043
    7. '`)' → logprob: -13.750391960144043
    8. ')a' → logprob: -13.750391960144043
    9. ')`' → logprob: -13.875391960144043
    10. ' )' → logprob: -13.875391960144043

Token 61: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.334043025970459
    2. ' if' → logprob: -1.459043025970459
    3. '<|end|>' → logprob: -1.584043025970459
    4. 'if' → logprob: -2.084043025970459
    5. '   ' → logprob: -2.584043025970459
    6. ')' → logprob: -3.209043025970459
    7. '
' → logprob: -3.709043025970459
    8. '  ' → logprob: -5.334043025970459
    9. '[' → logprob: -5.334043025970459
    10. '```' → logprob: -5.584043025970459

Token 62: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.602756142616272
    2. ' if' → logprob: -0.977756142616272
    3. 'a' (adapté à ' a') → logprob: -3.2277560234069824
    4. '   ' → logprob: -3.8527560234069824
    5. ' ' → logprob: -5.227756023406982
    6. ' a' → logprob: -6.727756023406982
    7. ',' → logprob: -6.727756023406982
    8. ':' → logprob: -6.727756023406982
    9. ' 
' → logprob: -6.852756023406982
    10. '' → logprob: -7.477756023406982

Token 63: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4971042275428772
    2. ' -=' → logprob: -0.9971042275428772
    3. ' -' → logprob: -4.497104167938232
    4. '-=' → logprob: -5.122104167938232
    5. ' ' → logprob: -5.372104167938232
    6. ',' → logprob: -8.12210464477539
    7. '[' → logprob: -8.24710464477539
    8. '<|end|>' → logprob: -8.49710464477539
    9. ' >' → logprob: -9.99710464477539
    10. '--' → logprob: -10.37210464477539

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '１' → logprob: -16.125335693359375
    4. '<|end|>' → logprob: -16.375335693359375
    5. '```' → logprob: -17.125335693359375
    6. '   ' → logprob: -17.687835693359375
    7. ' ' → logprob: -18.312835693359375
    8. '۱' → logprob: -18.500335693359375
    9. '-' → logprob: -18.625335693359375
    10. '`' → logprob: -18.687835693359375

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '１' → logprob: -17.750001907348633
    4. '```' → logprob: -18.437501907348633
    5. '<|end|>' → logprob: -18.625001907348633
    6. '۱' → logprob: -19.125001907348633
    7. '১' → logprob: -19.687501907348633
    8. '१' → logprob: -19.687501907348633
    9. '-' → logprob: -19.812501907348633
    10. '2' → logprob: -20.187501907348633

Token 66: ';' (ID: 26)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.010014358907938004
    2. ' b' → logprob: -4.635014533996582
    3. '	b' → logprob: -8.385014533996582
    4. '   ' → logprob: -10.635014533996582
    5. ' ' → logprob: -13.260014533996582
    6. ' ' → logprob: -13.760014533996582
    7. '_b' → logprob: -14.260014533996582
    8. '    ' → logprob: -14.635014533996582
    9. '	' → logprob: -14.885014533996582
    10. ',b' → logprob: -14.885014533996582

Token 68: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.00421706261113286
    2. '-=' → logprob: -6.004217147827148
    3. '-' → logprob: -6.379217147827148
    4. ' ' → logprob: -11.004217147827148
    5. ' -' → logprob: -11.254217147827148
    6. ')' → logprob: -13.629217147827148
    7. '    ' → logprob: -13.754217147827148
    8. ' =' → logprob: -13.754217147827148
    9. '```' → logprob: -13.754217147827148
    10. '<|end|>' → logprob: -13.754217147827148

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038047339767217636
    2. ' ' → logprob: -3.2880473136901855
    3. '<|end|>' → logprob: -12.413047790527344
    4. ' ' → logprob: -14.288047790527344
    5. '<|end|>' → logprob: -15.163047790527344
    6. '0' → logprob: -15.163047790527344
    7. '```' → logprob: -16.163047790527344
    8. '-' → logprob: -16.538047790527344
    9. '2' → logprob: -16.725547790527344
    10. '１' → logprob: -17.163047790527344

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -17.0
    4. '0' → logprob: -18.375
    5. '```' → logprob: -19.0
    6. '１' → logprob: -19.3125
    7. '2' → logprob: -19.375
    8. 'b' → logprob: -20.0
    9. 'a' → logprob: -20.3125
    10. '۱' → logprob: -20.5625

Token 71: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002534521510824561
    2. 'if' → logprob: -6.75253438949585
    3. ' if' → logprob: -7.12753438949585
    4. '
' → logprob: -8.502534866333008
    5. '   ' → logprob: -8.752534866333008
    6. '<|end|>' → logprob: -10.002534866333008
    7. '    
' → logprob: -10.627534866333008
    8. '\n' → logprob: -10.627534866333008
    9. '  
' → logprob: -10.752534866333008
    10. '' → logprob: -10.752534866333008

Token 72: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1407785564661026
    2. 'if' → logprob: -2.5157785415649414
    3. ' if' → logprob: -3.3907785415649414
    4. '   ' → logprob: -4.515778541564941
    5. ' 
' → logprob: -6.015778541564941
    6. '  
' → logprob: -6.765778541564941
    7. '    
' → logprob: -7.015778541564941
    8. '   
' → logprob: -7.765778541564941
    9. '```' → logprob: -8.515778541564941
    10. '<|end|>' → logprob: -8.640778541564941

Token 73: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004534334584604949
    2. 'i' → logprob: -7.750453472137451
    3. ' if' → logprob: -11.125452995300293
    4. '
' → logprob: -12.250452995300293
    5. '```' → logprob: -13.875452995300293
    6. '   ' → logprob: -14.875452995300293
    7. 's' → logprob: -15.500452995300293
    8. ')' → logprob: -15.500452995300293
    9. 'hs' → logprob: -15.625452995300293
    10. ';if' → logprob: -15.750452995300293

Token 74: ' hs' (ID: 59089)
  Prédit: ' hs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hs' → logprob: -0.023369982838630676
    2. 'hs' → logprob: -3.7733700275421143
    3. ' ' → logprob: -9.523369789123535
    4. ' h' → logprob: -11.273369789123535
    5. ' (' → logprob: -11.398369789123535
    6. ' ' → logprob: -11.648369789123535
    7. '  ' → logprob: -12.523369789123535
    8. 's' → logprob: -13.023369789123535
    9. 'h' → logprob: -13.273369789123535
    10. '(' → logprob: -13.273369789123535

Token 75: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.873571692267433e-05
    2. '[' → logprob: -9.750068664550781
    3. 'a' → logprob: -11.625068664550781
    4. '[b' → logprob: -14.125068664550781
    5. '```' → logprob: -15.375068664550781
    6. ' [' → logprob: -15.875068664550781
    7. '[
' → logprob: -16.62506866455078
    8. '][' → logprob: -16.75006866455078
    9. ']' → logprob: -16.75006866455078
    10. '\[' → logprob: -17.25006866455078

Token 76: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00014704519708175212
    2. ']' → logprob: -9.750146865844727
    3. '<' → logprob: -10.500146865844727
    4. ']>' → logprob: -10.500146865844727
    5. ' >' → logprob: -11.125146865844727
    6. '">' → logprob: -12.125146865844727
    7. '==' → logprob: -12.625146865844727
    8. '><' → logprob: -13.625146865844727
    9. '>

' → logprob: -13.750146865844727
    10. '!=' → logprob: -13.750146865844727

Token 77: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0004058858612552285
    2. '<' → logprob: -8.500406265258789
    3. ' >' → logprob: -9.000406265258789
    4. '><' → logprob: -10.625406265258789
    5. '==' → logprob: -11.875406265258789
    6. '">' → logprob: -11.875406265258789
    7. '[' → logprob: -12.000406265258789
    8. '>

' → logprob: -12.125406265258789
    9. '!=' → logprob: -12.500406265258789
    10. '```' → logprob: -12.750406265258789

Token 78: ' hs' (ID: 59089)
  Prédit: 'hs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.0012821375858038664
    2. ' hs' → logprob: -6.876282215118408
    3. ' ' → logprob: -8.87628173828125
    4. '>' → logprob: -9.87628173828125
    5. 's' → logprob: -11.75128173828125
    6. 'h' → logprob: -12.00128173828125
    7. '_' → logprob: -12.12628173828125
    8. '   ' → logprob: -12.25128173828125
    9. '  ' → logprob: -12.75128173828125
    10. '0' → logprob: -12.75128173828125

Token 79: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0013816634891554713
    2. 'b' → logprob: -6.626381874084473
    3. '[' → logprob: -10.376381874084473
    4. 's' → logprob: -11.251381874084473
    5. '[a' → logprob: -12.376381874084473
    6. '```' → logprob: -12.751381874084473
    7. 'a' → logprob: -14.001381874084473
    8. ' b' → logprob: -14.626381874084473
    9. 'hs' → logprob: -14.876381874084473
    10. ' ' → logprob: -14.876381874084473

Token 80: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31866875290870667
    2. ']:' → logprob: -1.5686687231063843
    3. ':' → logprob: -3.443668842315674
    4. '>:' → logprob: -4.068668842315674
    5. ')' → logprob: -5.318668842315674
    6. '>' → logprob: -5.818668842315674
    7. ']' → logprob: -6.568668842315674
    8. '.' → logprob: -6.818668842315674
    9. '}:' → logprob: -6.943668842315674
    10. '=' → logprob: -6.943668842315674

Token 81: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1763160526752472
    2. '   ' → logprob: -2.801316022872925
    3. ':
' → logprob: -3.051316022872925
    4. ' ' → logprob: -3.676316022872925
    5. '[' → logprob: -5.301316261291504
    6. ' and' → logprob: -5.426316261291504
    7. 'ans' → logprob: -5.551316261291504
    8. ',' → logprob: -5.801316261291504
    9. '=' → logprob: -5.801316261291504
    10. 'and' → logprob: -5.926316261291504

Token 82: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.033152706921100616
    2. '   ' → logprob: -3.5331528186798096
    3. ' ans' → logprob: -6.6581525802612305
    4. 'continue' → logprob: -7.1581525802612305
    5. '
' → logprob: -7.5331525802612305
    6. 'if' → logprob: -8.03315258026123
    7. '	ans' → logprob: -8.03315258026123
    8. '       ' → logprob: -9.90815258026123
    9. 'pass' → logprob: -10.65815258026123
    10. ' ' → logprob: -11.28315258026123

Token 83: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00015800826076883823
    2. '[' → logprob: -9.000158309936523
    3. '[min' → logprob: -11.000158309936523
    4. '[b' → logprob: -11.125158309936523
    5. '[max' → logprob: -13.000158309936523
    6. '[i' → logprob: -15.125158309936523
    7. ' [' → logprob: -15.750158309936523
    8. 'a' → logprob: -16.125158309936523
    9. '[A' → logprob: -16.375158309936523
    10. '[m' → logprob: -17.250158309936523

Token 84: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005585906561464071
    2. ']=' → logprob: -5.755585670471191
    3. ']+=' → logprob: -6.130585670471191
    4. ']-' → logprob: -8.880585670471191
    5. ' ]' → logprob: -10.005585670471191
    6. '-' → logprob: -11.380585670471191
    7. ']+' → logprob: -11.630585670471191
    8. '-=' → logprob: -11.755585670471191
    9. '[' → logprob: -12.005585670471191
    10. '],' → logprob: -13.005585670471191

Token 85: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.584782600402832
    2. '=' → logprob: -0.959782600402832
    3. ' -=' → logprob: -3.209782600402832
    4. ' =' → logprob: -4.209782600402832
    5. '+=' → logprob: -5.834782600402832
    6. '-' → logprob: -6.584782600402832
    7. ' +=' → logprob: -8.459782600402832
    8. ' ' → logprob: -11.334782600402832
    9. '*=' → logprob: -11.709782600402832
    10. '.=' → logprob: -12.084782600402832

Token 86: ' ans' (ID: 3345)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005801401566714048
    2. '2' → logprob: -5.380801200866699
    3. ' ' → logprob: -7.005801200866699
    4. 'ans' → logprob: -9.1308012008667
    5. '-' → logprob: -9.2558012008667
    6. '1' → logprob: -10.2558012008667
    7. ' ans' → logprob: -11.5058012008667
    8. '=' → logprob: -12.1308012008667
    9. 'max' → logprob: -13.1308012008667
    10. '3' → logprob: -13.1933012008667

Token 87: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.005792512558400631
    2. 'b' → logprob: -5.505792617797852
    3. '[a' → logprob: -6.380792617797852
    4. 'a' → logprob: -11.130792617797852
    5. '	b' → logprob: -12.630792617797852
    6. '[' → logprob: -14.880792617797852
    7. '_b' → logprob: -15.380792617797852
    8. '```' → logprob: -15.630792617797852
    9. ' b' → logprob: -17.00579261779785
    10. ')b' → logprob: -17.13079261779785

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014573780354112387
    2. ']=' → logprob: -6.751457214355469
    3. ']+' → logprob: -8.626457214355469
    4. ']-' → logprob: -9.376457214355469
    5. ']+=' → logprob: -12.001457214355469
    6. ']==' → logprob: -12.501457214355469
    7. '[' → logprob: -12.501457214355469
    8. '=' → logprob: -12.876457214355469
    9. '+' → logprob: -13.126457214355469
    10. '-' → logprob: -13.501457214355469

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011791547294706106
    2. '-' → logprob: -7.376179218292236
    3. ' =' → logprob: -8.001178741455078
    4. '-=' → logprob: -9.376178741455078
    5. '+' → logprob: -9.501178741455078
    6. '+=' → logprob: -10.376178741455078
    7. '0' → logprob: -11.001178741455078
    8. ' ' → logprob: -12.126178741455078
    9. ' -' → logprob: -13.626178741455078
    10. '*=' → logprob: -14.376178741455078

Token 90: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.044013820588588715
    2. '2' → logprob: -3.169013738632202
    3. ' ' → logprob: -7.169013977050781
    4. 'ans' → logprob: -9.294013977050781
    5. '-' → logprob: -9.544013977050781
    6. '1' → logprob: -10.669013977050781
    7. 'max' → logprob: -11.044013977050781
    8. '3' → logprob: -11.544013977050781
    9. '+' → logprob: -11.794013977050781
    10. ' ans' → logprob: -11.919013977050781

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013859412632882595
    2. '2' → logprob: -4.388859272003174
    3. ' ' → logprob: -6.888859272003174
    4. '-' → logprob: -8.513859748840332
    5. '=' → logprob: -10.138859748840332
    6. '1' → logprob: -10.388859748840332
    7. '3' → logprob: -11.013859748840332
    8. '+' → logprob: -11.701359748840332
    9. 'ans' → logprob: -12.513859748840332
    10. '  ' → logprob: -12.763859748840332

Token 92: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.05492899566888809
    2. ' elif' → logprob: -3.30492901802063
    3. 'else' → logprob: -4.304928779602051
    4. ' else' → logprob: -5.804928779602051
    5. '   ' → logprob: -9.55492877960205
    6. '
' → logprob: -9.55492877960205
    7. '	elif' → logprob: -10.17992877960205
    8. 'e' → logprob: -10.42992877960205
    9. 'el' → logprob: -12.05492877960205
    10. ' ' → logprob: -12.92992877960205

Token 93: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.10311185568571091
    2. 'else' → logprob: -2.603111743927002
    3. ' elif' → logprob: -3.978111743927002
    4. ' else' → logprob: -5.353111743927002
    5. '
' → logprob: -8.10311222076416
    6. 'e' → logprob: -9.22811222076416
    7. 'el' → logprob: -10.97811222076416
    8. ' 
' → logprob: -11.47811222076416
    9. '	elif' → logprob: -11.72811222076416
    10. '   ' → logprob: -11.85311222076416

Token 94: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.08670108020305634
    2. 'else' → logprob: -3.0867011547088623
    3. ' elif' → logprob: -3.4617011547088623
    4. ' else' → logprob: -5.211700916290283
    5. 'e' → logprob: -7.586700916290283
    6. 'el' → logprob: -9.836701393127441
    7. ' ' → logprob: -13.461701393127441
    8. '	elif' → logprob: -13.461701393127441
    9. 'if' → logprob: -13.586701393127441
    10. '   ' → logprob: -14.461701393127441

Token 95: ' hs' (ID: 59089)
  Prédit: ' hs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hs' → logprob: -0.007750725373625755
    2. 'hs' → logprob: -4.882750511169434
    3. ' ' → logprob: -9.632750511169434
    4. ' h' → logprob: -10.507750511169434
    5. ' ' → logprob: -10.882750511169434
    6. ' (' → logprob: -10.882750511169434
    7. '(h' → logprob: -12.507750511169434
    8. '  ' → logprob: -13.007750511169434
    9. ' abs' → logprob: -13.007750511169434
    10. '   ' → logprob: -13.382750511169434

Token 96: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0046802726574242115
    2. '[' → logprob: -5.379680156707764
    3. 'a' → logprob: -10.254680633544922
    4. '[b' → logprob: -11.254680633544922
    5. ']' → logprob: -11.879680633544922
    6. '[
' → logprob: -13.379680633544922
    7. ' [' → logprob: -14.379680633544922
    8. '[max' → logprob: -14.629680633544922
    9. '```' → logprob: -14.629680633544922
    10. '[i' → logprob: -15.629680633544922

Token 97: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8938561677932739
    2. ']' → logprob: -0.8938561677932739
    3. ' >' → logprob: -1.893856167793274
    4. '[' → logprob: -4.018856048583984
    5. ']>' → logprob: -5.143856048583984
    6. ' ' → logprob: -5.893856048583984
    7. ' ]' → logprob: -6.143856048583984
    8. ' <' → logprob: -6.643856048583984
    9. '<' → logprob: -6.768856048583984
    10. ']<' → logprob: -9.518856048583984

Token 98: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.44214436411857605
    2. '>' → logprob: -1.0671443939208984
    3. ' ' → logprob: -5.067144393920898
    4. '[' → logprob: -5.692144393920898
    5. ' <' → logprob: -5.942144393920898
    6. '<' → logprob: -6.942144393920898
    7. ' >
' → logprob: -10.192144393920898
    8. ']' → logprob: -11.817144393920898
    9. ' >
' → logprob: -11.942144393920898
    10. ' >

' → logprob: -12.192144393920898

Token 99: ' hs' (ID: 59089)
  Prédit: ' hs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hs' → logprob: -0.2014690786600113
    2. 'hs' → logprob: -1.70146906375885
    3. ' ' → logprob: -9.951469421386719
    4. ' ' → logprob: -12.201469421386719
    5. 'h' → logprob: -13.701469421386719
    6. ' h' → logprob: -14.201469421386719
    7. '.hs' → logprob: -15.201469421386719
    8. '  ' → logprob: -15.826469421386719
    9. 's' → logprob: -15.826469421386719
    10. '=' → logprob: -16.26396942138672

Token 100: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.1041145626222715e-05
    2. 'b' → logprob: -11.875011444091797
    3. '[' → logprob: -12.625011444091797
    4. '[a' → logprob: -14.625011444091797
    5. '][' → logprob: -16.250011444091797
    6. '	b' → logprob: -16.250011444091797
    7. ']' → logprob: -16.875011444091797
    8. '>b' → logprob: -17.500011444091797
    9. '[h' → logprob: -18.375011444091797
    10. ' [' → logprob: -18.500011444091797

Token 101: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23886799812316895
    2. '):' → logprob: -2.238867998123169
    3. ']:' → logprob: -2.613867998123169
    4. ':
' → logprob: -4.23886775970459
    5. '):
' → logprob: -4.36386775970459
    6. ']:
' → logprob: -5.86386775970459
    7. ']' → logprob: -6.98886775970459
    8. '   ' → logprob: -7.23886775970459
    9. '[' → logprob: -7.98886775970459
    10. ')' → logprob: -7.98886775970459

Token 102: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011048289015889168
    2. '       ' → logprob: -5.136048316955566
    3. 'ans' → logprob: -6.386048316955566
    4. ' ans' → logprob: -6.386048316955566
    5. ':' → logprob: -7.511048316955566
    6. '	ans' → logprob: -7.511048316955566
    7. ' ' → logprob: -9.136048316955566
    8. '```' → logprob: -9.386048316955566
    9. '<|end|>' → logprob: -9.511048316955566
    10. ':
' → logprob: -9.636048316955566

Token 103: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.004205424804240465
    2. ' ans' → logprob: -5.629205226898193
    3. '   ' → logprob: -7.629205226898193
    4. '	ans' → logprob: -9.254205703735352
    5. '       ' → logprob: -10.879205703735352
    6. '           ' → logprob: -13.504205703735352
    7. '(ans' → logprob: -13.629205703735352
    8. '0' → logprob: -14.504205703735352
    9. '    ' → logprob: -15.004205703735352
    10. 'answer' → logprob: -15.379205703735352

Token 104: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.20148292183876038
    2. '[b' → logprob: -1.701482892036438
    3. '[' → logprob: -9.701482772827148
    4. 'a' → logprob: -12.326482772827148
    5. ' [' → logprob: -13.451482772827148
    6. 'b' → logprob: -13.826482772827148
    7. '[i' → logprob: -15.326482772827148
    8. '[c' → logprob: -15.826482772827148
    9. ' ' → logprob: -15.951482772827148
    10. '[A' → logprob: -15.951482772827148

Token 105: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016751693561673164
    2. ']=' → logprob: -4.141751766204834
    3. '=' → logprob: -8.016751289367676
    4. ' ]' → logprob: -8.516751289367676
    5. ']+=' → logprob: -8.766751289367676
    6. ' =' → logprob: -10.641751289367676
    7. '[' → logprob: -12.516751289367676
    8. ']==' → logprob: -14.391751289367676
    9. ')' → logprob: -14.641751289367676
    10. ']
' → logprob: -15.266751289367676

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011050770990550518
    2. ' =' → logprob: -4.511050701141357
    3. '+=' → logprob: -13.136051177978516
    4. '*=' → logprob: -14.761051177978516
    5. '0' → logprob: -15.761051177978516
    6. '.=' → logprob: -16.261051177978516
    7. '-=' → logprob: -16.761051177978516
    8. ' +=' → logprob: -16.761051177978516
    9. ']' → logprob: -16.886051177978516
    10. ']=' → logprob: -16.886051177978516

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '=' → logprob: -16.375024795532227
    4. '   ' → logprob: -16.625024795532227
    5. '  ' → logprob: -17.250024795532227
    6. '1' → logprob: -17.750024795532227
    7. '۰' → logprob: -18.687524795532227
    8. '    ' → logprob: -18.875024795532227
    9. '2' → logprob: -19.062524795532227
    10. '000' → logprob: -19.562524795532227

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.7500057220459
    4. '1' → logprob: -16.8750057220459
    5. '  ' → logprob: -17.6250057220459
    6. '۰' → logprob: -18.4375057220459
    7. '2' → logprob: -18.6250057220459
    8. '=' → logprob: -18.6875057220459
    9. '०' → logprob: -19.4375057220459
    10. '０' → logprob: -19.5625057220459

Token 109: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.1609156131744385
    2. '<|end|>' → logprob: -1.1609156131744385
    3. 'elif' → logprob: -1.4109156131744385
    4. '   ' → logprob: -2.4109156131744385
    5. ' else' → logprob: -3.7859156131744385
    6. '<|end|>' → logprob: -5.285915374755859
    7. ' elif' → logprob: -5.535915374755859
    8. '
' → logprob: -5.785915374755859
    9. ')' → logprob: -6.660915374755859
    10. '\n' → logprob: -6.785915374755859

Token 110: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.04614877700805664
    2. 'else' → logprob: -3.1711487770080566
    3. ' elif' → logprob: -5.921148777008057
    4. ' else' → logprob: -7.921148777008057
    5. '	elif' → logprob: -10.171148300170898
    6. '<|end|>' → logprob: -10.171148300170898
    7. '   ' → logprob: -11.796148300170898
    8. '```' → logprob: -12.796148300170898
    9. 'el' → logprob: -13.296148300170898
    10. ')' → logprob: -13.421148300170898

Token 111: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.002047124784439802
    2. 'elif' → logprob: -6.377047061920166
    3. ' else' → logprob: -8.002047538757324
    4. '   ' → logprob: -11.877047538757324
    5. 'el' → logprob: -13.502047538757324
    6. '	else' → logprob: -14.377047538757324
    7. 'e' → logprob: -14.627047538757324
    8. ' elif' → logprob: -14.877047538757324
    9. '_else' → logprob: -15.627047538757324
    10. 'elses' → logprob: -16.377046585083008

Token 112: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11915501952171326
    2. '   ' → logprob: -2.244154930114746
    3. ':' → logprob: -5.119154930114746
    4. 'ans' → logprob: -8.869154930114746
    5. '      ' → logprob: -10.244154930114746
    6. '     ' → logprob: -10.244154930114746
    7. ' ' → logprob: -10.619154930114746
    8. '    ' → logprob: -10.869154930114746
    9. '  ' → logprob: -10.994154930114746
    10. '<|end|>' → logprob: -11.369154930114746

Token 113: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.713729202747345
    2. 'ans' → logprob: -0.713729202747345
    3. '       ' → logprob: -3.9637291431427
    4. ' ans' → logprob: -6.963729381561279
    5. '	ans' → logprob: -7.838729381561279
    6. ' ' → logprob: -11.713728904724121
    7. '  ' → logprob: -11.838728904724121
    8. '    ' → logprob: -12.338728904724121
    9. '```' → logprob: -12.463728904724121
    10. '     ' → logprob: -12.588728904724121

Token 114: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0011993973748758435
    2. ' ans' → logprob: -6.751199245452881
    3. '   ' → logprob: -10.751199722290039
    4. '	ans' → logprob: -11.876199722290039
    5. '(ans' → logprob: -15.126199722290039
    6. ' ' → logprob: -15.501199722290039
    7. '       ' → logprob: -15.751199722290039
    8. 'answer' → logprob: -17.12619972229004
    9. '  ' → logprob: -17.12619972229004
    10. '_ans' → logprob: -18.12619972229004

Token 115: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.392824874026701e-05
    2. '[' → logprob: -10.62503433227539
    3. 'b' → logprob: -11.62503433227539
    4. '[a' → logprob: -14.87503433227539
    5. ' [' → logprob: -16.00003433227539
    6. '```' → logprob: -16.37503433227539
    7. ' b' → logprob: -17.62503433227539
    8. ' ' → logprob: -17.62503433227539
    9. '`' → logprob: -18.87503433227539
    10. '	b' → logprob: -19.00003433227539

Token 116: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12533798813819885
    2. ']' → logprob: -2.500338077545166
    3. ' =' → logprob: -3.375338077545166
    4. ']=' → logprob: -6.500338077545166
    5. ')' → logprob: -11.125337600708008
    6. ' ]' → logprob: -11.250337600708008
    7. '   ' → logprob: -12.875337600708008
    8. ' ' → logprob: -13.375337600708008
    9. '[' → logprob: -13.750337600708008
    10. ')=' → logprob: -13.750337600708008

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. ' ' → logprob: -18.126928329467773
    4. '.=' → logprob: -19.251928329467773
    5. '＝' → logprob: -19.251928329467773
    6. '   ' → logprob: -19.501928329467773
    7. '*=' → logprob: -20.001928329467773
    8. ')=' → logprob: -20.251928329467773
    9. '`' → logprob: -20.501928329467773
    10. '```' → logprob: -20.751928329467773

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.125158309936523
    4. '۰' → logprob: -19.250158309936523
    5. '<|end|>' → logprob: -19.250158309936523
    6. '```' → logprob: -20.125158309936523
    7. '  ' → logprob: -20.250158309936523
    8. ' ' → logprob: -20.750158309936523
    9. '`' → logprob: -20.750158309936523
    10. '０' → logprob: -21.125158309936523

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -18.75
    4. '   ' → logprob: -19.625
    5. '<|end|>' → logprob: -20.125
    6. '０' → logprob: -20.25
    7. '০' → logprob: -20.6875
    8. ' ' → logprob: -20.8125
    9. '  ' → logprob: -20.875
    10. '```' → logprob: -20.9375

Token 120: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002454726491123438
    2. '
' → logprob: -6.50245475769043
    3. 'for' → logprob: -7.12745475769043
    4. ' print' → logprob: -9.75245475769043
    5. ')' → logprob: -9.87745475769043
    6. ' 
' → logprob: -11.62745475769043
    7. 'sum' → logprob: -11.75245475769043
    8. '```' → logprob: -12.25245475769043
    9. ')
' → logprob: -12.37745475769043
    10. '  
' → logprob: -12.50245475769043

Token 121: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. 'sum' → logprob: -13.875001907348633
    3. ' print' → logprob: -14.625001907348633
    4. 'for' → logprob: -15.500001907348633
    5. '```' → logprob: -15.625001907348633
    6. 'pr' → logprob: -16.500001907348633
    7. 'prin' → logprob: -16.875001907348633
    8. '
' → logprob: -17.000001907348633
    9. '    
' → logprob: -17.375001907348633
    10. '0' → logprob: -17.500001907348633

Token 122: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3970981240272522
    2. '(sum' → logprob: -1.1470980644226074
    3. '(ans' → logprob: -5.022098064422607
    4. '(len' → logprob: -6.397098064422607
    5. '('' → logprob: -6.522098064422607
    6. 'sum' → logprob: -8.397098541259766
    7. '(max' → logprob: -9.022098541259766
    8. '()' → logprob: -10.647098541259766
    9. '(*' → logprob: -10.897098541259766
    10. 'ans' → logprob: -10.897098541259766

Token 123: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.002476604888215661
    2. '(' → logprob: -6.002476692199707
    3. '(an' → logprob: -15.502476692199707
    4. '(answer' → logprob: -15.627476692199707
    5. '()' → logprob: -15.752476692199707
    6. ' (' → logprob: -15.877476692199707
    7. ')' → logprob: -16.25247573852539
    8. '(
' → logprob: -17.12747573852539
    9. '(a' → logprob: -17.12747573852539
    10. 'ans' → logprob: -17.75247573852539

Token 124: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001593195047462359
    2. '))' → logprob: -8.75015926361084
    3. ' )' → logprob: -14.50015926361084
    4. ')`' → logprob: -15.50015926361084
    5. '())' → logprob: -16.500160217285156
    6. ')
' → logprob: -16.625160217285156
    7. '()' → logprob: -17.500160217285156
    8. '`)' → logprob: -18.625160217285156
    9. ')}' → logprob: -18.875160217285156
    10. ')))' → logprob: -19.125160217285156


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 122
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 105
Précision stricte (1ère position): 40.16%
Précision adaptée (1ère position): 45.90%
Précision (top 10): 86.07%
================================================================================
