================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur d'entrer deux entiers séparés par un espace sur une seule ligne.
# Utiliser input() pour lire la ligne de texte saisie par l'utilisateur.
# input() renvoie une chaîne de caractères.
# Passer cette chaîne à la fonction split(), qui découpe la chaîne en une liste de sous-chaînes (ici deux) en se basant sur les espaces.
# map(int, ...) applique la fonction int à chaque élément de cette liste, convertissant ainsi les deux sous-chaînes en entiers.
# Les deux entiers sont alors affectés respectivement aux variables a et b grâce à l'affectation multiple.
a, b = map(int, input().split())

# Calculer la valeur de (a - (2 * b)).
# (2 * b) signifie que l'on multiplie b par 2 avant de le soustraire à a.
# On vérifie si le résultat de ce calcul est inférieur à 0.
if (a - (2 * b) < 0):
    # Ce bloc de code ne sera exécuté que si l'expression ci-dessus est vraie, c'est-à-dire si a - 2b est négatif.
    # Dans ce cas, afficher 0 en utilisant la fonction print().
    print(0)
else:
    # Ce bloc de code else sera exécuté si la condition du if (a - 2b < 0) est fausse.
    # Cela signifie que a - 2b est supérieur ou égal à 0.
    # Afficher la valeur calculée de (a - 2b) avec print().
    print(a - (2 * b))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17163273692131042
    2. ' à' → logprob: -2.921632766723633
    3. ' de' → logprob: -3.421632766723633
    4. ' d' → logprob: -3.921632766723633
    5. ' =' → logprob: -4.296632766723633
    6. ' ' → logprob: -4.796632766723633
    7. '_le' → logprob: -5.296632766723633
    8. ' la' → logprob: -5.671632766723633
    9. ' a' → logprob: -5.796632766723633
    10. '=' → logprob: -6.046632766723633

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0044378358870744705
    2. ' l' → logprob: -5.6294379234313965
    3. 'user' → logprob: -7.5044379234313965
    4. 'util' → logprob: -8.504437446594238
    5. '#' → logprob: -9.879437446594238
    6. ' ' → logprob: -11.754437446594238
    7. ' user' → logprob: -12.379437446594238
    8. 'la' → logprob: -12.629437446594238
    9. 'un' → logprob: -12.754437446594238
    10. 'le' → logprob: -13.254437446594238

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.17725136876106262
    2. 'util' → logprob: -2.3022513389587402
    3. ' utilisateur' → logprob: -3.3022513389587402
    4. '’utilisateur' → logprob: -4.17725133895874
    5. 'u' → logprob: -5.55225133895874
    6. 'a' → logprob: -5.92725133895874
    7. ''' → logprob: -6.80225133895874
    8. 'user' → logprob: -7.55225133895874
    9. '_util' → logprob: -7.92725133895874
    10. 'us' → logprob: -7.92725133895874

Token 6: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9578115344047546
    2. ' ' → logprob: -1.7078115940093994
    3. 's' → logprob: -1.9578115940093994
    4. 'input' → logprob: -2.4578115940093994
    5. 'name' → logprob: -3.5828115940093994
    6. '=' → logprob: -3.8328115940093994
    7. ' =' → logprob: -4.20781135559082
    8. '=input' → logprob: -4.45781135559082
    9. ',' → logprob: -4.70781135559082
    10. '#' → logprob: -4.83281135559082

Token 7: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.35824382305145264
    2. 'e' → logprob: -1.6082438230514526
    3. ''entrée' → logprob: -2.608243942260742
    4. ''ent' → logprob: -4.233243942260742
    5. 'entrée' → logprob: -6.358243942260742
    6. 'entr' → logprob: -6.983243942260742
    7. 'a' → logprob: -6.983243942260742
    8. '_' → logprob: -6.983243942260742
    9. ''é' → logprob: -7.358243942260742
    10. ''utiliser' → logprob: -7.358243942260742

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.007336014416068792
    2. 'entrée' → logprob: -5.757336139678955
    3. 'ent' → logprob: -6.007336139678955
    4. 's' → logprob: -7.007336139678955
    5. 'enter' → logprob: -8.132335662841797
    6. 'entre' → logprob: -8.632335662841797
    7. 'input' → logprob: -9.507335662841797
    8. 'entra' → logprob: -9.757335662841797
    9. '```' → logprob: -10.007335662841797
    10. 'entrant' → logprob: -11.007335662841797

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.747814349073451e-05
    2. 'e' → logprob: -11.750017166137695
    3. 'é' → logprob: -12.875017166137695
    4. 'éer' → logprob: -13.000017166137695
    5. 'ée' → logprob: -13.625017166137695
    6. 'eer' → logprob: -13.625017166137695
    7. 'erer' → logprob: -13.750017166137695
    8. '```' → logprob: -15.250017166137695
    9. 'er's' → logprob: -15.750017166137695
    10. 'erp' → logprob: -15.875017166137695

Token 10: ' deux' (ID: 10301)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.248029351234436
    2. 'une' → logprob: -1.623029351234436
    3. 'un' → logprob: -1.748029351234436
    4. ' une' → logprob: -2.4980292320251465
    5. ''un' → logprob: -2.7480292320251465
    6. ''' → logprob: -2.8730292320251465
    7. 'l' → logprob: -3.4980292320251465
    8. ''une' → logprob: -3.4980292320251465
    9. '_' → logprob: -4.2480292320251465
    10. '`' → logprob: -4.6230292320251465

Token 11: ' ent' (ID: 1121)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.11912707984447479
    2. ' ' → logprob: -2.369127035140991
    3. ' espace' → logprob: -4.86912727355957
    4. 's' → logprob: -5.86912727355957
    5. ' mots' → logprob: -6.36912727355957
    6. 'es' → logprob: -7.11912727355957
    7. '_' → logprob: -7.24412727355957
    8. ' space' → logprob: -7.49412727355957
    9. 'space' → logprob: -7.49412727355957
    10. 'esp' → logprob: -7.49412727355957

Token 12: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001617453875951469
    2. 'i' → logprob: -7.126617431640625
    3. 'ières' → logprob: -7.376617431640625
    4. 'ers' → logprob: -9.501617431640625
    5. '```' → logprob: -10.001617431640625
    6. 'ier' → logprob: -11.126617431640625
    7. 'ié' → logprob: -11.501617431640625
    8. '#' → logprob: -11.876617431640625
    9. 'r' → logprob: -12.001617431640625
    10. 'ière' → logprob: -12.501617431640625

Token 13: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27868178486824036
    2. 'a' → logprob: -2.403681755065918
    3. 'x' → logprob: -2.528681755065918
    4. '\n' → logprob: -3.153681755065918
    5. '\' → logprob: -4.403681755065918
    6. 'e' → logprob: -5.278681755065918
    7. 'i' → logprob: -5.528681755065918
    8. '#' → logprob: -6.403681755065918
    9. '```' → logprob: -6.653681755065918
    10. 'ent' → logprob: -6.903681755065918

Token 14: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0012090419186279178
    2. 'é' → logprob: -6.751209259033203
    3. 'ément' → logprob: -10.751209259033203
    4. '```' → logprob: -12.001209259033203
    5. 'es' → logprob: -12.626209259033203
    6. 'ées' → logprob: -12.751209259033203
    7. 'ès' → logprob: -13.126209259033203
    8. 'er' → logprob: -13.751209259033203
    9. 's' → logprob: -14.376209259033203
    10. 'ÉS' → logprob: -14.876209259033203

Token 15: ' par' (ID: 686)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5748150944709778
    2. 'es' → logprob: -1.324815034866333
    3. 's' → logprob: -2.824815034866333
    4. ':' → logprob: -2.949815034866333
    5. ',' → logprob: -4.074815273284912
    6. ' :' → logprob: -4.699815273284912
    7. '_' → logprob: -4.699815273284912
    8. ' ' → logprob: -4.824815273284912
    9. '#' → logprob: -5.824815273284912
    10. ''' → logprob: -6.074815273284912

Token 16: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3584956228733063
    2. 'une' → logprob: -1.8584955930709839
    3. ' un' → logprob: -2.1084957122802734
    4. ''un' → logprob: -4.108495712280273
    5. ' une' → logprob: -6.358495712280273
    6. ' ' → logprob: -7.108495712280273
    7. 'space' → logprob: -7.233495712280273
    8. '```' → logprob: -7.233495712280273
    9. ''' → logprob: -7.483495712280273
    10. ''une' → logprob: -7.608495712280273

Token 17: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3039464056491852
    2. ' espace' → logprob: -1.6789463758468628
    3. ''espace' → logprob: -2.9289464950561523
    4. 'esp' → logprob: -4.053946495056152
    5. 'space' → logprob: -6.428946495056152
    6. '’espace' → logprob: -6.803946495056152
    7. ''esp' → logprob: -7.303946495056152
    8. 'e' → logprob: -7.553946495056152
    9. ' espaces' → logprob: -8.553946495056152
    10. '```' → logprob: -9.178946495056152

Token 18: ' sur' (ID: 1512)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40047913789749146
    2. 'x' → logprob: -2.2754790782928467
    3. 'input' → logprob: -2.9004790782928467
    4. 'a' → logprob: -3.0254790782928467
    5. 'i' → logprob: -3.0254790782928467
    6. 'e' → logprob: -3.4004790782928467
    7. 'u' → logprob: -4.275479316711426
    8. 'user' → logprob: -4.650479316711426
    9. 'ent' → logprob: -5.025479316711426
    10. '```' → logprob: -6.025479316711426

Token 19: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5087518095970154
    2. ' une' → logprob: -1.5087518692016602
    3. ' ' → logprob: -2.38375186920166
    4. 'une' → logprob: -3.38375186920166
    5. 'la' → logprob: -4.00875186920166
    6. ' ' → logprob: -4.50875186920166
    7. 'l' → logprob: -5.00875186920166
    8. 'e' → logprob: -5.25875186920166
    9. '  ' → logprob: -5.38375186920166
    10. '```' → logprob: -6.63375186920166

Token 20: ' seule' (ID: 41983)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5910455584526062
    2. ' seule' → logprob: -1.466045618057251
    3. 'e' → logprob: -1.966045618057251
    4. 'ligne' → logprob: -3.841045618057251
    5. ' seul' → logprob: -4.091045379638672
    6. 'es' → logprob: -5.341045379638672
    7. ' unique' → logprob: -5.466045379638672
    8. 'single' → logprob: -5.716045379638672
    9. 'input' → logprob: -5.966045379638672
    10. 'unique' → logprob: -5.966045379638672

Token 21: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.11845935136079788
    2. ' ligne' → logprob: -2.243459463119507
    3. 'l' → logprob: -5.493459224700928
    4. 'line' → logprob: -6.993459224700928
    5. 'input' → logprob: -8.368459701538086
    6. ' ' → logprob: -8.618459701538086
    7. ' ' → logprob: -10.493459701538086
    8. '   ' → logprob: -10.993459701538086
    9. '#' → logprob: -10.993459701538086
    10. 'li' → logprob: -11.118459701538086

Token 22: '.
' (ID: 558)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47560402750968933
    2. 'n' → logprob: -1.3506040573120117
    3. 'x' → logprob: -3.6006040573120117
    4. 'user' → logprob: -3.7256040573120117
    5. '```' → logprob: -3.9756040573120117
    6. 'ent' → logprob: -4.475604057312012
    7. 'e' → logprob: -4.725604057312012
    8. 'u' → logprob: -4.850604057312012
    9. 'a' → logprob: -4.850604057312012
    10. 'i' → logprob: -5.225604057312012

Token 23: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6981865167617798
    2. 'e' → logprob: -1.4481865167617798
    3. 'x' → logprob: -2.3231863975524902
    4. 'i' → logprob: -2.5731863975524902
    5. 'u' → logprob: -3.3231863975524902
    6. 'input' → logprob: -4.19818639755249
    7. '#' → logprob: -4.44818639755249
    8. '```' → logprob: -4.82318639755249
    9. 'user' → logprob: -4.94818639755249
    10. 'a' → logprob: -5.19818639755249

Token 24: ' Util' (ID: 13564)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.31228429079055786
    2. 'user' → logprob: -2.437284231185913
    3. 'n' → logprob: -2.937284231185913
    4. 'input' → logprob: -3.187284231185913
    5. 'a' → logprob: -3.437284231185913
    6. 'x' → logprob: -4.312284469604492
    7. 'numbers' → logprob: -4.437284469604492
    8. 'entr' → logprob: -5.187284469604492
    9. 'nombre' → logprob: -5.312284469604492
    10. 'entrée' → logprob: -5.437284469604492

Token 25: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.41356754302978516
    2. 'ser' → logprob: -1.2885675430297852
    3. 's' → logprob: -3.413567543029785
    4. '#' → logprob: -4.038567543029785
    5. 'is' → logprob: -5.413567543029785
    6. 'ise' → logprob: -5.538567543029785
    7. 'se' → logprob: -6.788567543029785
    8. 'isez' → logprob: -7.163567543029785
    9. 'isateur' → logprob: -7.288567543029785
    10. '```' → logprob: -7.538567543029785

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.474448025226593
    2. ' input' → logprob: -0.974448025226593
    3. 'split' → logprob: -9.599448204040527
    4. '```' → logprob: -9.599448204040527
    5. '=input' → logprob: -9.974448204040527
    6. 'l' → logprob: -10.099448204040527
    7. ' la' → logprob: -10.349448204040527
    8. '`' → logprob: -10.599448204040527
    9. ' split' → logprob: -10.974448204040527
    10. 'la' → logprob: -11.474448204040527

Token 27: '()' (ID: 416)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7121930718421936
    2. 'e' → logprob: -1.3371930122375488
    3. 'x' → logprob: -2.212193012237549
    4. 'ent' → logprob: -3.212193012237549
    5. 'a' → logprob: -4.337193012237549
    6. 'v' → logprob: -4.337193012237549
    7. 'u' → logprob: -4.337193012237549
    8. '#' → logprob: -4.587193012237549
    9. 'input' → logprob: -4.837193012237549
    10. 'i' → logprob: -4.837193012237549

Token 28: ' pour' (ID: 1930)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.938564121723175
    2. 'x' → logprob: -0.938564121723175
    3. 'e' → logprob: -2.8135640621185303
    4. 'a' → logprob: -3.1885640621185303
    5. 'ent' → logprob: -3.5635640621185303
    6. 'input' → logprob: -3.8135640621185303
    7. 'user' → logprob: -3.9385640621185303
    8. 'u' → logprob: -4.438564300537109
    9. '```' → logprob: -4.938564300537109
    10. 'nombre' → logprob: -5.438564300537109

Token 29: ' lire' (ID: 46082)
  Prédit: ' obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -1.75869882106781
    2. ' récupérer' → logprob: -2.0086989402770996
    3. 'input' → logprob: -2.1336989402770996
    4. ' recevoir' → logprob: -2.2586989402770996
    5. ' input' → logprob: -2.3836989402770996
    6. ' demander' → logprob: -2.6336989402770996
    7. ' lire' → logprob: -2.7586989402770996
    8. 'entr' → logprob: -3.2586989402770996
    9. ' entrer' → logprob: -3.2586989402770996
    10. 'l' → logprob: -3.3836989402770996

Token 30: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3656419515609741
    2. ' ' → logprob: -1.8656419515609741
    3. '()' → logprob: -2.6156420707702637
    4. ' (' → logprob: -3.8656420707702637
    5. 'de' → logprob: -5.240642070770264
    6. 'u' → logprob: -5.240642070770264
    7. ')' → logprob: -5.365642070770264
    8. 's' → logprob: -5.490642070770264
    9. ' )' → logprob: -5.490642070770264
    10. '('' → logprob: -5.740642070770264

Token 31: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018878407776355743
    2. 's' → logprob: -4.51887845993042
    3. ' input' → logprob: -5.76887845993042
    4. 'input' → logprob: -6.89387845993042
    5. ' =' → logprob: -7.14387845993042
    6. 'es' → logprob: -7.89387845993042
    7. ' )' → logprob: -8.143877983093262
    8. ',' → logprob: -8.518877983093262
    9. 'e' → logprob: -8.768877983093262
    10. 'entrée' → logprob: -8.893877983093262

Token 32: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.582344651222229
    2. 'x' → logprob: -1.207344651222229
    3. 'n' → logprob: -2.5823445320129395
    4. 'ent' → logprob: -3.2073445320129395
    5. 'e' → logprob: -4.7073445320129395
    6. 'user' → logprob: -5.8323445320129395
    7. '#' → logprob: -5.8323445320129395
    8. 'entr' → logprob: -6.5823445320129395
    9. 'numbers' → logprob: -6.5823445320129395
    10. '```' → logprob: -6.5823445320129395

Token 33: ' texte' (ID: 53492)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.19249865412712097
    2. 'code' → logprob: -2.4424986839294434
    3. 's' → logprob: -3.5674986839294434
    4. ' input' → logprob: -3.5674986839294434
    5. 'ux' → logprob: -5.067498683929443
    6. 'texte' → logprob: -5.442498683929443
    7. ' texte' → logprob: -5.567498683929443
    8. ' sais' → logprob: -5.942498683929443
    9. 'entrée' → logprob: -5.942498683929443
    10. 'input' → logprob: -6.067498683929443

Token 34: ' sais' (ID: 30010)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7031331062316895
    2. 'x' → logprob: -0.9531331062316895
    3. 'n' → logprob: -2.8281331062316895
    4. 'e' → logprob: -3.7031331062316895
    5. 'ent' → logprob: -4.2031331062316895
    6. '#' → logprob: -4.8281331062316895
    7. 'u' → logprob: -5.2031331062316895
    8. 'i' → logprob: -6.5781331062316895
    9. 'user' → logprob: -6.9531331062316895
    10. '```' → logprob: -7.0781331062316895

Token 35: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.48618701100349426
    2. 'e' → logprob: -1.7361869812011719
    3. 'i' → logprob: -3.236186981201172
    4. 'sie' → logprob: -3.361186981201172
    5. 'rie' → logprob: -3.486186981201172
    6. 'is' → logprob: -3.611186981201172
    7. 's' → logprob: -3.736186981201172
    8. '#' → logprob: -4.361186981201172
    9. 'vie' → logprob: -4.486186981201172
    10. '
' → logprob: -5.861186981201172

Token 36: ' par' (ID: 686)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5531267523765564
    2. 'x' → logprob: -1.5531268119812012
    3. 'n' → logprob: -2.303126811981201
    4. 'ent' → logprob: -2.678126811981201
    5. '#' → logprob: -4.053126811981201
    6. 'user' → logprob: -4.928126811981201
    7. 'e' → logprob: -5.303126811981201
    8. 'u' → logprob: -5.678126811981201
    9. 'numbers' → logprob: -6.053126811981201
    10. 'entr' → logprob: -6.428126811981201

Token 37: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5267599821090698
    2. 'l' → logprob: -0.9017599821090698
    3. '	l' → logprob: -6.651760101318359
    4. ' ' → logprob: -7.401760101318359
    5. ' utilisateur' → logprob: -8.02676010131836
    6. 'util' → logprob: -8.27676010131836
    7. ' lâ' → logprob: -8.27676010131836
    8. ' ' → logprob: -8.90176010131836
    9. ''utilisateur' → logprob: -9.27676010131836
    10. 'user' → logprob: -9.40176010131836

Token 38: ''utilisateur' (ID: 140803)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6797918677330017
    2. ''utilisateur' → logprob: -1.0547919273376465
    3. 'u' → logprob: -2.3047919273376465
    4. ''u' → logprob: -3.5547919273376465
    5. '')' → logprob: -5.0547919273376465
    6. 'e' → logprob: -5.9297919273376465
    7. ''util' → logprob: -6.5547919273376465
    8. 'a' → logprob: -6.8047919273376465
    9. ''us' → logprob: -6.8047919273376465
    10. ''a' → logprob: -7.1797919273376465

Token 39: '.
' (ID: 558)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9921613335609436
    2. 'a' → logprob: -1.2421612739562988
    3. 'n' → logprob: -1.6171612739562988
    4. 'e' → logprob: -3.117161273956299
    5. '#' → logprob: -3.117161273956299
    6. 'ent' → logprob: -3.617161273956299
    7. 'u' → logprob: -4.742161273956299
    8. 'user' → logprob: -5.867161273956299
    9. 'v' → logprob: -5.992161273956299
    10. '```' → logprob: -6.117161273956299

Token 40: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0293145179748535
    2. 'x' → logprob: -1.2793145179748535
    3. 'n' → logprob: -1.4043145179748535
    4. 'e' → logprob: -2.9043145179748535
    5. 'ent' → logprob: -3.7793145179748535
    6. '#' → logprob: -4.0293145179748535
    7. 'u' → logprob: -4.7793145179748535
    8. '```' → logprob: -5.5293145179748535
    9. 'v' → logprob: -5.6543145179748535
    10. 'user' → logprob: -6.6543145179748535

Token 41: ' input' (ID: 3422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7812364101409912
    2. 'n' → logprob: -1.4062364101409912
    3. 'e' → logprob: -2.656236410140991
    4. 'user' → logprob: -2.906236410140991
    5. 'u' → logprob: -3.906236410140991
    6. '#' → logprob: -3.906236410140991
    7. 'a' → logprob: -3.906236410140991
    8. 'x' → logprob: -4.15623664855957
    9. 'entr' → logprob: -4.15623664855957
    10. 'inputs' → logprob: -4.65623664855957

Token 42: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028143787756562233
    2. '()' → logprob: -3.653143882751465
    3. '('' → logprob: -6.653143882751465
    4. '(
' → logprob: -8.028143882751465
    5. '().' → logprob: -9.903143882751465
    6. '("("' → logprob: -10.153143882751465
    7. '("' → logprob: -10.653143882751465
    8. '(

' → logprob: -10.653143882751465
    9. '.' → logprob: -10.903143882751465
    10. '("")' → logprob: -11.028143882751465

Token 43: ' ren' (ID: 5427)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029223861172795296
    2. '()' → logprob: -4.154223918914795
    3. '.' → logprob: -5.279223918914795
    4. '().' → logprob: -6.029223918914795
    5. '(
' → logprob: -6.279223918914795
    6. '('' → logprob: -7.029223918914795
    7. ',' → logprob: -7.529223918914795
    8. ' (' → logprob: -7.654223918914795
    9. ' ' → logprob: -8.279223442077637
    10. '[' → logprob: -8.279223442077637

Token 44: 'voie' (ID: 70072)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.013682698830962181
    2. 'voie' → logprob: -4.888682842254639
    3. 't' → logprob: -5.513682842254639
    4. 'd' → logprob: -6.513682842254639
    5. 'e' → logprob: -8.38868236541748
    6. 'tre' → logprob: -9.63868236541748
    7. 'voit' → logprob: -9.88868236541748
    8. 'voi' → logprob: -10.51368236541748
    9. 'voy' → logprob: -10.76368236541748
    10. 'tr' → logprob: -10.88868236541748

Token 45: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.031274113804101944
    2. ' ' → logprob: -4.406274318695068
    3. ' un' → logprob: -5.031274318695068
    4. ' ' → logprob: -5.531274318695068
    5. 'une' → logprob: -6.281274318695068
    6. ' a' → logprob: -6.406274318695068
    7. ' la' → logprob: -6.781274318695068
    8. ''' → logprob: -7.031274318695068
    9. ''une' → logprob: -7.531274318695068
    10. ' des' → logprob: -8.15627384185791

Token 46: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.1649143397808075
    2. 'chaine' → logprob: -3.16491436958313
    3. ' string' → logprob: -3.28991436958313
    4. ' ' → logprob: -3.53991436958313
    5. ' chaine' → logprob: -3.78991436958313
    6. 'string' → logprob: -4.414914131164551
    7. 'str' → logprob: -5.789914131164551
    8. 's' → logprob: -6.039914131164551
    9. ' chaînes' → logprob: -7.039914131164551
    10. 'cha' → logprob: -7.664914131164551

Token 47: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4361233711242676
    2. ',' → logprob: -2.4361233711242676
    3. '[' → logprob: -2.4361233711242676
    4. '.' → logprob: -3.0611233711242676
    5. ''' → logprob: -4.061123371124268
    6. 's' → logprob: -4.186123371124268
    7. '()' → logprob: -4.186123371124268
    8. ')' → logprob: -4.311123371124268
    9. '_' → logprob: -4.311123371124268
    10. '"' → logprob: -4.811123371124268

Token 48: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.22587645053863525
    2. ' caractères' → logprob: -1.6008764505386353
    3. '```' → logprob: -8.600876808166504
    4. ' caracteres' → logprob: -9.725876808166504
    5. ' caract' → logprob: -9.850876808166504
    6. ' ' → logprob: -9.850876808166504
    7. 'texte' → logprob: -9.975876808166504
    8. ' caractère' → logprob: -11.100876808166504
    9. 'c' → logprob: -11.850876808166504
    10. '

' → logprob: -12.100876808166504

Token 49: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2803219556808472
    2. 'ent' → logprob: -1.4053219556808472
    3. 'e' → logprob: -2.1553220748901367
    4. 'x' → logprob: -2.6553220748901367
    5. '#' → logprob: -2.7803220748901367
    6. 'a' → logprob: -2.9053220748901367
    7. ',' → logprob: -3.2803220748901367
    8. 'user' → logprob: -3.5303220748901367
    9. 'u' → logprob: -3.7803220748901367
    10. '```' → logprob: -4.405322074890137

Token 50: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7475526332855225
    2. 'x' → logprob: -1.9975526332855225
    3. 'ent' → logprob: -2.1225526332855225
    4. 'a' → logprob: -2.1225526332855225
    5. 'e' → logprob: -2.3725526332855225
    6. 'u' → logprob: -4.122552871704102
    7. '```' → logprob: -4.622552871704102
    8. 'v' → logprob: -4.997552871704102
    9. '#' → logprob: -5.372552871704102
    10. 'val' → logprob: -5.497552871704102

Token 51: ' Pass' (ID: 12984)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9201071262359619
    2. 'n' → logprob: -1.295107126235962
    3. 'ent' → logprob: -1.795107126235962
    4. '#' → logprob: -2.670107126235962
    5. 'x' → logprob: -2.795107126235962
    6. 'e' → logprob: -4.545106887817383
    7. 'numbers' → logprob: -5.545106887817383
    8. 'u' → logprob: -5.670106887817383
    9. 'val' → logprob: -6.045106887817383
    10. 'user' → logprob: -6.420106887817383

Token 52: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.02606629952788353
    2. 'e' → logprob: -3.776066303253174
    3. 'age' → logprob: -6.151066303253174
    4. '#' → logprob: -7.901066303253174
    5. 'a' → logprob: -9.276065826416016
    6. 'é' → logprob: -9.651065826416016
    7. 'ages' → logprob: -10.026065826416016
    8. 'ons' → logprob: -11.151065826416016
    9. ' er' → logprob: -11.401065826416016
    10. ' ' → logprob: -11.526065826416016

Token 53: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.128486156463623
    2. ' les' → logprob: -2.128486156463623
    3. ' ' → logprob: -2.253486156463623
    4. ' le' → logprob: -2.878486156463623
    5. 's' → logprob: -3.003486156463623
    6. 'r' → logprob: -3.253486156463623
    7. ' l' → logprob: -3.378486156463623
    8. '_' → logprob: -3.378486156463623
    9. ' à' → logprob: -3.878486156463623
    10. '()' → logprob: -3.878486156463623

Token 54: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4176813066005707
    2. ' chaîne' → logprob: -1.167681336402893
    3. ' ligne' → logprob: -4.5426812171936035
    4. 's' → logprob: -4.9176812171936035
    5. ' chaine' → logprob: -5.1676812171936035
    6. ' s' → logprob: -6.4176812171936035
    7. ' string' → logprob: -7.5426812171936035
    8. ' l' → logprob: -7.6676812171936035
    9. ' ' → logprob: -7.7926812171936035
    10. ' valeur' → logprob: -7.9176812171936035

Token 55: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16595782339572906
    2. ' à' → logprob: -2.4159579277038574
    3. ' .' → logprob: -4.290957927703857
    4. ' au' → logprob: -4.665957927703857
    5. 'au' → logprob: -5.040957927703857
    6. ' )' → logprob: -5.290957927703857
    7. '  ' → logprob: -5.415957927703857
    8. 's' → logprob: -5.665957927703857
    9. ')' → logprob: -5.790957927703857
    10. ' ,' → logprob: -6.040957927703857

Token 56: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.20329846441745758
    2. ' la' → logprob: -2.203298568725586
    3. 'input' → logprob: -3.203298568725586
    4. 'l' → logprob: -4.203298568725586
    5. ' input' → logprob: -4.703298568725586
    6. 'split' → logprob: -5.328298568725586
    7. '`' → logprob: -6.578298568725586
    8. 's' → logprob: -7.203298568725586
    9. '```' → logprob: -7.703298568725586
    10. 'int' → logprob: -8.078298568725586

Token 57: ' fonction' (ID: 17610)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0746777132153511
    2. ' split' → logprob: -3.5746777057647705
    3. 'fonction' → logprob: -4.32467794418335
    4. 'input' → logprob: -4.94967794418335
    5. 's' → logprob: -5.19967794418335
    6. ' function' → logprob: -5.44967794418335
    7. '.split' → logprob: -5.57467794418335
    8. 'spl' → logprob: -5.94967794418335
    9. 'str' → logprob: -6.44967794418335
    10. 'function' → logprob: -6.69967794418335

Token 58: ' split' (ID: 12648)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9601137638092041
    2. ' input' → logprob: -1.210113763809204
    3. 'split' → logprob: -1.710113763809204
    4. 's' → logprob: -3.335113763809204
    5. 'int' → logprob: -3.710113763809204
    6. ' split' → logprob: -3.960113763809204
    7. 'map' → logprob: -4.085113525390625
    8. ' map' → logprob: -4.460113525390625
    9. 'spl' → logprob: -4.710113525390625
    10. ' int' → logprob: -4.835113525390625

Token 59: '(),' (ID: 2547)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.034575339406728745
    2. '()' → logprob: -3.6595752239227295
    3. '('' → logprob: -5.284575462341309
    4. '(
' → logprob: -6.034575462341309
    5. '("("' → logprob: -8.159575462341309
    6. ''' → logprob: -9.284575462341309
    7. '("' → logprob: -9.534575462341309
    8. '().' → logprob: -10.159575462341309
    9. '('.')' → logprob: -10.159575462341309
    10. ')' → logprob: -10.284575462341309

Token 60: ' qui' (ID: 2780)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8304362297058105
    2. ' qui' → logprob: -1.5804362297058105
    3. ' puis' → logprob: -1.8304362297058105
    4. 'split' → logprob: -3.4554362297058105
    5. ' which' → logprob: -3.5804362297058105
    6. ''' → logprob: -3.8304362297058105
    7. ')' → logprob: -4.2054362297058105
    8. '.split' → logprob: -4.5804362297058105
    9. ''s' → logprob: -4.7054362297058105
    10. '[' → logprob: -4.9554362297058105

Token 61: ' décou' (ID: 68302)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.211606740951538
    2. ' permet' → logprob: -1.586606740951538
    3. ' sé' → logprob: -1.961606740951538
    4. ' va' → logprob: -1.961606740951538
    5. ' décou' → logprob: -2.461606740951538
    6. ' ren' → logprob: -3.211606740951538
    7. ' permettra' → logprob: -4.086606979370117
    8. ' div' → logprob: -4.336606979370117
    9. 'div' → logprob: -4.461606979370117
    10. 'la' → logprob: -4.586606979370117

Token 62: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.2611856758594513
    2. 'p' → logprob: -1.511185646057129
    3. 'page' → logprob: -6.261185646057129
    4. '```' → logprob: -6.261185646057129
    5. 'per' → logprob: -6.636185646057129
    6. 'pera' → logprob: -7.261185646057129
    7. 'pé' → logprob: -7.761185646057129
    8. '``' → logprob: -7.886185646057129
    9. '`' → logprob: -8.011185646057129
    10. 'pa' → logprob: -9.011185646057129

Token 63: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5563653707504272
    2. '()' → logprob: -1.1813653707504272
    3. '('' → logprob: -2.681365489959717
    4. ''' → logprob: -3.681365489959717
    5. ' ' → logprob: -4.181365489959717
    6. '<|end|>' → logprob: -5.556365489959717
    7. ' (' → logprob: -6.431365489959717
    8. '("' → logprob: -7.056365489959717
    9. ')' → logprob: -7.056365489959717
    10. ' )' → logprob: -7.556365489959717

Token 64: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.1121843233704567
    2. 'chaine' → logprob: -2.7371842861175537
    3. ' chaine' → logprob: -4.737184524536133
    4. 'cha' → logprob: -4.987184524536133
    5. 's' → logprob: -5.112184524536133
    6. ''' → logprob: -5.112184524536133
    7. ' ' → logprob: -5.612184524536133
    8. ' chaînes' → logprob: -5.987184524536133
    9. 'string' → logprob: -6.112184524536133
    10. ' string' → logprob: -6.612184524536133

Token 65: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5530274510383606
    2. '[' → logprob: -1.6780273914337158
    3. ')' → logprob: -2.428027391433716
    4. '[]' → logprob: -2.928027391433716
    5. ' )' → logprob: -4.178027629852295
    6. ''' → logprob: -4.553027629852295
    7. ' ' → logprob: -4.678027629852295
    8. 's' → logprob: -4.928027629852295
    9. '.' → logprob: -5.053027629852295
    10. ' en' → logprob: -5.178027629852295

Token 66: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.48849666118621826
    2. '['' → logprob: -1.7384966611862183
    3. ' ['' → logprob: -2.488496780395508
    4. ' un' → logprob: -2.738496780395508
    5. 'une' → logprob: -3.988496780395508
    6. ' des' → logprob: -4.738496780395508
    7. '["' → logprob: -4.863496780395508
    8. ' ' → logprob: -5.363496780395508
    9. 'un' → logprob: -5.488496780395508
    10. '[]' → logprob: -5.988496780395508

Token 67: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.1300017088651657
    2. 'liste' → logprob: -2.1300017833709717
    3. 'list' → logprob: -6.130001544952393
    4. 's' → logprob: -7.755001544952393
    5. ' list' → logprob: -8.25500202178955
    6. ' ' → logprob: -9.63000202178955
    7. 'l' → logprob: -10.75500202178955
    8. ' listes' → logprob: -10.88000202178955
    9. 'lst' → logprob: -11.25500202178955
    10. 'chaine' → logprob: -11.63000202178955

Token 68: ' de' (ID: 334)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.137235403060913
    2. '[' → logprob: -1.512235403060913
    3. 'des' → logprob: -2.512235403060913
    4. ' des' → logprob: -2.637235403060913
    5. 'de' → logprob: -2.887235403060913
    6. 's' → logprob: -3.012235403060913
    7. '[]' → logprob: -3.262235403060913
    8. '.' → logprob: -4.137235641479492
    9. 'input' → logprob: -4.137235641479492
    10. ',' → logprob: -4.262235641479492

Token 69: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.24962817132472992
    2. ' espaces' → logprob: -1.7496281862258911
    3. ' mots' → logprob: -4.624628067016602
    4. 'm' → logprob: -4.874628067016602
    5. ' tokens' → logprob: -4.874628067016602
    6. 'esp' → logprob: -5.374628067016602
    7. 'cha' → logprob: -5.999628067016602
    8. ' ' → logprob: -5.999628067016602
    9. ' morceaux' → logprob: -6.624628067016602
    10. 'tokens' → logprob: -6.749628067016602

Token 70: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.01243842113763094
    2. 'cha' → logprob: -4.7624382972717285
    3. 'chain' → logprob: -6.0124382972717285
    4. ' chaîne' → logprob: -8.387438774108887
    5. ' chain' → logprob: -8.512438774108887
    6. '-cha' → logprob: -8.762438774108887
    7. 'strings' → logprob: -8.762438774108887
    8. 'chaine' → logprob: -8.762438774108887
    9. '   ' → logprob: -9.137438774108887
    10. ' ' → logprob: -9.137438774108887

Token 71: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.08730504661798477
    2. 'î' → logprob: -2.5873050689697266
    3. 'nes' → logprob: -5.837305068969727
    4. 'r' → logprob: -6.462305068969727
    5. 'ines' → logprob: -6.587305068969727
    6. 'Î' → logprob: -6.837305068969727
    7. '```' → logprob: -7.837305068969727
    8. 'ï' → logprob: -8.712305068969727
    9. 'ı' → logprob: -9.087305068969727
    10. ' nes' → logprob: -9.462305068969727

Token 72: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7849047183990479
    2. 'e' → logprob: -1.2849047183990479
    3. '[' → logprob: -2.659904718399048
    4. ',' → logprob: -3.409904718399048
    5. 's' → logprob: -3.409904718399048
    6. 'ent' → logprob: -3.909904718399048
    7. 'u' → logprob: -4.034904479980469
    8. 'user' → logprob: -4.284904479980469
    9. ' =' → logprob: -4.534904479980469
    10. 'x' → logprob: -4.534904479980469

Token 73: 'ici' (ID: 3757)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7935755848884583
    2. ' )' → logprob: -1.1685755252838135
    3. ' sur' → logprob: -3.2935755252838135
    4. ' par' → logprob: -3.2935755252838135
    5. ' en' → logprob: -3.5435755252838135
    6. 'sur' → logprob: -3.9185755252838135
    7. 'au' → logprob: -4.043575763702393
    8. ',' → logprob: -4.168575763702393
    9. ' au' → logprob: -4.293575763702393
    10. ' à' → logprob: -4.293575763702393

Token 74: ' deux' (ID: 10301)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.15668931603431702
    2. ' en' → logprob: -3.281689405441284
    3. ' sépar' → logprob: -3.781689405441284
    4. 'par' → logprob: -3.906689405441284
    5. ',' → logprob: -4.031689167022705
    6. 'au' → logprob: -4.906689167022705
    7. ' au' → logprob: -5.031689167022705
    8. ')' → logprob: -5.406689167022705
    9. ' espaces' → logprob: -5.531689167022705
    10. ' )' → logprob: -5.656689167022705

Token 75: ')' (ID: 8)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.6925521492958069
    2. ' mots' → logprob: -2.067552089691162
    3. ' espaces' → logprob: -2.317552089691162
    4. ' éléments' → logprob: -2.442552089691162
    5. ' ent' → logprob: -2.942552089691162
    6. 'ent' → logprob: -2.942552089691162
    7. 'élé' → logprob: -3.192552089691162
    8. ' )' → logprob: -4.067552089691162
    9. ')' → logprob: -5.442552089691162
    10. 'm' → logprob: -5.692552089691162

Token 76: ' en' (ID: 469)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6631947159767151
    2. 'a' → logprob: -1.5381946563720703
    3. 'ent' → logprob: -2.1631946563720703
    4. 'x' → logprob: -2.2881946563720703
    5. 'e' → logprob: -4.28819465637207
    6. 'u' → logprob: -5.03819465637207
    7. '#' → logprob: -5.03819465637207
    8. '```' → logprob: -5.66319465637207
    9. ',' → logprob: -5.91319465637207
    10. 'user' → logprob: -6.03819465637207

Token 77: ' se' (ID: 458)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8256674408912659
    2. '<|end|>' → logprob: -2.075667381286621
    3. ' fonction' → logprob: -2.325667381286621
    4. 'fonction' → logprob: -2.575667381286621
    5. ' espaces' → logprob: -2.950667381286621
    6. ' ' → logprob: -3.200667381286621
    7. 'spl' → logprob: -3.200667381286621
    8. ' utilisant' → logprob: -3.825667381286621
    9. ' sépar' → logprob: -4.450667381286621
    10. ''' → logprob: -5.075667381286621

Token 78: ' bas' (ID: 3222)
  Prédit: ' bas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bas' → logprob: -0.6026102304458618
    2. ' sépar' → logprob: -2.3526101112365723
    3. 'bas' → logprob: -2.4776101112365723
    4. ' ' → logprob: -2.9776101112365723
    5. 's' → logprob: -3.3526101112365723
    6. 'u' → logprob: -3.6026101112365723
    7. '```' → logprob: -3.8526101112365723
    8. 'app' → logprob: -4.227610111236572
    9. ' based' → logprob: -4.727610111236572
    10. 'pliant' → logprob: -4.977610111236572

Token 79: 'ant' (ID: 493)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3198719620704651
    2. 'nt' → logprob: -1.8198719024658203
    3. 'se' → logprob: -3.1948719024658203
    4. 'e' → logprob: -3.6948719024658203
    5. 'n' → logprob: -4.31987190246582
    6. 'l' → logprob: -4.69487190246582
    7. 'ant' → logprob: -5.06987190246582
    8. 'is' → logprob: -5.44487190246582
    9. 'sis' → logprob: -5.81987190246582
    10. 'sur' → logprob: -5.94487190246582

Token 80: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.7004737854003906
    2. 'sur' → logprob: -0.7004737854003906
    3. 's' → logprob: -5.325473785400391
    4. ' ' → logprob: -6.200473785400391
    5. '_sur' → logprob: -9.07547378540039
    6. ')' → logprob: -9.57547378540039
    7. 'r' → logprob: -10.95047378540039
    8. '=' → logprob: -10.95047378540039
    9. 'u' → logprob: -10.95047378540039
    10. 'Sur' → logprob: -11.20047378540039

Token 81: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6409223675727844
    2. ''' → logprob: -1.2659223079681396
    3. ' l' → logprob: -1.8909223079681396
    4. ''un' → logprob: -3.7659223079681396
    5. ' ' → logprob: -5.140922546386719
    6. ''l' → logprob: -5.765922546386719
    7. ''espace' → logprob: -6.390922546386719
    8. 'un' → logprob: -6.765922546386719
    9. '"' → logprob: -7.015922546386719
    10. 'la' → logprob: -7.140922546386719

Token 82: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.6537490487098694
    2. ''espace' → logprob: -2.1537489891052246
    3. ''' → logprob: -2.2787489891052246
    4. ' espace' → logprob: -2.2787489891052246
    5. ' ' → logprob: -2.4037489891052246
    6. 'es' → logprob: -3.5287489891052246
    7. ''esp' → logprob: -4.028748989105225
    8. ' '' → logprob: -5.278748989105225
    9. '"' → logprob: -5.403748989105225
    10. 's' → logprob: -6.028748989105225

Token 83: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4446418583393097
    2. 'a' → logprob: -2.1946418285369873
    3. 'x' → logprob: -2.3196418285369873
    4. 'e' → logprob: -2.6946418285369873
    5. 'u' → logprob: -3.4446418285369873
    6. 'ent' → logprob: -4.069642066955566
    7. '#' → logprob: -4.194642066955566
    8. 'v' → logprob: -5.069642066955566
    9. 't' → logprob: -6.069642066955566
    10. 'd' → logprob: -6.569642066955566

Token 84: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6715497374534607
    2. 'n' → logprob: -1.2965497970581055
    3. 'x' → logprob: -1.6715497970581055
    4. 'ent' → logprob: -4.0465497970581055
    5. 'e' → logprob: -5.6715497970581055
    6. '```' → logprob: -6.2965497970581055
    7. 'val' → logprob: -6.6715497970581055
    8. 'numbers' → logprob: -7.4215497970581055
    9. 'u' → logprob: -7.5465497970581055
    10. 'v' → logprob: -7.5465497970581055

Token 85: ' map' (ID: 4014)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.848804771900177
    2. 'n' → logprob: -1.2238047122955322
    3. 'a' → logprob: -2.2238047122955322
    4. 'numbers' → logprob: -2.8488047122955322
    5. 'x' → logprob: -3.3488047122955322
    6. 'nums' → logprob: -3.7238047122955322
    7. 'values' → logprob: -4.223804950714111
    8. 'val' → logprob: -4.973804950714111
    9. '```' → logprob: -5.098804950714111
    10. 'user' → logprob: -5.098804950714111

Token 86: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010760105215013027
    2. '(int' → logprob: -4.635760307312012
    3. '(lambda' → logprob: -7.135760307312012
    4. '(
' → logprob: -8.635760307312012
    5. '(str' → logprob: -11.260760307312012
    6. '(convert' → logprob: -13.010760307312012
    7. '(

' → logprob: -13.385760307312012
    8. '[int' → logprob: -13.510760307312012
    9. '(float' → logprob: -13.760760307312012
    10. 'int' → logprob: -13.760760307312012

Token 87: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01401129737496376
    2. ',' → logprob: -4.389011383056641
    3. ' )' → logprob: -7.264011383056641
    4. '(' → logprob: -8.13901138305664
    5. ',)' → logprob: -8.76401138305664
    6. ')>' → logprob: -9.88901138305664
    7. '))' → logprob: -9.88901138305664
    8. '),' → logprob: -10.13901138305664
    9. ',input' → logprob: -10.38901138305664
    10. ' ,' → logprob: -10.51401138305664

Token 88: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.35247549414634705
    2. 'input' → logprob: -1.3524755239486694
    3. ')' → logprob: -3.47747540473938
    4. ' )' → logprob: -5.477475643157959
    5. ' user' → logprob: -6.477475643157959
    6. 'user' → logprob: -7.102475643157959
    7. 'split' → logprob: -8.6024751663208
    8. ' l' → logprob: -8.8524751663208
    9. '...)' → logprob: -9.3524751663208
    10. ' la' → logprob: -9.4774751663208

Token 89: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7351775169372559
    2. ')' → logprob: -0.7351775169372559
    3. '(
' → logprob: -3.360177516937256
    4. '()' → logprob: -6.485177516937256
    5. ' )' → logprob: -7.110177516937256
    6. '(input' → logprob: -7.110177516937256
    7. '#' → logprob: -7.610177516937256
    8. 'input' → logprob: -7.610177516937256
    9. '))' → logprob: -8.110177993774414
    10. 'def' → logprob: -8.235177993774414

Token 90: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3934565484523773
    2. ' int' → logprob: -2.01845645904541
    3. 'int' → logprob: -2.01845645904541
    4. ' à' → logprob: -3.76845645904541
    5. '(int' → logprob: -3.89345645904541
    6. 'la' → logprob: -5.51845645904541
    7. ' ' → logprob: -5.89345645904541
    8. '(' → logprob: -5.89345645904541
    9. ')' → logprob: -6.64345645904541
    10. '(lambda' → logprob: -6.89345645904541

Token 91: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.3947206437587738
    2. ' fonction' → logprob: -1.1447206735610962
    3. 'int' → logprob: -5.269720554351807
    4. ' int' → logprob: -6.269720554351807
    5. ' function' → logprob: -7.519720554351807
    6. 'fon' → logprob: -9.394721031188965
    7. ' conversion' → logprob: -9.644721031188965
    8. 'function' → logprob: -10.019721031188965
    9. ' fon' → logprob: -11.519721031188965
    10. ' fonctions' → logprob: -12.269721031188965

Token 92: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4708647131919861
    2. ' int' → logprob: -1.0958647727966309
    3. '(int' → logprob: -3.220864772796631
    4. '=int' → logprob: -7.470864772796631
    5. '<int' → logprob: -8.345864295959473
    6. '[int' → logprob: -8.845864295959473
    7. '(lambda' → logprob: -9.970864295959473
    8. '```' → logprob: -9.970864295959473
    9. '(' → logprob: -10.095864295959473
    10. ':int' → logprob: -10.345864295959473

Token 93: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5695499181747437
    2. '()' → logprob: -0.9445499181747437
    3. '(
' → logprob: -4.569550037384033
    4. ')' → logprob: -4.569550037384033
    5. '(...)' → logprob: -4.569550037384033
    6. '(lambda' → logprob: -5.569550037384033
    7. '(s' → logprob: -6.069550037384033
    8. 's' → logprob: -6.819550037384033
    9. '(

' → logprob: -6.944550037384033
    10. '(...' → logprob: -6.944550037384033

Token 94: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.18305063247680664
    2. ' chacune' → logprob: -2.0580506324768066
    3. 'cha' → logprob: -3.6830506324768066
    4. ' chacun' → logprob: -5.558050632476807
    5. 't' → logprob: -6.183050632476807
    6. ' each' → logprob: -6.433050632476807
    7. 'ch' → logprob: -6.808050632476807
    8. 'la' → logprob: -6.808050632476807
    9. ' la' → logprob: -7.058050632476807
    10. 'l' → logprob: -7.183050632476807

Token 95: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.04327629134058952
    2. ' élément' → logprob: -3.168276309967041
    3. 'element' → logprob: -10.168275833129883
    4. ' element' → logprob: -10.293275833129883
    5. 'é' → logprob: -10.543275833129883
    6. 'él' → logprob: -10.668275833129883
    7. ' ' → logprob: -10.793275833129883
    8. ')' → logprob: -10.793275833129883
    9. ' éléments' → logprob: -11.043275833129883
    10. 's' → logprob: -11.043275833129883

Token 96: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37006402015686035
    2. ')' → logprob: -1.2450640201568604
    3. '()' → logprob: -5.370063781738281
    4. '(
' → logprob: -5.620063781738281
    5. ' de' → logprob: -5.745063781738281
    6. 'de' → logprob: -5.995063781738281
    7. 'des' → logprob: -6.245063781738281
    8. 's' → logprob: -6.745063781738281
    9. '#' → logprob: -7.370063781738281
    10. ' des' → logprob: -7.495063781738281

Token 97: ' cette' (ID: 7696)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.24315129220485687
    2. ' la' → logprob: -1.743151307106018
    3. 'l' → logprob: -3.2431511878967285
    4. ' l' → logprob: -6.3681511878967285
    5. 'split' → logprob: -10.618151664733887
    6. 'list' → logprob: -10.993151664733887
    7. 'spl' → logprob: -10.993151664733887
    8. 'liste' → logprob: -11.118151664733887
    9. 's' → logprob: -11.743151664733887
    10. '```' → logprob: -12.368151664733887

Token 98: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.2028784155845642
    2. 'liste' → logprob: -1.702878475189209
    3. 'list' → logprob: -7.577878475189209
    4. 'split' → logprob: -7.702878475189209
    5. 'chaine' → logprob: -9.45287799835205
    6. 'spl' → logprob: -9.57787799835205
    7. ' split' → logprob: -9.70287799835205
    8. ' chaîne' → logprob: -10.20287799835205
    9. 's' → logprob: -10.45287799835205
    10. ' list' → logprob: -10.45287799835205

Token 99: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10204645991325378
    2. 'x' → logprob: -3.352046489715576
    3. 'n' → logprob: -3.602046489715576
    4. 'e' → logprob: -4.852046489715576
    5. ' a' → logprob: -4.977046489715576
    6. 'ent' → logprob: -5.352046489715576
    7. ',' → logprob: -5.852046489715576
    8. 'i' → logprob: -5.977046489715576
    9. 'u' → logprob: -6.477046489715576
    10. ')' → logprob: -6.602046489715576

Token 100: ' convert' (ID: 8452)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9316887259483337
    2. 'a' → logprob: -1.4316887855529785
    3. ' x' → logprob: -2.3066887855529785
    4. ' a' → logprob: -2.9316887855529785
    5. 'e' → logprob: -3.0566887855529785
    6. ')' → logprob: -3.5566887855529785
    7. 'ent' → logprob: -3.5566887855529785
    8. 'n' → logprob: -3.8066887855529785
    9. ' e' → logprob: -4.4316887855529785
    10. ',' → logprob: -4.6816887855529785

Token 101: 'issant' (ID: 31359)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.542307436466217
    2. 'issant' → logprob: -1.4173073768615723
    3. 'it' → logprob: -2.0423073768615723
    4. 'is' → logprob: -4.042307376861572
    5. 'ie' → logprob: -4.542307376861572
    6. '#' → logprob: -5.292307376861572
    7. 'ir' → logprob: -5.917307376861572
    8. '```' → logprob: -6.042307376861572
    9. 'e' → logprob: -6.292307376861572
    10. 'iss' → logprob: -6.667307376861572

Token 102: ' ainsi' (ID: 16371)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21904432773590088
    2. ' les' → logprob: -2.0940442085266113
    3. ' ' → logprob: -3.2190442085266113
    4. ' l' → logprob: -4.594044208526611
    5. ' le' → logprob: -5.219044208526611
    6. 'la' → logprob: -5.594044208526611
    7. 'les' → logprob: -5.969044208526611
    8. ' them' → logprob: -6.594044208526611
    9. ' à' → logprob: -6.969044208526611
    10. 'l' → logprob: -6.969044208526611

Token 103: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3566205501556396
    2. 'l' → logprob: -1.4816205501556396
    3. ' l' → logprob: -1.4816205501556396
    4. ' les' → logprob: -2.1066205501556396
    5. 'input' → logprob: -2.9816205501556396
    6. ' input' → logprob: -2.9816205501556396
    7. 'la' → logprob: -3.8566205501556396
    8. 'les' → logprob: -4.356620788574219
    9. 'int' → logprob: -4.731620788574219
    10. 's' → logprob: -5.856620788574219

Token 104: ' deux' (ID: 10301)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6858125925064087
    2. ' chaînes' → logprob: -0.9358125925064087
    3. ' éléments' → logprob: -3.185812473297119
    4. 'cha' → logprob: -3.560812473297119
    5. 'chain' → logprob: -4.435812473297119
    6. ' chain' → logprob: -5.060812473297119
    7. 'car' → logprob: -5.935812473297119
    8. 'de' → logprob: -5.935812473297119
    9. 's' → logprob: -6.060812473297119
    10. 'chaine' → logprob: -6.560812473297119

Token 105: ' sous' (ID: 14487)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.5192948579788208
    2. 'élé' → logprob: -2.3942947387695312
    3. ' éléments' → logprob: -2.5192947387695312
    4. 'ent' → logprob: -2.5192947387695312
    5. ' chaînes' → logprob: -2.7692947387695312
    6. ' nombres' → logprob: -2.8942947387695312
    7. 'n' → logprob: -5.019294738769531
    8. ' valeurs' → logprob: -5.019294738769531
    9. ')' → logprob: -5.144294738769531
    10. ' chain' → logprob: -5.519294738769531

Token 106: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.032764580100774765
    2. 'chain' → logprob: -4.282764434814453
    3. '-' → logprob: -5.532764434814453
    4. 'chaine' → logprob: -5.782764434814453
    5. '-chain' → logprob: -5.782764434814453
    6. 'cha' → logprob: -5.907764434814453
    7. ' chain' → logprob: -6.407764434814453
    8. '-cha' → logprob: -6.657764434814453
    9. ' chaîne' → logprob: -7.532764434814453
    10. '_chain' → logprob: -7.907764434814453

Token 107: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.010237517766654491
    2. 'î' → logprob: -4.635237693786621
    3. 'nes' → logprob: -8.885237693786621
    4. 'ines' → logprob: -9.385237693786621
    5. 'îne' → logprob: -9.885237693786621
    6. 'Î' → logprob: -10.010237693786621
    7. 'în' → logprob: -10.135237693786621
    8. 'r' → logprob: -10.510237693786621
    9. 'ì' → logprob: -10.760237693786621
    10. 'ên' → logprob: -11.635237693786621

Token 108: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9261154532432556
    2. 'en' → logprob: -1.1761155128479004
    3. ' en' → logprob: -1.4261155128479004
    4. 'ent' → logprob: -3.8011155128479004
    5. ' )' → logprob: -4.8011155128479
    6. 'entr' → logprob: -5.1761155128479
    7. 'user' → logprob: -5.8011155128479
    8. 's' → logprob: -6.3011155128479
    9. ' entr' → logprob: -6.4261155128479
    10. ' ent' → logprob: -6.4261155128479

Token 109: ' ent' (ID: 1121)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.04561729356646538
    2. 'ent' → logprob: -3.6706173419952393
    3. ' ent' → logprob: -4.54561710357666
    4. 'des' → logprob: -5.04561710357666
    5. ' un' → logprob: -7.79561710357666
    6. ' une' → logprob: -8.04561710357666
    7. ' nombres' → logprob: -8.04561710357666
    8. 'int' → logprob: -8.29561710357666
    9. ' int' → logprob: -8.29561710357666
    10. ' deux' → logprob: -8.42061710357666

Token 110: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0020172633230686188
    2. 'i' → logprob: -6.252017498016357
    3. 'ier' → logprob: -10.3770170211792
    4. 't' → logprob: -11.0020170211792
    5. 'ers' → logprob: -11.7520170211792
    6. 'ière' → logprob: -11.8770170211792
    7. 'ières' → logprob: -12.1270170211792
    8. '   ' → logprob: -12.6270170211792
    9. ' i' → logprob: -12.7520170211792
    10. 'ti' → logprob: -13.1270170211792

Token 111: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22183293104171753
    2. 'x' → logprob: -1.8468329906463623
    3. 'n' → logprob: -3.7218329906463623
    4. 'ent' → logprob: -4.221832752227783
    5. ' a' → logprob: -7.096832752227783
    6. ' 
' → logprob: -8.221833229064941
    7. '#' → logprob: -8.346833229064941
    8. 'e' → logprob: -8.471833229064941
    9. 'u' → logprob: -8.721833229064941
    10. ' x' → logprob: -8.721833229064941

Token 112: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10748551040887833
    2. 'x' → logprob: -2.35748553276062
    3. 'ent' → logprob: -5.482485294342041
    4. 'n' → logprob: -6.232485294342041
    5. ' a' → logprob: -7.732485294342041
    6. '```' → logprob: -7.857485294342041
    7. ' x' → logprob: -9.2324857711792
    8. 'u' → logprob: -10.2324857711792
    9. '#' → logprob: -10.2324857711792
    10. '`' → logprob: -10.3574857711792

Token 113: ' Les' (ID: 7029)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18885749578475952
    2. 'x' → logprob: -1.8138575553894043
    3. 'ent' → logprob: -4.813857555389404
    4. ' a' → logprob: -7.938857555389404
    5. '#' → logprob: -8.063857078552246
    6. ' x' → logprob: -9.313857078552246
    7. 'n' → logprob: -9.813857078552246
    8. 'val' → logprob: -9.938857078552246
    9. 'user' → logprob: -11.188857078552246
    10. 'ligne' → logprob: -11.188857078552246

Token 114: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3365398645401001
    2. 'ent' → logprob: -1.7115398645401
    3. ' a' → logprob: -3.2115397453308105
    4. 'x' → logprob: -3.7115397453308105
    5. ' ent' → logprob: -4.2115397453308105
    6. 'de' → logprob: -4.8365397453308105
    7. 'n' → logprob: -5.0865397453308105
    8. ' deux' → logprob: -5.9615397453308105
    9. 'val' → logprob: -6.0865397453308105
    10. ' x' → logprob: -6.5865397453308105

Token 115: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7015567421913147
    2. ' ent' → logprob: -1.95155668258667
    3. ' nombres' → logprob: -2.07655668258667
    4. 'n' → logprob: -2.20155668258667
    5. 'a' → logprob: -2.32655668258667
    6. 'x' → logprob: -4.95155668258667
    7. ' a' → logprob: -5.07655668258667
    8. ' entier' → logprob: -6.07655668258667
    9. 'nombre' → logprob: -6.20155668258667
    10. ',' → logprob: -6.45155668258667

Token 116: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.49309012293815613
    2. 'i' → logprob: -0.9930901527404785
    3. 'ier' → logprob: -4.1180901527404785
    4. 'e' → logprob: -6.8680901527404785
    5. 't' → logprob: -7.8680901527404785
    6. 'a' → logprob: -8.11808967590332
    7. 'ié' → logprob: -8.49308967590332
    8. 'ières' → logprob: -8.61808967590332
    9. 'er' → logprob: -9.49308967590332
    10. 'ière' → logprob: -9.74308967590332

Token 117: ' sont' (ID: 5242)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6920268535614014
    2. ' a' → logprob: -1.6920268535614014
    3. ' =' → logprob: -1.8170268535614014
    4. ',' → logprob: -2.6920268535614014
    5. 'x' → logprob: -3.6920268535614014
    6. ' x' → logprob: -4.3170270919799805
    7. '=' → logprob: -4.4420270919799805
    8. 'ent' → logprob: -4.4420270919799805
    9. 'n' → logprob: -5.3170270919799805
    10. '1' → logprob: -5.4420270919799805

Token 118: ' alors' (ID: 17971)
  Prédit: ' ensuite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ensuite' → logprob: -0.20668843388557434
    2. ' affect' → logprob: -2.581688404083252
    3. ' unpack' → logprob: -3.456688404083252
    4. ' alors' → logprob: -3.581688404083252
    5. ' assign' → logprob: -4.206688404083252
    6. ' attrib' → logprob: -4.206688404083252
    7. ' stock' → logprob: -5.206688404083252
    8. ' récup' → logprob: -5.831688404083252
    9. ' a' → logprob: -5.956688404083252
    10. 'assign' → logprob: -6.581688404083252

Token 119: ' affect' (ID: 7902)
  Prédit: ' affect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affect' → logprob: -0.14354050159454346
    2. ' stock' → logprob: -3.018540382385254
    3. ' assign' → logprob: -3.393540382385254
    4. ' unpack' → logprob: -3.768540382385254
    5. 'assign' → logprob: -4.268540382385254
    6. 'aff' → logprob: -5.018540382385254
    7. ' attrib' → logprob: -5.268540382385254
    8. ' récup' → logprob: -7.643540382385254
    9. 'stock' → logprob: -7.643540382385254
    10. ' assigned' → logprob: -7.768540382385254

Token 120: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0011760591296479106
    2. 'é' → logprob: -7.001175880432129
    3. 'u' → logprob: -9.001175880432129
    4. 'er' → logprob: -9.126175880432129
    5. 'es' → logprob: -10.876175880432129
    6. 'ées' → logprob: -11.751175880432129
    7. 'e' → logprob: -13.376175880432129
    8. 's' → logprob: -14.501175880432129
    9. 'ée' → logprob: -14.626175880432129
    10. ' é' → logprob: -14.626175880432129

Token 121: ' respect' (ID: 5618)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28532326221466064
    2. ' =' → logprob: -2.285323143005371
    3. ',' → logprob: -3.035323143005371
    4. 'r' → logprob: -3.285323143005371
    5. 's' → logprob: -3.660323143005371
    6. '=' → logprob: -4.160323143005371
    7. ' ,' → logprob: -5.035323143005371
    8. ' à' → logprob: -5.410323143005371
    9. 'u' → logprob: -6.785323143005371
    10. 'e' → logprob: -6.785323143005371

Token 122: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.0019877557642757893
    2. 'ement' → logprob: -7.376987934112549
    3. '-' → logprob: -8.12698745727539
    4. 'vement' → logprob: -8.12698745727539
    5. '#' → logprob: -9.25198745727539
    6. 'v' → logprob: -9.50198745727539
    7. 'uv' → logprob: -9.50198745727539
    8. 'ablement' → logprob: -9.50198745727539
    9. 'ativement' → logprob: -9.75198745727539
    10. 'iv' → logprob: -10.12698745727539

Token 123: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.0090560913085938
    2. ' a' → logprob: -1.7590560913085938
    3. ' =' → logprob: -1.7590560913085938
    4. '=' → logprob: -2.8840560913085938
    5. ' par' → logprob: -3.1340560913085938
    6. ' aux' → logprob: -3.1340560913085938
    7. ' ' → logprob: -3.2590560913085938
    8. ',' → logprob: -3.3840560913085938
    9. 'a' → logprob: -3.5090560913085938
    10. ' x' → logprob: -4.384056091308594

Token 124: ' variables' (ID: 13955)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1518813520669937
    2. ' a' → logprob: -2.526881456375122
    3. 'ent' → logprob: -3.401881456375122
    4. ' ent' → logprob: -4.276881217956543
    5. ' nombre' → logprob: -5.776881217956543
    6. 'x' → logprob: -5.901881217956543
    7. 'nombre' → logprob: -5.901881217956543
    8. ' entier' → logprob: -6.401881217956543
    9. 'num' → logprob: -7.151881217956543
    10. ' nombres' → logprob: -7.151881217956543

Token 125: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6544980406761169
    2. 'a' → logprob: -0.9044980406761169
    3. 'x' → logprob: -3.2794981002807617
    4. ' x' → logprob: -3.2794981002807617
    5. 'nombre' → logprob: -10.154498100280762
    6. ' nombre' → logprob: -10.279498100280762
    7. 'ent' → logprob: -10.404498100280762
    8. ' entier' → logprob: -10.404498100280762
    9. ' num' → logprob: -10.654498100280762
    10. 'n' → logprob: -10.779498100280762

Token 126: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020867209881544113
    2. ' ,' → logprob: -3.895867109298706
    3. ',b' → logprob: -9.395867347717285
    4. ',a' → logprob: -9.520867347717285
    5. ' et' → logprob: -9.895867347717285
    6. 'et' → logprob: -10.145867347717285
    7. 'a' → logprob: -10.145867347717285
    8. ' ' → logprob: -11.145867347717285
    9. ' and' → logprob: -12.145867347717285
    10. '1' → logprob: -12.520867347717285

Token 127: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16022758185863495
    2. 'b' → logprob: -1.9102275371551514
    3. ' ' → logprob: -13.28522777557373
    4. ' ' → logprob: -13.53522777557373
    5. ' ' → logprob: -16.160226821899414
    6. 'space' → logprob: -16.785226821899414
    7. 's' → logprob: -16.910226821899414
    8. '_b' → logprob: -16.910226821899414
    9. '	b' → logprob: -17.410226821899414
    10. ',' → logprob: -17.410226821899414

Token 128: ' grâce' (ID: 31589)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.15310683415737e-05
    2. ' a' → logprob: -11.250021934509277
    3. '
' → logprob: -12.125021934509277
    4. '#' → logprob: -14.000021934509277
    5. '```' → logprob: -14.250021934509277
    6. ' 
' → logprob: -14.750021934509277
    7. '

' → logprob: -15.375021934509277
    8. ':' → logprob: -15.750021934509277
    9. ',' → logprob: -15.750021934509277
    10. '  
' → logprob: -15.875021934509277

Token 129: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07723384350538254
    2. ' au' → logprob: -3.0772337913513184
    3. '=' → logprob: -4.452233791351318
    4. ' =' → logprob: -4.952233791351318
    5. ' aux' → logprob: -5.452233791351318
    6. ' a' → logprob: -5.827233791351318
    7. 'au' → logprob: -6.952233791351318
    8. ' ' → logprob: -7.577233791351318
    9. 'à' → logprob: -7.952233791351318
    10. '<|end|>' → logprob: -9.327234268188477

Token 130: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.172912836074829
    2. ' l' → logprob: -1.172912836074829
    3. ' la' → logprob: -1.547912836074829
    4. 'a' → logprob: -2.297912836074829
    5. 'la' → logprob: -4.04791259765625
    6. ' a' → logprob: -4.29791259765625
    7. ' unpack' → logprob: -4.54791259765625
    8. 'un' → logprob: -4.67291259765625
    9. 'map' → logprob: -6.04791259765625
    10. '=' → logprob: -6.67291259765625

Token 131: ''aff' (ID: 53397)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6767830848693848
    2. 'a' → logprob: -1.0517830848693848
    3. ''' → logprob: -2.6767830848693848
    4. 'es' → logprob: -3.6767830848693848
    5. ''é' → logprob: -4.051783084869385
    6. ''a' → logprob: -5.676783084869385
    7. ''i' → logprob: -5.801783084869385
    8. 'igne' → logprob: -5.801783084869385
    9. ''aff' → logprob: -5.926783084869385
    10. 'i' → logprob: -6.426783084869385

Token 132: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0008906175498850644
    2. 'ection' → logprob: -7.750890731811523
    3. 'ec' → logprob: -8.000890731811523
    4. 'ecta' → logprob: -9.125890731811523
    5. 'e' → logprob: -11.875890731811523
    6. 'ic' → logprob: -12.750890731811523
    7. 'et' → logprob: -13.750890731811523
    8. 'ichage' → logprob: -13.875890731811523
    9. 'ective' → logprob: -14.125890731811523
    10. 'ectin' → logprob: -14.625890731811523

Token 133: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.2792983949184418
    2. ' a' → logprob: -2.4042983055114746
    3. 'ement' → logprob: -2.6542983055114746
    4. 'a' → logprob: -3.0292983055114746
    5. 'ment' → logprob: -4.029298305511475
    6. ' at' → logprob: -5.654298305511475
    7. 'nement' → logprob: -5.779298305511475
    8. 'er' → logprob: -6.404298305511475
    9. 'm' → logprob: -6.404298305511475
    10. 'n' → logprob: -6.904298305511475

Token 134: ' multiple' (ID: 7598)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11262420564889908
    2. ' a' → logprob: -2.862624168395996
    3. ' =' → logprob: -3.237624168395996
    4. '=' → logprob: -4.862624168395996
    5. ',' → logprob: -6.362624168395996
    6. ' ' → logprob: -8.362624168395996
    7. 's' → logprob: -9.362624168395996
    8. '=a' → logprob: -9.612624168395996
    9. ' ,' → logprob: -10.362624168395996
    10. ' à' → logprob: -10.612624168395996

Token 135: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.584239938296378e-06
    2. ' a' → logprob: -12.625007629394531
    3. '#' → logprob: -13.375007629394531
    4. '
' → logprob: -13.750007629394531
    5. ' 
' → logprob: -14.625007629394531
    6. '```' → logprob: -14.875007629394531
    7. '

' → logprob: -15.250007629394531
    8. '#a' → logprob: -15.250007629394531
    9. 'n' → logprob: -16.37500762939453
    10. '  
' → logprob: -16.37500762939453

Token 136: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.7697225252486533e-06
    2. ' a' → logprob: -13.250003814697266
    3. '```' → logprob: -14.125003814697266
    4. ' 
' → logprob: -14.625003814697266
    5. '#' → logprob: -14.875003814697266
    6. '  
' → logprob: -16.000003814697266
    7. '#a' → logprob: -16.625003814697266
    8. '
' → logprob: -17.000003814697266
    9. 'n' → logprob: -17.250003814697266
    10. '

' → logprob: -17.625003814697266

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.127362921833992
    2. ' ,' → logprob: -2.1273629665374756
    3. ' ' → logprob: -8.502363204956055
    4. 'a' → logprob: -9.502363204956055
    5. ',b' → logprob: -9.752363204956055
    6. ' a' → logprob: -10.377363204956055
    7. ' =' → logprob: -10.502363204956055
    8. ',a' → logprob: -11.002363204956055
    9. ' b' → logprob: -11.252363204956055
    10. 'b' → logprob: -12.377363204956055

Token 138: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.01816820353269577
    2. 'b' → logprob: -4.018167972564697
    3. ' ' → logprob: -11.018168449401855
    4. '<|end|>' → logprob: -14.018168449401855
    5. ' ' → logprob: -14.268168449401855
    6. ' 
' → logprob: -15.518168449401855
    7. '	b' → logprob: -16.39316749572754
    8. 's' → logprob: -17.39316749572754
    9. '```' → logprob: -17.64316749572754
    10. ' б' → logprob: -17.76816749572754

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021966483909636736
    2. '=' → logprob: -6.127196788787842
    3. ' =
' → logprob: -12.127196311950684
    4. ' ' → logprob: -12.502196311950684
    5. ',' → logprob: -13.877196311950684
    6. ')' → logprob: -15.002196311950684
    7. '=input' → logprob: -15.002196311950684
    8. ' =
' → logprob: -15.127196311950684
    9. ' ' → logprob: -15.252196311950684
    10. ' =)' → logprob: -16.252197265625

Token 140: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06196869537234306
    2. ' map' → logprob: -2.8119688034057617
    3. '	map' → logprob: -14.686968803405762
    4. 'm' → logprob: -15.311968803405762
    5. 'int' → logprob: -16.311967849731445
    6. ' ' → logprob: -16.436967849731445
    7. 'list' → logprob: -16.561967849731445
    8. ' ' → logprob: -17.061967849731445
    9. 'input' → logprob: -17.561967849731445
    10. '   ' → logprob: -18.311967849731445

Token 141: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10026490688323975
    2. '(' → logprob: -2.3502650260925293
    3. '(
' → logprob: -10.725264549255371
    4. '<int' → logprob: -11.475264549255371
    5. ' (' → logprob: -11.850264549255371
    6. '(input' → logprob: -11.850264549255371
    7. 'int' → logprob: -12.350264549255371
    8. '[int' → logprob: -12.725264549255371
    9. '(str' → logprob: -13.100264549255371
    10. '(lambda' → logprob: -14.475264549255371

Token 142: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.019767411053180695
    2. 'input' → logprob: -4.5197672843933105
    3. ',input' → logprob: -5.5197672843933105
    4. ' (' → logprob: -6.1447672843933105
    5. '(' → logprob: -6.2697672843933105
    6. ')' → logprob: -7.8947672843933105
    7. ',' → logprob: -9.019767761230469
    8. ' input' → logprob: -9.144767761230469
    9. '(
' → logprob: -11.019767761230469
    10. '=input' → logprob: -11.644767761230469

Token 143: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04859350249171257
    2. ' input' → logprob: -3.048593521118164
    3. '(input' → logprob: -12.423593521118164
    4. ')' → logprob: -13.423593521118164
    5. ' ' → logprob: -15.923593521118164
    6. '	input' → logprob: -16.173593521118164
    7. '<input' → logprob: -16.423593521118164
    8. ',input' → logprob: -16.673593521118164
    9. '=input' → logprob: -16.923593521118164
    10. '   ' → logprob: -17.048593521118164

Token 144: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.38850483298301697
    2. '()' → logprob: -1.3885048627853394
    3. '())' → logprob: -2.63850474357605
    4. '("' → logprob: -7.513504981994629
    5. '(' → logprob: -8.888504981994629
    6. '('' → logprob: -9.013504981994629
    7. '(()' → logprob: -10.013504981994629
    8. ')' → logprob: -10.638504981994629
    9. '()))' → logprob: -10.763504981994629
    10. ' ())' → logprob: -10.888504981994629

Token 145: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026169343618676066
    2. 'strip' → logprob: -8.250261306762695
    3. ' split' → logprob: -15.000261306762695
    4. 'rstrip' → logprob: -18.000261306762695
    5. 'spl' → logprob: -19.125261306762695
    6. '(split' → logprob: -19.375261306762695
    7. 'plit' → logprob: -20.750261306762695
    8. '_split' → logprob: -21.125261306762695
    9. '.split' → logprob: -21.750261306762695
    10. 's' → logprob: -22.375261306762695

Token 146: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006827143952250481
    2. '()' → logprob: -5.256827354431152
    3. '()))' → logprob: -6.506827354431152
    4. ' ())' → logprob: -10.006827354431152
    5. ')' → logprob: -10.631827354431152
    6. '(' → logprob: -10.881827354431152
    7. '())
' → logprob: -12.506827354431152
    8. '('' → logprob: -12.881827354431152
    9. '());' → logprob: -14.381827354431152
    10. '))' → logprob: -14.381827354431152

Token 147: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.893625795841217
    2. ')' → logprob: -1.1436257362365723
    3. '<|end|>' → logprob: -1.5186257362365723
    4. 'if' → logprob: -4.018625736236572
    5. '#' → logprob: -4.143625736236572
    6. 'print' → logprob: -4.768625736236572
    7. '  
' → logprob: -5.268625736236572
    8. ':' → logprob: -6.768625736236572
    9. ' if' → logprob: -7.518625736236572
    10. ' 
' → logprob: -7.518625736236572

Token 148: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23322172462940216
    2. 'result' → logprob: -2.4832217693328857
    3. 's' → logprob: -2.8582217693328857
    4. '#' → logprob: -3.3582217693328857
    5. 'if' → logprob: -4.233221530914307
    6. 'sum' → logprob: -4.733221530914307
    7. 'c' → logprob: -4.983221530914307
    8. 'som' → logprob: -7.608221530914307
    9. ' print' → logprob: -7.858221530914307
    10. 'rés' → logprob: -8.108222007751465

Token 149: 'er' (ID: 259)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1765066385269165
    2. 's' → logprob: -1.3015066385269165
    3. 'c' → logprob: -1.5515066385269165
    4. ' c' → logprob: -2.676506519317627
    5. 'sum' → logprob: -3.051506519317627
    6. ' s' → logprob: -3.551506519317627
    7. ' result' → logprob: -3.801506519317627
    8. ' =' → logprob: -4.676506519317627
    9. ' somme' → logprob: -5.051506519317627
    10. '=' → logprob: -5.676506519317627

Token 150: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.16211186349391937
    2. 'c' → logprob: -2.662111759185791
    3. 'la' → logprob: -3.662111759185791
    4. 's' → logprob: -4.037111759185791
    5. ' c' → logprob: -4.037111759185791
    6. ' s' → logprob: -5.287111759185791
    7. ' le' → logprob: -5.412111759185791
    8. 'le' → logprob: -5.787111759185791
    9. 'l' → logprob: -7.037111759185791
    10. ' ' → logprob: -7.287111759185791

Token 151: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01905784383416176
    2. ' somme' → logprob: -4.019057750701904
    3. 'som' → logprob: -7.644057750701904
    4. 'c' → logprob: -8.519058227539062
    5. '#' → logprob: -9.019058227539062
    6. 'sum' → logprob: -9.644058227539062
    7. 'rés' → logprob: -12.019058227539062
    8. 'produ' → logprob: -12.644058227539062
    9. 'result' → logprob: -12.769058227539062
    10. 'plus' → logprob: -12.769058227539062

Token 152: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0512175559997559
    2. 'c' → logprob: -1.8012175559997559
    3. 's' → logprob: -1.8012175559997559
    4. 'de' → logprob: -1.9262175559997559
    5. ' c' → logprob: -3.301217555999756
    6. 'sum' → logprob: -3.551217555999756
    7. 'max' → logprob: -3.676217555999756
    8. '_sum' → logprob: -4.676217555999756
    9. ' maximale' → logprob: -4.926217555999756
    10. 'a' → logprob: -4.926217555999756

Token 153: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05494547635316849
    2. ' a' → logprob: -2.929945468902588
    3. '(a' → logprob: -10.679945945739746
    4. ' ' → logprob: -11.304945945739746
    5. ' (' → logprob: -11.929945945739746
    6. 'max' → logprob: -12.679945945739746
    7. 'pow' → logprob: -12.679945945739746
    8. 's' → logprob: -12.804945945739746
    9. '(' → logprob: -12.929945945739746
    10. ' max' → logprob: -13.554945945739746

Token 154: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007269674097187817
    2. ' a' → logprob: -7.87572717666626
    3. '(a' → logprob: -8.125726699829102
    4. ' (' → logprob: -10.875726699829102
    5. '2' → logprob: -11.000726699829102
    6. '3' → logprob: -12.000726699829102
    7. '(' → logprob: -12.125726699829102
    8. ')' → logprob: -13.750726699829102
    9. ')a' → logprob: -14.250726699829102
    10. ' ' → logprob: -14.375726699829102

Token 155: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2119099646806717
    2. '+' → logprob: -1.7119100093841553
    3. '+b' → logprob: -4.586909770965576
    4. ' -' → logprob: -9.461910247802734
    5. '*' → logprob: -9.961910247802734
    6. '-' → logprob: -10.211910247802734
    7. '**' → logprob: -10.336910247802734
    8. ' *' → logprob: -11.086910247802734
    9. ' ' → logprob: -11.336910247802734
    10. '%' → logprob: -11.711910247802734

Token 156: ' (' (ID: 350)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759735703468323
    2. 'b' → logprob: -0.8259735703468323
    3. ' ' → logprob: -10.575973510742188
    4. '1' → logprob: -12.575973510742188
    5. ' ' → logprob: -14.075973510742188
    6. '3' → logprob: -14.200973510742188
    7. ')b' → logprob: -14.450973510742188
    8. '2' → logprob: -14.450973510742188
    9. '	b' → logprob: -14.700973510742188
    10. ')' → logprob: -15.325973510742188

Token 157: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05328470841050148
    2. ' b' → logprob: -4.178284645080566
    3. '2' → logprob: -4.303284645080566
    4. 'a' → logprob: -4.428284645080566
    5. '3' → logprob: -4.928284645080566
    6. ' (' → logprob: -7.553284645080566
    7. ' ' → logprob: -7.553284645080566
    8. '(b' → logprob: -7.553284645080566
    9. '4' → logprob: -7.803284645080566
    10. ' a' → logprob: -8.053284645080566

Token 158: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12015163898468018
    2. '*' → logprob: -2.4951515197753906
    3. '*b' → logprob: -3.4951515197753906
    4. 'b' → logprob: -8.62015151977539
    5. ' ' → logprob: -8.74515151977539
    6. '**' → logprob: -11.49515151977539
    7. ' +' → logprob: -11.62015151977539
    8. '*a' → logprob: -12.24515151977539
    9. ' **' → logprob: -12.37015151977539
    10. ' b' → logprob: -12.49515151977539

Token 159: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1602482944726944
    2. ' b' → logprob: -1.9102482795715332
    3. ' ' → logprob: -12.035248756408691
    4. ' (' → logprob: -12.410248756408691
    5. ')b' → logprob: -12.410248756408691
    6. '(' → logprob: -12.910248756408691
    7. '(b' → logprob: -13.535248756408691
    8. 'a' → logprob: -13.785248756408691
    9. ' ' → logprob: -13.910248756408691
    10. ')' → logprob: -14.035248756408691

Token 160: ')).
' (ID: 82227)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1416972130537033
    2. ')' → logprob: -2.1416971683502197
    3. ')**' → logprob: -4.266697406768799
    4. ')))' → logprob: -8.39169692993164
    5. ' ))' → logprob: -8.76669692993164
    6. ' )' → logprob: -9.01669692993164
    7. '**' → logprob: -9.51669692993164
    8. ' ' → logprob: -11.89169692993164
    9. '()))' → logprob: -12.14169692993164
    10. '))*' → logprob: -12.14169692993164

Token 161: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.060635484755039215
    2. ' result' → logprob: -3.310635566711426
    3. 'c' → logprob: -3.935635566711426
    4. 'res' → logprob: -6.935635566711426
    5. ' c' → logprob: -7.310635566711426
    6. 'a' → logprob: -7.685635566711426
    7. ' resultat' → logprob: -8.310635566711426
    8. ' résultat' → logprob: -9.060635566711426
    9. 'rés' → logprob: -9.185635566711426
    10. ' a' → logprob: -9.935635566711426

Token 162: ' (' (ID: 350)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.004694868810474873
    2. ' result' → logprob: -5.629694938659668
    3. 'c' → logprob: -7.254694938659668
    4. 'res' → logprob: -8.754694938659668
    5. ' resultat' → logprob: -9.129694938659668
    6. 'rés' → logprob: -10.254694938659668
    7. 'difference' → logprob: -10.379694938659668
    8. ' résultat' → logprob: -11.379694938659668
    9. 'diff' → logprob: -11.629694938659668
    10. 'a' → logprob: -12.004694938659668

Token 163: '2' (ID: 17)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.22954507172107697
    2. 'a' → logprob: -1.8545451164245605
    3. ')' → logprob: -4.2295451164245605
    4. ' result' → logprob: -4.3545451164245605
    5. ' a' → logprob: -5.4795451164245605
    6. ' )' → logprob: -5.6045451164245605
    7. 'rés' → logprob: -5.9795451164245605
    8. 'res' → logprob: -6.1045451164245605
    9. ' resultat' → logprob: -6.4795451164245605
    10. 'val' → logprob: -6.6045451164245605

Token 164: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1616244614124298
    2. '*' → logprob: -1.9116244316101074
    3. ')' → logprob: -6.786624431610107
    4. '*b' → logprob: -8.411624908447266
    5. ' ' → logprob: -11.286624908447266
    6. ' ' → logprob: -11.536624908447266
    7. '*a' → logprob: -11.661624908447266
    8. ' )' → logprob: -12.036624908447266
    9. ')*' → logprob: -12.536624908447266
    10. '*)' → logprob: -12.911624908447266

Token 165: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.079301618039608
    2. ' b' → logprob: -2.579301595687866
    3. ')' → logprob: -8.454301834106445
    4. ')b' → logprob: -8.579301834106445
    5. ' )' → logprob: -12.454301834106445
    6. ' ' → logprob: -12.704301834106445
    7. '<|end|>' → logprob: -13.204301834106445
    8. ' ' → logprob: -14.704301834106445
    9. '	b' → logprob: -15.954301834106445
    10. '>b' → logprob: -16.141801834106445

Token 166: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6935057044029236
    2. '))' → logprob: -0.6935057044029236
    3. ')))' → logprob: -8.19350528717041
    4. ' )' → logprob: -11.31850528717041
    5. ')**' → logprob: -11.31850528717041
    6. ' ))' → logprob: -11.81850528717041
    7. '))*' → logprob: -11.94350528717041
    8. ')*' → logprob: -11.94350528717041
    9. ')).' → logprob: -12.19350528717041
    10. ')a' → logprob: -12.31850528717041

Token 167: ' signifie' (ID: 81149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01628866419196129
    2. ' )' → logprob: -4.891288757324219
    3. 'a' → logprob: -6.141288757324219
    4. '-' → logprob: -6.516288757324219
    5. '))' → logprob: -6.766288757324219
    6. '*' → logprob: -7.016288757324219
    7. ')a' → logprob: -7.641288757324219
    8. ')*' → logprob: -7.766288757324219
    9. 'result' → logprob: -7.766288757324219
    10. ' -' → logprob: -7.891288757324219

Token 168: ' que' (ID: 661)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7419376373291016
    2. ' deux' → logprob: -1.6169376373291016
    3. ' ' → logprob: -1.7419376373291016
    4. 'de' → logprob: -2.1169376373291016
    5. ' la' → logprob: -5.241937637329102
    6. ' que' → logprob: -5.616937637329102
    7. ' multiplier' → logprob: -5.616937637329102
    8. ' two' → logprob: -5.616937637329102
    9. 'mult' → logprob: -5.866937637329102
    10. 'la' → logprob: -6.116937637329102

Token 169: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1658822298049927
    2. 'b' → logprob: -1.5408822298049927
    3. '2' → logprob: -1.6658822298049927
    4. ' ' → logprob: -2.540882110595703
    5. ' on' → logprob: -2.665882110595703
    6. ' b' → logprob: -2.915882110595703
    7. 'l' → logprob: -3.290882110595703
    8. 'on' → logprob: -4.790882110595703
    9. ' le' → logprob: -5.040882110595703
    10. ' la' → logprob: -5.165882110595703

Token 170: ''on' (ID: 25812)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12065248191356659
    2. ''on' → logprob: -3.120652437210083
    3. ''op' → logprob: -4.245652675628662
    4. '*' → logprob: -4.495652675628662
    5. 'on' → logprob: -4.745652675628662
    6. ''' → logprob: -5.370652675628662
    7. ''utilisateur' → logprob: -5.495652675628662
    8. ''ex' → logprob: -5.620652675628662
    9. ' on' → logprob: -6.370652675628662
    10. ' a' → logprob: -6.370652675628662

Token 171: ' multipl' (ID: 44269)
  Prédit: 'mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.00827861949801445
    2. ' multipl' → logprob: -4.883278846740723
    3. 'double' → logprob: -8.258278846740723
    4. 'multip' → logprob: -8.258278846740723
    5. ' double' → logprob: -9.758278846740723
    6. 'multiply' → logprob: -10.508278846740723
    7. 'mul' → logprob: -11.008278846740723
    8. 'd' → logprob: -11.883278846740723
    9. ' multip' → logprob: -12.008278846740723
    10. '_mult' → logprob: -12.258278846740723

Token 172: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.10150250792503357
    2. 'ique' → logprob: -2.3515024185180664
    3. 'lie' → logprob: -7.226502418518066
    4. 'iqu' → logprob: -8.976502418518066
    5. 'ipl' → logprob: -9.101502418518066
    6. 'plique' → logprob: -9.851502418518066
    7. 'ip' → logprob: -10.101502418518066
    8. 'e' → logprob: -10.101502418518066
    9. 'pie' → logprob: -10.851502418518066
    10. 'pl' → logprob: -10.851502418518066

Token 173: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2695043683052063
    2. ' b' → logprob: -1.5195043087005615
    3. ' ' → logprob: -4.769504547119141
    4. '2' → logprob: -5.269504547119141
    5. ' par' → logprob: -6.519504547119141
    6. '<|end|>' → logprob: -7.019504547119141
    7. ' ' → logprob: -7.644504547119141
    8. ' la' → logprob: -8.76950454711914
    9. 'par' → logprob: -8.89450454711914
    10. 'le' → logprob: -9.51950454711914

Token 174: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.08906226605176926
    2. 'par' → logprob: -2.464062213897705
    3. ')' → logprob: -9.339062690734863
    4. '*' → logprob: -11.214062690734863
    5. ' ' → logprob: -11.464062690734863
    6. '<|end|>' → logprob: -12.964062690734863
    7. '_par' → logprob: -13.089062690734863
    8. ' ' → logprob: -14.089062690734863
    9. ' )' → logprob: -14.089062690734863
    10. '	par' → logprob: -14.214062690734863

Token 175: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20142260193824768
    2. ' ' → logprob: -1.7014225721359253
    3. ' ' → logprob: -12.076422691345215
    4. ' deux' → logprob: -13.326422691345215
    5. '```' → logprob: -14.076422691345215
    6. ' two' → logprob: -14.451422691345215
    7. 'de' → logprob: -16.0764217376709
    8. '  ' → logprob: -16.3264217376709
    9. ' a' → logprob: -16.9514217376709
    10. '.' → logprob: -17.8264217376709

Token 176: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007036144379526377
    2. ' ' → logprob: -7.375703811645508
    3. 'de' → logprob: -9.500703811645508
    4. ' deux' → logprob: -13.375703811645508
    5. '```' → logprob: -14.625703811645508
    6. ' ' → logprob: -16.000703811645508
    7. ' two' → logprob: -17.375703811645508
    8. '

' → logprob: -17.625703811645508
    9. '  ' → logprob: -17.750703811645508
    10. '
' → logprob: -17.750703811645508

Token 177: ' avant' (ID: 13339)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02502371557056904
    2. 'c' → logprob: -4.650023937225342
    3. 'rés' → logprob: -5.150023937225342
    4. 'res' → logprob: -5.900023937225342
    5. ')' → logprob: -6.025023937225342
    6. ' result' → logprob: -6.525023937225342
    7. ')
' → logprob: -6.900023937225342
    8. 'val' → logprob: -7.775023937225342
    9. 'difference' → logprob: -7.775023937225342
    10. 'diff' → logprob: -8.650023460388184

Token 178: ' de' (ID: 334)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6792234182357788
    2. ' la' → logprob: -1.5542234182357788
    3. 'sou' → logprob: -1.8042234182357788
    4. 'le' → logprob: -3.1792235374450684
    5. ' de' → logprob: -3.1792235374450684
    6. ' le' → logprob: -4.679223537445068
    7. ' sou' → logprob: -5.054223537445068
    8. 'de' → logprob: -5.179223537445068
    9. ' effectuer' → logprob: -5.304223537445068
    10. 'l' → logprob: -6.429223537445068

Token 179: ' le' (ID: 505)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.24223271012306213
    2. 'le' → logprob: -2.3672327995300293
    3. ' le' → logprob: -2.7422327995300293
    4. ' sou' → logprob: -2.9922327995300293
    5. ' effectuer' → logprob: -6.242232799530029
    6. 'faire' → logprob: -6.742232799530029
    7. 'les' → logprob: -6.867232799530029
    8. 'la' → logprob: -7.242232799530029
    9. ' les' → logprob: -7.742232799530029
    10. ' faire' → logprob: -7.867232799530029

Token 180: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.0025244110729545355
    2. ' sou' → logprob: -6.502524375915527
    3. 'sub' → logprob: -7.252524375915527
    4. 's' → logprob: -8.752524375915527
    5. 'subtract' → logprob: -9.252524375915527
    6. '-' → logprob: -10.752524375915527
    7. ' ' → logprob: -11.377524375915527
    8. 'calcul' → logprob: -12.127524375915527
    9. 'Sou' → logprob: -12.377524375915527
    10. 'su' → logprob: -13.252524375915527

Token 181: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.0018542696489021182
    2. 'str' → logprob: -7.126854419708252
    3. 'b' → logprob: -7.501854419708252
    4. 'st' → logprob: -8.501853942871094
    5. 'straction' → logprob: -9.626853942871094
    6. 'stract' → logprob: -9.751853942871094
    7. 'mettre' → logprob: -9.751853942871094
    8. 'r' → logprob: -9.876853942871094
    9. 's' → logprob: -11.376853942871094
    10. 'stre' → logprob: -12.001853942871094

Token 182: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.2434569150209427
    2. 'tra' → logprob: -3.3684568405151367
    3. 'irer' → logprob: -3.4934568405151367
    4. 'itre' → logprob: -3.7434568405151367
    5. 'aire' → logprob: -4.243456840515137
    6. 'stra' → logprob: -4.618456840515137
    7. 'tre' → logprob: -4.743456840515137
    8. 'tr' → logprob: -4.743456840515137
    9. 'trait' → logprob: -4.743456840515137
    10. 'r' → logprob: -4.993456840515137

Token 183: ' à' (ID: 1221)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.021073827520012856
    2. ')' → logprob: -4.271073818206787
    3. 'c' → logprob: -5.646073818206787
    4. 'res' → logprob: -6.271073818206787
    5. 'rés' → logprob: -7.896073818206787
    6. ')
' → logprob: -8.021074295043945
    7. 'a' → logprob: -8.646074295043945
    8. ' result' → logprob: -9.021074295043945
    9. 'r' → logprob: -9.146074295043945
    10. ')c' → logprob: -9.271074295043945

Token 184: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002805110299959779
    2. ' a' → logprob: -5.877805233001709
    3. ' ' → logprob: -16.502805709838867
    4. '	a' → logprob: -16.627805709838867
    5. ' ' → logprob: -17.127805709838867
    6. ')a' → logprob: -18.502805709838867
    7. ''a' → logprob: -19.252805709838867
    8. ')' → logprob: -19.877805709838867
    9. '```' → logprob: -19.877805709838867
    10. '(a' → logprob: -20.002805709838867

Token 185: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.007155303377658129
    2. 'c' → logprob: -5.257155418395996
    3. 'res' → logprob: -6.882155418395996
    4. 'rés' → logprob: -7.507155418395996
    5. ' result' → logprob: -9.257155418395996
    6. 'difference' → logprob: -9.382155418395996
    7. 'r' → logprob: -9.632155418395996
    8. 'print' → logprob: -10.507155418395996
    9. 'a' → logprob: -11.007155418395996
    10. 'diff' → logprob: -11.132155418395996

Token 186: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.000839046377222985
    2. 'c' → logprob: -7.3758392333984375
    3. 'res' → logprob: -9.500839233398438
    4. 'rés' → logprob: -9.875839233398438
    5. ' result' → logprob: -9.875839233398438
    6. 'difference' → logprob: -10.625839233398438
    7. 'diff' → logprob: -12.625839233398438
    8. 'resultado' → logprob: -13.250839233398438
    9. ' resultat' → logprob: -13.625839233398438
    10. 'value' → logprob: -14.000839233398438

Token 187: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0020213089883327484
    2. 'c' → logprob: -6.502021312713623
    3. ' result' → logprob: -8.377020835876465
    4. 'res' → logprob: -8.877020835876465
    5. 'difference' → logprob: -10.127020835876465
    6. 'rés' → logprob: -10.252020835876465
    7. ' resultat' → logprob: -11.002020835876465
    8. 'value' → logprob: -11.127020835876465
    9. 'diff' → logprob: -11.377020835876465
    10. 'val' → logprob: -11.752020835876465

Token 188: ' vér' (ID: 42524)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.39623600244522095
    2. 'result' → logprob: -2.146235942840576
    3. 'c' → logprob: -2.896235942840576
    4. 'calc' → logprob: -3.021235942840576
    5. ' continue' → logprob: -3.646235942840576
    6. 'continue' → logprob: -3.771235942840576
    7. 'cal' → logprob: -4.271235942840576
    8. 'print' → logprob: -4.396235942840576
    9. ' result' → logprob: -5.271235942840576
    10. 'calcul' → logprob: -5.771235942840576

Token 189: 'ifie' (ID: 46409)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.039122410118579865
    2. 'ifie' → logprob: -3.2891223430633545
    3. 'if' → logprob: -7.039122581481934
    4. 'ifer' → logprob: -9.289122581481934
    5. 'ifiez' → logprob: -9.539122581481934
    6. 'ifi' → logprob: -11.289122581481934
    7. '```' → logprob: -11.914122581481934
    8. 'IFIER' → logprob: -12.289122581481934
    9. '#' → logprob: -12.789122581481934
    10. 'a' → logprob: -13.039122581481934

Token 190: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.4580119848251343
    2. ' if' → logprob: -1.2080119848251343
    3. ' que' → logprob: -3.583012104034424
    4. ' a' → logprob: -3.958012104034424
    5. 'a' → logprob: -4.833012104034424
    6. 'if' → logprob: -5.083012104034424
    7. ' ' → logprob: -5.708012104034424
    8. ' ' → logprob: -6.083012104034424
    9. 'si' → logprob: -6.958012104034424
    10. '<|end|>' → logprob: -8.083011627197266

Token 191: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1564185619354248
    2. ' a' → logprob: -2.156418561935425
    3. '(a' → logprob: -4.031418800354004
    4. 'a' → logprob: -4.531418800354004
    5. ' ' → logprob: -8.406418800354004
    6. '(' → logprob: -8.406418800354004
    7. ' ' → logprob: -9.281418800354004
    8. '	a' → logprob: -14.281418800354004
    9. ' (
' → logprob: -14.406418800354004
    10. '_a' → logprob: -14.593918800354004

Token 192: ' résultat' (ID: 62556)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7679092884063721
    2. '(a' → logprob: -1.142909288406372
    3. ' résultat' → logprob: -2.392909288406372
    4. ' (' → logprob: -2.642909288406372
    5. ' a' → logprob: -3.392909288406372
    6. 'result' → logprob: -4.267909049987793
    7. 'rés' → logprob: -6.142909049987793
    8. ' result' → logprob: -6.392909049987793
    9. '(' → logprob: -6.517909049987793
    10. ' resultat' → logprob: -7.142909049987793

Token 193: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7298597693443298
    2. ' >=' → logprob: -1.9798598289489746
    3. ' est' → logprob: -2.3548598289489746
    4. '==' → logprob: -2.6048598289489746
    5. ' <' → logprob: -3.2298598289489746
    6. 'a' → logprob: -3.4798598289489746
    7. '>=' → logprob: -3.4798598289489746
    8. ' <=' → logprob: -3.8548598289489746
    9. ' a' → logprob: -3.8548598289489746
    10. ' ' → logprob: -4.104859828948975

Token 194: ' ce' (ID: 2357)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.30404573678970337
    2. '(a' → logprob: -1.4290456771850586
    3. 'a' → logprob: -4.179045677185059
    4. ' a' → logprob: -4.929045677185059
    5. '(' → logprob: -10.304045677185059
    6. ' ' → logprob: -10.554045677185059
    7. ' ' → logprob: -10.554045677185059
    8. '#a' → logprob: -14.804045677185059
    9. '```' → logprob: -15.054045677185059
    10. '	a' → logprob: -15.366545677185059

Token 195: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.4585956633090973
    2. 'a' → logprob: -1.708595633506775
    3. 'calcul' → logprob: -2.4585957527160645
    4. '(a' → logprob: -3.0835957527160645
    5. ' (' → logprob: -4.3335957527160645
    6. '#' → logprob: -4.8335957527160645
    7. 'cal' → logprob: -5.0835957527160645
    8. '(' → logprob: -5.2085957527160645
    9. '>' → logprob: -5.7085957527160645
    10. 'n' → logprob: -5.8335957527160645

Token 196: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.05447765439748764
    2. 'est' → logprob: -3.3044776916503906
    3. ' ==' → logprob: -5.304477691650391
    4. ' is' → logprob: -5.304477691650391
    5. '==' → logprob: -6.054477691650391
    6. 'a' → logprob: -6.929477691650391
    7. 's' → logprob: -7.554477691650391
    8. '<=' → logprob: -7.929477691650391
    9. '>=' → logprob: -8.05447769165039
    10. ' >=' → logprob: -8.17947769165039

Token 197: ' inférieur' (ID: 191498)
  Prédit: ' positif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positif' → logprob: -0.3229188919067383
    2. ' supérieur' → logprob: -1.9479188919067383
    3. ' nég' → logprob: -2.4479188919067383
    4. 'strict' → logprob: -4.322918891906738
    5. ' inférieur' → logprob: -5.197918891906738
    6. ' strict' → logprob: -5.322918891906738
    7. 'posit' → logprob: -5.447918891906738
    8. ' negatif' → logprob: -5.572918891906738
    9. '>' → logprob: -5.697918891906738
    10. 'sup' → logprob: -5.697918891906738

Token 198: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.038268230855464935
    2. ' ' → logprob: -4.163268089294434
    3. ' a' → logprob: -4.663268089294434
    4. 'à' → logprob: -4.788268089294434
    5. ' to' → logprob: -6.788268089294434
    6. '0' → logprob: -6.913268089294434
    7. '<|end|>' → logprob: -7.288268089294434
    8. 'a' → logprob: -7.663268089294434
    9. '<' → logprob: -8.288268089294434
    10. ' ' → logprob: -8.663268089294434

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4290178716182709
    2. ' ' → logprob: -1.0540179014205933
    3. '10' → logprob: -8.929018020629883
    4. '20' → logprob: -9.929018020629883
    5. ' zéro' → logprob: -10.554018020629883
    6. 'z' → logprob: -10.929018020629883
    7. ' z' → logprob: -11.054018020629883
    8. ' zero' → logprob: -11.179018020629883
    9. '5' → logprob: -11.554018020629883
    10. ' ' → logprob: -12.054018020629883

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027876606211066246
    2. ' ' → logprob: -3.652876615524292
    3. '10' → logprob: -7.402876377105713
    4. 'a' → logprob: -8.152876853942871
    5. 'z' → logprob: -8.152876853942871
    6. ' z' → logprob: -9.402876853942871
    7. '100' → logprob: -9.652876853942871
    8. '20' → logprob: -9.777876853942871
    9. '50' → logprob: -10.277876853942871
    10. 'zero' → logprob: -10.277876853942871

Token 201: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18711332976818085
    2. 'result' → logprob: -1.8121132850646973
    3. ' if' → logprob: -5.687113285064697
    4. '
' → logprob: -5.687113285064697
    5. 'res' → logprob: -8.312113761901855
    6. ' result' → logprob: -9.562113761901855
    7. 'is' → logprob: -9.937113761901855
    8. 'value' → logprob: -10.687113761901855
    9. 'condition' → logprob: -10.687113761901855
    10. 'c' → logprob: -11.062113761901855

Token 202: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019371934235095978
    2. 'result' → logprob: -4.01937198638916
    3. '
' → logprob: -6.89437198638916
    4. ' if' → logprob: -8.76937198638916
    5. 'print' → logprob: -10.89437198638916
    6. 'res' → logprob: -11.39437198638916
    7. '
' → logprob: -12.39437198638916
    8. '  
' → logprob: -12.51937198638916
    9. 'c' → logprob: -13.01937198638916
    10. 'is' → logprob: -13.14437198638916

Token 203: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8830642700195312
    2. ' a' → logprob: -0.8830642700195312
    3. ' (' → logprob: -2.0080642700195312
    4. '(a' → logprob: -3.2580642700195312
    5. '(' → logprob: -8.633064270019531
    6. ' ' → logprob: -9.508064270019531
    7. ' ' → logprob: -12.633064270019531
    8. '	a' → logprob: -12.883064270019531
    9. '   ' → logprob: -13.508064270019531
    10. '_a' → logprob: -14.383064270019531

Token 204: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002991160727106035
    2. ' a' → logprob: -8.125299453735352
    3. '(a' → logprob: -12.875299453735352
    4. ' ' → logprob: -16.12529945373535
    5. '	a' → logprob: -16.12529945373535
    6. ' (' → logprob: -16.50029945373535
    7. '   ' → logprob: -16.50029945373535
    8. ')a' → logprob: -16.87529945373535
    9. ')' → logprob: -17.50029945373535
    10. '_a' → logprob: -18.50029945373535

Token 205: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12698112428188324
    2. '-' → logprob: -2.126981019973755
    3. ' ' → logprob: -10.376980781555176
    4. ')' → logprob: -11.626980781555176
    5. ' ' → logprob: -12.626980781555176
    6. ' <' → logprob: -12.751980781555176
    7. '<' → logprob: -12.751980781555176
    8. ' -
' → logprob: -13.626980781555176
    9. ' )' → logprob: -14.376980781555176
    10. 'a' → logprob: -14.376980781555176

Token 206: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.018538987264037132
    2. '(' → logprob: -4.018538951873779
    3. ' ' → logprob: -8.018539428710938
    4. '2' → logprob: -9.768539428710938
    5. '  ' → logprob: -13.893539428710938
    6. ' ' → logprob: -14.518539428710938
    7. '   ' → logprob: -14.893539428710938
    8. ')' → logprob: -15.018539428710938
    9. ' (
' → logprob: -15.768539428710938
    10. '1' → logprob: -16.393539428710938

Token 207: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00028946425300091505
    2. ' ' → logprob: -8.625289916992188
    3. '(' → logprob: -9.125289916992188
    4. ' (' → logprob: -14.125289916992188
    5. '   ' → logprob: -16.000289916992188
    6. '  ' → logprob: -17.125289916992188
    7. ' ' → logprob: -18.250289916992188
    8. '
' → logprob: -19.187789916992188
    9. '２' → logprob: -19.250289916992188
    10. '۲' → logprob: -19.562789916992188

Token 208: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.062007904052734375
    2. '*' → logprob: -2.8120079040527344
    3. '*b' → logprob: -10.187007904052734
    4. ' ' → logprob: -13.187007904052734
    5. ' ' → logprob: -15.312007904052734
    6. ')' → logprob: -15.312007904052734
    7. 'b' → logprob: -15.687007904052734
    8. ' b' → logprob: -16.937007904052734
    9. '**' → logprob: -17.937007904052734
    10. ')*' → logprob: -18.937007904052734

Token 209: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023245595395565033
    2. ' b' → logprob: -3.7732455730438232
    3. ')b' → logprob: -15.898245811462402
    4. '	b' → logprob: -17.023244857788086
    5. ' ' → logprob: -17.648244857788086
    6. ' ' → logprob: -18.148244857788086
    7. ')' → logprob: -19.023244857788086
    8. ' б' → logprob: -20.148244857788086
    9. '>b' → logprob: -20.398244857788086
    10. '*b' → logprob: -20.523244857788086

Token 210: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0015149809187278152
    2. ')' → logprob: -6.501514911651611
    3. ' ))' → logprob: -11.37651538848877
    4. ')<' → logprob: -14.25151538848877
    5. ')))' → logprob: -16.001514434814453
    6. ' )' → logprob: -16.126514434814453
    7. ''))' → logprob: -16.251514434814453
    8. '"))' → logprob: -16.501514434814453
    9. ' ' → logprob: -16.626514434814453
    10. ')):' → logprob: -16.626514434814453

Token 211: ' <' (ID: 464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005933052161708474
    2. ')<' → logprob: -7.625593185424805
    3. ' )' → logprob: -9.375593185424805
    4. '<' → logprob: -11.125593185424805
    5. ' <' → logprob: -12.125593185424805
    6. ')
' → logprob: -16.625593185424805
    7. ' ' → logprob: -16.750593185424805
    8. ')

' → logprob: -16.875593185424805
    9. ' ' → logprob: -17.125593185424805
    10. '）' → logprob: -17.250593185424805

Token 212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196891888976097
    2. ' ' → logprob: -2.8119688034057617
    3. ')' → logprob: -13.686968803405762
    4. ' ' → logprob: -15.811968803405762
    5. '=' → logprob: -18.311969757080078
    6. '
' → logprob: -18.311969757080078
    7. ' )' → logprob: -18.561969757080078
    8. '1' → logprob: -18.686969757080078
    9. '```' → logprob: -18.686969757080078
    10. '   ' → logprob: -18.811969757080078

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023095356300473213
    2. ' ' → logprob: -8.37523078918457
    3. ')' → logprob: -15.00023078918457
    4. '=' → logprob: -17.87523078918457
    5. '```' → logprob: -18.25023078918457
    6. '۰' → logprob: -18.81273078918457
    7. '
' → logprob: -18.87523078918457
    8. '1' → logprob: -18.93773078918457
    9. ':' → logprob: -19.00023078918457
    10. '   ' → logprob: -19.12523078918457

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001332263695076108
    2. ')' → logprob: -6.7513322830200195
    3. '):
' → logprob: -9.50133228302002
    4. ':' → logprob: -9.75133228302002
    5. ' ):' → logprob: -10.50133228302002
    6. ')):' → logprob: -14.37633228302002
    7. '):

' → logprob: -15.37633228302002
    8. '():' → logprob: -15.62633228302002
    9. '):
' → logprob: -15.87633228302002
    10. ' )' → logprob: -16.876331329345703

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013059870339930058
    2. ':' → logprob: -5.263060092926025
    3. '    
' → logprob: -5.638060092926025
    4. '    ' → logprob: -6.513060092926025
    5. '   ' → logprob: -7.138060092926025
    6. 'print' → logprob: -7.763060092926025
    7. ' ' → logprob: -8.013059616088867
    8. '
' → logprob: -8.138059616088867
    9. ' print' → logprob: -8.888059616088867
    10. ')' → logprob: -8.888059616088867

Token 216: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3349199593067169
    2. 'print' → logprob: -1.4599199295043945
    3. ' print' → logprob: -2.9599199295043945
    4. '    
' → logprob: -8.584919929504395
    5. '
' → logprob: -9.084919929504395
    6. '   ' → logprob: -9.334919929504395
    7. '    ' → logprob: -9.959919929504395
    8. '	print' → logprob: -10.334919929504395
    9. ' ' → logprob: -11.584919929504395
    10. '  ' → logprob: -11.709919929504395

Token 217: ' Ce' (ID: 14228)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11606627702713013
    2. ' print' → logprob: -2.2410662174224854
    3. '   ' → logprob: -5.7410664558410645
    4. '    ' → logprob: -11.491065979003906
    5. 'prin' → logprob: -12.491065979003906
    6. 'pr' → logprob: -12.616065979003906
    7. '	print' → logprob: -12.866065979003906
    8. '#' → logprob: -12.991065979003906
    9. ' ' → logprob: -13.616065979003906
    10. ' prin' → logprob: -13.741065979003906

Token 218: ' bloc' (ID: 51218)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3161594867706299
    2. '   ' → logprob: -1.4411594867706299
    3. ' print' → logprob: -3.56615948677063
    4. '    ' → logprob: -5.941159248352051
    5. '#' → logprob: -6.816159248352051
    6. '    
' → logprob: -7.941159248352051
    7. '   ' → logprob: -8.19115924835205
    8. ' ' → logprob: -8.31615924835205
    9. 'n' → logprob: -8.31615924835205
    10. '   ' → logprob: -8.44115924835205

Token 219: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08271583169698715
    2. '       ' → logprob: -2.9577157497406006
    3. '    ' → logprob: -4.95771598815918
    4. ':' → logprob: -4.95771598815918
    5. 'print' → logprob: -5.08271598815918
    6. ' print' → logprob: -5.45771598815918
    7. ' est' → logprob: -7.20771598815918
    8. '   ' → logprob: -7.45771598815918
    9. '    ' → logprob: -7.83271598815918
    10. ' :' → logprob: -7.83271598815918

Token 220: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.11643155664205551
    2. ' code' → logprob: -2.241431474685669
    3. 'print' → logprob: -5.741431713104248
    4. 'instructions' → logprob: -8.61643123626709
    5. 'instruction' → logprob: -10.11643123626709
    6. ' instructions' → logprob: -10.24143123626709
    7. '   ' → logprob: -10.61643123626709
    8. 'codes' → logprob: -10.99143123626709
    9. '#' → logprob: -11.11643123626709
    10. 'cod' → logprob: -11.49143123626709

Token 221: ' ne' (ID: 453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4172802269458771
    2. ':' → logprob: -1.7922801971435547
    3. '       ' → logprob: -1.9172801971435547
    4. '    
' → logprob: -4.667280197143555
    5. 'print' → logprob: -4.917280197143555
    6. '    ' → logprob: -5.792280197143555
    7. '
' → logprob: -6.417280197143555
    8. ' print' → logprob: -6.542280197143555
    9. ' :' → logprob: -7.042280197143555
    10. '        
' → logprob: -7.167280197143555

Token 222: ' sera' (ID: 15511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04068104177713394
    2. 'print' → logprob: -3.5406811237335205
    3. '   ' → logprob: -5.915680885314941
    4. ' print' → logprob: -6.540680885314941
    5. '    ' → logprob: -6.540680885314941
    6. ' ' → logprob: -6.790680885314941
    7. '   ' → logprob: -6.915680885314941
    8. '       ' → logprob: -6.915680885314941
    9. ' ' → logprob: -7.790680885314941
    10. '  ' → logprob: -8.040680885314941

Token 223: ' exécut' (ID: 165350)
  Prédit: ' exécut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exécut' → logprob: -0.6936357021331787
    2. '   ' → logprob: -1.6936357021331787
    3. 'pas' → logprob: -2.3186357021331787
    4. ' pas' → logprob: -2.4436357021331787
    5. ' executed' → logprob: -2.8186357021331787
    6. 'execut' → logprob: -3.9436357021331787
    7. 'print' → logprob: -4.318635940551758
    8. 'ex' → logprob: -4.693635940551758
    9. '   ' → logprob: -5.193635940551758
    10. ' ' → logprob: -5.318635940551758

Token 224: 'é' (ID: 377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5323806405067444
    2. ' pas' → logprob: -1.1573805809020996
    3. 'pas' → logprob: -2.4073805809020996
    4. ' ' → logprob: -5.9073805809021
    5. 'ra' → logprob: -6.2823805809021
    6. ' que' → logprob: -6.2823805809021
    7. 'r' → logprob: -7.6573805809021
    8. '    ' → logprob: -7.7823805809021
    9. '       ' → logprob: -7.7823805809021
    10. '  ' → logprob: -9.157381057739258

Token 225: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023540806025266647
    2. '       ' → logprob: -4.52354097366333
    3. '    
' → logprob: -5.27354097366333
    4. '    ' → logprob: -5.89854097366333
    5. ':' → logprob: -7.02354097366333
    6. '
' → logprob: -7.27354097366333
    7. 'print' → logprob: -7.39854097366333
    8. '   ' → logprob: -7.64854097366333
    9. '.' → logprob: -8.398540496826172
    10. '     ' → logprob: -8.523540496826172

Token 226: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3760589361190796
    2. ' si' → logprob: -1.2510589361190796
    3. ' if' → logprob: -4.626059055328369
    4. '    ' → logprob: -5.251059055328369
    5. ' s' → logprob: -6.126059055328369
    6. 'si' → logprob: -6.251059055328369
    7. 'if' → logprob: -6.501059055328369
    8. ' lorsque' → logprob: -6.626059055328369
    9. ' lorsqu' → logprob: -6.876059055328369
    10. '   ' → logprob: -7.376059055328369

Token 227: ' l' (ID: 305)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.800256609916687
    2. ' (' → logprob: -1.050256609916687
    3. 'a' → logprob: -2.4252567291259766
    4. '   ' → logprob: -3.5502567291259766
    5. '(a' → logprob: -3.6752567291259766
    6. ' True' → logprob: -3.8002567291259766
    7. ' ' → logprob: -3.9252567291259766
    8. 'True' → logprob: -4.800256729125977
    9. ' ' → logprob: -6.050256729125977
    10. '    ' → logprob: -6.300256729125977

Token 228: ''ex' (ID: 23472)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2753690779209137
    2. '(a' → logprob: -2.025369167327881
    3. ' a' → logprob: -2.525369167327881
    4. ' (' → logprob: -4.275369167327881
    5. ' résultat' → logprob: -5.025369167327881
    6. '   ' → logprob: -5.525369167327881
    7. ''a' → logprob: -7.150369167327881
    8. ' resultat' → logprob: -7.525369167327881
    9. 'result' → logprob: -7.650369167327881
    10. ''utilisateur' → logprob: -8.150368690490723

Token 229: 'pression' (ID: 4521)
  Prédit: 'pression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pression' → logprob: -0.005647782236337662
    2. 'pr' → logprob: -5.380647659301758
    3. 'p' → logprob: -7.130647659301758
    4. 'écution' → logprob: -9.130647659301758
    5. ' pression' → logprob: -9.880647659301758
    6. 'ression' → logprob: -11.505647659301758
    7. 'pré' → logprob: -11.630647659301758
    8. 'PRESSION' → logprob: -12.130647659301758
    9. '#' → logprob: -12.505647659301758
    10. 'pressions' → logprob: -12.630647659301758

Token 230: ' ci' (ID: 7405)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9359578490257263
    2. '   ' → logprob: -2.185957908630371
    3. ' (' → logprob: -2.185957908630371
    4. ' a' → logprob: -2.310957908630371
    5. '(a' → logprob: -2.435957908630371
    6. 'a' → logprob: -2.810957908630371
    7. ' True' → logprob: -2.810957908630371
    8. 'est' → logprob: -3.310957908630371
    9. 'True' → logprob: -3.435957908630371
    10. ' ' → logprob: -6.185957908630371

Token 231: '-dessus' (ID: 74812)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.383484125137329
    2. 'dess' → logprob: -1.508484125137329
    3. '-dessus' → logprob: -1.633484125137329
    4. '-dessous' → logprob: -1.633484125137329
    5. '   ' → logprob: -2.383484125137329
    6. 's' → logprob: -5.13348388671875
    7. '    ' → logprob: -5.38348388671875
    8. '       ' → logprob: -5.50848388671875
    9. 'ess' → logprob: -5.88348388671875
    10. 'a' → logprob: -5.88348388671875

Token 232: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35410064458847046
    2. ':' → logprob: -1.9791007041931152
    3. ' est' → logprob: -1.9791007041931152
    4. 'print' → logprob: -4.979100704193115
    5. 'est' → logprob: -5.354100704193115
    6. ' print' → logprob: -5.729100704193115
    7. ':
' → logprob: -6.229100704193115
    8. '       ' → logprob: -6.354100704193115
    9. '    ' → logprob: -6.979100704193115
    10. ' is' → logprob: -8.229100227355957

Token 233: ' vraie' (ID: 105841)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08278760313987732
    2. 'True' → logprob: -2.83278751373291
    3. ' True' → logprob: -4.58278751373291
    4. ' vraie' → logprob: -4.70778751373291
    5. 'true' → logprob: -7.45778751373291
    6. 'V' → logprob: -8.08278751373291
    7. 'vé' → logprob: -8.83278751373291
    8. '   ' → logprob: -9.58278751373291
    9. '```' → logprob: -9.70778751373291
    10. ' vrai' → logprob: -10.20778751373291

Token 234: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10112020373344421
    2. ':' → logprob: -2.4761202335357666
    3. '       ' → logprob: -4.9761199951171875
    4. ':
' → logprob: -6.2261199951171875
    5. '
' → logprob: -6.7261199951171875
    6. '    
' → logprob: -7.3511199951171875
    7. 'print' → logprob: -7.6011199951171875
    8. ' :' → logprob: -8.351119995117188
    9. ',' → logprob: -8.601119995117188
    10. '    ' → logprob: -9.226119995117188

Token 235: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01173882745206356
    2. '    
' → logprob: -5.6367387771606445
    3. '       ' → logprob: -5.7617387771606445
    4. '    ' → logprob: -6.0117387771606445
    5. 'print' → logprob: -7.0117387771606445
    6. '   ' → logprob: -7.5117387771606445
    7. '
' → logprob: -7.8867387771606445
    8. ' print' → logprob: -8.636738777160645
    9. '     
' → logprob: -9.261738777160645
    10. '        
' → logprob: -9.761738777160645

Token 236: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.0035711526870728
    2. 'es' → logprob: -1.1285711526870728
    3. '   ' → logprob: -1.8785711526870728
    4. 'e' → logprob: -2.503571033477783
    5. 'est' → logprob: -3.753571033477783
    6. 'ont' → logprob: -4.003571033477783
    7. 'a' → logprob: -5.253571033477783
    8. '#' → logprob: -5.378571033477783
    9. 'ela' → logprob: -5.753571033477783
    10. ''' → logprob: -6.003571033477783

Token 237: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.1991383284330368
    2. 'à' → logprob: -2.0741384029388428
    3. '   ' → logprob: -3.3241384029388428
    4. ' à' → logprob: -5.324138164520264
    5. 'que' → logprob: -5.449138164520264
    6. '#' → logprob: -5.699138164520264
    7. '-' → logprob: -6.324138164520264
    8. ' que' → logprob: -7.074138164520264
    9. 'a' → logprob: -7.699138164520264
    10. '```' → logprob: -7.824138164520264

Token 238: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.06475619226694107
    2. '   ' → logprob: -3.689756155014038
    3. '-dire' → logprob: -4.189756393432617
    4. '-à' → logprob: -4.564756393432617
    5. 'd' → logprob: -6.189756393432617
    6. 'à' → logprob: -6.439756393432617
    7. '#' → logprob: -6.564756393432617
    8. 'part' → logprob: -6.814756393432617
    9. '```' → logprob: -6.939756393432617
    10. 'di' → logprob: -7.689756393432617

Token 239: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06436683237552643
    2. '       ' → logprob: -2.8143668174743652
    3. '    
' → logprob: -6.314366817474365
    4. '   ' → logprob: -9.064367294311523
    5. '
' → logprob: -9.189367294311523
    6. 'a' → logprob: -9.189367294311523
    7. '    ' → logprob: -9.814367294311523
    8. '        
' → logprob: -9.814367294311523
    9. 'print' → logprob: -9.939367294311523
    10. '	   ' → logprob: -10.939367294311523

Token 240: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2694914638996124
    2. ' a' → logprob: -1.64449143409729
    3. ' (' → logprob: -3.51949143409729
    4. '(a' → logprob: -4.769491672515869
    5. '   ' → logprob: -5.894491672515869
    6. ' ' → logprob: -7.269491672515869
    7. ' True' → logprob: -7.269491672515869
    8. 'True' → logprob: -7.394491672515869
    9. '(' → logprob: -9.144491195678711
    10. '  ' → logprob: -9.644491195678711

Token 241: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09532414376735687
    2. '-' → logprob: -3.0953240394592285
    3. ' <' → logprob: -3.2203240394592285
    4. ' ' → logprob: -5.9703240394592285
    5. '<' → logprob: -6.2203240394592285
    6. '   ' → logprob: -6.9703240394592285
    7. ' est' → logprob: -9.720324516296387
    8. '    ' → logprob: -10.095324516296387
    9. '  ' → logprob: -10.595324516296387
    10. 'est' → logprob: -10.720324516296387

Token 242: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4758024513721466
    2. ' (' → logprob: -0.9758024215698242
    3. '2' → logprob: -6.850802421569824
    4. ' ' → logprob: -7.350802421569824
    5. '   ' → logprob: -11.350802421569824
    6. '  ' → logprob: -11.975802421569824
    7. ' ' → logprob: -13.350802421569824
    8. '1' → logprob: -13.475802421569824
    9. '    ' → logprob: -13.600802421569824
    10. '((' → logprob: -15.600802421569824

Token 243: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01441276166588068
    2. ' (' → logprob: -4.264412879943848
    3. '2' → logprob: -8.389412879943848
    4. ' ' → logprob: -10.764412879943848
    5. '   ' → logprob: -15.264412879943848
    6. '  ' → logprob: -15.264412879943848
    7. ' ' → logprob: -15.639412879943848
    8. '((' → logprob: -16.51441192626953
    9. '```' → logprob: -16.51441192626953
    10. ',' → logprob: -17.13941192626953

Token 244: 'b' (ID: 65)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6210715174674988
    2. '*b' → logprob: -0.8710715174674988
    3. '*' → logprob: -3.1210715770721436
    4. 'b' → logprob: -11.121071815490723
    5. ' ' → logprob: -13.121071815490723
    6. ' ' → logprob: -13.871071815490723
    7. ' b' → logprob: -14.621071815490723
    8. '*a' → logprob: -15.371071815490723
    9. '   ' → logprob: -16.246070861816406
    10. '*(' → logprob: -16.746070861816406

Token 245: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3063689172267914
    2. '<' → logprob: -1.8063689470291138
    3. '   ' → logprob: -2.431368827819824
    4. ')' → logprob: -5.181368827819824
    5. ' est' → logprob: -5.306368827819824
    6. 'est' → logprob: -7.806368827819824
    7. ' ' → logprob: -8.431368827819824
    8. ' )' → logprob: -8.681368827819824
    9. ' is' → logprob: -9.681368827819824
    10. '  ' → logprob: -9.806368827819824

Token 246: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.03271946683526039
    2. 'neg' → logprob: -4.157719612121582
    3. 'n' → logprob: -5.282719612121582
    4. 'strict' → logprob: -5.282719612121582
    5. 'inf' → logprob: -5.657719612121582
    6. ' inférieur' → logprob: -7.157719612121582
    7. ' negatif' → logprob: -7.407719612121582
    8. ' inf' → logprob: -7.407719612121582
    9. ' strict' → logprob: -8.032719612121582
    10. 'negative' → logprob: -8.657719612121582

Token 247: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.38862600922584534
    2. 'ative' → logprob: -1.138625979423523
    3. '   ' → logprob: -7.1386260986328125
    4. '#' → logprob: -8.263626098632812
    5. 'a' → logprob: -9.263626098632812
    6. '<' → logprob: -9.388626098632812
    7. '
' → logprob: -9.763626098632812
    8. 'e' → logprob: -10.013626098632812
    9. '</' → logprob: -10.013626098632812
    10. 'ale' → logprob: -10.138626098632812

Token 248: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6378283500671387
    2. '   ' → logprob: -0.7628283500671387
    3. ':
' → logprob: -5.387828350067139
    4. '       ' → logprob: -7.887828350067139
    5. 'print' → logprob: -9.637828826904297
    6. ' :' → logprob: -9.762828826904297
    7. '    
' → logprob: -10.137828826904297
    8. '):' → logprob: -10.387828826904297
    9. ')' → logprob: -11.512828826904297
    10. '    ' → logprob: -11.637828826904297

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024936108384281397
    2. 'print' → logprob: -6.752493381500244
    3. '    
' → logprob: -7.627493381500244
    4. '
' → logprob: -8.252493858337402
    5. '       ' → logprob: -8.252493858337402
    6. '   ' → logprob: -8.377493858337402
    7. ' print' → logprob: -10.002493858337402
    8. '	print' → logprob: -11.502493858337402
    9. '    ' → logprob: -11.627493858337402
    10. '        
' → logprob: -12.252493858337402

Token 250: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020920787006616592
    2. 'print' → logprob: -3.895920753479004
    3. ' print' → logprob: -8.520920753479004
    4. '   ' → logprob: -9.395920753479004
    5. '    
' → logprob: -9.645920753479004
    6. '
' → logprob: -11.645920753479004
    7. '       ' → logprob: -11.895920753479004
    8. '	print' → logprob: -12.270920753479004
    9. '    ' → logprob: -12.395920753479004
    10. '   ' → logprob: -13.270920753479004

Token 251: ' Dans' (ID: 22082)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15648749470710754
    2. '   ' → logprob: -2.406487464904785
    3. ' print' → logprob: -2.906487464904785
    4. ' ' → logprob: -11.281487464904785
    5. '	print' → logprob: -11.281487464904785
    6. '    ' → logprob: -11.406487464904785
    7. '  ' → logprob: -11.906487464904785
    8. '   ' → logprob: -12.031487464904785
    9. '    
' → logprob: -13.031487464904785
    10. ' ' → logprob: -13.406487464904785

Token 252: ' ce' (ID: 2357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1841413676738739
    2. ' ce' → logprob: -2.3091413974761963
    3. 'a' → logprob: -3.8091413974761963
    4. 'ce' → logprob: -3.9341413974761963
    5. '   ' → logprob: -4.059141159057617
    6. 'this' → logprob: -6.059141159057617
    7. 'la' → logprob: -6.559141159057617
    8. 'c' → logprob: -6.809141159057617
    9. '#' → logprob: -6.934141159057617
    10. 'le' → logprob: -7.059141159057617

Token 253: ' cas' (ID: 2108)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02591344341635704
    2. '   ' → logprob: -4.025913238525391
    3. 'cas' → logprob: -5.650913238525391
    4. 'case' → logprob: -5.900913238525391
    5. ' cas' → logprob: -7.275913238525391
    6. 'if' → logprob: -8.65091323852539
    7. ' print' → logprob: -8.65091323852539
    8. ':' → logprob: -8.77591323852539
    9. '
' → logprob: -10.15091323852539
    10. '    
' → logprob: -10.15091323852539

Token 254: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009983554482460022
    2. 'print' → logprob: -5.134983539581299
    3. ':' → logprob: -6.009983539581299
    4. ' print' → logprob: -7.009983539581299
    5. '
' → logprob: -8.259984016418457
    6. ',' → logprob: -8.634984016418457
    7. '       ' → logprob: -9.884984016418457
    8. ':
' → logprob: -9.884984016418457
    9. '   ' → logprob: -9.884984016418457
    10. '    
' → logprob: -10.259984016418457

Token 255: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07060015201568604
    2. '   ' → logprob: -3.3206000328063965
    3. ' print' → logprob: -3.4456000328063965
    4. '
' → logprob: -9.320600509643555
    5. '    
' → logprob: -10.570600509643555
    6. '    ' → logprob: -11.695600509643555
    7. '	print' → logprob: -11.820600509643555
    8. ' ' → logprob: -12.195600509643555
    9. '  ' → logprob: -12.570600509643555
    10. '#' → logprob: -12.695600509643555

Token 256: ' ' (ID: 220)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.08463181555271149
    2. '"' → logprob: -2.58463191986084
    3. '(' → logprob: -5.58463191986084
    4. 'print' → logprob: -7.08463191986084
    5. '(-' → logprob: -8.33463191986084
    6. '"La' → logprob: -8.33463191986084
    7. '('' → logprob: -8.95963191986084
    8. '   ' → logprob: -9.20963191986084
    9. '"a' → logprob: -9.20963191986084
    10. '("-' → logprob: -9.58463191986084

Token 257: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07101429998874664
    2. '"a' → logprob: -2.821014404296875
    3. '"-' → logprob: -5.696014404296875
    4. '"La' → logprob: -6.821014404296875
    5. 'a' → logprob: -7.196014404296875
    6. '("' → logprob: -7.196014404296875
    7. '-' → logprob: -7.446014404296875
    8. 'abs' → logprob: -7.446014404296875
    9. '0' → logprob: -7.696014404296875
    10. ' "' → logprob: -8.321014404296875

Token 258: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11110202968120575
    2. 'print' → logprob: -2.8611021041870117
    3. '
' → logprob: -3.1111021041870117
    4. '    
' → logprob: -5.736102104187012
    5. ')
' → logprob: -9.986102104187012
    6. ')' → logprob: -10.361102104187012
    7. ' print' → logprob: -10.486102104187012
    8. '```' → logprob: -11.111102104187012
    9. '
' → logprob: -11.611102104187012
    10. '       ' → logprob: -11.736102104187012

Token 259: ' utilisant' (ID: 92474)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004484119825065136
    2. ' print' → logprob: -6.629484176635742
    3. '```' → logprob: -7.254484176635742
    4. 'else' → logprob: -7.379484176635742
    5. 'place' → logprob: -8.504484176635742
    6. 'console' → logprob: -8.504484176635742
    7. 'pr' → logprob: -8.504484176635742
    8. 'python' → logprob: -9.254484176635742
    9. '   ' → logprob: -9.379484176635742
    10. 'rem' → logprob: -9.629484176635742

Token 260: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00033581978641450405
    2. ' print' → logprob: -8.000335693359375
    3. 'prin' → logprob: -15.125335693359375
    4. 'pr' → logprob: -16.375335693359375
    5. '```' → logprob: -17.000335693359375
    6. '   ' → logprob: -18.750335693359375
    7. '`' → logprob: -19.625335693359375
    8. ' ' → logprob: -19.750335693359375
    9. 'pri' → logprob: -20.125335693359375
    10. '(print' → logprob: -20.375335693359375

Token 261: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.173704271830502e-06
    2. ' print' → logprob: -12.75000286102295
    3. 'prin' → logprob: -15.62500286102295
    4. '```' → logprob: -16.125003814697266
    5. 'pr' → logprob: -17.625003814697266
    6. '
' → logprob: -18.750003814697266
    7. '`' → logprob: -20.000003814697266
    8. 'p' → logprob: -20.750003814697266
    9. 'python' → logprob: -20.875003814697266
    10. '``' → logprob: -21.000003814697266

Token 262: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015028368216007948
    2. ' print' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.501502990722656
    4. '```' → logprob: -15.626502990722656
    5. 'prin' → logprob: -16.376502990722656
    6. '`' → logprob: -17.376502990722656
    7. 'pr' → logprob: -17.751502990722656
    8. '(print' → logprob: -18.001502990722656
    9. '	print' → logprob: -18.126502990722656
    10. ' ' → logprob: -18.501502990722656

Token 263: '().
' (ID: 58434)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22780878841876984
    2. '   ' → logprob: -1.8528088331222534
    3. '()
' → logprob: -3.227808713912964
    4. '(' → logprob: -5.227808952331543
    5. '0' → logprob: -7.227808952331543
    6. 'print' → logprob: -7.977808952331543
    7. '       ' → logprob: -8.602808952331543
    8. ')' → logprob: -8.602808952331543
    9. '("' → logprob: -8.852808952331543
    10. '())' → logprob: -9.352808952331543

Token 264: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007709132041782141
    2. 'print' → logprob: -7.8757710456848145
    3. '       ' → logprob: -8.000770568847656
    4. ' print' → logprob: -11.000770568847656
    5. ':' → logprob: -11.375770568847656
    6. '```' → logprob: -11.375770568847656
    7. '   ' → logprob: -11.875770568847656
    8. '    
' → logprob: -12.000770568847656
    9. '
' → logprob: -13.250770568847656
    10. ':
' → logprob: -15.750770568847656

Token 265: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01885829120874405
    2. 'print' (adapté à ' print') → logprob: -4.018858432769775
    3. ' print' → logprob: -7.268858432769775
    4. '   ' → logprob: -12.143857955932617
    5. '       ' → logprob: -12.643857955932617
    6. '```' → logprob: -13.643857955932617
    7. '	print' → logprob: -14.393857955932617
    8. '    
' → logprob: -14.768857955932617
    9. '  ' → logprob: -15.768857955932617
    10. ' ' → logprob: -16.143857955932617

Token 266: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.749814019713085e-06
    2. '0' → logprob: -12.625006675720215
    3. '()' → logprob: -13.000006675720215
    4. ' (' → logprob: -13.750006675720215
    5. '(
' → logprob: -17.25000762939453
    6. '(

' → logprob: -19.37500762939453
    7. '((' → logprob: -19.50000762939453
    8. ' ' → logprob: -19.62500762939453
    9. '('' → logprob: -19.75000762939453
    10. '("' → logprob: -20.12500762939453

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. ')' → logprob: -18.125
    4. '   ' → logprob: -20.5
    5. '"' → logprob: -21.375
    6. '０' → logprob: -23.0
    7. '۰' → logprob: -23.125
    8. '(' → logprob: -23.625
    9. ''' → logprob: -24.125
    10. '```' → logprob: -24.25

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -15.875008583068848
    4. '))' → logprob: -16.37500762939453
    5. '())' → logprob: -18.00000762939453
    6. '')' → logprob: -18.37500762939453
    7. ')#' → logprob: -18.62500762939453
    8. ')

' → logprob: -19.12500762939453
    9. '")' → logprob: -19.50000762939453
    10. ')
' → logprob: -19.62500762939453

Token 269: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.763666947837919e-05
    2. ' else' → logprob: -10.00004768371582
    3. 'elif' → logprob: -13.50004768371582
    4. '```' → logprob: -15.12504768371582
    5. 'elser' → logprob: -16.25004768371582
    6. '    
' → logprob: -16.25004768371582
    7. 'elses' → logprob: -16.50004768371582
    8. '}else' → logprob: -16.50004768371582
    9. 'e' → logprob: -16.87504768371582
    10. ')' → logprob: -17.25004768371582

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011346184648573399
    2. ':
' → logprob: -4.511346340179443
    3. '   ' → logprob: -8.136345863342285
    4. ' :' → logprob: -12.511345863342285
    5. ' :
' → logprob: -13.886345863342285
    6. 'print' → logprob: -14.636345863342285
    7. '):' → logprob: -15.386345863342285
    8. '():' → logprob: -15.636345863342285
    9. ':

' → logprob: -16.0113468170166
    10. '):
' → logprob: -17.0113468170166

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014286551624536514
    2. 'print' → logprob: -4.264286518096924
    3. ' print' → logprob: -9.014286994934082
    4. '   ' → logprob: -14.014286994934082
    5. '	print' → logprob: -14.639286994934082
    6. '    
' → logprob: -16.139286041259766
    7. '(print' → logprob: -16.639286041259766
    8. '       ' → logprob: -17.264286041259766
    9. '```' → logprob: -17.389286041259766
    10. '   ' → logprob: -18.264286041259766

Token 272: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31883400678634644
    2. '   ' → logprob: -1.3188340663909912
    3. ' print' → logprob: -5.193833827972412
    4. '	print' → logprob: -13.06883430480957
    5. '    
' → logprob: -14.06883430480957
    6. '   ' → logprob: -14.06883430480957
    7. '```' → logprob: -14.81883430480957
    8. '    ' → logprob: -15.19383430480957
    9. '       ' → logprob: -15.31883430480957
    10. '
' → logprob: -15.31883430480957

Token 273: ' Ce' (ID: 14228)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03864770010113716
    2. '   ' → logprob: -3.2886476516723633
    3. ' print' → logprob: -7.413647651672363
    4. '	print' → logprob: -14.663647651672363
    5. '   ' → logprob: -14.663647651672363
    6. '```' → logprob: -14.663647651672363
    7. '    
' → logprob: -15.163647651672363
    8. 'prin' → logprob: -15.163647651672363
    9. '    ' → logprob: -15.538647651672363
    10. ' ' → logprob: -15.538647651672363

Token 274: ' bloc' (ID: 51218)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9547226428985596
    2. 'print' → logprob: -1.0797226428985596
    3. ':' → logprob: -1.4547226428985596
    4. ' print' → logprob: -3.2047226428985596
    5. '    ' → logprob: -7.7047224044799805
    6. ':
' → logprob: -7.7047224044799805
    7. '{' → logprob: -9.07972240447998
    8. '  ' → logprob: -9.32972240447998
    9. '(print' → logprob: -9.95472240447998
    10. '       ' → logprob: -10.07972240447998

Token 275: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31440305709838867
    2. '   ' → logprob: -1.3144030570983887
    3. ' :' → logprob: -7.564403057098389
    4. ':
' → logprob: -7.689403057098389
    5. 'print' → logprob: -9.814403533935547
    6. ' de' → logprob: -9.939403533935547
    7. '    ' → logprob: -10.814403533935547
    8. '       ' → logprob: -11.189403533935547
    9. ' print' → logprob: -11.564403533935547
    10. '  ' → logprob: -11.814403533935547

Token 276: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.02978196181356907
    2. ' code' → logprob: -3.5297820568084717
    3. 'cod' → logprob: -11.15478229522705
    4. 'print' → logprob: -11.27978229522705
    5. '_code' → logprob: -14.15478229522705
    6. '代码' → logprob: -14.15478229522705
    7. '	code' → logprob: -14.77978229522705
    8. '   ' → logprob: -14.77978229522705
    9. '  ' → logprob: -14.90478229522705
    10. ' код' → logprob: -15.02978229522705

Token 277: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030564432963728905
    2. ':' → logprob: -3.655564546585083
    3. 'print' → logprob: -5.655564308166504
    4. ' print' → logprob: -8.030564308166504
    5. '       ' → logprob: -8.405564308166504
    6. ':
' → logprob: -9.405564308166504
    7. '    ' → logprob: -9.905564308166504
    8. '   ' → logprob: -10.280564308166504
    9. '    
' → logprob: -11.030564308166504
    10. ' :' → logprob: -11.905564308166504

Token 278: ' sera' (ID: 15511)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036535147577524185
    2. '   ' → logprob: -3.4115352630615234
    3. ':
' → logprob: -5.911535263061523
    4. 'print' → logprob: -9.036535263061523
    5. ' :' → logprob: -10.161535263061523
    6. ' print' → logprob: -11.661535263061523
    7. '       ' → logprob: -11.786535263061523
    8. '    ' → logprob: -13.911535263061523
    9. ' :
' → logprob: -14.161535263061523
    10. ':
' → logprob: -15.286535263061523

Token 279: ' exécut' (ID: 165350)
  Prédit: ' exécut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exécut' → logprob: -0.12326014786958694
    2. 'execut' → logprob: -2.623260259628296
    3. '   ' → logprob: -3.873260259628296
    4. 'ex' → logprob: -4.123260021209717
    5. ' execut' → logprob: -5.623260021209717
    6. ' executed' → logprob: -6.498260021209717
    7. '    ' → logprob: -6.998260021209717
    8. 'exec' → logprob: -8.998260498046875
    9. '  ' → logprob: -8.998260498046875
    10. 'execute' → logprob: -9.998260498046875

Token 280: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.07286588102579117
    2. 'u' → logprob: -3.3228659629821777
    3. 'ut' → logprob: -4.072865962982178
    4. 'ué' → logprob: -4.072865962982178
    5. '   ' → logprob: -10.19786548614502
    6. 'uto' → logprob: -11.07286548614502
    7. 'ré' → logprob: -11.44786548614502
    8. 'uted' → logprob: -11.44786548614502
    9. 'ute' → logprob: -11.82286548614502
    10. 't' → logprob: -11.94786548614502

Token 281: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018463507294654846
    2. ':' → logprob: -4.018463611602783
    3. 'print' → logprob: -8.518463134765625
    4. '       ' → logprob: -9.768463134765625
    5. ':
' → logprob: -10.143463134765625
    6. '    ' → logprob: -12.018463134765625
    7. ' print' → logprob: -12.518463134765625
    8. '(print' → logprob: -13.268463134765625
    9. '  ' → logprob: -13.643463134765625
    10. '   ' → logprob: -13.768463134765625

Token 282: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4440752863883972
    2. '(a' → logprob: -1.569075345993042
    3. 'a' → logprob: -2.819075345993042
    4. 'print' → logprob: -2.819075345993042
    5. ' (' → logprob: -4.069075107574463
    6. ' a' → logprob: -5.319075107574463
    7. '(' → logprob: -5.694075107574463
    8. 'not' → logprob: -5.944075107574463
    9. ' print' → logprob: -7.069075107574463
    10. 'la' → logprob: -7.319075107574463

Token 283: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.09973259270191193
    2. ' condition' → logprob: -3.0997326374053955
    3. 'expression' → logprob: -3.4747326374053955
    4. '(a' → logprob: -4.474732398986816
    5. '   ' → logprob: -5.849732398986816
    6. '(condition' → logprob: -7.099732398986816
    7. ' expression' → logprob: -7.224732398986816
    8. 'val' → logprob: -7.224732398986816
    9. ' (' → logprob: -7.224732398986816
    10. 'a' → logprob: -7.599732398986816

Token 284: ' du' (ID: 1462)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8929696679115295
    2. '(a' → logprob: -1.0179696083068848
    3. '   ' → logprob: -2.3929696083068848
    4. ' est' → logprob: -2.6429696083068848
    5. ' not' → logprob: -3.7679696083068848
    6. ' n' → logprob: -4.767969608306885
    7. 'not' → logprob: -5.392969608306885
    8. 'n' → logprob: -5.517969608306885
    9. 'a' → logprob: -5.517969608306885
    10. ' a' → logprob: -5.642969608306885

Token 285: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004082435742020607
    2. ' if' → logprob: -5.504082202911377
    3. 'si' → logprob: -12.504082679748535
    4. '```' → logprob: -15.879082679748535
    5. 'Si' → logprob: -16.87908172607422
    6. ' si' → logprob: -17.00408172607422
    7. 'elif' → logprob: -17.62908172607422
    8. 'If' → logprob: -17.62908172607422
    9. '(if' → logprob: -17.62908172607422
    10. 'else' → logprob: -17.75408172607422

Token 286: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6446913480758667
    2. '(a' → logprob: -1.6446913480758667
    3. 'n' → logprob: -2.0196914672851562
    4. ' est' → logprob: -2.2696914672851562
    5. 'est' → logprob: -3.8946914672851562
    6. ' (' → logprob: -4.769691467285156
    7. '   ' → logprob: -4.894691467285156
    8. 'a' → logprob: -5.019691467285156
    9. ' a' → logprob: -7.019691467285156
    10. '(n' → logprob: -7.019691467285156

Token 287: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09487494826316833
    2. '(a' → logprob: -2.594874858856201
    3. ' a' → logprob: -5.219874858856201
    4. ' (' → logprob: -5.344874858856201
    5. 'not' → logprob: -6.094874858856201
    6. ' not' → logprob: -6.344874858856201
    7. ')' → logprob: -6.844874858856201
    8. '   ' → logprob: -7.844874858856201
    9. ')a' → logprob: -9.84487533569336
    10. 'else' → logprob: -10.71987533569336

Token 288: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4287787079811096
    2. '-' → logprob: -1.0537786483764648
    3. ' ' → logprob: -10.178778648376465
    4. '   ' → logprob: -10.678778648376465
    5. '-(' → logprob: -12.553778648376465
    6. ' ' → logprob: -12.803778648376465
    7. 'a' → logprob: -13.178778648376465
    8. ',' → logprob: -14.053778648376465
    9. ' -
' → logprob: -14.053778648376465
    10. '  ' → logprob: -14.178778648376465

Token 289: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01450253278017044
    2. ' (' → logprob: -4.26450252532959
    3. '2' → logprob: -8.01450252532959
    4. ' ' → logprob: -12.13950252532959
    5. '   ' → logprob: -13.01450252532959
    6. '  ' → logprob: -15.13950252532959
    7. ')' → logprob: -16.139503479003906
    8. ' ' → logprob: -16.514503479003906
    9. '    ' → logprob: -17.014503479003906
    10. '1' → logprob: -17.389503479003906

Token 290: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00030614540446549654
    2. ' (' → logprob: -8.375306129455566
    3. '2' → logprob: -9.500306129455566
    4. '   ' → logprob: -14.750306129455566
    5. ' ' → logprob: -15.250306129455566
    6. '  ' → logprob: -16.750307083129883
    7. '(
' → logprob: -17.500307083129883
    8. ')' → logprob: -18.000307083129883
    9. '    ' → logprob: -19.000307083129883
    10. '((' → logprob: -19.000307083129883

Token 291: 'b' (ID: 65)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.669453501701355
    2. ' *' → logprob: -1.294453501701355
    3. '*b' → logprob: -1.544453501701355
    4. 'b' → logprob: -7.5444536209106445
    5. ' ' → logprob: -13.044453620910645
    6. ' ' → logprob: -13.919453620910645
    7. '*(' → logprob: -14.419453620910645
    8. ' b' → logprob: -14.419453620910645
    9. '**' → logprob: -14.794453620910645
    10. '*a' → logprob: -14.919453620910645

Token 292: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6929502487182617
    2. ')' → logprob: -1.0679502487182617
    3. ' >=' → logprob: -1.9429502487182617
    4. ')>=' → logprob: -4.567950248718262
    5. '<' → logprob: -6.567950248718262
    6. ' <' → logprob: -7.192950248718262
    7. ')<' → logprob: -9.067950248718262
    8. '   ' → logprob: -9.567950248718262
    9. ' )' → logprob: -9.817950248718262
    10. '>' → logprob: -9.942950248718262

Token 293: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036140859592705965
    2. ' ' → logprob: -5.6286139488220215
    3. '   ' → logprob: -11.62861442565918
    4. '=' → logprob: -13.00361442565918
    5. ')' → logprob: -13.12861442565918
    6. '  ' → logprob: -15.37861442565918
    7. '2' → logprob: -15.37861442565918
    8. '1' → logprob: -16.00361442565918
    9. ' ' → logprob: -16.44111442565918
    10. ':' → logprob: -17.19111442565918

Token 294: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011391390580683947
    2. ' ' → logprob: -9.125113487243652
    3. '   ' → logprob: -13.000113487243652
    4. ')' → logprob: -13.000113487243652
    5. '=' → logprob: -15.875113487243652
    6. '2' → logprob: -16.75011444091797
    7. '  ' → logprob: -16.87511444091797
    8. '1' → logprob: -17.00011444091797
    9. ' ' → logprob: -18.06261444091797
    10. '```' → logprob: -18.06261444091797

Token 295: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011044946731999516
    2. '):' → logprob: -6.876104354858398
    3. ':)' → logprob: -10.376104354858398
    4. ' )' → logprob: -11.001104354858398
    5. '):
' → logprob: -11.876104354858398
    6. '))' → logprob: -12.251104354858398
    7. ':' → logprob: -12.626104354858398
    8. '):

' → logprob: -12.876104354858398
    9. '   ' → logprob: -13.251104354858398
    10. 'a' → logprob: -13.501104354858398

Token 296: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4473215341567993
    2. ' est' → logprob: -1.8223215341567993
    3. 'est' → logprob: -1.8223215341567993
    4. '   ' → logprob: -4.19732141494751
    5. 'n' → logprob: -4.44732141494751
    6. ')' → logprob: -4.94732141494751
    7. ' n' → logprob: -6.19732141494751
    8. ' is' → logprob: -7.44732141494751
    9. 'print' → logprob: -8.322321891784668
    10. ':
' → logprob: -8.572321891784668

Token 297: ' fa' (ID: 2229)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02527341991662979
    2. 'fa' → logprob: -4.400273323059082
    3. 'f' → logprob: -4.525273323059082
    4. 'F' → logprob: -7.150273323059082
    5. 'false' → logprob: -7.400273323059082
    6. ' False' → logprob: -8.150273323059082
    7. 'v' → logprob: -9.400273323059082
    8. 'pas' → logprob: -10.775273323059082
    9. 'faite' → logprob: -10.775273323059082
    10. 'True' → logprob: -11.025273323059082

Token 298: 'usse' (ID: 32419)
  Prédit: 'ible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -1.078057050704956
    2. 'ite' → logprob: -1.578057050704956
    3. 'it' → logprob: -1.703057050704956
    4. 'usse' → logprob: -1.828057050704956
    5. 'is' → logprob: -3.578057050704956
    6. 'ute' → logprob: -3.953057050704956
    7. 'isible' → logprob: -4.703057289123535
    8. 'us' → logprob: -4.953057289123535
    9. 'ut' → logprob: -5.078057289123535
    10. 's' → logprob: -5.078057289123535

Token 299: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16127167642116547
    2. '   ' → logprob: -1.9112716913223267
    3. ':
' → logprob: -6.911271572113037
    4. 'print' → logprob: -10.411272048950195
    5. '       ' → logprob: -11.911272048950195
    6. ' :' → logprob: -12.286272048950195
    7. '):' → logprob: -12.911272048950195
    8. ' print' → logprob: -13.536272048950195
    9. '.' → logprob: -13.786272048950195
    10. ')' → logprob: -14.036272048950195

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.794061770662665e-05
    2. 'print' → logprob: -9.25009822845459
    3. ' print' → logprob: -13.50009822845459
    4. '```' → logprob: -15.75009822845459
    5. '       ' → logprob: -16.000097274780273
    6. '   ' → logprob: -16.250097274780273
    7. '    ' → logprob: -18.375097274780273
    8. '	print' → logprob: -18.375097274780273
    9. '    
' → logprob: -19.500097274780273
    10. '  ' → logprob: -19.625097274780273

Token 301: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06264208257198334
    2. 'print' → logprob: -2.8126420974731445
    3. ' print' → logprob: -7.3126420974731445
    4. '   ' → logprob: -12.687642097473145
    5. '    ' → logprob: -13.437642097473145
    6. '       ' → logprob: -13.687642097473145
    7. '```' → logprob: -14.562642097473145
    8. '	print' → logprob: -15.312642097473145
    9. '   ' → logprob: -15.437642097473145
    10. '  ' → logprob: -15.687642097473145

Token 302: ' Cela' (ID: 44403)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014689151430502534
    2. ' print' → logprob: -7.001469135284424
    3. '   ' → logprob: -7.501469135284424
    4. '#' → logprob: -12.376468658447266
    5. '	print' → logprob: -15.626468658447266
    6. '#print' → logprob: -16.376468658447266
    7. '  ' → logprob: -16.376468658447266
    8. ' ' → logprob: -16.501468658447266
    9. '```' → logprob: -16.501468658447266
    10. 'pass' → logprob: -16.626468658447266

Token 303: ' signifie' (ID: 81149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06549415737390518
    2. 'print' → logprob: -2.8154940605163574
    3. ' print' → logprob: -5.690494060516357
    4. '    ' → logprob: -9.940494537353516
    5. '   ' → logprob: -10.065494537353516
    6. ' signifie' → logprob: -11.190494537353516
    7. '  ' → logprob: -11.315494537353516
    8. '    
' → logprob: -12.065494537353516
    9. '       ' → logprob: -12.565494537353516
    10. '	print' → logprob: -12.690494537353516

Token 304: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.7292167184641585e-05
    2. ' que' → logprob: -10.375057220458984
    3. '  ' → logprob: -11.500057220458984
    4. '    ' → logprob: -11.750057220458984
    5. 'print' → logprob: -12.250057220458984
    6. '    
' → logprob: -14.000057220458984
    7. ' ' → logprob: -14.250057220458984
    8. '   ' → logprob: -14.250057220458984
    9. 'que' → logprob: -15.375057220458984
    10. '       ' → logprob: -15.375057220458984

Token 305: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2542163133621216
    2. 'print' → logprob: -1.5042163133621216
    3. ' print' → logprob: -6.129216194152832
    4. '#' → logprob: -9.504216194152832
    5. 'a' → logprob: -12.004216194152832
    6. '    ' → logprob: -12.129216194152832
    7. '   ' → logprob: -12.129216194152832
    8. 'la' → logprob: -12.754216194152832
    9. '	print' → logprob: -13.129216194152832
    10. '  ' → logprob: -13.379216194152832

Token 306: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.448408305644989
    2. '-' → logprob: -1.0734083652496338
    3. ' >=' → logprob: -4.573408126831055
    4. '   ' → logprob: -5.198408126831055
    5. '>=' → logprob: -5.823408126831055
    6. ' ' → logprob: -7.823408126831055
    7. 'print' → logprob: -8.823408126831055
    8. '  ' → logprob: -10.698408126831055
    9. ' print' → logprob: -10.948408126831055
    10. ',' → logprob: -10.948408126831055

Token 307: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0058825756423175335
    2. ' (' → logprob: -5.505882740020752
    3. '2' → logprob: -6.380882740020752
    4. ' ' → logprob: -9.255882263183594
    5. '   ' → logprob: -11.255882263183594
    6. '  ' → logprob: -14.880882263183594
    7. '    ' → logprob: -16.630882263183594
    8. ' ' → logprob: -17.505882263183594
    9. 'print' → logprob: -18.505882263183594
    10. '     ' → logprob: -18.880882263183594

Token 308: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001450187264708802
    2. '2' → logprob: -9.000144958496094
    3. ' (' → logprob: -10.750144958496094
    4. ' ' → logprob: -15.875144958496094
    5. '   ' → logprob: -17.375144958496094
    6. 'print' → logprob: -18.000144958496094
    7. '  ' → logprob: -18.750144958496094
    8. '```' → logprob: -19.500144958496094
    9. '
' → logprob: -20.125144958496094
    10. ',' → logprob: -20.500144958496094

Token 309: 'b' (ID: 65)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.1415008008480072
    2. 'b' → logprob: -2.64150071144104
    3. '*' → logprob: -2.89150071144104
    4. ' *' → logprob: -5.266500949859619
    5. ' b' → logprob: -10.266500473022461
    6. ' ' → logprob: -13.891500473022461
    7. ' ' → logprob: -14.641500473022461
    8. '	b' → logprob: -15.766500473022461
    9. '*a' → logprob: -16.14150047302246
    10. '_b' → logprob: -16.76650047302246

Token 310: ' est' (ID: 893)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.15008115768432617
    2. ' >=' → logprob: -2.150081157684326
    3. ')' → logprob: -4.275081157684326
    4. ' est' → logprob: -5.525081157684326
    5. '   ' → logprob: -5.650081157684326
    6. ')>=' → logprob: -7.775081157684326
    7. ' is' → logprob: -8.275081634521484
    8. '>' → logprob: -8.400081634521484
    9. '≥' → logprob: -9.150081634521484
    10. 'est' → logprob: -9.275081634521484

Token 311: ' supérieur' (ID: 98491)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -1.160483956336975
    2. ' supérieur' → logprob: -1.160483956336975
    3. 'posit' → logprob: -1.410483956336975
    4. ' positif' → logprob: -2.6604838371276855
    5. '>=' → logprob: -4.0354838371276855
    6. '0' → logprob: -4.0354838371276855
    7. 'égal' → logprob: -4.1604838371276855
    8. 'super' → logprob: -6.5354838371276855
    9. 'greater' → logprob: -6.5354838371276855
    10. ' >=' → logprob: -6.9104838371276855

Token 312: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.2779233157634735
    2. ' ou' → logprob: -1.527923345565796
    3. '   ' → logprob: -5.027923107147217
    4. '=' → logprob: -5.027923107147217
    5. 'au' → logprob: -5.402923107147217
    6. ')' → logprob: -6.527923107147217
    7. '  ' → logprob: -6.777923107147217
    8. '    ' → logprob: -7.277923107147217
    9. ' or' → logprob: -7.527923107147217
    10. '```' → logprob: -7.527923107147217

Token 313: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.17207716405391693
    2. 'ou' → logprob: -1.9220771789550781
    3. 'ég' → logprob: -5.047077178955078
    4. '=' → logprob: -5.297077178955078
    5. ' égal' → logprob: -9.422077178955078
    6. 'égalité' → logprob: -9.547077178955078
    7. 'egal' → logprob: -9.672077178955078
    8. 'é' → logprob: -9.797077178955078
    9. 'ug' → logprob: -11.297077178955078
    10. '0' → logprob: -11.672077178955078

Token 314: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.28520408272743225
    2. '0' → logprob: -1.6602040529251099
    3. ' à' → logprob: -2.9102041721343994
    4. '   ' → logprob: -6.28520393371582
    5. 'a' → logprob: -6.78520393371582
    6. ''à' → logprob: -8.53520393371582
    7. ' ' → logprob: -8.66020393371582
    8. '(' → logprob: -9.28520393371582
    9. ')' → logprob: -10.16020393371582
    10. 'À' → logprob: -10.41020393371582

Token 315: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -19.000139236450195
    4. 'zero' → logprob: -19.250139236450195
    5. '  ' → logprob: -19.625139236450195
    6. 'a' → logprob: -19.750139236450195
    7. ' ' → logprob: -20.375139236450195
    8. '1' → logprob: -20.625139236450195
    9. '2' → logprob: -20.875139236450195
    10. '```' → logprob: -21.000139236450195

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. 'a' → logprob: -18.0
    4. 'zero' → logprob: -20.25
    5. '   ' → logprob: -21.75
    6. 'b' → logprob: -21.875
    7. '1' → logprob: -22.0
    8. '  ' → logprob: -22.375
    9. '```' → logprob: -22.375
    10. '۰' → logprob: -22.875

Token 317: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020976837258785963
    2. 'print' → logprob: -6.7520976066589355
    3. ':' → logprob: -7.0020976066589355
    4. ' print' → logprob: -11.752098083496094
    5. ':
' → logprob: -12.252098083496094
    6. ')' → logprob: -13.627098083496094
    7. '       ' → logprob: -13.752098083496094
    8. '):' → logprob: -14.377098083496094
    9. '   ' → logprob: -14.752098083496094
    10. '  ' → logprob: -15.877098083496094

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02328508161008358
    2. 'print' → logprob: -3.773285150527954
    3. ' print' → logprob: -10.148284912109375
    4. '	print' → logprob: -15.773284912109375
    5. '```' → logprob: -15.773284912109375
    6. '       ' → logprob: -15.898284912109375
    7. '   ' → logprob: -16.273284912109375
    8. '  ' → logprob: -18.398284912109375
    9. '    ' → logprob: -18.398284912109375
    10. 'Print' → logprob: -18.898284912109375

Token 319: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04875984042882919
    2. '   ' → logprob: -3.048759937286377
    3. ' print' → logprob: -8.673759460449219
    4. '```' → logprob: -14.298759460449219
    5. '	print' → logprob: -14.798759460449219
    6. '       ' → logprob: -15.923759460449219
    7. '  ' → logprob: -16.79875946044922
    8. '   ' → logprob: -16.92375946044922
    9. '    ' → logprob: -17.04875946044922
    10. 'Print' → logprob: -17.29875946044922

Token 320: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003023345780093223
    2. '   ' → logprob: -8.1253023147583
    3. ' print' → logprob: -12.0003023147583
    4. '```' → logprob: -16.750303268432617
    5. '	print' → logprob: -17.375303268432617
    6. '  ' → logprob: -18.625303268432617
    7. 'prin' → logprob: -18.750303268432617
    8. 'pr' → logprob: -19.000303268432617
    9. ' ' → logprob: -19.500303268432617
    10. 'prit' → logprob: -19.750303268432617

Token 321: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.005385418422520161
    2. '   ' → logprob: -5.255385398864746
    3. 'ich' → logprob: -10.005385398864746
    4. 'iche' → logprob: -10.255385398864746
    5. 'icer' → logprob: -10.380385398864746
    6. 'ic' → logprob: -11.130385398864746
    7. '#' → logprob: -11.255385398864746
    8. 'ichier' → logprob: -12.380385398864746
    9. 'ichage' → logprob: -12.755385398864746
    10. 'er' → logprob: -13.755385398864746

Token 322: ' la' (ID: 557)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5791838765144348
    2. 'a' → logprob: -0.8291838765144348
    3. 'print' → logprob: -5.829184055328369
    4. ' a' → logprob: -8.454183578491211
    5. '   ' → logprob: -9.704183578491211
    6. '(' → logprob: -10.954183578491211
    7. ' (' → logprob: -12.579183578491211
    8. ' print' → logprob: -13.829183578491211
    9. '(print' → logprob: -13.829183578491211
    10. '((' → logprob: -14.204183578491211

Token 323: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0003212805895600468
    2. 'print' → logprob: -8.750321388244629
    3. '(a' → logprob: -8.750321388244629
    4. ' a' → logprob: -12.500321388244629
    5. '(' → logprob: -15.125321388244629
    6. 'result' → logprob: -15.375321388244629
    7. '   ' → logprob: -15.500321388244629
    8. ' (' → logprob: -17.125320434570312
    9. 'val' → logprob: -18.250320434570312
    10. ' ' → logprob: -18.250320434570312

Token 324: ' calcul' (ID: 7559)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006721756421029568
    2. 'a' → logprob: -5.3817219734191895
    3. 'de' → logprob: -6.6317219734191895
    4. '   ' → logprob: -7.5067219734191895
    5. '(' → logprob: -8.631721496582031
    6. ' de' → logprob: -10.756721496582031
    7. 'print' → logprob: -11.006721496582031
    8. '((' → logprob: -12.381721496582031
    9. ' (' → logprob: -12.881721496582031
    10. 'of' → logprob: -13.006721496582031

Token 325: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0031953046564012766
    2. '(a' → logprob: -6.378195285797119
    3. 'ee' → logprob: -6.753195285797119
    4. 'e' → logprob: -8.253195762634277
    5. 'é' → logprob: -11.253195762634277
    6. '   ' → logprob: -11.378195762634277
    7. '(e' → logprob: -11.378195762634277
    8. '(' → logprob: -11.628195762634277
    9. 'a' → logprob: -11.628195762634277
    10. '((' → logprob: -12.753195762634277

Token 326: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10196065902709961
    2. '   ' → logprob: -3.1019606590270996
    3. '(a' → logprob: -3.1019606590270996
    4. 'a' → logprob: -4.9769606590271
    5. '(print' → logprob: -9.351961135864258
    6. ' print' → logprob: -10.976961135864258
    7. '(' → logprob: -11.476961135864258
    8. '((' → logprob: -13.476961135864258
    9. '    
' → logprob: -14.976961135864258
    10. ' a' → logprob: -14.976961135864258

Token 327: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014603319577872753
    2. '(a' → logprob: -4.264603137969971
    3. ' a' → logprob: -7.764603137969971
    4. ' (' → logprob: -11.264603614807129
    5. '   ' → logprob: -13.764603614807129
    6. '(' → logprob: -14.514603614807129
    7. 'print' → logprob: -15.264603614807129
    8. '	a' → logprob: -15.389603614807129
    9. ' ' → logprob: -15.764603614807129
    10. '```' → logprob: -16.639602661132812

Token 328: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.991464786347933e-05
    2. '(a' → logprob: -10.250060081481934
    3. ' a' → logprob: -10.625060081481934
    4. '   ' → logprob: -16.000059127807617
    5. 'print' → logprob: -17.250059127807617
    6. '	a' → logprob: -17.750059127807617
    7. ' (' → logprob: -18.250059127807617
    8. ')a' → logprob: -18.250059127807617
    9. ')' → logprob: -18.500059127807617
    10. ' ' → logprob: -18.875059127807617

Token 329: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07890322804450989
    2. '-' → logprob: -2.5789031982421875
    3. ' ' → logprob: -11.953903198242188
    4. '   ' → logprob: -12.828903198242188
    5. ' ' → logprob: -13.328903198242188
    6. ')' → logprob: -13.578903198242188
    7. '-(' → logprob: -14.828903198242188
    8. '  ' → logprob: -15.453903198242188
    9. 'a' → logprob: -15.453903198242188
    10. ' -(' → logprob: -16.078903198242188

Token 330: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0298018716275692
    2. ' (' → logprob: -3.529801845550537
    3. '2' → logprob: -9.904802322387695
    4. ' ' → logprob: -13.779802322387695
    5. '   ' → logprob: -15.404802322387695
    6. '1' → logprob: -16.529802322387695
    7. ' ' → logprob: -16.529802322387695
    8. '((' → logprob: -17.154802322387695
    9. '3' → logprob: -17.154802322387695
    10. ')' → logprob: -17.529802322387695

Token 331: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018387178715784103
    2. ' (' → logprob: -8.625184059143066
    3. '2' → logprob: -12.375184059143066
    4. ' ' → logprob: -17.62518310546875
    5. '   ' → logprob: -17.75018310546875
    6. '((' → logprob: -18.37518310546875
    7. '  ' → logprob: -19.12518310546875
    8. ')' → logprob: -19.37518310546875
    9. ' ' → logprob: -20.50018310546875
    10. '(int' → logprob: -20.62518310546875

Token 332: 'b' (ID: 65)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.27562573552131653
    2. ' *' → logprob: -1.5256257057189941
    3. '(' → logprob: -4.400625705718994
    4. '*(' → logprob: -5.400625705718994
    5. '*b' → logprob: -5.525625705718994
    6. 'b' → logprob: -6.650625705718994
    7. ' (' → logprob: -6.650625705718994
    8. '(b' → logprob: -10.400626182556152
    9. ' ' → logprob: -11.275626182556152
    10. '2' → logprob: -11.900626182556152

Token 333: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008900215616449714
    2. ' )' → logprob: -7.750890254974365
    3. '))' → logprob: -8.000889778137207
    4. '(a' → logprob: -9.875889778137207
    5. '   ' → logprob: -10.125889778137207
    6. ')
' → logprob: -11.875889778137207
    7. 'print' → logprob: -12.000889778137207
    8. ')a' → logprob: -12.500889778137207
    9. 'a' → logprob: -12.625889778137207
    10. ')))' → logprob: -13.000889778137207

Token 334: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16150903701782227
    2. 'print' → logprob: -1.9115090370178223
    3. ' print' → logprob: -6.661509037017822
    4. ':' → logprob: -13.911508560180664
    5. '.print' → logprob: -14.161508560180664
    6. '	print' → logprob: -14.286508560180664
    7. '    
' → logprob: -14.536508560180664
    8. '```' → logprob: -14.786508560180664
    9. ')' → logprob: -14.911508560180664
    10. '  ' → logprob: -15.161508560180664

Token 335: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5822400857578032e-05
    2. ' print' → logprob: -10.750025749206543
    3. 'a' → logprob: -12.750025749206543
    4. '   ' → logprob: -13.625025749206543
    5. '(a' → logprob: -15.625025749206543
    6. '(print' → logprob: -18.00002670288086
    7. 'pr' → logprob: -19.25002670288086
    8. ' a' → logprob: -19.87502670288086
    9. 'la' → logprob: -20.37502670288086
    10. 'prin' → logprob: -21.00002670288086

Token 336: '().
' (ID: 58434)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5231422185897827
    2. '(a' → logprob: -1.0231422185897827
    3. '   ' → logprob: -4.023142337799072
    4. 'print' → logprob: -4.148142337799072
    5. '(print' → logprob: -4.773142337799072
    6. '((' → logprob: -5.273142337799072
    7. '(
' → logprob: -7.898142337799072
    8. '()' → logprob: -8.648141860961914
    9. '(abs' → logprob: -10.523141860961914
    10. ' (' → logprob: -11.898141860961914

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025040784385055304
    2. 'print' → logprob: -6.002503871917725
    3. ' print' → logprob: -10.502504348754883
    4. '```' → logprob: -14.252504348754883
    5. '   ' → logprob: -16.377504348754883
    6. '       ' → logprob: -16.377504348754883
    7. '	print' → logprob: -16.752504348754883
    8. '  ' → logprob: -18.752504348754883
    9. '    
' → logprob: -18.877504348754883
    10. '    ' → logprob: -18.877504348754883

Token 338: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001936485292389989
    2. '   ' → logprob: -6.251936435699463
    3. ' print' → logprob: -11.751936912536621
    4. '	print' → logprob: -18.126935958862305
    5. '  ' → logprob: -20.251935958862305
    6. 'Print' → logprob: -20.876935958862305
    7. ' ' → logprob: -21.001935958862305
    8. 'printf' → logprob: -21.126935958862305
    9. '```' → logprob: -21.626935958862305
    10. '       ' → logprob: -22.001935958862305

Token 339: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.215330409351736e-05
    2. '(' → logprob: -10.250041961669922
    3. '((' → logprob: -12.375041961669922
    4. 'a' → logprob: -13.000041961669922
    5. ' (' → logprob: -15.125041961669922
    6. '()' → logprob: -19.750041961669922
    7. '(A' → logprob: -20.500041961669922
    8. '(int' → logprob: -20.750041961669922
    9. '(
' → logprob: -20.875041961669922
    10. '(abs' → logprob: -20.875041961669922

Token 340: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38688886165618896
    2. '-' → logprob: -1.136888861656189
    3. ' ' → logprob: -11.63688850402832
    4. ')' → logprob: -11.88688850402832
    5. '   ' → logprob: -14.13688850402832
    6. ' ' → logprob: -14.76188850402832
    7. ' -
' → logprob: -15.63688850402832
    8. '  ' → logprob: -15.88688850402832
    9. '	' → logprob: -15.88688850402832
    10. ',' → logprob: -16.01188850402832

Token 341: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04134971648454666
    2. '2' → logprob: -3.7913496494293213
    3. ' (' → logprob: -4.0413498878479
    4. ' ' → logprob: -7.9163498878479
    5. '   ' → logprob: -13.291349411010742
    6. '  ' → logprob: -14.291349411010742
    7. '    ' → logprob: -15.791349411010742
    8. ')' → logprob: -16.541349411010742
    9. ' ' → logprob: -16.791349411010742
    10. '(
' → logprob: -16.916349411010742

Token 342: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -10.750021934509277
    3. '(' → logprob: -14.250021934509277
    4. '   ' → logprob: -15.750021934509277
    5. '  ' → logprob: -17.625022888183594
    6. ' (' → logprob: -19.500022888183594
    7. '    ' → logprob: -20.125022888183594
    8. '２' → logprob: -20.250022888183594
    9. '     ' → logprob: -20.750022888183594
    10. '       ' → logprob: -20.875022888183594

Token 343: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4866531789302826
    2. '*' → logprob: -0.986653208732605
    3. '*b' → logprob: -4.4866533279418945
    4. 'b' → logprob: -6.7366533279418945
    5. ' b' → logprob: -9.986653327941895
    6. ' ' → logprob: -12.236653327941895
    7. ' ' → logprob: -13.736653327941895
    8. ')' → logprob: -15.111653327941895
    9. '	b' → logprob: -16.111652374267578
    10. '   ' → logprob: -16.236652374267578

Token 344: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1517960956552997e-05
    2. ' b' → logprob: -11.375011444091797
    3. ')b' → logprob: -17.625011444091797
    4. '	b' → logprob: -19.125011444091797
    5. '   ' → logprob: -20.500011444091797
    6. ')' → logprob: -21.375011444091797
    7. ' ' → logprob: -21.875011444091797
    8. '*b' → logprob: -22.500011444091797
    9. '_b' → logprob: -22.750011444091797
    10. '  ' → logprob: -22.750011444091797

Token 345: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009171743295155466
    2. ')' → logprob: -7.000916957855225
    3. ' ))' → logprob: -13.000917434692383
    4. '))
' → logprob: -13.250917434692383
    5. ')))' → logprob: -13.375917434692383
    6. ' )' → logprob: -16.125917434692383
    7. '));' → logprob: -18.125917434692383
    8. '))

' → logprob: -18.500917434692383
    9. ' ' → logprob: -18.500917434692383
    10. ')
' → logprob: -18.625917434692383


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 343
Tokens correctement prédits (1ère position, stricte): 100
Tokens correctement prédits (1ère position, avec adaptation): 101
Tokens correctement prédits (top 10): 226
Précision stricte (1ère position): 29.15%
Précision adaptée (1ère position): 29.45%
Précision (top 10): 65.89%
================================================================================
