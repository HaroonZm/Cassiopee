================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_row():
    """
    Reads a line of input, splits it by whitespace, and converts the values to integers to form a list.
    
    Returns:
        list: A list of three integers representing one row of a 3x3 grid.
    """
    return list(map(int, input().split()))

def mark_number_on_grid(number, grid, mark_value):
    """
    Replaces occurrences of a given number with the specified mark_value in the provided grid rows.
    
    Args:
        number (int): The number to search for and mark in the grid.
        grid (list of lists): The game grid (3 rows, each is a list).
        mark_value (int): The value to replace matched numbers with (indicating a mark).
    """
    for row in grid:
        for i in range(len(row)):
            if row[i] == number:
                row[i] = mark_value

def is_bingo(grid, mark_value):
    """
    Checks the grid for a bingo (i.e., a full row, column, or diagonal matches mark_value).

    Args:
        grid (list of lists): The game grid, 3x3 (three lists of three integers).
        mark_value (int): The special value representing a marked cell.

    Returns:
        bool: True if any row, column, or diagonal is fully marked, False otherwise.
    """
    # Check rows
    for i in range(3):
        if all(cell == mark_value for cell in grid[i]):
            return True

    # Check columns
    for j in range(3):
        if all(grid[i][j] == mark_value for i in range(3)):
            return True

    # Check diagonals
    if all(grid[i][i] == mark_value for i in range(3)):
        return True
    if all(grid[i][2 - i] == mark_value for i in range(3)):
        return True

    return False

def main():
    """
    Main function to run the bingo check.
    Reads three rows of grid numbers and a list of called numbers. Marks the grid as numbers are called,
    and then determines if a bingo (row, column, or diagonal filled) has occurred.
    Prints "Yes" if bingo, otherwise "No".
    """
    # Read the three rows of the 3x3 bingo grid from the user
    a = read_row()
    b = read_row()
    c = read_row()

    # Store the grid as a list of rows for easier processing
    grid = [a, b, c]

    # Define the special value to represent a marked cell
    maru = 111

    # Read the number of called numbers
    n = int(input())

    # For each called number, mark them in the grid if present
    for _ in range(n):
        e = int(input())
        mark_number_on_grid(e, grid, maru)

    # Check if the grid has a bingo (row, column, diagonal fully marked)
    if is_bingo(grid, maru):
        print("Yes")
    else:
        print("No")

# Run the main function
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_row' (ID: 19157)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20606359839439392
    2. '_' → logprob: -1.7060636281967163
    3. '(:' → logprob: -6.206063747406006
    4. '_:' → logprob: -7.331063747406006
    5. '(_:' → logprob: -7.456063747406006
    6. ':' → logprob: -7.706063747406006
    7. '```' → logprob: -8.331063270568848
    8. '():' → logprob: -8.581063270568848
    9. '(_' → logprob: -8.831063270568848
    10. '[' → logprob: -9.831063270568848

Token 4: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.23990803956985474
    2. '\' → logprob: -2.11490797996521
    3. '```' → logprob: -3.11490797996521
    4. '   ' → logprob: -3.61490797996521
    5. ''\' → logprob: -5.614908218383789
    6. '
' → logprob: -5.739908218383789
    7. ':' → logprob: -5.739908218383789
    8. '    
' → logprob: -5.989908218383789
    9. '``' → logprob: -6.864908218383789
    10. '()' → logprob: -7.239908218383789

Token 5: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0303329229354858
    2. 'return' → logprob: -1.2803329229354858
    3. 'r' → logprob: -1.5303329229354858
    4. '```' → logprob: -3.5303330421447754
    5. '\' → logprob: -3.7803330421447754
    6. '    ' → logprob: -3.9053330421447754
    7. '\n' → logprob: -3.9053330421447754
    8. 'data' → logprob: -4.280333042144775
    9. 'x' → logprob: -5.030333042144775
    10. ' ' → logprob: -5.155333042144775

Token 6: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.05608289688825607
    2. '   ' → logprob: -3.0560829639434814
    3. '""' → logprob: -6.431082725524902
    4. ' """' → logprob: -6.681082725524902
    5. ''''' → logprob: -6.681082725524902
    6. ' reads' → logprob: -7.181082725524902
    7. '```' → logprob: -7.306082725524902
    8. 'Read' → logprob: -7.681082725524902
    9. ')' → logprob: -8.056082725524902
    10. 'Reads' → logprob: -8.806082725524902

Token 7: ' Reads' (ID: 88839)
  Prédit: 'Read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Read' → logprob: -0.3583008646965027
    2. 'Reads' (adapté à ' Reads') → logprob: -1.3583009243011475
    3. '"""' → logprob: -3.8583009243011475
    4. '   ' → logprob: -4.233300685882568
    5. 'Return' → logprob: -6.358300685882568
    6. 'Returns' → logprob: -6.733300685882568
    7. 'reads' → logprob: -7.108300685882568
    8. 'read' → logprob: -7.233300685882568
    9. ' reads' → logprob: -7.608300685882568
    10. '       ' → logprob: -7.858300685882568

Token 8: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2607717216014862
    2. ' the' → logprob: -2.1357717514038086
    3. '   ' → logprob: -4.010771751403809
    4. ' )' → logprob: -4.260771751403809
    5. ' an' → logprob: -4.385771751403809
    6. ' data' → logprob: -4.760771751403809
    7. 'data' → logprob: -4.760771751403809
    8. ')' → logprob: -5.010771751403809
    9. ' ' → logprob: -5.010771751403809
    10. 'the' → logprob: -5.135771751403809

Token 9: ' line' (ID: 2543)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.12962868809700012
    2. ' single' → logprob: -2.8796286582946777
    3. ' line' → logprob: -3.1296286582946777
    4. 'row' → logprob: -4.754628658294678
    5. ' CSV' → logprob: -5.629628658294678
    6. 'n' → logprob: -6.004628658294678
    7. 'single' → logprob: -6.004628658294678
    8. ' file' → logprob: -6.629628658294678
    9. 'line' → logprob: -6.879628658294678
    10. ' csv' → logprob: -7.629628658294678

Token 10: ' of' (ID: 328)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.24894557893276215
    2. '   ' → logprob: -1.6239455938339233
    3. 'from' → logprob: -4.373945713043213
    4. ' and' → logprob: -4.998945713043213
    5. '```' → logprob: -6.748945713043213
    6. ' of' → logprob: -7.498945713043213
    7. '    ' → logprob: -7.748945713043213
    8. '       ' → logprob: -7.873945713043213
    9. ')' → logprob: -8.123945236206055
    10. '`' → logprob: -8.623945236206055

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6437867283821106
    2. ' input' → logprob: -0.8937867283821106
    3. ' text' → logprob: -3.768786668777466
    4. 'text' → logprob: -4.018786907196045
    5. ' code' → logprob: -4.643786907196045
    6. 'code' → logprob: -5.518786907196045
    7. 'data' → logprob: -5.643786907196045
    8. ' data' → logprob: -5.643786907196045
    9. 'csv' → logprob: -6.393786907196045
    10. ' a' → logprob: -7.643786907196045

Token 12: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13733425736427307
    2. '```' → logprob: -3.1373343467712402
    3. '`' → logprob: -4.01233434677124
    4. '.' → logprob: -4.51233434677124
    5. ')' → logprob: -4.76233434677124
    6. ' from' → logprob: -5.01233434677124
    7. '"' → logprob: -5.13733434677124
    8. ' and' → logprob: -5.13733434677124
    9. '       ' → logprob: -5.26233434677124
    10. ',' → logprob: -5.38733434677124

Token 13: ' splits' (ID: 76848)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08356041461229324
    2. 'return' → logprob: -3.7085604667663574
    3. ' and' → logprob: -4.583560466766357
    4. ' return' → logprob: -4.708560466766357
    5. ' strip' → logprob: -4.958560466766357
    6. 'strip' → logprob: -4.958560466766357
    7. ')' → logprob: -5.208560466766357
    8. ' strips' → logprob: -5.958560466766357
    9. ' line' → logprob: -6.208560466766357
    10. '    ' → logprob: -6.583560466766357

Token 14: ' it' (ID: 480)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5225186347961426
    2. ' into' → logprob: -1.2725186347961426
    3. '   ' → logprob: -2.8975186347961426
    4. '```' → logprob: -4.272518634796143
    5. 'into' → logprob: -4.647518634796143
    6. ' the' → logprob: -4.772518634796143
    7. ')' → logprob: -4.897518634796143
    8. 'the' → logprob: -5.022518634796143
    9. '(' → logprob: -5.647518634796143
    10. ' by' → logprob: -5.772518634796143

Token 15: ' by' (ID: 656)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.27191904187202454
    2. ' by' → logprob: -2.396919012069702
    3. ',' → logprob: -3.021919012069702
    4. '()' → logprob: -3.396919012069702
    5. '   ' → logprob: -3.896919012069702
    6. 'into' → logprob: -3.896919012069702
    7. '(),' → logprob: -4.396919250488281
    8. 'by' → logprob: -5.396919250488281
    9. ' and' → logprob: -5.896919250488281
    10. '```' → logprob: -6.771919250488281

Token 16: ' whitespace' (ID: 83606)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.9126197099685669
    2. ' spaces' → logprob: -1.162619709968567
    3. 'spaces' → logprob: -1.537619709968567
    4. ' space' → logprob: -2.7876195907592773
    5. ''' → logprob: -5.287619590759277
    6. ' whitespace' → logprob: -5.912619590759277
    7. 'wh' → logprob: -7.412619590759277
    8. ' a' → logprob: -7.412619590759277
    9. 'comma' → logprob: -9.287619590759277
    10. 'a' → logprob: -9.662619590759277

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07531274110078812
    2. '   ' → logprob: -2.825312852859497
    3. ' ,' → logprob: -4.950312614440918
    4. ' and' → logprob: -5.825312614440918
    5. ')' → logprob: -7.075312614440918
    6. '```' → logprob: -7.075312614440918
    7. '),' → logprob: -7.950312614440918
    8. 'return' → logprob: -8.200312614440918
    9. 'and' → logprob: -8.575312614440918
    10. '`' → logprob: -8.575312614440918

Token 18: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05897672101855278
    2. '   ' → logprob: -3.683976650238037
    3. 'and' → logprob: -4.308976650238037
    4. 'return' → logprob: -4.308976650238037
    5. ' return' → logprob: -5.808976650238037
    6. 'tokens' → logprob: -7.183976650238037
    7. ' returns' → logprob: -7.808976650238037
    8. ' tokens' → logprob: -8.058977127075195
    9. 'returns' → logprob: -8.558977127075195
    10. '```' → logprob: -8.683977127075195

Token 19: ' converts' (ID: 64809)
  Prédit: ' returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -0.09387687593698502
    2. 'returns' → logprob: -2.718876838684082
    3. 'return' → logprob: -3.843876838684082
    4. '   ' → logprob: -6.343876838684082
    5. ' return' → logprob: -8.093876838684082
    6. ' converts' → logprob: -9.343876838684082
    7. '```' → logprob: -10.343876838684082
    8. 'eturn' → logprob: -10.968876838684082
    9. ' parses' → logprob: -11.718876838684082
    10. '_returns' → logprob: -12.093876838684082

Token 20: ' the' (ID: 290)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.11891669780015945
    2. 'each' → logprob: -2.7439167499542236
    3. ' the' → logprob: -4.1189165115356445
    4. ' it' → logprob: -4.6189165115356445
    5. ' tokens' → logprob: -4.7439165115356445
    6. 'tokens' → logprob: -5.2439165115356445
    7. ' to' → logprob: -5.8689165115356445
    8. 'the' → logprob: -6.6189165115356445
    9. ' ' → logprob: -7.1189165115356445
    10. '```' → logprob: -7.3689165115356445

Token 21: ' values' (ID: 4824)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.8215110301971436
    2. ' elements' → logprob: -1.0715110301971436
    3. ' items' → logprob: -2.0715110301971436
    4. 'tokens' → logprob: -3.3215110301971436
    5. ' next' → logprob: -4.071511268615723
    6. ' values' → logprob: -4.446511268615723
    7. ' result' → logprob: -5.071511268615723
    8. 'items' → logprob: -5.696511268615723
    9. 'elements' → logprob: -5.946511268615723
    10. ' entries' → logprob: -6.071511268615723

Token 22: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.014982828870415688
    2. ' into' → logprob: -4.3899827003479
    3. 'to' → logprob: -6.1399827003479
    4. ' ' → logprob: -8.764983177185059
    5. '```' → logprob: -9.764983177185059
    6. '   ' → logprob: -10.514983177185059
    7. '<|end|>' → logprob: -10.889983177185059
    8. 'into' → logprob: -11.889983177185059
    9. 's' → logprob: -11.889983177185059
    10. ' t' → logprob: -12.264983177185059

Token 23: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8966261744499207
    2. ' int' → logprob: -0.8966261744499207
    3. ' integers' → logprob: -1.7716262340545654
    4. 'ints' → logprob: -4.771625995635986
    5. 'inte' → logprob: -6.146625995635986
    6. ' ints' → logprob: -6.396625995635986
    7. ' float' → logprob: -7.896625995635986
    8. '[int' → logprob: -8.021626472473145
    9. 'float' → logprob: -8.271626472473145
    10. ' a' → logprob: -8.521626472473145

Token 24: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0312040988355875
    2. ')' → logprob: -4.4062042236328125
    3. '.' → logprob: -5.0312042236328125
    4. '```' → logprob: -5.1562042236328125
    5. '):' → logprob: -5.7812042236328125
    6. ',' → logprob: -6.9062042236328125
    7. 'return' → logprob: -8.281204223632812
    8. '.
' → logprob: -8.281204223632812
    9. '\n' → logprob: -8.406204223632812
    10. ')
' → logprob: -8.531204223632812

Token 25: ' form' (ID: 1625)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7802795767784119
    2. ' return' → logprob: -0.9052795767784119
    3. ' be' → logprob: -2.7802796363830566
    4. ' list' → logprob: -4.030279636383057
    5. ' form' → logprob: -4.155279636383057
    6. '_list' → logprob: -4.655279636383057
    7. ' create' → logprob: -4.905279636383057
    8. '```' → logprob: -5.155279636383057
    9. ' produce' → logprob: -5.405279636383057
    10. 'list' → logprob: -5.905279636383057

Token 26: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0008214225526899099
    2. 'a' → logprob: -7.250821590423584
    3. ' the' → logprob: -9.250821113586426
    4. ' an' → logprob: -11.250821113586426
    5. 's' → logprob: -14.125821113586426
    6. ' and' → logprob: -15.250821113586426
    7. ' integers' → logprob: -15.375821113586426
    8. 'the' → logprob: -15.500821113586426
    9. '```' → logprob: -15.750821113586426
    10. 'an' → logprob: -15.875821113586426

Token 27: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.06201103702187538
    2. 'list' → logprob: -2.8120110034942627
    3. '_list' → logprob: -11.312010765075684
    4. 'List' → logprob: -11.687010765075684
    5. 'row' → logprob: -12.062010765075684
    6. ' row' → logprob: -12.437010765075684
    7. ' complete' → logprob: -12.812010765075684
    8. '`' → logprob: -13.187010765075684
    9. '```' → logprob: -13.187010765075684
    10. '[]' → logprob: -13.687010765075684

Token 28: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.642409086227417
    2. '```' → logprob: -0.892409086227417
    3. '.' → logprob: -3.142409086227417
    4. 'def' → logprob: -5.392409324645996
    5. ')' → logprob: -5.642409324645996
    6. 'return' → logprob: -5.892409324645996
    7. ',' → logprob: -5.892409324645996
    8. '``' → logprob: -6.392409324645996
    9. '`' → logprob: -6.642409324645996
    10. ' of' → logprob: -7.267409324645996

Token 29: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02363419346511364
    2. '"""' → logprob: -3.898634195327759
    3. '```' → logprob: -6.39863395690918
    4. '"""
' → logprob: -6.77363395690918
    5. '"' → logprob: -9.89863395690918
    6. '\n' → logprob: -10.02363395690918
    7. ')' → logprob: -10.02363395690918
    8. ' """' → logprob: -10.02363395690918
    9. '""' → logprob: -10.89863395690918
    10. '`' → logprob: -11.02363395690918

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001455236109904945
    2. '"""' → logprob: -6.751455307006836
    3. ' """' → logprob: -8.751455307006836
    4. '```' → logprob: -10.126455307006836
    5. 'return' → logprob: -10.251455307006836
    6. ')' → logprob: -10.626455307006836
    7. ' return' → logprob: -11.501455307006836
    8. '    ' → logprob: -12.751455307006836
    9. '       ' → logprob: -12.876455307006836
    10. ' ' → logprob: -13.001455307006836

Token 31: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0339948907494545
    2. 'return' → logprob: -3.5339949131011963
    3. '"""' → logprob: -5.908994674682617
    4. ' return' → logprob: -7.908994674682617
    5. '```' → logprob: -8.408994674682617
    6. 'Returns' (adapté à ' Returns') → logprob: -8.908994674682617
    7. 'input' → logprob: -9.033994674682617
    8. 'line' → logprob: -9.283994674682617
    9. ')' → logprob: -9.533994674682617
    10. 'tokens' → logprob: -9.658994674682617

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35998883843421936
    2. ' a' → logprob: -2.1099889278411865
    3. ' list' → logprob: -2.3599889278411865
    4. ' :' → logprob: -3.8599889278411865
    5. ' List' → logprob: -4.234988689422607
    6. ':list' → logprob: -4.734988689422607
    7. '<|end|>' → logprob: -4.859988689422607
    8. ' the' → logprob: -4.859988689422607
    9. ' of' → logprob: -5.609988689422607
    10. ' ' → logprob: -5.734988689422607

Token 33: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0678800344467163
    2. ' list' → logprob: -1.0678800344467163
    3. ' List' → logprob: -1.4428800344467163
    4. 'List' → logprob: -2.817880153656006
    5. 'list' → logprob: -4.692880153656006
    6. ' a' → logprob: -5.317880153656006
    7. '```' → logprob: -7.442880153656006
    8. '    ' → logprob: -7.567880153656006
    9. 'int' → logprob: -8.192879676818848
    10. 'A' → logprob: -8.567879676818848

Token 34: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.39368343353271484
    2. 'List' → logprob: -1.1436834335327148
    3. ' list' → logprob: -5.143683433532715
    4. ' List' → logprob: -7.143683433532715
    5. '   ' → logprob: -9.143683433532715
    6. 'A' → logprob: -10.393683433532715
    7. '```' → logprob: -12.143683433532715
    8. 'int' → logprob: -12.268683433532715
    9. '[List' → logprob: -12.393683433532715
    10. '_list' → logprob: -13.143683433532715

Token 35: ':' (ID: 25)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0030983351171016693
    2. ' of' → logprob: -6.628098487854004
    3. ':' → logprob: -6.878098487854004
    4. '<int' → logprob: -7.503098487854004
    5. '(int' → logprob: -9.378098487854004
    6. 'int' → logprob: -9.628098487854004
    7. '[' → logprob: -11.128098487854004
    8. 'of' → logprob: -12.503098487854004
    9. '```' → logprob: -12.503098487854004
    10. '(map' → logprob: -12.878098487854004

Token 36: ' A' (ID: 355)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.678745448589325
    2. ' integers' → logprob: -1.8037455081939697
    3. ' of' → logprob: -2.4287455081939697
    4. ' A' → logprob: -3.0537455081939697
    5. '<int' → logprob: -3.1787455081939697
    6. 'A' → logprob: -3.3037455081939697
    7. '   ' → logprob: -3.4287455081939697
    8. 'int' → logprob: -3.9287455081939697
    9. ' int' → logprob: -4.303745269775391
    10. ' The' → logprob: -4.678745269775391

Token 37: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.01001211628317833
    2. 'list' → logprob: -5.260012149810791
    3. ' of' → logprob: -6.010012149810791
    4. '[int' → logprob: -6.885012149810791
    5. 'int' → logprob: -7.135012149810791
    6. 'n' → logprob: -8.385011672973633
    7. '<int' → logprob: -8.885011672973633
    8. ' int' → logprob: -10.885011672973633
    9. ' integers' → logprob: -10.885011672973633
    10. 'List' → logprob: -11.260011672973633

Token 38: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.12024646252393723
    2. '[int' → logprob: -2.370246410369873
    3. '<|end|>' → logprob: -3.995246410369873
    4. '<int' → logprob: -7.245246410369873
    5. 'of' → logprob: -8.245246887207031
    6. '[' → logprob: -8.495246887207031
    7. '<|end|>' → logprob: -9.495246887207031
    8. '(int' → logprob: -9.870246887207031
    9. ' ' → logprob: -9.995246887207031
    10. '```' → logprob: -10.995246887207031

Token 39: ' three' (ID: 3407)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.001416069339029491
    2. ' int' → logprob: -7.126416206359863
    3. 'inte' → logprob: -8.001416206359863
    4. 'int' → logprob: -8.876416206359863
    5. ' ints' → logprob: -9.376416206359863
    6. ' integer' → logprob: -10.126416206359863
    7. 'ints' → logprob: -12.001416206359863
    8. '<int' → logprob: -12.376416206359863
    9. 'integer' → logprob: -15.001416206359863
    10. '[int' → logprob: -15.001416206359863

Token 40: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.00023858259373810142
    2. 'inte' → logprob: -8.750238418579102
    3. ' integer' → logprob: -10.125238418579102
    4. ' int' → logprob: -10.625238418579102
    5. 'int' → logprob: -12.000238418579102
    6. ' ints' → logprob: -12.250238418579102
    7. 'ints' → logprob: -13.625238418579102
    8. '[int' → logprob: -14.125238418579102
    9. '<int' → logprob: -14.375238418579102
    10. 'integer' → logprob: -14.375238418579102

Token 41: ' representing' (ID: 25389)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018073029816150665
    2. '```' → logprob: -5.268073081970215
    3. '.' → logprob: -5.643073081970215
    4. ')' → logprob: -5.643073081970215
    5. ',' → logprob: -6.768073081970215
    6. ' that' → logprob: -7.518073081970215
    7. ' representing' → logprob: -7.643073081970215
    8. 'def' → logprob: -7.768073081970215
    9. '"""' → logprob: -7.893073081970215
    10. '()' → logprob: -8.518073081970215

Token 42: ' one' (ID: 1001)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7071536183357239
    2. ' a' → logprob: -0.8321536183357239
    3. ' one' → logprob: -3.832153558731079
    4. ' three' → logprob: -4.207153797149658
    5. 'a' → logprob: -4.457153797149658
    6. 'the' → logprob: -4.457153797149658
    7. ' coordinates' → logprob: -5.082153797149658
    8. ' row' → logprob: -6.707153797149658
    9. ' RGB' → logprob: -6.832153797149658
    10. ' ' → logprob: -7.957153797149658

Token 43: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.01720549538731575
    2. 'row' → logprob: -5.017205715179443
    3. ' ' → logprob: -5.142205715179443
    4. ' data' → logprob: -7.392205715179443
    5. ''s' → logprob: -7.892205715179443
    6. ' of' → logprob: -7.892205715179443
    7. ' trip' → logprob: -8.142205238342285
    8. ' player's' → logprob: -8.517205238342285
    9. ' element' → logprob: -8.579705238342285
    10. ' coordinate' → logprob: -8.892205238342285

Token 44: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016304324381053448
    2. '```' → logprob: -7.8766303062438965
    3. ')' → logprob: -8.376630783081055
    4. ':' → logprob: -8.626630783081055
    5. 'def' → logprob: -8.876630783081055
    6. '    
' → logprob: -9.001630783081055
    7. '.' → logprob: -9.251630783081055
    8. '       ' → logprob: -9.751630783081055
    9. ' of' → logprob: -9.751630783081055
    10. '):' → logprob: -10.126630783081055

Token 45: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.17244772613048553
    2. ' a' → logprob: -2.797447681427002
    3. 'the' → logprob: -2.922447681427002
    4. ' data' → logprob: -3.547447681427002
    5. 'a' → logprob: -5.297447681427002
    6. 'data' → logprob: -6.422447681427002
    7. ' values' → logprob: -6.672447681427002
    8. ' code' → logprob: -6.797447681427002
    9. ' numbers' → logprob: -7.047447681427002
    10. ' sudoku' → logprob: -7.297447681427002

Token 46: ' ' (ID: 220)
  Prédit: ' magic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' magic' → logprob: -1.1170209646224976
    2. ' sudoku' → logprob: -1.2420209646224976
    3. ' ' → logprob: -2.117021083831787
    4. ' matrix' → logprob: -2.617021083831787
    5. ' Sudoku' → logprob: -2.867021083831787
    6. ' tic' → logprob: -3.367021083831787
    7. '3' → logprob: -3.992021083831787
    8. 'n' → logprob: -4.679521083831787
    9. ' bingo' → logprob: -4.929521083831787
    10. 'magic' → logprob: -5.117021083831787

Token 47: '3' (ID: 18)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6866168975830078
    2. 'matrix' → logprob: -1.6866168975830078
    3. 'magic' → logprob: -2.061616897583008
    4. '3' → logprob: -2.811616897583008
    5. ' ' → logprob: -2.936616897583008
    6. 'tic' → logprob: -3.311616897583008
    7. 'b' → logprob: -4.561616897583008
    8. 't' → logprob: -5.686616897583008
    9. 'cube' → logprob: -5.936616897583008
    10. '2' → logprob: -6.186616897583008

Token 48: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000551483070012182
    2. '-' → logprob: -7.875551700592041
    3. ' by' → logprob: -10.125551223754883
    4. ')' → logprob: -10.500551223754883
    5. ' ' → logprob: -10.500551223754883
    6. 'by' → logprob: -10.875551223754883
    7. '*' → logprob: -11.000551223754883
    8. 'b' → logprob: -11.250551223754883
    9. ' x' → logprob: -11.875551223754883
    10. '-by' → logprob: -12.375551223754883

Token 49: '3' (ID: 18)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005311427637934685
    2. ' matrix' → logprob: -6.130311489105225
    3. ' space' → logprob: -7.130311489105225
    4. 'x' → logprob: -7.380311489105225
    5. '3' → logprob: -7.755311489105225
    6. '  ' → logprob: -7.755311489105225
    7. ' sudoku' → logprob: -8.505311012268066
    8. ' x' → logprob: -8.880311012268066
    9. 'space' → logprob: -9.255311012268066
    10. 'matrix' → logprob: -9.630311012268066

Token 50: ' grid' (ID: 10586)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.33408012986183167
    2. 'matrix' → logprob: -1.9590801000595093
    3. ' grid' → logprob: -2.834080219268799
    4. ' tic' → logprob: -3.334080219268799
    5. ' magic' → logprob: -4.959080219268799
    6. 'tic' → logprob: -5.084080219268799
    7. ' Tic' → logprob: -5.084080219268799
    8. 'board' → logprob: -5.209080219268799
    9. ' sudoku' → logprob: -5.459080219268799
    10. ' board' → logprob: -5.459080219268799

Token 51: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009558336809277534
    2. '\n' → logprob: -5.134558200836182
    3. '
' → logprob: -6.509558200836182
    4. '    
' → logprob: -7.134558200836182
    5. '```' → logprob: -7.134558200836182
    6. '\' → logprob: -8.63455867767334
    7. ':' → logprob: -8.88455867767334
    8. '`' → logprob: -10.38455867767334
    9. ')' → logprob: -10.75955867767334
    10. 'n' → logprob: -10.75955867767334

Token 52: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.316569447517395
    2. '   ' → logprob: -1.316569447517395
    3. '```' → logprob: -6.5665693283081055
    4. '"' → logprob: -6.9415693283081055
    5. '"""
' → logprob: -7.4415693283081055
    6. '""' → logprob: -8.566569328308105
    7. ' """' → logprob: -9.191569328308105
    8. '`' → logprob: -10.691569328308105
    9. ')' → logprob: -11.691569328308105
    10. ''''' → logprob: -12.441569328308105

Token 53: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5909242033958435
    2. '"""' → logprob: -0.8409242033958435
    3. '"' → logprob: -4.715924263000488
    4. '```' → logprob: -5.715924263000488
    5. '""' → logprob: -6.965924263000488
    6. '"""
' (adapté à ' """
') → logprob: -7.340924263000488
    7. ')' → logprob: -7.965924263000488
    8. '
' → logprob: -8.840924263000488
    9. ' """' → logprob: -8.965924263000488
    10. '    
' → logprob: -9.215924263000488

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0055307806469500065
    2. 'return' → logprob: -5.255530834197998
    3. 'line' → logprob: -9.13053035736084
    4. 'row' → logprob: -9.63053035736084
    5. 'try' → logprob: -10.63053035736084
    6. 'data' → logprob: -10.75553035736084
    7. 'input' → logprob: -10.88053035736084
    8. ' return' → logprob: -11.38053035736084
    9. '   ' → logprob: -11.63053035736084
    10. 'r' → logprob: -11.75553035736084

Token 55: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.40187695622444153
    2. 'row' → logprob: -1.5268769264221191
    3. '   ' → logprob: -2.526876926422119
    4. 'line' → logprob: -3.776876926422119
    5. 'try' → logprob: -5.526876926422119
    6. 'r' → logprob: -5.901876926422119
    7. 'data' → logprob: -6.026876926422119
    8. 'input' → logprob: -7.401876926422119
    9. 'raw' → logprob: -8.651877403259277
    10. 'values' → logprob: -8.651877403259277

Token 56: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.009614181704819202
    2. 'list' → logprob: -4.884613990783691
    3. ' [' → logprob: -6.759613990783691
    4. '[list' → logprob: -8.384613990783691
    5. ' int' → logprob: -8.759613990783691
    6. '[' → logprob: -9.009613990783691
    7. ' map' → logprob: -9.134613990783691
    8. ' input' → logprob: -9.259613990783691
    9. '[int' → logprob: -9.509613990783691
    10. '[input' → logprob: -10.134613990783691

Token 57: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018125296628568321
    2. '(input' → logprob: -9.375181198120117
    3. '(map' → logprob: -9.750181198120117
    4. '(int' → logprob: -11.125181198120117
    5. '()' → logprob: -12.500181198120117
    6. '("("' → logprob: -13.000181198120117
    7. '('' → logprob: -13.125181198120117
    8. '(range' → logprob: -13.125181198120117
    9. '(eval' → logprob: -13.375181198120117
    10. '(
' → logprob: -13.500181198120117

Token 58: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008831066079437733
    2. '(' → logprob: -4.758831024169922
    3. 'int' → logprob: -8.633831024169922
    4. '<int' → logprob: -10.883831024169922
    5. ' int' → logprob: -11.383831024169922
    6. '(
' → logprob: -13.133831024169922
    7. '=int' → logprob: -13.508831024169922
    8. ')' → logprob: -13.883831024169922
    9. '(str' → logprob: -13.883831024169922
    10. '[int' → logprob: -14.008831024169922

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6979186534881592
    2. ',input' → logprob: -0.9479186534881592
    3. 'input' → logprob: -2.447918653488159
    4. '(input' → logprob: -3.697918653488159
    5. '   ' → logprob: -6.822918891906738
    6. ' input' → logprob: -6.947918891906738
    7. '(' → logprob: -7.197918891906738
    8. ' ,' → logprob: -7.322918891906738
    9. '<input' → logprob: -10.697918891906738
    10. ')' → logprob: -11.197918891906738

Token 60: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012522248551249504
    2. ' input' → logprob: -4.387522220611572
    3. '(input' → logprob: -12.13752269744873
    4. '   ' → logprob: -12.51252269744873
    5. ',input' → logprob: -13.26252269744873
    6. '=input' → logprob: -14.63752269744873
    7. '<input' → logprob: -15.01252269744873
    8. '	input' → logprob: -15.13752269744873
    9. ')' → logprob: -15.51252269744873
    10. ' ' → logprob: -15.88752269744873

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005344517063349485
    2. '()' → logprob: -5.255344390869141
    3. '()))' → logprob: -9.88034439086914
    4. '())' → logprob: -10.75534439086914
    5. '())))' → logprob: -10.88034439086914
    6. '('' → logprob: -12.00534439086914
    7. '`()' → logprob: -13.25534439086914
    8. ' ().' → logprob: -13.25534439086914
    9. '()));' → logprob: -13.38034439086914
    10. '("' → logprob: -13.63034439086914

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008615161292254925
    2. 'strip' → logprob: -4.758615016937256
    3. 'rstrip' → logprob: -14.758615493774414
    4. ' split' → logprob: -15.883615493774414
    5. '(split' → logprob: -17.008615493774414
    6. 'read' → logprob: -17.883615493774414
    7. 'spl' → logprob: -18.508615493774414
    8. '.split' → logprob: -20.008615493774414
    9. ' strip' → logprob: -20.133615493774414
    10. '_split' → logprob: -21.008615493774414

Token 63: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3540409207344055
    2. '()' → logprob: -2.1040408611297607
    3. '())' → logprob: -2.3540408611297607
    4. '())))' → logprob: -2.6040408611297607
    5. ')))' → logprob: -5.35404109954834
    6. '))' → logprob: -6.60404109954834
    7. '(' → logprob: -7.35404109954834
    8. ')' → logprob: -7.72904109954834
    9. '())))
' → logprob: -10.97904109954834
    10. '()));' → logprob: -11.22904109954834

Token 64: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6608887314796448
    2. '[' → logprob: -1.035888671875
    3. '(
' → logprob: -3.785888671875
    4. '#' → logprob: -4.285888671875
    5. 'def' → logprob: -4.410888671875
    6. ')' → logprob: -4.410888671875
    7. '<|end|>' → logprob: -4.410888671875
    8. '
' → logprob: -4.660888671875
    9. '[
' → logprob: -4.660888671875
    10. '\' → logprob: -5.035888671875

Token 65: ' mark' (ID: 1983)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.573880136013031
    2. ' check' → logprob: -1.6988801956176758
    3. ' read' → logprob: -2.198880195617676
    4. ' main' → logprob: -2.698880195617676
    5. ' is' → logprob: -3.573880195617676
    6. ' calculate' → logprob: -4.323880195617676
    7. ' find' → logprob: -4.323880195617676
    8. ' play' → logprob: -5.198880195617676
    9. ' validate' → logprob: -6.073880195617676
    10. ' compute' → logprob: -6.198880195617676

Token 66: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2045644223690033
    2. '_cell' → logprob: -1.9545644521713257
    3. '_board' → logprob: -4.454564571380615
    4. '_square' → logprob: -4.829564571380615
    5. '_row' → logprob: -5.454564571380615
    6. '_s' → logprob: -5.829564571380615
    7. '_safe' → logprob: -6.579564571380615
    8. '_x' → logprob: -6.579564571380615
    9. '_space' → logprob: -6.704564571380615
    10. '_cells' → logprob: -6.704564571380615

Token 67: '_on' (ID: 10053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004233443643897772
    2. '(row' → logprob: -6.254233360290527
    3. '(grid' → logprob: -7.754233360290527
    4. '(n' → logprob: -8.004233360290527
    5. '(number' → logprob: -8.129233360290527
    6. '(num' → logprob: -8.379233360290527
    7. '(line' → logprob: -8.754233360290527
    8. '()' → logprob: -9.004233360290527
    9. '(numbers' → logprob: -9.504233360290527
    10. '_' → logprob: -9.754233360290527

Token 68: '_grid' (ID: 34614)
  Prédit: '_board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.4554421603679657
    2. '_grid' → logprob: -1.080442190170288
    3. '_card' → logprob: -3.705442190170288
    4. '_b' → logprob: -7.080441951751709
    5. '_bo' → logprob: -8.330442428588867
    6. 'board' → logprob: -8.455442428588867
    7. '_cards' → logprob: -9.080442428588867
    8. 'grid' → logprob: -9.580442428588867
    9. '_matrix' → logprob: -9.705442428588867
    10. '_' → logprob: -9.705442428588867

Token 69: '(number' (ID: 32955)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.5774486064910889
    2. '(' → logprob: -0.8274486064910889
    3. '(row' → logprob: -6.827448844909668
    4. ' (' → logprob: -8.952448844909668
    5. '(gr' → logprob: -9.952448844909668
    6. '((' → logprob: -10.452448844909668
    7. '(rows' → logprob: -10.702448844909668
    8. '(line' → logprob: -10.702448844909668
    9. '_' → logprob: -10.827448844909668
    10. '(Grid' → logprob: -11.077448844909668

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032521432149223983
    2. ' ,' → logprob: -8.625325202941895
    3. '):' → logprob: -9.625325202941895
    4. ',row' → logprob: -10.875325202941895
    5. '(grid' → logprob: -11.250325202941895
    6. '   ' → logprob: -11.375325202941895
    7. ' ' → logprob: -11.875325202941895
    8. ')' → logprob: -12.000325202941895
    9. ',n' → logprob: -12.125325202941895
    10. ',
' → logprob: -12.750325202941895

Token 71: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.04346931725740433
    2. 'grid' → logprob: -3.1684694290161133
    3. ' grids' → logprob: -7.793469429016113
    4. ')' → logprob: -10.668469429016113
    5. '	grid' → logprob: -12.293469429016113
    6. '(grid' → logprob: -12.418469429016113
    7. '   ' → logprob: -12.793469429016113
    8. '3' → logprob: -12.793469429016113
    9. ' ' → logprob: -12.918469429016113
    10. '_grid' → logprob: -13.293469429016113

Token 72: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1631346493959427
    2. ',' → logprob: -1.9131346940994263
    3. ')' → logprob: -5.913134574890137
    4. ' ):' → logprob: -9.788134574890137
    5. ' ,' → logprob: -10.288134574890137
    6. ' ' → logprob: -10.913134574890137
    7. '):
' → logprob: -11.163134574890137
    8. ':' → logprob: -11.288134574890137
    9. '   ' → logprob: -11.288134574890137
    10. ',row' → logprob: -11.538134574890137

Token 73: ' mark' (ID: 1983)
  Prédit: ' marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.9751273989677429
    2. 'marked' → logprob: -1.1001274585723877
    3. ' marks' → logprob: -2.4751274585723877
    4. 'marks' → logprob: -3.2251274585723877
    5. ' grid' → logprob: -3.2251274585723877
    6. ' positions' → logprob: -3.6001274585723877
    7. ')' → logprob: -3.9751274585723877
    8. ' size' → logprob: -4.350127220153809
    9. ' called' → logprob: -4.850127220153809
    10. 'grid' → logprob: -4.850127220153809

Token 74: '_value' (ID: 6734)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.013073286972939968
    2. 's' → logprob: -4.388073444366455
    3. ')' → logprob: -8.763072967529297
    4. 'ing' → logprob: -9.388072967529297
    5. '):' → logprob: -9.388072967529297
    6. '_grid' → logprob: -9.388072967529297
    7. '_positions' → logprob: -9.388072967529297
    8. 'eds' → logprob: -11.638072967529297
    9. 'grid' → logprob: -11.763072967529297
    10. 'er' → logprob: -12.013072967529297

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026575818192213774
    2. ')' → logprob: -6.002657413482666
    3. '=' → logprob: -8.877657890319824
    4. ' ):' → logprob: -11.252657890319824
    5. ':' → logprob: -11.877657890319824
    6. ')):' → logprob: -11.877657890319824
    7. ',' → logprob: -12.127657890319824
    8. '):
' → logprob: -12.252657890319824
    9. ' ' → logprob: -13.627657890319824
    10. '   ' → logprob: -14.252657890319824

Token 76: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012574403546750546
    2. '   ' → logprob: -4.637574195861816
    3. ':
' → logprob: -6.387574195861816
    4. '):' → logprob: -7.637574195861816
    5. '():' → logprob: -8.887574195861816
    6. '[:]' → logprob: -9.137574195861816
    7. ' :' → logprob: -9.637574195861816
    8. '(' → logprob: -9.762574195861816
    9. '```' → logprob: -10.012574195861816
    10. '[' → logprob: -10.012574195861816

Token 77: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17527614533901215
    2. ':' → logprob: -2.050276041030884
    3. ' for' → logprob: -3.800276041030884
    4. '    ' → logprob: -5.925276279449463
    5. ' ' → logprob: -6.550276279449463
    6. ':
' → logprob: -6.675276279449463
    7. '<|end|>' → logprob: -6.925276279449463
    8. 'for' → logprob: -7.550276279449463
    9. '```' → logprob: -7.675276279449463
    10. ')' → logprob: -7.800276279449463

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4022127687931061
    2. '"""
' → logprob: -1.1522127389907837
    3. '"""' → logprob: -4.402212619781494
    4. ' """
' → logprob: -6.027212619781494
    5. '#' → logprob: -8.902213096618652
    6. '"' → logprob: -9.277213096618652
    7. '    ' → logprob: -10.152213096618652
    8. 'Checks' → logprob: -10.277213096618652
    9. ''''
' → logprob: -10.402213096618652
    10. '
' → logprob: -10.402213096618652

Token 79: ' Re' (ID: 907)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3180399537086487
    2. '   ' → logprob: -1.568039894104004
    3. 'for' → logprob: -3.568039894104004
    4. ' """' → logprob: -4.818039894104004
    5. '#' → logprob: -4.943039894104004
    6. ' ' → logprob: -4.943039894104004
    7. '    ' → logprob: -5.568039894104004
    8. ' """
' → logprob: -5.943039894104004
    9. ' #' → logprob: -6.818039894104004
    10. ' 
' → logprob: -7.068039894104004

Token 80: 'places' (ID: 29262)
  Prédit: 'marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marks' → logprob: -0.11232230812311172
    2. 'moves' → logprob: -2.4873223304748535
    3. 'places' → logprob: -4.1123223304748535
    4. 'm' → logprob: -5.8623223304748535
    5. ' marks' → logprob: -5.9873223304748535
    6. 'mark' → logprob: -8.112321853637695
    7. 'turn' → logprob: -8.487321853637695
    8. 'p' → logprob: -8.612321853637695
    9. 'move' → logprob: -9.112321853637695
    10. ' moves' → logprob: -9.612321853637695

Token 81: ' occurrences' (ID: 108073)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1077098846435547
    2. '<|end|>' → logprob: -1.3577098846435547
    3. ' a' → logprob: -2.3577098846435547
    4. ' ' → logprob: -2.6077098846435547
    5. ' any' → logprob: -2.9827098846435547
    6. ' each' → logprob: -2.9827098846435547
    7. '<|end|>' → logprob: -3.6077098846435547
    8. ' for' → logprob: -3.6077098846435547
    9. ' numbers' → logprob: -4.232709884643555
    10. ' occurrences' → logprob: -4.607709884643555

Token 82: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.001160100451670587
    2. 'of' → logprob: -7.001160144805908
    3. '   ' → logprob: -9.25115966796875
    4. ' ' → logprob: -9.62615966796875
    5. '<|end|>' → logprob: -9.87615966796875
    6. '    ' → logprob: -11.37615966796875
    7. '<|end|>' → logprob: -11.37615966796875
    8. '	of' → logprob: -12.37615966796875
    9. '  ' → logprob: -12.37615966796875
    10. ')' → logprob: -13.37615966796875

Token 83: ' a' (ID: 261)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.31331852078437805
    2. 'number' → logprob: -1.3133184909820557
    3. ' the' → logprob: -10.063318252563477
    4. ' ' → logprob: -11.688318252563477
    5. 'the' → logprob: -12.313318252563477
    6. '	number' → logprob: -14.938318252563477
    7. '_number' → logprob: -15.188318252563477
    8. '[number' → logprob: -15.563318252563477
    9. '(number' → logprob: -16.313318252563477
    10. ' a' → logprob: -16.813318252563477

Token 84: ' given' (ID: 4335)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.9528527855873108
    2. ' given' → logprob: -1.077852725982666
    3. 'number' → logprob: -1.327852725982666
    4. 'given' → logprob: -5.202852725982666
    5. ' specified' → logprob: -6.327852725982666
    6. ' specific' → logprob: -7.077852725982666
    7. 'specified' → logprob: -7.952852725982666
    8. 'specific' → logprob: -8.202853202819824
    9. ' ' → logprob: -9.202853202819824
    10. 'n' → logprob: -10.202853202819824

Token 85: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.08895506709814072
    2. 'number' → logprob: -2.4639551639556885
    3. ' `' → logprob: -12.08895492553711
    4. ' value' → logprob: -13.08895492553711
    5. ' ' → logprob: -13.21395492553711
    6. '`' → logprob: -13.33895492553711
    7. '```' → logprob: -13.83895492553711
    8. '_number' → logprob: -14.08895492553711
    9. 'value' → logprob: -14.08895492553711
    10. '<number' → logprob: -14.46395492553711

Token 86: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1104474812746048
    2. ' with' → logprob: -3.110447406768799
    3. ' on' → logprob: -3.110447406768799
    4. ' ' → logprob: -4.235447406768799
    5. 'in' → logprob: -7.360447406768799
    6. '<|end|>' → logprob: -8.735447883605957
    7. 'with' → logprob: -9.985447883605957
    8. ' within' → logprob: -10.985447883605957
    9. 'on' → logprob: -11.610447883605957
    10. '<|end|>' → logprob: -11.735447883605957

Token 87: ' the' (ID: 290)
  Prédit: ' mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.006993369664996862
    2. 'mark' → logprob: -5.506993293762207
    3. ' the' → logprob: -6.506993293762207
    4. ' ' → logprob: -6.756993293762207
    5. ' a' → logprob: -8.756993293762207
    6. 'the' → logprob: -9.881993293762207
    7. ' marked' → logprob: -10.881993293762207
    8. ''' → logprob: -11.631993293762207
    9. '_mark' → logprob: -13.006993293762207
    10. ' ' → logprob: -13.006993293762207

Token 88: ' specified' (ID: 10185)
  Prédit: ' mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.0059370906092226505
    2. 'mark' → logprob: -5.130937099456787
    3. ' marked' → logprob: -12.880936622619629
    4. ' given' → logprob: -13.255936622619629
    5. '_mark' → logprob: -13.880936622619629
    6. ' ' → logprob: -14.005936622619629
    7. ' `' → logprob: -14.255936622619629
    8. ' provided' → logprob: -14.630936622619629
    9. '<|end|>' → logprob: -15.130936622619629
    10. '(mark' → logprob: -15.380936622619629

Token 89: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.0035242869053035975
    2. ' ' → logprob: -6.253524303436279
    3. 'mark' → logprob: -7.128524303436279
    4. ' value' → logprob: -7.878524303436279
    5. ' marked' → logprob: -8.753523826599121
    6. '<|end|>' → logprob: -9.378523826599121
    7. ' `' → logprob: -10.253523826599121
    8. 'value' → logprob: -10.878523826599121
    9. '_mark' → logprob: -11.003523826599121
    10. ' number' → logprob: -11.253523826599121

Token 90: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41495415568351746
    2. '_value' → logprob: -1.1649541854858398
    3. 'ed' → logprob: -4.16495418548584
    4. ' ' → logprob: -4.78995418548584
    5. ' _' → logprob: -6.16495418548584
    6. ' value' → logprob: -8.16495418548584
    7. '  ' → logprob: -8.16495418548584
    8. '```' → logprob: -8.28995418548584
    9. '_token' → logprob: -8.66495418548584
    10. ')' → logprob: -8.66495418548584

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028271732851862907
    2. ' ' → logprob: -4.028271675109863
    3. ' on' → logprob: -5.153271675109863
    4. '   ' → logprob: -5.528271675109863
    5. 'in' → logprob: -9.528271675109863
    6. '  ' → logprob: -9.903271675109863
    7. '    ' → logprob: -10.153271675109863
    8. ' within' → logprob: -10.403271675109863
    9. ' if' → logprob: -10.653271675109863
    10. ',' → logprob: -10.903271675109863

Token 92: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0016462645726278424
    2. ' grid' → logprob: -6.626646041870117
    3. 'the' → logprob: -8.376646041870117
    4. ' ' → logprob: -10.251646041870117
    5. 'grid' → logprob: -10.626646041870117
    6. ' a' → logprob: -10.626646041870117
    7. ' each' → logprob: -12.626646041870117
    8. ' 
' → logprob: -14.501646041870117
    9. '(grid' → logprob: -14.751646041870117
    10. '    ' → logprob: -15.001646041870117

Token 93: ' provided' (ID: 5181)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.030448216944932938
    2. ' ' → logprob: -3.5304481983184814
    3. 'grid' → logprob: -7.5304484367370605
    4. '   ' → logprob: -10.530447959899902
    5. ' grids' → logprob: -10.655447959899902
    6. '  ' → logprob: -10.780447959899902
    7. '    ' → logprob: -11.155447959899902
    8. '	grid' → logprob: -12.030447959899902
    9. ':grid' → logprob: -12.030447959899902
    10. '(grid' → logprob: -12.155447959899902

Token 94: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.006175144575536251
    2. ' ' → logprob: -5.2561750411987305
    3. 'grid' → logprob: -7.1311750411987305
    4. '<|end|>' → logprob: -10.88117504119873
    5. ' 
' → logprob: -11.00617504119873
    6. ' row' → logprob: -11.38117504119873
    7. '(grid' → logprob: -11.38117504119873
    8. '	grid' → logprob: -11.63117504119873
    9. '    ' → logprob: -11.88117504119873
    10. ':grid' → logprob: -12.00617504119873

Token 95: ' rows' (ID: 13585)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9342434406280518
    2. '   ' → logprob: -1.0592434406280518
    3. '):' → logprob: -1.9342434406280518
    4. ',' → logprob: -2.6842434406280518
    5. '.' → logprob: -3.5592434406280518
    6. '):
' → logprob: -5.184243202209473
    7. ''s' → logprob: -5.934243202209473
    8. ',
' → logprob: -6.309243202209473
    9. ').' → logprob: -6.434243202209473
    10. ' ' → logprob: -6.434243202209473

Token 96: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18170307576656342
    2. '   ' → logprob: -2.6817030906677246
    3. ')' → logprob: -2.9317030906677246
    4. ',' → logprob: -3.5567030906677246
    5. '):
' → logprob: -4.931703090667725
    6. '[' → logprob: -5.931703090667725
    7. '.' → logprob: -6.181703090667725
    8. ':' → logprob: -6.431703090667725
    9. ' ' → logprob: -7.681703090667725
    10. 'def' → logprob: -7.931703090667725

Token 97: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15675780177116394
    2. ')' → logprob: -2.2817578315734863
    3. 'def' → logprob: -3.7817578315734863
    4. '
' → logprob: -4.531757831573486
    5. '  
' → logprob: -6.656757831573486
    6. '    
' → logprob: -6.656757831573486
    7. '    ' → logprob: -7.406757831573486
    8. '```' → logprob: -7.406757831573486
    9. ' 
' → logprob: -7.531757831573486
    10. ' ' → logprob: -7.531757831573486

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12306611239910126
    2. ' rows' → logprob: -2.9980661869049072
    3. ' grid' → logprob: -3.8730661869049072
    4. ')' → logprob: -3.9980661869049072
    5. ' ' → logprob: -4.998065948486328
    6. ' )' → logprob: -5.498065948486328
    7. 'def' → logprob: -5.623065948486328
    8. '):
' → logprob: -6.123065948486328
    9. 'rows' → logprob: -6.623065948486328
    10. '    ' → logprob: -6.623065948486328

Token 99: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6973984837532043
    2. ' for' → logprob: -0.6973984837532043
    3. 'for' → logprob: -5.572398662567139
    4. ' rows' → logprob: -8.32239818572998
    5. '    ' → logprob: -9.82239818572998
    6. 'def' → logprob: -9.94739818572998
    7. '```' → logprob: -10.07239818572998
    8. ' def' → logprob: -10.69739818572998
    9. 'rows' → logprob: -12.07239818572998
    10. ' ' → logprob: -12.44739818572998

Token 100: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8462496995925903
    2. ':' → logprob: -1.4712496995925903
    3. '):' → logprob: -1.5962496995925903
    4. ',' → logprob: -2.721249580383301
    5. ')' → logprob: -3.346249580383301
    6. '):
' → logprob: -3.971249580383301
    7. '=[]' → logprob: -5.346249580383301
    8. '[' → logprob: -5.846249580383301
    9. '<|end|>' → logprob: -6.221249580383301
    10. 'def' → logprob: -6.221249580383301

Token 101: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09381186217069626
    2. '    ' → logprob: -2.5938117504119873
    3. ' ' → logprob: -5.343811988830566
    4. '       ' → logprob: -5.968811988830566
    5. ')' → logprob: -6.093811988830566
    6. 'n' → logprob: -6.718811988830566
    7. '```' → logprob: -6.968811988830566
    8. '  ' → logprob: -7.593811988830566
    9. ''' → logprob: -7.968811988830566
    10. '[' → logprob: -8.093811988830566

Token 102: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' (adapté à ' number') → logprob: -0.36441388726234436
    2. ' number' → logprob: -1.364413857460022
    3. ' grid' → logprob: -3.6144139766693115
    4. 'grid' → logprob: -3.9894139766693115
    5. '   ' → logprob: -5.489413738250732
    6. 'rows' → logprob: -9.98941421508789
    7. 'numbers' → logprob: -10.11441421508789
    8. ' numbers' → logprob: -10.23941421508789
    9. ' mark' → logprob: -10.36441421508789
    10. 'num' → logprob: -10.48941421508789

Token 103: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006250730250030756
    2. ' ,' → logprob: -5.131250858306885
    3. '):' → logprob: -8.881250381469727
    4. ')' → logprob: -10.006250381469727
    5. '   ' → logprob: -10.256250381469727
    6. '<|end|>' → logprob: -10.506250381469727
    7. ',
' → logprob: -10.881250381469727
    8. '=' → logprob: -11.131250381469727
    9. ' ' → logprob: -11.631250381469727
    10. ',int' → logprob: -11.756250381469727

Token 104: 'int' (ID: 491)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8072092533111572
    2. 'int' → logprob: -0.8072092533111572
    3. ' int' → logprob: -3.4322092533111572
    4. ' ,' → logprob: -3.5572092533111572
    5. '   ' → logprob: -4.307209014892578
    6. ',int' → logprob: -4.682209014892578
    7. ' grid' → logprob: -4.807209014892578
    8. 'list' → logprob: -4.932209014892578
    9. ' list' → logprob: -5.557209014892578
    10. 'grid' → logprob: -5.932209014892578

Token 105: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03440985083580017
    2. '):' → logprob: -3.409409761428833
    3. '   ' → logprob: -8.159409523010254
    4. '):
' → logprob: -8.659409523010254
    5. ')' → logprob: -9.034409523010254
    6. ' ):' → logprob: -9.409409523010254
    7. ' ,' → logprob: -9.659409523010254
    8. '),' → logprob: -11.284409523010254
    9. ',
' → logprob: -12.159409523010254
    10. ' ' → logprob: -12.659409523010254

Token 106: ' The' (ID: 623)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8186736106872559
    2. ' grid' → logprob: -0.9436736106872559
    3. '    ' → logprob: -2.068673610687256
    4. '   ' → logprob: -4.818673610687256
    5. ')' → logprob: -4.818673610687256
    6. ' list' → logprob: -4.943673610687256
    7. ' number' → logprob: -5.068673610687256
    8. 'grid' → logprob: -5.318673610687256
    9. '<|end|>' → logprob: -6.818673610687256
    10. ' The' → logprob: -7.318673610687256

Token 107: ' number' (ID: 2086)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.41158291697502136
    2. ' ' → logprob: -1.7865829467773438
    3. ' number' → logprob: -2.0365829467773438
    4. ' current' → logprob: -4.286582946777344
    5. ' row' → logprob: -5.036582946777344
    6. 'grid' → logprob: -5.536582946777344
    7. 'number' → logprob: -5.661582946777344
    8. ' rows' → logprob: -5.661582946777344
    9. ' value' → logprob: -6.286582946777344
    10. ')' → logprob: -7.286582946777344

Token 108: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.021520670503377914
    2. ',' → logprob: -5.146520614624023
    3. ')' → logprob: -5.271520614624023
    4. ' ,' → logprob: -5.896520614624023
    5. 'to' → logprob: -6.146520614624023
    6. '<|end|>' → logprob: -6.396520614624023
    7. '   ' → logprob: -6.646520614624023
    8. ' in' → logprob: -7.271520614624023
    9. ' ' → logprob: -7.396520614624023
    10. ' )' → logprob: -7.521520614624023

Token 109: ' search' (ID: 3684)
  Prédit: ' mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.2135763019323349
    2. ' be' → logprob: -2.463576316833496
    3. ' replace' → logprob: -2.838576316833496
    4. 'mark' → logprob: -3.963576316833496
    5. ' find' → logprob: -4.338576316833496
    6. 'replace' → logprob: -4.588576316833496
    7. ' search' → logprob: -5.338576316833496
    8. ' marks' → logprob: -7.713576316833496
    9. ' check' → logprob: -7.963576316833496
    10. 'find' → logprob: -8.088576316833496

Token 110: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02036646008491516
    2. 'for' → logprob: -4.145366668701172
    3. ')' → logprob: -5.770366668701172
    4. ' )' → logprob: -7.770366668701172
    5. '   ' → logprob: -7.895366668701172
    6. '<|end|>' → logprob: -8.270366668701172
    7. ' ' → logprob: -10.145366668701172
    8. ' and' → logprob: -10.395366668701172
    9. '_for' → logprob: -10.770366668701172
    10. ' in' → logprob: -11.145366668701172

Token 111: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8498832583427429
    2. ' )' → logprob: -1.5998833179473877
    3. ' in' → logprob: -1.7248833179473877
    4. ',' → logprob: -1.9748833179473877
    5. '   ' → logprob: -3.5998833179473877
    6. ' ,' → logprob: -4.224883079528809
    7. '<|end|>' → logprob: -4.974883079528809
    8. ' ' → logprob: -6.849883079528809
    9. ',
' → logprob: -7.349883079528809
    10. '<|end|>' → logprob: -7.974883079528809

Token 112: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.11843299120664597
    2. ' replace' → logprob: -2.9934329986572266
    3. 'mark' → logprob: -3.3684329986572266
    4. 'replace' → logprob: -3.6184329986572266
    5. ' marks' → logprob: -8.743432998657227
    6. ')' → logprob: -10.118432998657227
    7. '   ' → logprob: -10.868432998657227
    8. ' to' → logprob: -11.243432998657227
    9. ' ' → logprob: -11.368432998657227
    10. '    ' → logprob: -11.993432998657227

Token 113: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26310524344444275
    2. ' in' → logprob: -1.8881052732467651
    3. ')' → logprob: -3.3881051540374756
    4. ',' → logprob: -3.6381051540374756
    5. '):' → logprob: -5.013105392456055
    6. '),' → logprob: -5.513105392456055
    7. '<|end|>' → logprob: -5.888105392456055
    8. '):
' → logprob: -6.013105392456055
    9. '       ' → logprob: -6.888105392456055
    10. '.' → logprob: -7.263105392456055

Token 114: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.019408300518989563
    2. ' each' → logprob: -4.519408226013184
    3. ' grid' → logprob: -4.894408226013184
    4. 'the' → logprob: -7.394408226013184
    5. 'grid' → logprob: -9.144408226013184
    6. 'each' → logprob: -9.394408226013184
    7. ')' → logprob: -11.894408226013184
    8. ' )' → logprob: -12.019408226013184
    9. ' any' → logprob: -12.269408226013184
    10. ' grids' → logprob: -12.394408226013184

Token 115: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.01623072475194931
    2. 'grid' → logprob: -4.266230583190918
    3. ' grids' → logprob: -6.891230583190918
    4. '   ' → logprob: -7.766230583190918
    5. ' rows' → logprob: -7.766230583190918
    6. ' ' → logprob: -9.641230583190918
    7. '    ' → logprob: -10.016230583190918
    8. 'rows' → logprob: -10.891230583190918
    9. ')' → logprob: -10.891230583190918
    10. ':grid' → logprob: -11.641230583190918

Token 116: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8767637610435486
    2. ')' → logprob: -1.1267638206481934
    3. '):' → logprob: -1.7517638206481934
    4. ',' → logprob: -2.5017638206481934
    5. '):
' → logprob: -6.251763820648193
    6. '       ' → logprob: -7.126763820648193
    7. '),' → logprob: -7.251763820648193
    8. ' )' → logprob: -8.501763343811035
    9. ',
' → logprob: -9.001763343811035
    10. ')
' → logprob: -9.126763343811035

Token 117: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013377433642745018
    2. '    
' → logprob: -7.25133752822876
    3. '       ' → logprob: -8.001338005065918
    4. '
' → logprob: -8.626338005065918
    5. '    ' → logprob: -10.501338005065918
    6. '        
' → logprob: -10.626338005065918
    7. '   
' → logprob: -11.501338005065918
    8. '```' → logprob: -11.876338005065918
    9. 'def' → logprob: -12.001338005065918
    10. ')' → logprob: -12.126338005065918

Token 118: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.2573644518852234
    2. 'grid' (adapté à ' grid') → logprob: -2.007364511489868
    3. '   ' → logprob: -2.382364511489868
    4. 'rows' → logprob: -9.632364273071289
    5. ' rows' → logprob: -9.632364273071289
    6. '	grid' → logprob: -10.257364273071289
    7. '       ' → logprob: -10.507364273071289
    8. ' ' → logprob: -10.882364273071289
    9. ' list' → logprob: -11.882364273071289
    10. '  ' → logprob: -12.632364273071289

Token 119: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4128556251525879
    2. ',' → logprob: -1.787855625152588
    3. ':' → logprob: -2.037855625152588
    4. '_rows' → logprob: -3.787855625152588
    5. ' ):' → logprob: -5.662855625152588
    6. '[' → logprob: -6.037855625152588
    7. ' ' → logprob: -6.037855625152588
    8. ')' → logprob: -6.162855625152588
    9. ' ,' → logprob: -6.287855625152588
    10. '   ' → logprob: -6.287855625152588

Token 120: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.035226009786129
    2. ' list' → logprob: -3.6602261066436768
    3. ')' → logprob: -5.035225868225098
    4. 'List' → logprob: -6.410225868225098
    5. '[list' → logprob: -8.410225868225098
    6. '   ' → logprob: -8.785225868225098
    7. ':list' → logprob: -9.410225868225098
    8. '):' → logprob: -9.910225868225098
    9. ' List' → logprob: -10.035225868225098
    10. ' )' → logprob: -10.160225868225098

Token 121: ' of' (ID: 328)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01564670354127884
    2. ')' → logprob: -4.765646934509277
    3. ':' → logprob: -5.890646934509277
    4. '[' → logprob: -6.515646934509277
    5. '):
' → logprob: -6.640646934509277
    6. ' of' → logprob: -8.015646934509277
    7. '   ' → logprob: -8.265646934509277
    8. '[int' → logprob: -8.265646934509277
    9. '[list' → logprob: -8.890646934509277
    10. 'of' → logprob: -9.015646934509277

Token 122: ' lists' (ID: 19471)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03295722231268883
    2. ' list' → logprob: -4.032957077026367
    3. ' lists' → logprob: -4.657957077026367
    4. 'lists' → logprob: -5.282957077026367
    5. 'int' → logprob: -9.407957077026367
    6. ')' → logprob: -10.907957077026367
    7. '[list' → logprob: -11.157957077026367
    8. '   ' → logprob: -11.657957077026367
    9. '	list' → logprob: -13.282957077026367
    10. 'List' → logprob: -13.407957077026367

Token 123: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17717479169368744
    2. '[int' → logprob: -2.3021748065948486
    3. ' of' → logprob: -3.4271748065948486
    4. '):
' → logprob: -3.6771748065948486
    5. ')' → logprob: -6.4271745681762695
    6. '   ' → logprob: -6.8021745681762695
    7. '<int' → logprob: -7.5521745681762695
    8. '[list' → logprob: -8.05217456817627
    9. 'of' → logprob: -8.30217456817627
    10. ':' → logprob: -8.55217456817627

Token 124: ' The' (ID: 623)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1846817284822464
    2. 'list' → logprob: -1.80968177318573
    3. '   ' → logprob: -7.3096818923950195
    4. ' The' → logprob: -7.3096818923950195
    5. 'List' → logprob: -7.5596818923950195
    6. 'The' → logprob: -7.8096818923950195
    7. '```' → logprob: -7.8096818923950195
    8. ' for' → logprob: -7.9346818923950195
    9. '[list' → logprob: -8.05968189239502
    10. ' lists' → logprob: -8.18468189239502

Token 125: ' game' (ID: 2813)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.29644376039505005
    2. ' rows' → logprob: -1.4214437007904053
    3. ' ' → logprob: -4.921443939208984
    4. 'rows' → logprob: -5.921443939208984
    5. ' grids' → logprob: -6.296443939208984
    6. 'grid' → logprob: -6.796443939208984
    7. ' current' → logprob: -7.296443939208984
    8. ' for' → logprob: -7.546443939208984
    9. ' next' → logprob: -8.671443939208984
    10. ' lists' → logprob: -9.296443939208984

Token 126: ' grid' (ID: 10586)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6271191239356995
    2. ' of' → logprob: -1.6271190643310547
    3. ' grid' → logprob: -2.0021190643310547
    4. ' rows' → logprob: -2.8771190643310547
    5. ' ' → logprob: -3.0021190643310547
    6. ' row' → logprob: -5.502119064331055
    7. '[row' → logprob: -5.627119064331055
    8. ')' → logprob: -5.627119064331055
    9. ' to' → logprob: -5.752119064331055
    10. '_rows' → logprob: -6.127119064331055

Token 127: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9478561878204346
    2. ' of' → logprob: -1.5728561878204346
    3. '<|end|>' → logprob: -1.5728561878204346
    4. ',' → logprob: -2.8228561878204346
    5. '):' → logprob: -2.8228561878204346
    6. ')' → logprob: -2.8228561878204346
    7. '):
' → logprob: -5.3228559494018555
    8. '<|end|>' → logprob: -5.3228559494018555
    9. ':' → logprob: -5.9478559494018555
    10. '[' → logprob: -6.8228559494018555

Token 128: '3' (ID: 18)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38200801610946655
    2. ' of' → logprob: -2.0070080757141113
    3. ' list' → logprob: -2.3820080757141113
    4. 'list' → logprob: -3.2570080757141113
    5. ' lists' → logprob: -3.8820080757141113
    6. '[list' → logprob: -4.382008075714111
    7. '   ' → logprob: -4.632008075714111
    8. 'def' → logprob: -6.757008075714111
    9. '```' → logprob: -7.007008075714111
    10. '3' → logprob: -7.132008075714111

Token 129: ' rows' (ID: 13585)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.05440867319703102
    2. '   ' → logprob: -3.8044087886810303
    3. ')' → logprob: -4.054408550262451
    4. 'x' → logprob: -4.929408550262451
    5. ' x' → logprob: -5.804408550262451
    6. ' lists' → logprob: -7.179408550262451
    7. 'of' → logprob: -7.554408550262451
    8. ' ' → logprob: -7.929408550262451
    9. ' rows' → logprob: -7.929408550262451
    10. '[' → logprob: -8.30440902709961

Token 130: ',' (ID: 11)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6900226473808289
    2. ')' → logprob: -1.4400227069854736
    3. ',' → logprob: -1.4400227069854736
    4. '   ' → logprob: -4.1900224685668945
    5. ' and' → logprob: -6.5650224685668945
    6. '):
' → logprob: -6.5650224685668945
    7. '):' → logprob: -6.9400224685668945
    8. '),' → logprob: -7.0650224685668945
    9. ' each' → logprob: -7.1900224685668945
    10. 'of' → logprob: -7.1900224685668945

Token 131: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.0901569202542305
    2. 'each' → logprob: -2.5901570320129395
    3. ' lists' → logprob: -5.5901570320129395
    4. ')' → logprob: -5.7151570320129395
    5. '3' → logprob: -5.8401570320129395
    6. ' list' → logprob: -8.340156555175781
    7. ' ' → logprob: -8.465156555175781
    8. 'Each' → logprob: -8.465156555175781
    9. 'list' → logprob: -8.965156555175781
    10. ' of' → logprob: -9.465156555175781

Token 132: ' is' (ID: 382)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.020460018888115883
    2. ' containing' → logprob: -4.52046012878418
    3. 'of' → logprob: -5.14546012878418
    4. ' is' → logprob: -6.77046012878418
    5. ' ' → logprob: -7.39546012878418
    6. ' with' → logprob: -7.52046012878418
    7. ')' → logprob: -7.77046012878418
    8. ' a' → logprob: -8.52046012878418
    9. '   ' → logprob: -8.64546012878418
    10. ' being' → logprob: -9.27046012878418

Token 133: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17211830615997314
    2. 'a' → logprob: -1.9221183061599731
    3. ' list' → logprob: -4.922118186950684
    4. 'list' → logprob: -5.422118186950684
    5. ' lists' → logprob: -9.422118186950684
    6. ' ' → logprob: -10.922118186950684
    7. '[]' → logprob: -12.422118186950684
    8. '   ' → logprob: -12.672118186950684
    9. 'lists' → logprob: -12.797118186950684
    10. ' an' → logprob: -13.422118186950684

Token 134: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.20141704380512238
    2. 'list' → logprob: -1.701417088508606
    3. ' ' → logprob: -13.576416969299316
    4. 'int' → logprob: -13.951416969299316
    5. '   ' → logprob: -14.326416969299316
    6. '3' → logprob: -14.951416969299316
    7. '```' → logprob: -15.701416969299316
    8. ')' → logprob: -16.326417922973633
    9. '	list' → logprob: -16.576417922973633
    10. '    ' → logprob: -16.826417922973633

Token 135: ').
' (ID: 6294)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0004014753212686628
    2. 'of' → logprob: -8.500401496887207
    3. '[int' → logprob: -8.750401496887207
    4. ')' → logprob: -10.625401496887207
    5. '   ' → logprob: -11.875401496887207
    6. '[' → logprob: -12.375401496887207
    7. '	of' → logprob: -13.500401496887207
    8. '<|end|>' → logprob: -13.625401496887207
    9. '<int' → logprob: -14.625401496887207
    10. '  ' → logprob: -15.000401496887207

Token 136: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007736292202025652
    2. '    
' → logprob: -5.8827362060546875
    3. ')' → logprob: -6.5077362060546875
    4. '<|end|>' → logprob: -7.1327362060546875
    5. '```' → logprob: -7.3827362060546875
    6. '       ' → logprob: -7.5077362060546875
    7. '
' → logprob: -7.7577362060546875
    8. '    ' → logprob: -8.007736206054688
    9. 'def' → logprob: -9.132736206054688
    10. '   
' → logprob: -9.257736206054688

Token 137: ' mark' (ID: 1983)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06447659432888031
    2. ')' → logprob: -3.814476490020752
    3. 'rows' → logprob: -4.814476490020752
    4. 'int' → logprob: -4.939476490020752
    5. ' rows' → logprob: -5.314476490020752
    6. '):
' → logprob: -5.939476490020752
    7. '```' → logprob: -6.314476490020752
    8. '
' → logprob: -6.439476490020752
    9. ' None' → logprob: -6.689476490020752
    10. 'None' → logprob: -6.689476490020752

Token 138: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.357806533575058
    2. 'ed' → logprob: -1.2328065633773804
    3. '_' → logprob: -4.85780668258667
    4. 's' → logprob: -6.98280668258667
    5. '_values' → logprob: -9.232806205749512
    6. '="_' → logprob: -9.607806205749512
    7. ')' → logprob: -9.732806205749512
    8. ')_' → logprob: -9.857806205749512
    9. '=' → logprob: -10.107806205749512
    10. 'd' → logprob: -10.107806205749512

Token 139: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03386525437235832
    2. '(int' → logprob: -4.033865451812744
    3. ')' → logprob: -5.658865451812744
    4. ' (' → logprob: -5.783865451812744
    5. '=int' → logprob: -5.908865451812744
    6. ':' → logprob: -6.408865451812744
    7. '=' → logprob: -6.408865451812744
    8. '):
' → logprob: -6.533865451812744
    9. ':int' → logprob: -7.033865451812744
    10. 'int' → logprob: -8.533864974975586

Token 140: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3280583620071411
    2. '-' → logprob: -1.4530583620071411
    3. ')' → logprob: -3.9530582427978516
    4. '1' → logprob: -4.578058242797852
    5. '0' → logprob: -5.078058242797852
    6. ' -' → logprob: -5.203058242797852
    7. '2' → logprob: -7.328058242797852
    8. ' ' → logprob: -7.578058242797852
    9. 'str' → logprob: -7.578058242797852
    10. '))' → logprob: -7.578058242797852

Token 141: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024083849042654037
    2. ')):' → logprob: -4.024083614349365
    3. ')' → logprob: -5.524083614349365
    4. '):
' → logprob: -6.899083614349365
    5. '))' → logprob: -7.649083614349365
    6. ' ):' → logprob: -8.524084091186523
    7. ')):
' → logprob: -9.024084091186523
    8. '=' → logprob: -9.899084091186523
    9. ' ' → logprob: -11.149084091186523
    10. ',' → logprob: -11.274084091186523

Token 142: ' The' (ID: 623)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5632282495498657
    2. ')' → logprob: -1.9382282495498657
    3. ' )' → logprob: -2.688228130340576
    4. ' number' → logprob: -3.313228130340576
    5. '1' → logprob: -3.563228130340576
    6. ' The' → logprob: -3.563228130340576
    7. '<|end|>' → logprob: -3.688228130340576
    8. 'The' → logprob: -3.813228130340576
    9. 'number' → logprob: -3.813228130340576
    10. '   ' → logprob: -5.063228130340576

Token 143: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.11967910081148148
    2. ' replacement' → logprob: -3.4946792125701904
    3. 'value' → logprob: -3.6196792125701904
    4. ' number' → logprob: -3.7446792125701904
    5. ' ' → logprob: -4.869678974151611
    6. 'replacement' → logprob: -5.119678974151611
    7. '<|end|>' → logprob: -5.244678974151611
    8. ' token' → logprob: -5.369678974151611
    9. ' mark' → logprob: -5.994678974151611
    10. ' new' → logprob: -6.119678974151611

Token 144: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8201476335525513
    2. '=' → logprob: -0.9451476335525513
    3. ')' → logprob: -2.4451475143432617
    4. ' =' → logprob: -3.6951475143432617
    5. ' that' → logprob: -4.070147514343262
    6. ' ' → logprob: -4.320147514343262
    7. '   ' → logprob: -4.320147514343262
    8. '<|end|>' → logprob: -5.070147514343262
    9. ' )' → logprob: -6.070147514343262
    10. ' for' → logprob: -6.320147514343262

Token 145: ' replace' (ID: 13284)
  Prédit: ' replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' replace' → logprob: -0.21060705184936523
    2. 'replace' → logprob: -1.7106070518493652
    3. ' mark' → logprob: -4.960607051849365
    4. '_replace' → logprob: -7.085607051849365
    5. ' be' → logprob: -7.210607051849365
    6. 'mark' → logprob: -8.335607528686523
    7. ')' → logprob: -9.585607528686523
    8. ' substitute' → logprob: -9.585607528686523
    9. ' ' → logprob: -9.835607528686523
    10. ' use' → logprob: -10.210607528686523

Token 146: ' matched' (ID: 31366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44223684072494507
    2. ' the' → logprob: -2.06723690032959
    3. ' in' → logprob: -2.69223690032959
    4. ' )' → logprob: -2.69223690032959
    5. ' with' → logprob: -3.06723690032959
    6. ' occurrences' → logprob: -4.06723690032959
    7. '<|end|>' → logprob: -4.31723690032959
    8. ' ' → logprob: -5.81723690032959
    9. ',' → logprob: -5.94223690032959
    10. ' for' → logprob: -5.94223690032959

Token 147: ' numbers' (ID: 8663)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.6479491591453552
    2. ' numbers' → logprob: -0.8979491591453552
    3. 'number' → logprob: -3.02294921875
    4. ' occurrences' → logprob: -4.39794921875
    5. 'numbers' → logprob: -5.89794921875
    6. ')' → logprob: -6.14794921875
    7. ' elements' → logprob: -6.39794921875
    8. ' entries' → logprob: -7.02294921875
    9. ' cells' → logprob: -8.02294921875
    10. ' ' → logprob: -8.64794921875

Token 148: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5989124178886414
    2. ' with' → logprob: -0.9739124178886414
    3. '):' → logprob: -3.598912477493286
    4. ',' → logprob: -3.973912477493286
    5. 'with' → logprob: -4.848912239074707
    6. ' in' → logprob: -5.223912239074707
    7. ' )' → logprob: -5.223912239074707
    8. '):
' → logprob: -5.973912239074707
    9. '))' → logprob: -6.348912239074707
    10. ' ' → logprob: -7.098912239074707

Token 149: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03910016641020775
    2. '):
' → logprob: -4.039100170135498
    3. ')' → logprob: -4.164100170135498
    4. '   ' → logprob: -5.664100170135498
    5. ',' → logprob: -7.789100170135498
    6. ').' → logprob: -8.28909969329834
    7. ')):' → logprob: -8.41409969329834
    8. ' ):' → logprob: -8.53909969329834
    9. '.' → logprob: -8.91409969329834
    10. '):

' → logprob: -9.28909969329834

Token 150: 'ind' (ID: 521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4805322289466858
    2. '0' → logprob: -1.480532169342041
    3. '-' → logprob: -2.605532169342041
    4. '))' → logprob: -3.605532169342041
    5. ' -' → logprob: -3.855532169342041
    6. '   ' → logprob: -4.730532169342041
    7. '1' → logprob: -5.480532169342041
    8. ' ' → logprob: -5.605532169342041
    9. ').' → logprob: -5.855532169342041
    10. '):' → logprob: -5.980532169342041

Token 151: 'icating' (ID: 131998)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.12169511616230011
    2. 'ented' → logprob: -2.371695041656494
    3. 'ent' → logprob: -3.871695041656494
    4. 'entation' → logprob: -8.121695518493652
    5. 'ext' → logprob: -10.496695518493652
    6. 'icated' → logprob: -10.871695518493652
    7. 'e' → logprob: -11.246695518493652
    8. 'expl' → logprob: -11.621695518493652
    9. 'eed' → logprob: -11.621695518493652
    10. 'ed' → logprob: -11.871695518493652

Token 152: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.02052367478609085
    2. 'a' → logprob: -5.020523548126221
    3. ' the' → logprob: -5.145523548126221
    4. ' that' → logprob: -5.145523548126221
    5. ' marked' → logprob: -6.395523548126221
    6. 'marked' → logprob: -8.520524024963379
    7. ' ' → logprob: -10.395524024963379
    8. '   ' → logprob: -10.520524024963379
    9. ' )' → logprob: -10.520524024963379
    10. ')' → logprob: -10.645524024963379

Token 153: ' mark' (ID: 1983)
  Prédit: ' marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.3797192871570587
    2. ' mark' → logprob: -1.8797192573547363
    3. 'marked' → logprob: -2.0047192573547363
    4. 'mark' → logprob: -3.6297192573547363
    5. ' marker' → logprob: -7.879719257354736
    6. ' "' → logprob: -8.504719734191895
    7. ' ' → logprob: -8.754719734191895
    8. ' hit' → logprob: -8.754719734191895
    9. 'marker' → logprob: -8.754719734191895
    10. ')' → logprob: -8.879719734191895

Token 154: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6466748118400574
    2. ').' → logprob: -0.7716748118400574
    3. 'ed' → logprob: -4.396674633026123
    4. '   ' → logprob: -7.271674633026123
    5. ' on' → logprob: -7.771674633026123
    6. ' in' → logprob: -8.896675109863281
    7. 'd' → logprob: -9.021675109863281
    8. ' ' → logprob: -10.146675109863281
    9. ' to' → logprob: -10.396675109863281
    10. ' ).' → logprob: -10.896675109863281

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004896669648587704
    2. ')' → logprob: -5.754896640777588
    3. '    
' → logprob: -7.379896640777588
    4. '
' → logprob: -7.504896640777588
    5. '):
' → logprob: -8.004897117614746
    6. ')
' → logprob: -9.629897117614746
    7. '  
' → logprob: -10.254897117614746
    8. 'def' → logprob: -10.629897117614746
    9. '"""' → logprob: -10.879897117614746
    10. '):' → logprob: -11.129897117614746

Token 156: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002918757265433669
    2. '
' → logprob: -6.877918720245361
    3. ')' → logprob: -7.127918720245361
    4. '    
' → logprob: -7.127918720245361
    5. '):
' → logprob: -9.25291919708252
    6. ')
' → logprob: -10.00291919708252
    7. '  
' → logprob: -10.37791919708252
    8. ' for' → logprob: -10.50291919708252
    9. 'for' → logprob: -10.87791919708252
    10. '   
' → logprob: -11.00291919708252

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002363159554079175
    2. ' for' → logprob: -6.502363204956055
    3. 'for' → logprob: -8.002363204956055
    4. '
' → logprob: -8.252363204956055
    5. '    
' → logprob: -8.502363204956055
    6. '	for' → logprob: -10.502363204956055
    7. '    ' → logprob: -12.002363204956055
    8. 'def' → logprob: -12.002363204956055
    9. '```' → logprob: -12.127363204956055
    10. ' 
' → logprob: -12.752363204956055

Token 158: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1927274465560913
    2. ' for' → logprob: -1.9427274465560913
    3. '   ' → logprob: -3.442727565765381
    4. '```' → logprob: -13.692727088928223
    5. '	for' → logprob: -13.817727088928223
    6. 'found' → logprob: -14.442727088928223
    7. '  ' → logprob: -15.942727088928223
    8. ' ' → logprob: -15.942727088928223
    9. 'def' → logprob: -16.19272804260254
    10. '
' → logprob: -16.31772804260254

Token 159: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.05825779587030411
    2. ' i' → logprob: -3.058257818222046
    3. 'row' → logprob: -4.808257579803467
    4. 'i' → logprob: -6.558257579803467
    5. ' ' → logprob: -10.433258056640625
    6. ' r' → logprob: -11.808258056640625
    7. '   ' → logprob: -12.933258056640625
    8. 'r' → logprob: -13.433258056640625
    9. '	row' → logprob: -13.558258056640625
    10. '  ' → logprob: -14.933258056640625

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009000850841403008
    2. 'in' → logprob: -4.759000778198242
    3. ' ' → logprob: -8.009000778198242
    4. '   ' → logprob: -11.259000778198242
    5. ' i' → logprob: -11.634000778198242
    6. '  ' → logprob: -11.884000778198242
    7. '_in' → logprob: -12.384000778198242
    8. ',' → logprob: -12.509000778198242
    9. '    ' → logprob: -12.634000778198242
    10. '	in' → logprob: -12.634000778198242

Token 161: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.5760555863380432
    2. ' grid' → logprob: -0.8260555863380432
    3. ' range' → logprob: -9.451055526733398
    4. 'range' → logprob: -10.326055526733398
    5. '	grid' → logprob: -13.076055526733398
    6. '(grid' → logprob: -13.451055526733398
    7. ':grid' → logprob: -14.326055526733398
    8. ' ' → logprob: -15.201055526733398
    9. '   ' → logprob: -16.3260555267334
    10. '.grid' → logprob: -16.4510555267334

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003192578151356429
    2. ':
' → logprob: -8.375319480895996
    3. '):' → logprob: -9.625319480895996
    4. ' :' → logprob: -11.500319480895996
    5. '   ' → logprob: -11.750319480895996
    6. ' in' → logprob: -13.750319480895996
    7. ':**' → logprob: -13.875319480895996
    8. ')' → logprob: -14.875319480895996
    9. '[' → logprob: -14.875319480895996
    10. '):
' → logprob: -14.875319480895996

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0390271358191967
    2. ' for' → logprob: -3.289027214050293
    3. '   ' → logprob: -7.289027214050293
    4. 'for' → logprob: -8.664027214050293
    5. ' if' → logprob: -9.789027214050293
    6. '    ' → logprob: -9.914027214050293
    7. '     ' → logprob: -12.289027214050293
    8. ',' → logprob: -13.164027214050293
    9. '      ' → logprob: -13.164027214050293
    10. '	   ' → logprob: -13.414027214050293

Token 164: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16080071032047272
    2. 'for' (adapté à ' for') → logprob: -1.9108006954193115
    3. '   ' → logprob: -7.535800933837891
    4. '    ' → logprob: -11.03580093383789
    5. ' ' → logprob: -11.53580093383789
    6. '	for' → logprob: -11.66080093383789
    7. '       ' → logprob: -12.03580093383789
    8. '  ' → logprob: -14.28580093383789
    9. '           ' → logprob: -14.66080093383789
    10. ' range' → logprob: -14.91080093383789

Token 165: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0077019804157316685
    2. 'i' → logprob: -5.007701873779297
    3. ' idx' → logprob: -7.257701873779297
    4. ' j' → logprob: -8.632701873779297
    5. ' index' → logprob: -10.007701873779297
    6. 'j' → logprob: -10.257701873779297
    7. 'idx' → logprob: -11.382701873779297
    8. 'index' → logprob: -12.132701873779297
    9. ' col' → logprob: -12.382701873779297
    10. ' ' → logprob: -13.757701873779297

Token 166: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012750492431223392
    2. ',' → logprob: -4.762750625610352
    3. 'in' → logprob: -5.512750625610352
    4. ' ' → logprob: -9.637750625610352
    5. ' ,' → logprob: -11.387750625610352
    6. 'n' → logprob: -11.637750625610352
    7. '	in' → logprob: -12.887750625610352
    8. ' i' → logprob: -13.762750625610352
    9. ',in' → logprob: -13.887750625610352
    10. 's' → logprob: -15.012750625610352

Token 167: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868711292743683
    2. ' range' → logprob: -1.136871099472046
    3. ' ' → logprob: -17.136871337890625
    4. '	range' → logprob: -17.136871337890625
    5. '(range' → logprob: -17.761871337890625
    6. '   ' → logprob: -17.761871337890625
    7. 'row' → logprob: -18.511871337890625
    8. '  ' → logprob: -18.636871337890625
    9. ' xrange' → logprob: -19.011871337890625
    10. 'ange' → logprob: -19.011871337890625

Token 168: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.003329925937578082
    2. '(' → logprob: -5.753329753875732
    3. 'len' → logprob: -9.00333023071289
    4. ' len' → logprob: -10.50333023071289
    5. '3' → logprob: -13.50333023071289
    6. ' (' → logprob: -15.87833023071289
    7. '   ' → logprob: -16.62833023071289
    8. '	len' → logprob: -16.62833023071289
    9. '<len' → logprob: -18.12833023071289
    10. ',len' → logprob: -18.25333023071289

Token 169: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -2.963691804325208e-05
    2. '(' → logprob: -11.000029563903809
    3. 'row' → logprob: -11.375029563903809
    4. ' row' → logprob: -13.625029563903809
    5. ' (' → logprob: -16.125030517578125
    6. '(rows' → logprob: -18.000030517578125
    7. '[row' → logprob: -18.250030517578125
    8. '	row' → logprob: -18.500030517578125
    9. '(
' → logprob: -18.875030517578125
    10. ' ' → logprob: -19.125030517578125

Token 170: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.20254404842853546
    2. ')):' → logprob: -1.702544093132019
    3. '))' → logprob: -7.202544212341309
    4. ')):
' → logprob: -8.077544212341309
    5. ' ' → logprob: -10.327544212341309
    6. '):' → logprob: -10.952544212341309
    7. '):
' → logprob: -11.202544212341309
    8. ')' → logprob: -12.202544212341309
    9. '   ' → logprob: -13.202544212341309
    10. '       ' → logprob: -13.202544212341309

Token 171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004606975708156824
    2. ' if' → logprob: -8.250460624694824
    3. '       ' → logprob: -8.750460624694824
    4. 'if' → logprob: -11.750460624694824
    5. '            ' → logprob: -12.000460624694824
    6. ':' → logprob: -12.125460624694824
    7. '          ' → logprob: -12.375460624694824
    8. '               ' → logprob: -12.750460624694824
    9. '        ' → logprob: -12.875460624694824
    10. ',' → logprob: -13.625460624694824

Token 172: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05310974270105362
    2. 'if' (adapté à ' if') → logprob: -3.678109645843506
    3. '               ' → logprob: -3.678109645843506
    4. '           ' → logprob: -7.053109645843506
    5. '                ' → logprob: -9.178110122680664
    6. '            ' → logprob: -9.178110122680664
    7. '       ' → logprob: -9.928110122680664
    8. ' ' → logprob: -10.303110122680664
    9. '   ' → logprob: -11.553110122680664
    10. '        ' → logprob: -12.178110122680664

Token 173: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.0002036595979006961
    2. 'row' → logprob: -8.500204086303711
    3. '	row' → logprob: -16.62520408630371
    4. ' ' → logprob: -18.25020408630371
    5. '(row' → logprob: -19.12520408630371
    6. ' ' → logprob: -20.00020408630371
    7. ' number' → logprob: -20.25020408630371
    8. '$row' → logprob: -20.75020408630371
    9. '[row' → logprob: -20.87520408630371
    10. '=row' → logprob: -21.62520408630371

Token 174: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.843177233240567e-05
    2. ' [' → logprob: -11.625018119812012
    3. '[' → logprob: -12.000018119812012
    4. '[I' → logprob: -13.250018119812012
    5. '[j' → logprob: -14.500018119812012
    6. '```' → logprob: -14.875018119812012
    7. '[index' → logprob: -16.125019073486328
    8. '][' → logprob: -16.250019073486328
    9. ')[' → logprob: -16.625019073486328
    10. '[row' → logprob: -16.625019073486328

Token 175: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06259773671627045
    2. '==' → logprob: -3.0625977516174316
    3. ')' → logprob: -4.312597751617432
    4. ')==' → logprob: -8.312597274780273
    5. ']' → logprob: -8.812597274780273
    6. ']==' → logprob: -9.187597274780273
    7. ' )' → logprob: -11.187597274780273
    8. ' ' → logprob: -13.562597274780273
    9. '=' → logprob: -13.812597274780273
    10. '[' → logprob: -15.437597274780273

Token 176: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1269306242465973
    2. '==' → logprob: -2.1269307136535645
    3. '=' → logprob: -14.001930236816406
    4. ')==' → logprob: -14.376930236816406
    5. ' ' → logprob: -14.626930236816406
    6. ']==' → logprob: -15.376930236816406
    7. ')' → logprob: -15.501930236816406
    8. ' ' → logprob: -16.126930236816406
    9. ' =' → logprob: -16.501930236816406
    10. '()==' → logprob: -17.126930236816406

Token 177: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.023245712742209435
    2. 'number' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.273245811462402
    4. '	number' → logprob: -17.023244857788086
    5. '(number' → logprob: -18.773244857788086
    6. '_number' → logprob: -19.148244857788086
    7. ' ' → logprob: -19.648244857788086
    8. 'Number' → logprob: -19.898244857788086
    9. '[number' → logprob: -20.023244857788086
    10. 'n' → logprob: -21.148244857788086

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2814294695854187
    2. ':
' → logprob: -1.4064295291900635
    3. '):
' → logprob: -8.906429290771484
    4. '               ' → logprob: -9.281429290771484
    5. '):' → logprob: -11.281429290771484
    6. ':
' → logprob: -11.531429290771484
    7. ':

' → logprob: -11.906429290771484
    8. '           ' → logprob: -12.156429290771484
    9. ' :
' → logprob: -12.281429290771484
    10. ')' → logprob: -12.281429290771484

Token 179: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016902204602956772
    2. ' =' → logprob: -5.016901969909668
    3. ':
' → logprob: -5.266901969909668
    4. '=row' → logprob: -6.516901969909668
    5. ':' → logprob: -6.641901969909668
    6. ' row' → logprob: -7.391901969909668
    7. '=' → logprob: -7.641901969909668
    8. 'row' → logprob: -8.016901969909668
    9. '):
' → logprob: -8.141901969909668
    10. '                
' → logprob: -9.141901969909668

Token 180: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.026286596432328224
    2. 'row' (adapté à ' row') → logprob: -3.7762866020202637
    3. '                ' → logprob: -6.401286602020264
    4. ' mark' → logprob: -6.901286602020264
    5. '               ' → logprob: -9.151286125183105
    6. ' =' → logprob: -9.651286125183105
    7. 'mark' → logprob: -9.776286125183105
    8. '                   ' → logprob: -10.026286125183105
    9. '                    ' → logprob: -10.026286125183105
    10. '=row' → logprob: -11.776286125183105

Token 181: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.125006675720215
    3. ' i' → logprob: -14.625006675720215
    4. ' [' → logprob: -14.750006675720215
    5. '][' → logprob: -15.000006675720215
    6. '```' → logprob: -16.00000762939453
    7. 'i' → logprob: -16.37500762939453
    8. '[:]' → logprob: -17.12500762939453
    9. '[I' → logprob: -17.25000762939453
    10. ')[' → logprob: -17.62500762939453

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028872599359601736
    2. ']=' → logprob: -6.50288724899292
    3. '=' → logprob: -6.75288724899292
    4. ' ]' → logprob: -8.627887725830078
    5. ' =' → logprob: -10.377887725830078
    6. ')' → logprob: -13.002887725830078
    7. '[' → logprob: -13.252887725830078
    8. '[i' → logprob: -13.877887725830078
    9. '               ' → logprob: -15.002887725830078
    10. '                   ' → logprob: -15.627887725830078

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002068892121315
    2. '=' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.475207328796387
    4. ' =
' → logprob: -17.97520637512207
    5. ')' → logprob: -18.72520637512207
    6. ' ==' → logprob: -19.10020637512207
    7. '[' → logprob: -19.35020637512207
    8. ',' → logprob: -19.60020637512207
    9. ']' → logprob: -19.72520637512207
    10. '=

' → logprob: -19.85020637512207

Token 184: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.0007104054093360901
    2. 'mark' → logprob: -7.250710487365723
    3. ' marked' → logprob: -15.375710487365723
    4. ' Mark' → logprob: -15.875710487365723
    5. '(mark' → logprob: -16.125709533691406
    6. '_mark' → logprob: -17.000709533691406
    7. ' ' → logprob: -17.750709533691406
    8. ' ' → logprob: -18.375709533691406
    9. 'Mark' → logprob: -18.500709533691406
    10. '.mark' → logprob: -18.750709533691406

Token 185: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.8670179997570813e-05
    2. 'ed' → logprob: -11.125019073486328
    3. '_val' → logprob: -13.125019073486328
    4. '_' → logprob: -13.750019073486328
    5. ' _' → logprob: -14.875019073486328
    6. '_VALUE' → logprob: -15.500019073486328
    7. '_values' → logprob: -16.500019073486328
    8. '_Value' → logprob: -16.500019073486328
    9. 'Value' → logprob: -17.750019073486328
    10. '__' → logprob: -17.875019073486328

Token 186: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013892331160604954
    2. '
' → logprob: -4.38889217376709
    3. '

' → logprob: -7.13889217376709
    4. '<|end|>' → logprob: -8.63889217376709
    5. '```' → logprob: -8.88889217376709
    6. 'grid' → logprob: -9.76389217376709
    7. '  
' → logprob: -10.01389217376709
    8. '#' → logprob: -10.38889217376709
    9. '\n' → logprob: -10.63889217376709
    10. 'number' → logprob: -10.63889217376709

Token 188: ' is' (ID: 382)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.21257451176643372
    2. ' main' → logprob: -2.3375744819641113
    3. 'check' → logprob: -3.3375744819641113
    4. ' is' → logprob: -3.7125744819641113
    5. ' has' → logprob: -4.837574481964111
    6. 'main' → logprob: -5.712574481964111
    7. 'is' → logprob: -5.712574481964111
    8. ' count' → logprob: -5.712574481964111
    9. ' calculate' → logprob: -5.712574481964111
    10. ' bingo' → logprob: -5.837574481964111

Token 189: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.19682292640209198
    2. '_w' → logprob: -1.8218228816986084
    3. '_mark' → logprob: -4.1968231201171875
    4. '_win' → logprob: -7.5718231201171875
    5. '_row' → logprob: -7.9468231201171875
    6. '_complete' → logprob: -8.321823120117188
    7. '_completed' → logprob: -9.071823120117188
    8. '_board' → logprob: -9.071823120117188
    9. '_line' → logprob: -9.446823120117188
    10. '_grid' → logprob: -9.696823120117188

Token 190: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -0.021288692951202393
    2. 'ing' → logprob: -3.8962886333465576
    3. 'ingos' → logprob: -7.396288871765137
    4. 'eing' → logprob: -10.896288871765137
    5. '_in' → logprob: -11.021288871765137
    6. '```' → logprob: -11.146288871765137
    7. 'in' → logprob: -11.396288871765137
    8. '_' → logprob: -11.771288871765137
    9. 'i' → logprob: -11.771288871765137
    10. 'ING' → logprob: -11.896288871765137

Token 191: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.0059936209581792355
    2. '(' → logprob: -5.380993843078613
    3. '_row' → logprob: -7.880993843078613
    4. '(row' → logprob: -7.880993843078613
    5. '_line' → logprob: -8.005993843078613
    6. '(line' → logprob: -9.380993843078613
    7. '(rows' → logprob: -9.505993843078613
    8. '_grid' → logprob: -10.505993843078613
    9. '_completed' → logprob: -11.005993843078613
    10. '_complete' → logprob: -11.005993843078613

Token 192: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01421839278191328
    2. '):
' → logprob: -4.264218330383301
    3. ')' → logprob: -10.5142183303833
    4. ',' → logprob: -11.3892183303833
    5. ':' → logprob: -12.2642183303833
    6. '):
' → logprob: -12.5142183303833
    7. ' ):' → logprob: -12.6392183303833
    8. '):

' → logprob: -12.8892183303833
    9. ' ' → logprob: -14.7642183303833
    10. '   ' → logprob: -14.7642183303833

Token 193: ' mark' (ID: 1983)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.2420596033334732
    2. ' mark' → logprob: -1.617059588432312
    3. 'marked' → logprob: -4.867059707641602
    4. '):
' → logprob: -5.617059707641602
    5. ')' → logprob: -6.867059707641602
    6. 'marks' → logprob: -7.242059707641602
    7. '):

' → logprob: -7.367059707641602
    8. ' marked' → logprob: -7.492059707641602
    9. '   ' → logprob: -7.742059707641602
    10. 'number' → logprob: -8.367059707641602

Token 194: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.02669188566505909
    2. 'ed' → logprob: -3.6516919136047363
    3. '):' → logprob: -8.276691436767578
    4. '_values' → logprob: -9.401691436767578
    5. '):
' → logprob: -10.776691436767578
    6. 's' → logprob: -11.151691436767578
    7. '_val' → logprob: -11.901691436767578
    8. 'value' → logprob: -12.276691436767578
    9. '_' → logprob: -12.776691436767578
    10. '_positions' → logprob: -13.651691436767578

Token 195: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003655768698081374
    2. '):
' → logprob: -5.628655910491943
    3. ')' → logprob: -9.878655433654785
    4. '):

' → logprob: -13.503655433654785
    5. '):
' → logprob: -13.503655433654785
    6. ' ):' → logprob: -13.878655433654785
    7. '   ' → logprob: -14.878655433654785
    8. ' ' → logprob: -15.503655433654785
    9. ':' → logprob: -16.1286563873291
    10. ')：' → logprob: -17.3786563873291

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00027480217977426946
    2. ':' → logprob: -9.125274658203125
    3. ':
' → logprob: -9.125274658203125
    4. 'def' → logprob: -10.875274658203125
    5. ' for' → logprob: -11.375274658203125
    6. '    ' → logprob: -12.000274658203125
    7. '    
' → logprob: -12.500274658203125
    8. '(' → logprob: -12.750274658203125
    9. 'for' → logprob: -12.750274658203125
    10. '  ' → logprob: -13.125274658203125

Token 197: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07805713266134262
    2. '
' → logprob: -2.953057050704956
    3. ' 
' → logprob: -4.078057289123535
    4. '    
' → logprob: -5.953057289123535
    5. ':
' → logprob: -7.453057289123535
    6. '  
' → logprob: -7.703057289123535
    7. ' for' → logprob: -7.953057289123535
    8. '    ' → logprob: -7.953057289123535
    9. 'def' → logprob: -7.953057289123535
    10. '\n' → logprob: -8.328057289123535

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007145775598473847
    2. '"""
' → logprob: -7.8757147789001465
    3. '"""' → logprob: -8.500714302062988
    4. '    ' → logprob: -9.500714302062988
    5. ' """
' → logprob: -10.750714302062988
    6. 'Checks' → logprob: -11.250714302062988
    7. ' """' → logprob: -12.375714302062988
    8. '```' → logprob: -12.500714302062988
    9. 'Check' → logprob: -12.625714302062988
    10. '
' → logprob: -13.125714302062988

Token 199: ' Checks' (ID: 51655)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9338094592094421
    2. 'Checks' (adapté à ' Checks') → logprob: -1.183809518814087
    3. '   ' → logprob: -1.683809518814087
    4. ' Checks' → logprob: -2.933809518814087
    5. 'def' → logprob: -3.933809518814087
    6. '#' → logprob: -4.058809280395508
    7. 'for' → logprob: -4.433809280395508
    8. ' def' → logprob: -5.058809280395508
    9. ' checks' → logprob: -5.683809280395508
    10. ' #' → logprob: -6.308809280395508

Token 200: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46967872977256775
    2. '(grid' → logprob: -1.0946787595748901
    3. ' for' → logprob: -3.9696786403656006
    4. ' ' → logprob: -4.34467887878418
    5. '(' → logprob: -5.21967887878418
    6. ' grid' → logprob: -6.71967887878418
    7. ' whether' → logprob: -7.34467887878418
    8. ' the' → logprob: -7.71967887878418
    9. ' (' → logprob: -8.21967887878418
    10. '   ' → logprob: -8.59467887878418

Token 201: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.4777442216873169
    2. ' rows' → logprob: -1.727744221687317
    3. ' for' → logprob: -2.6027441024780273
    4. ' three' → logprob: -3.7277441024780273
    5. ' presence' → logprob: -3.7277441024780273
    6. ' ' → logprob: -3.7277441024780273
    7. ' if' → logprob: -3.8527441024780273
    8. 'grid' → logprob: -5.102744102478027
    9. 'rows' → logprob: -5.227744102478027
    10. ' given' → logprob: -5.602744102478027

Token 202: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0009556477889418602
    2. 'for' → logprob: -7.250955581665039
    3. '   ' → logprob: -8.625955581665039
    4. ' to' → logprob: -10.000955581665039
    5. ' if' → logprob: -11.250955581665039
    6. 'def' → logprob: -12.250955581665039
    7. ',' → logprob: -14.375955581665039
    8. ' rows' → logprob: -14.375955581665039
    9. '```' → logprob: -14.625955581665039
    10. ''s' → logprob: -14.875955581665039

Token 203: ' a' (ID: 261)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.0950381755828857
    2. ' three' → logprob: -1.2200381755828857
    3. ' bingo' → logprob: -1.7200381755828857
    4. ' a' → logprob: -2.5950381755828857
    5. 'b' → logprob: -3.2200381755828857
    6. ' Bingo' → logprob: -3.4700381755828857
    7. 'any' → logprob: -3.8450381755828857
    8. 'a' → logprob: -4.845038414001465
    9. 'B' → logprob: -4.970038414001465
    10. 'three' → logprob: -5.970038414001465

Token 204: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2907590866088867
    2. ' bingo' → logprob: -1.5407590866088867
    3. 'complete' → logprob: -3.9157590866088867
    4. ' complete' → logprob: -4.665759086608887
    5. ' Bingo' → logprob: -6.165759086608887
    6. ' b' → logprob: -6.290759086608887
    7. 'winning' → logprob: -6.415759086608887
    8. 'completed' → logprob: -7.290759086608887
    9. 'B' → logprob: -7.540759086608887
    10. ' completed' → logprob: -7.540759086608887

Token 205: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.106903076171875
    2. ' by' → logprob: -1.356903076171875
    3. '.' → logprob: -1.981903076171875
    4. ' condition' → logprob: -2.231903076171875
    5. ' (' → logprob: -2.356903076171875
    6. ',' → logprob: -3.731903076171875
    7. ' line' → logprob: -4.731903076171875
    8. ' pattern' → logprob: -5.106903076171875
    9. 'condition' → logprob: -5.231903076171875
    10. '(' → logprob: -5.356903076171875

Token 206: 'i' (ID: 72)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.1574645042419434
    2. ')' → logprob: -1.7824645042419434
    3. ' three' → logprob: -1.9074645042419434
    4. 'mark' → logprob: -2.5324645042419434
    5. 'any' → logprob: -2.6574645042419434
    6. ' all' → logprob: -2.7824645042419434
    7. 'all' → logprob: -3.5324645042419434
    8. ' a' → logprob: -3.6574645042419434
    9. 'def' → logprob: -4.157464504241943
    10. 'three' → logprob: -4.157464504241943

Token 207: '.e' (ID: 2560)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7893173694610596
    2. 's' → logprob: -1.7893173694610596
    3. '==' → logprob: -2.0393173694610596
    4. ')' → logprob: -2.1643173694610596
    5. 'n' → logprob: -3.2893173694610596
    6. '=' → logprob: -3.2893173694610596
    7. '.e' → logprob: -3.4143173694610596
    8. ' ==' → logprob: -4.5393171310424805
    9. 'nd' → logprob: -4.9143171310424805
    10. 'm' → logprob: -6.2893171310424805

Token 208: '.,' (ID: 4213)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019446417689323425
    2. '.,' → logprob: -4.89444637298584
    3. ')' → logprob: -5.89444637298584
    4. ' ,' → logprob: -6.01944637298584
    5. '.' → logprob: -6.51944637298584
    6. '),' → logprob: -6.89444637298584
    7. ' True' → logprob: -7.01944637298584
    8. 'True' → logprob: -7.26944637298584
    9. ' mark' → logprob: -7.39444637298584
    10. 'mark' → logprob: -7.76944637298584

Token 209: ' a' (ID: 261)
  Prédit: ' three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' three' → logprob: -0.5670292973518372
    2. ' any' → logprob: -1.4420292377471924
    3. 'three' → logprob: -2.6920292377471924
    4. ' a' → logprob: -2.9420292377471924
    5. 'any' → logprob: -3.1920292377471924
    6. 'a' → logprob: -4.1920294761657715
    7. ')' → logprob: -5.4420294761657715
    8. ' whether' → logprob: -6.1920294761657715
    9. 'mark' → logprob: -6.3170294761657715
    10. ' all' → logprob: -6.5670294761657715

Token 210: ' full' (ID: 3149)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.8552020788192749
    2. 'row' → logprob: -1.355202078819275
    3. ' complete' → logprob: -1.605202078819275
    4. ' row' → logprob: -2.4802021980285645
    5. ' full' → logprob: -4.4802021980285645
    6. 'full' → logprob: -4.8552021980285645
    7. 'line' → logprob: -5.4802021980285645
    8. 'completed' → logprob: -6.1052021980285645
    9. ' ' → logprob: -6.6052021980285645
    10. ')' → logprob: -6.6052021980285645

Token 211: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.4750743806362152
    2. ' row' → logprob: -0.9750744104385376
    3. 'line' → logprob: -8.475074768066406
    4. 'marked' → logprob: -8.975074768066406
    5. 'mark' → logprob: -9.100074768066406
    6. ' line' → logprob: -9.100074768066406
    7. ' ' → logprob: -9.225074768066406
    8. ' marked' → logprob: -9.350074768066406
    9. '```' → logprob: -9.725074768066406
    10. ' mark' → logprob: -9.725074768066406

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07264696061611176
    2. ' or' → logprob: -2.8226468563079834
    3. ')' → logprob: -4.6976470947265625
    4. 'or' → logprob: -7.3226470947265625
    5. '   ' → logprob: -7.6976470947265625
    6. ' ,' → logprob: -8.697647094726562
    7. ',
' → logprob: -10.072647094726562
    8. '    ' → logprob: -10.197647094726562
    9. 'def' → logprob: -10.322647094726562
    10. '),' → logprob: -10.447647094726562

Token 213: ' column' (ID: 6000)
  Prédit: ' column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' column' → logprob: -0.31646937131881714
    2. 'column' → logprob: -1.441469430923462
    3. ' or' → logprob: -3.566469430923462
    4. ' a' → logprob: -5.816469192504883
    5. ' full' → logprob: -6.441469192504883
    6. 'or' → logprob: -7.066469192504883
    7. ')' → logprob: -8.066469192504883
    8. 'col' → logprob: -8.316469192504883
    9. 'a' → logprob: -8.566469192504883
    10. ' col' → logprob: -9.316469192504883

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014579739654436707
    2. 'or' → logprob: -6.626458168029785
    3. ' or' → logprob: -9.126458168029785
    4. ')' → logprob: -10.876458168029785
    5. ' ,' → logprob: -13.501458168029785
    6. ',
' → logprob: -13.751458168029785
    7. '   ' → logprob: -14.126458168029785
    8. '),' → logprob: -14.501458168029785
    9. 'def' → logprob: -16.25145721435547
    10. ',)' → logprob: -16.37645721435547

Token 215: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.01629769802093506
    2. 'or' → logprob: -4.141297817230225
    3. ',' → logprob: -8.391297340393066
    4. '#' → logprob: -10.766297340393066
    5. 'def' → logprob: -11.516297340393066
    6. ')' → logprob: -13.516297340393066
    7. '```' → logprob: -13.641297340393066
    8. ' row' → logprob: -14.766297340393066
    9. '<|end|>' → logprob: -14.891297340393066
    10. 'di' → logprob: -15.141297340393066

Token 216: ' diagonal' (ID: 71638)
  Prédit: ' diagonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diagonal' → logprob: -0.5761158466339111
    2. 'di' → logprob: -0.8261158466339111
    3. 'column' → logprob: -9.451115608215332
    4. 'diag' → logprob: -9.951115608215332
    5. '   ' → logprob: -11.451115608215332
    6. ' column' → logprob: -11.451115608215332
    7. 'a' → logprob: -11.826115608215332
    8. 'main' → logprob: -12.701115608215332
    9. ' main' → logprob: -12.826115608215332
    10. ' a' → logprob: -12.951115608215332

Token 217: ' matches' (ID: 15248)
  Prédit: ' filled'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' filled' → logprob: -1.0004932880401611
    2. ' of' → logprob: -1.3754932880401611
    3. ' marked' → logprob: -2.125493288040161
    4. 'marked' → logprob: -2.500493288040161
    5. ')' → logprob: -2.625493288040161
    6. ' with' → logprob: -3.375493288040161
    7. 'filled' → logprob: -3.375493288040161
    8. 'with' → logprob: -4.250493049621582
    9. 'of' → logprob: -4.250493049621582
    10. ' all' → logprob: -6.375493049621582

Token 218: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.07639728486537933
    2. 'mark' → logprob: -2.951397180557251
    3. ' the' → logprob: -3.951397180557251
    4. 'the' → logprob: -6.70139741897583
    5. '   ' → logprob: -7.20139741897583
    6. '(mark' → logprob: -11.076396942138672
    7. ')' → logprob: -11.576396942138672
    8. '[' → logprob: -11.826396942138672
    9. '```' → logprob: -11.826396942138672
    10. 'marked' → logprob: -12.201396942138672

Token 219: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.750001907348633
    3. ')_' → logprob: -14.375001907348633
    4. '_val' → logprob: -15.000001907348633
    5. ' _' → logprob: -16.875001907348633
    6. '_values' → logprob: -17.250001907348633
    7. ')' → logprob: -18.000001907348633
    8. 'value' → logprob: -18.250001907348633
    9. '```' → logprob: -19.000001907348633
    10. '_
' → logprob: -19.500001907348633

Token 220: ').

' (ID: 3991)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6849562525749207
    2. ')' → logprob: -1.1849563121795654
    3. ').' → logprob: -1.8099563121795654
    4. '):
' → logprob: -3.6849563121795654
    5. 'def' → logprob: -7.434956073760986
    6. '   ' → logprob: -8.184956550598145
    7. '):

' → logprob: -8.309956550598145
    8. ').
' → logprob: -9.184956550598145
    9. '.' → logprob: -9.434956550598145
    10. ')
' → logprob: -10.434956550598145

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.076218025758862e-05
    2. ')' → logprob: -11.000070571899414
    3. '    
' → logprob: -11.000070571899414
    4. 'def' → logprob: -11.125070571899414
    5. '```' → logprob: -11.375070571899414
    6. '
' → logprob: -12.250070571899414
    7. ' for' → logprob: -13.000070571899414
    8. ')
' → logprob: -13.375070571899414
    9. '):
' → logprob: -14.250070571899414
    10. '       ' → logprob: -15.125070571899414

Token 222: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001192371710203588
    2. ' for' → logprob: -7.251192569732666
    3. '
' → logprob: -9.001192092895508
    4. ' rows' → logprob: -9.126192092895508
    5. '    
' → logprob: -9.251192092895508
    6. 'def' → logprob: -9.876192092895508
    7. ')' → logprob: -10.626192092895508
    8. 'for' → logprob: -10.751192092895508
    9. '```' → logprob: -11.376192092895508
    10. '#' → logprob: -11.376192092895508

Token 223: ':
' (ID: 734)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7216501832008362
    2. ':' → logprob: -1.4716501235961914
    3. '(grid' → logprob: -1.8466501235961914
    4. '):
' → logprob: -2.7216501235961914
    5. '=' → logprob: -3.3466501235961914
    6. '   ' → logprob: -4.846650123596191
    7. ',' → logprob: -5.096650123596191
    8. ')' → logprob: -5.471650123596191
    9. ' (' → logprob: -6.221650123596191
    10. '(Grid' → logprob: -6.721650123596191

Token 224: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2023545801639557
    2. '       ' → logprob: -1.7023545503616333
    3. '    ' → logprob: -7.702354431152344
    4. ' grid' → logprob: -8.577354431152344
    5. '```' → logprob: -9.327354431152344
    6. 'def' → logprob: -9.577354431152344
    7. ' def' → logprob: -9.952354431152344
    8. '     ' → logprob: -10.952354431152344
    9. ')' → logprob: -11.202354431152344
    10. 'grid' → logprob: -11.327354431152344

Token 225: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.0004889304982498288
    2. ' grid' → logprob: -7.750488758087158
    3. '   ' → logprob: -9.875489234924316
    4. 'list' → logprob: -12.375489234924316
    5. '       ' → logprob: -13.875489234924316
    6. '	grid' → logprob: -14.000489234924316
    7. '(grid' → logprob: -15.125489234924316
    8. '.grid' → logprob: -16.25048828125
    9. '```' → logprob: -16.37548828125
    10. ':grid' → logprob: -16.75048828125

Token 226: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003010233340319246
    2. '   ' → logprob: -8.500301361083984
    3. ' ,' → logprob: -9.875301361083984
    4. ',
' → logprob: -10.875301361083984
    5. ':' → logprob: -11.500301361083984
    6. ',list' → logprob: -12.125301361083984
    7. '):' → logprob: -12.625301361083984
    8. ' (' → logprob: -12.750301361083984
    9. '<|end|>' → logprob: -13.625301361083984
    10. '[' → logprob: -13.750301361083984

Token 227: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0004329341172706336
    2. ' list' → logprob: -7.750432968139648
    3. '[list' → logprob: -13.875432968139648
    4. 'List' → logprob: -14.000432968139648
    5. ')' → logprob: -14.875432968139648
    6. '(list' → logprob: -17.00043296813965
    7. ':list' → logprob: -17.25043296813965
    8. '   ' → logprob: -17.50043296813965
    9. ',list' → logprob: -17.62543296813965
    10. ',' → logprob: -18.62543296813965

Token 228: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.08219857513904572
    2. 'of' → logprob: -2.5821986198425293
    3. '   ' → logprob: -6.332198619842529
    4. '):' → logprob: -6.832198619842529
    5. '):
' → logprob: -8.832198143005371
    6. ')' → logprob: -9.207198143005371
    7. '[' → logprob: -9.707198143005371
    8. '[list' → logprob: -10.457198143005371
    9. '
' → logprob: -10.582198143005371
    10. '```' → logprob: -11.207198143005371

Token 229: ' lists' (ID: 19471)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.025667736306786537
    2. 'list' → logprob: -3.775667667388916
    3. ' lists' → logprob: -6.025667667388916
    4. '[list' → logprob: -13.275668144226074
    5. ' list' → logprob: -14.400668144226074
    6. 'int' → logprob: -15.525668144226074
    7. 'listas' → logprob: -15.525668144226074
    8. 'Lists' → logprob: -15.650668144226074
    9. '_lists' → logprob: -15.650668144226074
    10. ')' → logprob: -16.150667190551758

Token 230: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025704256258904934
    2. '):
' → logprob: -6.002570629119873
    3. '   ' → logprob: -10.002570152282715
    4. ')' → logprob: -11.002570152282715
    5. ':' → logprob: -11.127570152282715
    6. '):

' → logprob: -12.252570152282715
    7. ' ):' → logprob: -12.377570152282715
    8. '[' → logprob: -12.502570152282715
    9. ',' → logprob: -13.627570152282715
    10. '```' → logprob: -13.627570152282715

Token 231: ' The' (ID: 623)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.19465744495391846
    2. '   ' → logprob: -2.319657325744629
    3. 'list' → logprob: -3.444657325744629
    4. ' int' → logprob: -3.819657325744629
    5. ' list' → logprob: -4.819657325744629
    6. '       ' → logprob: -5.069657325744629
    7. '[int' → logprob: -5.319657325744629
    8. ')' → logprob: -6.194657325744629
    9. 'The' → logprob: -7.069657325744629
    10. 'def' → logprob: -7.319657325744629

Token 232: ' game' (ID: 2813)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.3383099138736725
    2. ' ' → logprob: -1.71330988407135
    3. ' current' → logprob: -2.5883100032806396
    4. '3' → logprob: -4.3383097648620605
    5. 'grid' → logprob: -4.7133097648620605
    6. ' game' → logprob: -6.0883097648620605
    7. ' mark' → logprob: -6.3383097648620605
    8. '   ' → logprob: -6.5883097648620605
    9. ' rows' → logprob: -7.0883097648620605
    10. 'current' → logprob: -7.3383097648620605

Token 233: ' grid' (ID: 10586)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7659100294113159
    2. ' grid' → logprob: -0.7659100294113159
    3. 'grid' → logprob: -3.0159101486206055
    4. '       ' → logprob: -5.3909101486206055
    5. '):
' → logprob: -5.7659101486206055
    6. ')' → logprob: -6.1409101486206055
    7. '(grid' → logprob: -6.2659101486206055
    8. 'def' → logprob: -6.5159101486206055
    9. '_grid' → logprob: -6.8909101486206055
    10. ' of' → logprob: -6.8909101486206055

Token 234: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10742008686065674
    2. ',' → logprob: -2.357419967651367
    3. ')' → logprob: -5.732419967651367
    4. '):' → logprob: -6.107419967651367
    5. ',
' → logprob: -7.607419967651367
    6. 'def' → logprob: -8.232419967651367
    7. ' (' → logprob: -8.607419967651367
    8. '       ' → logprob: -8.607419967651367
    9. ':' → logprob: -8.982419967651367
    10. '):
' → logprob: -9.107419967651367

Token 235: ' ' (ID: 220)
  Prédit: ' mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.6754707098007202
    2. '       ' → logprob: -1.5504707098007202
    3. '   ' → logprob: -1.6754707098007202
    4. 'mark' → logprob: -2.8004708290100098
    5. 'def' → logprob: -5.17547082901001
    6. ' def' → logprob: -5.42547082901001
    7. ')' → logprob: -5.80047082901001
    8. ' marks' → logprob: -5.92547082901001
    9. ' ' → logprob: -6.05047082901001
    10. ' marked' → logprob: -6.42547082901001

Token 236: '3' (ID: 18)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6467658281326294
    2. '3' → logprob: -1.1467658281326294
    3. 'mark' → logprob: -2.64676570892334
    4. 'int' → logprob: -3.02176570892334
    5. 'marked' → logprob: -4.89676570892334
    6. 'def' → logprob: -5.27176570892334
    7. 'marks' → logprob: -5.52176570892334
    8. '
' → logprob: -5.52176570892334
    9. ' ' → logprob: -5.64676570892334
    10. '       ' → logprob: -5.64676570892334

Token 237: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3262439966201782
    2. ' rows' → logprob: -1.5762439966201782
    3. '   ' → logprob: -3.7012438774108887
    4. ' x' → logprob: -3.8262438774108887
    5. 'rows' → logprob: -3.8262438774108887
    6. ' of' → logprob: -6.451243877410889
    7. ')' → logprob: -7.951243877410889
    8. 'def' → logprob: -8.201244354248047
    9. '):
' → logprob: -8.701244354248047
    10. '(rows' → logprob: -8.826244354248047

Token 238: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.6776029699249193e-05
    2. '   ' → logprob: -10.62502670288086
    3. '
' → logprob: -14.00002670288086
    4. ' ' → logprob: -14.00002670288086
    5. '```' → logprob: -14.62502670288086
    6. ')' → logprob: -15.62502670288086
    7. '       ' → logprob: -16.37502670288086
    8. ',' → logprob: -18.12502670288086
    9. '  ' → logprob: -18.25002670288086
    10. 'n' → logprob: -18.62502670288086

Token 239: ' (' (ID: 350)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9823697209358215
    2. '   ' → logprob: -1.3573696613311768
    3. ')
' → logprob: -1.4823696613311768
    4. ')' → logprob: -2.2323696613311768
    5. '):' → logprob: -3.6073696613311768
    6. ' size' → logprob: -6.732369899749756
    7. '
' → logprob: -6.857369899749756
    8. ' grid' → logprob: -6.982369899749756
    9. ').
' → logprob: -7.482369899749756
    10. ').' → logprob: -7.982369899749756

Token 240: 'three' (ID: 47660)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4103430509567261
    2. '   ' → logprob: -2.5353431701660156
    3. 'int' → logprob: -2.6603431701660156
    4. '3' → logprob: -3.4103431701660156
    5. ' list' → logprob: -3.7853431701660156
    6. 'list' → logprob: -3.7853431701660156
    7. ' each' → logprob: -4.035343170166016
    8. ')
' → logprob: -4.410343170166016
    9. 'each' → logprob: -4.660343170166016
    10. 'Each' → logprob: -4.910343170166016

Token 241: ' lists' (ID: 19471)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.4704122841358185
    2. '   ' → logprob: -1.970412254333496
    3. ' lists' → logprob: -2.095412254333496
    4. ')' → logprob: -2.970412254333496
    5. ' integers' → logprob: -4.345412254333496
    6. 'rows' → logprob: -4.470412254333496
    7. '):
' → logprob: -4.845412254333496
    8. ' of' → logprob: -4.845412254333496
    9. ' lines' → logprob: -4.970412254333496
    10. 'def' → logprob: -6.345412254333496

Token 242: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0317222885787487
    2. '):
' → logprob: -4.031722068786621
    3. '   ' → logprob: -5.156722068786621
    4. ')' → logprob: -5.906722068786621
    5. ' each' → logprob: -6.156722068786621
    6. '):' → logprob: -6.781722068786621
    7. ' with' → logprob: -7.406722068786621
    8. 'of' → logprob: -7.656722068786621
    9. 'each' → logprob: -8.406722068786621
    10. ',' → logprob: -8.906722068786621

Token 243: ' three' (ID: 3407)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.6957629323005676
    2. 'list' → logprob: -1.6957628726959229
    3. 'int' → logprob: -2.070762872695923
    4. ' lists' → logprob: -2.195762872695923
    5. 'ints' → logprob: -3.570762872695923
    6. '3' → logprob: -3.945762872695923
    7. ' three' → logprob: -4.570763111114502
    8. 'three' → logprob: -4.945763111114502
    9. 'inte' → logprob: -5.195763111114502
    10. ' integers' → logprob: -5.945763111114502

Token 244: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.5695573091506958
    2. 'inte' → logprob: -1.5695573091506958
    3. ' elements' → logprob: -2.0695571899414062
    4. 'ints' → logprob: -2.9445571899414062
    5. 'elements' → logprob: -3.8195571899414062
    6. 'int' → logprob: -4.694557189941406
    7. ' ints' → logprob: -4.694557189941406
    8. ')' → logprob: -5.194557189941406
    9. '   ' → logprob: -7.069557189941406
    10. 'items' → logprob: -8.819557189941406

Token 245: ').
' (ID: 6294)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.9454632997512817
    2. '):
' → logprob: -1.0704632997512817
    3. 'each' → logprob: -2.320463180541992
    4. '):' → logprob: -2.445463180541992
    5. ')' → logprob: -2.820463180541992
    6. '   ' → logprob: -4.320463180541992
    7. ').' → logprob: -5.445463180541992
    8. ')
' → logprob: -5.820463180541992
    9. '):

' → logprob: -5.945463180541992
    10. 'Each' → logprob: -7.570463180541992

Token 246: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00360019039362669
    2. '
' → logprob: -6.253600120544434
    3. '    
' → logprob: -7.128600120544434
    4. '```' → logprob: -7.628600120544434
    5. '       ' → logprob: -9.003600120544434
    6. 'Returns' → logprob: -9.128600120544434
    7. ')' → logprob: -9.628600120544434
    8. '        
' → logprob: -10.128600120544434
    9. '    ' → logprob: -11.503600120544434
    10. '"""' → logprob: -11.753600120544434

Token 247: ' mark' (ID: 1983)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' (adapté à ' mark') → logprob: -0.21342144906520844
    2. ' mark' → logprob: -1.7134214639663696
    3. '   ' → logprob: -4.58842134475708
    4. 'Returns' → logprob: -8.088421821594238
    5. '
' → logprob: -8.213421821594238
    6. '       ' → logprob: -8.588421821594238
    7. 'check' → logprob: -8.713421821594238
    8. 'marks' → logprob: -9.088421821594238
    9. 'return' → logprob: -9.338421821594238
    10. 'def' → logprob: -9.463421821594238

Token 248: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.751746746478602e-05
    2. '_' → logprob: -10.25004768371582
    3. '_values' → logprob: -12.12504768371582
    4. '   ' → logprob: -13.12504768371582
    5. '_val' → logprob: -13.37504768371582
    6. ')_' → logprob: -13.75004768371582
    7. ' _' → logprob: -13.87504768371582
    8. '```' → logprob: -14.62504768371582
    9. '_code' → logprob: -16.00004768371582
    10. 'value' → logprob: -16.37504768371582

Token 249: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005982242990285158
    2. '):
' → logprob: -5.630982398986816
    3. '=' → logprob: -6.130982398986816
    4. '):

' → logprob: -9.255982398986816
    5. ':' → logprob: -10.005982398986816
    6. ' ):' → logprob: -10.380982398986816
    7. ')' → logprob: -11.755982398986816
    8. '   ' → logprob: -12.130982398986816
    9. '=int' → logprob: -12.130982398986816
    10. ':int' → logprob: -12.755982398986816

Token 250: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0020917344372719526
    2. ')' → logprob: -6.252091884613037
    3. '):' → logprob: -8.877091407775879
    4. '):
' → logprob: -11.502091407775879
    5. ' int' → logprob: -12.127091407775879
    6. '[int' → logprob: -12.377091407775879
    7. '   ' → logprob: -13.627091407775879
    8. '=int' → logprob: -14.252091407775879
    9. ':int' → logprob: -15.002091407775879
    10. '):

' → logprob: -15.127091407775879

Token 251: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038267090916633606
    2. '):
' → logprob: -3.288267135620117
    3. '=' → logprob: -9.538267135620117
    4. ':' → logprob: -9.788267135620117
    5. '):

' → logprob: -9.788267135620117
    6. '   ' → logprob: -10.913267135620117
    7. ' ):' → logprob: -11.038267135620117
    8. ')' → logprob: -12.788267135620117
    9. '):
' → logprob: -14.038267135620117
    10. ' ):
' → logprob: -14.913267135620117

Token 252: ' The' (ID: 623)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -0.4985917806625366
    2. ' The' → logprob: -0.9985917806625366
    3. '   ' → logprob: -3.998591899871826
    4. 'value' → logprob: -6.123591899871826
    5. 'def' → logprob: -7.123591899871826
    6. ' value' → logprob: -7.373591899871826
    7. ')' → logprob: -7.998591899871826
    8. 'Value' → logprob: -8.123591423034668
    9. '#' → logprob: -8.373591423034668
    10. '"""' → logprob: -8.373591423034668

Token 253: ' special' (ID: 3582)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.06400562077760696
    2. 'value' → logprob: -2.8140056133270264
    3. ' mark' → logprob: -6.8140058517456055
    4. 'mark' → logprob: -8.689005851745605
    5. ' target' → logprob: -8.814005851745605
    6. ' number' → logprob: -8.939005851745605
    7. ' token' → logprob: -9.314005851745605
    8. ' marker' → logprob: -9.439005851745605
    9. ' marked' → logprob: -9.689005851745605
    10. 'marked' → logprob: -10.314005851745605

Token 254: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.20774996280670166
    2. 'value' → logprob: -1.7077499628067017
    3. ' marker' → logprob: -6.207749843597412
    4. 'marker' → logprob: -6.457749843597412
    5. ' token' → logprob: -6.957749843597412
    6. 'token' → logprob: -6.957749843597412
    7. 'mark' → logprob: -8.08275032043457
    8. ' mark' → logprob: -8.70775032043457
    9. ')' → logprob: -8.83275032043457
    10. '_value' → logprob: -10.20775032043457

Token 255: ' representing' (ID: 25389)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.41158413887023926
    2. 'to' → logprob: -1.4115841388702393
    3. ' used' → logprob: -2.6615841388702393
    4. ' that' → logprob: -4.53658390045166
    5. ' indicating' → logprob: -5.66158390045166
    6. 'ind' → logprob: -5.78658390045166
    7. 'that' → logprob: -6.03658390045166
    8. '   ' → logprob: -6.53658390045166
    9. 'used' → logprob: -6.66158390045166
    10. '       ' → logprob: -7.41158390045166

Token 256: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7770789861679077
    2. 'the' → logprob: -1.5270789861679077
    3. ' the' → logprob: -2.0270791053771973
    4. ' a' → logprob: -2.1520791053771973
    5. 'marked' → logprob: -2.6520791053771973
    6. ' marked' → logprob: -6.027079105377197
    7. 'marks' → logprob: -7.152079105377197
    8. ' marks' → logprob: -7.277079105377197
    9. ' cells' → logprob: -7.777079105377197
    10. 'cells' → logprob: -9.527078628540039

Token 257: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.40267452597618103
    2. ' marked' → logprob: -1.4026745557785034
    3. 'mark' → logprob: -2.902674436569214
    4. ' mark' → logprob: -3.527674436569214
    5. ' cell' → logprob: -8.652674674987793
    6. ' bingo' → logprob: -8.902674674987793
    7. 'b' → logprob: -8.902674674987793
    8. ' "' → logprob: -9.152674674987793
    9. 'marker' → logprob: -9.527674674987793
    10. '"' → logprob: -9.527674674987793

Token 258: ' cell' (ID: 4206)
  Prédit: ' cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cell' → logprob: -0.842074453830719
    2. 'cell' → logprob: -0.842074453830719
    3. ' spot' → logprob: -2.967074394226074
    4. ' position' → logprob: -3.342074394226074
    5. 'position' → logprob: -3.842074394226074
    6. 'spot' → logprob: -4.467074394226074
    7. 'number' → logprob: -4.967074394226074
    8. ' number' → logprob: -5.092074394226074
    9. 'element' → logprob: -6.717074394226074
    10. ' element' → logprob: -6.842074394226074

Token 259: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5114026069641113
    2. '):
' → logprob: -1.6364026069641113
    3. '   ' → logprob: -1.7614026069641113
    4. ')' → logprob: -4.136402606964111
    5. '):

' → logprob: -4.136402606964111
    6. ').' → logprob: -6.761402606964111
    7. '):
' → logprob: -8.761402130126953
    8. ')
' → logprob: -9.011402130126953
    9. ' in' → logprob: -9.636402130126953
    10. 'def' → logprob: -9.761402130126953

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00441350182518363
    2. ')' → logprob: -5.504413604736328
    3. ')
' → logprob: -9.129413604736328
    4. '"""' → logprob: -9.504413604736328
    5. '"""
' → logprob: -9.754413604736328
    6. 'def' → logprob: -10.504413604736328
    7. '```' → logprob: -10.754413604736328
    8. '
' → logprob: -10.754413604736328
    9. '):
' → logprob: -11.629413604736328
    10. '    
' → logprob: -12.129413604736328

Token 261: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08354045450687408
    2. 'Returns' (adapté à ' Returns') → logprob: -3.208540439605713
    3. '"""
' → logprob: -3.958540439605713
    4. 'for' → logprob: -5.333540439605713
    5. 'def' → logprob: -5.833540439605713
    6. ')
' → logprob: -5.958540439605713
    7. '
' → logprob: -6.083540439605713
    8. ')' → logprob: -6.208540439605713
    9. 'Checks' → logprob: -6.333540439605713
    10. ' for' → logprob: -6.583540439605713

Token 262: ':
' (ID: 734)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.1626773327589035
    2. ':' → logprob: -2.41267728805542
    3. ' bool' → logprob: -3.66267728805542
    4. 'True' → logprob: -4.03767728805542
    5. ' ' → logprob: -5.28767728805542
    6. '   ' → logprob: -5.91267728805542
    7. '  ' → logprob: -6.53767728805542
    8. ' space' → logprob: -6.66267728805542
    9. ' boolean' → logprob: -6.66267728805542
    10. 'bool' → logprob: -6.66267728805542

Token 263: '       ' (ID: 309)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5810158848762512
    2. ' bool' → logprob: -0.8310158848762512
    3. '   ' → logprob: -5.4560160636901855
    4. 'True' → logprob: -7.7060160636901855
    5. 'bool' → logprob: -8.581015586853027
    6. ' False' → logprob: -9.331015586853027
    7. '    ' → logprob: -9.831015586853027
    8. ' any' → logprob: -12.081015586853027
    9. ' Bool' → logprob: -13.581015586853027
    10. ' None' → logprob: -13.831015586853027

Token 264: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' (adapté à ' bool') → logprob: -0.0011828463757410645
    2. ' bool' → logprob: -6.751183032989502
    3. '   ' → logprob: -11.751182556152344
    4. 'True' → logprob: -12.251182556152344
    5. ' True' → logprob: -17.376182556152344
    6. 'Bool' → logprob: -18.376182556152344
    7. '	bool' → logprob: -18.751182556152344
    8. '(bool' → logprob: -18.876182556152344
    9. '<bool' → logprob: -19.126182556152344
    10. 'boolean' → logprob: -20.001182556152344

Token 265: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002057596342638135
    2. '):' → logprob: -7.1270575523376465
    3. '   ' → logprob: -7.3770575523376465
    4. ':
' → logprob: -7.5020575523376465
    5. '):
' → logprob: -10.627058029174805
    6. ':return' → logprob: -11.127058029174805
    7. ')' → logprob: -11.252058029174805
    8. 'True' → logprob: -11.502058029174805
    9. ' :' → logprob: -12.377058029174805
    10. '```' → logprob: -12.877058029174805

Token 266: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.08471077680587769
    2. ' any' → logprob: -2.8347108364105225
    3. 'True' → logprob: -3.8347108364105225
    4. ' all' → logprob: -7.334710597991943
    5. 'Any' → logprob: -9.209711074829102
    6. '   ' → logprob: -9.459711074829102
    7. ' Any' → logprob: -10.709711074829102
    8. 'any' → logprob: -10.834711074829102
    9. ' for' → logprob: -13.459711074829102
    10. ' grid' → logprob: -13.584711074829102

Token 267: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.005479198414832354
    2. 'if' → logprob: -6.130479335784912
    3. '   ' → logprob: -6.505479335784912
    4. '<|end|>' → logprob: -7.505479335784912
    5. ':' → logprob: -7.755479335784912
    6. ',' → logprob: -8.130478858947754
    7. '```' → logprob: -9.380478858947754
    8. ' for' → logprob: -9.630478858947754
    9. 'True' → logprob: -9.755478858947754
    10. 'def' → logprob: -9.880478858947754

Token 268: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.0035296366550028324
    2. 'any' → logprob: -5.8785295486450195
    3. ' there' → logprob: -7.2535295486450195
    4. ' the' → logprob: -11.37852954864502
    5. ' True' → logprob: -13.50352954864502
    6. 'there' → logprob: -13.87852954864502
    7. ' all' → logprob: -14.00352954864502
    8. ' a' → logprob: -14.37852954864502
    9. '   ' → logprob: -14.62852954864502
    10. ' there's' → logprob: -14.87852954864502

Token 269: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.010633671656250954
    2. 'row' → logprob: -4.63563346862793
    3. '   ' → logprob: -7.63563346862793
    4. ' of' → logprob: -8.76063346862793
    5. ' line' → logprob: -8.88563346862793
    6. '(row' → logprob: -9.76063346862793
    7. ' (
' → logprob: -11.51063346862793
    8. ' ' → logprob: -11.88563346862793
    9. '    ' → logprob: -11.88563346862793
    10. ' (' → logprob: -12.26063346862793

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0674285739660263
    2. ' or' → logprob: -2.8174285888671875
    3. ' has' → logprob: -6.1924285888671875
    4. ' is' → logprob: -6.6924285888671875
    5. 'or' → logprob: -7.0674285888671875
    6. ' ,' → logprob: -7.5674285888671875
    7. '   ' → logprob: -7.9424285888671875
    8. ')' → logprob: -9.067428588867188
    9. ' contains' → logprob: -9.317428588867188
    10. '```' → logprob: -10.317428588867188

Token 271: ' column' (ID: 6000)
  Prédit: ' column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' column' → logprob: -0.32259640097618103
    2. 'column' → logprob: -1.3225964307785034
    3. '   ' → logprob: -5.197596549987793
    4. 'col' → logprob: -6.197596549987793
    5. ' or' → logprob: -7.322596549987793
    6. '       ' → logprob: -7.697596549987793
    7. ' col' → logprob: -7.822596549987793
    8. '    ' → logprob: -9.447596549987793
    9. 'or' → logprob: -10.322596549987793
    10. ' True' → logprob: -10.822596549987793

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002489423204679042
    2. ' or' → logprob: -9.000248908996582
    3. '   ' → logprob: -10.375248908996582
    4. ')' → logprob: -10.375248908996582
    5. '),' → logprob: -10.750248908996582
    6. 'or' → logprob: -10.750248908996582
    7. ',
' → logprob: -11.250248908996582
    8. ' ,' → logprob: -12.250248908996582
    9. '```' → logprob: -14.375248908996582
    10. ' is' → logprob: -15.125248908996582

Token 273: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2266702950000763
    2. 'or' → logprob: -1.601670265197754
    3. 'True' → logprob: -7.726670265197754
    4. 'di' → logprob: -8.226670265197754
    5. '   ' → logprob: -8.476670265197754
    6. ' True' → logprob: -8.976670265197754
    7. '       ' → logprob: -9.226670265197754
    8. ' diagonal' → logprob: -9.476670265197754
    9. '```' → logprob: -10.726670265197754
    10. '           ' → logprob: -12.351670265197754

Token 274: ' diagonal' (ID: 71638)
  Prédit: ' diagonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diagonal' → logprob: -0.04868433251976967
    2. 'di' → logprob: -3.0486843585968018
    3. '   ' → logprob: -9.423684120178223
    4. 'diag' → logprob: -11.423684120178223
    5. '```' → logprob: -14.173684120178223
    6. '_di' → logprob: -14.298684120178223
    7. '       ' → logprob: -14.298684120178223
    8. 'def' → logprob: -14.673684120178223
    9. 'Diagonal' → logprob: -14.673684120178223
    10. ' diagon' → logprob: -14.923684120178223

Token 275: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.693015456199646
    2. ' has' → logprob: -1.568015456199646
    3. ' contains' → logprob: -1.943015456199646
    4. 'is' → logprob: -2.5680155754089355
    5. 'contains' → logprob: -3.3180155754089355
    6. 'has' → logprob: -3.5680155754089355
    7. ' in' → logprob: -5.3180155754089355
    8. ' consists' → logprob: -7.1930155754089355
    9. '   ' → logprob: -7.5680155754089355
    10. '```' → logprob: -8.568015098571777

Token 276: ' fully' (ID: 9637)
  Prédit: ' fully'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fully' → logprob: -0.9915057420730591
    2. ' completely' → logprob: -1.116505742073059
    3. 'com' → logprob: -1.616505742073059
    4. ' entirely' → logprob: -3.6165056228637695
    5. 'marked' → logprob: -3.7415056228637695
    6. 'fully' → logprob: -3.9915056228637695
    7. ' filled' → logprob: -4.4915056228637695
    8. 'filled' → logprob: -5.1165056228637695
    9. ' all' → logprob: -5.2415056228637695
    10. ' marked' → logprob: -5.4915056228637695

Token 277: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.014577122405171394
    2. ' marked' → logprob: -4.2645769119262695
    3. 'equal' → logprob: -9.26457691192627
    4. 'filled' → logprob: -9.26457691192627
    5. 'matched' → logprob: -9.38957691192627
    6. ' equal' → logprob: -9.63957691192627
    7. 'mark' → logprob: -10.76457691192627
    8. 'occupied' → logprob: -10.76457691192627
    9. ' filled' → logprob: -11.13957691192627
    10. '```' → logprob: -11.63957691192627

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34123411774635315
    2. '   ' → logprob: -1.8412340879440308
    3. ' with' → logprob: -2.7162342071533203
    4. 'True' → logprob: -3.4662342071533203
    5. ' True' → logprob: -3.5912342071533203
    6. ' by' → logprob: -5.84123420715332
    7. ' ,' → logprob: -6.84123420715332
    8. 'with' → logprob: -7.96623420715332
    9. '```' → logprob: -8.34123420715332
    10. '(True' → logprob: -8.59123420715332

Token 279: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.40146976709365845
    2. 'False' → logprob: -1.6514697074890137
    3. '   ' → logprob: -2.1514697074890137
    4. ' else' → logprob: -3.9014697074890137
    5. '    ' → logprob: -6.901469707489014
    6. ' otherwise' → logprob: -7.651469707489014
    7. ' True' → logprob: -8.151470184326172
    8. 'else' → logprob: -8.151470184326172
    9. 'True' → logprob: -8.276470184326172
    10. '       ' → logprob: -10.026470184326172

Token 280: ' otherwise' (ID: 10275)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05252886191010475
    2. ',' → logprob: -3.5525288581848145
    3. ':' → logprob: -4.3025288581848145
    4. '):' → logprob: -5.4275288581848145
    5. '.' → logprob: -6.8025288581848145
    6. ')' → logprob: -6.9275288581848145
    7. '):
' → logprob: -7.0525288581848145
    8. '
' → logprob: -7.0525288581848145
    9. 'def' → logprob: -8.177529335021973
    10. ':
' → logprob: -8.427529335021973

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006551315891556442
    2. '    
' → logprob: -7.875655174255371
    3. '
' → logprob: -8.250655174255371
    4. '    ' → logprob: -12.375655174255371
    5. 'def' → logprob: -12.500655174255371
    6. '```' → logprob: -12.750655174255371
    7. ')' → logprob: -13.875655174255371
    8. '    
    
' → logprob: -14.375655174255371
    9. '   
' → logprob: -14.500655174255371
    10. '     
' → logprob: -15.250655174255371

Token 283: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002017740160226822
    2. '
' → logprob: -6.502017974853516
    3. '):
' → logprob: -9.002017974853516
    4. ')' → logprob: -9.127017974853516
    5. '    
' → logprob: -9.377017974853516
    6. ':' → logprob: -9.377017974853516
    7. '):' → logprob: -9.627017974853516
    8. '```' → logprob: -10.252017974853516
    9. ':
' → logprob: -11.752017974853516
    10. 'def' → logprob: -13.377017974853516

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008622690802440047
    2. ' for' → logprob: -7.125862121582031
    3. 'for' → logprob: -10.875862121582031
    4. '
' → logprob: -11.750862121582031
    5. 'def' → logprob: -11.750862121582031
    6. '    
' → logprob: -12.000862121582031
    7. ' lines' → logprob: -12.250862121582031
    8. ' rows' → logprob: -12.375862121582031
    9. 'n' → logprob: -13.250862121582031
    10. '#' → logprob: -13.250862121582031

Token 285: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46728643774986267
    2. 'for' → logprob: -1.467286467552185
    3. '#' (adapté à ' #') → logprob: -1.967286467552185
    4. ' for' → logprob: -5.967286586761475
    5. ' #' → logprob: -8.217286109924316
    6. 'n' → logprob: -9.842286109924316
    7. 'rows' → logprob: -11.842286109924316
    8. 'size' → logprob: -11.967286109924316
    9. '	for' → logprob: -12.842286109924316
    10. 'def' → logprob: -12.967286109924316

Token 286: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6024364829063416
    2. '#' → logprob: -0.8524364829063416
    3. 'n' → logprob: -4.602436542510986
    4. '   ' → logprob: -4.977436542510986
    5. ' for' → logprob: -5.352436542510986
    6. 'def' → logprob: -6.102436542510986
    7. ' #' → logprob: -6.852436542510986
    8. 'size' → logprob: -7.227436542510986
    9. 'For' → logprob: -9.477436065673828
    10. 'N' → logprob: -9.477436065673828

Token 287: ' rows' (ID: 13585)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.053161509335041046
    2. 'for' → logprob: -3.30316162109375
    3. ' rows' → logprob: -4.92816162109375
    4. '   ' → logprob: -5.17816162109375
    5. ' all' → logprob: -6.67816162109375
    6. 'rows' → logprob: -7.80316162109375
    7. '#' → logprob: -8.55316162109375
    8. ' any' → logprob: -8.92816162109375
    9. ' row' → logprob: -10.05316162109375
    10. ' #' → logprob: -10.05316162109375

Token 288: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004421928431838751
    2. ' for' → logprob: -5.629421710968018
    3. 'for' → logprob: -7.379421710968018
    4. '
' → logprob: -8.879422187805176
    5. '    
' → logprob: -10.129422187805176
    6. ':' → logprob: -11.629422187805176
    7. '```' → logprob: -12.504422187805176
    8. '	for' → logprob: -13.504422187805176
    9. ':
' → logprob: -13.504422187805176
    10. '   
' → logprob: -14.129422187805176

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006544843316078186
    2. ' for' → logprob: -5.506545066833496
    3. 'for' → logprob: -6.006545066833496
    4. '```' → logprob: -14.256545066833496
    5. '
' → logprob: -16.63154411315918
    6. '	for' → logprob: -17.00654411315918
    7. '    
' → logprob: -17.38154411315918
    8. '  ' → logprob: -17.50654411315918
    9. 'def' → logprob: -17.63154411315918
    10. ':' → logprob: -17.75654411315918

Token 290: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07963357120752335
    2. '   ' → logprob: -2.5796334743499756
    3. ' for' → logprob: -7.204633712768555
    4. '```' → logprob: -15.454633712768555
    5. '	for' → logprob: -16.454633712768555
    6. '  ' → logprob: -16.829633712768555
    7. 'if' → logprob: -16.954633712768555
    8. ' ' → logprob: -17.079633712768555
    9. '    ' → logprob: -19.079633712768555
    10. '
' → logprob: -19.079633712768555

Token 291: ' i' (ID: 575)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.16047970950603485
    2. 'row' → logprob: -1.9104796648025513
    3. '   ' → logprob: -8.285479545593262
    4. ' ' → logprob: -13.410479545593262
    5. '	row' → logprob: -13.785479545593262
    6. '    ' → logprob: -15.910479545593262
    7. '  ' → logprob: -16.285480499267578
    8. '[row' → logprob: -16.410480499267578
    9. '(row' → logprob: -16.410480499267578
    10. 'i' → logprob: -16.535480499267578

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06205282732844353
    2. 'in' → logprob: -2.8120527267456055
    3. ' ' → logprob: -10.062052726745605
    4. '   ' → logprob: -10.562052726745605
    5. ',' → logprob: -12.187052726745605
    6. '  ' → logprob: -13.312052726745605
    7. '    ' → logprob: -13.312052726745605
    8. ' ,' → logprob: -13.687052726745605
    9. '	in' → logprob: -13.812052726745605
    10. ')' → logprob: -14.062052726745605

Token 293: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3133244514465332
    2. ' range' → logprob: -1.3133244514465332
    3. 'grid' → logprob: -9.938323974609375
    4. ' grid' → logprob: -11.563323974609375
    5. 'row' → logprob: -12.938323974609375
    6. '[' → logprob: -13.938323974609375
    7. ' ' → logprob: -14.063323974609375
    8. '   ' → logprob: -14.938323974609375
    9. ' row' → logprob: -16.313323974609375
    10. '	range' → logprob: -16.688323974609375

Token 294: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. '3' → logprob: -13.00000286102295
    3. '(len' → logprob: -14.87500286102295
    4. ' (' → logprob: -20.000001907348633
    5. '(
' → logprob: -20.125001907348633
    6. ' ' → logprob: -20.625001907348633
    7. 'len' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.875001907348633
    9. '4' → logprob: -23.750001907348633
    10. '```' → logprob: -23.875001907348633

Token 295: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. 'len' → logprob: -16.500001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '0' → logprob: -20.125001907348633
    6. ' len' → logprob: -20.875001907348633
    7. '1' → logprob: -21.250001907348633
    8. 'def' → logprob: -21.375001907348633
    9. ')' → logprob: -22.250001907348633
    10. '```' → logprob: -22.500001907348633

Token 296: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029801523312926292
    2. '):' → logprob: -3.529801607131958
    3. '):
' → logprob: -10.279801368713379
    4. '   ' → logprob: -11.529801368713379
    5. ' ):
' → logprob: -12.654801368713379
    6. ')' → logprob: -13.029801368713379
    7. '):

' → logprob: -14.404801368713379
    8. ':
' → logprob: -15.279801368713379
    9. ' ):' → logprob: -15.279801368713379
    10. ':' → logprob: -15.279801368713379

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00730264512822032
    2. ' if' → logprob: -5.507302761077881
    3. 'if' → logprob: -5.757302761077881
    4. '   ' → logprob: -9.757302284240723
    5. 'for' → logprob: -14.757302284240723
    6. ' for' → logprob: -14.882302284240723
    7. '           ' → logprob: -15.882302284240723
    8. '	' → logprob: -16.50730323791504
    9. '    ' → logprob: -16.50730323791504
    10. ' ' → logprob: -16.63230323791504

Token 298: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004724887665361166
    2. ' if' → logprob: -5.504724979400635
    3. '   ' → logprob: -7.504724979400635
    4. '       ' → logprob: -9.254724502563477
    5. ' ' → logprob: -17.129724502563477
    6. '	if' → logprob: -17.504724502563477
    7. 'If' → logprob: -17.504724502563477
    8. '    ' → logprob: -18.879724502563477
    9. 'all' → logprob: -19.879724502563477
    10. '     ' → logprob: -20.004724502563477

Token 299: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.018372580409049988
    2. ' all' → logprob: -4.018372535705566
    3. '   ' → logprob: -8.518372535705566
    4. 'grid' → logprob: -11.268372535705566
    5. '    ' → logprob: -12.893372535705566
    6. ' ' → logprob: -13.018372535705566
    7. '       ' → logprob: -13.143372535705566
    8. 'len' → logprob: -14.018372535705566
    9. ' grid' → logprob: -14.268372535705566
    10. '           ' → logprob: -14.893372535705566

Token 300: '(cell' (ID: 46188)
  Prédit: '(cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cell' → logprob: -0.0006488138460554183
    2. '(x' → logprob: -7.5006489753723145
    3. '(grid' → logprob: -10.125648498535156
    4. '(mark' → logprob: -10.750648498535156
    5. '(val' → logprob: -11.250648498535156
    6. '(elem' → logprob: -11.500648498535156
    7. '(row' → logprob: -12.625648498535156
    8. '(value' → logprob: -12.625648498535156
    9. '(' → logprob: -13.750648498535156
    10. '(c' → logprob: -14.000648498535156

Token 301: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868805766105652
    2. '==' → logprob: -1.13688063621521
    3. ' ' → logprob: -12.761880874633789
    4. '   ' → logprob: -13.261880874633789
    5. ')==' → logprob: -13.261880874633789
    6. '=' → logprob: -14.386880874633789
    7. ')' → logprob: -14.636880874633789
    8. ']==' → logprob: -15.011880874633789
    9. '[' → logprob: -15.136880874633789
    10. '===' → logprob: -15.386880874633789

Token 302: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.4740777015686035
    2. 'mark' → logprob: -0.9740777015686035
    3. '(mark' → logprob: -15.724077224731445
    4. '_mark' → logprob: -15.849077224731445
    5. ' ' → logprob: -16.474077224731445
    6. 'marked' → logprob: -16.849077224731445
    7. ' Mark' → logprob: -16.974077224731445
    8. 'Mark' → logprob: -16.974077224731445
    9. 'marker' → logprob: -17.224077224731445
    10. ' marks' → logprob: -17.849077224731445

Token 303: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. 'value' → logprob: -17.0
    4. '_VALUE' → logprob: -18.0
    5. ' _' → logprob: -18.625
    6. '_Value' → logprob: -19.0
    7. '_values' → logprob: -19.875
    8. '_val' → logprob: -20.75
    9. ' value' → logprob: -20.875
    10. '   ' → logprob: -21.125

Token 304: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011176437139511108
    2. 'for' → logprob: -4.511176586151123
    3. ')' → logprob: -9.386176109313965
    4. ' ' → logprob: -11.386176109313965
    5. '       ' → logprob: -12.011176109313965
    6. '           ' → logprob: -12.136176109313965
    7. ' )' → logprob: -12.136176109313965
    8. '        ' → logprob: -12.261176109313965
    9. '    ' → logprob: -12.386176109313965
    10. '   ' → logprob: -13.136176109313965

Token 305: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.22543641924858093
    2. ' cell' → logprob: -1.6004364490509033
    3. '	cell' → logprob: -11.100436210632324
    4. 'row' → logprob: -12.725436210632324
    5. '(cell' → logprob: -13.100436210632324
    6. ' row' → logprob: -13.725436210632324
    7. 'cel' → logprob: -13.850436210632324
    8. '[cell' → logprob: -14.725436210632324
    9. ' ' → logprob: -15.350436210632324
    10. '_cell' → logprob: -15.350436210632324

Token 306: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04861859232187271
    2. 'in' → logprob: -3.0486185550689697
    3. 'row' → logprob: -10.67361831665039
    4. ' ' → logprob: -12.79861831665039
    5. ' row' → logprob: -13.29861831665039
    6. '<|end|>' → logprob: -14.29861831665039
    7. ',row' → logprob: -14.29861831665039
    8. 'In' → logprob: -14.67361831665039
    9. '[row' → logprob: -15.17361831665039
    10. ' ' → logprob: -15.42361831665039

Token 307: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.08913390338420868
    2. ' grid' → logprob: -2.4641339778900146
    3. 'row' → logprob: -8.589134216308594
    4. ' row' → logprob: -12.214134216308594
    5. ')' → logprob: -13.839134216308594
    6. '(grid' → logprob: -14.089134216308594
    7. '.grid' → logprob: -14.464134216308594
    8. '	grid' → logprob: -14.714134216308594
    9. '_grid' → logprob: -15.964134216308594
    10. ' ' → logprob: -15.964134216308594

Token 308: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.12500286102295
    3. ' [' → logprob: -15.87500286102295
    4. '```' → logprob: -16.000001907348633
    5. 'i' → logprob: -16.500001907348633
    6. '\[' → logprob: -17.500001907348633
    7. '[
' → logprob: -18.125001907348633
    8. ')' → logprob: -18.250001907348633
    9. ')[' → logprob: -18.750001907348633
    10. '   ' → logprob: -18.875001907348633

Token 309: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.009833062067627907
    2. ']):
' → logprob: -5.259832859039307
    3. ']' → logprob: -6.134832859039307
    4. '):' → logprob: -6.634832859039307
    5. '])' → logprob: -7.759832859039307
    6. ')):' → logprob: -8.634833335876465
    7. '])):
' → logprob: -8.759833335876465
    8. ']))' → logprob: -9.009833335876465
    9. ']:' → logprob: -9.509833335876465
    10. ' ]' → logprob: -10.259833335876465

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45215412974357605
    2. ':' → logprob: -1.0771541595458984
    3. ':
' → logprob: -3.8271541595458984
    4. '       ' → logprob: -6.702154159545898
    5. ':return' → logprob: -9.952154159545898
    6. '               ' → logprob: -10.077154159545898
    7. '):' → logprob: -10.827154159545898
    8. '          ' → logprob: -11.077154159545898
    9. '):
' → logprob: -11.327154159545898
    10. ' :' → logprob: -12.327154159545898

Token 311: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.42781540751457214
    2. '           ' → logprob: -1.1778154373168945
    3. ' return' → logprob: -3.4278154373168945
    4. '               ' → logprob: -4.9278154373168945
    5. '       ' → logprob: -7.9278154373168945
    6. '   ' → logprob: -10.052815437316895
    7. '
' → logprob: -12.052815437316895
    8. '	return' → logprob: -13.177815437316895
    9. ':return' → logprob: -13.177815437316895
    10. '```' → logprob: -13.677815437316895

Token 312: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0485873706638813
    2. ' True' → logprob: -3.0485873222351074
    3. '   ' → logprob: -18.798587799072266
    4. '(True' → logprob: -19.423587799072266
    5. '=True' → logprob: -20.423587799072266
    6. 'true' → logprob: -21.173587799072266
    7. 'False' → logprob: -21.298587799072266
    8. ' ' → logprob: -22.298587799072266
    9. 'mark' → logprob: -22.548587799072266
    10. ' ' → logprob: -23.298587799072266

Token 313: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12487567216157913
    2. '
' → logprob: -2.624875783920288
    3. '    
' → logprob: -3.124875783920288
    4. '  
' → logprob: -7.499875545501709
    5. '        
' → logprob: -9.124876022338867
    6. '   
' → logprob: -9.124876022338867
    7. '<|end|>' → logprob: -9.999876022338867
    8. ' 
' → logprob: -10.249876022338867
    9. '       ' → logprob: -10.499876022338867
    10. '\n' → logprob: -10.624876022338867

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005751936114393175
    2. '#' → logprob: -8.000575065612793
    3. '
' → logprob: -8.375575065612793
    4. '    
' → logprob: -11.875575065612793
    5. '       ' → logprob: -14.125575065612793
    6. '```' → logprob: -14.500575065612793
    7. ' #' → logprob: -14.750575065612793
    8. '  
' → logprob: -15.750575065612793
    9. ',' → logprob: -15.875575065612793
    10. ' ' → logprob: -16.37557601928711

Token 315: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.06211019307374954
    2. '   ' → logprob: -2.812110185623169
    3. '
' → logprob: -9.43710994720459
    4. ' #' → logprob: -10.43710994720459
    5. '```' → logprob: -11.31210994720459
    6. ' ' → logprob: -11.43710994720459
    7. '    
' → logprob: -12.56210994720459
    8. 'for' → logprob: -12.81210994720459
    9. '  ' → logprob: -12.93710994720459
    10. '	' → logprob: -14.68710994720459

Token 316: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0702115148305893
    2. 'Check' → logprob: -2.820211410522461
    3. '   ' → logprob: -5.570211410522461
    4. ' #' → logprob: -6.195211410522461
    5. 'for' → logprob: -6.320211410522461
    6. ' Check' → logprob: -7.695211410522461
    7. ' for' → logprob: -9.320211410522461
    8. ' ' → logprob: -11.820211410522461
    9. '
' → logprob: -12.820211410522461
    10. '  ' → logprob: -13.445211410522461

Token 317: ' columns' (ID: 15697)
  Prédit: ' columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.3165651857852936
    2. 'columns' → logprob: -1.3165651559829712
    3. 'cols' → logprob: -5.941565036773682
    4. ' cols' → logprob: -7.316565036773682
    5. '#' → logprob: -13.56656551361084
    6. 'rows' → logprob: -14.06656551361084
    7. '.columns' → logprob: -14.56656551361084
    8. '   ' → logprob: -14.56656551361084
    9. '(columns' → logprob: -14.56656551361084
    10. '_columns' → logprob: -15.06656551361084

Token 318: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2531752586364746
    2. '   ' → logprob: -1.5031752586364746
    3. ' for' → logprob: -7.878175258636475
    4. '  
' → logprob: -7.878175258636475
    5. '    
' → logprob: -8.003175735473633
    6. 'for' → logprob: -9.378175735473633
    7. '\n' → logprob: -10.753175735473633
    8. '   
' → logprob: -11.378175735473633
    9. '
' → logprob: -11.628175735473633
    10. '```' → logprob: -12.003175735473633

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05954170599579811
    2. '
' → logprob: -2.934541702270508
    3. ' for' → logprob: -5.684541702270508
    4. 'for' → logprob: -7.559541702270508
    5. '    
' → logprob: -7.934541702270508
    6. '  
' → logprob: -8.309541702270508
    7. '```' → logprob: -9.809541702270508
    8. '\n' → logprob: -10.059541702270508
    9. '   
' → logprob: -12.309541702270508
    10. ' 
' → logprob: -12.809541702270508

Token 320: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0021317063365131617
    2. '   ' → logprob: -6.252131938934326
    3. ' for' → logprob: -8.502131462097168
    4. '
' → logprob: -17.502132415771484
    5. '```' → logprob: -18.377132415771484
    6. '	for' → logprob: -18.877132415771484
    7. ' ' → logprob: -19.127132415771484
    8. '       ' → logprob: -19.752132415771484
    9. '    
' → logprob: -20.627132415771484
    10. '  ' → logprob: -20.752132415771484

Token 321: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8015193343162537
    2. 'i' → logprob: -1.0515193939208984
    3. ' j' → logprob: -1.8015193939208984
    4. ' i' → logprob: -3.3015193939208984
    5. ' col' → logprob: -9.926519393920898
    6. 'col' → logprob: -10.926519393920898
    7. ' ' → logprob: -12.926519393920898
    8. 'range' → logprob: -13.676519393920898
    9. ' range' → logprob: -14.301519393920898
    10. '0' → logprob: -14.676519393920898

Token 322: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003608505241572857
    2. 'in' → logprob: -5.628608703613281
    3. ' ' → logprob: -11.753608703613281
    4. '   ' → logprob: -15.628608703613281
    5. 'range' → logprob: -16.25360870361328
    6. 'n' → logprob: -17.00360870361328
    7. '[' → logprob: -17.00360870361328
    8. 'In' → logprob: -17.12860870361328
    9. 'space' → logprob: -17.12860870361328
    10. '    ' → logprob: -17.37860870361328

Token 323: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047935113310814
    2. ' range' → logprob: -4.511047840118408
    3. '3' → logprob: -16.38604736328125
    4. ' ' → logprob: -18.13604736328125
    5. '(range' → logprob: -19.26104736328125
    6. '   ' → logprob: -20.01104736328125
    7. '[' → logprob: -20.38604736328125
    8. '```' → logprob: -21.38604736328125
    9. '0' → logprob: -21.51104736328125
    10. '	range' → logprob: -21.63604736328125

Token 324: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00861468818038702
    2. '3' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.258615493774414
    4. ' (' → logprob: -18.008615493774414
    5. 'range' → logprob: -18.508615493774414
    6. '   ' → logprob: -18.883615493774414
    7. '```' → logprob: -19.758615493774414
    8. '(
' → logprob: -21.008615493774414
    9. '
' → logprob: -21.133615493774414
    10. 'in' → logprob: -21.633615493774414

Token 325: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.125005722045898
    4. 'range' → logprob: -17.8750057220459
    5. '
' → logprob: -18.2500057220459
    6. '```' → logprob: -18.6250057220459
    7. ')' → logprob: -18.7500057220459
    8. '(' → logprob: -19.2500057220459
    9. 'def' → logprob: -19.3750057220459
    10. '       ' → logprob: -19.3750057220459

Token 326: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31333568692207336
    2. '):' → logprob: -1.313335657119751
    3. '   ' → logprob: -10.438335418701172
    4. ':' → logprob: -10.938335418701172
    5. ')' → logprob: -11.063335418701172
    6. ':
' → logprob: -12.563335418701172
    7. ' ):
' → logprob: -13.063335418701172
    8. '):

' → logprob: -13.188335418701172
    9. '):
' → logprob: -13.563335418701172
    10. ' ):' → logprob: -13.563335418701172

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0294208824634552
    2. 'if' → logprob: -4.279420852661133
    3. ' if' → logprob: -4.279420852661133
    4. '   ' → logprob: -6.654420852661133
    5. '    ' → logprob: -14.279420852661133
    6. '           ' → logprob: -14.404420852661133
    7. 'for' → logprob: -14.904420852661133
    8. ' for' → logprob: -14.904420852661133
    9. '     ' → logprob: -15.529420852661133
    10. ' ' → logprob: -15.904420852661133

Token 328: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00550007214769721
    2. ' if' → logprob: -5.255499839782715
    3. '       ' → logprob: -8.755499839782715
    4. '   ' → logprob: -9.130499839782715
    5. 'column' → logprob: -16.00550079345703
    6. ' ' → logprob: -16.50550079345703
    7. 'col' → logprob: -17.38050079345703
    8. '           ' → logprob: -17.75550079345703
    9. '	if' → logprob: -17.88050079345703
    10. 'all' → logprob: -18.50550079345703

Token 329: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.016039881855249405
    2. ' all' → logprob: -4.141039848327637
    3. '   ' → logprob: -12.766039848327637
    4. ' ' → logprob: -13.016039848327637
    5. '    ' → logprob: -16.141040802001953
    6. '	all' → logprob: -16.516040802001953
    7. '(all' → logprob: -16.516040802001953
    8. '  ' → logprob: -16.641040802001953
    9. '
' → logprob: -17.016040802001953
    10. '[' → logprob: -17.016040802001953

Token 330: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.06212408468127251
    2. '(cell' → logprob: -2.812124013900757
    3. 'cell' → logprob: -9.437124252319336
    4. 'grid' → logprob: -10.437124252319336
    5. '(row' → logprob: -10.687124252319336
    6. '(' → logprob: -11.187124252319336
    7. ' (' → logprob: -12.187124252319336
    8. ' cell' → logprob: -12.812124252319336
    9. ' grid' → logprob: -12.937124252319336
    10. '(column' → logprob: -16.437124252319336

Token 331: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020687808864749968
    2. '[' → logprob: -8.50020694732666
    3. 'i' → logprob: -13.87520694732666
    4. '[row' → logprob: -13.87520694732666
    5. '[j' → logprob: -14.00020694732666
    6. '[k' → logprob: -14.50020694732666
    7. '```' → logprob: -17.000205993652344
    8. '[x' → logprob: -17.500205993652344
    9. '[cell' → logprob: -17.750205993652344
    10. '[r' → logprob: -18.125205993652344

Token 332: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4100247621536255
    2. '[i' → logprob: -1.4100247621536255
    3. '[j' → logprob: -2.410024642944336
    4. '[' → logprob: -6.160024642944336
    5. ' [' → logprob: -9.285024642944336
    6. ']' → logprob: -9.910024642944336
    7. ' ][' → logprob: -10.410024642944336
    8. '[I' → logprob: -10.785024642944336
    9. '   ' → logprob: -10.910024642944336
    10. '```' → logprob: -11.160024642944336

Token 333: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.596781946020201e-05
    2. ' j' → logprob: -10.000045776367188
    3. ']' → logprob: -16.000045776367188
    4. '   ' → logprob: -16.375045776367188
    5. 'mark' → logprob: -16.625045776367188
    6. '	j' → logprob: -17.000045776367188
    7. ' ' → logprob: -17.250045776367188
    8. '][' → logprob: -17.250045776367188
    9. '
' → logprob: -17.375045776367188
    10. '```' → logprob: -17.625045776367188

Token 334: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3009316921234131
    2. ' ==' → logprob: -1.800931692123413
    3. '==' → logprob: -2.675931692123413
    4. ']==' → logprob: -3.800931692123413
    5. ')' → logprob: -5.675931930541992
    6. '}' → logprob: -10.425931930541992
    7. ' ]' → logprob: -10.425931930541992
    8. ')==' → logprob: -11.050931930541992
    9. ' ' → logprob: -11.425931930541992
    10. '[' → logprob: -12.550931930541992

Token 335: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16025032103061676
    2. '==' → logprob: -1.9102503061294556
    3. ')' → logprob: -11.160250663757324
    4. ']==' → logprob: -11.910250663757324
    5. ']' → logprob: -13.285250663757324
    6. ')==' → logprob: -13.535250663757324
    7. ' ' → logprob: -13.660250663757324
    8. '=' → logprob: -14.785250663757324
    9. 'for' → logprob: -15.535250663757324
    10. ' for' → logprob: -16.035249710083008

Token 336: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.3132617771625519
    2. 'mark' → logprob: -1.3132617473602295
    3. '(mark' → logprob: -16.938261032104492
    4. '_mark' → logprob: -17.688261032104492
    5. ' ' → logprob: -18.063261032104492
    6. 'marked' → logprob: -19.063261032104492
    7. 'Mark' → logprob: -19.563261032104492
    8. 'marker' → logprob: -19.813261032104492
    9. ' marks' → logprob: -19.938261032104492
    10. ' Mark' → logprob: -19.938261032104492

Token 337: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.15441757265944e-05
    2. 'value' → logprob: -10.875031471252441
    3. 'alue' → logprob: -11.500031471252441
    4. 'mark' → logprob: -13.250031471252441
    5. 'e' → logprob: -15.625031471252441
    6. '_values' → logprob: -15.750031471252441
    7. '_VALUE' → logprob: -15.750031471252441
    8. ' mark' → logprob: -16.375032424926758
    9. 'Value' → logprob: -16.375032424926758
    10. '=' → logprob: -17.500032424926758

Token 338: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07889683544635773
    2. 'for' → logprob: -2.5788967609405518
    3. '	for' → logprob: -12.953896522521973
    4. ' ' → logprob: -13.453896522521973
    5. '   ' → logprob: -13.453896522521973
    6. '       ' → logprob: -14.453896522521973
    7. '    ' → logprob: -14.578896522521973
    8. ')' → logprob: -15.078896522521973
    9. '           ' → logprob: -15.578896522521973
    10. '        ' → logprob: -16.20389747619629

Token 339: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889033854007721
    2. ' i' → logprob: -2.578890323638916
    3. '   ' → logprob: -15.203890800476074
    4. ' ' → logprob: -15.578890800476074
    5. '	i' → logprob: -16.578889846801758
    6. ' range' → logprob: -18.578889846801758
    7. '  ' → logprob: -18.578889846801758
    8. ')' → logprob: -18.953889846801758
    9. 'range' → logprob: -18.953889846801758
    10. ' ' → logprob: -19.078889846801758

Token 340: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002245058072730899
    2. 'in' → logprob: -6.12724494934082
    3. ' range' → logprob: -10.37724494934082
    4. 'range' → logprob: -11.37724494934082
    5. ' ' → logprob: -11.50224494934082
    6. '3' → logprob: -12.00224494934082
    7. '   ' → logprob: -14.75224494934082
    8. ')' → logprob: -15.75224494934082
    9. '(' → logprob: -16.37724494934082
    10. '  ' → logprob: -16.50224494934082

Token 341: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03820100426673889
    2. ' range' → logprob: -3.288201093673706
    3. '3' → logprob: -8.788201332092285
    4. ' ' → logprob: -12.413201332092285
    5. '   ' → logprob: -13.788201332092285
    6. '0' → logprob: -13.913201332092285
    7. 'i' → logprob: -14.663201332092285
    8. '(range' → logprob: -15.663201332092285
    9. '[' → logprob: -16.03820037841797
    10. '  ' → logprob: -16.28820037841797

Token 342: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011720098555088043
    2. '3' → logprob: -6.751172065734863
    3. ' ' → logprob: -13.876172065734863
    4. '(
' → logprob: -14.501172065734863
    5. ' (' → logprob: -15.376172065734863
    6. '   ' → logprob: -15.501172065734863
    7. '	' → logprob: -17.126171112060547
    8. ')' → logprob: -18.626171112060547
    9. '```' → logprob: -18.751171112060547
    10. '' → logprob: -19.001171112060547

Token 343: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.500004768371582
    4. '```' → logprob: -18.500003814697266
    5. '       ' → logprob: -19.750003814697266
    6. ')' → logprob: -19.875003814697266
    7. '(' → logprob: -20.250003814697266
    8. '  ' → logprob: -20.375003814697266
    9. '           ' → logprob: -20.375003814697266
    10. '۳' → logprob: -20.500003814697266

Token 344: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06254947185516357
    2. '):
' → logprob: -2.812549591064453
    3. ')' → logprob: -7.812549591064453
    4. ')):' → logprob: -9.437549591064453
    5. '       ' → logprob: -10.437549591064453
    6. ' ):' → logprob: -10.687549591064453
    7. '   ' → logprob: -11.062549591064453
    8. '):
' → logprob: -11.312549591064453
    9. ')):
' → logprob: -11.937549591064453
    10. ':' → logprob: -12.062549591064453

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021212305000517517
    2. '               ' → logprob: -8.750211715698242
    3. ':
' → logprob: -10.250211715698242
    4. 'return' → logprob: -12.125211715698242
    5. ' return' → logprob: -12.375211715698242
    6. '       ' → logprob: -13.000211715698242
    7. '
' → logprob: -13.125211715698242
    8. ':' → logprob: -13.250211715698242
    9. ':return' → logprob: -13.500211715698242
    10. '		' → logprob: -14.625211715698242

Token 346: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2587985098361969
    2. ' return' → logprob: -1.5087984800338745
    3. '               ' → logprob: -5.008798599243164
    4. '           ' → logprob: -8.883798599243164
    5. '       ' → logprob: -11.383798599243164
    6. '	return' → logprob: -11.633798599243164
    7. '   ' → logprob: -12.258798599243164
    8. ':return' → logprob: -13.633798599243164
    9. '
' → logprob: -14.133798599243164
    10. ')return' → logprob: -14.758798599243164

Token 347: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. '(True' → logprob: -20.500158309936523
    4. '=True' → logprob: -20.875158309936523
    5. '   ' → logprob: -22.750158309936523
    6. 'true' → logprob: -23.250158309936523
    7. ' ' → logprob: -23.500158309936523
    8. 'False' → logprob: -23.500158309936523
    9. 'Yes' → logprob: -24.000158309936523
    10. '_true' → logprob: -24.375158309936523

Token 348: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045325133949518204
    2. '

' → logprob: -3.4203250408172607
    3. '   ' → logprob: -4.54532527923584
    4. '    
' → logprob: -7.54532527923584
    5. '\n' → logprob: -9.04532527923584
    6. '
    
' → logprob: -9.29532527923584
    7. '  
' → logprob: -9.54532527923584
    8. '<|end|>' → logprob: -9.54532527923584
    9. '
' → logprob: -10.67032527923584
    10. '


' → logprob: -10.92032527923584

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011513189412653446
    2. '#' → logprob: -4.7615132331848145
    3. '
' → logprob: -5.8865132331848145
    4. '```' → logprob: -9.136512756347656
    5. '    
' → logprob: -11.636512756347656
    6. '  
' → logprob: -15.011512756347656
    7. '  ' → logprob: -15.386512756347656
    8. '

' → logprob: -15.511512756347656
    9. ' #' → logprob: -15.886512756347656
    10. '``' → logprob: -16.261512756347656

Token 350: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.07897516340017319
    2. '   ' → logprob: -2.578975200653076
    3. '
' → logprob: -9.578974723815918
    4. ' #' → logprob: -11.828974723815918
    5. '    
' → logprob: -12.328974723815918
    6. '```' → logprob: -12.703974723815918
    7. '  ' → logprob: -14.203974723815918
    8. ' ' → logprob: -15.703974723815918
    9. '    ' → logprob: -15.953974723815918
    10. '       ' → logprob: -16.203975677490234

Token 351: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0012999961618334055
    2. 'di' → logprob: -7.376299858093262
    3. '   ' → logprob: -7.501299858093262
    4. 'for' → logprob: -9.501299858093262
    5. 'if' → logprob: -10.626299858093262
    6. 'diag' → logprob: -11.626299858093262
    7. ' #' → logprob: -12.376299858093262
    8. '
' → logprob: -12.501299858093262
    9. 'main' → logprob: -14.126299858093262
    10. '    
' → logprob: -14.251299858093262

Token 352: ' diagon' (ID: 146014)
  Prédit: ' diagon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diagon' → logprob: -0.05604896694421768
    2. 'di' → logprob: -3.05604887008667
    3. ' main' → logprob: -5.30604887008667
    4. ' (' → logprob: -7.55604887008667
    5. ' diagonal' → logprob: -7.55604887008667
    6. '(' → logprob: -7.93104887008667
    7. '[' → logprob: -8.306049346923828
    8. '(di' → logprob: -8.931049346923828
    9. '(grid' → logprob: -9.056049346923828
    10. ' grid' → logprob: -9.181049346923828

Token 353: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.0005545823951251805
    2. 'al' → logprob: -7.50055456161499
    3. 'on' → logprob: -14.500555038452148
    4. 'g' → logprob: -15.125555038452148
    5. '#' → logprob: -15.500555038452148
    6. 'ols' → logprob: -15.625555038452148
    7. '[' → logprob: -15.750555038452148
    8. '```' → logprob: -16.37555503845215
    9. 'onal' → logprob: -17.12555503845215
    10. '   ' → logprob: -17.25055503845215

Token 354: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2820085883140564
    2. '
' → logprob: -1.4070086479187012
    3. '    
' → logprob: -7.282008647918701
    4. ' for' → logprob: -9.907008171081543
    5. '  
' → logprob: -10.282008171081543
    6. 'for' → logprob: -10.407008171081543
    7. '   
' → logprob: -11.282008171081543
    8. '```' → logprob: -11.282008171081543
    9. '\n' → logprob: -12.157008171081543
    10. '

' → logprob: -12.407008171081543

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031326785683631897
    2. '
' → logprob: -5.8781328201293945
    3. '    
' → logprob: -9.003132820129395
    4. 'for' → logprob: -9.128132820129395
    5. 'if' → logprob: -10.128132820129395
    6. ' for' → logprob: -10.253132820129395
    7. '  
' → logprob: -11.503132820129395
    8. ' if' → logprob: -12.628132820129395
    9. '   
' → logprob: -12.878132820129395
    10. '```' → logprob: -13.503132820129395

Token 356: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.032135527580976486
    2. '   ' → logprob: -4.032135486602783
    3. ' if' → logprob: -4.282135486602783
    4. 'for' → logprob: -9.657135963439941
    5. 'return' → logprob: -12.032135963439941
    6. '[' → logprob: -12.657135963439941
    7. ' for' → logprob: -14.407135963439941
    8. '    
' → logprob: -15.407135963439941
    9. '[
' → logprob: -15.407135963439941
    10. 'di' → logprob: -15.532135963439941

Token 357: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7335772514343262
    2. ' all' → logprob: -0.8585772514343262
    3. 'grid' → logprob: -3.358577251434326
    4. '(grid' → logprob: -3.483577251434326
    5. ' grid' → logprob: -3.608577251434326
    6. ' (' → logprob: -6.233577251434326
    7. '(all' → logprob: -6.608577251434326
    8. '   ' → logprob: -9.733577728271484
    9. '(' → logprob: -9.733577728271484
    10. '(
' → logprob: -11.358577728271484

Token 358: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -6.704273118884885e-07
    2. 'grid' → logprob: -14.250000953674316
    3. '(' → logprob: -18.875
    4. ' grid' → logprob: -20.75
    5. '	grid' → logprob: -21.5
    6. '(row' → logprob: -21.75
    7. '(cell' → logprob: -22.0
    8. ':grid' → logprob: -22.125
    9. '(
' → logprob: -22.625
    10. '(graph' → logprob: -23.125

Token 359: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. '   ' → logprob: -16.875
    4. '[k' → logprob: -17.75
    5. '[j' → logprob: -18.125
    6. 'i' → logprob: -18.25
    7. '```' → logprob: -20.0
    8. '[row' → logprob: -21.125
    9. ' [' → logprob: -21.375
    10. '  ' → logprob: -22.25

Token 360: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14275959134101868
    2. '[i' → logprob: -2.0177595615386963
    3. '[' → logprob: -10.142759323120117
    4. ')[' → logprob: -10.892759323120117
    5. '[j' → logprob: -12.267759323120117
    6. ' [' → logprob: -12.267759323120117
    7. '
' → logprob: -12.392759323120117
    8. ' ][' → logprob: -12.392759323120117
    9. '   ' → logprob: -12.892759323120117
    10. '[I' → logprob: -13.142759323120117

Token 361: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00019376569252926856
    2. '[i' → logprob: -9.37519359588623
    3. 'mark' → logprob: -9.87519359588623
    4. ' i' → logprob: -10.50019359588623
    5. '(i' → logprob: -12.00019359588623
    6. '[' → logprob: -12.25019359588623
    7. '][' → logprob: -12.50019359588623
    8. '
' → logprob: -12.75019359588623
    9. '   ' → logprob: -12.87519359588623
    10. '0' → logprob: -13.25019359588623

Token 362: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2544701397418976
    2. '==' → logprob: -1.5044701099395752
    3. ']' → logprob: -6.129470348358154
    4. ']==' → logprob: -8.129469871520996
    5. ')' → logprob: -9.754469871520996
    6. ' ' → logprob: -13.004469871520996
    7. ' ]' → logprob: -13.879469871520996
    8. ')==' → logprob: -14.129469871520996
    9. '```' → logprob: -14.379469871520996
    10. 'for' → logprob: -14.379469871520996

Token 363: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20142561197280884
    2. '==' → logprob: -1.701425552368164
    3. ')' → logprob: -12.076425552368164
    4. ']==' → logprob: -12.701425552368164
    5. ' ' → logprob: -14.076425552368164
    6. ']' → logprob: -14.076425552368164
    7. ')==' → logprob: -14.576425552368164
    8. '=' → logprob: -14.576425552368164
    9. 'for' → logprob: -14.951425552368164
    10. ' for' → logprob: -15.951425552368164

Token 364: ' mark' (ID: 1983)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.3868711292743683
    2. ' mark' → logprob: -1.136871099472046
    3. '(mark' → logprob: -16.886871337890625
    4. '_mark' → logprob: -17.511871337890625
    5. 'marked' → logprob: -19.261871337890625
    6. ' ' → logprob: -19.636871337890625
    7. 'marker' → logprob: -19.886871337890625
    8. 'Mark' → logprob: -20.261871337890625
    9. ' Mark' → logprob: -20.761871337890625
    10. '.mark' → logprob: -20.761871337890625

Token 365: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.856408536899835e-05
    2. 'value' → logprob: -10.500028610229492
    3. 'alue' → logprob: -14.500028610229492
    4. 'Value' → logprob: -15.500028610229492
    5. '_VALUE' → logprob: -15.750028610229492
    6. '-value' → logprob: -17.250028610229492
    7. '_' → logprob: -17.625028610229492
    8. 'ed' → logprob: -18.375028610229492
    9. ' value' → logprob: -18.375028610229492
    10. 'mark' → logprob: -18.625028610229492

Token 366: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25193002820014954
    2. 'for' → logprob: -1.5019299983978271
    3. '    ' → logprob: -15.626930236816406
    4. '   ' → logprob: -15.626930236816406
    5. '	for' → logprob: -16.001930236816406
    6. ')' → logprob: -16.251930236816406
    7. ' ' → logprob: -16.626930236816406
    8. '           ' → logprob: -16.876930236816406
    9. 'or' → logprob: -16.876930236816406
    10. '       ' → logprob: -17.001930236816406

Token 367: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0185299813747406
    2. ' i' → logprob: -4.018529891967773
    3. 'range' → logprob: -8.268529891967773
    4. ' range' → logprob: -9.018529891967773
    5. 'in' → logprob: -13.893529891967773
    6. '
' → logprob: -13.893529891967773
    7. ' in' → logprob: -15.143529891967773
    8. '   ' → logprob: -16.518529891967773
    9. ' ' → logprob: -16.643529891967773
    10. ' ' → logprob: -16.768529891967773

Token 368: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04864504933357239
    2. 'in' → logprob: -3.04864501953125
    3. '3' → logprob: -10.04864501953125
    4. 'range' → logprob: -11.54864501953125
    5. ' range' → logprob: -13.04864501953125
    6. ' ' → logprob: -13.92364501953125
    7. '   ' → logprob: -14.17364501953125
    8. ')' → logprob: -14.79864501953125
    9. '
' → logprob: -15.04864501953125
    10. '(' → logprob: -15.79864501953125

Token 369: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858816787600517
    2. ' range' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.923587799072266
    4. '3' → logprob: -15.423587799072266
    5. '(range' → logprob: -16.048587799072266
    6. '   ' → logprob: -16.048587799072266
    7. '	range' → logprob: -17.298587799072266
    8. '  ' → logprob: -17.798587799072266
    9. '[' → logprob: -18.923587799072266
    10. '    ' → logprob: -19.173587799072266

Token 370: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011048762127757072
    2. '3' → logprob: -4.511048793792725
    3. 'range' → logprob: -14.386048316955566
    4. ' ' → logprob: -15.261048316955566
    5. '   ' → logprob: -16.261049270629883
    6. '```' → logprob: -17.886049270629883
    7. ' range' → logprob: -18.386049270629883
    8. ' (' → logprob: -18.886049270629883
    9. '(range' → logprob: -19.011049270629883
    10. '(
' → logprob: -19.011049270629883

Token 371: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'range' → logprob: -14.750001907348633
    4. '   ' → logprob: -16.250001907348633
    5. ' range' → logprob: -18.750001907348633
    6. '
' → logprob: -19.000001907348633
    7. '(' → logprob: -19.125001907348633
    8. '```' → logprob: -19.500001907348633
    9. '       ' → logprob: -20.000001907348633
    10. ')' → logprob: -20.250001907348633

Token 372: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.474895715713501
    2. '):' → logprob: -1.224895715713501
    3. ')' → logprob: -2.474895715713501
    4. '):

' → logprob: -9.974895477294922
    5. '   ' → logprob: -10.724895477294922
    6. '):
' → logprob: -10.974895477294922
    7. ')
' → logprob: -13.974895477294922
    8. ')**' → logprob: -14.349895477294922
    9. '       ' → logprob: -14.599895477294922
    10. ' ):
' → logprob: -14.849895477294922

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017012449679896235
    2. '   ' → logprob: -7.376701354980469
    3. ' and' → logprob: -7.626701354980469
    4. ':
' → logprob: -8.501701354980469
    5. ' return' → logprob: -8.751701354980469
    6. ':' → logprob: -9.251701354980469
    7. ':return' → logprob: -9.751701354980469
    8. ' or' → logprob: -11.251701354980469
    9. ' :
' → logprob: -11.376701354980469
    10. ' :' → logprob: -11.376701354980469

Token 374: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.15464399755001068
    2. '       ' → logprob: -2.154644012451172
    3. 'return' (adapté à ' return') → logprob: -3.654644012451172
    4. '   ' → logprob: -6.529644012451172
    5. '	return' → logprob: -12.779644012451172
    6. ' ' → logprob: -13.904644012451172
    7. ':return' → logprob: -14.654644012451172
    8. '
' → logprob: -15.029644012451172
    9. '           ' → logprob: -15.279644012451172
    10. ' ' → logprob: -15.529644012451172

Token 375: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.7610454708337784e-05
    2. ' True' → logprob: -10.500027656555176
    3. '(True' → logprob: -19.62502670288086
    4. '=True' → logprob: -21.00002670288086
    5. 'False' → logprob: -21.25002670288086
    6. 'true' → logprob: -22.37502670288086
    7. '   ' → logprob: -22.62502670288086
    8. '[' → logprob: -23.00002670288086
    9. 'Tr' → logprob: -23.75002670288086
    10. 'T' → logprob: -23.75002670288086

Token 376: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016758376732468605
    2. '   ' → logprob: -4.391758441925049
    3. '    
' → logprob: -6.016758441925049
    4. '\n' → logprob: -6.766758441925049
    5. ' 
' → logprob: -8.01675796508789
    6. '  
' → logprob: -8.39175796508789
    7. '   
' → logprob: -10.51675796508789
    8. '

' → logprob: -10.89175796508789
    9. '\
' → logprob: -10.89175796508789
    10. '
' → logprob: -11.64175796508789

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5772100687026978
    2. '
' → logprob: -0.8272100687026978
    3. '    
' → logprob: -6.827209949493408
    4. '\n' → logprob: -9.077210426330566
    5. '  
' → logprob: -10.327210426330566
    6. 'if' → logprob: -11.202210426330566
    7. ' if' → logprob: -12.202210426330566
    8. ' 
' → logprob: -12.202210426330566
    9. '   
' → logprob: -12.452210426330566
    10. '
' → logprob: -12.577210426330566

Token 378: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7049710750579834
    2. '
' → logprob: -0.8299710750579834
    3. ' 
' → logprob: -3.4549710750579834
    4. '    
' → logprob: -3.7049710750579834
    5. '\n' → logprob: -5.0799713134765625
    6. '  
' → logprob: -5.7049713134765625
    7. ' if' → logprob: -6.0799713134765625
    8. 'if' (adapté à ' if') → logprob: -7.4549713134765625
    9. '\
' → logprob: -7.9549713134765625
    10. '   
' → logprob: -7.9549713134765625

Token 379: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.16022422909736633
    2. 'all' → logprob: -1.910224199295044
    3. ' ' → logprob: -16.78522491455078
    4. '	all' → logprob: -17.28522491455078
    5. '(all' → logprob: -17.66022491455078
    6. ' ' → logprob: -17.78522491455078
    7. '.all' → logprob: -18.16022491455078
    8. '   ' → logprob: -18.16022491455078
    9. ' any' → logprob: -18.78522491455078
    10. 'All' → logprob: -19.28522491455078

Token 380: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: 0.0
    2. 'grid' → logprob: -17.625
    3. '(' → logprob: -19.75
    4. '(row' → logprob: -20.625
    5. '(
' → logprob: -21.75
    6. ' grid' → logprob: -22.25
    7. '([' → logprob: -22.25
    8. '(Grid' → logprob: -22.5
    9. ':grid' → logprob: -22.875
    10. '	grid' → logprob: -23.25

Token 381: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.625
    3. '(i' → logprob: -18.125
    4. 'i' → logprob: -18.375
    5. '[j' → logprob: -18.75
    6. '```' → logprob: -19.875
    7. '   ' → logprob: -20.0
    8. '[I' → logprob: -20.75
    9. 'import' → logprob: -21.75
    10. ' [' → logprob: -22.125

Token 382: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1724860668182373
    2. '[' → logprob: -1.9224860668182373
    3. '[i' → logprob: -4.422486305236816
    4. '}[' → logprob: -9.547486305236816
    5. '[j' → logprob: -9.797486305236816
    6. '>[' → logprob: -10.672486305236816
    7. '   ' → logprob: -12.047486305236816
    8. '[::-' → logprob: -12.172486305236816
    9. '```' → logprob: -12.547486305236816
    10. ')[' → logprob: -12.922486305236816

Token 383: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. '3' → logprob: -13.250001907348633
    3. '(' → logprob: -15.875001907348633
    4. ' ' → logprob: -15.875001907348633
    5. '
' → logprob: -17.250001907348633
    6. 'len' → logprob: -18.000001907348633
    7. 'i' → logprob: -18.500001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '```' → logprob: -19.375001907348633
    10. '[' → logprob: -20.250001907348633

Token 384: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.051680512726306915
    2. '-' → logprob: -3.301680564880371
    3. '-i' → logprob: -4.301680564880371
    4. ' ' → logprob: -15.176680564880371
    5. '[i' → logprob: -15.801680564880371
    6. '   ' → logprob: -16.301679611206055
    7. 'i' → logprob: -16.426679611206055
    8. '−' → logprob: -16.801679611206055
    9. '[' → logprob: -17.176679611206055
    10. '```' → logprob: -18.176679611206055

Token 385: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.306760805164231e-05
    2. ' i' → logprob: -11.25001335144043
    3. '   ' → logprob: -20.37501335144043
    4. 'I' → logprob: -20.62501335144043
    5. '	i' → logprob: -20.62501335144043
    6. '1' → logprob: -20.75001335144043
    7. '[i' → logprob: -21.62501335144043
    8. ' ' → logprob: -21.75001335144043
    9. '(i' → logprob: -22.25001335144043
    10. ')i' → logprob: -22.37501335144043

Token 386: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002693224814720452
    2. ']==' → logprob: -8.250268936157227
    3. ' ]' → logprob: -12.000268936157227
    4. '==' → logprob: -13.625268936157227
    5. ')' → logprob: -15.500268936157227
    6. ' ==' → logprob: -16.000268936157227
    7. '```' → logprob: -16.125268936157227
    8. ']
' → logprob: -16.375268936157227
    9. '[' → logprob: -16.625268936157227
    10. '   ' → logprob: -16.750268936157227

Token 387: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5765694379806519
    2. '==' → logprob: -0.8265694379806519
    3. ']==' → logprob: -7.826569557189941
    4. ']' → logprob: -8.701569557189941
    5. ')' → logprob: -9.826569557189941
    6. ')==' → logprob: -12.201569557189941
    7. ' ' → logprob: -13.076569557189941
    8. '[' → logprob: -13.201569557189941
    9. '=' → logprob: -14.451569557189941
    10. '```' → logprob: -14.451569557189941

Token 388: ' mark' (ID: 1983)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.10020667314529419
    2. ' mark' → logprob: -2.3502066135406494
    3. '3' → logprob: -17.22520637512207
    4. '(mark' → logprob: -17.72520637512207
    5. ' ' → logprob: -18.10020637512207
    6. '_mark' → logprob: -18.60020637512207
    7. '   ' → logprob: -18.97520637512207
    8. 'marker' → logprob: -19.35020637512207
    9. 'marked' → logprob: -19.60020637512207
    10. 'Mark' → logprob: -20.22520637512207

Token 389: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -7.226628895296017e-06
    2. 'value' → logprob: -11.875007629394531
    3. 'Value' → logprob: -16.87500762939453
    4. 'alue' → logprob: -17.00000762939453
    5. '_VALUE' → logprob: -17.00000762939453
    6. '-value' → logprob: -17.37500762939453
    7. '_Value' → logprob: -18.12500762939453
    8. '```' → logprob: -18.37500762939453
    9. '_values' → logprob: -18.75000762939453
    10. '[i' → logprob: -19.12500762939453

Token 390: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03805216774344444
    2. 'for' → logprob: -3.2880520820617676
    3. '==' → logprob: -11.913052558898926
    4. ' ' → logprob: -12.913052558898926
    5. ' ==' → logprob: -13.538052558898926
    6. '   ' → logprob: -16.91305160522461
    7. ')' → logprob: -17.16305160522461
    8. ' mark' → logprob: -17.28805160522461
    9. '[' → logprob: -17.66305160522461
    10. '	for' → logprob: -17.78805160522461

Token 391: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0067154900170862675
    2. ' i' → logprob: -5.006715297698975
    3. ' range' → logprob: -17.006715774536133
    4. '   ' → logprob: -17.506715774536133
    5. 'range' → logprob: -18.006715774536133
    6. ' ' → logprob: -18.881715774536133
    7. '3' → logprob: -19.131715774536133
    8. '```' → logprob: -19.756715774536133
    9. '[i' → logprob: -19.881715774536133
    10. '	i' → logprob: -20.131715774536133

Token 392: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3870714604854584
    2. 'in' → logprob: -1.1370714902877808
    3. 'range' → logprob: -8.63707160949707
    4. ' range' → logprob: -10.76207160949707
    5. '(' → logprob: -13.63707160949707
    6. '3' → logprob: -15.13707160949707
    7. '   ' → logprob: -15.63707160949707
    8. 'import' → logprob: -16.38707160949707
    9. '```' → logprob: -16.63707160949707
    10. ' ' → logprob: -17.01207160949707

Token 393: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '3' → logprob: -17.62502670288086
    4. '(range' → logprob: -18.37502670288086
    5. '   ' → logprob: -21.87502670288086
    6. '
' → logprob: -21.87502670288086
    7. '(' → logprob: -23.00002670288086
    8. '	range' → logprob: -23.62502670288086
    9. ' ' → logprob: -24.00002670288086
    10. '2' → logprob: -24.50002670288086

Token 394: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00028982185176573694
    2. '3' → logprob: -8.250289916992188
    3. 'range' → logprob: -10.625289916992188
    4. ' (' → logprob: -13.000289916992188
    5. ' range' → logprob: -13.625289916992188
    6. ' ' → logprob: -15.250289916992188
    7. '(range' → logprob: -15.250289916992188
    8. '   ' → logprob: -15.875289916992188
    9. '(
' → logprob: -16.875289916992188
    10. '```' → logprob: -17.125289916992188

Token 395: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4021237802808173e-05
    2. 'range' → logprob: -11.375014305114746
    3. ' ' → logprob: -13.375014305114746
    4. '   ' → logprob: -14.750014305114746
    5. '(' → logprob: -15.125014305114746
    6. ' range' → logprob: -15.750014305114746
    7. '```' → logprob: -16.75001335144043
    8. '
' → logprob: -17.62501335144043
    9. '2' → logprob: -17.87501335144043
    10. '(range' → logprob: -18.37501335144043

Token 396: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.046012625098228455
    2. '):
' → logprob: -3.2960126399993896
    3. ')):' → logprob: -5.0460124015808105
    4. ')' → logprob: -6.9210124015808105
    5. ')):
' → logprob: -7.6710124015808105
    6. '))' → logprob: -10.296012878417969
    7. '   ' → logprob: -12.046012878417969
    8. '):

' → logprob: -12.546012878417969
    9. ' ):' → logprob: -12.671012878417969
    10. ':' → logprob: -13.421012878417969

Token 397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001400952460244298
    2. ':' → logprob: -6.751400947570801
    3. ':
' → logprob: -9.0014009475708
    4. '   ' → logprob: -10.3764009475708
    5. ':return' → logprob: -10.5014009475708
    6. ' return' → logprob: -11.2514009475708
    7. ' ' → logprob: -11.7514009475708
    8. '==' → logprob: -12.6264009475708
    9. '    ' → logprob: -12.6264009475708
    10. '	' → logprob: -12.7514009475708

Token 398: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1564980000257492
    2. '       ' → logprob: -2.4064979553222656
    3. 'return' (adapté à ' return') → logprob: -2.9064979553222656
    4. '           ' → logprob: -9.906497955322266
    5. '   ' → logprob: -10.906497955322266
    6. '	return' → logprob: -14.031497955322266
    7. ':return' → logprob: -15.156497955322266
    8. ' ' → logprob: -16.281497955322266
    9. '    ' → logprob: -16.781497955322266
    10. '               ' → logprob: -17.031497955322266

Token 399: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0005530327325686812
    2. ' True' → logprob: -7.500553131103516
    3. 'False' → logprob: -18.750553131103516
    4. '(True' → logprob: -21.375553131103516
    5. '=True' → logprob: -22.000553131103516
    6. 'Yes' → logprob: -23.125553131103516
    7. '   ' → logprob: -23.500553131103516
    8. 'true' → logprob: -24.625553131103516
    9. '.True' → logprob: -25.000553131103516
    10. 'Tr' → logprob: -25.625553131103516

Token 400: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20859265327453613
    2. '
' → logprob: -1.7085926532745361
    3. '    
' → logprob: -4.958592414855957
    4. 'return' → logprob: -10.083592414855957
    5. '<|end|>' → logprob: -10.583592414855957
    6. '  
' → logprob: -10.958592414855957
    7. ' return' → logprob: -11.708592414855957
    8. '\n' → logprob: -12.208592414855957
    9. '	return' → logprob: -12.333592414855957
    10. '
' → logprob: -12.333592414855957

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012072437442839146
    2. 'False' → logprob: -4.762072563171387
    3. '
' → logprob: -6.512072563171387
    4. '    
' → logprob: -6.887072563171387
    5. 'return' → logprob: -7.012072563171387
    6. ' False' → logprob: -11.262072563171387
    7. '\n' → logprob: -11.887072563171387
    8. ' return' → logprob: -12.012072563171387
    9. 'false' → logprob: -12.262072563171387
    10. 'None' → logprob: -12.637072563171387

Token 402: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011080006137490273
    2. '   ' → logprob: -4.511079788208008
    3. 'False' → logprob: -11.011079788208008
    4. ' return' → logprob: -11.261079788208008
    5. '
' → logprob: -13.511079788208008
    6. 'false' → logprob: -14.511079788208008
    7. '	return' → logprob: -14.636079788208008
    8. '    
' → logprob: -15.011079788208008
    9. '```' → logprob: -17.261079788208008
    10. '{return' → logprob: -17.511079788208008

Token 403: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001170225441455841
    2. ' False' → logprob: -6.7511701583862305
    3. '(False' → logprob: -23.626171112060547
    4. 'True' → logprob: -26.001171112060547
    5. 'false' → logprob: -27.001171112060547
    6. 'None' → logprob: -27.876171112060547
    7. '=False' → logprob: -28.501171112060547
    8. '_false' → logprob: -28.626171112060547
    9. '.False' → logprob: -29.376171112060547
    10. 'FALSE' → logprob: -29.626171112060547

Token 404: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.602024900028482e-05
    2. '```' → logprob: -9.875085830688477
    3. 'b' → logprob: -11.250085830688477
    4. '#' → logprob: -12.250085830688477
    5. 'number' → logprob: -12.250085830688477
    6. 'B' → logprob: -12.875085830688477
    7. 'n' → logprob: -13.125085830688477
    8. 'ndef' → logprob: -13.250085830688477
    9. 'mark' → logprob: -13.500085830688477
    10. 'marked' → logprob: -13.625085830688477

Token 405: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005550591740757227
    2. 'n' → logprob: -8.750555038452148
    3. '```' → logprob: -9.250555038452148
    4. 'for' → logprob: -9.375555038452148
    5. 'number' → logprob: -9.625555038452148
    6. 'b' → logprob: -9.750555038452148
    7. '#' → logprob: -10.875555038452148
    8. '
' → logprob: -11.000555038452148
    9. 'marked' → logprob: -11.500555038452148
    10. 'ndef' → logprob: -11.625555038452148

Token 406: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.032360609620809555
    2. ' play' → logprob: -4.157360553741455
    3. ' simulate' → logprob: -4.782360553741455
    4. 'main' → logprob: -5.532360553741455
    5. ' check' → logprob: -6.157360553741455
    6. ' find' → logprob: -7.907360553741455
    7. ' mark' → logprob: -7.907360553741455
    8. 'simulate' → logprob: -8.157361030578613
    9. 'play' → logprob: -8.407361030578613
    10. ' bingo' → logprob: -8.782361030578613

Token 407: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.620622712536715e-05
    2. ' ():' → logprob: -10.125045776367188
    3. '():
' → logprob: -12.375045776367188
    4. '_' → logprob: -14.125045776367188
    5. '()' → logprob: -14.125045776367188
    6. '():
' → logprob: -15.375045776367188
    7. '(' → logprob: -17.375045776367188
    8. '():

' → logprob: -18.000045776367188
    9. '_def' → logprob: -18.250045776367188
    10. 'def' → logprob: -18.750045776367188

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009012157097458839
    2. 'grid' → logprob: -8.125901222229004
    3. ' grid' → logprob: -8.375901222229004
    4. '```' → logprob: -8.625901222229004
    5. '    
' → logprob: -9.750901222229004
    6. '
' → logprob: -10.250901222229004
    7. '(grid' → logprob: -10.500901222229004
    8. '()' → logprob: -10.750901222229004
    9. '\' → logprob: -11.500901222229004
    10. 'n' → logprob: -12.000901222229004

Token 409: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8301813006401062
    2. ' grid' → logprob: -0.8301813006401062
    3. 'grid' → logprob: -2.580181360244751
    4. 'b' → logprob: -3.955181360244751
    5. ' bingo' → logprob: -3.955181360244751
    6. '#' → logprob: -4.955181121826172
    7. ' grids' → logprob: -6.080181121826172
    8. ' b' → logprob: -6.580181121826172
    9. ' #' → logprob: -7.205181121826172
    10. ' marked' → logprob: -7.705181121826172

Token 410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3639278709888458
    2. ' grid' → logprob: -1.7389278411865234
    3. 'grid' → logprob: -2.3639278411865234
    4. '#' → logprob: -4.113927841186523
    5. ' #' → logprob: -4.988927841186523
    6. '"""
' → logprob: -5.863927841186523
    7. ' """
' → logprob: -6.363927841186523
    8. '[' → logprob: -6.738927841186523
    9. '    ' → logprob: -7.238927841186523
    10. 'n' → logprob: -7.613927841186523

Token 411: ' Main' (ID: 7956)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.915991485118866
    2. 'grid' → logprob: -1.4159915447235107
    3. ' grid' → logprob: -1.9159915447235107
    4. '#' → logprob: -2.1659915447235107
    5. '   ' → logprob: -2.9159915447235107
    6. ' bingo' → logprob: -4.040991306304932
    7. ' b' → logprob: -4.790991306304932
    8. ' #' → logprob: -5.165991306304932
    9. 'n' → logprob: -6.040991306304932
    10. ' n' → logprob: -6.665991306304932

Token 412: ' function' (ID: 1114)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4758211374282837
    2. '():
' → logprob: -0.9758211374282837
    3. '()' → logprob: -6.600821018218994
    4. 'def' → logprob: -7.975821018218994
    5. '():
' → logprob: -11.100821495056152
    6. '   ' → logprob: -11.850821495056152
    7. ':' → logprob: -12.475821495056152
    8. '():

' → logprob: -12.725821495056152
    9. ' ():' → logprob: -12.850821495056152
    10. ' ' → logprob: -13.725821495056152

Token 413: ' to' (ID: 316)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.029968472197651863
    2. '():
' → logprob: -3.529968500137329
    3. ':' → logprob: -9.15496826171875
    4. '   ' → logprob: -9.90496826171875
    5. 'def' → logprob: -10.15496826171875
    6. '()' → logprob: -10.90496826171875
    7. ' ():' → logprob: -12.65496826171875
    8. ':
' → logprob: -14.27996826171875
    9. '():
' → logprob: -14.65496826171875
    10. '):' → logprob: -14.90496826171875

Token 414: ' run' (ID: 2461)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5041524767875671
    2. ' run' → logprob: -1.879152536392212
    3. ' process' → logprob: -2.129152536392212
    4. ' complete' → logprob: -3.379152536392212
    5. ' implement' → logprob: -3.879152536392212
    6. ' initialize' → logprob: -4.629152297973633
    7. 'read' → logprob: -4.879152297973633
    8. ' create' → logprob: -5.004152297973633
    9. ' assemble' → logprob: -5.004152297973633
    10. ' handle' → logprob: -5.254152297973633

Token 415: ' the' (ID: 290)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5897048711776733
    2. '()' → logprob: -1.3397048711776733
    3. '():' → logprob: -2.214704990386963
    4. ' the' → logprob: -3.214704990386963
    5. 'the' → logprob: -4.339704990386963
    6. '   ' → logprob: -4.464704990386963
    7. 'def' → logprob: -5.464704990386963
    8. '()
' → logprob: -5.589704990386963
    9. '
' → logprob: -7.714704990386963
    10. ' a' → logprob: -7.839704990386963

Token 416: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8222362399101257
    2. ' game' → logprob: -0.9472362399101257
    3. 'game' → logprob: -2.5722362995147705
    4. ' bingo' → logprob: -2.6972362995147705
    5. ' program' → logprob: -4.447236061096191
    6. 'B' → logprob: -4.572236061096191
    7. ' code' → logprob: -6.447236061096191
    8. '   ' → logprob: -6.572236061096191
    9. 'program' → logprob: -6.697236061096191
    10. ' Bingo' → logprob: -7.072236061096191

Token 417: ' check' (ID: 2371)
  Prédit: ' game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' game' → logprob: -0.008541406132280827
    2. 'game' → logprob: -4.883541584014893
    3. '   ' → logprob: -8.258541107177734
    4. 'b' → logprob: -8.633541107177734
    5. '_game' → logprob: -8.758541107177734
    6. ' program' → logprob: -8.883541107177734
    7. '
' → logprob: -9.383541107177734
    8. ' grid' → logprob: -10.883541107177734
    9. ' ' → logprob: -11.008541107177734
    10. '()' → logprob: -11.383541107177734

Token 418: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4102007746696472
    2. '():
' → logprob: -1.660200834274292
    3. '():' → logprob: -2.160200834274292
    4. ':' → logprob: -3.910200834274292
    5. ':
' → logprob: -4.785200595855713
    6. '()' → logprob: -6.910200595855713
    7. '.' → logprob: -7.160200595855713
    8. 'game' → logprob: -9.035201072692871
    9. 'def' → logprob: -9.160201072692871
    10. '()
' → logprob: -9.160201072692871

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015943869948387146
    2. '```' → logprob: -10.00015926361084
    3. '
' → logprob: -10.12515926361084
    4. '#' → logprob: -10.50015926361084
    5. '    
' → logprob: -11.12515926361084
    6. '    ' → logprob: -11.25015926361084
    7. 'grid' → logprob: -11.87515926361084
    8. 'n' → logprob: -13.00015926361084
    9. ')' → logprob: -13.25015926361084
    10. '<|end|>' → logprob: -13.62515926361084

Token 420: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003020606702193618
    2. 'grid' → logprob: -6.253020763397217
    3. ' grid' → logprob: -7.628020763397217
    4. '```' → logprob: -8.253020286560059
    5. '#' → logprob: -8.628020286560059
    6. '
' → logprob: -10.128020286560059
    7. '    ' → logprob: -10.128020286560059
    8. ' ' → logprob: -10.753020286560059
    9. '    
' → logprob: -11.128020286560059
    10. 'n' → logprob: -11.128020286560059

Token 421: ' three' (ID: 3407)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.257437527179718
    2. 'the' → logprob: -2.3824374675750732
    3. '   ' → logprob: -2.7574374675750732
    4. '()' → logprob: -3.6324374675750732
    5. ' three' → logprob: -3.6324374675750732
    6. ' nine' → logprob: -5.382437705993652
    7. ' grid' → logprob: -5.882437705993652
    8. ' ' → logprob: -5.882437705993652
    9. 'three' → logprob: -6.257437705993652
    10. ' grids' → logprob: -6.882437705993652

Token 422: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.0772094577550888
    2. 'rows' → logprob: -3.20220947265625
    3. ' lines' → logprob: -3.45220947265625
    4. ' grid' → logprob: -6.95220947265625
    5. ' more' → logprob: -8.07720947265625
    6. 'grid' → logprob: -8.20220947265625
    7. 'lines' → logprob: -9.07720947265625
    8. ' grids' → logprob: -9.57720947265625
    9. ' times' → logprob: -9.95220947265625
    10. ' ' → logprob: -10.20220947265625

Token 423: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.20277008414268494
    2. '   ' → logprob: -1.7027701139450073
    3. ' for' → logprob: -7.577770233154297
    4. 'of' → logprob: -8.577770233154297
    5. ',' → logprob: -9.077770233154297
    6. ':' → logprob: -9.577770233154297
    7. '(' → logprob: -9.577770233154297
    8. '()' → logprob: -9.577770233154297
    9. ' from' → logprob: -9.702770233154297
    10. '    ' → logprob: -9.827770233154297

Token 424: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.6506345272064209
    2. ' the' → logprob: -1.525634527206421
    3. 'grid' → logprob: -2.275634527206421
    4. 'the' → logprob: -2.900634527206421
    5. 'b' → logprob: -3.275634527206421
    6. ' bingo' → logprob: -3.775634527206421
    7. ' input' → logprob: -4.150634765625
    8. 'input' → logprob: -4.275634765625
    9. ' a' → logprob: -5.025634765625
    10. 'a' → logprob: -5.900634765625

Token 425: ' numbers' (ID: 8663)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4599516987800598
    2. ' input' → logprob: -2.084951639175415
    3. ',' → logprob: -2.459951639175415
    4. ' for' → logprob: -3.084951639175415
    5. 'input' → logprob: -3.584951639175415
    6. ' and' → logprob: -3.834951639175415
    7. ' numbers' → logprob: -4.334951877593994
    8. ' lines' → logprob: -4.584951877593994
    9. '.' → logprob: -4.709951877593994
    10. ' from' → logprob: -4.959951877593994

Token 426: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006178460083901882
    2. ',' → logprob: -5.256178379058838
    3. ' and' → logprob: -7.756178379058838
    4. ':' → logprob: -9.006178855895996
    5. '()' → logprob: -9.131178855895996
    6. '.' → logprob: -9.631178855895996
    7. 'def' → logprob: -10.006178855895996
    8. '(' → logprob: -10.381178855895996
    9. 'and' → logprob: -10.381178855895996
    10. ' for' → logprob: -10.381178855895996

Token 427: ' a' (ID: 261)
  Prédit: ' marks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marks' → logprob: -0.6652006506919861
    2. ' three' → logprob: -1.6652007102966309
    3. ' a' → logprob: -2.415200710296631
    4. ' the' → logprob: -3.415200710296631
    5. ' calls' → logprob: -3.415200710296631
    6. ' bingo' → logprob: -3.915200710296631
    7. ' numbers' → logprob: -4.165200710296631
    8. ' five' → logprob: -4.790200710296631
    9. ' four' → logprob: -4.790200710296631
    10. '   ' → logprob: -4.790200710296631

Token 428: ' list' (ID: 1562)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6037306785583496
    2. 'called' → logprob: -1.6037306785583496
    3. 'marked' → logprob: -1.7287306785583496
    4. 'number' → logprob: -1.8537306785583496
    5. 'list' → logprob: -2.6037306785583496
    6. 'b' → logprob: -3.2287306785583496
    7. 'line' → logprob: -3.4787306785583496
    8. 'call' → logprob: -4.10373067855835
    9. ' called' → logprob: -4.35373067855835
    10. 'numbers' → logprob: -4.35373067855835

Token 429: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.028085604310035706
    2. '   ' → logprob: -3.903085708618164
    3. 'of' → logprob: -5.153085708618164
    4. '(' → logprob: -7.028085708618164
    5. '()' → logprob: -8.903085708618164
    6. ' ' → logprob: -9.278085708618164
    7. '[]' → logprob: -9.278085708618164
    8. '	of' → logprob: -9.403085708618164
    9. '<|end|>' → logprob: -9.778085708618164
    10. '[' → logprob: -9.778085708618164

Token 430: ' called' (ID: 4358)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.5409911870956421
    2. 'marked' → logprob: -1.665991187095642
    3. 'numbers' → logprob: -1.790991187095642
    4. ' called' → logprob: -3.5409913063049316
    5. ' numbers' → logprob: -4.415991306304932
    6. 'draw' → logprob: -4.665991306304932
    7. 'int' → logprob: -6.165991306304932
    8. 'marks' → logprob: -6.290991306304932
    9. ' marked' → logprob: -6.665991306304932
    10. 'b' → logprob: -7.040991306304932

Token 431: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.6558582782745361
    2. 'numbers' → logprob: -0.7808582782745361
    3. '_numbers' → logprob: -3.780858278274536
    4. ' ' → logprob: -10.030858039855957
    5. 'umbers' → logprob: -10.530858039855957
    6. 'number' → logprob: -10.905858039855957
    7. 'nums' → logprob: -11.280858039855957
    8. '(numbers' → logprob: -11.280858039855957
    9. '_nums' → logprob: -11.655858039855957
    10. '```' → logprob: -11.780858039855957

Token 432: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035223832819610834
    2. ',' → logprob: -6.6285223960876465
    3. ':' → logprob: -7.2535223960876465
    4. '
' → logprob: -7.5035223960876465
    5. 'def' → logprob: -8.378521919250488
    6. '    
' → logprob: -8.503521919250488
    7. '.' → logprob: -8.878521919250488
    8. '()' → logprob: -9.378521919250488
    9. '(' → logprob: -9.878521919250488
    10. '```' → logprob: -9.878521919250488

Token 433: ' Marks' (ID: 84185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030316670890897512
    2. '
' → logprob: -6.2530317306518555
    3. '    
' → logprob: -7.5030317306518555
    4. '```' → logprob: -7.6280317306518555
    5. '<|end|>' → logprob: -11.128031730651855
    6. 'def' → logprob: -11.503031730651855
    7. '  
' → logprob: -12.003031730651855
    8. 'n' → logprob: -12.253031730651855
    9. '    ' → logprob: -12.378031730651855
    10. '\n' → logprob: -12.503031730651855

Token 434: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5025296211242676
    2. 'the' → logprob: -1.3775296211242676
    3. '   ' → logprob: -3.6275296211242676
    4. 'called' → logprob: -3.6275296211242676
    5. ' called' → logprob: -3.8775296211242676
    6. 'numbers' → logprob: -4.377529621124268
    7. ' them' → logprob: -4.752529621124268
    8. ' ' → logprob: -5.127529621124268
    9. ' numbers' → logprob: -5.252529621124268
    10. ' each' → logprob: -5.377529621124268

Token 435: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.258872151374817
    2. ' grid' → logprob: -1.258872151374817
    3. ' called' → logprob: -1.758872151374817
    4. 'called' → logprob: -2.2588720321655273
    5. ' grids' → logprob: -2.8838720321655273
    6. ' numbers' → logprob: -3.2588720321655273
    7. 'numbers' → logprob: -3.7588720321655273
    8. '```' → logprob: -5.008872032165527
    9. '   ' → logprob: -5.633872032165527
    10. ' bingo' → logprob: -5.883872032165527

Token 436: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5291560888290405
    2. ' and' → logprob: -1.2791560888290405
    3. ' with' → logprob: -2.52915620803833
    4. 'and' → logprob: -3.90415620803833
    5. ' for' → logprob: -5.27915620803833
    6. ' rows' → logprob: -5.27915620803833
    7. ' lines' → logprob: -5.27915620803833
    8. '
' → logprob: -5.90415620803833
    9. 'with' → logprob: -6.02915620803833
    10. ',' → logprob: -6.27915620803833

Token 437: ' numbers' (ID: 8663)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.20703206956386566
    2. ' called' → logprob: -2.3320319652557373
    3. 'True' → logprob: -3.3320319652557373
    4. ' True' → logprob: -4.082032203674316
    5. 'numbers' → logprob: -4.207032203674316
    6. '```' → logprob: -4.707032203674316
    7. 'marked' → logprob: -5.582032203674316
    8. ' numbers' → logprob: -6.207032203674316
    9. '[]' → logprob: -6.457032203674316
    10. 'False' → logprob: -6.582032203674316

Token 438: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.02085786685347557
    2. 'are' → logprob: -3.895857810974121
    3. ' called' → logprob: -8.770857810974121
    4. 'called' → logprob: -9.645857810974121
    5. '   ' → logprob: -10.020857810974121
    6. '=' → logprob: -11.645857810974121
    7. '_are' → logprob: -12.020857810974121
    8. ' ' → logprob: -12.145857810974121
    9. '<|end|>' → logprob: -12.395857810974121
    10. ' is' → logprob: -12.770857810974121

Token 439: ' called' (ID: 4358)
  Prédit: ' called'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' called' → logprob: -0.21920768916606903
    2. 'called' → logprob: -2.344207763671875
    3. ' marked' → logprob: -2.469207763671875
    4. 'marked' → logprob: -4.219207763671875
    5. '_called' → logprob: -6.969207763671875
    6. '   ' → logprob: -8.344207763671875
    7. '<|end|>' → logprob: -9.719207763671875
    8. ' found' → logprob: -10.219207763671875
    9. ' read' → logprob: -10.344207763671875
    10. '.called' → logprob: -10.594207763671875

Token 440: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23592567443847656
    2. ',' → logprob: -1.8609256744384766
    3. ' and' → logprob: -3.1109256744384766
    4. '.' → logprob: -4.735925674438477
    5. 'and' → logprob: -7.860925674438477
    6. '<|end|>' → logprob: -7.860925674438477
    7. ' for' → logprob: -8.860925674438477
    8. ',
' → logprob: -9.610925674438477
    9. ':' → logprob: -9.735925674438477
    10. 'def' → logprob: -9.860925674438477

Token 441: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12393543869256973
    2. ' then' → logprob: -2.3739354610443115
    3. ' and' → logprob: -3.9989354610443115
    4. ' marks' → logprob: -5.998935222625732
    5. 'and' → logprob: -6.873935222625732
    6. 'then' → logprob: -7.623935222625732
    7. ' reads' → logprob: -7.748935222625732
    8. '    ' → logprob: -9.37393569946289
    9. '#' → logprob: -9.62393569946289
    10. ' calls' → logprob: -9.74893569946289

Token 442: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09877576678991318
    2. ' then' → logprob: -2.723775863647461
    3. ' and' → logprob: -4.473775863647461
    4. ' checks' → logprob: -5.223775863647461
    5. ' marks' → logprob: -5.723775863647461
    6. 'and' (adapté à ' and') → logprob: -5.848775863647461
    7. '#' → logprob: -6.598775863647461
    8. 'then' → logprob: -6.598775863647461
    9. ' reads' → logprob: -6.848775863647461
    10. 'checks' → logprob: -7.598775863647461

Token 443: ' then' (ID: 1815)
  Prédit: ' checks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' checks' → logprob: -0.503192663192749
    2. '   ' → logprob: -1.003192663192749
    3. 'checks' → logprob: -4.003192901611328
    4. '
' → logprob: -5.878192901611328
    5. '       ' → logprob: -6.628192901611328
    6. ' for' → logprob: -6.628192901611328
    7. '```' → logprob: -7.003192901611328
    8. 'if' → logprob: -7.628192901611328
    9. ' if' → logprob: -7.753192901611328
    10. 'for' → logprob: -8.003192901611328

Token 444: ' determines' (ID: 49842)
  Prédit: ' checks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' checks' → logprob: -0.17249128222465515
    2. 'checks' → logprob: -2.1724913120269775
    3. '   ' → logprob: -3.1724913120269775
    4. '       ' → logprob: -7.047491073608398
    5. '```' → logprob: -8.047491073608398
    6. 'def' → logprob: -8.047491073608398
    7. '
' → logprob: -8.172491073608398
    8. ' for' → logprob: -8.922491073608398
    9. '_checks' → logprob: -9.297491073608398
    10. 'if' → logprob: -9.797491073608398

Token 445: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1251637041568756
    2. ' whether' → logprob: -2.5001637935638428
    3. 'if' → logprob: -3.7501637935638428
    4. 'whether' → logprob: -4.500163555145264
    5. '   ' → logprob: -7.250163555145264
    6. ' how' → logprob: -8.875164031982422
    7. ' when' → logprob: -10.000164031982422
    8. ' the' → logprob: -10.875164031982422
    9. ' after' → logprob: -11.000164031982422
    10. '```' → logprob: -11.625164031982422

Token 446: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11224217712879181
    2. ' there' → logprob: -2.8622422218322754
    3. ' a' → logprob: -3.7372422218322754
    4. ' any' → logprob: -4.362242221832275
    5. ' bingo' → logprob: -5.237242221832275
    6. 'the' → logprob: -5.487242221832275
    7. '   ' → logprob: -6.862242221832275
    8. ' grid' → logprob: -7.237242221832275
    9. 'b' → logprob: -7.612242221832275
    10. 'there' → logprob: -8.862241744995117

Token 447: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4341375231742859
    2. ' bingo' → logprob: -1.0591375827789307
    3. 'n' → logprob: -6.059137344360352
    4. ' b' → logprob: -7.434137344360352
    5. '```' → logprob: -7.684137344360352
    6. 'ny' → logprob: -7.809137344360352
    7. 'B' → logprob: -8.059137344360352
    8. ' Bingo' → logprob: -8.059137344360352
    9. '
' → logprob: -8.684137344360352
    10. 're' → logprob: -8.809137344360352

Token 448: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5919739007949829
    2. ' has' → logprob: -0.8419739007949829
    3. 'has' → logprob: -5.466973781585693
    4. ' was' → logprob: -5.591973781585693
    5. 'is' → logprob: -5.841973781585693
    6. ' can' → logprob: -6.466973781585693
    7. ' occurs' → logprob: -6.716973781585693
    8. ' exists' → logprob: -7.091973781585693
    9. ' ' → logprob: -7.841973781585693
    10. '   ' → logprob: -7.966973781585693

Token 449: 'row' (ID: 843)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.2286326885223389
    2. ' has' → logprob: -2.103632688522339
    3. ' mark' → logprob: -2.103632688522339
    4. ' is' → logprob: -2.353632688522339
    5. 'True' → logprob: -2.478632688522339
    6. ')' → logprob: -2.478632688522339
    7. ' marked' → logprob: -3.353632688522339
    8. 'mark' → logprob: -3.478632688522339
    9. ' any' → logprob: -3.603632688522339
    10. ' at' → logprob: -3.603632688522339

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007383593823760748
    2. ' or' → logprob: -5.757383823394775
    3. '   ' → logprob: -6.507383823394775
    4. ')' → logprob: -6.757383823394775
    5. 'or' → logprob: -7.382383823394775
    6. ' ,' → logprob: -8.132383346557617
    7. ',column' → logprob: -8.382383346557617
    8. ',
' → logprob: -8.507383346557617
    9. ' has' → logprob: -10.632383346557617
    10. 'column' → logprob: -10.882383346557617

Token 451: ' column' (ID: 6000)
  Prédit: ' column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' column' → logprob: -0.6333028078079224
    2. 'column' → logprob: -0.7583028078079224
    3. 'col' → logprob: -7.883302688598633
    4. ' or' → logprob: -8.383302688598633
    5. 'or' → logprob: -10.383302688598633
    6. ' col' → logprob: -10.633302688598633
    7. '   ' → logprob: -10.633302688598633
    8. ',column' → logprob: -12.008302688598633
    9. '```' → logprob: -13.133302688598633
    10. '#' → logprob: -13.258302688598633

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001482247607782483
    2. 'or' → logprob: -7.001482009887695
    3. ' or' → logprob: -7.876482009887695
    4. ')' → logprob: -9.626482009887695
    5. '   ' → logprob: -10.126482009887695
    6. ' ,' → logprob: -10.376482009887695
    7. ',
' → logprob: -10.626482009887695
    8. '),' → logprob: -11.126482009887695
    9. ',)' → logprob: -12.501482009887695
    10. 's' → logprob: -13.251482009887695

Token 453: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.31549546122550964
    2. 'or' → logprob: -1.315495491027832
    3. 'di' → logprob: -6.690495491027832
    4. '   ' → logprob: -7.565495491027832
    5. '#' → logprob: -8.190495491027832
    6. '
' → logprob: -9.690495491027832
    7. ' diagonal' → logprob: -9.815495491027832
    8. 'def' → logprob: -10.315495491027832
    9. '```' → logprob: -11.190495491027832
    10. 'diag' → logprob: -11.940495491027832

Token 454: ' diagonal' (ID: 71638)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.2257106751203537
    2. ' diagonal' → logprob: -1.6007106304168701
    3. 'diag' → logprob: -8.60071086883545
    4. '   ' → logprob: -9.60071086883545
    5. 'column' → logprob: -11.35071086883545
    6. '#' → logprob: -11.85071086883545
    7. ' diagon' → logprob: -12.10071086883545
    8. '```' → logprob: -12.22571086883545
    9. '
' → logprob: -13.10071086883545
    10. ' diag' → logprob: -13.22571086883545

Token 455: ' filled' (ID: 14255)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07501649856567383
    2. ' is' → logprob: -3.200016498565674
    3. ' has' → logprob: -4.325016498565674
    4. 'is' → logprob: -4.700016498565674
    5. 'has' → logprob: -5.325016498565674
    6. ' mark' → logprob: -6.575016498565674
    7. ' exists' → logprob: -7.200016498565674
    8. ' )' → logprob: -7.575016498565674
    9. ' line' → logprob: -7.825016498565674
    10. 'mark' → logprob: -8.200016021728516

Token 456: ')' (ID: 8)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.44074881076812744
    2. ')' → logprob: -1.1907488107681274
    3. 'with' → logprob: -3.065748691558838
    4. '   ' → logprob: -5.815748691558838
    5. ' by' → logprob: -6.440748691558838
    6. ' )' → logprob: -7.690748691558838
    7. 'marked' → logprob: -8.190749168395996
    8. ' marked' → logprob: -8.815749168395996
    9. ' is' → logprob: -9.690749168395996
    10. '_mark' → logprob: -9.815749168395996

Token 457: ' has' (ID: 853)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0093632936477661
    2. ' has' → logprob: -1.2593632936477661
    3. 'is' → logprob: -2.0093631744384766
    4. 'has' → logprob: -2.2593631744384766
    5. '   ' → logprob: -2.7593631744384766
    6. '#' → logprob: -3.7593631744384766
    7. ' occurs' → logprob: -4.384363174438477
    8. 'occ' → logprob: -4.884363174438477
    9. 'occur' → logprob: -6.634363174438477
    10. ')' → logprob: -6.759363174438477

Token 458: ' occurred' (ID: 20236)
  Prédit: ' been'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' been' → logprob: -0.06939607113599777
    2. ' occurred' → logprob: -3.1943960189819336
    3. 'been' → logprob: -4.069396018981934
    4. 'occur' → logprob: -4.819396018981934
    5. ' occured' → logprob: -8.069396018981934
    6. '```' → logprob: -8.194396018981934
    7. ' appeared' → logprob: -9.819396018981934
    8. '=True' → logprob: -10.194396018981934
    9. ' True' → logprob: -10.319396018981934
    10. ' happened' → logprob: -10.444396018981934

Token 459: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5282632112503052
    2. '.' → logprob: -0.9032632112503052
    3. ':' → logprob: -6.528263092041016
    4. '.
' → logprob: -6.653263092041016
    5. ' after' → logprob: -7.403263092041016
    6. ',' → logprob: -7.528263092041016
    7. ')' → logprob: -7.903263092041016
    8. ' at' → logprob: -8.653263092041016
    9. 'def' → logprob: -8.778263092041016
    10. ' for' → logprob: -8.903263092041016

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035296366550028324
    2. '
' → logprob: -5.7535295486450195
    3. '    
' → logprob: -8.75352954864502
    4. '```' → logprob: -8.75352954864502
    5. 'grid' → logprob: -10.62852954864502
    6. '#' → logprob: -13.50352954864502
    7. ')' → logprob: -13.62852954864502
    8. '

' → logprob: -13.87852954864502
    9. ' grid' → logprob: -13.87852954864502
    10. 'def' → logprob: -14.00352954864502

Token 461: ' Prints' (ID: 92195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007404190837405622
    2. '```' → logprob: -7.8757405281066895
    3. '
' → logprob: -8.125740051269531
    4. 'def' → logprob: -11.125740051269531
    5. '#' → logprob: -11.250740051269531
    6. 'grid' → logprob: -11.500740051269531
    7. '    
' → logprob: -11.500740051269531
    8. ' grid' → logprob: -12.250740051269531
    9. '"""' → logprob: -12.750740051269531
    10. '``' → logprob: -13.500740051269531

Token 462: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005338519695214927
    2. '('' → logprob: -8.125534057617188
    3. '"' → logprob: -9.000534057617188
    4. '(' → logprob: -9.375534057617188
    5. 'Yes' → logprob: -11.375534057617188
    6. '"B' → logprob: -11.625534057617188
    7. ' ("' → logprob: -12.625534057617188
    8. '(True' → logprob: -13.250534057617188
    9. '()' → logprob: -14.125534057617188
    10. 'either' → logprob: -14.500534057617188

Token 463: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0004319804720580578
    2. ' Yes' → logprob: -9.000432014465332
    3. 'yes' → logprob: -9.125432014465332
    4. 'YES' → logprob: -9.125432014465332
    5. '"' → logprob: -10.250432014465332
    6. 'B' → logprob: -10.500432014465332
    7. ' yes' → logprob: -11.750432014465332
    8. '有' → logprob: -12.125432014465332
    9. '是' → logprob: -12.875432014465332
    10. 'P' → logprob: -13.750432014465332

Token 464: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -4.3226136767771095e-05
    2. '")' → logprob: -10.750042915344238
    3. '```' → logprob: -12.125042915344238
    4. '"""' → logprob: -12.250042915344238
    5. '()"' → logprob: -12.500042915344238
    6. '"
' → logprob: -12.750042915344238
    7. '   ' → logprob: -13.125042915344238
    8. '
' → logprob: -14.375042915344238
    9. 'def' → logprob: -14.750042915344238
    10. '")
' → logprob: -14.875042915344238

Token 465: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32608088850975037
    2. ' if' → logprob: -2.201080799102783
    3. ' or' → logprob: -2.326080799102783
    4. 'if' → logprob: -3.326080799102783
    5. 'def' → logprob: -3.951080799102783
    6. '
' → logprob: -4.951080799102783
    7. 'or' → logprob: -5.951080799102783
    8. '```' → logprob: -6.451080799102783
    9. ' for' → logprob: -6.701080799102783
    10. '()' → logprob: -7.576080799102783

Token 466: ' bingo' (ID: 65141)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4750078022480011
    2. ' bingo' → logprob: -1.2250077724456787
    3. ' any' → logprob: -3.3500077724456787
    4. ' the' → logprob: -4.100008010864258
    5. 'b' → logprob: -4.100008010864258
    6. ' is' → logprob: -4.600008010864258
    7. ' Bingo' → logprob: -6.850008010864258
    8. ' there' → logprob: -7.225008010864258
    9. 'a' → logprob: -7.225008010864258
    10. '"' → logprob: -7.225008010864258

Token 467: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6629122495651245
    2. ' occurred' → logprob: -1.6629122495651245
    3. ' is' → logprob: -1.6629122495651245
    4. ',' → logprob: -3.287912368774414
    5. ' has' → logprob: -3.537912368774414
    6. ' occurs' → logprob: -4.412912368774414
    7. ' ' → logprob: -4.662912368774414
    8. '"' → logprob: -4.787912368774414
    9. '
' → logprob: -6.037912368774414
    10. ' was' → logprob: -6.162912368774414

Token 468: ' otherwise' (ID: 10275)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.039213888347148895
    2. '   ' → logprob: -3.7892138957977295
    3. ' "' → logprob: -5.16421365737915
    4. ' otherwise' → logprob: -5.53921365737915
    5. ' else' → logprob: -5.66421365737915
    6. 'else' → logprob: -6.41421365737915
    7. 'otherwise' → logprob: -8.164214134216309
    8. '"\' → logprob: -8.664214134216309
    9. '"No' → logprob: -8.914214134216309
    10. ' ' → logprob: -9.164214134216309

Token 469: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04872305691242218
    2. ' "' → logprob: -3.048722982406616
    3. '"No' → logprob: -9.548723220825195
    4. ' ' → logprob: -10.298723220825195
    5. '   ' → logprob: -10.923723220825195
    6. '
' → logprob: -12.673723220825195
    7. ''' → logprob: -13.048723220825195
    8. 'def' → logprob: -13.548723220825195
    9. ' No' → logprob: -13.798723220825195
    10. ' ' → logprob: -13.923723220825195

Token 470: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -7.076218025758862e-05
    2. '"No' → logprob: -9.625070571899414
    3. ' No' → logprob: -12.625070571899414
    4. '"' → logprob: -13.625070571899414
    5. 'NO' → logprob: -16.250070571899414
    6. 'Yes' → logprob: -17.875070571899414
    7. '_No' → logprob: -18.000070571899414
    8. '```' → logprob: -18.500070571899414
    9. '   ' → logprob: -18.875070571899414
    10. ' ' → logprob: -19.500070571899414

Token 471: '".
' (ID: 26880)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.22419147193431854
    2. '"' → logprob: -1.724191427230835
    3. '")
' → logprob: -3.849191427230835
    4. '"
' → logprob: -6.974191665649414
    5. '".' → logprob: -9.099191665649414
    6. ')"' → logprob: -9.849191665649414
    7. 'def' → logprob: -9.974191665649414
    8. ')' → logprob: -10.349191665649414
    9. '").' → logprob: -10.974191665649414
    10. '")
' → logprob: -11.599191665649414

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006755863782018423
    2. '
' → logprob: -5.131755828857422
    3. '```' → logprob: -7.881755828857422
    4. '    
' → logprob: -8.131755828857422
    5. 'def' → logprob: -9.131755828857422
    6. '<|end|>' → logprob: -10.256755828857422
    7. '"""' → logprob: -12.881755828857422
    8. ')' → logprob: -13.256755828857422
    9. '<|end|>' → logprob: -13.631755828857422
    10. '#' → logprob: -13.631755828857422

Token 473: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002542251255363226
    2. '
' → logprob: -6.252542018890381
    3. '"""' → logprob: -8.002542495727539
    4. '```' → logprob: -8.752542495727539
    5. '    
' → logprob: -9.502542495727539
    6. '"""
' (adapté à ' """
') → logprob: -10.752542495727539
    7. '"' → logprob: -12.127542495727539
    8. ')' → logprob: -12.377542495727539
    9. 'def' → logprob: -12.627542495727539
    10. '""' → logprob: -12.877542495727539

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013758298009634018
    2. 'grid' → logprob: -6.626375675201416
    3. '```' → logprob: -10.501376152038574
    4. ' grid' → logprob: -10.751376152038574
    5. '   ' → logprob: -15.001376152038574
    6. '	grid' → logprob: -15.251376152038574
    7. 'b' → logprob: -16.126375198364258
    8. '(grid' → logprob: -16.626375198364258
    9. 'def' → logprob: -16.876375198364258
    10. '``' → logprob: -16.876375198364258

Token 475: ' #' (ID: 1069)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.011050770990550518
    2. '   ' → logprob: -4.636050701141357
    3. '#' (adapté à ' #') → logprob: -7.011050701141357
    4. ' grid' → logprob: -7.886050701141357
    5. '```' → logprob: -11.511051177978516
    6. 'b' → logprob: -13.011051177978516
    7. '	grid' → logprob: -14.011051177978516
    8. 'board' → logprob: -14.636051177978516
    9. '``' → logprob: -14.761051177978516
    10. ' bingo' → logprob: -15.011051177978516

Token 476: ' Read' (ID: 5405)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.09305954724550247
    2. ' grid' → logprob: -2.593059539794922
    3. '   ' → logprob: -4.468059539794922
    4. '#' → logprob: -6.093059539794922
    5. '```' → logprob: -8.468059539794922
    6. 'b' → logprob: -10.843059539794922
    7. ' #' → logprob: -10.968059539794922
    8. '	grid' → logprob: -11.218059539794922
    9. 'board' → logprob: -11.343059539794922
    10. '``' → logprob: -11.593059539794922

Token 477: ' the' (ID: 290)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.2476847618818283
    2. ' grid' → logprob: -2.3726847171783447
    3. 'b' → logprob: -2.4976847171783447
    4. '   ' → logprob: -3.2476847171783447
    5. ' bingo' → logprob: -5.872684955596924
    6. ' b' → logprob: -7.872684955596924
    7. 'the' → logprob: -8.247684478759766
    8. 'board' → logprob: -8.372684478759766
    9. '#' → logprob: -8.372684478759766
    10. 'a' → logprob: -8.622684478759766

Token 478: ' three' (ID: 3407)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.010871665552258492
    2. 'b' → logprob: -5.260871887207031
    3. ' grid' → logprob: -5.260871887207031
    4. '   ' → logprob: -8.635871887207031
    5. '3' → logprob: -10.010871887207031
    6. '#' → logprob: -10.135871887207031
    7. '```' → logprob: -10.260871887207031
    8. ' bingo' → logprob: -10.385871887207031
    9. 'board' → logprob: -11.010871887207031
    10. 'gr' → logprob: -11.510871887207031

Token 479: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.2632370889186859
    2. 'rows' → logprob: -1.6382371187210083
    3. ' grid' → logprob: -4.513236999511719
    4. ' lines' → logprob: -4.513236999511719
    5. '   ' → logprob: -4.888236999511719
    6. 'grid' → logprob: -5.013236999511719
    7. '_rows' → logprob: -7.763236999511719
    8. 'lines' → logprob: -8.388236999511719
    9. ' ' → logprob: -9.138236999511719
    10. ' grids' → logprob: -9.638236999511719

Token 480: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04745662957429886
    2. 'grid' → logprob: -3.172456741333008
    3. ' grid' → logprob: -5.422456741333008
    4. '	grid' → logprob: -12.172456741333008
    5. '```' → logprob: -12.297456741333008
    6. '(grid' → logprob: -12.547456741333008
    7. '
' → logprob: -12.672456741333008
    8. 'rows' → logprob: -12.922456741333008
    9. '.grid' → logprob: -13.422456741333008
    10. '  ' → logprob: -13.672456741333008

Token 481: ' the' (ID: 290)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.12004052847623825
    2. ' grid' → logprob: -2.8700404167175293
    3. 'the' → logprob: -2.9950404167175293
    4. ' the' → logprob: -5.120040416717529
    5. 'input' → logprob: -8.120040893554688
    6. 'b' → logprob: -10.120040893554688
    7. ' input' → logprob: -10.995040893554688
    8. ' bingo' → logprob: -11.120040893554688
    9. 'initial' → logprob: -11.495040893554688
    10. ' grids' → logprob: -12.745040893554688

Token 482: ' ' (ID: 220)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.034800563007593155
    2. 'b' → logprob: -3.5348005294799805
    3. ' grid' → logprob: -5.4098005294799805
    4. 'initial' → logprob: -8.03480052947998
    5. ' bingo' → logprob: -9.65980052947998
    6. '3' → logprob: -10.03480052947998
    7. 'main' → logprob: -10.40980052947998
    8. ' ' → logprob: -10.53480052947998
    9. 'B' → logprob: -10.65980052947998
    10. '```' → logprob: -11.03480052947998

Token 483: '3' (ID: 18)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.008667044341564178
    2. 'b' → logprob: -4.7586669921875
    3. ' grid' → logprob: -10.5086669921875
    4. '3' → logprob: -11.1336669921875
    5. 'B' → logprob: -12.1336669921875
    6. 'initial' → logprob: -14.0086669921875
    7. 'board' → logprob: -14.2586669921875
    8. '```' → logprob: -14.2586669921875
    9. ' bingo' → logprob: -14.3836669921875
    10. 'game' → logprob: -14.7586669921875

Token 484: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07085949927568436
    2. 'grid' → logprob: -3.320859432220459
    3. '   ' → logprob: -3.945859432220459
    4. ' grid' → logprob: -4.695859432220459
    5. ' x' → logprob: -5.695859432220459
    6. '-grid' → logprob: -8.820859909057617
    7. ' ' → logprob: -8.945859909057617
    8. 'row' → logprob: -10.070859909057617
    9. '  ' → logprob: -10.570859909057617
    10. '```' → logprob: -11.070859909057617

Token 485: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.282920129597187e-05
    2. 'grid' → logprob: -11.875012397766113
    3. '```' → logprob: -12.875012397766113
    4. '   ' → logprob: -13.625012397766113
    5. ' grid' → logprob: -14.000012397766113
    6. 'print' → logprob: -15.000012397766113
    7. ' ' → logprob: -15.000012397766113
    8. '
' → logprob: -15.375012397766113
    9. 'rows' → logprob: -16.37501335144043
    10. 'row' → logprob: -16.50001335144043

Token 486: ' bingo' (ID: 65141)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.3486405313014984
    2. ' grid' → logprob: -1.2236405611038208
    3. '   ' → logprob: -8.848640441894531
    4. 'for' → logprob: -11.723640441894531
    5. ' for' → logprob: -11.848640441894531
    6. 'b' → logprob: -11.973640441894531
    7. '
' → logprob: -12.223640441894531
    8. 'board' → logprob: -12.348640441894531
    9. '	grid' → logprob: -12.598640441894531
    10. '(grid' → logprob: -12.723640441894531

Token 487: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.2570306658744812
    2. ' grid' → logprob: -1.507030725479126
    3. '   ' → logprob: -5.382030487060547
    4. 'board' → logprob: -8.132030487060547
    5. '
' → logprob: -10.007030487060547
    6. 'card' → logprob: -10.257030487060547
    7. 'b' → logprob: -10.257030487060547
    8. '_grid' → logprob: -10.507030487060547
    9. '	grid' → logprob: -11.257030487060547
    10. '(grid' → logprob: -11.507030487060547

Token 488: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031942317727953196
    2. 'grid' → logprob: -5.878194332122803
    3. ' grid' → logprob: -7.878194332122803
    4. '
' → logprob: -12.753193855285645
    5. '```' → logprob: -13.253193855285645
    6. '(grid' → logprob: -14.128193855285645
    7. '	grid' → logprob: -14.253193855285645
    8. 'b' → logprob: -14.378193855285645
    9. '    
' → logprob: -14.503193855285645
    10. '   ' → logprob: -14.503193855285645

Token 489: ' the' (ID: 290)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22395862638950348
    2. 'the' → logprob: -2.223958730697632
    3. '   ' → logprob: -3.098958730697632
    4. ' input' → logprob: -3.723958730697632
    5. ' the' → logprob: -4.473958492279053
    6. 'user' → logprob: -5.598958492279053
    7. 'stdin' → logprob: -5.723958492279053
    8. 'range' → logprob: -6.723958492279053
    9. 'for' → logprob: -7.223958492279053
    10. '[input' → logprob: -7.473958492279053

Token 490: ' user' (ID: 1825)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4334426820278168
    2. 'user' → logprob: -1.1834427118301392
    3. ' user' → logprob: -3.3084425926208496
    4. ' input' → logprob: -4.93344259262085
    5. 'standard' → logprob: -7.30844259262085
    6. 'stdin' → logprob: -7.30844259262085
    7. ' standard' → logprob: -8.683443069458008
    8. 'inputs' → logprob: -10.183443069458008
    9. '```' → logprob: -10.183443069458008
    10. '   ' → logprob: -10.933443069458008

Token 491: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008889912627637386
    2. 'grid' → logprob: -4.758889675140381
    3. ' grid' → logprob: -8.383890151977539
    4. '```' → logprob: -11.633890151977539
    5. '(grid' → logprob: -12.008890151977539
    6. '
' → logprob: -12.133890151977539
    7. '    
' → logprob: -12.633890151977539
    8. '[' → logprob: -12.758890151977539
    9. 'for' → logprob: -13.008890151977539
    10. '	grid' → logprob: -13.133890151977539

Token 492: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003895322559401393
    2. 'grid' → logprob: -5.753895282745361
    3. ' grid' → logprob: -7.253895282745361
    4. 'b' → logprob: -12.62889575958252
    5. '```' → logprob: -13.12889575958252
    6. ' bingo' → logprob: -14.12889575958252
    7. 'rows' → logprob: -14.25389575958252
    8. '(grid' → logprob: -14.62889575958252
    9. '	grid' → logprob: -14.87889575958252
    10. '   ' → logprob: -15.12889575958252

Token 493: ' a' (ID: 261)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0514712780714035
    2. '   ' → logprob: -3.05147123336792
    3. 'b' → logprob: -6.17647123336792
    4. ' grid' → logprob: -7.17647123336792
    5. 'board' → logprob: -11.551471710205078
    6. '```' → logprob: -11.801471710205078
    7. 'rows' → logprob: -12.301471710205078
    8. ' bingo' → logprob: -12.426471710205078
    9. '	grid' → logprob: -12.801471710205078
    10. 'gr' → logprob: -13.301471710205078

Token 494: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0020204742904752493
    2. '1' → logprob: -7.002020359039307
    3. '=' → logprob: -7.627020359039307
    4. ' ' → logprob: -8.627020835876465
    5. '_grid' → logprob: -9.002020835876465
    6. '_rows' → logprob: -9.377020835876465
    7. '_row' → logprob: -9.377020835876465
    8. '=[]
' → logprob: -10.127020835876465
    9. ' =[' → logprob: -10.877020835876465
    10. '=[]' → logprob: -11.002020835876465

Token 495: ' read' (ID: 1729)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46426886320114136
    2. 'read' → logprob: -1.0892689228057861
    3. ' [' → logprob: -3.464268922805786
    4. ' read' → logprob: -6.214268684387207
    5. '[a' → logprob: -7.464268684387207
    6. '[]' → logprob: -7.714268684387207
    7. '[]
' → logprob: -8.464268684387207
    8. '[list' → logprob: -8.839268684387207
    9. '[input' → logprob: -10.339268684387207
    10. '[int' → logprob: -10.339268684387207

Token 496: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -3.106736039626412e-05
    2. '_' → logprob: -10.750031471252441
    3. '_line' → logprob: -12.625031471252441
    4. 'a' → logprob: -13.250031471252441
    5. ' _' → logprob: -13.375031471252441
    6. '_rows' → logprob: -14.125031471252441
    7. 'row' → logprob: -14.125031471252441
    8. '()' → logprob: -15.125031471252441
    9. '_ROW' → logprob: -15.625031471252441
    10. '```' → logprob: -15.875031471252441

Token 497: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023329101502895355
    2. '()
' → logprob: -3.773329019546509
    3. 'a' → logprob: -10.02332878112793
    4. '   ' → logprob: -11.14832878112793
    5. '()\' → logprob: -11.89832878112793
    6. '(),' → logprob: -12.64832878112793
    7. '[]' → logprob: -12.77332878112793
    8. '()

' → logprob: -12.89832878112793
    9. '()[' → logprob: -13.27332878112793
    10. '[' → logprob: -13.27332878112793

Token 498: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023682620376348495
    2. '   ' → logprob: -3.7736825942993164
    3. ' b' → logprob: -7.773682594299316
    4. '```' → logprob: -11.523682594299316
    5. '
' → logprob: -12.523682594299316
    6. '    
' → logprob: -13.773682594299316
    7. ',b' → logprob: -14.648682594299316
    8. 'B' → logprob: -15.148682594299316
    9. '	b' → logprob: -15.398682594299316
    10. 'a' → logprob: -15.773682594299316

Token 499: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -6.301394023466855e-05
    2. '   ' → logprob: -9.875062942504883
    3. ' b' → logprob: -11.375062942504883
    4. '	b' → logprob: -18.750062942504883
    5. '```' → logprob: -20.375062942504883
    6. '
' → logprob: -20.625062942504883
    7. '    
' → logprob: -21.000062942504883
    8. ' ' → logprob: -21.750062942504883
    9. '  ' → logprob: -22.000062942504883
    10. 'B' → logprob: -22.125062942504883

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005953448358923197
    2. '=' → logprob: -5.130953311920166
    3. '   ' → logprob: -11.255953788757324
    4. ',' → logprob: -11.630953788757324
    5. '  ' → logprob: -14.380953788757324
    6. 'a' → logprob: -14.505953788757324
    7. ' ' → logprob: -14.755953788757324
    8. ')' → logprob: -15.380953788757324
    9. '_' → logprob: -15.380953788757324
    10. '[' → logprob: -15.630953788757324

Token 501: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5759396553039551
    2. ' read' → logprob: -0.8259396553039551
    3. 'c' → logprob: -16.075939178466797
    4. '	read' → logprob: -16.200939178466797
    5. '   ' → logprob: -16.575939178466797
    6. ' ' → logprob: -17.200939178466797
    7. ' c' → logprob: -17.450939178466797
    8. '.read' → logprob: -18.700939178466797
    9. '(read' → logprob: -19.325939178466797
    10. '  ' → logprob: -19.575939178466797

Token 502: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -4.60414821645827e-06
    2. 'row' → logprob: -12.500004768371582
    3. '_' → logprob: -14.875004768371582
    4. 'a' → logprob: -15.625004768371582
    5. '_line' → logprob: -16.125003814697266
    6. '_ROW' → logprob: -17.125003814697266
    7. ' row' → logprob: -17.375003814697266
    8. '```' → logprob: -18.250003814697266
    9. '	row' → logprob: -18.750003814697266
    10. '   ' → logprob: -18.875003814697266

Token 503: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12157309055328369
    2. 'c' → logprob: -2.371572971343994
    3. '()
' → logprob: -4.496572971343994
    4. '()' → logprob: -4.621572971343994
    5. ' c' → logprob: -10.121573448181152
    6. '
' → logprob: -10.496573448181152
    7. '(c' → logprob: -10.621573448181152
    8. '	c' → logprob: -10.871573448181152
    9. ')c' → logprob: -11.371573448181152
    10. '```' → logprob: -11.621573448181152

Token 504: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20438389480113983
    2. '   ' → logprob: -1.7043838500976562
    3. ' c' → logprob: -6.204383850097656
    4. '```' → logprob: -7.704383850097656
    5. '	c' → logprob: -8.079383850097656
    6. '
' → logprob: -8.704383850097656
    7. 'grid' → logprob: -11.579383850097656
    8. '``' → logprob: -12.704383850097656
    9. ' ' → logprob: -12.829383850097656
    10. '    
' → logprob: -13.954383850097656

Token 505: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -7.779520092299208e-05
    2. ' c' → logprob: -9.500078201293945
    3. '   ' → logprob: -12.875078201293945
    4. 'grid' → logprob: -15.375078201293945
    5. '```' → logprob: -17.875078201293945
    6. '	c' → logprob: -19.375078201293945
    7. ' grid' → logprob: -19.500078201293945
    8. ' ' → logprob: -20.250078201293945
    9. '
' → logprob: -20.250078201293945
    10. '_c' → logprob: -21.125078201293945

Token 506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20149092376232147
    2. ' =' → logprob: -1.701490879058838
    3. '()' → logprob: -10.201491355895996
    4. '   ' → logprob: -10.201491355895996
    5. '=
' → logprob: -14.326491355895996
    6. 'def' → logprob: -14.701491355895996
    7. '[]' → logprob: -14.826491355895996
    8. ')' → logprob: -14.826491355895996
    9. '=[]' → logprob: -15.076491355895996
    10. '.' → logprob: -15.576491355895996

Token 507: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.005233763717114925
    2. ' read' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.755233764648438
    4. '	read' → logprob: -18.380233764648438
    5. '(read' → logprob: -19.130233764648438
    6. ' ' → logprob: -20.380233764648438
    7. '.read' → logprob: -20.630233764648438
    8. 'list' → logprob: -21.880233764648438
    9. '  ' → logprob: -22.255233764648438
    10. '_read' → logprob: -22.505233764648438

Token 508: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.013383613899350166
    2. '()' → logprob: -4.638383388519287
    3. 'row' → logprob: -5.638383388519287
    4. '()
' → logprob: -10.388383865356445
    5. 'Row' → logprob: -10.888383865356445
    6. ' row' → logprob: -12.638383865356445
    7. '_' → logprob: -12.763383865356445
    8. '())' → logprob: -13.513383865356445
    9. '_rows' → logprob: -13.888383865356445
    10. '-row' → logprob: -14.388383865356445

Token 509: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5797274112701416
    2. '
' → logprob: -1.5797274112701416
    3. 'called' → logprob: -1.9547274112701416
    4. ' called' → logprob: -2.4547274112701416
    5. 'n' → logprob: -6.7047271728515625
    6. '_called' → logprob: -6.9547271728515625
    7. '    
' → logprob: -7.2047271728515625
    8. 'd' → logprob: -7.2047271728515625
    9. 'numbers' → logprob: -7.7047271728515625
    10. 'calls' → logprob: -7.7047271728515625

Token 510: '   ' (ID: 271)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.5888715982437134
    2. 'd' → logprob: -1.9638715982437134
    3. '   ' → logprob: -1.9638715982437134
    4. 'n' → logprob: -2.713871479034424
    5. 'marked' → logprob: -3.838871479034424
    6. 'calls' → logprob: -4.338871479034424
    7. 'numbers' → logprob: -4.463871479034424
    8. '#' → logprob: -4.588871479034424
    9. 'nums' → logprob: -4.963871479034424
    10. 'b' → logprob: -4.963871479034424

Token 511: ' #' (ID: 1069)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.8668884634971619
    2. 'grid' → logprob: -1.6168885231018066
    3. 'marked' → logprob: -2.1168885231018066
    4. 'n' → logprob: -2.3668885231018066
    5. 'marks' → logprob: -2.8668885231018066
    6. 'b' → logprob: -3.1168885231018066
    7. 'd' → logprob: -3.9918885231018066
    8. 'calls' → logprob: -4.366888523101807
    9. 'numbers' → logprob: -4.616888523101807
    10. '#' (adapté à ' #') → logprob: -4.741888523101807

Token 512: ' Store' (ID: 12600)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.41234099864959717
    2. 'n' → logprob: -1.7873409986495972
    3. 'marked' → logprob: -2.6623411178588867
    4. 'grid' → logprob: -3.9123411178588867
    5. 'numbers' → logprob: -4.162341117858887
    6. 'marks' → logprob: -4.412341117858887
    7. 'd' → logprob: -4.537341117858887
    8. 'N' → logprob: -4.662341117858887
    9. 'b' → logprob: -4.787341117858887
    10. '#' → logprob: -5.037341117858887

Token 513: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8456262946128845
    2. 'grid' → logprob: -1.4706263542175293
    3. 'the' → logprob: -1.7206263542175293
    4. ' grid' → logprob: -1.8456263542175293
    5. '   ' → logprob: -6.720626354217529
    6. ' them' → logprob: -7.095626354217529
    7. '[' → logprob: -7.720626354217529
    8. ' grids' → logprob: -8.470625877380371
    9. '[
' → logprob: -8.595625877380371
    10. ' all' → logprob: -8.845625877380371

Token 514: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.01728951372206211
    2. 'called' → logprob: -4.642289638519287
    3. ' grid' → logprob: -5.142289638519287
    4. ' called' → logprob: -7.142289638519287
    5. 'numbers' → logprob: -8.267289161682129
    6. '   ' → logprob: -8.642289161682129
    7. 'marked' → logprob: -9.517289161682129
    8. 'number' → logprob: -9.642289161682129
    9. 'rows' → logprob: -9.767289161682129
    10. 'calls' → logprob: -10.392289161682129

Token 515: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0631750226020813
    2. '   ' → logprob: -3.0631749629974365
    3. 'grid' → logprob: -5.063175201416016
    4. '=' → logprob: -5.563175201416016
    5. ' grid' → logprob: -6.313175201416016
    6. ' =
' → logprob: -6.438175201416016
    7. '
' → logprob: -7.813175201416016
    8. '=
' → logprob: -8.438175201416016
    9. '_grid' → logprob: -9.438175201416016
    10. '	grid' → logprob: -9.438175201416016

Token 516: ' a' (ID: 261)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00016301481809932739
    2. ' [' → logprob: -9.250163078308105
    3. 'grid' → logprob: -10.000163078308105
    4. '[' → logprob: -11.375163078308105
    5. '[
' → logprob: -12.500163078308105
    6. 'a' → logprob: -12.625163078308105
    7. '[b' → logprob: -13.500163078308105
    8. '   ' → logprob: -14.500163078308105
    9. ' grid' → logprob: -14.625163078308105
    10. '[A' → logprob: -15.000163078308105

Token 517: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.13461846113204956
    2. '[
' → logprob: -2.6346185207366943
    3. '[' → logprob: -3.6346185207366943
    4. 'grid' → logprob: -4.134618282318115
    5. '[list' → logprob: -4.759618282318115
    6. ' list' → logprob: -6.134618282318115
    7. '[a' → logprob: -7.259618282318115
    8. ' grid' → logprob: -9.009618759155273
    9. ' [' → logprob: -9.384618759155273
    10. 'nested' → logprob: -10.134618759155273

Token 518: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05101123824715614
    2. ' of' → logprob: -3.676011323928833
    3. '[' → logprob: -4.301011085510254
    4. '[
' → logprob: -5.676011085510254
    5. 'of' → logprob: -6.051011085510254
    6. ' =' → logprob: -6.176011085510254
    7. '[a' → logprob: -6.301011085510254
    8. ' [' → logprob: -7.801011085510254
    9. '=[' → logprob: -8.176011085510254
    10. 'grid' → logprob: -8.801011085510254

Token 519: ' rows' (ID: 13585)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0020499820820987225
    2. 'lists' → logprob: -6.877049922943115
    3. 'rows' → logprob: -7.377049922943115
    4. ' lists' → logprob: -8.627050399780273
    5. ' [' → logprob: -9.252050399780273
    6. 'a' → logprob: -10.002050399780273
    7. '[
' → logprob: -10.627050399780273
    8. '[' → logprob: -10.627050399780273
    9. '[list' → logprob: -12.252050399780273
    10. ' rows' → logprob: -12.502050399780273

Token 520: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007579535711556673
    2. 'grid' → logprob: -5.007579326629639
    3. '
' → logprob: -7.507579326629639
    4. '[
' → logprob: -8.882579803466797
    5. ' grid' → logprob: -9.382579803466797
    6. '[' → logprob: -10.132579803466797
    7. '    
' → logprob: -11.382579803466797
    8. '	grid' → logprob: -11.507579803466797
    9. '(grid' → logprob: -11.757579803466797
    10. ' =' → logprob: -12.007579803466797

Token 521: ' easier' (ID: 11087)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.011817524209618568
    2. '[' → logprob: -5.761817455291748
    3. ' [' → logprob: -6.011817455291748
    4. 'a' → logprob: -6.011817455291748
    5. '[
' → logprob: -6.761817455291748
    6. ' easier' → logprob: -7.636817455291748
    7. 'easy' → logprob: -7.886817455291748
    8. ' easy' → logprob: -8.261817932128906
    9. 'the' → logprob: -8.511817932128906
    10. '[e' → logprob: -8.636817932128906

Token 522: ' processing' (ID: 12323)
  Prédit: ' manipulation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manipulation' → logprob: -0.30046138167381287
    2. 'man' → logprob: -1.4254614114761353
    3. ' processing' → logprob: -5.300461292266846
    4. 'processing' → logprob: -5.675461292266846
    5. 'grid' → logprob: -5.925461292266846
    6. ' iteration' → logprob: -6.300461292266846
    7. 'access' → logprob: -6.425461292266846
    8. ' access' → logprob: -6.550461292266846
    9. 'iteration' → logprob: -6.925461292266846
    10. ' grid' → logprob: -6.925461292266846

Token 523: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09246306121349335
    2. 'grid' → logprob: -2.4674630165100098
    3. ' grid' → logprob: -5.96746301651001
    4. '
' → logprob: -7.34246301651001
    5. '```' → logprob: -9.217463493347168
    6. '[
' → logprob: -9.592463493347168
    7. '	grid' → logprob: -9.592463493347168
    8. '    
' → logprob: -10.217463493347168
    9. '(grid' → logprob: -11.967463493347168
    10. '[' → logprob: -11.967463493347168

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05802272632718086
    2. 'grid' → logprob: -2.9330227375030518
    3. ' grid' → logprob: -5.808022499084473
    4. '```' → logprob: -9.808022499084473
    5. '
' → logprob: -10.308022499084473
    6. '	grid' → logprob: -11.058022499084473
    7. '    
' → logprob: -11.933022499084473
    8. '[
' → logprob: -12.433022499084473
    9. '(grid' → logprob: -12.683022499084473
    10. '``' → logprob: -12.808022499084473

Token 525: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.0003374886582605541
    2. ' grid' → logprob: -8.250337600708008
    3. '   ' → logprob: -9.500337600708008
    4. '```' → logprob: -14.250337600708008
    5. '
' → logprob: -15.000337600708008
    6. '`' → logprob: -15.750337600708008
    7. '	grid' → logprob: -15.750337600708008
    8. '.grid' → logprob: -17.125337600708008
    9. 'gr' → logprob: -18.000337600708008
    10. '``' → logprob: -18.250337600708008

Token 526: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16030241549015045
    2. '=' → logprob: -1.9103024005889893
    3. '   ' → logprob: -9.53530216217041
    4. '=
' → logprob: -12.91030216217041
    5. ' =
' → logprob: -13.16030216217041
    6. '=[' → logprob: -14.28530216217041
    7. '```' → logprob: -14.66030216217041
    8. '=[
' → logprob: -15.41030216217041
    9. ' =[' → logprob: -16.035303115844727
    10. '[' → logprob: -16.035303115844727

Token 527: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.005238856188952923
    2. ' [' → logprob: -5.255239009857178
    3. '   ' → logprob: -12.75523853302002
    4. '[' → logprob: -13.63023853302002
    5. '[
' → logprob: -14.38023853302002
    6. '[b' → logprob: -16.005239486694336
    7. 'a' → logprob: -16.630239486694336
    8. '[A' → logprob: -16.630239486694336
    9. '[m' → logprob: -18.630239486694336
    10. ' a' → logprob: -18.630239486694336

Token 528: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.107425062713446e-06
    2. ' a' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.000006675720215
    4. '[a' → logprob: -18.25000762939453
    5. '	a' → logprob: -19.12500762939453
    6. '  ' → logprob: -20.12500762939453
    7. '    ' → logprob: -20.75000762939453
    8. ' ' → logprob: -20.75000762939453
    9. '[' → logprob: -21.25000762939453
    10. ''a' → logprob: -21.50000762939453

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011922525009140372
    2. ',b' → logprob: -6.751192092895508
    3. ',
' → logprob: -10.876192092895508
    4. ',c' → logprob: -13.001192092895508
    5. ' ,' → logprob: -14.126192092895508
    6. '   ' → logprob: -16.126192092895508
    7. ',a' → logprob: -17.751192092895508
    8. ',B' → logprob: -18.376192092895508
    9. ',
' → logprob: -18.501192092895508
    10. ',d' → logprob: -18.626192092895508

Token 530: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002036595979006961
    2. ' b' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.500204086303711
    4. '	b' → logprob: -19.62520408630371
    5. '    ' → logprob: -20.50020408630371
    6. '       ' → logprob: -22.62520408630371
    7. '  ' → logprob: -23.50020408630371
    8. ' ' → logprob: -23.50020408630371
    9. '
' → logprob: -23.87520408630371
    10. ')b' → logprob: -24.50020408630371

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2855416066013277e-05
    2. ',c' → logprob: -10.500032424926758
    3. ' ,' → logprob: -13.125032424926758
    4. ',
' → logprob: -13.250032424926758
    5. '   ' → logprob: -13.625032424926758
    6. 'c' → logprob: -15.625032424926758
    7. ',b' → logprob: -16.625032424926758
    8. ',C' → logprob: -19.125032424926758
    9. ',
' → logprob: -19.500032424926758
    10. ']' → logprob: -20.500032424926758

Token 532: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.000431861262768507
    2. ' c' → logprob: -7.750432014465332
    3. '   ' → logprob: -13.750432014465332
    4. '	c' → logprob: -17.625431060791016
    5. '    ' → logprob: -17.750431060791016
    6. '       ' → logprob: -18.500431060791016
    7. '  ' → logprob: -19.125431060791016
    8. ' ' → logprob: -19.500431060791016
    9. ')c' → logprob: -19.750431060791016
    10. '     ' → logprob: -19.875431060791016

Token 533: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.1888679839321412e-05
    2. ']
' → logprob: -11.375021934509277
    3. '   ' → logprob: -12.125021934509277
    4. ']

' → logprob: -12.750021934509277
    5. ' ]' → logprob: -13.500021934509277
    6. ')' → logprob: -14.250021934509277
    7. ',' → logprob: -16.12502098083496
    8. ']
' → logprob: -17.62502098083496
    9. '}' → logprob: -18.25002098083496
    10. '```' → logprob: -18.25002098083496

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18958599865436554
    2. 'called' → logprob: -2.5645859241485596
    3. 'd' → logprob: -2.9395859241485596
    4. 'n' → logprob: -3.8145859241485596
    5. '#' → logprob: -4.564586162567139
    6. 'calls' → logprob: -5.939586162567139
    7. 'b' → logprob: -6.439586162567139
    8. 'm' → logprob: -6.939586162567139
    9. 'numbers' → logprob: -6.939586162567139
    10. ' called' → logprob: -7.314586162567139

Token 535: ' #' (ID: 1069)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.1856219321489334
    2. 'n' → logprob: -2.060621976852417
    3. 'marked' → logprob: -4.435621738433838
    4. 'd' → logprob: -4.685621738433838
    5. '   ' → logprob: -5.435621738433838
    6. 'numbers' → logprob: -5.560621738433838
    7. '#' (adapté à ' #') → logprob: -5.685621738433838
    8. 'calls' → logprob: -6.310621738433838
    9. 'nums' → logprob: -6.435621738433838
    10. 'N' → logprob: -6.560621738433838

Token 536: ' Define' (ID: 38966)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.2296803742647171
    2. 'n' → logprob: -1.7296804189682007
    3. 'numbers' → logprob: -5.22968053817749
    4. 'N' → logprob: -5.22968053817749
    5. 'marked' → logprob: -5.35468053817749
    6. '#' → logprob: -5.85468053817749
    7. 'calls' → logprob: -5.97968053817749
    8. 'nums' → logprob: -6.10468053817749
    9. 'call' → logprob: -6.47968053817749
    10. 'm' → logprob: -6.85468053817749

Token 537: ' the' (ID: 290)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.2573872208595276
    2. ' mark' → logprob: -1.6323871612548828
    3. 'called' → logprob: -5.007387161254883
    4. '   ' → logprob: -5.257387161254883
    5. 'marked' → logprob: -5.382387161254883
    6. 'MARK' → logprob: -5.507387161254883
    7. 'B' → logprob: -6.007387161254883
    8. ' called' → logprob: -6.507387161254883
    9. ' the' → logprob: -7.007387161254883
    10. 'the' → logprob: -7.382387161254883

Token 538: ' special' (ID: 3582)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.12373059242963791
    2. 'marked' → logprob: -3.3737306594848633
    3. 'called' → logprob: -3.4987306594848633
    4. ' mark' → logprob: -3.7487306594848633
    5. 'MARK' → logprob: -4.498730659484863
    6. 'B' → logprob: -5.748730659484863
    7. ' called' → logprob: -5.998730659484863
    8. 'n' → logprob: -6.623730659484863
    9. 'marks' → logprob: -6.748730659484863
    10. '```' → logprob: -7.248730659484863

Token 539: ' value' (ID: 1432)
  Prédit: '_mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mark' → logprob: -0.6440525054931641
    2. 'mark' → logprob: -0.8940525054931641
    3. ' mark' → logprob: -2.894052505493164
    4. '_marker' → logprob: -4.769052505493164
    5. '_value' → logprob: -7.394052505493164
    6. '```' → logprob: -8.269052505493164
    7. 'marked' → logprob: -8.519052505493164
    8. '_MARK' → logprob: -8.644052505493164
    9. ' ' → logprob: -8.769052505493164
    10. '_marks' → logprob: -9.144052505493164

Token 540: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0031849145889282
    2. 'MARK' → logprob: -1.5031849145889282
    3. ' =' → logprob: -1.6281849145889282
    4. 'mark' → logprob: -2.8781847953796387
    5. 'marked' → logprob: -3.2531847953796387
    6. '=' → logprob: -3.3781847953796387
    7. ' MARK' → logprob: -4.128184795379639
    8. ' mark' → logprob: -4.128184795379639
    9. '-' → logprob: -4.378184795379639
    10. '_mark' → logprob: -4.753184795379639

Token 541: ' represent' (ID: 5188)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7644729018211365
    2. '-' → logprob: -0.8894729018211365
    3. ' mark' → logprob: -2.1394729614257812
    4. 'mark' → logprob: -5.764472961425781
    5. '100' → logprob: -7.639472961425781
    6. ' ' → logprob: -7.764472961425781
    7. ' use' → logprob: -8.139472961425781
    8. '1' → logprob: -8.139472961425781
    9. '-mark' → logprob: -8.264472961425781
    10. '0' → logprob: -8.389472961425781

Token 542: ' a' (ID: 261)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.017265956848859787
    2. ' -' → logprob: -4.392265796661377
    3. '0' → logprob: -5.892265796661377
    4. '100' → logprob: -6.892265796661377
    5. ' ' → logprob: -8.017266273498535
    6. '10' → logprob: -9.267266273498535
    7. '999' → logprob: -9.267266273498535
    8. 'marked' → logprob: -9.267266273498535
    9. '99' → logprob: -9.392266273498535
    10. '   ' → logprob: -9.517266273498535

Token 543: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.48343417048454285
    2. '-' → logprob: -0.9834342002868652
    3. ' marked' → logprob: -5.733434200286865
    4. '100' → logprob: -6.483434200286865
    5. 'mark' → logprob: -6.608434200286865
    6. '-mark' → logprob: -6.608434200286865
    7. '0' → logprob: -7.858434200286865
    8. 'called' → logprob: -7.983434200286865
    9. '99' → logprob: -8.483433723449707
    10. ' -' → logprob: -8.733433723449707

Token 544: ' cell' (ID: 4206)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.986427903175354
    2. 'cell' → logprob: -0.986427903175354
    3. ' cell' → logprob: -2.2364277839660645
    4. ' -' → logprob: -2.8614277839660645
    5. '0' → logprob: -3.8614277839660645
    6. '_cell' → logprob: -4.1114277839660645
    7. ' ' → logprob: -4.1114277839660645
    8. '-cell' → logprob: -4.6114277839660645
    9. 'number' → logprob: -5.3614277839660645
    10. '100' → logprob: -5.6114277839660645

Token 545: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8437383770942688
    2. '   ' → logprob: -0.9687383770942688
    3. ' mark' → logprob: -3.343738317489624
    4. 'marked' → logprob: -3.343738317489624
    5. '-' → logprob: -3.593738317489624
    6. ' -' → logprob: -3.843738317489624
    7. ' marked' → logprob: -3.968738317489624
    8. 'mark' → logprob: -4.343738555908203
    9. ' ' → logprob: -4.843738555908203
    10. '
' → logprob: -4.968738555908203

Token 546: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43006429076194763
    2. '-' → logprob: -1.93006432056427
    3. ' -' → logprob: -2.5550642013549805
    4. '100' → logprob: -3.0550642013549805
    5. ' mark' → logprob: -3.6800642013549805
    6. ' marked' → logprob: -4.6800642013549805
    7. 'marked' → logprob: -4.9300642013549805
    8. ' ' → logprob: -5.4300642013549805
    9. 'MARK' → logprob: -5.4300642013549805
    10. '999' → logprob: -5.5550642013549805

Token 547: ' mar' (ID: 2674)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.025937363505363464
    2. ' -' → logprob: -4.400937557220459
    3. '0' → logprob: -4.650937557220459
    4. '100' → logprob: -6.650937557220459
    5. ' ' → logprob: -7.275937557220459
    6. '999' → logprob: -7.900937557220459
    7. 'marked' → logprob: -8.2759370803833
    8. 'mark' → logprob: -8.4009370803833
    9. 'MARK' → logprob: -8.6509370803833
    10. '99' → logprob: -8.7759370803833

Token 548: 'u' (ID: 84)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011047935113310814
    2. 'ked' → logprob: -4.511047840118408
    3. 'ks' → logprob: -16.76104736328125
    4. 'kup' → logprob: -17.26104736328125
    5. 'ker' → logprob: -17.76104736328125
    6. 'kd' → logprob: -17.88604736328125
    7. 'к' → logprob: -18.38604736328125
    8. 'K' → logprob: -18.76104736328125
    9. '_k' → logprob: -19.01104736328125
    10. 'rk' → logprob: -19.13604736328125

Token 549: ' =' (ID: 314)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.030608011409640312
    2. 'ked' → logprob: -3.5306079387664795
    3. '=' → logprob: -7.905608177185059
    4. 'ku' → logprob: -8.280608177185059
    5. ' =' → logprob: -9.530608177185059
    6. 'ker' → logprob: -10.030608177185059
    7. '_value' → logprob: -10.030608177185059
    8. '=k' → logprob: -10.905608177185059
    9. '_k' → logprob: -11.780608177185059
    10. 'kup' → logprob: -11.780608177185059

Token 550: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09314262866973877
    2. '0' → logprob: -2.468142509460449
    3. '100' → logprob: -6.343142509460449
    4. '10' → logprob: -6.968142509460449
    5. '101' → logprob: -7.093142509460449
    6. '999' → logprob: -7.968142509460449
    7. '99' → logprob: -9.34314250946045
    8. '1' → logprob: -9.96814250946045
    9. 'None' → logprob: -10.59314250946045
    10. 'True' → logprob: -10.71814250946045

Token 551: '111' (ID: 8780)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6377890706062317
    2. '0' → logprob: -0.7627890706062317
    3. '100' → logprob: -5.887789249420166
    4. '10' → logprob: -7.137789249420166
    5. '999' → logprob: -7.262789249420166
    6. '101' → logprob: -8.137788772583008
    7. '99' → logprob: -8.887788772583008
    8. '1' → logprob: -9.762788772583008
    9. '111' → logprob: -10.137788772583008
    10. 'None' → logprob: -10.637788772583008

Token 552: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.120394229888916
    2. 'r' → logprob: -1.370394229888916
    3. 'k' → logprob: -1.620394229888916
    4. '   ' → logprob: -2.745394229888916
    5. '
' → logprob: -2.995394229888916
    6. '#' → logprob: -4.245394229888916
    7. 'numbers' → logprob: -4.370394229888916
    8. 'b' → logprob: -4.495394229888916
    9. 'called' → logprob: -4.495394229888916
    10. 'i' → logprob: -5.495394229888916

Token 553: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4580203592777252
    2. 'n' → logprob: -1.5830203294754028
    3. 'called' → logprob: -2.3330204486846924
    4. 'nums' → logprob: -3.9580204486846924
    5. 'm' → logprob: -4.583020210266113
    6. 'b' → logprob: -4.708020210266113
    7. 'd' → logprob: -4.958020210266113
    8. ' called' → logprob: -5.833020210266113
    9. 'num' → logprob: -5.833020210266113
    10. 'call' → logprob: -5.958020210266113

Token 554: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08136393874883652
    2. 'called' → logprob: -3.0813639163970947
    3. 'N' → logprob: -4.081364154815674
    4. 'd' → logprob: -5.831364154815674
    5. '#' (adapté à ' #') → logprob: -6.081364154815674
    6. 'num' → logprob: -6.206364154815674
    7. 'nums' → logprob: -6.331364154815674
    8. 'm' → logprob: -6.456364154815674
    9. 'call' → logprob: -6.456364154815674
    10. 'q' → logprob: -7.581364154815674

Token 555: ' Read' (ID: 5405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15575742721557617
    2. 'called' → logprob: -2.280757427215576
    3. 'N' → logprob: -4.405757427215576
    4. '#' → logprob: -4.530757427215576
    5. 'nums' → logprob: -5.655757427215576
    6. 'm' → logprob: -5.655757427215576
    7. 'marked' → logprob: -5.780757427215576
    8. 'num' → logprob: -5.905757427215576
    9. 'call' → logprob: -6.155757427215576
    10. 'q' → logprob: -6.905757427215576

Token 556: ' the' (ID: 290)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.12506377696990967
    2. 'list' → logprob: -3.250063896179199
    3. 'read' → logprob: -3.875063896179199
    4. 'the' → logprob: -4.000063896179199
    5. 'numbers' → logprob: -4.500063896179199
    6. 'marked' → logprob: -4.625063896179199
    7. '_called' → logprob: -5.750063896179199
    8. 'n' → logprob: -5.750063896179199
    9. ' called' → logprob: -5.750063896179199
    10. '   ' → logprob: -6.250063896179199

Token 557: ' number' (ID: 2086)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5495831370353699
    2. 'called' → logprob: -1.0495831966400146
    3. 'N' → logprob: -3.5495831966400146
    4. 'number' → logprob: -4.6745829582214355
    5. 'numbers' → logprob: -4.7995829582214355
    6. 'num' → logprob: -4.9245829582214355
    7. 'marked' → logprob: -5.4245829582214355
    8. 'count' → logprob: -6.0495829582214355
    9. 'list' → logprob: -6.0495829582214355
    10. 'q' → logprob: -6.5495829582214355

Token 558: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0006569160032086074
    2. '_list' → logprob: -8.375657081604004
    3. 'ed' → logprob: -8.875657081604004
    4. '_of' → logprob: -9.125657081604004
    5. '_called' → logprob: -9.250657081604004
    6. 'called' → logprob: -11.125657081604004
    7. 'list' → logprob: -11.250657081604004
    8. 'of' → logprob: -11.500657081604004
    9. '_calls' → logprob: -11.500657081604004
    10. 'call' → logprob: -11.750657081604004

Token 559: ' called' (ID: 4358)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.20463494956493378
    2. 'calls' → logprob: -2.45463490486145
    3. 'b' → logprob: -3.20463490486145
    4. 'n' → logprob: -3.45463490486145
    5. 'numbers' → logprob: -4.079635143280029
    6. 'marked' → logprob: -6.704635143280029
    7. 'times' → logprob: -6.829635143280029
    8. ' called' → logprob: -6.829635143280029
    9. 'call' → logprob: -7.454635143280029
    10. 'nums' → logprob: -7.454635143280029

Token 560: ' numbers' (ID: 8663)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.3098427355289459
    2. 'calls' → logprob: -2.309842824935913
    3. 'numbers' → logprob: -2.434842824935913
    4. '_calls' → logprob: -3.184842824935913
    5. 'called' → logprob: -3.934842824935913
    6. '_called' → logprob: -5.309842586517334
    7. 'b' → logprob: -5.434842586517334
    8. ' called' → logprob: -6.309842586517334
    9. 'times' → logprob: -6.684842586517334
    10. ' numbers' → logprob: -6.809842586517334

Token 561: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18763472139835358
    2. '   ' → logprob: -2.3126347064971924
    3. ' n' → logprob: -3.3126347064971924
    4. ',' → logprob: -3.9376347064971924
    5. ' called' → logprob: -5.1876349449157715
    6. 'N' → logprob: -5.8126349449157715
    7. 'called' → logprob: -6.3126349449157715
    8. ' N' → logprob: -6.8126349449157715
    9. ' =' → logprob: -6.8126349449157715
    10. 'm' → logprob: -6.8126349449157715

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8385442495346069
    2. 'n' → logprob: -1.088544249534607
    3. ' called' → logprob: -2.2135443687438965
    4. 'called' → logprob: -2.8385443687438965
    5. ' n' → logprob: -3.5885443687438965
    6. ',' → logprob: -4.5885443687438965
    7. 'N' → logprob: -4.9635443687438965
    8. ' =' → logprob: -5.3385443687438965
    9. 'k' → logprob: -5.5885443687438965
    10. ' N' → logprob: -6.0885443687438965

Token 563: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.28943753242492676
    2. 'N' → logprob: -1.4144375324249268
    3. 'num' → logprob: -5.414437294006348
    4. '   ' → logprob: -6.289437294006348
    5. 'called' → logprob: -7.289437294006348
    6. 'm' → logprob: -8.164437294006348
    7. 'k' → logprob: -8.664437294006348
    8. 'call' → logprob: -8.664437294006348
    9. 'q' → logprob: -8.914437294006348
    10. ' n' → logprob: -9.039437294006348

Token 564: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009773559868335724
    2. '=' → logprob: -4.6347737312316895
    3. '=int' → logprob: -11.384773254394531
    4. ' ' → logprob: -12.759773254394531
    5. ',' → logprob: -13.509773254394531
    6. '_' → logprob: -14.384773254394531
    7. '   ' → logprob: -14.509773254394531
    8. '  ' → logprob: -15.134773254394531
    9. '=input' → logprob: -15.759773254394531
    10. ')' → logprob: -15.759773254394531

Token 565: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804149478673935
    2. ' int' → logprob: -3.288041591644287
    3. ' ' → logprob: -20.288042068481445
    4. '=int' → logprob: -20.288042068481445
    5. '	int' → logprob: -20.663042068481445
    6. '[int' → logprob: -20.788042068481445
    7. '<int' → logprob: -21.163042068481445
    8. '(int' → logprob: -21.288042068481445
    9. '  ' → logprob: -21.413042068481445
    10. '   ' → logprob: -21.913042068481445

Token 566: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001530693843960762
    2. '(' → logprob: -6.501530647277832
    3. 'input' → logprob: -10.501530647277832
    4. '()' → logprob: -15.001530647277832
    5. ' (' → logprob: -15.126530647277832
    6. ' input' → logprob: -15.501530647277832
    7. '=input' → logprob: -16.37653160095215
    8. '(
' → logprob: -18.00153160095215
    9. ',input' → logprob: -18.25153160095215
    10. '<input' → logprob: -19.00153160095215

Token 567: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004098227713257074
    2. '()' → logprob: -5.504098415374756
    3. '())
' → logprob: -11.629097938537598
    4. ')' → logprob: -11.879097938537598
    5. '().' → logprob: -12.879097938537598
    6. '(' → logprob: -14.629097938537598
    7. ' ())' → logprob: -14.629097938537598
    8. '())

' → logprob: -15.504097938537598
    9. '();)' → logprob: -16.004098892211914
    10. '()
' → logprob: -16.879098892211914

Token 568: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25514549016952515
    2. 'called' → logprob: -1.50514554977417
    3. 'numbers' → logprob: -7.00514554977417
    4. 'calls' → logprob: -7.38014554977417
    5. ' called' → logprob: -7.75514554977417
    6. 'call' → logprob: -8.005145072937012
    7. 'b' → logprob: -8.255145072937012
    8. 'nums' → logprob: -8.755145072937012
    9. 'c' → logprob: -9.130145072937012
    10. '#' → logprob: -9.630145072937012

Token 569: ' #' (ID: 1069)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.1320895403623581
    2. 'for' → logprob: -2.507089614868164
    3. '   ' → logprob: -3.757089614868164
    4. '#' (adapté à ' #') → logprob: -5.382089614868164
    5. ' called' → logprob: -5.382089614868164
    6. 'numbers' → logprob: -5.757089614868164
    7. 'calls' → logprob: -6.257089614868164
    8. 'b' → logprob: -6.382089614868164
    9. ' for' → logprob: -6.757089614868164
    10. 'nums' → logprob: -7.882089614868164

Token 570: ' For' (ID: 2214)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.2290002405643463
    2. 'for' → logprob: -1.604000210762024
    3. 'numbers' → logprob: -5.979000091552734
    4. 'nums' → logprob: -8.104000091552734
    5. 'calls' → logprob: -8.229000091552734
    6. '#' → logprob: -9.104000091552734
    7. 'b' → logprob: -9.229000091552734
    8. 'marked' → logprob: -9.479000091552734
    9. 'call' → logprob: -9.604000091552734
    10. ' called' → logprob: -10.979000091552734

Token 571: ' each' (ID: 2454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011054071597754955
    2. ' _' → logprob: -4.511054039001465
    3. ' ' → logprob: -12.511054039001465
    4. ' i' → logprob: -13.886054039001465
    5. ' ' → logprob: -14.511054039001465
    6. 'i' → logprob: -15.136054039001465
    7. '_range' → logprob: -15.386054039001465
    8. '_i' → logprob: -15.386054039001465
    9. ' ‌' → logprob: -16.63605499267578
    10. '  ' → logprob: -16.76105499267578

Token 572: ' called' (ID: 4358)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03805181756615639
    2. ' _' → logprob: -3.2880518436431885
    3. '_called' → logprob: -12.53805160522461
    4. ' in' → logprob: -13.03805160522461
    5. ' called' → logprob: -14.16305160522461
    6. ' ' → logprob: -14.28805160522461
    7. '_i' → logprob: -14.41305160522461
    8. '   ' → logprob: -14.66305160522461
    9. '_call' → logprob: -15.16305160522461
    10. '_number' → logprob: -15.16305160522461

Token 573: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.10072384774684906
    2. '_number' → logprob: -3.1007237434387207
    3. 'number' → logprob: -3.1007237434387207
    4. ' _' → logprob: -5.475723743438721
    5. '_' → logprob: -7.100723743438721
    6. ' ' → logprob: -7.725723743438721
    7. '   ' → logprob: -9.100724220275879
    8. '_num' → logprob: -9.975724220275879
    9. ' i' → logprob: -10.225724220275879
    10. 'num' → logprob: -10.600724220275879

Token 574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.634853720664978
    2. '   ' → logprob: -1.134853720664978
    3. ':' → logprob: -2.0098538398742676
    4. ':
' → logprob: -4.634853839874268
    5. 'number' → logprob: -6.884853839874268
    6. 'for' → logprob: -7.509853839874268
    7. '
' → logprob: -7.884853839874268
    8. 'n' → logprob: -8.13485336303711
    9. ' called' → logprob: -8.50985336303711
    10. ',
' → logprob: -8.50985336303711

Token 575: ' mark' (ID: 1983)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.501456618309021
    2. 'number' → logprob: -1.251456618309021
    3. '   ' → logprob: -3.3764567375183105
    4. ' called' → logprob: -3.5014567375183105
    5. 'num' → logprob: -3.7514567375183105
    6. ' for' → logprob: -5.0014567375183105
    7. ' num' → logprob: -5.5014567375183105
    8. 'called' → logprob: -5.6264567375183105
    9. 'for' → logprob: -5.7514567375183105
    10. 'n' → logprob: -8.001456260681152

Token 576: ' them' (ID: 1373)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.5587566494941711
    2. '_' → logprob: -1.6837565898895264
    3. 'the' → logprob: -2.6837565898895264
    4. '_number' → logprob: -2.8087565898895264
    5. '   ' → logprob: -3.1837565898895264
    6. 'num' → logprob: -4.1837568283081055
    7. 'on' → logprob: -4.5587568283081055
    8. ' ' → logprob: -4.9337568283081055
    9. ' number' → logprob: -4.9337568283081055
    10. '(' → logprob: -5.8087568283081055

Token 577: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9256383776664734
    2. ' in' → logprob: -0.9256383776664734
    3. ' on' → logprob: -2.300638437271118
    4. ' for' → logprob: -3.175638437271118
    5. 'for' → logprob: -3.300638437271118
    6. ' and' → logprob: -4.675638198852539
    7. 'in' → logprob: -5.050638198852539
    8. 'on' → logprob: -5.675638198852539
    9. ',' → logprob: -6.800638198852539
    10. '(' → logprob: -6.800638198852539

Token 578: ' the' (ID: 290)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.017573585733771324
    2. ' grid' → logprob: -4.517573356628418
    3. 'the' → logprob: -5.142573356628418
    4. ' the' → logprob: -7.392573356628418
    5. 'range' → logprob: -10.142573356628418
    6. '   ' → logprob: -13.017573356628418
    7. '	grid' → logprob: -13.517573356628418
    8. '
' → logprob: -14.017573356628418
    9. ' range' → logprob: -14.267573356628418
    10. '(grid' → logprob: -14.517573356628418

Token 579: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.023891109973192215
    2. 'for' → logprob: -3.8988912105560303
    3. ' grid' → logprob: -5.773890972137451
    4. ' for' → logprob: -8.64889144897461
    5. 'range' → logprob: -10.02389144897461
    6. '   ' → logprob: -12.52389144897461
    7. 'b' → logprob: -12.89889144897461
    8. '(grid' → logprob: -13.77389144897461
    9. '	grid' → logprob: -14.02389144897461
    10. ' ' → logprob: -14.14889144897461

Token 580: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016873658751137555
    2. 'for' → logprob: -8.750168800354004
    3. ' for' → logprob: -11.750168800354004
    4. '
' → logprob: -13.500168800354004
    5. ',' → logprob: -14.125168800354004
    6. '    
' → logprob: -15.875168800354004
    7. '```' → logprob: -17.375167846679688
    8. '.' → logprob: -18.125167846679688
    9. 'with' → logprob: -18.125167846679688
    10. 'n' → logprob: -18.250167846679688

Token 581: ' present' (ID: 3333)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0915577411651611
    2. ' n' → logprob: -1.5915577411651611
    3. 'number' → logprob: -1.5915577411651611
    4. '_' → logprob: -3.841557741165161
    5. ' number' → logprob: -3.841557741165161
    6. 'the' → logprob: -3.966557741165161
    7. ' True' → logprob: -3.966557741165161
    8. 'they' → logprob: -4.091557502746582
    9. 'True' → logprob: -4.341557502746582
    10. ' ' → logprob: -4.466557502746582

Token 582: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004691610229201615
    2. 'for' → logprob: -8.000469207763672
    3. ' for' → logprob: -9.250469207763672
    4. '
' → logprob: -10.500469207763672
    5. ',' → logprob: -11.875469207763672
    6. '    
' → logprob: -14.000469207763672
    7. '```' → logprob: -14.125469207763672
    8. 'n' → logprob: -14.750469207763672
    9. '  ' → logprob: -15.375469207763672
    10. '    ' → logprob: -15.750469207763672

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005928283790126443
    2. 'for' → logprob: -7.5005927085876465
    3. ' for' → logprob: -10.250593185424805
    4. '
' → logprob: -12.625593185424805
    5. '```' → logprob: -14.250593185424805
    6. ',' → logprob: -15.250593185424805
    7. '    
' → logprob: -15.375593185424805
    8. 'n' → logprob: -17.125593185424805
    9. ')' → logprob: -18.125593185424805
    10. '	for' → logprob: -18.375593185424805

Token 584: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015318267047405243
    2. '   ' → logprob: -4.265318393707275
    3. ' for' → logprob: -6.765318393707275
    4. '	for' → logprob: -14.140317916870117
    5. '
' → logprob: -15.640317916870117
    6. '```' → logprob: -16.640317916870117
    7. '    
' → logprob: -17.265317916870117
    8. '  ' → logprob: -17.890317916870117
    9. ' ' → logprob: -18.015317916870117
    10. '    ' → logprob: -19.890317916870117

Token 585: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.5577775128767826e-06
    2. '_number' → logprob: -13.375005722045898
    3. ' _' → logprob: -13.750005722045898
    4. '_in' → logprob: -14.000005722045898
    5. '_range' → logprob: -14.125005722045898
    6. '_num' → logprob: -14.250005722045898
    7. '_i' → logprob: -14.875005722045898
    8. '_index' → logprob: -16.6250057220459
    9. '_=' → logprob: -16.7500057220459
    10. '_name' → logprob: -17.0000057220459

Token 586: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009766122326254845
    2. 'in' → logprob: -4.634766101837158
    3. ' ' → logprob: -12.259766578674316
    4. 'range' → logprob: -13.384766578674316
    5. '  ' → logprob: -14.009766578674316
    6. 's' → logprob: -14.259766578674316
    7. 'n' → logprob: -14.384766578674316
    8. 'import' → logprob: -14.759766578674316
    9. '	in' → logprob: -15.009766578674316
    10. '```' → logprob: -15.134766578674316

Token 587: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. 'input' → logprob: -18.000158309936523
    4. '(range' → logprob: -19.875158309936523
    5. '	range' → logprob: -20.125158309936523
    6. 'r' → logprob: -20.625158309936523
    7. '[' → logprob: -20.875158309936523
    8. 'map' → logprob: -21.250158309936523
    9. '   ' → logprob: -21.375158309936523
    10. '0' → logprob: -21.375158309936523

Token 588: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.031555525958538055
    2. ' n' → logprob: -3.906555414199829
    3. '(' → logprob: -5.156555652618408
    4. ' (' → logprob: -5.656555652618408
    5. 'n' → logprob: -6.406555652618408
    6. ' range' → logprob: -11.15655517578125
    7. ' in' → logprob: -11.28155517578125
    8. '(range' → logprob: -11.90655517578125
    9. 'range' → logprob: -12.53155517578125
    10. ',n' → logprob: -13.28155517578125

Token 589: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026651715859770775
    2. '):
' → logprob: -3.651651620864868
    3. ' ):' → logprob: -8.526651382446289
    4. ')' → logprob: -9.276651382446289
    5. ':' → logprob: -10.901651382446289
    6. '):
' → logprob: -10.901651382446289
    7. ',' → logprob: -11.526651382446289
    8. '   ' → logprob: -12.151651382446289
    9. ' ):
' → logprob: -12.401651382446289
    10. '):

' → logprob: -13.526651382446289

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07064158469438553
    2. ' number' → logprob: -3.32064151763916
    3. ' called' → logprob: -3.57064151763916
    4. 'number' → logprob: -5.82064151763916
    5. '   ' → logprob: -8.07064151763916
    6. 'called' → logprob: -8.07064151763916
    7. 'num' → logprob: -9.32064151763916
    8. ' x' → logprob: -9.57064151763916
    9. ' s' → logprob: -10.32064151763916
    10. ' num' → logprob: -10.44564151763916

Token 591: ' e' (ID: 319)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5937165021896362
    2. 'number' → logprob: -1.2187165021896362
    3. 'called' → logprob: -2.593716621398926
    4. 'x' → logprob: -2.718716621398926
    5. '   ' → logprob: -5.093716621398926
    6. 'call' → logprob: -5.593716621398926
    7. 't' → logprob: -7.093716621398926
    8. 'm' → logprob: -7.843716621398926
    9. '       ' → logprob: -9.843716621398926
    10. 'q' → logprob: -9.968716621398926

Token 592: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.035129331052303314
    2. '=' → logprob: -3.9101293087005615
    3. 'num' → logprob: -4.785129547119141
    4. 'number' → logprob: -5.410129547119141
    5. '_number' → logprob: -7.785129547119141
    6. '=int' → logprob: -8.03512954711914
    7. '   ' → logprob: -8.78512954711914
    8. 'n' → logprob: -9.16012954711914
    9. '_num' → logprob: -9.16012954711914
    10. 'called' → logprob: -9.28512954711914

Token 593: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019287518225610256
    2. ' int' → logprob: -6.251928806304932
    3. 'read' → logprob: -15.876928329467773
    4. '   ' → logprob: -17.251928329467773
    5. '(int' → logprob: -17.501928329467773
    6. '[int' → logprob: -17.501928329467773
    7. '<int' → logprob: -18.001928329467773
    8. '=int' → logprob: -18.251928329467773
    9. '	int' → logprob: -18.751928329467773
    10. ' ' → logprob: -19.876928329467773

Token 594: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.1782583391759545e-05
    2. '(' → logprob: -11.000031471252441
    3. 'input' → logprob: -11.125031471252441
    4. ' input' → logprob: -16.000032424926758
    5. ' (' → logprob: -16.250032424926758
    6. '=input' → logprob: -17.000032424926758
    7. '()' → logprob: -18.000032424926758
    8. ',input' → logprob: -18.000032424926758
    9. '(
' → logprob: -18.750032424926758
    10. '<input' → logprob: -19.750032424926758

Token 595: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35061100125312805
    2. ')
' → logprob: -1.8506109714508057
    3. '())' → logprob: -2.7256109714508057
    4. '())
' → logprob: -2.8506109714508057
    5. '()' → logprob: -4.225611209869385
    6. '()
' → logprob: -7.475611209869385
    7. ')
' → logprob: -10.350610733032227
    8. '   ' → logprob: -10.475610733032227
    9. '       ' → logprob: -11.350610733032227
    10. '())
' → logprob: -11.350610733032227

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005824991036206484
    2. '   ' → logprob: -5.255825042724609
    3. 'mark' → logprob: -7.880825042724609
    4. ' mark' → logprob: -9.13082504272461
    5. '
' → logprob: -9.50582504272461
    6. '        
' → logprob: -11.25582504272461
    7. '```' → logprob: -11.63082504272461
    8. '    
' → logprob: -12.88082504272461
    9. '(mark' → logprob: -13.25582504272461
    10. '           ' → logprob: -13.50582504272461

Token 597: ' mark' (ID: 1983)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' (adapté à ' mark') → logprob: -0.3324429988861084
    2. '   ' → logprob: -1.9574429988861084
    3. ' mark' → logprob: -2.2074429988861084
    4. '       ' → logprob: -3.4574429988861084
    5. '
' → logprob: -9.707443237304688
    6. '```' → logprob: -10.332443237304688
    7. '        
' → logprob: -11.957443237304688
    8. '    
' → logprob: -12.582443237304688
    9. '(mark' → logprob: -12.707443237304688
    10. '           ' → logprob: -13.207443237304688

Token 598: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.9361264946837764e-07
    2. '_value' → logprob: -16.5
    3. '_' → logprob: -17.625
    4. '_num' → logprob: -18.25
    5. '_NUMBER' → logprob: -18.75
    6. '_name' → logprob: -18.75
    7. '_Number' → logprob: -19.375
    8. 'number' → logprob: -19.5
    9. '_numbers' → logprob: -20.25
    10. 'Number' → logprob: -20.875

Token 599: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -1.0280383548888494e-06
    2. '_number' → logprob: -14.000000953674316
    3. 'on' → logprob: -16.500001907348633
    4. '_' → logprob: -17.750001907348633
    5. '```' → logprob: -18.500001907348633
    6. '_at' → logprob: -18.625001907348633
    7. '(_' → logprob: -19.000001907348633
    8. ' _' → logprob: -19.125001907348633
    9. '(' → logprob: -19.250001907348633
    10. ' on' → logprob: -19.250001907348633

Token 600: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.04863233491778374
    2. 'grid' → logprob: -3.0486323833465576
    3. ' grid' → logprob: -10.048632621765137
    4. '(grid' → logprob: -14.923632621765137
    5. 's' → logprob: -15.423632621765137
    6. '_' → logprob: -15.548632621765137
    7. 'the' → logprob: -15.798632621765137
    8. '_gr' → logprob: -15.798632621765137
    9. 'Grid' → logprob: -15.798632621765137
    10. '
' → logprob: -16.54863166809082

Token 601: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0006629953859373927
    2. '(' → logprob: -7.500662803649902
    3. '(grid' → logprob: -9.250662803649902
    4. '(number' → logprob: -11.625662803649902
    5. ' (' → logprob: -12.750662803649902
    6. '(
' → logprob: -14.375662803649902
    7. 'e' → logprob: -14.750662803649902
    8. 'grid' → logprob: -14.875662803649902
    9. 'number' → logprob: -15.375662803649902
    10. '(m' → logprob: -16.87566375732422

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036781092640012503
    2. '(grid' → logprob: -5.628678321838379
    3. ' ,' → logprob: -9.503678321838379
    4. ',
' → logprob: -14.003678321838379
    5. ')' → logprob: -14.128678321838379
    6. 'grid' → logprob: -14.878678321838379
    7. '   ' → logprob: -15.128678321838379
    8. '```' → logprob: -15.253678321838379
    9. '(' → logprob: -15.378678321838379
    10. ' grid' → logprob: -15.753678321838379

Token 603: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.20141352713108063
    2. ' grid' → logprob: -1.7014135122299194
    3. '	grid' → logprob: -16.576414108276367
    4. '(grid' → logprob: -16.701414108276367
    5. '   ' → logprob: -17.076414108276367
    6. ' ' → logprob: -19.076414108276367
    7. '.grid' → logprob: -19.201414108276367
    8. ' grids' → logprob: -19.326414108276367
    9. '/grid' → logprob: -19.451414108276367
    10. 'Grid' → logprob: -19.576414108276367

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.988221684878226e-06
    2. ' ,' → logprob: -12.125006675720215
    3. ',m' → logprob: -13.625006675720215
    4. 'mar' → logprob: -16.12500762939453
    5. '   ' → logprob: -16.50000762939453
    6. ',
' → logprob: -17.12500762939453
    7. '```' → logprob: -17.50000762939453
    8. '‌,' → logprob: -17.62500762939453
    9. ')' → logprob: -17.87500762939453
    10. ' mar' → logprob: -18.50000762939453

Token 605: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.000273136975010857
    2. ' mar' → logprob: -8.250272750854492
    3. 'mark' → logprob: -11.500272750854492
    4. ' ' → logprob: -14.500272750854492
    5. '   ' → logprob: -14.500272750854492
    6. 'm' → logprob: -14.875272750854492
    7. '  ' → logprob: -17.000272750854492
    8. 'Mar' → logprob: -17.125272750854492
    9. '	m' → logprob: -17.250272750854492
    10. '111' → logprob: -17.375272750854492

Token 606: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.843177233240567e-05
    2. 'aru' → logprob: -11.625018119812012
    3. 'mar' → logprob: -12.625018119812012
    4. 'a' → logprob: -13.000018119812012
    5. 'ar' → logprob: -13.125018119812012
    6. ' ' → logprob: -14.500018119812012
    7. '   ' → logprob: -15.500018119812012
    8. 'au' → logprob: -16.000019073486328
    9. 'ru' → logprob: -16.000019073486328
    10. '	u' → logprob: -16.250019073486328

Token 607: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.180258191714529e-06
    2. ')
' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.750008583068848
    4. ' )' → logprob: -16.87500762939453
    5. ')

' → logprob: -16.87500762939453
    6. '),' → logprob: -18.50000762939453
    7. '))' → logprob: -18.87500762939453
    8. '<|end|>' → logprob: -19.25000762939453
    9. ')}' → logprob: -19.50000762939453
    10. '       ' → logprob: -19.50000762939453

Token 608: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021114809438586235
    2. 'if' → logprob: -4.021114826202393
    3. '```' → logprob: -5.896114826202393
    4. ' if' → logprob: -8.771114349365234
    5. '    
' → logprob: -10.521114349365234
    6. 'print' → logprob: -11.021114349365234
    7. '
' → logprob: -11.771114349365234
    8. '``' → logprob: -12.646114349365234
    9. '`' → logprob: -15.146114349365234
    10. 'for' → logprob: -15.646114349365234

Token 609: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.705159068107605
    2. 'if' → logprob: -0.705159068107605
    3. 'print' → logprob: -4.4551591873168945
    4. ' if' → logprob: -8.580159187316895
    5. '```' → logprob: -8.955159187316895
    6. '    
' → logprob: -12.830159187316895
    7. '``' → logprob: -14.205159187316895
    8. ' print' → logprob: -14.580159187316895
    9. 'result' → logprob: -14.705159187316895
    10. '
' → logprob: -15.830159187316895

Token 610: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0032141993287950754
    2. 'print' → logprob: -5.878214359283447
    3. '   ' → logprob: -7.878214359283447
    4. 'result' → logprob: -11.378213882446289
    5. ' if' → logprob: -11.503213882446289
    6. '#' → logprob: -11.753213882446289
    7. 'b' → logprob: -14.628213882446289
    8. '```' → logprob: -15.753213882446289
    9. 'If' → logprob: -16.25321388244629
    10. '
' → logprob: -17.00321388244629

Token 611: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7152019143104553
    2. 'if' → logprob: -0.7152019143104553
    3. ' if' → logprob: -4.0902018547058105
    4. '(' → logprob: -5.3402018547058105
    5. '(if' → logprob: -9.340202331542969
    6. 'b' → logprob: -10.340202331542969
    7. 'result' → logprob: -10.465202331542969
    8. '	if' → logprob: -10.840202331542969
    9. 'and' → logprob: -10.840202331542969
    10. '()' → logprob: -10.965202331542969

Token 612: ' the' (ID: 290)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.03806513547897339
    2. ' is' → logprob: -3.288065195083618
    3. 'b' → logprob: -10.913064956665039
    4. 'print' → logprob: -12.163064956665039
    5. ' bingo' → logprob: -16.16306495666504
    6. ' b' → logprob: -16.41306495666504
    7. '(is' → logprob: -16.78806495666504
    8. 'B' → logprob: -16.91306495666504
    9. ' ' → logprob: -17.66306495666504
    10. 'if' → logprob: -18.03806495666504

Token 613: ' grid' (ID: 10586)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38721415400505066
    2. 'is' → logprob: -1.262214183807373
    3. ' is' → logprob: -4.262214183807373
    4. 'print' → logprob: -4.262214183807373
    5. ' if' → logprob: -5.137214183807373
    6. 'b' → logprob: -6.262214183807373
    7. 'result' → logprob: -6.762214183807373
    8. 'import' → logprob: -8.262213706970215
    9. '   ' → logprob: -8.762213706970215
    10. '
' → logprob: -9.012213706970215

Token 614: ' has' (ID: 853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9486697316169739
    2. 'has' → logprob: -1.198669672012329
    3. ' has' → logprob: -1.198669672012329
    4. 'if' → logprob: -5.823669910430908
    5. 'is' → logprob: -6.198669910430908
    6. ':' → logprob: -6.448669910430908
    7. ' is' → logprob: -6.698669910430908
    8. '_has' → logprob: -7.198669910430908
    9. '.has' → logprob: -9.07366943359375
    10. ' if' → logprob: -9.07366943359375

Token 615: ' a' (ID: 261)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.36423611640930176
    2. 'is' → logprob: -1.2392361164093018
    3. 'b' → logprob: -4.364235877990723
    4. ' bingo' → logprob: -6.489235877990723
    5. ' a' → logprob: -6.864235877990723
    6. 'a' → logprob: -8.614235877990723
    7. 'B' → logprob: -9.364235877990723
    8. ' b' → logprob: -10.114235877990723
    9. '   ' → logprob: -10.114235877990723
    10. ' Bingo' → logprob: -11.364235877990723

Token 616: ' bingo' (ID: 65141)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009795991703867912
    2. ' bingo' → logprob: -4.634796142578125
    3. 'is' → logprob: -11.134796142578125
    4. ' is' → logprob: -11.384796142578125
    5. ' b' → logprob: -12.259796142578125
    6. 'bing' → logprob: -12.509796142578125
    7. ' Bingo' → logprob: -12.884796142578125
    8. '   ' → logprob: -13.384796142578125
    9. 'B' → logprob: -14.884796142578125
    10. '_b' → logprob: -15.009796142578125

Token 617: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01885267347097397
    2. 'if' → logprob: -4.018852710723877
    3. ' if' → logprob: -7.268852710723877
    4. 'print' → logprob: -12.893852233886719
    5. '```' → logprob: -13.643852233886719
    6. '    
' → logprob: -13.893852233886719
    7. '
' → logprob: -14.518852233886719
    8. '	if' → logprob: -16.26885223388672
    9. 'b' → logprob: -16.39385223388672
    10. ',' → logprob: -16.64385223388672

Token 618: 'row' (ID: 843)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0046114567667245865
    2. 'mar' → logprob: -5.879611492156982
    3. 'if' → logprob: -7.504611492156982
    4. 'b' → logprob: -7.629611492156982
    5. ' is' → logprob: -8.129611015319824
    6. 'True' → logprob: -8.254611015319824
    7. ')' → logprob: -8.754611015319824
    8. '   ' → logprob: -11.254611015319824
    9. 'print' → logprob: -11.629611015319824
    10. '
' → logprob: -11.629611015319824

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6154773831367493
    2. ' or' → logprob: -0.8654773831367493
    3. 'or' → logprob: -3.8654773235321045
    4. '   ' → logprob: -4.115477561950684
    5. ')' → logprob: -6.740477561950684
    6. ',
' → logprob: -9.115477561950684
    7. 's' → logprob: -9.990477561950684
    8. ' ,' → logprob: -10.115477561950684
    9. '  ' → logprob: -10.865477561950684
    10. '=' → logprob: -10.990477561950684

Token 620: ' column' (ID: 6000)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.5721943974494934
    2. 'mark' → logprob: -1.0721943378448486
    3. 'column' → logprob: -2.4471943378448486
    4. 'col' → logprob: -5.072194576263428
    5. ' mar' → logprob: -8.32219409942627
    6. ' mark' → logprob: -8.57219409942627
    7. ' column' → logprob: -8.69719409942627
    8. '   ' → logprob: -10.69719409942627
    9. 'or' → logprob: -11.94719409942627
    10. 'marked' → logprob: -12.19719409942627

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09085351228713989
    2. 'or' → logprob: -2.590853452682495
    3. ' or' → logprob: -4.465853691101074
    4. '   ' → logprob: -8.215853691101074
    5. ')' → logprob: -9.215853691101074
    6. ' ,' → logprob: -11.090853691101074
    7. ',
' → logprob: -11.840853691101074
    8. '```' → logprob: -13.465853691101074
    9. '
' → logprob: -14.465853691101074
    10. 's' → logprob: -14.465853691101074

Token 622: ' diagonal' (ID: 71638)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.03007824532687664
    2. ' or' → logprob: -3.530078172683716
    3. '#' → logprob: -8.030077934265137
    4. ')' → logprob: -14.280077934265137
    5. 'mark' → logprob: -14.280077934265137
    6. '   ' → logprob: -14.905077934265137
    7. ' #' → logprob: -15.905077934265137
    8. '	or' → logprob: -16.030078887939453
    9. ' ' → logprob: -16.405078887939453
    10. 'di' → logprob: -16.530078887939453

Token 623: ' fully' (ID: 9637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.76051926612854
    2. ')
' → logprob: -0.76051926612854
    3. '   ' → logprob: -3.01051926612854
    4. '):' → logprob: -5.135519027709961
    5. ',' → logprob: -5.385519027709961
    6. '):
' → logprob: -5.510519027709961
    7. 'result' → logprob: -8.010519027709961
    8. ')

' → logprob: -8.760519027709961
    9. ' after' → logprob: -9.385519027709961
    10. ' mark' → logprob: -9.510519027709961

Token 624: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.0007504248642362654
    2. 'filled' → logprob: -8.000750541687012
    3. ' marked' → logprob: -8.375750541687012
    4. 'mar' → logprob: -9.250750541687012
    5. '```' → logprob: -10.125750541687012
    6. 'matched' → logprob: -10.500750541687012
    7. 'occupied' → logprob: -12.000750541687012
    8. ')' → logprob: -12.375750541687012
    9. '   ' → logprob: -13.125750541687012
    10. 'mark' → logprob: -13.625750541687012

Token 625: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2574116289615631
    2. ')
' → logprob: -2.0074117183685303
    3. '   ' → logprob: -2.3824117183685303
    4. '):' → logprob: -9.38241195678711
    5. 'if' → logprob: -9.75741195678711
    6. ',' → logprob: -9.75741195678711
    7. '):
' → logprob: -10.13241195678711
    8. ')

' → logprob: -11.13241195678711
    9. ' if' → logprob: -12.13241195678711
    10. ' )' → logprob: -12.38241195678711

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01919163390994072
    2. 'if' → logprob: -4.019191741943359
    3. ' if' → logprob: -6.894191741943359
    4. 'print' → logprob: -10.76919174194336
    5. '```' → logprob: -12.01919174194336
    6. '    
' → logprob: -15.14419174194336
    7. ' print' → logprob: -16.51919174194336
    8. '	if' → logprob: -16.89419174194336
    9. '
' → logprob: -17.14419174194336
    10. '``' → logprob: -18.39419174194336

Token 627: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.024001576006412506
    2. '   ' → logprob: -3.7740015983581543
    3. 'print' → logprob: -7.524001598358154
    4. ' if' → logprob: -8.524001121520996
    5. 'result' → logprob: -11.649001121520996
    6. '```' → logprob: -11.774001121520996
    7. 'b' → logprob: -15.024001121520996
    8. '    
' → logprob: -15.274001121520996
    9. '	if' → logprob: -16.024002075195312
    10. '``' → logprob: -16.899002075195312

Token 628: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2014133334159851
    2. ' is' → logprob: -1.7014133930206299
    3. '   ' → logprob: -17.201414108276367
    4. 'b' → logprob: -17.826414108276367
    5. '(is' → logprob: -18.326414108276367
    6. ' ' → logprob: -20.201414108276367
    7. '	is' → logprob: -20.326414108276367
    8. ' ' → logprob: -22.076414108276367
    9. 'True' → logprob: -22.451414108276367
    10. '
' → logprob: -22.826414108276367

Token 629: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.0280383548888494e-06
    2. 'b' → logprob: -14.125000953674316
    3. '_' → logprob: -15.750000953674316
    4. ' bingo' → logprob: -18.375001907348633
    5. 'B' → logprob: -19.250001907348633
    6. '_B' → logprob: -19.750001907348633
    7. '(b' → logprob: -19.875001907348633
    8. ' _' → logprob: -20.125001907348633
    9. '	b' → logprob: -20.250001907348633
    10. '\' → logprob: -20.250001907348633

Token 630: 'ingo' (ID: 14878)
  Prédit: 'ingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingo' → logprob: -5.6457742175552994e-05
    2. 'ing' → logprob: -10.625056266784668
    3. 'ango' → logprob: -11.625056266784668
    4. 'ngo' → logprob: -12.375056266784668
    5. 'in' → logprob: -12.750056266784668
    6. 'i' → logprob: -13.000056266784668
    7. '   ' → logprob: -13.000056266784668
    8. 'ongo' → logprob: -13.125056266784668
    9. '```' → logprob: -13.375056266784668
    10. 'igo' → logprob: -14.125056266784668

Token 631: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: 0.0
    2. ' (' → logprob: -17.25
    3. '(' → logprob: -19.125
    4. '(gr' → logprob: -19.25
    5. '(Grid' → logprob: -19.5
    6. ':grid' → logprob: -20.125
    7. ' grid' → logprob: -20.375
    8. 'grid' → logprob: -20.5
    9. '(graph' → logprob: -21.125
    10. '(g' → logprob: -21.5

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.988221684878226e-06
    2. ' ,' → logprob: -12.125006675720215
    3. ',m' → logprob: -13.500006675720215
    4. '(m' → logprob: -16.62500762939453
    5. '   ' → logprob: -16.62500762939453
    6. ',
' → logprob: -17.75000762939453
    7. '```' → logprob: -18.12500762939453
    8. '(' → logprob: -18.50000762939453
    9. ')' → logprob: -18.87500762939453
    10. 'mar' → logprob: -19.37500762939453

Token 633: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.004096804652363062
    2. ' mar' → logprob: -5.504096984863281
    3. 'mark' → logprob: -11.254096984863281
    4. 'm' → logprob: -13.504096984863281
    5. '   ' → logprob: -13.504096984863281
    6. ' ' → logprob: -13.754096984863281
    7. 'Mar' → logprob: -15.316596984863281
    8. ')' → logprob: -15.879096984863281
    9. '  ' → logprob: -16.06659698486328
    10. 'ma' → logprob: -16.19159698486328

Token 634: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -3.128163257315464e-07
    2. '_u' → logprob: -17.125
    3. 'mar' → logprob: -17.125
    4. 'a' → logprob: -17.5
    5. '	u' → logprob: -17.75
    6. '<u' → logprob: -17.875
    7. '[u' → logprob: -18.25
    8. ' ' → logprob: -18.375
    9. 'ku' → logprob: -18.625
    10. 'm' → logprob: -18.625

Token 635: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06197642162442207
    2. '):
' → logprob: -2.811976432800293
    3. ')' → logprob: -12.561976432800293
    4. ':' → logprob: -13.436976432800293
    5. '):
' → logprob: -13.436976432800293
    6. ' ):' → logprob: -13.561976432800293
    7. '   ' → logprob: -13.936976432800293
    8. ')：' → logprob: -16.936975479125977
    9. '):

' → logprob: -17.061975479125977
    10. ')==' → logprob: -17.186975479125977

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012880703434348106
    2. 'print' → logprob: -9.000128746032715
    3. ' print' → logprob: -12.625128746032715
    4. '   ' → logprob: -13.125128746032715
    5. '```' → logprob: -18.25012969970703
    6. '      ' → logprob: -20.12512969970703
    7. '	print' → logprob: -20.37512969970703
    8. '           ' → logprob: -20.37512969970703
    9. '     ' → logprob: -20.62512969970703
    10. '    ' → logprob: -21.25012969970703

Token 637: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028376026079058647
    2. 'print' (adapté à ' print') → logprob: -3.7783761024475098
    3. ' print' → logprob: -5.27837610244751
    4. '   ' → logprob: -11.028375625610352
    5. '```' → logprob: -15.278375625610352
    6. '	print' → logprob: -16.52837562561035
    7. '           ' → logprob: -17.27837562561035
    8. '     ' → logprob: -18.02837562561035
    9. '      ' → logprob: -18.02837562561035
    10. ' ' → logprob: -18.02837562561035

Token 638: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00013381359167397022
    2. '(' → logprob: -9.000133514404297
    3. '('' → logprob: -11.500133514404297
    4. '"' → logprob: -16.250133514404297
    5. ' ("' → logprob: -16.625133514404297
    6. 'Yes' → logprob: -18.375133514404297
    7. '()' → logprob: -19.375133514404297
    8. '("""' → logprob: -19.625133514404297
    9. '(("' → logprob: -19.875133514404297
    10. '(
' → logprob: -20.250133514404297

Token 639: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: 0.0
    2. ' Yes' → logprob: -20.25
    3. 'YES' → logprob: -21.875
    4. '"' → logprob: -23.125
    5. 'Yeah' → logprob: -25.625
    6. 'True' → logprob: -25.625
    7. '“Yes' → logprob: -25.75
    8. 'Hello' → logprob: -26.375
    9. '
' → logprob: -26.625
    10. 'Oui' → logprob: -26.875

Token 640: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.014168208464980125
    2. '")
' → logprob: -4.2641682624816895
    3. ')' → logprob: -12.514167785644531
    4. '")
' → logprob: -14.014167785644531
    5. ')")' → logprob: -16.76416778564453
    6. '"' → logprob: -17.01416778564453
    7. ')
' → logprob: -17.26416778564453
    8. ')")
' → logprob: -17.76416778564453
    9. '")

' → logprob: -18.13916778564453
    10. ' ")' → logprob: -18.63916778564453

Token 641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030721822986379266
    2. 'else' → logprob: -8.125307083129883
    3. ' else' → logprob: -11.500307083129883
    4. '       ' → logprob: -14.250307083129883
    5. '```' → logprob: -14.875307083129883
    6. '	else' → logprob: -17.625307083129883
    7. '   ' → logprob: -18.625307083129883
    8. '    
' → logprob: -19.125307083129883
    9. ' ' → logprob: -19.375307083129883
    10. '<|end|>' → logprob: -19.500307083129883

Token 642: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04886996001005173
    2. 'else' (adapté à ' else') → logprob: -3.0488698482513428
    3. ' else' → logprob: -8.173870086669922
    4. '```' → logprob: -15.048870086669922
    5. '	else' → logprob: -15.673870086669922
    6. '       ' → logprob: -16.673870086669922
    7. ' ' → logprob: -17.798870086669922
    8. 'elif' → logprob: -18.173870086669922
    9. '   ' → logprob: -18.548870086669922
    10. '    
' → logprob: -18.798870086669922

Token 643: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6000990271568298
    2. '       ' → logprob: -1.2250990867614746
    3. ':
' → logprob: -1.8500990867614746
    4. '   ' → logprob: -8.725098609924316
    5. ' :
' → logprob: -10.100098609924316
    6. ' :' → logprob: -10.475098609924316
    7. '():
' → logprob: -11.100098609924316
    8. '():' → logprob: -11.100098609924316
    9. ' print' → logprob: -11.475098609924316
    10. '("' → logprob: -12.600098609924316

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3520515561103821
    2. ' print' → logprob: -1.6020514965057373
    3. 'print' → logprob: -2.3520514965057373
    4. '   ' → logprob: -9.227051734924316
    5. '	print' → logprob: -14.102051734924316
    6. '    ' → logprob: -15.227051734924316
    7. '     ' → logprob: -15.477051734924316
    8. '```' → logprob: -16.35205078125
    9. '           ' → logprob: -16.97705078125
    10. 'Print' → logprob: -17.10205078125

Token 645: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002476604888215661
    2. ' print' → logprob: -6.002476692199707
    3. '       ' → logprob: -14.002476692199707
    4. '   ' → logprob: -16.00247573852539
    5. '	print' → logprob: -19.62747573852539
    6. '    ' → logprob: -22.12747573852539
    7. '           ' → logprob: -22.25247573852539
    8. 'Print' → logprob: -22.37747573852539
    9. '```' → logprob: -22.50247573852539
    10. '.print' → logprob: -22.62747573852539

Token 646: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011705794604495168
    2. '(' → logprob: -6.751170635223389
    3. '(
' → logprob: -15.75117015838623
    4. '('' → logprob: -16.001171112060547
    5. ' ("' → logprob: -16.376171112060547
    6. '"' → logprob: -18.126171112060547
    7. '("""' → logprob: -19.501171112060547
    8. '(""' → logprob: -19.876171112060547
    9. '("")' → logprob: -19.876171112060547
    10. '()' → logprob: -20.251171112060547

Token 647: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -3.128163257315464e-07
    2. '"No' → logprob: -15.25
    3. ' No' → logprob: -20.25
    4. 'NO' → logprob: -24.75
    5. '"' → logprob: -25.25
    6. '_No' → logprob: -25.375
    7. '   ' → logprob: -25.5
    8. '“No' → logprob: -25.75
    9. '>No' → logprob: -26.125
    10. '(No' → logprob: -26.75

Token 648: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07905403524637222
    2. ')' → logprob: -2.579054117202759
    3. '()' → logprob: -9.20405387878418
    4. ')")' → logprob: -10.45405387878418
    5. '")
' → logprob: -10.82905387878418
    6. '())' → logprob: -11.70405387878418
    7. '')' → logprob: -12.82905387878418
    8. '```' → logprob: -13.57905387878418
    9. '   ' → logprob: -13.82905387878418
    10. ')
' → logprob: -14.20405387878418

Token 649: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5690089639974758e-05
    2. '```' → logprob: -11.250015258789062
    3. ' if' → logprob: -13.500015258789062
    4. 'main' → logprob: -14.125015258789062
    5. '#' → logprob: -14.500015258789062
    6. '
' → logprob: -17.125015258789062
    7. 'for' → logprob: -19.500015258789062
    8. '    
' → logprob: -19.625015258789062
    9. '#if' → logprob: -19.750015258789062
    10. '>>>' → logprob: -19.750015258789062

Token 650: ' Run' (ID: 14581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.339278580620885e-06
    2. 'main' → logprob: -13.000001907348633
    3. ' if' → logprob: -16.875001907348633
    4. '```' → logprob: -22.250001907348633
    5. 'If' → logprob: -22.375001907348633
    6. '#' → logprob: -22.750001907348633
    7. '#if' → logprob: -23.625001907348633
    8. '__' → logprob: -24.875001907348633
    9. '	if' → logprob: -26.125001907348633
    10. '@if' → logprob: -26.250001907348633

Token 651: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5759640336036682
    2. 'main' → logprob: -0.8259640336036682
    3. '
' → logprob: -11.325963973999023
    4. '```' → logprob: -11.825963973999023
    5. ' main' → logprob: -12.700963973999023
    6. ' if' → logprob: -13.825963973999023
    7. '(main' → logprob: -14.450963973999023
    8. '_main' → logprob: -14.575963973999023
    9. '__' → logprob: -15.575963973999023
    10. '	main' → logprob: -17.950963973999023

Token 652: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0011993973748758435
    2. 'if' → logprob: -6.751199245452881
    3. ' main' → logprob: -10.501199722290039
    4. '__' → logprob: -13.376199722290039
    5. '```' → logprob: -16.62619972229004
    6. ' if' → logprob: -17.87619972229004
    7. '`' → logprob: -19.25119972229004
    8. '(main' → logprob: -19.37619972229004
    9. '	main' → logprob: -20.00119972229004
    10. 'program' → logprob: -20.50119972229004

Token 653: ' function' (ID: 1114)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47687986493110657
    2. '()
' → logprob: -0.9768798351287842
    3. 'if' → logprob: -6.601880073547363
    4. '_main' → logprob: -7.351880073547363
    5. 'main' → logprob: -7.351880073547363
    6. '()

' → logprob: -9.226880073547363
    7. '_' → logprob: -10.851880073547363
    8. '(
' → logprob: -11.601880073547363
    9. ' main' → logprob: -12.101880073547363
    10. '():
' → logprob: -12.226880073547363

Token 654: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22591327130794525
    2. 'if' → logprob: -1.7259132862091064
    3. 'main' → logprob: -3.7259132862091064
    4. '```' → logprob: -9.850913047790527
    5. '

' → logprob: -10.350913047790527
    6. '(main' → logprob: -11.225913047790527
    7. '\n' → logprob: -12.850913047790527
    8. '
' → logprob: -12.850913047790527
    9. '  
' → logprob: -13.225913047790527
    10. ' if' → logprob: -13.600913047790527

Token 655: 'if' (ID: 366)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07888989895582199
    2. 'if' → logprob: -2.578889846801758
    3. ' main' → logprob: -16.078889846801758
    4. '```' → logprob: -18.953889846801758
    5. ' if' → logprob: -19.703889846801758
    6. '(main' → logprob: -20.078889846801758
    7. '.main' → logprob: -22.578889846801758
    8. '	main' → logprob: -22.828889846801758
    9. 'Main' → logprob: -23.578889846801758
    10. '_main' → logprob: -23.703889846801758

Token 656: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04859418421983719
    2. '__' → logprob: -3.0485942363739014
    3. ' True' → logprob: -12.67359447479248
    4. ' ' → logprob: -13.29859447479248
    5. '_name' → logprob: -14.29859447479248
    6. 'True' → logprob: -14.67359447479248
    7. ' name' → logprob: -14.92359447479248
    8. 'name' → logprob: -15.17359447479248
    9. '```' → logprob: -15.79859447479248
    10. ' ' → logprob: -16.548593521118164

Token 657: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16428610682487488
    2. ' ==' → logprob: -2.2892861366271973
    3. ' __' → logprob: -3.2892861366271973
    4. '==' → logprob: -4.414286136627197
    5. 'name' → logprob: -7.539286136627197
    6. '_' → logprob: -9.164285659790039
    7. '=="' → logprob: -10.039285659790039
    8. '_name' → logprob: -11.289285659790039
    9. '=='' → logprob: -11.414285659790039
    10. '=' → logprob: -11.414285659790039

Token 658: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.320199877838604e-07
    2. '==' → logprob: -15.5
    3. '__.__' → logprob: -15.875
    4. ' ==' → logprob: -18.0
    5. '____' → logprob: -18.0
    6. '___' → logprob: -18.25
    7. '_' → logprob: -18.75
    8. '__.' → logprob: -19.0
    9. ' __' → logprob: -19.0
    10. 'name' → logprob: -19.125

Token 659: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012906073592603207
    2. '==' → logprob: -4.387906074523926
    3. ' ==' → logprob: -7.887906074523926
    4. '=="' → logprob: -11.137906074523926
    5. '_' → logprob: -12.762906074523926
    6. '=' → logprob: -13.637906074523926
    7. '=='' → logprob: -14.137906074523926
    8. '___' → logprob: -14.262906074523926
    9. '===' → logprob: -15.012906074523926
    10. ' __' → logprob: -15.262906074523926

Token 660: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001943395473062992
    2. ''' → logprob: -6.251943588256836
    3. '__' → logprob: -11.376943588256836
    4. ' "__' → logprob: -12.626943588256836
    5. '"name' → logprob: -17.126943588256836
    6. ' '__' → logprob: -17.626943588256836
    7. '"user' → logprob: -18.751943588256836
    8. '("__' → logprob: -19.001943588256836
    9. '"class' → logprob: -19.376943588256836
    10. '"<?' → logprob: -19.501943588256836

Token 661: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. 'name' → logprob: -16.625
    3. '__' → logprob: -17.375
    4. ' main' → logprob: -18.75
    5. 'built' → logprob: -20.0
    6. '_main' → logprob: -20.75
    7. 'm' → logprob: -21.5
    8. '	main' → logprob: -22.0
    9. 'builtin' → logprob: -22.5
    10. '(main' → logprob: -22.625

Token 662: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.576124906539917
    2. '__":
' → logprob: -0.826124906539917
    3. '__':
' → logprob: -8.826125144958496
    4. '__
' → logprob: -11.826125144958496
    5. '__:' → logprob: -12.076125144958496
    6. '_' → logprob: -12.076125144958496
    7. '==' → logprob: -12.201125144958496
    8. '"' → logprob: -12.326125144958496
    9. ' ==' → logprob: -12.701125144958496
    10. '__
' → logprob: -12.951125144958496

Token 663: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03805170953273773
    2. '__' → logprob: -3.2880516052246094
    3. ' main' → logprob: -11.53805160522461
    4. '_main' → logprob: -15.53805160522461
    5. '"' → logprob: -16.16305160522461
    6. '	main' → logprob: -16.28805160522461
    7. ' __' → logprob: -16.91305160522461
    8. '___' → logprob: -17.28805160522461
    9. ''' → logprob: -18.03805160522461
    10. 'if' → logprob: -18.41305160522461

Token 664: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.0
    3. '	main' → logprob: -25.5
    4. '__' → logprob: -26.875
    5. '_main' → logprob: -26.875
    6. '.main' → logprob: -27.875
    7. 'Main' → logprob: -28.125
    8. '(main' → logprob: -28.75
    9. '```' → logprob: -29.5
    10. '主' → logprob: -30.375

Token 665: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 663
Tokens correctement prédits (1ère position, stricte): 269
Tokens correctement prédits (1ère position, avec adaptation): 295
Tokens correctement prédits (top 10): 530
Précision stricte (1ère position): 40.57%
Précision adaptée (1ère position): 44.49%
Précision (top 10): 79.94%
================================================================================
