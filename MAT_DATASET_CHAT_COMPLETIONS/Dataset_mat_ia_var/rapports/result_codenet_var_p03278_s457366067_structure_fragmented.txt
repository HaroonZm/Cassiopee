================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import numpy as np

def set_recursion_limit():
    sys.setrecursionlimit(10 ** 6)

def mod_value():
    return 10 ** 9 + 7

def get_input():
    return sys.stdin.readline

def create_empty_graph(n):
    return [[] for _ in range(n+1)]

def read_integer(input_func):
    return int(input_func())

def read_edge(input_func):
    return map(int, input_func().split())

def add_edge(graph, x, y):
    graph[x].append(y)
    graph[y].append(x)

def fill_graph(graph, n, input_func):
    for _ in range(n-1):
        x, y = read_edge(input_func)
        add_edge(graph, x, y)

def initialize_fact_2():
    return [1, 0, 1]

def expand_fact_2(fact_2, upper, mod):
    for n in range(3, upper):
        fact_2.append(fact_2[n-2] * (n-1) % mod)
    return fact_2

def numpy_array_int64(l):
    return np.array(l, dtype=np.int64)

def zeros_array(length):
    return np.zeros(length, dtype=np.int64)

def dp_merge_core(data1, data2, len1, len2, mod):
    data = zeros_array(len1+len2)
    for n in range(1, len1+1):
        data[n:n+len2] += data1[n] * data2[1:] % mod
    data %= mod
    return data

def dp_merge(data1, data2, mod):
    N1 = len(data1) - 1
    N2 = len(data2) - 1
    if N1 > N2:
        N1, N2 = N2, N1
        data1, data2 = data2, data1
    return dp_merge_core(data1, data2, N1, N2, mod)

def compute_dp_add_edge_values(data, fact_2, mod):
    N = len(data) - 1
    data1 = zeros_array(N+2)
    data1[1:] = data
    data1[1] = - (data * fact_2[:N+1] % mod).sum() % mod
    return data1

def dp_add_edge(data, fact_2, mod):
    return compute_dp_add_edge_values(data, fact_2, mod)

def process_child(y, v, graph, fact_2, mod, dfs_fn):
    data1 = dfs_fn(y, v, graph, fact_2, mod, dfs_fn)
    data1 = dp_add_edge(data1, fact_2, mod)
    return data1

def process_children(graph, v, parent, fact_2, mod, dfs_fn):
    data = None
    for y in graph[v]:
        if y == parent:
            continue
        data1 = process_child(y, v, graph, fact_2, mod, dfs_fn)
        if data is None:
            data = data1
        else:
            data = dp_merge(data, data1, mod)
    if data is None:
        return numpy_array_int64([0, 1])
    return data

def dfs(v, parent, graph, fact_2, mod, dfs_fn):
    return process_children(graph, v, parent, fact_2, mod, dfs_fn)

def calculate_answer(data, fact_2, N, mod):
    return (data * fact_2[:N+1] % mod).sum() % mod

def main():
    set_recursion_limit()
    mod = mod_value()
    input_func = get_input()
    N = read_integer(input_func)
    graph = create_empty_graph(N)
    fill_graph(graph, N, input_func)
    fact_2_list = initialize_fact_2()
    fact_2 = expand_fact_2(fact_2_list, N+10, mod)
    fact_2 = numpy_array_int64(fact_2)
    dfs_fn = dfs
    data = dfs_fn(1, None, graph, fact_2, mod, dfs_fn)
    answer = calculate_answer(data, fact_2, N, mod)
    print(answer)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.07030529528856277
    2. '<|end|>' → logprob: -2.945305347442627
    3. '.' → logprob: -4.695305347442627
    4. ' ' → logprob: -5.570305347442627
    5. 'as' → logprob: -6.570305347442627
    6. ' .' → logprob: -7.695305347442627
    7. '<|end|>' → logprob: -8.320304870605469
    8. '.as' → logprob: -9.445304870605469
    9. '.ndarray' → logprob: -10.070304870605469
    10. '[' → logprob: -10.570304870605469

Token 6: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0004699954588431865
    2. 'np' → logprob: -8.250470161437988
    3. ' ' → logprob: -8.500470161437988
    4. ' ' → logprob: -12.500470161437988
    5. ' numpy' → logprob: -14.125470161437988
    6. ' as' → logprob: -15.625470161437988
    7. ' ndarray' → logprob: -15.625470161437988
    8. ' nd' → logprob: -16.125469207763672
    9. ' n' → logprob: -16.625469207763672
    10. '_np' → logprob: -17.125469207763672

Token 7: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7014358639717102
    2. '```' → logprob: -1.9514358043670654
    3. 'import' → logprob: -2.0764358043670654
    4. '#' → logprob: -2.3264358043670654
    5. '[' → logprob: -3.0764358043670654
    6. '<|end|>' → logprob: -3.9514358043670654
    7. 'as' → logprob: -4.0764360427856445
    8. '\' → logprob: -4.2014360427856445
    9. '\n' → logprob: -4.4514360427856445
    10. '
' → logprob: -4.7014360427856445

Token 9: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11126801371574402
    2. ' my' → logprob: -3.9862680435180664
    3. ' space' → logprob: -3.9862680435180664
    4. ' calculate' → logprob: -4.111268043518066
    5. ' process' → logprob: -4.236268043518066
    6. ' read' → logprob: -5.236268043518066
    7. ' predict' → logprob: -5.361268043518066
    8. '_' → logprob: -5.486268043518066
    9. ' array' → logprob: -5.986268043518066
    10. ' main' → logprob: -6.111268043518066

Token 10: '_rec' (ID: 35314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012114603072404861
    2. ' _' → logprob: -6.512114524841309
    3. '_param' → logprob: -6.512114524841309
    4. '_target' → logprob: -6.762114524841309
    5. '_up' → logprob: -7.012114524841309
    6. '_parameters' → logprob: -7.262114524841309
    7. '_seed' → logprob: -7.262114524841309
    8. '_parameter' → logprob: -7.887114524841309
    9. '_params' → logprob: -7.887114524841309
    10. '_space' → logprob: -8.262114524841309

Token 11: 'ursion' (ID: 41658)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09633354097604752
    2. '_' → logprob: -2.9713335037231445
    3. 'ursion' → logprob: -3.9713335037231445
    4. '_t' → logprob: -4.2213335037231445
    5. '(t' → logprob: -6.4713335037231445
    6. 'ursive' → logprob: -6.4713335037231445
    7. '```' → logprob: -6.9713335037231445
    8. 'urrence' → logprob: -7.7213335037231445
    9. 'tor' → logprob: -8.221333503723145
    10. 'tal' → logprob: -8.596333503723145

Token 12: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0029685497283935547
    2. '_depth' → logprob: -6.002968788146973
    3. '_' → logprob: -8.252968788146973
    4. ' _' → logprob: -8.877968788146973
    5. '_limits' → logprob: -9.877968788146973
    6. 'limit' → logprob: -10.377968788146973
    7. '_stack' → logprob: -12.377968788146973
    8. '_lim' → logprob: -12.752968788146973
    9. '_max' → logprob: -13.502968788146973
    10. '_LIMIT' → logprob: -14.877968788146973

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008076785132288933
    2. '_' → logprob: -4.8830766677856445
    3. ' (' → logprob: -8.258076667785645
    4. '(_' → logprob: -9.633076667785645
    5. ':' → logprob: -10.883076667785645
    6. '('' → logprob: -11.133076667785645
    7. '```' → logprob: -11.133076667785645
    8. '_(' → logprob: -11.383076667785645
    9. '("("' → logprob: -12.008076667785645
    10. '(`' → logprob: -12.008076667785645

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21194632351398468
    2. '(' → logprob: -2.4619462490081787
    3. ':' → logprob: -2.4619462490081787
    4. '():' → logprob: -4.086946487426758
    5. ' :' → logprob: -7.086946487426758
    6. '    ' → logprob: -7.711946487426758
    7. '):' → logprob: -7.961946487426758
    8. '```' → logprob: -7.961946487426758
    9. ' ():' → logprob: -8.586946487426758
    10. ' (' → logprob: -8.586946487426758

Token 15: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13355594873428345
    2. ' sys' → logprob: -3.0085558891296387
    3. 'sys' (adapté à ' sys') → logprob: -3.1335558891296387
    4. 'import' → logprob: -3.5085558891296387
    5. ' import' → logprob: -7.008555889129639
    6. 'pass' → logprob: -8.008556365966797
    7. ' ' → logprob: -8.383556365966797
    8. '    ' → logprob: -8.508556365966797
    9. '  ' → logprob: -8.883556365966797
    10. 'try' → logprob: -9.133556365966797

Token 16: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10684872418642044
    2. '.set' → logprob: -2.48184871673584
    3. '.setdefault' → logprob: -4.10684871673584
    4. ' .' → logprob: -7.10684871673584
    5. '.exit' → logprob: -8.60684871673584
    6. '.argv' → logprob: -9.23184871673584
    7. '.stdout' → logprob: -10.10684871673584
    8. '.stdin' → logprob: -10.85684871673584
    9. '.stderr' → logprob: -10.85684871673584
    10. '.max' → logprob: -10.98184871673584

Token 17: 'rec' (ID: 9285)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.5581933856010437
    2. '_limit' → logprob: -1.9331934452056885
    3. '._' → logprob: -2.3081934452056885
    4. '_' → logprob: -2.5581934452056885
    5. 'rec' → logprob: -2.6831934452056885
    6. '_max' → logprob: -4.558193206787109
    7. ' _' → logprob: -4.933193206787109
    8. '_ref' → logprob: -5.558193206787109
    9. '.' → logprob: -5.933193206787109
    10. 'ursion' → logprob: -6.558193206787109

Token 18: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0005387356504797935
    2. '_' → logprob: -7.6255388259887695
    3. 'urs' → logprob: -10.87553882598877
    4. '_limit' → logprob: -11.25053882598877
    5. 'ursive' → logprob: -11.50053882598877
    6. 'ur' → logprob: -12.12553882598877
    7. '__' → logprob: -13.37553882598877
    8. 'usion' → logprob: -14.62553882598877
    9. 'u' → logprob: -16.000537872314453
    10. 'ution' → logprob: -16.000537872314453

Token 19: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00011403311509639025
    2. 'limit' → logprob: -9.500114440917969
    3. '_depth' → logprob: -10.875114440917969
    4. '_' → logprob: -11.375114440917969
    5. '_lim' → logprob: -12.375114440917969
    6. ' _' → logprob: -13.375114440917969
    7. '_li' → logprob: -13.625114440917969
    8. '_limits' → logprob: -14.875114440917969
    9. '_max' → logprob: -14.875114440917969
    10. '(_' → logprob: -15.375114440917969

Token 20: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0921942703134846e-05
    2. '((' → logprob: -12.37501049041748
    3. '(
' → logprob: -13.62501049041748
    4. '(

' → logprob: -13.62501049041748
    5. ' (' → logprob: -14.12501049041748
    6. '('' → logprob: -14.37501049041748
    7. '("("' → logprob: -14.62501049041748
    8. '(()' → logprob: -14.75001049041748
    9. '()' → logprob: -15.12501049041748
    10. '(`' → logprob: -15.37501049041748

Token 21: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.16093295812606812
    2. '10' → logprob: -1.910933017730713
    3. '500' → logprob: -8.285932540893555
    4. '150' → logprob: -8.285932540893555
    5. '300' → logprob: -8.785932540893555
    6. '200' → logprob: -10.660932540893555
    7. '250' → logprob: -11.410932540893555
    8. ')' → logprob: -12.160932540893555
    9. '   ' → logprob: -12.410932540893555
    10. ' ' → logprob: -13.160932540893555

Token 22: ' **' (ID: 6240)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.04058513045310974
    2. '00' → logprob: -3.4155850410461426
    3. '0' → logprob: -5.290585041046143
    4. '6' → logprob: -7.040585041046143
    5. '**' → logprob: -7.665585041046143
    6. '5' → logprob: -7.790585041046143
    7. '7' → logprob: -9.6655855178833
    8. '4' → logprob: -10.0405855178833
    9. ')' → logprob: -11.9155855178833
    10. '_' → logprob: -13.9155855178833

Token 23: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0068402839824557304
    2. '6' → logprob: -5.006840229034424
    3. '9' → logprob: -9.131840705871582
    4. '8' → logprob: -11.006840705871582
    5. '4' → logprob: -16.631839752197266
    6. '**' → logprob: -17.631839752197266
    7. '5' → logprob: -17.756839752197266
    8. '```' → logprob: -17.881839752197266
    9. ')' → logprob: -19.506839752197266
    10. '}' → logprob: -21.006839752197266

Token 24: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.040462519973516464
    2. '6' → logprob: -3.4154624938964844
    3. '9' → logprob: -5.040462493896484
    4. '8' → logprob: -8.040462493896484
    5. '```' → logprob: -14.915462493896484
    6. '5' → logprob: -16.040462493896484
    7. '**' → logprob: -16.040462493896484
    8. '4' → logprob: -17.165462493896484
    9. ')' → logprob: -18.040462493896484
    10. '}' → logprob: -18.665462493896484

Token 25: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -14.375001907348633
    3. '))' → logprob: -14.500001907348633
    4. ' )' → logprob: -14.625001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '')' → logprob: -17.500001907348633
    7. '```' → logprob: -17.625001907348633
    8. ')))' → logprob: -17.750001907348633
    9. '`)' → logprob: -17.875001907348633
    10. '}' → logprob: -18.375001907348633

Token 26: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11451832950115204
    2. 'def' → logprob: -2.364518404006958
    3. '

' → logprob: -4.864518165588379
    4. '```' → logprob: -6.364518165588379
    5. '\' → logprob: -6.489518165588379
    6. 'd' → logprob: -6.864518165588379
    7. '#' → logprob: -6.989518165588379
    8. '\n' → logprob: -7.864518165588379
    9. '' → logprob: -8.739518165588379
    10. '<|end|>' → logprob: -8.864518165588379

Token 27: ' mod' (ID: 1812)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.1574749946594238
    2. ' main' → logprob: -1.6574749946594238
    3. ' space' → logprob: -2.157474994659424
    4. ' set' → logprob: -2.532474994659424
    5. ' compute' → logprob: -2.532474994659424
    6. ' factorial' → logprob: -3.032474994659424
    7. ' ' → logprob: -3.532474994659424
    8. ' square' → logprob: -3.782474994659424
    9. ' _' → logprob: -3.907474994659424
    10. '_' → logprob: -4.532474994659424

Token 28: '_value' (ID: 6734)
  Prédit: '_exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_exp' → logprob: -0.8290488123893738
    2. 'ular' → logprob: -1.8290488719940186
    3. '(' → logprob: -2.3290488719940186
    4. 'exp' → logprob: -2.9540488719940186
    5. '_expand' → logprob: -3.3290488719940186
    6. '_factor' → logprob: -3.4540488719940186
    7. '_' → logprob: -3.5790488719940186
    8. 'ulus' → logprob: -3.5790488719940186
    9. '(a' → logprob: -3.8290488719940186
    10. '_add' → logprob: -4.0790486335754395

Token 29: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5970979332923889
    2. '():' → logprob: -0.8470979332923889
    3. '=' → logprob: -5.097097873687744
    4. ':' → logprob: -5.222097873687744
    5. '):' → logprob: -6.222097873687744
    6. '(x' → logprob: -6.472097873687744
    7. '()' → logprob: -6.847097873687744
    8. '(a' → logprob: -6.847097873687744
    9. '_' → logprob: -7.097097873687744
    10. ' =' → logprob: -7.597097873687744

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0676642432808876
    2. '100' → logprob: -3.06766414642334
    3. '10' → logprob: -4.69266414642334
    4. 'return' → logprob: -5.06766414642334
    5. ' ' → logprob: -7.19266414642334
    6. '(' → logprob: -7.19266414642334
    7. ' return' → logprob: -7.31766414642334
    8. '999' → logprob: -7.94266414642334
    9. '102' → logprob: -8.56766414642334
    10. ':' → logprob: -9.19266414642334

Token 31: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6643457412719727
    2. ' return' → logprob: -1.1643457412719727
    3. ' ' → logprob: -3.1643457412719727
    4. 'return' (adapté à ' return') → logprob: -3.1643457412719727
    5. '100' → logprob: -3.6643457412719727
    6. '409' → logprob: -3.6643457412719727
    7. '256' → logprob: -4.539345741271973
    8. '10' → logprob: -4.789345741271973
    9. '102' → logprob: -4.914345741271973
    10. '655' → logprob: -5.414345741271973

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3553468585014343
    2. '10' → logprob: -1.605346918106079
    3. '100' → logprob: -2.355346918106079
    4. ' (' → logprob: -6.1053466796875
    5. '(' → logprob: -7.6053466796875
    6. '1' → logprob: -7.6053466796875
    7. '998' → logprob: -9.1053466796875
    8. '999' → logprob: -10.8553466796875
    9. '(int' → logprob: -12.1053466796875
    10. ' ' → logprob: -12.3553466796875

Token 33: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07491619139909744
    2. '100' → logprob: -2.699916124343872
    3. '(' → logprob: -5.449916362762451
    4. '1' → logprob: -7.949916362762451
    5. '998' → logprob: -8.324915885925293
    6. ' ' → logprob: -10.074915885925293
    7. 'int' → logprob: -11.199915885925293
    8. '(int' → logprob: -12.074915885925293
    9. '999' → logprob: -12.574915885925293
    10. ' (' → logprob: -12.824915885925293

Token 34: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5927472114562988
    2. '9' → logprob: -0.8427472114562988
    3. '09' → logprob: -4.217747211456299
    4. '00' → logprob: -6.592747211456299
    5. ' ' → logprob: -8.84274673461914
    6. ' **' → logprob: -8.96774673461914
    7. '7' → logprob: -9.21774673461914
    8. '07' → logprob: -9.71774673461914
    9. '000' → logprob: -9.71774673461914
    10. '0' → logprob: -10.21774673461914

Token 35: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '09' → logprob: -18.5
    4. '```' → logprob: -18.5
    5. '+' → logprob: -20.125
    6. '10' → logprob: -20.5
    7. '   ' → logprob: -20.5
    8. '6' → logprob: -21.125
    9. '7' → logprob: -21.25
    10. '4' → logprob: -21.25

Token 36: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. '09' → logprob: -17.625
    4. ' ' → logprob: -17.875
    5. '   ' → logprob: -18.75
    6. '10' → logprob: -19.0
    7. '7' → logprob: -19.25
    8. '6' → logprob: -19.75
    9. '+' → logprob: -19.875
    10. '8' → logprob: -20.0

Token 37: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023251768201589584
    2. ' +' → logprob: -3.77325177192688
    3. '7' → logprob: -12.5232515335083
    4. '+
' → logprob: -14.0232515335083
    5. ' +
' → logprob: -14.6482515335083
    6. '＋' → logprob: -14.7732515335083
    7. ' plus' → logprob: -15.0232515335083
    8. '6' → logprob: -15.6482515335083
    9. 'plus' → logprob: -16.148252487182617
    10. ' ' → logprob: -16.398252487182617

Token 38: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '+' → logprob: -16.125001907348633
    4. '```' → logprob: -17.625001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '07' → logprob: -19.375001907348633
    7. '9' → logprob: -19.500001907348633
    8. '  ' → logprob: -19.687501907348633
    9. '' → logprob: -19.750001907348633
    10. '1' → logprob: -19.750001907348633

Token 39: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.125
    3. ' ' → logprob: -18.875
    4. '```' → logprob: -19.125
    5. '   ' → logprob: -20.625
    6. '9' → logprob: -21.125
    7. '07' → logprob: -21.25
    8. '' → logprob: -21.625
    9. '۷' → logprob: -21.75
    10. '

' → logprob: -22.0

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4956468939781189
    2. '

' → logprob: -1.3706469535827637
    3. '<|end|>' → logprob: -3.1206469535827637
    4. '\n' → logprob: -3.3706469535827637
    5. '```' → logprob: -3.7456469535827637
    6. 'def' → logprob: -3.8706469535827637
    7. '\' → logprob: -5.870646953582764
    8. 'newline' → logprob: -5.870646953582764
    9. '' → logprob: -6.245646953582764
    10. '#' → logprob: -6.370646953582764

Token 41: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3486250638961792
    2. 'def' → logprob: -1.4736250638961792
    3. '

' → logprob: -2.8486251831054688
    4. '```' → logprob: -5.973625183105469
    5. '\' → logprob: -6.098625183105469
    6. '\n' → logprob: -6.348625183105469
    7. '#' → logprob: -7.973625183105469
    8. '<|end|>' → logprob: -9.223625183105469
    9. 'class' → logprob: -9.598625183105469
    10. '
' → logprob: -10.098625183105469

Token 42: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6940560936927795
    2. ' factorial' → logprob: -1.3190560340881348
    3. ' solve' → logprob: -2.3190560340881348
    4. ' fibonacci' → logprob: -3.3190560340881348
    5. ' fast' → logprob: -3.9440560340881348
    6. ' matrix' → logprob: -4.069056034088135
    7. ' compute' → logprob: -4.069056034088135
    8. ' calculate' → logprob: -4.194056034088135
    9. ' fib' → logprob: -4.694056034088135
    10. ' pow' → logprob: -6.444056034088135

Token 43: '_input' (ID: 12507)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.5260428190231323
    2. '_input' → logprob: -1.7760428190231323
    3. '_max' → logprob: -2.151042938232422
    4. '_' → logprob: -3.026042938232422
    5. '_data' → logprob: -4.276042938232422
    6. '_factor' → logprob: -4.401042938232422
    7. '_arr' → logprob: -4.526042938232422
    8. '_matrix' → logprob: -5.401042938232422
    9. '_random' → logprob: -5.401042938232422
    10. '_user' → logprob: -5.776042938232422

Token 44: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5865447521209717
    2. '()' → logprob: -0.8365447521209717
    3. '(' → logprob: -5.086544990539551
    4. '_' → logprob: -7.336544990539551
    5. '():
' → logprob: -7.336544990539551
    6. '`()' → logprob: -7.711544990539551
    7. '_input' → logprob: -8.08654499053955
    8. '_line' → logprob: -8.21154499053955
    9. '_data' → logprob: -8.33654499053955
    10. '()(' → logprob: -8.58654499053955

Token 45: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6036449074745178
    2. '   ' → logprob: -0.8536449074745178
    3. '()
' → logprob: -4.353644847869873
    4. ' ()' → logprob: -5.478644847869873
    5. 'return' → logprob: -6.228644847869873
    6. '(' → logprob: -6.228644847869873
    7. ' return' → logprob: -6.353644847869873
    8. '()\' → logprob: -6.853644847869873
    9. '    
' → logprob: -6.978644847869873
    10. ')' → logprob: -7.978644847869873

Token 46: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2752332091331482
    2. 'return' (adapté à ' return') → logprob: -1.775233268737793
    3. '   ' → logprob: -2.650233268737793
    4. ' input' → logprob: -8.400233268737793
    5. 'input' → logprob: -9.400233268737793
    6. ' n' → logprob: -9.775233268737793
    7. 'int' → logprob: -10.025233268737793
    8. 'n' → logprob: -10.525233268737793
    9. ' int' → logprob: -11.150233268737793
    10. ' data' → logprob: -11.525233268737793

Token 47: ' sys' (ID: 12228)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.44721758365631104
    2. ' input' → logprob: -1.697217583656311
    3. ' list' → logprob: -1.822217583656311
    4. ' map' → logprob: -4.3222174644470215
    5. ' sys' → logprob: -6.5722174644470215
    6. 'int' → logprob: -7.9472174644470215
    7. ' tuple' → logprob: -8.69721794128418
    8. 'input' → logprob: -8.69721794128418
    9. 'list' → logprob: -9.07221794128418
    10. ' ' → logprob: -9.44721794128418

Token 48: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005587094929069281
    2. '.' → logprob: -5.255587100982666
    3. '.argv' → logprob: -8.880586624145508
    4. '.stdout' → logprob: -8.880586624145508
    5. '.readline' → logprob: -10.255586624145508
    6. '.std' → logprob: -10.380586624145508
    7. '.input' → logprob: -12.880586624145508
    8. '.standard' → logprob: -13.630586624145508
    9. '.st' → logprob: -13.630586624145508
    10. '.stderr' → logprob: -13.755586624145508

Token 49: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0025944423396140337
    2. '.read' → logprob: -6.002594470977783
    3. '.' → logprob: -9.502593994140625
    4. '.readlines' → logprob: -10.252593994140625
    5. 'read' → logprob: -12.002593994140625
    6. '.buffer' → logprob: -13.127593994140625
    7. '.Read' → logprob: -15.502593994140625
    8. 'buffer' → logprob: -16.002593994140625
    9. ' readline' → logprob: -16.002593994140625
    10. ' .' → logprob: -16.252593994140625

Token 50: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6931694746017456
    2. '().' → logprob: -0.6931694746017456
    3. '(' → logprob: -12.068169593811035
    4. '()
' → logprob: -12.318169593811035
    5. '()(' → logprob: -12.318169593811035
    6. '()

' → logprob: -13.193169593811035
    7. ' ()' → logprob: -13.568169593811035
    8. '()\' → logprob: -13.568169593811035
    9. '())' → logprob: -14.193169593811035
    10. '()<' → logprob: -14.943169593811035

Token 51: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000538497231900692
    2. '().' → logprob: -7.875538349151611
    3. '()
' → logprob: -9.37553882598877
    4. '()

' → logprob: -10.00053882598877
    5. '(' → logprob: -11.50053882598877
    6. '()(' → logprob: -11.87553882598877
    7. '()\' → logprob: -12.75053882598877
    8. '()<' → logprob: -13.37553882598877
    9. '<|end|>' → logprob: -13.37553882598877
    10. '()]' → logprob: -13.37553882598877

Token 52: ' create' (ID: 2501)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.039537303149700165
    2. '_main' → logprob: -3.414537191390991
    3. 'main' → logprob: -5.78953742980957
    4. '_' → logprob: -6.66453742980957
    5. ' ' → logprob: -7.91453742980957
    6. '_split' → logprob: -8.41453742980957
    7. ' _' → logprob: -9.28953742980957
    8. ' calculate' → logprob: -9.28953742980957
    9. '_process' → logprob: -9.66453742980957
    10. ' split' → logprob: -9.78953742980957

Token 53: '_empty' (ID: 35051)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.004960374440997839
    2. '_' → logprob: -5.754960536956787
    3. '_matrix' → logprob: -6.629960536956787
    4. '_arr' → logprob: -9.629960060119629
    5. '_numpy' → logprob: -10.129960060119629
    6. 'array' → logprob: -10.129960060119629
    7. '_vector' → logprob: -10.254960060119629
    8. '_s' → logprob: -10.379960060119629
    9. '_list' → logprob: -10.379960060119629
    10. '_arrays' → logprob: -10.504960060119629

Token 54: '_graph' (ID: 33441)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.14154334366321564
    2. '_list' → logprob: -2.766543388366699
    3. '_matrix' → logprob: -2.891543388366699
    4. '_' → logprob: -4.391543388366699
    5. '_map' → logprob: -8.8915433883667
    6. '_set' → logprob: -8.8915433883667
    7. '_arrays' → logprob: -8.8915433883667
    8. '(' → logprob: -9.1415433883667
    9. '_tensor' → logprob: -9.2665433883667
    10. '_vector' → logprob: -9.6415433883667

Token 55: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06378979235887527
    2. '(n' → logprob: -3.0637898445129395
    3. '(size' → logprob: -5.3137898445129395
    4. ' (' → logprob: -5.8137898445129395
    5. '_' → logprob: -6.3137898445129395
    6. '()' → logprob: -6.3137898445129395
    7. '(num' → logprob: -6.4387898445129395
    8. '(node' → logprob: -7.9387898445129395
    9. '(_' → logprob: -8.688789367675781
    10. '():' → logprob: -8.813789367675781

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007316019386053085
    2. ')' → logprob: -5.6323161125183105
    3. ',' → logprob: -5.8823161125183105
    4. '):
' → logprob: -7.6323161125183105
    5. ' ):' → logprob: -7.8823161125183105
    6. ':' → logprob: -10.257315635681152
    7. ' )' → logprob: -11.632315635681152
    8. ' ,' → logprob: -12.507315635681152
    9. '   ' → logprob: -12.632315635681152
    10. ',n' → logprob: -13.382315635681152

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027225540950894356
    2. '    ' → logprob: -5.277225494384766
    3. ' return' → logprob: -5.277225494384766
    4. '    
' → logprob: -5.277225494384766
    5. '[]' → logprob: -5.902225494384766
    6. '[' → logprob: -6.277225494384766
    7. ':' → logprob: -6.527225494384766
    8. 'return' → logprob: -6.902225494384766
    9. '
' → logprob: -7.402225494384766
    10. ':
' → logprob: -7.402225494384766

Token 58: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6158546209335327
    2. ' [[]' → logprob: -1.9908546209335327
    3. 'return' (adapté à ' return') → logprob: -2.1158547401428223
    4. ' [' → logprob: -2.4908547401428223
    5. '[' → logprob: -2.4908547401428223
    6. '[]' → logprob: -4.490854740142822
    7. '   ' → logprob: -4.990854740142822
    8. ' {' → logprob: -5.115854740142822
    9. '{}' → logprob: -5.615854740142822
    10. '{' → logprob: -5.740854740142822

Token 59: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.5303767323493958
    2. '[' → logprob: -1.030376672744751
    3. ' [' → logprob: -3.905376672744751
    4. '{' → logprob: -4.78037691116333
    5. '[np' → logprob: -4.90537691116333
    6. ' {' → logprob: -4.90537691116333
    7. 'np' → logprob: -5.15537691116333
    8. ' np' → logprob: -5.65537691116333
    9. '[]' → logprob: -7.03037691116333
    10. '{}' → logprob: -7.78037691116333

Token 60: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3133348226547241
    2. 'for' → logprob: -1.3133348226547241
    3. ')' → logprob: -9.938334465026855
    4. ' ' → logprob: -11.313334465026855
    5. '	for' → logprob: -12.188334465026855
    6. ']' → logprob: -12.813334465026855
    7. 'f' → logprob: -13.313334465026855
    8. ' f' → logprob: -13.438334465026855
    9. '   ' → logprob: -14.313334465026855
    10. ',' → logprob: -15.313334465026855

Token 61: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24654802680015564
    2. ' ' → logprob: -1.996548056602478
    3. ' _' → logprob: -2.7465479373931885
    4. ' range' → logprob: -4.621548175811768
    5. 'range' → logprob: -4.871548175811768
    6. ' i' → logprob: -7.746548175811768
    7. '_range' → logprob: -8.49654769897461
    8. 'i' → logprob: -8.99654769897461
    9. ' in' → logprob: -9.12154769897461
    10. 'n' → logprob: -9.99654769897461

Token 62: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11052432656288147
    2. 'range' → logprob: -2.7355244159698486
    3. ' in' → logprob: -3.2355244159698486
    4. 'n' → logprob: -8.23552417755127
    5. ' ' → logprob: -9.36052417755127
    6. ' range' → logprob: -9.61052417755127
    7. 'ange' → logprob: -12.61052417755127
    8. '(range' → logprob: -12.73552417755127
    9. '  ' → logprob: -13.11052417755127
    10. 'i' → logprob: -13.11052417755127

Token 63: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234713666141033
    2. ' range' → logprob: -5.255234718322754
    3. '(range' → logprob: -14.130234718322754
    4. ' ' → logprob: -16.505233764648438
    5. ')' → logprob: -16.755233764648438
    6. '	range' → logprob: -16.755233764648438
    7. 'rang' → logprob: -17.505233764648438
    8. 'ran' → logprob: -18.505233764648438
    9. '   ' → logprob: -18.630233764648438
    10. '```' → logprob: -18.755233764648438

Token 64: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019342314917594194
    2. '(' → logprob: -6.251934051513672
    3. ' (' → logprob: -12.126934051513672
    4. 'n' → logprob: -16.376934051513672
    5. ')' → logprob: -18.001934051513672
    6. ')n' → logprob: -18.001934051513672
    7. '(
' → logprob: -18.126934051513672
    8. '(N' → logprob: -19.001934051513672
    9. ')(' → logprob: -19.376934051513672
    10. ' n' → logprob: -19.501934051513672

Token 65: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.584239938296378e-06
    2. ']' → logprob: -12.625007629394531
    3. ')' → logprob: -12.875007629394531
    4. ' )' → logprob: -13.750007629394531
    5. ')]
' → logprob: -15.250007629394531
    6. '')]' → logprob: -16.37500762939453
    7. '])' → logprob: -16.50000762939453
    8. '])]' → logprob: -16.62500762939453
    9. '   ' → logprob: -17.12500762939453
    10. ')])' → logprob: -17.50000762939453

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001940040965564549
    2. ' ' → logprob: -8.62519359588623
    3. '2' → logprob: -11.50019359588623
    4. '0' → logprob: -12.87519359588623
    5. ')' → logprob: -13.37519359588623
    6. '   ' → logprob: -17.250194549560547
    7. '  ' → logprob: -17.250194549560547
    8. '(' → logprob: -17.750194549560547
    9. ' )' → logprob: -17.875194549560547
    10. '```' → logprob: -18.750194549560547

Token 67: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00020020268857479095
    2. ']' → logprob: -9.000200271606445
    3. ')' → logprob: -9.500200271606445
    4. '])' → logprob: -13.500200271606445
    5. ')])' → logprob: -15.750200271606445
    6. '])]' → logprob: -15.750200271606445
    7. '')]' → logprob: -16.500200271606445
    8. ')]
' → logprob: -16.875200271606445
    9. ')],' → logprob: -17.250200271606445
    10. '}]' → logprob: -17.375200271606445

Token 68: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.034597635269165
    2. 'def' → logprob: -1.034597635269165
    3. '<|end|>' → logprob: -1.409597635269165
    4. '

' → logprob: -3.284597635269165
    5. '<|end|>' → logprob: -5.159597396850586
    6. '```' → logprob: -6.909597396850586
    7. ' def' → logprob: -8.034597396850586
    8. '\n' → logprob: -9.284597396850586
    9. '
' → logprob: -9.659597396850586
    10. 'newline' → logprob: -9.909597396850586

Token 69: ' read' (ID: 1729)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.15995556116104126
    2. ' dfs' → logprob: -2.6599555015563965
    3. ' top' → logprob: -3.5349555015563965
    4. ' bfs' → logprob: -3.7849555015563965
    5. 'add' → logprob: -4.9099555015563965
    6. ' build' → logprob: -5.0349555015563965
    7. ' read' → logprob: -5.2849555015563965
    8. 'dfs' → logprob: -6.4099555015563965
    9. ' main' → logprob: -6.6599555015563965
    10. ' create' → logprob: -7.4099555015563965

Token 70: '_integer' (ID: 82911)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.3126404285430908
    2. '_nodes' → logprob: -1.4376404285430908
    3. '_edges' → logprob: -1.8126404285430908
    4. '_input' → logprob: -2.062640428543091
    5. '_node' → logprob: -2.562640428543091
    6. '_graph' → logprob: -3.062640428543091
    7. '_edge' → logprob: -3.437640428543091
    8. '_' → logprob: -3.937640428543091
    9. '_array' → logprob: -4.937640190124512
    10. '_data' → logprob: -5.812640190124512

Token 71: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01029580645263195
    2. 's' → logprob: -4.760295867919922
    3. ']()' → logprob: -7.260295867919922
    4. '`()' → logprob: -8.010295867919922
    5. '_line' → logprob: -8.885295867919922
    6. '_input' → logprob: -9.135295867919922
    7. '_list' → logprob: -9.760295867919922
    8. '_' → logprob: -9.885295867919922
    9. ' ()' → logprob: -10.010295867919922
    10. '():' → logprob: -10.260295867919922

Token 72: '_func' (ID: 22252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2552453279495239
    2. '_line' → logprob: -2.1302452087402344
    3. '())' → logprob: -2.3802452087402344
    4. '()' → logprob: -4.505245208740234
    5. '_' → logprob: -6.630245208740234
    6. ']()' → logprob: -7.380245208740234
    7. 'line' → logprob: -8.755245208740234
    8. '=' → logprob: -9.130245208740234
    9. '()]' → logprob: -9.380245208740234
    10. ' )' → logprob: -9.755245208740234

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0997222363948822
    2. ')' → logprob: -2.974722146987915
    3. '()' → logprob: -3.224722146987915
    4. '():' → logprob: -5.599722385406494
    5. '):
' → logprob: -8.974721908569336
    6. '())' → logprob: -9.974721908569336
    7. '()):
' → logprob: -9.974721908569336
    8. '=' → logprob: -10.099721908569336
    9. ' ):' → logprob: -10.349721908569336
    10. '   ' → logprob: -10.724721908569336

Token 74: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08613328635692596
    2. '()' → logprob: -3.3361332416534424
    3. '   ' → logprob: -3.9611332416534424
    4. '():
' → logprob: -4.0861334800720215
    5. '(' → logprob: -5.3361334800720215
    6. ' ():' → logprob: -5.4611334800720215
    7. ' ()' → logprob: -6.7111334800720215
    8. 'return' → logprob: -8.836133003234863
    9. ' return' → logprob: -9.211133003234863
    10. ':' → logprob: -9.211133003234863

Token 75: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.33907550573349
    2. 'int' → logprob: -2.0890755653381348
    3. 'return' (adapté à ' return') → logprob: -2.4640755653381348
    4. '(int' → logprob: -3.4640755653381348
    5. ' int' → logprob: -3.7140755653381348
    6. '   ' → logprob: -4.089075565338135
    7. '    ' → logprob: -5.714075565338135
    8. ' (' → logprob: -7.089075565338135
    9. ' ' → logprob: -7.964075565338135
    10. '=int' → logprob: -8.089075088500977

Token 76: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029751179739832878
    2. 'int' → logprob: -3.5297510623931885
    3. '(int' → logprob: -14.90475082397461
    4. '  ' → logprob: -15.52975082397461
    5. ' ' → logprob: -15.77975082397461
    6. '   ' → logprob: -17.27975082397461
    7. '=int' → logprob: -17.40475082397461
    8. '	int' → logprob: -17.90475082397461
    9. '<int' → logprob: -17.90475082397461
    10. ':int' → logprob: -18.27975082397461

Token 77: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28125303983688354
    2. '(input' → logprob: -1.4062530994415283
    3. '(read' → logprob: -10.15625286102295
    4. '(next' → logprob: -10.78125286102295
    5. '(
' → logprob: -11.40625286102295
    6. '()' → logprob: -11.90625286102295
    7. '((' → logprob: -12.65625286102295
    8. '(

' → logprob: -12.78125286102295
    9. '('' → logprob: -13.15625286102295
    10. '(in' → logprob: -13.40625286102295

Token 78: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0004017137107439339
    2. 'func' → logprob: -8.875401496887207
    3. ')' → logprob: -9.125401496887207
    4. '(' → logprob: -10.250401496887207
    5. '(func' → logprob: -10.250401496887207
    6. '_function' → logprob: -11.000401496887207
    7. '_FUNC' → logprob: -11.625401496887207
    8. '()(' → logprob: -12.000401496887207
    9. '_fun' → logprob: -12.000401496887207
    10. '```' → logprob: -12.375401496887207

Token 79: '())

' (ID: 27654)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.016078947111964226
    2. '())' → logprob: -4.266078948974609
    3. '()' → logprob: -6.266078948974609
    4. '()
' → logprob: -11.64107894897461
    5. ' ())' → logprob: -13.89107894897461
    6. '()))' → logprob: -14.14107894897461
    7. '()

' → logprob: -14.26607894897461
    8. ')' → logprob: -14.39107894897461
    9. '();)' → logprob: -14.51607894897461
    10. ' ().' → logprob: -14.89107894897461

Token 80: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.062080059200525284
    2. '
' → logprob: -2.937080144882202
    3. '

' → logprob: -5.562079906463623
    4. '<|end|>' → logprob: -6.687079906463623
    5. ' def' → logprob: -7.187079906463623
    6. '```' → logprob: -7.812079906463623
    7. '\n' → logprob: -8.187080383300781
    8. '\' → logprob: -8.437080383300781
    9. '<|end|>' → logprob: -9.687080383300781
    10. '#' → logprob: -9.812080383300781

Token 81: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.01239498145878315
    2. 'read' → logprob: -5.762394905090332
    3. ' write' → logprob: -6.137394905090332
    4. ' split' → logprob: -6.512394905090332
    5. ' create' → logprob: -7.012394905090332
    6. ' parse' → logprob: -7.262394905090332
    7. ' calculate' → logprob: -7.387394905090332
    8. ' get' → logprob: -7.637394905090332
    9. ' def' → logprob: -7.887394905090332
    10. ' multiply' → logprob: -8.012394905090332

Token 82: '_edge' (ID: 43226)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.07199958711862564
    2. '_array' → logprob: -2.8219995498657227
    3. '_line' → logprob: -4.821999549865723
    4. '_' → logprob: -7.321999549865723
    5. '_tuple' → logprob: -7.821999549865723
    6. '_vector' → logprob: -7.946999549865723
    7. '_pair' → logprob: -9.446999549865723
    8. '_integer' → logprob: -9.446999549865723
    9. '_int' → logprob: -9.821999549865723
    10. '_lst' → logprob: -10.196999549865723

Token 83: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.013010096736252308
    2. 's' → logprob: -4.763010025024414
    3. '(' → logprob: -5.638010025024414
    4. '_input' → logprob: -8.138010025024414
    5. '=input' → logprob: -8.638010025024414
    6. '_list' → logprob: -9.388010025024414
    7. 'input' → logprob: -9.888010025024414
    8. '(_' → logprob: -9.888010025024414
    9. '```' → logprob: -10.638010025024414
    10. ' (' → logprob: -10.763010025024414

Token 84: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -3.35706390615087e-05
    2. 'func' → logprob: -11.500033378601074
    3. '_function' → logprob: -11.625033378601074
    4. '_f' → logprob: -12.625033378601074
    5. '_FUNC' → logprob: -13.000033378601074
    6. '_funcs' → logprob: -13.250033378601074
    7. 's' → logprob: -13.375033378601074
    8. '_fun' → logprob: -13.500033378601074
    9. '_' → logprob: -14.000033378601074
    10. ')_' → logprob: -14.125033378601074

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004793703090399504
    2. ')' → logprob: -6.129793643951416
    3. '()' → logprob: -6.254793643951416
    4. '():' → logprob: -8.004794120788574
    5. '):
' → logprob: -8.129794120788574
    6. ' ):' → logprob: -10.129794120788574
    7. '):
' → logprob: -12.629794120788574
    8. '):

' → logprob: -13.004794120788574
    9. '()):
' → logprob: -13.129794120788574
    10. '   ' → logprob: -13.254794120788574

Token 86: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003700081491842866
    2. '():
' → logprob: -5.878700256347656
    3. '()' → logprob: -7.628700256347656
    4. '   ' → logprob: -8.128700256347656
    5. ' ():' → logprob: -9.378700256347656
    6. '):' → logprob: -11.378700256347656
    7. '():
' → logprob: -12.878700256347656
    8. ':' → logprob: -13.003700256347656
    9. ' ()' → logprob: -13.503700256347656
    10. '()
' → logprob: -13.503700256347656

Token 87: ' return' (ID: 622)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5388390421867371
    2. 'return' (adapté à ' return') → logprob: -2.038839101791382
    3. 'line' → logprob: -2.163839101791382
    4. 'tuple' → logprob: -2.663839101791382
    5. '   ' → logprob: -3.288839101791382
    6. ' line' → logprob: -3.788839101791382
    7. ' map' → logprob: -4.663838863372803
    8. 'input' → logprob: -4.788838863372803
    9. 'list' → logprob: -4.913838863372803
    10. ' tuple' → logprob: -5.288838863372803

Token 88: ' map' (ID: 4014)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.23687222599983215
    2. ' tuple' → logprob: -1.9868721961975098
    3. 'map' → logprob: -3.2368721961975098
    4. 'list' → logprob: -3.4868721961975098
    5. ' list' → logprob: -5.86187219619751
    6. ' map' → logprob: -6.86187219619751
    7. '(tuple' → logprob: -12.236872673034668
    8. ' ' → logprob: -14.111872673034668
    9. '   ' → logprob: -14.111872673034668
    10. '  ' → logprob: -14.236872673034668

Token 89: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6496237516403198
    2. '(int' → logprob: -0.7746237516403198
    3. '(lambda' → logprob: -4.149623870849609
    4. '(tuple' → logprob: -8.02462387084961
    5. '<|end|>' → logprob: -8.27462387084961
    6. '(
' → logprob: -9.27462387084961
    7. '(input' → logprob: -9.39962387084961
    8. ' (' → logprob: -9.39962387084961
    9. '(list' → logprob: -10.02462387084961
    10. '(str' → logprob: -10.27462387084961

Token 90: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4338526725769043
    2. ',' → logprob: -1.0588526725769043
    3. '(input' → logprob: -5.308852672576904
    4. ' ,' → logprob: -9.433853149414062
    5. 'input' → logprob: -10.433853149414062
    6. ',(' → logprob: -10.558853149414062
    7. '(' → logprob: -10.558853149414062
    8. ')' → logprob: -11.183853149414062
    9. '=input' → logprob: -12.683853149414062
    10. '(),' → logprob: -12.683853149414062

Token 91: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2519724369049072
    2. 'input' → logprob: -1.5019724369049072
    3. ')' → logprob: -10.251972198486328
    4. ',input' → logprob: -12.376972198486328
    5. '(input' → logprob: -13.126972198486328
    6. '=input' → logprob: -14.251972198486328
    7. '	input' → logprob: -14.626972198486328
    8. ' )' → logprob: -15.251972198486328
    9. ' ' → logprob: -15.751972198486328
    10. '_input' → logprob: -16.126972198486328

Token 92: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -4.7159857786027715e-05
    2. 'func' → logprob: -10.250046730041504
    3. ')' → logprob: -12.750046730041504
    4. '_' → logprob: -12.875046730041504
    5. '_FUNC' → logprob: -13.125046730041504
    6. 'Func' → logprob: -14.125046730041504
    7. '(' → logprob: -14.500046730041504
    8. '(func' → logprob: -14.625046730041504
    9. '_function' → logprob: -14.750046730041504
    10. '```' → logprob: -14.750046730041504

Token 93: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006525091012008488
    2. '()' → logprob: -8.000652313232422
    3. '())' → logprob: -8.250652313232422
    4. ')' → logprob: -9.875652313232422
    5. ' ().' → logprob: -13.125652313232422
    6. '()
' → logprob: -13.750652313232422
    7. ' ())' → logprob: -15.125652313232422
    8. '(' → logprob: -15.250652313232422
    9. ' ' → logprob: -15.625652313232422
    10. ' ()' → logprob: -16.250652313232422

Token 94: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.062285058200359344
    2. 'strip' → logprob: -2.8122849464416504
    3. 'rstrip' → logprob: -8.062285423278809
    4. ' split' → logprob: -13.312285423278809
    5. 'spl' → logprob: -15.062285423278809
    6. '(split' → logprob: -16.187284469604492
    7. ')' → logprob: -16.312284469604492
    8. ' strip' → logprob: -16.687284469604492
    9. 's' → logprob: -18.562284469604492
    10. ')s' → logprob: -19.812284469604492

Token 95: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.034252963960170746
    2. ')' → logprob: -3.534252882003784
    3. '()' → logprob: -5.409253120422363
    4. '(' → logprob: -11.409253120422363
    5. '()))' → logprob: -13.659253120422363
    6. ' ())' → logprob: -13.659253120422363
    7. '())
' → logprob: -13.784253120422363
    8. '))' → logprob: -13.784253120422363
    9. '(),' → logprob: -14.409253120422363
    10. ' )' → logprob: -14.659253120422363

Token 96: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01860756427049637
    2. '

' → logprob: -4.2686076164245605
    3. '
' → logprob: -5.5186076164245605
    4. '```' → logprob: -8.518607139587402
    5. '\' → logprob: -9.393607139587402
    6. 'd' → logprob: -9.893607139587402
    7. '<|end|>' → logprob: -10.643607139587402
    8. ' def' → logprob: -11.143607139587402
    9. '\n' → logprob: -11.268607139587402
    10. '#' → logprob: -11.893607139587402

Token 97: ' add' (ID: 1147)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.9856739044189453
    2. 'dfs' → logprob: -1.7356739044189453
    3. ' read' → logprob: -2.2356739044189453
    4. ' main' → logprob: -2.3606739044189453
    5. ' build' → logprob: -2.9856739044189453
    6. ' add' → logprob: -3.2356739044189453
    7. ' bfs' → logprob: -3.6106739044189453
    8. ' solve' → logprob: -3.7356739044189453
    9. 'b' → logprob: -4.110673904418945
    10. ' process' → logprob: -4.235673904418945

Token 98: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.001284640864469111
    2. '_' → logprob: -7.001284599304199
    3. '_edges' → logprob: -8.5012845993042
    4. '_node' → logprob: -9.1262845993042
    5. '_to' → logprob: -11.3762845993042
    6. '_connection' → logprob: -11.3762845993042
    7. '_vertex' → logprob: -12.2512845993042
    8. '```' → logprob: -12.2512845993042
    9. '_child' → logprob: -12.3762845993042
    10. '_neighbor' → logprob: -12.6262845993042

Token 99: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.0052145482040941715
    2. '(' → logprob: -5.505214691162109
    3. '(g' → logprob: -7.505214691162109
    4. '(Graph' → logprob: -8.38021469116211
    5. '(G' → logprob: -9.00521469116211
    6. '(edge' → logprob: -9.50521469116211
    7. '(parent' → logprob: -9.50521469116211
    8. '(edges' → logprob: -10.75521469116211
    9. '(a' → logprob: -11.13021469116211
    10. '(adj' → logprob: -11.13021469116211

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0326688177883625
    2. '(graph' → logprob: -3.5326688289642334
    3. ',u' → logprob: -6.907668590545654
    4. '(u' → logprob: -7.407668590545654
    5. ' ,' → logprob: -7.532668590545654
    6. '):' → logprob: -7.907668590545654
    7. '(' → logprob: -9.282669067382812
    8. ')' → logprob: -9.657669067382812
    9. ')(' → logprob: -9.657669067382812
    10. ',node' → logprob: -9.907669067382812

Token 101: ' x' (ID: 1215)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06230298429727554
    2. ' u' → logprob: -2.812303066253662
    3. 'a' → logprob: -8.187302589416504
    4. 'from' → logprob: -10.687302589416504
    5. ' a' → logprob: -11.187302589416504
    6. ' node' → logprob: -12.437302589416504
    7. 'node' → logprob: -12.687302589416504
    8. '   ' → logprob: -12.687302589416504
    9. ' from' → logprob: -13.062302589416504
    10. '	u' → logprob: -13.312302589416504

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004766671918332577
    2. ' ,' → logprob: -7.750476837158203
    3. ',x' → logprob: -10.625476837158203
    4. ',y' → logprob: -10.875476837158203
    5. '1' → logprob: -14.250476837158203
    6. ',u' → logprob: -15.000476837158203
    7. ')' → logprob: -15.250476837158203
    8. '):' → logprob: -15.375476837158203
    9. '_,' → logprob: -15.500476837158203
    10. ',int' → logprob: -15.750476837158203

Token 103: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.31327024102211
    2. 'y' → logprob: -1.3132702112197876
    3. '	y' → logprob: -12.063270568847656
    4. ' ' → logprob: -13.563270568847656
    5. '   ' → logprob: -14.813270568847656
    6. '  ' → logprob: -15.063270568847656
    7. '<|end|>' → logprob: -15.188270568847656
    8. '    ' → logprob: -15.813270568847656
    9. '```' → logprob: -16.563270568847656
    10. '<|end|>' → logprob: -16.563270568847656

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011684374185279012
    2. '):
' → logprob: -7.126168251037598
    3. ')' → logprob: -8.251168251037598
    4. ' ):' → logprob: -9.251168251037598
    5. '):
' → logprob: -12.501168251037598
    6. ',' → logprob: -13.376168251037598
    7. ')：' → logprob: -15.001168251037598
    8. ':' → logprob: -15.001168251037598
    9. '):

' → logprob: -15.501168251037598
    10. '   ' → logprob: -15.876168251037598

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03850581496953964
    2. ' graph' → logprob: -3.538505792617798
    3. 'graph' → logprob: -5.038506031036377
    4. '	graph' → logprob: -6.163506031036377
    5. '(graph' → logprob: -9.413505554199219
    6. '.graph' → logprob: -10.038505554199219
    7. '```' → logprob: -14.163505554199219
    8. '_graph' → logprob: -14.288505554199219
    9. '  ' → logprob: -14.413505554199219
    10. '       ' → logprob: -15.038505554199219

Token 106: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.20273445546627045
    2. ' graph' → logprob: -1.7027344703674316
    3. '   ' → logprob: -7.077734470367432
    4. '	graph' → logprob: -7.702734470367432
    5. '(graph' → logprob: -11.077733993530273
    6. '.graph' → logprob: -11.702733993530273
    7. '_graph' → logprob: -14.077733993530273
    8. '```' → logprob: -16.077733993530273
    9. 'graphql' → logprob: -16.452733993530273
    10. ' graphene' → logprob: -16.702733993530273

Token 107: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -11.875006675720215
    3. ' [' → logprob: -16.50000762939453
    4. '   ' → logprob: -17.50000762939453
    5. '[y' → logprob: -18.12500762939453
    6. '```' → logprob: -19.12500762939453
    7. '\[' → logprob: -19.25000762939453
    8. ' ' → logprob: -19.87500762939453
    9. 'x' → logprob: -20.00000762939453
    10. '[int' → logprob: -20.25000762939453

Token 108: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -8.065608562901616e-05
    2. ']' → logprob: -10.125081062316895
    3. ' ].' → logprob: -10.875081062316895
    4. '.append' → logprob: -11.250081062316895
    5. ').' → logprob: -11.875081062316895
    6. '.' → logprob: -13.750081062316895
    7. '   ' → logprob: -14.625081062316895
    8. 'append' → logprob: -17.125080108642578
    9. ''].' → logprob: -17.375080108642578
    10. ']).' → logprob: -18.125080108642578

Token 109: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.5
    3. '.append' → logprob: -16.75
    4. 'appen' → logprob: -19.125
    5. 'push' → logprob: -20.5
    6. '_append' → logprob: -20.5
    7. '	append' → logprob: -20.875
    8. 'app' → logprob: -21.5
    9. 'Append' → logprob: -21.625
    10. 'pend' → logprob: -23.125

Token 110: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.500075340270996
    3. '((' → logprob: -16.12507438659668
    4. 'y' → logprob: -16.50007438659668
    5. '(
' → logprob: -17.00007438659668
    6. '(x' → logprob: -17.87507438659668
    7. ' (' → logprob: -18.75007438659668
    8. '(Y' → logprob: -20.75007438659668
    9. '('' → logprob: -20.87507438659668
    10. ' y' → logprob: -20.87507438659668

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.526570384972729e-05
    2. ')
' → logprob: -10.250055313110352
    3. ' )' → logprob: -10.875055313110352
    4. '   ' → logprob: -15.875055313110352
    5. ')return' → logprob: -15.875055313110352
    6. '<|end|>' → logprob: -15.875055313110352
    7. ')

' → logprob: -16.25005531311035
    8. ')#' → logprob: -16.37505531311035
    9. ')y' → logprob: -16.37505531311035
    10. '),' → logprob: -17.00005531311035

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0402015820145607
    2. 'graph' → logprob: -3.7902016639709473
    3. '<|end|>' → logprob: -4.415201663970947
    4. '
' → logprob: -6.415201663970947
    5. '	graph' → logprob: -6.915201663970947
    6. '(graph' → logprob: -7.165201663970947
    7. ' graph' → logprob: -7.290201663970947
    8. ')' → logprob: -8.915201187133789
    9. '```' → logprob: -9.040201187133789
    10. '    
' → logprob: -9.165201187133789

Token 113: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.002313453471288085
    2. ' graph' → logprob: -6.252313613891602
    3. '   ' → logprob: -8.252313613891602
    4. '	graph' → logprob: -9.127313613891602
    5. '(graph' → logprob: -11.377313613891602
    6. '.graph' → logprob: -13.377313613891602
    7. '_graph' → logprob: -13.502313613891602
    8. 'graphql' → logprob: -15.252313613891602
    9. ' ' → logprob: -15.877313613891602
    10. 'Graph' → logprob: -15.877313613891602

Token 114: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00034297199454158545
    2. '[' → logprob: -8.125343322753906
    3. '[x' → logprob: -10.000343322753906
    4. '```' → logprob: -15.000343322753906
    5. '[Y' → logprob: -15.375343322753906
    6. '[user' → logprob: -15.625343322753906
    7. 'y' → logprob: -15.875343322753906
    8. '][' → logprob: -16.000343322753906
    9. '[s' → logprob: -16.125343322753906
    10. ' [' → logprob: -16.625343322753906

Token 115: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.006598963867872953
    2. ']' → logprob: -5.256598949432373
    3. ').' → logprob: -6.756598949432373
    4. ')' → logprob: -9.131599426269531
    5. '])' → logprob: -10.006599426269531
    6. '.append' → logprob: -10.631599426269531
    7. ' ].' → logprob: -10.756599426269531
    8. '.' → logprob: -14.881599426269531
    9. ')]' → logprob: -15.256599426269531
    10. '}.' → logprob: -15.256599426269531

Token 116: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.625
    3. '.append' → logprob: -16.75
    4. 'appen' → logprob: -18.0
    5. '	append' → logprob: -18.5
    6. 'app' → logprob: -20.125
    7. '_append' → logprob: -21.375
    8. 'add' → logprob: -22.25
    9. 'Append' → logprob: -22.75
    10. 'prepend' → logprob: -22.75

Token 117: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.029751067981123924
    2. '(' → logprob: -3.5297510623931885
    3. '(
' → logprob: -14.77975082397461
    4. ' (' → logprob: -16.27975082397461
    5. 'x' → logprob: -17.65475082397461
    6. '((' → logprob: -17.77975082397461
    7. '(

' → logprob: -18.77975082397461
    8. '(X' → logprob: -18.90475082397461
    9. '(y' → logprob: -19.52975082397461
    10. '('' → logprob: -19.90475082397461

Token 118: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.176947600673884e-05
    2. ')
' → logprob: -10.750021934509277
    3. ' )' → logprob: -16.37502098083496
    4. '   ' → logprob: -16.75002098083496
    5. ')

' → logprob: -16.87502098083496
    6. '<|end|>' → logprob: -17.12502098083496
    7. ')return' → logprob: -17.62502098083496
    8. ')
' → logprob: -18.50002098083496
    9. '))' → logprob: -19.12502098083496
    10. '}' → logprob: -19.25002098083496

Token 119: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012468213215470314
    2. '
' → logprob: -4.512468338012695
    3. '

' → logprob: -7.387468338012695
    4. '<|end|>' → logprob: -8.137468338012695
    5. '\n' → logprob: -9.012468338012695
    6. '#' → logprob: -9.262468338012695
    7. '```' → logprob: -9.262468338012695
    8. '\' → logprob: -9.637468338012695
    9. 'newline' → logprob: -10.887468338012695
    10. '(' → logprob: -11.262468338012695

Token 120: ' fill' (ID: 6954)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6039695739746094
    2. ' bfs' → logprob: -1.2289695739746094
    3. 'dfs' → logprob: -2.2289695739746094
    4. 'b' → logprob: -3.1039695739746094
    5. ' main' → logprob: -5.603969573974609
    6. ' is' → logprob: -6.728969573974609
    7. ' depth' → logprob: -7.228969573974609
    8. 'd' → logprob: -7.978969573974609
    9. ' find' → logprob: -7.978969573974609
    10. ' solve' → logprob: -8.10396957397461

Token 121: '_graph' (ID: 33441)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.6968256235122681
    2. '_graph' → logprob: -1.571825623512268
    3. '(graph' → logprob: -2.4468255043029785
    4. '_' → logprob: -2.9468255043029785
    5. '_distance' → logprob: -3.4468255043029785
    6. '_queue' → logprob: -3.6968255043029785
    7. '_colors' → logprob: -3.8218255043029785
    8. '_color' → logprob: -4.0718255043029785
    9. '_stack' → logprob: -4.8218255043029785
    10. '_order' → logprob: -4.8218255043029785

Token 122: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.000720891694072634
    2. '(' → logprob: -7.250720977783203
    3. ' (' → logprob: -12.000720977783203
    4. '(input' → logprob: -13.000720977783203
    5. '(Graph' → logprob: -13.500720977783203
    6. '(
' → logprob: -15.250720977783203
    7. '(grammar' → logprob: -16.375720977783203
    8. '(n' → logprob: -16.500720977783203
    9. '(grid' → logprob: -16.500720977783203
    10. '_graph' → logprob: -16.500720977783203

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013961880467832088
    2. ',n' → logprob: -6.626396179199219
    3. ' ,' → logprob: -10.251396179199219
    4. ',input' → logprob: -10.501396179199219
    5. '):' → logprob: -12.876396179199219
    6. '(n' → logprob: -14.001396179199219
    7. ',num' → logprob: -14.251396179199219
    8. ',x' → logprob: -14.251396179199219
    9. ',
' → logprob: -14.751396179199219
    10. ',size' → logprob: -15.001396179199219

Token 124: ' n' (ID: 297)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6662804484367371
    2. 'n' → logprob: -1.5412805080413818
    3. ' input' → logprob: -1.9162805080413818
    4. ' n' → logprob: -2.291280508041382
    5. ' edges' → logprob: -4.291280269622803
    6. 'edges' → logprob: -4.791280269622803
    7. '   ' → logprob: -7.166280269622803
    8. 'edge' → logprob: -7.916280269622803
    9. 'num' → logprob: -8.791280746459961
    10. ')' → logprob: -8.916280746459961

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004941754741594195
    2. ',input' → logprob: -7.875494003295898
    3. '):' → logprob: -9.375494003295898
    4. ' ,' → logprob: -10.875494003295898
    5. '):
' → logprob: -11.625494003295898
    6. '   ' → logprob: -14.625494003295898
    7. ')' → logprob: -15.375494003295898
    8. ',
' → logprob: -15.500494003295898
    9. '(input' → logprob: -15.875494003295898
    10. 'input' → logprob: -16.6254940032959

Token 126: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10025110840797424
    2. ' input' → logprob: -2.3502511978149414
    3. 'edge' → logprob: -11.100251197814941
    4. ' ' → logprob: -11.850251197814941
    5. '   ' → logprob: -12.100251197814941
    6. ' edge' → logprob: -12.850251197814941
    7. '	input' → logprob: -13.225251197814941
    8. ' edges' → logprob: -13.350251197814941
    9. 'edges' → logprob: -13.350251197814941
    10. '  ' → logprob: -13.475251197814941

Token 127: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.0087516784551553e-05
    2. 'func' → logprob: -12.00001049041748
    3. '_' → logprob: -13.50001049041748
    4. '_function' → logprob: -13.87501049041748
    5. '_f' → logprob: -14.12501049041748
    6. '_fun' → logprob: -15.12501049041748
    7. ')' → logprob: -15.25001049041748
    8. '):' → logprob: -16.625009536743164
    9. ')_' → logprob: -16.750009536743164
    10. '_fn' → logprob: -17.250009536743164

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011248565278947353
    2. '):
' → logprob: -6.876124858856201
    3. ')' → logprob: -9.376124382019043
    4. ' ):' → logprob: -12.376124382019043
    5. ',' → logprob: -13.251124382019043
    6. '   ' → logprob: -14.876124382019043
    7. ':' → logprob: -15.001124382019043
    8. '):
' → logprob: -15.251124382019043
    9. '():' → logprob: -15.751124382019043
    10. '=' → logprob: -16.75112533569336

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014722455525770783
    2. 'for' → logprob: -7.001472473144531
    3. ' for' → logprob: -7.501472473144531
    4. '	for' → logprob: -11.876472473144531
    5. '
' → logprob: -14.001472473144531
    6. '    
' → logprob: -15.251472473144531
    7. '   ' → logprob: -15.376472473144531
    8. '```' → logprob: -18.00147247314453
    9. '\t' → logprob: -18.62647247314453
    10. '  ' → logprob: -18.75147247314453

Token 130: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6382043957710266
    2. ' for' → logprob: -1.1382043361663818
    3. 'for' (adapté à ' for') → logprob: -1.8882043361663818
    4. '	for' → logprob: -10.888204574584961
    5. ' ' → logprob: -13.763204574584961
    6. '    
' → logprob: -13.763204574584961
    7. '  ' → logprob: -13.888204574584961
    8. '
' → logprob: -14.138204574584961
    9. '    ' → logprob: -16.01320457458496
    10. '   ' → logprob: -16.13820457458496

Token 131: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07890928536653519
    2. '_' → logprob: -2.578909397125244
    3. ' i' → logprob: -11.078908920288086
    4. ' in' → logprob: -13.578908920288086
    5. ' ' → logprob: -13.703908920288086
    6. ' ' → logprob: -13.828908920288086
    7. ' range' → logprob: -15.078908920288086
    8. '_range' → logprob: -15.828908920288086
    9. '_i' → logprob: -16.328908920288086
    10. ' ‌' → logprob: -16.328908920288086

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023878896608948708
    2. 'in' → logprob: -3.773878812789917
    3. 'range' → logprob: -7.648879051208496
    4. ' ' → logprob: -9.648879051208496
    5. 'n' → logprob: -10.023879051208496
    6. ' range' → logprob: -11.273879051208496
    7. '(' → logprob: -11.523879051208496
    8. '  ' → logprob: -12.148879051208496
    9. 'import' → logprob: -12.773879051208496
    10. '(range' → logprob: -13.273879051208496

Token 133: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011734402505680919
    2. ' range' → logprob: -7.001173496246338
    3. 'ange' → logprob: -8.37617301940918
    4. '(range' → logprob: -10.50117301940918
    5. '	range' → logprob: -13.25117301940918
    6. 'nge' → logprob: -14.62617301940918
    7. '```' → logprob: -15.00117301940918
    8. '   ' → logprob: -15.37617301940918
    9. '  ' → logprob: -15.75117301940918
    10. 'in' → logprob: -15.75117301940918

Token 134: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.4378848391061183e-05
    2. '(' → logprob: -11.375014305114746
    3. ' (' → logprob: -13.000014305114746
    4. 'n' → logprob: -14.625014305114746
    5. ' n' → logprob: -15.625014305114746
    6. ',' → logprob: -20.125015258789062
    7. '
' → logprob: -20.250015258789062
    8. '(
' → logprob: -20.500015258789062
    9. '	n' → logprob: -20.750015258789062
    10. ' ' → logprob: -20.750015258789062

Token 135: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01176569052040577
    2. '):
' → logprob: -4.511765480041504
    3. ' ):' → logprob: -7.886765480041504
    4. ')' → logprob: -8.136765480041504
    5. '   ' → logprob: -11.136765480041504
    6. ':' → logprob: -11.761765480041504
    7. '):
' → logprob: -11.886765480041504
    8. '-' → logprob: -12.511765480041504
    9. '():' → logprob: -12.636765480041504
    10. ' ):
' → logprob: -13.011765480041504

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.250096321105957
    3. '2' → logprob: -16.812597274780273
    4. '１' → logprob: -17.062597274780273
    5. '-' → logprob: -17.250097274780273
    6. '۱' → logprob: -17.250097274780273
    7. ')' → logprob: -17.687597274780273
    8. '১' → logprob: -17.687597274780273
    9. '१' → logprob: -18.250097274780273
    10. '<|end|>' → logprob: -18.312597274780273

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10152512043714523
    2. '):
' → logprob: -2.351525068283081
    3. ')' → logprob: -7.22652530670166
    4. ' ):' → logprob: -7.97652530670166
    5. '):
' → logprob: -9.35152530670166
    6. ':' → logprob: -9.60152530670166
    7. ' ):
' → logprob: -9.72652530670166
    8. '   ' → logprob: -10.97652530670166
    9. ' )' → logprob: -11.47652530670166
    10. ':
' → logprob: -13.72652530670166

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00324378558434546
    2. ' x' → logprob: -6.128243923187256
    3. 'x' → logprob: -7.753243923187256
    4. ',' → logprob: -7.878243923187256
    5. '        
' → logprob: -9.628243446350098
    6. '   ' → logprob: -9.878243446350098
    7. '<|end|>' → logprob: -10.003243446350098
    8. ',x' → logprob: -10.878243446350098
    9. '(x' → logprob: -11.503243446350098
    10. ' ' → logprob: -11.878243446350098

Token 139: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.048671167343854904
    2. ' x' → logprob: -3.048671245574951
    3. '       ' → logprob: -9.798670768737793
    4. '   ' → logprob: -10.673670768737793
    5. '	x' → logprob: -12.423670768737793
    6. ',x' → logprob: -15.673670768737793
    7. 'a' → logprob: -15.673670768737793
    8. ' ' → logprob: -15.923670768737793
    9. '           ' → logprob: -15.923670768737793
    10. 'u' → logprob: -16.17367172241211

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037285841535776854
    2. ',y' → logprob: -5.62872838973999
    3. ' ,' → logprob: -9.003728866577148
    4. 'y' → logprob: -12.253728866577148
    5. ' y' → logprob: -15.253728866577148
    6. '‌,' → logprob: -15.503728866577148
    7. '<|end|>' → logprob: -16.12872886657715
    8. '_,' → logprob: -16.37872886657715
    9. ',
' → logprob: -16.75372886657715
    10. ',\
' → logprob: -17.25372886657715

Token 141: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011048408225178719
    2. ' y' → logprob: -4.511048316955566
    3. '<|end|>' → logprob: -14.636048316955566
    4. '	y' → logprob: -16.761049270629883
    5. ' ' → logprob: -16.761049270629883
    6. '    ' → logprob: -17.011049270629883
    7. '<|end|>' → logprob: -17.886049270629883
    8. '   ' → logprob: -18.386049270629883
    9. 'x' → logprob: -18.511049270629883
    10. ' =' → logprob: -18.511049270629883

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. ',' → logprob: -14.75192928314209
    4. ')' → logprob: -15.25192928314209
    5. '=input' → logprob: -15.62692928314209
    6. '＝' → logprob: -16.501930236816406
    7. ' =)' → logprob: -16.751930236816406
    8. '<|end|>' → logprob: -16.751930236816406
    9. '=create' → logprob: -16.876930236816406
    10. ')=' → logprob: -17.001930236816406

Token 143: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.20183399319648743
    2. 'read' → logprob: -1.701833963394165
    3. ' next' → logprob: -7.951834201812744
    4. 'next' → logprob: -10.201833724975586
    5. ' tuple' → logprob: -11.076833724975586
    6. ' map' → logprob: -11.826833724975586
    7. ' list' → logprob: -12.576833724975586
    8. 'list' → logprob: -12.826833724975586
    9. 'map' → logprob: -13.576833724975586
    10. 'tuple' → logprob: -14.576833724975586

Token 144: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.3856492842023727e-06
    2. 'edge' → logprob: -13.625000953674316
    3. '_EDGE' → logprob: -16.750001907348633
    4. '_edges' → logprob: -16.875001907348633
    5. '_integer' → logprob: -17.125001907348633
    6. 'Edge' → logprob: -17.500001907348633
    7. ' edge' → logprob: -18.500001907348633
    8. '(edge' → logprob: -18.625001907348633
    9. '```' → logprob: -19.250001907348633
    10. '_' → logprob: -19.625001907348633

Token 145: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.9153885558771435e-06
    2. '(' → logprob: -12.250005722045898
    3. ',input' → logprob: -14.500005722045898
    4. ' (' → logprob: -14.750005722045898
    5. '=input' → logprob: -17.2500057220459
    6. 'input' → logprob: -17.6250057220459
    7. '(
' → logprob: -17.8750057220459
    8. '(in' → logprob: -18.1250057220459
    9. '(output' → logprob: -18.8750057220459
    10. '(inp' → logprob: -19.3750057220459

Token 146: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00029840084607712924
    2. 'func' → logprob: -8.125298500061035
    3. ')' → logprob: -13.500298500061035
    4. '(func' → logprob: -15.000298500061035
    5. '_FUNC' → logprob: -15.625298500061035
    6. 'Func' → logprob: -16.12529754638672
    7. '_' → logprob: -16.50029754638672
    8. '_funcs' → logprob: -16.50029754638672
    9. '	func' → logprob: -17.00029754638672
    10. ' func' → logprob: -17.37529754638672

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.939851037808694e-05
    2. ')
' → logprob: -11.250029563903809
    3. '())' → logprob: -11.500029563903809
    4. ' )' → logprob: -12.250029563903809
    5. '))' → logprob: -14.125029563903809
    6. '()' → logprob: -15.375029563903809
    7. ')`' → logprob: -15.375029563903809
    8. ')

' → logprob: -17.250028610229492
    9. ')#' → logprob: -17.250028610229492
    10. ')
' → logprob: -17.375028610229492

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026823030784726143
    2. '   ' → logprob: -6.377682209014893
    3. 'add' → logprob: -7.377682209014893
    4. ' add' → logprob: -8.37768268585205
    5. '        
' → logprob: -10.00268268585205
    6. '<|end|>' → logprob: -10.25268268585205
    7. '           ' → logprob: -11.87768268585205
    8. ',' → logprob: -11.87768268585205
    9. '	' → logprob: -12.00268268585205
    10. '	add' → logprob: -12.37768268585205

Token 149: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.2017027586698532
    2. ' add' → logprob: -1.7017027139663696
    3. '   ' → logprob: -8.451703071594238
    4. '       ' → logprob: -9.701703071594238
    5. '.add' → logprob: -12.451703071594238
    6. '	add' → logprob: -12.826703071594238
    7. '
' → logprob: -12.826703071594238
    8. '_add' → logprob: -13.326703071594238
    9. ')add' → logprob: -13.576703071594238
    10. '(add' → logprob: -14.201703071594238

Token 150: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0003377270477358252
    2. '_' → logprob: -8.000337600708008
    3. '_edges' → logprob: -13.875337600708008
    4. '_ed' → logprob: -13.875337600708008
    5. ' _' → logprob: -16.500337600708008
    6. '_e' → logprob: -16.625337600708008
    7. '_
' → logprob: -17.000337600708008
    8. '_vertex' → logprob: -17.375337600708008
    9. '_node' → logprob: -17.375337600708008
    10. '_graph' → logprob: -17.500337600708008

Token 151: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.0008093867218121886
    2. '(' → logprob: -7.125809192657471
    3. '(
' → logprob: -13.250809669494629
    4. '<|end|>' → logprob: -13.500809669494629
    5. '(game' → logprob: -14.375809669494629
    6. '(grammar' → logprob: -14.500809669494629
    7. ' (' → logprob: -15.750809669494629
    8. '(Graph' → logprob: -15.875809669494629
    9. '(gr' → logprob: -16.125808715820312
    10. '	graph' → logprob: -16.625808715820312

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1431051343679428
    2. '(graph' → logprob: -2.0181050300598145
    3. ' ,' → logprob: -8.643105506896973
    4. ')' → logprob: -9.018105506896973
    5. '(' → logprob: -9.143105506896973
    6. ',
' → logprob: -11.643105506896973
    7. ' (' → logprob: -12.768105506896973
    8. ',(' → logprob: -13.143105506896973
    9. '(
' → logprob: -13.143105506896973
    10. ')(' → logprob: -13.393105506896973

Token 153: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048587825149297714
    2. ' x' → logprob: -3.0485877990722656
    3. ')x' → logprob: -15.423587799072266
    4. ')' → logprob: -16.048587799072266
    5. '<|end|>' → logprob: -16.298587799072266
    6. '(x' → logprob: -17.298587799072266
    7. '	x' → logprob: -17.423587799072266
    8. ',x' → logprob: -17.673587799072266
    9. '
' → logprob: -18.173587799072266
    10. ' ' → logprob: -18.173587799072266

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003284186590462923
    2. ',y' → logprob: -6.003283977508545
    3. ' ,' → logprob: -7.128283977508545
    4. 'y' → logprob: -12.253284454345703
    5. ',
' → logprob: -14.378284454345703
    6. ')' → logprob: -15.378284454345703
    7. '   ' → logprob: -16.003284454345703
    8. ' y' → logprob: -16.003284454345703
    9. '‌,' → logprob: -16.253284454345703
    10. ',x' → logprob: -17.253284454345703

Token 155: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759420990943909
    2. ' y' → logprob: -0.8259420990943909
    3. ')y' → logprob: -13.950942039489746
    4. ')' → logprob: -14.200942039489746
    5. '<|end|>' → logprob: -14.700942039489746
    6. ' ' → logprob: -15.575942039489746
    7. '	y' → logprob: -16.200942993164062
    8. ' ' → logprob: -16.325942993164062
    9. 'x' → logprob: -16.575942993164062
    10. '    ' → logprob: -17.575942993164062

Token 156: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2127087504486553e-05
    2. ')
' → logprob: -10.750021934509277
    3. ' )' → logprob: -14.875021934509277
    4. ')

' → logprob: -16.375022888183594
    5. ')return' → logprob: -16.875022888183594
    6. '   ' → logprob: -17.125022888183594
    7. '))' → logprob: -18.000022888183594
    8. ')#' → logprob: -19.125022888183594
    9. ')n' → logprob: -19.375022888183594
    10. ')
' → logprob: -19.500022888183594

Token 157: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009138475870713592
    2. '<|end|>' → logprob: -7.500913619995117
    3. '
' → logprob: -8.625913619995117
    4. '```' → logprob: -9.250913619995117
    5. ')' → logprob: -10.500913619995117
    6. '<|end|>' → logprob: -10.750913619995117
    7. '#' → logprob: -11.000913619995117
    8. ' def' → logprob: -12.750913619995117
    9. 'ndef' → logprob: -13.000913619995117
    10. 'import' → logprob: -13.375913619995117

Token 158: ' initialize' (ID: 18400)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.3668237030506134
    2. 'dfs' → logprob: -1.991823673248291
    3. ' bfs' → logprob: -2.616823673248291
    4. ' main' → logprob: -2.616823673248291
    5. 'b' → logprob: -4.741823673248291
    6. 'main' → logprob: -5.241823673248291
    7. ' solve' → logprob: -5.741823673248291
    8. 'def' → logprob: -6.241823673248291
    9. ' find' → logprob: -6.866823673248291
    10. ' depth' → logprob: -7.116823673248291

Token 159: '_fact' (ID: 111916)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.5535624027252197
    2. '(graph' → logprob: -2.0535624027252197
    3. '_' → logprob: -2.4285624027252197
    4. '_array' → logprob: -3.4285624027252197
    5. '(n' → logprob: -3.5535624027252197
    6. '_dp' → logprob: -3.5535624027252197
    7. '_dist' → logprob: -3.8035624027252197
    8. '_stack' → logprob: -3.9285624027252197
    9. '_variables' → logprob: -4.553562164306641
    10. '_arrays' → logprob: -4.928562164306641

Token 160: '_' (ID: 62)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.47935375571250916
    2. '(n' → logprob: -1.4793537855148315
    3. 's' → logprob: -2.479353666305542
    4. 'orial' → logprob: -2.729353666305542
    5. '_and' → logprob: -7.229353904724121
    6. '(' → logprob: -7.354353904724121
    7. '(size' → logprob: -7.479353904724121
    8. 'ors' → logprob: -7.729353904724121
    9. '(num' → logprob: -8.104353904724121
    10. '_or' → logprob: -8.354353904724121

Token 161: '2' (ID: 17)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.41082900762557983
    2. 'or' → logprob: -1.2858290672302246
    3. 'orial' → logprob: -3.1608290672302246
    4. 'rial' → logprob: -4.660829067230225
    5. '_and' → logprob: -5.410829067230225
    6. '```' → logprob: -6.535829067230225
    7. 'ory' → logprob: -7.160829067230225
    8. 'n' → logprob: -7.535829067230225
    9. 'ors' → logprob: -7.910829067230225
    10. 'ories' → logprob: -8.285828590393066

Token 162: '():
' (ID: 8595)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -1.4524829387664795
    2. '(n' → logprob: -1.7024829387664795
    3. '56' → logprob: -1.7024829387664795
    4. 'ory' → logprob: -2.2024829387664795
    5. '00' → logprob: -2.4524829387664795
    6. 'o' → logprob: -3.5774829387664795
    7. 'fac' → logprob: -4.202483177185059
    8. '0' → logprob: -4.202483177185059
    9. '57' → logprob: -4.577483177185059
    10. '02' → logprob: -4.952483177185059

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014641746878623962
    2. '(n' → logprob: -5.514641761779785
    3. '(max' → logprob: -5.764641761779785
    4. '(' → logprob: -5.889641761779785
    5. '():
' → logprob: -7.139641761779785
    6. '()' → logprob: -7.264641761779785
    7. '():' → logprob: -7.514641761779785
    8. 'n' → logprob: -7.764641761779785
    9. '[]' → logprob: -7.889641761779785
    10. '[' → logprob: -8.139641761779785

Token 164: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6094354391098022
    2. 'fact' → logprob: -2.234435558319092
    3. ' max' → logprob: -2.984435558319092
    4. 'max' → logprob: -3.109435558319092
    5. '[' → logprob: -3.109435558319092
    6. ' [' → logprob: -3.484435558319092
    7. 'return' (adapté à ' return') → logprob: -3.609435558319092
    8. ' return' → logprob: -3.734435558319092
    9. ' fact' → logprob: -4.109435558319092
    10. ' (' → logprob: -4.109435558319092

Token 165: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03515326976776123
    2. 'np' → logprob: -4.285153388977051
    3. '[np' → logprob: -4.785153388977051
    4. ' [' → logprob: -5.285153388977051
    5. '([' → logprob: -6.035153388977051
    6. '(np' → logprob: -6.410153388977051
    7. '[]' → logprob: -6.410153388977051
    8. ' np' → logprob: -7.285153388977051
    9. '1' → logprob: -8.16015338897705
    10. '(' → logprob: -8.53515338897705

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009799322579056025
    2. '0' → logprob: -7.125979900360107
    3. '(' → logprob: -9.500980377197266
    4. '-' → logprob: -9.625980377197266
    5. '[' → logprob: -11.750980377197266
    6. 'False' → logprob: -11.750980377197266
    7. 'None' → logprob: -11.875980377197266
    8. '2' → logprob: -13.000980377197266
    9. ' ' → logprob: -13.375980377197266
    10. 'True' → logprob: -13.375980377197266

Token 167: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11441945284605026
    2. ',' → logprob: -2.239419460296631
    3. ']*(' → logprob: -6.989419460296631
    4. ']*' → logprob: -7.739419460296631
    5. ' ]' → logprob: -9.364418983459473
    6. ']+' → logprob: -9.989418983459473
    7. ' for' → logprob: -10.114418983459473
    8. '],' → logprob: -11.364418983459473
    9. ' ,' → logprob: -11.489418983459473
    10. ']int' → logprob: -11.614418983459473

Token 168: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0055326735600829124
    2. ' ' → logprob: -5.380532741546631
    3. '2' → logprob: -7.005532741546631
    4. ']' → logprob: -13.130532264709473
    5. '```' → logprob: -13.943032264709473
    6. '  ' → logprob: -14.755532264709473
    7. '0' → logprob: -15.005532264709473
    8. '(' → logprob: -15.380532264709473
    9. '   ' → logprob: -15.818032264709473
    10. '

' → logprob: -16.25553321838379

Token 169: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02056407742202282
    2. '2' → logprob: -3.895564079284668
    3. '```' → logprob: -11.645564079284668
    4. '0' → logprob: -12.020564079284668
    5. ' ' → logprob: -12.520564079284668
    6. '(' → logprob: -14.333064079284668
    7. '-' → logprob: -14.583064079284668
    8. '3' → logprob: -14.958064079284668
    9. '{' → logprob: -15.145564079284668
    10. ']' → logprob: -15.520564079284668

Token 170: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03529919683933258
    2. ',' → logprob: -3.660299301147461
    3. ' ]' → logprob: -4.785299301147461
    4. ' ,' → logprob: -8.160299301147461
    5. '1' → logprob: -9.160299301147461
    6. '<|end|>' → logprob: -9.660299301147461
    7. '0' → logprob: -10.285299301147461
    8. '],' → logprob: -10.910299301147461
    9. '7' → logprob: -11.285299301147461
    10. ' ' → logprob: -11.410299301147461

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05985546484589577
    2. '2' → logprob: -3.3098554611206055
    3. '0' → logprob: -4.1848554611206055
    4. ' ' → logprob: -5.4348554611206055
    5. '3' → logprob: -6.4348554611206055
    6. '4' → logprob: -9.059855461120605
    7. '5' → logprob: -9.434855461120605
    8. '-' → logprob: -10.059855461120605
    9. '6' → logprob: -10.184855461120605
    10. ' -' → logprob: -11.122355461120605

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003458468010649085
    2. '2' → logprob: -5.878458499908447
    3. '0' → logprob: -7.503458499908447
    4. '-' → logprob: -9.503458023071289
    5. '```' → logprob: -11.753458023071289
    6. '3' → logprob: -11.878458023071289
    7. ' ' → logprob: -12.878458023071289
    8. '4' → logprob: -13.003458023071289
    9. '6' → logprob: -13.503458023071289
    10. '5' → logprob: -13.753458023071289

Token 173: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006487515289336443
    2. ',' → logprob: -5.1314873695373535
    3. ' ]' → logprob: -7.5064873695373535
    4. '0' → logprob: -13.131487846374512
    5. '1' → logprob: -13.881487846374512
    6. '3' → logprob: -14.006487846374512
    7. '...]' → logprob: -14.506487846374512
    8. ',
' → logprob: -14.756487846374512
    9. ' ,' → logprob: -14.756487846374512
    10. '6' → logprob: -15.006487846374512

Token 174: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ' expand' (ID: 10791)
  Prédit: ' initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initialize' → logprob: -0.431509405374527
    2. 'initialize' → logprob: -2.556509494781494
    3. ' compute' → logprob: -2.931509494781494
    4. ' factorial' → logprob: -3.056509494781494
    5. 'def' → logprob: -3.431509494781494
    6. ' fill' → logprob: -3.556509494781494
    7. ' calculate' → logprob: -3.931509494781494
    8. 'compute' → logprob: -4.056509494781494
    9. ' def' → logprob: -4.556509494781494
    10. ' pre' → logprob: -4.806509494781494

Token 176: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.029931219294667244
    2. '_factor' → logprob: -3.5299313068389893
    3. '_f' → logprob: -10.15493106842041
    4. '_array' → logprob: -10.27993106842041
    5. '_fac' → logprob: -10.52993106842041
    6. '_' → logprob: -11.02993106842041
    7. 'fact' → logprob: -11.65493106842041
    8. 'ed' → logprob: -11.65493106842041
    9. '(f' → logprob: -12.02993106842041
    10. '_list' → logprob: -12.52993106842041

Token 177: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0019921588245779276
    2. '(' → logprob: -7.001992225646973
    3. '_(' → logprob: -7.626992225646973
    4. '(n' → logprob: -8.376992225646973
    5. 'or' → logprob: -8.876992225646973
    6. '_fact' → logprob: -9.376992225646973
    7. 's' → logprob: -10.751992225646973
    8. '_factor' → logprob: -11.001992225646973
    9. '_:' → logprob: -11.126992225646973
    10. '(f' → logprob: -11.251992225646973

Token 178: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008903791895136237
    2. '_' → logprob: -7.125890254974365
    3. '(' → logprob: -10.625890731811523
    4. '```' → logprob: -11.500890731811523
    5. 'fact' → logprob: -11.625890731811523
    6. 'n' → logprob: -12.250890731811523
    7. 'def' → logprob: -12.250890731811523
    8. '(n' → logprob: -12.500890731811523
    9. 'array' → logprob: -12.750890731811523
    10. 's' → logprob: -12.875890731811523

Token 179: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.029994841665029526
    2. '(n' → logprob: -3.9049947261810303
    3. '(size' → logprob: -5.404994964599609
    4. '(arr' → logprob: -6.154994964599609
    5. '(length' → logprob: -6.779994964599609
    6. '(lst' → logprob: -7.904994964599609
    7. '(l' → logprob: -8.40499496459961
    8. '(prev' → logprob: -8.40499496459961
    9. '(old' → logprob: -8.90499496459961
    10. '(' → logprob: -9.40499496459961

Token 180: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.0007818726007826626
    2. '_' → logprob: -8.750782012939453
    3. '_act' → logprob: -8.875782012939453
    4. ')' → logprob: -9.250782012939453
    5. 'actor' → logprob: -10.000782012939453
    6. 'acts' → logprob: -10.000782012939453
    7. '(act' → logprob: -10.000782012939453
    8. '```' → logprob: -10.125782012939453
    9. 'ac' → logprob: -10.250782012939453
    10. '[' → logprob: -10.500782012939453

Token 181: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004359740763902664
    2. '_,' → logprob: -6.504359722137451
    3. '):' → logprob: -6.629359722137451
    4. '2' → logprob: -7.629359722137451
    5. ',' → logprob: -7.754359722137451
    6. ')' → logprob: -8.87936019897461
    7. 's' → logprob: -8.87936019897461
    8. '_)' → logprob: -9.62936019897461
    9. '):
' → logprob: -10.00436019897461
    10. '[' → logprob: -10.00436019897461

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006398845580406487
    2. ',' → logprob: -8.000639915466309
    3. '_' → logprob: -8.875639915466309
    4. ')' → logprob: -9.625639915466309
    5. '[' → logprob: -10.250639915466309
    6. ' ' → logprob: -10.375639915466309
    7. '):' → logprob: -11.875639915466309
    8. '):
' → logprob: -12.000639915466309
    9. '   ' → logprob: -12.750639915466309
    10. '₂' → logprob: -13.125639915466309

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20448319613933563
    2. '):' → logprob: -1.704483151435852
    3. ',n' → logprob: -7.0794830322265625
    4. '):
' → logprob: -7.2044830322265625
    5. ')' → logprob: -7.3294830322265625
    6. ' ,' → logprob: -7.7044830322265625
    7. ',size' → logprob: -9.329483032226562
    8. ',len' → logprob: -10.204483032226562
    9. ' ):' → logprob: -10.454483032226562
    10. ':' → logprob: -10.829483032226562

Token 184: ' upper' (ID: 13057)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4114587903022766
    2. 'n' → logprob: -1.2864587306976318
    3. 'mod' → logprob: -4.911458969116211
    4. 'k' → logprob: -5.036458969116211
    5. ' k' → logprob: -5.161458969116211
    6. ' i' → logprob: -5.161458969116211
    7. ' mod' → logprob: -5.161458969116211
    8. 'i' → logprob: -5.786458969116211
    9. ' ' → logprob: -5.911458969116211
    10. ')' → logprob: -6.161458969116211

Token 185: ',' (ID: 11)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.4063063859939575
    2. '):' → logprob: -1.2813063859939575
    3. '_limit' → logprob: -3.281306266784668
    4. '_' → logprob: -4.781306266784668
    5. 'bound' → logprob: -5.281306266784668
    6. '):
' → logprob: -5.906306266784668
    7. ')' → logprob: -7.281306266784668
    8. 'Bound' → logprob: -7.781306266784668
    9. ' bound' → logprob: -8.031306266784668
    10. ',' → logprob: -8.656306266784668

Token 186: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.5589194893836975
    2. 'mod' → logprob: -1.6839194297790527
    3. ' input' → logprob: -2.3089194297790527
    4. 'input' → logprob: -3.0589194297790527
    5. ' n' → logprob: -5.121419429779053
    6. ' p' → logprob: -5.183919429779053
    7. 'p' → logprob: -5.371419429779053
    8. ' prime' → logprob: -5.496419429779053
    9. ' modulus' → logprob: -5.496419429779053
    10. 'n' → logprob: -5.808919429779053

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01627013087272644
    2. '):
' → logprob: -4.141270160675049
    3. '):
' → logprob: -9.14126968383789
    4. '=' → logprob: -9.39126968383789
    5. ')' → logprob: -10.76626968383789
    6. ' ):' → logprob: -12.01626968383789
    7. '_' → logprob: -12.14126968383789
    8. ',' → logprob: -12.14126968383789
    9. ':' → logprob: -13.14126968383789
    10. '):

' → logprob: -13.26626968383789

Token 188: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005693657789379358
    2. ':
' → logprob: -5.505693435668945
    3. '   ' → logprob: -6.880693435668945
    4. '):' → logprob: -8.255693435668945
    5. ',' → logprob: -8.630693435668945
    6. ' :' → logprob: -9.255693435668945
    7. '):
' → logprob: -11.005693435668945
    8. ' :
' → logprob: -12.005693435668945
    9. ':def' → logprob: -12.130693435668945
    10. '():' → logprob: -12.630693435668945

Token 189: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31654947996139526
    2. ' for' → logprob: -1.44154953956604
    3. 'for' (adapté à ' for') → logprob: -4.191549301147461
    4. '    ' → logprob: -4.566549301147461
    5. '    
' → logprob: -5.816549301147461
    6. '
' → logprob: -5.816549301147461
    7. ' i' → logprob: -6.691549301147461
    8. ' 
' → logprob: -7.566549301147461
    9. '```' → logprob: -7.941549301147461
    10. '     
' → logprob: -8.316549301147461

Token 190: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007128907833248377
    2. 'i' → logprob: -5.007128715515137
    3. ' x' → logprob: -8.757128715515137
    4. ' _' → logprob: -9.132128715515137
    5. '_' → logprob: -10.007128715515137
    6. ' k' → logprob: -10.257128715515137
    7. ' ' → logprob: -11.257128715515137
    8. 'x' → logprob: -11.757128715515137
    9. '_i' → logprob: -11.757128715515137
    10. ' n' → logprob: -12.007128715515137

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012683515436947346
    2. 'in' → logprob: -4.387683391571045
    3. ' ' → logprob: -8.887683868408203
    4. '_' → logprob: -12.012683868408203
    5. ' i' → logprob: -12.137683868408203
    6. ',' → logprob: -12.262683868408203
    7. 'n' → logprob: -12.387683868408203
    8. '   ' → logprob: -12.762683868408203
    9. '	in' → logprob: -12.762683868408203
    10. '  ' → logprob: -13.262683868408203

Token 192: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011051355861127377
    2. ' range' → logprob: -4.511051177978516
    3. '(range' → logprob: -13.261051177978516
    4. '	range' → logprob: -14.136051177978516
    5. '   ' → logprob: -15.011051177978516
    6. '  ' → logprob: -15.261051177978516
    7. ' ' → logprob: -15.261051177978516
    8. 'rang' → logprob: -16.011051177978516
    9. '    ' → logprob: -16.761051177978516
    10. 'ange' → logprob: -17.886051177978516

Token 193: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11817818135023117
    2. '(len' → logprob: -2.368178129196167
    3. '3' → logprob: -4.118178367614746
    4. 'len' → logprob: -6.618178367614746
    5. '2' → logprob: -8.743178367614746
    6. ' ' → logprob: -11.118178367614746
    7. ' len' → logprob: -11.743178367614746
    8. '   ' → logprob: -11.743178367614746
    9. ' (' → logprob: -12.368178367614746
    10. '    ' → logprob: -12.868178367614746

Token 194: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011918483301997185
    2. 'len' → logprob: -4.636918544769287
    3. '2' → logprob: -6.261918544769287
    4. '(len' → logprob: -9.011918067932129
    5. ' ' → logprob: -9.761918067932129
    6. '(' → logprob: -10.386918067932129
    7. ' len' → logprob: -10.886918067932129
    8. '   ' → logprob: -11.136918067932129
    9. '  ' → logprob: -12.511918067932129
    10. '    ' → logprob: -13.511918067932129

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018006093159783632
    2. ' ,' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.7501802444458
    4. 'upper' → logprob: -16.000179290771484
    5. ',len' → logprob: -16.000179290771484
    6. ',
' → logprob: -17.625179290771484
    7. ' ' → logprob: -17.750179290771484
    8. ' upper' → logprob: -17.875179290771484
    9. ',int' → logprob: -18.250179290771484
    10. '    ' → logprob: -18.625179290771484

Token 196: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.0889601856470108
    2. 'upper' → logprob: -2.4639601707458496
    3. '   ' → logprob: -11.213960647583008
    4. '.upper' → logprob: -12.463960647583008
    5. '    ' → logprob: -13.838960647583008
    6. '_upper' → logprob: -14.713960647583008
    7. ' ' → logprob: -14.838960647583008
    8. '
' → logprob: -15.088960647583008
    9. ')' → logprob: -15.588960647583008
    10. ' upp' → logprob: -15.838960647583008

Token 197: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16459234058856964
    2. ' +' → logprob: -1.9145923852920532
    3. '):
' → logprob: -5.539592266082764
    4. '):' → logprob: -7.789592266082764
    5. '   ' → logprob: -12.539592742919922
    6. ' ):
' → logprob: -12.539592742919922
    7. ',' → logprob: -12.664592742919922
    8. ' ' → logprob: -13.164592742919922
    9. '  ' → logprob: -14.664592742919922
    10. '-' → logprob: -14.664592742919922

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01564154028892517
    2. ':' → logprob: -4.640641689300537
    3. '   ' → logprob: -5.515641689300537
    4. ',' → logprob: -6.765641689300537
    5. ':
' → logprob: -8.890641212463379
    6. '[' → logprob: -9.515641212463379
    7. '):
' → logprob: -9.640641212463379
    8. '):' → logprob: -9.890641212463379
    9. ' :' → logprob: -10.015641212463379
    10. '	' → logprob: -10.015641212463379

Token 199: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.01418207585811615
    2. 'val' → logprob: -5.264182090759277
    3. 'value' → logprob: -5.514182090759277
    4. 'factor' → logprob: -5.889182090759277
    5. '       ' → logprob: -7.139182090759277
    6. 'next' → logprob: -7.889182090759277
    7. '   ' → logprob: -8.264182090759277
    8. ' fact' → logprob: -8.639182090759277
    9. 'new' → logprob: -9.264182090759277
    10. 'f' → logprob: -9.639182090759277

Token 200: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. ' _' → logprob: -18.125
    4. '```' → logprob: -18.125
    5. '[_' → logprob: -18.25
    6. '._' → logprob: -18.75
    7. '##_' → logprob: -19.125
    8. '\' → logprob: -19.375
    9. '?_' → logprob: -19.5
    10. '"_' → logprob: -19.75

Token 201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6047699318733066e-05
    2. ' ' → logprob: -11.750016212463379
    3. 'fact' → logprob: -12.500016212463379
    4. '_' → logprob: -13.000016212463379
    5. '[' → logprob: -13.625016212463379
    6. '```' → logprob: -15.375016212463379
    7. '   ' → logprob: -15.500016212463379
    8. 'factor' → logprob: -16.250015258789062
    9. '
' → logprob: -16.625015258789062
    10. '₂' → logprob: -16.625015258789062

Token 202: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008821140974760056
    2. '.' → logprob: -4.7588210105896
    3. ' .' → logprob: -9.008821487426758
    4. '[-' → logprob: -10.633821487426758
    5. '[n' → logprob: -11.258821487426758
    6. 'append' → logprob: -11.383821487426758
    7. '[' → logprob: -11.758821487426758
    8. '=' → logprob: -11.883821487426758
    9. ',' → logprob: -12.258821487426758
    10. '.extend' → logprob: -12.258821487426758

Token 203: '(f' (ID: 1526)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.08484581857919693
    2. '(' → logprob: -3.209845781326294
    3. '(f' → logprob: -3.709845781326294
    4. '(((' → logprob: -4.584846019744873
    5. '(mod' → logprob: -5.334846019744873
    6. '(
' → logprob: -7.459846019744873
    7. '((((' → logprob: -7.959846019744873
    8. '(-' → logprob: -9.334845542907715
    9. '(pow' → logprob: -9.334845542907715
    10. '(n' → logprob: -9.709845542907715

Token 204: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.021084338426589966
    2. '(act' → logprob: -4.521084308624268
    3. '(' → logprob: -4.646084308624268
    4. '(f' → logprob: -9.771084785461426
    5. '((' → logprob: -9.896084785461426
    6. '(a' → logprob: -10.396084785461426
    7. 'a' → logprob: -10.396084785461426
    8. '[' → logprob: -10.646084785461426
    9. 'ac' → logprob: -10.646084785461426
    10. '(n' → logprob: -10.896084785461426

Token 205: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.643152740551159e-05
    2. '[-' → logprob: -10.625036239624023
    3. '[n' → logprob: -12.000036239624023
    4. '2' → logprob: -13.125036239624023
    5. '[_' → logprob: -13.625036239624023
    6. '[(' → logprob: -14.250036239624023
    7. '[' → logprob: -14.375036239624023
    8. '-' → logprob: -15.625036239624023
    9. '
' → logprob: -15.750036239624023
    10. '```' → logprob: -15.750036239624023

Token 206: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0035688269417732954
    2. '(n' → logprob: -6.253568649291992
    3. '_' → logprob: -6.753568649291992
    4. 'n' → logprob: -8.003568649291992
    5. '[n' → logprob: -9.753568649291992
    6. ' ' → logprob: -11.003568649291992
    7. '-' → logprob: -11.503568649291992
    8. '   ' → logprob: -11.753568649291992
    9. '```' → logprob: -11.878568649291992
    10. '
' → logprob: -12.003568649291992

Token 207: '[n' (ID: 15433)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.006719759665429592
    2. '[n' → logprob: -5.006719589233398
    3. '[' → logprob: -13.631719589233398
    4. '
' → logprob: -13.631719589233398
    5. 'n' → logprob: -13.881719589233398
    6. '[
' → logprob: -15.006719589233398
    7. '```' → logprob: -15.131719589233398
    8. '   ' → logprob: -15.256719589233398
    9. '

' → logprob: -17.1317195892334
    10. ' [-' → logprob: -17.2567195892334

Token 208: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009724444826133549
    2. ' -' → logprob: -7.125972270965576
    3. '2' → logprob: -9.625972747802734
    4. ']' → logprob: -9.750972747802734
    5. '1' → logprob: -10.500972747802734
    6. '-
' → logprob: -11.625972747802734
    7. ' ' → logprob: -12.750972747802734
    8. '```' → logprob: -13.625972747802734
    9. '
' → logprob: -14.125972747802734
    10. '' → logprob: -14.625972747802734

Token 209: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6938550472259521
    2. '2' → logprob: -0.6938550472259521
    3. '
' → logprob: -8.318855285644531
    4. '```' → logprob: -9.443855285644531
    5. '3' → logprob: -9.818855285644531
    6. '   ' → logprob: -9.943855285644531
    7. ' ' → logprob: -10.131355285644531
    8. ')' → logprob: -10.568855285644531
    9. '

' → logprob: -10.631355285644531
    10. '  ' → logprob: -11.068855285644531

Token 210: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36975544691085815
    2. '+' → logprob: -1.494755506515503
    3. ']+' → logprob: -2.869755506515503
    4. '^' → logprob: -4.619755268096924
    5. '*' → logprob: -5.244755268096924
    6. ' +' → logprob: -5.369755268096924
    7. ')' → logprob: -5.619755268096924
    8. ' ^' → logprob: -6.619755268096924
    9. '%' → logprob: -6.869755268096924
    10. '])' → logprob: -7.994755268096924

Token 211: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33871990442276
    2. '*' → logprob: -2.0887198448181152
    3. '^' → logprob: -2.4637198448181152
    4. ' ^' → logprob: -3.0887198448181152
    5. ' +' → logprob: -3.5887198448181152
    6. ' *' → logprob: -5.838719844818115
    7. ')' → logprob: -7.338719844818115
    8. '%' → logprob: -7.338719844818115
    9. '|' → logprob: -8.213720321655273
    10. '-' → logprob: -8.838720321655273

Token 212: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.42274901270866394
    2. 'fact' → logprob: -1.9227490425109863
    3. 'n' → logprob: -2.4227490425109863
    4. '2' → logprob: -2.4227490425109863
    5. ' (' → logprob: -5.422749042510986
    6. 'mod' → logprob: -6.047749042510986
    7. '3' → logprob: -6.047749042510986
    8. ' fact' → logprob: -6.047749042510986
    9. ' n' → logprob: -6.047749042510986
    10. '(' → logprob: -6.172749042510986

Token 213: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5470274686813354
    2. '(n' → logprob: -0.9220274686813354
    3. '2' → logprob: -4.172027587890625
    4. 'fact' → logprob: -5.047027587890625
    5. '(' → logprob: -7.297027587890625
    6. '4' → logprob: -8.297027587890625
    7. ' (' → logprob: -8.797027587890625
    8. '3' → logprob: -8.797027587890625
    9. 'mod' → logprob: -9.547027587890625
    10. 'f' → logprob: -9.797027587890625

Token 214: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.021316003054380417
    2. ' -' → logprob: -3.8963160514831543
    3. '*' → logprob: -7.396316051483154
    4. ' *' → logprob: -9.771315574645996
    5. ' ' → logprob: -9.896315574645996
    6. '   ' → logprob: -11.271315574645996
    7. '1' → logprob: -12.021315574645996
    8. '```' → logprob: -12.146315574645996
    9. '*(' → logprob: -12.396315574645996
    10. 'n' → logprob: -12.521315574645996

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006097892764955759
    2. '2' → logprob: -5.631097793579102
    3. '(n' → logprob: -6.256097793579102
    4. 'n' → logprob: -7.756097793579102
    5. '(' → logprob: -9.631097793579102
    6. ' ' → logprob: -10.256097793579102
    7. '-' → logprob: -11.381097793579102
    8. '3' → logprob: -11.756097793579102
    9. '```' → logprob: -12.131097793579102
    10. '
' → logprob: -12.693597793579102

Token 216: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6480150818824768
    2. ' %' → logprob: -1.273015022277832
    3. '%' → logprob: -1.648015022277832
    4. '*' → logprob: -6.148015022277832
    5. ')%' → logprob: -6.398015022277832
    6. '+' → logprob: -8.273015022277832
    7. ' *' → logprob: -8.273015022277832
    8. '   ' → logprob: -9.648015022277832
    9. ' )' → logprob: -10.148015022277832
    10. ' ' → logprob: -10.773015022277832

Token 217: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3869048058986664
    2. ' %' → logprob: -1.1369048357009888
    3. ')' → logprob: -10.3869047164917
    4. ' ' → logprob: -14.2619047164917
    5. '*' → logprob: -14.5119047164917
    6. '   ' → logprob: -14.7619047164917
    7. ')%' → logprob: -15.0119047164917
    8. ' ' → logprob: -15.1369047164917
    9. '
' → logprob: -16.011905670166016
    10. '```' → logprob: -16.011905670166016

Token 218: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01815006136894226
    2. ' mod' → logprob: -4.0181498527526855
    3. '(mod' → logprob: -15.893150329589844
    4. '	mod' → logprob: -17.768150329589844
    5. '
' → logprob: -19.893150329589844
    6. ' ' → logprob: -20.518150329589844
    7. ' мод' → logprob: -22.393150329589844
    8. '```' → logprob: -22.518150329589844
    9. 'modal' → logprob: -22.768150329589844
    10. '_mod' → logprob: -23.018150329589844

Token 219: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027718624914996326
    2. ' )' → logprob: -8.375277519226074
    3. '   ' → logprob: -10.250277519226074
    4. ')
' → logprob: -11.750277519226074
    5. '))' → logprob: -14.125277519226074
    6. '       ' → logprob: -14.250277519226074
    7. ' ' → logprob: -15.000277519226074
    8. '),' → logprob: -15.375277519226074
    9. '*' → logprob: -15.875277519226074
    10. ')n' → logprob: -15.875277519226074

Token 220: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26186129450798035
    2. '   ' → logprob: -1.6368613243103027
    3. '<|end|>' → logprob: -3.5118613243103027
    4. ')' → logprob: -6.636861324310303
    5. ' ' → logprob: -6.886861324310303
    6. '<|end|>' → logprob: -7.511861324310303
    7. '	' → logprob: -7.636861324310303
    8. '
' → logprob: -7.761861324310303
    9. ' return' → logprob: -8.136860847473145
    10. 'return' → logprob: -8.136860847473145

Token 221: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.023246178403496742
    2. 'fact' → logprob: -3.7732462882995605
    3. '_fact' → logprob: -14.523245811462402
    4. 'Fact' → logprob: -16.14824676513672
    5. '.fact' → logprob: -17.39824676513672
    6. ' fakt' → logprob: -18.02324676513672
    7. ' facto' → logprob: -20.14824676513672
    8. 'None' → logprob: -21.14824676513672
    9. 'factor' → logprob: -21.14824676513672
    10. ' ' → logprob: -21.39824676513672

Token 223: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.44574936106801e-05
    2. 't' → logprob: -10.00007438659668
    3. 'ct' → logprob: -11.00007438659668
    4. 'c' → logprob: -11.87507438659668
    5. 'f' → logprob: -12.50007438659668
    6. 'fact' → logprob: -15.37507438659668
    7. '```' → logprob: -15.37507438659668
    8. '__' → logprob: -15.75007438659668
    9. 'x' → logprob: -15.75007438659668
    10. ' _' → logprob: -16.00007438659668

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '₂' → logprob: -15.875
    3. ' ' → logprob: -16.875
    4. '۲' → logprob: -17.5
    5. '_' → logprob: -17.5
    6. 'fact' → logprob: -17.625
    7. '²' → logprob: -17.625
    8. '[' → logprob: -18.125
    9. '２' → logprob: -18.25
    10. 's' → logprob: -18.25

Token 225: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10095889866352081
    2. '<|end|>' → logprob: -2.350958824157715
    3. '<|end|>' → logprob: -7.850958824157715
    4. '```' → logprob: -8.725958824157715
    5. '
' → logprob: -9.600958824157715
    6. '#' → logprob: -9.850958824157715
    7. ')' → logprob: -10.225958824157715
    8. '[' → logprob: -11.475958824157715
    9. ' def' → logprob: -11.850958824157715
    10. 'from' → logprob: -12.600958824157715

Token 227: ' numpy' (ID: 19529)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4599784016609192
    2. 'count' → logprob: -1.8349783420562744
    3. ' main' → logprob: -3.2099783420562744
    4. 'calculate' → logprob: -3.2099783420562744
    5. 'factor' → logprob: -3.4599783420562744
    6. 'solve' → logprob: -4.2099785804748535
    7. 'compute' → logprob: -4.4599785804748535
    8. ' count' → logprob: -4.5849785804748535
    9. 'expand' → logprob: -4.7099785804748535
    10. 'comb' → logprob: -4.9599785804748535

Token 228: '_array' (ID: 8766)
  Prédit: '.ndarray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.ndarray' → logprob: -1.3958203792572021
    2. '.linalg' → logprob: -1.8958203792572021
    3. '.arange' → logprob: -2.770820379257202
    4. '.' → logprob: -2.895820379257202
    5. '.array' → logprob: -2.895820379257202
    6. '.zeros' → logprob: -2.895820379257202
    7. '.asarray' → logprob: -2.895820379257202
    8. ' def' → logprob: -2.895820379257202
    9. '.random' → logprob: -3.395820379257202
    10. 'def' → logprob: -3.520820379257202

Token 229: '_int' (ID: 12285)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.48024827241897583
    2. '(shape' → logprob: -1.730248212814331
    3. '(n' → logprob: -1.855248212814331
    4. '(' → logprob: -3.355248212814331
    5. '(length' → logprob: -5.98024845123291
    6. '(dtype' → logprob: -6.23024845123291
    7. '(array' → logprob: -6.60524845123291
    8. '(f' → logprob: -6.98024845123291
    9. '_like' → logprob: -7.35524845123291
    10. '(arr' → logprob: -7.48024845123291

Token 230: '64' (ID: 2220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -1.6627476215362549
    2. 'er' → logprob: -2.162747621536255
    3. '64' → logprob: -2.162747621536255
    4. 'ernal' → logprob: -2.162747621536255
    5. 'ialize' → logprob: -2.537747621536255
    6. '(size' → logprob: -2.787747621536255
    7. 'eger' → logprob: -2.787747621536255
    8. 'ent' → logprob: -2.787747621536255
    9. '_array' → logprob: -3.037747621536255
    10. '8' → logprob: -3.162747621536255

Token 231: '(l' (ID: 4179)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.1318819522857666
    2. '():' → logprob: -2.2568819522857666
    3. '(shape' → logprob: -4.6318817138671875
    4. '(' → logprob: -5.1318817138671875
    5. '(n' → logprob: -6.2568817138671875
    6. '(length' → logprob: -7.6318817138671875
    7. '():
' → logprob: -8.506881713867188
    8. '(name' → logprob: -9.006881713867188
    9. '(sz' → logprob: -9.381881713867188
    10. '(dim' → logprob: -9.381881713867188

Token 232: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.27175217866897583
    2. 'ist' → logprob: -1.646752119064331
    3. '):' → logprob: -3.146752119064331
    4. ')(' → logprob: -7.27175235748291
    5. '):
' → logprob: -7.52175235748291
    6. '):

' → logprob: -7.52175235748291
    7. ')' → logprob: -7.89675235748291
    8. '=[]' → logprob: -10.89675235748291
    9. ' ):
' → logprob: -11.02175235748291
    10. '](' → logprob: -11.14675235748291

Token 233: '   ' (ID: 271)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.8803902864456177
    2. '   ' → logprob: -1.6303902864456177
    3. 'return' → logprob: -1.6303902864456177
    4. ' np' → logprob: -2.130390167236328
    5. ' return' → logprob: -2.630390167236328
    6. '(np' → logprob: -5.880390167236328
    7. '=np' → logprob: -10.880390167236328
    8. '[np' → logprob: -11.880390167236328
    9. '	return' → logprob: -12.255390167236328
    10. ':return' → logprob: -12.630390167236328

Token 234: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14828813076019287
    2. 'np' → logprob: -2.1482882499694824
    3. ' return' → logprob: -4.023288249969482
    4. ' np' → logprob: -5.898288249969482
    5. '   ' → logprob: -7.648288249969482
    6. 'import' → logprob: -11.148287773132324
    7. '(np' → logprob: -14.148287773132324
    8. ' ' → logprob: -14.273287773132324
    9. '	return' → logprob: -14.273287773132324
    10. '=np' → logprob: -14.273287773132324

Token 235: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0015023599844425917
    2. ' np' → logprob: -6.501502513885498
    3. 'numpy' → logprob: -16.626502990722656
    4. '(np' → logprob: -18.876502990722656
    5. '=np' → logprob: -20.751502990722656
    6. 'n' → logprob: -21.126502990722656
    7. 'import' → logprob: -21.126502990722656
    8. '_np' → logprob: -21.376502990722656
    9. ' ' → logprob: -22.001502990722656
    10. ' numpy' → logprob: -22.501502990722656

Token 236: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.0011353354202583432
    2. '.ndarray' → logprob: -7.001135349273682
    3. '.asarray' → logprob: -8.501134872436523
    4. '.int' → logprob: -11.876134872436523
    5. '.arange' → logprob: -12.001134872436523
    6. 'array' → logprob: -12.376134872436523
    7. '.zeros' → logprob: -13.751134872436523
    8. '.' → logprob: -14.251134872436523
    9. '.astype' → logprob: -14.376134872436523
    10. '.Array' → logprob: -14.876134872436523

Token 237: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -4.632542913896032e-05
    2. '(' → logprob: -10.000046730041504
    3. '(list' → logprob: -14.875046730041504
    4. '([' → logprob: -15.625046730041504
    5. '[l' → logprob: -16.375045776367188
    6. ' (' → logprob: -16.625045776367188
    7. '(
' → logprob: -16.875045776367188
    8. ',l' → logprob: -17.125045776367188
    9. '(ll' → logprob: -17.625045776367188
    10. '(lst' → logprob: -17.750045776367188

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03812158480286598
    2. ',d' → logprob: -3.2881217002868652
    3. ',np' → logprob: -10.038121223449707
    4. ' ,' → logprob: -10.913121223449707
    5. ',int' → logprob: -11.913121223449707
    6. ',n' → logprob: -12.663121223449707
    7. ',l' → logprob: -12.663121223449707
    8. ',s' → logprob: -13.913121223449707
    9. ',ll' → logprob: -14.288121223449707
    10. ',type' → logprob: -14.663121223449707

Token 239: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.0016601856332272291
    2. 'np' → logprob: -6.751660346984863
    3. ' dtype' → logprob: -7.626660346984863
    4. '   ' → logprob: -13.626660346984863
    5. ' np' → logprob: -14.376660346984863
    6. '  ' → logprob: -14.876660346984863
    7. ' ' → logprob: -16.001659393310547
    8. '(dtype' → logprob: -16.501659393310547
    9. 'int' → logprob: -16.751659393310547
    10. '
' → logprob: -17.001659393310547

Token 240: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.0002627662615850568
    2. '=' → logprob: -8.250263214111328
    3. '=n' → logprob: -14.125263214111328
    4. '=int' → logprob: -14.250263214111328
    5. '=
' → logprob: -17.000263214111328
    6. ' =' → logprob: -17.750263214111328
    7. 'np' → logprob: -17.875263214111328
    8. '=pd' → logprob: -18.250263214111328
    9. ' np' → logprob: -18.625263214111328
    10. '(np' → logprob: -18.750263214111328

Token 241: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -7.660315895918757e-05
    2. 'int' → logprob: -9.500076293945312
    3. '.uint' → logprob: -13.375076293945312
    4. '.' → logprob: -16.250076293945312
    5. '.i' → logprob: -17.750076293945312
    6. ' int' → logprob: -18.000076293945312
    7. '.Int' → logprob: -18.875076293945312
    8. '.float' → logprob: -19.000076293945312
    9. '=int' → logprob: -19.250076293945312
    10. '```' → logprob: -19.250076293945312

Token 242: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -6.704273118884885e-07
    2. 'int' → logprob: -14.375000953674316
    3. '6' → logprob: -17.5
    4. 'np' → logprob: -19.625
    5. 'c' → logprob: -21.0
    6. '[int' → logprob: -21.625
    7. 'dtype' → logprob: -21.75
    8. 'p' → logprob: -22.0
    9. '62' → logprob: -22.0
    10. '65' → logprob: -22.625

Token 243: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.625
    3. ' )' → logprob: -16.5
    4. '<|end|>' → logprob: -17.125
    5. '())' → logprob: -18.0
    6. ')return' → logprob: -18.375
    7. ')#' → logprob: -18.625
    8. '))' → logprob: -18.875
    9. '),' → logprob: -19.0
    10. '')' → logprob: -19.125

Token 244: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' zeros' (ID: 42274)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2019028663635254
    2. 'main' → logprob: -2.3269028663635254
    3. ' numpy' → logprob: -3.5769028663635254
    4. ' factorial' → logprob: -4.076902866363525
    5. 'numpy' → logprob: -5.201902866363525
    6. ' solve' → logprob: -5.701902866363525
    7. ' multiply' → logprob: -5.826902866363525
    8. ' fill' → logprob: -6.326902866363525
    9. ' count' → logprob: -6.326902866363525
    10. ' matrix' → logprob: -6.326902866363525

Token 246: '_array' (ID: 8766)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49486035108566284
    2. '((' → logprob: -1.6198604106903076
    3. '_like' → logprob: -1.7448604106903076
    4. '(n' → logprob: -4.4948601722717285
    5. '_' → logprob: -6.2448601722717285
    6. '(np' → logprob: -6.7448601722717285
    7. '(shape' → logprob: -6.9948601722717285
    8. ' (' → logprob: -7.2448601722717285
    9. '(size' → logprob: -7.8698601722717285
    10. '<|end|>' → logprob: -7.8698601722717285

Token 247: '(length' (ID: 47037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22440943121910095
    2. '((' → logprob: -2.099409341812134
    3. '(n' → logprob: -2.599409341812134
    4. ' (' → logprob: -7.474409580230713
    5. '<|end|>' → logprob: -7.474409580230713
    6. '(size' → logprob: -7.599409580230713
    7. '(np' → logprob: -7.724409580230713
    8. '(
' → logprob: -7.974409580230713
    9. '(shape' → logprob: -7.974409580230713
    10. '=(' → logprob: -8.099409103393555

Token 248: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031045788899064064
    2. '):
' → logprob: -3.78104567527771
    3. ')' → logprob: -5.406045913696289
    4. ',' → logprob: -5.781045913696289
    5. '):

' → logprob: -9.906045913696289
    6. '(length' → logprob: -10.156045913696289
    7. ' ):' → logprob: -10.781045913696289
    8. '(size' → logprob: -10.781045913696289
    9. ',length' → logprob: -10.906045913696289
    10. '(n' → logprob: -11.406045913696289

Token 249: '   ' (ID: 271)
  Prédit: '(np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -0.6149723529815674
    2. 'return' → logprob: -1.2399723529815674
    3. '   ' → logprob: -2.2399723529815674
    4. '(n' → logprob: -3.4899723529815674
    5. ' return' → logprob: -4.364972114562988
    6. 'np' → logprob: -4.739972114562988
    7. '(' → logprob: -5.114972114562988
    8. 'def' → logprob: -5.864972114562988
    9. '(length' → logprob: -6.989972114562988
    10. '(size' → logprob: -8.114972114562988

Token 250: ' return' (ID: 622)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.25783976912498474
    2. 'return' (adapté à ' return') → logprob: -1.5078397989273071
    3. ' np' → logprob: -5.882839679718018
    4. ' return' → logprob: -6.007839679718018
    5. '   ' → logprob: -7.382839679718018
    6. '[np' → logprob: -11.007840156555176
    7. '=np' → logprob: -12.757840156555176
    8. '(np' → logprob: -12.757840156555176
    9. '	return' → logprob: -14.132840156555176
    10. ' ' → logprob: -14.507840156555176

Token 251: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.004130403511226177
    2. ' np' → logprob: -5.5041303634643555
    3. '[np' → logprob: -10.004130363464355
    4. '[' → logprob: -12.254130363464355
    5. ' [' → logprob: -13.504130363464355
    6. '(np' → logprob: -15.129130363464355
    7. 'numpy' → logprob: -15.379130363464355
    8. '=np' → logprob: -16.379131317138672
    9. '[n' → logprob: -17.004131317138672
    10. '   ' → logprob: -17.004131317138672

Token 252: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -9.088346359931165e-07
    2. ' zeros' → logprob: -15.125000953674316
    3. 'zeros' → logprob: -15.375000953674316
    4. '.array' → logprob: -15.500000953674316
    5. '.ndarray' → logprob: -15.500000953674316
    6. '=zeros' → logprob: -17.25
    7. '.' → logprob: -17.375
    8. '.zero' → logprob: -19.125
    9. 'Zeros' → logprob: -19.75
    10. '.ones' → logprob: -19.875

Token 253: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.00045152619713917375
    2. '(' → logprob: -7.750451564788818
    3. '((' → logprob: -11.37545108795166
    4. ' (' → logprob: -12.62545108795166
    5. ',length' → logprob: -12.75045108795166
    6. 'length' → logprob: -13.87545108795166
    7. '(int' → logprob: -14.37545108795166
    8. '(
' → logprob: -14.62545108795166
    9. '[length' → logprob: -14.87545108795166
    10. '<|end|>' → logprob: -15.37545108795166

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007688904879614711
    2. ')' → logprob: -7.625768661499023
    3. ',d' → logprob: -8.250768661499023
    4. ' ,' → logprob: -11.000768661499023
    5. ',int' → logprob: -13.625768661499023
    6. 'dtype' → logprob: -13.750768661499023
    7. ',)' → logprob: -15.750768661499023
    8. ')d' → logprob: -16.250768661499023
    9. 'd' → logprob: -16.500768661499023
    10. ',np' → logprob: -16.625768661499023

Token 255: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.025382328778505325
    2. ' dtype' → logprob: -3.7753822803497314
    3. 'np' → logprob: -6.2753825187683105
    4. 'int' → logprob: -8.775382041931152
    5. ' np' → logprob: -9.275382041931152
    6. ')' → logprob: -12.775382041931152
    7. '(dtype' → logprob: -15.025382041931152
    8. ' int' → logprob: -15.025382041931152
    9. '   ' → logprob: -15.275382041931152
    10. ',np' → logprob: -16.15038299560547

Token 256: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.0003625177196227014
    2. '=int' → logprob: -8.500362396240234
    3. '=' → logprob: -8.750362396240234
    4. '=n' → logprob: -15.000362396240234
    5. '=
' → logprob: -16.250362396240234
    6. 'np' → logprob: -16.500362396240234
    7. ' =' → logprob: -16.625362396240234
    8. '(np' → logprob: -18.500362396240234
    9. ' np' → logprob: -18.500362396240234
    10. '=torch' → logprob: -19.000362396240234

Token 257: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.002395390532910824
    2. 'int' → logprob: -6.127395153045654
    3. '.uint' → logprob: -8.502395629882812
    4. '.bool' → logprob: -12.752395629882812
    5. '.float' → logprob: -12.752395629882812
    6. 'uint' → logprob: -14.627395629882812
    7. ' int' → logprob: -14.627395629882812
    8. '=int' → logprob: -16.002395629882812
    9. '```' → logprob: -16.002395629882812
    10. ']int' → logprob: -16.377395629882812

Token 258: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -6.704273118884885e-07
    2. 'int' → logprob: -15.000000953674316
    3. '32' → logprob: -15.000000953674316
    4. '6' → logprob: -17.5
    5. '8' → logprob: -17.625
    6. 'np' → logprob: -18.0
    7. 'p' → logprob: -19.125
    8. '[int' → logprob: -20.125
    9. 'array' → logprob: -20.25
    10. 'dtype' → logprob: -20.625

Token 259: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.750000953674316
    3. '))' → logprob: -17.25
    4. ' )' → logprob: -17.375
    5. '())' → logprob: -17.75
    6. '),' → logprob: -18.0
    7. ')

' → logprob: -18.375
    8. '')' → logprob: -18.625
    9. 'def' → logprob: -18.875
    10. ')return' → logprob: -18.875

Token 260: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004097003838978708
    2. 'class' → logprob: -8.875410079956055
    3. '#' → logprob: -9.000410079956055
    4. '<|end|>' → logprob: -9.875410079956055
    5. 'from' → logprob: -10.500410079956055
    6. ')' → logprob: -10.500410079956055
    7. '```' → logprob: -10.500410079956055
    8. 'import' → logprob: -12.375410079956055
    9. '[' → logprob: -13.500410079956055
    10. '@dat' → logprob: -13.500410079956055

Token 261: ' dp' (ID: 21546)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4842326045036316
    2. 'main' → logprob: -2.3592326641082764
    3. ' count' → logprob: -3.4842326641082764
    4. ' solve' → logprob: -3.8592326641082764
    5. ' bfs' → logprob: -3.8592326641082764
    6. ' fill' → logprob: -3.9842326641082764
    7. ' dfs' → logprob: -4.109232425689697
    8. ' zeros' → logprob: -4.234232425689697
    9. 'count' → logprob: -4.234232425689697
    10. 'dfs' → logprob: -4.484232425689697

Token 262: '_merge' (ID: 50662)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3881561756134033
    2. '_' → logprob: -1.3881561756134033
    3. '_array' → logprob: -1.6381561756134033
    4. ' =' → logprob: -2.7631561756134033
    5. '_states' → logprob: -2.7631561756134033
    6. '(dp' → logprob: -3.6381561756134033
    7. '_length' → logprob: -3.7631561756134033
    8. '_dp' → logprob: -4.263155937194824
    9. '_size' → logprob: -4.513155937194824
    10. ':' → logprob: -4.513155937194824

Token 263: '_core' (ID: 32989)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.41371479630470276
    2. '(' → logprob: -1.7887147665023804
    3. '(a' → logprob: -1.9137147665023804
    4. '(left' → logprob: -4.28871488571167
    5. '(graph' → logprob: -5.66371488571167
    6. '(d' → logprob: -6.66371488571167
    7. '(parent' → logprob: -7.03871488571167
    8. '(l' → logprob: -7.16371488571167
    9. '(node' → logprob: -7.91371488571167
    10. '(state' → logprob: -8.163714408874512

Token 264: '(data' (ID: 4819)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.12628771364688873
    2. '(' → logprob: -2.6262876987457275
    3. '(a' → logprob: -3.6262876987457275
    4. '():' → logprob: -5.001287937164307
    5. '(left' → logprob: -6.251287937164307
    6. '(d' → logprob: -7.126287937164307
    7. '(prev' → logprob: -7.126287937164307
    8. '(graph' → logprob: -7.251287937164307
    9. '(l' → logprob: -7.251287937164307
    10. '(n' → logprob: -7.376287937164307

Token 265: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04152974113821983
    2. '):' → logprob: -3.291529655456543
    3. '):
' → logprob: -7.041529655456543
    4. '   ' → logprob: -7.541529655456543
    5. ' ,' → logprob: -7.666529655456543
    6. '_,' → logprob: -8.166529655456543
    7. ')' → logprob: -8.416529655456543
    8. 's' → logprob: -8.916529655456543
    9. '1' → logprob: -8.916529655456543
    10. ',data' → logprob: -9.041529655456543

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001999534899368882
    2. ',data' → logprob: -6.876999378204346
    3. ' ,' → logprob: -7.501999378204346
    4. '):' → logprob: -8.126999855041504
    5. '[' → logprob: -10.876999855041504
    6. ')' → logprob: -11.126999855041504
    7. '[data' → logprob: -11.251999855041504
    8. ',
' → logprob: -11.626999855041504
    9. '):
' → logprob: -11.751999855041504
    10. ',n' → logprob: -12.126999855041504

Token 267: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.11303781718015671
    2. ' data' → logprob: -2.2380378246307373
    3. '   ' → logprob: -9.613038063049316
    4. ' ' → logprob: -9.988038063049316
    5. 'dp' → logprob: -11.425538063049316
    6. 'd' → logprob: -11.488038063049316
    7. '  ' → logprob: -11.488038063049316
    8. 'dat' → logprob: -11.675538063049316
    9. 'arr' → logprob: -12.300538063049316
    10. '    ' → logprob: -12.613038063049316

Token 268: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04492165520787239
    2. '2' → logprob: -3.544921636581421
    3. ',' → logprob: -4.294921875
    4. '_' → logprob: -7.294921875
    5. '):' → logprob: -8.419921875
    6. '):
' → logprob: -8.669921875
    7. '_,' → logprob: -8.919921875
    8. ',_' → logprob: -10.419921875
    9. '[' → logprob: -10.669921875
    10. '),' → logprob: -10.669921875

Token 269: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11182589083909988
    2. ',' → logprob: -2.361825942993164
    3. '):
' → logprob: -4.486825942993164
    4. ')' → logprob: -8.986825942993164
    5. ' ):' → logprob: -9.611825942993164
    6. '):
' → logprob: -10.236825942993164
    7. '   ' → logprob: -11.486825942993164
    8. ' ,' → logprob: -11.611825942993164
    9. '[' → logprob: -11.736825942993164
    10. '[]):' → logprob: -11.861825942993164

Token 270: ' len' (ID: 4631)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.30356696248054504
    2. ' mod' → logprob: -1.8035669326782227
    3. 'data' → logprob: -3.3035669326782227
    4. ' data' → logprob: -4.428566932678223
    5. 'merge' → logprob: -5.678566932678223
    6. 'dp' → logprob: -5.803566932678223
    7. 'op' → logprob: -6.178566932678223
    8. ' op' → logprob: -6.241066932678223
    9. 'factor' → logprob: -6.366066932678223
    10. 'operation' → logprob: -6.428566932678223

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03024306707084179
    2. '_data' → logprob: -4.405242919921875
    3. 'g' → logprob: -4.780242919921875
    4. '(data' → logprob: -5.405242919921875
    5. 's' → logprob: -5.905242919921875
    6. 'data' → logprob: -6.530242919921875
    7. '_' → logprob: -9.030242919921875
    8. 'th' → logprob: -10.155242919921875
    9. 'h' → logprob: -10.405242919921875
    10. '):' → logprob: -10.530242919921875

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16537953913211823
    2. '):' → logprob: -1.915379524230957
    3. '):
' → logprob: -5.790379524230957
    4. ' ,' → logprob: -7.165379524230957
    5. '1' → logprob: -7.665379524230957
    6. ',data' → logprob: -8.290379524230957
    7. ')' → logprob: -8.415379524230957
    8. '_,' → logprob: -9.665379524230957
    9. ' ):' → logprob: -10.040379524230957
    10. ',len' → logprob: -10.165379524230957

Token 273: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01282016932964325
    2. ' len' → logprob: -4.387820243835449
    3. 'length' → logprob: -8.63782024383545
    4. '   ' → logprob: -10.26282024383545
    5. ' ' → logprob: -10.51282024383545
    6. ' length' → logprob: -11.01282024383545
    7. 'l' → logprob: -11.88782024383545
    8. '	len' → logprob: -11.88782024383545
    9. 'data' → logprob: -12.26282024383545
    10. '  ' → logprob: -12.32532024383545

Token 274: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009226576657965779
    2. '2' → logprob: -7.000922679901123
    3. ',' → logprob: -12.750922203063965
    4. '):
' → logprob: -13.250922203063965
    5. 'g' → logprob: -13.500922203063965
    6. ')' → logprob: -13.625922203063965
    7. 's' → logprob: -14.500922203063965
    8. ' ' → logprob: -14.625922203063965
    9. '
' → logprob: -14.750922203063965
    10. '_' → logprob: -14.750922203063965

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.070322185754776
    2. '):' → logprob: -2.695322275161743
    3. '):
' → logprob: -8.195322036743164
    4. ' ,' → logprob: -9.945322036743164
    5. '   ' → logprob: -10.945322036743164
    6. ',
' → logprob: -11.195322036743164
    7. ',data' → logprob: -11.445322036743164
    8. ' ):' → logprob: -12.195322036743164
    9. ')' → logprob: -12.820322036743164
    10. '):
' → logprob: -12.945322036743164

Token 276: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.31515470147132874
    2. ' mod' → logprob: -1.8151546716690063
    3. 'data' → logprob: -3.690154790878296
    4. 'dp' → logprob: -3.690154790878296
    5. 'result' → logprob: -4.315154552459717
    6. 'len' → logprob: -5.065154552459717
    7. ' data' → logprob: -5.440154552459717
    8. 'output' → logprob: -6.065154552459717
    9. 'out' → logprob: -6.065154552459717
    10. ' result' → logprob: -6.127654552459717

Token 277: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14630426466464996
    2. ',' → logprob: -2.0213043689727783
    3. '):
' → logprob: -5.646304130554199
    4. ')' → logprob: -10.0213041305542
    5. '   ' → logprob: -11.1463041305542
    6. ' ):' → logprob: -11.6463041305542
    7. '):
' → logprob: -11.8963041305542
    8. ',
' → logprob: -12.5213041305542
    9. ':' → logprob: -12.5213041305542
    10. ' ,' → logprob: -12.7713041305542

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05139903351664543
    2. ':' → logprob: -3.176398992538452
    3. ':
' → logprob: -6.551399230957031
    4. '	for' → logprob: -6.676399230957031
    5. '	dp' → logprob: -6.676399230957031
    6. '):' → logprob: -6.801399230957031
    7. ',' → logprob: -7.301399230957031
    8. '	data' → logprob: -7.551399230957031
    9. ')' → logprob: -8.051399230957031
    10. '):
' → logprob: -8.301399230957031

Token 279: ' data' (ID: 1238)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8808383941650391
    2. 'result' → logprob: -1.005838394165039
    3. 'res' → logprob: -2.005838394165039
    4. 'for' → logprob: -3.505838394165039
    5. '   ' → logprob: -3.630838394165039
    6. 'data' (adapté à ' data') → logprob: -4.255838394165039
    7. 'new' → logprob: -5.255838394165039
    8. 'merged' → logprob: -5.630838394165039
    9. ' result' → logprob: -7.005838394165039
    10. 'temp' → logprob: -7.130838394165039

Token 280: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09202966094017029
    2. '_' → logprob: -3.092029571533203
    3. ' =' → logprob: -3.592029571533203
    4. '=' → logprob: -5.092029571533203
    5. '2' → logprob: -6.217029571533203
    6. '[' → logprob: -6.342029571533203
    7. '=np' → logprob: -6.842029571533203
    8. '=[' → logprob: -7.342029571533203
    9. 's' → logprob: -7.842029571533203
    10. '_idx' → logprob: -8.092029571533203

Token 281: ' zeros' (ID: 42274)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.26083362102508545
    2. 'zeros' → logprob: -1.6358336210250854
    3. '[' → logprob: -3.760833740234375
    4. ' np' → logprob: -5.510833740234375
    5. ' zeros' → logprob: -5.510833740234375
    6. '[np' → logprob: -6.385833740234375
    7. ' [' → logprob: -7.135833740234375
    8. 'numpy' → logprob: -8.510833740234375
    9. '[-' → logprob: -9.010833740234375
    10. '[[' → logprob: -9.010833740234375

Token 282: '_array' (ID: 8766)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0001025895617203787
    2. '[len' → logprob: -10.000102996826172
    3. '(' → logprob: -10.375102996826172
    4. '_array' → logprob: -10.750102996826172
    5. '((' → logprob: -13.500102996826172
    6. 'len' → logprob: -14.375102996826172
    7. '([' → logprob: -14.875102996826172
    8. '(np' → logprob: -15.000102996826172
    9. ',len' → logprob: -15.125102996826172
    10. '_(' → logprob: -15.125102996826172

Token 283: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -3.054500666621607e-06
    2. '[len' → logprob: -13.25000286102295
    3. 'len' → logprob: -14.00000286102295
    4. '((' → logprob: -15.50000286102295
    5. '(' → logprob: -15.62500286102295
    6. '<len' → logprob: -17.125003814697266
    7. '=len' → logprob: -18.250003814697266
    8. ',len' → logprob: -18.625003814697266
    9. '	len' → logprob: -18.750003814697266
    10. '(length' → logprob: -19.625003814697266

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0868278524139896e-05
    2. '(data' → logprob: -9.75006103515625
    3. '(len' → logprob: -13.25006103515625
    4. ' ' → logprob: -15.50006103515625
    5. ')' → logprob: -16.00006103515625
    6. '
' → logprob: -16.37506103515625
    7. 'len' → logprob: -16.62506103515625
    8. '2' → logprob: -17.00006103515625
    9. 'data' → logprob: -17.43756103515625
    10. ')
' → logprob: -17.50006103515625

Token 285: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3133482336997986
    2. ' +' → logprob: -1.3133482933044434
    3. 'len' → logprob: -10.688347816467285
    4. '[len' → logprob: -11.188347816467285
    5. ' ' → logprob: -11.313347816467285
    6. ' len' → logprob: -11.813347816467285
    7. '<len' → logprob: -12.438347816467285
    8. '(len' → logprob: -12.438347816467285
    9. '
' → logprob: -12.563347816467285
    10. ' +
' → logprob: -12.813347816467285

Token 286: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.735893965815194e-05
    2. ' len' → logprob: -11.000017166137695
    3. '2' → logprob: -14.750017166137695
    4. '(len' → logprob: -16.375017166137695
    5. '	len' → logprob: -17.250017166137695
    6. '   ' → logprob: -17.750017166137695
    7. '=len' → logprob: -17.875017166137695
    8. '  ' → logprob: -18.125017166137695
    9. 'length' → logprob: -18.375017166137695
    10. '[len' → logprob: -19.250017166137695

Token 287: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.047134305234067e-05
    2. '1' → logprob: -10.625030517578125
    3. '+' → logprob: -13.375030517578125
    4. ' ' → logprob: -13.375030517578125
    5. '```' → logprob: -13.375030517578125
    6. ')' → logprob: -15.000030517578125
    7. '   ' → logprob: -15.500030517578125
    8. '
' → logprob: -15.500030517578125
    9. '(data' → logprob: -15.500030517578125
    10. '3' → logprob: -16.000030517578125

Token 288: ')
' (ID: 446)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16182038187980652
    2. ')' → logprob: -2.036820411682129
    3. ' -' → logprob: -4.286820411682129
    4. '+' → logprob: -5.786820411682129
    5. ')
' → logprob: -7.036820411682129
    6. '-)' → logprob: -7.036820411682129
    7. '))' → logprob: -9.661820411682129
    8. '-
' → logprob: -9.786820411682129
    9. '   ' → logprob: -9.786820411682129
    10. ' )' → logprob: -10.036820411682129

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040762655436992645
    2. ' for' → logprob: -3.5407626628875732
    3. 'for' → logprob: -4.665762424468994
    4. ')' → logprob: -7.415762424468994
    5. '	for' → logprob: -7.415762424468994
    6. '    
' → logprob: -9.415762901306152
    7. '
' → logprob: -9.415762901306152
    8. '<|end|>' → logprob: -10.040762901306152
    9. ' ' → logprob: -10.790762901306152
    10. '[' → logprob: -10.790762901306152

Token 290: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0036120666190981865
    2. '   ' → logprob: -6.378612041473389
    3. ' for' → logprob: -6.378612041473389
    4. 'i' → logprob: -8.503612518310547
    5. '	for' → logprob: -13.003612518310547
    6. '```' → logprob: -13.003612518310547
    7. ' i' → logprob: -14.503612518310547
    8. 'j' → logprob: -14.628612518310547
    9. 'dp' → logprob: -14.753612518310547
    10. 'idx' → logprob: -15.253612518310547

Token 291: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2881639301776886
    2. ' i' → logprob: -1.4131639003753662
    3. 'n' → logprob: -5.788164138793945
    4. ' n' → logprob: -6.538164138793945
    5. 'x' → logprob: -7.413164138793945
    6. 'a' → logprob: -7.538164138793945
    7. 'j' → logprob: -8.163164138793945
    8. 'l' → logprob: -8.788164138793945
    9. ' x' → logprob: -8.913164138793945
    10. ' j' → logprob: -8.913164138793945

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1649044305086136
    2. 'in' → logprob: -1.9149044752120972
    3. ' ' → logprob: -6.039904594421387
    4. '1' → logprob: -7.289904594421387
    5. ',' → logprob: -7.539904594421387
    6. '_' → logprob: -7.789904594421387
    7. 'n' → logprob: -8.539904594421387
    8. ' i' → logprob: -9.164904594421387
    9. ')' → logprob: -9.414904594421387
    10. '   ' → logprob: -10.039904594421387

Token 293: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007625199854373932
    2. ' range' → logprob: -4.882625102996826
    3. ' ' → logprob: -11.882625579833984
    4. '   ' → logprob: -12.632625579833984
    5. '  ' → logprob: -13.257625579833984
    6. 'r' → logprob: -13.382625579833984
    7. '(range' → logprob: -13.507625579833984
    8. '
' → logprob: -14.007625579833984
    9. 'in' → logprob: -14.632625579833984
    10. 'ran' → logprob: -14.632625579833984

Token 294: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.12704098224639893
    2. '(' → logprob: -2.1270408630371094
    3. '1' → logprob: -9.87704086303711
    4. 'len' → logprob: -10.00204086303711
    5. '(l' → logprob: -12.25204086303711
    6. ' (' → logprob: -12.37704086303711
    7. ' len' → logprob: -12.75204086303711
    8. '(
' → logprob: -13.87704086303711
    9. '[len' → logprob: -14.12704086303711
    10. '<len' → logprob: -14.50204086303711

Token 295: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.014196882955729961
    2. '1' → logprob: -4.264196872711182
    3. ' len' → logprob: -10.76419734954834
    4. '(len' → logprob: -11.88919734954834
    5. '0' → logprob: -12.63919734954834
    6. '   ' → logprob: -14.01419734954834
    7. '(' → logprob: -15.51419734954834
    8. '2' → logprob: -15.51419734954834
    9. 'l' → logprob: -15.63919734954834
    10. '
' → logprob: -15.76419734954834

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20255504548549652
    2. ',len' → logprob: -1.7025550603866577
    3. ' ,' → logprob: -6.827555179595947
    4. ',n' → logprob: -10.077554702758789
    5. ',l' → logprob: -12.452554702758789
    6. '(len' → logprob: -12.827554702758789
    7. ',length' → logprob: -12.952554702758789
    8. '<len' → logprob: -13.202554702758789
    9. 'len' → logprob: -13.952554702758789
    10. ' len' → logprob: -13.952554702758789

Token 297: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.76628842484206e-05
    2. ' len' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.875067710876465
    4. '(len' → logprob: -14.875067710876465
    5. '	len' → logprob: -15.375067710876465
    6. ' ' → logprob: -15.625067710876465
    7. 'min' → logprob: -16.12506675720215
    8. '[len' → logprob: -16.12506675720215
    9. '
' → logprob: -16.87506675720215
    10. '  ' → logprob: -17.25006675720215

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.263011578586884e-05
    2. '(data' → logprob: -10.500042915344238
    3. '2' → logprob: -11.875042915344238
    4. ')' → logprob: -12.875042915344238
    5. 'data' → logprob: -13.562542915344238
    6. '```' → logprob: -14.250042915344238
    7. '
' → logprob: -14.500042915344238
    8. ' ' → logprob: -14.562542915344238
    9. '+' → logprob: -14.687542915344238
    10. '(' → logprob: -14.937542915344238

Token 299: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0775948315858841
    2. '):
' → logprob: -3.202594757080078
    3. '):' → logprob: -3.452594757080078
    4. ' +' → logprob: -6.702594757080078
    5. '+
' → logprob: -7.327594757080078
    6. '+n' → logprob: -7.952594757080078
    7. '+l' → logprob: -11.077594757080078
    8. '   ' → logprob: -11.077594757080078
    9. '+:' → logprob: -11.452594757080078
    10. ',' → logprob: -11.702594757080078

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.056175872683525085
    2. 'len' → logprob: -2.931175947189331
    3. '2' → logprob: -7.181175708770752
    4. 'data' → logprob: -7.681175708770752
    5. ' len' → logprob: -10.68117618560791
    6. ' ' → logprob: -10.80617618560791
    7. 'n' → logprob: -11.68117618560791
    8. '+' → logprob: -11.80617618560791
    9. '
' → logprob: -12.43117618560791
    10. '   ' → logprob: -13.80617618560791

Token 301: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.474286824464798
    2. '):' → logprob: -0.9742867946624756
    3. ':' → logprob: -9.349287033081055
    4. '):
' → logprob: -9.724287033081055
    5. ')' → logprob: -10.724287033081055
    6. '   ' → logprob: -11.224287033081055
    7. ' ):
' → logprob: -11.724287033081055
    8. ',' → logprob: -11.849287033081055
    9. ' ):' → logprob: -11.974287033081055
    10. ':
' → logprob: -12.974287033081055

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6733510494232178
    2. '<|end|>' → logprob: -1.0483510494232178
    3. ' ' → logprob: -2.7983510494232178
    4. '   ' → logprob: -3.4233510494232178
    5. ' for' → logprob: -3.6733510494232178
    6. ')' → logprob: -4.798351287841797
    7. '    ' → logprob: -5.548351287841797
    8. 'for' → logprob: -6.423351287841797
    9. ':' → logprob: -6.798351287841797
    10. ',' → logprob: -6.923351287841797

Token 303: ' data' (ID: 1238)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4907698929309845
    2. 'for' → logprob: -0.9907698631286621
    3. '	for' → logprob: -4.115769863128662
    4. 'data' (adapté à ' data') → logprob: -9.24077033996582
    5. '	' → logprob: -9.36577033996582
    6. '       ' → logprob: -11.24077033996582
    7. ' data' → logprob: -11.36577033996582
    8. ' ' → logprob: -11.61577033996582
    9. '    ' → logprob: -11.99077033996582
    10. '   ' → logprob: -12.11577033996582

Token 304: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.033954914659261703
    2. '[' → logprob: -3.9089548587799072
    3. '[:' → logprob: -4.658955097198486
    4. '[:]' → logprob: -6.783955097198486
    5. ')' → logprob: -7.908955097198486
    6. '[:-' → logprob: -8.033954620361328
    7. '=' → logprob: -8.283954620361328
    8. '
' → logprob: -8.283954620361328
    9. 'n' → logprob: -8.533954620361328
    10. '```' → logprob: -8.908954620361328

Token 305: ':n' (ID: 20109)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014508519321680069
    2. ']+=' → logprob: -4.2645087242126465
    3. '+' → logprob: -8.639508247375488
    4. ']=' → logprob: -9.764508247375488
    5. ':]' → logprob: -10.389508247375488
    6. ' ]' → logprob: -10.889508247375488
    7. '[' → logprob: -11.139508247375488
    8. ',' → logprob: -11.639508247375488
    9. ']+' → logprob: -11.639508247375488
    10. '-' → logprob: -12.264508247375488

Token 306: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2859900891780853
    2. '+n' → logprob: -1.4109901189804077
    3. ']' → logprob: -6.160990238189697
    4. 'n' → logprob: -7.035990238189697
    5. 'len' → logprob: -7.535990238189697
    6. '+l' → logprob: -7.910990238189697
    7. ']+' → logprob: -8.285989761352539
    8. '1' → logprob: -8.410989761352539
    9. ' +' → logprob: -8.410989761352539
    10. '+m' → logprob: -10.160989761352539

Token 307: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.029909120872616768
    2. '1' → logprob: -3.654909133911133
    3. '2' → logprob: -6.029909133911133
    4. 'n' → logprob: -7.154909133911133
    5. 'data' → logprob: -8.404909133911133
    6. '+' → logprob: -9.654909133911133
    7. ' len' → logprob: -10.654909133911133
    8. 'm' → logprob: -10.904909133911133
    9. '   ' → logprob: -10.904909133911133
    10. '
' → logprob: -11.279909133911133

Token 308: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '```' → logprob: -16.375
    4. '   ' → logprob: -16.75
    5. '(data' → logprob: -16.875
    6. ')' → logprob: -17.375
    7. '(n' → logprob: -17.8125
    8. '
' → logprob: -18.25
    9. '1' → logprob: -18.8125
    10. '۲' → logprob: -19.0625

Token 309: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030052807182073593
    2. ']+=' → logprob: -3.530052900314331
    3. ']*' → logprob: -8.78005313873291
    4. '+' → logprob: -9.90505313873291
    5. ' ]' → logprob: -10.15505313873291
    6. ']=' → logprob: -11.15505313873291
    7. ']+' → logprob: -11.28005313873291
    8. '```' → logprob: -11.53005313873291
    9. '[' → logprob: -13.03005313873291
    10. '+=' → logprob: -13.03005313873291

Token 310: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17625288665294647
    2. ' +=' → logprob: -1.926252841949463
    3. ']+=' → logprob: -4.176252841949463
    4. '+' → logprob: -8.301253318786621
    5. '   ' → logprob: -9.551253318786621
    6. ')' → logprob: -9.926253318786621
    7. '```' → logprob: -10.426253318786621
    8. '    ' → logprob: -10.676253318786621
    9. '=' → logprob: -10.676253318786621
    10. ']' → logprob: -10.676253318786621

Token 311: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.09119492769241333
    2. ' data' → logprob: -2.4661948680877686
    3. '(data' → logprob: -6.841195106506348
    4. 'np' → logprob: -7.341195106506348
    5. ' (' → logprob: -8.466195106506348
    6. ' np' → logprob: -8.716195106506348
    7. ' ' → logprob: -9.341195106506348
    8. '   ' → logprob: -10.341195106506348
    9. '(np' → logprob: -11.341195106506348
    10. 'dp' → logprob: -11.716195106506348

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01436681766062975
    2. '[n' → logprob: -4.639366626739502
    3. '2' → logprob: -6.389366626739502
    4. 'data' → logprob: -7.139366626739502
    5. '```' → logprob: -7.514366626739502
    6. 's' → logprob: -7.639366626739502
    7. '[' → logprob: -8.01436710357666
    8. 'n' → logprob: -8.63936710357666
    9. '[
' → logprob: -8.76436710357666
    10. '
' → logprob: -9.01436710357666

Token 313: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.014980711042881012
    2. '[' → logprob: -4.514980792999268
    3. '[:' → logprob: -5.889980792999268
    4. '[np' → logprob: -8.01498031616211
    5. '   ' → logprob: -8.51498031616211
    6. '*' → logprob: -9.26498031616211
    7. ' [' → logprob: -9.38998031616211
    8. '[data' → logprob: -9.88998031616211
    9. '[:]' → logprob: -10.01498031616211
    10. '[(' → logprob: -10.38998031616211

Token 314: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3268294036388397
    2. ':]' → logprob: -1.326829433441162
    3. ']' → logprob: -5.326829433441162
    4. ' -' → logprob: -5.451829433441162
    5. ':' → logprob: -6.201829433441162
    6. ':n' → logprob: -6.576829433441162
    7. ':].' → logprob: -7.951829433441162
    8. ' :]' → logprob: -8.701828956604004
    9. ':-' → logprob: -9.701828956604004
    10. ':]
' → logprob: -9.951828956604004

Token 315: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5763640403747559
    2. '*' → logprob: -0.8263640403747559
    3. '[:,' → logprob: -9.076364517211914
    4. '*np' → logprob: -9.451364517211914
    5. '[:]' → logprob: -9.451364517211914
    6. ' ' → logprob: -10.701364517211914
    7. '[' → logprob: -10.826364517211914
    8. 'data' → logprob: -11.076364517211914
    9. '[np' → logprob: -11.201364517211914
    10. ' ' → logprob: -11.201364517211914

Token 316: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.026359988376498222
    2. ' data' → logprob: -3.651360034942627
    3. ' ' → logprob: -11.276359558105469
    4. '(data' → logprob: -11.401359558105469
    5. 'np' → logprob: -11.776359558105469
    6. '
' → logprob: -11.901359558105469
    7. 'dp' → logprob: -12.151359558105469
    8. '   ' → logprob: -13.026359558105469
    9. '[data' → logprob: -13.151359558105469
    10. '<data' → logprob: -13.401359558105469

Token 317: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.763666947837919e-05
    2. '[' → logprob: -10.62504768371582
    3. ' ' → logprob: -11.37504768371582
    4. 'data' → logprob: -12.62504768371582
    5. '_' → logprob: -13.25004768371582
    6. 's' → logprob: -13.37504768371582
    7. '_data' → logprob: -13.87504768371582
    8. '   ' → logprob: -14.12504768371582
    9. 'array' → logprob: -14.50004768371582
    10. '  ' → logprob: -14.87504768371582

Token 318: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.23269373178482056
    2. '[' → logprob: -1.8576936721801758
    3. '<|end|>' → logprob: -3.232693672180176
    4. '[:]' → logprob: -4.607693672180176
    5. '[np' → logprob: -6.482693672180176
    6. '[:-' → logprob: -8.357693672180176
    7. '
' → logprob: -9.482693672180176
    8. ')' → logprob: -10.232693672180176
    9. ' ' → logprob: -10.357693672180176
    10. ',' → logprob: -10.357693672180176

Token 319: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35961946845054626
    2. '0' → logprob: -1.4846194982528687
    3. 'np' → logprob: -3.109619379043579
    4. '1' → logprob: -4.109619617462158
    5. 'range' → logprob: -4.609619617462158
    6. ':]' → logprob: -6.859619617462158
    7. '
' → logprob: -7.234619617462158
    8. ' :' → logprob: -7.859619617462158
    9. '(np' → logprob: -8.234619140625
    10. ':n' → logprob: -8.609619140625

Token 320: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26243069767951965
    2. ':]' → logprob: -1.5124306678771973
    3. ':n' → logprob: -4.637430667877197
    4. ':(' → logprob: -8.387431144714355
    5. ' :' → logprob: -8.387431144714355
    6. ':].' → logprob: -9.637431144714355
    7. ':l' → logprob: -10.262431144714355
    8. ':]
' → logprob: -10.262431144714355
    9. 'len' → logprob: -10.512431144714355
    10. ':length' → logprob: -10.637431144714355

Token 321: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2844144105911255
    2. '%' → logprob: -1.4094144105911255
    3. '
' → logprob: -6.409414291381836
    4. '   ' → logprob: -7.659414291381836
    5. ')' → logprob: -7.909414291381836
    6. ' %=' → logprob: -7.909414291381836
    7. '%n' → logprob: -9.159414291381836
    8. 'data' → logprob: -10.159414291381836
    9. ')%' → logprob: -10.159414291381836
    10. '.reshape' → logprob: -10.159414291381836

Token 322: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.7610454708337784e-05
    2. ' mod' → logprob: -10.500027656555176
    3. '(mod' → logprob: -19.50002670288086
    4. '	mod' → logprob: -20.00002670288086
    5. ' ' → logprob: -22.87502670288086
    6. '
' → logprob: -23.00002670288086
    7. 'modal' → logprob: -23.62502670288086
    8. 'moder' → logprob: -24.00002670288086
    9. '```' → logprob: -24.37502670288086
    10. ' мод' → logprob: -24.75002670288086

Token 323: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5424379110336304
    2. ' ' → logprob: -1.4174379110336304
    3. '
' → logprob: -2.91743803024292
    4. '\n' → logprob: -3.54243803024292
    5. '<|end|>' → logprob: -3.66743803024292
    6. ' 
' → logprob: -3.66743803024292
    7. '       ' → logprob: -5.16743803024292
    8. '%' → logprob: -5.29243803024292
    9. ')' → logprob: -5.54243803024292
    10. '  ' → logprob: -5.54243803024292

Token 324: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.027444839477539
    2. '   ' → logprob: -1.152444839477539
    3. '[' → logprob: -2.277444839477539
    4. '<|end|>' → logprob: -2.277444839477539
    5. ' 
' → logprob: -3.402444839477539
    6. '\n' → logprob: -4.152444839477539
    7. ')' → logprob: -4.902444839477539
    8. '%' → logprob: -5.027444839477539
    9. '       ' → logprob: -5.152444839477539
    10. '  
' → logprob: -5.152444839477539

Token 325: ' data' (ID: 1238)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4314000904560089
    2. '<|end|>' → logprob: -2.1814000606536865
    3. '   ' → logprob: -2.3064000606536865
    4. '[' → logprob: -2.4314000606536865
    5. ' 
' → logprob: -4.556400299072266
    6. ')' → logprob: -5.431400299072266
    7. '       ' → logprob: -5.431400299072266
    8. '    ' → logprob: -5.681400299072266
    9. '
' → logprob: -5.681400299072266
    10. '  ' → logprob: -5.931400299072266

Token 326: ' %=' (ID: 117035)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.5851607918739319
    2. '%' → logprob: -1.960160732269287
    3. ' %=' → logprob: -2.335160732269287
    4. '[' → logprob: -2.460160732269287
    5. '<|end|>' → logprob: -2.585160732269287
    6. '%=' → logprob: -4.335160732269287
    7. '[n' → logprob: -4.710160732269287
    8. '=' → logprob: -5.085160732269287
    9. ' %' → logprob: -5.835160732269287
    10. '[:' → logprob: -5.960160732269287

Token 327: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0004307884373702109
    2. ' mod' → logprob: -7.750430583953857
    3. '(mod' → logprob: -16.500431060791016
    4. '	mod' → logprob: -18.750431060791016
    5. ' ' → logprob: -21.125431060791016
    6. 'moder' → logprob: -21.625431060791016
    7. '
' → logprob: -22.125431060791016
    8. '```' → logprob: -22.625431060791016
    9. 'md' → logprob: -22.750431060791016
    10. '10' → logprob: -22.875431060791016

Token 328: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03669534996151924
    2. '
' → logprob: -3.4116952419281006
    3. '<|end|>' → logprob: -6.16169548034668
    4. '\n' → logprob: -7.41169548034668
    5. '    
' → logprob: -9.16169548034668
    6. ')' → logprob: -9.91169548034668
    7. '	return' → logprob: -10.03669548034668
    8. ' return' → logprob: -11.03669548034668
    9. ' ' → logprob: -11.03669548034668
    10. '\' → logprob: -11.16169548034668

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005164023954421282
    2. '<|end|>' → logprob: -6.38016414642334
    3. ' ' → logprob: -6.75516414642334
    4. '\n' → logprob: -7.13016414642334
    5. '[' → logprob: -7.75516414642334
    6. ')' → logprob: -8.75516414642334
    7. '
' → logprob: -9.13016414642334
    8. '    
' → logprob: -9.38016414642334
    9. '  
' → logprob: -9.50516414642334
    10. '    ' → logprob: -9.63016414642334

Token 330: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1656857430934906
    2. 'return' (adapté à ' return') → logprob: -2.1656856536865234
    3. ' return' → logprob: -3.2906856536865234
    4. '	return' → logprob: -8.165685653686523
    5. ' ' → logprob: -9.165685653686523
    6. 'for' → logprob: -9.290685653686523
    7. '
' → logprob: -9.290685653686523
    8. ' for' → logprob: -9.290685653686523
    9. 'data' → logprob: -10.290685653686523
    10. '    
' → logprob: -11.290685653686523

Token 331: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.07889044284820557
    2. ' data' → logprob: -2.578890323638916
    3. 'dat' → logprob: -14.953890800476074
    4. ' dat' → logprob: -16.828889846801758
    5. '(data' → logprob: -16.953889846801758
    6. 'd' → logprob: -17.203889846801758
    7. ' ' → logprob: -17.203889846801758
    8. 'Data' → logprob: -17.953889846801758
    9. ' ' → logprob: -18.078889846801758
    10. '	data' → logprob: -18.328889846801758

Token 332: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3771202266216278
    2. '<|end|>' → logprob: -1.2521202564239502
    3. '[' → logprob: -4.002120018005371
    4. ')' → logprob: -6.252120018005371
    5. '_' → logprob: -6.752120018005371
    6. '
' → logprob: -7.127120018005371
    7. '   ' → logprob: -7.127120018005371
    8. ' def' → logprob: -7.252120018005371
    9. ',' → logprob: -7.502120018005371
    10. ' ' → logprob: -7.627120018005371

Token 333: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10426866263151169
    2. 'def' → logprob: -3.3542685508728027
    3. '<|end|>' → logprob: -3.6042685508728027
    4. '_' → logprob: -4.979268550872803
    5. ')' → logprob: -4.979268550872803
    6. '   ' → logprob: -5.229268550872803
    7. ':' → logprob: -5.354268550872803
    8. '.' → logprob: -5.604268550872803
    9. ',' → logprob: -6.229268550872803
    10. ' ' → logprob: -6.729268550872803

Token 334: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.02769758552312851
    2. 'dp' → logprob: -4.402697563171387
    3. ' dfs' → logprob: -4.652697563171387
    4. ' main' → logprob: -6.652697563171387
    5. ' solve' → logprob: -6.652697563171387
    6. ' combine' → logprob: -7.527697563171387
    7. ' merge' → logprob: -8.465197563171387
    8. ' add' → logprob: -8.527697563171387
    9. ' numpy' → logprob: -8.902697563171387
    10. ' def' → logprob: -8.965197563171387

Token 335: '_merge' (ID: 50662)
  Prédit: '_merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_merge' → logprob: -0.00997352134436369
    2. '_' → logprob: -4.884973526000977
    3. '_append' → logprob: -7.009973526000977
    4. '_core' → logprob: -7.134973526000977
    5. '_expand' → logprob: -8.634973526000977
    6. '_concat' → logprob: -9.509973526000977
    7. '_add' → logprob: -10.009973526000977
    8. '_mer' → logprob: -10.259973526000977
    9. ' _' → logprob: -10.384973526000977
    10. '_continue' → logprob: -10.509973526000977

Token 336: '(data' (ID: 4819)
  Prédit: '_core'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_core' → logprob: -0.005975842475891113
    2. '_' → logprob: -6.005975723266602
    3. '(data' → logprob: -6.005975723266602
    4. '_(' → logprob: -7.130975723266602
    5. '(' → logprob: -8.880975723266602
    6. '(_' → logprob: -9.755975723266602
    7. '(core' → logprob: -10.880975723266602
    8. '_data' → logprob: -11.755975723266602
    9. '```' → logprob: -13.880975723266602
    10. '_Core' → logprob: -14.005975723266602

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03847334906458855
    2. ',' → logprob: -3.28847336769104
    3. ',data' → logprob: -8.413473129272461
    4. '2' → logprob: -9.913473129272461
    5. '_,' → logprob: -10.038473129272461
    6. ' ,' → logprob: -10.413473129272461
    7. ',_' → logprob: -10.538473129272461
    8. 'data' → logprob: -11.663473129272461
    9. '_' → logprob: -11.663473129272461
    10. '   ' → logprob: -11.788473129272461

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.209963900502771e-05
    2. ',data' → logprob: -9.500092506408691
    3. ' ,' → logprob: -11.000092506408691
    4. ',
' → logprob: -14.750092506408691
    5. '[data' → logprob: -17.625091552734375
    6. ',

' → logprob: -18.125091552734375
    7. ',d' → logprob: -18.875091552734375
    8. ',
' → logprob: -19.000091552734375
    9. '‌,' → logprob: -19.000091552734375
    10. '_,' → logprob: -19.375091552734375

Token 339: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1602250337600708
    2. ' data' → logprob: -1.9102250337600708
    3. '   ' → logprob: -15.660224914550781
    4. ' ' → logprob: -15.785224914550781
    5. '	data' → logprob: -16.03522491455078
    6. 'def' → logprob: -16.28522491455078
    7. '.data' → logprob: -16.28522491455078
    8. '(data' → logprob: -16.41022491455078
    9. ')' → logprob: -16.78522491455078
    10. ')data' → logprob: -16.78522491455078

Token 340: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029904142022132874
    2. ',' → logprob: -3.6549041271209717
    3. ',data' → logprob: -6.529904365539551
    4. ',_' → logprob: -6.779904365539551
    5. '_' → logprob: -7.404904365539551
    6. '_,' → logprob: -8.65490436553955
    7. '1' → logprob: -9.15490436553955
    8. '_data' → logprob: -10.15490436553955
    9. ' ,' → logprob: -10.65490436553955
    10. ',
' → logprob: -11.52990436553955

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.133198283147067e-05
    2. ',data' → logprob: -10.125051498413086
    3. '):' → logprob: -11.875051498413086
    4. ' ,' → logprob: -12.875051498413086
    5. ',len' → logprob: -14.125051498413086
    6. ',length' → logprob: -15.250051498413086
    7. ',n' → logprob: -15.500051498413086
    8. '   ' → logprob: -16.125051498413086
    9. ',size' → logprob: -16.375051498413086
    10. ',:' → logprob: -16.500051498413086

Token 342: ' mod' (ID: 1812)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4543895721435547
    2. 'data' → logprob: -2.0793895721435547
    3. ' len' → logprob: -2.3293895721435547
    4. 'mod' → logprob: -2.5793895721435547
    5. ' mod' → logprob: -3.5793895721435547
    6. ' data' → logprob: -3.8293895721435547
    7. 'np' → logprob: -4.579389572143555
    8. ')' → logprob: -6.579389572143555
    9. ' np' → logprob: -6.704389572143555
    10. '(len' → logprob: -7.204389572143555

Token 343: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10129515826702118
    2. ',' → logprob: -2.351295232772827
    3. '):
' → logprob: -6.851294994354248
    4. '   ' → logprob: -11.476295471191406
    5. ',data' → logprob: -11.601295471191406
    6. '):
' → logprob: -12.476295471191406
    7. ')' → logprob: -12.976295471191406
    8. ':' → logprob: -12.976295471191406
    9. ' ):' → logprob: -13.851295471191406
    10. ' ' → logprob: -15.851295471191406

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016635251813568175
    2. ' length' → logprob: -10.125165939331055
    3. '(len' → logprob: -11.000165939331055
    4. ' len' → logprob: -11.000165939331055
    5. '	len' → logprob: -11.000165939331055
    6. '[len' → logprob: -11.125165939331055
    7. ',' → logprob: -11.375165939331055
    8. 'length' → logprob: -11.625165939331055
    9. 'len' → logprob: -11.875165939331055
    10. ' return' → logprob: -12.125165939331055

Token 345: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3980734646320343
    2. 'return' → logprob: -1.148073434829712
    3. 'len' → logprob: -4.773073673248291
    4. 'length' → logprob: -6.523073673248291
    5. ' return' → logprob: -7.273073673248291
    6. 'data' → logprob: -7.773073673248291
    7. 'n' → logprob: -10.898073196411133
    8. '[len' → logprob: -11.273073196411133
    9. 'for' → logprob: -11.523073196411133
    10. '
' → logprob: -11.523073196411133

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13389582931995392
    2. ' =' → logprob: -2.3838958740234375
    3. '=len' → logprob: -4.2588958740234375
    4. '   ' → logprob: -4.3838958740234375
    5. '=' → logprob: -5.1338958740234375
    6. 'len' → logprob: -8.383895874023438
    7. '_len' → logprob: -8.508895874023438
    8. ',' → logprob: -9.508895874023438
    9. 'um' → logprob: -11.133895874023438
    10. ')' → logprob: -11.258895874023438

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2902243137359619
    2. '=' → logprob: -1.540224313735962
    3. ',' → logprob: -3.540224313735962
    4. '=len' → logprob: -4.790224075317383
    5. ',len' → logprob: -8.790224075317383
    6. '=data' → logprob: -9.915224075317383
    7. ' ' → logprob: -10.665224075317383
    8. ' ,' → logprob: -11.790224075317383
    9. '   ' → logprob: -12.165224075317383
    10. 'len' → logprob: -12.290224075317383

Token 348: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03081671893596649
    2. 'data' → logprob: -3.5308167934417725
    3. ' len' → logprob: -7.280816555023193
    4. 'np' → logprob: -8.155817031860352
    5. ' data' → logprob: -9.780817031860352
    6. 'numpy' → logprob: -11.030817031860352
    7. 'dp' → logprob: -11.530817031860352
    8. '(len' → logprob: -12.905817031860352
    9. 'int' → logprob: -12.905817031860352
    10. ' np' → logprob: -14.530817031860352

Token 349: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -3.531315314830863e-06
    2. 'data' → logprob: -12.625003814697266
    3. '[data' → logprob: -16.625003814697266
    4. '(' → logprob: -17.000003814697266
    5. ')data' → logprob: -17.500003814697266
    6. '=data' → logprob: -17.625003814697266
    7. ' data' → logprob: -17.875003814697266
    8. ',data' → logprob: -18.250003814697266
    9. ' (' → logprob: -19.625003814697266
    10. '<data' → logprob: -19.875003814697266

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027647843584418297
    2. '(data' → logprob: -4.277647972106934
    3. 'data' → logprob: -5.277647972106934
    4. ')' → logprob: -5.527647972106934
    5. '[' → logprob: -5.652647972106934
    6. '[data' → logprob: -7.902647972106934
    7. ')data' → logprob: -8.652647972106934
    8. ' data' → logprob: -9.402647972106934
    9. '2' → logprob: -10.402647972106934
    10. ')
' → logprob: -10.527647972106934

Token 351: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3132794201374054
    2. ')' → logprob: -1.313279390335083
    3. ')-' → logprob: -11.563279151916504
    4. ' )
' → logprob: -13.063279151916504
    5. ')

' → logprob: -13.188279151916504
    6. '   ' → logprob: -13.563279151916504
    7. ')
' → logprob: -13.938279151916504
    8. ')#' → logprob: -14.563279151916504
    9. ' )' → logprob: -14.938279151916504
    10. '),' → logprob: -15.563279151916504

Token 352: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0309439767152071
    2. '-' → logprob: -4.405943870544434
    3. '   ' → logprob: -4.405943870544434
    4. 'N' → logprob: -5.530943870544434
    5. 'data' → logprob: -7.655943870544434
    6. ' -' → logprob: -7.655943870544434
    7. ' N' → logprob: -8.530943870544434
    8. ';' → logprob: -8.530943870544434
    9. '    
' → logprob: -8.530943870544434
    10. 'def' → logprob: -9.030943870544434

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -18.8750057220459
    4. '   ' → logprob: -19.3125057220459
    5. '2' → logprob: -19.7500057220459
    6. '
' → logprob: -19.8125057220459
    7. '１' → logprob: -20.1250057220459
    8. '۱' → logprob: -20.2500057220459
    9. '১' → logprob: -20.5000057220459
    10. '0' → logprob: -20.5625057220459

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -16.875001907348633
    4. '```' → logprob: -18.250001907348633
    5. '۱' → logprob: -19.812501907348633
    6. '１' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.312501907348633
    8. '{' → logprob: -20.375001907348633
    9. '১' → logprob: -20.500001907348633
    10. '<|end|>' → logprob: -20.625001907348633

Token 355: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.139075368642807
    2. '   ' → logprob: -2.13907527923584
    3. '    
' → logprob: -4.63907527923584
    4. '  
' → logprob: -7.51407527923584
    5. ',' → logprob: -7.88907527923584
    6. 'N' → logprob: -8.13907527923584
    7. ' N' → logprob: -8.26407527923584
    8. '   
' → logprob: -8.51407527923584
    9. ' 
' → logprob: -8.63907527923584
    10. '
' → logprob: -9.01407527923584

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008615575497969985
    2. 'N' → logprob: -7.875861644744873
    3. '
' → logprob: -9.000861167907715
    4. ' N' → logprob: -9.125861167907715
    5. ',' → logprob: -9.250861167907715
    6. '    
' → logprob: -10.500861167907715
    7. '  ' → logprob: -10.500861167907715
    8. ' ' → logprob: -10.625861167907715
    9. '	N' → logprob: -10.750861167907715
    10. ',N' → logprob: -11.500861167907715

Token 357: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -5.574251918005757e-05
    2. '   ' → logprob: -10.000055313110352
    3. ' N' → logprob: -11.500055313110352
    4. '	N' → logprob: -16.00005531311035
    5. 'len' → logprob: -16.87505531311035
    6. ' ' → logprob: -17.12505531311035
    7. '  ' → logprob: -17.75005531311035
    8. '```' → logprob: -18.00005531311035
    9. 'n' → logprob: -18.25005531311035
    10. '
' → logprob: -19.37505531311035

Token 358: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016825977945700288
    2. ' ' → logprob: -9.125167846679688
    3. ' =' → logprob: -10.250167846679688
    4. '1' → logprob: -11.500167846679688
    5. '=' → logprob: -11.750167846679688
    6. ',' → logprob: -13.000167846679688
    7. '   ' → logprob: -13.375167846679688
    8. '
' → logprob: -14.125167846679688
    9. 'N' → logprob: -14.750167846679688
    10. '  ' → logprob: -15.125167846679688

Token 359: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931505799293518
    2. ' =' → logprob: -0.6931505799293518
    3. '=len' → logprob: -13.693150520324707
    4. ',' → logprob: -13.943150520324707
    5. ' ' → logprob: -14.068150520324707
    6. '   ' → logprob: -14.943150520324707
    7. ')' → logprob: -16.693151473999023
    8. '=
' → logprob: -16.943151473999023
    9. '=int' → logprob: -17.693151473999023
    10. ' =
' → logprob: -17.693151473999023

Token 360: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0015029559144750237
    2. ' len' → logprob: -6.501502990722656
    3. '(len' → logprob: -14.501502990722656
    4. '[len' → logprob: -16.001502990722656
    5. '   ' → logprob: -18.126502990722656
    6. '	len' → logprob: -18.126502990722656
    7. '=len' → logprob: -19.501502990722656
    8. '<len' → logprob: -20.376502990722656
    9. ' ' → logprob: -20.876502990722656
    10. ',len' → logprob: -21.376502990722656

Token 361: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -4.60414821645827e-06
    2. 'data' → logprob: -12.375004768371582
    3. '[data' → logprob: -15.000004768371582
    4. '=data' → logprob: -17.250003814697266
    5. ')data' → logprob: -18.250003814697266
    6. '<data' → logprob: -19.000003814697266
    7. ',data' → logprob: -19.750003814697266
    8. ' data' → logprob: -20.125003814697266
    9. '(' → logprob: -21.125003814697266
    10. 's' → logprob: -21.750003814697266

Token 362: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05584832280874252
    2. 'data' → logprob: -3.5558483600616455
    3. '(data' → logprob: -3.6808483600616455
    4. ')data' → logprob: -8.680848121643066
    5. '_data' → logprob: -8.930848121643066
    6. ')' → logprob: -9.180848121643066
    7. ' data' → logprob: -9.305848121643066
    8. '[data' → logprob: -10.930848121643066
    9. ')-' → logprob: -11.555848121643066
    10. '1' → logprob: -11.930848121643066

Token 363: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010068230039905757
    2. '-' → logprob: -9.625101089477539
    3. ')-' → logprob: -10.875101089477539
    4. ' -' → logprob: -11.500101089477539
    5. '-)' → logprob: -12.375101089477539
    6. ')
' → logprob: -14.000101089477539
    7. ' )' → logprob: -15.250101089477539
    8. ']' → logprob: -16.25010108947754
    9. '   ' → logprob: -16.50010108947754
    10. '[' → logprob: -17.62510108947754

Token 364: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.35933515429496765
    2. ' -' → logprob: -1.23433518409729
    3. '   ' → logprob: -5.109334945678711
    4. '+' → logprob: -5.609334945678711
    5. ' =' → logprob: -8.109334945678711
    6. '=' → logprob: -8.234334945678711
    7. ' +' → logprob: -8.484334945678711
    8. ' ' → logprob: -8.859334945678711
    9. ',' → logprob: -9.484334945678711
    10. '
' → logprob: -10.734334945678711

Token 365: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.37502098083496
    4. '```' → logprob: -17.75002098083496
    5. '۱' → logprob: -18.93752098083496
    6. '<|end|>' → logprob: -18.93752098083496
    7. '  ' → logprob: -19.43752098083496
    8. '2' → logprob: -19.43752098083496
    9. '0' → logprob: -19.68752098083496
    10. '１' → logprob: -19.68752098083496

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '2' → logprob: -16.625019073486328
    4. '0' → logprob: -16.937519073486328
    5. '```' → logprob: -16.937519073486328
    6. '   ' → logprob: -17.062519073486328
    7. '<|end|>' → logprob: -17.437519073486328
    8. '۱' → logprob: -17.937519073486328
    9. '
' → logprob: -18.375019073486328
    10. '  ' → logprob: -18.625019073486328

Token 367: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12526415288448334
    2. ')' → logprob: -2.6252641677856445
    3. '
' → logprob: -3.8752641677856445
    4. 'data' → logprob: -5.0002641677856445
    5. ',' → logprob: -5.8752641677856445
    6. ':' → logprob: -5.8752641677856445
    7. '[' → logprob: -6.2502641677856445
    8. '[data' → logprob: -6.3752641677856445
    9. '<|end|>' → logprob: -6.5002641677856445
    10. 'def' → logprob: -6.7502641677856445

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028235390782356262
    2. ')' → logprob: -6.752823352813721
    3. '[' → logprob: -7.502823352813721
    4. ',' → logprob: -8.252823829650879
    5. ':' → logprob: -8.502823829650879
    6. '    
' → logprob: -9.127823829650879
    7. 'data' → logprob: -9.377823829650879
    8. 'def' → logprob: -9.627823829650879
    9. '{' → logprob: -9.877823829650879
    10. '(' → logprob: -9.877823829650879

Token 369: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005763353314250708
    2. 'return' → logprob: -5.255763530731201
    3. 'data' → logprob: -8.005763053894043
    4. ' return' → logprob: -8.630763053894043
    5. '```' → logprob: -11.380763053894043
    6. ' data' → logprob: -13.255763053894043
    7. '	return' → logprob: -13.630763053894043
    8. 'result' → logprob: -14.505763053894043
    9. 'def' → logprob: -14.630763053894043
    10. '[data' → logprob: -15.005763053894043

Token 370: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6336573958396912
    2. 'N' → logprob: -0.7586573958396912
    3. ' not' → logprob: -8.133657455444336
    4. ' ' → logprob: -8.633657455444336
    5. ' data' → logprob: -9.008657455444336
    6. 'data' → logprob: -9.383657455444336
    7. ' (' → logprob: -9.633657455444336
    8. '(N' → logprob: -9.633657455444336
    9. ' len' → logprob: -9.758657455444336
    10. 'len' → logprob: -9.883657455444336

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021833342034369707
    2. '_' → logprob: -6.252183437347412
    3. '2' → logprob: -9.002182960510254
    4. '=' → logprob: -10.127182960510254
    5. ' ' → logprob: -10.127182960510254
    6. '==' → logprob: -11.127182960510254
    7. '0' → logprob: -11.377182960510254
    8. '[' → logprob: -12.252182960510254
    9. ')' → logprob: -12.502182960510254
    10. '   ' → logprob: -13.002182960510254

Token 372: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17418988049030304
    2. '<' → logprob: -2.799189805984497
    3. ' ==' → logprob: -2.799189805984497
    4. ' <' → logprob: -4.049190044403076
    5. '+' → logprob: -4.424190044403076
    6. '>' → logprob: -5.674190044403076
    7. '<N' → logprob: -5.924190044403076
    8. ' +' → logprob: -7.299190044403076
    9. '0' → logprob: -7.924190044403076
    10. ' >' → logprob: -8.049189567565918

Token 373: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12979526817798615
    2. ' N' → logprob: -2.1297953128814697
    3. '0' → logprob: -6.254795074462891
    4. ' ' → logprob: -7.879795074462891
    5. '=' → logprob: -8.00479507446289
    6. '   ' → logprob: -9.62979507446289
    7. '=N' → logprob: -10.25479507446289
    8. '  ' → logprob: -10.37979507446289
    9. '10' → logprob: -10.62979507446289
    10. '100' → logprob: -10.87979507446289

Token 374: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.8126592193730175e-05
    2. ' ' → logprob: -10.5000581741333
    3. '   ' → logprob: -11.1250581741333
    4. '1' → logprob: -11.8750581741333
    5. '_' → logprob: -13.0000581741333
    6. '  ' → logprob: -13.2500581741333
    7. 'N' → logprob: -13.5000581741333
    8. '=' → logprob: -14.6250581741333
    9. '-' → logprob: -15.1250581741333
    10. '₂' → logprob: -15.3750581741333

Token 375: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3874673843383789
    2. ':
' → logprob: -1.137467384338379
    3. '   ' → logprob: -8.637467384338379
    4. ':return' → logprob: -8.887467384338379
    5. '):
' → logprob: -9.262467384338379
    6. ' :
' → logprob: -10.262467384338379
    7. ',' → logprob: -10.387467384338379
    8. ' :' → logprob: -10.387467384338379
    9. '       ' → logprob: -11.012467384338379
    10. ':
' → logprob: -11.137467384338379

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03553357347846031
    2. '   ' → logprob: -4.535533428192139
    3. ' return' → logprob: -4.660533428192139
    4. ' data' → logprob: -4.910533428192139
    5. 'data' → logprob: -5.910533428192139
    6. ':' → logprob: -6.535533428192139
    7. 'return' → logprob: -7.410533428192139
    8. ',' → logprob: -7.785533428192139
    9. '[' → logprob: -7.910533428192139
    10. '<|end|>' → logprob: -8.035533905029297

Token 377: ' N' (ID: 478)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.819366991519928
    2. 'return' → logprob: -1.1943669319152832
    3. '       ' → logprob: -1.5693669319152832
    4. ' data' → logprob: -3.319366931915283
    5. 'data' → logprob: -4.444366931915283
    6. '   ' → logprob: -8.444367408752441
    7. '	return' → logprob: -10.819367408752441
    8. ',' → logprob: -11.069367408752441
    9. ':return' → logprob: -12.194367408752441
    10. '        
' → logprob: -12.944367408752441

Token 378: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5763148069381714
    2. '1' → logprob: -0.8263148069381714
    3. '=' → logprob: -8.701314926147461
    4. ',' → logprob: -9.451314926147461
    5. ' =' → logprob: -9.701314926147461
    6. 'N' → logprob: -11.513814926147461
    7. ' ' → logprob: -11.513814926147461
    8. '
' → logprob: -11.638814926147461
    9. '   ' → logprob: -12.138814926147461
    10. '=N' → logprob: -12.701314926147461

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006234417669475079
    2. ',N' → logprob: -7.5006232261657715
    3. ',data' → logprob: -10.25062370300293
    4. ' ,' → logprob: -11.00062370300293
    5. ',n' → logprob: -11.12562370300293
    6. ',
' → logprob: -13.75062370300293
    7. '=' → logprob: -14.37562370300293
    8. 'data' → logprob: -14.87562370300293
    9. ',len' → logprob: -15.37562370300293
    10. 'N' → logprob: -15.62562370300293

Token 380: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06443580240011215
    2. ' N' → logprob: -2.8144357204437256
    3. '<|end|>' → logprob: -6.189435958862305
    4. 'data' → logprob: -8.564435958862305
    5. '<|end|>' → logprob: -9.189435958862305
    6. ' ' → logprob: -10.189435958862305
    7. ' data' → logprob: -10.814435958862305
    8. ' =' → logprob: -11.814435958862305
    9. '=' → logprob: -12.064435958862305
    10. '	N' → logprob: -12.189435958862305

Token 381: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1888679839321412e-05
    2. '<|end|>' → logprob: -11.250021934509277
    3. '<|end|>' → logprob: -12.875021934509277
    4. ' ' → logprob: -12.875021934509277
    5. '1' → logprob: -14.000021934509277
    6. 'N' → logprob: -14.500021934509277
    7. ',' → logprob: -14.875021934509277
    8. '=' → logprob: -15.125021934509277
    9. '   ' → logprob: -15.250021934509277
    10. '  ' → logprob: -15.250021934509277

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3014131486415863
    2. ',' → logprob: -1.4264131784439087
    3. ' =' → logprob: -3.926413059234619
    4. '       ' → logprob: -8.551413536071777
    5. '   ' → logprob: -10.051413536071777
    6. ' ,' → logprob: -10.426413536071777
    7. ',data' → logprob: -10.801413536071777
    8. '=N' → logprob: -11.301413536071777
    9. '=data' → logprob: -11.426413536071777
    10. '    ' → logprob: -11.926413536071777

Token 383: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00020354038861114532
    2. ' N' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.75020408630371
    4. ' ' → logprob: -19.37520408630371
    5. '	N' → logprob: -20.00020408630371
    6. '[N' → logprob: -20.37520408630371
    7. '  ' → logprob: -20.87520408630371
    8. '    ' → logprob: -21.25020408630371
    9. '>N' → logprob: -21.25020408630371
    10. '=N' → logprob: -21.62520408630371

Token 384: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. '1' → logprob: -12.375004768371582
    3. ' ' → logprob: -15.750004768371582
    4. '₂' → logprob: -16.000003814697266
    5. '```' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.250003814697266
    7. '۲' → logprob: -17.000003814697266
    8. ',' → logprob: -17.750003814697266
    9. '  ' → logprob: -17.812503814697266
    10. '
' → logprob: -18.062503814697266

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039468807517550886
    2. ',N' → logprob: -8.500394821166992
    3. ',
' → logprob: -8.750394821166992
    4. ' ,' → logprob: -11.000394821166992
    5. 'N' → logprob: -11.750394821166992
    6. ',data' → logprob: -13.000394821166992
    7. '<|end|>' → logprob: -13.500394821166992
    8. '   ' → logprob: -14.250394821166992
    9. ',n' → logprob: -14.500394821166992
    10. ' N' → logprob: -14.625394821166992

Token 386: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0024758970830589533
    2. ' N' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.62747573852539
    4. ' ' → logprob: -17.50247573852539
    5. '	N' → logprob: -18.87747573852539
    6. '  ' → logprob: -19.12747573852539
    7. '       ' → logprob: -19.25247573852539
    8. '    ' → logprob: -20.25247573852539
    9. '     ' → logprob: -21.12747573852539
    10. '
' → logprob: -21.75247573852539

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -12.125007629394531
    3. '   ' → logprob: -13.625007629394531
    4. '<|end|>' → logprob: -15.000007629394531
    5. 'N' → logprob: -15.250007629394531
    6. '2' → logprob: -15.625007629394531
    7. '  ' → logprob: -16.00000762939453
    8. '[' → logprob: -17.12500762939453
    9. ',' → logprob: -17.25000762939453
    10. '```' → logprob: -17.50000762939453

Token 388: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40359318256378174
    2. '       ' → logprob: -1.7785931825637817
    3. '   ' → logprob: -1.9035931825637817
    4. ',
' → logprob: -5.278593063354492
    5. 'data' → logprob: -5.903593063354492
    6. '
' → logprob: -6.028593063354492
    7. ',data' → logprob: -6.278593063354492
    8. ' data' → logprob: -7.278593063354492
    9. '<|end|>' → logprob: -7.778593063354492
    10. '	data' → logprob: -8.528593063354492

Token 389: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004343717824667692
    2. ',' → logprob: -5.629343509674072
    3. 'data' → logprob: -8.37934398651123
    4. '[' → logprob: -8.75434398651123
    5. '       ' → logprob: -9.25434398651123
    6. '    
' → logprob: -9.87934398651123
    7. '<|end|>' → logprob: -10.00434398651123
    8. ' data' → logprob: -10.12934398651123
    9. '
' → logprob: -11.00434398651123
    10. '(' → logprob: -11.00434398651123

Token 390: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.00021259987261146307
    2. '   ' → logprob: -8.875212669372559
    3. '       ' → logprob: -9.625212669372559
    4. ' data' → logprob: -12.125212669372559
    5. 'd' → logprob: -13.625212669372559
    6. '	data' → logprob: -16.250211715698242
    7. 'return' → logprob: -17.625211715698242
    8. 'D' → logprob: -18.125211715698242
    9. '    ' → logprob: -18.250211715698242
    10. 'import' → logprob: -18.375211715698242

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02984641306102276
    2. '2' → logprob: -3.529846429824829
    3. ',' → logprob: -9.27984619140625
    4. ' =' → logprob: -13.90484619140625
    5. 'data' → logprob: -14.15484619140625
    6. ' ' → logprob: -15.15484619140625
    7. 'return' → logprob: -15.40484619140625
    8. '=' → logprob: -15.65484619140625
    9. '=data' → logprob: -16.65484619140625
    10. ',data' → logprob: -16.77984619140625

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. ',data' → logprob: -11.125015258789062
    3. ' ,' → logprob: -16.125015258789062
    4. 'data' → logprob: -16.375015258789062
    5. ',
' → logprob: -18.625015258789062
    6. ',d' → logprob: -19.750015258789062
    7. '_,' → logprob: -21.125015258789062
    8. '=' → logprob: -21.250015258789062
    9. ',\
' → logprob: -21.250015258789062
    10. '[data' → logprob: -21.500015258789062

Token 393: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0007100477814674377
    2. ' data' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.875710487365723
    4. ' ' → logprob: -17.250709533691406
    5. '  ' → logprob: -18.500709533691406
    6. '	data' → logprob: -18.625709533691406
    7. 'd' → logprob: -19.625709533691406
    8. '
' → logprob: -20.375709533691406
    9. '    ' → logprob: -20.375709533691406
    10. 'dat' → logprob: -20.500709533691406

Token 394: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. 'data' → logprob: -15.125001907348633
    4. ',' → logprob: -15.625001907348633
    5. '   ' → logprob: -17.375001907348633
    6. ' data' → logprob: -17.500001907348633
    7. '1' → logprob: -17.750001907348633
    8. '۲' → logprob: -17.750001907348633
    9. '₂' → logprob: -17.875001907348633
    10. '_data' → logprob: -18.250001907348633

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007255369564518332
    2. ' =' → logprob: -7.250725746154785
    3. ',' → logprob: -11.125725746154785
    4. '=data' → logprob: -14.375725746154785
    5. '=
' → logprob: -15.750725746154785
    6. '=

' → logprob: -16.75072479248047
    7. '   ' → logprob: -18.75072479248047
    8. ')=' → logprob: -18.75072479248047
    9. 'data' → logprob: -18.75072479248047
    10. '=}' → logprob: -19.00072479248047

Token 396: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0001129602751461789
    2. ' data' → logprob: -9.125112533569336
    3. '   ' → logprob: -12.500112533569336
    4. ' ' → logprob: -16.250112533569336
    5. '  ' → logprob: -16.750112533569336
    6. '	data' → logprob: -18.250112533569336
    7. 'dat' → logprob: -18.250112533569336
    8. 'd' → logprob: -18.625112533569336
    9. '(data' → logprob: -18.875112533569336
    10. '
' → logprob: -19.375112533569336

Token 397: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. 'data' → logprob: -14.250000953674316
    3. '[' → logprob: -16.125001907348633
    4. '
' → logprob: -16.875001907348633
    5. '```' → logprob: -16.875001907348633
    6. '1' → logprob: -17.250001907348633
    7. 'def' → logprob: -18.000001907348633
    8. '_data' → logprob: -18.125001907348633
    9. '۲' → logprob: -18.125001907348633
    10. 's' → logprob: -18.375001907348633

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002690840628929436
    2. ',data' → logprob: -8.250268936157227
    3. ',
' → logprob: -12.250268936157227
    4. 'data' → logprob: -13.375268936157227
    5. ' ,' → logprob: -13.875268936157227
    6. '1' → logprob: -16.000268936157227
    7. '[data' → logprob: -16.250268936157227
    8. '2' → logprob: -16.500268936157227
    9. '<|end|>' → logprob: -17.000268936157227
    10. ' data' → logprob: -17.125268936157227

Token 399: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0005530327325686812
    2. ' data' → logprob: -7.500553131103516
    3. ' ' → logprob: -19.500553131103516
    4. '   ' → logprob: -19.625553131103516
    5. '	data' → logprob: -20.125553131103516
    6. '[data' → logprob: -21.000553131103516
    7. '(data' → logprob: -21.500553131103516
    8. '.data' → logprob: -21.625553131103516
    9. 'd' → logprob: -21.625553131103516
    10. '
' → logprob: -21.875553131103516

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'data' → logprob: -16.0
    3. 's' → logprob: -16.75
    4. 'return' → logprob: -17.125
    5. '[' → logprob: -17.375
    6. ' ' → logprob: -17.5
    7. 'import' → logprob: -17.75
    8. 'def' → logprob: -17.75
    9. '```' → logprob: -18.125
    10. ',' → logprob: -18.25

Token 401: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09012402594089508
    2. '   ' → logprob: -2.8401241302490234
    3. '<|end|>' → logprob: -4.340124130249023
    4. '  
' → logprob: -5.090124130249023
    5. '    
' → logprob: -5.215124130249023
    6. ' 
' → logprob: -6.465124130249023
    7. ',' → logprob: -8.215124130249023
    8. '<|end|>' → logprob: -8.340124130249023
    9. '   
' → logprob: -8.715124130249023
    10. '[' → logprob: -8.965124130249023

Token 402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2541232109069824
    2. '<|end|>' → logprob: -2.0041232109069824
    3. '
' → logprob: -2.8791232109069824
    4. ')' → logprob: -3.8791232109069824
    5. '[' → logprob: -5.629123210906982
    6. 'data' → logprob: -5.879123210906982
    7. '```' → logprob: -6.754123210906982
    8. 'def' → logprob: -7.629123210906982
    9. '    
' → logprob: -7.754123210906982
    10. '<|end|>' → logprob: -7.754123210906982

Token 403: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03837239742279053
    2. ' data' → logprob: -4.41337251663208
    3. 'data' → logprob: -4.91337251663208
    4. ' for' → logprob: -5.03837251663208
    5. '[' → logprob: -5.28837251663208
    6. '	data' → logprob: -6.16337251663208
    7. '
' → logprob: -7.03837251663208
    8. ' ' → logprob: -7.28837251663208
    9. '```' → logprob: -7.28837251663208
    10. '	for' → logprob: -7.78837251663208

Token 404: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5759828686714172
    2. ' dp' → logprob: -0.8259828686714172
    3. 'data' → logprob: -10.950983047485352
    4. ' data' → logprob: -11.450983047485352
    5. '(dp' → logprob: -12.575983047485352
    6. '_dp' → logprob: -12.700983047485352
    7. '	dp' → logprob: -13.075983047485352
    8. ' zeros' → logprob: -13.075983047485352
    9. 'np' → logprob: -13.325983047485352
    10. ' ' → logprob: -13.700983047485352

Token 405: '_merge' (ID: 50662)
  Prédit: '_merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_merge' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -12.250009536743164
    3. '_data' → logprob: -13.500009536743164
    4. '_dp' → logprob: -13.750009536743164
    5. '_mer' → logprob: -14.000009536743164
    6. '_core' → logprob: -14.375009536743164
    7. 'merge' → logprob: -15.625009536743164
    8. '
' → logprob: -16.375009536743164
    9. 'Merge' → logprob: -16.375009536743164
    10. ' _' → logprob: -16.375009536743164

Token 406: '_core' (ID: 32989)
  Prédit: '_core'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_core' → logprob: -4.4656579120783135e-05
    2. '_data' → logprob: -10.375044822692871
    3. '_' → logprob: -12.750044822692871
    4. '```' → logprob: -13.375044822692871
    5. '_kernel' → logprob: -13.500044822692871
    6. '(_' → logprob: -13.625044822692871
    7. '(data' → logprob: -14.000044822692871
    8. '_code' → logprob: -14.625044822692871
    9. '_raw' → logprob: -15.000044822692871
    10. '_merge' → logprob: -15.250044822692871

Token 407: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.008619774132966995
    2. '(' → logprob: -4.758619785308838
    3. '(
' → logprob: -12.25861930847168
    4. '<data' → logprob: -15.75861930847168
    5. 'data' → logprob: -16.13361930847168
    6. ' (' → logprob: -16.13361930847168
    7. '[data' → logprob: -18.00861930847168
    8. ',data' → logprob: -18.00861930847168
    9. '(

' → logprob: -18.38361930847168
    10. '```' → logprob: -18.50861930847168

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001078302855603397
    2. 'data' → logprob: -7.626078128814697
    3. ',' → logprob: -7.876078128814697
    4. ',data' → logprob: -10.251078605651855
    5. '[data' → logprob: -10.501078605651855
    6. '_' → logprob: -10.501078605651855
    7. '_core' → logprob: -11.001078605651855
    8. '_data' → logprob: -11.126078605651855
    9. '(data' → logprob: -11.126078605651855
    10. '_,' → logprob: -11.501078605651855

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.893480243277736e-05
    2. ' ,' → logprob: -10.250039100646973
    3. ',data' → logprob: -12.625039100646973
    4. ',
' → logprob: -15.500039100646973
    5. '[data' → logprob: -18.875038146972656
    6. '
' → logprob: -19.125038146972656
    7. '=data' → logprob: -21.000038146972656
    8. ' data' → logprob: -21.500038146972656
    9. 'data' → logprob: -21.500038146972656
    10. '=' → logprob: -21.875038146972656

Token 410: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.17974551022052765
    2. 'data' → logprob: -1.8047455549240112
    3. '	data' → logprob: -16.054744720458984
    4. '_data' → logprob: -16.179744720458984
    5. '(data' → logprob: -16.179744720458984
    6. '.data' → logprob: -16.429744720458984
    7. '
' → logprob: -16.554744720458984
    8. 'd' → logprob: -16.804744720458984
    9. ')data' → logprob: -16.804744720458984
    10. 'dat' → logprob: -17.304744720458984

Token 411: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004035017918795347
    2. 'data' → logprob: -8.25040340423584
    3. ',' → logprob: -9.25040340423584
    4. '_data' → logprob: -11.75040340423584
    5. '_' → logprob: -12.25040340423584
    6. 's' → logprob: -12.25040340423584
    7. ' ' → logprob: -12.75040340423584
    8. '_core' → logprob: -12.87540340423584
    9. 'd' → logprob: -13.00040340423584
    10. '```' → logprob: -13.00040340423584

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5570885807392187e-05
    2. ' ,' → logprob: -11.125015258789062
    3. ',len' → logprob: -14.125015258789062
    4. ',
' → logprob: -17.000015258789062
    5. ',N' → logprob: -17.500015258789062
    6. ',n' → logprob: -18.000015258789062
    7. ',data' → logprob: -18.125015258789062
    8. ',length' → logprob: -19.000015258789062
    9. '   ' → logprob: -19.750015258789062
    10. '
' → logprob: -21.250015258789062

Token 413: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.2664456789934775e-06
    2. ' N' → logprob: -13.750000953674316
    3. 'len' → logprob: -16.125001907348633
    4. '   ' → logprob: -17.750001907348633
    5. '
' → logprob: -19.750001907348633
    6. '	N' → logprob: -22.000001907348633
    7. ' ' → logprob: -22.375001907348633
    8. '  ' → logprob: -22.500001907348633
    9. '_N' → logprob: -23.250001907348633
    10. '(N' → logprob: -23.500001907348633

Token 414: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.625
    3. ' ' → logprob: -18.625
    4. '2' → logprob: -19.0
    5. '<|end|>' → logprob: -19.0
    6. ')' → logprob: -19.3125
    7. '
' → logprob: -19.75
    8. '۱' → logprob: -20.0625
    9. '[' → logprob: -20.1875
    10. '১' → logprob: -20.25

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004548319149762392
    2. '+' → logprob: -5.5045485496521
    3. ' +' → logprob: -8.129548072814941
    4. ' ,' → logprob: -8.879548072814941
    5. ',N' → logprob: -11.004548072814941
    6. '   ' → logprob: -11.504548072814941
    7. '+,' → logprob: -12.254548072814941
    8. ',
' → logprob: -12.754548072814941
    9. ')' → logprob: -14.379548072814941
    10. 'N' → logprob: -14.629548072814941

Token 416: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0007455448503606021
    2. ' N' → logprob: -7.25074577331543
    3. '   ' → logprob: -10.25074577331543
    4. '  ' → logprob: -16.37574577331543
    5. ' ' → logprob: -16.50074577331543
    6. '    ' → logprob: -18.00074577331543
    7. '	N' → logprob: -19.50074577331543
    8. '
' → logprob: -20.25074577331543
    9. '       ' → logprob: -20.50074577331543
    10. '     ' → logprob: -21.50074577331543

Token 417: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '   ' → logprob: -17.0
    4. 'N' → logprob: -17.375
    5. '+' → logprob: -17.875
    6. '₂' → logprob: -18.125
    7. ')' → logprob: -18.5
    8. '۲' → logprob: -18.625
    9. '[' → logprob: -19.375
    10. '_' → logprob: -19.375

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.93448489275761e-05
    2. ' ,' → logprob: -9.750079154968262
    3. '+' → logprob: -11.500079154968262
    4. ',
' → logprob: -12.375079154968262
    5. '   ' → logprob: -12.750079154968262
    6. ' +' → logprob: -13.125079154968262
    7. ')' → logprob: -13.875079154968262
    8. '),' → logprob: -15.250079154968262
    9. '+,' → logprob: -15.750079154968262
    10. '```' → logprob: -16.000080108642578

Token 419: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.029750484973192215
    2. ' mod' → logprob: -3.5297505855560303
    3. '	mod' → logprob: -17.15475082397461
    4. '   ' → logprob: -19.15475082397461
    5. '(mod' → logprob: -19.77975082397461
    6. ' ' → logprob: -20.52975082397461
    7. '.mod' → logprob: -21.90475082397461
    8. ')' → logprob: -21.90475082397461
    9. '    ' → logprob: -22.15475082397461
    10. '_mod' → logprob: -22.15475082397461

Token 420: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.00000286102295
    3. ' )' → logprob: -16.500001907348633
    4. ')return' → logprob: -16.625001907348633
    5. '<|end|>' → logprob: -17.750001907348633
    6. ')#' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.375001907348633
    8. ')

' → logprob: -18.875001907348633
    9. ')`' → logprob: -19.000001907348633
    10. '),' → logprob: -19.250001907348633

Token 421: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005462417611852288
    2. '<|end|>' → logprob: -8.1255464553833
    3. '#' → logprob: -9.2505464553833
    4. 'data' → logprob: -9.7505464553833
    5. '```' → logprob: -10.6255464553833
    6. ')' → logprob: -10.7505464553833
    7. '[' → logprob: -11.0005464553833
    8. 'class' → logprob: -11.6255464553833
    9. 'from' → logprob: -12.8755464553833
    10. '<|end|>' → logprob: -12.8755464553833

Token 422: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.23485587537288666
    2. 'solve' → logprob: -2.484855890274048
    3. 'dp' → logprob: -2.859855890274048
    4. ' main' → logprob: -3.359855890274048
    5. 'dfs' → logprob: -4.109855651855469
    6. ' solve' → logprob: -5.734855651855469
    7. 'combine' → logprob: -5.734855651855469
    8. 'count' → logprob: -5.859855651855469
    9. 'calculate' → logprob: -6.359855651855469
    10. 'calc' → logprob: -6.609855651855469

Token 423: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.0706267356872559
    2. '(data' → logprob: -2.195626735687256
    3. '_sub' → logprob: -2.320626735687256
    4. '_' → logprob: -2.570626735687256
    5. '_factor' → logprob: -2.820626735687256
    6. '(dp' → logprob: -2.945626735687256
    7. '_count' → logprob: -3.070626735687256
    8. '(' → logprob: -3.195626735687256
    9. '_max' → logprob: -3.570626735687256
    10. '_size' → logprob: -3.820626735687256

Token 424: '_add' (ID: 8390)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.11427878588438034
    2. '(data' → logprob: -2.489278793334961
    3. '():' → logprob: -4.114278793334961
    4. '(' → logprob: -4.989278793334961
    5. '(node' → logprob: -8.114278793334961
    6. '(dp' → logprob: -8.489278793334961
    7. '(size' → logprob: -8.614278793334961
    8. '(tree' → logprob: -8.739278793334961
    9. '(parent' → logprob: -8.989278793334961
    10. '(nodes' → logprob: -9.239278793334961

Token 425: '_edge' (ID: 43226)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.01888694055378437
    2. '(dp' → logprob: -4.393887042999268
    3. '(' → logprob: -5.268887042999268
    4. '(core' → logprob: -8.76888656616211
    5. '(a' → logprob: -9.01888656616211
    6. '(d' → logprob: -9.01888656616211
    7. '(parent' → logprob: -9.26888656616211
    8. '_core' → logprob: -9.64388656616211
    9. '(left' → logprob: -9.76888656616211
    10. '(def' → logprob: -10.01888656616211

Token 426: '_values' (ID: 20393)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.3915883004665375
    2. '(graph' → logprob: -1.3915883302688599
    3. '(dp' → logprob: -2.6415882110595703
    4. '(' → logprob: -5.64158821105957
    5. '(parent' → logprob: -8.01658821105957
    6. '(node' → logprob: -10.01658821105957
    7. '(df' → logprob: -10.51658821105957
    8. '(dat' → logprob: -10.64158821105957
    9. '(g' → logprob: -10.89158821105957
    10. '(d' → logprob: -11.14158821105957

Token 427: '(data' (ID: 4819)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.08269629627466202
    2. '(data' → logprob: -2.8326961994171143
    3. '(dp' → logprob: -4.707696437835693
    4. '(' → logprob: -5.332696437835693
    5. '():' → logprob: -5.457696437835693
    6. '(parent' → logprob: -6.582696437835693
    7. '(node' → logprob: -7.707696437835693
    8. '(tree' → logprob: -9.457695960998535
    9. '(g' → logprob: -9.582695960998535
    10. '(nodes' → logprob: -9.832695960998535

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39936551451683044
    2. '1' → logprob: -1.1493655443191528
    3. ',data' → logprob: -5.024365425109863
    4. '(data' → logprob: -6.524365425109863
    5. ' ,' → logprob: -6.649365425109863
    6. '):' → logprob: -6.649365425109863
    7. '   ' → logprob: -7.399365425109863
    8. 'data' → logprob: -7.524365425109863
    9. '2' → logprob: -8.399365425109863
    10. '):
' → logprob: -9.774365425109863

Token 429: ' fact' (ID: 2840)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.9766336679458618
    2. ' mod' → logprob: -1.8516336679458618
    3. ' data' → logprob: -2.8516335487365723
    4. ' new' → logprob: -2.9766335487365723
    5. ' edge' → logprob: -3.1016335487365723
    6. 'data' → logprob: -3.2266335487365723
    7. ' n' → logprob: -3.6016335487365723
    8. 'edge' → logprob: -3.7266335487365723
    9. 'new' → logprob: -3.8516335487365723
    10. 'graph' → logprob: -3.8516335487365723

Token 430: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0028190165758132935
    2. '   ' → logprob: -6.502819061279297
    3. ',' → logprob: -7.127819061279297
    4. '2' → logprob: -8.752819061279297
    5. '=' → logprob: -8.752819061279297
    6. '):
' → logprob: -9.752819061279297
    7. ')' → logprob: -10.127819061279297
    8. ' =' → logprob: -10.252819061279297
    9. 'def' → logprob: -10.502819061279297
    10. '):' → logprob: -11.127819061279297

Token 431: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2520909607410431
    2. '_' → logprob: -1.5020909309387207
    3. ',' → logprob: -9.752091407775879
    4. '[' → logprob: -10.502091407775879
    5. '   ' → logprob: -10.627091407775879
    6. ' ' → logprob: -10.877091407775879
    7. ')' → logprob: -12.127091407775879
    8. '```' → logprob: -12.252091407775879
    9. '₂' → logprob: -12.252091407775879
    10. 'def' → logprob: -12.252091407775879

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003967147320508957
    2. '):' → logprob: -6.25396728515625
    3. '):
' → logprob: -6.37896728515625
    4. ' ,' → logprob: -8.37896728515625
    5. '   ' → logprob: -9.50396728515625
    6. ',data' → logprob: -11.12896728515625
    7. ',n' → logprob: -12.75396728515625
    8. '):
' → logprob: -13.00396728515625
    9. ')' → logprob: -13.12896728515625
    10. '_,' → logprob: -13.25396728515625

Token 433: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.06374438107013702
    2. ' mod' → logprob: -2.938744306564331
    3. 'n' → logprob: -6.06374454498291
    4. '   ' → logprob: -6.81374454498291
    5. 'data' → logprob: -7.06374454498291
    6. 'fact' → logprob: -7.18874454498291
    7. 'graph' → logprob: -7.31374454498291
    8. ' n' → logprob: -7.68874454498291
    9. '):
' → logprob: -7.93874454498291
    10. 'len' → logprob: -7.93874454498291

Token 434: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18101924657821655
    2. ',' → logprob: -1.8060193061828613
    3. '):
' → logprob: -6.806019306182861
    4. ',data' → logprob: -9.806018829345703
    5. '   ' → logprob: -9.931018829345703
    6. ')' → logprob: -10.181018829345703
    7. ' ,' → logprob: -12.181018829345703
    8. '):
' → logprob: -12.431018829345703
    9. ':' → logprob: -12.556018829345703
    10. ' ):' → logprob: -12.681018829345703

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010542457457631826
    2. 'data' → logprob: -7.626054286956787
    3. '):
' → logprob: -9.001053810119629
    4. ' for' → logprob: -9.501053810119629
    5. 'for' → logprob: -9.501053810119629
    6. 'def' → logprob: -9.876053810119629
    7. 'length' → logprob: -9.876053810119629
    8. ':
' → logprob: -10.501053810119629
    9. ':' → logprob: -10.626053810119629
    10. ' length' → logprob: -10.876053810119629

Token 436: ' N' (ID: 478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4928804934024811
    2. '   ' → logprob: -1.8678804636001587
    3. 'data' → logprob: -2.1178805828094482
    4. 'length' → logprob: -3.3678805828094482
    5. 'result' → logprob: -3.9928805828094482
    6. 'n' → logprob: -4.492880344390869
    7. ' for' → logprob: -4.742880344390869
    8. 'res' → logprob: -4.867880344390869
    9. 'len' → logprob: -4.992880344390869
    10. 'N' (adapté à ' N') → logprob: -5.117880344390869

Token 437: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4289860725402832
    2. ' =' → logprob: -1.0539860725402832
    3. '   ' → logprob: -8.803985595703125
    4. '=len' → logprob: -9.428985595703125
    5. ',' → logprob: -9.928985595703125
    6. '=data' → logprob: -13.678985595703125
    7. 'len' → logprob: -14.553985595703125
    8. '_' → logprob: -14.553985595703125
    9. ' ' → logprob: -14.803985595703125
    10. '  ' → logprob: -14.803985595703125

Token 438: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01815848983824253
    2. ' len' → logprob: -4.018158435821533
    3. 'np' → logprob: -12.393158912658691
    4. 'data' → logprob: -13.018158912658691
    5. '(len' → logprob: -13.518158912658691
    6. ' np' → logprob: -15.643158912658691
    7. ' data' → logprob: -15.643158912658691
    8. ' ' → logprob: -15.893158912658691
    9. '   ' → logprob: -15.893158912658691
    10. '[len' → logprob: -16.018157958984375

Token 439: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -6.2729995988775045e-06
    2. 'data' → logprob: -12.000006675720215
    3. '(' → logprob: -18.3750057220459
    4. ' data' → logprob: -18.7500057220459
    5. ')data' → logprob: -19.1250057220459
    6. '=data' → logprob: -19.6250057220459
    7. '[data' → logprob: -20.2500057220459
    8. ',data' → logprob: -21.2500057220459
    9. '<data' → logprob: -21.6250057220459
    10. ' (' → logprob: -22.1250057220459

Token 440: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011714138090610504
    2. ')-' → logprob: -6.876171588897705
    3. ')
' → logprob: -9.126171112060547
    4. '   ' → logprob: -10.751171112060547
    5. ' )' → logprob: -12.251171112060547
    6. ' ' → logprob: -13.626171112060547
    7. '[' → logprob: -14.751171112060547
    8. 'def' → logprob: -15.251171112060547
    9. '-' → logprob: -15.251171112060547
    10. '
' → logprob: -15.751171112060547

Token 441: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0063231163658201694
    2. ')' → logprob: -6.381323337554932
    3. 'def' → logprob: -6.381323337554932
    4. '-' → logprob: -6.381323337554932
    5. '()' → logprob: -7.381323337554932
    6. ' -' → logprob: -8.006322860717773
    7. '()-' → logprob: -9.381322860717773
    8. '
' → logprob: -10.006322860717773
    9. ' ' → logprob: -10.506322860717773
    10. ')
' → logprob: -10.756322860717773

Token 442: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -16.50000762939453
    4. '
' → logprob: -17.00000762939453
    5. '2' → logprob: -17.25000762939453
    6. '   ' → logprob: -17.56250762939453
    7. '<|end|>' → logprob: -17.62500762939453
    8. ')' → logprob: -18.06250762939453
    9. '0' → logprob: -18.43750762939453
    10. '[' → logprob: -18.75000762939453

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.125041007995605
    3. '2' → logprob: -14.500041007995605
    4. '   ' → logprob: -15.750041007995605
    5. '
' → logprob: -16.56254005432129
    6. '```' → logprob: -16.68754005432129
    7. 'len' → logprob: -16.93754005432129
    8. '0' → logprob: -17.12504005432129
    9. 'data' → logprob: -18.25004005432129
    10. '  ' → logprob: -18.31254005432129

Token 444: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16365937888622284
    2. '
' → logprob: -1.9136593341827393
    3. ')' → logprob: -6.538659572601318
    4. 'data' → logprob: -7.788659572601318
    5. '    
' → logprob: -7.788659572601318
    6. '```' → logprob: -8.41365909576416
    7. ' for' → logprob: -8.78865909576416
    8. 'for' → logprob: -8.91365909576416
    9. ')
' → logprob: -8.91365909576416
    10. ',' → logprob: -9.03865909576416

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004424301441758871
    2. 'result' → logprob: -6.004424095153809
    3. 'for' → logprob: -6.629424095153809
    4. 'new' → logprob: -7.754424095153809
    5. 'res' → logprob: -9.254424095153809
    6. 'dp' → logprob: -9.754424095153809
    7. 'data' → logprob: -11.379424095153809
    8. 'def' → logprob: -12.004424095153809
    9. 'temp' → logprob: -12.629424095153809
    10. 'ans' → logprob: -12.754424095153809

Token 446: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4586394727230072
    2. 'new' → logprob: -1.8336395025253296
    3. 'data' (adapté à ' data') → logprob: -2.33363938331604
    4. 'result' → logprob: -2.83363938331604
    5. 'res' → logprob: -3.95863938331604
    6. '   ' → logprob: -4.583639621734619
    7. 'dp' → logprob: -4.708639621734619
    8. 'ans' → logprob: -5.958639621734619
    9. 'ret' → logprob: -5.958639621734619
    10. 'tmp' → logprob: -6.333639621734619

Token 447: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4682350754737854
    2. '=' → logprob: -1.8432350158691406
    3. '%=' → logprob: -2.4682350158691406
    4. '*=' → logprob: -2.9682350158691406
    5. '+=' → logprob: -3.4682350158691406
    6. '[:]' → logprob: -4.093235015869141
    7. ' *=' → logprob: -4.843235015869141
    8. ' =' → logprob: -5.093235015869141
    9. ' +=' → logprob: -5.468235015869141
    10. '%' → logprob: -5.593235015869141

Token 448: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1801977902650833
    2. ' =' → logprob: -1.805197834968567
    3. '[' → logprob: -8.555197715759277
    4. ',' → logprob: -8.680197715759277
    5. ' ' → logprob: -10.180197715759277
    6. '[:]' → logprob: -11.305197715759277
    7. ')' → logprob: -11.680197715759277
    8. '=data' → logprob: -11.805197715759277
    9. ' +=' → logprob: -12.555197715759277
    10. '+=' → logprob: -12.680197715759277

Token 449: ' zeros' (ID: 42274)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.6416946649551392
    2. 'zeros' → logprob: -1.1416946649551392
    3. ' zeros' → logprob: -2.7666945457458496
    4. 'numpy' → logprob: -3.1416945457458496
    5. ' np' → logprob: -3.7666945457458496
    6. 'data' → logprob: -4.26669454574585
    7. ' numpy' → logprob: -5.26669454574585
    8. ' data' → logprob: -5.89169454574585
    9. 'dp' → logprob: -6.01669454574585
    10. '(np' → logprob: -9.329195022583008

Token 450: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.005689157173037529
    2. '(N' → logprob: -5.2556891441345215
    3. 'array' → logprob: -7.8806891441345215
    4. 'Array' → logprob: -9.75568962097168
    5. '(' → logprob: -11.38068962097168
    6. '(len' → logprob: -12.63068962097168
    7. 'def' → logprob: -13.75568962097168
    8. '((' → logprob: -14.38068962097168
    9. '_ARRAY' → logprob: -14.63068962097168
    10. 'N' → logprob: -15.00568962097168

Token 451: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00022439735766965896
    2. '(' → logprob: -8.625224113464355
    3. '(len' → logprob: -10.125224113464355
    4. 'N' → logprob: -13.000224113464355
    5. '((' → logprob: -13.750224113464355
    6. '   ' → logprob: -14.000224113464355
    7. 'len' → logprob: -14.625224113464355
    8. '(n' → logprob: -16.500225067138672
    9. ' (' → logprob: -17.125225067138672
    10. '(
' → logprob: -18.125225067138672

Token 452: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13785535097122192
    2. ')
' → logprob: -2.262855291366577
    3. ')' → logprob: -3.887855291366577
    4. '())
' → logprob: -6.762855529785156
    5. ' +' → logprob: -6.762855529785156
    6. '()' → logprob: -7.137855529785156
    7. '()+' → logprob: -8.012855529785156
    8. '*' → logprob: -8.512855529785156
    9. '(' → logprob: -8.887855529785156
    10. 'N' → logprob: -9.387855529785156

Token 453: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043092481791973114
    2. '2' → logprob: -3.1680924892425537
    3. '3' → logprob: -9.418092727661133
    4. ' ' → logprob: -12.543092727661133
    5. '   ' → logprob: -12.793092727661133
    6. '4' → logprob: -13.543092727661133
    7. '
' → logprob: -13.605592727661133
    8. '5' → logprob: -14.355592727661133
    9. '10' → logprob: -15.168092727661133
    10. '```' → logprob: -15.168092727661133

Token 454: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011070103384554386
    2. ')' → logprob: -4.511070251464844
    3. ')
' → logprob: -10.761070251464844
    4. ')

' → logprob: -14.886070251464844
    5. '())
' → logprob: -15.261070251464844
    6. ' )
' → logprob: -15.261070251464844
    7. '   ' → logprob: -16.261070251464844
    8. ')`
' → logprob: -16.761070251464844
    9. '()' → logprob: -17.261070251464844
    10. '```' → logprob: -17.261070251464844

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016286669299006462
    2. ' for' → logprob: -4.766286849975586
    3. 'for' → logprob: -5.141286849975586
    4. 'data' → logprob: -6.766286849975586
    5. ')' → logprob: -7.766286849975586
    6. 'def' → logprob: -10.016286849975586
    7. '```' → logprob: -10.016286849975586
    8. ' data' → logprob: -10.141286849975586
    9. '
' → logprob: -10.141286849975586
    10. '<|end|>' → logprob: -11.016286849975586

Token 456: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14341028034687042
    2. '   ' → logprob: -2.2684102058410645
    3. 'data' (adapté à ' data') → logprob: -3.5184102058410645
    4. ' for' → logprob: -7.7684102058410645
    5. '```' → logprob: -10.393410682678223
    6. 'dp' → logprob: -12.643410682678223
    7. '	for' → logprob: -12.768410682678223
    8. ' data' → logprob: -13.268410682678223
    9. 'i' → logprob: -13.393410682678223
    10. 'factor' → logprob: -13.393410682678223

Token 457: '1' (ID: 16)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.8427255749702454
    2. '[:' → logprob: -1.2177255153656006
    3. '[' → logprob: -1.5927255153656006
    4. '=' → logprob: -3.3427255153656006
    5. '[:-' → logprob: -3.4677255153656006
    6. ' =' → logprob: -6.84272575378418
    7. '[...]' → logprob: -7.09272575378418
    8. '1' → logprob: -7.34272575378418
    9. '=data' → logprob: -7.71772575378418
    10. ':' → logprob: -8.96772575378418

Token 458: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.20703884959220886
    2. '[' → logprob: -2.2070388793945312
    3. '[:]' → logprob: -2.5820388793945312
    4. '[:-' → logprob: -7.332038879394531
    5. '=' → logprob: -7.832038879394531
    6. '[data' → logprob: -8.457038879394531
    7. ' =' → logprob: -10.457038879394531
    8. '=data' → logprob: -11.332038879394531
    9. '[
' → logprob: -11.582038879394531
    10. ':' → logprob: -11.832038879394531

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13080769777297974
    2. ':' → logprob: -2.380807638168335
    3. '0' → logprob: -3.880807638168335
    4. ':]' → logprob: -5.755807876586914
    5. ':N' → logprob: -5.880807876586914
    6. '2' → logprob: -6.130807876586914
    7. '
' → logprob: -7.380807876586914
    8. ':n' → logprob: -8.255807876586914
    9. ':-' → logprob: -9.255807876586914
    10. 'np' → logprob: -9.880807876586914

Token 460: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.048504576086997986
    2. ':N' → logprob: -3.423504590988159
    3. ']' → logprob: -4.79850435256958
    4. ':' → logprob: -5.04850435256958
    5. ']=' → logprob: -9.923504829406738
    6. ':-' → logprob: -11.673504829406738
    7. ' :]' → logprob: -11.673504829406738
    8. ':].' → logprob: -12.423504829406738
    9. '2' → logprob: -13.048504829406738
    10. ':]
' → logprob: -13.048504829406738

Token 461: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007516953162848949
    2. '=data' → logprob: -6.007516860961914
    3. '+=' → logprob: -6.007516860961914
    4. ' =' → logprob: -6.632516860961914
    5. '[:]' → logprob: -6.757516860961914
    6. '[:' → logprob: -9.882516860961914
    7. '*=' → logprob: -10.757516860961914
    8. '[' → logprob: -12.382516860961914
    9. ' +=' → logprob: -12.757516860961914
    10. 'data' → logprob: -13.007516860961914

Token 462: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.02121879905462265
    2. '(data' → logprob: -3.896218776702881
    3. 'np' → logprob: -8.271219253540039
    4. ' data' → logprob: -8.521219253540039
    5. '(np' → logprob: -9.021219253540039
    6. '[data' → logprob: -10.021219253540039
    7. ' (' → logprob: -10.896219253540039
    8. '(' → logprob: -11.771219253540039
    9. '((' → logprob: -12.146219253540039
    10. 'fact' → logprob: -12.521219253540039

Token 463: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7719777822494507
    2. '
' → logprob: -2.0219779014587402
    3. '[:]' → logprob: -2.1469779014587402
    4. '<|end|>' → logprob: -2.2719779014587402
    5. '%' → logprob: -2.8969779014587402
    6. '*' → logprob: -3.1469779014587402
    7. '1' → logprob: -3.6469779014587402
    8. ' *' → logprob: -3.7719779014587402
    9. '[:-' → logprob: -4.52197790145874
    10. '[:' → logprob: -4.52197790145874

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027393740601837635
    2. ' for' → logprob: -6.377739429473877
    3. 'for' → logprob: -7.627739429473877
    4. '
' → logprob: -7.877739429473877
    5. '<|end|>' → logprob: -10.002738952636719
    6. 'data' → logprob: -10.377738952636719
    7. '```' → logprob: -10.502738952636719
    8. '[' → logprob: -11.002738952636719
    9. ',' → logprob: -11.377738952636719
    10. '    
' → logprob: -12.002738952636719

Token 465: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03612394630908966
    2. '   ' → logprob: -3.7861239910125732
    3. 'data' (adapté à ' data') → logprob: -4.411123752593994
    4. ' for' → logprob: -7.536123752593994
    5. 'return' → logprob: -9.661124229431152
    6. 'dp' → logprob: -11.411124229431152
    7. '```' → logprob: -11.536124229431152
    8. '
' → logprob: -12.411124229431152
    9. 'temp' → logprob: -12.536124229431152
    10. 'factor' → logprob: -12.536124229431152

Token 466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025564655661582947
    2. '[' → logprob: -4.400564670562744
    3. '*=' → logprob: -5.400564670562744
    4. '%=' → logprob: -6.025564670562744
    5. '=' → logprob: -6.525564670562744
    6. '[:]' → logprob: -6.775564670562744
    7. ' *=' → logprob: -6.900564670562744
    8. '[:' → logprob: -7.650564670562744
    9. '
' → logprob: -7.775564670562744
    10. ' =' → logprob: -8.150564193725586

Token 467: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1364519596099854
    2. '%=' → logprob: -1.3864519596099854
    3. ' *=' → logprob: -1.8864519596099854
    4. ' %=' → logprob: -2.1364519596099854
    5. '*=' → logprob: -2.5114519596099854
    6. '%' → logprob: -3.7614519596099854
    7. '[:]' → logprob: -4.011451721191406
    8. '=' → logprob: -4.261451721191406
    9. '[:' → logprob: -4.636451721191406
    10. '[:-' → logprob: -5.136451721191406

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47873640060424805
    2. ':-' → logprob: -1.603736400604248
    3. ':]' → logprob: -2.228736400604248
    4. ':' → logprob: -2.728736400604248
    5. ':N' → logprob: -5.978736400604248
    6. ']' → logprob: -6.853736400604248
    7. '
' → logprob: -7.853736400604248
    8. '2' → logprob: -7.853736400604248
    9. '0' → logprob: -7.978736400604248
    10. ' :-' → logprob: -8.103736877441406

Token 469: ']' (ID: 60)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0005014431662857533
    2. ':' → logprob: -8.12550163269043
    3. ':-' → logprob: -9.25050163269043
    4. ':N' → logprob: -9.87550163269043
    5. ']' → logprob: -10.12550163269043
    6. ':].' → logprob: -11.50050163269043
    7. ':]
' → logprob: -13.37550163269043
    8. ':],' → logprob: -13.87550163269043
    9. ' :]' → logprob: -13.87550163269043
    10. ':,' → logprob: -14.25050163269043

Token 470: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.17942187190055847
    2. ':' → logprob: -2.429421901702881
    3. '*' → logprob: -3.304421901702881
    4. '=' → logprob: -4.054421901702881
    5. ' *=' → logprob: -4.429421901702881
    6. '+=' → logprob: -5.804421901702881
    7. '::' → logprob: -6.554421901702881
    8. '[:]' → logprob: -7.179421901702881
    9. '*:' → logprob: -7.304421901702881
    10. ':]' → logprob: -7.429421901702881

Token 471: ' -' (ID: 533)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.3047598600387573
    2. '(' → logprob: -1.9297598600387573
    3. '0' → logprob: -3.429759979248047
    4. 'fact' → logprob: -3.429759979248047
    5. '1' → logprob: -3.804759979248047
    6. 'data' → logprob: -4.929759979248047
    7. '(np' → logprob: -5.054759979248047
    8. '(f' → logprob: -5.054759979248047
    9. '(mod' → logprob: -5.429759979248047
    10. 'np' → logprob: -6.179759979248047

Token 472: ' (' (ID: 350)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.04207312688231468
    2. '1' → logprob: -3.4170730113983154
    3. 'fact' → logprob: -5.0420732498168945
    4. ' data' → logprob: -6.5420732498168945
    5. 'mod' → logprob: -9.167073249816895
    6. '(data' → logprob: -9.417073249816895
    7. '(' → logprob: -9.542073249816895
    8. 'np' → logprob: -10.042073249816895
    9. '2' → logprob: -10.167073249816895
    10. ' ' → logprob: -10.417073249816895

Token 473: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.08044237643480301
    2. 'fact' → logprob: -2.955442428588867
    3. 'np' → logprob: -4.080442428588867
    4. '(data' → logprob: -5.955442428588867
    5. 'sum' → logprob: -6.205442428588867
    6. '(' → logprob: -7.330442428588867
    7. 'mod' → logprob: -7.455442428588867
    8. '(np' → logprob: -7.580442428588867
    9. '1' → logprob: -7.830442428588867
    10. 'N' → logprob: -8.205442428588867

Token 474: ' *' (ID: 425)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2812980115413666
    2. '[' → logprob: -1.406298041343689
    3. '
' → logprob: -10.53129768371582
    4. '[
' → logprob: -10.65629768371582
    5. ')' → logprob: -10.78129768371582
    6. '```' → logprob: -11.03129768371582
    7. ')[' → logprob: -11.40629768371582
    8. ' [' → logprob: -11.53129768371582
    9. 'data' → logprob: -11.65629768371582
    10. ' ' → logprob: -11.65629768371582

Token 475: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.037034064531326294
    2. ' fact' → logprob: -4.162034034729004
    3. 'np' → logprob: -4.287034034729004
    4. ' np' → logprob: -5.912034034729004
    5. '1' → logprob: -6.787034034729004
    6. '(np' → logprob: -6.912034034729004
    7. '(' → logprob: -7.412034034729004
    8. ' (' → logprob: -7.787034034729004
    9. ' ' → logprob: -8.037034034729004
    10. '2' → logprob: -8.287034034729004

Token 476: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '[' → logprob: -18.375
    3. '(' → logprob: -20.25
    4. 'fact' → logprob: -20.625
    5. '-' → logprob: -20.875
    6. '```' → logprob: -21.625
    7. ' _' → logprob: -21.75
    8. '2' → logprob: -21.875
    9. '(_' → logprob: -21.875
    10. 'act' → logprob: -22.0

Token 477: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011073531582951546
    2. '2' → logprob: -4.511073589324951
    3. '[' → logprob: -10.761073112487793
    4. '(' → logprob: -13.886073112487793
    5. 'fact' → logprob: -13.886073112487793
    6. ' ' → logprob: -14.136073112487793
    7. '=' → logprob: -15.136073112487793
    8. '1' → logprob: -15.511073112487793
    9. 'array' → logprob: -15.636073112487793
    10. '-' → logprob: -15.761073112487793

Token 478: '[:' (ID: 7808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004524584859609604
    2. '1' → logprob: -5.5045247077941895
    3. ')[' → logprob: -8.504524230957031
    4. '2' → logprob: -9.004524230957031
    5. '[N' → logprob: -9.629524230957031
    6. '
' → logprob: -10.754524230957031
    7. ')' → logprob: -11.504524230957031
    8. '[:-' → logprob: -11.879524230957031
    9. '[:' → logprob: -12.004524230957031
    10. '**' → logprob: -13.754524230957031

Token 479: 'N' (ID: 45)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002989351749420166
    2. '1' → logprob: -5.877989292144775
    3. 'len' → logprob: -9.502989768981934
    4. 'N' → logprob: -10.377989768981934
    5. '-' → logprob: -10.627989768981934
    6. '[' → logprob: -10.752989768981934
    7. '0' → logprob: -12.002989768981934
    8. '(' → logprob: -12.252989768981934
    9. ')' → logprob: -12.377989768981934
    10. ']' → logprob: -12.377989768981934

Token 480: '+' (ID: 10)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6847670078277588
    2. '1' → logprob: -0.9347670078277588
    3. '[' → logprob: -2.934767007827759
    4. '[N' → logprob: -4.30976676940918
    5. '][:' → logprob: -4.43476676940918
    6. ']' → logprob: -4.93476676940918
    7. '][' → logprob: -5.18476676940918
    8. '[:' → logprob: -5.30976676940918
    9. '])' → logprob: -5.80976676940918
    10. '   ' → logprob: -6.43476676940918

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.429896944202483e-05
    2. 'N' → logprob: -10.500043869018555
    3. '2' → logprob: -12.125043869018555
    4. ' ' → logprob: -12.250043869018555
    5. ']' → logprob: -12.875043869018555
    6. '(' → logprob: -13.875043869018555
    7. '
' → logprob: -14.125043869018555
    8. '0' → logprob: -14.375043869018555
    9. '   ' → logprob: -14.375043869018555
    10. '-' → logprob: -15.500043869018555

Token 482: ']' (ID: 60)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.2689652442932129
    2. '[' → logprob: -1.518965244293213
    3. '][' → logprob: -4.893965244293213
    4. '])[' → logprob: -6.018965244293213
    5. '1' → logprob: -6.268965244293213
    6. ').' → logprob: -6.768965244293213
    7. ')' → logprob: -6.893965244293213
    8. ' )[' → logprob: -7.143965244293213
    9. '   ' → logprob: -7.393965244293213
    10. '%' → logprob: -7.393965244293213

Token 483: ' %' (ID: 1851)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.2420991063117981
    2. '[' → logprob: -1.8670990467071533
    3. '%' → logprob: -3.3670990467071533
    4. ')' → logprob: -4.117099285125732
    5. '   ' → logprob: -5.367099285125732
    6. ')%' → logprob: -6.242099285125732
    7. ' )[' → logprob: -6.867099285125732
    8. ').' → logprob: -6.867099285125732
    9. ' %' → logprob: -7.867099285125732
    10. '1' → logprob: -8.492098808288574

Token 484: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.836499985889532e-05
    2. ' mod' → logprob: -9.7500581741333
    3. '(mod' → logprob: -17.375059127807617
    4. '
' → logprob: -18.375059127807617
    5. '	mod' → logprob: -18.500059127807617
    6. ' ' → logprob: -18.875059127807617
    7. '```' → logprob: -19.375059127807617
    8. '10' → logprob: -20.000059127807617
    9. '   ' → logprob: -20.125059127807617
    10. 'moder' → logprob: -20.500059127807617

Token 485: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017258725129067898
    2. ')[' → logprob: -7.501725673675537
    3. ').' → logprob: -7.626725673675537
    4. ')%' → logprob: -7.751725673675537
    5. '[' → logprob: -9.251726150512695
    6. '   ' → logprob: -9.751726150512695
    7. ' )' → logprob: -10.126726150512695
    8. '[::-' → logprob: -11.501726150512695
    9. ')
' → logprob: -11.626726150512695
    10. '+' → logprob: -12.126726150512695

Token 486: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0280383548888494e-06
    2. 'dot' → logprob: -14.750000953674316
    3. 'tolist' → logprob: -15.500000953674316
    4. ' sum' → logprob: -15.625000953674316
    5. '.sum' → logprob: -16.375001907348633
    6. 'astype' → logprob: -17.375001907348633
    7. '	sum' → logprob: -17.375001907348633
    8. '_sum' → logprob: -17.375001907348633
    9. '```' → logprob: -17.625001907348633
    10. 'copy' → logprob: -18.250001907348633

Token 487: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008569653145968914
    2. '()%' → logprob: -5.008569717407227
    3. '()
' → logprob: -6.508569717407227
    4. '())' → logprob: -8.383569717407227
    5. '()[' → logprob: -9.383569717407227
    6. ')' → logprob: -10.883569717407227
    7. '%' → logprob: -11.758569717407227
    8. '()+' → logprob: -12.258569717407227
    9. '()<' → logprob: -12.758569717407227
    10. ' ()' → logprob: -12.883569717407227

Token 488: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4681864082813263
    2. ' %' → logprob: -1.093186378479004
    3. ')' → logprob: -4.093186378479004
    4. '   ' → logprob: -4.468186378479004
    5. '
' → logprob: -4.843186378479004
    6. 'data' → logprob: -6.968186378479004
    7. '<|end|>' → logprob: -7.468186378479004
    8. ')%' → logprob: -7.718186378479004
    9. '%n' → logprob: -9.468186378479004
    10. ' data' → logprob: -9.593186378479004

Token 489: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005530327325686812
    2. ' mod' → logprob: -7.500553131103516
    3. '(mod' → logprob: -18.625553131103516
    4. '	mod' → logprob: -19.625553131103516
    5. ' ' → logprob: -21.375553131103516
    6. 'mo' → logprob: -22.500553131103516
    7. '```' → logprob: -22.500553131103516
    8. '   ' → logprob: -22.750553131103516
    9. 'moder' → logprob: -23.000553131103516
    10. '10' → logprob: -23.250553131103516

Token 490: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0646386370062828
    2. '
' → logprob: -3.564638614654541
    3. '\n' → logprob: -4.189638614654541
    4. '<|end|>' → logprob: -4.314638614654541
    5. ')' → logprob: -6.564638614654541
    6. '    
' → logprob: -6.814638614654541
    7. '  
' → logprob: -7.564638614654541
    8. '	return' → logprob: -7.814638614654541
    9. '  ' → logprob: -8.0646390914917
    10. ' 
' → logprob: -8.0646390914917

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035737767815589905
    2. '<|end|>' → logprob: -4.035737991333008
    3. '
' → logprob: -5.160737991333008
    4. '[' → logprob: -6.160737991333008
    5. '\n' → logprob: -6.285737991333008
    6. '    
' → logprob: -6.410737991333008
    7. ')' → logprob: -6.910737991333008
    8. ' ' → logprob: -7.035737991333008
    9. '```' → logprob: -7.285737991333008
    10. '  
' → logprob: -7.535737991333008

Token 492: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024273283779621124
    2. 'return' (adapté à ' return') → logprob: -3.77427339553833
    3. ' return' → logprob: -6.89927339553833
    4. 'data' → logprob: -11.024272918701172
    5. '	return' → logprob: -14.024272918701172
    6. '```' → logprob: -14.524272918701172
    7. ' ' → logprob: -14.774272918701172
    8. ' data' → logprob: -14.899272918701172
    9. '  ' → logprob: -15.899272918701172
    10. '
' → logprob: -16.399272918701172

Token 493: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.002432501409202814
    2. ' data' → logprob: -6.127432346343994
    3. 'numpy' → logprob: -8.377432823181152
    4. ' numpy' → logprob: -11.252432823181152
    5. 'np' → logprob: -12.627432823181152
    6. 'n' → logprob: -15.252432823181152
    7. ' ' → logprob: -15.877432823181152
    8. 'dp' → logprob: -16.002431869506836
    9. '   ' → logprob: -16.252431869506836
    10. 'array' → logprob: -16.502431869506836

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26554426550865173
    2. '<|end|>' → logprob: -1.5155442953109741
    3. 'data' → logprob: -4.765544414520264
    4. '[' → logprob: -6.015544414520264
    5. '<|end|>' → logprob: -7.140544414520264
    6. ')' → logprob: -8.015543937683105
    7. '
' → logprob: -8.015543937683105
    8. '```' → logprob: -8.390543937683105
    9. '[
' → logprob: -9.015543937683105
    10. ' ' → logprob: -9.265543937683105

Token 495: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3365649878978729
    2. '<|end|>' → logprob: -1.3365650177001953
    3. '```' → logprob: -4.586565017700195
    4. '
' → logprob: -4.586565017700195
    5. '#' → logprob: -6.461565017700195
    6. 'data' → logprob: -7.711565017700195
    7. '<|end|>' → logprob: -8.086565017700195
    8. ')' → logprob: -8.711565017700195
    9. '[' → logprob: -10.336565017700195
    10. '

' → logprob: -10.461565017700195

Token 497: ' dp' (ID: 21546)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8124086260795593
    2. ' compute' → logprob: -0.8124086260795593
    3. 'compute' → logprob: -3.687408685684204
    4. ' solve' → logprob: -3.937408685684204
    5. ' dfs' → logprob: -4.437408447265625
    6. ' dp' → logprob: -4.687408447265625
    7. 'main' → logprob: -5.062408447265625
    8. ' process' → logprob: -5.187408447265625
    9. ' fill' → logprob: -5.562408447265625
    10. ' calculate' → logprob: -5.937408447265625

Token 498: '_add' (ID: 8390)
  Prédit: '_merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_merge' → logprob: -0.15696455538272858
    2. '_add' → logprob: -2.0319645404815674
    3. '_' → logprob: -5.4069647789001465
    4. '_expand' → logprob: -5.4069647789001465
    5. '_append' → logprob: -5.5319647789001465
    6. '_extend' → logprob: -8.281964302062988
    7. '_insert' → logprob: -9.156964302062988
    8. '_fill' → logprob: -9.156964302062988
    9. '_mul' → logprob: -9.406964302062988
    10. '_split' → logprob: -9.531964302062988

Token 499: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00333349104039371
    2. '_core' → logprob: -6.253333568572998
    3. '_data' → logprob: -7.128333568572998
    4. '_edges' → logprob: -8.00333309173584
    5. '_value' → logprob: -9.12833309173584
    6. '_' → logprob: -10.25333309173584
    7. '_add' → logprob: -11.25333309173584
    8. ' _' → logprob: -11.37833309173584
    9. '_node' → logprob: -11.75333309173584
    10. '_ed' → logprob: -11.87833309173584

Token 500: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.0004329341172706336
    2. '(' → logprob: -7.750432968139648
    3. ' (' → logprob: -13.625432968139648
    4. '_data' → logprob: -15.625432968139648
    5. '(d' → logprob: -15.625432968139648
    6. '_' → logprob: -15.875432968139648
    7. '(_' → logprob: -15.875432968139648
    8. 'data' → logprob: -16.62543296813965
    9. '(dat' → logprob: -16.62543296813965
    10. '(core' → logprob: -16.87543296813965

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38923484086990356
    2. '):' → logprob: -1.1392347812652588
    3. ',data' → logprob: -6.889235019683838
    4. '):
' → logprob: -7.139235019683838
    5. ')' → logprob: -7.639235019683838
    6. 'data' → logprob: -11.13923454284668
    7. '   ' → logprob: -11.38923454284668
    8. ' ,' → logprob: -11.51423454284668
    9. '(data' → logprob: -12.01423454284668
    10. ' ):' → logprob: -12.13923454284668

Token 502: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.2939808666706085
    2. ' fact' → logprob: -1.4189808368682861
    3. 'mod' → logprob: -4.918981075286865
    4. ' mod' → logprob: -5.918981075286865
    5. 'data' → logprob: -6.668981075286865
    6. ' data' → logprob: -6.793981075286865
    7. 'factor' → logprob: -8.918980598449707
    8. 'dp' → logprob: -9.793980598449707
    9. ' ' → logprob: -10.043980598449707
    10. ' dp' → logprob: -10.543980598449707

Token 503: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.531315314830863e-06
    2. ',' → logprob: -13.375003814697266
    3. '2' → logprob: -14.500003814697266
    4. ')' → logprob: -15.375003814697266
    5. '_,' → logprob: -15.750003814697266
    6. ')_' → logprob: -15.875003814697266
    7. '_
' → logprob: -15.875003814697266
    8. '(' → logprob: -16.125003814697266
    9. 's' → logprob: -16.375003814697266
    10. ' _' → logprob: -16.500003814697266

Token 504: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001438266917830333
    2. '_' → logprob: -9.000144004821777
    3. ' ' → logprob: -11.500144004821777
    4. '[' → logprob: -12.875144004821777
    5. '   ' → logprob: -12.875144004821777
    6. '```' → logprob: -13.500144004821777
    7. ',' → logprob: -13.625144004821777
    8. '
' → logprob: -14.375144004821777
    9. '₂' → logprob: -14.875144004821777
    10. ')' → logprob: -15.500144004821777

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.353008499601856e-05
    2. '):' → logprob: -10.000093460083008
    3. ' ,' → logprob: -10.625093460083008
    4. ',data' → logprob: -11.250093460083008
    5. '):
' → logprob: -11.875093460083008
    6. '   ' → logprob: -12.625093460083008
    7. ',
' → logprob: -15.750093460083008
    8. 'data' → logprob: -16.000093460083008
    9. ')' → logprob: -16.500093460083008
    10. '),' → logprob: -17.375093460083008

Token 506: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16022777557373047
    2. ' mod' → logprob: -1.9102277755737305
    3. 'data' → logprob: -13.91022777557373
    4. '	mod' → logprob: -14.16022777557373
    5. ' ' → logprob: -14.41022777557373
    6. ' data' → logprob: -14.53522777557373
    7. '10' → logprob: -15.53522777557373
    8. '   ' → logprob: -15.66022777557373
    9. '_mod' → logprob: -15.78522777557373
    10. '0' → logprob: -16.160228729248047

Token 507: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25213515758514404
    2. '):
' → logprob: -1.502135157585144
    3. '   ' → logprob: -8.877135276794434
    4. ',' → logprob: -10.252135276794434
    5. ')' → logprob: -10.752135276794434
    6. '):
' → logprob: -12.252135276794434
    7. '(data' → logprob: -13.127135276794434
    8. ' ):' → logprob: -14.127135276794434
    9. ',data' → logprob: -14.377135276794434
    10. '):

' → logprob: -14.502135276794434

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.3213025744771585e-05
    2. 'data' → logprob: -11.000033378601074
    3. 'return' → logprob: -11.750033378601074
    4. 'def' → logprob: -12.250033378601074
    5. 'N' → logprob: -13.250033378601074
    6. ' return' → logprob: -14.625033378601074
    7. 'n' → logprob: -15.000033378601074
    8. 'length' → logprob: -15.000033378601074
    9. ')' → logprob: -15.375033378601074
    10. '	return' → logprob: -15.875033378601074

Token 509: ' return' (ID: 622)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3608708083629608
    2. 'N' → logprob: -1.9858708381652832
    3. 'return' (adapté à ' return') → logprob: -2.235870838165283
    4. '   ' → logprob: -2.860870838165283
    5. 'n' → logprob: -7.360870838165283
    6. 'len' → logprob: -8.735870361328125
    7. 'length' → logprob: -8.860870361328125
    8. 'result' → logprob: -8.860870361328125
    9. ' data' → logprob: -9.485870361328125
    10. ' return' → logprob: -9.610870361328125

Token 510: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.07124011963605881
    2. ' compute' → logprob: -2.696240186691284
    3. 'dp' → logprob: -6.946239948272705
    4. 'data' → logprob: -8.446240425109863
    5. ' dp' → logprob: -9.571240425109863
    6. ' data' → logprob: -10.196240425109863
    7. 'np' → logprob: -11.946240425109863
    8. ' np' → logprob: -13.446240425109863
    9. 'com' → logprob: -13.446240425109863
    10. '
' → logprob: -13.696240425109863

Token 511: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0002619318547658622
    2. 'dp' → logprob: -8.250262260437012
    3. '(dp' → logprob: -14.750262260437012
    4. 'DP' → logprob: -16.375261306762695
    5. '_data' → logprob: -17.000261306762695
    6. 'data' → logprob: -17.125261306762695
    7. '	dp' → logprob: -18.000261306762695
    8. 'd' → logprob: -18.000261306762695
    9. '_dc' → logprob: -18.125261306762695
    10. ' dp' → logprob: -18.250261306762695

Token 512: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -2.1054253011243418e-05
    2. 'add' → logprob: -11.250020980834961
    3. '_dp' → logprob: -12.625020980834961
    4. '_edge' → logprob: -13.000020980834961
    5. 'dp' → logprob: -13.625020980834961
    6. '_core' → logprob: -14.625020980834961
    7. 'data' → logprob: -15.250020980834961
    8. '_data' → logprob: -15.375020980834961
    9. 'Add' → logprob: -16.62502098083496
    10. 'd' → logprob: -17.00002098083496

Token 513: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -2.8802491215174086e-05
    2. 'edge' → logprob: -11.500028610229492
    3. 'dge' → logprob: -11.625028610229492
    4. '_value' → logprob: -11.750028610229492
    5. 'data' → logprob: -14.250028610229492
    6. 'd' → logprob: -15.250028610229492
    7. '_edges' → logprob: -15.625028610229492
    8. 'Edge' → logprob: -16.000028610229492
    9. 'val' → logprob: -16.625028610229492
    10. '_val' → logprob: -16.625028610229492

Token 514: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0008210649830289185
    2. '_value' → logprob: -7.125821113586426
    3. '_vals' → logprob: -12.000821113586426
    4. '_' → logprob: -12.500821113586426
    5. '_val' → logprob: -12.625821113586426
    6. 'values' → logprob: -12.750821113586426
    7. '_data' → logprob: -15.125821113586426
    8. '```' → logprob: -16.75082015991211
    9. '_edge' → logprob: -17.12582015991211
    10. '(data' → logprob: -17.62582015991211

Token 515: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.87500286102295
    3. '(dat' → logprob: -15.87500286102295
    4. ' (' → logprob: -16.375003814697266
    5. ',data' → logprob: -18.125003814697266
    6. 'data' → logprob: -18.375003814697266
    7. '(
' → logprob: -18.875003814697266
    8. '<data' → logprob: -19.250003814697266
    9. '[data' → logprob: -19.375003814697266
    10. '(d' → logprob: -19.500003814697266

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3782830137643032e-05
    2. ' ,' → logprob: -11.50001335144043
    3. ')' → logprob: -12.87501335144043
    4. ',
' → logprob: -14.75001335144043
    5. '   ' → logprob: -15.62501335144043
    6. ',f' → logprob: -15.75001335144043
    7. '(),' → logprob: -16.75001335144043
    8. '(' → logprob: -16.75001335144043
    9. '),' → logprob: -17.25001335144043
    10. '‌,' → logprob: -17.50001335144043

Token 517: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.061967797577381134
    2. ' fact' → logprob: -2.8119678497314453
    3. 'factor' → logprob: -16.436967849731445
    4. '_fact' → logprob: -16.811967849731445
    5. '.fact' → logprob: -18.811967849731445
    6. ' fakt' → logprob: -19.061967849731445
    7. 'Fact' → logprob: -19.061967849731445
    8. '
' → logprob: -19.186967849731445
    9. 'mod' → logprob: -19.436967849731445
    10. 'facts' → logprob: -20.561967849731445

Token 518: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.512236498361744e-07
    2. '_value' → logprob: -15.625000953674316
    3. '2' → logprob: -16.375
    4. ')_' → logprob: -16.875
    5. '_factor' → logprob: -17.0
    6. '_mod' → logprob: -17.375
    7. ')' → logprob: -17.5
    8. '```' → logprob: -17.75
    9. ',' → logprob: -17.875
    10. '[' → logprob: -18.25

Token 519: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008618712425231934
    2. '_' → logprob: -4.7586188316345215
    3. '```' → logprob: -13.758618354797363
    4. 'value' → logprob: -14.008618354797363
    5. '-' → logprob: -14.508618354797363
    6. '
' → logprob: -14.758618354797363
    7. ' ' → logprob: -15.008618354797363
    8. 'factor' → logprob: -15.383618354797363
    9. ',' → logprob: -15.508618354797363
    10. 'fact' → logprob: -16.00861930847168

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -10.875019073486328
    3. ',
' → logprob: -15.375019073486328
    4. '   ' → logprob: -18.125019073486328
    5. ',module' → logprob: -18.125019073486328
    6. '(mod' → logprob: -20.375019073486328
    7. '[' → logprob: -20.375019073486328
    8. ')' → logprob: -20.875019073486328
    9. 'mod' → logprob: -20.875019073486328
    10. '(),' → logprob: -20.875019073486328

Token 521: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00033546582562848926
    2. ' mod' → logprob: -8.000335693359375
    3. '	mod' → logprob: -19.125335693359375
    4. '(mod' → logprob: -20.125335693359375
    5. '
' → logprob: -20.250335693359375
    6. ' ' → logprob: -21.375335693359375
    7. '_mod' → logprob: -21.750335693359375
    8. '```' → logprob: -21.875335693359375
    9. '.mod' → logprob: -22.125335693359375
    10. ' мод' → logprob: -22.250335693359375

Token 522: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -14.875001907348633
    4. '())' → logprob: -15.250001907348633
    5. '()' → logprob: -16.375001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '[' → logprob: -17.625001907348633
    8. '))' → logprob: -17.875001907348633
    9. '),' → logprob: -18.125001907348633
    10. ')}' → logprob: -18.375001907348633

Token 523: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 524: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3068057596683502
    2. ' main' → logprob: -1.6818057298660278
    3. 'dp' → logprob: -2.9318058490753174
    4. 'compute' → logprob: -5.056805610656738
    5. 'dfs' → logprob: -5.306805610656738
    6. ' dp' → logprob: -5.431805610656738
    7. 'solve' → logprob: -5.931805610656738
    8. ' dfs' → logprob: -6.556805610656738
    9. ' solve' → logprob: -6.806805610656738
    10. 'def' → logprob: -7.431805610656738

Token 525: '_child' (ID: 40474)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.7703631520271301
    2. '_graph' → logprob: -0.7703631520271301
    3. '_' → logprob: -4.1453633308410645
    4. '(' → logprob: -4.5203633308410645
    5. '_tree' → logprob: -4.6453633308410645
    6. '_nodes' → logprob: -5.1453633308410645
    7. '(data' → logprob: -5.1453633308410645
    8. '_node' → logprob: -5.3953633308410645
    9. '_edges' → logprob: -5.3953633308410645
    10. '_input' → logprob: -5.3953633308410645

Token 526: '(y' (ID: 14684)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.011694289743900299
    2. '(' → logprob: -5.011694431304932
    3. '_data' → logprob: -6.136694431304932
    4. '(node' → logprob: -6.511694431304932
    5. '(graph' → logprob: -7.761694431304932
    6. '(dp' → logprob: -8.761693954467773
    7. '_nodes' → logprob: -8.886693954467773
    8. '(tree' → logprob: -9.136693954467773
    9. 's' → logprob: -9.136693954467773
    10. '_(' → logprob: -9.761693954467773

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.045823566731997e-05
    2. '):' → logprob: -11.625020027160645
    3. ' ,' → logprob: -12.375020027160645
    4. ',data' → logprob: -12.375020027160645
    5. ',
' → logprob: -13.250020027160645
    6. 'data' → logprob: -15.000020027160645
    7. '):
' → logprob: -15.125020027160645
    8. '_,' → logprob: -15.625020027160645
    9. '   ' → logprob: -16.00002098083496
    10. ')' → logprob: -16.37502098083496

Token 528: ' v' (ID: 323)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.9267708659172058
    2. ' data' → logprob: -1.5517709255218506
    3. 'graph' → logprob: -1.6767709255218506
    4. ' graph' → logprob: -2.0517709255218506
    5. 'parent' → logprob: -3.4267709255218506
    6. ' parent' → logprob: -3.9267709255218506
    7. 'fact' → logprob: -5.4267706871032715
    8. 'x' → logprob: -5.8017706871032715
    9. 'dp' → logprob: -6.1767706871032715
    10. ' x' → logprob: -6.5517706871032715

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007175540085881948
    2. '):' → logprob: -7.500717639923096
    3. '):
' → logprob: -9.250717163085938
    4. ' ,' → logprob: -10.500717163085938
    5. ',data' → logprob: -10.750717163085938
    6. ',
' → logprob: -11.625717163085938
    7. '   ' → logprob: -12.500717163085938
    8. 'data' → logprob: -13.000717163085938
    9. '_,' → logprob: -14.000717163085938
    10. ')' → logprob: -14.250717163085938

Token 530: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.023896580561995506
    2. ' graph' → logprob: -4.52389669418335
    3. 'parent' → logprob: -5.27389669418335
    4. 'input' → logprob: -5.39889669418335
    5. 'data' → logprob: -6.64889669418335
    6. 'fact' → logprob: -7.02389669418335
    7. 'mod' → logprob: -8.148896217346191
    8. ' parent' → logprob: -9.023896217346191
    9. 'adj' → logprob: -9.148896217346191
    10. ' input' → logprob: -9.648896217346191

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021724513499066234
    2. '):' → logprob: -9.00021743774414
    3. ' ,' → logprob: -10.12521743774414
    4. '):
' → logprob: -10.62521743774414
    5. '   ' → logprob: -11.37521743774414
    6. ',data' → logprob: -11.75021743774414
    7. ',
' → logprob: -12.25021743774414
    8. 'def' → logprob: -13.37521743774414
    9. 'data' → logprob: -13.50021743774414
    10. ')' → logprob: -14.87521743774414

Token 532: ' fact' (ID: 2840)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.2324247658252716
    2. 'fact' → logprob: -1.9824247360229492
    3. ' data' → logprob: -3.607424736022949
    4. 'mod' → logprob: -4.107424736022949
    5. 'dp' → logprob: -4.482424736022949
    6. 'depth' → logprob: -5.232424736022949
    7. 'parent' → logprob: -5.732424736022949
    8. 'visited' → logprob: -5.857424736022949
    9. ' fact' → logprob: -7.107424736022949
    10. 'sys' → logprob: -8.48242473602295

Token 533: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2113979209971149e-05
    2. ',' → logprob: -12.875012397766113
    3. '   ' → logprob: -13.000012397766113
    4. ')' → logprob: -13.375012397766113
    5. '[' → logprob: -14.000012397766113
    6. 'def' → logprob: -14.250012397766113
    7. '```' → logprob: -14.250012397766113
    8. '2' → logprob: -14.375012397766113
    9. 's' → logprob: -14.750012397766113
    10. ' _' → logprob: -15.312512397766113

Token 534: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08903085440397263
    2. '_' → logprob: -2.4640307426452637
    3. ' ' → logprob: -10.214031219482422
    4. '   ' → logprob: -10.589031219482422
    5. '₂' → logprob: -11.464031219482422
    6. '```' → logprob: -12.339031219482422
    7. ',' → logprob: -12.839031219482422
    8. '  ' → logprob: -13.089031219482422
    9. '[' → logprob: -13.589031219482422
    10. 'import' → logprob: -13.776531219482422

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.729906196298543e-06
    2. ' ,' → logprob: -12.000009536743164
    3. ',data' → logprob: -12.750009536743164
    4. ',
' → logprob: -14.625009536743164
    5. '   ' → logprob: -16.625009536743164
    6. 'data' → logprob: -17.625009536743164
    7. '):
' → logprob: -17.875009536743164
    8. '):' → logprob: -17.875009536743164
    9. ',d' → logprob: -18.625009536743164
    10. '_,' → logprob: -18.750009536743164

Token 536: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07757002115249634
    2. 'data' → logprob: -3.4525699615478516
    3. ' mod' → logprob: -3.4525699615478516
    4. 'dp' → logprob: -5.077569961547852
    5. ' data' → logprob: -5.452569961547852
    6. ' dp' → logprob: -7.577569961547852
    7. 'visited' → logprob: -9.952569961547852
    8. '   ' → logprob: -10.202569961547852
    9. 'current' → logprob: -10.702569961547852
    10. 'depth' → logprob: -10.765069961547852

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001431114797014743
    2. '):
' → logprob: -9.750143051147461
    3. '   ' → logprob: -9.875143051147461
    4. ',data' → logprob: -11.250143051147461
    5. '):' → logprob: -11.375143051147461
    6. ' ,' → logprob: -12.375143051147461
    7. ',
' → logprob: -12.625143051147461
    8. 'data' → logprob: -14.500143051147461
    9. '_,' → logprob: -15.250143051147461
    10. 'def' → logprob: -16.00014305114746

Token 538: ' dfs' (ID: 51252)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3371524512767792
    2. 'dp' → logprob: -1.9621524810791016
    3. ' data' → logprob: -2.2121524810791016
    4. ' dp' → logprob: -4.462152481079102
    5. 'depth' → logprob: -4.837152481079102
    6. 'parent' → logprob: -5.712152481079102
    7. 'visited' → logprob: -5.837152481079102
    8. 'stack' → logprob: -6.337152481079102
    9. 'dfs' → logprob: -6.712152481079102
    10. 'memo' → logprob: -7.087152481079102

Token 539: '_fn' (ID: 34804)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01690361462533474
    2. '_stack' → logprob: -4.641903400421143
    3. '_data' → logprob: -6.266903400421143
    4. '_,' → logprob: -6.766903400421143
    5. 'v' → logprob: -6.891903400421143
    6. '_func' → logprob: -7.641903400421143
    7. ',v' → logprob: -8.0169038772583
    8. '):
' → logprob: -8.2669038772583
    9. '_cache' → logprob: -8.3919038772583
    10. '_depth' → logprob: -8.6419038772583

Token 540: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24918849766254425
    2. '):
' → logprob: -1.8741885423660278
    3. ',' → logprob: -2.7491884231567383
    4. ')' → logprob: -5.999188423156738
    5. '):

' → logprob: -8.874188423156738
    6. '_' → logprob: -8.999188423156738
    7. '_data' → logprob: -8.999188423156738
    8. '):
' → logprob: -9.874188423156738
    9. ',
' → logprob: -10.749188423156738
    10. 'def' → logprob: -11.249188423156738

Token 541: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014005948323756456
    2. ':' → logprob: -7.001400470733643
    3. 'data' → logprob: -8.5014009475708
    4. ',' → logprob: -9.6264009475708
    5. '):' → logprob: -10.0014009475708
    6. '	data' → logprob: -10.1264009475708
    7. ' data' → logprob: -10.7514009475708
    8. '):
' → logprob: -10.8764009475708
    9. 'def' → logprob: -11.1264009475708
    10. '(data' → logprob: -11.2514009475708

Token 542: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.34679126739501953
    2. 'dp' → logprob: -1.8467912673950195
    3. 'res' → logprob: -2.8467912673950195
    4. 'child' → logprob: -3.4717912673950195
    5. '   ' → logprob: -3.5967912673950195
    6. 'result' → logprob: -5.4717912673950195
    7. 'sub' → logprob: -5.4717912673950195
    8. 'stack' → logprob: -5.9717912673950195
    9. 'children' → logprob: -6.2217912673950195
    10. ' data' → logprob: -6.4717912673950195

Token 543: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38019222021102905
    2. ' =' → logprob: -1.6301922798156738
    3. ',' → logprob: -2.130192279815674
    4. '   ' → logprob: -7.130192279815674
    5. '[' → logprob: -8.505191802978516
    6. 'data' → logprob: -8.755191802978516
    7. '=data' → logprob: -9.255191802978516
    8. 'y' → logprob: -9.630191802978516
    9. '[y' → logprob: -10.255191802978516
    10. '=
' → logprob: -10.255191802978516

Token 544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7437798380851746
    2. ',' → logprob: -0.9937798380851746
    3. ' =' → logprob: -1.8687798976898193
    4. '=data' → logprob: -9.618780136108398
    5. '[' → logprob: -10.243780136108398
    6. ',data' → logprob: -10.493780136108398
    7. ' ,' → logprob: -10.618780136108398
    8. '   ' → logprob: -10.743780136108398
    9. 'data' → logprob: -12.493780136108398
    10. '[data' → logprob: -12.743780136108398

Token 545: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.19886046648025513
    2. 'dp' → logprob: -2.1988604068756104
    3. 'np' → logprob: -3.0738604068756104
    4. '[' → logprob: -4.6988606452941895
    5. 'zeros' → logprob: -4.6988606452941895
    6. ' dfs' → logprob: -6.1988606452941895
    7. '{' → logprob: -6.6988606452941895
    8. 'numpy' → logprob: -7.3238606452941895
    9. 'compute' → logprob: -8.198860168457031
    10. 'data' → logprob: -9.198860168457031

Token 546: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -0.003956224769353867
    2. 'fn' → logprob: -5.878956317901611
    3. '(y' → logprob: -7.378956317901611
    4. '(fn' → logprob: -8.628955841064453
    5. '(v' → logprob: -9.503955841064453
    6. 'data' → logprob: -9.628955841064453
    7. '(' → logprob: -9.878955841064453
    8. '```' → logprob: -10.253955841064453
    9. '(graph' → logprob: -10.378955841064453
    10. '(data' → logprob: -10.503955841064453

Token 547: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0032231067307293415
    2. '(graph' → logprob: -6.003222942352295
    3. '(' → logprob: -7.378222942352295
    4. '(
' → logprob: -9.503223419189453
    5. '(v' → logprob: -10.503223419189453
    6. '(data' → logprob: -11.878223419189453
    7. 'y' → logprob: -12.378223419189453
    8. 'graph' → logprob: -13.253223419189453
    9. '((' → logprob: -13.628223419189453
    10. ' (' → logprob: -13.753223419189453

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018113377154804766
    2. ',v' → logprob: -9.000181198120117
    3. ' ,' → logprob: -10.000181198120117
    4. 'v' → logprob: -11.750181198120117
    5. ',
' → logprob: -13.125181198120117
    6. '   ' → logprob: -14.375181198120117
    7. ')' → logprob: -14.625181198120117
    8. '
' → logprob: -14.875181198120117
    9. ',y' → logprob: -15.125181198120117
    10. ' v' → logprob: -16.125181198120117

Token 549: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002059380756691098
    2. ' v' → logprob: -6.252059459686279
    3. '   ' → logprob: -9.877058982849121
    4. 'graph' → logprob: -10.877058982849121
    5. ')' → logprob: -11.002058982849121
    6. 'y' → logprob: -11.252058982849121
    7. ')v' → logprob: -11.877058982849121
    8. '
' → logprob: -12.877058982849121
    9. ' graph' → logprob: -13.002058982849121
    10. '    ' → logprob: -13.127058982849121

Token 550: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006270982325077057
    2. ',' → logprob: -5.131270885467529
    3. ')
' → logprob: -8.381271362304688
    4. '   ' → logprob: -9.381271362304688
    5. ' )' → logprob: -11.506271362304688
    6. ')data' → logprob: -11.506271362304688
    7. ',)' → logprob: -12.756271362304688
    8. ',data' → logprob: -13.131271362304688
    9. ')[' → logprob: -13.631271362304688
    10. ').' → logprob: -14.756271362304688

Token 551: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.003738564206287265
    2. ' graph' → logprob: -5.6287384033203125
    3. 'fact' → logprob: -9.503738403320312
    4. '   ' → logprob: -10.878738403320312
    5. ')' → logprob: -11.003738403320312
    6. '	graph' → logprob: -11.503738403320312
    7. '
' → logprob: -12.253738403320312
    8. '  ' → logprob: -12.253738403320312
    9. '(graph' → logprob: -12.628738403320312
    10. ' ' → logprob: -13.753738403320312

Token 552: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31474605202674866
    2. ')' → logprob: -1.3147460222244263
    3. '   ' → logprob: -6.564745903015137
    4. ',)' → logprob: -10.564745903015137
    5. ')
' → logprob: -11.314745903015137
    6. ' ,' → logprob: -11.439745903015137
    7. ' )' → logprob: -11.689745903015137
    8. ',data' → logprob: -11.939745903015137
    9. '  ' → logprob: -12.939745903015137
    10. ')[' → logprob: -13.314745903015137

Token 553: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0046332841739058495
    2. ' fact' → logprob: -5.37963342666626
    3. 'factor' → logprob: -11.754632949829102
    4. '
' → logprob: -13.129632949829102
    5. '   ' → logprob: -13.629632949829102
    6. 'mod' → logprob: -14.254632949829102
    7. ' ' → logprob: -14.754632949829102
    8. 'data' → logprob: -14.754632949829102
    9. 'f' → logprob: -15.754632949829102
    10. '  ' → logprob: -16.6296329498291

Token 554: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3902033970225602e-05
    2. ',' → logprob: -12.125014305114746
    3. '2' → logprob: -13.000014305114746
    4. '   ' → logprob: -13.375014305114746
    5. ')' → logprob: -13.875014305114746
    6. '```' → logprob: -14.375014305114746
    7. '_,' → logprob: -14.625014305114746
    8. 's' → logprob: -14.937514305114746
    9. '_
' → logprob: -15.000014305114746
    10. '-' → logprob: -15.812514305114746

Token 555: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02978995256125927
    2. '_' → logprob: -3.529789924621582
    3. ' ' → logprob: -11.404789924621582
    4. ',' → logprob: -11.904789924621582
    5. '
' → logprob: -12.279789924621582
    6. '   ' → logprob: -12.404789924621582
    7. ')' → logprob: -12.967289924621582
    8. '-' → logprob: -13.217289924621582
    9. '₂' → logprob: -13.404789924621582
    10. '```' → logprob: -14.092289924621582

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. ' ,' → logprob: -11.750008583068848
    3. ')' → logprob: -14.750008583068848
    4. '   ' → logprob: -15.000008583068848
    5. ',
' → logprob: -15.125008583068848
    6. '
' → logprob: -17.250009536743164
    7. ',module' → logprob: -18.250009536743164
    8. 'mod' → logprob: -18.500009536743164
    9. 'def' → logprob: -18.625009536743164
    10. '‌,' → logprob: -18.750009536743164

Token 557: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0036003058776259422
    2. ' mod' → logprob: -5.628600120544434
    3. '	mod' → logprob: -15.878600120544434
    4. '   ' → logprob: -17.12860107421875
    5. '```' → logprob: -17.25360107421875
    6. '(mod' → logprob: -17.37860107421875
    7. ' ' → logprob: -17.75360107421875
    8. '
' → logprob: -18.37860107421875
    9. 'm' → logprob: -18.87860107421875
    10. '           ' → logprob: -19.00360107421875

Token 558: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009463991969823837
    2. ')
' → logprob: -4.759463787078857
    3. '   ' → logprob: -7.134463787078857
    4. ',' → logprob: -10.009464263916016
    5. ')data' → logprob: -12.884464263916016
    6. ')[' → logprob: -13.634464263916016
    7. ' )' → logprob: -13.884464263916016
    8. ',)' → logprob: -14.384464263916016
    9. ')
' → logprob: -14.634464263916016
    10. ' ' → logprob: -15.759464263916016

Token 559: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.024336811155080795
    2. 'dp' → logprob: -3.899336814880371
    3. ' dfs' → logprob: -6.899336814880371
    4. ')' → logprob: -6.899336814880371
    5. 'process' → logprob: -7.399336814880371
    6. ')
' → logprob: -7.649336814880371
    7. 'graph' → logprob: -9.524336814880371
    8. 'data' → logprob: -9.774336814880371
    9. '
' → logprob: -9.774336814880371
    10. '[]' → logprob: -9.774336814880371

Token 560: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -0.0004897649050690234
    2. 'fn' → logprob: -7.625489711761475
    3. ')' → logprob: -13.875490188598633
    4. 'def' → logprob: -15.500490188598633
    5. 'Fn' → logprob: -16.000490188598633
    6. '(fn' → logprob: -16.625490188598633
    7. '_f' → logprob: -16.625490188598633
    8. '```' → logprob: -16.625490188598633
    9. '1' → logprob: -16.875490188598633
    10. 'f' → logprob: -17.250490188598633

Token 561: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005810309085063636
    2. ')
' → logprob: -7.75058126449585
    3. '   ' → logprob: -8.875580787658691
    4. ',' → logprob: -12.000580787658691
    5. ')data' → logprob: -13.000580787658691
    6. ' )' → logprob: -13.875580787658691
    7. ')[' → logprob: -14.625580787658691
    8. ',)' → logprob: -15.500580787658691
    9. ').' → logprob: -16.500581741333008
    10. ')

' → logprob: -16.625581741333008

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0209636352956295
    2. 'data' → logprob: -4.145963668823242
    3. '
' → logprob: -5.520963668823242
    4. ' data' → logprob: -7.645963668823242
    5. '```' → logprob: -9.395963668823242
    6. '[data' → logprob: -9.520963668823242
    7. '    
' → logprob: -9.645963668823242
    8. '<|end|>' → logprob: -9.770963668823242
    9. '	data' → logprob: -10.020963668823242
    10. 'return' → logprob: -10.645963668823242

Token 563: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.4486407935619354
    2. '   ' → logprob: -1.0736408233642578
    3. ' data' → logprob: -4.073640823364258
    4. '
' → logprob: -6.198640823364258
    5. '	data' → logprob: -8.323640823364258
    6. 'def' → logprob: -8.948640823364258
    7. '<|end|>' → logprob: -9.448640823364258
    8. '[data' → logprob: -9.573640823364258
    9. '```' → logprob: -10.073640823364258
    10. 'return' → logprob: -10.823640823364258

Token 564: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32474851608276367
    2. '1' → logprob: -2.5747485160827637
    3. ' =' → logprob: -2.5747485160827637
    4. '2' → logprob: -3.0747485160827637
    5. '+=' → logprob: -3.4497485160827637
    6. ',' → logprob: -3.5747485160827637
    7. ' +=' → logprob: -5.199748516082764
    8. '[' → logprob: -5.449748516082764
    9. '+' → logprob: -6.199748516082764
    10. '=data' → logprob: -6.199748516082764

Token 565: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1611812561750412
    2. ' =' → logprob: -2.4111812114715576
    3. '[' → logprob: -4.036181449890137
    4. ',' → logprob: -4.411181449890137
    5. '+=' → logprob: -4.786181449890137
    6. '[:]' → logprob: -4.911181449890137
    7. ' +=' → logprob: -5.286181449890137
    8. '*=' → logprob: -5.911181449890137
    9. ' *=' → logprob: -6.286181449890137
    10. '+' → logprob: -6.536181449890137

Token 566: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20374098420143127
    2. 'compute' → logprob: -1.7037409543991089
    3. ' dp' → logprob: -6.328741073608398
    4. ' compute' → logprob: -7.578741073608398
    5. '   ' → logprob: -12.578741073608398
    6. 'np' → logprob: -12.828741073608398
    7. '	dp' → logprob: -13.078741073608398
    8. 'process' → logprob: -13.203741073608398
    9. ' ' → logprob: -13.203741073608398
    10. 'calculate' → logprob: -13.328741073608398

Token 567: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.002187972189858556
    2. '_merge' → logprob: -6.127188205718994
    3. 'Add' → logprob: -14.127187728881836
    4. 'add' → logprob: -14.127187728881836
    5. '_append' → logprob: -14.877187728881836
    6. '_Add' → logprob: -15.377187728881836
    7. '_expand' → logprob: -15.627187728881836
    8. '_' → logprob: -15.877187728881836
    9. '_ADD' → logprob: -16.252187728881836
    10. '```' → logprob: -16.252187728881836

Token 568: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.125
    3. '_edges' → logprob: -17.375
    4. '_data' → logprob: -17.5
    5. '_EDGE' → logprob: -17.625
    6. '_' → logprob: -17.875
    7. '_ed' → logprob: -18.0
    8. 'data' → logprob: -18.25
    9. '(data' → logprob: -18.75
    10. 'Edge' → logprob: -18.875

Token 569: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.000556843588128686
    2. '(' → logprob: -7.500556945800781
    3. '(
' → logprob: -13.625556945800781
    4. '```' → logprob: -13.875556945800781
    5. ' (' → logprob: -14.625556945800781
    6. '_(' → logprob: -14.750556945800781
    7. '_' → logprob: -15.250556945800781
    8. '_edge' → logprob: -15.750556945800781
    9. '[data' → logprob: -16.50055694580078
    10. '(_' → logprob: -16.62555694580078

Token 570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010386766865849495
    2. '(data' → logprob: -4.760386943817139
    3. ',' → logprob: -6.885386943817139
    4. ',data' → logprob: -7.385386943817139
    5. 'data' → logprob: -9.76038646697998
    6. ')' → logprob: -11.13538646697998
    7. '[data' → logprob: -11.76038646697998
    8. '=data' → logprob: -11.88538646697998
    9. ',
' → logprob: -11.88538646697998
    10. '```' → logprob: -12.13538646697998

Token 571: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002823120157700032
    2. ' ,' → logprob: -9.125282287597656
    3. ',data' → logprob: -9.250282287597656
    4. '(data' → logprob: -9.875282287597656
    5. ')' → logprob: -11.000282287597656
    6. '(' → logprob: -12.250282287597656
    7. ',f' → logprob: -13.125282287597656
    8. ',
' → logprob: -14.125282287597656
    9. '(f' → logprob: -14.750282287597656
    10. 'data' → logprob: -15.250282287597656

Token 572: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.47407805919647217
    2. 'fact' → logprob: -0.9740780591964722
    3. '_fact' → logprob: -14.724078178405762
    4. 'factor' → logprob: -15.224078178405762
    5. ' fakt' → logprob: -16.099077224731445
    6. 'Fact' → logprob: -16.474077224731445
    7. '.fact' → logprob: -16.474077224731445
    8. 'facts' → logprob: -16.974077224731445
    9. ')' → logprob: -17.849077224731445
    10. ' ' → logprob: -18.474077224731445

Token 573: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.054500666621607e-06
    2. '-' → logprob: -13.50000286102295
    3. '```' → logprob: -14.62500286102295
    4. '2' → logprob: -14.87500286102295
    5. '[' → logprob: -16.250003814697266
    6. '1' → logprob: -16.500003814697266
    7. ',' → logprob: -16.562503814697266
    8. 'e' → logprob: -17.187503814697266
    9. '\' → logprob: -17.187503814697266
    10. '_
' → logprob: -17.250003814697266

Token 574: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03806869313120842
    2. '_' → logprob: -3.2880687713623047
    3. '-' → logprob: -11.288068771362305
    4. '₂' → logprob: -12.600568771362305
    5. '
' → logprob: -13.225568771362305
    6. ',' → logprob: -13.288068771362305
    7. '```' → logprob: -13.475568771362305
    8. '۲' → logprob: -14.538068771362305
    9. '[' → logprob: -14.788068771362305
    10. ')' → logprob: -14.788068771362305

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003843173326458782
    2. ' ,' → logprob: -7.875384330749512
    3. '   ' → logprob: -13.000384330749512
    4. ',
' → logprob: -13.750384330749512
    5. ')' → logprob: -15.250384330749512
    6. '(mod' → logprob: -16.000383377075195
    7. '‌,' → logprob: -16.125383377075195
    8. ',module' → logprob: -16.250383377075195
    9. '_,' → logprob: -16.750383377075195
    10. '  ' → logprob: -16.875383377075195

Token 576: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07889033854007721
    2. ' mod' → logprob: -2.578890323638916
    3. '	mod' → logprob: -14.953890800476074
    4. ')' → logprob: -16.828889846801758
    5. '(mod' → logprob: -16.953889846801758
    6. '    ' → logprob: -17.453889846801758
    7. '```' → logprob: -17.578889846801758
    8. ' мод' → logprob: -18.203889846801758
    9. '_mod' → logprob: -18.328889846801758
    10. '
' → logprob: -18.328889846801758

Token 577: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022678973618894815
    2. '   ' → logprob: -6.252267837524414
    3. ')
' → logprob: -8.002267837524414
    4. '()' → logprob: -12.877267837524414
    5. '())' → logprob: -13.877267837524414
    6. ',' → logprob: -14.877267837524414
    7. ' )' → logprob: -15.127267837524414
    8. ')
' → logprob: -16.377267837524414
    9. '),' → logprob: -17.127267837524414
    10. ').' → logprob: -17.127267837524414

Token 578: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006500058807432652
    2. 'data' → logprob: -8.375650405883789
    3. '
' → logprob: -8.625650405883789
    4. '<|end|>' → logprob: -9.125650405883789
    5. 'return' → logprob: -9.375650405883789
    6. '    
' → logprob: -11.250650405883789
    7. ' return' → logprob: -11.750650405883789
    8. ' data' → logprob: -12.250650405883789
    9. '```' → logprob: -12.500650405883789
    10. ')' → logprob: -12.500650405883789

Token 579: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1503036618232727
    2. 'data' → logprob: -2.150303602218628
    3. 'return' (adapté à ' return') → logprob: -4.400303840637207
    4. '
' → logprob: -5.275303840637207
    5. ' data' → logprob: -5.650303840637207
    6. ' return' → logprob: -6.775303840637207
    7. 'for' → logprob: -8.025303840637207
    8. ' for' → logprob: -8.025303840637207
    9. 'def' → logprob: -8.650303840637207
    10. 'graph' → logprob: -9.900303840637207

Token 580: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6931660175323486
    2. ' data' → logprob: -0.6931660175323486
    3. '(data' → logprob: -11.19316577911377
    4. ' ' → logprob: -13.69316577911377
    5. '[data' → logprob: -13.69316577911377
    6. '	data' → logprob: -14.06816577911377
    7. '_data' → logprob: -14.31816577911377
    8. 'Data' → logprob: -15.06816577911377
    9. '<data' → logprob: -15.69316577911377
    10. 'None' → logprob: -15.81816577911377

Token 581: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020711649267468601
    2. 'data' → logprob: -9.00020694732666
    3. 'ata' → logprob: -10.75020694732666
    4. 'x' → logprob: -11.50020694732666
    5. '=' → logprob: -11.87520694732666
    6. '[' → logprob: -11.87520694732666
    7. '=data' → logprob: -12.00020694732666
    8. '[data' → logprob: -12.12520694732666
    9. 'a' → logprob: -12.37520694732666
    10. '(data' → logprob: -13.00020694732666

Token 582: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05752405524253845
    2. ')' → logprob: -3.6825239658355713
    3. '<|end|>' → logprob: -3.8075239658355713
    4. '(' → logprob: -6.05752420425415
    5. ',' → logprob: -6.55752420425415
    6. '   ' → logprob: -6.80752420425415
    7. '[' → logprob: -6.93252420425415
    8. 'data' → logprob: -7.30752420425415
    9. '+' → logprob: -8.057523727416992
    10. '(
' → logprob: -8.432523727416992

Token 583: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003562654135748744
    2. '<|end|>' → logprob: -5.7535624504089355
    3. '
' → logprob: -8.378562927246094
    4. '```' → logprob: -9.503562927246094
    5. ' def' → logprob: -10.878562927246094
    6. '\' → logprob: -10.878562927246094
    7. ')' → logprob: -11.253562927246094
    8. '#' → logprob: -12.128562927246094
    9. '<|end|>' → logprob: -12.503562927246094
    10. '[' → logprob: -12.628562927246094

Token 584: ' process' (ID: 2273)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5032617449760437
    2. 'dfs' → logprob: -1.1282618045806885
    3. 'def' → logprob: -3.2532618045806885
    4. ' process' → logprob: -4.378261566162109
    5. 'process' → logprob: -4.878261566162109
    6. ' def' → logprob: -5.128261566162109
    7. 'dp' → logprob: -5.378261566162109
    8. ' dp' → logprob: -6.378261566162109
    9. ' solve' → logprob: -8.62826156616211
    10. ' combine' → logprob: -9.62826156616211

Token 585: '_children' (ID: 78282)
  Prédit: '_child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.06546144187450409
    2. '_children' → logprob: -3.5654613971710205
    3. '_' → logprob: -3.9404613971710205
    4. '_node' → logprob: -5.5654616355896
    5. '_parent' → logprob: -5.8154616355896
    6. '_vertex' → logprob: -5.9404616355896
    7. '_edge' → logprob: -6.0654616355896
    8. '_v' → logprob: -6.1904616355896
    9. 'child' → logprob: -8.065461158752441
    10. '_edges' → logprob: -8.690461158752441

Token 586: '(graph' (ID: 51300)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.1698182374238968
    2. '(' → logprob: -2.669818162918091
    3. '(data' → logprob: -2.794818162918091
    4. '(parent' → logprob: -4.54481840133667
    5. '(y' → logprob: -5.04481840133667
    6. '(graph' → logprob: -6.04481840133667
    7. '(children' → logprob: -6.16981840133667
    8. '(node' → logprob: -6.66981840133667
    9. '(
' → logprob: -7.54481840133667
    10. '_children' → logprob: -8.044817924499512

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002213657833635807
    2. ',v' → logprob: -6.752213478088379
    3. '[v' → logprob: -6.877213478088379
    4. '   ' → logprob: -12.377213478088379
    5. 'def' → logprob: -13.502213478088379
    6. '[node' → logprob: -13.627213478088379
    7. '[' → logprob: -13.877213478088379
    8. 'v' → logprob: -13.877213478088379
    9. ' ,' → logprob: -14.002213478088379
    10. ',node' → logprob: -14.502213478088379

Token 588: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04308551922440529
    2. ' v' → logprob: -3.1680855751037598
    3. '   ' → logprob: -10.293085098266602
    4. 'def' → logprob: -11.543085098266602
    5. 'graph' → logprob: -11.793085098266602
    6. ' graph' → logprob: -12.168085098266602
    7. ')' → logprob: -12.293085098266602
    8. 'data' → logprob: -12.418085098266602
    9. 'children' → logprob: -13.168085098266602
    10. 'y' → logprob: -13.168085098266602

Token 589: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001366744691040367
    2. '):
' → logprob: -9.625136375427246
    3. '   ' → logprob: -9.875136375427246
    4. '):' → logprob: -11.500136375427246
    5. ' ,' → logprob: -12.000136375427246
    6. ',
' → logprob: -13.625136375427246
    7. 'def' → logprob: -14.125136375427246
    8. '```' → logprob: -15.625136375427246
    9. ',data' → logprob: -16.500137329101562
    10. '
' → logprob: -16.500137329101562

Token 590: ' parent' (ID: 5980)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.039007652550935745
    2. ' fact' → logprob: -3.4140076637268066
    3. 'graph' → logprob: -5.914007663726807
    4. 'mod' → logprob: -7.039007663726807
    5. '   ' → logprob: -7.539007663726807
    6. 'children' → logprob: -7.914007663726807
    7. ' graph' → logprob: -8.414007186889648
    8. 'child' → logprob: -9.289007186889648
    9. 'factor' → logprob: -9.289007186889648
    10. ' ' → logprob: -9.539007186889648

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015764019917696714
    2. '):
' → logprob: -6.6265764236450195
    3. '):' → logprob: -8.50157642364502
    4. '   ' → logprob: -10.12657642364502
    5. 'def' → logprob: -13.00157642364502
    6. ',
' → logprob: -13.25157642364502
    7. ' ,' → logprob: -13.50157642364502
    8. '):
' → logprob: -15.12657642364502
    9. ')' → logprob: -15.50157642364502
    10. '):

' → logprob: -15.50157642364502

Token 592: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.038620397448539734
    2. ' fact' → logprob: -3.2886204719543457
    3. 'mod' → logprob: -8.663619995117188
    4. 'graph' → logprob: -8.913619995117188
    5. '   ' → logprob: -9.413619995117188
    6. ' ' → logprob: -10.538619995117188
    7. 'factor' → logprob: -10.538619995117188
    8. 'data' → logprob: -10.663619995117188
    9. ' graph' → logprob: -11.038619995117188
    10. '
' → logprob: -11.163619995117188

Token 593: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7432603272027336e-06
    2. ',' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.875001907348633
    4. '```' → logprob: -15.125001907348633
    5. '
' → logprob: -17.000001907348633
    6. '_,' → logprob: -17.125001907348633
    7. ' _' → logprob: -17.375001907348633
    8. '\' → logprob: -17.750001907348633
    9. '‌' → logprob: -18.000001907348633
    10. 'def' → logprob: -18.250001907348633

Token 594: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014183958061039448
    2. '_' → logprob: -4.26418399810791
    3. ',' → logprob: -11.88918399810791
    4. 'def' → logprob: -12.38918399810791
    5. ' ' → logprob: -12.63918399810791
    6. '```' → logprob: -13.38918399810791
    7. '   ' → logprob: -13.63918399810791
    8. '₂' → logprob: -13.88918399810791
    9. '
' → logprob: -14.76418399810791
    10. '[' → logprob: -15.26418399810791

Token 595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',
' → logprob: -15.50000286102295
    4. '   ' → logprob: -16.125003814697266
    5. '):
' → logprob: -18.875003814697266
    6. 'def' → logprob: -19.375003814697266
    7. '_,' → logprob: -19.875003814697266
    8. ',module' → logprob: -19.875003814697266
    9. '‌,' → logprob: -19.875003814697266
    10. 'mod' → logprob: -20.750003814697266

Token 596: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1426788717508316
    2. ' mod' → logprob: -2.01767897605896
    3. '	mod' → logprob: -14.017679214477539
    4. '   ' → logprob: -14.267679214477539
    5. '```' → logprob: -14.517679214477539
    6. '
' → logprob: -15.017679214477539
    7. ' ' → logprob: -15.142679214477539
    8. '_mod' → logprob: -15.517679214477539
    9. '(mod' → logprob: -15.517679214477539
    10. 'm' → logprob: -15.642679214477539

Token 597: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20606805384159088
    2. ',' → logprob: -2.2060680389404297
    3. '):' → logprob: -2.7060680389404297
    4. '   ' → logprob: -4.70606803894043
    5. '):
' → logprob: -8.58106803894043
    6. '):

' → logprob: -10.58106803894043
    7. ')' → logprob: -11.45606803894043
    8. 'def' → logprob: -11.83106803894043
    9. ',
' → logprob: -12.33106803894043
    10. ' ):
' → logprob: -12.70606803894043

Token 598: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.004660099744796753
    2. ' dfs' → logprob: -5.379660129547119
    3. 'dp' → logprob: -10.379659652709961
    4. 'data' → logprob: -13.004659652709961
    5. 'children' → logprob: -13.379659652709961
    6. 'df' → logprob: -13.379659652709961
    7. ' ' → logprob: -14.004659652709961
    8. '   ' → logprob: -14.504659652709961
    9. '
' → logprob: -14.504659652709961
    10. 'depth' → logprob: -14.879659652709961

Token 599: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -0.0007786541245877743
    2. 'fn' → logprob: -7.750778675079346
    3. ',' → logprob: -8.250778198242188
    4. '):' → logprob: -10.375778198242188
    5. '_,' → logprob: -10.625778198242188
    6. '):
' → logprob: -10.875778198242188
    7. '   ' → logprob: -13.000778198242188
    8. 'def' → logprob: -13.375778198242188
    9. '```' → logprob: -13.375778198242188
    10. ')' → logprob: -13.500778198242188

Token 600: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2549758851528168
    2. '):
' → logprob: -1.5049759149551392
    3. '   ' → logprob: -6.12997579574585
    4. ',' → logprob: -7.12997579574585
    5. '):
' → logprob: -9.879976272583008
    6. ')' → logprob: -12.379976272583008
    7. ':' → logprob: -12.629976272583008
    8. 'def' → logprob: -12.879976272583008
    9. '):

' → logprob: -13.254976272583008
    10. ' ):' → logprob: -14.129976272583008

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002497183158993721
    2. 'data' → logprob: -6.00249719619751
    3. ' data' → logprob: -11.002496719360352
    4. '```' → logprob: -13.627496719360352
    5. '	data' → logprob: -13.877496719360352
    6. 'result' → logprob: -14.627496719360352
    7. '   ' → logprob: -14.627496719360352
    8. '_data' → logprob: -14.752496719360352
    9. 'def' → logprob: -14.877496719360352
    10. '
' → logprob: -14.877496719360352

Token 602: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.23425744473934174
    2. 'result' → logprob: -2.359257459640503
    3. '   ' → logprob: -3.609257459640503
    4. 'res' → logprob: -3.734257459640503
    5. 'dp' → logprob: -3.859257459640503
    6. 'results' → logprob: -4.109257221221924
    7. 'children' → logprob: -4.234257221221924
    8. 'datas' → logprob: -5.609257221221924
    9. 'child' → logprob: -5.734257221221924
    10. 'ret' → logprob: -6.859257221221924

Token 603: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13207532465457916
    2. '=' → logprob: -2.132075309753418
    3. 's' → logprob: -6.132075309753418
    4. '1' → logprob: -6.132075309753418
    5. '   ' → logprob: -8.632075309753418
    6. '=[]' → logprob: -8.632075309753418
    7. '=[' → logprob: -9.007075309753418
    8. '=[]
' → logprob: -9.507075309753418
    9. ',' → logprob: -10.007075309753418
    10. 'data' → logprob: -10.257075309753418

Token 604: ' None' (ID: 4662)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.14778313040733337
    2. 'numpy' → logprob: -2.272783041000366
    3. 'zeros' → logprob: -3.522783041000366
    4. ' np' → logprob: -6.022783279418945
    5. ' numpy' → logprob: -6.897783279418945
    6. 'None' → logprob: -7.522783279418945
    7. 'ones' → logprob: -8.397783279418945
    8. ' zeros' → logprob: -8.522783279418945
    9. '   ' → logprob: -8.897783279418945
    10. '[np' → logprob: -9.272783279418945

Token 605: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027485832571983337
    2. '
' → logprob: -3.6524858474731445
    3. '    
' → logprob: -7.5274858474731445
    4. 'for' → logprob: -7.9024858474731445
    5. ' for' → logprob: -8.527485847473145
    6. '	for' → logprob: -10.402485847473145
    7. 'def' → logprob: -10.527485847473145
    8. ',' → logprob: -12.402485847473145
    9. '	
' → logprob: -12.402485847473145
    10. '<|end|>' → logprob: -12.777485847473145

Token 606: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0091883335262537
    2. 'for' → logprob: -5.509188175201416
    3. '
' → logprob: -6.009188175201416
    4. ' for' → logprob: -6.134188175201416
    5. '    
' → logprob: -7.759188175201416
    6. ',' → logprob: -11.009188652038574
    7. '	for' → logprob: -11.759188652038574
    8. 'def' → logprob: -11.884188652038574
    9. '   
' → logprob: -13.009188652038574
    10. ' 
' → logprob: -13.134188652038574

Token 607: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2751946449279785
    2. '   ' → logprob: -1.5251946449279785
    3. ' for' → logprob: -3.7751946449279785
    4. '
' → logprob: -9.77519416809082
    5. '	for' → logprob: -12.90019416809082
    6. 'def' → logprob: -13.40019416809082
    7. '  ' → logprob: -14.02519416809082
    8. '    
' → logprob: -14.27519416809082
    9. 'children' → logprob: -14.27519416809082
    10. ' ' → logprob: -14.65019416809082

Token 608: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5923250317573547
    2. ' y' → logprob: -1.21732497215271
    3. 'child' → logprob: -2.21732497215271
    4. ' child' → logprob: -3.59232497215271
    5. 'u' → logprob: -5.217325210571289
    6. 'c' → logprob: -5.717325210571289
    7. ' u' → logprob: -6.467325210571289
    8. 'w' → logprob: -6.842325210571289
    9. '   ' → logprob: -6.967325210571289
    10. ' c' → logprob: -7.592325210571289

Token 609: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31328532099723816
    2. 'in' → logprob: -1.3132853507995605
    3. ',' → logprob: -11.563284873962402
    4. '	in' → logprob: -12.188284873962402
    5. ' ' → logprob: -12.313284873962402
    6. ' y' → logprob: -13.438284873962402
    7. 'y' → logprob: -14.313284873962402
    8. '   ' → logprob: -14.313284873962402
    9. '  ' → logprob: -14.563284873962402
    10. '
' → logprob: -15.563284873962402

Token 610: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.038084402680397034
    2. ' graph' → logprob: -3.2880845069885254
    3. '(graph' → logprob: -10.413084030151367
    4. '	graph' → logprob: -11.288084030151367
    5. '_graph' → logprob: -15.913084030151367
    6. ' in' → logprob: -16.538084030151367
    7. '   ' → logprob: -16.663084030151367
    8. '.graph' → logprob: -17.413084030151367
    9. 'raph' → logprob: -17.663084030151367
    10. 'in' → logprob: -17.788084030151367

Token 611: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -13.125004768371582
    3. 'v' → logprob: -13.500004768371582
    4. '[y' → logprob: -14.375004768371582
    5. '[
' → logprob: -15.375004768371582
    6. ',v' → logprob: -15.625004768371582
    7. '(v' → logprob: -15.625004768371582
    8. '```' → logprob: -15.625004768371582
    9. ',' → logprob: -16.5000057220459
    10. '   ' → logprob: -17.3750057220459

Token 612: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.07946150004863739
    2. ']:
' → logprob: -2.5794615745544434
    3. ']' → logprob: -8.079461097717285
    4. ']:
' → logprob: -8.954461097717285
    5. ']:

' → logprob: -9.829461097717285
    6. ':' → logprob: -10.579461097717285
    7. '[' → logprob: -10.829461097717285
    8. '[y' → logprob: -11.954461097717285
    9. ']>' → logprob: -12.204461097717285
    10. '],' → logprob: -12.454461097717285

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003926615754608065
    2. ' if' → logprob: -8.87539291381836
    3. ',' → logprob: -9.75039291381836
    4. '<|end|>' → logprob: -9.75039291381836
    5. '        
' → logprob: -10.62539291381836
    6. '	' → logprob: -10.75039291381836
    7. ':' → logprob: -11.00039291381836
    8. '
' → logprob: -11.12539291381836
    9. '   ' → logprob: -11.37539291381836
    10. ':
' → logprob: -11.62539291381836

Token 614: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8115508556365967
    2. 'if' (adapté à ' if') → logprob: -1.0615508556365967
    3. ' if' → logprob: -1.5615508556365967
    4. '	if' → logprob: -9.686551094055176
    5. '	' → logprob: -10.811551094055176
    6. '   ' → logprob: -11.561551094055176
    7. ',' → logprob: -12.686551094055176
    8. '```' → logprob: -13.311551094055176
    9. '
' → logprob: -14.061551094055176
    10. ' ' → logprob: -14.186551094055176

Token 615: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.016038941219449043
    2. 'y' → logprob: -4.14103889465332
    3. '        ' → logprob: -13.14103889465332
    4. '           ' → logprob: -14.39103889465332
    5. '	y' → logprob: -14.39103889465332
    6. ' ' → logprob: -14.64103889465332
    7. '       ' → logprob: -14.64103889465332
    8. '    ' → logprob: -15.51603889465332
    9. ' ' → logprob: -16.14103889465332
    10. '   ' → logprob: -16.14103889465332

Token 616: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.35753336548805237
    2. '!=' → logprob: -1.23253333568573
    3. '==' → logprob: -5.2325334548950195
    4. ' ==' → logprob: -5.6075334548950195
    5. '()!=' → logprob: -11.60753345489502
    6. '```' → logprob: -11.85753345489502
    7. ')!=' → logprob: -12.35753345489502
    8. '=' → logprob: -12.85753345489502
    9. '[' → logprob: -12.98253345489502
    10. ']!=' → logprob: -13.23253345489502

Token 617: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.002476016292348504
    2. ' parent' → logprob: -6.002476215362549
    3. '	parent' → logprob: -15.12747573852539
    4. '[parent' → logprob: -17.12747573852539
    5. '(parent' → logprob: -17.25247573852539
    6. '   ' → logprob: -18.25247573852539
    7. ',parent' → logprob: -19.50247573852539
    8. 'paren' → logprob: -19.75247573852539
    9. '.parent' → logprob: -19.87747573852539
    10. '
' → logprob: -19.87747573852539

Token 618: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5247156620025635
    2. ':' → logprob: -0.8997156620025635
    3. '           ' → logprob: -7.274715423583984
    4. '       ' → logprob: -7.649715423583984
    5. ' continue' → logprob: -8.524715423583984
    6. 'continue' → logprob: -8.649715423583984
    7. ',' → logprob: -11.399715423583984
    8. ' or' → logprob: -11.399715423583984
    9. ':return' → logprob: -11.774715423583984
    10. '	continue' → logprob: -12.399715423583984

Token 619: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05139044672250748
    2. 'continue' → logprob: -3.6763904094696045
    3. ' continue' → logprob: -3.9263904094696045
    4. ':' → logprob: -5.801390647888184
    5. ':
' → logprob: -6.676390647888184
    6. '       ' → logprob: -7.301390647888184
    7. '	continue' → logprob: -10.676390647888184
    8. ',' → logprob: -10.801390647888184
    9. '	       ' → logprob: -11.176390647888184
    10. '               ' → logprob: -11.551390647888184

Token 620: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.011418196372687817
    2. '           ' → logprob: -4.761418342590332
    3. ' continue' → logprob: -6.011418342590332
    4. '               ' → logprob: -8.386418342590332
    5. '       ' → logprob: -9.136418342590332
    6. '	continue' → logprob: -12.011418342590332
    7. '   ' → logprob: -13.511418342590332
    8. '_continue' → logprob: -13.636418342590332
    9. '	       ' → logprob: -13.761418342590332
    10. '
' → logprob: -13.761418342590332

Token 621: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26161935925483704
    2. '
' → logprob: -1.5116193294525146
    3. ':
' → logprob: -4.761619567871094
    4. ':' → logprob: -8.011619567871094
    5. ',
' → logprob: -8.136619567871094
    6. '        
' → logprob: -8.636619567871094
    7. ',' → logprob: -9.886619567871094
    8. '   ' → logprob: -10.011619567871094
    9. '
' → logprob: -10.386619567871094
    10. '):
' → logprob: -10.511619567871094

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003540542966220528
    2. '
' → logprob: -8.625353813171387
    3. '        
' → logprob: -9.500353813171387
    4. 'data' → logprob: -10.750353813171387
    5. ',' → logprob: -10.875353813171387
    6. ' if' → logprob: -11.125353813171387
    7. 'if' → logprob: -11.500353813171387
    8. '   ' → logprob: -11.875353813171387
    9. '```' → logprob: -12.125353813171387
    10. '<|end|>' → logprob: -12.375353813171387

Token 623: ' data' (ID: 1238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12941588461399078
    2. 'data' (adapté à ' data') → logprob: -2.754415988922119
    3. 'child' → logprob: -3.754415988922119
    4. 'if' → logprob: -3.879415988922119
    5. ' if' → logprob: -5.254415988922119
    6. ' child' → logprob: -5.504415988922119
    7. '   ' → logprob: -6.129415988922119
    8. ' data' → logprob: -6.254415988922119
    9. '```' → logprob: -9.754415512084961
    10. 'd' → logprob: -9.879415512084961

Token 624: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1355990767478943
    2. ' =' → logprob: -2.135599136352539
    3. '1' → logprob: -5.885599136352539
    4. 'if' → logprob: -6.510599136352539
    5. '_' → logprob: -6.760599136352539
    6. '_=' → logprob: -6.885599136352539
    7. 'data' → logprob: -7.885599136352539
    8. '=None' → logprob: -8.135599136352539
    9. '_data' → logprob: -8.260599136352539
    10. '_merge' → logprob: -8.385599136352539

Token 625: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759403705596924
    2. ' =' → logprob: -0.8259403705596924
    3. '=data' → logprob: -15.075940132141113
    4. ',' → logprob: -15.200940132141113
    5. ' ' → logprob: -15.700940132141113
    6. '   ' → logprob: -16.20094108581543
    7. 'data' → logprob: -16.32594108581543
    8. '=
' → logprob: -17.20094108581543
    9. ')' → logprob: -17.32594108581543
    10. ' =
' → logprob: -18.32594108581543

Token 626: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.00671584764495492
    2. ' process' → logprob: -5.006715774536133
    3. 'dfs' → logprob: -14.881715774536133
    4. 'proces' → logprob: -17.131715774536133
    5. '	process' → logprob: -17.256715774536133
    6. '   ' → logprob: -17.381715774536133
    7. '(process' → logprob: -17.756715774536133
    8. '
' → logprob: -17.756715774536133
    9. ' dfs' → logprob: -18.631715774536133
    10. ' proces' → logprob: -19.006715774536133

Token 627: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.7010146975517273
    2. '_children' → logprob: -0.7010146975517273
    3. 'children' → logprob: -5.326014518737793
    4. 'child' → logprob: -5.826014518737793
    5. '(y' → logprob: -11.826014518737793
    6. 'y' → logprob: -12.326014518737793
    7. '(children' → logprob: -12.326014518737793
    8. '_CHILD' → logprob: -12.951014518737793
    9. '(child' → logprob: -13.576014518737793
    10. '```' → logprob: -13.826014518737793

Token 628: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00201999768614769
    2. '(' → logprob: -6.252019882202148
    3. '(
' → logprob: -9.377019882202148
    4. ' (' → logprob: -12.002019882202148
    5. 'y' → logprob: -15.752019882202148
    6. '(data' → logprob: -16.00201988220215
    7. '(Y' → logprob: -16.62701988220215
    8. '(

' → logprob: -16.87701988220215
    9. '(x' → logprob: -17.00201988220215
    10. '
' → logprob: -17.50201988220215

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020056030189152807
    2. ',v' → logprob: -9.000200271606445
    3. ' ,' → logprob: -9.500200271606445
    4. ',
' → logprob: -14.500200271606445
    5. ',y' → logprob: -15.000200271606445
    6. '`,' → logprob: -15.125200271606445
    7. 'v' → logprob: -15.375200271606445
    8. '',' → logprob: -15.500200271606445
    9. ')' → logprob: -15.625200271606445
    10. '
' → logprob: -15.750200271606445

Token 630: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0008066523587331176
    2. ' v' → logprob: -7.12580680847168
    3. '   ' → logprob: -13.75080680847168
    4. '	v' → logprob: -14.87580680847168
    5. '
' → logprob: -15.00080680847168
    6. 'y' → logprob: -15.75080680847168
    7. ')v' → logprob: -15.75080680847168
    8. '    ' → logprob: -16.25080680847168
    9. ',v' → logprob: -17.37580680847168
    10. '```' → logprob: -17.75080680847168

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.240481914370321e-05
    2. ' ,' → logprob: -10.000052452087402
    3. ',
' → logprob: -13.125052452087402
    4. 'graph' → logprob: -13.375052452087402
    5. '`,' → logprob: -14.500052452087402
    6. ')' → logprob: -14.625052452087402
    7. '       ' → logprob: -14.750052452087402
    8. '(graph' → logprob: -14.875052452087402
    9. ' graph' → logprob: -15.250052452087402
    10. '```' → logprob: -15.250052452087402

Token 632: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0005762664368376136
    2. ' graph' → logprob: -7.625576496124268
    3. 'fact' → logprob: -9.37557601928711
    4. '(graph' → logprob: -14.62557601928711
    5. 'factor' → logprob: -14.62557601928711
    6. '	graph' → logprob: -14.62557601928711
    7. '   ' → logprob: -14.75057601928711
    8. '
' → logprob: -15.00057601928711
    9. ' fact' → logprob: -15.12557601928711
    10. ')' → logprob: -15.25057601928711

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.490809417096898e-05
    2. ' ,' → logprob: -9.875055313110352
    3. ',f' → logprob: -13.250055313110352
    4. ',
' → logprob: -14.250055313110352
    5. '```' → logprob: -15.250055313110352
    6. ')' → logprob: -15.875055313110352
    7. '
' → logprob: -16.00005531311035
    8. '),' → logprob: -16.25005531311035
    9. '`,' → logprob: -16.50005531311035
    10. '‌,' → logprob: -16.93755531311035

Token 634: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.011048289015889168
    2. ' fact' → logprob: -4.511048316955566
    3. 'factor' → logprob: -14.761048316955566
    4. '_fact' → logprob: -17.26104736328125
    5. '
' → logprob: -18.51104736328125
    6. ' fakt' → logprob: -18.88604736328125
    7. '.fact' → logprob: -19.01104736328125
    8. '   ' → logprob: -19.38604736328125
    9. 'f' → logprob: -19.76104736328125
    10. 'mod' → logprob: -19.88604736328125

Token 635: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0921942703134846e-05
    2. '2' → logprob: -12.00001049041748
    3. ',' → logprob: -12.75001049041748
    4. ')' → logprob: -14.62501049041748
    5. '```' → logprob: -15.37501049041748
    6. '_,' → logprob: -16.000011444091797
    7. '
' → logprob: -16.500011444091797
    8. '   ' → logprob: -16.562511444091797
    9. 'fact' → logprob: -16.562511444091797
    10. '-' → logprob: -16.562511444091797

Token 636: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00763135077431798
    2. '_' → logprob: -4.882631301879883
    3. ' ' → logprob: -11.882631301879883
    4. '
' → logprob: -12.382631301879883
    5. ',' → logprob: -12.507631301879883
    6. '```' → logprob: -13.007631301879883
    7. '   ' → logprob: -13.257631301879883
    8. '₂' → logprob: -13.882631301879883
    9. '-' → logprob: -14.382631301879883
    10. 'fact' → logprob: -14.570131301879883

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5954712075181305e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',
' → logprob: -14.750036239624023
    4. 'mod' → logprob: -16.750036239624023
    5. '
' → logprob: -17.000036239624023
    6. ')' → logprob: -17.125036239624023
    7. ',module' → logprob: -17.500036239624023
    8. '   ' → logprob: -18.125036239624023
    9. '```' → logprob: -18.250036239624023
    10. '),' → logprob: -18.250036239624023

Token 638: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005530327325686812
    2. ' mod' → logprob: -7.500553131103516
    3. '	mod' → logprob: -17.875553131103516
    4. '(mod' → logprob: -18.625553131103516
    5. '   ' → logprob: -20.125553131103516
    6. ' ' → logprob: -20.375553131103516
    7. '
' → logprob: -20.875553131103516
    8. '_mod' → logprob: -21.375553131103516
    9. '```' → logprob: -21.375553131103516
    10. ' мод' → logprob: -21.625553131103516

Token 639: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019865304057020694
    2. ' ,' → logprob: -9.375198364257812
    3. ',data' → logprob: -9.625198364257812
    4. '   ' → logprob: -10.750198364257812
    5. '       ' → logprob: -11.625198364257812
    6. ')' → logprob: -11.750198364257812
    7. ',
' → logprob: -12.625198364257812
    8. 'data' → logprob: -13.000198364257812
    9. 'def' → logprob: -14.000198364257812
    10. ')
' → logprob: -14.125198364257812

Token 640: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0017044597771018744
    2. ' dfs' → logprob: -6.376704692840576
    3. '
' → logprob: -14.501704216003418
    4. 'df' → logprob: -14.626704216003418
    5. '   ' → logprob: -14.626704216003418
    6. ')' → logprob: -15.376704216003418
    7. '       ' → logprob: -16.126705169677734
    8. ')
' → logprob: -16.251705169677734
    9. ' ' → logprob: -16.626705169677734
    10. 'DFS' → logprob: -16.876705169677734

Token 641: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -5.872261317563243e-05
    2. 'fn' → logprob: -9.750059127807617
    3. ')' → logprob: -15.500059127807617
    4. '```' → logprob: -16.875059127807617
    5. 'Fn' → logprob: -17.500059127807617
    6. '
' → logprob: -18.125059127807617
    7. ')
' → logprob: -18.250059127807617
    8. '(fn' → logprob: -18.625059127807617
    9. 'def' → logprob: -18.625059127807617
    10. '__' → logprob: -19.000059127807617

Token 642: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.41965699195861816
    2. ')' → logprob: -1.4196569919586182
    3. '       ' → logprob: -2.294656991958618
    4. ')
' → logprob: -9.294656753540039
    5. ',' → logprob: -10.544656753540039
    6. '   ' → logprob: -12.044656753540039
    7. ')

' → logprob: -12.919656753540039
    8. 'def' → logprob: -13.169656753540039
    9. 'if' → logprob: -13.794656753540039
    10. ')data' → logprob: -14.044656753540039

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000285530521068722
    2. 'if' → logprob: -8.500285148620605
    3. ' if' → logprob: -10.125285148620605
    4. '```' → logprob: -11.000285148620605
    5. '   ' → logprob: -11.500285148620605
    6. '
' → logprob: -12.375285148620605
    7. 'def' → logprob: -13.000285148620605
    8. ',' → logprob: -13.125285148620605
    9. '<|end|>' → logprob: -13.125285148620605
    10. '        
' → logprob: -13.250285148620605

Token 644: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1348060965538025
    2. '       ' → logprob: -2.3848061561584473
    3. ' if' → logprob: -3.3848061561584473
    4. '   ' → logprob: -9.134805679321289
    5. 'data' → logprob: -11.759805679321289
    6. '	if' → logprob: -12.134805679321289
    7. ' ' → logprob: -13.759805679321289
    8. '	' → logprob: -14.509805679321289
    9. '```' → logprob: -15.009805679321289
    10. 'If' → logprob: -15.509805679321289

Token 645: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3132932484149933
    2. ' data' → logprob: -1.313293218612671
    3. '   ' → logprob: -10.43829345703125
    4. '	data' → logprob: -14.06329345703125
    5. '       ' → logprob: -14.68829345703125
    6. '           ' → logprob: -15.43829345703125
    7. ' ' → logprob: -15.81329345703125
    8. 'not' → logprob: -15.93829345703125
    9. 'Data' → logprob: -16.31329345703125
    10. '
' → logprob: -16.43829345703125

Token 646: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.023259572684764862
    2. 'is' → logprob: -3.7732596397399902
    3. '1' → logprob: -11.523259162902832
    4. 'data' → logprob: -12.898259162902832
    5. '
' → logprob: -13.773259162902832
    6. ' ' → logprob: -15.648259162902832
    7. ')' → logprob: -16.27326011657715
    8. ' None' → logprob: -16.77326011657715
    9. ')is' → logprob: -17.02326011657715
    10. 'None' → logprob: -17.14826011657715

Token 647: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.5759992003440857
    2. 'None' → logprob: -0.8259992003440857
    3. '=None' → logprob: -10.82599925994873
    4. 'data' → logprob: -10.95099925994873
    5. '   ' → logprob: -11.20099925994873
    6. ' data' → logprob: -12.57599925994873
    7. '(None' → logprob: -13.57599925994873
    8. '_None' → logprob: -13.57599925994873
    9. ' is' → logprob: -14.32599925994873
    10. ' not' → logprob: -14.57599925994873

Token 648: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7531949877738953
    2. '=' → logprob: -1.25319504737854
    3. ':' → logprob: -1.50319504737854
    4. ':
' → logprob: -4.128194808959961
    5. '=None' → logprob: -6.003194808959961
    6. '       ' → logprob: -7.128194808959961
    7. '=data' → logprob: -7.128194808959961
    8. '<|end|>' → logprob: -8.253194808959961
    9. ' is' → logprob: -9.253194808959961
    10. ' =
' → logprob: -9.503194808959961

Token 649: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23989415168762207
    2. '=' → logprob: -1.989894151687622
    3. '       ' → logprob: -3.989894151687622
    4. '=data' → logprob: -3.989894151687622
    5. 'data' → logprob: -4.114893913269043
    6. ' =' → logprob: -4.739893913269043
    7. ':
' → logprob: -4.989893913269043
    8. ' data' → logprob: -5.739893913269043
    9. ':' → logprob: -5.989893913269043
    10. '	       ' → logprob: -7.364893913269043

Token 650: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.004172183573246002
    2. ' data' → logprob: -5.504172325134277
    3. '           ' → logprob: -9.379172325134277
    4. '               ' → logprob: -11.629172325134277
    5. '       ' → logprob: -15.754172325134277
    6. '	data' → logprob: -15.879172325134277
    7. '   ' → logprob: -16.75417137145996
    8. '=data' → logprob: -18.12917137145996
    9. '.data' → logprob: -18.87917137145996
    10. '<data' → logprob: -18.87917137145996

Token 651: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008816413581371307
    2. ' =' → logprob: -4.758816242218018
    3. '=data' → logprob: -8.508816719055176
    4. '=
' → logprob: -15.758816719055176
    5. '=

' → logprob: -16.88381576538086
    6. '＝' → logprob: -16.88381576538086
    7. '=np' → logprob: -17.13381576538086
    8. '=}' → logprob: -17.75881576538086
    9. 'data' → logprob: -18.00881576538086
    10. '==' → logprob: -18.63381576538086

Token 652: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.00011236425780225545
    2. ' data' → logprob: -9.125112533569336
    3. 'np' → logprob: -13.000112533569336
    4. '           ' → logprob: -14.375112533569336
    5. '   ' → logprob: -15.625112533569336
    6. ' ' → logprob: -16.625112533569336
    7. 'dp' → logprob: -16.875112533569336
    8. '       ' → logprob: -17.000112533569336
    9. '         ' → logprob: -17.375112533569336
    10. '[data' → logprob: -17.750112533569336

Token 653: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018598081544041634
    2. 'data' → logprob: -5.1435980796813965
    3. '+' → logprob: -5.5185980796813965
    4. '=data' → logprob: -5.6435980796813965
    5. ' data' → logprob: -6.3935980796813965
    6. '_data' → logprob: -7.1435980796813965
    7. '=' → logprob: -7.2685980796813965
    8. '.copy' → logprob: -8.143598556518555
    9. ' =' → logprob: -8.268598556518555
    10. ' +' → logprob: -8.518598556518555

Token 654: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2349349558353424
    2. 'else' → logprob: -1.60993492603302
    3. ' else' → logprob: -4.7349348068237305
    4. '
' → logprob: -8.10993480682373
    5. '```' → logprob: -8.60993480682373
    6. '<|end|>' → logprob: -9.35993480682373
    7. ',' → logprob: -10.23493480682373
    8. '<|end|>' → logprob: -10.73493480682373
    9. ':
' → logprob: -11.60993480682373
    10. '	else' → logprob: -11.98493480682373

Token 655: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03880641609430313
    2. 'else' → logprob: -3.413806438446045
    3. ' else' → logprob: -5.288806438446045
    4. '<|end|>' → logprob: -10.038805961608887
    5. '```' → logprob: -10.913805961608887
    6. ',' → logprob: -11.413805961608887
    7. '   ' → logprob: -11.913805961608887
    8. '	' → logprob: -12.038805961608887
    9. '<|end|>' → logprob: -12.163805961608887
    10. '	else' → logprob: -12.788805961608887

Token 656: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.7110232710838318
    2. '       ' → logprob: -0.8360232710838318
    3. ' else' → logprob: -2.5860233306884766
    4. '	else' → logprob: -9.961023330688477
    5. ',' → logprob: -11.211023330688477
    6. '   ' → logprob: -11.336023330688477
    7. '	' → logprob: -11.336023330688477
    8. '```' → logprob: -11.711023330688477
    9. ':
' → logprob: -12.086023330688477
    10. '_else' → logprob: -12.961023330688477

Token 657: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5792747735977173
    2. ':
' → logprob: -0.8292747735977173
    3. '       ' → logprob: -5.829274654388428
    4. ':data' → logprob: -8.954275131225586
    5. '           ' → logprob: -9.579275131225586
    6. '=' → logprob: -10.204275131225586
    7. ' data' → logprob: -10.329275131225586
    8. ' :
' → logprob: -10.829275131225586
    9. 'data' → logprob: -10.954275131225586
    10. ' =' → logprob: -10.954275131225586

Token 658: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3950481116771698
    2. '           ' → logprob: -1.8950481414794922
    3. ' data' → logprob: -2.020048141479492
    4. 'data' → logprob: -3.145048141479492
    5. '```' → logprob: -9.395048141479492
    6. '   ' → logprob: -9.645048141479492
    7. '[data' → logprob: -10.145048141479492
    8. '	data' → logprob: -10.270048141479492
    9. '<data' → logprob: -10.895048141479492
    10. ',data' → logprob: -11.145048141479492

Token 659: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.48701000213623047
    2. ' data' → logprob: -0.9870100021362305
    3. '           ' → logprob: -4.3620100021362305
    4. '       ' → logprob: -9.73701000213623
    5. '   ' → logprob: -11.23701000213623
    6. '	data' → logprob: -11.36201000213623
    7. '               ' → logprob: -12.23701000213623
    8. ' ' → logprob: -13.73701000213623
    9. ',data' → logprob: -13.73701000213623
    10. '.data' → logprob: -13.86201000213623

Token 660: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692958116531372
    2. ' =' → logprob: -2.126929521560669
    3. '=
' → logprob: -14.25192928314209
    4. '=data' → logprob: -14.25192928314209
    5. '＝' → logprob: -15.62692928314209
    6. ' =
' → logprob: -17.501930236816406
    7. '+=' → logprob: -17.876930236816406
    8. ' ' → logprob: -18.501930236816406
    9. '   ' → logprob: -18.751930236816406
    10. '=np' → logprob: -18.751930236816406

Token 661: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029751067981123924
    2. ' dp' → logprob: -3.5297510623931885
    3. '	dp' → logprob: -15.15475082397461
    4. '   ' → logprob: -15.90475082397461
    5. '(dp' → logprob: -16.15475082397461
    6. '           ' → logprob: -17.40475082397461
    7. '_dp' → logprob: -18.02975082397461
    8. '       ' → logprob: -18.65475082397461
    9. '.dp' → logprob: -18.65475082397461
    10. ' ' → logprob: -19.27975082397461

Token 662: '_merge' (ID: 50662)
  Prédit: '_merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_merge' → logprob: -2.856408536899835e-05
    2. 'merge' → logprob: -10.500028610229492
    3. 'data' → logprob: -14.125028610229492
    4. 'Merge' → logprob: -15.875028610229492
    5. '_' → logprob: -17.000028610229492
    6. '_append' → logprob: -17.125028610229492
    7. '_mer' → logprob: -18.500028610229492
    8. '   ' → logprob: -18.625028610229492
    9. '```' → logprob: -18.625028610229492
    10. '_concat' → logprob: -19.000028610229492

Token 663: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -2.1888679839321412e-05
    2. 'data' → logprob: -11.375021934509277
    3. '(' → logprob: -11.625021934509277
    4. '(
' → logprob: -14.375021934509277
    5. ',data' → logprob: -15.125021934509277
    6. ')data' → logprob: -15.250021934509277
    7. '[data' → logprob: -15.625021934509277
    8. '=data' → logprob: -16.37502098083496
    9. '<data' → logprob: -17.12502098083496
    10. '```' → logprob: -17.87502098083496

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01817862130701542
    2. ',data' → logprob: -4.018178462982178
    3. ' ,' → logprob: -11.143178939819336
    4. '(data' → logprob: -11.268178939819336
    5. ',
' → logprob: -14.643178939819336
    6. 'data' → logprob: -15.143178939819336
    7. '[data' → logprob: -15.393178939819336
    8. '   ' → logprob: -15.768178939819336
    9. ',d' → logprob: -16.143178939819336
    10. '           ' → logprob: -16.893178939819336

Token 665: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0024758970830589533
    2. ' data' → logprob: -6.002475738525391
    3. '(data' → logprob: -16.50247573852539
    4. '           ' → logprob: -17.37747573852539
    5. '	data' → logprob: -17.37747573852539
    6. ')data' → logprob: -17.50247573852539
    7. '.data' → logprob: -18.00247573852539
    8. '
' → logprob: -18.37747573852539
    9. '[data' → logprob: -18.62747573852539
    10. '_data' → logprob: -19.00247573852539

Token 666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ',' → logprob: -15.250000953674316
    3. '```' → logprob: -15.625000953674316
    4. '[' → logprob: -16.125
    5. 'data' → logprob: -16.75
    6. ')' → logprob: -16.875
    7. '<|end|>' → logprob: -17.0
    8. ' ' → logprob: -17.625
    9. '_' → logprob: -18.375
    10. '...' → logprob: -18.875

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012415809032972902
    2. ' ,' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.500123977661133
    4. ')' → logprob: -16.875123977661133
    5. ',
' → logprob: -16.875123977661133
    6. ',module' → logprob: -17.375123977661133
    7. '‌,' → logprob: -18.500123977661133
    8. '       ' → logprob: -18.875123977661133
    9. '           ' → logprob: -18.875123977661133
    10. '  ' → logprob: -19.000123977661133

Token 668: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16022443771362305
    2. ' mod' → logprob: -1.910224437713623
    3. '	mod' → logprob: -15.660224914550781
    4. '(mod' → logprob: -16.66022491455078
    5. '           ' → logprob: -17.28522491455078
    6. ' ' → logprob: -18.66022491455078
    7. '_mod' → logprob: -18.91022491455078
    8. '.mod' → logprob: -19.41022491455078
    9. ' modul' → logprob: -19.66022491455078
    10. '    ' → logprob: -19.78522491455078

Token 669: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010652327910065651
    2. ')
' → logprob: -10.375106811523438
    3. '<|end|>' → logprob: -10.375106811523438
    4. '       ' → logprob: -10.625106811523438
    5. '   ' → logprob: -11.250106811523438
    6. ' )' → logprob: -12.625106811523438
    7. ')return' → logprob: -13.375106811523438
    8. '<|end|>' → logprob: -15.125106811523438
    9. ' ' → logprob: -15.375106811523438
    10. '```' → logprob: -15.875106811523438

Token 670: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00271618808619678
    2. 'return' → logprob: -6.502716064453125
    3. '
' → logprob: -6.877716064453125
    4. ' return' → logprob: -9.127716064453125
    5. '```' → logprob: -10.752716064453125
    6. '       ' → logprob: -10.877716064453125
    7. ',' → logprob: -11.752716064453125
    8. '<|end|>' → logprob: -11.877716064453125
    9. '    
' → logprob: -12.002716064453125
    10. '	return' → logprob: -12.752716064453125

Token 671: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009279042482376099
    2. 'return' → logprob: -4.884279251098633
    3. 'if' (adapté à ' if') → logprob: -6.759279251098633
    4. ' return' → logprob: -8.384279251098633
    5. ' if' → logprob: -8.509279251098633
    6. '
' → logprob: -10.134279251098633
    7. '```' → logprob: -10.259279251098633
    8. 'def' → logprob: -13.009279251098633
    9. '    
' → logprob: -13.759279251098633
    10. '	return' → logprob: -13.884279251098633

Token 672: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.01816480979323387
    2. 'data' → logprob: -4.01816463470459
    3. 'v' → logprob: -12.26816463470459
    4. ' v' → logprob: -12.51816463470459
    5. '   ' → logprob: -12.64316463470459
    6. ' len' → logprob: -13.89316463470459
    7. ' not' → logprob: -14.14316463470459
    8. ' ' → logprob: -15.14316463470459
    9. '
' → logprob: -15.26816463470459
    10. 'len' → logprob: -15.64316463470459

Token 673: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02324605919420719
    2. 'is' → logprob: -3.7732460498809814
    3. '	is' → logprob: -15.773245811462402
    4. ' =' → logprob: -16.14824676513672
    5. '=' → logprob: -16.27324676513672
    6. ' ' → logprob: -16.39824676513672
    7. '==' → logprob: -16.89824676513672
    8. '[' → logprob: -17.39824676513672
    9. 'i' → logprob: -17.52324676513672
    10. '   ' → logprob: -18.27324676513672

Token 674: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0019286326132714748
    2. ' None' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.626928329467773
    4. 'none' → logprob: -17.751928329467773
    5. 'not' → logprob: -17.751928329467773
    6. '_None' → logprob: -18.501928329467773
    7. ' not' → logprob: -19.751928329467773
    8. '=None' → logprob: -20.251928329467773
    9. '(None' → logprob: -20.376928329467773
    10. ' ' → logprob: -20.751928329467773

Token 675: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2107323706150055
    2. ':
' → logprob: -1.960732340812683
    3. '   ' → logprob: -3.3357324600219727
    4. '       ' → logprob: -4.710732460021973
    5. '[' → logprob: -5.960732460021973
    6. '=' → logprob: -7.210732460021973
    7. ',' → logprob: -7.585732460021973
    8. ':return' → logprob: -7.960732460021973
    9. ' =' → logprob: -8.835732460021973
    10. '<|end|>' → logprob: -10.085732460021973

Token 676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27893489599227905
    2. ':' → logprob: -1.7789349555969238
    3. '   ' → logprob: -3.028934955596924
    4. ':
' → logprob: -4.278934955596924
    5. '[' → logprob: -5.403934955596924
    6. '
' → logprob: -6.528934955596924
    7. ',' → logprob: -7.028934955596924
    8. 'data' → logprob: -7.153934955596924
    9. '=' → logprob: -7.278934955596924
    10. '<|end|>' → logprob: -7.278934955596924

Token 677: ' return' (ID: 622)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.23829077184200287
    2. 'return' (adapté à ' return') → logprob: -1.613290786743164
    3. '       ' → logprob: -5.113290786743164
    4. ' data' → logprob: -5.363290786743164
    5. ' return' → logprob: -6.488290786743164
    6. '   ' → logprob: -7.738290786743164
    7. '
' → logprob: -10.363290786743164
    8. '1' → logprob: -11.363290786743164
    9. '=' → logprob: -11.363290786743164
    10. 'result' → logprob: -11.613290786743164

Token 678: ' numpy' (ID: 19529)
  Prédit: 'numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numpy' → logprob: -0.3895747661590576
    2. 'np' → logprob: -1.2645747661590576
    3. 'zeros' → logprob: -3.3895747661590576
    4. ' numpy' → logprob: -5.264575004577637
    5. 'array' → logprob: -7.014575004577637
    6. ' np' → logprob: -8.139575004577637
    7. ' zeros' → logprob: -9.139575004577637
    8. 'dp' → logprob: -10.514575004577637
    9. 'ones' → logprob: -11.764575004577637
    10. '(np' → logprob: -12.139575004577637

Token 679: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00025919382460415363
    2. 'array' → logprob: -8.375259399414062
    3. '.array' → logprob: -11.250259399414062
    4. '.zeros' → logprob: -11.375259399414062
    5. '
' → logprob: -13.625259399414062
    6. 'Array' → logprob: -14.000259399414062
    7. ' array' → logprob: -14.500259399414062
    8. '.ones' → logprob: -14.750259399414062
    9. '```' → logprob: -14.875259399414062
    10. '_ARRAY' → logprob: -15.500259399414062

Token 680: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.041840966790914536
    2. 'int' → logprob: -3.4168410301208496
    3. '([' → logprob: -5.41684103012085
    4. 'np' → logprob: -6.66684103012085
    5. '[' → logprob: -7.04184103012085
    6. '(np' → logprob: -7.29184103012085
    7. '(' → logprob: -8.041840553283691
    8. '[int' → logprob: -8.541840553283691
    9. '(int' → logprob: -9.416840553283691
    10. '[np' → logprob: -9.541840553283691

Token 681: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.75
    3. '[' → logprob: -17.125
    4. '6' → logprob: -18.125
    5. '```' → logprob: -18.75
    6. '32' → logprob: -18.875
    7. 'array' → logprob: -20.25
    8. '(np' → logprob: -20.375
    9. 'def' → logprob: -20.375
    10. '[int' → logprob: -20.875

Token 682: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0002036595979006961
    2. '[' → logprob: -8.500204086303711
    3. '(' → logprob: -15.625204086303711
    4. ' ([' → logprob: -18.62520408630371
    5. '(([' → logprob: -18.75020408630371
    6. '```' → logprob: -19.00020408630371
    7. '(np' → logprob: -19.50020408630371
    8. '([]' → logprob: -20.37520408630371
    9. '[np' → logprob: -20.87520408630371
    10. ' [' → logprob: -21.00020408630371

Token 683: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614926598966122
    2. '0' → logprob: -4.758615016937256
    3. '[' → logprob: -15.008614540100098
    4. ' ' → logprob: -15.883614540100098
    5. '
' → logprob: -18.258615493774414
    6. '(' → logprob: -19.008615493774414
    7. '```' → logprob: -19.758615493774414
    8. '

' → logprob: -20.508615493774414
    9. '-' → logprob: -20.758615493774414
    10. '   ' → logprob: -20.883615493774414

Token 684: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02991432510316372
    2. '])' → logprob: -3.529914379119873
    3. '])
' → logprob: -9.654913902282715
    4. ' ,' → logprob: -10.404913902282715
    5. ',
' → logprob: -10.654913902282715
    6. ']' → logprob: -10.779913902282715
    7. '0' → logprob: -11.404913902282715
    8. ']+' → logprob: -12.904913902282715
    9. '   ' → logprob: -13.029913902282715
    10. ' ])' → logprob: -13.029913902282715

Token 685: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.625014305114746
    3. '0' → logprob: -12.375014305114746
    4. '])' → logprob: -14.875014305114746
    5. '2' → logprob: -15.125014305114746
    6. ']' → logprob: -15.875014305114746
    7. '   ' → logprob: -16.87501335144043
    8. '
' → logprob: -17.25001335144043
    9. '[' → logprob: -17.37501335144043
    10. '(' → logprob: -17.37501335144043

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. '0' → logprob: -11.500011444091797
    3. '])' → logprob: -14.250011444091797
    4. ' ' → logprob: -14.625011444091797
    5. '2' → logprob: -15.625011444091797
    6. ']' → logprob: -16.125011444091797
    7. ')' → logprob: -17.375011444091797
    8. '[' → logprob: -17.875011444091797
    9. '
' → logprob: -17.937511444091797
    10. '```' → logprob: -18.000011444091797

Token 687: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.20151595771312714
    2. '])
' → logprob: -1.7015159130096436
    3. '   ' → logprob: -9.701516151428223
    4. ',' → logprob: -10.451516151428223
    5. ']' → logprob: -12.451516151428223
    6. '])
' → logprob: -13.201516151428223
    7. ' ])' → logprob: -13.326516151428223
    8. '])

' → logprob: -13.576516151428223
    9. ')' → logprob: -13.576516151428223
    10. '       ' → logprob: -13.826516151428223

Token 688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034565716050565243
    2. '
' → logprob: -6.1284565925598145
    3. 'return' → logprob: -6.7534565925598145
    4. '    
' → logprob: -10.253456115722656
    5. 'data' → logprob: -10.253456115722656
    6. '```' → logprob: -11.128456115722656
    7. ' return' → logprob: -12.128456115722656
    8. '[' → logprob: -12.628456115722656
    9. '	return' → logprob: -12.628456115722656
    10. 'else' → logprob: -13.503456115722656

Token 689: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1437133550643921
    2. 'data' → logprob: -2.1437134742736816
    3. ' data' → logprob: -4.268713474273682
    4. '
' → logprob: -6.393713474273682
    5. 'return' (adapté à ' return') → logprob: -7.393713474273682
    6. ' return' → logprob: -9.143712997436523
    7. '	data' → logprob: -9.643712997436523
    8. 'import' → logprob: -10.268712997436523
    9. 'else' → logprob: -10.268712997436523
    10. '    
' → logprob: -10.643712997436523

Token 690: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5415368676185608
    2. 'dp' → logprob: -1.041536808013916
    3. 'compute' → logprob: -3.166536808013916
    4. 'numpy' → logprob: -3.916536808013916
    5. ' data' → logprob: -6.416536808013916
    6. ' dp' → logprob: -7.541536808013916
    7. 'np' → logprob: -7.791536808013916
    8. ' numpy' → logprob: -8.541537284851074
    9. 'process' → logprob: -8.541537284851074
    10. ' compute' → logprob: -9.416537284851074

Token 691: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12757039070129395
    2. '
' → logprob: -2.127570390701294
    3. '```' → logprob: -7.627570152282715
    4. '

' → logprob: -9.502570152282715
    5. '\' → logprob: -10.252570152282715
    6. '<|end|>' → logprob: -11.502570152282715
    7. '
' → logprob: -11.752570152282715
    8. '  
' → logprob: -12.127570152282715
    9. '\n' → logprob: -12.127570152282715
    10. '    
' → logprob: -12.252570152282715

Token 692: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1275482475757599
    2. '
' → logprob: -2.1275482177734375
    3. '```' → logprob: -7.6275482177734375
    4. '

' → logprob: -9.377548217773438
    5. '\' → logprob: -10.127548217773438
    6. '``' → logprob: -13.002548217773438
    7. '    
' → logprob: -13.127548217773438
    8. '  
' → logprob: -13.627548217773438
    9. '
' → logprob: -13.877548217773438
    10. '\n' → logprob: -14.002548217773438

Token 693: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.10831232368946075
    2. 'def' → logprob: -2.8583123683929443
    3. 'dfs' → logprob: -3.4833123683929443
    4. ' def' → logprob: -4.233312129974365
    5. '
' → logprob: -10.108312606811523
    6. ' df' → logprob: -11.733312606811523
    7. 'df' → logprob: -12.108312606811523
    8. 'd' → logprob: -12.608312606811523
    9. ' dp' → logprob: -12.733312606811523
    10. ' define' → logprob: -12.983312606811523

Token 694: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0023488879669457674
    2. '(' → logprob: -6.127348899841309
    3. '(graph' → logprob: -9.377348899841309
    4. '(node' → logprob: -10.627348899841309
    5. '(fn' → logprob: -11.002348899841309
    6. '(data' → logprob: -11.877348899841309
    7. '(vertex' → logprob: -12.127348899841309
    8. '(_' → logprob: -12.377348899841309
    9. '(root' → logprob: -13.127348899841309
    10. '(parent' → logprob: -13.127348899841309

Token 695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. ' ,' → logprob: -12.125008583068848
    3. ',v' → logprob: -12.750008583068848
    4. ',parent' → logprob: -15.125008583068848
    5. ',
' → logprob: -15.250008583068848
    6. '   ' → logprob: -16.250009536743164
    7. '‌,' → logprob: -18.125009536743164
    8. ',p' → logprob: -18.375009536743164
    9. 'def' → logprob: -18.750009536743164
    10. 'v' → logprob: -19.375009536743164

Token 696: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0206773541867733
    2. 'p' → logprob: -4.02067756652832
    3. ' parent' → logprob: -6.02067756652832
    4. 'par' → logprob: -9.77067756652832
    5. ' p' → logprob: -10.52067756652832
    6. 'pa' → logprob: -13.14567756652832
    7. '
' → logprob: -13.27067756652832
    8. 'graph' → logprob: -13.39567756652832
    9. 'u' → logprob: -13.77067756652832
    10. ',parent' → logprob: -13.89567756652832

Token 697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -14.875000953674316
    3. ' ,' → logprob: -14.875000953674316
    4. ',
' → logprob: -15.750000953674316
    5. ',v' → logprob: -16.875001907348633
    6. '‌,' → logprob: -17.125001907348633
    7. ',parent' → logprob: -17.500001907348633
    8. '):' → logprob: -17.875001907348633
    9. ',data' → logprob: -17.875001907348633
    10. '(graph' → logprob: -17.875001907348633

Token 698: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06196802109479904
    2. ' graph' → logprob: -2.8119680881500244
    3. '	graph' → logprob: -14.811967849731445
    4. '   ' → logprob: -17.311967849731445
    5. '(graph' → logprob: -18.061967849731445
    6. '_graph' → logprob: -19.061967849731445
    7. 'Graph' → logprob: -19.186967849731445
    8. 'raph' → logprob: -19.936967849731445
    9. ' ' → logprob: -20.686967849731445
    10. '.graph' → logprob: -20.811967849731445

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.128163257315464e-07
    2. ' ,' → logprob: -15.75
    3. ',
' → logprob: -17.125
    4. ',f' → logprob: -17.25
    5. '   ' → logprob: -18.0
    6. '‌,' → logprob: -18.5
    7. 'def' → logprob: -19.5
    8. '_,' → logprob: -20.125
    9. '‍,' → logprob: -20.75
    10. '،' → logprob: -21.375

Token 700: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.06196993216872215
    2. ' fact' → logprob: -2.8119699954986572
    3. 'factor' → logprob: -13.811969757080078
    4. '   ' → logprob: -14.561969757080078
    5. '_fact' → logprob: -15.186969757080078
    6. ' ' → logprob: -16.186969757080078
    7. '
' → logprob: -16.561969757080078
    8. 'mod' → logprob: -16.561969757080078
    9. '```' → logprob: -16.811969757080078
    10. 'f' → logprob: -16.811969757080078

Token 701: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.875
    3. '   ' → logprob: -16.125
    4. '2' → logprob: -16.375
    5. '__' → logprob: -17.625
    6. '\' → logprob: -17.625
    7. ',' → logprob: -17.875
    8. ')' → logprob: -18.0
    9. '[' → logprob: -18.125
    10. ' _' → logprob: -18.875

Token 702: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0699414312839508
    2. '_' → logprob: -2.694941520690918
    3. ',' → logprob: -13.569941520690918
    4. '[' → logprob: -14.194941520690918
    5. 'v' → logprob: -14.569941520690918
    6. ' ' → logprob: -14.819941520690918
    7. '₂' → logprob: -14.819941520690918
    8. '```' → logprob: -14.944941520690918
    9. '   ' → logprob: -15.194941520690918
    10. '
' → logprob: -15.319941520690918

Token 703: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -13.250001907348633
    3. ',
' → logprob: -17.375001907348633
    4. '   ' → logprob: -19.000001907348633
    5. ',module' → logprob: -20.500001907348633
    6. 'mod' → logprob: -21.375001907348633
    7. '‌,' → logprob: -21.750001907348633
    8. '):
' → logprob: -21.875001907348633
    9. 'def' → logprob: -21.875001907348633
    10. '
' → logprob: -22.250001907348633

Token 704: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01815052703022957
    2. ' mod' → logprob: -4.018150329589844
    3. '	mod' → logprob: -15.268150329589844
    4. '   ' → logprob: -16.268150329589844
    5. ' ' → logprob: -16.768150329589844
    6. '(mod' → logprob: -16.893150329589844
    7. '```' → logprob: -17.018150329589844
    8. '_mod' → logprob: -17.768150329589844
    9. '
' → logprob: -18.018150329589844
    10. ' мод' → logprob: -18.643150329589844

Token 705: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06204162538051605
    2. '):' → logprob: -2.8120415210723877
    3. '):
' → logprob: -10.062041282653809
    4. '   ' → logprob: -10.812041282653809
    5. ',data' → logprob: -12.062041282653809
    6. ')' → logprob: -13.312041282653809
    7. ',
' → logprob: -13.562041282653809
    8. ' ):' → logprob: -14.187041282653809
    9. ' ,' → logprob: -14.812041282653809
    10. ',d' → logprob: -15.687041282653809

Token 706: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.007608278188854456
    2. ' dfs' → logprob: -4.882608413696289
    3. 'df' → logprob: -14.382608413696289
    4. '   ' → logprob: -14.382608413696289
    5. '
' → logprob: -14.632608413696289
    6. ' ' → logprob: -15.507608413696289
    7. ')' → logprob: -16.38260841369629
    8. 'd' → logprob: -16.88260841369629
    9. 'def' → logprob: -16.88260841369629
    10. '  ' → logprob: -17.13260841369629

Token 707: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -0.0009362359414808452
    2. '):' → logprob: -7.500936031341553
    3. '):
' → logprob: -8.375936508178711
    4. 'fn' → logprob: -9.375936508178711
    5. ')' → logprob: -10.000936508178711
    6. '_' → logprob: -11.000936508178711
    7. '_)' → logprob: -13.500936508178711
    8. '_
' → logprob: -14.125936508178711
    9. '```' → logprob: -14.250936508178711
    10. ',' → logprob: -14.250936508178711

Token 708: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002489214763045311
    2. '):
' → logprob: -6.00248908996582
    3. ')' → logprob: -11.37748908996582
    4. '):
' → logprob: -14.12748908996582
    5. ',' → logprob: -14.37748908996582
    6. '   ' → logprob: -14.87748908996582
    7. '):

' → logprob: -15.37748908996582
    8. ' ):' → logprob: -15.87748908996582
    9. ':' → logprob: -16.25248908996582
    10. '**' → logprob: -17.75248908996582

Token 709: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002216869033873081
    2. 'data' → logprob: -6.127216815948486
    3. ' data' → logprob: -10.627217292785645
    4. '   ' → logprob: -12.752217292785645
    5. '	data' → logprob: -12.752217292785645
    6. '
' → logprob: -14.127217292785645
    7. '```' → logprob: -14.127217292785645
    8. '_data' → logprob: -16.627216339111328
    9. '    
' → logprob: -16.877216339111328
    10. '(data' → logprob: -17.127216339111328

Token 710: ' return' (ID: 622)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0002549024939071387
    2. '   ' → logprob: -8.50025463104248
    3. ' data' → logprob: -10.25025463104248
    4. 'children' → logprob: -11.62525463104248
    5. 'child' → logprob: -12.00025463104248
    6. '
' → logprob: -14.87525463104248
    7. 'res' → logprob: -15.62525463104248
    8. 'result' → logprob: -15.75025463104248
    9. '```' → logprob: -15.75025463104248
    10. 'dp' → logprob: -17.625255584716797

Token 711: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.008758271113038063
    2. ' process' → logprob: -4.758758068084717
    3. 'dp' → logprob: -9.383758544921875
    4. 'numpy' → logprob: -10.383758544921875
    5. 'compute' → logprob: -11.133758544921875
    6. 'np' → logprob: -11.883758544921875
    7. ' numpy' → logprob: -12.758758544921875
    8. '(process' → logprob: -13.758758544921875
    9. ' dp' → logprob: -13.758758544921875
    10. '	process' → logprob: -14.258758544921875

Token 712: '_children' (ID: 78282)
  Prédit: '_children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_children' → logprob: -4.246537173457909e-06
    2. 'children' → logprob: -12.500003814697266
    3. '_child' → logprob: -14.875003814697266
    4. '(children' → logprob: -16.625003814697266
    5. 'Children' → logprob: -19.125003814697266
    6. '(' → logprob: -19.625003814697266
    7. '```' → logprob: -19.625003814697266
    8. '_' → logprob: -19.750003814697266
    9. '_ch' → logprob: -20.000003814697266
    10. '_choices' → logprob: -20.000003814697266

Token 713: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.125006675720215
    3. '(
' → logprob: -14.125006675720215
    4. ' (' → logprob: -16.2500057220459
    5. '(grid' → logprob: -17.0000057220459
    6. 'graph' → logprob: -17.2500057220459
    7. '(game' → logprob: -17.5000057220459
    8. '(gr' → logprob: -17.7500057220459
    9. '(Graph' → logprob: -17.7500057220459
    10. '(g' → logprob: -17.8750057220459

Token 714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.85104202805087e-05
    2. ',v' → logprob: -9.625078201293945
    3. ',
' → logprob: -11.500078201293945
    4. ' ,' → logprob: -13.125078201293945
    5. 'v' → logprob: -16.125078201293945
    6. '
' → logprob: -17.375078201293945
    7. '   ' → logprob: -17.500078201293945
    8. '‌,' → logprob: -17.875078201293945
    9. '```' → logprob: -18.375078201293945
    10. ')' → logprob: -18.375078201293945

Token 715: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001170225441455841
    2. ' v' → logprob: -6.7511701583862305
    3. '	v' → logprob: -17.251171112060547
    4. ')v' → logprob: -18.501171112060547
    5. '   ' → logprob: -18.876171112060547
    6. '_v' → logprob: -19.626171112060547
    7. '```' → logprob: -19.751171112060547
    8. ')' → logprob: -20.001171112060547
    9. '(v' → logprob: -20.376171112060547
    10. ',v' → logprob: -20.876171112060547

Token 716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.047134305234067e-05
    2. ' ,' → logprob: -10.875030517578125
    3. ',parent' → logprob: -11.750030517578125
    4. ',
' → logprob: -13.250030517578125
    5. ',v' → logprob: -13.500030517578125
    6. '   ' → logprob: -15.375030517578125
    7. 'v' → logprob: -17.250030517578125
    8. 'parent' → logprob: -17.375030517578125
    9. '```' → logprob: -17.500030517578125
    10. '
' → logprob: -17.625030517578125

Token 717: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0001234428636962548
    2. ' parent' → logprob: -9.000123023986816
    3. '
' → logprob: -17.000123977661133
    4. '   ' → logprob: -18.625123977661133
    5. 'v' → logprob: -19.625123977661133
    6. '	parent' → logprob: -19.875123977661133
    7. ',parent' → logprob: -20.000123977661133
    8. '(parent' → logprob: -20.375123977661133
    9. ' ' → logprob: -21.250123977661133
    10. '[parent' → logprob: -21.375123977661133

Token 718: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021045419271104038
    2. ' ,' → logprob: -8.500210762023926
    3. ',f' → logprob: -12.500210762023926
    4. '   ' → logprob: -13.000210762023926
    5. ',
' → logprob: -15.250210762023926
    6. '```' → logprob: -15.500210762023926
    7. 'fact' → logprob: -15.625210762023926
    8. ')' → logprob: -16.12520980834961
    9. ' ' → logprob: -16.87520980834961
    10. 'graph' → logprob: -17.00020980834961

Token 719: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0019289902411401272
    2. ' fact' → logprob: -6.251928806304932
    3. 'factor' → logprob: -15.00192928314209
    4. '_fact' → logprob: -18.501928329467773
    5. '.fact' → logprob: -19.626928329467773
    6. '   ' → logprob: -20.126928329467773
    7. 'Fact' → logprob: -20.501928329467773
    8. 'facts' → logprob: -21.126928329467773
    9. ' fakt' → logprob: -21.251928329467773
    10. '```' → logprob: -21.376928329467773

Token 720: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3425219549390022e-05
    2. '2' → logprob: -11.37501335144043
    3. ',' → logprob: -13.62501335144043
    4. '```' → logprob: -14.62501335144043
    5. '   ' → logprob: -17.12501335144043
    6. '_,' → logprob: -17.12501335144043
    7. ')' → logprob: -17.12501335144043
    8. '\' → logprob: -17.87501335144043
    9. 'fact' → logprob: -17.87501335144043
    10. '-' → logprob: -18.37501335144043

Token 721: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023333763238042593
    2. '_' → logprob: -8.37523365020752
    3. 'fact' → logprob: -14.62523365020752
    4. '```' → logprob: -14.87523365020752
    5. '
' → logprob: -15.00023365020752
    6. 'mod' → logprob: -15.12523365020752
    7. '₂' → logprob: -15.25023365020752
    8. 'factor' → logprob: -15.25023365020752
    9. '۲' → logprob: -15.56273365020752
    10. ' ' → logprob: -15.93773365020752

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4987974029500037e-05
    2. ' ,' → logprob: -10.625024795532227
    3. 'mod' → logprob: -14.875024795532227
    4. ',
' → logprob: -15.625024795532227
    5. '```' → logprob: -17.500024795532227
    6. '   ' → logprob: -17.875024795532227
    7. '(mod' → logprob: -18.125024795532227
    8. '
' → logprob: -18.375024795532227
    9. ',module' → logprob: -18.625024795532227
    10. ' mod' → logprob: -19.000024795532227

Token 723: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.493430894101039e-05
    2. ' mod' → logprob: -9.500075340270996
    3. '	mod' → logprob: -18.75007438659668
    4. '
' → logprob: -19.50007438659668
    5. '(mod' → logprob: -19.75007438659668
    6. '   ' → logprob: -20.00007438659668
    7. ' ' → logprob: -20.87507438659668
    8. '_mod' → logprob: -22.00007438659668
    9. '    ' → logprob: -22.37507438659668
    10. 'moder' → logprob: -22.50007438659668

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.750436007976532e-05
    2. ' ,' → logprob: -10.50003719329834
    3. ',d' → logprob: -12.00003719329834
    4. '   ' → logprob: -13.00003719329834
    5. ',
' → logprob: -14.62503719329834
    6. ')' → logprob: -14.87503719329834
    7. 'dfs' → logprob: -14.87503719329834
    8. ' dfs' → logprob: -15.75003719329834
    9. '```' → logprob: -16.875038146972656
    10. '    ' → logprob: -17.000038146972656

Token 725: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00408647395670414
    2. ' dfs' → logprob: -5.504086494445801
    3. 'df' → logprob: -12.0040864944458
    4. 'dp' → logprob: -14.1290864944458
    5. '
' → logprob: -15.2540864944458
    6. 'd' → logprob: -15.3790864944458
    7. '   ' → logprob: -16.004085540771484
    8. 'DFS' → logprob: -16.004085540771484
    9. 'dfa' → logprob: -16.504085540771484
    10. 'ds' → logprob: -16.504085540771484

Token 726: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -0.0005064461147412658
    2. 'fn' → logprob: -7.750506401062012
    3. ')' → logprob: -9.500506401062012
    4. ')_' → logprob: -15.250506401062012
    5. '_f' → logprob: -15.500506401062012
    6. ',' → logprob: -15.625506401062012
    7. ')
' → logprob: -16.375507354736328
    8. '_)' → logprob: -16.500507354736328
    9. '```' → logprob: -17.625507354736328
    10. '_' → logprob: -17.750507354736328

Token 727: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -15.125000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '))' → logprob: -16.625001907348633
    6. ')}' → logprob: -18.250001907348633
    7. ')`' → logprob: -18.250001907348633
    8. ',' → logprob: -18.375001907348633
    9. ',)' → logprob: -18.500001907348633
    10. ')+' → logprob: -19.000001907348633

Token 728: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 729: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.029851382598280907
    2. 'main' → logprob: -3.5298514366149902
    3. 'if' → logprob: -9.654850959777832
    4. '__' → logprob: -11.529850959777832
    5. ' if' → logprob: -11.654850959777832
    6. ' __' → logprob: -11.779850959777832
    7. 'def' → logprob: -12.404850959777832
    8. ' def' → logprob: -12.529850959777832
    9. '_main' → logprob: -13.029850959777832
    10. ' ' → logprob: -15.279850959777832

Token 730: '_answer' (ID: 65702)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -1.7127652168273926
    2. '_factor' → logprob: -1.8377652168273926
    3. '_dp' → logprob: -1.8377652168273926
    4. '_count' → logprob: -2.3377652168273926
    5. '_' → logprob: -2.7127652168273926
    6. '(' → logprob: -3.0877652168273926
    7. '(n' → logprob: -3.3377652168273926
    8. '_result' → logprob: -3.3377652168273926
    9. '_answer' → logprob: -3.5877652168273926
    10. '(dp' → logprob: -3.7127652168273926

Token 731: '(data' (ID: 4819)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.03803219646215439
    2. '(data' → logprob: -3.913032293319702
    3. '():' → logprob: -4.913032054901123
    4. '(root' → logprob: -5.538032054901123
    5. '(v' → logprob: -6.163032054901123
    6. '(n' → logprob: -6.413032054901123
    7. '(' → logprob: -7.913032054901123
    8. '(input' → logprob: -8.038032531738281
    9. '(vertices' → logprob: -8.038032531738281
    10. '(def' → logprob: -8.288032531738281

Token 732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033510818611830473
    2. '):' → logprob: -6.128351211547852
    3. '):
' → logprob: -7.128351211547852
    4. ',data' → logprob: -8.003351211547852
    5. '   ' → logprob: -11.753351211547852
    6. ',
' → logprob: -12.378351211547852
    7. ' ,' → logprob: -12.628351211547852
    8. '(data' → logprob: -12.628351211547852
    9. 'data' → logprob: -12.753351211547852
    10. 'def' → logprob: -13.378351211547852

Token 733: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.061229147017002106
    2. ' fact' → logprob: -2.9362292289733887
    3. 'mod' → logprob: -5.186229228973389
    4. ' mod' → logprob: -7.436229228973389
    5. 'factor' → logprob: -9.68622875213623
    6. ' N' → logprob: -10.93622875213623
    7. 'N' → logprob: -11.06122875213623
    8. '
' → logprob: -11.68622875213623
    9. 'n' → logprob: -12.18622875213623
    10. 'data' → logprob: -12.43622875213623

Token 734: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.988221684878226e-06
    2. 'def' → logprob: -12.750006675720215
    3. '```' → logprob: -13.125006675720215
    4. '_value' → logprob: -14.625006675720215
    5. '   ' → logprob: -14.875006675720215
    6. ')' → logprob: -15.125006675720215
    7. '2' → logprob: -16.00000762939453
    8. ')_' → logprob: -16.50000762939453
    9. '\' → logprob: -16.62500762939453
    10. '_factor' → logprob: -17.00000762939453

Token 735: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07889232039451599
    2. '2' → logprob: -2.578892230987549
    3. '```' → logprob: -13.453892707824707
    4. ' ' → logprob: -14.953892707824707
    5. '₂' → logprob: -15.078892707824707
    6. 'def' → logprob: -15.453892707824707
    7. '[' → logprob: -16.32889175415039
    8. '   ' → logprob: -16.70389175415039
    9. ',' → logprob: -17.45389175415039
    10. 's' → logprob: -17.51639175415039

Token 736: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.676292231422849e-05
    2. ' ,' → logprob: -12.000017166137695
    3. '):
' → logprob: -12.125017166137695
    4. '):' → logprob: -12.750017166137695
    5. ',
' → logprob: -14.000017166137695
    6. '   ' → logprob: -14.500017166137695
    7. ',data' → logprob: -14.750017166137695
    8. 'def' → logprob: -15.125017166137695
    9. '‌,' → logprob: -17.500017166137695
    10. '):

' → logprob: -17.625017166137695

Token 737: ' N' (ID: 478)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.061967913061380386
    2. ' mod' → logprob: -2.8119678497314453
    3. '	mod' → logprob: -16.811967849731445
    4. ' ' → logprob: -17.561967849731445
    5. '   ' → logprob: -17.561967849731445
    6. ')' → logprob: -18.061967849731445
    7. '
' → logprob: -18.311967849731445
    8. '_mod' → logprob: -19.061967849731445
    9. ' мод' → logprob: -19.186967849731445
    10. '(mod' → logprob: -19.186967849731445

Token 738: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11679437756538391
    2. '):' → logprob: -2.2417943477630615
    3. ',' → logprob: -5.616794586181641
    4. '):
' → logprob: -8.36679458618164
    5. '):

' → logprob: -10.36679458618164
    6. ')' → logprob: -10.49179458618164
    7. '   ' → logprob: -11.24179458618164
    8. '1' → logprob: -11.99179458618164
    9. '```' → logprob: -12.24179458618164
    10. ' ):
' → logprob: -12.86679458618164

Token 739: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0889449194073677
    2. ' mod' → logprob: -2.463944911956787
    3. '   ' → logprob: -13.213945388793945
    4. ')' → logprob: -13.463945388793945
    5. ' ' → logprob: -14.338945388793945
    6. '	mod' → logprob: -14.713945388793945
    7. '):
' → logprob: -15.338945388793945
    8. 'fact' → logprob: -15.463945388793945
    9. 'm' → logprob: -16.338945388793945
    10. ' fact' → logprob: -16.338945388793945

Token 740: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20173600316047668
    2. '):
' → logprob: -1.7017359733581543
    3. '):
' → logprob: -8.576736450195312
    4. ',' → logprob: -9.201736450195312
    5. '   ' → logprob: -10.576736450195312
    6. ')' → logprob: -12.701736450195312
    7. 'def' → logprob: -13.826736450195312
    8. '):

' → logprob: -14.326736450195312
    9. '(data' → logprob: -14.326736450195312
    10. ':' → logprob: -14.451736450195312

Token 741: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4712376594543457
    2. 'answer' → logprob: -1.0962376594543457
    3. 'result' → logprob: -3.8462376594543457
    4. 'ans' → logprob: -4.221237659454346
    5. '```' → logprob: -6.346237659454346
    6. 'res' → logprob: -6.471237659454346
    7. ' answer' → logprob: -6.721237659454346
    8. ' ans' → logprob: -8.096237182617188
    9. '
' → logprob: -8.596237182617188
    10. 'total' → logprob: -8.846237182617188

Token 742: ' return' (ID: 622)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5585306286811829
    2. 'answer' → logprob: -1.308530569076538
    3. 'res' → logprob: -2.433530569076538
    4. 'result' → logprob: -3.058530569076538
    5. 'return' (adapté à ' return') → logprob: -4.058530807495117
    6. 'total' → logprob: -5.933530807495117
    7. 'ret' → logprob: -6.308530807495117
    8. '   ' → logprob: -7.183530807495117
    9. 'acc' → logprob: -8.933530807495117
    10. 's' → logprob: -9.558530807495117

Token 743: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5813349485397339
    2. '(data' → logprob: -2.2063350677490234
    3. '(sum' → logprob: -2.2063350677490234
    4. 'np' → logprob: -2.4563350677490234
    5. 'int' → logprob: -2.5813350677490234
    6. '(np' → logprob: -3.3313350677490234
    7. 'data' → logprob: -4.456335067749023
    8. '((' → logprob: -5.206335067749023
    9. '(int' → logprob: -5.331335067749023
    10. '(' → logprob: -7.456335067749023

Token 744: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.057391583919525146
    2. '(data' → logprob: -2.93239164352417
    3. 'np' → logprob: -6.55739164352417
    4. '-data' → logprob: -7.18239164352417
    5. '(np' → logprob: -8.932391166687012
    6. '-(' → logprob: -9.557391166687012
    7. ' data' → logprob: -10.182391166687012
    8. '(-' → logprob: -10.932391166687012
    9. '[data' → logprob: -11.057391166687012
    10. 'sum' → logprob: -11.182391166687012

Token 745: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08568423241376877
    2. ' *' → logprob: -2.585684299468994
    3. '*' → logprob: -5.085684299468994
    4. '[:' → logprob: -8.460683822631836
    5. '[:]' → logprob: -8.960683822631836
    6. '*[' → logprob: -9.710683822631836
    7. '[data' → logprob: -9.835683822631836
    8. '[N' → logprob: -10.460683822631836
    9. '[n' → logprob: -11.085683822631836
    10. '[np' → logprob: -11.335683822631836

Token 746: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0013589247828349471
    2. 'np' → logprob: -6.876358985900879
    3. ' fact' → logprob: -8.501358985900879
    4. 'factor' → logprob: -9.876358985900879
    5. '[' → logprob: -11.251358985900879
    6. 'numpy' → logprob: -11.251358985900879
    7. '   ' → logprob: -11.376358985900879
    8. '(np' → logprob: -11.876358985900879
    9. '[np' → logprob: -12.251358985900879
    10. ' np' → logprob: -12.251358985900879

Token 747: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '[' → logprob: -17.5
    3. '```' → logprob: -18.0
    4. 'fact' → logprob: -18.25
    5. '_
' → logprob: -18.375
    6. '-' → logprob: -18.75
    7. '2' → logprob: -18.75
    8. '_
' → logprob: -19.625
    9. '__' → logprob: -20.125
    10. '
' → logprob: -20.25

Token 748: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1269640177488327
    2. '2' → logprob: -2.1269640922546387
    3. '[' → logprob: -11.37696361541748
    4. '```' → logprob: -12.00196361541748
    5. '-' → logprob: -12.75196361541748
    6. '₂' → logprob: -13.12696361541748
    7. ' ' → logprob: -13.87696361541748
    8. 'value' → logprob: -13.93946361541748
    9. '   ' → logprob: -14.06446361541748
    10. '{' → logprob: -14.31446361541748

Token 749: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -5.56233171664644e-05
    2. '[np' → logprob: -11.000055313110352
    3. '[' → logprob: -11.125055313110352
    4. ')' → logprob: -11.125055313110352
    5. '[:-' → logprob: -11.875055313110352
    6. '][:' → logprob: -13.500055313110352
    7. '
' → logprob: -14.625055313110352
    8. '[N' → logprob: -16.12505531311035
    9. ').' → logprob: -16.37505531311035
    10. '[
' → logprob: -16.62505531311035

Token 750: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00038145645521581173
    2. 'len' → logprob: -7.8753814697265625
    3. ' N' → logprob: -14.125381469726562
    4. '(N' → logprob: -14.750381469726562
    5. '(len' → logprob: -15.875381469726562
    6. ' len' → logprob: -18.375381469726562
    7. '   ' → logprob: -18.750381469726562
    8. '(' → logprob: -18.875381469726562
    9. '[N' → logprob: -18.875381469726562
    10. ']' → logprob: -19.625381469726562

Token 751: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06393729150295258
    2. '])' → logprob: -3.188937187194824
    3. ']' → logprob: -3.938937187194824
    4. ']).' → logprob: -7.563937187194824
    5. '].' → logprob: -8.063937187194824
    6. '][:' → logprob: -8.563937187194824
    7. '])[' → logprob: -9.563937187194824
    8. '   ' → logprob: -10.563937187194824
    9. '])*' → logprob: -10.563937187194824
    10. ' +' → logprob: -10.688937187194824

Token 752: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02815341204404831
    2. 'N' → logprob: -3.778153419494629
    3. 'len' → logprob: -5.528153419494629
    4. 'data' → logprob: -8.028153419494629
    5. '(len' → logprob: -8.528153419494629
    6. '(' → logprob: -9.028153419494629
    7. '(N' → logprob: -9.153153419494629
    8. ' ' → logprob: -10.278153419494629
    9. '   ' → logprob: -10.528153419494629
    10. '```' → logprob: -10.653153419494629

Token 753: ']' (ID: 60)
  Prédit: ']).'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']).' → logprob: -0.028150169178843498
    2. '])' → logprob: -4.2781500816345215
    3. ']' → logprob: -4.9031500816345215
    4. ']%' → logprob: -6.1531500816345215
    5. '].' → logprob: -6.2781500816345215
    6. '][:' → logprob: -6.4031500816345215
    7. '[:' → logprob: -7.9031500816345215
    8. ').' → logprob: -8.40315055847168
    9. '   ' → logprob: -10.02815055847168
    10. ')' → logprob: -10.15315055847168

Token 754: ' %' (ID: 1851)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.048953622579574585
    2. ')' → logprob: -3.1739535331726074
    3. '%' → logprob: -6.048953533172607
    4. ')%' → logprob: -6.048953533172607
    5. '[:' → logprob: -7.048953533172607
    6. ' %' → logprob: -8.923954010009766
    7. ' ).' → logprob: -9.298954010009766
    8. '[::-' → logprob: -10.298954010009766
    9. '   ' → logprob: -10.423954010009766
    10. '[' → logprob: -10.923954010009766

Token 755: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.054500666621607e-06
    2. ' mod' → logprob: -12.75000286102295
    3. '(mod' → logprob: -16.500003814697266
    4. '```' → logprob: -18.875003814697266
    5. '
' → logprob: -19.000003814697266
    6. '10' → logprob: -20.875003814697266
    7. '[' → logprob: -21.250003814697266
    8. '	mod' → logprob: -21.375003814697266
    9. ' ' → logprob: -21.875003814697266
    10. '   ' → logprob: -22.125003814697266

Token 756: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -9.674858301877975e-05
    2. ')[' → logprob: -10.000096321105957
    3. ')' → logprob: -10.875096321105957
    4. '   ' → logprob: -11.125096321105957
    5. ' ).' → logprob: -11.500096321105957
    6. '[' → logprob: -12.125096321105957
    7. '  ' → logprob: -14.500096321105957
    8. '[::-' → logprob: -15.000096321105957
    9. '[:' → logprob: -15.125096321105957
    10. ' ' → logprob: -15.625096321105957

Token 757: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.9361264946837764e-07
    2. ' sum' → logprob: -16.375
    3. '```' → logprob: -18.125
    4. '.sum' → logprob: -18.25
    5. '
' → logprob: -18.75
    6. 'tolist' → logprob: -19.25
    7. 'dot' → logprob: -19.375
    8. '(sum' → logprob: -19.5
    9. '	sum' → logprob: -20.5
    10. '_sum' → logprob: -20.625

Token 758: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003374886582605541
    2. '()%' → logprob: -8.000337600708008
    3. '()]' → logprob: -14.375337600708008
    4. '()>' → logprob: -15.125337600708008
    5. '()
' → logprob: -15.250337600708008
    6. '()<' → logprob: -16.000337600708008
    7. '()[' → logprob: -16.125337600708008
    8. ' ()' → logprob: -16.250337600708008
    9. '(' → logprob: -16.375337600708008
    10. '())' → logprob: -16.375337600708008

Token 759: ' %' (ID: 1851)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3379269540309906
    2. '
' → logprob: -1.587926983833313
    3. '<|end|>' → logprob: -2.5879268646240234
    4. '```' → logprob: -5.212926864624023
    5. '

' → logprob: -7.587926864624023
    6. '\n' → logprob: -7.712926864624023
    7. ')' → logprob: -8.212926864624023
    8. '\' → logprob: -8.712926864624023
    9. '    
' → logprob: -9.587926864624023
    10. '  
' → logprob: -9.837926864624023

Token 760: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.0325924449716695e-05
    2. ' mod' → logprob: -11.50001049041748
    3. '(mod' → logprob: -16.375009536743164
    4. '```' → logprob: -20.500009536743164
    5. '	mod' → logprob: -21.250009536743164
    6. '
' → logprob: -22.375009536743164
    7. '10' → logprob: -22.500009536743164
    8. '100' → logprob: -23.750009536743164
    9. ' ' → logprob: -24.000009536743164
    10. '7' → logprob: -24.375009536743164

Token 761: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013632125919684768
    2. '```' → logprob: -7.751363277435303
    3. '<|end|>' → logprob: -7.876363277435303
    4. '
' → logprob: -8.001362800598145
    5. 'if' → logprob: -8.626362800598145
    6. '#' → logprob: -11.251362800598145
    7. 'data' → logprob: -12.376362800598145
    8. 'import' → logprob: -12.876362800598145
    9. '  
' → logprob: -13.001362800598145
    10. '<|end|>' → logprob: -13.001362800598145

Token 762: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04300444945693016
    2. '```' → logprob: -3.2930045127868652
    3. 'if' → logprob: -5.543004512786865
    4. '<|end|>' → logprob: -8.168004035949707
    5. '#' → logprob: -8.293004035949707
    6. 'import' → logprob: -8.918004035949707
    7. '
' → logprob: -9.043004035949707
    8. '``' → logprob: -9.918004035949707
    9. 'n' → logprob: -10.043004035949707
    10. 'for' → logprob: -10.168004035949707

Token 763: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.05226153880357742
    2. ' main' → logprob: -3.0522615909576416
    3. 'set' → logprob: -5.9272613525390625
    4. 'def' → logprob: -7.3022613525390625
    5. '__' → logprob: -8.302261352539062
    6. ' set' → logprob: -10.177261352539062
    7. '_main' → logprob: -10.552261352539062
    8. ' __' → logprob: -12.802261352539062
    9. 'run' → logprob: -12.802261352539062
    10. ' def' → logprob: -12.802261352539062

Token 764: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001508674118667841
    2. '():
' → logprob: -6.501508712768555
    3. ' ():' → logprob: -12.001508712768555
    4. '():
' → logprob: -15.501508712768555
    5. '()' → logprob: -16.751508712768555
    6. '():

' → logprob: -17.751508712768555
    7. '_' → logprob: -20.626508712768555
    8. 'def' → logprob: -20.751508712768555
    9. '(' → logprob: -21.001508712768555
    10. '().' → logprob: -21.501508712768555

Token 765: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006345376837998629
    2. 'input' → logprob: -5.631345272064209
    3. ' input' → logprob: -6.131345272064209
    4. 'set' → logprob: -8.131345748901367
    5. ' set' → logprob: -8.756345748901367
    6. 'n' → logprob: -9.756345748901367
    7. '```' → logprob: -10.506345748901367
    8. ' n' → logprob: -12.131345748901367
    9. 'def' → logprob: -12.256345748901367
    10. '()' → logprob: -12.506345748901367

Token 766: ' set' (ID: 920)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5765293836593628
    2. 'input' → logprob: -0.8265293836593628
    3. '   ' → logprob: -7.451529502868652
    4. 'n' → logprob: -12.201529502868652
    5. 'import' → logprob: -13.701529502868652
    6. ' n' → logprob: -14.076529502868652
    7. '
' → logprob: -14.201529502868652
    8. '_input' → logprob: -14.451529502868652
    9. '```' → logprob: -14.576529502868652
    10. '    
' → logprob: -15.951529502868652

Token 767: '_rec' (ID: 35314)
  Prédit: '_rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.00011617878044489771
    2. 'rec' → logprob: -9.625116348266602
    3. '_' → logprob: -10.125116348266602
    4. '()' → logprob: -12.250116348266602
    5. '(' → logprob: -13.250116348266602
    6. '_recursive' → logprob: -13.875116348266602
    7. '(rec' → logprob: -15.000116348266602
    8. '(_' → logprob: -15.000116348266602
    9. '_re' → logprob: -15.000116348266602
    10. '_rep' → logprob: -15.375116348266602

Token 768: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -2.2603901015827432e-05
    2. 'urs' → logprob: -11.000022888183594
    3. '_' → logprob: -12.250022888183594
    4. 'ursor' → logprob: -14.750022888183594
    5. 'ursive' → logprob: -15.375022888183594
    6. '   ' → logprob: -16.250022888183594
    7. 'ur' → logprob: -16.250022888183594
    8. 'usion' → logprob: -16.750022888183594
    9. '```' → logprob: -17.000022888183594
    10. '(' → logprob: -17.375022888183594

Token 769: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.011048170737922192
    2. 'limit' → logprob: -4.511048316955566
    3. '_' → logprob: -15.636048316955566
    4. '_limits' → logprob: -17.01104736328125
    5. '_LIMIT' → logprob: -17.38604736328125
    6. ' limit' → logprob: -17.51104736328125
    7. '_lim' → logprob: -17.63604736328125
    8. '(limit' → logprob: -17.76104736328125
    9. 'Limit' → logprob: -18.01104736328125
    10. 'lim' → logprob: -18.38604736328125

Token 770: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0087516784551553e-05
    2. '()
' → logprob: -11.62501049041748
    3. '(' → logprob: -14.50001049041748
    4. ' ()' → logprob: -15.12501049041748
    5. '()

' → logprob: -16.125009536743164
    6. '()
' → logprob: -16.625009536743164
    7. '())' → logprob: -16.875009536743164
    8. '()`' → logprob: -17.125009536743164
    9. '();' → logprob: -17.125009536743164
    10. '()\' → logprob: -18.000009536743164

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20216557383537292
    2. 'input' → logprob: -1.7021656036376953
    3. ' input' → logprob: -7.202165603637695
    4. 'n' → logprob: -12.202165603637695
    5. '	input' → logprob: -14.577165603637695
    6. 'import' → logprob: -14.577165603637695
    7. ',input' → logprob: -14.827165603637695
    8. '```' → logprob: -14.952165603637695
    9. '  ' → logprob: -16.452165603637695
    10. '_input' → logprob: -16.577165603637695

Token 772: ' mod' (ID: 1812)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.735893965815194e-05
    2. ' input' → logprob: -11.750017166137695
    3. '   ' → logprob: -12.125017166137695
    4. 'N' → logprob: -12.750017166137695
    5. 'n' → logprob: -13.875017166137695
    6. 'mod' (adapté à ' mod') → logprob: -16.625017166137695
    7. '```' → logprob: -18.750017166137695
    8. 'import' → logprob: -19.000017166137695
    9. '    
' → logprob: -19.375017166137695
    10. '
' → logprob: -20.000017166137695

Token 773: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018153101205825806
    2. '=' → logprob: -4.018153190612793
    3. '_' → logprob: -13.018153190612793
    4. '_value' → logprob: -15.018153190612793
    5. ')' → logprob: -15.643153190612793
    6. ',' → logprob: -16.143152236938477
    7. '=int' → logprob: -16.643152236938477
    8. '_val' → logprob: -16.643152236938477
    9. '   ' → logprob: -16.643152236938477
    10. ' =
' → logprob: -16.768152236938477

Token 774: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2519439160823822
    2. '10' → logprob: -1.5019439458847046
    3. ' mod' → logprob: -11.251943588256836
    4. '(mod' → logprob: -14.126943588256836
    5. ' ' → logprob: -14.251943588256836
    6. '100' → logprob: -15.251943588256836
    7. '(' → logprob: -16.126943588256836
    8. '	mod' → logprob: -16.751943588256836
    9. 'int' → logprob: -17.501943588256836
    10. 'MOD' → logprob: -17.626943588256836

Token 775: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.037835580878891e-05
    2. '_values' → logprob: -11.12505054473877
    3. 'value' → logprob: -11.62505054473877
    4. '_' → logprob: -11.87505054473877
    5. ')' → logprob: -12.25005054473877
    6. '_VALUE' → logprob: -12.87505054473877
    7. '_Value' → logprob: -12.87505054473877
    8. '```' → logprob: -13.12505054473877
    9. ' _' → logprob: -13.25005054473877
    10. '_val' → logprob: -13.50005054473877

Token 776: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1283002346754074
    2. '   ' → logprob: -2.128300189971924
    3. '    
' → logprob: -7.003300189971924
    4. 'input' → logprob: -8.253300666809082
    5. '()
' → logprob: -9.128300666809082
    6. '
' → logprob: -10.753300666809082
    7. '```' → logprob: -10.878300666809082
    8. '()' → logprob: -11.003300666809082
    9. '  
' → logprob: -11.503300666809082
    10. 'n' → logprob: -12.128300666809082

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036415960639715195
    2. 'input' → logprob: -3.7864160537719727
    3. 'n' → logprob: -4.411416053771973
    4. '
' → logprob: -7.411416053771973
    5. ' input' → logprob: -8.286416053771973
    6. '    
' → logprob: -10.161416053771973
    7. ' n' → logprob: -10.161416053771973
    8. '```' → logprob: -12.161416053771973
    9. '	n' → logprob: -13.661416053771973
    10. 'N' → logprob: -13.661416053771973

Token 778: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.0010047047398984432
    2. ' input' → logprob: -7.751004695892334
    3. 'n' → logprob: -8.251005172729492
    4. '   ' → logprob: -8.251005172729492
    5. 'N' → logprob: -9.876005172729492
    6. ' n' → logprob: -15.251005172729492
    7. ' N' → logprob: -16.251005172729492
    8. '```' → logprob: -16.626005172729492
    9. 'import' → logprob: -17.251005172729492
    10. '
' → logprob: -17.501005172729492

Token 779: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0021445509046316147
    2. '()' → logprob: -6.7521443367004395
    3. '_' → logprob: -7.1271443367004395
    4. 'func' → logprob: -9.502144813537598
    5. '_fn' → logprob: -10.002144813537598
    6. '=' → logprob: -10.877144813537598
    7. '_f' → logprob: -11.002144813537598
    8. '_=' → logprob: -12.502144813537598
    9. '_fun' → logprob: -12.752144813537598
    10. ' =' → logprob: -13.002144813537598

Token 780: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759707689285278
    2. '=' → logprob: -0.8259707689285278
    3. '()' → logprob: -10.450970649719238
    4. '＝' → logprob: -13.575970649719238
    5. '=sys' → logprob: -14.325970649719238
    6. '=input' → logprob: -15.450970649719238
    7. ' ' → logprob: -16.700971603393555
    8. '   ' → logprob: -17.075971603393555
    9. ' =)' → logprob: -17.325971603393555
    10. '(' → logprob: -17.325971603393555

Token 781: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.1603270024061203
    2. 'sys' → logprob: -1.9103269577026367
    3. ' get' → logprob: -9.660326957702637
    4. ' sys' → logprob: -10.160326957702637
    5. 'input' → logprob: -14.910326957702637
    6. '(get' → logprob: -17.660327911376953
    7. '=sys' → logprob: -17.910327911376953
    8. '(sys' → logprob: -18.410327911376953
    9. 'read' → logprob: -19.035327911376953
    10. '	get' → logprob: -19.535327911376953

Token 782: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0006411884678527713
    2. 'input' → logprob: -7.625641345977783
    3. '()' → logprob: -9.375640869140625
    4. '_' → logprob: -10.375640869140625
    5. 'sys' → logprob: -11.625640869140625
    6. 'stdin' → logprob: -11.750640869140625
    7. ')' → logprob: -12.375640869140625
    8. '_sys' → logprob: -12.500640869140625
    9. '(input' → logprob: -13.125640869140625
    10. '(' → logprob: -13.250640869140625

Token 783: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5767022967338562
    2. '()' → logprob: -0.8267022967338562
    3. '   ' → logprob: -7.326702117919922
    4. '
' → logprob: -9.451702117919922
    5. '()

' → logprob: -11.576702117919922
    6. 'def' → logprob: -12.076702117919922
    7. '()
' → logprob: -12.076702117919922
    8. '    
' → logprob: -13.576702117919922
    9. ')' → logprob: -14.076702117919922
    10. '())' → logprob: -14.451702117919922

Token 784: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014571604318916798
    2. 'n' → logprob: -4.264571666717529
    3. '
' → logprob: -8.764571189880371
    4. '    
' → logprob: -9.264571189880371
    5. '```' → logprob: -9.264571189880371
    6. ' n' → logprob: -9.889571189880371
    7. '	n' → logprob: -12.014571189880371
    8. 'N' → logprob: -13.514571189880371
    9. '(n' → logprob: -13.514571189880371
    10. ',n' → logprob: -14.014571189880371

Token 785: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.02342785708606243
    2. 'n' → logprob: -3.773427963256836
    3. '   ' → logprob: -8.648427963256836
    4. ' N' → logprob: -12.273427963256836
    5. '
' → logprob: -13.648427963256836
    6. '    
' → logprob: -14.273427963256836
    7. ' n' → logprob: -14.898427963256836
    8. '```' → logprob: -15.898427963256836
    9. 't' → logprob: -17.898427963256836
    10. 'T' → logprob: -18.273427963256836

Token 786: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759594440460205
    2. '=' → logprob: -0.8259594440460205
    3. '=int' → logprob: -11.325959205627441
    4. '   ' → logprob: -11.950959205627441
    5. '()' → logprob: -14.825959205627441
    6. '＝' → logprob: -15.075959205627441
    7. ' ' → logprob: -15.450959205627441
    8. ',' → logprob: -15.575959205627441
    9. '    ' → logprob: -15.825959205627441
    10. '	' → logprob: -15.825959205627441

Token 787: ' read' (ID: 1729)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3422192931175232
    2. ' int' → logprob: -1.592219352722168
    3. 'read' → logprob: -2.592219352722168
    4. ' read' → logprob: -4.467219352722168
    5. '(int' → logprob: -14.467219352722168
    6. ' ' → logprob: -16.34221839904785
    7. '[int' → logprob: -16.34221839904785
    8. '   ' → logprob: -16.71721839904785
    9. '=int' → logprob: -16.84221839904785
    10. '  ' → logprob: -16.96721839904785

Token 788: '_integer' (ID: 82911)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08107113838195801
    2. '_func' → logprob: -3.081071138381958
    3. '(int' → logprob: -4.706070899963379
    4. 'int' → logprob: -4.831070899963379
    5. '()' → logprob: -4.956070899963379
    6. '_int' → logprob: -5.831070899963379
    7. '(func' → logprob: -6.706070899963379
    8. 'func' → logprob: -6.831070899963379
    9. '_integer' → logprob: -7.081070899963379
    10. '(' → logprob: -7.581070899963379

Token 789: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.625
    3. ' (' → logprob: -16.625
    4. 'input' → logprob: -17.875
    5. '=input' → logprob: -19.0
    6. ',input' → logprob: -20.375
    7. '(
' → logprob: -21.75
    8. '(lambda' → logprob: -22.375
    9. '[input' → logprob: -22.375
    10. '<input' → logprob: -22.5

Token 790: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.9504606825648807e-05
    2. 'func' → logprob: -10.875019073486328
    3. ')' → logprob: -15.000019073486328
    4. '_' → logprob: -17.250019073486328
    5. '```' → logprob: -17.375019073486328
    6. 'Func' → logprob: -17.500019073486328
    7. ')_' → logprob: -17.750019073486328
    8. '_function' → logprob: -18.125019073486328
    9. '(func' → logprob: -18.375019073486328
    10. '_)' → logprob: -19.000019073486328

Token 791: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03836860880255699
    2. '())' → logprob: -3.2883687019348145
    3. '()' → logprob: -8.038368225097656
    4. ' )' → logprob: -13.163368225097656
    5. ')
' → logprob: -13.788368225097656
    6. '())
' → logprob: -14.413368225097656
    7. ' ())' → logprob: -15.288368225097656
    8. '(' → logprob: -15.913368225097656
    9. '()
' → logprob: -16.163368225097656
    10. '();)' → logprob: -16.288368225097656

Token 792: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03915805742144585
    2. 'graph' → logprob: -3.2891581058502197
    3. '	graph' → logprob: -7.539157867431641
    4. ' graph' → logprob: -7.664157867431641
    5. '```' → logprob: -9.53915786743164
    6. '
' → logprob: -10.41415786743164
    7. '    
' → logprob: -12.03915786743164
    8. '(graph' → logprob: -12.91415786743164
    9. '   ' → logprob: -13.28915786743164
    10. '_graph' → logprob: -14.03915786743164

Token 793: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.008760163560509682
    2. ' graph' → logprob: -4.75875997543335
    3. '   ' → logprob: -9.008760452270508
    4. '	graph' → logprob: -11.383760452270508
    5. '```' → logprob: -11.633760452270508
    6. '
' → logprob: -13.508760452270508
    7. '(graph' → logprob: -14.258760452270508
    8. 'Graph' → logprob: -15.008760452270508
    9. '_graph' → logprob: -15.258760452270508
    10. '``' → logprob: -15.883760452270508

Token 794: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868859112262726
    2. '=' → logprob: -1.1368858814239502
    3. '=create' → logprob: -11.136885643005371
    4. ',' → logprob: -15.511885643005371
    5. '＝' → logprob: -16.636886596679688
    6. ')' → logprob: -16.636886596679688
    7. '[' → logprob: -17.511886596679688
    8. '```' → logprob: -17.886886596679688
    9. ' ' → logprob: -18.511886596679688
    10. 'create' → logprob: -18.636886596679688

Token 795: ' create' (ID: 2501)
  Prédit: ' create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.47407856583595276
    2. 'create' → logprob: -0.9740785360336304
    3. '(create' → logprob: -13.974078178405762
    4. '=create' → logprob: -14.349078178405762
    5. '.create' → logprob: -16.849079132080078
    6. '	create' → logprob: -17.974079132080078
    7. '_create' → logprob: -18.849079132080078
    8. ':create' → logprob: -19.724079132080078
    9. 'reate' → logprob: -20.349079132080078
    10. '[' → logprob: -20.474079132080078

Token 796: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.009983435273170471
    2. '(graph' → logprob: -5.509983539581299
    3. 'graph' → logprob: -5.509983539581299
    4. '_graph' → logprob: -6.884983539581299
    5. '(N' → logprob: -7.384983539581299
    6. 'empty' → logprob: -9.75998306274414
    7. '(n' → logprob: -9.88498306274414
    8. '```' → logprob: -10.63498306274414
    9. '(' → logprob: -10.88498306274414
    10. '_(' → logprob: -11.50998306274414

Token 797: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00016218038217630237
    2. 'graph' → logprob: -8.750162124633789
    3. '(graph' → logprob: -12.625162124633789
    4. 'Graph' → logprob: -15.750162124633789
    5. ' graph' → logprob: -16.00016212463379
    6. '_list' → logprob: -16.37516212463379
    7. '```' → logprob: -17.25016212463379
    8. '_array' → logprob: -18.12516212463379
    9. '	graph' → logprob: -18.12516212463379
    10. 'raph' → logprob: -19.00016212463379

Token 798: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.250001907348633
    3. 'N' → logprob: -15.750001907348633
    4. ' (' → logprob: -16.625001907348633
    5. '(
' → logprob: -18.875001907348633
    6. '(n' → logprob: -19.125001907348633
    7. '```' → logprob: -19.250001907348633
    8. '   ' → logprob: -19.625001907348633
    9. '((' → logprob: -20.375001907348633
    10. '
' → logprob: -20.500001907348633

Token 799: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009140860638581216
    2. ')
' → logprob: -7.000914096832275
    3. '   ' → logprob: -13.875913619995117
    4. '())' → logprob: -14.375913619995117
    5. ')
' → logprob: -14.500913619995117
    6. ' )' → logprob: -14.875913619995117
    7. '))' → logprob: -17.000913619995117
    8. ')

' → logprob: -17.000913619995117
    9. '()' → logprob: -17.375913619995117
    10. ')`' → logprob: -17.625913619995117

Token 800: '   ' (ID: 271)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.3875828683376312
    2. '   ' → logprob: -1.1375828981399536
    3. ' fill' → logprob: -7.887582778930664
    4. 'fact' → logprob: -8.512582778930664
    5. '```' → logprob: -9.387582778930664
    6. '	fill' → logprob: -10.637582778930664
    7. '  ' → logprob: -12.387582778930664
    8. '(fill' → logprob: -12.387582778930664
    9. '.fill' → logprob: -12.512582778930664
    10. ' ' → logprob: -12.887582778930664

Token 801: ' fill' (ID: 6954)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' (adapté à ' fill') → logprob: -0.0002681304467841983
    2. ' fill' → logprob: -8.25026798248291
    3. '   ' → logprob: -12.12526798248291
    4. '```' → logprob: -14.25026798248291
    5. '	fill' → logprob: -15.75026798248291
    6. 'for' → logprob: -15.87526798248291
    7. '(fill' → logprob: -16.125268936157227
    8. 'expand' → logprob: -16.500268936157227
    9. '.fill' → logprob: -16.625268936157227
    10. ' ' → logprob: -17.250268936157227

Token 802: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.028360622003674507
    2. '(graph' → logprob: -3.778360605239868
    3. 'graph' → logprob: -5.278360843658447
    4. ' graph' → logprob: -14.153360366821289
    5. '	graph' → logprob: -14.653360366821289
    6. '```' → logprob: -17.27836036682129
    7. 'Graph' → logprob: -18.02836036682129
    8. '_gr' → logprob: -18.02836036682129
    9. '_GRAPH' → logprob: -18.40336036682129
    10. '_' → logprob: -18.52836036682129

Token 803: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -3.128163257315464e-07
    2. 'graph' → logprob: -15.25
    3. ' (' → logprob: -18.25
    4. '```' → logprob: -18.25
    5. '(grid' → logprob: -18.875
    6. '(Graph' → logprob: -19.0
    7. '	graph' → logprob: -19.625
    8. '(' → logprob: -19.625
    9. '(
' → logprob: -19.75
    10. '(grammar' → logprob: -19.75

Token 804: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003934967797249556
    2. '(graph' → logprob: -5.753934860229492
    3. ',N' → logprob: -7.878934860229492
    4. '(N' → logprob: -8.503934860229492
    5. ' ,' → logprob: -9.753934860229492
    6. ')' → logprob: -10.378934860229492
    7. '```' → logprob: -10.753934860229492
    8. '(' → logprob: -10.753934860229492
    9. ',(' → logprob: -11.253934860229492
    10. ',
' → logprob: -11.878934860229492

Token 805: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00012356207298580557
    2. ' N' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.125123977661133
    4. '[N' → logprob: -19.125123977661133
    5. '(N' → logprob: -19.375123977661133
    6. '	N' → logprob: -19.625123977661133
    7. ')' → logprob: -20.125123977661133
    8. '
' → logprob: -20.625123977661133
    9. ' ' → logprob: -20.625123977661133
    10. '  ' → logprob: -20.875123977661133

Token 806: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.480199954239652e-05
    2. ',input' → logprob: -9.750064849853516
    3. ' ,' → logprob: -12.125064849853516
    4. '   ' → logprob: -14.125064849853516
    5. ',
' → logprob: -16.375064849853516
    6. ')' → logprob: -16.500064849853516
    7. '```' → logprob: -18.000064849853516
    8. 'input' → logprob: -18.375064849853516
    9. 'import' → logprob: -19.000064849853516
    10. '
' → logprob: -19.500064849853516

Token 807: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006715370807796717
    2. ' input' → logprob: -5.006715297698975
    3. '(input' → logprob: -18.631715774536133
    4. '_input' → logprob: -21.006715774536133
    5. 'Input' → logprob: -21.506715774536133
    6. 'import' → logprob: -21.506715774536133
    7. ',input' → logprob: -21.631715774536133
    8. '[input' → logprob: -21.881715774536133
    9. '<input' → logprob: -22.006715774536133
    10. '=input' → logprob: -22.006715774536133

Token 808: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.306760805164231e-05
    2. 'func' → logprob: -11.25001335144043
    3. '_function' → logprob: -17.75001335144043
    4. 'Func' → logprob: -17.87501335144043
    5. '_FUNC' → logprob: -19.12501335144043
    6. '```' → logprob: -19.37501335144043
    7. '_' → logprob: -19.62501335144043
    8. ')' → logprob: -20.25001335144043
    9. '(func' → logprob: -20.87501335144043
    10. '_fun' → logprob: -21.12501335144043

Token 809: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5690089639974758e-05
    2. ')
' → logprob: -11.375015258789062
    3. '<|end|>' → logprob: -13.125015258789062
    4. '   ' → logprob: -14.500015258789062
    5. '())' → logprob: -14.750015258789062
    6. ')

' → logprob: -14.875015258789062
    7. ' )' → logprob: -14.875015258789062
    8. ')#' → logprob: -15.625015258789062
    9. ')}' → logprob: -16.500015258789062
    10. '),' → logprob: -16.500015258789062

Token 810: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1634991466999054
    2. 'fact' → logprob: -1.913499116897583
    3. '
' → logprob: -6.538499355316162
    4. '```' → logprob: -6.913499355316162
    5. ' fact' → logprob: -7.163499355316162
    6. '    
' → logprob: -11.413498878479004
    7. '_fact' → logprob: -11.663498878479004
    8. 'factor' → logprob: -12.163498878479004
    9. '
' → logprob: -12.163498878479004
    10. ' ' → logprob: -12.288498878479004

Token 811: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.003516329685226083
    2. ' fact' → logprob: -6.12851619720459
    3. '   ' → logprob: -6.62851619720459
    4. '```' → logprob: -12.50351619720459
    5. ' ' → logprob: -13.25351619720459
    6. '
' → logprob: -13.75351619720459
    7. '_fact' → logprob: -14.75351619720459
    8. 'factor' → logprob: -15.25351619720459
    9. '  ' → logprob: -15.37851619720459
    10. 'facts' → logprob: -15.62851619720459

Token 812: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.704273118884885e-07
    2. '=' → logprob: -15.375000953674316
    3. ' =' → logprob: -15.875000953674316
    4. '=_' → logprob: -16.625
    5. '2' → logprob: -16.875
    6. '```' → logprob: -17.0
    7. '[' → logprob: -17.25
    8. '_=' → logprob: -17.625
    9. '‌' → logprob: -17.75
    10. '\' → logprob: -18.25

Token 813: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.061968810856342316
    2. '2' → logprob: -2.8119688034057617
    3. '=' → logprob: -14.936968803405762
    4. ' ' → logprob: -15.311968803405762
    5. '₂' → logprob: -15.311968803405762
    6. '[' → logprob: -15.811968803405762
    7. '   ' → logprob: -16.561969757080078
    8. '```' → logprob: -16.936969757080078
    9. ' =' → logprob: -17.061969757080078
    10. '-' → logprob: -17.311969757080078

Token 814: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141538977622986
    2. '=' → logprob: -1.7014154195785522
    3. '   ' → logprob: -13.201415061950684
    4. ' ' → logprob: -16.701416015625
    5. '_' → logprob: -16.826416015625
    6. '=[' → logprob: -17.201416015625
    7. ',' → logprob: -17.576416015625
    8. '  ' → logprob: -17.576416015625
    9. '=f' → logprob: -18.201416015625
    10. '_=' → logprob: -18.201416015625

Token 815: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076065086759626865
    2. '=' → logprob: -4.882606506347656
    3. ',' → logprob: -15.882606506347656
    4. '  ' → logprob: -16.507606506347656
    5. '_' → logprob: -16.632606506347656
    6. ' ' → logprob: -16.632606506347656
    7. '   ' → logprob: -17.757606506347656
    8. 's' → logprob: -18.757606506347656
    9. '[' → logprob: -18.757606506347656
    10. '＝' → logprob: -19.007606506347656

Token 816: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.002562576439231634
    2. ' initialize' → logprob: -6.002562522888184
    3. '[' → logprob: -9.377562522888184
    4. ' [' → logprob: -13.752562522888184
    5. 'expand' → logprob: -14.252562522888184
    6. '	initialize' → logprob: -15.127562522888184
    7. 'initial' → logprob: -16.1275634765625
    8. 'initialized' → logprob: -17.0025634765625
    9. '[in' → logprob: -17.1275634765625
    10. '.initialize' → logprob: -17.2525634765625

Token 817: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.05516468733549118
    2. 'fact' → logprob: -2.9301645755767822
    3. '(f' → logprob: -8.555164337158203
    4. '_factor' → logprob: -9.805164337158203
    5. '_fac' → logprob: -11.305164337158203
    6. '_' → logprob: -12.055164337158203
    7. '[' → logprob: -12.555164337158203
    8. 'factor' → logprob: -12.805164337158203
    9. 'Fact' → logprob: -12.930164337158203
    10. '[f' → logprob: -13.430164337158203

Token 818: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4855663721391466e-05
    2. '[' → logprob: -11.250015258789062
    3. '```' → logprob: -14.625015258789062
    4. 's' → logprob: -15.250015258789062
    5. '(' → logprob: -15.250015258789062
    6. '2' → logprob: -16.000015258789062
    7. '__' → logprob: -16.250015258789062
    8. '<|end|>' → logprob: -16.500015258789062
    9. '([' → logprob: -16.625015258789062
    10. '[
' → logprob: -17.125015258789062

Token 819: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028174780309200287
    2. '_' → logprob: -5.877817630767822
    3. '[' → logprob: -12.377817153930664
    4. '₂' → logprob: -12.877817153930664
    5. '```' → logprob: -13.252817153930664
    6. ' ' → logprob: -13.252817153930664
    7. '(' → logprob: -14.252817153930664
    8. '_list' → logprob: -15.565317153930664
    9. 'list' → logprob: -16.065317153930664
    10. '`' → logprob: -16.065317153930664

Token 820: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08460333198308945
    2. '()' → logprob: -3.8346033096313477
    3. '(f' → logprob: -3.9596033096313477
    4. '(exp' → logprob: -4.334603309631348
    5. '<|end|>' → logprob: -4.834603309631348
    6. '
' → logprob: -5.334603309631348
    7. '   ' → logprob: -5.459603309631348
    8. '()
' → logprob: -6.084603309631348
    9. '[' → logprob: -6.459603309631348
    10. '(N' → logprob: -6.834603309631348

Token 821: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003797584678977728
    2. 'fact' → logprob: -6.25379753112793
    3. 'expand' → logprob: -6.50379753112793
    4. ' fact' → logprob: -8.25379753112793
    5. ' expand' → logprob: -9.75379753112793
    6. '
' → logprob: -10.75379753112793
    7. '    
' → logprob: -11.25379753112793
    8. '```' → logprob: -12.50379753112793
    9. 'expanded' → logprob: -12.62879753112793
    10. '.expand' → logprob: -13.25379753112793

Token 822: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.5842923521995544
    2. 'expand' → logprob: -0.8342923521995544
    3. '   ' → logprob: -4.959292411804199
    4. ' fact' → logprob: -8.0842924118042
    5. ' expand' → logprob: -8.2092924118042
    6. 'exp' → logprob: -8.3342924118042
    7. 'expanded' → logprob: -8.3342924118042
    8. 'factor' → logprob: -8.5842924118042
    9. 'extend' → logprob: -11.7092924118042
    10. ' ' → logprob: -11.9592924118042

Token 823: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.512236498361744e-07
    2. '\' → logprob: -16.125
    3. '   ' → logprob: -16.375
    4. '[' → logprob: -16.875
    5. '._' → logprob: -17.0
    6. ' _' → logprob: -17.125
    7. '__' → logprob: -17.25
    8. '```' → logprob: -17.375
    9. '‌' → logprob: -17.5
    10. '=_' → logprob: -17.5

Token 824: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005020392127335072
    2. '_' → logprob: -8.00050163269043
    3. 'expand' → logprob: -8.75050163269043
    4. ' ' → logprob: -11.87550163269043
    5. '_expand' → logprob: -14.62550163269043
    6. ' expand' → logprob: -15.37550163269043
    7. '   ' → logprob: -15.37550163269043
    8. '.expand' → logprob: -16.12550163269043
    9. '  ' → logprob: -16.75050163269043
    10. 'def' → logprob: -17.25050163269043

Token 825: ' =' (ID: 314)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.03794083744287491
    2. '=' → logprob: -3.412940740585327
    3. ' =' → logprob: -5.912940979003906
    4. '_expand' → logprob: -6.662940979003906
    5. '_exp' → logprob: -8.662940979003906
    6. '=_' → logprob: -10.162940979003906
    7. 'expand' → logprob: -10.787940979003906
    8. '_' → logprob: -10.912940979003906
    9. 'list' → logprob: -11.162940979003906
    10. '_append' → logprob: -11.787940979003906

Token 826: ' expand' (ID: 10791)
  Prédit: 'expand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expand' → logprob: -0.014163747429847717
    2. ' expand' → logprob: -4.264163970947266
    3. 'exp' → logprob: -15.639163970947266
    4. 'extend' → logprob: -16.889163970947266
    5. '.expand' → logprob: -17.264163970947266
    6. 'np' → logprob: -17.264163970947266
    7. '   ' → logprob: -18.264163970947266
    8. ' ' → logprob: -18.389163970947266
    9. '_expand' → logprob: -19.389163970947266
    10. ' np' → logprob: -19.639163970947266

Token 827: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -8.137130498653278e-05
    2. '_factor' → logprob: -10.125081062316895
    3. 'fact' → logprob: -10.250081062316895
    4. '_' → logprob: -12.625081062316895
    5. '_fac' → logprob: -13.125081062316895
    6. '(f' → logprob: -15.125081062316895
    7. '_f' → logprob: -15.625081062316895
    8. 'Fact' → logprob: -17.50008201599121
    9. '```' → logprob: -18.00008201599121
    10. '_FACT' → logprob: -18.12508201599121

Token 828: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.061054359131958e-06
    2. '_fact' → logprob: -12.000007629394531
    3. '_factor' → logprob: -13.250007629394531
    4. 'fact' → logprob: -17.25000762939453
    5. '_list' → logprob: -20.12500762939453
    6. '_value' → logprob: -20.25000762939453
    7. '```' → logprob: -21.12500762939453
    8. '2' → logprob: -21.87500762939453
    9. 'factor' → logprob: -22.00000762939453
    10. '_
' → logprob: -22.50000762939453

Token 829: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020579727366566658
    2. '_' → logprob: -3.8955798149108887
    3. 'fact' → logprob: -10.39557933807373
    4. ' ' → logprob: -13.27057933807373
    5. 'list' → logprob: -13.77057933807373
    6. '_list' → logprob: -14.02057933807373
    7. '(' → logprob: -14.64557933807373
    8. '```' → logprob: -14.64557933807373
    9. 'factor' → logprob: -14.64557933807373
    10. '₂' → logprob: -14.89557933807373

Token 830: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -11.625008583068848
    3. ' (' → logprob: -17.000009536743164
    4. '(F' → logprob: -17.750009536743164
    5. '(
' → logprob: -18.125009536743164
    6. 'fact' → logprob: -18.125009536743164
    7. '(fun' → logprob: -19.125009536743164
    8. '(fid' → logprob: -19.375009536743164
    9. '(fi' → logprob: -20.250009536743164
    10. '(list' → logprob: -20.375009536743164

Token 831: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -1.9361264946837764e-07
    2. '(act' → logprob: -15.625
    3. '_act' → logprob: -17.0
    4. 'actor' → logprob: -18.75
    5. '[' → logprob: -19.125
    6. '_' → logprob: -19.25
    7. '```' → logprob: -20.125
    8. 'fact' → logprob: -20.375
    9. '_fact' → logprob: -20.375
    10. '`' → logprob: -21.25

Token 832: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.2729995988775045e-06
    2. '_list' → logprob: -12.000006675720215
    3. '2' → logprob: -17.2500057220459
    4. '_
' → logprob: -18.0000057220459
    5. ')_' → logprob: -18.3750057220459
    6. '```' → logprob: -18.5000057220459
    7. '
' → logprob: -18.8750057220459
    8. ',' → logprob: -18.8750057220459
    9. ')' → logprob: -19.0000057220459
    10. '[' → logprob: -19.6250057220459

Token 833: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.253932923078537
    2. '_' → logprob: -1.5039329528808594
    3. '_list' → logprob: -6.253932952880859
    4. 'list' → logprob: -10.50393295288086
    5. '[' → logprob: -11.87893295288086
    6. ' ' → logprob: -12.00393295288086
    7. '-' → logprob: -12.25393295288086
    8. '=' → logprob: -12.50393295288086
    9. '₂' → logprob: -12.56643295288086
    10. '
' → logprob: -12.69143295288086

Token 834: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0002353640884393826
    2. ',' → logprob: -9.000235557556152
    3. '_,' → logprob: -9.750235557556152
    4. '_' → logprob: -10.750235557556152
    5. ',f' → logprob: -11.625235557556152
    6. '(f' → logprob: -12.000235557556152
    7. 'list' → logprob: -12.250235557556152
    8. 'fact' → logprob: -12.375235557556152
    9. '_fact' → logprob: -13.000235557556152
    10. '```' → logprob: -13.125235557556152

Token 835: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02575068548321724
    2. '(f' → logprob: -3.7757506370544434
    3. ',f' → logprob: -6.025750637054443
    4. '(' → logprob: -9.900751113891602
    5. ' ,' → logprob: -10.525751113891602
    6. ',(' → logprob: -12.150751113891602
    7. ' (' → logprob: -13.025751113891602
    8. '   ' → logprob: -14.150751113891602
    9. ',
' → logprob: -14.775751113891602
    10. ')' → logprob: -15.025751113891602

Token 836: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.704273118884885e-07
    2. ' N' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.25
    4. '	N' → logprob: -20.25
    5. '  ' → logprob: -20.5
    6. ' ' → logprob: -20.5
    7. '(N' → logprob: -20.625
    8. '10' → logprob: -21.125
    9. '    ' → logprob: -21.5
    10. '100' → logprob: -22.0

Token 837: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004078401252627373
    2. ' +' → logprob: -5.504078388214111
    3. '+
' → logprob: -17.379077911376953
    4. ',' → logprob: -18.379077911376953
    5. '＋' → logprob: -19.004077911376953
    6. '()+' → logprob: -19.879077911376953
    7. '   ' → logprob: -19.879077911376953
    8. '+,' → logprob: -20.129077911376953
    9. ' ' → logprob: -20.254077911376953
    10. '+[' → logprob: -20.254077911376953

Token 838: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026310397312045097
    2. '2' → logprob: -3.651310443878174
    3. '3' → logprob: -12.026309967041016
    4. ' ' → logprob: -12.901309967041016
    5. '   ' → logprob: -14.151309967041016
    6. '
' → logprob: -15.401309967041016
    7. '```' → logprob: -15.401309967041016
    8. '5' → logprob: -15.901309967041016
    9. '10' → logprob: -16.026309967041016
    10. '4' → logprob: -16.901309967041016

Token 839: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023290548473596573
    2. ')' → logprob: -3.7732906341552734
    3. ',)' → logprob: -10.273290634155273
    4. ',
' → logprob: -12.398290634155273
    5. ' ,' → logprob: -13.273290634155273
    6. '),' → logprob: -13.898290634155273
    7. ' )' → logprob: -14.398290634155273
    8. '+' → logprob: -14.523290634155273
    9. '   ' → logprob: -14.898290634155273
    10. ',n' → logprob: -14.898290634155273

Token 840: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0002613358374219388
    2. ' mod' → logprob: -8.250261306762695
    3. '	mod' → logprob: -20.250261306762695
    4. '(mod' → logprob: -21.250261306762695
    5. '10' → logprob: -21.750261306762695
    6. ' ' → logprob: -23.000261306762695
    7. '   ' → logprob: -24.125261306762695
    8. '```' → logprob: -24.500261306762695
    9. ' мод' → logprob: -24.750261306762695
    10. 'moder' → logprob: -25.125261306762695

Token 841: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. ')
' → logprob: -11.250014305114746
    3. ' )' → logprob: -14.125014305114746
    4. ')

' → logprob: -14.750014305114746
    5. '   ' → logprob: -15.875014305114746
    6. '),' → logprob: -18.125015258789062
    7. ')return' → logprob: -18.375015258789062
    8. ' ' → logprob: -18.500015258789062
    9. ')`' → logprob: -18.500015258789062
    10. ')#' → logprob: -18.625015258789062

Token 842: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022953327745199203
    2. 'data' → logprob: -3.8979532718658447
    3. ' data' → logprob: -7.397953510284424
    4. '
' → logprob: -7.397953510284424
    5. 'result' → logprob: -7.522953510284424
    6. '```' → logprob: -7.897953510284424
    7. '    
' → logprob: -8.772953033447266
    8. ' result' → logprob: -10.397953033447266
    9. '	data' → logprob: -11.272953033447266
    10. '_data' → logprob: -11.647953033447266

Token 843: ' fact' (ID: 2840)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.033434513956308365
    2. 'result' → logprob: -3.5334346294403076
    3. 'dp' → logprob: -6.0334343910217285
    4. 'answer' → logprob: -7.0334343910217285
    5. 'ans' → logprob: -8.533434867858887
    6. 'res' → logprob: -8.783434867858887
    7. ' data' → logprob: -10.908434867858887
    8. '   ' → logprob: -11.283434867858887
    9. 'root' → logprob: -11.283434867858887
    10. 'dfs' → logprob: -13.658434867858887

Token 844: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9385402993066236e-05
    2. 's' → logprob: -11.875019073486328
    3. '2' → logprob: -12.500019073486328
    4. '_
' → logprob: -13.125019073486328
    5. '‌' → logprob: -13.500019073486328
    6. '=' → logprob: -14.375019073486328
    7. '<|end|>' → logprob: -14.500019073486328
    8. '```' → logprob: -14.750019073486328
    9. '[' → logprob: -14.875019073486328
    10. '_=' → logprob: -15.125019073486328

Token 845: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005931758787482977
    2. '_' → logprob: -5.130931854248047
    3. ' ' → logprob: -13.380931854248047
    4. '₂' → logprob: -14.505931854248047
    5. '```' → logprob: -15.005931854248047
    6. '[' → logprob: -15.255931854248047
    7. '-' → logprob: -16.005931854248047
    8. '=' → logprob: -16.130931854248047
    9. '<|end|>' → logprob: -16.380931854248047
    10. '
' → logprob: -17.130931854248047

Token 846: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2316032499074936
    2. ' =' → logprob: -1.7316032648086548
    3. ',' → logprob: -4.856603145599365
    4. '.pop' → logprob: -4.981603145599365
    5. ')' → logprob: -5.356603145599365
    6. '[' → logprob: -5.731603145599365
    7. '<|end|>' → logprob: -5.731603145599365
    8. '=data' → logprob: -7.481603145599365
    9. '.' → logprob: -7.606603145599365
    10. '.append' → logprob: -7.981603145599365

Token 847: ' numpy' (ID: 19529)
  Prédit: 'numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numpy' → logprob: -0.04324033856391907
    2. 'np' → logprob: -3.4182403087615967
    3. ' numpy' → logprob: -4.668240547180176
    4. ' np' → logprob: -9.293240547180176
    5. 'fact' → logprob: -10.918240547180176
    6. 'zeros' → logprob: -11.168240547180176
    7. 'npm' → logprob: -11.793240547180176
    8. 'n' → logprob: -12.043240547180176
    9. '[n' → logprob: -12.668240547180176
    10. '.numpy' → logprob: -12.793240547180176

Token 848: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: 0.0
    2. 'array' → logprob: -16.875
    3. 'Array' → logprob: -20.25
    4. '.array' → logprob: -20.25
    5. '_ARRAY' → logprob: -20.875
    6. ' array' → logprob: -21.875
    7. '_arrays' → logprob: -22.375
    8. '_vector' → logprob: -22.875
    9. '_object' → logprob: -23.25
    10. '_Array' → logprob: -23.5

Token 849: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -2.570319702499546e-05
    2. 'int' → logprob: -10.750025749206543
    3. '_array' → logprob: -12.750025749206543
    4. '<int' → logprob: -14.875025749206543
    5. 'Int' → logprob: -15.125025749206543
    6. 'np' → logprob: -15.500025749206543
    7. 'array' → logprob: -15.500025749206543
    8. '[int' → logprob: -16.375024795532227
    9. '(np' → logprob: -16.875024795532227
    10. 'dtype' → logprob: -17.500024795532227

Token 850: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: 0.0
    2. 't' → logprob: -17.875
    3. 'int' → logprob: -18.25
    4. 'array' → logprob: -19.125
    5. '6' → logprob: -20.0
    6. '[' → logprob: -20.125
    7. '```' → logprob: -20.125
    8. 'p' → logprob: -21.375
    9. 'dtype' → logprob: -21.375
    10. '32' → logprob: -21.625

Token 851: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -13.250003814697266
    3. ' (' → logprob: -14.625003814697266
    4. '(factory' → logprob: -14.875003814697266
    5. '(F' → logprob: -15.250003814697266
    6. '(fid' → logprob: -15.625003814697266
    7. '((' → logprob: -16.000003814697266
    8. '(list' → logprob: -16.250003814697266
    9. '(np' → logprob: -16.375003814697266
    10. '(fi' → logprob: -16.750003814697266

Token 852: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -1.9361264946837764e-07
    2. '(act' → logprob: -15.875
    3. '_act' → logprob: -19.375
    4. '[' → logprob: -20.25
    5. ' act' → logprob: -20.25
    6. 'actor' → logprob: -20.625
    7. 'a' → logprob: -21.125
    8. '(' → logprob: -22.375
    9. '.act' → logprob: -22.875
    10. 'акт' → logprob: -22.875

Token 853: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.375
    3. '2' → logprob: -16.625
    4. '```' → logprob: -19.625
    5. '_factor' → logprob: -20.875
    6. ')' → logprob: -21.0
    7. '_value' → logprob: -21.5
    8. '[' → logprob: -21.625
    9. '\' → logprob: -21.875
    10. '=' → logprob: -22.125

Token 854: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019066639652010053
    2. '_' → logprob: -8.625190734863281
    3. '[' → logprob: -12.250190734863281
    4. ')' → logprob: -13.250190734863281
    5. 'fact' → logprob: -13.375190734863281
    6. '(' → logprob: -14.125190734863281
    7. '₂' → logprob: -14.500190734863281
    8. '```' → logprob: -14.625190734863281
    9. '
' → logprob: -15.250190734863281
    10. 'factor' → logprob: -15.375190734863281

Token 855: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.429896944202483e-05
    2. ')
' → logprob: -10.125043869018555
    3. '   ' → logprob: -13.125043869018555
    4. ' )' → logprob: -13.875043869018555
    5. '[' → logprob: -14.625043869018555
    6. ')

' → logprob: -16.000043869018555
    7. '<|end|>' → logprob: -16.375043869018555
    8. ').' → logprob: -16.500043869018555
    9. '[:-' → logprob: -16.750043869018555
    10. '[])' → logprob: -17.000043869018555

Token 856: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6968837976455688
    2. 'data' → logprob: -0.6968837976455688
    3. ' data' → logprob: -5.696883678436279
    4. 'result' → logprob: -8.071884155273438
    5. '```' → logprob: -10.196884155273438
    6. '	data' → logprob: -12.321884155273438
    7. 'dp' → logprob: -12.446884155273438
    8. ' result' → logprob: -12.446884155273438
    9. '_data' → logprob: -13.321884155273438
    10. 'answer' → logprob: -13.446884155273438

Token 857: ' dfs' (ID: 51252)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.004551407415419817
    2. 'result' → logprob: -5.504551410675049
    3. 'dp' → logprob: -8.00455093383789
    4. 'answer' → logprob: -9.75455093383789
    5. 'res' → logprob: -10.25455093383789
    6. 'root' → logprob: -10.37955093383789
    7. 'ans' → logprob: -11.25455093383789
    8. 'dfs' (adapté à ' dfs') → logprob: -14.25455093383789
    9. ' data' → logprob: -14.37955093383789
    10. '```' → logprob: -15.87955093383789

Token 858: '_fn' (ID: 34804)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.053698185831308365
    2. '_result' → logprob: -3.0536983013153076
    3. '_res' → logprob: -6.0536980628967285
    4. '_root' → logprob: -6.9286980628967285
    5. '_data' → logprob: -7.0536980628967285
    6. 'data' → logprob: -7.9286980628967285
    7. '_results' → logprob: -9.178698539733887
    8. 'result' → logprob: -9.428698539733887
    9. '_value' → logprob: -10.053698539733887
    10. '_val' → logprob: -10.053698539733887

Token 859: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5235408544540405
    2. '=' → logprob: -0.8985408544540405
    3. '=v' → logprob: -8.398540496826172
    4. '=lambda' → logprob: -9.398540496826172
    5. '=d' → logprob: -9.898540496826172
    6. '(' → logprob: -10.273540496826172
    7. '=data' → logprob: -12.023540496826172
    8. '=df' → logprob: -13.148540496826172
    9. '=n' → logprob: -13.273540496826172
    10. '<|end|>' → logprob: -13.398540496826172

Token 860: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0005614925175905228
    2. ' dfs' → logprob: -7.500561714172363
    3. 'lambda' → logprob: -11.875561714172363
    4. 'df' → logprob: -14.000561714172363
    5. 'd' → logprob: -14.625561714172363
    6. 'def' → logprob: -16.500560760498047
    7. 'DFS' → logprob: -17.125560760498047
    8. ' lambda' → logprob: -17.500560760498047
    9. ' ' → logprob: -17.500560760498047
    10. '   ' → logprob: -17.750560760498047

Token 861: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00468109967187047
    2. '
' → logprob: -6.12968111038208
    3. 'data' → logprob: -6.37968111038208
    4. ' data' → logprob: -8.629680633544922
    5. '(data' → logprob: -8.754680633544922
    6. '()' → logprob: -9.129680633544922
    7. '    
' → logprob: -9.129680633544922
    8. 'result' → logprob: -9.504680633544922
    9. ',' → logprob: -9.504680633544922
    10. '_data' → logprob: -11.004680633544922

Token 862: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13203489780426025
    2. 'data' → logprob: -2.1320347785949707
    3. ' data' → logprob: -5.382034778594971
    4. '```' → logprob: -7.882034778594971
    5. 'result' → logprob: -9.507035255432129
    6. '	data' → logprob: -11.382035255432129
    7. '
' → logprob: -11.757035255432129
    8. '    
' → logprob: -12.132035255432129
    9. '_data' → logprob: -12.132035255432129
    10. ' result' → logprob: -12.382035255432129

Token 863: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.0024934951215982437
    2. 'result' → logprob: -6.002493381500244
    3. 'res' → logprob: -11.502493858337402
    4. ' data' → logprob: -13.002493858337402
    5. 'answer' → logprob: -13.002493858337402
    6. '   ' → logprob: -14.002493858337402
    7. '```' → logprob: -14.252493858337402
    8. 'root' → logprob: -14.252493858337402
    9. 'ans' → logprob: -14.502493858337402
    10. 'results' → logprob: -15.252493858337402

Token 864: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07904830574989319
    2. '=' → logprob: -2.5790483951568604
    3. '=data' → logprob: -8.829048156738281
    4. 'data' → logprob: -11.954048156738281
    5. '<|end|>' → logprob: -13.579048156738281
    6. ',' → logprob: -13.954048156738281
    7. ' ' → logprob: -14.454048156738281
    8. '＝' → logprob: -14.579048156738281
    9. ' data' → logprob: -14.829048156738281
    10. '[' → logprob: -15.454048156738281

Token 865: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.014229914173483849
    2. ' dfs' → logprob: -4.264229774475098
    3. '(d' → logprob: -10.264229774475098
    4. '   ' → logprob: -10.514229774475098
    5. 'd' → logprob: -12.889229774475098
    6. 'df' → logprob: -13.764229774475098
    7. '(' → logprob: -15.139229774475098
    8. 'dp' → logprob: -15.639229774475098
    9. 'DFS' → logprob: -16.639230728149414
    10. '	d' → logprob: -16.639230728149414

Token 866: '_fn' (ID: 34804)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3856492842023727e-06
    2. ' (' → logprob: -14.000000953674316
    3. '(
' → logprob: -15.375000953674316
    4. '1' → logprob: -15.625000953674316
    5. '((' → logprob: -16.250001907348633
    6. '(v' → logprob: -17.125001907348633
    7. '0' → logprob: -18.000001907348633
    8. '
' → logprob: -19.125001907348633
    9. ' ' → logprob: -19.250001907348633
    10. '(data' → logprob: -19.875001907348633

Token 867: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. '(
' → logprob: -14.875000953674316
    3. '1' → logprob: -16.0
    4. ' (' → logprob: -16.625
    5. '((' → logprob: -18.25
    6. 'v' → logprob: -20.25
    7. '(v' → logprob: -21.25
    8. '('' → logprob: -21.375
    9. '0' → logprob: -21.5
    10. '(

' → logprob: -22.125

Token 868: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.125000953674316
    3. '(' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '
' → logprob: -17.750001907348633
    6. '0' → logprob: -18.375001907348633
    7. ',' → logprob: -19.125001907348633
    8. ')' → logprob: -19.500001907348633
    9. '[' → logprob: -20.250001907348633
    10. '```' → logprob: -20.250001907348633

Token 869: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. ',
' → logprob: -12.250008583068848
    3. ' ,' → logprob: -12.625008583068848
    4. ',None' → logprob: -14.250008583068848
    5. ',-' → logprob: -16.000009536743164
    6. '   ' → logprob: -16.375009536743164
    7. '1' → logprob: -17.375009536743164
    8. '```' → logprob: -17.500009536743164
    9. '0' → logprob: -18.250009536743164
    10. '
' → logprob: -18.375009536743164

Token 870: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05655480548739433
    2. '0' → logprob: -2.9315547943115234
    3. ' -' → logprob: -6.431554794311523
    4. ' ' → logprob: -9.931554794311523
    5. 'None' → logprob: -11.431554794311523
    6. '   ' → logprob: -13.681554794311523
    7. ' None' → logprob: -15.556554794311523
    8. '
' → logprob: -16.056554794311523
    9. '  ' → logprob: -16.806554794311523
    10. '−' → logprob: -17.056554794311523

Token 871: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.248469718324486e-05
    2. ' ,' → logprob: -10.750022888183594
    3. 'graph' → logprob: -15.000022888183594
    4. '   ' → logprob: -15.125022888183594
    5. '(graph' → logprob: -15.125022888183594
    6. ',
' → logprob: -16.625022888183594
    7. ')' → logprob: -16.875022888183594
    8. '```' → logprob: -17.625022888183594
    9. ',None' → logprob: -18.125022888183594
    10. ' graph' → logprob: -18.375022888183594

Token 872: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.002475777640938759
    2. ' graph' → logprob: -6.002475738525391
    3. '	graph' → logprob: -16.12747573852539
    4. '(graph' → logprob: -18.50247573852539
    5. 'graphql' → logprob: -20.62747573852539
    6. '   ' → logprob: -21.12747573852539
    7. 'Graph' → logprob: -22.25247573852539
    8. '_graph' → logprob: -22.25247573852539
    9. '.graph' → logprob: -23.00247573852539
    10. 'graphs' → logprob: -23.87747573852539

Token 873: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2842308680992573e-05
    2. ' ,' → logprob: -10.750022888183594
    3. ',f' → logprob: -13.750022888183594
    4. ',
' → logprob: -15.875022888183594
    5. '   ' → logprob: -16.875022888183594
    6. '_,' → logprob: -18.000022888183594
    7. '‌,' → logprob: -18.000022888183594
    8. ')' → logprob: -18.375022888183594
    9. '```' → logprob: -18.750022888183594
    10. 'fact' → logprob: -19.250022888183594

Token 874: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.03804171830415726
    2. ' fact' → logprob: -3.288041830062866
    3. 'factor' → logprob: -15.413042068481445
    4. '_fact' → logprob: -16.538042068481445
    5. '   ' → logprob: -17.038042068481445
    6. 'Fact' → logprob: -17.788042068481445
    7. '.fact' → logprob: -19.163042068481445
    8. '    ' → logprob: -19.163042068481445
    9. '
' → logprob: -19.663042068481445
    10. 'f' → logprob: -19.788042068481445

Token 875: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -15.125000953674316
    3. ',' → logprob: -16.5
    4. '_
' → logprob: -16.75
    5. '
' → logprob: -17.625
    6. ')' → logprob: -18.0
    7. '_,' → logprob: -18.0
    8. '-' → logprob: -18.0
    9. '__' → logprob: -18.25
    10. '\' → logprob: -18.625

Token 876: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.428706556558609
    2. '_' → logprob: -1.0537065267562866
    3. '₂' → logprob: -13.053706169128418
    4. '-' → logprob: -13.178706169128418
    5. '```' → logprob: -14.553706169128418
    6. ' ' → logprob: -14.928706169128418
    7. '
' → logprob: -15.553706169128418
    8. '=' → logprob: -15.803706169128418
    9. '\' → logprob: -16.178707122802734
    10. '+' → logprob: -16.678707122802734

Token 877: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010914575977949426
    2. ' ,' → logprob: -9.12510871887207
    3. ',
' → logprob: -16.25010871887207
    4. '   ' → logprob: -18.37510871887207
    5. 'mod' → logprob: -18.37510871887207
    6. ',module' → logprob: -18.50010871887207
    7. '```' → logprob: -18.50010871887207
    8. '_,' → logprob: -18.87510871887207
    9. ',m' → logprob: -19.00010871887207
    10. '‌,' → logprob: -19.62510871887207

Token 878: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0067154900170862675
    2. ' mod' → logprob: -5.006715297698975
    3. '	mod' → logprob: -16.131715774536133
    4. ' ' → logprob: -18.381715774536133
    5. '(mod' → logprob: -18.506715774536133
    6. 'moder' → logprob: -19.131715774536133
    7. '
' → logprob: -19.381715774536133
    8. '10' → logprob: -19.506715774536133
    9. '```' → logprob: -19.506715774536133
    10. ' мод' → logprob: -19.756715774536133

Token 879: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030709904967807233
    2. ',' → logprob: -8.125307083129883
    3. ')data' → logprob: -12.500307083129883
    4. ',)' → logprob: -12.875307083129883
    5. ' )' → logprob: -13.000307083129883
    6. ')
' → logprob: -13.375307083129883
    7. ')d' → logprob: -15.500307083129883
    8. ',data' → logprob: -15.500307083129883
    9. ')[' → logprob: -15.875307083129883
    10. ')

' → logprob: -16.625307083129883

Token 880: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.001503313542343676
    2. ' dfs' → logprob: -6.5015034675598145
    3. 'df' → logprob: -14.251502990722656
    4. 'd' → logprob: -14.876502990722656
    5. '
' → logprob: -18.126502990722656
    6. '   ' → logprob: -18.376502990722656
    7. 'dfa' → logprob: -18.876502990722656
    8. ')' → logprob: -18.876502990722656
    9. ' ' → logprob: -19.126502990722656
    10. 'DFS' → logprob: -19.376502990722656

Token 881: '_fn' (ID: 34804)
  Prédit: '_fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fn' → logprob: -6.265633419388905e-05
    2. ')' → logprob: -10.375062942504883
    3. 'fn' → logprob: -10.375062942504883
    4. 'Fn' → logprob: -16.875062942504883
    5. '```' → logprob: -16.875062942504883
    6. '_)' → logprob: -17.500062942504883
    7. ')
' → logprob: -17.875062942504883
    8. ',' → logprob: -17.875062942504883
    9. '
' → logprob: -18.125062942504883
    10. '	fn' → logprob: -18.500062942504883

Token 882: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -15.500006675720215
    4. '   ' → logprob: -18.5000057220459
    5. ')data' → logprob: -18.6250057220459
    6. ')return' → logprob: -18.7500057220459
    7. ')`' → logprob: -18.7500057220459
    8. ')

' → logprob: -19.0000057220459
    9. '))' → logprob: -19.0000057220459
    10. ')#' → logprob: -19.1250057220459

Token 883: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023330706171691418
    2. 'print' → logprob: -6.877333164215088
    3. 'answer' → logprob: -7.502333164215088
    4. '
' → logprob: -8.00233268737793
    5. 'result' → logprob: -8.25233268737793
    6. '```' → logprob: -9.75233268737793
    7. '    
' → logprob: -10.25233268737793
    8. ' print' → logprob: -11.00233268737793
    9. ' answer' → logprob: -11.25233268737793
    10. ' result' → logprob: -11.37733268737793

Token 884: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.40241140127182007
    2. 'print' → logprob: -1.1524114608764648
    3. 'result' → logprob: -4.902411460876465
    4. '   ' → logprob: -5.152411460876465
    5. 'ans' → logprob: -6.402411460876465
    6. ' answer' → logprob: -7.777411460876465
    7. ' print' → logprob: -10.027411460876465
    8. '
' → logprob: -10.402411460876465
    9. '```' → logprob: -10.527411460876465
    10. 'output' → logprob: -12.027411460876465

Token 885: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07978393882513046
    2. '=' → logprob: -2.5797839164733887
    3. ' ' → logprob: -7.954783916473389
    4. '_' → logprob: -8.079784393310547
    5. ')' → logprob: -9.204784393310547
    6. ',' → logprob: -9.454784393310547
    7. '<|end|>' → logprob: -11.829784393310547
    8. '[' → logprob: -11.954784393310547
    9. '_space' → logprob: -11.954784393310547
    10. '  ' → logprob: -12.454784393310547

Token 886: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.3868717551231384
    2. ' calculate' → logprob: -1.1368718147277832
    3. 'c' → logprob: -15.886871337890625
    4. '
' → logprob: -15.886871337890625
    5. 'calc' → logprob: -16.011871337890625
    6. 'alculate' → logprob: -16.386871337890625
    7. ' ' → logprob: -16.636871337890625
    8. '.calculate' → logprob: -16.636871337890625
    9. ' ' → logprob: -16.761871337890625
    10. 'compute' → logprob: -17.011871337890625

Token 887: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -7.896309739408025e-07
    2. 'answer' → logprob: -14.875000953674316
    3. 'Answer' → logprob: -15.625000953674316
    4. '(answer' → logprob: -16.0
    5. '_' → logprob: -16.75
    6. '_ans' → logprob: -17.0
    7. '(data' → logprob: -17.375
    8. '	answer' → logprob: -18.75
    9. '```' → logprob: -19.25
    10. '_value' → logprob: -19.5

Token 888: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.625001907348633
    3. '(answer' → logprob: -14.750001907348633
    4. 'data' → logprob: -16.875001907348633
    5. ' (' → logprob: -17.500001907348633
    6. '=data' → logprob: -17.875001907348633
    7. ',data' → logprob: -18.750001907348633
    8. '(d' → logprob: -19.125001907348633
    9. '(
' → logprob: -19.125001907348633
    10. '(output' → logprob: -19.625001907348633

Token 889: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5823686718940735
    2. '(f' → logprob: -0.8323686718940735
    3. ',f' → logprob: -5.207368850708008
    4. '(' → logprob: -7.207368850708008
    5. ' ,' → logprob: -9.707368850708008
    6. '(data' → logprob: -9.957368850708008
    7. ')' → logprob: -10.332368850708008
    8. ' (' → logprob: -10.832368850708008
    9. '   ' → logprob: -12.207368850708008
    10. ',(' → logprob: -12.457368850708008

Token 890: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.16022463142871857
    2. ' fact' → logprob: -1.9102246761322021
    3. '_fact' → logprob: -15.160224914550781
    4. 'Fact' → logprob: -16.91022491455078
    5. 'factor' → logprob: -17.03522491455078
    6. '.fact' → logprob: -17.28522491455078
    7. 'facts' → logprob: -17.41022491455078
    8. 'f' → logprob: -18.53522491455078
    9. ' ' → logprob: -18.78522491455078
    10. ' fakt' → logprob: -18.78522491455078

Token 891: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.465036105713807e-06
    2. '2' → logprob: -12.125007629394531
    3. '_value' → logprob: -13.750007629394531
    4. '```' → logprob: -15.125007629394531
    5. '_factor' → logprob: -16.25000762939453
    6. '-' → logprob: -16.37500762939453
    7. ')' → logprob: -16.87500762939453
    8. '_
' → logprob: -17.12500762939453
    9. 'fact' → logprob: -17.37500762939453
    10. '=' → logprob: -17.50000762939453

Token 892: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11285468190908432
    2. '_' → logprob: -2.2378547191619873
    3. '-' → logprob: -10.612854957580566
    4. '```' → logprob: -13.487854957580566
    5. '₂' → logprob: -13.925354957580566
    6. ' ' → logprob: -14.237854957580566
    7. 'value' → logprob: -14.300354957580566
    8. '[' → logprob: -14.362854957580566
    9. '=' → logprob: -14.487854957580566
    10. 'factor' → logprob: -14.737854957580566

Token 893: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ' ,' → logprob: -11.375015258789062
    3. ',N' → logprob: -12.625015258789062
    4. '   ' → logprob: -16.000015258789062
    5. ',
' → logprob: -16.750015258789062
    6. ',n' → logprob: -18.500015258789062
    7. '‌,' → logprob: -19.000015258789062
    8. ')' → logprob: -19.875015258789062
    9. '```' → logprob: -20.000015258789062
    10. ',

' → logprob: -20.375015258789062

Token 894: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0325924449716695e-05
    2. ' N' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.250009536743164
    4. '	N' → logprob: -19.125009536743164
    5. '
' → logprob: -22.125009536743164
    6. '(N' → logprob: -22.125009536743164
    7. '[N' → logprob: -22.250009536743164
    8. 'Ｎ' → logprob: -22.375009536743164
    9. '```' → logprob: -22.750009536743164
    10. '  ' → logprob: -23.000009536743164

Token 895: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026300468016415834
    2. ')' → logprob: -8.500263214111328
    3. '   ' → logprob: -10.250263214111328
    4. ',
' → logprob: -11.875263214111328
    5. ' ,' → logprob: -11.875263214111328
    6. '-' → logprob: -12.125263214111328
    7. ',)' → logprob: -12.625263214111328
    8. ' -' → logprob: -14.750263214111328
    9. ')
' → logprob: -15.250263214111328
    10. '),' → logprob: -15.875263214111328

Token 896: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001170225441455841
    2. ' mod' → logprob: -6.7511701583862305
    3. 'moder' → logprob: -19.251171112060547
    4. '	mod' → logprob: -19.376171112060547
    5. '10' → logprob: -20.126171112060547
    6. '```' → logprob: -21.626171112060547
    7. '(mod' → logprob: -21.751171112060547
    8. 'm' → logprob: -21.876171112060547
    9. ' ' → logprob: -22.251171112060547
    10. '   ' → logprob: -22.501171112060547

Token 897: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6821537017822266
    2. '   ' → logprob: -1.1821537017822266
    3. ')' → logprob: -1.6821537017822266
    4. 'print' → logprob: -6.432153701782227
    5. '
' → logprob: -9.182153701782227
    6. ' print' → logprob: -9.932153701782227
    7. '```' → logprob: -10.432153701782227
    8. ',' → logprob: -11.182153701782227
    9. ' )
' → logprob: -11.182153701782227
    10. ')
' → logprob: -11.307153701782227

Token 898: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05004424601793289
    2. 'print' → logprob: -3.050044298171997
    3. ' print' → logprob: -6.675044059753418
    4. '```' → logprob: -9.050044059753418
    5. '<|end|>' → logprob: -10.425044059753418
    6. '    
' → logprob: -11.050044059753418
    7. '	print' → logprob: -11.675044059753418
    8. '
' → logprob: -11.675044059753418
    9. 'return' → logprob: -12.675044059753418
    10. ' return' → logprob: -12.800044059753418

Token 899: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00022880789765622467
    2. '   ' → logprob: -8.500228881835938
    3. ' print' → logprob: -10.625228881835938
    4. '```' → logprob: -14.250228881835938
    5. '	print' → logprob: -15.000228881835938
    6. '
' → logprob: -16.750228881835938
    7. '#print' → logprob: -17.750228881835938
    8. '_print' → logprob: -18.125228881835938
    9. 'pr' → logprob: -18.125228881835938
    10. 'return' → logprob: -18.500228881835938

Token 900: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.0004705914470832795
    2. '(' → logprob: -7.7504706382751465
    3. '()' → logprob: -10.500470161437988
    4. '(ans' → logprob: -12.125470161437988
    5. 'answer' → logprob: -12.250470161437988
    6. ' (' → logprob: -13.375470161437988
    7. '(
' → logprob: -15.375470161437988
    8. '(question' → logprob: -16.250471115112305
    9. '	answer' → logprob: -16.750471115112305
    10. '(argument' → logprob: -17.000471115112305

Token 901: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.50000286102295
    3. ' )' → logprob: -14.37500286102295
    4. '()' → logprob: -14.87500286102295
    5. '())' → logprob: -16.250001907348633
    6. ')`' → logprob: -16.625001907348633
    7. ')#' → logprob: -18.625001907348633
    8. '`)' → logprob: -18.625001907348633
    9. '))' → logprob: -19.000001907348633
    10. '(' → logprob: -19.500001907348633

Token 902: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00046296243090182543
    2. '```' → logprob: -8.375462532043457
    3. '<|end|>' → logprob: -9.500462532043457
    4. ' if' → logprob: -9.500462532043457
    5. 'main' → logprob: -10.000462532043457
    6. '#' → logprob: -10.750462532043457
    7. '
' → logprob: -11.250462532043457
    8. '%' → logprob: -14.250462532043457
    9. ';if' → logprob: -15.000462532043457
    10. '<|end|>' → logprob: -15.125462532043457

Token 903: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 901
Tokens correctement prédits (1ère position, stricte): 439
Tokens correctement prédits (1ère position, avec adaptation): 466
Tokens correctement prédits (top 10): 801
Précision stricte (1ère position): 48.72%
Précision adaptée (1ère position): 51.72%
Précision (top 10): 88.90%
================================================================================
