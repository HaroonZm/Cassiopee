================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

N = int(sys.stdin.readline())
print(2 * N * math.pi)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2752407193183899
    2. '\n' → logprob: -2.775240659713745
    3. 'import' → logprob: -3.025240659713745
    4. '<|end|>' → logprob: -3.275240659713745
    5. '\' → logprob: -3.400240659713745
    6. '
' → logprob: -3.650240659713745
    7. '```' → logprob: -4.400240898132324
    8. '

' → logprob: -5.275240898132324
    9. '<|end|>' → logprob: -5.275240898132324
    10. ',' → logprob: -5.900240898132324

Token 6: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9209080338478088
    2. '\n' → logprob: -1.545907974243164
    3. 'import' → logprob: -1.795907974243164
    4. '\' → logprob: -2.420907974243164
    5. '```' → logprob: -2.920907974243164
    6. '
' → logprob: -3.170907974243164
    7. ',' → logprob: -4.795907974243164
    8. 'def' → logprob: -4.920907974243164
    9. '

' → logprob: -5.170907974243164
    10. '<|end|>' → logprob: -5.670907974243164

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.55135178565979
    2. ' =' → logprob: -1.30135178565979
    3. ' ' → logprob: -2.67635178565979
    4. '_' → logprob: -2.80135178565979
    5. '.' → logprob: -4.801351547241211
    6. ')' → logprob: -4.926351547241211
    7. ',' → logprob: -5.926351547241211
    8. '  ' → logprob: -6.426351547241211
    9. '[' → logprob: -7.801351547241211
    10. 'u' → logprob: -8.551351547241211

Token 8: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.22170774638652802
    2. 'int' → logprob: -2.096707820892334
    3. ' ' → logprob: -3.221707820892334
    4. '10' → logprob: -3.346707820892334
    5. '5' → logprob: -7.971707820892334
    6. '20' → logprob: -8.346707344055176
    7. '100' → logprob: -8.596707344055176
    8. '50' → logprob: -10.096707344055176
    9. '[int' → logprob: -11.221707344055176
    10. '0' → logprob: -11.346707344055176

Token 9: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003099599271081388
    2. '('' → logprob: -8.750309944152832
    3. '()' → logprob: -9.875309944152832
    4. '(sys' → logprob: -10.250309944152832
    5. ' (' → logprob: -10.375309944152832
    6. '(N' → logprob: -11.625309944152832
    7. '(
' → logprob: -12.000309944152832
    8. '(`' → logprob: -12.750309944152832
    9. ''' → logprob: -13.000309944152832
    10. '```' → logprob: -13.000309944152832

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.8665717840194702
    2. '.argv' → logprob: -0.9915717840194702
    3. '.' → logprob: -1.7415717840194702
    4. '.readline' → logprob: -3.4915719032287598
    5. '.)' → logprob: -6.86657190322876
    6. '.input' → logprob: -7.11657190322876
    7. '.read' → logprob: -7.61657190322876
    8. ' .' → logprob: -8.991571426391602
    9. '.')' → logprob: -9.241571426391602
    10. '.import' → logprob: -9.616571426391602

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4842683970928192
    2. '.' → logprob: -0.9842684268951416
    3. '.read' → logprob: -4.6092681884765625
    4. '.)' → logprob: -8.984268188476562
    5. ')' → logprob: -10.734268188476562
    6. '.Read' → logprob: -11.109268188476562
    7. ' .' → logprob: -12.484268188476562
    8. '.")' → logprob: -12.609268188476562
    9. '.READ' → logprob: -12.859268188476562
    10. '.')' → logprob: -13.109268188476562

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07065891474485397
    2. '()' → logprob: -2.9456589221954346
    3. ')' → logprob: -4.1956586837768555
    4. '().' → logprob: -8.195658683776855
    5. '(' → logprob: -8.445658683776855
    6. ' ())' → logprob: -10.320658683776855
    7. '()))' → logprob: -10.445658683776855
    8. '()[' → logprob: -12.070658683776855
    9. '())
' → logprob: -12.320658683776855
    10. '`)' → logprob: -12.445658683776855

Token 13: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43456774950027466
    2. ')' → logprob: -2.05956768989563
    3. 'data' → logprob: -2.68456768989563
    4. '\n' → logprob: -3.18456768989563
    5. 's' → logprob: -3.93456768989563
    6. 'result' → logprob: -4.059567928314209
    7. 'a' → logprob: -4.434567928314209
    8. 'if' → logprob: -4.684567928314209
    9. 'x' → logprob: -4.809567928314209
    10. '.' → logprob: -5.059567928314209

Token 14: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008521550917066634
    2. '('' → logprob: -7.250852108001709
    3. '("("' → logprob: -9.000852584838867
    4. '()' → logprob: -11.875852584838867
    5. '(N' → logprob: -12.375852584838867
    6. '(math' → logprob: -13.125852584838867
    7. '(
' → logprob: -14.125852584838867
    8. '("")' → logprob: -14.375852584838867
    9. '("""' → logprob: -14.500852584838867
    10. '(`' → logprob: -14.500852584838867

Token 15: '2' (ID: 17)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.3466847240924835
    2. 'N' → logprob: -1.3466846942901611
    3. '(math' → logprob: -3.721684694290161
    4. 'int' → logprob: -6.22168493270874
    5. 'sum' → logprob: -6.72168493270874
    6. ')' → logprob: -6.97168493270874
    7. 'pow' → logprob: -6.97168493270874
    8. '(N' → logprob: -7.34668493270874
    9. 'round' → logprob: -7.59668493270874
    10. '"' → logprob: -7.72168493270874

Token 16: ' *' (ID: 425)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.13686217367649078
    2. ' *' → logprob: -2.386862277984619
    3. '**' → logprob: -3.636862277984619
    4. '*' → logprob: -5.136862277984619
    5. ' **)' → logprob: -5.761862277984619
    6. ')' → logprob: -8.136861801147461
    7. '**)' → logprob: -8.761861801147461
    8. ' )' → logprob: -9.636861801147461
    9. ' ' → logprob: -10.011861801147461
    10. '*N' → logprob: -10.636861801147461

Token 17: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.32194197177886963
    2. ' N' → logprob: -1.3219419717788696
    3. ' math' → logprob: -5.32194185256958
    4. 'math' → logprob: -6.69694185256958
    5. '*' → logprob: -6.82194185256958
    6. ' ' → logprob: -7.07194185256958
    7. '**' → logprob: -8.821942329406738
    8. 'int' → logprob: -8.821942329406738
    9. '(' → logprob: -9.571942329406738
    10. ')' → logprob: -10.196942329406738

Token 18: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011641718447208405
    2. ' )' → logprob: -9.500116348266602
    3. '*' → logprob: -11.000116348266602
    4. '))' → logprob: -11.125116348266602
    5. '`)' → logprob: -12.625116348266602
    6. '*)' → logprob: -13.250116348266602
    7. '**' → logprob: -13.625116348266602
    8. ')`' → logprob: -14.125116348266602
    9. ')
' → logprob: -14.250116348266602
    10. ')**' → logprob: -14.750116348266602

Token 19: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.20632055401802063
    2. 'math' → logprob: -1.7063205242156982
    3. ' ' → logprob: -5.956320762634277
    4. '(math' → logprob: -6.456320762634277
    5. '3' → logprob: -8.706320762634277
    6. '2' → logprob: -8.956320762634277
    7. '(' → logprob: -9.706320762634277
    8. '1' → logprob: -9.831320762634277
    9. ' N' → logprob: -9.956320762634277
    10. '*' → logprob: -9.956320762634277

Token 20: '.pi' (ID: 55497)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.8456218242645264
    2. '.pi' → logprob: -0.8456218242645264
    3. '.' → logprob: -2.0956218242645264
    4. '.factor' → logprob: -4.5956220626831055
    5. ' .' → logprob: -5.4706220626831055
    6. '.pow' → logprob: -6.3456220626831055
    7. '.sin' → logprob: -6.9706220626831055
    8. '.log' → logprob: -7.7206220626831055
    9. '.ceil' → logprob: -8.095622062683105
    10. '.s' → logprob: -8.470622062683105

Token 21: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5690089639974758e-05
    2. '))' → logprob: -11.500015258789062
    3. ' )' → logprob: -12.375015258789062
    4. '`)' → logprob: -15.000015258789062
    5. '*' → logprob: -15.125015258789062
    6. ')**' → logprob: -15.625015258789062
    7. '')' → logprob: -15.750015258789062
    8. '**' → logprob: -16.000015258789062
    9. ')`' → logprob: -16.625015258789062
    10. ')))' → logprob: -16.625015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 19
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 15
Précision stricte (1ère position): 31.58%
Précision adaptée (1ère position): 31.58%
Précision (top 10): 78.95%
================================================================================
