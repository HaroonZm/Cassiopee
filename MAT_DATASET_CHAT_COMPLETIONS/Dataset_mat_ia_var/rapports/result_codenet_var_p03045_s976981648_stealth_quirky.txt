================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys as _s
_ = lambda : _s.stdin.readline()[:-1]

N, M = list(map(int, _().split()))

E = [[] for _i in '_'*N]

for _ii in range(M):
    *p, _ = map(int, _().split())
    u, v = [i-1 for i in p[:2]]
    E[u] += v,
    E[v] += u,

from collections import deque as _dq

def bfs(z, qcol, C):
    stacky = _dq()
    stacky.append(z)
    C[z] = qcol
    while stacky:
        x = stacky.pop()
        for t in E[x]:
            if C[t] < 0:
                C[t] = qcol
                stacky.appendleft(t)

CL = [-42] * N
c = 0

for x in range(N):
    if CL[x] == -42:
        bfs(x, c, CL)
        c += 1

print(+c)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' _' (ID: 1175)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5253707766532898
    2. ' sys' → logprob: -1.1503708362579346
    3. ' ' → logprob: -2.7753708362579346
    4. '   ' → logprob: -4.6503705978393555
    5. 'sy' → logprob: -4.6503705978393555
    6. 's' → logprob: -5.7753705978393555
    7. ' sy' → logprob: -6.7753705978393555
    8. '```' → logprob: -6.7753705978393555
    9. '`' → logprob: -7.1503705978393555
    10. '  ' → logprob: -7.1503705978393555

Token 4: 's' (ID: 82)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.361564964056015
    2. 's' → logprob: -1.2365649938583374
    3. '_' → logprob: -5.111565113067627
    4. '_s' → logprob: -5.861565113067627
    5. 'sy' → logprob: -6.361565113067627
    6. 'i' → logprob: -7.486565113067627
    7. 'is' → logprob: -7.861565113067627
    8. 'm' → logprob: -8.486564636230469
    9. 'sx' → logprob: -8.736564636230469
    10. 'ys' → logprob: -8.736564636230469

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.728967547416687
    2. 'ys' → logprob: -1.103967547416687
    3. '_' → logprob: -1.853967547416687
    4. 'y' → logprob: -4.353967666625977
    5. 't' → logprob: -4.853967666625977
    6. '._' → logprob: -6.853967666625977
    7. 'u' → logprob: -6.978967666625977
    8. 'v' → logprob: -6.978967666625977
    9. 'e' → logprob: -7.103967666625977
    10. '' → logprob: -7.228967666625977

Token 6: '_' (ID: 62)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004393679089844227
    2. '_' → logprob: -5.754393577575684
    3. '._' → logprob: -7.379393577575684
    4. '' → logprob: -8.504393577575684
    5. ',' → logprob: -9.629393577575684
    6. '\' → logprob: -10.254393577575684
    7. '
' → logprob: -10.629393577575684
    8. '.import' → logprob: -10.629393577575684
    9. '\n' → logprob: -10.754393577575684
    10. '.
' → logprob: -10.879393577575684

Token 7: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0030437856912612915
    2. 'ys' → logprob: -5.8780436515808105
    3. 'y' → logprob: -8.378044128417969
    4. 'sys' → logprob: -11.753044128417969
    5. '_s' → logprob: -14.503044128417969
    6. 'import' → logprob: -15.253044128417969
    7. '_' → logprob: -16.37804412841797
    8. '```' → logprob: -16.75304412841797
    9. 'm' → logprob: -17.50304412841797
    10. ' s' → logprob: -17.62804412841797

Token 8: ' lambda' (ID: 27871)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00039289999403990805
    2. ' _' → logprob: -9.00039291381836
    3. '_sys' → logprob: -9.37539291381836
    4. '_' → logprob: -9.87539291381836
    5. '__' → logprob: -10.12539291381836
    6. 's' → logprob: -10.25039291381836
    7. ' ' → logprob: -11.62539291381836
    8. 'sys' → logprob: -11.62539291381836
    9. '-s' → logprob: -12.00039291381836
    10. '___' → logprob: -12.12539291381836

Token 9: ' :' (ID: 712)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10196907073259354
    2. '_' → logprob: -2.851969003677368
    3. ' x' → logprob: -3.851969003677368
    4. ' _' → logprob: -4.601969242095947
    5. '  ' → logprob: -5.226969242095947
    6. 'x' → logprob: -6.726969242095947
    7. ' a' → logprob: -7.601969242095947
    8. ' s' → logprob: -7.726969242095947
    9. ' :' → logprob: -8.851968765258789
    10. '   ' → logprob: -10.101968765258789

Token 10: ' _' (ID: 1175)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.016056776046753
    2. '_s' → logprob: -1.141056776046753
    3. '_' → logprob: -1.891056776046753
    4. 'None' → logprob: -2.266056776046753
    5. ' ' → logprob: -3.516056776046753
    6. ' _' → logprob: -3.891056776046753
    7. 'print' → logprob: -6.266057014465332
    8. ' True' → logprob: -6.391057014465332
    9. '(' → logprob: -6.516057014465332
    10. '_n' → logprob: -7.016057014465332

Token 11: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19126829504966736
    2. '.' → logprob: -2.0662682056427
    3. '_' → logprob: -3.1912682056427
    4. ' (' → logprob: -5.941268444061279
    5. ' ' → logprob: -6.566268444061279
    6. ')' → logprob: -7.816268444061279
    7. ',' → logprob: -7.816268444061279
    8. ''' → logprob: -8.316267967224121
    9. '(
' → logprob: -8.316267967224121
    10. '#' → logprob: -8.441267967224121

Token 12: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001222508290084079
    2. '._' → logprob: -10.5001220703125
    3. ' .' → logprob: -10.8751220703125
    4. '(' → logprob: -11.5001220703125
    5. '.__' → logprob: -11.5001220703125
    6. '.)' → logprob: -11.6251220703125
    7. '_' → logprob: -12.2501220703125
    8. '[' → logprob: -12.5001220703125
    9. '.​' → logprob: -12.6251220703125
    10. '.s' → logprob: -12.8751220703125

Token 13: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3268682658672333
    2. '.readline' → logprob: -1.3268682956695557
    3. '.read' → logprob: -4.451868057250977
    4. '().' → logprob: -6.951868057250977
    5. '()' → logprob: -7.576868057250977
    6. '```' → logprob: -9.451868057250977
    7. 'read' → logprob: -9.576868057250977
    8. '.Read' → logprob: -9.951868057250977
    9. '.write' → logprob: -10.576868057250977
    10. ')' → logprob: -10.826868057250977

Token 14: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021290332078933716
    2. '()' → logprob: -3.8962903022766113
    3. '(
' → logprob: -7.896290302276611
    4. '.' → logprob: -9.02129077911377
    5. ' (' → logprob: -9.39629077911377
    6. ' ' → logprob: -10.14629077911377
    7. '(

' → logprob: -10.27129077911377
    8. '().' → logprob: -10.64629077911377
    9. ')' → logprob: -10.89629077911377
    10. '\(' → logprob: -11.64629077911377

Token 15: '[:-' (ID: 63556)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14558634161949158
    2. '()' → logprob: -2.0205862522125244
    3. '(
' → logprob: -6.3955864906311035
    4. ')' → logprob: -7.7705864906311035
    5. '()
' → logprob: -8.520586013793945
    6. '(

' → logprob: -9.395586013793945
    7. ' ' → logprob: -9.520586013793945
    8. '
' → logprob: -9.770586013793945
    9. '.' → logprob: -9.895586013793945
    10. '().' → logprob: -9.895586013793945

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. '\n' → logprob: -13.250003814697266
    3. '```' → logprob: -14.250003814697266
    4. ' ' → logprob: -14.500003814697266
    5. '2' → logprob: -15.500003814697266
    6. '\' → logprob: -16.000003814697266
    7. '
' → logprob: -16.250003814697266
    8. 'newline' → logprob: -16.625003814697266
    9. '"\' → logprob: -16.875003814697266
    10. '``' → logprob: -17.125003814697266

Token 17: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.815280696377158e-05
    2. ')>' → logprob: -10.750078201293945
    3. '>' → logprob: -11.500078201293945
    4. ']' → logprob: -11.750078201293945
    5. ')
' → logprob: -11.750078201293945
    6. '<|end|>' → logprob: -12.000078201293945
    7. '）' → logprob: -12.500078201293945
    8. ' )' → logprob: -12.625078201293945
    9. '))' → logprob: -12.875078201293945
    10. '(' → logprob: -13.000078201293945

Token 18: 'N' (ID: 45)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.624740481376648
    2. 'd' → logprob: -1.874740481376648
    3. 'a' → logprob: -2.6247406005859375
    4. 'n' → logprob: -2.6247406005859375
    5. '=' → logprob: -3.8747406005859375
    6. '_' → logprob: -3.8747406005859375
    7. 'i' → logprob: -3.9997406005859375
    8. '(' → logprob: -3.9997406005859375
    9. 'r' → logprob: -4.6247406005859375
    10. ')' → logprob: -4.8747406005859375

Token 19: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38817453384399414
    2. ' ' → logprob: -1.3881745338439941
    3. '=' → logprob: -2.763174533843994
    4. '.' → logprob: -5.763174533843994
    5. ')' → logprob: -6.013174533843994
    6. '<|end|>' → logprob: -6.513174533843994
    7. ',' → logprob: -7.263174533843994
    8. '  ' → logprob: -7.888174533843994
    9. ' )' → logprob: -8.263174057006836
    10. ' ,' → logprob: -8.763174057006836

Token 20: ' M' (ID: 391)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21710695326328278
    2. ' =' → logprob: -2.592107057571411
    3. '=' → logprob: -2.717107057571411
    4. '_=' → logprob: -3.592107057571411
    5. 'M' → logprob: -4.467106819152832
    6. ' ' → logprob: -4.967106819152832
    7. ' M' → logprob: -5.842106819152832
    8. 'K' → logprob: -6.217106819152832
    9. ' _' → logprob: -6.842106819152832
    10. ' K' → logprob: -8.217106819152832

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22571077942848206
    2. '=' → logprob: -1.6007107496261597
    3. ',' → logprob: -8.60071086883545
    4. ')' → logprob: -10.10071086883545
    5. '<|end|>' → logprob: -10.10071086883545
    6. ' ' → logprob: -10.85071086883545
    7. ' =
' → logprob: -12.72571086883545
    8. ' ,' → logprob: -12.97571086883545
    9. ' =)' → logprob: -13.72571086883545
    10. '.' → logprob: -13.97571086883545

Token 22: ' list' (ID: 1562)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5782386660575867
    2. 'map' → logprob: -0.8282386660575867
    3. '_' → logprob: -6.203238487243652
    4. ' _' → logprob: -8.703238487243652
    5. '_map' → logprob: -10.203238487243652
    6. ' ' → logprob: -10.328238487243652
    7. '	map' → logprob: -11.953238487243652
    8. '[' → logprob: -12.078238487243652
    9. '(map' → logprob: -12.203238487243652
    10. '_.' → logprob: -12.578238487243652

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04294278100132942
    2. '(map' → logprob: -3.667942762374878
    3. '(_' → logprob: -4.292943000793457
    4. '(int' → logprob: -6.667943000793457
    5. '(_)' → logprob: -7.917943000793457
    6. '(lambda' → logprob: -8.167943000793457
    7. '(range' → logprob: -8.792943000793457
    8. '(_.' → logprob: -8.792943000793457
    9. '(input' → logprob: -8.917943000793457
    10. '(eval' → logprob: -9.042943000793457

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1019626036286354
    2. '(' → logprob: -2.3519625663757324
    3. '(str' → logprob: -7.226962566375732
    4. 'int' → logprob: -7.726962566375732
    5. '(lambda' → logprob: -7.976962566375732
    6. ')' → logprob: -9.22696304321289
    7. '<int' → logprob: -10.22696304321289
    8. 'str' → logprob: -10.35196304321289
    9. '(
' → logprob: -10.47696304321289
    10. '(eval' → logprob: -11.47696304321289

Token 25: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9389984607696533
    2. '(_.' → logprob: -1.0639984607696533
    3. '(_' → logprob: -2.0639984607696533
    4. '(' → logprob: -2.9389984607696533
    5. ')' → logprob: -3.5639984607696533
    6. '(_('' → logprob: -3.8139984607696533
    7. '(_("' → logprob: -4.438998222351074
    8. '_.' → logprob: -4.938998222351074
    9. '_(' → logprob: -6.313998222351074
    10. '_)' → logprob: -6.313998222351074

Token 26: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.782465398311615
    2. '_.' → logprob: -1.1574654579162598
    3. ' _.' → logprob: -1.5324654579162598
    4. ' _' → logprob: -5.03246545791626
    5. '(_.' → logprob: -6.28246545791626
    6. ' (_.' → logprob: -6.90746545791626
    7. ' _('' → logprob: -7.03246545791626
    8. ' _(' → logprob: -7.53246545791626
    9. ' _("' → logprob: -7.65746545791626
    10. '_(' → logprob: -8.657464981079102

Token 27: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.895260214805603
    2. '()' → logprob: -1.145260214805603
    3. '().' → logprob: -1.395260214805603
    4. '())))' → logprob: -3.8952603340148926
    5. '())' → logprob: -6.145260334014893
    6. '()));' → logprob: -6.645260334014893
    7. '))' → logprob: -7.270260334014893
    8. '(' → logprob: -7.895260334014893
    9. ')))' → logprob: -8.145259857177734
    10. '();' → logprob: -9.395259857177734

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.158350151963532e-05
    2. 'strip' → logprob: -9.750061988830566
    3. ' split' → logprob: -13.125061988830566
    4. 'rstrip' → logprob: -14.500061988830566
    5. 's' → logprob: -15.125061988830566
    6. '(split' → logprob: -15.875061988830566
    7. ')' → logprob: -15.875061988830566
    8. 'spl' → logprob: -15.875061988830566
    9. 'sp' → logprob: -17.00006103515625
    10. '.split' → logprob: -17.75006103515625

Token 29: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25535908341407776
    2. '()))' → logprob: -1.5053590536117554
    3. '()' → logprob: -6.130359172821045
    4. ')' → logprob: -7.130359172821045
    5. '())' → logprob: -7.880359172821045
    6. ')))' → logprob: -10.380358695983887
    7. '(' → logprob: -10.505358695983887
    8. '()));' → logprob: -12.755358695983887
    9. '())))' → logprob: -13.380358695983887
    10. '()))
' → logprob: -13.505358695983887

Token 30: 'E' (ID: 36)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3933556079864502
    2. 'A' → logprob: -2.39335560798645
    3. 'd' → logprob: -3.01835560798645
    4. 'r' → logprob: -3.26835560798645
    5. 'for' → logprob: -3.89335560798645
    6. 'graph' → logprob: -4.018355369567871
    7. 'result' → logprob: -4.268355369567871
    8. 'arr' → logprob: -4.268355369567871
    9. 'matrix' → logprob: -4.268355369567871
    10. 'data' → logprob: -4.393355369567871

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3641218841075897
    2. '=' → logprob: -1.739121913909912
    3. 'd' → logprob: -3.239121913909912
    4. '_' → logprob: -3.489121913909912
    5. '=[]' → logprob: -4.114121913909912
    6. '.' → logprob: -4.239121913909912
    7. ' ' → logprob: -4.864121913909912
    8. 'm' → logprob: -4.864121913909912
    9. 's' → logprob: -6.239121913909912
    10. 'q' → logprob: -6.239121913909912

Token 32: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3428497016429901
    2. ' []' → logprob: -1.7178497314453125
    3. '[' → logprob: -2.8428497314453125
    4. ' [' → logprob: -3.7178497314453125
    5. ' [[]' → logprob: -3.7178497314453125
    6. '{}' → logprob: -6.7178497314453125
    7. '[int' → logprob: -6.8428497314453125
    8. ' {}' → logprob: -8.092849731445312
    9. '[list' → logprob: -8.217849731445312
    10. '[][]' → logprob: -8.217849731445312

Token 33: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07105926424264908
    2. 'for' → logprob: -2.696059226989746
    3. ']' → logprob: -7.571059226989746
    4. ')' → logprob: -7.946059226989746
    5. ',' → logprob: -8.446059226989746
    6. ' ' → logprob: -10.821059226989746
    7. '	for' → logprob: -12.071059226989746
    8. ' ]' → logprob: -13.446059226989746
    9. '
' → logprob: -13.571059226989746
    10. '()' → logprob: -13.571059226989746

Token 34: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5022201538085938
    2. 'range' → logprob: -1.2522201538085938
    3. ' range' → logprob: -2.3772201538085938
    4. '(range' → logprob: -4.252220153808594
    5. ' in' → logprob: -7.502220153808594
    6. ' ' → logprob: -7.877220153808594
    7. ' _' → logprob: -7.877220153808594
    8. '(' → logprob: -8.252220153808594
    9. 'in' → logprob: -9.002220153808594
    10. '_range' → logprob: -9.502220153808594

Token 35: 'i' (ID: 72)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1628451943397522
    2. ' in' → logprob: -1.9128451347351074
    3. '_' → logprob: -6.412845134735107
    4. '(' → logprob: -7.787845134735107
    5. 'i' → logprob: -8.162845611572266
    6. 'range' → logprob: -9.037845611572266
    7. ' ' → logprob: -9.537845611572266
    8. '(in' → logprob: -11.287845611572266
    9. '_in' → logprob: -11.412845611572266
    10. '(range' → logprob: -11.412845611572266

Token 36: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31349408626556396
    2. ' in' → logprob: -1.313494086265564
    3. '_' → logprob: -9.438493728637695
    4. 'n' → logprob: -9.563493728637695
    5. '_in' → logprob: -10.063493728637695
    6. ' ' → logprob: -10.563493728637695
    7. 'In' → logprob: -12.438493728637695
    8. 'range' → logprob: -12.813493728637695
    9. '	in' → logprob: -13.313493728637695
    10. '  ' → logprob: -13.813493728637695

Token 37: ' '_'' (ID: 86115)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029761716723442078
    2. ' range' → logprob: -3.529761791229248
    3. ' ' → logprob: -12.77976131439209
    4. '(range' → logprob: -12.90476131439209
    5. 'ran' → logprob: -13.65476131439209
    6. '	range' → logprob: -13.65476131439209
    7. 'rang' → logprob: -14.02976131439209
    8. 'r' → logprob: -14.77976131439209
    9. ')' → logprob: -14.77976131439209
    10. '```' → logprob: -15.02976131439209

Token 38: '*' (ID: 9)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006173844449222088
    2. '(range' → logprob: -5.506173610687256
    3. ' range' → logprob: -6.381173610687256
    4. 'in' → logprob: -8.256174087524414
    5. '(N' → logprob: -10.006174087524414
    6. '(' → logprob: -10.131174087524414
    7. ' in' → logprob: -11.381174087524414
    8. '()' → logprob: -11.506174087524414
    9. '(E' → logprob: -12.256174087524414
    10. ']' → logprob: -12.381174087524414

Token 39: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019776455592364073
    2. ' N' → logprob: -6.876977443695068
    3. 'M' → logprob: -7.626977443695068
    4. '(N' → logprob: -7.876977443695068
    5. ' ' → logprob: -10.251977920532227
    6. ' (' → logprob: -11.251977920532227
    7. '(' → logprob: -11.626977920532227
    8. 'str' → logprob: -12.626977920532227
    9. '(M' → logprob: -12.626977920532227
    10. 'range' → logprob: -13.126977920532227

Token 40: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44249480962753296
    2. ')]' → logprob: -1.0674948692321777
    3. '()]' → logprob: -4.317494869232178
    4. ' ]' → logprob: -8.94249439239502
    5. ')' → logprob: -9.06749439239502
    6. '(' → logprob: -10.56749439239502
    7. '>]' → logprob: -10.69249439239502
    8. '+]' → logprob: -11.31749439239502
    9. '')]' → logprob: -11.69249439239502
    10. '(N' → logprob: -11.94249439239502

Token 41: 'for' (ID: 1938)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22453418374061584
    2. '()]' → logprob: -1.8495341539382935
    3. '(' → logprob: -3.599534273147583
    4. ')]' → logprob: -5.724534034729004
    5. ')' → logprob: -5.849534034729004
    6. '(N' → logprob: -5.849534034729004
    7. '<|end|>' → logprob: -5.974534034729004
    8. '(range' → logprob: -6.349534034729004
    9. 'range' → logprob: -6.974534034729004
    10. '()' → logprob: -7.849534034729004

Token 42: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.031985677778720856
    2. ' i' → logprob: -3.6569857597351074
    3. '_' → logprob: -5.406985759735107
    4. ' ' → logprob: -6.781985759735107
    5. 'i' → logprob: -11.03198528289795
    6. '_i' → logprob: -11.53198528289795
    7. ' range' → logprob: -12.40698528289795
    8. ' ▁' → logprob: -12.40698528289795
    9. '  ' → logprob: -12.90698528289795
    10. ' I' → logprob: -13.40698528289795

Token 43: 'ii' (ID: 3573)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.005845546722412
    2. ' in' → logprob: -1.005845546722412
    3. 'i' → logprob: -1.630845546722412
    4. 'in' → logprob: -3.630845546722412
    5. ' _' → logprob: -4.255845546722412
    6. ' i' → logprob: -4.380845546722412
    7. ' ' → logprob: -4.755845546722412
    8. '_i' → logprob: -4.755845546722412
    9. 'n' → logprob: -6.755845546722412
    10. '  ' → logprob: -7.755845546722412

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07071677595376968
    2. 'in' → logprob: -2.6957168579101562
    3. ' ' → logprob: -7.445716857910156
    4. '_' → logprob: -9.570716857910156
    5. 'n' → logprob: -9.695716857910156
    6. 'range' → logprob: -10.570716857910156
    7. ',' → logprob: -11.195716857910156
    8. ')' → logprob: -12.695716857910156
    9. 'import' → logprob: -12.695716857910156
    10. ' _' → logprob: -12.820716857910156

Token 45: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3135400116443634
    2. ' range' → logprob: -1.313539981842041
    3. '_' → logprob: -8.3135404586792
    4. ' ' → logprob: -11.8135404586792
    5. 'rang' → logprob: -12.0635404586792
    6. '_range' → logprob: -12.4385404586792
    7. '(range' → logprob: -12.5635404586792
    8. 'ran' → logprob: -13.3135404586792
    9. '	range' → logprob: -13.3135404586792
    10. 'r' → logprob: -13.4385404586792

Token 46: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.04597710445523262
    2. '(' → logprob: -3.7959771156311035
    3. '(N' → logprob: -3.7959771156311035
    4. ' (' → logprob: -11.420976638793945
    5. 'M' → logprob: -13.420976638793945
    6. '(n' → logprob: -15.045976638793945
    7. ' M' → logprob: -15.045976638793945
    8. '(
' → logprob: -15.045976638793945
    9. '(E' → logprob: -15.420976638793945
    10. '(int' → logprob: -15.545976638793945

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00034380643046461046
    2. ')' → logprob: -8.750344276428223
    3. ' ):' → logprob: -9.125344276428223
    4. ':' → logprob: -9.625344276428223
    5. '):
' → logprob: -11.625344276428223
    6. '():' → logprob: -15.500344276428223
    7. ' ' → logprob: -15.625344276428223
    8. '+' → logprob: -15.625344276428223
    9. '):
' → logprob: -15.625344276428223
    10. ']:' → logprob: -16.000343322753906

Token 48: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.2715732753276825
    2. ' s' → logprob: -3.021573305130005
    3. ' a' → logprob: -3.146573305130005
    4. ' line' → logprob: -3.146573305130005
    5. 'u' → logprob: -3.271573305130005
    6. '   ' → logprob: -4.396573066711426
    7. ' ' → logprob: -4.396573066711426
    8. ' _' → logprob: -4.646573066711426
    9. 'a' → logprob: -5.021573066711426
    10. 's' → logprob: -5.021573066711426

Token 49: ' *' (ID: 425)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7827780246734619
    2. ' u' → logprob: -0.7827780246734619
    3. 'a' → logprob: -2.907778024673462
    4. ' a' → logprob: -3.532778024673462
    5. 's' → logprob: -8.157777786254883
    6. 'x' → logprob: -8.532777786254883
    7. 'A' → logprob: -8.907777786254883
    8. 'l' → logprob: -9.032777786254883
    9. '   ' → logprob: -9.032777786254883
    10. 'v' → logprob: -9.032777786254883

Token 50: 'p' (ID: 79)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.08665648102760315
    2. ' u' → logprob: -2.8366565704345703
    3. 'a' → logprob: -3.8366565704345703
    4. '_u' → logprob: -6.71165657043457
    5. ' a' → logprob: -7.58665657043457
    6. 'x' → logprob: -8.58665657043457
    7. 'v' → logprob: -8.58665657043457
    8. '_' → logprob: -8.83665657043457
    9. '   ' → logprob: -9.21165657043457
    10. 's' → logprob: -9.58665657043457

Token 51: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46303871273994446
    2. ' =' → logprob: -1.088038682937622
    3. ',' → logprob: -4.213038921356201
    4. 'r' → logprob: -5.338038921356201
    5. 'oints' → logprob: -5.588038921356201
    6. 'ar' → logprob: -5.963038921356201
    7. 'p' → logprob: -6.338038921356201
    8. 'os' → logprob: -6.463038921356201
    9. 's' → logprob: -6.713038921356201
    10. 'u' → logprob: -8.088038444519043

Token 52: ' _' (ID: 1175)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.6441036462783813
    2. 'w' → logprob: -1.1441036462783813
    3. '_' → logprob: -2.769103527069092
    4. '_=' → logprob: -3.769103527069092
    5. ' =' → logprob: -4.644103527069092
    6. 'c' → logprob: -4.644103527069092
    7. ' c' → logprob: -4.894103527069092
    8. '=' → logprob: -5.019103527069092
    9. 'q' → logprob: -5.394103527069092
    10. ' t' → logprob: -5.644103527069092

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0004570484161377
    2. '=' → logprob: -1.1254570484161377
    3. 'w' → logprob: -2.0004570484161377
    4. 'q' → logprob: -3.0004570484161377
    5. 'c' → logprob: -3.5004570484161377
    6. 's' → logprob: -3.7504570484161377
    7. 'x' → logprob: -3.8754570484161377
    8. 'v' → logprob: -4.625456809997559
    9. 'a' → logprob: -4.875456809997559
    10. 't' → logprob: -5.375456809997559

Token 54: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10118376463651657
    2. ' map' → logprob: -2.4761836528778076
    3. 'list' → logprob: -4.601183891296387
    4. '_' → logprob: -6.601183891296387
    5. ' list' → logprob: -7.851183891296387
    6. '_.' → logprob: -8.351183891296387
    7. ' _' → logprob: -10.726183891296387
    8. '_*' → logprob: -11.101183891296387
    9. '_map' → logprob: -11.351183891296387
    10. '	map' → logprob: -11.476183891296387

Token 55: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.1928003813372925e-05
    2. '(' → logprob: -10.625051498413086
    3. 'int' → logprob: -10.750051498413086
    4. '[int' → logprob: -13.125051498413086
    5. '<int' → logprob: -13.375051498413086
    6. '=int' → logprob: -14.000051498413086
    7. ' int' → logprob: -14.625051498413086
    8. ',int' → logprob: -15.250051498413086
    9. '(
' → logprob: -15.375051498413086
    10. '```' → logprob: -15.500051498413086

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6321969628334045
    2. '(_' → logprob: -1.1321969032287598
    3. ',_' → logprob: -2.6321969032287598
    4. '(' → logprob: -3.5071969032287598
    5. '_' → logprob: -4.00719690322876
    6. '(_)' → logprob: -4.13219690322876
    7. '_,' → logprob: -5.25719690322876
    8. '(_,' → logprob: -6.25719690322876
    9. ')' → logprob: -7.00719690322876
    10. '(_.' → logprob: -7.50719690322876

Token 57: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6961746215820312
    2. ' _' → logprob: -0.6961746215820312
    3. ' _.' → logprob: -6.446174621582031
    4. '_s' → logprob: -7.571174621582031
    5. '_.' → logprob: -8.071174621582031
    6. ' ' → logprob: -9.321174621582031
    7. ' _('' → logprob: -9.321174621582031
    8. ' _(' → logprob: -9.571174621582031
    9. '_[' → logprob: -10.071174621582031
    10. ' _)' → logprob: -10.133674621582031

Token 58: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0014980759005993605
    2. '()' → logprob: -7.126498222351074
    3. '_' → logprob: -8.251498222351074
    4. '_.' → logprob: -9.376498222351074
    5. '(_' → logprob: -9.626498222351074
    6. '(_.' → logprob: -9.751498222351074
    7. 's' → logprob: -9.876498222351074
    8. '(' → logprob: -10.126498222351074
    9. '().__' → logprob: -10.876498222351074
    10. '(s' → logprob: -11.251498222351074

Token 59: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1888679839321412e-05
    2. 'strip' → logprob: -11.375021934509277
    3. ' split' → logprob: -12.375021934509277
    4. 'rstrip' → logprob: -12.625021934509277
    5. 'spl' → logprob: -13.125021934509277
    6. '(split' → logprob: -15.250021934509277
    7. '```' → logprob: -15.375021934509277
    8. 's' → logprob: -15.500021934509277
    9. '.split' → logprob: -16.12502098083496
    10. 'read' → logprob: -17.25002098083496

Token 60: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012288768775761127
    2. ')' → logprob: -4.512288570404053
    3. '()' → logprob: -6.762288570404053
    4. '())
' → logprob: -9.637289047241211
    5. '());' → logprob: -12.262289047241211
    6. ' ())' → logprob: -12.637289047241211
    7. '(' → logprob: -12.762289047241211
    8. '())

' → logprob: -13.262289047241211
    9. '();)' → logprob: -13.387289047241211
    10. '()))' → logprob: -13.512289047241211

Token 61: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37043777108192444
    2. '
' → logprob: -1.745437741279602
    3. '<|end|>' → logprob: -2.2454378604888916
    4. ')
' → logprob: -5.4954376220703125
    5. '[' → logprob: -5.6204376220703125
    6. 'E' → logprob: -5.9954376220703125
    7. ',' → logprob: -6.1204376220703125
    8. ';' → logprob: -6.2454376220703125
    9. ' ' → logprob: -6.3704376220703125
    10. '#' → logprob: -6.4954376220703125

Token 62: ' u' (ID: 337)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.44879814982414246
    2. 'p' → logprob: -1.0737981796264648
    3. 'for' → logprob: -4.698798179626465
    4. ' for' → logprob: -5.573798179626465
    5. ' E' → logprob: -6.323798179626465
    6. ' p' → logprob: -6.823798179626465
    7. 'a' → logprob: -7.198798179626465
    8. 'u' (adapté à ' u') → logprob: -7.323798179626465
    9. '[' → logprob: -7.698798179626465
    10. '[p' → logprob: -7.823798179626465

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012597950175404549
    2. ',v' → logprob: -4.637598037719727
    3. ',p' → logprob: -6.387598037719727
    4. ' ,' → logprob: -7.512598037719727
    5. ' =' → logprob: -8.512598037719727
    6. ',u' → logprob: -8.637598037719727
    7. '=' → logprob: -9.637598037719727
    8. 'p' → logprob: -10.137598037719727
    9. ',s' → logprob: -10.762598037719727
    10. '-' → logprob: -11.387598037719727

Token 64: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07028396427631378
    2. ' v' → logprob: -2.695283889770508
    3. '*v' → logprob: -8.570283889770508
    4. 'p' → logprob: -10.070283889770508
    5. ' ' → logprob: -10.320283889770508
    6. ' p' → logprob: -11.195283889770508
    7. '*' → logprob: -11.195283889770508
    8. '	v' → logprob: -11.445283889770508
    9. ' *' → logprob: -11.820283889770508
    10. '   ' → logprob: -12.195283889770508

Token 65: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42895281314849854
    2. ' =' → logprob: -1.0539528131484985
    3. ',' → logprob: -8.303953170776367
    4. '=p' → logprob: -13.428953170776367
    5. ' ' → logprob: -14.053953170776367
    6. 'p' → logprob: -14.928953170776367
    7. '=u' → logprob: -15.553953170776367
    8. ' =
' → logprob: -15.678953170776367
    9. ')' → logprob: -16.178953170776367
    10. '<|end|>' → logprob: -16.303953170776367

Token 66: ' [' (ID: 723)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0889492779970169
    2. ' p' → logprob: -2.463949203491211
    3. '   ' → logprob: -12.588949203491211
    4. ' ' → logprob: -12.713949203491211
    5. '*p' → logprob: -13.963949203491211
    6. '_p' → logprob: -14.213949203491211
    7. '  ' → logprob: -14.213949203491211
    8. '	p' → logprob: -15.088949203491211
    9. '    ' → logprob: -15.213949203491211
    10. '(p' → logprob: -15.713949203491211

Token 67: 'i' (ID: 72)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006606660783290863
    2. ' p' → logprob: -5.756606578826904
    3. '*p' → logprob: -6.256606578826904
    4. 'int' → logprob: -7.506606578826904
    5. 'x' → logprob: -7.881606578826904
    6. '*' → logprob: -7.881606578826904
    7. '_p' → logprob: -9.631607055664062
    8. 'pi' → logprob: -10.131607055664062
    9. 'i' → logprob: -11.006607055664062
    10. '0' → logprob: -11.256607055664062

Token 68: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.089771568775177
    2. ' -' → logprob: -2.4647715091705322
    3. ' for' → logprob: -7.714771747589111
    4. 'p' → logprob: -8.839771270751953
    5. '0' → logprob: -9.589771270751953
    6. 'for' → logprob: -9.964771270751953
    7. '-p' → logprob: -10.589771270751953
    8. ' ' → logprob: -11.339771270751953
    9. 'nt' → logprob: -11.464771270751953
    10. 'nd' → logprob: -11.714771270751953

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022093774750828743
    2. ' ' → logprob: -6.127209186553955
    3. 'p' → logprob: -11.127209663391113
    4. ' for' → logprob: -13.377209663391113
    5. '<|end|>' → logprob: -13.627209663391113
    6. 'x' → logprob: -13.877209663391113
    7. 's' → logprob: -13.877209663391113
    8. ' p' → logprob: -14.002209663391113
    9. '_' → logprob: -14.252209663391113
    10. 'for' → logprob: -14.502209663391113

Token 70: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02324908785521984
    2. 'for' → logprob: -3.7732491493225098
    3. ' ' → logprob: -12.898248672485352
    4. '	for' → logprob: -14.648248672485352
    5. ')' → logprob: -15.273248672485352
    6. '   ' → logprob: -15.898248672485352
    7. ' in' → logprob: -16.39824867248535
    8. ',' → logprob: -16.89824867248535
    9. ']' → logprob: -17.02324867248535
    10. '  ' → logprob: -17.39824867248535

Token 71: ' i' (ID: 575)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.34846216440200806
    2. 'p' → logprob: -1.2234621047973633
    3. ' ' → logprob: -11.598462104797363
    4. '_p' → logprob: -13.223462104797363
    5. ' i' → logprob: -13.473462104797363
    6. 'i' → logprob: -13.598462104797363
    7. ' _' → logprob: -13.723462104797363
    8. '_' → logprob: -14.223462104797363
    9. '  ' → logprob: -14.348462104797363
    10. '(p' → logprob: -14.598462104797363

Token 72: ' in' (ID: 306)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7018458247184753
    2. ' in' → logprob: -1.3268458843231201
    3. 'p' → logprob: -1.4518458843231201
    4. '_p' → logprob: -6.451845645904541
    5. '<|end|>' → logprob: -6.951845645904541
    6. 'in' → logprob: -7.701845645904541
    7. ' ' → logprob: -7.701845645904541
    8. ',p' → logprob: -8.2018461227417
    9. ')p' → logprob: -8.7018461227417
    10. '+p' → logprob: -8.8268461227417

Token 73: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009760336950421333
    2. ' p' → logprob: -4.63476037979126
    3. ' ' → logprob: -13.134759902954102
    4. '_p' → logprob: -13.634759902954102
    5. '*p' → logprob: -14.259759902954102
    6. '(p' → logprob: -15.884759902954102
    7. '  ' → logprob: -16.2597599029541
    8. '   ' → logprob: -16.5097599029541
    9. '[p' → logprob: -16.6347599029541
    10. '	p' → logprob: -16.8847599029541

Token 74: '[:' (ID: 7808)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -8.7689099018462e-05
    2. ']
' → logprob: -10.00008773803711
    3. ' ]' → logprob: -10.25008773803711
    4. ']

' → logprob: -12.25008773803711
    5. '<|end|>' → logprob: -14.37508773803711
    6. ']
' → logprob: -15.50008773803711
    7. ' ' → logprob: -15.75008773803711
    8. ')' → logprob: -16.00008773803711
    9. ')]' → logprob: -16.00008773803711
    10. '],' → logprob: -16.37508773803711

Token 75: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006637069745920599
    2. ' ' → logprob: -7.375663757324219
    3. '   ' → logprob: -11.375663757324219
    4. ']' → logprob: -11.875663757324219
    5. '  ' → logprob: -11.875663757324219
    6. '-' → logprob: -12.500663757324219
    7. '])' → logprob: -13.313163757324219
    8. ']]' → logprob: -13.563163757324219
    9. ' -' → logprob: -14.375663757324219
    10. ')' → logprob: -14.438163757324219

Token 76: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01465983223170042
    2. ']]' → logprob: -4.264659881591797
    3. '],' → logprob: -8.139659881591797
    4. ')]' → logprob: -9.389659881591797
    5. ']}' → logprob: -10.014659881591797
    6. '])' → logprob: -10.889659881591797
    7. ' ]' → logprob: -11.014659881591797
    8. '}]' → logprob: -11.764659881591797
    9. ' ]]' → logprob: -11.889659881591797
    10. ']]]' → logprob: -12.264659881591797

Token 77: '   ' (ID: 271)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.28459370136260986
    2. '   ' → logprob: -2.2845935821533203
    3. '<|end|>' → logprob: -3.1595935821533203
    4. ')' → logprob: -3.2845935821533203
    5. ' E' → logprob: -3.6595935821533203
    6. '
' → logprob: -3.7845935821533203
    7. ' ' → logprob: -5.78459358215332
    8. ',' → logprob: -6.03459358215332
    9. '    
' → logprob: -6.15959358215332
    10. ' 
' → logprob: -6.15959358215332

Token 78: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.011622656136751175
    2. ' E' → logprob: -5.386622428894043
    3. '   ' → logprob: -5.636622428894043
    4. '
' → logprob: -5.761622428894043
    5. '    
' → logprob: -9.636622428894043
    6. ',' → logprob: -10.136622428894043
    7. ')' → logprob: -10.636622428894043
    8. ' 
' → logprob: -10.636622428894043
    9. ' ' → logprob: -10.761622428894043
    10. '	E' → logprob: -11.261622428894043

Token 79: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.625004768371582
    3. '[v' → logprob: -13.625004768371582
    4. 'u' → logprob: -16.250003814697266
    5. ' [' → logprob: -18.125003814697266
    6. '[user' → logprob: -18.875003814697266
    7. '[
' → logprob: -19.625003814697266
    8. '```' → logprob: -19.625003814697266
    9. '	u' → logprob: -20.125003814697266
    10. ' u' → logprob: -20.750003814697266

Token 80: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.000998751842416823
    2. ']' → logprob: -7.0009989738464355
    3. '.append' → logprob: -9.875998497009277
    4. '.' → logprob: -10.625998497009277
    5. ' ].' → logprob: -11.500998497009277
    6. ').' → logprob: -14.500998497009277
    7. '.]' → logprob: -15.750998497009277
    8. ''].' → logprob: -16.000999450683594
    9. '[' → logprob: -16.250999450683594
    10. '   ' → logprob: -16.375999450683594

Token 81: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0067770653404295444
    2. '.' → logprob: -5.006777286529541
    3. '.add' → logprob: -10.381776809692383
    4. '.setdefault' → logprob: -11.256776809692383
    5. '.app' → logprob: -12.006776809692383
    6. '.ap' → logprob: -12.131776809692383
    7. ' .' → logprob: -13.381776809692383
    8. '.insert' → logprob: -14.006776809692383
    9. '.extend' → logprob: -14.131776809692383
    10. ').' → logprob: -14.256776809692383

Token 82: ' v' (ID: 323)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.022250426933169365
    2. ' [' → logprob: -4.397250652313232
    3. '[' → logprob: -4.772250652313232
    4. '[u' → logprob: -7.147250652313232
    5. '[(' → logprob: -8.272250175476074
    6. ' ' → logprob: -9.897250175476074
    7. 'v' → logprob: -10.022250175476074
    8. '[i' → logprob: -10.522250175476074
    9. '[f' → logprob: -11.647250175476074
    10. '   ' → logprob: -11.772250175476074

Token 83: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02205326221883297
    2. ',
' → logprob: -4.022053241729736
    3. '<|end|>' → logprob: -6.147053241729736
    4. ']' → logprob: -7.522053241729736
    5. ',

' → logprob: -7.522053241729736
    6. '[' → logprob: -8.022053718566895
    7. ',[' → logprob: -9.397053718566895
    8. ' ,' → logprob: -10.397053718566895
    9. '[]' → logprob: -10.522053718566895
    10. ';' → logprob: -10.522053718566895

Token 84: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.03944402560591698
    2. ' E' → logprob: -3.2894439697265625
    3. ' ' → logprob: -8.039443969726562
    4. 'u' → logprob: -8.289443969726562
    5. '<|end|>' → logprob: -8.289443969726562
    6. '   ' → logprob: -9.039443969726562
    7. 'v' → logprob: -9.039443969726562
    8. '_' → logprob: -9.039443969726562
    9. '0' → logprob: -9.914443969726562
    10. ')' → logprob: -10.289443969726562

Token 86: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.001977764768525958
    2. '[v' → logprob: -6.376977920532227
    3. '[' → logprob: -8.251977920532227
    4. 'u' → logprob: -11.626977920532227
    5. 'v' → logprob: -14.126977920532227
    6. ' ' → logprob: -14.376977920532227
    7. '<|end|>' → logprob: -14.376977920532227
    8. '	u' → logprob: -14.876977920532227
    9. '[user' → logprob: -14.876977920532227
    10. '[E' → logprob: -14.876977920532227

Token 87: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04257316514849663
    2. ']' → logprob: -3.7925732135772705
    3. '+=' → logprob: -5.042572975158691
    4. ']+=' → logprob: -5.042572975158691
    5. ')' → logprob: -5.292572975158691
    6. ' ]' → logprob: -7.542572975158691
    7. '+' → logprob: -8.667572975158691
    8. ' ' → logprob: -8.917572975158691
    9. '   ' → logprob: -9.417572975158691
    10. ']+' → logprob: -9.417572975158691

Token 88: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.005245022010058165
    2. '+=' → logprob: -5.255245208740234
    3. ' ' → logprob: -12.380245208740234
    4. '+' → logprob: -12.880245208740234
    5. ' +' → logprob: -13.130245208740234
    6. '.' → logprob: -14.005245208740234
    7. ']+=' → logprob: -14.630245208740234
    8. '.append' → logprob: -15.130245208740234
    9. '  ' → logprob: -15.505245208740234
    10. '+='' → logprob: -16.005245208740234

Token 89: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0699441060423851
    2. ' u' → logprob: -2.694944143295288
    3. '   ' → logprob: -12.819944381713867
    4. '	u' → logprob: -13.069944381713867
    5. '(u' → logprob: -13.694944381713867
    6. ' ' → logprob: -14.444944381713867
    7. '[u' → logprob: -14.694944381713867
    8. '    ' → logprob: -15.319944381713867
    9. ' ' → logprob: -16.069944381713867
    10. '1' → logprob: -16.069944381713867

Token 90: ',

' (ID: 4464)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.933252215385437
    2. ')' → logprob: -1.558252215385437
    3. '<|end|>' → logprob: -2.0582523345947266
    4. '\n' → logprob: -2.3082523345947266
    5. ']' → logprob: -3.0582523345947266
    6. '[' → logprob: -3.5582523345947266
    7. ' 
' → logprob: -4.058252334594727
    8. '#' → logprob: -4.183252334594727
    9. '
' → logprob: -4.308252334594727
    10. '\' → logprob: -5.058252334594727

Token 91: 'from' (ID: 2845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.899269163608551
    2. '#' → logprob: -1.2742691040039062
    3. ' ' → logprob: -1.6492691040039062
    4. ']' → logprob: -3.2742691040039062
    5. '<|end|>' → logprob: -3.5242691040039062
    6. '_' → logprob: -4.274269104003906
    7. '[' → logprob: -4.274269104003906
    8. '
' → logprob: -5.774269104003906
    9. '0' → logprob: -6.399269104003906
    10. ',' → logprob: -6.399269104003906

Token 92: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.026849498972296715
    2. '_' → logprob: -3.7768495082855225
    3. 'collections' → logprob: -6.401849269866943
    4. ' ' → logprob: -6.776849269866943
    5. ' heap' → logprob: -8.151849746704102
    6. '_collection' → logprob: -8.651849746704102
    7. ' itertools' → logprob: -9.026849746704102
    8. '_col' → logprob: -9.651849746704102
    9. ' collection' → logprob: -10.276849746704102
    10. ' queue' → logprob: -10.401849746704102

Token 93: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.020584169775247574
    2. 'import' → logprob: -3.8955841064453125
    3. ' ' → logprob: -11.520584106445312
    4. ' deque' → logprob: -11.645584106445312
    5. ' defaultdict' → logprob: -11.895584106445312
    6. '.' → logprob: -12.020584106445312
    7. 'deque' → logprob: -13.520584106445312
    8. '	import' → logprob: -13.645584106445312
    9. '```' → logprob: -13.770584106445312
    10. '_import' → logprob: -13.770584106445312

Token 94: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.021640487015247345
    2. 'deque' → logprob: -4.271640300750732
    3. ' defaultdict' → logprob: -5.146640300750732
    4. ' d' → logprob: -6.771640300750732
    5. ' de' → logprob: -7.771640300750732
    6. 'd' → logprob: -11.14664077758789
    7. ' ' → logprob: -11.27164077758789
    8. 'de' → logprob: -11.39664077758789
    9. ' default' → logprob: -11.64664077758789
    10. ' dequeue' → logprob: -12.52164077758789

Token 95: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15195374190807343
    2. '

' → logprob: -2.65195369720459
    3. 'd' → logprob: -3.65195369720459
    4. 'q' → logprob: -3.90195369720459
    5. 'Q' → logprob: -5.15195369720459
    6. 'D' → logprob: -5.65195369720459
    7. 'dist' → logprob: -5.90195369720459
    8. 'deque' → logprob: -6.02695369720459
    9. '' → logprob: -6.15195369720459
    10. 'def' → logprob: -6.65195369720459

Token 96: ' _' (ID: 1175)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.15649808943271637
    2. ' _' → logprob: -3.0314981937408447
    3. '_d' → logprob: -3.4064981937408447
    4. ' dq' → logprob: -3.9064981937408447
    5. ' deque' → logprob: -4.156497955322266
    6. '_' → logprob: -4.531497955322266
    7. 'deque' → logprob: -4.906497955322266
    8. ' d' → logprob: -5.281497955322266
    9. ' ' → logprob: -6.656497955322266
    10. '_q' → logprob: -7.031497955322266

Token 97: 'dq' (ID: 196857)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.340165376663208
    2. 'Q' → logprob: -2.090165376663208
    3. 'D' → logprob: -2.215165376663208
    4. 'deque' → logprob: -3.465165376663208
    5. 'q' → logprob: -4.715165138244629
    6. 'dq' → logprob: -4.840165138244629
    7. 'Deque' → logprob: -6.340165138244629
    8. 'de' → logprob: -6.715165138244629
    9. 'DQ' → logprob: -6.715165138244629
    10. '_de' → logprob: -6.840165138244629

Token 98: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020820852369070053
    2. '

' → logprob: -4.770820617675781
    3. '<|end|>' → logprob: -5.270820617675781
    4. ' 
' → logprob: -5.895820617675781
    5. 'd' → logprob: -7.270820617675781
    6. '
' → logprob: -7.395820617675781
    7. ' 

' → logprob: -7.645820617675781
    8. '  
' → logprob: -7.770820617675781
    9. '_' → logprob: -7.770820617675781
    10. '' → logprob: -8.145820617675781

Token 99: 'def' (ID: 1314)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5229072570800781
    2. 'q' → logprob: -1.6479072570800781
    3. 'd' → logprob: -2.272907257080078
    4. 'D' → logprob: -3.272907257080078
    5. 'Q' → logprob: -3.647907257080078
    6. 'visited' → logprob: -4.147907257080078
    7. 'dp' → logprob: -5.397907257080078
    8. 'def' → logprob: -5.647907257080078
    9. '_' → logprob: -5.897907257080078
    10. 'queue' → logprob: -6.022907257080078

Token 100: ' bfs' (ID: 147571)
  Prédit: ' bfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.010288373567163944
    2. ' BFS' → logprob: -5.385288238525391
    3. 'b' → logprob: -6.010288238525391
    4. ' ' → logprob: -6.510288238525391
    5. ' shortest' → logprob: -6.635288238525391
    6. ' b' → logprob: -9.26028823852539
    7. ' _' → logprob: -9.38528823852539
    8. 'B' → logprob: -9.63528823852539
    9. '_b' → logprob: -9.88528823852539
    10. '_' → logprob: -11.13528823852539

Token 101: '(z' (ID: 27674)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6606795787811279
    2. '(u' → logprob: -1.285679578781128
    3. '(' → logprob: -1.910679578781128
    4. '(start' → logprob: -3.160679578781128
    5. '(q' → logprob: -4.910679817199707
    6. '(node' → logprob: -5.410679817199707
    7. '(root' → logprob: -6.535679817199707
    8. ' (' → logprob: -7.160679817199707
    9. '(source' → logprob: -7.660679817199707
    10. '(graph' → logprob: -7.785679817199707

Token 102: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35538145899772644
    2. ',' → logprob: -1.2303814888000488
    3. ')' → logprob: -5.980381488800049
    4. '):
' → logprob: -7.230381488800049
    5. ',start' → logprob: -7.480381488800049
    6. ',u' → logprob: -7.605381488800049
    7. ':' → logprob: -7.730381488800049
    8. '(start' → logprob: -8.35538101196289
    9. 'start' → logprob: -8.73038101196289
    10. ',z' → logprob: -8.73038101196289

Token 103: ' q' (ID: 2335)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.6238077878952026
    2. ' visited' → logprob: -1.7488077878952026
    3. 's' → logprob: -2.123807907104492
    4. 'E' → logprob: -2.498807907104492
    5. ' s' → logprob: -2.873807907104492
    6. 'q' → logprob: -2.873807907104492
    7. '):' → logprob: -3.373807907104492
    8. ')' → logprob: -3.498807907104492
    9. ' E' → logprob: -3.748807907104492
    10. 'd' → logprob: -3.748807907104492

Token 104: 'col' (ID: 1798)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006442273035645485
    2. ',' → logprob: -5.881442070007324
    3. '):
' → logprob: -6.006442070007324
    4. ')' → logprob: -7.756442070007324
    5. ':' → logprob: -7.756442070007324
    6. '=' → logprob: -9.006442070007324
    7. 'ue' → logprob: -9.756442070007324
    8. 'u' → logprob: -10.506442070007324
    9. '):

' → logprob: -10.756442070007324
    10. '):
' → logprob: -10.881442070007324

Token 105: ',' (ID: 11)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5701104998588562
    2. ',' → logprob: -0.9451104998588562
    3. '):' → logprob: -3.320110559463501
    4. '):
' → logprob: -6.320110321044922
    5. 'olor' → logprob: -6.695110321044922
    6. 'u' → logprob: -6.820110321044922
    7. 'o' → logprob: -7.320110321044922
    8. 'ors' → logprob: -7.570110321044922
    9. 'ue' → logprob: -7.570110321044922
    10. 'our' → logprob: -7.695110321044922

Token 106: ' C' (ID: 363)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.7674113512039185
    2. 'q' → logprob: -2.267411231994629
    3. ' col' → logprob: -2.767411231994629
    4. 'visited' → logprob: -3.017411231994629
    5. ' q' → logprob: -3.142411231994629
    6. 'color' → logprob: -3.267411231994629
    7. 'colors' → logprob: -3.642411231994629
    8. ' visited' → logprob: -3.767411231994629
    9. ' color' → logprob: -3.892411231994629
    10. '_' → logprob: -4.517411231994629

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6399128437042236
    2. ',' → logprob: -0.7649128437042236
    3. 'ol' → logprob: -5.2649126052856445
    4. '):
' → logprob: -6.8899126052856445
    5. ')' → logprob: -7.7649126052856445
    6. 'o' → logprob: -9.264912605285645
    7. ' ):' → logprob: -9.889912605285645
    8. 'olor' → logprob: -9.889912605285645
    9. ' ,' → logprob: -10.014912605285645
    10. ',C' → logprob: -10.014912605285645

Token 108: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1243220865726471
    2. '   ' → logprob: -2.7493221759796143
    3. '):' → logprob: -3.2493221759796143
    4. ':
' → logprob: -4.874321937561035
    5. ' :' → logprob: -5.624321937561035
    6. ' ' → logprob: -6.874321937561035
    7. '():' → logprob: -7.749321937561035
    8. '):
' → logprob: -7.749321937561035
    9. ' :
' → logprob: -8.374321937561035
    10. ',' → logprob: -8.499321937561035

Token 109: ' stack' (ID: 10825)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09411593526601791
    2. ' q' → logprob: -3.219115972518921
    3. 'q' → logprob: -3.719115972518921
    4. ' ' → logprob: -4.594115734100342
    5. '	q' → logprob: -4.969115734100342
    6. '    
' → logprob: -6.219115734100342
    7. '  ' → logprob: -6.469115734100342
    8. '    ' → logprob: -6.844115734100342
    9. ' queue' → logprob: -7.594115734100342
    10. ' 
' → logprob: -7.719115734100342

Token 110: 'y' (ID: 88)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06997133791446686
    2. '=' → logprob: -2.6949713230133057
    3. ',' → logprob: -10.944971084594727
    4. ' ' → logprob: -11.569971084594727
    5. '=[]' → logprob: -12.694971084594727
    6. ':' → logprob: -13.194971084594727
    7. '_' → logprob: -14.194971084594727
    8. '  ' → logprob: -14.319971084594727
    9. ')' → logprob: -15.319971084594727
    10. '[' → logprob: -15.819971084594727

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04879673942923546
    2. '=' → logprob: -3.0487966537475586
    3. ',' → logprob: -8.923796653747559
    4. ' ' → logprob: -9.923796653747559
    5. '=[]' → logprob: -11.173796653747559
    6. '  ' → logprob: -12.673796653747559
    7. '   ' → logprob: -12.923796653747559
    8. ':' → logprob: -13.798796653747559
    9. ' ,' → logprob: -13.923796653747559
    10. '    ' → logprob: -14.548796653747559

Token 112: ' _' (ID: 1175)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.10506216436624527
    2. '_s' → logprob: -3.105062246322632
    3. '   ' → logprob: -3.605062246322632
    4. ' _' → logprob: -3.980062246322632
    5. '[_' → logprob: -5.480062007904053
    6. ' [' → logprob: -6.980062007904053
    7. ' ' → logprob: -6.980062007904053
    8. '_q' → logprob: -7.480062007904053
    9. 'dq' → logprob: -8.105062484741211
    10. 'deque' → logprob: -8.355062484741211

Token 113: 'dq' (ID: 196857)
  Prédit: 'dq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -6.659005157416686e-05
    2. 'deque' → logprob: -10.250066757202148
    3. 's' → logprob: -11.125066757202148
    4. 'q' → logprob: -11.750066757202148
    5. 'd' → logprob: -12.625066757202148
    6. 'qd' → logprob: -14.000066757202148
    7. ' dq' → logprob: -14.250066757202148
    8. 'sq' → logprob: -15.250066757202148
    9. '-d' → logprob: -15.250066757202148
    10. 'dj' → logprob: -15.375066757202148

Token 114: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.08122920244932175
    2. '([(' → logprob: -2.5812292098999023
    3. '()' → logprob: -6.206229209899902
    4. '()
' → logprob: -8.706229209899902
    5. '((' → logprob: -9.706229209899902
    6. '[(' → logprob: -10.081229209899902
    7. '(' → logprob: -10.581229209899902
    8. '(z' → logprob: -11.331229209899902
    9. '([
' → logprob: -12.456229209899902
    10. '()

' → logprob: -13.331229209899902

Token 115: '   ' (ID: 271)
  Prédit: '(stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.08868074417114258
    2. '   ' → logprob: -3.4636807441711426
    3. ' stack' → logprob: -3.7136807441711426
    4. 'stack' → logprob: -3.7136807441711426
    5. '	stack' → logprob: -6.213680744171143
    6. '.stack' → logprob: -7.588680744171143
    7. '<|end|>' → logprob: -7.713680744171143
    8. '(z' → logprob: -8.088680267333984
    9. '[' → logprob: -8.088680267333984
    10. ' (' → logprob: -8.338680267333984

Token 116: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.08255591988563538
    2. ' stack' → logprob: -2.5825560092926025
    3. '   ' → logprob: -5.832555770874023
    4. 'z' → logprob: -7.707555770874023
    5. ' z' → logprob: -8.957555770874023
    6. '(stack' → logprob: -9.957555770874023
    7. '	stack' → logprob: -10.082555770874023
    8. 'q' → logprob: -10.707555770874023
    9. '    
' → logprob: -11.957555770874023
    10. ' ' → logprob: -12.082555770874023

Token 117: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04106658697128296
    2. '.append' → logprob: -3.4160666465759277
    3. '()' → logprob: -5.666066646575928
    4. '(y' → logprob: -6.041066646575928
    5. '=' → logprob: -8.04106616973877
    6. '(z' → logprob: -8.16606616973877
    7. 'append' → logprob: -8.41606616973877
    8. '().' → logprob: -9.41606616973877
    9. ' =' → logprob: -9.41606616973877
    10. '.push' → logprob: -9.54106616973877

Token 118: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006819340633228421
    2. '.' → logprob: -7.5006818771362305
    3. '.extend' → logprob: -9.25068187713623
    4. '.put' → logprob: -10.87568187713623
    5. '.enqueue' → logprob: -11.87568187713623
    6. '.push' → logprob: -13.00068187713623
    7. '.clear' → logprob: -13.25068187713623
    8. 'append' → logprob: -14.50068187713623
    9. '_append' → logprob: -14.62568187713623
    10. '.p' → logprob: -14.87568187713623

Token 119: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.014365989714860916
    2. '((' → logprob: -4.264366149902344
    3. '(' → logprob: -8.514366149902344
    4. '(q' → logprob: -13.889366149902344
    5. '(u' → logprob: -14.514366149902344
    6. '(
' → logprob: -16.014366149902344
    7. ' (' → logprob: -16.514366149902344
    8. '(s' → logprob: -16.639366149902344
    9. '([' → logprob: -16.889366149902344
    10. 'z' → logprob: -16.889366149902344

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.166338137816638e-05
    2. ' )' → logprob: -10.625031471252441
    3. ',' → logprob: -12.375031471252441
    4. ')
' → logprob: -13.000031471252441
    5. ',)' → logprob: -15.000031471252441
    6. '))' → logprob: -15.875031471252441
    7. '),' → logprob: -16.125032424926758
    8. ' ' → logprob: -16.500032424926758
    9. ')

' → logprob: -16.875032424926758
    10. ');' → logprob: -17.125032424926758

Token 121: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12993502616882324
    2. '   ' → logprob: -2.7549350261688232
    3. '<|end|>' → logprob: -3.0049350261688232
    4. '    
' → logprob: -5.879935264587402
    5. '  
' → logprob: -6.379935264587402
    6. '<|end|>' → logprob: -6.754935264587402
    7. ')' → logprob: -7.129935264587402
    8. ' 
' → logprob: -7.129935264587402
    9. ':' → logprob: -7.629935264587402
    10. ' ' → logprob: -8.754935264587402

Token 122: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.6561513543128967
    2. '   ' → logprob: -1.531151294708252
    3. ' C' → logprob: -2.156151294708252
    4. ' while' → logprob: -2.406151294708252
    5. 'while' → logprob: -2.906151294708252
    6. ' ' → logprob: -6.531151294708252
    7. '	C' → logprob: -7.281151294708252
    8. '	while' → logprob: -7.406151294708252
    9. ' 
' → logprob: -8.15615177154541
    10. '
' → logprob: -8.15615177154541

Token 123: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.0005699523026123643
    2. '[' → logprob: -7.500569820404053
    3. '[q' → logprob: -11.375570297241211
    4. '[u' → logprob: -13.000570297241211
    5. '[:]' → logprob: -14.625570297241211
    6. 'z' → logprob: -14.875570297241211
    7. '[v' → logprob: -15.250570297241211
    8. '```' → logprob: -15.375570297241211
    9. '[i' → logprob: -15.625570297241211
    10. '(z' → logprob: -16.00057029724121

Token 124: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024926606565713882
    2. ']=' → logprob: -6.752492427825928
    3. ' ]' → logprob: -6.752492427825928
    4. ')' → logprob: -9.502492904663086
    5. '])' → logprob: -10.502492904663086
    6. ',' → logprob: -11.002492904663086
    7. '=' → logprob: -11.627492904663086
    8. ']==' → logprob: -11.752492904663086
    9. '[' → logprob: -12.002492904663086
    10. '][' → logprob: -12.502492904663086

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009758805856108665
    2. ' =' → logprob: -4.634758949279785
    3. '=True' → logprob: -13.884758949279785
    4. '.=' → logprob: -14.884758949279785
    5. '+=' → logprob: -15.384758949279785
    6. ',' → logprob: -15.384758949279785
    7. '=}' → logprob: -15.884758949279785
    8. '[' → logprob: -16.25975799560547
    9. ' ' → logprob: -16.38475799560547
    10. '=int' → logprob: -16.50975799560547

Token 126: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.004735684022307396
    2. ' q' → logprob: -5.754735469818115
    3. '1' → logprob: -7.129735469818115
    4. '0' → logprob: -7.254735469818115
    5. '   ' → logprob: -10.754735946655273
    6. ' ' → logprob: -11.504735946655273
    7. '2' → logprob: -12.629735946655273
    8. '	q' → logprob: -13.504735946655273
    9. '  ' → logprob: -13.504735946655273
    10. '    ' → logprob: -13.567235946655273

Token 127: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.01006346009671688
    2. 'ol' → logprob: -4.885063648223877
    3. '_col' → logprob: -6.885063648223877
    4. '0' → logprob: -7.635063648223877
    5. 'u' → logprob: -8.010063171386719
    6. '1' → logprob: -8.635063171386719
    7. '[col' → logprob: -8.635063171386719
    8. '_' → logprob: -10.385063171386719
    9. 'olor' → logprob: -10.385063171386719
    10. ' col' → logprob: -10.385063171386719

Token 128: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003294871188700199
    2. '<|end|>' → logprob: -6.253294944763184
    3. '\n' → logprob: -7.878294944763184
    4. '   ' → logprob: -8.003294944763184
    5. '    
' → logprob: -8.878294944763184
    6. ' 
' → logprob: -9.128294944763184
    7. '  
' → logprob: -9.253294944763184
    8. '
' → logprob: -9.378294944763184
    9. '<|end|>' → logprob: -9.628294944763184
    10. '

' → logprob: -9.628294944763184

Token 129: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008205794729292393
    2. '<|end|>' → logprob: -5.008205890655518
    3. '  
' → logprob: -7.383205890655518
    4. '    
' → logprob: -8.00820541381836
    5. '\n' → logprob: -8.50820541381836
    6. ' 
' → logprob: -8.88320541381836
    7. '<|end|>' → logprob: -9.63320541381836
    8. '```' → logprob: -10.38320541381836
    9. '

' → logprob: -10.75820541381836
    10. '
' → logprob: -10.75820541381836

Token 130: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016586272045969963
    2. '<|end|>' → logprob: -4.2665863037109375
    3. ' while' → logprob: -6.8915863037109375
    4. ' 
' → logprob: -7.6415863037109375
    5. '  
' → logprob: -8.016586303710938
    6. 'while' (adapté à ' while') → logprob: -8.516586303710938
    7. '\n' → logprob: -9.141586303710938
    8. '    
' → logprob: -9.766586303710938
    9. '<|end|>' → logprob: -9.766586303710938
    10. ')' → logprob: -9.891586303710938

Token 131: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.12840990722179413
    2. ' stack' → logprob: -2.1284098625183105
    3. 'len' → logprob: -6.7534098625183105
    4. ' len' → logprob: -8.253410339355469
    5. '(stack' → logprob: -10.128410339355469
    6. '	stack' → logprob: -11.878410339355469
    7. ' ' → logprob: -12.503410339355469
    8. 'st' → logprob: -14.003410339355469
    9. '_stack' → logprob: -14.378410339355469
    10. 'Stack' → logprob: -14.878410339355469

Token 132: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -15.875000953674316
    3. 'stack' → logprob: -16.375001907348633
    4. ')' → logprob: -16.500001907348633
    5. ' ' → logprob: -16.625001907348633
    6. 'sy' → logprob: -16.875001907348633
    7. 'y's' → logprob: -17.125001907348633
    8. 'py' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.625001907348633
    10. 'x' → logprob: -17.625001907348633

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006731167086400092
    2. '):' → logprob: -7.750673294067383
    3. '>:' → logprob: -9.000673294067383
    4. ':
' → logprob: -9.375673294067383
    5. '():' → logprob: -12.375673294067383
    6. ':not' → logprob: -12.625673294067383
    7. 'not' → logprob: -12.875673294067383
    8. '}:' → logprob: -12.875673294067383
    9. '_:' → logprob: -13.125673294067383
    10. 'opleft' → logprob: -13.250673294067383

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1252165138721466
    2. '<|end|>' → logprob: -3.125216484069824
    3. '   ' → logprob: -3.250216484069824
    4. '    ' → logprob: -5.250216484069824
    5. '        
' → logprob: -5.500216484069824
    6. ',' → logprob: -5.625216484069824
    7. '    
' → logprob: -5.875216484069824
    8. '
' → logprob: -5.875216484069824
    9. ' 
' → logprob: -6.125216484069824
    10. '<|end|>' → logprob: -6.250216484069824

Token 135: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -1.1306487321853638
    2. 'u' → logprob: -1.6306487321853638
    3. ' u' → logprob: -2.005648612976074
    4. 'z' → logprob: -2.005648612976074
    5. ' x' → logprob: -2.755648612976074
    6. 'v' → logprob: -2.880648612976074
    7. ' z' → logprob: -3.380648612976074
    8. ' v' → logprob: -3.505648612976074
    9. 't' → logprob: -5.380648612976074
    10. ' t' → logprob: -5.630648612976074

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38703036308288574
    2. '=' → logprob: -1.1370303630828857
    3. ',' → logprob: -8.762030601501465
    4. ' ' → logprob: -13.387030601501465
    5. ')' → logprob: -14.637030601501465
    6. ' ,' → logprob: -14.887030601501465
    7. '   ' → logprob: -16.38702964782715
    8. '.' → logprob: -16.51202964782715
    9. ' =
' → logprob: -16.76202964782715
    10. ')=' → logprob: -17.13702964782715

Token 137: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.47407954931259155
    2. 'stack' → logprob: -0.9740795493125916
    3. '	stack' → logprob: -13.724079132080078
    4. '(stack' → logprob: -14.224079132080078
    5. '_stack' → logprob: -14.724079132080078
    6. 'st' → logprob: -15.974079132080078
    7. '.stack' → logprob: -16.599079132080078
    8. ' ' → logprob: -16.724079132080078
    9. 'stk' → logprob: -17.724079132080078
    10. 'stock' → logprob: -18.099079132080078

Token 138: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00023512568441219628
    2. '.pop' → logprob: -9.000235557556152
    3. 'py' → logprob: -9.750235557556152
    4. 'pop' → logprob: -10.625235557556152
    5. 'p' → logprob: -10.875235557556152
    6. '[' → logprob: -13.125235557556152
    7. 'xy' → logprob: -13.375235557556152
    8. '.p' → logprob: -13.625235557556152
    9. 'x' → logprob: -14.250235557556152
    10. 'fy' → logprob: -14.250235557556152

Token 139: '.pop' (ID: 15746)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0007304243044927716
    2. '.pop' → logprob: -7.250730514526367
    3. '.' → logprob: -10.875730514526367
    4. ' .' → logprob: -14.125730514526367
    5. '   ' → logprob: -14.625730514526367
    6. 'p' → logprob: -15.750730514526367
    7. 'pop' → logprob: -17.500730514526367
    8. ').' → logprob: -17.625730514526367
    9. '().' → logprob: -17.875730514526367
    10. '       ' → logprob: -18.125730514526367

Token 140: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.523948907968588e-05
    2. '(' → logprob: -11.250035285949707
    3. '()
' → logprob: -11.500035285949707
    4. ')' → logprob: -12.750035285949707
    5. '())' → logprob: -12.875035285949707
    6. '()]' → logprob: -13.000035285949707
    7. 'left' → logprob: -13.000035285949707
    8. '()

' → logprob: -13.750035285949707
    9. ' ()' → logprob: -15.500035285949707
    10. '()\' → logprob: -16.00003433227539

Token 141: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4079742431640625
    2. ')' → logprob: -1.5329742431640625
    3. ':' → logprob: -1.5329742431640625
    4. '<|end|>' → logprob: -2.0329742431640625
    5. ' if' → logprob: -3.2829742431640625
    6. '   ' → logprob: -3.2829742431640625
    7. '       ' → logprob: -3.7829742431640625
    8. ':
' → logprob: -4.4079742431640625
    9. '    
' → logprob: -4.6579742431640625
    10. ' ' → logprob: -4.6579742431640625

Token 142: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13788744807243347
    2. 'for' (adapté à ' for') → logprob: -2.887887477874756
    3. ' 
' → logprob: -2.887887477874756
    4. '
' → logprob: -4.512887477874756
    5. '    
' → logprob: -5.637887477874756
    6. ' if' → logprob: -7.262887477874756
    7. ' ' → logprob: -7.512887477874756
    8. '   ' → logprob: -8.387887001037598
    9. '  
' → logprob: -8.387887001037598
    10. ':' → logprob: -8.637887001037598

Token 143: ' t' (ID: 260)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5374165773391724
    2. ' y' → logprob: -1.0374165773391724
    3. 'w' → logprob: -4.287416458129883
    4. 'e' → logprob: -4.412416458129883
    5. 'i' → logprob: -4.912416458129883
    6. ' w' → logprob: -5.037416458129883
    7. ' e' → logprob: -5.537416458129883
    8. 'u' → logprob: -5.787416458129883
    9. 'n' → logprob: -5.912416458129883
    10. 'v' → logprob: -5.912416458129883

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806088864803314
    2. 'in' → logprob: -3.2880609035491943
    3. ' ' → logprob: -11.413061141967773
    4. '	in' → logprob: -11.913061141967773
    5. '_in' → logprob: -15.038061141967773
    6. 'n' → logprob: -15.288061141967773
    7. '  ' → logprob: -16.163061141967773
    8. 'x' → logprob: -16.163061141967773
    9. ' i' → logprob: -16.538061141967773
    10. '   ' → logprob: -16.538061141967773

Token 145: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.009758567437529564
    2. ' E' → logprob: -4.634758472442627
    3. ' ' → logprob: -13.384758949279785
    4. '   ' → logprob: -14.509758949279785
    5. '(E' → logprob: -15.509758949279785
    6. '[E' → logprob: -15.759758949279785
    7. '	E' → logprob: -16.00975799560547
    8. ' ' → logprob: -17.25975799560547
    9. '  ' → logprob: -17.25975799560547
    10. '[' → logprob: -17.88475799560547

Token 146: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.1398757123970427e-05
    2. 'x' → logprob: -11.750011444091797
    3. '[' → logprob: -13.250011444091797
    4. ' [' → logprob: -13.625011444091797
    5. '[
' → logprob: -15.375011444091797
    6. '(x' → logprob: -16.625011444091797
    7. '{x' → logprob: -17.500011444091797
    8. '[u' → logprob: -17.750011444091797
    9. ' x' → logprob: -18.250011444091797
    10. '```' → logprob: -18.875011444091797

Token 147: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0070874691009521484
    2. ':' → logprob: -5.257087707519531
    3. '):' → logprob: -7.257087707519531
    4. ']' → logprob: -7.257087707519531
    5. ']:
' → logprob: -7.882087707519531
    6. '}:' → logprob: -10.507087707519531
    7. '>:' → logprob: -11.257087707519531
    8. '       ' → logprob: -12.382087707519531
    9. '   ' → logprob: -12.757087707519531
    10. '):
' → logprob: -12.882087707519531

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5566796660423279
    2. ' if' → logprob: -1.0566797256469727
    3. '       ' → logprob: -3.0566797256469727
    4. '   ' → logprob: -4.806679725646973
    5. '<|end|>' → logprob: -4.931679725646973
    6. 'if' → logprob: -5.181679725646973
    7. ' ' → logprob: -5.681679725646973
    8. ' 
' → logprob: -6.306679725646973
    9. '        ' → logprob: -6.931679725646973
    10. ':' → logprob: -7.181679725646973

Token 149: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06271575391292572
    2. '               ' → logprob: -3.437715768814087
    3. 'if' (adapté à ' if') → logprob: -3.562715768814087
    4. '                ' → logprob: -9.437715530395508
    5. '            ' → logprob: -9.937715530395508
    6. '           ' → logprob: -10.062715530395508
    7. ' ' → logprob: -10.437715530395508
    8. '                
' → logprob: -11.187715530395508
    9. '   ' → logprob: -11.312715530395508
    10. '       ' → logprob: -11.812715530395508

Token 150: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.1807357221841812
    2. 'C' → logprob: -1.80573570728302
    3. ' ' → logprob: -7.5557355880737305
    4. ' not' → logprob: -7.9307355880737305
    5. '   ' → logprob: -10.18073558807373
    6. ' t' → logprob: -11.05573558807373
    7. '  ' → logprob: -11.05573558807373
    8. 't' → logprob: -12.11823558807373
    9. 'not' → logprob: -12.24323558807373
    10. ' ' → logprob: -12.55573558807373

Token 151: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -7.910643762443215e-05
    2. 't' → logprob: -10.000079154968262
    3. '[' → logprob: -10.375079154968262
    4. ' [' → logprob: -14.375079154968262
    5. '[x' → logprob: -14.500079154968262
    6. '[
' → logprob: -15.375079154968262
    7. '[T' → logprob: -15.500079154968262
    8. ' t' → logprob: -15.750079154968262
    9. '[v' → logprob: -16.375078201293945
    10. '	t' → logprob: -16.500078201293945

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07424672693014145
    2. ']==' → logprob: -2.699246644973755
    3. '[' → logprob: -6.949246883392334
    4. 'is' → logprob: -7.074246883392334
    5. '==' → logprob: -7.074246883392334
    6. ' ]' → logprob: -7.699246883392334
    7. ' is' → logprob: -7.699246883392334
    8. '==-' → logprob: -7.949246883392334
    9. ' ==' → logprob: -8.824246406555176
    10. '<' → logprob: -9.199246406555176

Token 153: ' <' (ID: 464)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0517370700836182
    2. '==' → logprob: -1.0517370700836182
    3. ' ==' → logprob: -1.4267370700836182
    4. '==-' → logprob: -3.051737070083618
    5. 'is' → logprob: -5.051736831665039
    6. '<' → logprob: -5.176736831665039
    7. ')' → logprob: -7.426736831665039
    8. ' ' → logprob: -7.676736831665039
    9. '[' → logprob: -8.051736831665039
    10. '-' → logprob: -8.926736831665039

Token 154: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009056143462657928
    2. ' ' → logprob: -4.759056091308594
    3. '1' → logprob: -7.759056091308594
    4. '>' → logprob: -11.634056091308594
    5. '2' → logprob: -14.321556091308594
    6. '=' → logprob: -14.321556091308594
    7. '  ' → logprob: -14.571556091308594
    8. '   ' → logprob: -14.634056091308594
    9. '```' → logprob: -14.821556091308594
    10. '3' → logprob: -14.821556091308594

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002111478243023157
    2. ' ' → logprob: -6.252111434936523
    3. '1' → logprob: -8.627111434936523
    4. '2' → logprob: -14.877111434936523
    5. 't' → logprob: -15.002111434936523
    6. 'C' → logprob: -15.314611434936523
    7. '   ' → logprob: -15.377111434936523
    8. 'q' → logprob: -15.439611434936523
    9. '  ' → logprob: -15.627111434936523
    10. '-' → logprob: -15.752111434936523

Token 156: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.595913827419281
    2. ':' → logprob: -0.845913827419281
    3. ' and' → logprob: -4.220913887023926
    4. ' :
' → logprob: -6.470913887023926
    5. '           ' → logprob: -6.720913887023926
    6. ' or' → logprob: -7.220913887023926
    7. '               ' → logprob: -7.470913887023926
    8. ' :' → logprob: -7.970913887023926
    9. '):
' → logprob: -8.470913887023926
    10. '       ' → logprob: -8.595913887023926

Token 157: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036279852502048016
    2. ' C' → logprob: -6.503627777099609
    3. '           ' → logprob: -6.878627777099609
    4. 'C' → logprob: -8.62862777709961
    5. '<|end|>' → logprob: -8.62862777709961
    6. '                
' → logprob: -8.87862777709961
    7. ' or' → logprob: -9.25362777709961
    8. '   ' → logprob: -9.75362777709961
    9. '       ' → logprob: -9.87862777709961
    10. ')' → logprob: -9.87862777709961

Token 158: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.43139326572418213
    2. ' C' → logprob: -1.1813932657241821
    3. '               ' → logprob: -3.4313931465148926
    4. '                   ' → logprob: -5.306393146514893
    5. ' stack' → logprob: -5.806393146514893
    6. 'stack' → logprob: -6.306393146514893
    7. '                ' → logprob: -7.681393146514893
    8. '   ' → logprob: -7.931393146514893
    9. '           ' → logprob: -8.18139362335205
    10. ' ' → logprob: -9.55639362335205

Token 159: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.00023250321100931615
    2. 't' → logprob: -9.125232696533203
    3. '[' → logprob: -9.500232696533203
    4. '=' → logprob: -10.125232696533203
    5. '[x' → logprob: -13.125232696533203
    6. '=t' → logprob: -13.375232696533203
    7. ' [' → logprob: -13.750232696533203
    8. ' t' → logprob: -14.000232696533203
    9. '[q' → logprob: -14.625232696533203
    10. ']' → logprob: -15.000232696533203

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03927233815193176
    2. '=' → logprob: -3.5392723083496094
    3. ']=' → logprob: -5.039272308349609
    4. ' =' → logprob: -5.914272308349609
    5. ' ]' → logprob: -8.16427230834961
    6. ')' → logprob: -11.53927230834961
    7. ',' → logprob: -14.53927230834961
    8. ')=' → logprob: -14.53927230834961
    9. ' ' → logprob: -15.28927230834961
    10. ']+=' → logprob: -15.28927230834961

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868725001811981
    2. ' =' → logprob: -1.1368725299835205
    3. ',' → logprob: -14.511872291564941
    4. ')' → logprob: -14.636872291564941
    5. ' ' → logprob: -15.636872291564941
    6. '=
' → logprob: -15.886872291564941
    7. ' =
' → logprob: -16.636873245239258
    8. '.' → logprob: -16.886873245239258
    9. ']' → logprob: -17.261873245239258
    10. '=

' → logprob: -17.386873245239258

Token 162: ' q' (ID: 2335)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015556453727185726
    2. 'q' → logprob: -4.265556335449219
    3. ' ' → logprob: -6.890556335449219
    4. '   ' → logprob: -9.015556335449219
    5. 'C' → logprob: -9.390556335449219
    6. ' q' → logprob: -9.515556335449219
    7. '(' → logprob: -10.390556335449219
    8. '(q' → logprob: -11.265556335449219
    9. '!' → logprob: -11.765556335449219
    10. '
' → logprob: -12.140556335449219

Token 163: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00031377444975078106
    2. ' col' → logprob: -9.125313758850098
    3. '[col' → logprob: -9.375313758850098
    4. 'ol' → logprob: -10.125313758850098
    5. '   ' → logprob: -10.875313758850098
    6. ' ' → logprob: -11.125313758850098
    7. '_col' → logprob: -11.750313758850098
    8. '	col' → logprob: -12.125313758850098
    9. 'colm' → logprob: -12.375313758850098
    10. 'c' → logprob: -12.625313758850098

Token 164: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008625074988231063
    2. 'stack' → logprob: -7.3758625984191895
    3. '
' → logprob: -10.000862121582031
    4. ',' → logprob: -10.125862121582031
    5. '           ' → logprob: -10.125862121582031
    6. ' stack' → logprob: -10.125862121582031
    7. '       ' → logprob: -10.625862121582031
    8. ')' → logprob: -11.125862121582031
    9. ',
' → logprob: -11.875862121582031
    10. '                   ' → logprob: -12.000862121582031

Token 165: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007223592605441809
    2. 'stack' → logprob: -5.007223606109619
    3. ' stack' → logprob: -8.382223129272461
    4. '
' → logprob: -8.632223129272461
    5. '           ' → logprob: -10.382223129272461
    6. '	stack' → logprob: -10.757223129272461
    7. '       ' → logprob: -11.507223129272461
    8. '                   ' → logprob: -12.132223129272461
    9. '.stack' → logprob: -12.132223129272461
    10. ',' → logprob: -12.132223129272461

Token 166: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -4.5491004129871726e-05
    2. ' stack' → logprob: -10.000045776367188
    3. '_stack' → logprob: -17.625045776367188
    4. '	stack' → logprob: -18.000045776367188
    5. '   ' → logprob: -18.125045776367188
    6. '.stack' → logprob: -19.125045776367188
    7. '(stack' → logprob: -19.750045776367188
    8. ' ' → logprob: -19.750045776367188
    9. 'Stack' → logprob: -20.375045776367188
    10. '           ' → logprob: -20.500045776367188

Token 167: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: 0.0
    2. '.append' → logprob: -18.25
    3. '```' → logprob: -18.875
    4. 'py' → logprob: -19.375
    5. 't' → logprob: -19.5
    6. 'sy' → logprob: -19.875
    7. ' y' → logprob: -20.125
    8. 'stack' → logprob: -20.125
    9. 'append' → logprob: -20.375
    10. 'ty' → logprob: -20.375

Token 168: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.4656579120783135e-05
    2. '.' → logprob: -10.125044822692871
    3. '.extend' → logprob: -12.750044822692871
    4. 'append' → logprob: -13.375044822692871
    5. '.push' → logprob: -17.000043869018555
    6. ' .' → logprob: -17.500043869018555
    7. '.p' → logprob: -17.625043869018555
    8. '.app' → logprob: -17.750043869018555
    9. '_append' → logprob: -18.250043869018555
    10. '   ' → logprob: -18.750043869018555

Token 169: 'left' (ID: 4530)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -9.968312951968983e-06
    2. '(' → logprob: -11.625009536743164
    3. 'left' → logprob: -14.000009536743164
    4. 't' → logprob: -15.875009536743164
    5. '(
' → logprob: -18.625009536743164
    6. '((' → logprob: -18.875009536743164
    7. '	t' → logprob: -19.250009536743164
    8. ' (' → logprob: -20.125009536743164
    9. '(x' → logprob: -20.250009536743164
    10. '()' → logprob: -21.375009536743164

Token 170: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. 't' → logprob: -16.000001907348633
    4. '	t' → logprob: -19.500001907348633
    5. '((' → logprob: -20.250001907348633
    6. ' (' → logprob: -21.000001907348633
    7. '(
' → logprob: -21.625001907348633
    8. ' t' → logprob: -22.000001907348633
    9. '(x' → logprob: -22.000001907348633
    10. '()' → logprob: -22.250001907348633

Token 171: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001625379954930395
    2. ')
' → logprob: -8.875162124633789
    3. '<|end|>' → logprob: -11.000162124633789
    4. ')return' → logprob: -13.500162124633789
    5. '())' → logprob: -13.625162124633789
    6. ' )' → logprob: -13.875162124633789
    7. '()' → logprob: -14.000162124633789
    8. '<|end|>' → logprob: -15.000162124633789
    9. ')

' → logprob: -15.500162124633789
    10. '```' → logprob: -15.875162124633789

Token 172: 'CL' (ID: 5656)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21966955065727234
    2. '[:]' → logprob: -2.7196695804595947
    3. '=' → logprob: -2.9696695804595947
    4. ',' → logprob: -4.344669342041016
    5. '=[]' → logprob: -4.344669342041016
    6. ')' → logprob: -4.719669342041016
    7. ']' → logprob: -5.094669342041016
    8. '[' → logprob: -5.094669342041016
    9. 'E' → logprob: -5.094669342041016
    10. 'O' → logprob: -5.344669342041016

Token 174: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.007405600044876337
    2. ' [-' → logprob: -5.007405757904053
    3. '[' → logprob: -7.757405757904053
    4. '[]' → logprob: -8.757405281066895
    5. ' [' → logprob: -10.882405281066895
    6. '[len' → logprob: -11.007405281066895
    7. '[N' → logprob: -11.257405281066895
    8. '[_' → logprob: -11.507405281066895
    9. '[C' → logprob: -11.632405281066895
    10. 'C' → logprob: -12.007405281066895

Token 175: '42' (ID: 4689)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. '2' → logprob: -11.375012397766113
    3. '-' → logprob: -14.125012397766113
    4. ' ' → logprob: -15.375012397766113
    5. '3' → logprob: -17.00001335144043
    6. '10' → logprob: -17.31251335144043
    7. ' -' → logprob: -17.62501335144043
    8. '

' → logprob: -17.75001335144043
    9. ']' → logprob: -17.87501335144043
    10. '100' → logprob: -17.93751335144043

Token 176: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2266654372215271
    2. ']*' → logprob: -1.9766654968261719
    3. ' for' → logprob: -2.976665496826172
    4. 'for' → logprob: -4.351665496826172
    5. ' ]' → logprob: -8.476665496826172
    6. ']*(' → logprob: -9.226665496826172
    7. ']+' → logprob: -9.351665496826172
    8. ' if' → logprob: -11.351665496826172
    9. 'if' → logprob: -11.976665496826172
    10. '1' → logprob: -12.476665496826172

Token 177: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4100079834461212
    2. '*N' → logprob: -1.1600079536437988
    3. '*n' → logprob: -4.785007953643799
    4. ' *' → logprob: -5.410007953643799
    5. ' for' → logprob: -5.785007953643799
    6. 'for' → logprob: -6.410007953643799
    7. '*q' → logprob: -6.535007953643799
    8. '*C' → logprob: -6.910007953643799
    9. '*(-' → logprob: -7.285007953643799
    10. '*M' → logprob: -7.410007953643799

Token 178: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.843177233240567e-05
    2. '(N' → logprob: -11.500018119812012
    3. ' N' → logprob: -11.875018119812012
    4. '(' → logprob: -14.125018119812012
    5. '_' → logprob: -15.125018119812012
    6. '_N' → logprob: -16.000019073486328
    7. ' (' → logprob: -17.125019073486328
    8. ' ' → logprob: -17.625019073486328
    9. 'n' → logprob: -17.750019073486328
    10. '	N' → logprob: -18.000019073486328

Token 179: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: 'c' (ID: 66)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022888295352458954
    2. 'print' → logprob: -7.252288818359375
    3. 'color' → logprob: -8.252288818359375
    4. 'i' → logprob: -8.752288818359375
    5. 'q' → logprob: -8.752288818359375
    6. 'res' → logprob: -9.002288818359375
    7. ' for' → logprob: -9.502288818359375
    8. 'C' → logprob: -9.752288818359375
    9. 'c' → logprob: -9.877288818359375
    10. '0' → logprob: -10.002288818359375

Token 181: ' =' (ID: 314)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.8403577208518982
    2. 'L' → logprob: -1.340357780456543
    3. ' =' → logprob: -2.340357780456543
    4. 'ount' → logprob: -2.840357780456543
    5. 'l' → logprob: -3.590357780456543
    6. 'urrent' → logprob: -3.715357780456543
    7. 'olor' → logprob: -3.840357780456543
    8. 'ur' → logprob: -4.090357780456543
    9. 'C' → logprob: -4.590357780456543
    10. 'ounter' → logprob: -4.590357780456543

Token 182: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01380027737468481
    2. ' ' → logprob: -4.513800144195557
    3. '-' → logprob: -6.388800144195557
    4. '1' → logprob: -7.013800144195557
    5. '2' → logprob: -9.263800621032715
    6. ' -' → logprob: -10.138800621032715
    7. '[' → logprob: -11.638800621032715
    8. '[]' → logprob: -11.763800621032715
    9. '_' → logprob: -13.263800621032715
    10. 'max' → logprob: -13.326300621032715

Token 183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013146818615496159
    2. '-' → logprob: -4.513146877288818
    3. '1' → logprob: -6.888146877288818
    4. '2' → logprob: -7.388146877288818
    5. '[]' → logprob: -8.88814640045166
    6. '[' → logprob: -9.26314640045166
    7. '{}' → logprob: -9.76314640045166
    8. ' ' → logprob: -9.88814640045166
    9. '[-' → logprob: -10.01314640045166
    10. 'max' → logprob: -10.88814640045166

Token 184: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1674070656299591
    2. 'for' → logprob: -1.9174070358276367
    3. '<|end|>' → logprob: -5.542407035827637
    4. ' for' → logprob: -6.417407035827637
    5. 'while' → logprob: -6.542407035827637
    6. ' while' → logprob: -9.792407035827637
    7. ' 
' → logprob: -9.792407035827637
    8. '

' → logprob: -11.542407035827637
    9. 'c' → logprob: -11.542407035827637
    10. '+
' → logprob: -11.917407035827637

Token 185: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.146429223008454e-05
    2. 'while' → logprob: -10.12506103515625
    3. ' for' → logprob: -11.12506103515625
    4. '_' → logprob: -12.62506103515625
    5. 'f' → logprob: -13.87506103515625
    6. '
' → logprob: -14.37506103515625
    7. 'range' → logprob: -14.62506103515625
    8. 'def' → logprob: -15.75006103515625
    9. 'i' → logprob: -15.75006103515625
    10. 'x' → logprob: -15.75006103515625

Token 186: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.24505166709423065
    2. ' _' → logprob: -1.870051622390747
    3. '_' → logprob: -3.120051622390747
    4. 'i' → logprob: -4.745051860809326
    5. ' v' → logprob: -5.495051860809326
    6. ' x' → logprob: -6.245051860809326
    7. ' u' → logprob: -6.370051860809326
    8. ' z' → logprob: -6.745051860809326
    9. ' ' → logprob: -7.495051860809326
    10. '_i' → logprob: -7.870051860809326

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10022769868373871
    2. 'in' → logprob: -2.3502275943756104
    3. ' ' → logprob: -11.225227355957031
    4. '_in' → logprob: -13.975227355957031
    5. '	in' → logprob: -14.100227355957031
    6. 'import' → logprob: -14.225227355957031
    7. 'range' → logprob: -14.225227355957031
    8. 'In' → logprob: -14.350227355957031
    9. '  ' → logprob: -14.350227355957031
    10. 'n' → logprob: -14.475227355957031

Token 188: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015045057516545057
    2. ' range' → logprob: -6.501504421234131
    3. '_' → logprob: -13.251504898071289
    4. '(range' → logprob: -16.62650489807129
    5. 'CL' → logprob: -16.87650489807129
    6. 'E' → logprob: -17.00150489807129
    7. 'C' → logprob: -17.25150489807129
    8. '_range' → logprob: -17.25150489807129
    9. 'r' → logprob: -17.50150489807129
    10. 'rang' → logprob: -17.62650489807129

Token 189: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003825293097179383
    2. '(' → logprob: -7.875382423400879
    3. 'N' → logprob: -13.750382423400879
    4. '(n' → logprob: -14.250382423400879
    5. ' (' → logprob: -14.875382423400879
    6. '(
' → logprob: -15.125382423400879
    7. '(len' → logprob: -17.000383377075195
    8. '(

' → logprob: -17.625383377075195
    9. ' N' → logprob: -17.875383377075195
    10. '(M' → logprob: -18.625383377075195

Token 190: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6938043236732483
    2. '):' → logprob: -0.6938043236732483
    3. ')' → logprob: -7.9438042640686035
    4. ':' → logprob: -8.943804740905762
    5. ' ):' → logprob: -9.568804740905762
    6. '+' → logprob: -10.193804740905762
    7. ' ):
' → logprob: -10.193804740905762
    8. '):
' → logprob: -10.943804740905762
    9. ':
' → logprob: -12.193804740905762
    10. '   ' → logprob: -13.443804740905762

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05233236774802208
    2. ' if' → logprob: -3.0523324012756348
    3. '<|end|>' → logprob: -6.302332401275635
    4. ' ' → logprob: -7.177332401275635
    5. '    
' → logprob: -8.052331924438477
    6. ' 
' → logprob: -8.177331924438477
    7. 'if' → logprob: -8.427331924438477
    8. '	if' → logprob: -9.177331924438477
    9. ':' → logprob: -9.552331924438477
    10. '  ' → logprob: -10.427331924438477

Token 192: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08310052752494812
    2. '   ' → logprob: -2.9581005573272705
    3. 'if' (adapté à ' if') → logprob: -3.5831005573272705
    4. '	if' → logprob: -11.583100318908691
    5. ' ' → logprob: -11.833100318908691
    6. 'If' → logprob: -12.458100318908691
    7. ' 
' → logprob: -12.458100318908691
    8. '    ' → logprob: -12.708100318908691
    9. '    
' → logprob: -12.958100318908691
    10. '  ' → logprob: -13.333100318908691

Token 193: ' CL' (ID: 16762)
  Prédit: 'CL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CL' → logprob: -0.16025906801223755
    2. ' CL' → logprob: -1.9102590084075928
    3. ' ' → logprob: -11.535259246826172
    4. 'C' → logprob: -11.660259246826172
    5. '_CL' → logprob: -11.785259246826172
    6. ' C' → logprob: -12.410259246826172
    7. '   ' → logprob: -13.285259246826172
    8. '(CL' → logprob: -13.785259246826172
    9. 'CLU' → logprob: -14.410259246826172
    10. '.CL' → logprob: -14.910259246826172

Token 194: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.966313281329349e-05
    2. '[' → logprob: -10.125049591064453
    3. ' [' → logprob: -12.000049591064453
    4. '[
' → logprob: -13.125049591064453
    5. '<x' → logprob: -14.000049591064453
    6. 'x' → logprob: -15.750049591064453
    7. '```' → logprob: -15.875049591064453
    8. '
' → logprob: -16.250049591064453
    9. '[_' → logprob: -17.000049591064453
    10. '

' → logprob: -17.250049591064453

Token 195: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.016347533091902733
    2. ']' → logprob: -4.516347408294678
    3. ' <' → logprob: -5.641347408294678
    4. ']<' → logprob: -6.516347408294678
    5. ')' → logprob: -8.891347885131836
    6. ' ' → logprob: -10.141347885131836
    7. ')<' → logprob: -10.266347885131836
    8. '==' → logprob: -10.891347885131836
    9. ']==' → logprob: -12.016347885131836
    10. '[' → logprob: -12.266347885131836

Token 196: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12701156735420227
    2. ' <' → logprob: -2.12701153755188
    3. '==' → logprob: -10.1270112991333
    4. ' ' → logprob: -11.1270112991333
    5. ' ==' → logprob: -11.1270112991333
    6. ')' → logprob: -12.3770112991333
    7. '==-' → logprob: -13.0020112991333
    8. ')<' → logprob: -13.5020112991333
    9. '[' → logprob: -13.7520112991333
    10. ' ' → logprob: -14.3770112991333

Token 197: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007148159202188253
    2. ' -' → logprob: -7.2507147789001465
    3. ' ' → logprob: -12.750715255737305
    4. '  ' → logprob: -13.875715255737305
    5. '   ' → logprob: -14.125715255737305
    6. '<' → logprob: -16.250715255737305
    7. '    ' → logprob: -16.875715255737305
    8. '	' → logprob: -17.000715255737305
    9. '[-' → logprob: -17.500715255737305
    10. '[' → logprob: -18.125715255737305

Token 198: '42' (ID: 4689)
  Prédit: '42'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '42' → logprob: -1.9027791495318525e-05
    2. '1' → logprob: -10.875019073486328
    3. '43' → logprob: -18.125019073486328
    4. '41' → logprob: -19.125019073486328
    5. ' ' → logprob: -19.500019073486328
    6. '4' → logprob: -21.750019073486328
    7. '44' → logprob: -22.000019073486328
    8. '   ' → logprob: -22.125019073486328
    9. '0' → logprob: -22.375019073486328
    10. '40' → logprob: -22.375019073486328

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25229060649871826
    2. ':
' → logprob: -1.5022906064987183
    3. '):
' → logprob: -8.377290725708008
    4. '):' → logprob: -9.002290725708008
    5. ' :
' → logprob: -13.127290725708008
    6. ':

' → logprob: -13.252290725708008
    7. '   ' → logprob: -13.627290725708008
    8. ' :' → logprob: -13.877290725708008
    9. ' and' → logprob: -14.252290725708008
    10. ')' → logprob: -14.377290725708008

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9407155513763428
    2. ':
' → logprob: -1.1907155513763428
    3. '   ' → logprob: -1.6907155513763428
    4. ':' → logprob: -2.3157155513763428
    5. ' :
' → logprob: -4.065715789794922
    6. '):
' → logprob: -6.440715789794922
    7. ' :' → logprob: -6.940715789794922
    8. '
' → logprob: -7.440715789794922
    9. ' ' → logprob: -7.815715789794922
    10. ' c' → logprob: -8.190715789794922

Token 201: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03537307679653168
    2. ' bfs' → logprob: -3.5353729724884033
    3. '   ' → logprob: -6.285373210906982
    4. 'c' → logprob: -6.535373210906982
    5. 'CL' → logprob: -6.785373210906982
    6. ' b' → logprob: -7.285373210906982
    7. ' CL' → logprob: -9.160372734069824
    8. '       ' → logprob: -9.160372734069824
    9. 'C' → logprob: -9.785372734069824
    10. '
' → logprob: -10.035372734069824

Token 202: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.000432695698691532
    2. '(' → logprob: -7.75043249130249
    3. '(
' → logprob: -13.250432968139648
    4. ' (' → logprob: -15.625432968139648
    5. '(X' → logprob: -16.87543296813965
    6. '(xs' → logprob: -18.50043296813965
    7. 'x' → logprob: -18.62543296813965
    8. '```' → logprob: -18.75043296813965
    9. '(

' → logprob: -19.12543296813965
    10. ',x' → logprob: -19.25043296813965

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14349330961704254
    2. ',c' → logprob: -2.018493413925171
    3. 'c' → logprob: -7.643493175506592
    4. ' ,' → logprob: -8.14349365234375
    5. ' c' → logprob: -10.39349365234375
    6. ',
' → logprob: -11.89349365234375
    7. '   ' → logprob: -12.14349365234375
    8. '	c' → logprob: -13.64349365234375
    9. '(c' → logprob: -13.76849365234375
    10. ')c' → logprob: -14.64349365234375

Token 204: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007219645194709301
    2. ' c' → logprob: -7.2507219314575195
    3. '   ' → logprob: -11.50072193145752
    4. ' ' → logprob: -14.37572193145752
    5. ')c' → logprob: -15.00072193145752
    6. '	c' → logprob: -15.12572193145752
    7. '  ' → logprob: -15.62572193145752
    8. '    ' → logprob: -16.000722885131836
    9. '       ' → logprob: -16.125722885131836
    10. '
' → logprob: -16.750722885131836

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03482335805892944
    2. ',c' → logprob: -3.409823417663574
    3. 'c' → logprob: -6.909823417663574
    4. ')' → logprob: -9.534823417663574
    5. ' ,' → logprob: -10.159823417663574
    6. '   ' → logprob: -10.284823417663574
    7. ',
' → logprob: -11.534823417663574
    8. ')c' → logprob: -12.034823417663574
    9. ')
' → logprob: -12.159823417663574
    10. '+' → logprob: -12.159823417663574

Token 206: ' CL' (ID: 16762)
  Prédit: 'CL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CL' → logprob: -0.00033558503491804004
    2. ' CL' → logprob: -8.000335693359375
    3. '_CL' → logprob: -16.000335693359375
    4. 'C' → logprob: -18.125335693359375
    5. 'CLU' → logprob: -18.375335693359375
    6. '(CL' → logprob: -19.375335693359375
    7. '.CL' → logprob: -19.625335693359375
    8. 'L' → logprob: -19.625335693359375
    9. '   ' → logprob: -19.750335693359375
    10. ' ' → logprob: -20.000335693359375

Token 207: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932744383811951
    2. ')
' → logprob: -0.6932744383811951
    3. ')c' → logprob: -9.81827449798584
    4. ')
' → logprob: -10.19327449798584
    5. '   ' → logprob: -10.44327449798584
    6. '       ' → logprob: -12.81827449798584
    7. ',' → logprob: -13.69327449798584
    8. ' )
' → logprob: -13.94327449798584
    9. ' )' → logprob: -14.69327449798584
    10. ')`
' → logprob: -15.44327449798584

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08833269029855728
    2. '   ' → logprob: -2.7133326530456543
    3. 'c' → logprob: -4.213332653045654
    4. ' c' → logprob: -6.338332653045654
    5. '	c' → logprob: -6.963332653045654
    6. ')' → logprob: -8.338333129882812
    7. ',' → logprob: -9.463333129882812
    8. '+' → logprob: -9.838333129882812
    9. ')c' → logprob: -9.838333129882812
    10. '        ' → logprob: -9.963333129882812

Token 209: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -1.2664456789934775e-06
    2. ' c' → logprob: -13.625000953674316
    3. '
' → logprob: -16.875001907348633
    4. '_c' → logprob: -18.000001907348633
    5. '	c' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '_' → logprob: -20.250001907348633
    8. '+' → logprob: -20.625001907348633
    9. '```' → logprob: -21.000001907348633
    10. '++' → logprob: -21.500001907348633

Token 210: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001360947615467012
    2. '+' → logprob: -6.626360893249512
    3. ' +=' → logprob: -10.376360893249512
    4. '=' → logprob: -13.126360893249512
    5. '+='' → logprob: -14.251360893249512
    6. '++' → logprob: -14.376360893249512
    7. '+="' → logprob: -14.876360893249512
    8. ']+=' → logprob: -16.376361846923828
    9. '+++' → logprob: -16.501361846923828
    10. '<|end|>' → logprob: -16.876361846923828

Token 211: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.8750057220459
    4. '  ' → logprob: -19.5000057220459
    5. '```' → logprob: -20.2500057220459
    6. '１' → logprob: -20.3750057220459
    7. '2' → logprob: -21.0625057220459
    8. '۱' → logprob: -21.1875057220459
    9. '+' → logprob: -21.5625057220459
    10. '    ' → logprob: -22.3125057220459

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.125001907348633
    4. '```' → logprob: -19.750001907348633
    5. '１' → logprob: -20.062501907348633
    6. '  ' → logprob: -20.125001907348633
    7. '۱' → logprob: -20.687501907348633
    8. '2' → logprob: -20.812501907348633
    9. '-' → logprob: -21.000001907348633
    10. '<|end|>' → logprob: -21.062501907348633

Token 213: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32794252038002014
    2. '#' → logprob: -1.8279424905776978
    3. 'for' → logprob: -2.4529426097869873
    4. '_' → logprob: -3.9529426097869873
    5. 'if' → logprob: -5.577942371368408
    6. '<|end|>' → logprob: -5.702942371368408
    7. '```' → logprob: -7.202942371368408
    8. 'CL' → logprob: -7.202942371368408
    9. '#print' → logprob: -7.327942371368408
    10. 'color' → logprob: -8.327942848205566

Token 215: '(+' (ID: 72061)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.8001631498336792
    2. '(len' → logprob: -0.8001631498336792
    3. '(' → logprob: -2.6751632690429688
    4. '(CL' → logprob: -4.175163269042969
    5. '(C' → logprob: -4.800163269042969
    6. '(max' → logprob: -5.800163269042969
    7. '('' → logprob: -6.050163269042969
    8. '(sum' → logprob: -6.425163269042969
    9. '()' → logprob: -7.300163269042969
    10. '(cl' → logprob: -7.550163269042969

Token 216: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.021907484158873558
    2. 'max' → logprob: -4.146907329559326
    3. 'len' → logprob: -5.271907329559326
    4. 'CL' → logprob: -8.146907806396484
    5. ' c' → logprob: -8.521907806396484
    6. 'min' → logprob: -9.646907806396484
    7. ' max' → logprob: -10.271907806396484
    8. 'cl' → logprob: -10.396907806396484
    9. 'sum' → logprob: -10.521907806396484
    10. '1' → logprob: -10.771907806396484

Token 217: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4060561776859686e-05
    2. ' )' → logprob: -10.125043869018555
    3. ')
' → logprob: -12.875043869018555
    4. ')#' → logprob: -15.125043869018555
    5. ')`' → logprob: -15.375043869018555
    6. '#' → logprob: -15.625043869018555
    7. '))' → logprob: -16.000043869018555
    8. '```' → logprob: -16.000043869018555
    9. '')' → logprob: -16.875043869018555
    10. '*)' → logprob: -17.250043869018555


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 215
Tokens correctement prédits (1ère position, stricte): 78
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 170
Précision stricte (1ère position): 36.28%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 79.07%
================================================================================
