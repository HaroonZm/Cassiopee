================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Importation du module sys pour manipuler certains aspects du système Python,
# comme la gestion de la sortie et de l'entrée standard, ainsi que le réglage de la limite de récursion
from sys import exit, setrecursionlimit, stderr, stdin

# Importation de la fonction reduce du module functools, qui permet d'appliquer une fonction de façon cumulative à une séquence
from functools import reduce

# Importation de toutes les fonctions et classes du module itertools, utiles pour créer des itérateurs efficaces (non utilisées ici)
from itertools import *

# Importation de defaultdict et Counter depuis le module collections, ces structures sont utiles pour compter ou initialiser des dictionnaires avec des valeurs par défaut
from collections import defaultdict, Counter

# Importation de la fonction bisect du module bisect, permettant de rechercher efficacement des indices pour l'insertion ordonnée dans une liste
from bisect import bisect

# Réimportation du module functools pour s'assurer qu'il est dans l'espace de noms (déjà importé plus haut partiellement)
import functools

# Modification de la limite maximum de récursion pour éviter les erreurs lors des appels récursifs profonds
setrecursionlimit(10**7)

# Redéfinition de la fonction input pour lire une ligne de l'entrée standard et supprimer les espaces en début et fin
def input():
    # Utilise stdin.readline pour lire une ligne brute depuis l'entrée standard
    # Ensuite retire les espaces et le caractère de fin de ligne avec strip()
    return stdin.readline().strip()

# Fonction utilitaire pour lire un entier depuis l'entrée standard
def read():
    # Lit une ligne, la transforme en chaîne de caractères puis la convertit en entier avec int()
    return int(input())

# Fonction utilitaire pour lire une ligne d'entiers séparés par des espaces et la convertir en une liste d'entiers
def reads():
    # input().split() divise la chaîne en éléments individuels, puis map chaque élément en int
    return [int(x) for x in input().split()]

# Définition de la constante MOD (modulo utilisé dans les calculs), typique dans la programmation compétitive pour gérer les grands nombres
MOD = 10**6 + 3

# Initialisation de la liste fact (factorielle), de taille MOD, remplie de 1.
# Cette liste va contenir le pré-calcul de la factorielle de tous les nombres de 0 à MOD-1 modulo MOD.
fact = [1] * MOD

# Boucle pour pré-calculer les valeurs factorielles modulo MOD pour tous les entiers de 1 à MOD-1
for i in range(1, MOD):
    # La factorielle de i est (factorielle de i-1) fois i, le tout en prenant le modulo MOD pour éviter le débordement et respecter les contraintes du problème
    fact[i] = (fact[i-1] * i) % MOD

# Préparation de la liste invfact, de taille MOD, pour stocker les inverses multiplicatifs des factorielles
invfact = [0] * MOD

# Le dernier élément de invfact (l'inverse de fact[MOD-1]) est initialisé avec l'inverse multiplicatif de la dernière factorielle modulo MOD.
# pow(a, b, m) permet de réaliser l'exponentiation rapide a^b mod m.
# Puisque MOD est premier, l'inverse modulo MOD d'un nombre a est pow(a, MOD-2, MOD) selon le petit théorème de Fermat.
invfact[-1] = pow(fact[-1], MOD-2, MOD)

# Calcul des inverses multiplicatifs des factorielles de MOD-2 jusqu'à 0 (remplissage de la table)
for i in range(MOD-2, -1, -1):
    # Invfact[i] = Invfact[i+1] * (i+1) % MOD, ce qui se base sur les propriétés d'inverses modulaires.
    invfact[i] = invfact[i+1] * (i+1) % MOD

# Définition d'une fonction utilitaire pour calculer l'inverse d'un nombre modulo MOD
def inv(n):
    # Utilise pow(n, MOD-2, MOD) pour obtenir l'inverse multiplicatif modulo MOD grâce au petit théorème de Fermat
    return pow(n, MOD-2, MOD)

# Définition de la fonction principale de résolution du problème, qui prend trois paramètres : x, d, n
def solve(x, d, n):
    # Si x vaut 0, le résultat est toujours 0, donc on le retourne immédiatement
    if x == 0:
        return 0
    # Si d vaut 0, on doit simplement renvoyer x à la puissance n modulo MOD,
    # car la suite devient constante (tous les termes sont x)
    if d == 0:
        return pow(x, n, MOD)
    # Calcul de la valeur k, qui est x divisé par d, modulo MOD.
    # L'invocation de inv(d) retourne l'inverse multiplicatif de d modulo MOD,
    # ce qui permet de procéder à la division dans un corps fini.
    k = x * inv(d) % MOD
    # Vérifie s'il serait possible d'accéder à une entrée hors de la gamme de la factorielle pré-calculée
    # Si n + k - 1 >= MOD, retourner 0 car ce cas n'est pas géré (dépassement du tableau factorial)
    if n + k - 1 >= MOD:
        return 0
    # Calcul du résultat à l'aide des valeurs pré-calculées des factorielles et leurs inverses
    # Cette formule peut exprimer le nombre de façons ou résoudre des suites arithmétiques avec combinaison.
    # Multiplication modulaire à chaque étape pour ne jamais dépasser MOD
    result = fact[n + k - 1] * invfact[k-1] % MOD
    result = result * pow(d, n, MOD) % MOD
    return result

# Lecture du nombre de requêtes à effectuer, via la fonction read qui lit un entier depuis l'entrée standard
Q = read()

# Exécution de Q boucles pour traiter chaque requête indépendante
for _ in range(Q):
    # Lecture de trois entiers x, d, n à chaque itération via la fonction reads
    x, d, n = reads()
    # Appel de la fonction solve avec les paramètres lus pour obtenir la réponse
    ans = solve(x, d, n)
    # Affichage du résultat de la requête courante
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Import' (ID: 19998)
  → Token d'amorce (pas de prédiction)

Token 2: 'ation' (ID: 387)
  → Token d'amorce (pas de prédiction)

Token 3: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07061714679002762
    2. 'import' → logprob: -3.695617198944092
    3. '```' → logprob: -3.820617198944092
    4. '_' → logprob: -4.195617198944092
    5. '`' → logprob: -6.570617198944092
    6. ' ' → logprob: -6.695617198944092
    7. '.' → logprob: -6.820617198944092
    8. '#' → logprob: -7.695617198944092
    9. ',' → logprob: -7.820617198944092
    10. '=' → logprob: -8.195616722106934

Token 4: ' module' (ID: 8827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06374236941337585
    2. ''' → logprob: -4.063742160797119
    3. '_' → logprob: -5.063742160797119
    4. 'import' → logprob: -5.438742160797119
    5. ' de' → logprob: -5.563742160797119
    6. 's' → logprob: -5.563742160797119
    7. '  ' → logprob: -5.688742160797119
    8. ' des' → logprob: -5.688742160797119
    9. ' d' → logprob: -5.813742160797119
    10. ' from' → logprob: -6.063742160797119

Token 5: ' sys' (ID: 12228)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4281848073005676
    2. 'import' → logprob: -1.4281847476959229
    3. ' import' → logprob: -3.678184747695923
    4. '_' → logprob: -3.803184747695923
    5. '`' → logprob: -3.928184747695923
    6. ' ' → logprob: -4.678184986114502
    7. ':' → logprob: -4.678184986114502
    8. ' ```' → logprob: -5.428184986114502
    9. 's' → logprob: -5.928184986114502
    10. '.' → logprob: -6.053184986114502

Token 6: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.004792753607034683
    2. '```' → logprob: -5.7547926902771
    3. '\n' → logprob: -7.5047926902771
    4. ' import' → logprob: -7.7547926902771
    5. '
' → logprob: -8.629793167114258
    6. '.' → logprob: -8.754793167114258
    7. '\' → logprob: -8.754793167114258
    8. ',' → logprob: -10.254793167114258
    9. '.import' → logprob: -10.879793167114258
    10. '#' → logprob: -11.004793167114258

Token 7: ' manip' (ID: 20526)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -1.353718876838684
    2. ' sys' → logprob: -1.603718876838684
    3. ' system' → logprob: -1.728718876838684
    4. ' argv' → logprob: -1.853718876838684
    5. ' l' → logprob: -2.7287187576293945
    6. ' pouvoir' → logprob: -3.1037187576293945
    7. ' manip' → logprob: -3.2287187576293945
    8. ' utiliser' → logprob: -4.9787187576293945
    9. ' accéder' → logprob: -4.9787187576293945
    10. ' récupérer' → logprob: -5.1037187576293945

Token 8: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.06237566098570824
    2. 'ulation' → logprob: -2.812375545501709
    3. '#' → logprob: -8.937376022338867
    4. '```' → logprob: -9.062376022338867
    5. 'ul' → logprob: -10.437376022338867
    6. '\' → logprob: -10.937376022338867
    7. 'u' → logprob: -11.062376022338867
    8. 'ulations' → logprob: -11.187376022338867
    9. 'ulator' → logprob: -11.562376022338867
    10. 'ule' → logprob: -11.687376022338867

Token 9: ' certains' (ID: 30681)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7003226280212402
    2. ' des' → logprob: -1.0753226280212402
    3. ' ' → logprob: -2.9503226280212402
    4. ' le' → logprob: -3.2003226280212402
    5. ' l' → logprob: -3.2003226280212402
    6. 'les' → logprob: -4.82532262802124
    7. ' system' → logprob: -5.70032262802124
    8. 'le' → logprob: -5.70032262802124
    9. ' sys' → logprob: -5.95032262802124
    10. ' ' → logprob: -6.07532262802124

Token 10: ' aspects' (ID: 15712)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.16310721635818481
    2. 'es' → logprob: -3.03810715675354
    3. ' éléments' → logprob: -3.78810715675354
    4. 'élé' → logprob: -3.91310715675354
    5. 'esp' → logprob: -4.538107395172119
    6. 'import' → logprob: -4.788107395172119
    7. ' espace' → logprob: -5.038107395172119
    8. 'car' → logprob: -5.413107395172119
    9. '_' → logprob: -5.663107395172119
    10. '```' → logprob: -5.788107395172119

Token 11: ' du' (ID: 1462)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.18026618659496307
    2. '.' → logprob: -2.5552661418914795
    3. '```' → logprob: -3.0552661418914795
    4. ' de' → logprob: -3.8052661418914795
    5. ' import' → logprob: -4.680266380310059
    6. '\' → logprob: -6.430266380310059
    7. '`' → logprob: -6.430266380310059
    8. '_' → logprob: -6.680266380310059
    9. ',' → logprob: -6.930266380310059
    10. ' ' → logprob: -7.305266380310059

Token 12: ' système' (ID: 30034)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8023142218589783
    2. ' système' → logprob: -1.552314281463623
    3. 's' → logprob: -1.802314281463623
    4. ' code' → logprob: -2.677314281463623
    5. ' sys' → logprob: -3.552314281463623
    6. 'code' → logprob: -3.552314281463623
    7. ' system' → logprob: -4.802314281463623
    8. 'system' → logprob: -4.802314281463623
    9. 'sys' → logprob: -4.927314281463623
    10. 'f' → logprob: -5.177314281463623

Token 13: ' Python' (ID: 26534)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0023418734781444073
    2. '```' → logprob: -6.1273417472839355
    3. ' import' → logprob: -9.377342224121094
    4. '\n' → logprob: -10.877342224121094
    5. '.' → logprob: -11.627342224121094
    6. ',' → logprob: -11.752342224121094
    7. '\' → logprob: -12.127342224121094
    8. '
' → logprob: -12.252342224121094
    9. '``' → logprob: -12.502342224121094
    10. '`' → logprob: -12.502342224121094

Token 14: ',
' (ID: 412)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01300304289907217
    2. '```' → logprob: -4.388002872467041
    3. '\n' → logprob: -8.5130033493042
    4. '\' → logprob: -9.5130033493042
    5. ' import' → logprob: -9.7630033493042
    6. '
' → logprob: -10.2630033493042
    7. '#' → logprob: -10.2630033493042
    8. '``' → logprob: -10.3880033493042
    9. '`' → logprob: -11.1380033493042
    10. '.' → logprob: -11.2630033493042

Token 15: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.15267984569072723
    2. ' import' → logprob: -2.777679920196533
    3. ' ' → logprob: -3.027679920196533
    4. '.' → logprob: -4.527679920196533
    5. ',' → logprob: -5.277679920196533
    6. ' ,' → logprob: -5.527679920196533
    7. '```' → logprob: -5.527679920196533
    8. ' .' → logprob: -6.902679920196533
    9. '  
' → logprob: -7.152679920196533
    10. '<|end|>' → logprob: -7.402679920196533

Token 16: ' comme' (ID: 7971)
  Prédit: ' notamment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' notamment' → logprob: -0.5620666146278381
    2. 'import' → logprob: -1.5620665550231934
    3. ' import' → logprob: -2.9370665550231934
    4. ' comme' → logprob: -3.0620665550231934
    5. ' en' → logprob: -3.0620665550231934
    6. ' par' → logprob: -3.4370665550231934
    7. ' os' → logprob: -4.687066555023193
    8. 'comme' → logprob: -5.187066555023193
    9. ' et' → logprob: -5.312066555023193
    10. ' tel' → logprob: -5.937066555023193

Token 17: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.16091448068618774
    2. ' sys' → logprob: -3.035914421081543
    3. 'l' → logprob: -3.160914421081543
    4. ' la' → logprob: -3.785914421081543
    5. ' les' → logprob: -4.285914421081543
    6. 'le' → logprob: -5.535914421081543
    7. 'les' → logprob: -5.660914421081543
    8. ' ' → logprob: -5.785914421081543
    9. ' le' → logprob: -5.910914421081543
    10. 'la' → logprob: -5.910914421081543

Token 18: ' gestion' (ID: 29607)
  Prédit: ' gestion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gestion' → logprob: -0.3136189579963684
    2. ' manipulation' → logprob: -1.6886188983917236
    3. ' lecture' → logprob: -3.5636188983917236
    4. 'gestion' → logprob: -3.6886188983917236
    5. 'lecture' → logprob: -5.063619136810303
    6. 'import' → logprob: -5.188619136810303
    7. ' sortie' → logprob: -5.188619136810303
    8. 'version' → logprob: -6.688619136810303
    9. ' version' → logprob: -6.813619136810303
    10. 's' → logprob: -6.938619136810303

Token 19: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.17943741381168365
    2. ' ' → logprob: -2.6794373989105225
    3. ' de' → logprob: -3.1794373989105225
    4. ' du' → logprob: -3.3044373989105225
    5. ' d' → logprob: -4.429437637329102
    6. ' ' → logprob: -6.554437637329102
    7. 'des' → logprob: -6.679437637329102
    8. '_' → logprob: -6.929437637329102
    9. 'import' → logprob: -8.054437637329102
    10. 's' → logprob: -8.054437637329102

Token 20: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5369417667388916
    2. 'l' → logprob: -1.0369417667388916
    3. ' la' → logprob: -4.1619415283203125
    4. ' fichiers' → logprob: -4.1619415283203125
    5. 'la' → logprob: -4.4119415283203125
    6. 's' → logprob: -4.5369415283203125
    7. 'f' → logprob: -7.0369415283203125
    8. ' arguments' → logprob: -7.4119415283203125
    9. ' fichier' → logprob: -7.5369415283203125
    10. 'arguments' → logprob: -7.5369415283203125

Token 21: ' sortie' (ID: 52761)
  Prédit: ' mémoire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mémoire' → logprob: -0.17927810549736023
    2. ' ligne' → logprob: -2.9292781352996826
    3. 'ligne' → logprob: -3.0542781352996826
    4. 'mé' → logprob: -3.6792781352996826
    5. 's' → logprob: -3.9292781352996826
    6. ' ' → logprob: -5.8042778968811035
    7. 'console' → logprob: -6.0542778968811035
    8. 'mem' → logprob: -6.3042778968811035
    9. 'version' → logprob: -6.6792778968811035
    10. 'commande' → logprob: -6.6792778968811035

Token 22: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24168118834495544
    2. 'import' → logprob: -1.7416812181472778
    3. ',' → logprob: -3.6166810989379883
    4. '\' → logprob: -5.741681098937988
    5. '```' → logprob: -5.741681098937988
    6. ' import' → logprob: -6.616681098937988
    7. '#' → logprob: -7.241681098937988
    8. ' ' → logprob: -7.366681098937988
    9. 'e' → logprob: -7.741681098937988
    10. '\n' → logprob: -7.991681098937988

Token 23: ' de' (ID: 334)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.13104130327701569
    2. 'l' → logprob: -2.1310412883758545
    3. 'entrée' → logprob: -7.131041526794434
    4. ' de' → logprob: -8.131041526794434
    5. '#' → logprob: -8.381041526794434
    6. ' input' → logprob: -8.506041526794434
    7. ' lint' → logprob: -8.506041526794434
    8. ' d' → logprob: -8.631041526794434
    9. ' la' → logprob: -8.631041526794434
    10. ' les' → logprob: -8.756041526794434

Token 24: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5796244740486145
    2. ' l' → logprob: -0.8296244740486145
    3. 's' → logprob: -7.079624652862549
    4. ' ' → logprob: -7.704624652862549
    5. '#' → logprob: -7.829624652862549
    6. 'la' → logprob: -7.954624652862549
    7. 'entrée' → logprob: -8.20462417602539
    8. ' la' → logprob: -8.76712417602539
    9. 'd' → logprob: -8.82962417602539
    10. ' ' → logprob: -9.39212417602539

Token 25: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.013208824209868908
    2. 'entrée' → logprob: -4.763208866119385
    3. ''' → logprob: -5.888208866119385
    4. '’entrée' → logprob: -7.013208866119385
    5. ''import' → logprob: -8.513208389282227
    6. 'a' → logprob: -8.638208389282227
    7. 'e' → logprob: -8.763208389282227
    8. ''er' → logprob: -9.263208389282227
    9. ''ent' → logprob: -9.388208389282227
    10. ''environnement' → logprob: -10.638208389282227

Token 26: ' standard' (ID: 7024)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.058450642973184586
    2. '```' → logprob: -3.308450698852539
    3. '.' → logprob: -5.058450698852539
    4. '
' → logprob: -5.683450698852539
    5. '\n' → logprob: -5.683450698852539
    6. '#' → logprob: -5.933450698852539
    7. '\' → logprob: -6.183450698852539
    8. ',' → logprob: -6.433450698852539
    9. ' import' → logprob: -8.683450698852539
    10. '

' → logprob: -8.933450698852539

Token 27: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.19551320374011993
    2. '```' → logprob: -1.9455132484436035
    3. '\n' → logprob: -4.1955132484436035
    4. '
' → logprob: -5.0705132484436035
    5. '.' → logprob: -5.1955132484436035
    6. '#' → logprob: -5.9455132484436035
    7. '\' → logprob: -6.3205132484436035
    8. '' → logprob: -7.0705132484436035
    9. ',' → logprob: -7.0705132484436035
    10. ' import' → logprob: -8.070512771606445

Token 28: ' ainsi' (ID: 16371)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.23365621268749237
    2. ',' → logprob: -2.733656167984009
    3. ' import' → logprob: -2.983656167984009
    4. '.' → logprob: -3.608656167984009
    5. '#' → logprob: -4.233656406402588
    6. ' ,' → logprob: -4.608656406402588
    7. ' et' → logprob: -4.733656406402588
    8. '```' → logprob: -4.858656406402588
    9. ' ' → logprob: -5.358656406402588
    10. '\n' → logprob: -5.733656406402588

Token 29: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.017711203545331955
    2. ' qu' → logprob: -4.392711162567139
    3. 'que' → logprob: -5.517711162567139
    4. ' ' → logprob: -7.517711162567139
    5. 'qu' → logprob: -8.517711639404297
    6. '#' → logprob: -9.017711639404297
    7. ',' → logprob: -9.642711639404297
    8. '.' → logprob: -10.392711639404297
    9. ' ' → logprob: -10.517711639404297
    10. '```' → logprob: -10.517711639404297

Token 30: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4209480583667755
    2. ' la' → logprob: -1.9209480285644531
    3. 'l' → logprob: -2.295948028564453
    4. 'la' → logprob: -3.420948028564453
    5. ' les' → logprob: -3.545948028564453
    6. 'le' → logprob: -4.545948028564453
    7. 'les' → logprob: -4.545948028564453
    8. ' d' → logprob: -5.170948028564453
    9. ' des' → logprob: -5.920948028564453
    10. ' le' → logprob: -6.670948028564453

Token 31: ' régl' (ID: 91560)
  Prédit: ' flux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flux' → logprob: -0.7853102087974548
    2. ' traitement' → logprob: -2.4103102684020996
    3. ' passage' → logprob: -2.5353102684020996
    4. ' gestion' → logprob: -2.7853102684020996
    5. ' red' → logprob: -2.9103102684020996
    6. ' chemin' → logprob: -3.1603102684020996
    7. ' comportement' → logprob: -3.2853102684020996
    8. 's' → logprob: -4.1603102684021
    9. 'import' → logprob: -4.1603102684021
    10. ' import' → logprob: -4.1603102684021

Token 32: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.0381573848426342
    2. 'ages' → logprob: -3.2881574630737305
    3. 'e' → logprob: -10.41315746307373
    4. '```' → logprob: -11.03815746307373
    5. 'âge' → logprob: -11.16315746307373
    6. '#' → logprob: -11.53815746307373
    7. 'a' → logprob: -11.66315746307373
    8. ' age' → logprob: -11.66315746307373
    9. 'agement' → logprob: -11.91315746307373
    10. 'ement' → logprob: -11.91315746307373

Token 33: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8926185369491577
    2. ' de' → logprob: -1.2676185369491577
    3. ' des' → logprob: -1.7676185369491577
    4. ' ' → logprob: -2.1426186561584473
    5. ' d' → logprob: -4.767618656158447
    6. ' du' → logprob: -5.142618656158447
    7. ' s' → logprob: -6.392618656158447
    8. '  ' → logprob: -6.892618656158447
    9. '.' → logprob: -7.267618656158447
    10. ' ' → logprob: -7.267618656158447

Token 34: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6375026702880859
    2. ' l' → logprob: -0.7625026702880859
    3. ' la' → logprob: -6.512502670288086
    4. 'la' → logprob: -6.887502670288086
    5. ' sys' → logprob: -7.887502670288086
    6. 'enc' → logprob: -8.262502670288086
    7. ' lint' → logprob: -8.262502670288086
    8. ' ' → logprob: -8.887502670288086
    9. 's' → logprob: -9.012502670288086
    10. 'sys' → logprob: -9.200002670288086

Token 35: ' limite' (ID: 48939)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.570195734500885
    2. 't' → logprob: -2.4451956748962402
    3. 'f' → logprob: -3.0701956748962402
    4. 'buffer' → logprob: -3.4451956748962402
    5. 'enc' → logprob: -3.6951956748962402
    6. 'c' → logprob: -3.9451956748962402
    7. '#' → logprob: -4.32019567489624
    8. 'fl' → logprob: -4.57019567489624
    9. ' enc' → logprob: -4.57019567489624
    10. 'encoding' → logprob: -4.57019567489624

Token 36: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13814185559749603
    2. ' ' → logprob: -2.3881418704986572
    3. ' de' → logprob: -4.263141632080078
    4. ' d' → logprob: -5.013141632080078
    5. 's' → logprob: -5.138141632080078
    6. ' _' → logprob: -6.013141632080078
    7. '_de' → logprob: -6.513141632080078
    8. '\' → logprob: -6.888141632080078
    9. ' des' → logprob: -7.138141632080078
    10. '_max' → logprob: -7.138141632080078

Token 37: ' réc' (ID: 36254)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04002007097005844
    2. 'rec' → logprob: -4.040019989013672
    3. ' réc' → logprob: -4.040019989013672
    4. 're' → logprob: -6.540019989013672
    5. 'ré' → logprob: -7.040019989013672
    6. ' ' → logprob: -7.665019989013672
    7. ' r' → logprob: -8.290019989013672
    8. 's' → logprob: -8.540019989013672
    9. ' recursion' → logprob: -8.540019989013672
    10. 'stack' → logprob: -9.540019989013672

Token 38: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.06256090104579926
    2. 'urs' → logprob: -3.062560796737671
    3. 'ur' → logprob: -4.68756103515625
    4. 'u' → logprob: -5.43756103515625
    5. 'ursive' → logprob: -8.93756103515625
    6. 'urrence' → logprob: -10.43756103515625
    7. '_' → logprob: -10.93756103515625
    8. 'usion' → logprob: -11.18756103515625
    9. '   ' → logprob: -11.18756103515625
    10. 'urse' → logprob: -11.43756103515625

Token 39: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6579097509384155
    2. '.' → logprob: -1.6579097509384155
    3. 'import' → logprob: -2.532909870147705
    4. '#' → logprob: -2.532909870147705
    5. '\n' → logprob: -3.032909870147705
    6. '
' → logprob: -3.657909870147705
    7. '' → logprob: -4.282909870147705
    8. '\' → logprob: -4.407909870147705
    9. '<|end|>' → logprob: -4.532909870147705
    10. ',' → logprob: -5.282909870147705

Token 40: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12530790269374847
    2. '\n' → logprob: -3.25030779838562
    3. '#' → logprob: -3.50030779838562
    4. '```' → logprob: -3.87530779838562
    5. '\' → logprob: -4.625308036804199
    6. '.' → logprob: -5.125308036804199
    7. '
' → logprob: -5.500308036804199
    8. '' → logprob: -6.125308036804199
    9. ' 
' → logprob: -6.625308036804199
    10. '  
' → logprob: -7.000308036804199

Token 41: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.000596043246332556
    2. ' ' → logprob: -7.875596046447754
    3. ' space' → logprob: -9.500596046447754
    4. ' ' → logprob: -9.875596046447754
    5. 'sys' → logprob: -10.125596046447754
    6. ' system' → logprob: -11.125596046447754
    7. ' collections' → logprob: -11.250596046447754
    8. '	sys' → logprob: -12.125596046447754
    9. '  ' → logprob: -12.375596046447754
    10. ' ﻿' → logprob: -12.500596046447754

Token 42: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02231956645846367
    2. ' ' → logprob: -4.022319793701172
    3. 'import' → logprob: -5.522319793701172
    4. '.' → logprob: -9.897319793701172
    5. '<|end|>' → logprob: -10.272319793701172
    6. ' space' → logprob: -10.522319793701172
    7. ' .' → logprob: -11.272319793701172
    8. ' ' → logprob: -11.772319793701172
    9. '	import' → logprob: -12.022319793701172
    10. '  ' → logprob: -12.272319793701172

Token 43: ' exit' (ID: 10654)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.4670720100402832
    2. ' set' → logprob: -1.0920720100402832
    3. ' exit' → logprob: -3.717072010040283
    4. 'exit' → logprob: -4.967072010040283
    5. ' argv' → logprob: -5.592072010040283
    6. 'argv' → logprob: -6.467072010040283
    7. ' recursion' → logprob: -7.842072010040283
    8. 'rec' → logprob: -8.717071533203125
    9. ' max' → logprob: -8.842071533203125
    10. ' ' → logprob: -9.217071533203125

Token 44: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06854232400655746
    2. '<|end|>' → logprob: -3.568542242050171
    3. '

' → logprob: -3.943542242050171
    4. '' → logprob: -4.81854248046875
    5. ',' → logprob: -5.06854248046875
    6. 'newline' → logprob: -7.06854248046875
    7. 'import' → logprob: -7.31854248046875
    8. '<|end|>' → logprob: -7.69354248046875
    9. '\n' → logprob: -7.94354248046875
    10. '
' → logprob: -8.06854248046875

Token 45: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.07918058335781097
    2. ' set' → logprob: -2.5791804790496826
    3. ' recursion' → logprob: -9.329180717468262
    4. 'rec' → logprob: -9.454180717468262
    5. 'stdin' → logprob: -10.329180717468262
    6. 'get' → logprob: -10.829180717468262
    7. 'argv' → logprob: -10.954180717468262
    8. '#set' → logprob: -11.204180717468262
    9. ',set' → logprob: -12.079180717468262
    10. '.set' → logprob: -12.204180717468262

Token 46: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -4.6087021473795176e-05
    2. '_rec' → logprob: -10.750045776367188
    3. 're' → logprob: -10.875045776367188
    4. '_' → logprob: -12.750045776367188
    5. 'limit' → logprob: -14.125045776367188
    6. 'ref' → logprob: -14.375045776367188
    7. ' recursion' → logprob: -15.625045776367188
    8. 'res' → logprob: -15.875045776367188
    9. 'depth' → logprob: -16.000045776367188
    10. '_re' → logprob: -16.000045776367188

Token 47: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -2.3438327843905427e-05
    2. 'urs' → logprob: -10.87502384185791
    3. 'ur' → logprob: -13.75002384185791
    4. 'ursive' → logprob: -13.87502384185791
    5. 'usion' → logprob: -14.00002384185791
    6. 'ursor' → logprob: -14.37502384185791
    7. 'limit' → logprob: -15.00002384185791
    8. '[' → logprob: -16.000022888183594
    9. '`' → logprob: -16.375022888183594
    10. '_' → logprob: -16.500022888183594

Token 48: 'limit' (ID: 19698)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.15653051435947418
    2. 'limit' → logprob: -3.0315306186676025
    3. 'tion' → logprob: -3.1565306186676025
    4. 'ion' → logprob: -3.4065306186676025
    5. 's' → logprob: -3.9065306186676025
    6. 'ursion' → logprob: -7.656530380249023
    7. 'ons' → logprob: -9.406530380249023
    8. 'ision' → logprob: -10.031530380249023
    9. 'sl' → logprob: -10.156530380249023
    10. '_limit' → logprob: -10.906530380249023

Token 49: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' stderr' (ID: 65281)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.523525595664978
    2. 'argv' → logprob: -2.1485257148742676
    3. ' stdin' → logprob: -2.3985257148742676
    4. 'stdout' → logprob: -2.6485257148742676
    5. 'stderr' → logprob: -2.6485257148742676
    6. ' argv' → logprob: -3.6485257148742676
    7. ' stderr' → logprob: -3.7735257148742676
    8. ' stdout' → logprob: -5.398525714874268
    9. 'version' → logprob: -6.398525714874268
    10. 'set' → logprob: -6.898525714874268

Token 51: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5337937474250793
    2. '

' → logprob: -1.2837936878204346
    3. '<|end|>' → logprob: -2.0337936878204346
    4. '' → logprob: -6.533793926239014
    5. '<|end|>' → logprob: -6.908793926239014
    6. '\n' → logprob: -7.158793926239014
    7. ',' → logprob: -7.283793926239014
    8. '


' → logprob: -8.158793449401855
    9. ' 

' → logprob: -8.283793449401855
    10. 'newline' → logprob: -8.283793449401855

Token 52: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.7512293457984924
    2. 'stdout' → logprob: -1.0012292861938477
    3. ' stdin' → logprob: -2.5012292861938477
    4. ' stdout' → logprob: -3.1262292861938477
    5. 'argv' → logprob: -3.7512292861938477
    6. ' argv' → logprob: -5.001229286193848
    7. 'set' → logprob: -6.626229286193848
    8. 'version' → logprob: -7.126229286193848
    9. ' set' → logprob: -7.251229286193848
    10. ' version' → logprob: -7.626229286193848

Token 53: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6591123938560486
    2. '

' → logprob: -0.7841123938560486
    3. '<|end|>' → logprob: -3.9091124534606934
    4. '
' → logprob: -5.909112453460693
    5. ',' → logprob: -7.284112453460693
    6. ' 

' → logprob: -7.659112453460693
    7. '<|end|>' → logprob: -7.784112453460693
    8. '' → logprob: -7.784112453460693
    9. ' ' → logprob: -8.159111976623535
    10. '\n' → logprob: -8.659111976623535

Token 55: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5558165311813354
    2. 'def' → logprob: -1.8058165311813354
    3. ' def' → logprob: -2.180816650390625
    4. '#' → logprob: -2.930816650390625
    5. ' 

' → logprob: -3.555816650390625
    6. ' #' → logprob: -3.805816650390625
    7. ' ' → logprob: -4.180816650390625
    8. 'import' → logprob: -5.180816650390625
    9. '  

' → logprob: -5.805816650390625
    10. ' 
' → logprob: -5.930816650390625

Token 56: 'ation' (ID: 387)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.097646713256836
    2. 'ation' → logprob: -2.097646713256836
    3. ' math' → logprob: -2.472646713256836
    4. ' itertools' → logprob: -2.597646713256836
    5. ' des' → logprob: -2.847646713256836
    6. 'er' → logprob: -3.097646713256836
    7. ' pandas' → logprob: -3.097646713256836
    8. ' random' → logprob: -3.222646713256836
    9. ' numpy' → logprob: -3.347646713256836
    10. ' collections' → logprob: -3.347646713256836

Token 57: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14818820357322693
    2. '<|end|>' → logprob: -3.2731881141662598
    3. ' os' → logprob: -3.3981881141662598
    4. ' ' → logprob: -3.8981881141662598
    5. ' pandas' → logprob: -4.64818811416626
    6. ' des' → logprob: -5.02318811416626
    7. ' from' → logprob: -5.02318811416626
    8. ' math' → logprob: -5.14818811416626
    9. ' random' → logprob: -6.14818811416626
    10. 'from' → logprob: -6.27318811416626

Token 58: ' la' (ID: 557)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.11206848174333572
    2. ' math' → logprob: -2.4870684146881104
    3. ' argparse' → logprob: -5.2370686531066895
    4. ' random' → logprob: -5.4870686531066895
    5. ' collections' → logprob: -5.7370686531066895
    6. ' time' → logprob: -5.8620686531066895
    7. ' threading' → logprob: -5.9870686531066895
    8. ' logging' → logprob: -6.7370686531066895
    9. ' io' → logprob: -7.4870686531066895
    10. ' traceback' → logprob: -7.4870686531066895

Token 59: ' fonction' (ID: 17610)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.3038296699523926
    2. ' math' → logprob: -1.8038296699523926
    3. ' threading' → logprob: -3.1788296699523926
    4. ' logging' → logprob: -4.303829669952393
    5. ' time' → logprob: -4.553829669952393
    6. ' argparse' → logprob: -4.803829669952393
    7. ' module' → logprob: -5.428829669952393
    8. ' io' → logprob: -5.803829669952393
    9. ' collections' → logprob: -5.803829669952393
    10. ' random' → logprob: -6.053829669952393

Token 60: ' reduce' (ID: 10389)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.37404829263687134
    2. ' input' → logprob: -2.6240482330322266
    3. ' randint' → logprob: -2.7490482330322266
    4. ' random' → logprob: -3.3740482330322266
    5. ' argv' → logprob: -3.8740482330322266
    6. ' write' → logprob: -4.249048233032227
    7. ' import' → logprob: -4.499048233032227
    8. ' readline' → logprob: -4.624048233032227
    9. 'print' → logprob: -4.874048233032227
    10. ' traceback' → logprob: -4.874048233032227

Token 61: ' du' (ID: 1462)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.42211559414863586
    2. ' from' → logprob: -1.1721155643463135
    3. ',' → logprob: -3.4221155643463135
    4. ' ' → logprob: -6.547115802764893
    5. ' ,' → logprob: -7.922115802764893
    6. '	from' → logprob: -10.172115325927734
    7. ')' → logprob: -10.297115325927734
    8. '<|end|>' → logprob: -10.297115325927734
    9. '(' → logprob: -10.422115325927734
    10. ' (' → logprob: -11.297115325927734

Token 62: ' module' (ID: 8827)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.0010331686353310943
    2. 'fun' → logprob: -6.876033306121826
    3. ' fun' → logprob: -15.501032829284668
    4. ' funct' → logprob: -16.126033782958984
    5. 'from' → logprob: -17.501033782958984
    6. 'f' → logprob: -17.626033782958984
    7. '	f' → logprob: -18.751033782958984
    8. ' ' → logprob: -18.751033782958984
    9. ' itertools' → logprob: -19.001033782958984
    10. 'ft' → logprob: -19.001033782958984

Token 63: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.0006288022268563509
    2. 'fun' → logprob: -7.37562894821167
    3. ' fun' → logprob: -13.750628471374512
    4. ' ' → logprob: -13.875628471374512
    5. ' funct' → logprob: -15.500628471374512
    6. ' from' → logprob: -17.875629425048828
    7. 'from' → logprob: -18.000629425048828
    8. ' ' → logprob: -18.000629425048828
    9. ' itertools' → logprob: -18.000629425048828
    10. ' math' → logprob: -18.750629425048828

Token 64: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.32218876481056213
    2. ' from' → logprob: -1.3221887350082397
    3. ',' → logprob: -4.822188854217529
    4. ' ,' → logprob: -7.322188854217529
    5. ' ' → logprob: -8.947188377380371
    6. '```' → logprob: -10.947188377380371
    7. '	from' → logprob: -11.822188377380371
    8. ' ' → logprob: -12.447188377380371
    9. ',
' → logprob: -13.072188377380371
    10. ' fro' → logprob: -13.072188377380371

Token 65: ' qui' (ID: 2780)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5007670521736145
    2. ' from' → logprob: -1.1257669925689697
    3. ' functools' → logprob: -3.5007669925689697
    4. ' ' → logprob: -4.375767230987549
    5. 'import' → logprob: -5.125767230987549
    6. ' import' → logprob: -5.250767230987549
    7. ' itertools' → logprob: -5.750767230987549
    8. ')' → logprob: -6.375767230987549
    9. ',' → logprob: -6.375767230987549
    10. ' )' → logprob: -7.000767230987549

Token 66: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.2260778844356537
    2. ' ' → logprob: -1.726077914237976
    3. ' functools' → logprob: -5.351078033447266
    4. ' from' → logprob: -5.476078033447266
    5. ' est' → logprob: -5.601078033447266
    6. 'from' → logprob: -5.976078033447266
    7. ' facilite' → logprob: -6.351078033447266
    8. ' permettra' → logprob: -6.851078033447266
    9. ' sert' → logprob: -6.851078033447266
    10. ' fournit' → logprob: -7.601078033447266

Token 67: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.347175657749176
    2. ' d' → logprob: -1.3471755981445312
    3. 'de' → logprob: -4.597175598144531
    4. 'd' → logprob: -4.722175598144531
    5. ' ' → logprob: -5.347175598144531
    6. 't' → logprob: -5.722175598144531
    7. '	' → logprob: -6.722175598144531
    8. '	d' → logprob: -6.722175598144531
    9. ' ' → logprob: -7.472175598144531
    10. 'import' → logprob: -7.472175598144531

Token 68: ''ap' (ID: 31362)
  Prédit: ''effect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''effect' → logprob: -0.23081755638122559
    2. ''ap' → logprob: -2.6058175563812256
    3. 'e' → logprob: -2.9808175563812256
    4. ' effectuer' → logprob: -3.7308175563812256
    5. ' appliquer' → logprob: -4.730817794799805
    6. 'éc' → logprob: -4.980817794799805
    7. ''é' → logprob: -4.980817794799805
    8. '’effect' → logprob: -5.230817794799805
    9. ''ex' → logprob: -5.480817794799805
    10. ''utiliser' → logprob: -5.605817794799805

Token 69: 'pliquer' (ID: 101028)
  Prédit: 'pliquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pliquer' → logprob: -0.9753395318984985
    2. 'p' → logprob: -1.2253395318984985
    3. 'pl' → logprob: -1.6003395318984985
    4. 'ply' → logprob: -2.600339412689209
    5. 'pli' → logprob: -3.475339412689209
    6. 'plic' → logprob: -5.100339412689209
    7. 'pel' → logprob: -5.350339412689209
    8. 'plier' → logprob: -5.850339412689209
    9. 'ple' → logprob: -6.725339412689209
    10. 'pp' → logprob: -7.100339412689209

Token 70: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10436756908893585
    2. ' functools' → logprob: -2.72936749458313
    3. '<|end|>' → logprob: -3.60436749458313
    4. ' reduce' → logprob: -5.979367733001709
    5. ' a' → logprob: -6.479367733001709
    6. ' la' → logprob: -7.229367733001709
    7. 'reduce' → logprob: -7.729367733001709
    8. '<|end|>' → logprob: -7.729367733001709
    9. ' the' → logprob: -8.60436725616455
    10. ' un' → logprob: -8.85436725616455

Token 71: ' fonction' (ID: 17610)
  Prédit: ' function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.17253300547599792
    2. ' fonction' → logprob: -2.6725330352783203
    3. '<|end|>' → logprob: -3.6725330352783203
    4. ' ' → logprob: -3.7975330352783203
    5. 'fonction' → logprob: -4.29753303527832
    6. 'n' → logprob: -4.79753303527832
    7. 'function' → logprob: -5.04753303527832
    8. ' sequence' → logprob: -6.04753303527832
    9. ' single' → logprob: -6.92253303527832
    10. 'f' → logprob: -6.92253303527832

Token 72: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' façon' (ID: 33381)
  Prédit: ' réduction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réduction' → logprob: -0.42047470808029175
    2. 'ré' → logprob: -2.6704747676849365
    3. 'fonction' → logprob: -2.9204747676849365
    4. ' functools' → logprob: -3.0454747676849365
    5. 'reduce' → logprob: -3.2954747676849365
    6. ' manière' → logprob: -3.5454747676849365
    7. 'r' → logprob: -4.545474529266357
    8. ',' → logprob: -4.545474529266357
    9. ' reduction' → logprob: -4.670474529266357
    10. ' façon' → logprob: -4.670474529266357

Token 74: ' cumulative' (ID: 75628)
  Prédit: ' successive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' successive' → logprob: -1.3681615591049194
    2. ' répét' → logprob: -1.6181615591049194
    3. ' rédu' → logprob: -2.118161678314209
    4. ' functools' → logprob: -2.118161678314209
    5. 'reduce' → logprob: -2.368161678314209
    6. ' cumulative' → logprob: -3.118161678314209
    7. 'c' → logprob: -3.618161678314209
    8. ' fonction' → logprob: -3.743161678314209
    9. ' reduce' → logprob: -3.993161678314209
    10. 'fonction' → logprob: -4.118161678314209

Token 75: ' à' (ID: 1221)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.4851226210594177
    2. 'from' → logprob: -1.7351226806640625
    3. ' ' → logprob: -2.4851226806640625
    4. ' à' → logprob: -3.1101226806640625
    5. ',' → logprob: -3.3601226806640625
    6. ' au' → logprob: -3.8601226806640625
    7. ' de' → logprob: -4.9851226806640625
    8. ' des' → logprob: -5.2351226806640625
    9. ' to' → logprob: -5.9851226806640625
    10. '<|end|>' → logprob: -6.6101226806640625

Token 76: ' une' (ID: 2463)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.002387422136962414
    2. ' une' → logprob: -7.002387523651123
    3. ' un' → logprob: -7.627387523651123
    4. ' collections' → logprob: -7.877387523651123
    5. ' des' → logprob: -8.127387046813965
    6. '<|end|>' → logprob: -9.877387046813965
    7. ' l' → logprob: -10.002387046813965
    8. ' ' → logprob: -10.002387046813965
    9. ' sequences' → logprob: -10.127387046813965
    10. ' la' → logprob: -10.752387046813965

Token 77: ' sé' (ID: 7462)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.49415796995162964
    2. ' liste' → logprob: -2.2441580295562744
    3. ' list' → logprob: -2.8691580295562744
    4. 'sequence' → logprob: -2.9941580295562744
    5. ' functools' → logprob: -2.9941580295562744
    6. ' sé' → logprob: -3.6191580295562744
    7. ' iterable' → logprob: -3.6191580295562744
    8. 's' → logprob: -3.8691580295562744
    9. 'liste' → logprob: -4.244157791137695
    10. 'sé' → logprob: -4.369157791137695

Token 78: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.007962547242641449
    2. 'rie' → logprob: -4.882962703704834
    3. 'q' → logprob: -9.132962226867676
    4. 'QUENCE' → logprob: -9.257962226867676
    5. 'qu' → logprob: -10.132962226867676
    6. '#' → logprob: -10.632962226867676
    7. 'quences' → logprob: -10.882962226867676
    8. 'r' → logprob: -11.132962226867676
    9. 'que' → logprob: -11.257962226867676
    10. '-' → logprob: -11.632962226867676

Token 79: '
' (ID: 198)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.8516804575920105
    2. 'from' → logprob: -1.2266805171966553
    3. ',' → logprob: -1.3516805171966553
    4. ' ,' → logprob: -3.9766805171966553
    5. ' ' → logprob: -7.351680278778076
    6. 'f' → logprob: -7.726680278778076
    7. ' f' → logprob: -8.351680755615234
    8. 'import' → logprob: -8.476680755615234
    9. ' fro' → logprob: -8.976680755615234
    10. '.' → logprob: -9.476680755615234

Token 80: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.23087747395038605
    2. ' from' → logprob: -1.6058775186538696
    3. ',' → logprob: -5.23087739944458
    4. ' ,' → logprob: -9.730877876281738
    5. 'f' → logprob: -11.855877876281738
    6. ' fro' → logprob: -12.105877876281738
    7. '	from' → logprob: -12.855877876281738
    8. 'fro' → logprob: -12.980877876281738
    9. '```' → logprob: -13.105877876281738
    10. ' functools' → logprob: -13.105877876281738

Token 81: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.0010544841643422842
    2. ' ' → logprob: -6.876054286956787
    3. ' fun' → logprob: -11.251054763793945
    4. ' ' → logprob: -12.001054763793945
    5. 'fun' → logprob: -13.626054763793945
    6. ' funct' → logprob: -14.126054763793945
    7. ' ﻿' → logprob: -15.126054763793945
    8. ' f' → logprob: -16.126054763793945
    9. ' ​' → logprob: -17.126054763793945
    10. '  ' → logprob: -17.126054763793945

Token 82: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.009760575369000435
    2. ' ' → logprob: -4.75976037979126
    3. 'import' → logprob: -6.88476037979126
    4. '	import' → logprob: -9.884760856628418
    5. '.' → logprob: -10.259760856628418
    6. '.import' → logprob: -11.259760856628418
    7. ' .' → logprob: -11.384760856628418
    8. ' ' → logprob: -12.259760856628418
    9. '_import' → logprob: -13.759760856628418
    10. ' impor' → logprob: -14.009760856628418

Token 83: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.2811753749847412
    2. 'reduce' → logprob: -1.4061753749847412
    3. 're' → logprob: -12.03117561340332
    4. 'redu' → logprob: -12.40617561340332
    5. '.reduce' → logprob: -12.78117561340332
    6. '_reduce' → logprob: -13.15617561340332
    7. ' redu' → logprob: -13.28117561340332
    8. 'red' → logprob: -13.53117561340332
    9. ' ' → logprob: -13.65617561340332
    10. ' reduct' → logprob: -13.90617561340332

Token 84: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1419496089220047
    2. '
' → logprob: -2.3919496536254883
    3. '<|end|>' → logprob: -3.8919496536254883
    4. '#' → logprob: -5.391949653625488
    5. 'import' → logprob: -5.516949653625488
    6. ',' → logprob: -5.516949653625488
    7. '<|end|>' → logprob: -5.766949653625488
    8. 'def' → logprob: -6.891949653625488
    9. ' 

' → logprob: -6.891949653625488
    10. '


' → logprob: -7.141949653625488

Token 85: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8662835955619812
    2. '#' → logprob: -0.9912835955619812
    3. '
' → logprob: -1.741283655166626
    4. 'import' → logprob: -3.991283655166626
    5. 'class' → logprob: -4.991283416748047
    6. 'def' → logprob: -5.616283416748047
    7. '


' → logprob: -6.866283416748047
    8. '
' → logprob: -7.491283416748047
    9. '



' → logprob: -7.741283416748047
    10. ' 

' → logprob: -7.866283416748047

Token 86: ' Import' (ID: 19998)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7604309916496277
    2. ' os' → logprob: -1.3854310512542725
    3. ' import' → logprob: -1.5104310512542725
    4. 'import' → logprob: -3.2604310512542725
    5. ' collections' → logprob: -4.760430812835693
    6. 'math' → logprob: -5.260430812835693
    7. ' itertools' → logprob: -6.260430812835693
    8. '#' → logprob: -6.385430812835693
    9. ' typing' → logprob: -6.385430812835693
    10. 'os' → logprob: -7.010430812835693

Token 87: 'ation' (ID: 387)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.48233044147491455
    2. 'from' → logprob: -1.6073304414749146
    3. 'ort' → logprob: -2.357330322265625
    4. 'ation' → logprob: -3.107330322265625
    5. 'import' → logprob: -4.107330322265625
    6. ' from' → logprob: -5.232330322265625
    7. 'er' → logprob: -5.482330322265625
    8. 'stat' → logprob: -5.982330322265625
    9. 'at' → logprob: -6.607330322265625
    10. 'aport' → logprob: -6.607330322265625

Token 88: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4835626482963562
    2. ' des' → logprob: -2.358562707901001
    3. '<|end|>' → logprob: -2.608562707901001
    4. ' de' → logprob: -2.983562707901001
    5. ' os' → logprob: -3.233562707901001
    6. ' math' → logprob: -3.233562707901001
    7. ' import' → logprob: -3.733562707901001
    8. ' from' → logprob: -4.483562469482422
    9. 'import' → logprob: -4.483562469482422
    10. ' ' → logprob: -4.608562469482422

Token 89: ' toutes' (ID: 17502)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.08074603229761124
    2. ' itertools' → logprob: -2.7057459354400635
    3. ' operator' → logprob: -5.205746173858643
    4. ' collections' → logprob: -5.455746173858643
    5. 'math' → logprob: -7.705746173858643
    6. ' os' → logprob: -7.955746173858643
    7. 'operator' → logprob: -9.580745697021484
    8. 'collections' → logprob: -9.830745697021484
    9. ' typing' → logprob: -10.705745697021484
    10. ' random' → logprob: -11.955745697021484

Token 90: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' fonctions' (ID: 87283)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.014014116488397121
    2. ' itertools' → logprob: -5.01401424407959
    3. ' collections' → logprob: -5.13901424407959
    4. ' os' → logprob: -7.88901424407959
    5. ' functools' → logprob: -8.63901424407959
    6. 'collections' → logprob: -8.88901424407959
    7. ' random' → logprob: -9.13901424407959
    8. ' ' → logprob: -9.63901424407959
    9. '_math' → logprob: -9.76401424407959
    10. ' abc' → logprob: -9.88901424407959

Token 92: ' et' (ID: 859)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.48525160551071167
    2. ' from' → logprob: -1.8602516651153564
    3. 'from' → logprob: -2.4852516651153564
    4. 'import' → logprob: -2.6102516651153564
    5. ' os' → logprob: -3.6102516651153564
    6. ' import' → logprob: -3.8602516651153564
    7. '<|end|>' → logprob: -4.485251426696777
    8. 'math' → logprob: -5.110251426696777
    9. ' ' → logprob: -5.860251426696777
    10. '_math' → logprob: -7.110251426696777

Token 93: ' classes' (ID: 9778)
  Prédit: ' classes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' classes' → logprob: -0.2695673704147339
    2. '<|end|>' → logprob: -2.3945674896240234
    3. ' math' → logprob: -3.1445674896240234
    4. ' variables' → logprob: -3.3945674896240234
    5. ' modules' → logprob: -3.8945674896240234
    6. ' constantes' → logprob: -4.644567489624023
    7. ' ' → logprob: -5.144567489624023
    8. 'classes' → logprob: -5.269567489624023
    9. ' méthodes' → logprob: -5.644567489624023
    10. ' os' → logprob: -5.769567489624023

Token 94: ' du' (ID: 1462)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.20453402400016785
    2. ' ' → logprob: -2.3295340538024902
    3. 'from' → logprob: -2.8295340538024902
    4. '<|end|>' → logprob: -4.32953405380249
    5. 'import' → logprob: -5.07953405380249
    6. ' import' → logprob: -5.20453405380249
    7. ' ' → logprob: -6.95453405380249
    8. ' de' → logprob: -7.07953405380249
    9. ' math' → logprob: -7.70453405380249
    10. ' ,' → logprob: -8.954533576965332

Token 95: ' module' (ID: 8827)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.007425245363265276
    2. ' itertools' → logprob: -5.507425308227539
    3. ' collections' → logprob: -5.757425308227539
    4. ' os' → logprob: -9.257425308227539
    5. ' re' → logprob: -10.632425308227539
    6. ' operator' → logprob: -10.757425308227539
    7. ' typing' → logprob: -11.382425308227539
    8. 'math' → logprob: -11.382425308227539
    9. ' tkinter' → logprob: -12.382425308227539
    10. ' functools' → logprob: -12.632425308227539

Token 96: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.001613292726688087
    2. ' collections' → logprob: -7.251613140106201
    3. 'math' → logprob: -7.626613140106201
    4. ' itertools' → logprob: -8.00161361694336
    5. ' os' → logprob: -9.75161361694336
    6. ' re' → logprob: -11.37661361694336
    7. ' operator' → logprob: -12.37661361694336
    8. ' typing' → logprob: -13.25161361694336
    9. 'collections' → logprob: -13.25161361694336
    10. ' random' → logprob: -13.50161361694336

Token 97: ',' (ID: 11)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.32843390107154846
    2. 'from' → logprob: -1.578433871269226
    3. ' import' → logprob: -2.8284339904785156
    4. 'import' → logprob: -4.578433990478516
    5. ' ' → logprob: -6.078433990478516
    6. ',' → logprob: -6.828433990478516
    7. ' as' → logprob: -7.578433990478516
    8. ' ,' → logprob: -8.703433990478516
    9. ' ' → logprob: -9.703433990478516
    10. '```' → logprob: -10.328433990478516

Token 98: ' utiles' (ID: 121161)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7431493997573853
    2. ' from' → logprob: -1.2431493997573853
    3. ' import' → logprob: -2.2431492805480957
    4. 'import' → logprob: -2.8681492805480957
    5. '*' → logprob: -3.6181492805480957
    6. '<|end|>' → logprob: -3.7431492805480957
    7. ' *' → logprob: -4.743149280548096
    8. ' ' → logprob: -5.118149280548096
    9. ' itertools' → logprob: -5.743149280548096
    10. ' as' → logprob: -5.993149280548096

Token 99: ' pour' (ID: 1930)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -1.4234423637390137
    2. ' for' → logprob: -1.6734423637390137
    3. ' pour' → logprob: -1.7984423637390137
    4. 'import' → logprob: -2.0484423637390137
    5. ' itertools' → logprob: -2.4234423637390137
    6. ' as' → logprob: -2.9234423637390137
    7. ' from' → logprob: -3.5484423637390137
    8. ',' → logprob: -3.7984423637390137
    9. ' ' → logprob: -4.048442363739014
    10. '.' → logprob: -4.298442363739014

Token 100: ' créer' (ID: 40938)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4626363515853882
    2. ' l' → logprob: -1.4626363515853882
    3. ' les' → logprob: -2.7126364707946777
    4. 'l' → logprob: -4.712636470794678
    5. ' manip' → logprob: -4.712636470794678
    6. ' des' → logprob: -4.837636470794678
    7. ' itertools' → logprob: -4.837636470794678
    8. ' la' → logprob: -4.962636470794678
    9. ' ' → logprob: -5.087636470794678
    10. ' comb' → logprob: -5.837636470794678

Token 101: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1237182691693306
    2. ' ' → logprob: -3.12371826171875
    3. 's' → logprob: -3.87371826171875
    4. 'des' → logprob: -4.24871826171875
    5. 'com' → logprob: -5.24871826171875
    6. '<|end|>' → logprob: -5.37371826171875
    7. ' permutations' → logprob: -5.49871826171875
    8. 'import' → logprob: -6.24871826171875
    9. ',' → logprob: -6.37371826171875
    10. ' itertools' → logprob: -6.49871826171875

Token 102: ' it' (ID: 480)
  Prédit: ' outils'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' outils' → logprob: -0.44812947511672974
    2. ' tools' → logprob: -2.573129415512085
    3. ' itertools' → logprob: -2.823129415512085
    4. 'tools' → logprob: -3.073129415512085
    5. ' ' → logprob: -3.323129415512085
    6. ' combin' → logprob: -3.448129415512085
    7. ' permutations' → logprob: -3.948129415512085
    8. 'import' → logprob: -3.948129415512085
    9. ' iter' → logprob: -4.573129653930664
    10. ' combinations' → logprob: -4.823129653930664

Token 103: 'ér' (ID: 2156)
  Prédit: 'ertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.1537589579820633
    2. 'tools' → logprob: -2.028759002685547
    3. 'er' → logprob: -5.278759002685547
    4. 'import' → logprob: -5.778759002685547
    5. 'ert' → logprob: -6.903759002685547
    6. 't' → logprob: -7.778759002685547
    7. 'ter' → logprob: -8.028759002685547
    8. 'r' → logprob: -8.153759002685547
    9. '```' → logprob: -9.028759002685547
    10. 'ools' → logprob: -10.028759002685547

Token 104: 'ateurs' (ID: 19727)
  Prédit: 'tools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tools' → logprob: -0.003825729712843895
    2. 'ators' → logprob: -6.253825664520264
    3. 'ables' → logprob: -6.878825664520264
    4. 'ertools' → logprob: -7.878825664520264
    5. 'ools' → logprob: -8.128826141357422
    6. '-tools' → logprob: -9.628826141357422
    7. 'ateurs' → logprob: -10.503826141357422
    8. '_tools' → logprob: -10.628826141357422
    9. ' tools' → logprob: -11.003826141357422
    10. 'tool' → logprob: -11.128826141357422

Token 105: ' efficaces' (ID: 140931)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5810781121253967
    2. 'from' → logprob: -0.8310781121253967
    3. 'import' → logprob: -6.206078052520752
    4. ' import' → logprob: -6.956078052520752
    5. ',' → logprob: -7.081078052520752
    6. ' ' → logprob: -7.581078052520752
    7. ' as' → logprob: -8.20607852935791
    8. ' ' → logprob: -8.33107852935791
    9. '<|end|>' → logprob: -9.08107852935791
    10. ' ,' → logprob: -9.95607852935791

Token 106: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5240604281425476
    2. ' from' → logprob: -0.8990604281425476
    3. ',' → logprob: -7.649060249328613
    4. ' ' → logprob: -8.649060249328613
    5. 'import' → logprob: -9.149060249328613
    6. ' as' → logprob: -9.524060249328613
    7. ' import' → logprob: -10.649060249328613
    8. '	from' → logprob: -10.649060249328613
    9. ' ,' → logprob: -10.899060249328613
    10. ' ' → logprob: -11.149060249328613

Token 107: 'non' (ID: 11741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04327606409788132
    2. ' )' → logprob: -3.418276071548462
    3. ' itertools' → logprob: -5.543275833129883
    4. 'import' → logprob: -6.043275833129883
    5. ')
' → logprob: -7.168275833129883
    6. 'it' → logprob: -7.168275833129883
    7. ',' → logprob: -7.793275833129883
    8. ').' → logprob: -7.918275833129883
    9. 'from' → logprob: -8.543275833129883
    10. ' import' → logprob: -8.668275833129883

Token 108: ' utilisées' (ID: 130009)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3898144960403442
    2. ' import' → logprob: -2.6398143768310547
    3. ' utilisées' → logprob: -2.6398143768310547
    4. ' consomm' → logprob: -2.8898143768310547
    5. ' utilisés' → logprob: -2.8898143768310547
    6. ')' → logprob: -3.0148143768310547
    7. ' utilis' → logprob: -3.6398143768310547
    8. ' seulement' → logprob: -3.8898143768310547
    9. 'com' → logprob: -3.8898143768310547
    10. 'ex' → logprob: -3.8898143768310547

Token 109: ' ici' (ID: 27994)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.7083725929260254
    2. ')' → logprob: -1.2083725929260254
    3. ' en' → logprob: -2.0833725929260254
    4. ' dans' → logprob: -3.4583725929260254
    5. 'import' → logprob: -4.333372592926025
    6. ',' → logprob: -4.583372592926025
    7. ' ,' → logprob: -5.083372592926025
    8. ' ' → logprob: -5.208372592926025
    9. ' import' → logprob: -5.333372592926025
    10. 'dans' → logprob: -5.833372592926025

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004035017918795347
    2. ' )' → logprob: -8.25040340423584
    3. ').' → logprob: -10.25040340423584
    4. ')#' → logprob: -10.25040340423584
    5. ',' → logprob: -10.50040340423584
    6. 'import' → logprob: -11.00040340423584
    7. ')
' → logprob: -11.87540340423584
    8. '#' → logprob: -12.25040340423584
    9. '),' → logprob: -12.75040340423584
    10. '`)' → logprob: -13.37540340423584

Token 111: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04547857493162155
    2. ' from' → logprob: -3.170478582382202
    3. 'import' → logprob: -6.045478343963623
    4. '*' → logprob: -9.795478820800781
    5. ' import' → logprob: -10.545478820800781
    6. ',' → logprob: -11.795478820800781
    7. ' ' → logprob: -11.795478820800781
    8. '	from' → logprob: -12.920478820800781
    9. ' *' → logprob: -13.295478820800781
    10. '`' → logprob: -13.920478820800781

Token 112: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0001649220648687333
    2. 'it' → logprob: -8.750164985656738
    3. ' ' → logprob: -12.125164985656738
    4. ' it' → logprob: -14.625164985656738
    5. ' functools' → logprob: -15.125164985656738
    6. ' iter' → logprob: -15.375164985656738
    7. '	it' → logprob: -17.250164031982422
    8. ' ' → logprob: -18.000164031982422
    9. '  ' → logprob: -18.125164031982422
    10. ' math' → logprob: -18.125164031982422

Token 113: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.016049150377511978
    2. 'import' → logprob: -4.141049385070801
    3. '	import' → logprob: -11.6410493850708
    4. ' ' → logprob: -12.5160493850708
    5. ' ' → logprob: -14.3910493850708
    6. '_import' → logprob: -14.6410493850708
    7. '.' → logprob: -14.8910493850708
    8. ' im' → logprob: -15.3910493850708
    9. ' Import' → logprob: -16.016048431396484
    10. '-import' → logprob: -16.266048431396484

Token 114: ' *

' (ID: 40558)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06216150149703026
    2. ' ' → logprob: -2.937161445617676
    3. '*' → logprob: -4.937161445617676
    4. ' *
' → logprob: -11.187161445617676
    5. ' itertools' → logprob: -11.312161445617676
    6. '  ' → logprob: -11.687161445617676
    7. ' chain' → logprob: -11.812161445617676
    8. ' ' → logprob: -11.937161445617676
    9. ' *
' → logprob: -12.187161445617676
    10. ' all' → logprob: -12.312161445617676

Token 115: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22972717881202698
    2. '<|end|>' → logprob: -1.9797271490097046
    3. '

' → logprob: -3.229727268218994
    4. 'import' → logprob: -4.604727268218994
    5. '#' → logprob: -5.104727268218994
    6. '```' → logprob: -5.604727268218994
    7. 'def' → logprob: -6.104727268218994
    8. ' ' → logprob: -6.354727268218994
    9. '<|end|>' → logprob: -6.604727268218994
    10. '\n' → logprob: -7.104727268218994

Token 116: ' Import' (ID: 19998)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.21067309379577637
    2. ' typing' → logprob: -1.9606730937957764
    3. ' collections' → logprob: -3.9606730937957764
    4. ' os' → logprob: -4.7106733322143555
    5. 'math' → logprob: -4.7106733322143555
    6. 'collections' → logprob: -4.9606733322143555
    7. 'os' → logprob: -6.8356733322143555
    8. 'typing' → logprob: -6.9606733322143555
    9. ' threading' → logprob: -7.8356733322143555
    10. ' operator' → logprob: -8.085673332214355

Token 117: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.26457706093788147
    2. 'from' → logprob: -2.7645771503448486
    3. 'stat' → logprob: -3.0145771503448486
    4. 'import' → logprob: -3.7645771503448486
    5. 'port' → logprob: -4.0145769119262695
    6. 'export' → logprob: -4.0145769119262695
    7. ' des' → logprob: -4.3895769119262695
    8. ' os' → logprob: -4.5145769119262695
    9. 'collections' → logprob: -5.2645769119262695
    10. 'collection' → logprob: -5.5145769119262695

Token 118: ' de' (ID: 334)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6862696409225464
    2. ' os' → logprob: -0.8112696409225464
    3. ' json' → logprob: -4.061269760131836
    4. ' collections' → logprob: -4.686269760131836
    5. ' random' → logprob: -4.936269760131836
    6. '<|end|>' → logprob: -5.061269760131836
    7. 'import' → logprob: -6.561269760131836
    8. ' defaultdict' → logprob: -6.561269760131836
    9. 'collections' → logprob: -6.811269760131836
    10. ' de' → logprob: -6.936269760131836

Token 119: ' defaultdict' (ID: 107098)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1254507303237915
    2. ' os' → logprob: -3.250450611114502
    3. 'math' → logprob: -3.375450611114502
    4. ' collections' → logprob: -3.875450611114502
    5. ' re' → logprob: -5.000450611114502
    6. 're' → logprob: -5.250450611114502
    7. ' operator' → logprob: -5.625450611114502
    8. ' typing' → logprob: -5.875450611114502
    9. 'collections' → logprob: -6.125450611114502
    10. 'os' → logprob: -6.375450611114502

Token 120: ' et' (ID: 859)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2838844954967499
    2. ' from' → logprob: -1.4088845252990723
    3. '<|end|>' → logprob: -6.658884525299072
    4. ' ' → logprob: -7.533884525299072
    5. ',' → logprob: -8.158884048461914
    6. '	from' → logprob: -8.158884048461914
    7. 'import' → logprob: -8.783884048461914
    8. ' ' → logprob: -10.033884048461914
    9. '<|end|>' → logprob: -10.408884048461914
    10. '
' → logprob: -10.533884048461914

Token 121: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.8113771677017212
    2. ' Ordered' → logprob: -1.0613771677017212
    3. ' deque' → logprob: -2.0613770484924316
    4. 'deque' → logprob: -3.0613770484924316
    5. 'Ordered' → logprob: -3.9363770484924316
    6. 'Counter' → logprob: -4.186377048492432
    7. ' named' → logprob: -7.811377048492432
    8. ' defaultdict' → logprob: -7.811377048492432
    9. 'named' → logprob: -9.56137752532959
    10. ' ' → logprob: -10.81137752532959

Token 122: ' depuis' (ID: 16277)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3485299348831177
    2. ' from' → logprob: -1.2235299348831177
    3. ',' → logprob: -10.223529815673828
    4. '	from' → logprob: -10.473529815673828
    5. ' de' → logprob: -11.848529815673828
    6. 'de' → logprob: -12.848529815673828
    7. '```' → logprob: -12.848529815673828
    8. ' ' → logprob: -13.723529815673828
    9. ' as' → logprob: -13.723529815673828
    10. ' des' → logprob: -13.848529815673828

Token 123: ' le' (ID: 505)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6931567788124084
    2. 'collections' → logprob: -0.6931567788124084
    3. ' collection' → logprob: -12.818157196044922
    4. 'collection' → logprob: -12.943157196044922
    5. ' ' → logprob: -13.068157196044922
    6. '.collections' → logprob: -13.818157196044922
    7. 'from' → logprob: -15.068157196044922
    8. ' ' → logprob: -15.443157196044922
    9. ' cole' → logprob: -15.943157196044922
    10. ' from' → logprob: -15.943157196044922

Token 124: ' module' (ID: 8827)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.014164329506456852
    2. ' collections' → logprob: -4.264164447784424
    3. 'collection' → logprob: -14.139163970947266
    4. '.collections' → logprob: -16.389163970947266
    5. ' collection' → logprob: -17.639163970947266
    6. ' ' → logprob: -17.889163970947266
    7. 'collect' → logprob: -18.264163970947266
    8. 'Collections' → logprob: -19.014163970947266
    9. 'col' → logprob: -19.264163970947266
    10. '_' → logprob: -19.389163970947266

Token 125: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5759431719779968
    2. 'collections' → logprob: -0.8259431719779968
    3. ' collection' → logprob: -13.575942993164062
    4. '.collections' → logprob: -13.950942993164062
    5. 'collection' → logprob: -14.325942993164062
    6. ' ' → logprob: -14.325942993164062
    7. ' ' → logprob: -16.200942993164062
    8. ' cole' → logprob: -16.200942993164062
    9. 'Collections' → logprob: -16.700942993164062
    10. '_' → logprob: -17.075942993164062

Token 126: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20728334784507751
    2. ' from' → logprob: -1.9572833776474
    3. 'import' → logprob: -3.2072832584381104
    4. ' import' → logprob: -5.4572834968566895
    5. ',' → logprob: -6.9572834968566895
    6. ' ' → logprob: -9.207283020019531
    7. '```' → logprob: -10.082283020019531
    8. ' as' → logprob: -10.457283020019531
    9. ' ' → logprob: -10.707283020019531
    10. '	from' → logprob: -10.832283020019531

Token 127: ' ces' (ID: 10532)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.08234844356775284
    2. 'default' → logprob: -2.832348346710205
    3. ' deque' → logprob: -4.457348346710205
    4. ' default' → logprob: -5.707348346710205
    5. 'deque' → logprob: -6.082348346710205
    6. 'collections' → logprob: -7.207348346710205
    7. 'from' → logprob: -7.332348346710205
    8. ' collections' → logprob: -7.457348346710205
    9. ' from' → logprob: -8.207348823547363
    10. 'import' → logprob: -8.832348823547363

Token 128: ' structures' (ID: 21207)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.9009615778923035
    2. ' derniers' → logprob: -1.6509616374969482
    3. ' structures' → logprob: -2.2759616374969482
    4. ' collections' → logprob: -2.5259616374969482
    5. ' outils' → logprob: -2.9009616374969482
    6. ' types' → logprob: -3.0259616374969482
    7. ' modules' → logprob: -3.2759616374969482
    8. ' objets' → logprob: -3.9009616374969482
    9. 'collections' → logprob: -4.400961399078369
    10. 's' → logprob: -4.900961399078369

Token 129: ' sont' (ID: 5242)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9186813235282898
    2. 'from' → logprob: -1.0436813831329346
    3. 'de' → logprob: -1.7936813831329346
    4. ' from' → logprob: -3.9186813831329346
    5. 'import' → logprob: -4.0436811447143555
    6. ' defaultdict' → logprob: -4.1686811447143555
    7. ' sont' → logprob: -4.7936811447143555
    8. 'd' → logprob: -5.2936811447143555
    9. ' spécialis' → logprob: -5.7936811447143555
    10. 's' → logprob: -6.5436811447143555

Token 130: ' utiles' (ID: 121161)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0882484912872314
    2. 'des' → logprob: -1.0882484912872314
    3. ' utiles' → logprob: -2.0882484912872314
    4. ' utilisées' → logprob: -3.0882484912872314
    5. ' très' → logprob: -3.3382484912872314
    6. 'collections' → logprob: -3.4632484912872314
    7. ' souvent' → logprob: -4.338248252868652
    8. 'import' → logprob: -4.463248252868652
    9. ' collections' → logprob: -4.588248252868652
    10. ' spécialis' → logprob: -4.588248252868652

Token 131: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.24578502774238586
    2. 'pour' → logprob: -2.8707849979400635
    3. 'from' → logprob: -3.1207849979400635
    4. ' for' → logprob: -3.4957849979400635
    5. ',' → logprob: -3.7457849979400635
    6. ' ' → logprob: -4.620785236358643
    7. ' from' → logprob: -4.745785236358643
    8. ' des' → logprob: -4.870785236358643
    9. 'collections' → logprob: -4.995785236358643
    10. 'import' → logprob: -5.120785236358643

Token 132: ' compter' (ID: 81694)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.01880517229437828
    2. ' faciliter' → logprob: -5.393805027008057
    3. ' compter' → logprob: -5.643805027008057
    4. ' la' → logprob: -6.018805027008057
    5. ' manip' → logprob: -6.018805027008057
    6. ' créer' → logprob: -6.893805027008057
    7. ' collections' → logprob: -7.018805027008057
    8. 'collections' → logprob: -7.143805027008057
    9. 'man' → logprob: -7.643805027008057
    10. 'la' → logprob: -8.018805503845215

Token 133: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8461902141571045
    2. '<|end|>' → logprob: -1.0961902141571045
    3. ' et' → logprob: -1.9711902141571045
    4. ' and' → logprob: -3.0961902141571045
    5. ' des' → logprob: -3.5961902141571045
    6. ' ,' → logprob: -5.471190452575684
    7. ' ' → logprob: -5.596190452575684
    8. 'des' → logprob: -5.596190452575684
    9. 's' → logprob: -5.846190452575684
    10. 'et' → logprob: -5.971190452575684

Token 134: ' initial' (ID: 4871)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.37475866079330444
    2. ' stock' → logprob: -1.6247587203979492
    3. ' manip' → logprob: -3.374758720397949
    4. 'stock' → logprob: -4.124758720397949
    5. 'man' → logprob: -4.374758720397949
    6. 'organ' → logprob: -4.374758720397949
    7. ' organiser' → logprob: -4.374758720397949
    8. 'acc' → logprob: -5.374758720397949
    9. 'class' → logprob: -5.499758720397949
    10. ' créer' → logprob: -5.999758720397949

Token 135: 'iser' (ID: 7466)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.29565733671188354
    2. 'al' → logprob: -1.7956573963165283
    3. 'ter' → logprob: -3.5456573963165283
    4. 'ser' → logprob: -3.7956573963165283
    5. 'iser' → logprob: -4.420657157897949
    6. 'zer' → logprob: -5.170657157897949
    7. 'er' → logprob: -5.295657157897949
    8. 'default' → logprob: -5.795657157897949
    9. 'tal' → logprob: -6.420657157897949
    10. 'izer' → logprob: -6.670657157897949

Token 136: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' diction' (ID: 155259)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.1933971494436264
    2. 'dict' → logprob: -2.568397045135498
    3. 'd' → logprob: -3.443397045135498
    4. ' collections' → logprob: -3.443397045135498
    5. 'val' → logprob: -4.068397045135498
    6. ' valeurs' → logprob: -5.568397045135498
    7. ' des' → logprob: -6.318397045135498
    8. 'default' → logprob: -6.443397045135498
    9. 'des' → logprob: -6.693397045135498
    10. ' dict' → logprob: -6.693397045135498

Token 138: 'naires' (ID: 65019)
  Prédit: 'naires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naires' → logprob: -0.19598455727100372
    2. 'ary' → logprob: -2.3209846019744873
    3. 'naire' → logprob: -3.0709846019744873
    4. 'aires' → logprob: -4.070984363555908
    5. 'aries' → logprob: -4.320984363555908
    6. 'n' → logprob: -6.445984363555908
    7. 'aire' → logprob: -7.945984363555908
    8. 'default' → logprob: -8.445984840393066
    9. 'nées' → logprob: -9.195984840393066
    10. '{' → logprob: -9.320984840393066

Token 139: ' avec' (ID: 3937)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18292991816997528
    2. ' from' → logprob: -1.9329298734664917
    3. ' defaultdict' → logprob: -3.9329299926757812
    4. ',' → logprob: -6.932929992675781
    5. '<|end|>' → logprob: -7.682929992675781
    6. ' de' → logprob: -8.057929992675781
    7. ' depuis' → logprob: -8.182929992675781
    8. 'collections' → logprob: -8.307929992675781
    9. 'import' → logprob: -9.182929992675781
    10. ' collections' → logprob: -9.557929992675781

Token 140: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8614644408226013
    2. 'default' → logprob: -1.611464500427246
    3. ' defaultdict' → logprob: -1.611464500427246
    4. ' default' → logprob: -2.736464500427246
    5. ' une' → logprob: -2.736464500427246
    6. ' défaut' → logprob: -3.986464500427246
    7. 'des' → logprob: -4.861464500427246
    8. 'une' → logprob: -5.736464500427246
    9. ' def' → logprob: -5.736464500427246
    10. 'def' → logprob: -5.861464500427246

Token 141: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.14699575304985046
    2. 'def' → logprob: -3.021995782852173
    3. ' valeurs' → logprob: -3.146995782852173
    4. 'default' → logprob: -3.521995782852173
    5. 'values' → logprob: -5.271995544433594
    6. ' défaut' → logprob: -6.146995544433594
    7. 'int' → logprob: -6.896995544433594
    8. 'des' → logprob: -7.021995544433594
    9. ' defaultdict' → logprob: -7.146995544433594
    10. 'list' → logprob: -7.146995544433594

Token 142: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.2740747034549713
    2. 'par' → logprob: -1.524074673652649
    3. 'def' → logprob: -4.399074554443359
    4. 'import' → logprob: -5.274074554443359
    5. 'default' → logprob: -5.899074554443359
    6. '_par' → logprob: -8.27407455444336
    7. '```' → logprob: -8.89907455444336
    8. ',' → logprob: -9.14907455444336
    9. 'dé' → logprob: -9.14907455444336
    10. 'd' → logprob: -9.27407455444336

Token 143: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.08683978766202927
    2. ' défaut' → logprob: -2.8368396759033203
    3. 'default' → logprob: -3.8368396759033203
    4. 'def' → logprob: -5.83683967590332
    5. 'd' → logprob: -10.21183967590332
    6. ' default' → logprob: -10.58683967590332
    7. 'f' → logprob: -12.08683967590332
    8. 'Dé' → logprob: -12.46183967590332
    9. '	default' → logprob: -13.08683967590332
    10. '	d' → logprob: -13.58683967590332

Token 144: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.062190741300582886
    2. ' from' → logprob: -2.8121907711029053
    3. ',' → logprob: -8.937191009521484
    4. ' defaultdict' → logprob: -10.312191009521484
    5. '```' → logprob: -11.437191009521484
    6. ' ' → logprob: -11.687191009521484
    7. ' as' → logprob: -12.062191009521484
    8. '	from' → logprob: -12.187191009521484
    9. '<|end|>' → logprob: -12.437191009521484
    10. ' ' → logprob: -12.437191009521484

Token 145: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.28796327114105225
    2. ' from' → logprob: -1.4129632711410522
    3. ' defaultdict' → logprob: -5.037963390350342
    4. ' collections' → logprob: -8.787962913513184
    5. 'collections' → logprob: -9.662962913513184
    6. ' ' → logprob: -10.162962913513184
    7. 'default' → logprob: -10.787962913513184
    8. ' ' → logprob: -12.037962913513184
    9. '	from' → logprob: -12.037962913513184
    10. ' default' → logprob: -12.162962913513184

Token 146: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0019513490842655301
    2. 'collections' → logprob: -6.251951217651367
    3. ' ' → logprob: -10.876951217651367
    4. ' ' → logprob: -12.751951217651367
    5. ' collection' → logprob: -14.251951217651367
    6. ' cole' → logprob: -16.376951217651367
    7. '.collections' → logprob: -16.376951217651367
    8. ' colle' → logprob: -16.751951217651367
    9. 'Collections' → logprob: -17.251951217651367
    10. ' ' → logprob: -17.876951217651367

Token 147: ' import' (ID: 1588)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5467310547828674
    2. 'import' → logprob: -0.9217310547828674
    3. '.collections' → logprob: -4.671730995178223
    4. 'ections' → logprob: -4.796730995178223
    5. ' import' → logprob: -6.296730995178223
    6. 'from' → logprob: -7.171730995178223
    7. 'ctions' → logprob: -7.296730995178223
    8. ' collections' → logprob: -7.296730995178223
    9. 'Collections' → logprob: -7.796730995178223
    10. 'lections' → logprob: -8.046730995178223

Token 148: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -8.895480277715251e-06
    2. 'default' → logprob: -12.000008583068848
    3. ' default' → logprob: -12.875008583068848
    4. ' ' → logprob: -16.250009536743164
    5. ' deque' → logprob: -17.875009536743164
    6. ' ' → logprob: -18.000009536743164
    7. ' Default' → logprob: -19.750009536743164
    8. '.default' → logprob: -19.875009536743164
    9. ' def' → logprob: -20.000009536743164
    10. '"default' → logprob: -20.000009536743164

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036168331280350685
    2. 'import' → logprob: -8.625361442565918
    3. ' ,' → logprob: -9.000361442565918
    4. ',
' → logprob: -10.875361442565918
    5. '<|end|>' → logprob: -10.875361442565918
    6. ' import' → logprob: -12.125361442565918
    7. ' ' → logprob: -13.500361442565918
    8. ',

' → logprob: -13.875361442565918
    9. ',user' → logprob: -13.937861442565918
    10. ' as' → logprob: -14.062861442565918

Token 150: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.5759438872337341
    2. ' Counter' → logprob: -0.8259438872337341
    3. '.Counter' → logprob: -13.450943946838379
    4. 'deque' → logprob: -13.950943946838379
    5. ' deque' → logprob: -14.575943946838379
    6. ' ' → logprob: -14.575943946838379
    7. ' counter' → logprob: -15.075943946838379
    8. '_counter' → logprob: -15.325943946838379
    9. ' defaultdict' → logprob: -15.700943946838379
    10. ' ' → logprob: -16.075942993164062

Token 151: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8797532916069031
    2. 'import' → logprob: -1.1297533512115479
    3. '

' → logprob: -1.5047533512115479
    4. 'from' → logprob: -4.504753112792969
    5. '#' → logprob: -4.754753112792969
    6. '


' → logprob: -5.504753112792969
    7. 'def' → logprob: -5.629753112792969
    8. ',' → logprob: -5.879753112792969
    9. '



' → logprob: -6.129753112792969
    10. '
' → logprob: -6.254753112792969

Token 153: ' Import' (ID: 19998)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.99233078956604
    2. 'math' → logprob: -1.24233078956604
    3. ' math' → logprob: -1.74233078956604
    4. 'os' → logprob: -2.61733078956604
    5. 'typing' → logprob: -2.74233078956604
    6. ' os' → logprob: -4.492330551147461
    7. 'heap' → logprob: -5.742330551147461
    8. 're' → logprob: -5.867330551147461
    9. 'operator' → logprob: -6.242330551147461
    10. ' threading' → logprob: -6.367330551147461

Token 154: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.13762786984443665
    2. 'from' → logprob: -2.1376278400421143
    3. 'import' → logprob: -5.512628078460693
    4. ' de' → logprob: -6.262628078460693
    5. 'ations' → logprob: -6.762628078460693
    6. ' from' → logprob: -7.887628078460693
    7. '#' → logprob: -8.137627601623535
    8. 'port' → logprob: -8.262627601623535
    9. 'error' → logprob: -8.262627601623535
    10. ' des' → logprob: -8.262627601623535

Token 155: ' de' (ID: 334)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.13013368844985962
    2. ' json' → logprob: -2.755133628845215
    3. ' os' → logprob: -3.630133628845215
    4. ' deque' → logprob: -4.005133628845215
    5. ' random' → logprob: -5.630133628845215
    6. ' heap' → logprob: -5.880133628845215
    7. ' re' → logprob: -6.380133628845215
    8. ' typing' → logprob: -7.005133628845215
    9. ' datetime' → logprob: -7.130133628845215
    10. ' named' → logprob: -7.380133628845215

Token 156: ' la' (ID: 557)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.11504486203193665
    2. 'math' → logprob: -2.9900448322296143
    3. ' heap' → logprob: -3.4900448322296143
    4. ' typing' → logprob: -3.9900448322296143
    5. ' re' → logprob: -5.990045070648193
    6. 'heap' → logprob: -6.365045070648193
    7. ' os' → logprob: -6.740045070648193
    8. ' json' → logprob: -6.865045070648193
    9. ' operator' → logprob: -7.365045070648193
    10. ' deque' → logprob: -7.365045070648193

Token 157: ' fonction' (ID: 17610)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.24211201071739197
    2. 'math' → logprob: -1.7421120405197144
    3. ' typing' → logprob: -3.617111921310425
    4. 're' → logprob: -5.867112159729004
    5. ' heap' → logprob: -5.867112159729004
    6. ' re' → logprob: -6.617112159729004
    7. 'heap' → logprob: -7.117112159729004
    8. ' json' → logprob: -7.117112159729004
    9. 'typing' → logprob: -7.367112159729004
    10. ' operator' → logprob: -7.492112159729004

Token 158: ' bis' (ID: 7204)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -1.3730790615081787
    2. ' sqrt' → logprob: -2.2480790615081787
    3. ' randint' → logprob: -2.3730790615081787
    4. ' gcd' → logprob: -2.7480790615081787
    5. ' deepcopy' → logprob: -2.8730790615081787
    6. ' permutations' → logprob: -3.1230790615081787
    7. 'log' → logprob: -3.3730790615081787
    8. ' comb' → logprob: -3.3730790615081787
    9. 'rand' → logprob: -3.9980790615081787
    10. ' chain' → logprob: -3.9980790615081787

Token 159: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.1472419600977446e-06
    2. 'ec' → logprob: -14.000000953674316
    3. 'e' → logprob: -15.375000953674316
    4. 'ected' → logprob: -17.750001907348633
    5. 'ector' → logprob: -18.125001907348633
    6. 'ection' → logprob: -18.125001907348633
    7. 'ecta' → logprob: -18.625001907348633
    8. 'ectl' → logprob: -19.125001907348633
    9. 'ects' → logprob: -19.500001907348633
    10. '```' → logprob: -19.875001907348633

Token 160: ' du' (ID: 1462)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.021129397675395012
    2. ',' → logprob: -4.396129608154297
    3. 'import' → logprob: -5.396129608154297
    4. ' from' → logprob: -5.521129608154297
    5. '_from' → logprob: -11.021129608154297
    6. '	from' → logprob: -11.771129608154297
    7. ' ,' → logprob: -12.021129608154297
    8. 'bis' → logprob: -12.146129608154297
    9. ' ' → logprob: -13.396129608154297
    10. ' import' → logprob: -13.521129608154297

Token 161: ' module' (ID: 8827)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.006025018636137247
    2. ' bis' → logprob: -5.1310248374938965
    3. 'module' → logprob: -9.881025314331055
    4. 'b' → logprob: -10.256025314331055
    5. ' module' → logprob: -12.131025314331055
    6. '```' → logprob: -13.381025314331055
    7. 'built' → logprob: -13.506025314331055
    8. 'import' → logprob: -15.381025314331055
    9. 'math' → logprob: -15.506025314331055
    10. 'modules' → logprob: -15.756025314331055

Token 162: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.0789826512336731
    2. 'bis' → logprob: -2.5789825916290283
    3. 'b' → logprob: -9.82898235321045
    4. ' module' → logprob: -11.32898235321045
    5. '```' → logprob: -11.57898235321045
    6. ' math' → logprob: -12.45398235321045
    7. 'import' → logprob: -12.70398235321045
    8. ' built' → logprob: -13.07898235321045
    9. ' ' → logprob: -13.32898235321045
    10. 'module' → logprob: -13.70398235321045

Token 163: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.9361264946837764e-07
    2. 'e' → logprob: -16.5
    3. 'ec' → logprob: -17.375
    4. '
' → logprob: -18.125
    5. '```' → logprob: -18.875
    6. 'ection' → logprob: -19.375
    7. 'sect' → logprob: -19.375
    8. 'ected' → logprob: -19.875
    9. 'ector' → logprob: -20.25
    10. '#' → logprob: -20.375

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.365384966135025
    2. 'from' → logprob: -1.3653849363327026
    3. 'import' → logprob: -3.240385055541992
    4. ' from' → logprob: -4.740385055541992
    5. ' ,' → logprob: -6.365385055541992
    6. ' import' → logprob: -7.365385055541992
    7. 'bis' → logprob: -8.615385055541992
    8. ' bis' → logprob: -8.990385055541992
    9. ',b' → logprob: -9.740385055541992
    10. ',
' → logprob: -10.240385055541992

Token 165: ' permettant' (ID: 61092)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.13795818388462067
    2. ' bis' → logprob: -2.387958288192749
    3. 'ins' → logprob: -3.387958288192749
    4. ' ins' → logprob: -5.76295804977417
    5. 'import' → logprob: -9.262958526611328
    6. 'b' → logprob: -10.512958526611328
    7. '```' → logprob: -13.262958526611328
    8. '	b' → logprob: -13.887958526611328
    9. '#' → logprob: -14.512958526611328
    10. ',b' → logprob: -14.637958526611328

Token 166: ' de' (ID: 334)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.3057502508163452
    2. 'bis' → logprob: -1.9307502508163452
    3. ' ins' → logprob: -2.8057503700256348
    4. 'ins' → logprob: -2.9307503700256348
    5. 'import' → logprob: -6.305750370025635
    6. ' import' → logprob: -6.430750370025635
    7. '_right' → logprob: -7.555750370025635
    8. '_left' → logprob: -8.430749893188477
    9. 'b' → logprob: -8.930749893188477
    10. ' b' → logprob: -9.680749893188477

Token 167: ' rechercher' (ID: 173335)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.15380924940109253
    2. 'ins' → logprob: -2.0288093090057373
    3. 'bis' → logprob: -5.028809070587158
    4. ' bis' → logprob: -5.653809070587158
    5. 'in' → logprob: -8.403809547424316
    6. 'import' → logprob: -8.653809547424316
    7. 'b' → logprob: -8.778809547424316
    8. ' effectuer' → logprob: -8.903809547424316
    9. ' utiliser' → logprob: -9.778809547424316
    10. 'maint' → logprob: -10.653809547424316

Token 168: ' efficacement' (ID: 155449)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.35619401931762695
    2. '_right' → logprob: -1.231194019317627
    3. 'right' → logprob: -5.731194019317627
    4. '<|end|>' → logprob: -6.106194019317627
    5. 'left' → logprob: -6.856194019317627
    6. 'ins' → logprob: -8.106193542480469
    7. ' bis' → logprob: -8.481193542480469
    8. 'bis' → logprob: -8.606193542480469
    9. ' right' → logprob: -10.231193542480469
    10. 'import' → logprob: -10.356193542480469

Token 169: ' des' (ID: 731)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.6244537234306335
    2. '_right' → logprob: -0.8744537234306335
    3. '<|end|>' → logprob: -3.8744537830352783
    4. 'import' → logprob: -4.874453544616699
    5. 'right' → logprob: -5.124453544616699
    6. 'ins' → logprob: -5.749453544616699
    7. 'left' → logprob: -5.999453544616699
    8. ' l' → logprob: -6.624453544616699
    9. 'bis' → logprob: -6.874453544616699
    10. 'l' → logprob: -7.249453544616699

Token 170: ' indices' (ID: 30378)
  Prédit: ' insertion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' insertion' → logprob: -0.9467431306838989
    2. ' positions' → logprob: -1.446743130683899
    3. 'positions' → logprob: -1.696743130683899
    4. ' points' → logprob: -2.9467430114746094
    5. 'insert' → logprob: -3.0717430114746094
    6. 'points' → logprob: -3.6967430114746094
    7. 'position' → logprob: -3.8217430114746094
    8. 'ins' → logprob: -4.571743011474609
    9. ' l' → logprob: -4.696743011474609
    10. 'sorted' → logprob: -5.196743011474609

Token 171: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7072082757949829
    2. 'from' → logprob: -1.082208275794983
    3. 'import' → logprob: -1.832208275794983
    4. '<|end|>' → logprob: -5.707208156585693
    5. ' from' → logprob: -5.957208156585693
    6. ' ,' → logprob: -7.707208156585693
    7. '_from' → logprob: -7.957208156585693
    8. 's' → logprob: -7.957208156585693
    9. ' import' → logprob: -7.957208156585693
    10. ',b' → logprob: -8.332208633422852

Token 172: ' l' (ID: 305)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.10930828005075455
    2. ' l' → logprob: -3.1093082427978516
    3. ' inser' → logprob: -3.9843082427978516
    4. ' insertion' → logprob: -3.9843082427978516
    5. 'ins' → logprob: -4.484308242797852
    6. ' insert' → logprob: -5.984308242797852
    7. 'in' → logprob: -6.484308242797852
    8. 'l' → logprob: -6.984308242797852
    9. ' maintenir' → logprob: -6.984308242797852
    10. 'insert' → logprob: -7.234308242797852

Token 173: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9866847395896912
    2. 'ist' → logprob: -1.486684799194336
    3. 'iste' → logprob: -1.611684799194336
    4. 'e' → logprob: -2.861684799194336
    5. 'import' → logprob: -4.111684799194336
    6. '```' → logprob: -4.236684799194336
    7. ''' → logprob: -4.361684799194336
    8. 'sorted' → logprob: -4.486684799194336
    9. 'is' → logprob: -4.861684799194336
    10. 'bis' → logprob: -4.861684799194336

Token 174: 'sertion' (ID: 21747)
  Prédit: 'sert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sert' → logprob: -0.409358412027359
    2. 'sertion' → logprob: -1.1593583822250366
    3. 'sort' → logprob: -4.534358501434326
    4. 's' → logprob: -5.409358501434326
    5. 'sorted' → logprob: -5.659358501434326
    6. '```' → logprob: -6.534358501434326
    7. 'ser' → logprob: -7.284358501434326
    8. 'ert' → logprob: -8.159358024597168
    9. 'se' → logprob: -8.659358024597168
    10. ' sert' → logprob: -8.659358024597168

Token 175: ' ord' (ID: 6608)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3422156274318695
    2. 'import' → logprob: -1.717215657234192
    3. ',' → logprob: -2.2172155380249023
    4. ' from' → logprob: -7.217215538024902
    5. 'bis' → logprob: -8.342215538024902
    6. ' import' → logprob: -8.842215538024902
    7. ',b' → logprob: -9.467215538024902
    8. 's' → logprob: -10.467215538024902
    9. ' ,' → logprob: -10.717215538024902
    10. 'as' → logprob: -11.467215538024902

Token 176: 'onnée' (ID: 91161)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.4418931305408478
    2. 'ort' → logprob: -1.5668931007385254
    3. 'ect' → logprob: -1.9418931007385254
    4. 'sert' → logprob: -6.316893100738525
    5. 'e' → logprob: -6.816893100738525
    6. 'er' → logprob: -7.191893100738525
    7. 'ex' → logprob: -7.941893100738525
    8. 'est' → logprob: -8.316893577575684
    9. 'ection' → logprob: -8.941893577575684
    10. '```' → logprob: -9.316893577575684

Token 177: ' dans' (ID: 2671)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5350019931793213
    2. ',' → logprob: -0.9100019931793213
    3. 'import' → logprob: -4.785001754760742
    4. ' from' → logprob: -6.285001754760742
    5. ',
' → logprob: -7.535001754760742
    6. 's' → logprob: -7.785001754760742
    7. ',b' → logprob: -8.285001754760742
    8. '<|end|>' → logprob: -9.785001754760742
    9. 'bis' → logprob: -9.910001754760742
    10. '```' → logprob: -9.910001754760742

Token 178: ' une' (ID: 2463)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.36092716455459595
    2. ' bis' → logprob: -1.6109271049499512
    3. 'list' → logprob: -3.610927104949951
    4. 'la' → logprob: -4.610927104949951
    5. 'lists' → logprob: -4.610927104949951
    6. 'sorted' → logprob: -4.610927104949951
    7. 'a' → logprob: -4.735927104949951
    8. ' a' → logprob: -4.860927104949951
    9. ' lists' → logprob: -5.235927104949951
    10. ' la' → logprob: -5.235927104949951

Token 179: ' liste' (ID: 31719)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.2033252865076065
    2. 'list' → logprob: -2.0783252716064453
    3. 'liste' → logprob: -3.2033252716064453
    4. ' sorted' → logprob: -4.203325271606445
    5. ' list' → logprob: -7.328325271606445
    6. 'array' → logprob: -7.453325271606445
    7. 'import' → logprob: -7.453325271606445
    8. ' liste' → logprob: -7.703325271606445
    9. 'sequence' → logprob: -8.078325271606445
    10. 'bis' → logprob: -8.828325271606445

Token 180: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.019055498763918877
    2. ',' → logprob: -4.144055366516113
    3. 'import' → logprob: -5.894055366516113
    4. ' from' → logprob: -8.769055366516113
    5. ',b' → logprob: -10.269055366516113
    6. 'bis' → logprob: -10.269055366516113
    7. ',
' → logprob: -10.769055366516113
    8. 's' → logprob: -12.144055366516113
    9. 'as' → logprob: -13.019055366516113
    10. '
' → logprob: -13.769055366516113

Token 181: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18872781097888947
    2. 'import' → logprob: -2.313727855682373
    3. 'bis' → logprob: -2.688727855682373
    4. ' from' → logprob: -5.688727855682373
    5. ' bis' → logprob: -6.563727855682373
    6. ' import' → logprob: -8.063727378845215
    7. 'ins' → logprob: -11.938727378845215
    8. '```' → logprob: -12.063727378845215
    9. 'b' → logprob: -13.938727378845215
    10. 'Bis' → logprob: -14.813727378845215

Token 182: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.0019310165662318468
    2. 'bis' → logprob: -6.251931190490723
    3. '	b' → logprob: -13.376931190490723
    4. ' ' → logprob: -14.626931190490723
    5. 'b' → logprob: -15.376931190490723
    6. ' b' → logprob: -16.876930236816406
    7. ' ' → logprob: -17.251930236816406
    8. 'Bis' → logprob: -17.501930236816406
    9. '```' → logprob: -17.876930236816406
    10. '  ' → logprob: -18.251930236816406

Token 183: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -7.703443770878948e-06
    2. 'e' → logprob: -12.375007629394531
    3. 'ecta' → logprob: -14.375007629394531
    4. 'ec' → logprob: -14.500007629394531
    5. 'sect' → logprob: -14.625007629394531
    6. 'ected' → logprob: -15.250007629394531
    7. '
' → logprob: -15.500007629394531
    8. 'ectl' → logprob: -15.500007629394531
    9. 'ext' → logprob: -15.875007629394531
    10. 'ects' → logprob: -16.12500762939453

Token 184: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3132685124874115
    2. 'import' → logprob: -1.3132685422897339
    3. '	import' → logprob: -12.563268661499023
    4. '_import' → logprob: -13.188268661499023
    5. ' ' → logprob: -14.438268661499023
    6. ' ' → logprob: -14.813268661499023
    7. 'ort' → logprob: -16.438268661499023
    8. '_' → logprob: -16.563268661499023
    9. '```' → logprob: -16.938268661499023
    10. '3' → logprob: -17.063268661499023

Token 185: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.07889452576637268
    2. 'bis' → logprob: -2.57889461517334
    3. 'ins' → logprob: -13.07889461517334
    4. ' ins' → logprob: -13.45389461517334
    5. 'b' → logprob: -14.20389461517334
    6. '	b' → logprob: -14.57889461517334
    7. '.b' → logprob: -17.328893661499023
    8. ' ' → logprob: -18.328893661499023
    9. '```' → logprob: -18.453893661499023
    10. ',b' → logprob: -18.828893661499023

Token 186: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.696889623621246e-06
    2. 'e' → logprob: -13.12500286102295
    3. 'sect' → logprob: -15.25000286102295
    4. 'ec' → logprob: -15.62500286102295
    5. 'ected' → logprob: -16.875001907348633
    6. 'ecta' → logprob: -16.875001907348633
    7. 'ectl' → logprob: -17.375001907348633
    8. 'ext' → logprob: -17.625001907348633
    9. 'ects' → logprob: -17.625001907348633
    10. 'pect' → logprob: -18.125001907348633

Token 187: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04164842888712883
    2. '_' → logprob: -4.0416483879089355
    3. '<|end|>' → logprob: -4.5416483879089355
    4. ' ' → logprob: -5.4166483879089355
    5. 'as' → logprob: -6.5416483879089355
    6. 'import' → logprob: -6.9166483879089355
    7. ',b' → logprob: -7.1666483879089355
    8. '_right' → logprob: -7.2916483879089355
    9. '_,' → logprob: -7.4166483879089355
    10. 's' → logprob: -7.6666483879089355

Token 188: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8538814783096313
    2. ',' → logprob: -1.6038814783096313
    3. '
' → logprob: -1.9788814783096313
    4. '

' → logprob: -2.978881359100342
    5. 'def' → logprob: -2.978881359100342
    6. '<|end|>' → logprob: -2.978881359100342
    7. '#' → logprob: -4.353881359100342
    8. 'from' → logprob: -4.353881359100342
    9. ',
' → logprob: -4.853881359100342
    10. '\n' → logprob: -4.853881359100342

Token 189: ' Ré' (ID: 27181)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6573360562324524
    2. ' math' → logprob: -1.2823359966278076
    3. 'heap' → logprob: -2.0323359966278076
    4. ' heap' → logprob: -2.7823359966278076
    5. ' typing' → logprob: -5.907336235046387
    6. 'random' → logprob: -6.282336235046387
    7. 'os' → logprob: -6.782336235046387
    8. 'operator' → logprob: -6.907336235046387
    9. 'typing' → logprob: -6.907336235046387
    10. ' threading' → logprob: -7.157336235046387

Token 190: 'import' (ID: 561)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.33372730016708374
    2. 'set' → logprob: -1.8337273597717285
    3. 'gl' → logprob: -3.0837273597717285
    4. 'g' → logprob: -4.0837273597717285
    5. 'import' → logprob: -4.4587273597717285
    6. 'duction' → logprob: -4.5837273597717285
    7. 'solution' → logprob: -5.2087273597717285
    8. 'seau' → logprob: -5.3337273597717285
    9. '#' → logprob: -5.4587273597717285
    10. 'cup' → logprob: -5.5837273597717285

Token 191: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.23544706404209137
    2. 'er' → logprob: -1.7354470491409302
    3. 'ion' → logprob: -4.235446929931641
    4. 'from' → logprob: -4.860446929931641
    5. 'port' → logprob: -5.235446929931641
    6. 'import' → logprob: -5.860446929931641
    7. '#' → logprob: -7.860446929931641
    8. 'ort' → logprob: -7.860446929931641
    9. 'tion' → logprob: -8.11044692993164
    10. 'on' → logprob: -8.36044692993164

Token 192: ' du' (ID: 1462)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3996770679950714
    2. ' sys' → logprob: -1.524677038192749
    3. ' defaultdict' → logprob: -3.399677038192749
    4. ' from' → logprob: -3.774677038192749
    5. 'import' → logprob: -4.399677276611328
    6. 'sys' → logprob: -4.649677276611328
    7. ' deepcopy' → logprob: -5.399677276611328
    8. '*' → logprob: -5.399677276611328
    9. 'default' → logprob: -6.149677276611328
    10. ' ' → logprob: -6.399677276611328

Token 193: ' module' (ID: 8827)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5822710394859314
    2. ' built' → logprob: -2.457271099090576
    3. 'sys' → logprob: -2.582271099090576
    4. ' bis' → logprob: -2.707271099090576
    5. ' math' → logprob: -2.957271099090576
    6. ' os' → logprob: -3.707271099090576
    7. ' threading' → logprob: -3.957271099090576
    8. ' collections' → logprob: -4.332271099090576
    9. 'built' → logprob: -4.332271099090576
    10. 'collections' → logprob: -4.832271099090576

Token 194: ' functools' (ID: 142636)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7835679650306702
    2. ' math' → logprob: -1.7835679054260254
    3. ' os' → logprob: -2.2835679054260254
    4. 'sys' → logprob: -2.2835679054260254
    5. 'os' → logprob: -2.6585679054260254
    6. 'math' → logprob: -3.7835679054260254
    7. ' threading' → logprob: -4.033567905426025
    8. 'import' → logprob: -4.408567905426025
    9. ' built' → logprob: -5.158567905426025
    10. ' heap' → logprob: -5.283567905426025

Token 195: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.20094697177410126
    2. ',' → logprob: -2.4509470462799072
    3. ' as' → logprob: -3.0759470462799072
    4. 'from' → logprob: -3.3259470462799072
    5. 'as' → logprob: -4.950946807861328
    6. ' import' → logprob: -5.700946807861328
    7. ' ' → logprob: -6.575946807861328
    8. ' ,' → logprob: -7.325946807861328
    9. ' from' → logprob: -7.450946807861328
    10. '.' → logprob: -7.950946807861328

Token 196: ' s' (ID: 265)
  Prédit: ' partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.7823963165283203
    2. ' l' → logprob: -1.7823963165283203
    3. 'partial' → logprob: -1.9073963165283203
    4. ' reduce' → logprob: -2.7823963165283203
    5. 'reduce' → logprob: -2.9073963165283203
    6. ' cache' → logprob: -3.6573963165283203
    7. ' cmp' → logprob: -4.28239631652832
    8. ' functools' → logprob: -4.28239631652832
    9. 'cache' → logprob: -4.40739631652832
    10. 'l' → logprob: -4.53239631652832

Token 197: ''assurer' (ID: 193756)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.3789961040019989
    2. 'e' → logprob: -2.8789961338043213
    3. 'ort' → logprob: -3.1289961338043213
    4. 'ys' → logprob: -3.3789961338043213
    5. 'tring' → logprob: -4.128995895385742
    6. 't' → logprob: -4.378995895385742
    7. 'td' → logprob: -4.378995895385742
    8. 'etter' → logprob: -4.753995895385742
    9. 'up' → logprob: -4.753995895385742
    10. 'uppress' → logprob: -4.753995895385742

Token 198: ' qu' (ID: 474)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8346732258796692
    2. ' as' → logprob: -1.4596731662750244
    3. ' ' → logprob: -1.7096731662750244
    4. '<|end|>' → logprob: -3.0846731662750244
    5. ',' → logprob: -3.3346731662750244
    6. 'from' → logprob: -3.5846731662750244
    7. '.' → logprob: -4.4596734046936035
    8. 'as' → logprob: -4.9596734046936035
    9. ' import' → logprob: -5.2096734046936035
    10. ' des' → logprob: -6.2096734046936035

Token 199: ''il' (ID: 14683)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9740638732910156
    2. '#' → logprob: -1.4740638732910156
    3. 'import' → logprob: -2.5990638732910156
    4. 'e' → logprob: -3.0990638732910156
    5. '<|end|>' → logprob: -3.2240638732910156
    6. 'a' → logprob: -3.3490638732910156
    7. ''' → logprob: -3.5990638732910156
    8. 'def' → logprob: -3.9740638732910156
    9. ''il' → logprob: -3.9740638732910156
    10. ''import' → logprob: -4.349063873291016

Token 200: ' est' (ID: 893)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.6726784706115723
    2. '#' → logprob: -1.9226784706115723
    3. 'import' → logprob: -2.0476784706115723
    4. ' has' → logprob: -2.1726784706115723
    5. ',' → logprob: -2.7976784706115723
    6. ' as' → logprob: -2.7976784706115723
    7. '<|end|>' → logprob: -2.7976784706115723
    8. ' is' → logprob: -3.0476784706115723
    9. 'has' → logprob: -3.6726784706115723
    10. ' est' → logprob: -3.6726784706115723

Token 201: ' dans' (ID: 2671)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06592125445604324
    2. ' as' → logprob: -3.9409213066101074
    3. 'as' → logprob: -4.315921306610107
    4. 'available' → logprob: -5.565921306610107
    5. ' import' → logprob: -5.690921306610107
    6. ',' → logprob: -6.065921306610107
    7. 'not' → logprob: -6.190921306610107
    8. ' imported' → logprob: -6.190921306610107
    9. '<|end|>' → logprob: -6.315921306610107
    10. 'explicit' → logprob: -6.440921306610107

Token 202: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7030787467956543
    2. ' la' → logprob: -1.8280787467956543
    3. ' sys' → logprob: -2.2030787467956543
    4. ' le' → logprob: -2.4530787467956543
    5. 'l' → logprob: -3.0780787467956543
    6. ' functools' → logprob: -3.7030787467956543
    7. 'la' → logprob: -4.578078746795654
    8. 'sys' → logprob: -4.578078746795654
    9. 'le' → logprob: -4.703078746795654
    10. 'import' → logprob: -4.703078746795654

Token 203: ''espace' (ID: 118124)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9576055407524109
    2. 'namespace' → logprob: -2.0826056003570557
    3. '_globals' → logprob: -2.2076056003570557
    4. 'sys' → logprob: -3.3326056003570557
    5. ' namespace' → logprob: -3.3326056003570557
    6. 'globals' → logprob: -3.4576056003570557
    7. ''import' → logprob: -3.4576056003570557
    8. '_namespace' → logprob: -3.7076056003570557
    9. 'es' → logprob: -3.8326056003570557
    10. 'scope' → logprob: -4.082605361938477

Token 204: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5517013072967529
    2. ' ' → logprob: -1.176701307296753
    3. '_' → logprob: -2.926701307296753
    4. '  ' → logprob: -4.176701545715332
    5. ' des' → logprob: -4.426701545715332
    6. ' )' → logprob: -4.926701545715332
    7. ')' → logprob: -5.801701545715332
    8. '__' → logprob: -5.926701545715332
    9. ' ' → logprob: -6.051701545715332
    10. ',' → logprob: -6.426701545715332

Token 205: ' noms' (ID: 97041)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08517375588417053
    2. 'nom' → logprob: -2.7101738452911377
    3. 'namespace' → logprob: -5.210173606872559
    4. ' noms' → logprob: -5.585173606872559
    5. 'names' → logprob: -5.710173606872559
    6. 'import' → logprob: -6.585173606872559
    7. '__' → logprob: -7.585173606872559
    8. 'nombre' → logprob: -8.335173606872559
    9. 'name' → logprob: -8.960173606872559
    10. ' nom' → logprob: -9.960173606872559

Token 206: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2504867911338806
    2. ',' → logprob: -1.7504868507385254
    3. ' as' → logprob: -4.250486850738525
    4. '.' → logprob: -4.250486850738525
    5. 'from' → logprob: -4.500486850738525
    6. 'as' → logprob: -5.500486850738525
    7. ' ' → logprob: -6.250486850738525
    8. ' import' → logprob: -6.875486850738525
    9. ' ,' → logprob: -8.500486373901367
    10. '<|end|>' → logprob: -8.625486373901367

Token 207: 'dé' (ID: 98340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059329524636268616
    2. ' )' → logprob: -2.9343295097351074
    3. 'import' → logprob: -5.684329509735107
    4. ' as' → logprob: -8.184329986572266
    5. ' ' → logprob: -8.559329986572266
    6. ' ' → logprob: -8.809329986572266
    7. '#' → logprob: -9.184329986572266
    8. 'as' → logprob: -9.809329986572266
    9. ')#' → logprob: -10.059329986572266
    10. 'fun' → logprob: -10.434329986572266

Token 208: 'jà' (ID: 19483)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0008706060471013188
    2. ')' → logprob: -8.000870704650879
    3. '
' → logprob: -9.125870704650879
    4. 'd' → logprob: -10.000870704650879
    5. 'r' → logprob: -10.375870704650879
    6. 'fin' → logprob: -10.375870704650879
    7. 'fault' → logprob: -10.500870704650879
    8. 'clared' → logprob: -10.500870704650879
    9. 'import' → logprob: -10.875870704650879
    10. ' )' → logprob: -10.875870704650879

Token 209: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.013081176206469536
    2. ')' → logprob: -4.513081073760986
    3. ' import' → logprob: -7.013081073760986
    4. ' imported' → logprob: -7.388081073760986
    5. 'importe' → logprob: -8.513081550598145
    6. '_import' → logprob: -9.013081550598145
    7. ' )' → logprob: -9.763081550598145
    8. 'present' → logprob: -11.138081550598145
    9. ' present' → logprob: -11.263081550598145
    10. 'im' → logprob: -11.513081550598145

Token 210: 'é' (ID: 377)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6942365169525146
    2. 'import' → logprob: -1.5692365169525146
    3. ' )' → logprob: -2.9442365169525146
    4. ' from' → logprob: -3.1942365169525146
    5. 'from' → logprob: -3.1942365169525146
    6. ' import' → logprob: -3.5692365169525146
    7. ' en' → logprob: -3.9442365169525146
    8. 'é' → logprob: -3.9442365169525146
    9. ' ' → logprob: -4.194236755371094
    10. ' de' → logprob: -4.569236755371094

Token 211: ' plus' (ID: 2932)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011192000471055508
    2. ' )' → logprob: -4.6361918449401855
    3. 'import' → logprob: -7.5111918449401855
    4. ',' → logprob: -8.136192321777344
    5. ' as' → logprob: -8.261192321777344
    6. ').' → logprob: -9.386192321777344
    7. '.' → logprob: -9.636192321777344
    8. ' ' → logprob: -9.761192321777344
    9. 'as' → logprob: -10.386192321777344
    10. 'from' → logprob: -11.261192321777344

Token 212: ' haut' (ID: 28223)
  Prédit: ' tôt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tôt' → logprob: -0.6320517659187317
    2. ' haut' → logprob: -0.8820517659187317
    3. 'haut' → logprob: -3.007051706314087
    4. 't' → logprob: -6.132051944732666
    5. 'avant' → logprob: -7.132051944732666
    6. ' ' → logprob: -7.257051944732666
    7. 'early' → logprob: -8.382051467895508
    8. 'ieurs' → logprob: -8.632051467895508
    9. ' early' → logprob: -8.882051467895508
    10. 'import' → logprob: -9.007051467895508

Token 213: ' part' (ID: 997)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007748005446046591
    2. ' )' → logprob: -5.632748126983643
    3. 'import' → logprob: -5.757748126983643
    4. ',' → logprob: -7.507748126983643
    5. ')
' → logprob: -8.382747650146484
    6. ' as' → logprob: -9.757747650146484
    7. 'as' → logprob: -10.257747650146484
    8. 'from' → logprob: -10.757747650146484
    9. ').' → logprob: -10.757747650146484
    10. '.' → logprob: -11.007747650146484

Token 214: 'iellement' (ID: 70958)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.6053073406219482
    2. 'iellement' → logprob: -1.6053073406219482
    3. 'iel' → logprob: -1.6053073406219482
    4. 'e' → logprob: -3.6053073406219482
    5. 'i' → logprob: -4.605307579040527
    6. 'ielle' → logprob: -5.105307579040527
    7. 'ic' → logprob: -5.980307579040527
    8. 'out' → logprob: -6.230307579040527
    9. 'icul' → logprob: -6.980307579040527
    10. 'u' → logprob: -7.605307579040527

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004856104031205177
    2. ' )' → logprob: -5.754856109619141
    3. 'import' → logprob: -6.504856109619141
    4. ',' → logprob: -9.62985610961914
    5. ').' → logprob: -9.75485610961914
    6. ')
' → logprob: -10.50485610961914
    7. ' import' → logprob: -11.75485610961914
    8. '),' → logprob: -12.00485610961914
    9. ')#' → logprob: -12.62985610961914
    10. 'from' → logprob: -13.00485610961914

Token 216: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0006432149093598127
    2. ',' → logprob: -7.750643253326416
    3. ' import' → logprob: -9.250642776489258
    4. 'as' → logprob: -9.500642776489258
    5. ' as' → logprob: -11.000642776489258
    6. 'from' → logprob: -11.250642776489258
    7. '.' → logprob: -11.750642776489258
    8. ' ' → logprob: -13.250642776489258
    9. 'fun' → logprob: -14.500642776489258
    10. 'importe' → logprob: -15.125642776489258

Token 217: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.1269538253545761
    2. 'fun' → logprob: -2.1269538402557373
    3. ' fun' → logprob: -10.751954078674316
    4. ' funct' → logprob: -13.376954078674316
    5. '_fun' → logprob: -14.251954078674316
    6. 'f' → logprob: -14.251954078674316
    7. 'func' → logprob: -14.376954078674316
    8. ' ' → logprob: -15.251954078674316
    9. 'functional' → logprob: -16.126953125
    10. ' ' → logprob: -16.126953125

Token 218: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3202630281448364
    2. '

' → logprob: -2.195262908935547
    3. '<|end|>' → logprob: -2.570262908935547
    4. ',' → logprob: -3.695262908935547
    5. '<|end|>' → logprob: -4.445262908935547
    6. 'import' → logprob: -4.445262908935547
    7. '' → logprob: -4.945262908935547
    8. '
' → logprob: -5.195262908935547
    9. 'def' → logprob: -5.320262908935547
    10. '.' → logprob: -5.570262908935547

Token 219: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.27719202637672424
    2. '
' → logprob: -1.5271919965744019
    3. 'import' → logprob: -4.777192115783691
    4. 'def' → logprob: -5.027192115783691
    5. '#' → logprob: -5.902192115783691
    6. '<|end|>' → logprob: -6.527192115783691
    7. '


' → logprob: -6.777192115783691
    8. '\n' → logprob: -6.777192115783691
    9. '' → logprob: -7.527192115783691
    10. ' 

' → logprob: -7.652192115783691

Token 220: ' Modification' (ID: 156523)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.556933879852295
    2. ' math' → logprob: -1.931933879852295
    3. ' sys' → logprob: -1.931933879852295
    4. 'sys' → logprob: -1.931933879852295
    5. ' typing' → logprob: -1.931933879852295
    6. 'import' → logprob: -2.806933879852295
    7. ' threading' → logprob: -3.181933879852295
    8. 'math' → logprob: -3.431933879852295
    9. 'os' → logprob: -4.056933879852295
    10. 'typing' → logprob: -4.431933879852295

Token 221: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08914677798748016
    2. ' ' → logprob: -2.964146852493286
    3. ' of' → logprob: -4.839146614074707
    4. '_' → logprob: -5.214146614074707
    5. ' d' → logprob: -5.589146614074707
    6. ' des' → logprob: -5.839146614074707
    7. 'de' → logprob: -5.839146614074707
    8. ' sys' → logprob: -6.089146614074707
    9. 's' → logprob: -6.214146614074707
    10. '_set' → logprob: -6.589146614074707

Token 222: ' la' (ID: 557)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5476934313774109
    2. ' set' → logprob: -1.5476934909820557
    3. 'set' → logprob: -2.4226934909820557
    4. ' recursion' → logprob: -2.7976934909820557
    5. 'sys' → logprob: -2.9226934909820557
    6. ' the' → logprob: -6.047693252563477
    7. ' ' → logprob: -7.047693252563477
    8. 'the' → logprob: -7.297693252563477
    9. ' threading' → logprob: -7.922693252563477
    10. 'rec' → logprob: -8.422693252563477

Token 223: ' limite' (ID: 48939)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.85013347864151
    2. ' recursion' → logprob: -1.2251334190368652
    3. 'set' → logprob: -1.8501334190368652
    4. 'import' → logprob: -2.6001334190368652
    5. 'lim' → logprob: -4.850133419036865
    6. 'limit' → logprob: -4.975133419036865
    7. 'sys' → logprob: -5.225133419036865
    8. 'r' → logprob: -5.600133419036865
    9. ' set' → logprob: -5.725133419036865
    10. ' réc' → logprob: -5.850133419036865

Token 224: ' maximum' (ID: 10562)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.7544968128204346
    2. '_' → logprob: -1.3794968128204346
    3. ' de' → logprob: -2.1294968128204346
    4. '_de' → logprob: -2.6294968128204346
    5. 'rec' → logprob: -3.0044968128204346
    6. 'de' → logprob: -3.8794968128204346
    7. '_set' → logprob: -4.5044965744018555
    8. 'set' → logprob: -6.6294965744018555
    9. 'd' → logprob: -7.3794965744018555
    10. ' recursion' → logprob: -7.3794965744018555

Token 225: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3452501893043518
    2. '_de' → logprob: -2.345250129699707
    3. 'de' → logprob: -2.720250129699707
    4. '_rec' → logprob: -2.970250129699707
    5. '_set' → logprob: -3.470250129699707
    6. '_' → logprob: -3.595250129699707
    7. '_depth' → logprob: -5.470250129699707
    8. 'rec' → logprob: -5.845250129699707
    9. 'd' → logprob: -5.845250129699707
    10. 'set' → logprob: -5.970250129699707

Token 226: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.04640645161271095
    2. ' réc' → logprob: -4.296406269073486
    3. 'la' → logprob: -4.546406269073486
    4. ' recursion' → logprob: -4.796406269073486
    5. ' la' → logprob: -4.921406269073486
    6. 'r' → logprob: -5.421406269073486
    7. 'l' → logprob: -7.671406269073486
    8. '_rec' → logprob: -7.671406269073486
    9. ' ' → logprob: -9.546406745910645
    10. '_' → logprob: -10.421406745910645

Token 227: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00016158436483237892
    2. 'urs' → logprob: -8.750161170959473
    3. 'ur' → logprob: -13.000161170959473
    4. 'usion' → logprob: -15.125161170959473
    5. 'usr' → logprob: -16.00016212463379
    6. '   ' → logprob: -16.87516212463379
    7. '**' → logprob: -16.87516212463379
    8. 'u' → logprob: -17.00016212463379
    9. 'urrence' → logprob: -17.00016212463379
    10. 'ursive' → logprob: -17.50016212463379

Token 228: ' pour' (ID: 1930)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5547144412994385
    2. '(' → logprob: -1.5547144412994385
    3. '(set' → logprob: -1.5547144412994385
    4. ' set' → logprob: -6.429714202880859
    5. ' (' → logprob: -6.554714202880859
    6. '_set' → logprob: -9.80471420288086
    7. '(
' → logprob: -9.80471420288086
    8. '.set' → logprob: -10.80471420288086
    9. ' ' → logprob: -11.30471420288086
    10. '100' → logprob: -11.55471420288086

Token 229: ' éviter' (ID: 64013)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.25140419602394104
    2. 'set' → logprob: -1.6264041662216187
    3. '500' → logprob: -5.126404285430908
    4. ' éviter' → logprob: -5.626404285430908
    5. '250' → logprob: -5.751404285430908
    6. '200' → logprob: -5.876404285430908
    7. 'prevent' → logprob: -6.376404285430908
    8. '10' → logprob: -6.626404285430908
    9. ' permettre' → logprob: -6.876404285430908
    10. '300' → logprob: -7.001404285430908

Token 230: ' les' (ID: 1341)
  Prédit: ' Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rec' → logprob: -0.5354414582252502
    2. 'Rec' → logprob: -1.0354413986206055
    3. ' Runtime' → logprob: -3.2854413986206055
    4. ' les' → logprob: -4.7854413986206055
    5. ' une' → logprob: -5.2854413986206055
    6. 'Runtime' → logprob: -5.7854413986206055
    7. 'les' → logprob: -6.4104413986206055
    8. ' l' → logprob: -7.0354413986206055
    9. ' des' → logprob: -7.0354413986206055
    10. ' recursion' → logprob: -7.7854413986206055

Token 231: ' erreurs' (ID: 139891)
  Prédit: 'Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rec' → logprob: -0.12744887173175812
    2. ' Rec' → logprob: -3.002448797225952
    3. 'Runtime' → logprob: -3.002448797225952
    4. ' Runtime' → logprob: -4.252449035644531
    5. ' erreurs' → logprob: -6.002449035644531
    6. 'Overflow' → logprob: -6.627449035644531
    7. ' dépasse' → logprob: -7.252449035644531
    8. 'rec' → logprob: -7.252449035644531
    9. ' réc' → logprob: -8.752449035644531
    10. 'Maximum' → logprob: -8.877449035644531

Token 232: ' lors' (ID: 15456)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3512531816959381
    2. ' set' → logprob: -1.2262531518936157
    3. '(set' → logprob: -6.601253032684326
    4. '(' → logprob: -7.101253032684326
    5. ' (' → logprob: -8.226253509521484
    6. ' ' → logprob: -8.476253509521484
    7. '.set' → logprob: -10.851253509521484
    8. '100' → logprob: -10.976253509521484
    9. '_set' → logprob: -10.976253509521484
    10. '=set' → logprob: -11.476253509521484

Token 233: ' des' (ID: 731)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.11671120673418045
    2. 'd' → logprob: -3.116711139678955
    3. ' de' → logprob: -3.116711139678955
    4. ' des' → logprob: -4.241711139678955
    5. 'de' → logprob: -5.116711139678955
    6. '#' → logprob: -7.616711139678955
    7. 'def' → logprob: -8.241711616516113
    8. 'des' → logprob: -8.491711616516113
    9. ' du' → logprob: -9.616711616516113
    10. ' ' → logprob: -9.991711616516113

Token 234: ' appels' (ID: 133870)
  Prédit: ' appels'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appels' → logprob: -0.8506903052330017
    2. 'trait' → logprob: -0.9756903052330017
    3. ' traitements' → logprob: -2.8506903648376465
    4. 'app' → logprob: -3.1006903648376465
    5. 'appel' → logprob: -4.1006903648376465
    6. 'calcul' → logprob: -4.1006903648376465
    7. 'deep' → logprob: -4.3506903648376465
    8. 'tr' → logprob: -4.9756903648376465
    9. 'import' → logprob: -5.1006903648376465
    10. 'rec' → logprob: -5.1006903648376465

Token 235: ' réc' (ID: 36254)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.49848514795303345
    2. 'de' → logprob: -1.7484850883483887
    3. ' de' → logprob: -2.3734850883483887
    4. '(set' → logprob: -3.6234850883483887
    5. '_de' → logprob: -3.6234850883483887
    6. '_set' → logprob: -3.6234850883483887
    7. ' set' → logprob: -4.123485088348389
    8. '_' → logprob: -4.748485088348389
    9. 'rec' → logprob: -5.373485088348389
    10. '(' → logprob: -5.748485088348389

Token 236: 'urs' (ID: 1628)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.006870360113680363
    2. 'urs' → logprob: -5.006870269775391
    3. 'ur' → logprob: -9.75687026977539
    4. 'ursive' → logprob: -10.00687026977539
    5. 'usion' → logprob: -11.38187026977539
    6. '#' → logprob: -12.38187026977539
    7. '-' → logprob: -12.75687026977539
    8. 'ussion' → logprob: -12.88187026977539
    9. '_' → logprob: -13.00687026977539
    10. '**' → logprob: -13.00687026977539

Token 237: 'ifs' (ID: 14119)
  Prédit: 'urs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.6487329602241516
    2. 'ursion' → logprob: -1.0237329006195068
    3. 'ion' → logprob: -2.648732900619507
    4. 's' → logprob: -3.898732900619507
    5. 'ions' → logprob: -4.523733139038086
    6. 'ur' → logprob: -4.523733139038086
    7. 'ons' → logprob: -6.648733139038086
    8. 'ents' → logprob: -7.273733139038086
    9. 'on' → logprob: -7.273733139038086
    10. 'rs' → logprob: -7.773733139038086

Token 238: ' prof' (ID: 1915)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0006791924242861569
    2. ' set' → logprob: -7.375679016113281
    3. '(set' → logprob: -10.375679016113281
    4. '(' → logprob: -11.125679016113281
    5. '.set' → logprob: -13.375679016113281
    6. '
' → logprob: -13.500679016113281
    7. '_set' → logprob: -14.000679016113281
    8. ':set' → logprob: -14.375679016113281
    9. '(
' → logprob: -15.000679016113281
    10. '10' → logprob: -15.125679016113281

Token 239: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.1124626100063324
    2. 'onde' → logprob: -2.3624625205993652
    3. 'ondes' → logprob: -5.112462520599365
    4. 'ond' → logprob: -5.237462520599365
    5. 'on' → logprob: -7.987462520599365
    6. 'fonds' → logprob: -8.862462997436523
    7. 'onc' → logprob: -10.112462997436523
    8. '_' → logprob: -10.487462997436523
    9. '```' → logprob: -10.487462997436523
    10. '=' → logprob: -10.737462997436523

Token 240: '
' (ID: 198)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00015002528380136937
    2. '
' → logprob: -9.125149726867676
    3. ' set' → logprob: -10.250149726867676
    4. '10' → logprob: -13.375149726867676
    5. '(set' → logprob: -14.250149726867676
    6. '.set' → logprob: -14.750149726867676
    7. '#set' → logprob: -14.875149726867676
    8. ' 
' → logprob: -15.000149726867676
    9. '_set' → logprob: -15.125149726867676
    10. '

' → logprob: -15.375149726867676

Token 241: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -4.5491004129871726e-05
    2. ' set' → logprob: -10.000045776367188
    3. '#set' → logprob: -17.625045776367188
    4. '
' → logprob: -18.375045776367188
    5. 'import' → logprob: -18.375045776367188
    6. '.set' → logprob: -19.125045776367188
    7. ' 
' → logprob: -20.125045776367188
    8. ':set' → logprob: -20.375045776367188
    9. ')set' → logprob: -20.500045776367188
    10. '```' → logprob: -20.500045776367188

Token 242: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0009118211455643177
    2. '_rec' → logprob: -7.000911712646484
    3. '_' → logprob: -15.250911712646484
    4. ' recursion' → logprob: -17.250911712646484
    5. '(rec' → logprob: -18.000911712646484
    6. ' rec' → logprob: -18.125911712646484
    7. 'Rec' → logprob: -18.250911712646484
    8. '_recursive' → logprob: -18.500911712646484
    9. 'rc' → logprob: -18.625911712646484
    10. 're' → logprob: -18.750911712646484

Token 243: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.001777757192030549
    2. 'urs' → logprob: -6.376777648925781
    3. 'ors' → logprob: -11.126777648925781
    4. '   ' → logprob: -11.251777648925781
    5. 'ursor' → logprob: -11.376777648925781
    6. 'ursive' → logprob: -11.876777648925781
    7. '(' → logprob: -12.376777648925781
    8. '**' → logprob: -12.501777648925781
    9. '`' → logprob: -12.876777648925781
    10. '_' → logprob: -13.001777648925781

Token 244: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -5.512236498361744e-07
    2. ' limit' → logprob: -15.375000953674316
    3. 'set' → logprob: -16.125
    4. '_limit' → logprob: -16.25
    5. 'imit' → logprob: -16.875
    6. 'lim' → logprob: -17.75
    7. '-limit' → logprob: -18.0
    8. 'Limit' → logprob: -18.5
    9. 'lit' → logprob: -18.75
    10. 'list' → logprob: -19.0

Token 245: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.8889261304575484e-06
    2. '(
' → logprob: -12.875003814697266
    3. ' (' → logprob: -14.500003814697266
    4. '((' → logprob: -14.875003814697266
    5. '(

' → logprob: -15.375003814697266
    6. '()' → logprob: -17.500003814697266
    7. '(
' → logprob: -17.875003814697266
    8. '100' → logprob: -19.250003814697266
    9. ' ' → logprob: -19.500003814697266
    10. '("("' → logprob: -19.875003814697266

Token 246: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023298701271414757
    2. '100' → logprob: -3.773298740386963
    3. '500' → logprob: -11.398298263549805
    4. '200' → logprob: -11.398298263549805
    5. '300' → logprob: -11.523298263549805
    6. '400' → logprob: -11.773298263549805
    7. '999' → logprob: -11.773298263549805
    8. '250' → logprob: -12.898298263549805
    9. '900' → logprob: -14.148298263549805
    10. '150' → logprob: -14.273298263549805

Token 247: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.013099756091833115
    2. '6' → logprob: -4.888099670410156
    3. '7' → logprob: -5.638099670410156
    4. '000' → logprob: -6.513099670410156
    5. '00' → logprob: -7.888099670410156
    6. '5' → logprob: -10.263099670410156
    7. '8' → logprob: -11.013099670410156
    8. '0' → logprob: -12.638099670410156
    9. '*' → logprob: -13.513099670410156
    10. '007' → logprob: -13.888099670410156

Token 248: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.003184244269505143
    2. '9' → logprob: -5.7531843185424805
    3. '8' → logprob: -12.25318431854248
    4. '6' → logprob: -13.25318431854248
    5. '**' → logprob: -19.253183364868164
    6. '

' → logprob: -20.503183364868164
    7. '```' → logprob: -21.003183364868164
    8. '+' → logprob: -21.253183364868164
    9. '
' → logprob: -22.003183364868164
    10. '  ' → logprob: -22.128183364868164

Token 249: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -12.87500286102295
    3. '))' → logprob: -15.62500286102295
    4. ')
' → logprob: -16.750003814697266
    5. '),' → logprob: -18.625003814697266
    6. ')`' → logprob: -18.625003814697266
    7. ')#' → logprob: -18.750003814697266
    8. ')

' → logprob: -19.375003814697266
    9. ')}' → logprob: -19.500003814697266
    10. ')
' → logprob: -20.000003814697266

Token 250: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08458777517080307
    2. '
' → logprob: -3.459587812423706
    3. '#' → logprob: -3.959587812423706
    4. 'import' → logprob: -4.709587574005127
    5. '\n' → logprob: -4.834587574005127
    6. '

' → logprob: -4.834587574005127
    7. '\' → logprob: -6.084587574005127
    8. 'class' → logprob: -7.084587574005127
    9. 'input' → logprob: -7.834587574005127
    10. '```' → logprob: -7.834587574005127

Token 251: ' Red' (ID: 5952)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6402730345726013
    2. 'input' → logprob: -0.7652730345726013
    3. '#' → logprob: -5.890273094177246
    4. 'stdin' → logprob: -6.015273094177246
    5. 'import' → logprob: -6.890273094177246
    6. 'DEBUG' → logprob: -7.390273094177246
    7. ' input' → logprob: -7.890273094177246
    8. 'MAX' → logprob: -9.890273094177246
    9. 'INPUT' → logprob: -10.015273094177246
    10. 'INF' → logprob: -10.390273094177246

Token 252: 'é' (ID: 377)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.42280107736587524
    2. 'irect' → logprob: -1.2978010177612305
    3. 'ef' → logprob: -2.9228010177612305
    4. 'irection' → logprob: -4.1728010177612305
    5. '#' → logprob: -7.2978010177612305
    6. 'ire' → logprob: -8.04780101776123
    7. 'direct' → logprob: -8.42280101776123
    8. 'irected' → logprob: -8.42280101776123
    9. 'dir' → logprob: -9.04780101776123
    10. 'if' → logprob: -9.29780101776123

Token 253: 'fin' (ID: 6994)
  Prédit: 'irection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irection' → logprob: -0.1350339949131012
    2. 'fin' → logprob: -2.6350340843200684
    3. 'ir' → logprob: -3.6350340843200684
    4. 'é' → logprob: -4.385034084320068
    5. 'ém' → logprob: -4.760034084320068
    6. 'ef' → logprob: -5.510034084320068
    7. 'éf' → logprob: -6.510034084320068
    8. 'irect' → logprob: -7.260034084320068
    9. 'em' → logprob: -8.01003360748291
    10. 'if' → logprob: -8.63503360748291

Token 254: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.02035173960030079
    2. 'inir' → logprob: -4.395351886749268
    3. 'ition' → logprob: -5.145351886749268
    4. 'fin' → logprob: -7.145351886749268
    5. 'ir' → logprob: -7.770351886749268
    6. 'init' → logprob: -8.77035140991211
    7. 'in' → logprob: -8.89535140991211
    8. 'def' → logprob: -9.02035140991211
    9. 'f' → logprob: -9.14535140991211
    10. 'if' → logprob: -10.39535140991211

Token 255: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3308749496936798
    2. '=' → logprob: -1.8308749198913574
    3. 'exit' → logprob: -3.3308749198913574
    4. ' =' → logprob: -3.5808749198913574
    5. '(exit' → logprob: -3.9558749198913574
    6. ' def' → logprob: -4.705874919891357
    7. '(' → logprob: -4.955874919891357
    8. '(stdin' → logprob: -5.205874919891357
    9. 'print' → logprob: -5.455874919891357
    10. '(stderr' → logprob: -6.330874919891357

Token 256: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13074272871017456
    2. 'input' → logprob: -2.6307427883148193
    3. 'exit' → logprob: -3.0057427883148193
    4. 'range' → logprob: -8.005743026733398
    5. 'def' → logprob: -8.380743026733398
    6. 'stderr' → logprob: -8.880743026733398
    7. ' print' → logprob: -9.255743026733398
    8. ' input' → logprob: -9.880743026733398
    9. 'stdout' → logprob: -9.880743026733398
    10. 'stdin' → logprob: -10.630743026733398

Token 257: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6126857995986938
    2. 'input' → logprob: -1.2376857995986938
    3. 'def' → logprob: -2.1126856803894043
    4. 'exit' → logprob: -4.362685680389404
    5. 'range' → logprob: -4.487685680389404
    6. ' input' → logprob: -4.737685680389404
    7. ' print' → logprob: -5.112685680389404
    8. 'stdout' → logprob: -6.487685680389404
    9. ' def' → logprob: -6.737685680389404
    10. 'stderr' → logprob: -7.362685680389404

Token 258: ' input' (ID: 3422)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3687683045864105
    2. 'input' → logprob: -2.1187682151794434
    3. ' print' → logprob: -2.2437682151794434
    4. 'exit' → logprob: -3.2437682151794434
    5. ' input' → logprob: -3.6187682151794434
    6. ' exit' → logprob: -4.993768215179443
    7. '=input' → logprob: -5.368768215179443
    8. '=' → logprob: -6.993768215179443
    9. 'def' → logprob: -7.243768215179443
    10. '_input' → logprob: -7.493768215179443

Token 259: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.632762610912323
    2. ' =' → logprob: -0.757762610912323
    3. '=lambda' → logprob: -9.132762908935547
    4. '=input' → logprob: -10.257762908935547
    5. '()' → logprob: -11.757762908935547
    6. 's' → logprob: -12.632762908935547
    7. 'input' → logprob: -13.257762908935547
    8. ' ' → logprob: -13.382762908935547
    9. 'def' → logprob: -14.007762908935547
    10. '	' → logprob: -14.507762908935547

Token 260: ' lire' (ID: 46082)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.81633061170578
    2. 'stdin' → logprob: -0.81633061170578
    3. 'input' → logprob: -3.066330671310425
    4. ' lambda' → logprob: -3.316330671310425
    5. ' stdin' → logprob: -3.566330671310425
    6. ' input' → logprob: -5.816330432891846
    7. '=lambda' → logprob: -7.066330432891846
    8. '(stdin' → logprob: -8.066330909729004
    9. 'stdout' → logprob: -8.441330909729004
    10. '=' → logprob: -9.816330909729004

Token 261: ' une' (ID: 2463)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.059899140149354935
    2. '=lambda' → logprob: -3.184899091720581
    3. ' =' → logprob: -4.30989933013916
    4. 'lambda' → logprob: -6.18489933013916
    5. '()' → logprob: -7.68489933013916
    6. 'line' → logprob: -8.18489933013916
    7. '=input' → logprob: -8.80989933013916
    8. '=sys' → logprob: -8.93489933013916
    9. '().' → logprob: -9.30989933013916
    10. 'input' → logprob: -10.55989933013916

Token 262: ' ligne' (ID: 19583)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.4155319929122925
    2. 'line' → logprob: -1.5405319929122925
    3. '=' → logprob: -1.9155319929122925
    4. ' =' → logprob: -2.040532112121582
    5. 'input' → logprob: -2.915532112121582
    6. '()' → logprob: -3.040532112121582
    7. 'lambda' → logprob: -3.540532112121582
    8. '=lambda' → logprob: -3.790532112121582
    9. 'ligne' → logprob: -3.790532112121582
    10. 'l' → logprob: -4.415532112121582

Token 263: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.188262477517128
    2. '()' → logprob: -2.063262462615967
    3. ' =' → logprob: -3.188262462615967
    4. '=input' → logprob: -6.938262462615967
    5. '().' → logprob: -6.938262462615967
    6. '=lambda' → logprob: -7.938262462615967
    7. '_' → logprob: -8.188262939453125
    8. '=sys' → logprob: -8.938262939453125
    9. '()
' → logprob: -9.188262939453125
    10. 'input' → logprob: -9.438262939453125

Token 264: ' l' (ID: 305)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.006969920825213194
    2. ' stdin' → logprob: -5.006969928741455
    3. 'input' → logprob: -8.881969451904297
    4. 'sys' → logprob: -9.631969451904297
    5. '(stdin' → logprob: -10.756969451904297
    6. 'l' → logprob: -11.631969451904297
    7. 'code' → logprob: -12.256969451904297
    8. 'stdout' → logprob: -12.381969451904297
    9. ' input' → logprob: -12.506969451904297
    10. '.stdin' → logprob: -13.006969451904297

Token 265: ''entrée' (ID: 115820)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.1718745082616806
    2. 'input' → logprob: -2.046874523162842
    3. ''entrée' → logprob: -4.296874523162842
    4. '(stdin' → logprob: -5.046874523162842
    5. 'e' → logprob: -6.046874523162842
    6. 'a' → logprob: -6.171874523162842
    7. ' stdin' → logprob: -6.296874523162842
    8. '.stdin' → logprob: -7.296874523162842
    9. 'entrée' → logprob: -7.671874523162842
    10. ''' → logprob: -7.796874523162842

Token 266: ' standard' (ID: 7024)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.28482121229171753
    2. '()' → logprob: -1.4098212718963623
    3. ')' → logprob: -7.034821033477783
    4. '(stdin' → logprob: -7.159821033477783
    5. '.readline' → logprob: -7.409821033477783
    6. '=' → logprob: -7.659821033477783
    7. 'rstrip' → logprob: -8.034821510314941
    8. ' =' → logprob: -8.909821510314941
    9. 'strip' → logprob: -9.534821510314941
    10. '=sys' → logprob: -9.534821510314941

Token 267: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05604591965675354
    2. ' =' → logprob: -2.9310460090637207
    3. '=lambda' → logprob: -7.681046009063721
    4. '=input' → logprob: -7.931046009063721
    5. 'input' → logprob: -8.181045532226562
    6. 'lambda' → logprob: -11.306045532226562
    7. '_input' → logprob: -11.431045532226562
    8. '_' → logprob: -11.681045532226562
    9. '()' → logprob: -11.806045532226562
    10. ' ' → logprob: -12.681045532226562

Token 268: ' supprimer' (ID: 119553)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.05135828256607056
    2. 'strip' → logprob: -3.051358222961426
    3. ' strip' → logprob: -5.926358222961426
    4. ' r' → logprob: -9.926358222961426
    5. '.rstrip' → logprob: -10.176358222961426
    6. 'r' → logprob: -11.551358222961426
    7. '.strip' → logprob: -13.926358222961426
    8. '_strip' → logprob: -14.676358222961426
    9. 'str' → logprob: -14.801358222961426
    10. '-strip' → logprob: -15.801358222961426

Token 269: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12794293463230133
    2. '().' → logprob: -2.1279430389404297
    3. '()\' → logprob: -7.87794303894043
    4. '(' → logprob: -8.00294303894043
    5. 'rstrip' → logprob: -8.75294303894043
    6. '()
' → logprob: -9.50294303894043
    7. 'strip' → logprob: -11.50294303894043
    8. '.rstrip' → logprob: -11.62794303894043
    9. '('\' → logprob: -11.75294303894043
    10. 'the' → logprob: -11.87794303894043

Token 270: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.28901368379592896
    2. ' trailing' → logprob: -1.9140136241912842
    3. '\n' → logprob: -2.789013624191284
    4. ' ' → logprob: -4.664013862609863
    5. 'ret' → logprob: -4.789013862609863
    6. ' \' → logprob: -5.289013862609863
    7. '\' → logprob: -5.539013862609863
    8. ' caractères' → logprob: -5.539013862609863
    9. '\t' → logprob: -6.039013862609863
    10. 'car' → logprob: -6.664013862609863

Token 271: ' en' (ID: 469)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.3767833411693573
    2. '().' → logprob: -1.6267833709716797
    3. '()' → logprob: -2.5017833709716797
    4. 'strip' → logprob: -4.37678337097168
    5. '.rstrip' → logprob: -4.62678337097168
    6. 'r' → logprob: -5.37678337097168
    7. '.strip' → logprob: -6.12678337097168
    8. 'input' → logprob: -6.75178337097168
    9. '=' → logprob: -7.00178337097168
    10. '_strip' → logprob: -7.62678337097168

Token 272: ' début' (ID: 29589)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.06160067021846771
    2. 'queue' → logprob: -4.436600685119629
    3. 'c' → logprob: -4.561600685119629
    4. 'extr' → logprob: -4.811600685119629
    5. 'ex' → logprob: -4.936600685119629
    6. 'exc' → logprob: -5.061600685119629
    7. '```' → logprob: -5.186600685119629
    8. 't' → logprob: -6.186600685119629
    9. 'tail' → logprob: -6.936600685119629
    10. '
' → logprob: -7.436600685119629

Token 273: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.029276879504323006
    2. ' et' → logprob: -3.7792768478393555
    3. 'input' → logprob: -6.7792768478393555
    4. '.strip' → logprob: -6.9042768478393555
    5. 'strip' → logprob: -7.2792768478393555
    6. ' and' → logprob: -7.5292768478393555
    7. ',' → logprob: -7.6542768478393555
    8. 'rstrip' → logprob: -7.6542768478393555
    9. 'and' → logprob: -8.029276847839355
    10. 'e' → logprob: -8.404276847839355

Token 274: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.00013321757433004677
    2. '```' → logprob: -10.000133514404297
    3. 'fi' → logprob: -10.250133514404297
    4. '
' → logprob: -10.875133514404297
    5. '`' → logprob: -12.125133514404297
    6. ' ' → logprob: -12.250133514404297
    7. '#' → logprob: -12.500133514404297
    8. 'ﬁ' → logprob: -12.625133514404297
    9. 'f' → logprob: -12.875133514404297
    10. '   ' → logprob: -13.000133514404297

Token 275: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05366192013025284
    2. '=' → logprob: -3.178661823272705
    3. ' =' → logprob: -4.928661823272705
    4. '().' → logprob: -6.678661823272705
    5. '()
' → logprob: -7.178661823272705
    6. '=input' → logprob: -8.303662300109863
    7. ')' → logprob: -8.428662300109863
    8. '_input' → logprob: -8.428662300109863
    9. '_' → logprob: -8.928662300109863
    10. 'input' → logprob: -9.053662300109863

Token 276: 'def' (ID: 1314)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004387750814203173
    2. ' input' → logprob: -8.375438690185547
    3. ' =' → logprob: -9.125438690185547
    4. '=input' → logprob: -9.875438690185547
    5. '=' → logprob: -10.875438690185547
    6. 'lambda' → logprob: -11.750438690185547
    7. 'def' → logprob: -11.875438690185547
    8. 'inp' → logprob: -12.250438690185547
    9. '_input' → logprob: -12.375438690185547
    10. 'in' → logprob: -13.250438690185547

Token 277: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.018719539046287537
    2. 'input' → logprob: -4.018719673156738
    3. ' inp' → logprob: -7.768719673156738
    4. ' ' → logprob: -9.643719673156738
    5. '_input' → logprob: -10.393719673156738
    6. '	input' → logprob: -11.268719673156738
    7. 'inp' → logprob: -11.393719673156738
    8. ' read' → logprob: -11.518719673156738
    9. ' readline' → logprob: -12.518719673156738
    10. 'Input' → logprob: -12.893719673156738

Token 278: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0034019285812973976
    2. '()' → logprob: -6.003401756286621
    3. '().' → logprob: -7.128401756286621
    4. '():
' → logprob: -9.503401756286621
    5. ' ():' → logprob: -10.003401756286621
    6. '(' → logprob: -13.503401756286621
    7. ' ()' → logprob: -14.003401756286621
    8. '():

' → logprob: -14.378401756286621
    9. '():
' → logprob: -14.503401756286621
    10. '(prompt' → logprob: -14.878401756286621

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022222446277737617
    2. ' return' → logprob: -3.8972225189208984
    3. '	return' → logprob: -6.522222518920898
    4. 'return' → logprob: -8.647222518920898
    5. '   ' → logprob: -10.522222518920898
    6. ' ' → logprob: -12.897222518920898
    7. '   ' → logprob: -12.897222518920898
    8. '    ' → logprob: -15.272222518920898
    9. '  ' → logprob: -15.397222518920898
    10. '       ' → logprob: -16.0222225189209

Token 280: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008633950725197792
    2. ' return' → logprob: -4.758634090423584
    3. '   ' → logprob: -10.883633613586426
    4. '	return' → logprob: -15.008633613586426
    5. ' ' → logprob: -16.383634567260742
    6. 'ret' → logprob: -16.383634567260742
    7. 'stdin' → logprob: -17.133634567260742
    8. '{return' → logprob: -17.633634567260742
    9. '    
' → logprob: -18.133634567260742
    10. 'r' → logprob: -18.758634567260742

Token 281: ' Util' (ID: 13564)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.030796373263001442
    2. ' return' → logprob: -3.5307962894439697
    3. '   ' → logprob: -6.905796527862549
    4. 'ret' → logprob: -11.03079605102539
    5. 'r' → logprob: -11.78079605102539
    6. ' ' → logprob: -12.15579605102539
    7. 'line' → logprob: -12.53079605102539
    8. ' ' → logprob: -13.15579605102539
    9. 're' → logprob: -13.65579605102539
    10. '	return' → logprob: -13.78079605102539

Token 282: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.004852668847888708
    2. 'iser' → logprob: -5.629852771759033
    3. 'isez' → logprob: -7.129852771759033
    4. 'ize' → logprob: -8.004852294921875
    5. 'is' → logprob: -9.879852294921875
    6. 'isation' → logprob: -11.004852294921875
    7. 'er' → logprob: -11.129852294921875
    8. 'aise' → logprob: -11.504852294921875
    9. 'e' → logprob: -11.754852294921875
    10. 'ises' → logprob: -12.504852294921875

Token 283: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.43232861161231995
    2. 'stdin' → logprob: -1.0573285818099976
    3. '(stdin' → logprob: -5.682328701019287
    4. '.stdin' → logprob: -9.432328224182129
    5. '   ' → logprob: -10.557328224182129
    6. 'return' → logprob: -10.682328224182129
    7. ' return' → logprob: -11.182328224182129
    8. 's' → logprob: -11.182328224182129
    9. ' ' → logprob: -11.182328224182129
    10. 'stdout' → logprob: -11.307328224182129

Token 284: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.1888679839321412e-05
    2. '.' → logprob: -10.750021934509277
    3. ' readline' → logprob: -15.125021934509277
    4. '.read' → logprob: -16.25002098083496
    5. '.rstrip' → logprob: -17.00002098083496
    6. '().' → logprob: -18.75002098083496
    7. ' .' → logprob: -19.00002098083496
    8. '.buffer' → logprob: -19.00002098083496
    9. '.readlines' → logprob: -19.50002098083496
    10. '.line' → logprob: -19.62502098083496

Token 285: ' pour' (ID: 1930)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00024168188974726945
    2. '   ' → logprob: -8.62524127960205
    3. '()' → logprob: -9.87524127960205
    4. '.rstrip' → logprob: -12.37524127960205
    5. '.strip' → logprob: -12.75024127960205
    6. ').' → logprob: -14.12524127960205
    7. 'rstrip' → logprob: -14.37524127960205
    8. 'return' → logprob: -14.62524127960205
    9. ' ' → logprob: -14.75024127960205
    10. '()).' → logprob: -15.75024127960205

Token 286: ' lire' (ID: 46082)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24867883324623108
    2. ' return' → logprob: -1.7486788034439087
    3. 'strip' → logprob: -4.123678684234619
    4. 'stdin' → logprob: -4.123678684234619
    5. 'rstrip' → logprob: -4.748678684234619
    6. ' stdin' → logprob: -5.873678684234619
    7. ' strip' → logprob: -6.998678684234619
    8. '().' → logprob: -8.123679161071777
    9. 'stdout' → logprob: -8.498679161071777
    10. '(stdin' → logprob: -8.623679161071777

Token 287: ' une' (ID: 2463)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001234428636962548
    2. '()' → logprob: -9.000123023986816
    3. '()).' → logprob: -17.375123977661133
    4. '(' → logprob: -17.875123977661133
    5. '()
' → logprob: -18.500123977661133
    6. 'rstrip' → logprob: -18.625123977661133
    7. ' ().' → logprob: -19.250123977661133
    8. '.rstrip' → logprob: -19.750123977661133
    9. ').' → logprob: -19.875123977661133
    10. '()

' → logprob: -20.000123977661133

Token 288: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5823902487754822
    2. 'ligne' → logprob: -0.8323902487754822
    3. ' line' → logprob: -5.832390308380127
    4. 'line' → logprob: -5.957390308380127
    5. 'l' → logprob: -8.457389831542969
    6. ' chaîne' → logprob: -8.457389831542969
    7. ' ' → logprob: -9.207389831542969
    8. 'chaine' → logprob: -9.332389831542969
    9. '()' → logprob: -9.957389831542969
    10. ' string' → logprob: -10.332389831542969

Token 289: ' brute' (ID: 128602)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00012964145571459085
    2. '()' → logprob: -9.625129699707031
    3. '   ' → logprob: -10.000129699707031
    4. '.rstrip' → logprob: -12.000129699707031
    5. '.strip' → logprob: -12.125129699707031
    6. ').' → logprob: -12.750129699707031
    7. '.' → logprob: -13.750129699707031
    8. 'rstrip' → logprob: -13.875129699707031
    9. '()).' → logprob: -15.000129699707031
    10. ' .' → logprob: -15.250129699707031

Token 290: ' depuis' (ID: 16277)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0022619483061134815
    2. '   ' → logprob: -6.377262115478516
    3. '()' → logprob: -8.002262115478516
    4. '.strip' → logprob: -9.502262115478516
    5. '.rstrip' → logprob: -9.627262115478516
    6. ').' → logprob: -10.002262115478516
    7. '.' → logprob: -11.252262115478516
    8. ' .' → logprob: -12.377262115478516
    9. 'return' → logprob: -12.502262115478516
    10. ',' → logprob: -13.002262115478516

Token 291: ' l' (ID: 305)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.4009780287742615
    2. ' stdin' → logprob: -1.1509780883789062
    3. '(stdin' → logprob: -4.275978088378906
    4. '.stdin' → logprob: -9.650978088378906
    5. '()' → logprob: -10.525978088378906
    6. 'l' → logprob: -12.025978088378906
    7. 'la' → logprob: -12.900978088378906
    8. 'sys' → logprob: -12.900978088378906
    9. ' la' → logprob: -13.525978088378906
    10. ' l' → logprob: -13.900978088378906

Token 292: ''entrée' (ID: 115820)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.126557394862175
    2. '(stdin' → logprob: -3.2515573501586914
    3. ''entrée' → logprob: -3.6265573501586914
    4. 'e' → logprob: -4.001557350158691
    5. ' stdin' → logprob: -4.001557350158691
    6. '.stdin' → logprob: -4.501557350158691
    7. 'input' → logprob: -6.126557350158691
    8. 'entrée' → logprob: -7.251557350158691
    9. 'a' → logprob: -7.501557350158691
    10. 'es' → logprob: -7.751557350158691

Token 293: ' standard' (ID: 7024)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.051313310861587524
    2. '   ' → logprob: -3.0513134002685547
    3. 'return' → logprob: -6.551313400268555
    4. '()' → logprob: -8.051313400268555
    5. '.strip' → logprob: -8.426313400268555
    6. ' return' → logprob: -8.676313400268555
    7. '.rstrip' → logprob: -8.801313400268555
    8. ',' → logprob: -9.301313400268555
    9. '.readline' → logprob: -9.676313400268555
    10. '.' → logprob: -9.676313400268555

Token 294: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001019590417854488
    2. 'return' → logprob: -7.376019477844238
    3. ' return' → logprob: -8.376019477844238
    4. '().' → logprob: -9.376019477844238
    5. '	return' → logprob: -10.751019477844238
    6. '()' → logprob: -11.001019477844238
    7. '    
' → logprob: -11.876019477844238
    8. '   ' → logprob: -11.876019477844238
    9. '    ' → logprob: -12.376019477844238
    10. ',' → logprob: -12.376019477844238

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030686063109897077
    2. ' return' → logprob: -8.750307083129883
    3. 'return' → logprob: -8.875307083129883
    4. '	return' → logprob: -12.875307083129883
    5. ',' → logprob: -13.250307083129883
    6. '   ' → logprob: -13.375307083129883
    7. '    
' → logprob: -14.750307083129883
    8. '  ' → logprob: -14.875307083129883
    9. '
' → logprob: -15.000307083129883
    10. '    ' → logprob: -15.125307083129883

Token 296: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4565282464027405
    2. '   ' → logprob: -1.5815281867980957
    3. ' return' → logprob: -1.8315281867980957
    4. ' line' → logprob: -8.206528663635254
    5. 'line' → logprob: -8.331528663635254
    6. '	return' → logprob: -9.206528663635254
    7. ' ' → logprob: -10.956528663635254
    8. ' s' → logprob: -11.206528663635254
    9. 's' → logprob: -11.831528663635254
    10. '   ' → logprob: -11.956528663635254

Token 297: ' Ensuite' (ID: 113884)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.067570760846138
    2. ' return' → logprob: -3.067570686340332
    3. '   ' → logprob: -4.442570686340332
    4. 'line' → logprob: -5.192570686340332
    5. ' line' → logprob: -6.817570686340332
    6. 'ligne' → logprob: -9.192570686340332
    7. 's' → logprob: -9.317570686340332
    8. 'l' → logprob: -10.317570686340332
    9. 'raw' → logprob: -10.317570686340332
    10. 'ret' → logprob: -10.692570686340332

Token 298: ' retire' (ID: 48410)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6296982169151306
    2. ' return' → logprob: -0.8796982169151306
    3. '().' → logprob: -3.1296982765197754
    4. '   ' → logprob: -6.004698276519775
    5. '.strip' → logprob: -6.504698276519775
    6. ':return' → logprob: -6.504698276519775
    7. '():' → logprob: -7.129698276519775
    8. ' .' → logprob: -7.629698276519775
    9. ':' → logprob: -8.129697799682617
    10. ' strip' → logprob: -8.254697799682617

Token 299: ' les' (ID: 1341)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.17984700202941895
    2. '()' → logprob: -1.804847002029419
    3. ' les' → logprob: -9.67984676361084
    4. '(' → logprob: -12.05484676361084
    5. '()
' → logprob: -12.05484676361084
    6. 'strip' → logprob: -12.17984676361084
    7. '.strip' → logprob: -12.42984676361084
    8. '()\' → logprob: -12.42984676361084
    9. 'rstrip' → logprob: -12.55484676361084
    10. '(strip' → logprob: -13.17984676361084

Token 300: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.014724201522767544
    2. ' trailing' → logprob: -5.264724254608154
    3. 'esp' → logprob: -5.889724254608154
    4. '\n' → logprob: -5.889724254608154
    5. 'spaces' → logprob: -7.139724254608154
    6. ' \' → logprob: -7.389724254608154
    7. ' spaces' → logprob: -7.514724254608154
    8. ' caractères' → logprob: -7.889724254608154
    9. 'car' → logprob: -8.014723777770996
    10. ' whitespace' → logprob: -8.639723777770996

Token 301: ' et' (ID: 859)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6828044056892395
    2. '()' → logprob: -1.0578043460845947
    3. '.strip' → logprob: -2.8078043460845947
    4. 'strip' → logprob: -2.8078043460845947
    5. '   ' → logprob: -4.557804584503174
    6. '(strip' → logprob: -5.057804584503174
    7. 'rstrip' → logprob: -5.182804584503174
    8. '.rstrip' → logprob: -6.682804584503174
    9. ' strip' → logprob: -7.182804584503174
    10. '()\' → logprob: -7.932804584503174

Token 302: ' le' (ID: 505)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0693227052688599
    2. ' les' → logprob: -1.5693227052688599
    3. 'le' → logprob: -2.0693225860595703
    4. 'return' → logprob: -2.3193225860595703
    5. 'la' → logprob: -2.9443225860595703
    6. 'les' → logprob: -3.6943225860595703
    7. ' la' → logprob: -3.8193225860595703
    8. ' le' → logprob: -3.9443225860595703
    9. 'ret' → logprob: -4.19432258605957
    10. '\' → logprob: -4.44432258605957

Token 303: ' caractère' (ID: 80509)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5065327286720276
    2. ''\' → logprob: -1.2565326690673828
    3. 's' → logprob: -3.006532669067383
    4. 'rstrip' → logprob: -4.381532669067383
    5. '"\' → logprob: -5.006532669067383
    6. 'return' → logprob: -5.381532669067383
    7. '`\' → logprob: -5.506532669067383
    8. '\t' → logprob: -5.506532669067383
    9. 'newline' → logprob: -5.506532669067383
    10. ' retour' → logprob: -5.756532669067383

Token 304: ' de' (ID: 334)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.13096435368061066
    2. ' de' → logprob: -3.0059642791748047
    3. ''\' → logprob: -3.0059642791748047
    4. 'de' → logprob: -4.755964279174805
    5. ' \' → logprob: -5.380964279174805
    6. '`\' → logprob: -5.505964279174805
    7. ' '\' → logprob: -6.255964279174805
    8. '\' → logprob: -6.255964279174805
    9. '"\' → logprob: -7.005964279174805
    10. 's' → logprob: -7.755964279174805

Token 305: ' fin' (ID: 2131)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.35686466097831726
    2. 'fin' → logprob: -1.3568646907806396
    3. 'nou' → logprob: -4.3568644523620605
    4. ' fin' → logprob: -4.6068644523620605
    5. 's' → logprob: -4.9818644523620605
    6. 'newline' → logprob: -5.7318644523620605
    7. 'ret' → logprob: -6.2318644523620605
    8. ' nouvelle' → logprob: -6.3568644523620605
    9. 'n' → logprob: -6.6068644523620605
    10. ' saut' → logprob: -6.7318644523620605

Token 306: ' de' (ID: 334)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6656618714332581
    2. ' de' → logprob: -1.2906618118286133
    3. ''\' → logprob: -2.1656618118286133
    4. 'de' → logprob: -3.4156618118286133
    5. ' '\' → logprob: -3.7906618118286133
    6. ' \' → logprob: -4.290661811828613
    7. '"\' → logprob: -4.665661811828613
    8. '\' → logprob: -5.415661811828613
    9. '\r' → logprob: -5.915661811828613
    10. '='\' → logprob: -6.040661811828613

Token 307: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.011776171624660492
    2. ' ligne' → logprob: -4.511775970458984
    3. 'l' → logprob: -7.886775970458984
    4. 'line' → logprob: -8.011775970458984
    5. '\n' → logprob: -11.636775970458984
    6. 'la' → logprob: -12.511775970458984
    7. 'lia' → logprob: -13.261775970458984
    8. 'chaine' → logprob: -13.386775970458984
    9. 'linha' → logprob: -13.386775970458984
    10. 'lin' → logprob: -14.386775970458984

Token 308: ' avec' (ID: 3937)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.44055336713790894
    2. '   ' → logprob: -1.0655534267425537
    3. 'return' → logprob: -5.440553188323975
    4. '.strip' → logprob: -5.815553188323975
    5. ' return' → logprob: -6.190553188323975
    6. ').' → logprob: -7.190553188323975
    7. '.rstrip' → logprob: -7.190553188323975
    8. '()' → logprob: -7.815553188323975
    9. ' ).' → logprob: -9.315553665161133
    10. '.' → logprob: -9.690553665161133

Token 309: ' strip' (ID: 22967)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.04232100397348404
    2. ' strip' → logprob: -4.16732120513916
    3. 'rstrip' → logprob: -4.41732120513916
    4. '().' → logprob: -4.91732120513916
    5. '.strip' → logprob: -5.04232120513916
    6. '.rstrip' → logprob: -9.79232120513916
    7. '(strip' → logprob: -10.79232120513916
    8. '.' → logprob: -11.91732120513916
    9. ' .' → logprob: -12.04232120513916
    10. '   ' → logprob: -12.66732120513916

Token 310: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021995019633322954
    2. '().' → logprob: -6.627199649810791
    3. '()
' → logprob: -7.502199649810791
    4. 'return' → logprob: -8.627199172973633
    5. '():' → logprob: -9.752199172973633
    6. '   ' → logprob: -10.002199172973633
    7. ' ()' → logprob: -11.877199172973633
    8. '())' → logprob: -11.877199172973633
    9. '()`' → logprob: -12.127199172973633
    10. '()\' → logprob: -12.502199172973633

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021438424300868064
    2. 'return' → logprob: -8.875214576721191
    3. ' return' → logprob: -9.875214576721191
    4. '	return' → logprob: -11.125214576721191
    5. '    
' → logprob: -12.875214576721191
    6. '       ' → logprob: -13.000214576721191
    7. '   ' → logprob: -14.000214576721191
    8. '
' → logprob: -14.125214576721191
    9. '    ' → logprob: -14.500214576721191
    10. ')' → logprob: -14.875214576721191

Token 312: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4335467219352722
    2. ' return' → logprob: -1.433546781539917
    3. '   ' → logprob: -2.183546781539917
    4. '	return' → logprob: -7.308546543121338
    5. ' ' → logprob: -11.308547019958496
    6. '   ' → logprob: -12.933547019958496
    7. '    ' → logprob: -13.308547019958496
    8. '  ' → logprob: -13.433547019958496
    9. ' ' → logprob: -14.058547019958496
    10. 'ret' → logprob: -14.558547019958496

Token 313: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.0069255344569683075
    2. ' stdin' → logprob: -5.006925582885742
    3. '(stdin' → logprob: -8.506925582885742
    4. '.stdin' → logprob: -11.881925582885742
    5. 'stdout' → logprob: -14.506925582885742
    6. 'std' → logprob: -15.381925582885742
    7. ' ' → logprob: -16.131925582885742
    8. 'st' → logprob: -16.756925582885742
    9. 'stderr' → logprob: -16.881925582885742
    10. ' ' → logprob: -16.881925582885742

Token 314: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00026658078422769904
    2. '().' → logprob: -8.250267028808594
    3. '.' → logprob: -12.375267028808594
    4. '.read' → logprob: -14.000267028808594
    5. '.rstrip' → logprob: -16.625267028808594
    6. '.readlines' → logprob: -17.625267028808594
    7. '.strip' → logprob: -18.000267028808594
    8. ' readline' → logprob: -18.500267028808594
    9. ' .' → logprob: -19.000267028808594
    10. '()' → logprob: -20.375267028808594

Token 315: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00015860427811276168
    2. '()' → logprob: -8.750158309936523
    3. ' ().' → logprob: -15.750158309936523
    4. '(' → logprob: -17.500158309936523
    5. '.strip' → logprob: -20.500158309936523
    6. '.rstrip' → logprob: -20.875158309936523
    7. ' ()' → logprob: -21.250158309936523
    8. '()
' → logprob: -21.375158309936523
    9. '()`' → logprob: -21.750158309936523
    10. '().'' → logprob: -22.000158309936523

Token 316: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.176947600673884e-05
    2. 'rstrip' → logprob: -10.750021934509277
    3. ' strip' → logprob: -15.250021934509277
    4. 'decode' → logprob: -17.12502098083496
    5. '(strip' → logprob: -20.00002098083496
    6. '_strip' → logprob: -20.75002098083496
    7. 'str' → logprob: -21.62502098083496
    8. 'Strip' → logprob: -22.12502098083496
    9. '-strip' → logprob: -22.62502098083496
    10. '.strip' → logprob: -22.75002098083496

Token 317: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010509284038562328
    2. '()
' → logprob: -9.250104904174805
    3. '()\' → logprob: -12.250104904174805
    4. '()

' → logprob: -13.500104904174805
    5. '(' → logprob: -13.875104904174805
    6. ' ()' → logprob: -14.125104904174805
    7. '#' → logprob: -15.250104904174805
    8. '()`' → logprob: -15.625104904174805
    9. '<|end|>' → logprob: -15.875104904174805
    10. '```' → logprob: -16.375104904174805

Token 318: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5596862435340881
    2. '#' → logprob: -0.9346862435340881
    3. 'import' → logprob: -4.309686183929443
    4. 'class' → logprob: -5.059686183929443
    5. '<|end|>' → logprob: -5.684686183929443
    6. 'from' → logprob: -5.934686183929443
    7. '#!/' → logprob: -6.809686183929443
    8. '\n' → logprob: -6.809686183929443
    9. '
' → logprob: -6.934686183929443
    10. '```' → logprob: -7.184686183929443

Token 319: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006044100970029831
    2. '#' → logprob: -5.756043910980225
    3. 'class' → logprob: -5.881043910980225
    4. 'import' → logprob: -10.381044387817383
    5. 'from' → logprob: -11.131044387817383
    6. ' def' → logprob: -11.506044387817383
    7. 'if' → logprob: -12.756044387817383
    8. 'print' → logprob: -13.256044387817383
    9. '#!/' → logprob: -13.631044387817383
    10. 'for' → logprob: -13.756044387817383

Token 320: ' util' (ID: 3667)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014928570948541164
    2. ' def' → logprob: -4.514928340911865
    3. ' factorial' → logprob: -6.139928340911865
    4. 's' → logprob: -7.764928340911865
    5. 'factor' → logprob: -8.139928817749023
    6. 'sum' → logprob: -8.389928817749023
    7. '()' → logprob: -8.764928817749023
    8. ' de' → logprob: -9.264928817749023
    9. 'de' → logprob: -9.514928817749023
    10. ' sum' → logprob: -9.639928817749023

Token 321: 'itaire' (ID: 28335)
  Prédit: 'itaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itaire' → logprob: -0.021421844139695168
    2. 'ité' → logprob: -4.396421909332275
    3. 'isation' → logprob: -5.896421909332275
    4. 'def' → logprob: -6.271421909332275
    5. 'isée' → logprob: -6.521421909332275
    6. 'ity' → logprob: -6.771421909332275
    7. 'isateur' → logprob: -7.271421909332275
    8. 'itaires' → logprob: -7.896421909332275
    9. 'is' → logprob: -8.646421432495117
    10. 'ités' → logprob: -9.271421432495117

Token 322: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00029840084607712924
    2. ' def' → logprob: -8.375298500061035
    3. ':' → logprob: -11.125298500061035
    4. 'de' → logprob: -11.250298500061035
    5. '(' → logprob: -11.375298500061035
    6. '()' → logprob: -11.750298500061035
    7. '(def' → logprob: -12.375298500061035
    8. ':def' → logprob: -13.125298500061035
    9. '():' → logprob: -13.250298500061035
    10. 's' → logprob: -13.500298500061035

Token 323: ' lire' (ID: 46082)
  Prédit: ' factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factor' → logprob: -1.8726813793182373
    2. ' lire' → logprob: -1.9976813793182373
    3. 'factor' → logprob: -2.3726813793182373
    4. ' l' → logprob: -2.9976813793182373
    5. ' calcul' → logprob: -2.9976813793182373
    6. ' multiplier' → logprob: -2.9976813793182373
    7. ' read' → logprob: -3.1226813793182373
    8. ' flatten' → logprob: -3.2476813793182373
    9. ' afficher' → logprob: -3.2476813793182373
    10. ' la' → logprob: -3.3726813793182373

Token 324: ' un' (ID: 537)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5714491605758667
    2. 'int' → logprob: -1.4464491605758667
    3. 'un' → logprob: -2.1964492797851562
    4. ' un' → logprob: -3.3214492797851562
    5. 'n' → logprob: -3.8214492797851562
    6. 'une' → logprob: -4.321449279785156
    7. 'la' → logprob: -5.571449279785156
    8. 'ent' → logprob: -5.696449279785156
    9. '():' → logprob: -5.696449279785156
    10. 'l' → logprob: -6.696449279785156

Token 325: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.08309800922870636
    2. 'int' → logprob: -2.8330979347229004
    3. ' entier' → logprob: -4.5830979347229
    4. 'e' → logprob: -5.2080979347229
    5. 'nombre' → logprob: -5.5830979347229
    6. 'ligne' → logprob: -8.208098411560059
    7. 'entrée' → logprob: -8.708098411560059
    8. 'liste' → logprob: -8.708098411560059
    9. 'tuple' → logprob: -9.083098411560059
    10. 'inte' → logprob: -9.333098411560059

Token 326: ' depuis' (ID: 16277)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08027902245521545
    2. '()' → logprob: -2.5802791118621826
    3. '():' → logprob: -6.7052788734436035
    4. 'de' → logprob: -10.080279350280762
    5. '():
' → logprob: -10.205279350280762
    6. ' def' → logprob: -10.330279350280762
    7. '()
' → logprob: -10.705279350280762
    8. 's' → logprob: -11.705279350280762
    9. '()

' → logprob: -11.705279350280762
    10. '(' → logprob: -12.205279350280762

Token 327: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.027824310585856438
    2. 'input' → logprob: -4.152824401855469
    3. 'la' → logprob: -5.652824401855469
    4. ' l' → logprob: -5.777824401855469
    5. 'une' → logprob: -6.027824401855469
    6. 'stdin' → logprob: -6.402824401855469
    7. '()' → logprob: -7.652824401855469
    8. ' input' → logprob: -8.402824401855469
    9. ' stdin' → logprob: -9.277824401855469
    10. 'entrée' → logprob: -9.277824401855469

Token 328: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.08114797621965408
    2. 'a' → logprob: -3.2061479091644287
    3. 'input' → logprob: -4.081148147583008
    4. 'entrée' → logprob: -4.081148147583008
    5. 'e' → logprob: -6.456148147583008
    6. ''' → logprob: -6.706148147583008
    7. 'es' → logprob: -7.831148147583008
    8. ' input' → logprob: -9.081148147583008
    9. 'stdin' → logprob: -9.331148147583008
    10. '’entrée' → logprob: -9.581148147583008

Token 329: ' standard' (ID: 7024)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12778295576572418
    2. '()' → logprob: -2.1277830600738525
    3. '()
' → logprob: -7.252782821655273
    4. '():' → logprob: -9.377782821655273
    5. ' def' → logprob: -10.502782821655273
    6. '()

' → logprob: -11.002782821655273
    7. '():
' → logprob: -12.752782821655273
    8. '()`' → logprob: -12.752782821655273
    9. ':' → logprob: -12.877782821655273
    10. '()\' → logprob: -13.127782821655273

Token 330: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.4849443838757e-06
    2. ' def' → logprob: -12.500004768371582
    3. '
' → logprob: -15.125004768371582
    4. '()' → logprob: -15.750004768371582
    5. ':def' → logprob: -15.750004768371582
    6. '()
' → logprob: -16.500003814697266
    7. 'ndef' → logprob: -16.875003814697266
    8. '(def' → logprob: -17.750003814697266
    9. '():
' → logprob: -18.000003814697266
    10. '_def' → logprob: -18.125003814697266

Token 331: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5048530030981055e-06
    2. ' def' → logprob: -13.500001907348633
    3. '
' → logprob: -17.000001907348633
    4. 'de' → logprob: -18.250001907348633
    5. ':def' → logprob: -19.500001907348633
    6. 'ndef' → logprob: -21.375001907348633
    7. '()
' → logprob: -22.000001907348633
    8. '(def' → logprob: -22.125001907348633
    9. '_def' → logprob: -22.625001907348633
    10. '()' → logprob: -22.875001907348633

Token 332: ' read' (ID: 1729)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1706533432006836
    2. 'read' → logprob: -1.1706533432006836
    3. ' read' → logprob: -1.9206533432006836
    4. 'i' → logprob: -2.7956533432006836
    5. 'I' → logprob: -3.1706533432006836
    6. 'input' → logprob: -3.1706533432006836
    7. 'inp' → logprob: -3.2956533432006836
    8. 'in' → logprob: -4.295653343200684
    9. ' input' → logprob: -4.670653343200684
    10. 'ni' → logprob: -5.420653343200684

Token 333: '():
' (ID: 8595)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25234171748161316
    2. '_int' → logprob: -1.5023417472839355
    3. 'Int' → logprob: -8.752341270446777
    4. '()' → logprob: -9.127341270446777
    5. 'line' → logprob: -9.377341270446777
    6. 'ln' → logprob: -10.502341270446777
    7. 'in' → logprob: -11.002341270446777
    8. 'i' → logprob: -12.127341270446777
    9. '_in' → logprob: -12.377341270446777
    10. '_line' → logprob: -13.127341270446777

Token 334: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008936460129916668
    2. '()' → logprob: -5.133936405181885
    3. '():
' → logprob: -6.008936405181885
    4. ':' → logprob: -7.758936405181885
    5. '   ' → logprob: -9.758936882019043
    6. ' ():' → logprob: -10.008936882019043
    7. ':
' → logprob: -12.758936882019043
    8. 'return' → logprob: -12.758936882019043
    9. ' ()' → logprob: -13.133936882019043
    10. ':return' → logprob: -13.383936882019043

Token 335: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2840157151222229
    2. ' return' → logprob: -1.5340156555175781
    3. 'int' → logprob: -4.034015655517578
    4. '   ' → logprob: -4.284015655517578
    5. ' int' → logprob: -9.909015655517578
    6. '	return' → logprob: -10.909015655517578
    7. ':int' → logprob: -12.284015655517578
    8. ':return' → logprob: -12.284015655517578
    9. ' ' → logprob: -12.409015655517578
    10. '    ' → logprob: -13.284015655517578

Token 336: ' Lit' (ID: 45595)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00676700659096241
    2. ' return' → logprob: -5.0067667961120605
    3. '   ' → logprob: -10.006767272949219
    4. 'int' → logprob: -12.131767272949219
    5. 'ret' → logprob: -14.631767272949219
    6. '	return' → logprob: -15.006767272949219
    7. ' ' → logprob: -16.13176727294922
    8. ' ' → logprob: -16.38176727294922
    9. '    ' → logprob: -17.38176727294922
    10. '  ' → logprob: -17.63176727294922

Token 337: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3663843274116516
    2. 'int' → logprob: -1.2413842678070068
    3. ' int' → logprob: -4.241384506225586
    4. '   ' → logprob: -6.741384506225586
    5. ' ' → logprob: -6.866384506225586
    6. '=int' → logprob: -8.241384506225586
    7. ' ()' → logprob: -8.741384506225586
    8. '().' → logprob: -9.241384506225586
    9. ' a' → logprob: -9.616384506225586
    10. ' n' → logprob: -9.616384506225586

Token 338: ' ligne' (ID: 19583)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06443915516138077
    2. 'ligne' → logprob: -3.939439058303833
    3. 'ent' → logprob: -4.314439296722412
    4. 'n' → logprob: -4.439439296722412
    5. '()' → logprob: -4.814439296722412
    6. 'l' → logprob: -5.189439296722412
    7. 'nt' → logprob: -6.689439296722412
    8. '=int' → logprob: -6.814439296722412
    9. ' ligne' → logprob: -7.689439296722412
    10. 'line' → logprob: -8.314438819885254

Token 339: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02497662790119648
    2. '   ' → logprob: -4.14997673034668
    3. '()
' → logprob: -5.64997673034668
    4. '=' → logprob: -6.27497673034668
    5. 'def' → logprob: -6.77497673034668
    6. '().' → logprob: -7.52497673034668
    7. ' =' → logprob: -7.89997673034668
    8. 'return' → logprob: -8.02497673034668
    9. ',' → logprob: -8.27497673034668
    10. ')' → logprob: -8.77497673034668

Token 340: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31546205282211304
    2. ' return' → logprob: -1.3154621124267578
    3. 'int' → logprob: -6.565462112426758
    4. '   ' → logprob: -7.315462112426758
    5. '	return' → logprob: -10.440462112426758
    6. ' int' → logprob: -10.940462112426758
    7. 'eturn' → logprob: -11.440462112426758
    8. ')' → logprob: -11.565462112426758
    9. 'n' → logprob: -12.065462112426758
    10. ':return' → logprob: -12.065462112426758

Token 341: ' transforme' (ID: 184109)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.036426421254873276
    2. ' return' → logprob: -3.411426305770874
    3. 'int' → logprob: -6.036426544189453
    4. 'strip' → logprob: -8.661426544189453
    5. 'split' → logprob: -8.911426544189453
    6. '=int' → logprob: -10.786426544189453
    7. 'def' → logprob: -11.786426544189453
    8. '   ' → logprob: -11.911426544189453
    9. 'map' → logprob: -12.036426544189453
    10. 'eturn' → logprob: -12.286426544189453

Token 342: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3878231346607208
    2. 'en' → logprob: -1.1378231048583984
    3. 'int' → logprob: -7.262823104858398
    4. '()' → logprob: -8.512823104858398
    5. '(int' → logprob: -11.387823104858398
    6. ' int' → logprob: -11.512823104858398
    7. ' ' → logprob: -11.637823104858398
    8. ' into' → logprob: -12.637823104858398
    9. '   ' → logprob: -13.012823104858398
    10. '=int' → logprob: -13.012823104858398

Token 343: ' chaîne' (ID: 89288)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0025093089789152145
    2. 'ent' → logprob: -6.002509117126465
    3. ' int' → logprob: -10.502509117126465
    4. ' entier' → logprob: -12.252509117126465
    5. 'integer' → logprob: -13.627509117126465
    6. '=int' → logprob: -16.37751007080078
    7. ' ent' → logprob: -17.37751007080078
    8. 'nombre' → logprob: -17.37751007080078
    9. '<int' → logprob: -17.87751007080078
    10. '[int' → logprob: -18.12751007080078

Token 344: ' de' (ID: 334)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.6656823754310608
    2. 'de' → logprob: -1.415682315826416
    3. ' vide' → logprob: -2.915682315826416
    4. '   ' → logprob: -2.915682315826416
    5. '()' → logprob: -3.040682315826416
    6. ' de' → logprob: -3.790682315826416
    7. 'int' → logprob: -3.790682315826416
    8. '().' → logprob: -4.915682315826416
    9. ' en' → logprob: -5.415682315826416
    10. 'v' → logprob: -5.415682315826416

Token 345: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1961446851491928
    2. 'int' → logprob: -1.821144700050354
    3. ' caractères' → logprob: -4.3211445808410645
    4. 'chars' → logprob: -6.9461445808410645
    5. 'str' → logprob: -7.3211445808410645
    6. 'ent' → logprob: -7.3211445808410645
    7. ' int' → logprob: -8.446145057678223
    8. 'chaine' → logprob: -9.321145057678223
    9. 'entrée' → logprob: -9.571145057678223
    10. 'string' → logprob: -9.571145057678223

Token 346: ' puis' (ID: 18766)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10838977247476578
    2. ' =' → logprob: -3.4833898544311523
    3. '   ' → logprob: -3.9833898544311523
    4. '=' → logprob: -3.9833898544311523
    5. 'int' → logprob: -4.608389854431152
    6. ',' → logprob: -4.983389854431152
    7. '().' → logprob: -4.983389854431152
    8. '=int' → logprob: -5.233389854431152
    9. 'return' → logprob: -6.358389854431152
    10. '(),' → logprob: -6.983389854431152

Token 347: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.641177237033844
    2. ' int' → logprob: -1.3911771774291992
    3. ' return' → logprob: -2.266177177429199
    4. ' la' → logprob: -2.891177177429199
    5. 'return' → logprob: -3.266177177429199
    6. '   ' → logprob: -4.516177177429199
    7. ' retourne' → logprob: -4.766177177429199
    8. 'la' → logprob: -5.266177177429199
    9. ' convert' → logprob: -7.641177177429199
    10. ' retour' → logprob: -7.891177177429199

Token 348: ' convert' (ID: 8452)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4247494041919708
    2. 'return' → logprob: -1.7997493743896484
    3. ' return' → logprob: -1.9247493743896484
    4. 'convert' → logprob: -4.799749374389648
    5. ' int' → logprob: -5.174749374389648
    6. ' retourne' → logprob: -5.174749374389648
    7. '=int' → logprob: -5.299749374389648
    8. 'strip' → logprob: -5.549749374389648
    9. 'split' → logprob: -6.674749374389648
    10. ' convert' → logprob: -6.799749374389648

Token 349: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.000655250798445195
    2. 'i' → logprob: -7.875655174255371
    3. 'ie' → logprob: -9.000655174255371
    4. 'is' → logprob: -10.000655174255371
    5. 'e' → logprob: -10.500655174255371
    6. 'int' → logprob: -10.625655174255371
    7. ' en' → logprob: -11.125655174255371
    8. 'ît' → logprob: -11.500655174255371
    9. ' it' → logprob: -12.000655174255371
    10. '=' → logprob: -12.125655174255371

Token 350: ' en' (ID: 469)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.46372997760772705
    2. 'int' → logprob: -1.588729977607727
    3. ' en' → logprob: -2.0887298583984375
    4. 'en' → logprob: -3.9637298583984375
    5. '(' → logprob: -4.4637298583984375
    6. '()' → logprob: -4.7137298583984375
    7. '   ' → logprob: -5.9637298583984375
    8. ' int' → logprob: -7.7137298583984375
    9. '=int' → logprob: -8.713729858398438
    10. '<int' → logprob: -9.463729858398438

Token 351: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008778362534940243
    2. ' int' → logprob: -4.7587785720825195
    3. 'ent' → logprob: -9.00877857208252
    4. ' entier' → logprob: -10.13377857208252
    5. ' integer' → logprob: -14.50877857208252
    6. 'integer' → logprob: -14.75877857208252
    7. ' ent' → logprob: -14.75877857208252
    8. '=int' → logprob: -15.50877857208252
    9. '<int' → logprob: -15.88377857208252
    10. '(int' → logprob: -17.758777618408203

Token 352: ' avec' (ID: 3937)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014448951929807663
    2. '():' → logprob: -4.264449119567871
    3. 'return' → logprob: -9.014449119567871
    4. '   ' → logprob: -9.389449119567871
    5. 'def' → logprob: -10.889449119567871
    6. '()
' → logprob: -11.014449119567871
    7. ' ()' → logprob: -11.139449119567871
    8. ':' → logprob: -11.264449119567871
    9. '():
' → logprob: -12.264449119567871
    10. '(' → logprob: -12.639449119567871

Token 353: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00408528558909893
    2. ' int' → logprob: -5.504085063934326
    3. '```' → logprob: -12.254085540771484
    4. '   ' → logprob: -14.004085540771484
    5. '`' → logprob: -15.129085540771484
    6. '(int' → logprob: -15.379085540771484
    7. '=int' → logprob: -15.504085540771484
    8. ' ' → logprob: -15.879085540771484
    9. '
' → logprob: -16.129085540771484
    10. ':int' → logprob: -16.379085540771484

Token 354: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003554847207851708
    2. '():' → logprob: -8.12535572052002
    3. '(' → logprob: -9.87535572052002
    4. '()
' → logprob: -12.75035572052002
    5. ' ()' → logprob: -12.87535572052002
    6. '()

' → logprob: -14.62535572052002
    7. '().' → logprob: -14.75035572052002
    8. 'return' → logprob: -14.75035572052002
    9. '   ' → logprob: -15.12535572052002
    10. '(),' → logprob: -15.25035572052002

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16782715916633606
    2. '():' → logprob: -2.1678271293640137
    3. '()' → logprob: -3.2928271293640137
    4. 'return' → logprob: -6.792827129364014
    5. ':' → logprob: -7.417827129364014
    6. '():
' → logprob: -7.667827129364014
    7. ' return' → logprob: -8.042827606201172
    8. '	return' → logprob: -8.917827606201172
    9. ':return' → logprob: -9.417827606201172
    10. '()
' → logprob: -9.667827606201172

Token 356: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020878082141280174
    2. '   ' → logprob: -6.252087593078613
    3. ' return' → logprob: -8.752087593078613
    4. '	return' → logprob: -13.752087593078613
    5. 'def' → logprob: -17.25208854675293
    6. '
' → logprob: -17.75208854675293
    7. ' ' → logprob: -18.37708854675293
    8. 'ret' → logprob: -18.37708854675293
    9. '  ' → logprob: -18.50208854675293
    10. 'int' → logprob: -19.12708854675293

Token 357: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.688212614681106e-05
    2. ' int' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.375017166137695
    4. '  ' → logprob: -16.875017166137695
    5. ' ' → logprob: -17.250017166137695
    6. '	int' → logprob: -17.500017166137695
    7. 'input' → logprob: -19.000017166137695
    8. '    ' → logprob: -19.125017166137695
    9. 'in' → logprob: -19.875017166137695
    10. '(int' → logprob: -20.250017166137695

Token 358: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0007119550718925893
    2. '(' → logprob: -7.250711917877197
    3. 'input' → logprob: -13.250712394714355
    4. '(
' → logprob: -16.37571144104004
    5. '()' → logprob: -16.62571144104004
    6. '(inp' → logprob: -17.87571144104004
    7. '(

' → logprob: -18.12571144104004
    8. '(in' → logprob: -18.37571144104004
    9. '((' → logprob: -18.50071144104004
    10. ' (' → logprob: -18.75071144104004

Token 359: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00020711649267468601
    2. '()' → logprob: -8.75020694732666
    3. '()))' → logprob: -10.12520694732666
    4. ')' → logprob: -12.62520694732666
    5. ' ())' → logprob: -12.75020694732666
    6. '())
' → logprob: -13.25020694732666
    7. '(' → logprob: -15.00020694732666
    8. '().' → logprob: -16.250207901000977
    9. '();)' → logprob: -16.500207901000977
    10. '()
' → logprob: -17.250207901000977

Token 360: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028563514351844788
    2. '#' → logprob: -5.877856254577637
    3. 'from' → logprob: -10.377856254577637
    4. 'n' → logprob: -12.502856254577637
    5. ' def' → logprob: -12.752856254577637
    6. 'data' → logprob: -12.752856254577637
    7. '```' → logprob: -13.252856254577637
    8. '_' → logprob: -13.752856254577637
    9. 's' → logprob: -14.127856254577637
    10. 'd' → logprob: -14.252856254577637

Token 362: ' util' (ID: 3667)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1500835120677948
    2. 's' → logprob: -2.650083541870117
    3. ' def' → logprob: -3.150083541870117
    4. ' read' → logprob: -4.275083541870117
    5. 'read' → logprob: -5.275083541870117
    6. ' input' → logprob: -6.275083541870117
    7. 'input' → logprob: -6.900083541870117
    8. 'split' → logprob: -7.275083541870117
    9. '[]' → logprob: -7.650083541870117
    10. ' list' → logprob: -8.275083541870117

Token 363: 'itaire' (ID: 28335)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005694253835827112
    2. 'ility' → logprob: -6.505694389343262
    3. 'ilité' → logprob: -6.505694389343262
    4. ' def' → logprob: -6.880694389343262
    5. 'ité' → logprob: -7.130694389343262
    6. 'itaire' → logprob: -8.505694389343262
    7. '#' → logprob: -8.880694389343262
    8. 'isateur' → logprob: -9.380694389343262
    9. 'alité' → logprob: -9.880694389343262
    10. 'ity' → logprob: -10.005694389343262

Token 364: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001490696449764073
    2. '()' → logprob: -6.626490592956543
    3. ' def' → logprob: -9.376490592956543
    4. '(' → logprob: -10.501490592956543
    5. '#' → logprob: -11.001490592956543
    6. '()
' → logprob: -11.626490592956543
    7. '(
' → logprob: -12.001490592956543
    8. 's' → logprob: -12.126490592956543
    9. 'to' → logprob: -12.626490592956543
    10. 'for' → logprob: -12.876490592956543

Token 365: ' lire' (ID: 46082)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.03414478898048401
    2. 'reads' → logprob: -3.409144878387451
    3. 'map' → logprob: -8.409144401550293
    4. 'l' → logprob: -9.534144401550293
    5. 'list' → logprob: -9.659144401550293
    6. 'liste' → logprob: -10.159144401550293
    7. 'ints' → logprob: -10.284144401550293
    8. ' read' → logprob: -11.284144401550293
    9. ' reads' → logprob: -11.784144401550293
    10. 'r' → logprob: -12.034144401550293

Token 366: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.7066227197647095
    2. ' une' → logprob: -1.3316227197647095
    3. '()' → logprob: -1.9566227197647095
    4. 'la' → logprob: -3.33162260055542
    5. 'a' → logprob: -4.33162260055542
    6. 'un' → logprob: -4.45662260055542
    7. 'n' → logprob: -4.70662260055542
    8. 'des' → logprob: -4.70662260055542
    9. 'les' → logprob: -5.58162260055542
    10. ' un' → logprob: -5.58162260055542

Token 367: ' ligne' (ID: 19583)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5003997683525085
    2. 'liste' → logprob: -1.0003998279571533
    3. 'map' → logprob: -4.750399589538574
    4. 'tuple' → logprob: -4.750399589538574
    5. 'ligne' → logprob: -5.250399589538574
    6. 'line' → logprob: -6.000399589538574
    7. 'l' → logprob: -8.375399589538574
    8. 'lot' → logprob: -8.875399589538574
    9. 'int' → logprob: -9.375399589538574
    10. ' list' → logprob: -9.500399589538574

Token 368: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04421171918511391
    2. '()' → logprob: -3.9192116260528564
    3. 'de' → logprob: -4.2942118644714355
    4. ',' → logprob: -5.5442118644714355
    5. 'en' → logprob: -6.9192118644714355
    6. 'qui' → logprob: -7.4192118644714355
    7. 'and' → logprob: -7.6692118644714355
    8. 'split' → logprob: -7.7942118644714355
    9. 'et' → logprob: -8.044211387634277
    10. 'from' → logprob: -8.044211387634277

Token 369: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4707847237586975
    2. ''ent' → logprob: -1.0957846641540527
    3. 'entrée' → logprob: -3.9707846641540527
    4. ''entrée' → logprob: -4.720784664154053
    5. 'e' → logprob: -5.095784664154053
    6. 'inte' → logprob: -6.595784664154053
    7. 'ints' → logprob: -6.720784664154053
    8. ' ent' → logprob: -6.845784664154053
    9. 'input' → logprob: -6.970784664154053
    10. '’ent' → logprob: -7.845784664154053

Token 370: 'iers' (ID: 11012)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.5250469446182251
    2. 'iers' → logprob: -1.275046944618225
    3. 't' → logprob: -2.4000468254089355
    4. 'tr' → logprob: -3.6500468254089355
    5. 'r' → logprob: -5.0250468254089355
    6. 'ières' → logprob: -6.0250468254089355
    7. 'ée' → logprob: -6.7750468254089355
    8. 'ées' → logprob: -7.2750468254089355
    9. 'rees' → logprob: -8.275047302246094
    10. 'ier' → logprob: -8.525047302246094

Token 371: ' sépar' (ID: 97160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.746380237629637e-05
    2. 'from' → logprob: -9.250097274780273
    3. '()' → logprob: -14.625097274780273
    4. '
' → logprob: -15.125097274780273
    5. ' def' → logprob: -15.375097274780273
    6. '(def' → logprob: -16.250097274780273
    7. 's' → logprob: -16.875097274780273
    8. 'de' → logprob: -17.125097274780273
    9. '#' → logprob: -17.250097274780273
    10. '()
' → logprob: -17.750097274780273

Token 372: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.5985773205757141
    2. 'ée' → logprob: -0.9735773205757141
    3. 'par' → logprob: -3.2235772609710693
    4. 'é' → logprob: -3.9735772609710693
    5. ' par' → logprob: -5.098577499389648
    6. 'ées' → logprob: -5.723577499389648
    7. 'er' → logprob: -6.348577499389648
    8. 'es' → logprob: -6.848577499389648
    9. 'e' → logprob: -7.473577499389648
    10. 'def' → logprob: -8.223577499389648

Token 373: ' par' (ID: 686)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31462448835372925
    2. 'par' → logprob: -1.689624547958374
    3. ' par' → logprob: -2.564624547958374
    4. 'by' → logprob: -5.689624309539795
    5. '()' → logprob: -6.189624309539795
    6. 'de' → logprob: -6.689624309539795
    7. 's' → logprob: -7.814624309539795
    8. 'es' → logprob: -8.064624786376953
    9. 'e' → logprob: -8.439624786376953
    10. '(par' → logprob: -8.689624786376953

Token 374: ' des' (ID: 731)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.7329820990562439
    2. 'des' → logprob: -1.2329821586608887
    3. 'un' → logprob: -2.3579821586608887
    4. 'es' → logprob: -3.4829821586608887
    5. 'spaces' → logprob: -3.6079821586608887
    6. ' espaces' → logprob: -3.7329821586608887
    7. 'space' → logprob: -3.8579821586608887
    8. ' des' → logprob: -4.732982158660889
    9. 'def' → logprob: -4.982982158660889
    10. ''espace' → logprob: -5.357982158660889

Token 375: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.09747754037380219
    2. 'es' → logprob: -2.972477436065674
    3. ' espaces' → logprob: -3.222477436065674
    4. 'spaces' → logprob: -6.722477436065674
    5. ' espace' → logprob: -7.847477436065674
    6. 'space' → logprob: -9.222477912902832
    7. ''espace' → logprob: -9.847477912902832
    8. ''esp' → logprob: -10.097477912902832
    9. 'sp' → logprob: -10.972477912902832
    10. ' espacios' → logprob: -11.972477912902832

Token 376: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0087516784551553e-05
    2. '()
' → logprob: -12.50001049041748
    3. ' def' → logprob: -12.62501049041748
    4. '()' → logprob: -13.37501049041748
    5. 's' → logprob: -14.12501049041748
    6. '
' → logprob: -14.75001049041748
    7. '():
' → logprob: -15.25001049041748
    8. '():' → logprob: -17.875009536743164
    9. ':' → logprob: -18.625009536743164
    10. 'de' → logprob: -18.750009536743164

Token 377: ' la' (ID: 557)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.0126566886901855
    2. 'convert' → logprob: -1.1376566886901855
    3. 'return' → logprob: -1.2626566886901855
    4. ' convertir' → logprob: -4.1376566886901855
    5. 'transform' → logprob: -5.0126566886901855
    6. 'def' → logprob: -6.0126566886901855
    7. ' retourner' → logprob: -6.0126566886901855
    8. 'map' → logprob: -6.1376566886901855
    9. 'ren' → logprob: -6.5126566886901855
    10. 'les' → logprob: -7.2626566886901855

Token 378: ' convertir' (ID: 79223)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1795482039451599
    2. 'return' → logprob: -3.3045482635498047
    3. 'convert' → logprob: -3.3045482635498047
    4. 'split' → logprob: -3.4295482635498047
    5. 'ret' → logprob: -3.8045482635498047
    6. 'ren' → logprob: -4.554548263549805
    7. 'list' → logprob: -4.929548263549805
    8. 'map' → logprob: -5.179548263549805
    9. 'transform' → logprob: -5.429548263549805
    10. ' convertir' → logprob: -5.554548263549805

Token 379: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.42949429154396057
    2. 'def' → logprob: -1.1794942617416382
    3. ' en' → logprob: -3.1794943809509277
    4. ' def' → logprob: -10.17949390411377
    5. 'into' → logprob: -10.67949390411377
    6. ' into' → logprob: -10.92949390411377
    7. '()' → logprob: -10.92949390411377
    8. 'à' → logprob: -11.55449390411377
    9. '```' → logprob: -12.67949390411377
    10. 's' → logprob: -13.30449390411377

Token 380: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014833669178187847
    2. 'liste' → logprob: -4.264833450317383
    3. ' list' → logprob: -7.514833450317383
    4. ' liste' → logprob: -9.389833450317383
    5. 'map' → logprob: -10.764833450317383
    6. 'lst' → logprob: -11.889833450317383
    7. 'une' → logprob: -12.514833450317383
    8. 'lista' → logprob: -12.764833450317383
    9. 'List' → logprob: -13.014833450317383
    10. 'la' → logprob: -13.389833450317383

Token 381: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.47747522592544556
    2. 'list' → logprob: -0.9774752259254456
    3. ' liste' → logprob: -5.727475166320801
    4. ' list' → logprob: -9.1024751663208
    5. 'Liste' → logprob: -11.9774751663208
    6. 'lst' → logprob: -12.1024751663208
    7. 'lista' → logprob: -12.2274751663208
    8. 'map' → logprob: -12.8524751663208
    9. '_list' → logprob: -12.9774751663208
    10. 'l' → logprob: -13.8524751663208

Token 382: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03338344022631645
    2. '()' → logprob: -3.658383369445801
    3. '():' → logprob: -5.658383369445801
    4. '():
' → logprob: -5.908383369445801
    5. 'of' → logprob: -8.1583833694458
    6. 'de' → logprob: -8.2833833694458
    7. '()
' → logprob: -8.7833833694458
    8. ' def' → logprob: -9.7833833694458
    9. 'd' → logprob: -10.9083833694458
    10. ' of' → logprob: -11.0333833694458

Token 383: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3733917772769928
    2. 'ent' → logprob: -1.8733917474746704
    3. 'ints' → logprob: -1.8733917474746704
    4. 'inte' → logprob: -5.498391628265381
    5. ' ent' → logprob: -9.248392105102539
    6. ''ent' → logprob: -9.498392105102539
    7. '_ent' → logprob: -9.748392105102539
    8. 'ents' → logprob: -10.998392105102539
    9. '[int' → logprob: -11.123392105102539
    10. 'intes' → logprob: -11.873392105102539

Token 384: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005238025914877653
    2. 'iers' → logprob: -5.755238056182861
    3. 'tes' → logprob: -7.505238056182861
    4. 'ts' → logprob: -8.130237579345703
    5. 'ties' → logprob: -8.755237579345703
    6. 'ti' → logprob: -8.755237579345703
    7. 'def' → logprob: -8.755237579345703
    8. 'te' → logprob: -8.880237579345703
    9. 'ités' → logprob: -9.630237579345703
    10. 'ints' → logprob: -9.880237579345703

Token 385: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.127333340875339e-06
    2. '()
' → logprob: -13.000003814697266
    3. '
' → logprob: -13.625003814697266
    4. ' def' → logprob: -14.375003814697266
    5. '()' → logprob: -18.500003814697266
    6. '():
' → logprob: -18.625003814697266
    7. '(def' → logprob: -18.750003814697266
    8. 'from' → logprob: -19.500003814697266
    9. '```' → logprob: -19.625003814697266
    10. '#' → logprob: -19.875003814697266

Token 386: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -20.0
    3. '
' → logprob: -20.625
    4. 'from' → logprob: -21.5
    5. '#' → logprob: -24.25
    6. '```' → logprob: -24.25
    7. '	def' → logprob: -24.625
    8. 'de' → logprob: -25.0
    9. 'ndef' → logprob: -25.0
    10. '_def' → logprob: -25.375

Token 387: ' reads' (ID: 31523)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.9939281344413757
    2. ' read' → logprob: -1.6189281940460205
    3. 'ints' → logprob: -1.9939281940460205
    4. ' map' → logprob: -2.3689281940460205
    5. 'list' → logprob: -2.9939281940460205
    6. 'map' → logprob: -3.2439281940460205
    7. ' list' → logprob: -3.6189281940460205
    8. ' ints' → logprob: -3.6189281940460205
    9. ' reads' → logprob: -4.243927955627441
    10. 'm' → logprob: -4.243927955627441

Token 388: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.6970323324203491
    2. '():' → logprob: -0.6970323324203491
    3. '()' → logprob: -5.572032451629639
    4. 'def' → logprob: -11.07203197479248
    5. ' ():' → logprob: -11.07203197479248
    6. '():

' → logprob: -11.32203197479248
    7. 'line' → logprob: -11.82203197479248
    8. 's' → logprob: -11.82203197479248
    9. '():
' → logprob: -12.07203197479248
    10. 'list' → logprob: -12.57203197479248

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18875868618488312
    2. '():' → logprob: -1.9387587308883667
    3. '():
' → logprob: -4.313758850097656
    4. 'return' → logprob: -4.438758850097656
    5. '()' → logprob: -6.688758850097656
    6. ':' → logprob: -7.063758850097656
    7. ' return' → logprob: -7.813758850097656
    8. ':
' → logprob: -8.063758850097656
    9. ':return' → logprob: -9.688758850097656
    10. 'def' → logprob: -11.438758850097656

Token 390: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25284823775291443
    2. '   ' → logprob: -1.5028482675552368
    3. ' return' → logprob: -7.002848148345947
    4. 'list' → logprob: -12.002848625183105
    5. '	return' → logprob: -13.377848625183105
    6. 'map' → logprob: -14.252848625183105
    7. ' ' → logprob: -14.877848625183105
    8. '#' (adapté à ' #') → logprob: -15.502848625183105
    9. '  ' → logprob: -15.627848625183105
    10. '   ' → logprob: -16.12784767150879

Token 391: ' input' (ID: 3422)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010412635747343302
    2. ' return' → logprob: -6.876041412353516
    3. '#' → logprob: -12.376041412353516
    4. '   ' → logprob: -12.626041412353516
    5. 'def' → logprob: -14.626041412353516
    6. 'list' → logprob: -15.126041412353516
    7. '
' → logprob: -16.126041412353516
    8. 'map' → logprob: -16.751041412353516
    9. '	return' → logprob: -16.876041412353516
    10. ' ' → logprob: -17.876041412353516

Token 392: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004079589620232582
    2. '()' → logprob: -5.504079818725586
    3. ' ().' → logprob: -15.004079818725586
    4. '()
' → logprob: -15.379079818725586
    5. '()).' → logprob: -15.629079818725586
    6. 's' → logprob: -15.879079818725586
    7. 'split' → logprob: -16.379079818725586
    8. '():' → logprob: -16.754079818725586
    9. '(' → logprob: -17.129079818725586
    10. ' ()' → logprob: -17.379079818725586

Token 393: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001502598519437015
    2. 'strip' → logprob: -6.501502513885498
    3. 'spl' → logprob: -16.376502990722656
    4. ' split' → logprob: -16.626502990722656
    5. 'rstrip' → logprob: -17.251502990722656
    6. '(split' → logprob: -17.626502990722656
    7. 's' → logprob: -20.876502990722656
    8. '.split' → logprob: -21.251502990722656
    9. ' strip' → logprob: -21.751502990722656
    10. '_split' → logprob: -22.376502990722656

Token 394: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5451681974809617e-05
    2. '())' → logprob: -11.750015258789062
    3. '(' → logprob: -12.500015258789062
    4. '().' → logprob: -13.625015258789062
    5. '()]' → logprob: -14.125015258789062
    6. '(),' → logprob: -14.375015258789062
    7. ' ()' → logprob: -14.625015258789062
    8. '()
' → logprob: -15.375015258789062
    9. ')' → logprob: -15.625015258789062
    10. '()))' → logprob: -16.625015258789062

Token 395: ' div' (ID: 4223)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002238162560388446
    2. 'return' → logprob: -7.2522382736206055
    3. 'map' → logprob: -7.6272382736206055
    4. '())' → logprob: -7.8772382736206055
    5. ')' → logprob: -8.002238273620605
    6. '().' → logprob: -9.127238273620605
    7. '()]' → logprob: -10.377238273620605
    8. '()
' → logprob: -11.002238273620605
    9. '(' → logprob: -11.002238273620605
    10. '()[' → logprob: -11.377238273620605

Token 396: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0012041617883369327
    2. 'ide' → logprob: -6.751204013824463
    3. '()' → logprob: -10.876204490661621
    4. 'ize' → logprob: -11.751204490661621
    5. 'isent' → logprob: -13.126204490661621
    6. 'erse' → logprob: -13.876204490661621
    7. 'ides' → logprob: -14.126204490661621
    8. 'iser' → logprob: -14.376204490661621
    9. '```' → logprob: -14.751204490661621
    10. 'isé' → logprob: -15.126204490661621

Token 397: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00021998681768309325
    2. '('' → logprob: -9.00022029876709
    3. 'input' → logprob: -10.37522029876709
    4. ' la' → logprob: -10.87522029876709
    5. '(' → logprob: -11.00022029876709
    6. '())' → logprob: -12.25022029876709
    7. '()[' → logprob: -12.50022029876709
    8. 'la' → logprob: -12.50022029876709
    9. '()
' → logprob: -12.62522029876709
    10. '("' → logprob: -13.00022029876709

Token 398: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.503592848777771
    2. 'ligne' → logprob: -1.503592848777771
    3. ' chaîne' → logprob: -2.0035929679870605
    4. 'string' → logprob: -4.1285929679870605
    5. 'cha' → logprob: -4.7535929679870605
    6. 'input' → logprob: -5.2535929679870605
    7. ' chaine' → logprob: -6.0035929679870605
    8. 'line' → logprob: -6.5035929679870605
    9. ' ligne' → logprob: -6.5035929679870605
    10. 'entrée' → logprob: -6.8785929679870605

Token 399: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -6.015305552864447e-05
    2. '())' → logprob: -10.500060081481934
    3. '()]' → logprob: -11.125060081481934
    4. '('' → logprob: -11.875060081481934
    5. '()[' → logprob: -12.750060081481934
    6. '()
' → logprob: -13.125060081481934
    7. '(),' → logprob: -13.250060081481934
    8. '().' → logprob: -13.625060081481934
    9. '(' → logprob: -14.250060081481934
    10. '()))' → logprob: -14.625060081481934

Token 400: ' éléments' (ID: 57375)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -1.0427865982055664
    2. ' une' → logprob: -1.1677865982055664
    3. 'tokens' → logprob: -1.2927865982055664
    4. ' liste' → logprob: -3.7927865982055664
    5. 'une' → logprob: -4.542786598205566
    6. ' des' → logprob: -4.542786598205566
    7. 'list' → logprob: -5.042786598205566
    8. 'liste' → logprob: -6.292786598205566
    9. ' listes' → logprob: -6.292786598205566
    10. ' list' → logprob: -6.542786598205566

Token 401: ' individu' (ID: 35759)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -6.885492621222511e-05
    2. 'def' → logprob: -11.125068664550781
    3. '())' → logprob: -11.250068664550781
    4. '(),' → logprob: -11.750068664550781
    5. 'map' → logprob: -11.875068664550781
    6. '()]' → logprob: -11.875068664550781
    7. '(' → logprob: -12.125068664550781
    8. '()
' → logprob: -12.500068664550781
    9. ')' → logprob: -13.000068664550781
    10. '().' → logprob: -13.125068664550781

Token 402: 'els' (ID: 1989)
  Prédit: 'uels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uels' → logprob: -0.7731983661651611
    2. 'u' → logprob: -1.1481983661651611
    3. 'ues' → logprob: -2.148198366165161
    4. 'es' → logprob: -3.023198366165161
    5. 'érés' → logprob: -4.273198127746582
    6. 'us' → logprob: -4.523198127746582
    7. 'res' → logprob: -4.523198127746582
    8. 'els' → logprob: -5.023198127746582
    9. 'el' → logprob: -5.773198127746582
    10. 'uelles' → logprob: -6.148198127746582

Token 403: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000624514592345804
    2. '())' → logprob: -8.250624656677246
    3. ')' → logprob: -8.875624656677246
    4. '(),' → logprob: -9.625624656677246
    5. '()
' → logprob: -9.875624656677246
    6. '().' → logprob: -10.125624656677246
    7. 'def' → logprob: -11.125624656677246
    8. '()]' → logprob: -11.125624656677246
    9. 'return' → logprob: -11.875624656677246
    10. '(' → logprob: -12.250624656677246

Token 404: ' puis' (ID: 18766)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1869354397058487
    2. ' return' → logprob: -2.1869354248046875
    3. '   ' → logprob: -2.9369354248046875
    4. 'map' → logprob: -5.9369354248046875
    5. ' map' → logprob: -6.4369354248046875
    6. 'def' → logprob: -7.6869354248046875
    7. 'lambda' → logprob: -8.561935424804688
    8. 'key' → logprob: -8.811935424804688
    9. ' key' → logprob: -9.436935424804688
    10. ' lambda' → logprob: -9.811935424804688

Token 405: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.006781450472772121
    2. ' map' → logprob: -5.006781578063965
    3. 'return' → logprob: -9.756781578063965
    4. 'list' → logprob: -11.756781578063965
    5. ' return' → logprob: -14.881781578063965
    6. '   ' → logprob: -17.13178062438965
    7. '.map' → logprob: -17.75678062438965
    8. ' list' → logprob: -17.88178062438965
    9. '(map' → logprob: -17.88178062438965
    10. '	map' → logprob: -18.38178062438965

Token 406: ' chaque' (ID: 21194)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.959636033978313e-05
    2. 'int' → logprob: -9.500089645385742
    3. '(' → logprob: -11.500089645385742
    4. '(lambda' → logprob: -12.750089645385742
    5. '=int' → logprob: -14.625089645385742
    6. '<int' → logprob: -15.375089645385742
    7. '[int' → logprob: -15.750089645385742
    8. ' int' → logprob: -15.750089645385742
    9. '```' → logprob: -15.875089645385742
    10. 'return' → logprob: -16.250089645385742

Token 407: ' élément' (ID: 99627)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02224832773208618
    2. '(int' → logprob: -3.8972482681274414
    3. ' int' → logprob: -6.397248268127441
    4. 'ent' → logprob: -11.272248268127441
    5. 'élé' → logprob: -11.397248268127441
    6. 'element' → logprob: -12.397248268127441
    7. 'lambda' → logprob: -12.897248268127441
    8. 'str' → logprob: -13.522248268127441
    9. '```' → logprob: -13.772248268127441
    10. '`' → logprob: -13.897248268127441

Token 408: ' en' (ID: 469)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00017815368482843041
    2. 'int' → logprob: -8.875178337097168
    3. '(' → logprob: -10.500178337097168
    4. '(lambda' → logprob: -11.875178337097168
    5. '=int' → logprob: -13.375178337097168
    6. ' int' → logprob: -14.125178337097168
    7. '[int' → logprob: -15.000178337097168
    8. '<int' → logprob: -15.125178337097168
    9. ',int' → logprob: -15.125178337097168
    10. '(
' → logprob: -15.875178337097168

Token 409: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014193004928529263
    2. ' int' → logprob: -4.264193058013916
    3. 'ent' → logprob: -10.764192581176758
    4. '(int' → logprob: -12.264192581176758
    5. ' entier' → logprob: -13.514192581176758
    6. '=int' → logprob: -13.889192581176758
    7. '<int' → logprob: -14.389192581176758
    8. 'ints' → logprob: -15.139192581176758
    9. 'inte' → logprob: -15.639192581176758
    10. '[int' → logprob: -15.889192581176758

Token 410: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014867151156067848
    2. ')' → logprob: -4.764867305755615
    3. '())' → logprob: -5.389867305755615
    4. '(map' → logprob: -7.514867305755615
    5. 'def' → logprob: -8.639866828918457
    6. '))' → logprob: -8.889866828918457
    7. 'return' → logprob: -9.139866828918457
    8. '   ' → logprob: -9.264866828918457
    9. 'map' → logprob: -9.264866828918457
    10. '(' → logprob: -9.764866828918457

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32611700892448425
    2. 'return' → logprob: -2.0761170387268066
    3. '()' → logprob: -2.5761170387268066
    4. 'def' → logprob: -2.7011170387268066
    5. ' return' → logprob: -5.076117038726807
    6. '()
' → logprob: -6.076117038726807
    7. '	return' → logprob: -8.201116561889648
    8. '():' → logprob: -8.201116561889648
    9. ' def' → logprob: -9.201116561889648
    10. '():
' → logprob: -9.326116561889648

Token 412: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5515733361244202
    2. ' return' → logprob: -1.0515732765197754
    3. '   ' → logprob: -2.6765732765197754
    4. 'def' → logprob: -5.176573276519775
    5. ' def' → logprob: -9.426573753356934
    6. '	return' → logprob: -10.551573753356934
    7. ' ' → logprob: -11.926573753356934
    8. '       ' → logprob: -13.051573753356934
    9. '  ' → logprob: -13.176573753356934
    10. '    ' → logprob: -13.426573753356934

Token 413: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014163628220558167
    2. ' list' → logprob: -4.264163494110107
    3. 'map' → logprob: -16.639163970947266
    4. '[list' → logprob: -17.014163970947266
    5. '(list' → logprob: -19.639163970947266
    6. '	list' → logprob: -19.764163970947266
    7. 'List' → logprob: -21.389163970947266
    8. '=list' → logprob: -21.889163970947266
    9. '   ' → logprob: -22.264163970947266
    10. '.list' → logprob: -23.014163970947266

Token 414: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.128163257315464e-07
    2. ' int' → logprob: -15.25
    3. '(int' → logprob: -20.875
    4. '*' → logprob: -21.0
    5. 'map' → logprob: -21.0
    6. '	int' → logprob: -22.125
    7. '<int' → logprob: -22.25
    8. 'ints' → logprob: -22.875
    9. '```' → logprob: -22.875
    10. '  ' → logprob: -23.25

Token 415: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.006281532347202301
    2. 'x' → logprob: -5.25628137588501
    3. '(i' → logprob: -6.88128137588501
    4. ']' → logprob: -12.131281852722168
    5. 'i' → logprob: -12.256281852722168
    6. '(_)' → logprob: -13.006281852722168
    7. '(s' → logprob: -13.131281852722168
    8. '(' → logprob: -14.006281852722168
    9. '_]' → logprob: -14.256281852722168
    10. '(e' → logprob: -14.256281852722168

Token 416: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. 'for' → logprob: -11.375019073486328
    3. ' )' → logprob: -12.375019073486328
    4. '(x' → logprob: -14.000019073486328
    5. 'in' → logprob: -14.250019073486328
    6. '())' → logprob: -14.625019073486328
    7. ')
' → logprob: -14.875019073486328
    8. ' for' → logprob: -15.000019073486328
    9. '()' → logprob: -15.250019073486328
    10. ')x' → logprob: -15.625019073486328

Token 417: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3134435713291168
    2. ' for' → logprob: -1.3134435415267944
    3. ')' → logprob: -9.188443183898926
    4. 'in' → logprob: -10.438443183898926
    5. '()' → logprob: -10.438443183898926
    6. ' in' → logprob: -10.813443183898926
    7. '(x' → logprob: -14.813443183898926
    8. '	for' → logprob: -15.688443183898926
    9. 'x' → logprob: -16.063444137573242
    10. ' ' → logprob: -16.563444137573242

Token 418: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014195355586707592
    2. ' x' → logprob: -4.264195442199707
    3. 'input' → logprob: -10.389195442199707
    4. ' input' → logprob: -13.889195442199707
    5. '(x' → logprob: -17.01419448852539
    6. 'in' → logprob: -17.38919448852539
    7. '	x' → logprob: -17.63919448852539
    8. ' ' → logprob: -18.01419448852539
    9. ' in' → logprob: -18.13919448852539
    10. ' ' → logprob: -18.88919448852539

Token 419: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3888292908668518
    2. ' in' → logprob: -1.138829231262207
    3. 'input' → logprob: -6.388829231262207
    4. 'import' → logprob: -8.888829231262207
    5. 's' → logprob: -10.138829231262207
    6. '(input' → logprob: -10.638829231262207
    7. 'inp' → logprob: -10.638829231262207
    8. 'x' → logprob: -11.263829231262207
    9. ' input' → logprob: -12.638829231262207
    10. '	in' → logprob: -12.763829231262207

Token 420: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0017025562701746821
    2. ' input' → logprob: -6.376702785491943
    3. '(input' → logprob: -14.876702308654785
    4. ' ' → logprob: -18.0017032623291
    5. '<input' → logprob: -18.0017032623291
    6. '	input' → logprob: -18.2517032623291
    7. '   ' → logprob: -18.3767032623291
    8. 'inputs' → logprob: -18.7517032623291
    9. 'output' → logprob: -19.0017032623291
    10. '.input' → logprob: -19.0017032623291

Token 421: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.4121114822482923e-06
    2. '()' → logprob: -12.625003814697266
    3. ' ().' → logprob: -17.375003814697266
    4. '()].' → logprob: -20.000003814697266
    5. '(' → logprob: -21.000003814697266
    6. '()
' → logprob: -22.625003814697266
    7. '.' → logprob: -22.750003814697266
    8. '.split' → logprob: -22.875003814697266
    9. '()]' → logprob: -23.125003814697266
    10. '().'' → logprob: -23.250003814697266

Token 422: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.941850526549388e-06
    2. 'strip' → logprob: -11.750007629394531
    3. ' split' → logprob: -18.25000762939453
    4. 'spl' → logprob: -18.87500762939453
    5. '.split' → logprob: -20.25000762939453
    6. '(split' → logprob: -20.87500762939453
    7. 'rstrip' → logprob: -21.25000762939453
    8. 'plit' → logprob: -24.50000762939453
    9. '```' → logprob: -24.50000762939453
    10. '_split' → logprob: -24.62500762939453

Token 423: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00016802136087790132
    2. '()' → logprob: -8.750167846679688
    3. '())' → logprob: -11.875167846679688
    4. ']' → logprob: -13.875167846679688
    5. '(' → logprob: -14.500167846679688
    6. '()]
' → logprob: -14.625167846679688
    7. ')]' → logprob: -14.750167846679688
    8. ' ()' → logprob: -16.875167846679688
    9. '()}' → logprob: -17.125167846679688
    10. '()],' → logprob: -17.250167846679688

Token 424: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20695307850837708
    2. '()]' → logprob: -1.7069530487060547
    3. ')]' → logprob: -5.206953048706055
    4. ' ]' → logprob: -10.456953048706055
    5. '])' → logprob: -11.706953048706055
    6. ']()' → logprob: -12.206953048706055
    7. '()' → logprob: -13.331953048706055
    8. '])]' → logprob: -14.831953048706055
    9. ']]' → logprob: -14.956953048706055
    10. ')' → logprob: -14.956953048706055

Token 425: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2506084442138672
    2. 'def' → logprob: -2.125608444213867
    3. '
' → logprob: -2.625608444213867
    4. '<|end|>' → logprob: -3.625608444213867
    5. '```' → logprob: -6.875608444213867
    6. '<|end|>' → logprob: -7.625608444213867
    7. '\n' → logprob: -7.750608444213867
    8. '

' → logprob: -7.750608444213867
    9. '\' → logprob: -8.125608444213867
    10. 'class' → logprob: -8.750608444213867

Token 426: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004633522592484951
    2. '#' → logprob: -5.62963342666626
    3. 'class' → logprob: -6.87963342666626
    4. 'import' → logprob: -13.629633903503418
    5. ' def' → logprob: -13.754633903503418
    6. 'from' → logprob: -14.129633903503418
    7. '```' → logprob: -15.629633903503418
    8. '\' → logprob: -16.0046329498291
    9. '#!/' → logprob: -16.1296329498291
    10. 'T' → logprob: -16.5046329498291

Token 427: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12703867256641388
    2. 'fin' → logprob: -2.1270387172698975
    3. '#' → logprob: -9.752038955688477
    4. 'fi' → logprob: -10.752038955688477
    5. 'fn' → logprob: -11.252038955688477
    6. 'def' → logprob: -12.752038955688477
    7. 'finite' → logprob: -13.002038955688477
    8. 'fen' → logprob: -13.252038955688477
    9. 'fl' → logprob: -13.627038955688477
    10. 'fc' → logprob: -13.877038955688477

Token 428: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.02032008208334446
    2. 'ir' → logprob: -4.395319938659668
    3. 'def' → logprob: -5.270319938659668
    4. 'tion' → logprob: -6.895319938659668
    5. 'inition' → logprob: -7.145319938659668
    6. '#' → logprob: -7.895319938659668
    7. 'ission' → logprob: -8.645319938659668
    8. ' def' → logprob: -9.145319938659668
    9. 'f' → logprob: -9.895319938659668
    10. 'issement' → logprob: -10.770319938659668

Token 429: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020873311441391706
    2. ' def' → logprob: -6.252087116241455
    3. ' of' → logprob: -9.877087593078613
    4. 'class' → logprob: -10.252087593078613
    5. 'de' → logprob: -10.502087593078613
    6. ' de' → logprob: -10.627087593078613
    7. 'of' → logprob: -11.752087593078613
    8. 'd' → logprob: -12.377087593078613
    9. ' ' → logprob: -13.377087593078613
    10. ' d' → logprob: -13.377087593078613

Token 430: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3853868544101715
    2. 'def' → logprob: -1.3853868246078491
    3. 'la' → logprob: -3.0103869438171387
    4. 'read' → logprob: -5.385386943817139
    5. ' main' → logprob: -5.760386943817139
    6. 'l' → logprob: -5.885386943817139
    7. 'the' → logprob: -6.135386943817139
    8. ' la' → logprob: -6.260386943817139
    9. 'solve' → logprob: -6.760386943817139
    10. 'une' → logprob: -6.885386943817139

Token 431: ' constante' (ID: 49652)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6479589343070984
    2. 'main' → logprob: -0.8979589343070984
    3. 'class' → logprob: -2.772958993911743
    4. '#' → logprob: -5.647958755493164
    5. 'classe' → logprob: -6.397958755493164
    6. ' main' → logprob: -6.772958755493164
    7. 'mod' → logprob: -9.522958755493164
    8. 'fonction' → logprob: -9.647958755493164
    9. 'solve' → logprob: -9.897958755493164
    10. 'variable' → logprob: -10.147958755493164

Token 432: ' MOD' (ID: 32868)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.25383639335632324
    2. 'MOD' → logprob: -1.5038363933563232
    3. 'MAX' → logprob: -6.628836631774902
    4. 'inf' → logprob: -8.628836631774902
    5. ' INF' → logprob: -9.253836631774902
    6. 'M' → logprob: -9.378836631774902
    7. 'IN' → logprob: -9.878836631774902
    8. 'mod' → logprob: -10.003836631774902
    9. 'INT' → logprob: -10.878836631774902
    10. 'N' → logprob: -11.128836631774902

Token 433: ' (' (ID: 350)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5010616779327393
    2. ' =' → logprob: -1.2510616779327393
    3. '=' → logprob: -2.2510616779327393
    4. '_MOD' → logprob: -6.00106143951416
    5. ' MOD' → logprob: -9.50106143951416
    6. ':' → logprob: -9.75106143951416
    7. ',' → logprob: -12.50106143951416
    8. ' =
' → logprob: -12.62606143951416
    9. '_' → logprob: -13.00106143951416
    10. '.MOD' → logprob: -13.37606143951416

Token 434: 'mod' (ID: 4847)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00197395752184093
    2. ')' → logprob: -6.501974105834961
    3. '=' → logprob: -8.126974105834961
    4. '100' → logprob: -9.126974105834961
    5. '998' → logprob: -10.376974105834961
    6. '```' → logprob: -11.501974105834961
    7. ' ' → logprob: -11.751974105834961
    8. ' =' → logprob: -12.001974105834961
    9. 'MOD' → logprob: -12.501974105834961
    10. '`' → logprob: -13.501974105834961

Token 435: 'ulo' (ID: 5953)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1557518094778061
    2. ' =' → logprob: -2.0307517051696777
    3. 'ULO' → logprob: -4.780751705169678
    4. ')' → logprob: -5.905751705169678
    5. 'MOD' → logprob: -7.405751705169678
    6. 'ule' → logprob: -8.155752182006836
    7. '7' → logprob: -8.280752182006836
    8. '100' → logprob: -8.780752182006836
    9. '10' → logprob: -9.530752182006836
    10. 'ulo' → logprob: -9.530752182006836

Token 436: ' utilisé' (ID: 53138)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39931121468544006
    2. ' =' → logprob: -1.2743111848831177
    3. ')' → logprob: -3.0243113040924072
    4. '100' → logprob: -7.899311065673828
    5. ' )' → logprob: -8.524311065673828
    6. '10' → logprob: -8.774311065673828
    7. ')=' → logprob: -9.649311065673828
    8. '1' → logprob: -9.774311065673828
    9. '7' → logprob: -9.899311065673828
    10. 'MOD' → logprob: -11.149311065673828

Token 437: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33009254932403564
    2. ')' → logprob: -1.4550925493240356
    3. ' =' → logprob: -3.080092430114746
    4. ' )' → logprob: -6.830092430114746
    5. ')=' → logprob: -7.705092430114746
    6. ' in' → logprob: -10.205092430114746
    7. '10' → logprob: -10.580092430114746
    8. 'for' → logprob: -10.705092430114746
    9. ',' → logprob: -10.830092430114746
    10. '100' → logprob: -10.955092430114746

Token 438: ' les' (ID: 1341)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0002625278721097857
    2. '998' → logprob: -8.375262260437012
    3. '100' → logprob: -10.500262260437012
    4. '(' → logprob: -13.000262260437012
    5. ' ' → logprob: -14.000262260437012
    6. '```' → logprob: -15.000262260437012
    7. '123' → logprob: -15.625262260437012
    8. ')' → logprob: -15.625262260437012
    9. '999' → logprob: -15.750262260437012
    10. 'int' → logprob: -15.875262260437012

Token 439: ' calcul' (ID: 7559)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0020848317071795464
    2. '998' → logprob: -6.252084732055664
    3. '100' → logprob: -9.252084732055664
    4. ')' → logprob: -10.877084732055664
    5. '999' → logprob: -11.877084732055664
    6. '```' → logprob: -12.252084732055664
    7. '`' → logprob: -12.502084732055664
    8. ' ' → logprob: -12.752084732055664
    9. 'int' → logprob: -12.752084732055664
    10. 'pow' → logprob: -12.877084732055664

Token 440: 's' (ID: 82)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.007323474157601595
    2. 's' → logprob: -5.757323265075684
    3. '#' → logprob: -6.757323265075684
    4. 'aires' → logprob: -6.882323265075684
    5. 'es' → logprob: -7.507323265075684
    6. 'ais' → logprob: -8.007323265075684
    7. 'def' → logprob: -8.632323265075684
    8. '```' → logprob: -8.757323265075684
    9. 'ation' → logprob: -8.882323265075684
    10. 'ATIONS' → logprob: -9.132323265075684

Token 441: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4824959635734558
    2. ' =' → logprob: -1.3574960231781006
    3. '=' → logprob: -2.1074960231781006
    4. 'MOD' → logprob: -6.2324957847595215
    5. ')
' → logprob: -6.8574957847595215
    6. ' )' → logprob: -7.6074957847595215
    7. ')=' → logprob: -8.35749626159668
    8. ')

' → logprob: -9.85749626159668
    9. '):' → logprob: -11.10749626159668
    10. ' MOD' → logprob: -11.48249626159668

Token 442: ' typ' (ID: 5378)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00017708084487821907
    2. ' MOD' → logprob: -8.750177383422852
    3. '10' → logprob: -11.125177383422852
    4. '100' → logprob: -12.875177383422852
    5. '_MOD' → logprob: -14.875177383422852
    6. '=' → logprob: -15.125177383422852
    7. ' ' → logprob: -15.375177383422852
    8. ' =' → logprob: -16.00017738342285
    9. '```' → logprob: -16.50017738342285
    10. '998' → logprob: -17.00017738342285

Token 443: 'ique' (ID: 2222)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.6472173929214478
    2. '=' → logprob: -1.1472173929214478
    3. 'e' → logprob: -2.022217273712158
    4. 'E' → logprob: -4.647217273712158
    5. '_MOD' → logprob: -4.772217273712158
    6. ' =' → logprob: -5.272217273712158
    7. 'é' → logprob: -6.272217273712158
    8. ' MOD' → logprob: -7.647217273712158
    9. 'É' → logprob: -8.022217750549316
    10. '=
' → logprob: -8.272217750549316

Token 444: ' dans' (ID: 2671)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.05889749526977539
    2. '=' → logprob: -2.9338974952697754
    3. ' =' → logprob: -5.558897495269775
    4. '_MOD' → logprob: -9.558897018432617
    5. ' MOD' → logprob: -10.058897018432617
    6. ':' → logprob: -11.308897018432617
    7. '```' → logprob: -12.058897018432617
    8. '
' → logprob: -12.433897018432617
    9. 'mod' → logprob: -12.683897018432617
    10. 'Mod' → logprob: -12.808897018432617

Token 445: ' la' (ID: 557)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09773639589548111
    2. 'competitive' → logprob: -2.472736358642578
    3. 'alg' → logprob: -6.472736358642578
    4. 'compet' → logprob: -6.597736358642578
    5. '998' → logprob: -6.972736358642578
    6. 'les' → logprob: -7.597736358642578
    7. 'la' → logprob: -7.597736358642578
    8. 'contest' → logprob: -7.722736358642578
    9. 'mod' → logprob: -8.097736358642578
    10. 'int' → logprob: -8.097736358642578

Token 446: ' programmation' (ID: 166376)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0014984336448833346
    2. 'competitive' → logprob: -6.876498222351074
    3. '998' → logprob: -8.501498222351074
    4. ' competitive' → logprob: -8.876498222351074
    5. '100' → logprob: -10.751498222351074
    6. 'int' → logprob: -11.251498222351074
    7. '```' → logprob: -11.376498222351074
    8. 'compet' → logprob: -11.501498222351074
    9. 'code' → logprob: -11.626498222351074
    10. '=' → logprob: -11.626498222351074

Token 447: ' compét' (ID: 34024)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0025918271858245134
    2. ' =' → logprob: -6.627591609954834
    3. '=' → logprob: -7.002591609954834
    4. '_MOD' → logprob: -8.252592086791992
    5. '```' → logprob: -9.752592086791992
    6. ' MOD' → logprob: -11.252592086791992
    7. 'mod' → logprob: -12.127592086791992
    8. 'MD' → logprob: -12.502592086791992
    9. '
' → logprob: -12.627592086791992
    10. 'const' → logprob: -13.252592086791992

Token 448: 'itive' (ID: 4171)
  Prédit: 'itive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itive' → logprob: -0.09353452175855637
    2. 'e' → logprob: -2.968534469604492
    3. 'itif' → logprob: -4.343534469604492
    4. 'it' → logprob: -4.718534469604492
    5. 'ition' → logprob: -4.718534469604492
    6. '```' → logprob: -6.468534469604492
    7. 'et' → logprob: -6.718534469604492
    8. 'ITIVE' → logprob: -6.968534469604492
    9. 'ative' → logprob: -7.218534469604492
    10. 'itve' → logprob: -7.343534469604492

Token 449: ' pour' (ID: 1930)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0026697113644331694
    2. '=' → logprob: -6.002669811248779
    3. ' =' → logprob: -8.877669334411621
    4. ':' → logprob: -10.377669334411621
    5. '_MOD' → logprob: -11.002669334411621
    6. ' MOD' → logprob: -12.502669334411621
    7. '=
' → logprob: -13.877669334411621
    8. '
' → logprob: -14.377669334411621
    9. '.MOD' → logprob: -14.627669334411621
    10. ':
' → logprob: -15.502669334411621

Token 450: ' gérer' (ID: 86786)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.010239633731544018
    2. '100' → logprob: -5.135239601135254
    3. 'int' → logprob: -6.010239601135254
    4. '998' → logprob: -6.510239601135254
    5. 'MOD' → logprob: -9.135239601135254
    6. '```' → logprob: -9.635239601135254
    7. 'l' → logprob: -10.635239601135254
    8. '(' → logprob: -10.760239601135254
    9. ' ' → logprob: -10.760239601135254
    10. 'mod' → logprob: -10.760239601135254

Token 451: ' les' (ID: 1341)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -8.959636033978313e-05
    2. '100' → logprob: -10.125089645385742
    3. '998' → logprob: -10.500089645385742
    4. ' ' → logprob: -11.000089645385742
    5. 'MOD' → logprob: -13.125089645385742
    6. '```' → logprob: -13.625089645385742
    7. '(' → logprob: -14.500089645385742
    8. 'mod' → logprob: -14.625089645385742
    9. '1' → logprob: -14.875089645385742
    10. 'int' → logprob: -15.125089645385742

Token 452: ' grands' (ID: 43085)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006991234607994556
    2. ' ' → logprob: -5.006991386413574
    3. 'mod' → logprob: -9.506991386413574
    4. '100' → logprob: -9.756991386413574
    5. '998' → logprob: -10.256991386413574
    6. '(' → logprob: -10.506991386413574
    7. 'MOD' → logprob: -10.506991386413574
    8. '1' → logprob: -11.506991386413574
    9. ' MOD' → logprob: -11.506991386413574
    10. ' (' → logprob: -11.756991386413574

Token 453: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -1.2886492013931274
    2. 'ent' → logprob: -1.4136492013931274
    3. 'MOD' → logprob: -1.4136492013931274
    4. 'mod' → logprob: -1.9136492013931274
    5. 'nombre' → logprob: -3.788649082183838
    6. ' ent' → logprob: -3.788649082183838
    7. 'inte' → logprob: -4.038649082183838
    8. 'n' → logprob: -5.038649082183838
    9. 'numbers' → logprob: -5.413649082183838
    10. 'ints' → logprob: -5.538649082183838

Token 454: '
' (ID: 198)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.05353502929210663
    2. '=' → logprob: -3.053534984588623
    3. ' =' → logprob: -5.428534984588623
    4. ':' → logprob: -8.303535461425781
    5. '_MOD' → logprob: -8.303535461425781
    6. ' MOD' → logprob: -11.053535461425781
    7. '=
' → logprob: -11.803535461425781
    8. ')' → logprob: -12.053535461425781
    9. '100' → logprob: -12.428535461425781
    10. '
' → logprob: -12.553535461425781

Token 455: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.320199877838604e-07
    2. '_MOD' → logprob: -15.125
    3. ' MOD' → logprob: -16.625
    4. '=' → logprob: -18.375
    5. '.MOD' → logprob: -18.75
    6. '10' → logprob: -19.0
    7. 'MODE' → logprob: -19.25
    8. ':' → logprob: -19.5
    9. 'MD' → logprob: -20.0
    10. '100' → logprob: -20.625

Token 456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. ':' → logprob: -15.62692928314209
    4. ',' → logprob: -15.75192928314209
    5. ' ' → logprob: -16.501930236816406
    6. '=int' → logprob: -17.001930236816406
    7. ' =
' → logprob: -17.376930236816406
    8. '=
' → logprob: -17.876930236816406
    9. '=

' → logprob: -18.001930236816406
    10. '.' → logprob: -18.376930236816406

Token 457: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000665375788230449
    2. '100' → logprob: -7.750665187835693
    3. '998' → logprob: -8.375665664672852
    4. 'int' → logprob: -13.125665664672852
    5. '1' → logprob: -13.500665664672852
    6. ' ' → logprob: -14.125665664672852
    7. '```' → logprob: -17.00066566467285
    8. '999' → logprob: -17.25066566467285
    9. '123' → logprob: -17.25066566467285
    10. '109' → logprob: -17.62566566467285

Token 458: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0006205809186212718
    2. '100' → logprob: -7.500620365142822
    3. '998' → logprob: -9.75062084197998
    4. 'int' → logprob: -12.12562084197998
    5. '1' → logprob: -12.50062084197998
    6. '(' → logprob: -16.750619888305664
    7. '123' → logprob: -17.375619888305664
    8. ' ' → logprob: -17.500619888305664
    9. '999' → logprob: -17.875619888305664
    10. '109' → logprob: -17.875619888305664

Token 459: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0383170060813427
    2. '**' → logprob: -3.2883169651031494
    3. '09' → logprob: -8.41331672668457
    4. '+' → logprob: -10.03831672668457
    5. '```' → logprob: -11.78831672668457
    6. '000' → logprob: -14.41331672668457
    7. '7' → logprob: -14.78831672668457
    8. '_' → logprob: -14.91331672668457
    9. ' ' → logprob: -15.16331672668457
    10. '*' → logprob: -15.16331672668457

Token 460: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -20.25
    3. '```' → logprob: -22.0
    4. ' ' → logprob: -22.75
    5. '8' → logprob: -23.5
    6. '10' → logprob: -23.75
    7. '   ' → logprob: -24.25
    8. '+' → logprob: -24.5
    9. '９' → logprob: -24.625
    10. '19' → logprob: -24.875

Token 461: ' +' (ID: 659)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.020160511136054993
    2. '+' → logprob: -4.520160675048828
    3. '007' → logprob: -4.770160675048828
    4. '07' → logprob: -7.645160675048828
    5. '```' → logprob: -9.895160675048828
    6. '9' → logprob: -10.520160675048828
    7. '907' → logprob: -12.145160675048828
    8. '107' → logprob: -12.395160675048828
    9. ' +' → logprob: -12.395160675048828
    10. '123' → logprob: -12.520160675048828

Token 462: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.214019307051785e-05
    2. '7' → logprob: -10.375032424926758
    3. '+' → logprob: -15.625032424926758
    4. ' ' → logprob: -16.000032424926758
    5. ' ' → logprob: -16.125032424926758
    6. '13' → logprob: -16.375032424926758
    7. '39' → logprob: -16.500032424926758
    8. '33' → logprob: -16.500032424926758
    9. '37' → logprob: -16.875032424926758
    10. '123' → logprob: -16.875032424926758

Token 463: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.566264295950532e-05
    2. '7' → logprob: -9.375085830688477
    3. '13' → logprob: -15.875085830688477
    4. '9' → logprob: -16.000085830688477
    5. '123' → logprob: -16.125085830688477
    6. '39' → logprob: -17.000085830688477
    7. '+' → logprob: -17.250085830688477
    8. ' ' → logprob: -17.250085830688477
    9. '1' → logprob: -17.250085830688477
    10. '11' → logprob: -17.500085830688477

Token 464: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028028579428792
    2. 'class' → logprob: -3.9030284881591797
    3. '#' → logprob: -5.40302848815918
    4. '<|end|>' → logprob: -6.65302848815918
    5. '
' → logprob: -7.90302848815918
    6. 'MOD' → logprob: -8.02802848815918
    7. 'n' → logprob: -8.65302848815918
    8. 'import' → logprob: -8.65302848815918
    9. '<|end|>' → logprob: -8.77802848815918
    10. 'from' → logprob: -9.15302848815918

Token 466: ' Initial' (ID: 9209)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007846636697649956
    2. '#' → logprob: -5.382846832275391
    3. 'class' → logprob: -6.007846832275391
    4. 'from' → logprob: -7.257846832275391
    5. 'INF' → logprob: -10.88284683227539
    6. 'import' → logprob: -11.00784683227539
    7. 'DEBUG' → logprob: -12.50784683227539
    8. 'n' → logprob: -13.13284683227539
    9. '```' → logprob: -13.63284683227539
    10. ' def' → logprob: -13.88284683227539

Token 467: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -1.1731692552566528
    2. 'def' → logprob: -1.6731692552566528
    3. 'izer' → logprob: -1.7981692552566528
    4. 'ization' → logprob: -2.6731691360473633
    5. 'izing' → logprob: -2.9231691360473633
    6. 'isation' → logprob: -2.9231691360473633
    7. '#' → logprob: -3.1731691360473633
    8. 'ialize' → logprob: -3.7981691360473633
    9. 'ized' → logprob: -4.173169136047363
    10. 'iser' → logprob: -4.298169136047363

Token 468: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5668021440505981
    2. 'data' → logprob: -2.4418020248413086
    3. 'ans' → logprob: -2.6918020248413086
    4. 'result' → logprob: -3.0668020248413086
    5. 'arr' → logprob: -3.4418020248413086
    6. 'A' → logprob: -3.6918020248413086
    7. 'a' → logprob: -3.8168020248413086
    8. '#' → logprob: -3.9418020248413086
    9. 'counter' → logprob: -4.066802024841309
    10. 'memo' → logprob: -4.066802024841309

Token 469: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7483380436897278
    2. 'n' → logprob: -1.998337984085083
    3. 'def' → logprob: -2.623337984085083
    4. 'ans' → logprob: -2.623337984085083
    5. '[]' → logprob: -2.873337984085083
    6. 'a' → logprob: -3.498337984085083
    7. 'memo' → logprob: -3.998337984085083
    8. 'N' → logprob: -3.998337984085083
    9. 'cache' → logprob: -4.248338222503662
    10. 'result' → logprob: -4.373338222503662

Token 470: ' liste' (ID: 31719)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6276955604553223
    2. 'dp' → logprob: -1.2526955604553223
    3. 'cache' → logprob: -3.2526955604553223
    4. '#' → logprob: -3.7526955604553223
    5. 'counter' → logprob: -4.002695560455322
    6. 'from' → logprob: -4.127695560455322
    7. 'default' → logprob: -4.252695560455322
    8. 'memo' → logprob: -4.252695560455322
    9. 'result' → logprob: -4.752695560455322
    10. 'deque' → logprob: -4.877695560455322

Token 471: ' fact' (ID: 2840)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17678706347942352
    2. '[]' → logprob: -3.4267871379852295
    3. 'lst' → logprob: -3.5517871379852295
    4. 'ans' → logprob: -3.8017871379852295
    5. 'arr' → logprob: -3.9267871379852295
    6. 'a' → logprob: -4.05178689956665
    7. 'A' → logprob: -4.17678689956665
    8. 'res' → logprob: -5.17678689956665
    9. 'data' → logprob: -5.55178689956665
    10. 'answers' → logprob: -6.05178689956665

Token 472: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9286866784095764
    2. 'or' → logprob: -0.9286866784095764
    3. ' =' → logprob: -2.4286866188049316
    4. 'orial' → logprob: -2.4286866188049316
    5. '=[]' → logprob: -4.303686618804932
    6. 's' → logprob: -5.303686618804932
    7. 'ory' → logprob: -5.553686618804932
    8. '[' → logprob: -5.678686618804932
    9. '[]' → logprob: -6.303686618804932
    10. 'oral' → logprob: -7.053686618804932

Token 473: 'factor' (ID: 73174)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0025309526827186346
    2. '[]' → logprob: -6.252531051635742
    3. 'fact' → logprob: -7.502531051635742
    4. '1' → logprob: -11.127531051635742
    5. ' [' → logprob: -11.127531051635742
    6. '[f' → logprob: -12.002531051635742
    7. '[int' → logprob: -13.002531051635742
    8. '_fact' → logprob: -13.127531051635742
    9. '[i' → logprob: -13.252531051635742
    10. '[])' → logprob: -13.877531051635742

Token 474: 'ielle' (ID: 22380)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6398637294769287
    2. 'orial' → logprob: -1.1398637294769287
    3. '=' → logprob: -2.2648637294769287
    4. '=[]' → logprob: -4.639863967895508
    5. 'ors' → logprob: -4.889863967895508
    6. 'ory' → logprob: -5.264863967895508
    7. 'ories' → logprob: -5.389863967895508
    8. '```' → logprob: -5.639863967895508
    9. 'oral' → logprob: -5.764863967895508
    10. 's' → logprob: -5.764863967895508

Token 475: '),' (ID: 936)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7724664807319641
    2. ')' → logprob: -0.8974664807319641
    3. ' =' → logprob: -3.0224664211273193
    4. '=' → logprob: -3.3974664211273193
    5. ']' → logprob: -3.7724664211273193
    6. '[' → logprob: -4.147466659545898
    7. '[]' → logprob: -5.522466659545898
    8. '=[]' → logprob: -6.647466659545898
    9. 'fact' → logprob: -7.022466659545898
    10. '_fact' → logprob: -7.397466659545898

Token 476: ' de' (ID: 334)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.07900413125753403
    2. '[' → logprob: -2.5790040493011475
    3. ' fact' → logprob: -9.204004287719727
    4. 'factor' → logprob: -11.704004287719727
    5. ' [' → logprob: -13.579004287719727
    6. '=[' → logprob: -13.704004287719727
    7. 'facts' → logprob: -14.204004287719727
    8. '=' → logprob: -14.329004287719727
    9. '_fact' → logprob: -14.579004287719727
    10. ' =' → logprob: -14.954004287719727

Token 477: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020756177604198456
    2. '1' → logprob: -4.895756244659424
    3. 'size' → logprob: -5.520756244659424
    4. '[N' → logprob: -6.145756244659424
    5. '[size' → logprob: -6.145756244659424
    6. '[M' → logprob: -6.520756244659424
    7. 'None' → logprob: -7.145756244659424
    8. '100' → logprob: -7.520756244659424
    9. '[MAX' → logprob: -7.895756244659424
    10. 'fact' → logprob: -8.145755767822266

Token 478: ' MOD' (ID: 32868)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.55934077501297
    2. 'MOD' → logprob: -1.1843407154083252
    3. '(' → logprob: -2.934340715408325
    4. '(M' → logprob: -3.434340715408325
    5. '10' → logprob: -3.934340715408325
    6. '100' → logprob: -4.684340953826904
    7. '1' → logprob: -5.934340953826904
    8. '[M' → logprob: -6.059340953826904
    9. '=' → logprob: -6.934340953826904
    10. '0' → logprob: -7.434340953826904

Token 479: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3669900894165039
    2. ' =' → logprob: -1.241990089416504
    3. 'fact' → logprob: -4.116990089416504
    4. '=[' → logprob: -6.241990089416504
    5. '[' → logprob: -9.491990089416504
    6. '_fact' → logprob: -10.866990089416504
    7. ':' → logprob: -11.991990089416504
    8. ']' → logprob: -12.241990089416504
    9. '=f' → logprob: -12.491990089416504
    10. ',' → logprob: -12.866990089416504

Token 480: ' rempl' (ID: 66326)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00042221311014145613
    2. '[' → logprob: -8.250422477722168
    3. ' fact' → logprob: -8.750422477722168
    4. 'facts' → logprob: -14.250422477722168
    5. ' [' → logprob: -14.500422477722168
    6. 'factor' → logprob: -14.750422477722168
    7. '_fact' → logprob: -14.750422477722168
    8. '#' → logprob: -15.875422477722168
    9. '[]' → logprob: -16.25042152404785
    10. 'f' → logprob: -16.62542152404785

Token 481: 'ie' (ID: 396)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8234589695930481
    2. '=[' → logprob: -0.8234589695930481
    3. 'with' → logprob: -2.8234589099884033
    4. '[' → logprob: -3.1984589099884033
    5. ' =' → logprob: -4.948459148406982
    6. ']' → logprob: -5.823459148406982
    7. 'fact' → logprob: -6.073459148406982
    8. '[:]' → logprob: -6.073459148406982
    9. '=[]' → logprob: -6.448459148406982
    10. '   ' → logprob: -6.448459148406982

Token 482: ' de' (ID: 334)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.10551999509334564
    2. ' with' → logprob: -3.105520009994507
    3. '[' → logprob: -3.605520009994507
    4. ' avec' → logprob: -4.230519771575928
    5. '=[' → logprob: -5.605519771575928
    6. 'avec' → logprob: -5.605519771575928
    7. '([' → logprob: -6.105519771575928
    8. '=' → logprob: -6.230519771575928
    9. '(' → logprob: -6.980519771575928
    10. '0' → logprob: -8.105520248413086

Token 483: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003639272879809141
    2. '0' → logprob: -5.628639221191406
    3. '[' → logprob: -10.628639221191406
    4. 'None' → logprob: -11.378639221191406
    5. '-' → logprob: -13.003639221191406
    6. 'zeros' → logprob: -14.128639221191406
    7. 'ones' → logprob: -15.253639221191406
    8. ' ' → logprob: -15.503639221191406
    9. '```' → logprob: -16.628639221191406
    10. '
' → logprob: -17.378639221191406

Token 484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014068979071453214
    2. '0' → logprob: -6.626406669616699
    3. '[' → logprob: -10.0014066696167
    4. 'None' → logprob: -10.5014066696167
    5. '-' → logprob: -11.8764066696167
    6. 'ones' → logprob: -14.6264066696167
    7. 'zeros' → logprob: -15.0014066696167
    8. '```' → logprob: -16.126407623291016
    9. ' ' → logprob: -16.376407623291016
    10. '
' → logprob: -16.626407623291016

Token 485: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4213988780975342
    2. 'fact' → logprob: -1.5463988780975342
    3. ' =' → logprob: -2.296398878097534
    4. '[' → logprob: -4.046399116516113
    5. '=[' → logprob: -4.796399116516113
    6. '[:]' → logprob: -6.671399116516113
    7. ']' → logprob: -6.796399116516113
    8. '_fact' → logprob: -7.671399116516113
    9. ',' → logprob: -8.171399116516113
    10. '(' → logprob: -8.421399116516113

Token 486: '#' (ID: 2)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0005544631858356297
    2. '[' → logprob: -7.50055456161499
    3. 'factor' → logprob: -14.125554084777832
    4. ' fact' → logprob: -14.500554084777832
    5. 'facts' → logprob: -16.00055503845215
    6. '_fact' → logprob: -16.87555503845215
    7. '```' → logprob: -17.62555503845215
    8. '[f' → logprob: -18.00055503845215
    9. 'Fact' → logprob: -18.87555503845215
    10. '.fact' → logprob: -18.87555503845215

Token 487: ' Cette' (ID: 27383)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0007173155900090933
    2. '[' → logprob: -7.2507171630859375
    3. ' fact' → logprob: -12.375717163085938
    4. 'factor' → logprob: -12.875717163085938
    5. '1' → logprob: -15.625717163085938
    6. 'facts' → logprob: -15.625717163085938
    7. ' [' → logprob: -16.875717163085938
    8. '_fact' → logprob: -16.875717163085938
    9. '```' → logprob: -18.000717163085938
    10. '
' → logprob: -18.250717163085938

Token 488: ' liste' (ID: 31719)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.011526385322213173
    2. ' fact' → logprob: -4.886526584625244
    3. 'factor' → logprob: -6.636526584625244
    4. 'liste' → logprob: -7.511526584625244
    5. '#' → logprob: -7.886526584625244
    6. 'fait' → logprob: -8.011526107788086
    7. 'list' → logprob: -8.011526107788086
    8. '[' → logprob: -8.761526107788086
    9. 'ligne' → logprob: -9.136526107788086
    10. 'fac' → logprob: -9.136526107788086

Token 489: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6097723841667175
    2. '=' → logprob: -0.8597723841667175
    3. 'fact' → logprob: -3.6097724437713623
    4. '_fact' → logprob: -6.109772205352783
    5. '[:]' → logprob: -6.734772205352783
    6. ',' → logprob: -6.734772205352783
    7. '[' → logprob: -6.984772205352783
    8. ' fact' → logprob: -8.109772682189941
    9. '.' → logprob: -9.359772682189941
    10. 's' → logprob: -9.484772682189941

Token 490: ' conten' (ID: 23523)
  Prédit: ' servir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' servir' → logprob: -0.3311954736709595
    2. '=' → logprob: -1.9561954736709595
    3. '[' → logprob: -3.33119535446167
    4. ' permettre' → logprob: -3.58119535446167
    5. 'serve' → logprob: -4.08119535446167
    6. 'fact' → logprob: -4.20619535446167
    7. ' =' → logprob: -4.20619535446167
    8. 'serv' → logprob: -4.83119535446167
    9. ' être' → logprob: -5.33119535446167
    10. '[:]' → logprob: -6.08119535446167

Token 491: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.17387054860591888
    2. 'er' → logprob: -2.17387056350708
    3. 'uer' → logprob: -4.04887056350708
    4. 'ur' → logprob: -4.29887056350708
    5. 'r' → logprob: -4.42387056350708
    6. 'eur' → logprob: -6.54887056350708
    7. '[' → logprob: -8.173870086669922
    8. '#' → logprob: -8.673870086669922
    9. 'ue' → logprob: -8.798870086669922
    10. 'u' → logprob: -8.798870086669922

Token 492: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4125496447086334
    2. 'fact' → logprob: -1.162549614906311
    3. 'factor' → logprob: -3.7875497341156006
    4. '0' → logprob: -6.6625494956970215
    5. ' fact' → logprob: -7.9125494956970215
    6. ' ' → logprob: -8.16254997253418
    7. '[' → logprob: -8.66254997253418
    8. 'for' → logprob: -9.03754997253418
    9. '```' → logprob: -9.41254997253418
    10. 'the' → logprob: -9.78754997253418

Token 493: ' pré' (ID: 9424)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.25655996799468994
    2. 'fact' → logprob: -1.75655996799469
    3. '1' → logprob: -3.5065598487854004
    4. 's' → logprob: -5.1315598487854
    5. 'i' → logprob: -5.1315598487854
    6. ' facteur' → logprob: -6.0065598487854
    7. '0' → logprob: -6.1315598487854
    8. 'nombre' → logprob: -6.7565598487854
    9. '```' → logprob: -7.2565598487854
    10. ' factorial' → logprob: -7.3815598487854

Token 494: '-cal' (ID: 84920)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.6243461966514587
    2. 'cal' → logprob: -1.6243462562561035
    3. '-cal' → logprob: -1.9993462562561035
    4. 'calcul' → logprob: -2.6243462562561035
    5. 'calc' → logprob: -4.2493462562561035
    6. 'rem' → logprob: -4.3743462562561035
    7. 'com' → logprob: -4.8743462562561035
    8. 'computed' → logprob: -5.2493462562561035
    9. 'c' → logprob: -5.3743462562561035
    10. '#' → logprob: -5.6243462562561035

Token 495: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.10809695720672607
    2. 'culated' → logprob: -2.3580970764160156
    3. 'cule' → logprob: -5.608097076416016
    4. 'c' → logprob: -5.983097076416016
    5. 'ulé' → logprob: -7.483097076416016
    6. 'cu' → logprob: -7.983097076416016
    7. 'cules' → logprob: -8.858097076416016
    8. '```' → logprob: -9.233097076416016
    9. 'culus' → logprob: -9.733097076416016
    10. 'computed' → logprob: -9.858097076416016

Token 496: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.0486510694026947
    2. ' de' → logprob: -4.048651218414307
    3. 'des' → logprob: -4.423651218414307
    4. 'fact' → logprob: -4.673651218414307
    5. ' of' → logprob: -5.423651218414307
    6. ' fact' → logprob: -6.923651218414307
    7. ' ' → logprob: -7.548651218414307
    8. 's' → logprob: -7.548651218414307
    9. ',' → logprob: -7.923651218414307
    10. ' for' → logprob: -8.173650741577148

Token 497: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0535218715667725
    2. 'fact' → logprob: -1.0535218715667725
    3. 'factor' → logprob: -1.3035218715667725
    4. 'les' → logprob: -4.678522109985352
    5. 'la' → logprob: -5.178522109985352
    6. 's' → logprob: -5.303522109985352
    7. 'i' → logprob: -5.428522109985352
    8. '```' → logprob: -6.428522109985352
    9. '100' → logprob: -7.178522109985352
    10. '0' → logprob: -7.303522109985352

Token 498: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.09275569766759872
    2. 'fact' → logprob: -2.4677557945251465
    3. 'i' → logprob: -5.9677557945251465
    4. '1' → logprob: -7.0927557945251465
    5. '0' → logprob: -9.842755317687988
    6. ' facteur' → logprob: -9.842755317687988
    7. 'nombre' → logprob: -9.967755317687988
    8. '```' → logprob: -10.217755317687988
    9. 'f' → logprob: -10.342755317687988
    10. 'multip' → logprob: -10.717755317687988

Token 499: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -0.2786874771118164
    2. 'i' → logprob: -2.7786874771118164
    3. '1' → logprob: -2.9036874771118164
    4. 'ial' → logprob: -3.0286874771118164
    5. 'iel' → logprob: -3.7786874771118164
    6. 'ials' → logprob: -4.028687477111816
    7. '!' → logprob: -4.028687477111816
    8. '```' → logprob: -5.903687477111816
    9. 'iels' → logprob: -6.028687477111816
    10. 'factor' → logprob: -6.403687477111816

Token 500: ' de' (ID: 334)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.022509103640913963
    2. ',' → logprob: -4.6475090980529785
    3. 'factor' → logprob: -5.6475090980529785
    4. ' fact' → logprob: -5.8975090980529785
    5. 's' → logprob: -6.1475090980529785
    6. '_fact' → logprob: -6.2725090980529785
    7. '[' → logprob: -7.1475090980529785
    8. 'for' → logprob: -7.7725090980529785
    9. 'facts' → logprob: -8.147509574890137
    10. ' for' → logprob: -9.022509574890137

Token 501: ' tous' (ID: 10688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45320263504981995
    2. '1' → logprob: -1.8282026052474976
    3. '0' → logprob: -2.203202724456787
    4. 'MOD' → logprob: -3.828202724456787
    5. '[' → logprob: -3.953202724456787
    6. 'n' → logprob: -4.203202724456787
    7. '[i' → logprob: -4.328202724456787
    8. 'range' → logprob: -5.203202724456787
    9. '100' → logprob: -5.703202724456787
    10. 'each' → logprob: -5.828202724456787

Token 502: ' les' (ID: 1341)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4285883605480194
    2. '(' → logprob: -1.4285883903503418
    3. '(M' → logprob: -2.553588390350342
    4. 'MOD' → logprob: -4.053588390350342
    5. 'fact' → logprob: -5.303588390350342
    6. ' MOD' → logprob: -6.178588390350342
    7. ' ' → logprob: -6.553588390350342
    8. '0' → logprob: -6.678588390350342
    9. ' (' → logprob: -7.303588390350342
    10. '
' → logprob: -7.928588390350342

Token 503: ' nombres' (ID: 76205)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6606705188751221
    2. 'ent' → logprob: -0.7856705188751221
    3. 'indices' → logprob: -3.910670518875122
    4. 'nombre' → logprob: -5.035670280456543
    5. 'n' → logprob: -8.160670280456543
    6. 'inte' → logprob: -8.410670280456543
    7. 'num' → logprob: -8.535670280456543
    8. ' nombres' → logprob: -8.910670280456543
    9. 'index' → logprob: -9.410670280456543
    10. 'enti' → logprob: -10.160670280456543

Token 504: ' de' (ID: 334)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0029910129960626364
    2. 'for' → logprob: -6.752991199493408
    3. 'factor' → logprob: -7.127991199493408
    4. '[' → logprob: -8.00299072265625
    5. ' fact' → logprob: -8.50299072265625
    6. '1' → logprob: -9.12799072265625
    7. ',' → logprob: -9.25299072265625
    8. ' for' → logprob: -10.37799072265625
    9. 'facts' → logprob: -10.37799072265625
    10. '(' → logprob: -10.37799072265625

Token 505: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.35300296545028687
    2. 'MOD' → logprob: -1.9780030250549316
    3. '0' → logprob: -2.1030030250549316
    4. 'i' → logprob: -3.3530030250549316
    5. '1' → logprob: -7.853003025054932
    6. ' range' → logprob: -8.603002548217773
    7. 'rang' → logprob: -8.603002548217773
    8. 'len' → logprob: -8.603002548217773
    9. '100' → logprob: -9.228002548217773
    10. '
' → logprob: -9.228002548217773

Token 506: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1266714483499527
    2. 'MOD' → logprob: -2.376671552658081
    3. '0' → logprob: -4.251671314239502
    4. 'i' → logprob: -4.626671314239502
    5. 'rang' → logprob: -7.501671314239502
    6. '```' → logprob: -8.00167179107666
    7. '1' → logprob: -8.37667179107666
    8. 'n' → logprob: -8.75167179107666
    9. 'mod' → logprob: -9.25167179107666
    10. '(range' → logprob: -9.37667179107666

Token 507: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7150216102600098
    2. ']' → logprob: -0.9650216102600098
    3. ',
' → logprob: -2.5900216102600098
    4. ')' → logprob: -3.3400216102600098
    5. 'for' → logprob: -5.59002161026001
    6. '#' → logprob: -5.84002161026001
    7. '
' → logprob: -6.21502161026001
    8. ' ,' → logprob: -6.59002161026001
    9. 'MOD' → logprob: -6.59002161026001
    10. ' for' → logprob: -6.84002161026001

Token 508: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.723973582556937e-05
    2. ' MOD' → logprob: -11.500017166137695
    3. '10' → logprob: -12.500017166137695
    4. '(M' → logprob: -13.750017166137695
    5. 'MO' → logprob: -14.125017166137695
    6. '100' → logprob: -14.375017166137695
    7. '(' → logprob: -15.250017166137695
    8. '```' → logprob: -15.625017166137695
    9. '_MOD' → logprob: -16.000017166137695
    10. '.MOD' → logprob: -16.375017166137695

Token 509: '-' (ID: 12)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.23257319629192352
    2. '[' → logprob: -1.98257315158844
    3. ']' → logprob: -2.9825732707977295
    4. 'factor' → logprob: -5.98257303237915
    5. ' =' → logprob: -6.23257303237915
    6. ')' → logprob: -6.35757303237915
    7. '_fact' → logprob: -6.48257303237915
    8. ',' → logprob: -6.48257303237915
    9. '=' → logprob: -6.73257303237915
    10. 'f' → logprob: -6.73257303237915

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040457461727783084
    2. '-' → logprob: -7.875404357910156
    3. ' ' → logprob: -11.125404357910156
    4. ' -' → logprob: -12.750404357910156
    5. '```' → logprob: -13.375404357910156
    6. ')' → logprob: -13.875404357910156
    7. '   ' → logprob: -13.875404357910156
    8. '#' → logprob: -14.375404357910156
    9. 'size' → logprob: -15.000404357910156
    10. '
' → logprob: -15.500404357910156

Token 511: ' modulo' (ID: 112372)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00012403888104017824
    2. ' fact' → logprob: -9.750123977661133
    3. 'factor' → logprob: -10.250123977661133
    4. '[' → logprob: -11.375123977661133
    5. 'facts' → logprob: -12.125123977661133
    6. ',' → logprob: -12.250123977661133
    7. '_fact' → logprob: -12.625123977661133
    8. '
' → logprob: -13.625123977661133
    9. ' =' → logprob: -13.750123977661133
    10. '.fact' → logprob: -13.875123977661133

Token 512: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.002808798337355256
    2. ' MOD' → logprob: -5.877808570861816
    3. '_MOD' → logprob: -12.752808570861816
    4. '
' → logprob: -15.252808570861816
    5. '.MOD' → logprob: -15.252808570861816
    6. ' ' → logprob: -16.002809524536133
    7. ' ' → logprob: -16.252809524536133
    8. '0' → logprob: -16.627809524536133
    9. '```' → logprob: -16.627809524536133
    10. '(M' → logprob: -17.002809524536133

Token 513: '.
' (ID: 558)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00015955790877342224
    2. '[' → logprob: -10.12515926361084
    3. 'factor' → logprob: -10.37515926361084
    4. ' fact' → logprob: -10.87515926361084
    5. ' =' → logprob: -11.00015926361084
    6. 'facts' → logprob: -11.12515926361084
    7. '
' → logprob: -11.37515926361084
    8. '_fact' → logprob: -11.50015926361084
    9. '=' → logprob: -12.12515926361084
    10. ',' → logprob: -13.00015926361084

Token 514: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.9361264946837764e-07
    2. 'factor' → logprob: -16.5
    3. '_fact' → logprob: -19.5
    4. ' fact' → logprob: -19.625
    5. 'facts' → logprob: -20.375
    6. '```' → logprob: -21.25
    7. '[' → logprob: -21.375
    8. 'fac' → logprob: -22.625
    9. '
' → logprob: -22.875
    10. '.fact' → logprob: -23.0

Token 515: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269727349281311
    2. ' =' → logprob: -2.1269726753234863
    3. '=[' → logprob: -10.251973152160645
    4. '[' → logprob: -12.001973152160645
    5. '[:]' → logprob: -13.501973152160645
    6. '=[]' → logprob: -14.126973152160645
    7. ' =[' → logprob: -15.626973152160645
    8. ' ' → logprob: -15.626973152160645
    9. '＝' → logprob: -15.876973152160645
    10. ',' → logprob: -15.876973152160645

Token 516: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -14.75
    3. '([' → logprob: -20.75
    4. '1' → logprob: -20.875
    5. '   ' → logprob: -22.375
    6. '(' → logprob: -22.75
    7. '{' → logprob: -22.75
    8. '=[' → logprob: -22.875
    9. ' ' → logprob: -23.75
    10. '#' → logprob: -23.875

Token 517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '   ' → logprob: -21.125
    4. '0' → logprob: -21.125
    5. '' → logprob: -21.625
    6. '۱' → logprob: -22.25
    7. '	' → logprob: -22.75
    8. '_' → logprob: -22.875
    9. '１' → logprob: -23.0625
    10. 'None' → logprob: -23.1875

Token 518: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014263524673879147
    2. ']*' → logprob: -4.26426362991333
    3. ']*(' → logprob: -9.264263153076172
    4. ' for' → logprob: -13.139263153076172
    5. 'for' → logprob: -13.639263153076172
    6. ']+' → logprob: -13.764263153076172
    7. '*' → logprob: -13.889263153076172
    8. ' ]' → logprob: -16.389263153076172
    9. ')' → logprob: -17.639263153076172
    10. '()]' → logprob: -18.014263153076172

Token 519: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2508930563926697
    2. 'for' → logprob: -2.1258931159973145
    3. ']' → logprob: -2.7508931159973145
    4. ' for' → logprob: -4.0008931159973145
    5. ' *' → logprob: -4.5008931159973145
    6. '*(' → logprob: -5.3758931159973145
    7. ']*' → logprob: -5.6258931159973145
    8. '*[' → logprob: -8.000892639160156
    9. ']*(' → logprob: -8.125892639160156
    10. '[' → logprob: -8.875892639160156

Token 520: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00025871701654978096
    2. '(' → logprob: -8.750258445739746
    3. '(M' → logprob: -9.250258445739746
    4. ' MOD' → logprob: -12.875258445739746
    5. '(Mod' → logprob: -13.875258445739746
    6. '100' → logprob: -15.125258445739746
    7. '_MOD' → logprob: -15.750258445739746
    8. 'MO' → logprob: -15.875258445739746
    9. 'MAX' → logprob: -17.250259399414062
    10. 'MD' → logprob: -17.375259399414062

Token 521: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018219047924503684
    2. ' for' → logprob: -6.751821994781494
    3. 'i' → logprob: -7.876821994781494
    4. ')' → logprob: -8.876821517944336
    5. '
' → logprob: -10.001821517944336
    6. '#' → logprob: -10.751821517944336
    7. 'fact' → logprob: -10.751821517944336
    8. '<|end|>' → logprob: -10.876821517944336
    9. ',' → logprob: -11.626821517944336
    10. '0' → logprob: -13.251821517944336

Token 522: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.650518920039758e-06
    2. ' for' → logprob: -12.750003814697266
    3. 'i' → logprob: -14.125003814697266
    4. ')' → logprob: -18.500003814697266
    5. '#' → logprob: -18.750003814697266
    6. '	for' → logprob: -18.750003814697266
    7. 'f' → logprob: -20.125003814697266
    8. '```' → logprob: -20.625003814697266
    9. '
' → logprob: -21.625003814697266
    10. ']' → logprob: -21.750003814697266

Token 523: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.125
    3. '#' → logprob: -18.125
    4. 'i' → logprob: -18.125
    5. 'def' → logprob: -18.5
    6. '```' → logprob: -20.0
    7. 'f' → logprob: -20.25
    8. 'from' → logprob: -20.75
    9. '	for' → logprob: -21.0
    10. 'fo' → logprob: -21.25

Token 524: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.007677965331822634
    2. 'for' → logprob: -5.132678031921387
    3. 'c' → logprob: -7.007678031921387
    4. 't' → logprob: -7.757678031921387
    5. '#' → logprob: -9.132678031921387
    6. 'cl' → logprob: -9.132678031921387
    7. 'cles' → logprob: -9.382678031921387
    8. 'clé' → logprob: -10.132678031921387
    9. 'cler' → logprob: -10.507678031921387
    10. 'n' → logprob: -11.632678031921387

Token 525: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003576304006855935
    2. ' for' → logprob: -8.250357627868652
    3. 'i' → logprob: -9.250357627868652
    4. ' i' → logprob: -16.00035858154297
    5. '_for' → logprob: -16.62535858154297
    6. '_' → logprob: -16.75035858154297
    7. '
' → logprob: -18.25035858154297
    8. '	for' → logprob: -18.25035858154297
    9. '#' → logprob: -18.50035858154297
    10. '```' → logprob: -19.00035858154297

Token 526: ' pré' (ID: 9424)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.596781946020201e-05
    2. ' i' → logprob: -10.000045776367188
    3. '_' → logprob: -14.500045776367188
    4. '_i' → logprob: -17.125045776367188
    5. 'range' → logprob: -17.250045776367188
    6. 'k' → logprob: -17.750045776367188
    7. '(i' → logprob: -18.500045776367188
    8. '	i' → logprob: -19.000045776367188
    9. 'x' → logprob: -20.000045776367188
    10. '```' → logprob: -20.750045776367188

Token 527: '-cal' (ID: 84920)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6099656820297241
    2. 'compute' → logprob: -1.9849656820297241
    3. 'range' → logprob: -2.1099658012390137
    4. 'for' → logprob: -2.3599658012390137
    5. ' i' → logprob: -3.7349658012390137
    6. '_' → logprob: -3.9849658012390137
    7. 'calcul' → logprob: -4.109965801239014
    8. '_i' → logprob: -4.734965801239014
    9. 'c' → logprob: -4.984965801239014
    10. '#' → logprob: -5.859965801239014

Token 528: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -8.661626634420827e-05
    2. 'c' → logprob: -9.750086784362793
    3. 'cule' → logprob: -11.500086784362793
    4. '#' → logprob: -12.375086784362793
    5. 'culator' → logprob: -12.625086784362793
    6. 'culation' → logprob: -12.875086784362793
    7. 'cular' → logprob: -13.500086784362793
    8. '```' → logprob: -13.500086784362793
    9. 'r' → logprob: -13.625086784362793
    10. 'uler' → logprob: -14.375086784362793

Token 529: 'er' (ID: 259)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8673837184906006
    2. ' for' → logprob: -1.1173837184906006
    3. 'range' → logprob: -1.9923837184906006
    4. ' in' → logprob: -3.1173837184906006
    5. ' range' → logprob: -3.6173837184906006
    6. 'i' → logprob: -3.7423837184906006
    7. ' i' → logprob: -4.24238395690918
    8. 'r' → logprob: -6.24238395690918
    9. 'in' → logprob: -6.36738395690918
    10. '_' → logprob: -6.86738395690918

Token 530: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002810007717926055
    2. ' i' → logprob: -8.37528133392334
    3. 'for' → logprob: -10.37528133392334
    4. 'range' → logprob: -11.12528133392334
    5. '(i' → logprob: -13.12528133392334
    6. '_' → logprob: -13.25028133392334
    7. ' range' → logprob: -15.50028133392334
    8. ' for' → logprob: -15.62528133392334
    9. '_i' → logprob: -15.87528133392334
    10. 'k' → logprob: -16.000280380249023

Token 531: ' valeurs' (ID: 73668)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003687053394969553
    2. ' i' → logprob: -8.12536907196045
    3. 'range' → logprob: -10.37536907196045
    4. 'fact' → logprob: -10.62536907196045
    5. 'factor' → logprob: -11.25036907196045
    6. 'n' → logprob: -12.87536907196045
    7. 'x' → logprob: -15.37536907196045
    8. '(i' → logprob: -15.50036907196045
    9. 'k' → logprob: -15.50036907196045
    10. '_' → logprob: -15.62536907196045

Token 532: ' fact' (ID: 2840)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019419649615883827
    2. ' for' → logprob: -6.376942157745361
    3. 'i' → logprob: -8.376941680908203
    4. 'pour' → logprob: -12.126941680908203
    5. '_for' → logprob: -13.376941680908203
    6. ' i' → logprob: -13.876941680908203
    7. 'range' → logprob: -14.376941680908203
    8. '_' → logprob: -14.876941680908203
    9. '_range' → logprob: -15.751941680908203
    10. '_i' → logprob: -16.376941680908203

Token 533: 'ori' (ID: 6510)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.477810800075531
    2. 'for' → logprob: -0.977810800075531
    3. 'i' → logprob: -5.602810859680176
    4. '#' → logprob: -11.602810859680176
    5. '=' → logprob: -11.852810859680176
    6. 'range' → logprob: -12.102810859680176
    7. 'ors' → logprob: -12.852810859680176
    8. ' for' → logprob: -12.977810859680176
    9. 'orial' → logprob: -13.102810859680176
    10. 'eur' → logprob: -13.477810859680176

Token 534: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.038661807775497437
    2. 'el' → logprob: -4.038661956787109
    3. 'e' → logprob: -4.788661956787109
    4. 'elle' → logprob: -5.163661956787109
    5. 'els' → logprob: -6.038661956787109
    6. 'es' → logprob: -6.413661956787109
    7. 'al' → logprob: -7.163661956787109
    8. 'ele' → logprob: -8.16366195678711
    9. '```' → logprob: -8.16366195678711
    10. 'ales' → logprob: -8.53866195678711

Token 535: ' modulo' (ID: 112372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.173704271830502e-06
    2. ' for' → logprob: -12.75000286102295
    3. '
' → logprob: -15.62500286102295
    4. 'i' → logprob: -17.875003814697266
    5. '	for' → logprob: -19.125003814697266
    6. 'range' → logprob: -19.875003814697266
    7. '```' → logprob: -20.500003814697266
    8. '   ' → logprob: -20.625003814697266
    9. '_' → logprob: -20.875003814697266
    10. 'f' → logprob: -20.875003814697266

Token 536: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.23137690126895905
    2. 'i' → logprob: -1.7313768863677979
    3. 'range' → logprob: -4.356377124786377
    4. '1' → logprob: -4.606377124786377
    5. 'for' → logprob: -5.356377124786377
    6. ' MOD' → logprob: -6.731377124786377
    7. ' range' → logprob: -8.606376647949219
    8. '_MOD' → logprob: -8.731376647949219
    9. ' i' → logprob: -8.981376647949219
    10. '(i' → logprob: -9.231376647949219

Token 537: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012023169983876869
    2. ' for' → logprob: -9.125120162963867
    3. '
' → logprob: -11.625120162963867
    4. 'i' → logprob: -13.750120162963867
    5. ':' → logprob: -14.000120162963867
    6. '	for' → logprob: -16.750120162963867
    7. '_' → logprob: -16.875120162963867
    8. '```' → logprob: -16.875120162963867
    9. 'range' → logprob: -16.875120162963867
    10. '_for' → logprob: -17.125120162963867

Token 538: ' tous' (ID: 10688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019299437990412116
    2. ' i' → logprob: -6.251929759979248
    3. 'n' → logprob: -14.876930236816406
    4. 'k' → logprob: -15.126930236816406
    5. 'x' → logprob: -15.501930236816406
    6. '	i' → logprob: -15.751930236816406
    7. 'a' → logprob: -16.376930236816406
    8. 'p' → logprob: -16.751930236816406
    9. '(i' → logprob: -17.126930236816406
    10. 'r' → logprob: -17.251930236816406

Token 539: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004620949272066355
    2. ' i' → logprob: -5.3796210289001465
    3. '	i' → logprob: -15.379620552062988
    4. ' ' → logprob: -15.879620552062988
    5. '(i' → logprob: -15.879620552062988
    6. 'x' → logprob: -16.379621505737305
    7. ' ' → logprob: -16.879621505737305
    8. '   ' → logprob: -17.254621505737305
    9. 'n' → logprob: -17.254621505737305
    10. 'k' → logprob: -17.379621505737305

Token 540: ' ent' (ID: 1121)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00038288687937892973
    2. ' i' → logprob: -7.875382900238037
    3. 'n' → logprob: -13.500382423400879
    4. 'x' → logprob: -14.250382423400879
    5. 'num' → logprob: -15.125382423400879
    6. 'k' → logprob: -15.625382423400879
    7. '```' → logprob: -16.250383377075195
    8. '`' → logprob: -16.750383377075195
    9. '	i' → logprob: -16.750383377075195
    10. 'range' → logprob: -17.125383377075195

Token 541: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.12295997887849808
    2. 'i' → logprob: -2.372960090637207
    3. 'range' → logprob: -4.497960090637207
    4. 'ières' → logprob: -4.747960090637207
    5. 'ier' → logprob: -6.372960090637207
    6. ' range' → logprob: -8.497960090637207
    7. 's' → logprob: -8.997960090637207
    8. 'ités' → logprob: -8.997960090637207
    9. 'ière' → logprob: -9.247960090637207
    10. ' i' → logprob: -9.372960090637207

Token 542: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015213197097182274
    2. 'i' → logprob: -4.2652130126953125
    3. ' for' → logprob: -7.0152130126953125
    4. '_' → logprob: -9.140213012695312
    5. 'range' → logprob: -10.515213012695312
    6. ' i' → logprob: -12.265213012695312
    7. 'in' → logprob: -12.765213012695312
    8. '
' → logprob: -12.890213012695312
    9. '_range' → logprob: -13.265213012695312
    10. '_i' → logprob: -13.765213012695312

Token 543: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003422593232244253
    2. 'i' → logprob: -6.378422737121582
    3. '1' → logprob: -6.503422737121582
    4. ' range' → logprob: -8.878422737121582
    5. '2' → logprob: -9.628422737121582
    6. 'la' → logprob: -11.753422737121582
    7. '```' → logprob: -13.253422737121582
    8. 'l' → logprob: -14.128422737121582
    9. '`' → logprob: -14.378422737121582
    10. 'n' → logprob: -14.503422737121582

Token 544: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5094070477061905e-05
    2. 'i' → logprob: -11.250015258789062
    3. '1' → logprob: -13.250015258789062
    4. ' range' → logprob: -15.125015258789062
    5. '```' → logprob: -17.375015258789062
    6. '2' → logprob: -18.125015258789062
    7. '	range' → logprob: -18.125015258789062
    8. '(range' → logprob: -18.125015258789062
    9. '_range' → logprob: -18.625015258789062
    10. 'rang' → logprob: -19.000015258789062

Token 545: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0662948414683342
    2. 'range' → logprob: -3.1912949085235596
    3. ',' → logprob: -4.4412946701049805
    4. '
' → logprob: -5.0662946701049805
    5. ' for' → logprob: -5.9412946701049805
    6. 'in' → logprob: -7.0662946701049805
    7. ' range' → logprob: -8.19129467010498
    8. '1' → logprob: -8.19129467010498
    9. '```' → logprob: -8.44129467010498
    10. 'while' → logprob: -9.81629467010498

Token 546: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.4498052223643754e-05
    2. ' MOD' → logprob: -11.625014305114746
    3. '(M' → logprob: -12.625014305114746
    4. '(' → logprob: -13.625014305114746
    5. '(Mod' → logprob: -15.500014305114746
    6. '_MOD' → logprob: -15.625014305114746
    7. '10' → logprob: -16.125015258789062
    8. 'MO' → logprob: -16.250015258789062
    9. '999' → logprob: -16.500015258789062
    10. '.MOD' → logprob: -16.500015258789062

Token 547: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003088470548391342
    2. 'range' → logprob: -6.128088474273682
    3. ' for' → logprob: -7.378088474273682
    4. 'in' → logprob: -9.128087997436523
    5. ':' → logprob: -9.503087997436523
    6. ' range' → logprob: -10.503087997436523
    7. '_range' → logprob: -11.128087997436523
    8. '=' → logprob: -11.128087997436523
    9. '(range' → logprob: -11.378087997436523
    10. 'i' → logprob: -12.253087997436523

Token 548: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20736172795295715
    2. '1' → logprob: -1.8323616981506348
    3. '2' → logprob: -4.957361698150635
    4. '6' → logprob: -5.457361698150635
    5. '3' → logprob: -5.457361698150635
    6. '```' → logprob: -5.832361698150635
    7. 'for' → logprob: -6.207361698150635
    8. '7' → logprob: -7.207361698150635
    9. 'int' → logprob: -7.207361698150635
    10. '999' → logprob: -7.332361698150635

Token 549: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005301111843436956
    2. ' for' → logprob: -5.255300998687744
    3. '
' → logprob: -9.880301475524902
    4. ':' → logprob: -11.255301475524902
    5. '```' → logprob: -13.880301475524902
    6. ':
' → logprob: -14.630301475524902
    7. '

' → logprob: -14.755301475524902
    8. '	for' → logprob: -14.880301475524902
    9. '1' → logprob: -15.505301475524902
    10. 'i' → logprob: -15.505301475524902

Token 550: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.47495681833243e-05
    2. ' for' → logprob: -10.625024795532227
    3. '
' → logprob: -15.500024795532227
    4. '```' → logprob: -16.375024795532227
    5. ':' → logprob: -16.500024795532227
    6. '	for' → logprob: -17.125024795532227
    7. 'i' → logprob: -17.625024795532227
    8. '   ' → logprob: -18.875024795532227
    9. '1' → logprob: -19.500024795532227
    10. '`' → logprob: -19.875024795532227

Token 551: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2519325911998749
    2. 'i' → logprob: -1.5019326210021973
    3. '_' → logprob: -13.626932144165039
    4. '	i' → logprob: -13.751932144165039
    5. ' ' → logprob: -14.501932144165039
    6. 'x' → logprob: -15.626932144165039
    7. ' _' → logprob: -15.751932144165039
    8. ' x' → logprob: -16.00193214416504
    9. '_i' → logprob: -16.00193214416504
    10. ' ' → logprob: -16.25193214416504

Token 552: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.575965404510498
    2. 'in' → logprob: -0.825965404510498
    3. 'n' → logprob: -11.450965881347656
    4. 'range' → logprob: -11.950965881347656
    5. '1' → logprob: -12.700965881347656
    6. ' ' → logprob: -13.325965881347656
    7. '```' → logprob: -14.325965881347656
    8. 's' → logprob: -14.325965881347656
    9. '	in' → logprob: -14.450965881347656
    10. 'In' → logprob: -14.825965881347656

Token 553: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. '	range' → logprob: -18.250017166137695
    4. '1' → logprob: -20.500017166137695
    5. 'rang' → logprob: -20.500017166137695
    6. '(range' → logprob: -20.500017166137695
    7. '   ' → logprob: -21.375017166137695
    8. 'r' → logprob: -21.875017166137695
    9. '```' → logprob: -22.000017166137695
    10. 'ange' → logprob: -22.125017166137695

Token 554: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029750484973192215
    2. '1' → logprob: -3.5297505855560303
    3. '(
' → logprob: -16.77975082397461
    4. ' ' → logprob: -17.52975082397461
    5. ' (' → logprob: -18.02975082397461
    6. '2' → logprob: -19.02975082397461
    7. '[' → logprob: -19.40475082397461
    8. '```' → logprob: -19.65475082397461
    9. '   ' → logprob: -20.90475082397461
    10. '(

' → logprob: -22.02975082397461

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '2' → logprob: -20.5
    4. 'MOD' → logprob: -20.625
    5. '(' → logprob: -21.5
    6. '   ' → logprob: -23.25
    7. '１' → logprob: -23.625
    8. '```' → logprob: -24.25
    9. '10' → logprob: -25.625
    10. '۱' → logprob: -26.0

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -12.750003814697266
    3. ',
' → logprob: -14.375003814697266
    4. ',M' → logprob: -16.375003814697266
    5. 'MOD' → logprob: -16.500003814697266
    6. ',

' → logprob: -18.875003814697266
    7. ',
' → logprob: -19.125003814697266
    8. ' MOD' → logprob: -19.125003814697266
    9. '1' → logprob: -20.375003814697266
    10. '   ' → logprob: -21.000003814697266

Token 557: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -16.5
    3. '_MOD' → logprob: -22.0
    4. 'MO' → logprob: -22.75
    5. '.MOD' → logprob: -22.75
    6. 'MODE' → logprob: -23.625
    7. '   ' → logprob: -23.75
    8. '```' → logprob: -24.0
    9. 'mod' → logprob: -24.875
    10. 'M' → logprob: -25.5

Token 558: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12694479525089264
    2. '):
' → logprob: -2.1269447803497314
    3. ':' → logprob: -11.751944541931152
    4. '):
' → logprob: -12.376944541931152
    5. ' ):' → logprob: -12.876944541931152
    6. ')' → logprob: -13.876944541931152
    7. ' ):
' → logprob: -15.126944541931152
    8. ']:' → logprob: -15.251944541931152
    9. ':
' → logprob: -15.751944541931152
    10. '):

' → logprob: -16.62694549560547

Token 559: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4746283292770386
    2. 'fact' → logprob: -0.9746283292770386
    3. ' fact' → logprob: -7.599628448486328
    4. '	f' → logprob: -10.099628448486328
    5. '_fact' → logprob: -12.474628448486328
    6. '   ' → logprob: -12.974628448486328
    7. '```' → logprob: -13.849628448486328
    8. '.fact' → logprob: -14.099628448486328
    9. 'factor' → logprob: -14.599628448486328
    10. 'f' → logprob: -14.599628448486328

Token 560: ' #' (ID: 1069)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -4.894790981779806e-05
    2. '   ' → logprob: -10.000048637390137
    3. ' fact' → logprob: -12.625048637390137
    4. '_fact' → logprob: -16.875049591064453
    5. 'factor' → logprob: -18.250049591064453
    6. 'fac' → logprob: -18.625049591064453
    7. '.fact' → logprob: -19.125049591064453
    8. 'Fact' → logprob: -19.250049591064453
    9. '```' → logprob: -19.750049591064453
    10. 'facts' → logprob: -19.875049591064453

Token 561: ' La' (ID: 3038)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -6.704273118884885e-07
    2. ' fact' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.875000953674316
    4. 'factor' → logprob: -19.125
    5. '_fact' → logprob: -19.5
    6. 'Fact' → logprob: -20.75
    7. 'fac' → logprob: -21.125
    8. 'facts' → logprob: -21.125
    9. '.fact' → logprob: -21.625
    10. ' ' → logprob: -22.5

Token 562: ' factor' (ID: 12332)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00012737659562844783
    2. ' fact' → logprob: -9.000127792358398
    3. '_fact' → logprob: -13.125127792358398
    4. 'act' → logprob: -13.375127792358398
    5. 'factor' → logprob: -15.875127792358398
    6. 'Fact' → logprob: -16.3751277923584
    7. '.fact' → logprob: -17.2501277923584
    8. '#' → logprob: -17.3751277923584
    9. ' ' → logprob: -17.3751277923584
    10. '   ' → logprob: -17.7501277923584

Token 563: 'ielle' (ID: 22380)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6755298376083374
    2. 'ial' → logprob: -1.5505298376083374
    3. 'fact' → logprob: -1.5505298376083374
    4. 'act' → logprob: -3.925529956817627
    5. '   ' → logprob: -4.175529956817627
    6. 'i' → logprob: -4.425529956817627
    7. 'iel' → logprob: -5.175529956817627
    8. '[' → logprob: -5.425529956817627
    9. 't' → logprob: -5.925529956817627
    10. '=' → logprob: -6.550529956817627

Token 564: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2941269874572754
    2. 'fact' → logprob: -1.4191269874572754
    3. '=' → logprob: -5.169126987457275
    4. ' =' → logprob: -5.794126987457275
    5. '*=' → logprob: -6.419126987457275
    6. '   ' → logprob: -6.919126987457275
    7. '[' → logprob: -7.544126987457275
    8. ' *=' → logprob: -7.544126987457275
    9. ' fact' → logprob: -9.169126510620117
    10. 'factor' → logprob: -9.419126510620117

Token 565: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20895470678806305
    2. 'fact' → logprob: -1.7089546918869019
    3. ' i' → logprob: -5.208954811096191
    4. ' fact' → logprob: -6.458954811096191
    5. '   ' → logprob: -8.708954811096191
    6. '[i' → logprob: -8.833954811096191
    7. '(i' → logprob: -10.333954811096191
    8. '	i' → logprob: -10.708954811096191
    9. 'factor' → logprob: -11.083954811096191
    10. ' ' → logprob: -11.083954811096191

Token 566: ' est' (ID: 893)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5500418543815613
    2. '=' → logprob: -0.9250418543815613
    3. ' =' → logprob: -3.925041913986206
    4. '   ' → logprob: -5.800041675567627
    5. '*=' → logprob: -5.800041675567627
    6. 'factor' → logprob: -8.175042152404785
    7. '_fact' → logprob: -9.050042152404785
    8. ' *=' → logprob: -9.425042152404785
    9. ' fact' → logprob: -9.550042152404785
    10. '*' → logprob: -9.550042152404785

Token 567: ' (' (ID: 350)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0463043637573719
    2. '(f' → logprob: -3.29630446434021
    3. ' (' → logprob: -5.796304225921631
    4. ' fact' → logprob: -5.796304225921631
    5. '   ' → logprob: -6.421304225921631
    6. '(i' → logprob: -7.921304225921631
    7. '_fact' → logprob: -9.921304702758789
    8. ' ' → logprob: -10.421304702758789
    9. 'factor' → logprob: -10.921304702758789
    10. 'f' → logprob: -11.046304702758789

Token 568: 'factor' (ID: 73174)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0001314295077463612
    2. ' fact' → logprob: -9.125131607055664
    3. 'factor' → logprob: -11.750131607055664
    4. '_fact' → logprob: -12.375131607055664
    5. '   ' → logprob: -12.500131607055664
    6. '(i' → logprob: -12.875131607055664
    7. 'i' → logprob: -14.000131607055664
    8. 'Fact' → logprob: -14.375131607055664
    9. 'fac' → logprob: -14.625131607055664
    10. 'f' → logprob: -14.750131607055664

Token 569: 'ielle' (ID: 22380)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.09306030720472336
    2. 'fact' → logprob: -2.843060255050659
    3. '[i' → logprob: -3.718060255050659
    4. '(i' → logprob: -5.843060493469238
    5. 'i' → logprob: -6.968060493469238
    6. '*' → logprob: -6.968060493469238
    7. '   ' → logprob: -7.593060493469238
    8. '*i' → logprob: -7.718060493469238
    9. ' *' → logprob: -8.843060493469238
    10. 'val' → logprob: -9.593060493469238

Token 570: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010413920972496271
    2. 'fact' → logprob: -9.625103950500488
    3. '[' → logprob: -11.375103950500488
    4. 'i' → logprob: -11.500103950500488
    5. '   ' → logprob: -11.875103950500488
    6. '*' → logprob: -13.250103950500488
    7. 's' → logprob: -13.500103950500488
    8. ' [' → logprob: -13.625103950500488
    9. '[-' → logprob: -13.750103950500488
    10. ')' → logprob: -13.750103950500488

Token 571: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24518872797489166
    2. 'fact' → logprob: -1.6201887130737305
    3. '[i' → logprob: -4.7451887130737305
    4. '(i' → logprob: -5.4951887130737305
    5. ' i' → logprob: -5.6201887130737305
    6. ' fact' → logprob: -5.8701887130737305
    7. 'fait' → logprob: -9.37018871307373
    8. '   ' → logprob: -10.12018871307373
    9. ' (' → logprob: -10.24518871307373
    10. ' ' → logprob: -10.37018871307373

Token 572: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013657122617587447
    2. ' -' → logprob: -6.626365661621094
    3. '[i' → logprob: -10.376365661621094
    4. '   ' → logprob: -13.251365661621094
    5. ' ' → logprob: -13.376365661621094
    6. '*' → logprob: -13.501365661621094
    7. ' *' → logprob: -13.876365661621094
    8. 'i' → logprob: -14.376365661621094
    9. '
' → logprob: -14.876365661621094
    10. '```' → logprob: -14.876365661621094

Token 573: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03180116415023804
    2. '1' → logprob: -3.906801223754883
    3. '-' → logprob: -4.656801223754883
    4. ')' → logprob: -7.781801223754883
    5. ' i' → logprob: -7.781801223754883
    6. '[i' → logprob: -8.156801223754883
    7. '(i' → logprob: -8.281801223754883
    8. '   ' → logprob: -9.031801223754883
    9. ' ' → logprob: -9.531801223754883
    10. ']' → logprob: -10.156801223754883

Token 574: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04893558472394943
    2. ' *' → logprob: -3.048935651779175
    3. '*i' → logprob: -8.048935890197754
    4. ')' → logprob: -11.173935890197754
    5. '   ' → logprob: -11.923935890197754
    6. ' ' → logprob: -12.548935890197754
    7. ' ' → logprob: -13.173935890197754
    8. '**' → logprob: -14.673935890197754
    9. ')*' → logprob: -14.798935890197754
    10. '#' → logprob: -15.048935890197754

Token 575: ' fois' (ID: 14697)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.020633799955248833
    2. ' *' → logprob: -3.8956336975097656
    3. '   ' → logprob: -9.895633697509766
    4. '*i' → logprob: -10.270633697509766
    5. 'fact' → logprob: -12.645633697509766
    6. ' ' → logprob: -14.020633697509766
    7. ' ' → logprob: -14.520633697509766
    8. '*f' → logprob: -14.645633697509766
    9. '=' → logprob: -14.895633697509766
    10. '_fact' → logprob: -15.395633697509766

Token 576: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03051760233938694
    2. 'fact' → logprob: -3.655517578125
    3. ' i' → logprob: -5.530517578125
    4. ' fact' → logprob: -8.405517578125
    5. '(i' → logprob: -11.905517578125
    6. '   ' → logprob: -12.030517578125
    7. '	i' → logprob: -13.155517578125
    8. '```' → logprob: -13.530517578125
    9. ' ' → logprob: -13.655517578125
    10. '[i' → logprob: -14.280517578125

Token 577: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.350699782371521
    2. 'fact' → logprob: -1.225699782371521
    3. ' fact' → logprob: -6.2256999015808105
    4. ':' → logprob: -9.475699424743652
    5. '_fact' → logprob: -10.225699424743652
    6. 'factor' → logprob: -10.350699424743652
    7. '*' → logprob: -10.600699424743652
    8. ',' → logprob: -10.725699424743652
    9. '	f' → logprob: -11.225699424743652
    10. ' *' → logprob: -11.225699424743652

Token 578: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030762115493416786
    2. 'fact' → logprob: -3.530762195587158
    3. ' fact' → logprob: -6.905762195587158
    4. '```' → logprob: -12.78076171875
    5. 'factor' → logprob: -13.28076171875
    6. '_fact' → logprob: -13.40576171875
    7. '.fact' → logprob: -14.15576171875
    8. '  ' → logprob: -14.65576171875
    9. '       ' → logprob: -14.78076171875
    10. '    ' → logprob: -15.15576171875

Token 579: ' tout' (ID: 5501)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0023330706171691418
    2. ' fact' → logprob: -6.252333164215088
    3. 'i' → logprob: -8.87733268737793
    4. 'factor' → logprob: -8.87733268737793
    5. 'fait' → logprob: -9.75233268737793
    6. 'code' → logprob: -11.50233268737793
    7. '%' → logprob: -11.75233268737793
    8. ' i' → logprob: -11.87733268737793
    9. '_fact' → logprob: -11.87733268737793
    10. '```' → logprob: -12.00233268737793

Token 580: ' en' (ID: 469)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0370388925075531
    2. 'fact' → logprob: -3.787038803100586
    3. ' %' → logprob: -4.662038803100586
    4. ' modulo' → logprob: -6.287038803100586
    5. '*' → logprob: -6.912038803100586
    6. 'mod' → logprob: -7.162038803100586
    7. '%=' → logprob: -8.787038803100586
    8. '_fact' → logprob: -9.537038803100586
    9. ' fact' → logprob: -9.537038803100586
    10. '%i' → logprob: -9.912038803100586

Token 581: ' prenant' (ID: 140375)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6471871733665466
    2. 'MOD' → logprob: -1.1471872329711914
    3. ' MOD' → logprob: -2.6471872329711914
    4. ' modulo' → logprob: -3.2721872329711914
    5. 'mod' → logprob: -3.7721872329711914
    6. ' %' → logprob: -4.397187232971191
    7. '%i' → logprob: -5.147187232971191
    8. '_MOD' → logprob: -5.897187232971191
    9. 'multip' → logprob: -6.522187232971191
    10. ')%' → logprob: -6.897187232971191

Token 582: ' le' (ID: 505)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5750045776367188
    2. '%' → logprob: -1.0750045776367188
    3. ')%' → logprob: -4.200004577636719
    4. '(i' → logprob: -4.200004577636719
    5. 'i' → logprob: -4.325004577636719
    6. ' %' → logprob: -4.700004577636719
    7. '%i' → logprob: -4.700004577636719
    8. ' fact' → logprob: -4.950004577636719
    9. 'MOD' → logprob: -5.200004577636719
    10. ')' → logprob: -5.200004577636719

Token 583: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.039847906678915024
    2. 'mod' → logprob: -3.2898478507995605
    3. 'MOD' → logprob: -6.5398478507995605
    4. ' modulo' → logprob: -8.914848327636719
    5. ' %' → logprob: -9.414848327636719
    6. '%i' → logprob: -9.789848327636719
    7. ' MOD' → logprob: -10.664848327636719
    8. 'fact' → logprob: -10.914848327636719
    9. '_mod' → logprob: -11.289848327636719
    10. 'i' → logprob: -11.789848327636719

Token 584: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.7988554835319519
    2. 'fact' → logprob: -1.2988555431365967
    3. '%' → logprob: -2.4238555431365967
    4. '(i' → logprob: -2.9238555431365967
    5. ' MOD' → logprob: -3.2988555431365967
    6. ' fact' → logprob: -3.7988555431365967
    7. ' %' → logprob: -4.048855304718018
    8. '   ' → logprob: -4.173855304718018
    9. ')' → logprob: -4.673855304718018
    10. ' i' → logprob: -5.173855304718018

Token 585: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25884369015693665
    2. 'fact' → logprob: -1.5088436603546143
    3. ':' → logprob: -5.133843898773193
    4. ' fact' → logprob: -7.133843898773193
    5. ':
' → logprob: -9.258843421936035
    6. '.fact' → logprob: -11.133843421936035
    7. '```' → logprob: -11.133843421936035
    8. ',' → logprob: -11.508843421936035
    9. '_fact' → logprob: -11.633843421936035
    10. 'factor' → logprob: -11.758843421936035

Token 586: ' éviter' (ID: 64013)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.029894428327679634
    2. ' fact' → logprob: -3.5298943519592285
    3. '   ' → logprob: -9.779894828796387
    4. '%' → logprob: -10.154894828796387
    5. 'factor' → logprob: -11.029894828796387
    6. '_fact' → logprob: -11.279894828796387
    7. '```' → logprob: -12.654894828796387
    8. ' facto' → logprob: -13.154894828796387
    9. '.fact' → logprob: -13.154894828796387
    10. 'facts' → logprob: -13.529894828796387

Token 587: ' le' (ID: 505)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.11530759185552597
    2. 'overflow' → logprob: -2.240307569503784
    3. ' MOD' → logprob: -7.365307807922363
    4. '%' → logprob: -8.490307807922363
    5. 'MOD' → logprob: -8.490307807922363
    6. ' des' → logprob: -8.490307807922363
    7. 'Overflow' → logprob: -8.615307807922363
    8. ' la' → logprob: -9.240307807922363
    9. 'fact' → logprob: -9.365307807922363
    10. 'd' → logprob: -9.365307807922363

Token 588: ' déb' (ID: 37874)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.05157839134335518
    2. 'd' → logprob: -3.5515782833099365
    3. ' déb' → logprob: -4.301578521728516
    4. ' overflow' → logprob: -5.176578521728516
    5. ' dépasse' → logprob: -6.426578521728516
    6. 'dé' → logprob: -7.426578521728516
    7. 's' → logprob: -9.676578521728516
    8. 'sur' → logprob: -9.926578521728516
    9. '```' → logprob: -10.926578521728516
    10. 'Overflow' → logprob: -11.426578521728516

Token 589: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.00013250234769657254
    2. '```' → logprob: -10.00013256072998
    3. 'or' → logprob: -11.12513256072998
    4. '%' → logprob: -11.50013256072998
    5. '``' → logprob: -11.75013256072998
    6. 'org' → logprob: -12.00013256072998
    7. '(ord' → logprob: -12.50013256072998
    8. 'ordu' → logprob: -12.50013256072998
    9. 'ordre' → logprob: -12.62513256072998
    10. 'bord' → logprob: -12.75013256072998

Token 590: 'ement' (ID: 962)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4658365845680237
    2. 'ère' → logprob: -3.340836524963379
    3. 'éré' → logprob: -3.340836524963379
    4. 'ément' → logprob: -3.590836524963379
    5. '+' → logprob: -3.715836524963379
    6. 'u' → logprob: -3.840836524963379
    7. 'éra' → logprob: -3.965836524963379
    8. 'e' → logprob: -3.965836524963379
    9. 'age' → logprob: -4.090836524963379
    10. 'ement' → logprob: -4.090836524963379

Token 591: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44030502438545227
    2. 'fact' → logprob: -1.0653049945831299
    3. ' fact' → logprob: -4.940305233001709
    4. ':' → logprob: -5.565305233001709
    5. ',' → logprob: -9.56530475616455
    6. '```' → logprob: -9.56530475616455
    7. ':
' → logprob: -9.94030475616455
    8. '    
' → logprob: -10.19030475616455
    9. '_fact' → logprob: -10.44030475616455
    10. '.fact' → logprob: -10.44030475616455

Token 592: ' respecter' (ID: 107203)
  Prédit: ' garder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' garder' → logprob: -0.6844397187232971
    2. 'g' → logprob: -1.6844396591186523
    3. 'fact' → logprob: -2.4344396591186523
    4. 'overflow' → logprob: -3.0594396591186523
    5. 'maint' → logprob: -3.3094396591186523
    6. ' conserver' → logprob: -3.6844396591186523
    7. ' overflow' → logprob: -3.9344396591186523
    8. 'con' → logprob: -4.184439659118652
    9. ' garantir' → logprob: -4.309439659118652
    10. ' assurer' → logprob: -5.059439659118652

Token 593: ' les' (ID: 1341)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.144669309258461
    2. ' MOD' → logprob: -3.2696692943573
    3. ' la' → logprob: -3.3946692943573
    4. '```' → logprob: -4.144669532775879
    5. '   ' → logprob: -4.269669532775879
    6. 'le' → logprob: -4.394669532775879
    7. 'la' → logprob: -4.519669532775879
    8. 'l' → logprob: -6.019669532775879
    9. ' le' → logprob: -6.269669532775879
    10. '%' → logprob: -6.269669532775879

Token 594: ' contraintes' (ID: 167366)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.33203375339508057
    2. 'mod' → logprob: -2.207033634185791
    3. '```' → logprob: -2.457033634185791
    4. ' modulo' → logprob: -3.832033634185791
    5. 'MOD' → logprob: -4.082033634185791
    6. ' MOD' → logprob: -4.332033634185791
    7. ' modular' → logprob: -5.082033634185791
    8. ' %' → logprob: -5.207033634185791
    9. ' modulus' → logprob: -5.332033634185791
    10. '`' → logprob: -5.457033634185791

Token 595: ' du' (ID: 1462)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.27080652117729187
    2. '   ' → logprob: -1.5208065509796143
    3. ':' → logprob: -4.520806312561035
    4. ' fact' → logprob: -5.020806312561035
    5. ',' → logprob: -8.770806312561035
    6. '```' → logprob: -8.770806312561035
    7. '_fact' → logprob: -8.895806312561035
    8. ':
' → logprob: -8.895806312561035
    9. 'factor' → logprob: -9.270806312561035
    10. '[i' → logprob: -9.895806312561035

Token 596: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.2605937719345093
    2. ' problème' → logprob: -1.8855937719345093
    3. 'problem' → logprob: -2.510593891143799
    4. 'proble' → logprob: -2.635593891143799
    5. 'mod' → logprob: -2.760593891143799
    6. 'MOD' → logprob: -2.885593891143799
    7. 'code' → logprob: -2.885593891143799
    8. 'compet' → logprob: -2.885593891143799
    9. 'competition' → logprob: -3.385593891143799
    10. 'con' → logprob: -4.135593891143799

Token 597: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03569762781262398
    2. 'fact' → logprob: -3.4106976985931396
    3. ' fact' → logprob: -6.9106974601745605
    4. ':' → logprob: -6.9106974601745605
    5. ':
' → logprob: -11.285697937011719
    6. '```' → logprob: -11.535697937011719
    7. ' :' → logprob: -12.160697937011719
    8. '.fact' → logprob: -12.285697937011719
    9. '    ' → logprob: -12.660697937011719
    10. '  ' → logprob: -12.660697937011719

Token 598: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01004929468035698
    2. 'fact' → logprob: -4.635049343109131
    3. ' fact' → logprob: -8.260048866271973
    4. ':' → logprob: -10.635048866271973
    5. '```' → logprob: -12.510048866271973
    6. '	f' → logprob: -13.510048866271973
    7. '_fact' → logprob: -14.135048866271973
    8. 'factor' → logprob: -14.260048866271973
    9. '.fact' → logprob: -14.260048866271973
    10. '   ' → logprob: -14.260048866271973

Token 599: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.0033565396443009377
    2. ' fact' → logprob: -6.128356456756592
    3. '   ' → logprob: -6.753356456756592
    4. '_fact' → logprob: -13.12835693359375
    5. '.fact' → logprob: -14.37835693359375
    6. 'factor' → logprob: -15.00335693359375
    7. '```' → logprob: -15.25335693359375
    8. 'Fact' → logprob: -15.50335693359375
    9. ' ' → logprob: -16.12835693359375
    10. 'facts' → logprob: -16.25335693359375

Token 600: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1756367712223437e-05
    2. '[' → logprob: -11.375011444091797
    3. ' [' → logprob: -16.625011444091797
    4. '=' → logprob: -17.250011444091797
    5. '[I' → logprob: -17.375011444091797
    6. '\[' → logprob: -18.125011444091797
    7. '```' → logprob: -19.000011444091797
    8. '   ' → logprob: -19.625011444091797
    9. '[
' → logprob: -20.125011444091797
    10. 'i' → logprob: -20.125011444091797

Token 601: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04346008226275444
    2. ']=' → logprob: -3.7934601306915283
    3. '=' → logprob: -3.9184601306915283
    4. ' =' → logprob: -9.54345989227295
    5. ']=(' → logprob: -9.66845989227295
    6. '=i' → logprob: -13.79345989227295
    7. ' ]' → logprob: -14.16845989227295
    8. '*=' → logprob: -14.66845989227295
    9. ')' → logprob: -14.91845989227295
    10. ']+=' → logprob: -14.91845989227295

Token 602: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.65707261255011e-06
    2. ' =' → logprob: -12.250008583068848
    3. '*=' → logprob: -12.500008583068848
    4. '=

' → logprob: -17.250009536743164
    5. '=
' → logprob: -17.375009536743164
    6. '=(' → logprob: -18.125009536743164
    7. '=i' → logprob: -19.250009536743164
    8. '＝' → logprob: -19.625009536743164
    9. '=}' → logprob: -19.750009536743164
    10. '%=' → logprob: -20.125009536743164

Token 603: ' (' (ID: 350)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.40886804461479187
    2. 'fact' → logprob: -1.1588680744171143
    3. ' (' → logprob: -4.408867835998535
    4. ' fact' → logprob: -4.658867835998535
    5. '_fact' → logprob: -10.533867835998535
    6. 'factor' → logprob: -10.908867835998535
    7. '.fact' → logprob: -11.408867835998535
    8. '(' → logprob: -11.408867835998535
    9. 'Fact' → logprob: -12.158867835998535
    10. ' ' → logprob: -12.158867835998535

Token 604: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -3.128163257315464e-07
    2. ' fact' → logprob: -15.25
    3. 'factor' → logprob: -19.375
    4. '_fact' → logprob: -19.625
    5. 'fac' → logprob: -20.25
    6. 'facts' → logprob: -20.375
    7. '.fact' → logprob: -21.125
    8. 'Fact' → logprob: -21.625
    9. 'f' → logprob: -22.75
    10. 'fait' → logprob: -23.25

Token 605: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -18.375
    3. '[' → logprob: -19.5
    4. '[I' → logprob: -19.75
    5. '(i' → logprob: -21.25
    6. '[
' → logprob: -22.25
    7. '[-' → logprob: -22.5
    8. '```' → logprob: -22.625
    9. '{i' → logprob: -23.25
    10. '	i' → logprob: -23.375

Token 606: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. 'i' → logprob: -13.00000286102295
    3. '-' → logprob: -15.87500286102295
    4. '(i' → logprob: -17.000001907348633
    5. '
' → logprob: -17.375001907348633
    6. '[-' → logprob: -18.000001907348633
    7. '[I' → logprob: -18.250001907348633
    8. '[
' → logprob: -18.875001907348633
    9. ' [' → logprob: -19.125001907348633
    10. '[' → logprob: -19.125001907348633

Token 607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '```' → logprob: -16.25
    4. ']' → logprob: -17.0
    5. '   ' → logprob: -17.0
    6. 'i' → logprob: -17.5625
    7. '১' → logprob: -19.625
    8. ')' → logprob: -19.9375
    9. '  ' → logprob: -20.0
    10. '१' → logprob: -20.0625

Token 608: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25213420391082764
    2. '*' → logprob: -1.5021342039108276
    3. '*i' → logprob: -8.502134323120117
    4. ' ' → logprob: -13.627134323120117
    5. ' ' → logprob: -14.127134323120117
    6. '   ' → logprob: -16.252134323120117
    7. '**' → logprob: -17.377134323120117
    8. '*object' → logprob: -18.127134323120117
    9. '*
' → logprob: -18.752134323120117
    10. '	' → logprob: -18.877134323120117

Token 609: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.02977525070309639
    2. ' *' → logprob: -3.5297751426696777
    3. '*i' → logprob: -10.654775619506836
    4. ' ' → logprob: -14.029775619506836
    5. ' ' → logprob: -15.404775619506836
    6. '**' → logprob: -16.904775619506836
    7. '   ' → logprob: -17.154775619506836
    8. '*object' → logprob: -17.779775619506836
    9. '*
' → logprob: -18.154775619506836
    10. '#' → logprob: -19.279775619506836

Token 610: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020354038861114532
    2. ' i' → logprob: -8.500203132629395
    3. '	i' → logprob: -20.75020408630371
    4. '   ' → logprob: -23.62520408630371
    5. ' ' → logprob: -24.25020408630371
    6. ')i' → logprob: -25.12520408630371
    7. ' ' → logprob: -25.50020408630371
    8. '  ' → logprob: -25.62520408630371
    9. '%i' → logprob: -26.25020408630371
    10. '*i' → logprob: -26.37520408630371

Token 611: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000309840717818588
    2. ')%' → logprob: -8.125309944152832
    3. ' )' → logprob: -11.625309944152832
    4. '%' → logprob: -12.250309944152832
    5. '%)' → logprob: -17.500308990478516
    6. ' %' → logprob: -17.500308990478516
    7. '%i' → logprob: -18.250308990478516
    8. ')#' → logprob: -18.625308990478516
    9. ']' → logprob: -19.125308990478516
    10. '）' → logprob: -19.500308990478516

Token 612: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3132636249065399
    2. ' %' → logprob: -1.3132636547088623
    3. '%i' → logprob: -14.313263893127441
    4. ')%' → logprob: -14.688263893127441
    5. ')' → logprob: -14.938263893127441
    6. '%A' → logprob: -15.813263893127441
    7. '%B' → logprob: -16.063262939453125
    8. '%D' → logprob: -16.188262939453125
    9. ' %=' → logprob: -16.563262939453125
    10. ' ' → logprob: -17.313262939453125

Token 613: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: 0.0
    2. ' MOD' → logprob: -18.0
    3. '_MOD' → logprob: -23.125
    4. 'MO' → logprob: -23.25
    5. '.MOD' → logprob: -25.125
    6. 'MODE' → logprob: -25.875
    7. 'MD' → logprob: -27.25
    8. 'MODULE' → logprob: -27.625
    9. 'Mod' → logprob: -28.375
    10. 'MON' → logprob: -28.625

Token 614: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 615: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 616: ' Pré' (ID: 86400)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003873350564390421
    2. '#' → logprob: -5.628873348236084
    3. 'class' → logprob: -8.628873825073242
    4. 'n' → logprob: -10.128873825073242
    5. 'from' → logprob: -10.628873825073242
    6. '```' → logprob: -11.253873825073242
    7. 'inverse' → logprob: -12.503873825073242
    8. 'pow' → logprob: -12.628873825073242
    9. 'inv' → logprob: -13.253873825073242
    10. 'import' → logprob: -13.378873825073242

Token 617: 'paration' (ID: 27466)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.6976975202560425
    2. 'def' → logprob: -1.3226975202560425
    3. 'fix' → logprob: -2.947697639465332
    4. 'd' → logprob: -3.197697639465332
    5. 'sum' → logprob: -3.447697639465332
    6. 'inverse' → logprob: -3.447697639465332
    7. 'c' → logprob: -3.697697639465332
    8. '#' → logprob: -4.447697639465332
    9. 'f' → logprob: -4.947697639465332
    10. 'sent' → logprob: -5.447697639465332

Token 618: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.710081934928894
    2. '#' → logprob: -1.210081934928894
    3. 'dp' → logprob: -2.4600820541381836
    4. 'n' → logprob: -3.9600820541381836
    5. 'comb' → logprob: -4.085082054138184
    6. 'fact' → logprob: -4.210082054138184
    7. 'div' → logprob: -4.835082054138184
    8. 'result' → logprob: -4.960082054138184
    9. 'ans' → logprob: -4.960082054138184
    10. 'answers' → logprob: -5.085082054138184

Token 619: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7667677998542786
    2. 'la' → logprob: -1.1417677402496338
    3. ' la' → logprob: -1.8917677402496338
    4. '#' → logprob: -4.141767978668213
    5. '[]' → logprob: -4.141767978668213
    6. 'a' → logprob: -4.766767978668213
    7. 'l' → logprob: -5.016767978668213
    8. 'une' → logprob: -5.266767978668213
    9. '[' → logprob: -6.141767978668213
    10. 'the' → logprob: -6.391767978668213

Token 620: ' liste' (ID: 31719)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.136465385556221
    2. 'inv' → logprob: -2.261465311050415
    3. '#' → logprob: -4.886465549468994
    4. 'fact' → logprob: -5.511465549468994
    5. 'inverse' → logprob: -5.511465549468994
    6. 'liste' → logprob: -5.636465549468994
    7. '```' → logprob: -6.886465549468994
    8. 'pow' → logprob: -7.261465549468994
    9. 'fin' → logprob: -7.636465549468994
    10. 'fonction' → logprob: -7.886465549468994

Token 621: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0013219076208770275
    2. 'ifact' → logprob: -7.001321792602539
    3. ' inv' → logprob: -8.876321792602539
    4. 'fact' → logprob: -9.501321792602539
    5. 'inverse' → logprob: -9.501321792602539
    6. '_inv' → logprob: -10.626321792602539
    7. 'fin' → logprob: -10.751321792602539
    8. 'in' → logprob: -11.001321792602539
    9. '(inv' → logprob: -11.126321792602539
    10. '```' → logprob: -11.376321792602539

Token 622: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.3368875980377197
    2. ' =' → logprob: -1.3368875980377197
    3. '_fact' → logprob: -3.9618875980377197
    4. '=' → logprob: -5.586887359619141
    5. 'inv' → logprob: -7.836887359619141
    6. ' fact' → logprob: -9.83688735961914
    7. 'Fact' → logprob: -9.96188735961914
    8. 'f' → logprob: -10.71188735961914
    9. '=[' → logprob: -11.33688735961914
    10. '[' → logprob: -11.71188735961914

Token 623: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0549691766500473
    2. '=' → logprob: -2.929969072341919
    3. 'inv' → logprob: -9.92996883392334
    4. '=[' → logprob: -10.55496883392334
    5. 'fact' → logprob: -11.55496883392334
    6. '[' → logprob: -14.42996883392334
    7. '=[]' → logprob: -14.55496883392334
    8. ':' → logprob: -14.80496883392334
    9. ' =[' → logprob: -15.17996883392334
    10. '#' → logprob: -15.42996883392334

Token 624: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0030764674302190542
    2. ' [' → logprob: -5.878076553344727
    3. 'inv' → logprob: -8.253076553344727
    4. ' inv' → logprob: -12.128076553344727
    5. ' =' → logprob: -13.378076553344727
    6. '#' → logprob: -13.753076553344727
    7. '[in' → logprob: -14.253076553344727
    8. '=[' → logprob: -14.503076553344727
    9. 'fact' → logprob: -14.503076553344727
    10. '=' → logprob: -14.878076553344727

Token 625: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005308585241436958
    2. 'tail' → logprob: -6.130308628082275
    3. 'MOD' → logprob: -6.130308628082275
    4. 'size' → logprob: -7.505308628082275
    5. '1' → logprob: -8.880308151245117
    6. '[M' → logprob: -9.130308151245117
    7. ' [' → logprob: -9.755308151245117
    8. ' taille' → logprob: -10.630308151245117
    9. '[size' → logprob: -10.630308151245117
    10. 'len' → logprob: -11.880308151245117

Token 626: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0003416607796680182
    2. ' MOD' → logprob: -8.000341415405273
    3. '[' → logprob: -12.000341415405273
    4. '_MOD' → logprob: -18.000341415405273
    5. '.MOD' → logprob: -18.125341415405273
    6. '(M' → logprob: -19.000341415405273
    7. ' [' → logprob: -19.125341415405273
    8. '[M' → logprob: -19.500341415405273
    9. 'MO' → logprob: -19.875341415405273
    10. '```' → logprob: -21.000341415405273

Token 627: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28222137689590454
    2. ' =' → logprob: -1.5322213172912598
    3. 'inv' → logprob: -3.5322213172912598
    4. '=[' → logprob: -7.90722131729126
    5. '[' → logprob: -8.907221794128418
    6. 'fact' → logprob: -10.032221794128418
    7. ',' → logprob: -10.907221794128418
    8. '(inv' → logprob: -11.407221794128418
    9. '_inv' → logprob: -12.157221794128418
    10. ']' → logprob: -12.407221794128418

Token 628: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004182793782092631
    2. 'fact' → logprob: -7.875418186187744
    3. ' [' → logprob: -10.625418663024902
    4. 'inv' → logprob: -11.375418663024902
    5. ' fact' → logprob: -13.875418663024902
    6. '[in' → logprob: -14.750418663024902
    7. '```' → logprob: -15.250418663024902
    8. '=' → logprob: -15.250418663024902
    9. '=[' → logprob: -15.750418663024902
    10. '1' → logprob: -16.500417709350586

Token 629: ' stock' (ID: 6546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0033390752505511045
    2. '1' → logprob: -5.8783392906188965
    3. 'stock' → logprob: -8.628338813781738
    4. 'factor' → logprob: -9.878338813781738
    5. 'fact' → logprob: -10.003338813781738
    6. 'calcul' → logprob: -10.003338813781738
    7. ' [' → logprob: -10.128338813781738
    8. 'la' → logprob: -10.378338813781738
    9. ' stock' → logprob: -10.378338813781738
    10. 'cont' → logprob: -10.503338813781738

Token 630: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00015359772078227252
    2. '#' → logprob: -8.875153541564941
    3. 'ant' → logprob: -11.750153541564941
    4. '[' → logprob: -12.625153541564941
    5. '=' → logprob: -13.875153541564941
    6. 'ée' → logprob: -14.500153541564941
    7. 'ner' → logprob: -15.500153541564941
    8. 'é' → logprob: -15.500153541564941
    9. 'age' → logprob: -15.750153541564941
    10. 'erm' → logprob: -16.000154495239258

Token 631: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001478796184528619
    2. '1' → logprob: -9.500147819519043
    3. ' [' → logprob: -10.125147819519043
    4. 'fact' → logprob: -10.500147819519043
    5. 'inv' → logprob: -13.125147819519043
    6. '```' → logprob: -13.750147819519043
    7. '(' → logprob: -14.875147819519043
    8. '#' → logprob: -14.875147819519043
    9. 'la' → logprob: -15.250147819519043
    10. 'factor' → logprob: -15.375147819519043

Token 632: ' invers' (ID: 38721)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18434156477451324
    2. 'inverse' → logprob: -2.5593416690826416
    3. 'inv' → logprob: -2.5593416690826416
    4. 'factor' → logprob: -5.1843414306640625
    5. '[' → logprob: -5.5593414306640625
    6. 'fact' → logprob: -5.6843414306640625
    7. 'in' → logprob: -7.6843414306640625
    8. '0' → logprob: -8.684341430664062
    9. '[in' → logprob: -9.434341430664062
    10. '```' → logprob: -10.684341430664062

Token 633: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.22621290385723114
    2. 'e' → logprob: -1.6012128591537476
    3. '[' → logprob: -8.226212501525879
    4. 'eurs' → logprob: -9.351212501525879
    5. 'inv' → logprob: -9.601212501525879
    6. '```' → logprob: -9.726212501525879
    7. 'v' → logprob: -10.226212501525879
    8. 'inverse' → logprob: -10.351212501525879
    9. 'fact' → logprob: -10.476212501525879
    10. 'ces' → logprob: -10.726212501525879

Token 634: ' multiplic' (ID: 67929)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.07497337460517883
    2. '_fact' → logprob: -3.1999733448028564
    3. '_inv' → logprob: -3.8249733448028564
    4. 'inv' → logprob: -5.1999735832214355
    5. ' =' → logprob: -6.8249735832214355
    6. '_factor' → logprob: -7.1999735832214355
    7. '_inverse' → logprob: -7.1999735832214355
    8. '_' → logprob: -7.5749735832214355
    9. 'inverse' → logprob: -7.8249735832214355
    10. '=' → logprob: -8.324973106384277

Token 635: 'atifs' (ID: 66205)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10598371922969818
    2. 'e' → logprob: -2.3559837341308594
    3. 'és' → logprob: -6.105983734130859
    4. '[' → logprob: -7.105983734130859
    5. 'mod' → logprob: -7.730983734130859
    6. 'multip' → logprob: -7.980983734130859
    7. '```' → logprob: -8.35598373413086
    8. 'élé' → logprob: -8.35598373413086
    9. 'aux' → logprob: -8.60598373413086
    10. '#' → logprob: -8.85598373413086

Token 636: ' des' (ID: 731)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00040576665196567774
    2. 'inverse' → logprob: -8.625405311584473
    3. '(inv' → logprob: -8.875405311584473
    4. 'fact' → logprob: -9.875405311584473
    5. '_inv' → logprob: -11.375405311584473
    6. '#' → logprob: -11.750405311584473
    7. ' inv' → logprob: -11.875405311584473
    8. 'in' → logprob: -12.875405311584473
    9. 'mod' → logprob: -13.250405311584473
    10. '=' → logprob: -13.625405311584473

Token 637: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0024820810649544
    2. 'factor' → logprob: -6.002481937408447
    3. ' fact' → logprob: -12.502482414245605
    4. '[' → logprob: -14.002482414245605
    5. '#' → logprob: -14.127482414245605
    6. 'fait' → logprob: -15.502482414245605
    7. '```' → logprob: -15.502482414245605
    8. 'fac' → logprob: -15.627482414245605
    9. '1' → logprob: -16.12748146057129
    10. 'facts' → logprob: -16.25248146057129

Token 638: 'ori' (ID: 6510)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.10290990769863129
    2. 'act' → logprob: -2.727909803390503
    3. 'fact' → logprob: -3.477909803390503
    4. 'or' → logprob: -7.727910041809082
    5. '[' → logprob: -7.977910041809082
    6. '
' → logprob: -8.477910041809082
    7. 'ack' → logprob: -9.352910041809082
    8. '#' → logprob: -9.352910041809082
    9. 'ort' → logprob: -9.477910041809082
    10. 'actor' → logprob: -9.852910041809082

Token 639: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.1216241866350174
    2. 'els' → logprob: -2.246624231338501
    3. 'es' → logprob: -5.246623992919922
    4. 'ales' → logprob: -7.496623992919922
    5. 'a' → logprob: -7.746623992919922
    6. '[' → logprob: -7.871623992919922
    7. '```' → logprob: -8.246623992919922
    8. 'ères' → logprob: -8.371623992919922
    9. 'eles' → logprob: -8.371623992919922
    10. '#' → logprob: -8.621623992919922

Token 640: '
' (ID: 198)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0013204771094024181
    2. ' =' → logprob: -6.8763203620910645
    3. '=' → logprob: -8.251320838928223
    4. '_inv' → logprob: -11.501320838928223
    5. '(inv' → logprob: -12.001320838928223
    6. '[' → logprob: -13.001320838928223
    7. '=[' → logprob: -13.126320838928223
    8. ',' → logprob: -13.626320838928223
    9. ':' → logprob: -13.751320838928223
    10. '
' → logprob: -13.876320838928223

Token 641: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.1756367712223437e-05
    2. '[' → logprob: -11.375011444091797
    3. '=' → logprob: -16.500011444091797
    4. ' =' → logprob: -17.000011444091797
    5. ' inv' → logprob: -17.125011444091797
    6. '```' → logprob: -17.375011444091797
    7. '_inv' → logprob: -17.875011444091797
    8. '(inv' → logprob: -18.125011444091797
    9. '.inv' → logprob: -19.000011444091797
    10. '#' → logprob: -19.375011444091797

Token 642: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.8624639324116288e-06
    2. '_fact' → logprob: -13.250001907348633
    3. 'f' → logprob: -17.375001907348633
    4. ' fact' → logprob: -17.625001907348633
    5. 'fac' → logprob: -17.875001907348633
    6. 'Fact' → logprob: -19.625001907348633
    7. 'fait' → logprob: -20.125001907348633
    8. 'facts' → logprob: -20.750001907348633
    9. 'fa' → logprob: -20.875001907348633
    10. 'fat' → logprob: -21.000001907348633

Token 643: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484937667847
    2. ' =' → logprob: -0.6931484937667847
    3. '=[' → logprob: -13.693148612976074
    4. ' =[' → logprob: -16.318147659301758
    5. ' ' → logprob: -17.193147659301758
    6. '[' → logprob: -17.318147659301758
    7. '＝' → logprob: -17.568147659301758
    8. '=[]' → logprob: -18.443147659301758
    9. ']' → logprob: -18.693147659301758
    10. '=
' → logprob: -19.193147659301758

Token 644: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9027791495318525e-05
    2. ' [' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.000019073486328
    4. '=[' → logprob: -19.250019073486328
    5. ' ' → logprob: -19.750019073486328
    6. 'fact' → logprob: -20.125019073486328
    7. '([' → logprob: -20.250019073486328
    8. '[-' → logprob: -20.625019073486328
    9. '#' → logprob: -20.625019073486328
    10. '```' → logprob: -20.750019073486328

Token 645: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014048899174667895
    2. '0' → logprob: -8.875140190124512
    3. 'None' → logprob: -14.625140190124512
    4. '[' → logprob: -16.375141143798828
    5. '-' → logprob: -19.000141143798828
    6. ' ' → logprob: -19.375141143798828
    7. '```' → logprob: -19.500141143798828
    8. ']' → logprob: -21.000141143798828
    9. '   ' → logprob: -21.125141143798828
    10. '
' → logprob: -21.500141143798828

Token 646: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00038300611777231097
    2. ']*' → logprob: -7.875382900238037
    3. '*' → logprob: -13.500383377075195
    4. ' ]' → logprob: -14.375383377075195
    5. ']+' → logprob: -15.250383377075195
    6. ']*(' → logprob: -15.375383377075195
    7. ')' → logprob: -16.000383377075195
    8. '#' → logprob: -16.125383377075195
    9. '()]' → logprob: -17.125383377075195
    10. '']' → logprob: -17.625383377075195

Token 647: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7070984244346619
    2. '*' → logprob: -0.8320984244346619
    3. ']' → logprob: -2.7070984840393066
    4. ')' → logprob: -5.957098484039307
    5. ' ]' → logprob: -6.707098484039307
    6. ']*' → logprob: -7.332098484039307
    7. ' for' → logprob: -9.207098007202148
    8. '[' → logprob: -9.332098007202148
    9. ' ' → logprob: -9.832098007202148
    10. '+' → logprob: -9.957098007202148

Token 648: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: 0.0
    2. '(M' → logprob: -17.5
    3. '(' → logprob: -18.0
    4. ' MOD' → logprob: -18.25
    5. 'MO' → logprob: -22.0
    6. 'MODE' → logprob: -23.0
    7. 'MD' → logprob: -23.375
    8. '(Mod' → logprob: -23.375
    9. '_MOD' → logprob: -23.375
    10. '.MOD' → logprob: -23.75

Token 649: '

' (ID: 279)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00042209390085190535
    2. '<|end|>' → logprob: -8.625422477722168
    3. '
' → logprob: -9.000422477722168
    4. '```' → logprob: -10.250422477722168
    5. '#' → logprob: -10.750422477722168
    6. 'for' → logprob: -11.250422477722168
    7. '(inv' → logprob: -11.625422477722168
    8. '[' → logprob: -11.875422477722168
    9. 'inverse' → logprob: -11.875422477722168
    10. 'inf' → logprob: -12.375422477722168

Token 650: '#' (ID: 2)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.875003814697266
    3. 'fact' → logprob: -14.500003814697266
    4. '```' → logprob: -14.750003814697266
    5. '_inv' → logprob: -15.000003814697266
    6. '#' → logprob: -15.000003814697266
    7. '1' → logprob: -15.125003814697266
    8. 'inf' → logprob: -15.625003814697266
    9. 'inverse' → logprob: -15.750003814697266
    10. '.inv' → logprob: -15.750003814697266

Token 651: ' Le' (ID: 2018)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -5.200166469876422e-06
    2. '#' → logprob: -12.250004768371582
    3. 'import' → logprob: -15.375004768371582
    4. ' inv' → logprob: -16.2500057220459
    5. '```' → logprob: -17.1250057220459
    6. '(inv' → logprob: -17.5000057220459
    7. '.inv' → logprob: -19.1250057220459
    8. '_inv' → logprob: -19.7500057220459
    9. 'inverse' → logprob: -20.0000057220459
    10. 'from' → logprob: -20.0000057220459

Token 652: ' dernier' (ID: 27982)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0005318254698067904
    2. 'inverse' → logprob: -7.8755316734313965
    3. ' inv' → logprob: -9.250532150268555
    4. 'in' → logprob: -10.500532150268555
    5. 'dern' → logprob: -11.500532150268555
    6. 'prem' → logprob: -12.500532150268555
    7. '#' → logprob: -12.625532150268555
    8. ' inverse' → logprob: -13.250532150268555
    9. ' dernier' → logprob: -13.375532150268555
    10. 'last' → logprob: -13.375532150268555

Token 653: ' élément' (ID: 99627)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.9465760588645935
    2. 'élé' → logprob: -1.6965761184692383
    3. '<|end|>' → logprob: -2.1965761184692383
    4. 'inv' → logprob: -2.3215761184692383
    5. '=' → logprob: -2.4465761184692383
    6. ' élément' → logprob: -3.1965761184692383
    7. 'inverse' → logprob: -3.8215761184692383
    8. 'factor' → logprob: -4.321576118469238
    9. 'fact' → logprob: -4.571576118469238
    10. 'index' → logprob: -4.696576118469238

Token 654: ' de' (ID: 334)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.10733839124441147
    2. ' =' → logprob: -3.4823384284973145
    3. 'de' → logprob: -3.8573384284973145
    4. '=' → logprob: -4.1073384284973145
    5. 'fact' → logprob: -4.4823384284973145
    6. ' de' → logprob: -4.6073384284973145
    7. ' of' → logprob: -5.2323384284973145
    8. '#' → logprob: -6.2323384284973145
    9. 'of' → logprob: -6.8573384284973145
    10. ' inv' → logprob: -7.2323384284973145

Token 655: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0004375830467324704
    2. 'la' → logprob: -8.00043773651123
    3. 'fact' → logprob: -9.62543773651123
    4. ' inv' → logprob: -11.12543773651123
    5. 'l' → logprob: -11.87543773651123
    6. '`' → logprob: -12.25043773651123
    7. ' la' → logprob: -12.37543773651123
    8. '(inv' → logprob: -12.87543773651123
    9. '#' → logprob: -14.37543773651123
    10. 'in' → logprob: -14.37543773651123

Token 656: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.981667537620524e-06
    2. 'inv' → logprob: -13.375001907348633
    3. 'fait' → logprob: -15.625001907348633
    4. ' fact' → logprob: -15.750001907348633
    5. '_fact' → logprob: -17.250001907348633
    6. 'f' → logprob: -17.500001907348633
    7. '#' → logprob: -18.625001907348633
    8. '```' → logprob: -18.875001907348633
    9. 'fac' → logprob: -19.375001907348633
    10. 'ifact' → logprob: -19.875001907348633

Token 657: ' (' (ID: 350)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.27618926763534546
    2. '[' → logprob: -1.5261893272399902
    3. ' =' → logprob: -4.27618932723999
    4. '=' → logprob: -4.77618932723999
    5. '[M' → logprob: -6.90118932723999
    6. '=-' → logprob: -8.401188850402832
    7. 'inv' → logprob: -8.901188850402832
    8. '[len' → logprob: -9.151188850402832
    9. '[MAX' → logprob: -9.401188850402832
    10. '[:]' → logprob: -10.651188850402832

Token 658: 'l' (ID: 75)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5173247456550598
    2. 'inv' → logprob: -1.517324686050415
    3. ')' → logprob: -1.892324686050415
    4. '[-' → logprob: -4.767324924468994
    5. ' MOD' → logprob: -5.142324924468994
    6. '-' → logprob: -5.142324924468994
    7. '-M' → logprob: -5.392324924468994
    8. '[' → logprob: -5.642324924468994
    9. ']' → logprob: -6.642324924468994
    10. 'fact' → logprob: -6.892324924468994

Token 659: ''in' (ID: 17942)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.0203286409378052
    2. '-' → logprob: -1.7703286409378052
    3. 'inv' → logprob: -1.7703286409378052
    4. 'en' → logprob: -1.8953286409378052
    5. 'ength' → logprob: -2.6453285217285156
    6. 'ast' → logprob: -4.520328521728516
    7. 'len' → logprob: -4.770328521728516
    8. '-M' → logprob: -5.020328521728516
    9. '#' → logprob: -5.145328521728516
    10. '=len' → logprob: -5.395328521728516

Token 660: 'verse' (ID: 7093)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.14031171798706055
    2. 'fact' → logprob: -2.5153117179870605
    3. 'verse' → logprob: -3.8903117179870605
    4. 'inv' → logprob: -4.1403117179870605
    5. '[-' → logprob: -5.5153117179870605
    6. '```' → logprob: -6.2653117179870605
    7. 'vers' → logprob: -6.6403117179870605
    8. 'f' → logprob: -6.7653117179870605
    9. '#' → logprob: -6.7653117179870605
    10. 'inverse' → logprob: -7.1403117179870605

Token 661: ' de' (ID: 334)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.04001181945204735
    2. 'factor' → logprob: -4.165011882781982
    3. '[-' → logprob: -4.415011882781982
    4. 'multip' → logprob: -4.915011882781982
    5. '[' → logprob: -6.540011882781982
    6. 'inv' → logprob: -7.665011882781982
    7. ' multiplic' → logprob: -7.790011882781982
    8. '#' → logprob: -7.790011882781982
    9. ')' → logprob: -8.790011405944824
    10. 'fac' → logprob: -8.915011405944824

Token 662: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -8.061054359131958e-06
    2. 'factor' → logprob: -12.125007629394531
    3. ' fact' → logprob: -13.000007629394531
    4. 'fait' → logprob: -15.375007629394531
    5. 'fac' → logprob: -16.75000762939453
    6. 'facts' → logprob: -17.50000762939453
    7. '.fact' → logprob: -18.25000762939453
    8. ' facto' → logprob: -18.62500762939453
    9. 'inv' → logprob: -18.75000762939453
    10. '```' → logprob: -18.87500762939453

Token 663: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0486002042889595
    2. '[' → logprob: -3.048600196838379
    3. '[M' → logprob: -11.923600196838379
    4. '[MAX' → logprob: -12.423600196838379
    5. '[len' → logprob: -14.298600196838379
    6. '#' → logprob: -14.798600196838379
    7. 'MOD' → logprob: -15.048600196838379
    8. '```' → logprob: -15.923600196838379
    9. '[:-' → logprob: -16.048601150512695
    10. 'def' → logprob: -16.548601150512695

Token 664: 'MOD' (ID: 52135)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6723600029945374
    2. '[-' → logprob: -1.1723599433898926
    3. '-' → logprob: -1.9223599433898926
    4. 'MOD' → logprob: -3.4223599433898926
    5. '-M' → logprob: -7.047359943389893
    6. '#' → logprob: -10.29736042022705
    7. '[M' → logprob: -10.67236042022705
    8. ' MOD' → logprob: -11.79736042022705
    9. '```' → logprob: -12.04736042022705
    10. '   ' → logprob: -12.04736042022705

Token 665: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00017565040616318583
    2. ' -' → logprob: -9.125175476074219
    3. '[-' → logprob: -9.625175476074219
    4. '#' → logprob: -15.875175476074219
    5. '−' → logprob: -15.875175476074219
    6. '[' → logprob: -16.25017547607422
    7. '][-' → logprob: -16.50017547607422
    8. ']-' → logprob: -17.00017547607422
    9. 'MOD' → logprob: -17.12517547607422
    10. ']' → logprob: -17.25017547607422

Token 666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003384422743692994
    2. '-' → logprob: -8.000338554382324
    3. '```' → logprob: -14.000338554382324
    4. '   ' → logprob: -14.625338554382324
    5. ' -' → logprob: -14.625338554382324
    6. '#' → logprob: -15.000338554382324
    7. '
' → logprob: -15.125338554382324
    8. ' ' → logprob: -15.250338554382324
    9. '`' → logprob: -16.625337600708008
    10. '' → logprob: -16.750337600708008

Token 667: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0020003693643957376
    2. ')' → logprob: -6.752000331878662
    3. ']' → logprob: -7.127000331878662
    4. ' ])' → logprob: -11.37700080871582
    5. '))' → logprob: -12.50200080871582
    6. '],' → logprob: -13.25200080871582
    7. 'fact' → logprob: -13.50200080871582
    8. ']),' → logprob: -13.87700080871582
    9. ']])' → logprob: -14.25200080871582
    10. ']))' → logprob: -14.37700080871582

Token 668: ' est' (ID: 893)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.01236683875322342
    2. '=' → logprob: -4.762366771697998
    3. ' =' → logprob: -5.887366771697998
    4. 'fact' → logprob: -7.887366771697998
    5. '[' → logprob: -8.137367248535156
    6. '[-' → logprob: -8.762367248535156
    7. '#' → logprob: -9.637367248535156
    8. '_inv' → logprob: -11.137367248535156
    9. '(inv' → logprob: -11.137367248535156
    10. '
' → logprob: -11.512367248535156

Token 669: ' initial' (ID: 4871)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.01017981767654419
    2. '1' → logprob: -5.3851799964904785
    3. 'fact' → logprob: -5.3851799964904785
    4. 'set' → logprob: -8.01017951965332
    5. 'inv' → logprob: -8.01017951965332
    6. 'calcul' → logprob: -9.26017951965332
    7. ' pow' → logprob: -9.38517951965332
    8. 'computed' → logprob: -10.38517951965332
    9. '[' → logprob: -11.01017951965332
    10. 'cal' → logprob: -11.51017951965332

Token 670: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.011381660588085651
    2. 'ized' → logprob: -4.76138162612915
    3. 'iz' → logprob: -6.13638162612915
    4. '=' → logprob: -7.76138162612915
    5. 'isée' → logprob: -8.886382102966309
    6. '#' → logprob: -11.386382102966309
    7. ' =' → logprob: -12.136382102966309
    8. 'inv' → logprob: -12.136382102966309
    9. 'is' → logprob: -13.136382102966309
    10. 'ised' → logprob: -13.261382102966309

Token 671: ' avec' (ID: 3937)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.15504784882068634
    2. '=' → logprob: -2.90504789352417
    3. 'fact' → logprob: -3.40504789352417
    4. ' =' → logprob: -3.53004789352417
    5. '[' → logprob: -3.90504789352417
    6. '[-' → logprob: -6.03004789352417
    7. '(inv' → logprob: -7.15504789352417
    8. '#' → logprob: -7.40504789352417
    9. ' as' → logprob: -7.65504789352417
    10. 'as' → logprob: -8.030047416687012

Token 672: ' l' (ID: 305)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -2.2961512513575144e-05
    2. '1' → logprob: -11.375022888183594
    3. ' pow' → logprob: -11.875022888183594
    4. '(pow' → logprob: -12.500022888183594
    5. 'fact' → logprob: -15.500022888183594
    6. '0' → logprob: -15.500022888183594
    7. 'power' → logprob: -16.250022888183594
    8. '2' → logprob: -17.375022888183594
    9. '```' → logprob: -17.375022888183594
    10. '_pow' → logprob: -17.875022888183594

Token 673: ''in' (ID: 17942)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.008545310236513615
    2. ' pow' → logprob: -5.008545398712158
    3. '(pow' → logprob: -6.508545398712158
    4. 'a' → logprob: -9.008544921875
    5. 'e' → logprob: -9.258544921875
    6. '_pow' → logprob: -9.508544921875
    7. 'Pow' → logprob: -11.133544921875
    8. '.pow' → logprob: -11.258544921875
    9. '0' → logprob: -12.383544921875
    10. '...' → logprob: -12.508544921875

Token 674: 'verse' (ID: 7093)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.20268003642559052
    2. 'verse' → logprob: -1.702679991722107
    3. 'v' → logprob: -6.9526801109313965
    4. '#' → logprob: -9.952679634094238
    5. '[' → logprob: -10.077679634094238
    6. 'Pow' → logprob: -10.327679634094238
    7. '(pow' → logprob: -10.702679634094238
    8. ' pow' → logprob: -10.952679634094238
    9. '_pow' → logprob: -11.077679634094238
    10. 'n' → logprob: -11.077679634094238

Token 675: ' multiplic' (ID: 67929)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5317593812942505
    2. 'pow' → logprob: -0.9067593812942505
    3. 'mod' → logprob: -5.156759262084961
    4. 'factor' → logprob: -6.406759262084961
    5. '[' → logprob: -7.406759262084961
    6. '#' → logprob: -8.531759262084961
    7. 'multip' → logprob: -8.906759262084961
    8. 'fac' → logprob: -9.781759262084961
    9. '(pow' → logprob: -10.406759262084961
    10. 'inv' → logprob: -10.531759262084961

Token 676: 'atif' (ID: 23984)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.008273892104625702
    2. 'e' → logprob: -5.133274078369141
    3. 'atif' → logprob: -7.383274078369141
    4. 'pow' → logprob: -8.25827407836914
    5. 'élé' → logprob: -8.75827407836914
    6. 'mod' → logprob: -8.75827407836914
    7. 'é' → logprob: -8.88327407836914
    8. 'air' → logprob: -9.00827407836914
    9. 'def' → logprob: -9.13327407836914
    10. 'fact' → logprob: -9.25827407836914

Token 677: ' de' (ID: 334)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.40042993426322937
    2. 'pow' → logprob: -1.1504299640655518
    3. 'de' → logprob: -5.400429725646973
    4. '(pow' → logprob: -5.650429725646973
    5. 'inv' → logprob: -6.525429725646973
    6. 'mod' → logprob: -7.025429725646973
    7. 'of' → logprob: -7.400429725646973
    8. '[' → logprob: -7.400429725646973
    9. '#' → logprob: -7.525429725646973
    10. 'inverse' → logprob: -8.025429725646973

Token 678: ' la' (ID: 557)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -7.481510692741722e-05
    2. 'fait' → logprob: -9.62507438659668
    3. 'factor' → logprob: -12.75007438659668
    4. ' fact' → logprob: -13.37507438659668
    5. '```' → logprob: -13.50007438659668
    6. '#' → logprob: -13.62507438659668
    7. 'pow' → logprob: -14.12507438659668
    8. '`' → logprob: -15.37507438659668
    9. 'fac' → logprob: -16.00007438659668
    10. '1' → logprob: -16.12507438659668

Token 679: ' dernière' (ID: 39497)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00046868418576195836
    2. 'factor' → logprob: -7.875468730926514
    3. 'fait' → logprob: -10.625468254089355
    4. '```' → logprob: -11.125468254089355
    5. 'pow' → logprob: -11.500468254089355
    6. 'last' → logprob: -11.625468254089355
    7. '...' → logprob: -12.375468254089355
    8. '1' → logprob: -12.375468254089355
    9. 'dern' → logprob: -12.750468254089355
    10. 'fac' → logprob: -12.750468254089355

Token 680: ' factor' (ID: 12332)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.07895874977111816
    2. 'factor' → logprob: -2.578958749771118
    3. 'élé' → logprob: -10.578958511352539
    4. 'value' → logprob: -10.703958511352539
    5. 'element' → logprob: -11.703958511352539
    6. 'fac' → logprob: -12.453958511352539
    7. 'val' → logprob: -12.578958511352539
    8. '```' → logprob: -13.703958511352539
    9. ' fact' → logprob: -13.953958511352539
    10. '`' → logprob: -13.953958511352539

Token 681: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -0.39456307888031006
    2. 'iel' → logprob: -1.89456307888031
    3. 'fact' → logprob: -1.89456307888031
    4. 'ial' → logprob: -5.0195631980896
    5. 'factor' → logprob: -5.1445631980896
    6. 'ière' → logprob: -5.5195631980896
    7. '```' → logprob: -6.1445631980896
    8. 'ier' → logprob: -6.3945631980896
    9. '#' → logprob: -7.0195631980896
    10. 'e' → logprob: -7.2695631980896

Token 682: ' modulo' (ID: 112372)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.007489730603992939
    2. 'inv' → logprob: -5.0074896812438965
    3. 'mod' → logprob: -8.382490158081055
    4. 'using' → logprob: -8.757490158081055
    5. '[' → logprob: -9.007490158081055
    6. 'factor' → logprob: -9.632490158081055
    7. '[-' → logprob: -10.257490158081055
    8. '#' → logprob: -10.382490158081055
    9. 'pow' → logprob: -10.382490158081055
    10. ',' → logprob: -11.382490158081055

Token 683: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.320199877838604e-07
    2. ' MOD' → logprob: -14.875
    3. '_MOD' → logprob: -17.625
    4. '`' → logprob: -19.125
    5. '.MOD' → logprob: -19.375
    6. '```' → logprob: -19.375
    7. 'MO' → logprob: -19.5
    8. 'fact' → logprob: -20.0
    9. '
' → logprob: -20.875
    10. '(M' → logprob: -21.125

Token 684: '.
' (ID: 558)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.39744246006011963
    2. 'inv' → logprob: -1.6474424600601196
    3. 'pow' → logprob: -2.02244234085083
    4. ' =' → logprob: -7.14744234085083
    5. '=' → logprob: -7.64744234085083
    6. '[' → logprob: -7.77244234085083
    7. '```' → logprob: -8.272442817687988
    8. '
' → logprob: -8.397442817687988
    9. 'using' → logprob: -8.772442817687988
    10. '(pow' → logprob: -9.147442817687988

Token 685: '#' (ID: 2)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.017709333449602127
    2. 'pow' → logprob: -4.392709255218506
    3. 'fact' → logprob: -5.267709255218506
    4. '#' → logprob: -12.017709732055664
    5. ' inv' → logprob: -12.392709732055664
    6. '```' → logprob: -12.392709732055664
    7. '=' → logprob: -12.517709732055664
    8. '[' → logprob: -13.017709732055664
    9. '(inv' → logprob: -13.142709732055664
    10. ' =' → logprob: -13.267709732055664

Token 686: ' pow' (ID: 9779)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.002163348253816366
    2. 'pow' → logprob: -6.252163410186768
    3. 'fact' → logprob: -8.37716293334961
    4. '#' → logprob: -13.25216293334961
    5. ' inv' → logprob: -13.50216293334961
    6. '(inv' → logprob: -14.87716293334961
    7. 'inf' → logprob: -15.25216293334961
    8. '1' → logprob: -15.50216293334961
    9. '```' → logprob: -15.50216293334961
    10. 'inverse' → logprob: -16.50216293334961

Token 687: '(a' (ID: 6271)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0005436192732304335
    2. '(' → logprob: -7.875543594360352
    3. '(pow' → logprob: -9.750543594360352
    4. 'fact' → logprob: -10.000543594360352
    5. '(M' → logprob: -10.625543594360352
    6. 'f' → logprob: -11.250543594360352
    7. 'pow' → logprob: -12.125543594360352
    8. '=f' → logprob: -13.000543594360352
    9. '```' → logprob: -13.125543594360352
    10. 'def' → logprob: -13.375543594360352

Token 688: ',' (ID: 11)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.6582053303718567
    2. ',' → logprob: -0.7832053303718567
    3. '(' → logprob: -4.408205509185791
    4. ',f' → logprob: -4.908205509185791
    5. ')' → logprob: -5.408205509185791
    6. 'fact' → logprob: -7.908205509185791
    7. '(
' → logprob: -8.658205032348633
    8. '```' → logprob: -9.033205032348633
    9. '#' → logprob: -9.408205032348633
    10. ',
' → logprob: -9.533205032348633

Token 689: ' b' (ID: 287)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.005169835407286882
    2. 'fact' → logprob: -5.630169868469238
    3. '-' → logprob: -7.005169868469238
    4. ' MOD' → logprob: -7.755169868469238
    5. '-M' → logprob: -8.755169868469238
    6. 'FACT' → logprob: -11.005169868469238
    7. ' fact' → logprob: -11.255169868469238
    8. '-f' → logprob: -11.380169868469238
    9. ' -' → logprob: -11.380169868469238
    10. '.MOD' → logprob: -12.380169868469238

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00343910395167768
    2. '-' → logprob: -6.003438949584961
    3. 'MOD' → logprob: -7.378438949584961
    4. '=' → logprob: -8.628438949584961
    5. '(M' → logprob: -10.003438949584961
    6. ',
' → logprob: -10.878438949584961
    7. ')' → logprob: -11.003438949584961
    8. ' ,' → logprob: -11.628438949584961
    9. '(' → logprob: -11.628438949584961
    10. ',-' → logprob: -11.753438949584961

Token 691: ' m' (ID: 284)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0022073546424508095
    2. ' MOD' → logprob: -6.127207279205322
    3. ')' → logprob: -11.50220775604248
    4. '_MOD' → logprob: -12.50220775604248
    5. '.MOD' → logprob: -12.87720775604248
    6. ' ' → logprob: -13.37720775604248
    7. 'mod' → logprob: -13.75220775604248
    8. '```' → logprob: -14.00220775604248
    9. 'Mod' → logprob: -14.87720775604248
    10. '-' → logprob: -15.25220775604248

Token 692: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008180602453649044
    2. ',' → logprob: -4.883180618286133
    3. '=' → logprob: -8.383180618286133
    4. ')=' → logprob: -9.133180618286133
    5. ')`' → logprob: -9.383180618286133
    6. ')
' → logprob: -9.883180618286133
    7. '),' → logprob: -11.258180618286133
    8. ' )' → logprob: -11.383180618286133
    9. '   ' → logprob: -11.383180618286133
    10. '[' → logprob: -11.508180618286133

Token 693: ' permet' (ID: 11798)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.28406822681427
    2. '=' → logprob: -1.65906822681427
    3. '(inv' → logprob: -1.78406822681427
    4. ')' → logprob: -2.0340681076049805
    5. 'inv' → logprob: -2.5340681076049805
    6. ' =' → logprob: -3.0340681076049805
    7. 'fact' → logprob: -3.5340681076049805
    8. '(f' → logprob: -3.6590681076049805
    9. '(pow' → logprob: -3.9090681076049805
    10. 'inverse' → logprob: -4.6590681076049805

Token 694: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5669732689857483
    2. 'd' → logprob: -1.1919732093811035
    3. 'pow' → logprob: -2.0669732093811035
    4. '(pow' → logprob: -6.4419732093811035
    5. ' de' → logprob: -7.3169732093811035
    6. ' d' → logprob: -9.316973686218262
    7. '#' → logprob: -10.066973686218262
    8. '   ' → logprob: -10.691973686218262
    9. 'def' → logprob: -10.941973686218262
    10. 'calcul' → logprob: -11.191973686218262

Token 695: ' réaliser' (ID: 52384)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.09683435410261154
    2. 'calcul' → logprob: -2.471834421157837
    3. 'compute' → logprob: -5.471834182739258
    4. 'calculate' → logprob: -6.971834182739258
    5. 'power' → logprob: -7.846834182739258
    6. 'mod' → logprob: -7.971834182739258
    7. 'cal' → logprob: -8.221834182739258
    8. ' pow' → logprob: -8.346834182739258
    9. 'perform' → logprob: -8.471834182739258
    10. 'calc' → logprob: -8.596834182739258

Token 696: ' l' (ID: 305)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0006706207641400397
    2. ' pow' → logprob: -7.750670433044434
    3. '(pow' → logprob: -8.750670433044434
    4. 'power' → logprob: -10.625670433044434
    5. 'la' → logprob: -10.625670433044434
    6. 'pu' → logprob: -11.375670433044434
    7. ' ' → logprob: -12.500670433044434
    8. '#' → logprob: -12.625670433044434
    9. 'a' → logprob: -12.625670433044434
    10. 'fact' → logprob: -12.875670433044434

Token 697: ''ex' (ID: 23472)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0510711595416069
    2. '(pow' → logprob: -3.1760711669921875
    3. 'MOD' → logprob: -5.9260711669921875
    4. 'power' → logprob: -6.3010711669921875
    5. ' pow' → logprob: -6.4260711669921875
    6. ')' → logprob: -7.5510711669921875
    7. '(power' → logprob: -8.051071166992188
    8. '(Mod' → logprob: -8.926071166992188
    9. 'fact' → logprob: -8.926071166992188
    10. 'inverse' → logprob: -9.176071166992188

Token 698: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.9978813529014587
    2. 'pow' → logprob: -1.2478814125061035
    3. 'MOD' → logprob: -1.8728814125061035
    4. '(M' → logprob: -2.4978814125061035
    5. '-' → logprob: -3.6228814125061035
    6. 'p' → logprob: -3.9978814125061035
    7. '(' → logprob: -4.2478814125061035
    8. '(-' → logprob: -4.8728814125061035
    9. 'pression' → logprob: -5.1228814125061035
    10. 'ploit' → logprob: -5.1228814125061035

Token 699: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.002395390532910824
    2. 'MOD' → logprob: -7.252395153045654
    3. 'enti' → logprob: -7.377395153045654
    4. '-' → logprob: -8.627395629882812
    5. 'i' → logprob: -8.627395629882812
    6. '(M' → logprob: -9.127395629882812
    7. '```' → logprob: -9.252395629882812
    8. '(-' → logprob: -9.627395629882812
    9. '_mod' → logprob: -10.002395629882812
    10. '(' → logprob: -10.252395629882812

Token 700: ' rapide' (ID: 44887)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3811587393283844
    2. '(pow' → logprob: -1.881158709526062
    3. 'fact' → logprob: -2.1311588287353516
    4. '(' → logprob: -4.131158828735352
    5. 'pow' → logprob: -4.756158828735352
    6. '(power' → logprob: -4.881158828735352
    7. 'def' → logprob: -5.256158828735352
    8. '(inv' → logprob: -5.756158828735352
    9. '#' → logprob: -7.506158828735352
    10. '(M' → logprob: -7.756158828735352

Token 701: ' a' (ID: 261)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.37700405716896057
    2. 'fact' → logprob: -1.5020040273666382
    3. '(inv' → logprob: -3.2520041465759277
    4. '(pow' → logprob: -3.6270041465759277
    5. '(' → logprob: -4.252004146575928
    6. 'pow' → logprob: -6.127004146575928
    7. 'inv' → logprob: -6.252004146575928
    8. ' (' → logprob: -6.377004146575928
    9. '(power' → logprob: -6.627004146575928
    10. ',' → logprob: -6.877004146575928

Token 702: '^' (ID: 61)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3345310688018799
    2. '=' → logprob: -1.7095310688018799
    3. 'MOD' → logprob: -3.45953106880188
    4. '-' → logprob: -4.084530830383301
    5. '(Mod' → logprob: -4.959530830383301
    6. 'pow' → logprob: -5.334530830383301
    7. '(M' → logprob: -5.334530830383301
    8. ' =' → logprob: -5.459530830383301
    9. ' ,' → logprob: -5.584530830383301
    10. 'fact' → logprob: -5.584530830383301

Token 703: 'b' (ID: 65)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.02320331335067749
    2. '(-' → logprob: -4.148203372955322
    3. '(' → logprob: -5.648203372955322
    4. '(Mod' → logprob: -6.523203372955322
    5. '(pow' → logprob: -7.273203372955322
    6. '(f' → logprob: -7.398203372955322
    7. 'MOD' → logprob: -8.023202896118164
    8. '-' → logprob: -8.273202896118164
    9. '(mod' → logprob: -8.898202896118164
    10. '(inv' → logprob: -11.148202896118164

Token 704: ' mod' (ID: 1812)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011472410522401333
    2. '(-' → logprob: -5.136472225189209
    3. ')' → logprob: -6.261472225189209
    4. '(' → logprob: -6.886472225189209
    5. ' ,' → logprob: -7.636472225189209
    6. '(mod' → logprob: -8.011472702026367
    7. ',-' → logprob: -8.386472702026367
    8. '(pow' → logprob: -8.386472702026367
    9. '(Mod' → logprob: -8.636472702026367
    10. '```' → logprob: -8.761472702026367

Token 705: ' m' (ID: 284)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.012278405949473381
    2. 'fact' → logprob: -4.8872785568237305
    3. ' MOD' → logprob: -5.6372785568237305
    4. 'pow' → logprob: -8.01227855682373
    5. ',' → logprob: -8.26227855682373
    6. ' fact' → logprob: -9.51227855682373
    7. 'inv' → logprob: -9.51227855682373
    8. ')' → logprob: -10.01227855682373
    9. '(M' → logprob: -10.38727855682373
    10. '```' → logprob: -10.38727855682373

Token 706: '.
' (ID: 558)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.11239442974328995
    2. '(f' → logprob: -2.362394332885742
    3. ',' → logprob: -6.237394332885742
    4. 'inv' → logprob: -6.237394332885742
    5. '(inv' → logprob: -6.237394332885742
    6. ')' → logprob: -6.362394332885742
    7. '(pow' → logprob: -6.487394332885742
    8. 'pow' → logprob: -7.112394332885742
    9. '(' → logprob: -7.612394332885742
    10. '```' → logprob: -7.737394332885742

Token 707: '#' (ID: 2)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6468951106071472
    2. 'pow' → logprob: -0.7718951106071472
    3. 'inv' → logprob: -4.521894931793213
    4. '=' → logprob: -6.271894931793213
    5. ' =' → logprob: -7.521894931793213
    6. '```' → logprob: -7.771894931793213
    7. '(pow' → logprob: -9.021895408630371
    8. ')' → logprob: -9.271895408630371
    9. '`' → logprob: -9.521895408630371
    10. '=f' → logprob: -10.521895408630371

Token 708: ' Puis' (ID: 87717)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -2.8444881536415778e-05
    2. 'fact' → logprob: -10.500028610229492
    3. ' inv' → logprob: -14.375028610229492
    4. 'pow' → logprob: -15.750028610229492
    5. '(inv' → logprob: -16.375028610229492
    6. '#' → logprob: -17.375028610229492
    7. '```' → logprob: -17.375028610229492
    8. '
' → logprob: -18.750028610229492
    9. 'inf' → logprob: -18.750028610229492
    10. '=' → logprob: -19.750028610229492

Token 709: 'que' (ID: 1126)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -8.137130498653278e-05
    2. 'fact' → logprob: -10.375081062316895
    3. ' inv' → logprob: -10.625081062316895
    4. 'pow' → logprob: -10.750081062316895
    5. '#' → logprob: -13.500081062316895
    6. '(inv' → logprob: -14.000081062316895
    7. '=' → logprob: -14.250081062316895
    8. '
' → logprob: -14.875081062316895
    9. '```' → logprob: -15.000081062316895
    10. 'inf' → logprob: -15.625081062316895

Token 710: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007044489029794931
    2. 'fact' → logprob: -7.375704288482666
    3. ' MOD' → logprob: -10.375704765319824
    4. 'pow' → logprob: -10.750704765319824
    5. 'MO' → logprob: -12.250704765319824
    6. 'FACT' → logprob: -13.000704765319824
    7. 'mod' → logprob: -13.250704765319824
    8. 'a' → logprob: -13.250704765319824
    9. '#' → logprob: -13.375704765319824
    10. 'M' → logprob: -13.500704765319824

Token 711: ' est' (ID: 893)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02325025200843811
    2. ' -' → logprob: -3.7732503414154053
    3. '–' → logprob: -13.273250579833984
    4. '−' → logprob: -13.648250579833984
    5. '   ' → logprob: -14.273250579833984
    6. ' ' → logprob: -14.523250579833984
    7. '#' → logprob: -15.585750579833984
    8. '```' → logprob: -15.710750579833984
    9. ' ' → logprob: -16.585750579833984
    10. '
' → logprob: -16.960750579833984

Token 712: ' premier' (ID: 15506)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.3454069197177887
    2. 'a' → logprob: -1.7204068899154663
    3. 'MOD' → logprob: -2.720407009124756
    4. 'prima' → logprob: -3.720407009124756
    5. 'prem' → logprob: -4.470407009124756
    6. '10' → logprob: -6.345407009124756
    7. 'pr' → logprob: -6.470407009124756
    8. 'une' → logprob: -6.470407009124756
    9. 'prim' → logprob: -6.845407009124756
    10. '100' → logprob: -6.970407009124756

Token 713: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04600294679403305
    2. 'fact' → logprob: -4.0460028648376465
    3. '-' → logprob: -4.1710028648376465
    4. 'MOD' → logprob: -5.5460028648376465
    5. ',
' → logprob: -5.9210028648376465
    6. 'inv' → logprob: -6.7960028648376465
    7. ')' → logprob: -6.7960028648376465
    8. '=' → logprob: -7.2960028648376465
    9. ':' → logprob: -7.9210028648376465
    10. '   ' → logprob: -8.171003341674805

Token 714: ' l' (ID: 305)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0036055364180356264
    2. ' inv' → logprob: -6.128605365753174
    3. 'pow' → logprob: -6.878605365753174
    4. 'fact' → logprob: -7.878605365753174
    5. ' pow' → logprob: -12.628605842590332
    6. 'mod' → logprob: -12.878605842590332
    7. ' fact' → logprob: -13.378605842590332
    8. '#' → logprob: -13.503605842590332
    9. '(inv' → logprob: -14.003605842590332
    10. 'MOD' → logprob: -14.253605842590332

Token 715: ''in' (ID: 17942)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.0097962617874146
    2. 'pow' → logprob: -1.2597962617874146
    3. '-' → logprob: -1.3847962617874146
    4. 'fact' → logprob: -3.509796142578125
    5. 'inv' → logprob: -3.759796142578125
    6. '...' → logprob: -4.509796142578125
    7. '=' → logprob: -5.134796142578125
    8. '`' → logprob: -5.509796142578125
    9. '#' → logprob: -5.634796142578125
    10. '-M' → logprob: -5.759796142578125

Token 716: 'verse' (ID: 7093)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0012633290607482195
    2. 'fact' → logprob: -7.12626314163208
    3. 'verse' → logprob: -8.001263618469238
    4. 'inv' → logprob: -10.876263618469238
    5. '```' → logprob: -11.376263618469238
    6. 'vert' → logprob: -11.501263618469238
    7. 'vf' → logprob: -11.501263618469238
    8. '-' → logprob: -11.501263618469238
    9. 'pow' → logprob: -12.251263618469238
    10. 'vers' → logprob: -12.251263618469238

Token 717: ' modulo' (ID: 112372)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.003911576233804226
    2. 'inv' → logprob: -5.87891149520874
    3. '=' → logprob: -8.378911972045898
    4. ' =' → logprob: -8.378911972045898
    5. 'factor' → logprob: -8.378911972045898
    6. '#' → logprob: -8.628911972045898
    7. '```' → logprob: -9.253911972045898
    8. 'fac' → logprob: -10.003911972045898
    9. 'inverse' → logprob: -11.253911972045898
    10. 'fait' → logprob: -11.503911972045898

Token 718: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.08621936291456223
    2. 'fact' → logprob: -2.961219310760498
    3. '=' → logprob: -3.586219310760498
    4. 'pow' → logprob: -6.836219310760498
    5. 'inv' → logprob: -8.211219787597656
    6. '`' → logprob: -8.211219787597656
    7. ' =' → logprob: -8.336219787597656
    8. ' MOD' → logprob: -8.586219787597656
    9. '_MOD' → logprob: -9.086219787597656
    10. '(M' → logprob: -9.086219787597656

Token 719: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9744725823402405
    2. 'est' → logprob: -1.7244725227355957
    3. ' =' → logprob: -1.7244725227355957
    4. ')' → logprob: -2.2244725227355957
    5. 'fact' → logprob: -2.5994725227355957
    6. ' est' → logprob: -3.0994725227355957
    7. '#' → logprob: -4.474472522735596
    8. 'inv' → logprob: -5.099472522735596
    9. 'is' → logprob: -5.599472522735596
    10. ',' → logprob: -5.599472522735596

Token 720: ''un' (ID: 9788)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0037278688978403807
    2. ' fact' → logprob: -5.628727912902832
    3. ' (' → logprob: -10.128727912902832
    4. 'factor' → logprob: -10.878727912902832
    5. '(f' → logprob: -11.503727912902832
    6. '(' → logprob: -11.628727912902832
    7. 'fac' → logprob: -11.753727912902832
    8. ' ' → logprob: -12.003727912902832
    9. ' facto' → logprob: -12.503727912902832
    10. '`' → logprob: -12.628727912902832

Token 721: ' nombre' (ID: 9733)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -5.764977686339989e-05
    2. ' fact' → logprob: -10.250057220458984
    3. 'factor' → logprob: -11.250057220458984
    4. 'fac' → logprob: -13.250057220458984
    5. 'fait' → logprob: -13.250057220458984
    6. '(' → logprob: -13.750057220458984
    7. '(f' → logprob: -14.000057220458984
    8. 'f' → logprob: -14.250057220458984
    9. '.fact' → logprob: -14.250057220458984
    10. '`' → logprob: -14.500057220458984

Token 722: ' a' (ID: 261)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7456122040748596
    2. '=' → logprob: -0.8706122040748596
    3. ' =' → logprob: -3.120612144470215
    4. 'est' → logprob: -3.870612144470215
    5. '#' → logprob: -4.370612144470215
    6. ')' → logprob: -5.370612144470215
    7. ' est' → logprob: -5.370612144470215
    8. '`' → logprob: -5.370612144470215
    9. 'factor' → logprob: -5.995612144470215
    10. '```' → logprob: -6.620612144470215

Token 723: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8137383460998535
    2. '=' → logprob: -1.6887383460998535
    3. 'fact' → logprob: -2.5637383460998535
    4. ' is' → logprob: -2.6887383460998535
    5. ' =' → logprob: -2.9387383460998535
    6. ' est' → logprob: -3.0637383460998535
    7. 'is' → logprob: -3.0637383460998535
    8. '#' → logprob: -3.9387383460998535
    9. 's' → logprob: -4.0637383460998535
    10. '-' → logprob: -4.3137383460998535

Token 724: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.020003825426101685
    2. 'fact' → logprob: -4.270003795623779
    3. ' pow' → logprob: -5.270003795623779
    4. '(pow' → logprob: -8.770004272460938
    5. ' fact' → logprob: -8.895004272460938
    6. '   ' → logprob: -9.770004272460938
    7. 'a' → logprob: -10.020004272460938
    8. '`' → logprob: -10.395004272460938
    9. '```' → logprob: -10.395004272460938
    10. ' calculated' → logprob: -10.520004272460938

Token 725: '(a' (ID: 6271)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0008010497549548745
    2. '(' → logprob: -7.500801086425781
    3. 'fact' → logprob: -8.375801086425781
    4. '(a' → logprob: -11.625801086425781
    5. 'f' → logprob: -12.625801086425781
    6. 'a' → logprob: -13.375801086425781
    7. '(pow' → logprob: -14.375801086425781
    8. '(
' → logprob: -14.500801086425781
    9. '((' → logprob: -15.000801086425781
    10. '(inv' → logprob: -15.125801086425781

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006647987756878138
    2. ',f' → logprob: -5.506648063659668
    3. '(f' → logprob: -6.256648063659668
    4. 'fact' → logprob: -7.881648063659668
    5. '(M' → logprob: -9.506648063659668
    6. ' ,' → logprob: -10.131648063659668
    7. ',M' → logprob: -10.381648063659668
    8. ',
' → logprob: -10.631648063659668
    9. 'MOD' → logprob: -11.131648063659668
    10. 'a' → logprob: -11.256648063659668

Token 727: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00010068230039905757
    2. ' MOD' → logprob: -9.750101089477539
    3. '-' → logprob: -10.750101089477539
    4. 'fact' → logprob: -10.875101089477539
    5. '-M' → logprob: -14.250101089477539
    6. '.MOD' → logprob: -14.875101089477539
    7. 'FACT' → logprob: -15.125101089477539
    8. '_MOD' → logprob: -15.500101089477539
    9. 'Fact' → logprob: -16.62510108947754
    10. '(M' → logprob: -16.75010108947754

Token 728: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00038038729690015316
    2. ' -' → logprob: -7.875380516052246
    3. '−' → logprob: -15.625380516052246
    4. '```' → logprob: -17.12537956237793
    5. '–' → logprob: -17.50037956237793
    6. '
' → logprob: -18.62537956237793
    7. '{-' → logprob: -18.75037956237793
    8. '[-' → logprob: -18.75037956237793
    9. '"-' → logprob: -19.00037956237793
    10. '#' → logprob: -19.25037956237793

Token 729: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01255144365131855
    2. '-' → logprob: -4.387551307678223
    3. ' -' → logprob: -10.262551307678223
    4. ' ' → logprob: -12.137551307678223
    5. '```' → logprob: -14.387551307678223
    6. 'MOD' → logprob: -14.762551307678223
    7. '   ' → logprob: -15.637551307678223
    8. '−' → logprob: -16.13755226135254
    9. '
' → logprob: -16.63755226135254
    10. '4' → logprob: -17.51255226135254

Token 730: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006610880955122411
    2. ')' → logprob: -7.3756608963012695
    3. ' ,' → logprob: -10.37566089630127
    4. '```' → logprob: -13.87566089630127
    5. '%' → logprob: -14.25066089630127
    6. ',
' → logprob: -15.25066089630127
    7. ' modulo' → logprob: -15.75066089630127
    8. '   ' → logprob: -15.87566089630127
    9. '#' → logprob: -16.000661849975586
    10. ' ' → logprob: -16.063161849975586

Token 731: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.02325270138680935
    2. ' MOD' → logprob: -3.7732527256011963
    3. '_MOD' → logprob: -13.148252487182617
    4. ')' → logprob: -13.523252487182617
    5. '   ' → logprob: -13.523252487182617
    6. '```' → logprob: -14.148252487182617
    7. ' ' → logprob: -14.273252487182617
    8. ' ' → logprob: -14.898252487182617
    9. '.MOD' → logprob: -14.898252487182617
    10. '`' → logprob: -15.398252487182617

Token 732: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. ')`' → logprob: -11.875020027160645
    3. ' )' → logprob: -12.250020027160645
    4. '))' → logprob: -12.875020027160645
    5. ')
' → logprob: -13.250020027160645
    6. '[' → logprob: -13.875020027160645
    7. ').' → logprob: -14.375020027160645
    8. ')#' → logprob: -14.500020027160645
    9. '   ' → logprob: -14.625020027160645
    10. ')
' → logprob: -14.875020027160645

Token 733: ' selon' (ID: 27571)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0808240994811058
    2. 'fact' → logprob: -2.580824136734009
    3. ')
' → logprob: -7.33082389831543
    4. ')' → logprob: -7.45582389831543
    5. '
' → logprob: -7.70582389831543
    6. '(inv' → logprob: -8.95582389831543
    7. ' =' → logprob: -10.20582389831543
    8. '[' → logprob: -11.33082389831543
    9. '=' → logprob: -11.33082389831543
    10. '```' → logprob: -11.58082389831543

Token 734: ' le' (ID: 505)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.02220485359430313
    2. 'la' → logprob: -4.272204875946045
    3. 'le' → logprob: -5.397204875946045
    4. 'Euler' → logprob: -6.272204875946045
    5. 'FER' → logprob: -7.897204875946045
    6. 'l' → logprob: -8.022204399108887
    7. '#' → logprob: -8.272204399108887
    8. 'Fer' → logprob: -8.897204399108887
    9. 'Pow' → logprob: -9.022204399108887
    10. 'ferm' → logprob: -9.147204399108887

Token 735: ' petit' (ID: 20577)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2871825397014618
    2. 'MOD' → logprob: -1.5371825695037842
    3. 'mod' → logprob: -4.662182331085205
    4. '"#' → logprob: -5.037182331085205
    5. '#' → logprob: -5.662182331085205
    6. 'princip' → logprob: -5.662182331085205
    7. '```' → logprob: -5.787182331085205
    8. 'pow' → logprob: -6.537182331085205
    9. 'th' → logprob: -6.662182331085205
    10. '"M' → logprob: -6.912182331085205

Token 736: ' thé' (ID: 34740)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4980270862579346
    2. 'pr' → logprob: -1.6230270862579346
    3. '```' → logprob: -2.3730270862579346
    4. ' thé' → logprob: -2.4980270862579346
    5. ' prince' → logprob: -2.6230270862579346
    6. 'th' → logprob: -2.7480270862579346
    7. 'prime' → logprob: -2.7480270862579346
    8. 'mod' → logprob: -3.3730270862579346
    9. ' prime' → logprob: -4.2480268478393555
    10. '_' → logprob: -4.2480268478393555

Token 737: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.09562558680772781
    2. 'orem' → logprob: -2.720625638961792
    3. '```' → logprob: -4.845625400543213
    4. 'rem' → logprob: -4.845625400543213
    5. '#' → logprob: -5.595625400543213
    6. 'ore' → logprob: -6.095625400543213
    7. '`' → logprob: -7.220625400543213
    8. 'ор' → logprob: -7.470625400543213
    9. '**' → logprob: -8.220625877380371
    10. 'rm' → logprob: -8.470625877380371

Token 738: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.060377877205610275
    2. 'or' → logprob: -3.435377836227417
    3. 'me' → logprob: -4.185378074645996
    4. '#' → logprob: -5.435378074645996
    5. 'reme' → logprob: -5.935378074645996
    6. 'ène' → logprob: -6.310378074645996
    7. 'ême' → logprob: -7.685378074645996
    8. 'ne' → logprob: -8.060378074645996
    9. 'r' → logprob: -8.310378074645996
    10. 'm' → logprob: -8.685378074645996

Token 739: ' de' (ID: 334)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.004476762376725674
    2. '```' → logprob: -6.379476547241211
    3. '=' → logprob: -6.754476547241211
    4. ' MOD' → logprob: -8.504476547241211
    5. 'de' → logprob: -8.504476547241211
    6. '#' → logprob: -8.754476547241211
    7. '_MOD' → logprob: -8.754476547241211
    8. '`' → logprob: -8.879476547241211
    9. ',' → logprob: -8.879476547241211
    10. ')' → logprob: -9.504476547241211

Token 740: ' Ferm' (ID: 156422)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00012761499965563416
    2. 'ferm' → logprob: -10.000127792358398
    3. 'fer' → logprob: -10.125127792358398
    4. 'Fer' → logprob: -11.000127792358398
    5. 'f' → logprob: -11.500127792358398
    6. ' Ferm' → logprob: -12.250127792358398
    7. 'Ф' → logprob: -13.125127792358398
    8. '(F' → logprob: -13.375127792358398
    9. 'FER' → logprob: -13.625127792358398
    10. 'Euler' → logprob: -14.125127792358398

Token 741: 'at' (ID: 266)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3102870285511017
    2. 'MOD' → logprob: -1.9352869987487793
    3. 'mod' → logprob: -2.4352869987487793
    4. 'or' → logprob: -5.560286998748779
    5. '```' → logprob: -5.560286998748779
    6. '#' → logprob: -5.810286998748779
    7. ' -' → logprob: -5.935286998748779
    8. '**' → logprob: -6.185286998748779
    9. 'é' → logprob: -6.310286998748779
    10. '-mod' → logprob: -6.435286998748779

Token 742: '.
' (ID: 558)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00041113083716481924
    2. 'fact' → logprob: -7.875411033630371
    3. ')
' → logprob: -11.625411033630371
    4. '
' → logprob: -11.875411033630371
    5. ')' → logprob: -12.125411033630371
    6. '(inv' → logprob: -12.375411033630371
    7. '```' → logprob: -13.250411033630371
    8. '#' → logprob: -13.375411033630371
    9. '[' → logprob: -14.750411033630371
    10. ' inv' → logprob: -14.750411033630371

Token 743: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.750000953674316
    3. '
' → logprob: -16.0
    4. 'fact' → logprob: -16.5
    5. '(inv' → logprob: -16.625
    6. ')
' → logprob: -16.75
    7. ')' → logprob: -17.25
    8. '#' → logprob: -17.5
    9. ' inv' → logprob: -17.875
    10. '.inv' → logprob: -19.375

Token 744: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0001149867384810932
    2. '_fact' → logprob: -9.125115394592285
    3. ' =' → logprob: -12.500115394592285
    4. 'fac' → logprob: -14.125115394592285
    5. 'factor' → logprob: -14.250115394592285
    6. 'inv' → logprob: -14.625115394592285
    7. '=' → logprob: -15.125115394592285
    8. '_inv' → logprob: -16.12511444091797
    9. 'f' → logprob: -16.87511444091797
    10. '_' → logprob: -17.50011444091797

Token 745: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.011055603623390198
    2. '[' → logprob: -4.5110554695129395
    3. '=' → logprob: -12.261055946350098
    4. '[MAX' → logprob: -13.261055946350098
    5. ' =' → logprob: -14.136055946350098
    6. '=[' → logprob: -15.011055946350098
    7. '[M' → logprob: -16.26105499267578
    8. '[len' → logprob: -16.26105499267578
    9. '=-' → logprob: -17.51105499267578
    10. ' [-' → logprob: -17.76105499267578

Token 746: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. ']' → logprob: -16.5
    4. '```' → logprob: -16.875
    5. '
' → logprob: -17.0
    6. '=' → logprob: -17.8125
    7. '１' → logprob: -17.9375
    8. '   ' → logprob: -18.0
    9. '

' → logprob: -18.75
    10. '`' → logprob: -18.75

Token 747: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.290784560609609e-05
    2. ']=' → logprob: -9.750072479248047
    3. '=' → logprob: -11.250072479248047
    4. ' ]' → logprob: -13.375072479248047
    5. ')' → logprob: -17.625072479248047
    6. ' =' → logprob: -18.750072479248047
    7. ']
' → logprob: -20.125072479248047
    8. ']=(' → logprob: -20.250072479248047
    9. ']

' → logprob: -20.500072479248047
    10. '`]' → logprob: -20.625072479248047

Token 748: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015024791937321424
    2. ' =' → logprob: -6.501502513885498
    3. '=

' → logprob: -16.626502990722656
    4. '=
' → logprob: -18.376502990722656
    5. '=}' → logprob: -19.001502990722656
    6. '＝' → logprob: -19.001502990722656
    7. '.=' → logprob: -20.876502990722656
    8. '=int' → logprob: -20.876502990722656
    9. '=`' → logprob: -21.501502990722656
    10. ')' → logprob: -21.626502990722656

Token 749: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -5.836499985889532e-05
    2. ' pow' → logprob: -9.7500581741333
    3. '(pow' → logprob: -18.000059127807617
    4. '_pow' → logprob: -21.250059127807617
    5. 'power' → logprob: -22.000059127807617
    6. '.pow' → logprob: -22.250059127807617
    7. 'po' → logprob: -22.375059127807617
    8. 'Pow' → logprob: -22.750059127807617
    9. '   ' → logprob: -22.875059127807617
    10. 'pot' → logprob: -23.125059127807617

Token 750: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -3.91732100979425e-05
    2. '(' → logprob: -10.500039100646973
    3. 'fact' → logprob: -11.375039100646973
    4. 'f' → logprob: -16.50004005432129
    5. '(
' → logprob: -18.25004005432129
    6. '	f' → logprob: -18.87504005432129
    7. '_fact' → logprob: -18.87504005432129
    8. 'Fact' → logprob: -19.25004005432129
    9. '(factory' → logprob: -19.37504005432129
    10. '.fact' → logprob: -19.62504005432129

Token 751: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -13.375003814697266
    3. 'ACT' → logprob: -14.125003814697266
    4. 'a' → logprob: -14.500003814697266
    5. '(act' → logprob: -14.750003814697266
    6. 'ac' → logprob: -15.625003814697266
    7. 'fact' → logprob: -16.500003814697266
    8. '
' → logprob: -16.875003814697266
    9. 'ack' → logprob: -17.000003814697266
    10. ' act' → logprob: -17.250003814697266

Token 752: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.836499985889532e-05
    2. '[' → logprob: -9.7500581741333
    3. '-' → logprob: -18.500059127807617
    4. '[M' → logprob: -19.500059127807617
    5. '[MAX' → logprob: -21.000059127807617
    6. '[
' → logprob: -21.125059127807617
    7. 'MOD' → logprob: -22.000059127807617
    8. '[:-' → logprob: -22.125059127807617
    9. '```' → logprob: -23.875059127807617
    10. '][-' → logprob: -24.500059127807617

Token 753: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '
' → logprob: -16.625
    4. '   ' → logprob: -16.9375
    5. '１' → logprob: -17.5
    6. '2' → logprob: -17.5625
    7. '```' → logprob: -17.8125
    8. '' → logprob: -18.125
    9. '
' → logprob: -18.75
    10. '۱' → logprob: -18.875

Token 754: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005351595464162529
    2. '],' → logprob: -7.625535011291504
    3. ' ,' → logprob: -10.000535011291504
    4. '-' → logprob: -14.875535011291504
    5. '),' → logprob: -14.875535011291504
    6. ',-' → logprob: -15.000535011291504
    7. ']' → logprob: -15.875535011291504
    8. '},' → logprob: -15.875535011291504
    9. '‌,' → logprob: -16.37553596496582
    10. '```' → logprob: -16.37553596496582

Token 755: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.704273118884885e-07
    2. ' MOD' → logprob: -14.250000953674316
    3. '_MOD' → logprob: -19.5
    4. '.MOD' → logprob: -19.875
    5. '-' → logprob: -20.0
    6. '-M' → logprob: -21.625
    7. 'MO' → logprob: -22.0
    8. 'MODE' → logprob: -22.375
    9. '-mod' → logprob: -22.5
    10. '(Mod' → logprob: -23.25

Token 756: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9027791495318525e-05
    2. ' -' → logprob: -10.875019073486328
    3. '−' → logprob: -20.750019073486328
    4. '```' → logprob: -21.250019073486328
    5. '#' → logprob: -21.625019073486328
    6. '-
' → logprob: -22.000019073486328
    7. ' ' → logprob: -22.375019073486328
    8. '–' → logprob: -22.625019073486328
    9. '()-' → logprob: -23.125019073486328
    10. '   ' → logprob: -23.500019073486328

Token 757: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '-' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '```' → logprob: -17.875
    5. '۲' → logprob: -18.9375
    6. ' -' → logprob: -19.125
    7. '２' → logprob: -19.5
    8. '' → logprob: -19.875
    9. '٢' → logprob: -20.125
    10. '   ' → logprob: -20.1875

Token 758: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.75000286102295
    3. ')' → logprob: -14.12500286102295
    4. 'MOD' → logprob: -14.62500286102295
    5. ',
' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '```' → logprob: -17.375001907348633
    8. ' MOD' → logprob: -19.000001907348633
    9. '),' → logprob: -19.875001907348633
    10. 'mod' → logprob: -19.875001907348633

Token 759: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.493430894101039e-05
    2. ' MOD' → logprob: -9.500075340270996
    3. '_MOD' → logprob: -21.50007438659668
    4. 'MO' → logprob: -21.75007438659668
    5. '   ' → logprob: -22.37507438659668
    6. '.MOD' → logprob: -22.87507438659668
    7. 'MODULE' → logprob: -24.12507438659668
    8. ' ' → logprob: -24.12507438659668
    9. ')' → logprob: -24.37507438659668
    10. 'MODE' → logprob: -24.50007438659668

Token 760: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -12.625003814697266
    3. ')#' → logprob: -16.250003814697266
    4. ' )' → logprob: -16.875003814697266
    5. ')

' → logprob: -17.750003814697266
    6. ')
' → logprob: -18.000003814697266
    7. ')`' → logprob: -18.125003814697266
    8. '),' → logprob: -19.250003814697266
    9. '))' → logprob: -19.375003814697266
    10. ')...' → logprob: -20.125003814697266

Token 761: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.250000953674316
    3. ' for' → logprob: -16.625
    4. '
' → logprob: -16.75
    5. 'i' → logprob: -17.125
    6. '#' → logprob: -17.25
    7. '``' → logprob: -20.125
    8. '	for' → logprob: -21.25
    9. ')' → logprob: -21.625
    10. 'For' → logprob: -23.25

Token 762: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. '```' → logprob: -17.75
    3. '#' → logprob: -18.75
    4. ' for' → logprob: -19.625
    5. 'i' → logprob: -20.375
    6. '
' → logprob: -21.375
    7. '``' → logprob: -23.5
    8. '	for' → logprob: -23.625
    9. '   ' → logprob: -24.75
    10. 'For' → logprob: -24.875

Token 763: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1994775377388578e-05
    2. ' for' → logprob: -11.375012397766113
    3. '
' → logprob: -14.625012397766113
    4. 'i' → logprob: -16.875011444091797
    5. '#' → logprob: -17.625011444091797
    6. 's' → logprob: -18.875011444091797
    7. '```' → logprob: -19.250011444091797
    8. 'f' → logprob: -20.125011444091797
    9. ':' → logprob: -20.125011444091797
    10. '	for' → logprob: -20.250011444091797

Token 764: ' invers' (ID: 38721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5332478142227046e-05
    2. 'inv' → logprob: -11.750015258789062
    3. ' for' → logprob: -12.250015258789062
    4. 'i' → logprob: -13.125015258789062
    5. '#' → logprob: -14.875015258789062
    6. 'inverse' → logprob: -16.000015258789062
    7. '```' → logprob: -17.500015258789062
    8. 'in' → logprob: -17.625015258789062
    9. 'pour' → logprob: -18.750015258789062
    10. 'range' → logprob: -18.875015258789062

Token 765: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0024153725244104862
    2. 'és' → logprob: -6.877415180206299
    3. 'vers' → logprob: -7.752415180206299
    4. '```' → logprob: -8.127415657043457
    5. 'ses' → logprob: -8.502415657043457
    6. 's' → logprob: -9.002415657043457
    7. 'verse' → logprob: -9.252415657043457
    8. 'v' → logprob: -10.127415657043457
    9. 'ers' → logprob: -10.502415657043457
    10. '#' → logprob: -10.752415657043457

Token 766: ' multiplic' (ID: 67929)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006477446295320988
    2. 'multip' → logprob: -8.00064754486084
    3. 'pour' → logprob: -8.62564754486084
    4. 'fact' → logprob: -9.37564754486084
    5. 'factor' → logprob: -10.50064754486084
    6. '#' → logprob: -12.00064754486084
    7. 'des' → logprob: -12.25064754486084
    8. 'de' → logprob: -12.37564754486084
    9. ' for' → logprob: -12.50064754486084
    10. ' multiplic' → logprob: -14.50064754486084

Token 767: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.30968111753463745
    2. 't' → logprob: -1.4346811771392822
    3. 'ques' → logprob: -4.434680938720703
    4. 'ifs' → logprob: -5.434680938720703
    5. '#' → logprob: -5.809680938720703
    6. 'els' → logprob: -5.934680938720703
    7. 'es' → logprob: -6.309680938720703
    8. 'f' → logprob: -6.309680938720703
    9. 's' → logprob: -7.184680938720703
    10. 'fact' → logprob: -8.059680938720703

Token 768: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016671013145241886
    2. 'pour' → logprob: -9.000166893005371
    3. ' for' → logprob: -10.125166893005371
    4. '#' → logprob: -13.625166893005371
    5. ' pour' → logprob: -14.125166893005371
    6. '```' → logprob: -14.750166893005371
    7. 'des' → logprob: -15.125166893005371
    8. 'de' → logprob: -16.250165939331055
    9. '	for' → logprob: -16.375165939331055
    10. '
' → logprob: -16.375165939331055

Token 769: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00312554812990129
    2. 'factor' → logprob: -5.8781256675720215
    3. 'inv' → logprob: -8.503125190734863
    4. 'i' → logprob: -10.003125190734863
    5. 'range' → logprob: -10.003125190734863
    6. 'fac' → logprob: -12.003125190734863
    7. '```' → logprob: -12.378125190734863
    8. 'for' → logprob: -12.503125190734863
    9. 'fait' → logprob: -12.753125190734863
    10. 'indices' → logprob: -13.128125190734863

Token 770: 'ori' (ID: 6510)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.3863770365715027
    2. 'act' → logprob: -2.1363770961761475
    3. 'orial' → logprob: -2.3863770961761475
    4. '[i' → logprob: -3.0113770961761475
    5. 'fact' → logprob: -3.6363770961761475
    6. 'i' → logprob: -4.011376857757568
    7. 'ori' → logprob: -5.261376857757568
    8. '[' → logprob: -6.136376857757568
    9. 'for' → logprob: -6.636376857757568
    10. 'é' → logprob: -6.636376857757568

Token 771: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.011082838289439678
    2. 'es' → logprob: -5.386082649230957
    3. 'els' → logprob: -5.386082649230957
    4. 'ales' → logprob: -7.386082649230957
    5. 'lles' → logprob: -7.636082649230957
    6. 'alles' → logprob: -8.261082649230957
    7. 'les' → logprob: -9.011082649230957
    8. '#' → logprob: -9.261082649230957
    9. 'eles' → logprob: -9.511082649230957
    10. '```' → logprob: -9.636082649230957

Token 772: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.531315314830863e-06
    2. ' for' → logprob: -12.750003814697266
    3. '```' → logprob: -14.750003814697266
    4. '
' → logprob: -16.875003814697266
    5. 'i' → logprob: -17.625003814697266
    6. '#' → logprob: -18.625003814697266
    7. '	for' → logprob: -18.750003814697266
    8. 'pour' → logprob: -19.750003814697266
    9. '[i' → logprob: -19.875003814697266
    10. '   ' → logprob: -19.875003814697266

Token 773: ' MOD' (ID: 32868)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09437684714794159
    2. 're' → logprob: -2.469376802444458
    3. 'MOD' → logprob: -5.719377040863037
    4. 'i' → logprob: -7.219377040863037
    5. 'ré' → logprob: -7.344377040863037
    6. 'reverse' → logprob: -8.594376564025879
    7. 'for' → logprob: -9.469376564025879
    8. 'rang' → logprob: -9.469376564025879
    9. '(range' → logprob: -9.719376564025879
    10. ' range' → logprob: -9.969376564025879

Token 774: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.73183855926618e-05
    2. ' -' → logprob: -9.500077247619629
    3. 'for' → logprob: -13.500077247619629
    4. '
' → logprob: -14.375077247619629
    5. '```' → logprob: -15.750077247619629
    6. '-
' → logprob: -16.375078201293945
    7. 'range' → logprob: -16.625078201293945
    8. '-i' → logprob: -17.750078201293945
    9. '-range' → logprob: -18.000078201293945
    10. '−' → logprob: -18.250078201293945

Token 775: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04321978613734245
    2. '-' → logprob: -3.168219804763794
    3. 'range' → logprob: -8.543219566345215
    4. '1' → logprob: -11.418219566345215
    5. '```' → logprob: -11.668219566345215
    6. '
' → logprob: -12.668219566345215
    7. ' -' → logprob: -13.668219566345215
    8. '#' → logprob: -15.168219566345215
    9. 'for' → logprob: -15.543219566345215
    10. '' → logprob: -15.543219566345215

Token 776: ' jusqu' (ID: 21961)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008712668903172016
    2. '
' → logprob: -5.6337127685546875
    3. ' for' → logprob: -6.0087127685546875
    4. '-' → logprob: -7.1337127685546875
    5. '::-' → logprob: -7.2587127685546875
    6. 'down' → logprob: -7.5087127685546875
    7. 'i' → logprob: -8.758712768554688
    8. '-i' → logprob: -9.508712768554688
    9. ',' → logprob: -9.633712768554688
    10. ' -' → logprob: -10.008712768554688

Token 777: ''à' (ID: 33688)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.7423020601272583
    2. ''à' → logprob: -1.3673020601272583
    3. 'au' → logprob: -2.1173019409179688
    4. '#' → logprob: -2.7423019409179688
    5. ''au' → logprob: -3.8673019409179688
    6. '’à' → logprob: -4.367301940917969
    7. '0' → logprob: -4.617301940917969
    8. ' à' → logprob: -4.742301940917969
    9. 'to' → logprob: -4.867301940917969
    10. '-' → logprob: -5.242301940917969

Token 778: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018157318234443665
    2. '1' → logprob: -4.018157482147217
    3. '
' → logprob: -12.768157005310059
    4. ' ' → logprob: -12.893157005310059
    5. '-' → logprob: -13.393157005310059
    6. '```' → logprob: -14.768157005310059
    7. '   ' → logprob: -15.893157005310059
    8. '

' → logprob: -17.018157958984375
    9. '#' → logprob: -17.518157958984375
    10. '[' → logprob: -17.893157958984375

Token 779: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47407716512680054
    2. '1' → logprob: -0.9740771651268005
    3. '-' → logprob: -16.099077224731445
    4. ' ' → logprob: -16.974077224731445
    5. '```' → logprob: -17.599077224731445
    6. '
' → logprob: -17.724077224731445
    7. '2' → logprob: -20.349077224731445
    8. '   ' → logprob: -20.724077224731445
    9. '`' → logprob: -22.099077224731445
    10. '

' → logprob: -22.349077224731445

Token 780: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005199087900109589
    2. ' for' → logprob: -7.625519752502441
    3. '```' → logprob: -11.000519752502441
    4. '
' → logprob: -11.250519752502441
    5. ':' → logprob: -13.375519752502441
    6. ':
' → logprob: -15.625519752502441
    7. '	for' → logprob: -16.375520706176758
    8. '[i' → logprob: -16.500520706176758
    9. 'i' → logprob: -16.500520706176758
    10. ')' → logprob: -16.750520706176758

Token 781: 'rem' (ID: 1935)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.269565634895116e-05
    2. ' for' → logprob: -9.750092506408691
    3. ')' → logprob: -10.875092506408691
    4. '```' → logprob: -11.875092506408691
    5. '
' → logprob: -12.375092506408691
    6. 'range' → logprob: -13.625092506408691
    7. 'i' → logprob: -14.125092506408691
    8. 'in' → logprob: -14.375092506408691
    9. '	for' → logprob: -14.875092506408691
    10. '-' → logprob: -15.000092506408691

Token 782: 'pl' (ID: 528)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6895309090614319
    2. 'ont' → logprob: -1.064530849456787
    3. '[-' → logprob: -3.189530849456787
    4. 'for' → logprob: -4.064530849456787
    5. 'aining' → logprob: -4.189530849456787
    6. ']' → logprob: -4.439530849456787
    7. '=' → logprob: -4.814530849456787
    8. '#' → logprob: -4.814530849456787
    9. 'fact' → logprob: -4.939530849456787
    10. '1' → logprob: -5.189530849456787

Token 783: 'issage' (ID: 63863)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.5924212336540222
    2. ']' → logprob: -1.717421293258667
    3. 'range' → logprob: -2.842421293258667
    4. 'e' → logprob: -3.092421293258667
    5. 'issage' → logprob: -3.467421293258667
    6. ')' → logprob: -4.467421054840088
    7. 'pl' → logprob: -4.467421054840088
    8. 'anger' → logprob: -4.717421054840088
    9. 'anged' → logprob: -5.092421054840088
    10. 'anging' → logprob: -5.092421054840088

Token 784: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019257934764027596
    2. ')' → logprob: -5.01925802230835
    3. 'in' → logprob: -5.39425802230835
    4. '[::-' → logprob: -5.89425802230835
    5. 'i' → logprob: -6.14425802230835
    6. ' for' → logprob: -6.64425802230835
    7. '[:-' → logprob: -7.64425802230835
    8. ',' → logprob: -7.76925802230835
    9. '[i' → logprob: -8.894257545471191
    10. 'en' → logprob: -9.144257545471191

Token 785: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006153396097943187
    2. ' range' → logprob: -8.125615119934082
    3. 're' → logprob: -8.375615119934082
    4. 'reverse' → logprob: -10.750615119934082
    5. 'MOD' → logprob: -11.500615119934082
    6. 'i' → logprob: -11.625615119934082
    7. '
' → logprob: -11.625615119934082
    8. '[' → logprob: -11.750615119934082
    9. '```' → logprob: -11.875615119934082
    10. 'rang' → logprob: -12.250615119934082

Token 786: ' table' (ID: 3293)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.02775324508547783
    2. 'range' → logprob: -4.4027533531188965
    3. '-' → logprob: -4.6527533531188965
    4. '-M' → logprob: -5.9027533531188965
    5. 'for' → logprob: -7.1527533531188965
    6. '
' → logprob: -7.6527533531188965
    7. '(M' → logprob: -7.7777533531188965
    8. '[:-' → logprob: -8.652752876281738
    9. ' MOD' → logprob: -9.027752876281738
    10. '```' → logprob: -9.027752876281738

Token 787: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001737431448418647
    2. 'pour' → logprob: -8.875173568725586
    3. ' for' → logprob: -10.625173568725586
    4. '#' → logprob: -12.250173568725586
    5. ')' → logprob: -12.625173568725586
    6. 'en' → logprob: -14.250173568725586
    7. '
' → logprob: -14.750173568725586
    8. ' pour' → logprob: -15.250173568725586
    9. '```' → logprob: -16.625173568725586
    10. ',' → logprob: -17.125173568725586

Token 788: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.625
    3. '
' → logprob: -20.125
    4. ' for' → logprob: -20.625
    5. '#' → logprob: -21.625
    6. 'i' → logprob: -22.0
    7. '``' → logprob: -22.625
    8. 'from' → logprob: -23.25
    9. '   ' → logprob: -23.375
    10. '	for' → logprob: -24.0

Token 789: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.493430894101039e-05
    2. ' i' → logprob: -9.500075340270996
    3. 'x' → logprob: -19.00007438659668
    4. '	i' → logprob: -19.25007438659668
    5. 'j' → logprob: -20.37507438659668
    6. ' ' → logprob: -20.87507438659668
    7. 'k' → logprob: -21.12507438659668
    8. ' ' → logprob: -21.37507438659668
    9. '   ' → logprob: -21.50007438659668
    10. '(i' → logprob: -22.62507438659668

Token 790: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20141635835170746
    2. 'in' → logprob: -1.7014163732528687
    3. ' ' → logprob: -13.701416015625
    4. 'range' → logprob: -14.076416015625
    5. '
' → logprob: -14.576416015625
    6. ' i' → logprob: -15.576416015625
    7. 'i' → logprob: -16.076416015625
    8. '   ' → logprob: -16.701416015625
    9. 'n' → logprob: -16.826416015625
    10. 'd' → logprob: -16.826416015625

Token 791: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002489214763045311
    2. 're' → logprob: -6.00248908996582
    3. ' range' → logprob: -11.25248908996582
    4. '(range' → logprob: -14.62748908996582
    5. ' reversed' → logprob: -15.75248908996582
    6. 'reverse' → logprob: -18.00248908996582
    7. '(re' → logprob: -18.87748908996582
    8. 'rev' → logprob: -20.37748908996582
    9. '	range' → logprob: -20.75248908996582
    10. '   ' → logprob: -21.12748908996582

Token 792: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00018029935017693788
    2. 'MOD' → logprob: -8.6251802444458
    3. 'M' → logprob: -15.0001802444458
    4. ' MOD' → logprob: -16.000181198120117
    5. '(' → logprob: -16.500181198120117
    6. '	M' → logprob: -17.125181198120117
    7. '
' → logprob: -17.250181198120117
    8. ' (' → logprob: -17.375181198120117
    9. '   ' → logprob: -17.625181198120117
    10. '.MOD' → logprob: -17.750181198120117

Token 793: 'OD' (ID: 3329)
  Prédit: 'OD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OD' → logprob: -0.011347956955432892
    2. '-' → logprob: -4.511347770690918
    3. 'O' → logprob: -8.511347770690918
    4. '
' → logprob: -10.761347770690918
    5. 'MOD' → logprob: -10.886347770690918
    6. '0' → logprob: -11.011347770690918
    7. 'od' → logprob: -11.761347770690918
    8. ' -' → logprob: -12.386347770690918
    9. 'ОД' → logprob: -12.511347770690918
    10. '...' → logprob: -12.886347770690918

Token 794: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.650518920039758e-06
    2. ' -' → logprob: -12.625003814697266
    3. '2' → logprob: -15.375003814697266
    4. '[-' → logprob: -20.500003814697266
    5. '1' → logprob: -20.750003814697266
    6. '```' → logprob: -21.125003814697266
    7. '−' → logprob: -21.750003814697266
    8. '   ' → logprob: -22.250003814697266
    9. '...' → logprob: -22.250003814697266
    10. '[' → logprob: -22.250003814697266

Token 795: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '3' → logprob: -19.125
    4. '1' → logprob: -19.75
    5. '２' → logprob: -19.75
    6. '
' → logprob: -19.875
    7. '

' → logprob: -20.5
    8. '۲' → logprob: -20.5
    9. '   ' → logprob: -20.625
    10. '```' → logprob: -20.875

Token 796: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ' ,' → logprob: -11.75001049041748
    3. ',-' → logprob: -13.12501049041748
    4. ',
' → logprob: -16.625009536743164
    5. '-' → logprob: -19.500009536743164
    6. ' ,-' → logprob: -20.000009536743164
    7. ',i' → logprob: -20.625009536743164
    8. ',

' → logprob: -20.875009536743164
    9. ',,' → logprob: -21.250009536743164
    10. ',len' → logprob: -21.250009536743164

Token 797: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.735893965815194e-05
    2. ' -' → logprob: -11.000017166137695
    3. '0' → logprob: -14.250017166137695
    4. '   ' → logprob: -19.000017166137695
    5. ' ' → logprob: -19.375017166137695
    6. '-i' → logprob: -20.125017166137695
    7. '  ' → logprob: -21.250017166137695
    8. '−' → logprob: -22.250017166137695
    9. '-M' → logprob: -22.750017166137695
    10. '	' → logprob: -22.750017166137695

Token 798: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '-' → logprob: -18.5
    4. '   ' → logprob: -19.75
    5. ' -' → logprob: -19.875
    6. '```' → logprob: -20.0
    7. '１' → logprob: -20.125
    8. '
' → logprob: -21.25
    9. '۱' → logprob: -22.25
    10. '  ' → logprob: -22.25

Token 799: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013381359167397022
    2. ',-' → logprob: -9.125133514404297
    3. '-' → logprob: -10.750133514404297
    4. ' ,' → logprob: -12.750133514404297
    5. ',
' → logprob: -15.125133514404297
    6. '-,' → logprob: -16.750133514404297
    7. ' ,-' → logprob: -17.000133514404297
    8. ' -' → logprob: -17.875133514404297
    9. '```' → logprob: -18.375133514404297
    10. '   ' → logprob: -18.375133514404297

Token 800: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.611323624383658e-05
    2. ' -' → logprob: -9.625065803527832
    3. '   ' → logprob: -18.62506675720215
    4. '-
' → logprob: -19.87506675720215
    5. '```' → logprob: -20.00006675720215
    6. ' ' → logprob: -20.12506675720215
    7. '  ' → logprob: -20.50006675720215
    8. '−' → logprob: -21.12506675720215
    9. '-step' → logprob: -21.50006675720215
    10. ',-' → logprob: -21.50006675720215

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -15.875
    3. ')' → logprob: -16.875
    4. ' ' → logprob: -17.25
    5. '):
' → logprob: -17.625
    6. '   ' → logprob: -18.625
    7. '```' → logprob: -19.0
    8. ',' → logprob: -20.25
    9. '
' → logprob: -20.375
    10. '2' → logprob: -20.75

Token 802: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.387114554643631
    2. '):' → logprob: -1.1371145248413086
    3. '):
' → logprob: -8.512114524841309
    4. ')' → logprob: -10.262114524841309
    5. ':' → logprob: -12.262114524841309
    6. '   ' → logprob: -13.637114524841309
    7. ':
' → logprob: -14.887114524841309
    8. '):

' → logprob: -15.012114524841309
    9. '1' → logprob: -15.637114524841309
    10. ' ):
' → logprob: -15.762114524841309

Token 803: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04859395697712898
    2. 'inv' → logprob: -3.0485939979553223
    3. ' inv' → logprob: -12.423593521118164
    4. '```' → logprob: -13.548593521118164
    5. '(inv' → logprob: -14.798593521118164
    6. 'in' → logprob: -14.923593521118164
    7. '   ' → logprob: -15.298593521118164
    8. '  ' → logprob: -15.923593521118164
    9. '_inv' → logprob: -16.048593521118164
    10. '    
' → logprob: -17.173593521118164

Token 804: ' #' (ID: 1069)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00010986098641296849
    2. '   ' → logprob: -9.125109672546387
    3. ' inv' → logprob: -14.375109672546387
    4. '(inv' → logprob: -15.750109672546387
    5. '```' → logprob: -16.000110626220703
    6. '_inv' → logprob: -17.125110626220703
    7. 'in' → logprob: -17.375110626220703
    8. 'inverse' → logprob: -18.625110626220703
    9. '.inv' → logprob: -19.250110626220703
    10. '    
' → logprob: -19.250110626220703

Token 805: ' Inv' (ID: 32286)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.306760805164231e-05
    2. '   ' → logprob: -11.25001335144043
    3. ' inv' → logprob: -16.75001335144043
    4. '  ' → logprob: -20.12501335144043
    5. '```' → logprob: -20.25001335144043
    6. '#' → logprob: -20.50001335144043
    7. '(inv' → logprob: -21.25001335144043
    8. ' ' → logprob: -21.62501335144043
    9. '
' → logprob: -21.87501335144043
    10. 'inf' → logprob: -21.87501335144043

Token 806: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: 0.0
    2. ' fact' → logprob: -18.625
    3. '_fact' → logprob: -18.625
    4. 'fait' → logprob: -18.875
    5. '#' → logprob: -19.375
    6. 'f' → logprob: -19.5
    7. 'inv' → logprob: -21.5
    8. 'act' → logprob: -21.625
    9. '   ' → logprob: -21.625
    10. 'fat' → logprob: -22.375

Token 807: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.8802491215174086e-05
    2. 'fact' → logprob: -10.750028610229492
    3. '[' → logprob: -12.000028610229492
    4. 'inv' → logprob: -14.500028610229492
    5. 'i' → logprob: -15.750028610229492
    6. 's' → logprob: -16.125028610229492
    7. '```' → logprob: -16.125028610229492
    8. '\[' → logprob: -16.375028610229492
    9. '
' → logprob: -16.625028610229492
    10. 'f' → logprob: -17.000028610229492

Token 808: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02285464107990265
    2. '=' → logprob: -3.8978545665740967
    3. ']=' → logprob: -6.272854804992676
    4. ' =' → logprob: -7.897854804992676
    5. ']=(' → logprob: -10.147854804992676
    6. ')' → logprob: -12.522854804992676
    7. '[i' → logprob: -12.897854804992676
    8. '[' → logprob: -13.647854804992676
    9. '=i' → logprob: -13.897854804992676
    10. '=(' → logprob: -14.147854804992676

Token 809: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024762547109276056
    2. ' =' → logprob: -6.002476215362549
    3. '=f' → logprob: -15.377476692199707
    4. '=(' → logprob: -16.25247573852539
    5. '=
' → logprob: -16.37747573852539
    6. '=i' → logprob: -17.12747573852539
    7. '   ' → logprob: -17.25247573852539
    8. ']=' → logprob: -17.50247573852539
    9. ']' → logprob: -17.62747573852539
    10. '=

' → logprob: -18.00247573852539

Token 810: ' Inv' (ID: 32286)
  Prédit: '(inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(inv' → logprob: -0.001860807416960597
    2. '(in' → logprob: -6.501860618591309
    3. 'inv' → logprob: -8.126860618591309
    4. ' (' → logprob: -10.126860618591309
    5. '(' → logprob: -11.751860618591309
    6. '(i' → logprob: -13.126860618591309
    7. '(ans' → logprob: -13.501860618591309
    8. '(f' → logprob: -13.751860618591309
    9. '(invoice' → logprob: -13.876860618591309
    10. '((' → logprob: -14.126860618591309

Token 811: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: 0.0
    2. ' fact' → logprob: -18.125
    3. 'fac' → logprob: -18.375
    4. 'fait' → logprob: -18.75
    5. 'f' → logprob: -18.875
    6. 'inv' → logprob: -19.25
    7. '_fact' → logprob: -20.25
    8. 'Fact' → logprob: -20.75
    9. 'ifact' → logprob: -21.25
    10. '#' → logprob: -21.375

Token 812: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.875000953674316
    3. 'i' → logprob: -15.250000953674316
    4. '\[' → logprob: -16.875
    5. '[I' → logprob: -17.0
    6. ' [' → logprob: -17.125
    7. '{i' → logprob: -17.25
    8. '```' → logprob: -17.375
    9. '
' → logprob: -17.625
    10. '[
' → logprob: -17.625

Token 813: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01109203603118658
    2. '+' → logprob: -4.511092185974121
    3. '[' → logprob: -10.886092185974121
    4. '+i' → logprob: -11.011092185974121
    5. 'i' → logprob: -12.136092185974121
    6. ' +' → logprob: -13.261092185974121
    7. '[I' → logprob: -14.511092185974121
    8. '[
' → logprob: -15.011092185974121
    9. '{i' → logprob: -15.261092185974121
    10. '[next' → logprob: -15.386092185974121

Token 814: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. 'i' → logprob: -10.1250581741333
    3. ']' → logprob: -11.3750581741333
    4. '```' → logprob: -12.5000581741333
    5. ' ' → logprob: -13.8750581741333
    6. '+' → logprob: -14.1250581741333
    7. '   ' → logprob: -14.1250581741333
    8. '`' → logprob: -15.0000581741333
    9. '‌' → logprob: -15.7500581741333
    10. '  ' → logprob: -16.250059127807617

Token 815: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16238774359226227
    2. ']' → logprob: -2.0373878479003906
    3. ' *' → logprob: -4.037387847900391
    4. '*i' → logprob: -6.912387847900391
    5. ']*' → logprob: -7.787387847900391
    6. '*(' → logprob: -8.53738784790039
    7. '[i' → logprob: -9.53738784790039
    8. ')' → logprob: -10.03738784790039
    9. ' ' → logprob: -10.03738784790039
    10. '   ' → logprob: -11.03738784790039

Token 816: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20865361392498016
    2. ' *' → logprob: -1.7086535692214966
    3. '=' → logprob: -5.333653450012207
    4. ' =' → logprob: -6.958653450012207
    5. '*i' → logprob: -7.833653450012207
    6. '*(' → logprob: -8.083653450012207
    7. '   ' → logprob: -8.458653450012207
    8. '[i' → logprob: -8.583653450012207
    9. 'fact' → logprob: -9.583653450012207
    10. '#' → logprob: -9.833653450012207

Token 817: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.8908587662735954e-05
    2. '(' → logprob: -11.875019073486328
    3. ' (' → logprob: -11.875019073486328
    4. '((' → logprob: -12.500019073486328
    5. '(ii' → logprob: -14.375019073486328
    6. '(inv' → logprob: -15.375019073486328
    7. '(in' → logprob: -15.875019073486328
    8. '[i' → logprob: -16.625019073486328
    9. '(I' → logprob: -16.875019073486328
    10. '(int' → logprob: -17.375019073486328

Token 818: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14287656545639038
    2. '(i' → logprob: -2.017876625061035
    3. ' i' → logprob: -9.267876625061035
    4. ' (' → logprob: -9.642876625061035
    5. '[i' → logprob: -10.892876625061035
    6. '{i' → logprob: -11.267876625061035
    7. '(' → logprob: -12.142876625061035
    8. '   ' → logprob: -12.892876625061035
    9. '	i' → logprob: -13.642876625061035
    10. ',i' → logprob: -15.017876625061035

Token 819: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023095356300473213
    2. ' +' → logprob: -8.37523078918457
    3. '+i' → logprob: -15.75023078918457
    4. '+
' → logprob: -15.87523078918457
    5. '1' → logprob: -16.12523078918457
    6. '
' → logprob: -18.50023078918457
    7. '```' → logprob: -19.12523078918457
    8. '＋' → logprob: -19.25023078918457
    9. 's' → logprob: -19.50023078918457
    10. '   ' → logprob: -19.87523078918457

Token 820: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '+' → logprob: -17.125
    4. '```' → logprob: -18.5
    5. '১' → logprob: -19.75
    6. '۱' → logprob: -20.125
    7. '१' → logprob: -20.5
    8. '   ' → logprob: -20.75
    9. '１' → logprob: -21.125
    10. '2' → logprob: -21.125

Token 821: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004911953583359718
    2. ')%' → logprob: -7.875491142272949
    3. '[i' → logprob: -9.37549114227295
    4. '   ' → logprob: -11.37549114227295
    5. ' )' → logprob: -11.62549114227295
    6. '%' → logprob: -12.75049114227295
    7. '%i' → logprob: -14.00049114227295
    8. '[' → logprob: -14.87549114227295
    9. ']' → logprob: -14.87549114227295
    10. ')
' → logprob: -15.37549114227295

Token 822: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6971917152404785
    2. ' %' → logprob: -0.6971917152404785
    3. ')' → logprob: -6.1971917152404785
    4. '%i' → logprob: -6.8221917152404785
    5. '   ' → logprob: -8.07219123840332
    6. ')%' → logprob: -8.82219123840332
    7. '[i' → logprob: -8.82219123840332
    8. ' *' → logprob: -9.69719123840332
    9. '*' → logprob: -9.82219123840332
    10. '%d' → logprob: -10.69719123840332

Token 823: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.7697225252486533e-06
    2. ' MOD' → logprob: -12.500003814697266
    3. '_MOD' → logprob: -18.500003814697266
    4. '.MOD' → logprob: -19.625003814697266
    5. 'MO' → logprob: -20.750003814697266
    6. 'mod' → logprob: -21.750003814697266
    7. '   ' → logprob: -21.875003814697266
    8. 'M' → logprob: -21.875003814697266
    9. 'MODULE' → logprob: -21.875003814697266
    10. 'MD' → logprob: -22.375003814697266

Token 824: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1272265762090683
    2. 'inv' → logprob: -2.1272265911102295
    3. '```' → logprob: -9.002226829528809
    4. ' inv' → logprob: -9.502226829528809
    5. '(inv' → logprob: -9.877226829528809
    6. '
' → logprob: -10.252226829528809
    7. '=' → logprob: -12.127226829528809
    8. ' =' → logprob: -13.002226829528809
    9. '  ' → logprob: -13.377226829528809
    10. '_inv' → logprob: -13.752226829528809

Token 825: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6936237812042236
    2. 'inv' → logprob: -0.6936237812042236
    3. ' inv' → logprob: -7.6936235427856445
    4. '  ' → logprob: -11.443623542785645
    5. '(inv' → logprob: -12.068623542785645
    6. ' ' → logprob: -12.818623542785645
    7. '```' → logprob: -14.568623542785645
    8. '    ' → logprob: -14.818623542785645
    9. '       ' → logprob: -15.693623542785645
    10. '`' → logprob: -16.06862449645996

Token 826: ' qui' (ID: 2780)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.46577754616737366
    2. 'qui' → logprob: -1.4657775163650513
    3. 'n' → logprob: -2.215777635574341
    4. '=' → logprob: -4.215777397155762
    5. ' qui' → logprob: -5.590777397155762
    6. 'fait' → logprob: -5.965777397155762
    7. '#' → logprob: -6.090777397155762
    8. '```' → logprob: -6.465777397155762
    9. ' fact' → logprob: -6.590777397155762
    10. 's' → logprob: -6.840777397155762

Token 827: ' se' (ID: 458)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.15762470662593842
    2. '=' → logprob: -2.6576247215270996
    3. 'fact' → logprob: -3.2826247215270996
    4. ':' → logprob: -4.2826247215271
    5. ')' → logprob: -5.9076247215271
    6. ' =' → logprob: -5.9076247215271
    7. '   ' → logprob: -6.1576247215271
    8. 'ains' → logprob: -6.7826247215271
    9. '*=' → logprob: -6.7826247215271
    10. 'n' → logprob: -6.7826247215271

Token 828: ' base' (ID: 3611)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.23925462365150452
    2. 'cal' → logprob: -2.9892547130584717
    3. 'continue' → logprob: -3.3642547130584717
    4. 'f' → logprob: -3.4892547130584717
    5. 'calcul' → logprob: -3.6142547130584717
    6. '#' → logprob: -3.9892547130584717
    7. 'calculate' → logprob: -4.989254474639893
    8. 'calc' → logprob: -5.114254474639893
    9. 'p' → logprob: -5.489254474639893
    10. 'app' → logprob: -5.614254474639893

Token 829: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.07888692617416382
    2. ' sur' → logprob: -2.7038869857788086
    3. '=' → logprob: -5.078886985778809
    4. 'on' → logprob: -7.203886985778809
    5. 'fact' → logprob: -7.328886985778809
    6. '#' → logprob: -7.578886985778809
    7. '_sur' → logprob: -8.703886985778809
    8. ' =' → logprob: -8.953886985778809
    9. '   ' → logprob: -9.203886985778809
    10. ' on' → logprob: -9.328886985778809

Token 830: ' les' (ID: 1341)
  Prédit: '(inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(inv' → logprob: -0.7243077158927917
    2. 'inv' → logprob: -1.3493077754974365
    3. 'l' → logprob: -1.7243077754974365
    4. 'la' → logprob: -3.4743077754974365
    5. 'fact' → logprob: -3.7243077754974365
    6. '(' → logprob: -4.349307537078857
    7. '(l' → logprob: -5.849307537078857
    8. '#' → logprob: -6.599307537078857
    9. ' (' → logprob: -6.599307537078857
    10. '(in' → logprob: -6.849307537078857

Token 831: ' propriétés' (ID: 134557)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.7593846321105957
    2. '(inv' → logprob: -1.3843846321105957
    3. 'fact' → logprob: -1.3843846321105957
    4. '(in' → logprob: -4.009384632110596
    5. '(' → logprob: -5.134384632110596
    6. '(i' → logprob: -6.134384632110596
    7. 'fait' → logprob: -6.634384632110596
    8. 'princip' → logprob: -7.259384632110596
    9. '#' → logprob: -7.384384632110596
    10. '```' → logprob: -8.009384155273438

Token 832: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5999265909194946
    2. 'inv' → logprob: -1.3499265909194946
    3. 'math' → logprob: -2.474926471710205
    4. 'arith' → logprob: -3.724926471710205
    5. '```' → logprob: -4.099926471710205
    6. 'de' → logprob: -4.349926471710205
    7. 'mod' → logprob: -4.349926471710205
    8. '#' → logprob: -4.599926471710205
    9. '(inv' → logprob: -4.724926471710205
    10. 'fact' → logprob: -4.974926471710205

Token 833: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.25913330912590027
    2. 'e' → logprob: -1.7591333389282227
    3. ''une' → logprob: -3.8841333389282227
    4. ''ordre' → logprob: -5.509133338928223
    5. ''' → logprob: -5.634133338928223
    6. 'mod' → logprob: -5.759133338928223
    7. 'fact' → logprob: -6.009133338928223
    8. 'u' → logprob: -6.134133338928223
    9. ' modular' → logprob: -6.384133338928223
    10. ''ar' → logprob: -6.509133338928223

Token 834: 'vers' (ID: 3674)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6630442142486572
    2. 'verse' → logprob: -0.9130442142486572
    3. 'vers' → logprob: -2.6630442142486572
    4. 'version' → logprob: -4.413043975830078
    5. 'vé' → logprob: -7.788043975830078
    6. 'versions' → logprob: -8.913043975830078
    7. 'ter' → logprob: -9.038043975830078
    8. 'vr' → logprob: -9.163043975830078
    9. '[' → logprob: -9.413043975830078
    10. 'ver' → logprob: -9.413043975830078

Token 835: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.009524091146886349
    2. 'es' → logprob: -5.009523868560791
    3. 'multip' → logprob: -6.634523868560791
    4. 'ité' → logprob: -8.25952434539795
    5. 'verse' → logprob: -8.25952434539795
    6. 'se' → logprob: -8.63452434539795
    7. 'é' → logprob: -8.88452434539795
    8. 'te' → logprob: -9.63452434539795
    9. 'inv' → logprob: -9.63452434539795
    10. '
' → logprob: -9.75952434539795

Token 836: ' modul' (ID: 90807)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6512175798416138
    2. 'inv' → logprob: -1.0262175798416138
    3. 'fact' → logprob: -2.776217460632324
    4. '(inv' → logprob: -3.901217460632324
    5. '[i' → logprob: -4.026217460632324
    6. '[' → logprob: -5.151217460632324
    7. '.' → logprob: -6.026217460632324
    8. '```' → logprob: -6.026217460632324
    9. 'multip' → logprob: -6.151217460632324
    10. '_inv' → logprob: -6.151217460632324

Token 837: 'aires' (ID: 8507)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.6045055389404297
    2. 'aires' → logprob: -1.3545055389404297
    3. 'aire' → logprob: -1.9795055389404297
    4. 'e' → logprob: -3.3545055389404297
    5. '```' → logprob: -4.97950553894043
    6. '#' → logprob: -5.35450553894043
    7. 'é' → logprob: -6.22950553894043
    8. 'a' → logprob: -6.35450553894043
    9. 'air' → logprob: -6.97950553894043
    10. 'os' → logprob: -7.22950553894043

Token 838: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.694249153137207
    2. 'inv' → logprob: -0.694249153137207
    3. '(inv' → logprob: -7.569249153137207
    4. '```' → logprob: -7.819249153137207
    5. ' inv' → logprob: -8.944249153137207
    6. ':' → logprob: -10.569249153137207
    7. '_inv' → logprob: -11.819249153137207
    8. '  ' → logprob: -12.194249153137207
    9. '.inv' → logprob: -12.694249153137207
    10. ' ' → logprob: -13.319249153137207

Token 839: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3883981704711914
    2. 'inv' → logprob: -1.1383981704711914
    3. ' inv' → logprob: -7.013398170471191
    4. '```' → logprob: -7.513398170471191
    5. '(inv' → logprob: -10.138398170471191
    6. '`' → logprob: -11.513398170471191
    7. '``' → logprob: -11.763398170471191
    8. '  ' → logprob: -12.638398170471191
    9. '    
' → logprob: -12.638398170471191
    10. '
' → logprob: -12.763398170471191

Token 840: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.0005532711511477828
    2. '   ' → logprob: -7.500553131103516
    3. ' inv' → logprob: -15.250553131103516
    4. '```' → logprob: -16.875553131103516
    5. '(inv' → logprob: -18.750553131103516
    6. '  ' → logprob: -18.875553131103516
    7. '
' → logprob: -20.000553131103516
    8. ' ' → logprob: -20.875553131103516
    9. '_inv' → logprob: -21.250553131103516
    10. 'inf' → logprob: -21.250553131103516

Token 841: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -3.128163257315464e-07
    2. '_fact' → logprob: -16.0
    3. ' fact' → logprob: -16.25
    4. 'f' → logprob: -18.625
    5. 'fac' → logprob: -19.0
    6. '[i' → logprob: -20.375
    7. 'ifact' → logprob: -20.5
    8. 'fait' → logprob: -20.625
    9. '.fact' → logprob: -20.625
    10. '```' → logprob: -21.25

Token 842: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -12.500003814697266
    3. '\[' → logprob: -15.875003814697266
    4. '[I' → logprob: -16.125003814697266
    5. '```' → logprob: -17.000003814697266
    6. '[j' → logprob: -17.625003814697266
    7. 'i' → logprob: -18.375003814697266
    8. '=' → logprob: -18.375003814697266
    9. '[int' → logprob: -18.375003814697266
    10. '[
' → logprob: -18.750003814697266

Token 843: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4749282896518707
    2. ']' → logprob: -0.9749282598495483
    3. ']=' → logprob: -7.099928379058838
    4. ' =' → logprob: -10.72492790222168
    5. ']=(' → logprob: -13.22492790222168
    6. ')' → logprob: -14.09992790222168
    7. '(' → logprob: -14.84992790222168
    8. '[' → logprob: -15.22492790222168
    9. '=
' → logprob: -15.97492790222168
    10. '=

' → logprob: -15.97492790222168

Token 844: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1472419600977446e-06
    2. ' =' → logprob: -13.750000953674316
    3. '=(' → logprob: -18.500001907348633
    4. '=
' → logprob: -20.375001907348633
    5. '=

' → logprob: -21.500001907348633
    6. '＝' → logprob: -22.375001907348633
    7. '=}' → logprob: -23.000001907348633
    8. '=f' → logprob: -23.125001907348633
    9. '=((' → logprob: -24.250001907348633
    10. '=int' → logprob: -24.375001907348633

Token 845: ' inv' (ID: 1827)
  Prédit: '(inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(inv' → logprob: -0.00028505371301434934
    2. '(in' → logprob: -8.375285148620605
    3. ' (' → logprob: -10.500285148620605
    4. 'inv' → logprob: -10.750285148620605
    5. '(' → logprob: -13.000285148620605
    6. '(i' → logprob: -14.500285148620605
    7. '(iv' → logprob: -14.625285148620605
    8. '(ans' → logprob: -15.125285148620605
    9. '((' → logprob: -15.125285148620605
    10. '   ' → logprob: -15.375285148620605

Token 846: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -5.512236498361744e-07
    2. '[i' → logprob: -16.25
    3. 'fac' → logprob: -16.375
    4. ' fact' → logprob: -16.5
    5. 'inv' → logprob: -16.625
    6. '_fact' → logprob: -18.375
    7. 'f' → logprob: -18.75
    8. '[' → logprob: -19.0
    9. 'ifact' → logprob: -20.25
    10. 'fait' → logprob: -20.375

Token 847: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.75
    3. 'i' → logprob: -17.75
    4. '[I' → logprob: -18.625
    5. '{i' → logprob: -19.0
    6. '[
' → logprob: -20.125
    7. '```' → logprob: -20.375
    8. '[j' → logprob: -20.5
    9. ' [' → logprob: -20.5
    10. '(i' → logprob: -20.875

Token 848: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006966020446270704
    2. '[i' → logprob: -5.0069661140441895
    3. '[' → logprob: -9.006965637207031
    4. '+i' → logprob: -9.381965637207031
    5. 'i' → logprob: -10.756965637207031
    6. ' +' → logprob: -10.756965637207031
    7. '1' → logprob: -14.631965637207031
    8. '+[' → logprob: -15.006965637207031
    9. '   ' → logprob: -16.00696563720703
    10. ']+' → logprob: -16.63196563720703

Token 849: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. '+' → logprob: -12.000009536743164
    3. ' ' → logprob: -12.875009536743164
    4. '   ' → logprob: -15.750009536743164
    5. '```' → logprob: -16.375009536743164
    6. '[' → logprob: -17.625009536743164
    7. '  ' → logprob: -18.125009536743164
    8. '0' → logprob: -18.875009536743164
    9. '-' → logprob: -18.937509536743164
    10. ' +' → logprob: -19.000009536743164

Token 850: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0043779052793979645
    2. ' *' → logprob: -5.504377841949463
    3. '*(' → logprob: -8.129378318786621
    4. ' ' → logprob: -13.254378318786621
    5. '   ' → logprob: -13.629378318786621
    6. ' ' → logprob: -14.254378318786621
    7. '**' → logprob: -14.629378318786621
    8. '*
' → logprob: -15.254378318786621
    9. '*((' → logprob: -16.379377365112305
    10. '*i' → logprob: -16.754377365112305

Token 851: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0038620701525360346
    2. ' *' → logprob: -5.628861904144287
    3. '*(' → logprob: -8.253862380981445
    4. '**' → logprob: -14.878862380981445
    5. '*object' → logprob: -14.878862380981445
    6. '*i' → logprob: -15.128862380981445
    7. '   ' → logprob: -15.128862380981445
    8. ' ' → logprob: -16.128862380981445
    9. ' ' → logprob: -16.253862380981445
    10. '*((' → logprob: -16.628862380981445

Token 852: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0009176511666737497
    2. ' (' → logprob: -7.000917434692383
    3. '(' → logprob: -12.750917434692383
    4. '(ii' → logprob: -13.000917434692383
    5. '(I' → logprob: -15.125917434692383
    6. '(ind' → logprob: -15.875917434692383
    7. '[i' → logprob: -16.625917434692383
    8. '   ' → logprob: -16.750917434692383
    9. '(id' → logprob: -16.875917434692383
    10. '(in' → logprob: -17.000917434692383

Token 853: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.5928495486150496e-05
    2. ' (' → logprob: -11.875016212463379
    3. '(' → logprob: -12.375016212463379
    4. 'i' → logprob: -12.750016212463379
    5. '[i' → logprob: -13.375016212463379
    6. '{i' → logprob: -15.875016212463379
    7. '((' → logprob: -17.000015258789062
    8. '   ' → logprob: -17.625015258789062
    9. '(
' → logprob: -17.625015258789062
    10. '(ii' → logprob: -18.000015258789062

Token 854: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001239196863025427
    2. ' +' → logprob: -9.000123977661133
    3. '+i' → logprob: -15.250123977661133
    4. '+
' → logprob: -16.500123977661133
    5. '+[' → logprob: -16.625123977661133
    6. '[' → logprob: -17.375123977661133
    7. '＋' → logprob: -17.375123977661133
    8. '1' → logprob: -17.875123977661133
    9. '()+' → logprob: -18.750123977661133
    10. '```' → logprob: -18.875123977661133

Token 855: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. '2' → logprob: -12.500006675720215
    3. ' ' → logprob: -13.250006675720215
    4. '+' → logprob: -13.625006675720215
    5. '```' → logprob: -15.625006675720215
    6. '   ' → logprob: -18.00000762939453
    7. '  ' → logprob: -19.37500762939453
    8. '``' → logprob: -20.06250762939453
    9. '`' → logprob: -20.43750762939453
    10. '[' → logprob: -20.68750762939453

Token 856: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017803447553887963
    2. ')%' → logprob: -8.875178337097168
    3. '%' → logprob: -10.250178337097168
    4. ' )' → logprob: -13.625178337097168
    5. ' %' → logprob: -13.625178337097168
    6. '   ' → logprob: -15.625178337097168
    7. ']' → logprob: -16.25017738342285
    8. ')
' → logprob: -16.87517738342285
    9. '```' → logprob: -17.00017738342285
    10. '%)' → logprob: -17.50017738342285

Token 857: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.048594411462545395
    2. ' %' → logprob: -3.0485944747924805
    3. ')' → logprob: -12.04859447479248
    4. ')%' → logprob: -13.79859447479248
    5. '%i' → logprob: -17.548593521118164
    6. '```' → logprob: -17.923593521118164
    7. ' ' → logprob: -18.048593521118164
    8. ' %=' → logprob: -18.423593521118164
    9. '%B' → logprob: -18.548593521118164
    10. '%d' → logprob: -18.798593521118164

Token 858: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -15.75
    3. 'MO' → logprob: -21.25
    4. '_MOD' → logprob: -21.875
    5. 'MODE' → logprob: -23.75
    6. '.MOD' → logprob: -24.375
    7. 'MD' → logprob: -24.5
    8. '```' → logprob: -25.625
    9. 'Mod' → logprob: -26.5
    10. 'MODULE' → logprob: -26.625

Token 859: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 860: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2530229091644287
    2. '#' → logprob: -1.5030229091644287
    3. '```' → logprob: -7.128023147583008
    4. '<|end|>' → logprob: -8.253023147583008
    5. '
' → logprob: -11.128023147583008
    6. ')' → logprob: -11.628023147583008
    7. '``' → logprob: -12.628023147583008
    8. '...' → logprob: -14.503023147583008
    9. '<|end|>' → logprob: -14.503023147583008
    10. ']' → logprob: -14.878023147583008

Token 861: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02976299449801445
    2. '#' → logprob: -3.5297629833221436
    3. '
' → logprob: -11.404763221740723
    4. '```' → logprob: -13.779763221740723
    5. ' def' → logprob: -16.154762268066406
    6. 'from' → logprob: -17.154762268066406
    7. 'Def' → logprob: -17.279762268066406
    8. '
' → logprob: -17.904762268066406
    9. '``' → logprob: -18.029762268066406
    10. '`' → logprob: -18.404762268066406

Token 862: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0062656584195792675
    2. 'fin' → logprob: -5.381265640258789
    3. 'def' → logprob: -7.256265640258789
    4. 'fn' → logprob: -7.381265640258789
    5. '#' → logprob: -8.131265640258789
    6. '```' → logprob: -11.506265640258789
    7. 'finite' → logprob: -13.006265640258789
    8. 'fi' → logprob: -13.381265640258789
    9. 'ef' → logprob: -13.381265640258789
    10. 'fc' → logprob: -13.756265640258789

Token 863: 'ition' (ID: 868)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6987445950508118
    2. 'def' → logprob: -0.6987445950508118
    3. '#' → logprob: -5.448744773864746
    4. 'ition' → logprob: -7.073744773864746
    5. 'inition' → logprob: -8.698744773864746
    6. 'ff' → logprob: -9.323744773864746
    7. 'fin' → logprob: -10.073744773864746
    8. ' def' → logprob: -10.698744773864746
    9. '```' → logprob: -11.073744773864746
    10. 'fe' → logprob: -11.073744773864746

Token 864: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005564896273426712
    2. '#' → logprob: -7.500556468963623
    3. 'de' → logprob: -14.000556945800781
    4. ' def' → logprob: -14.250556945800781
    5. ']' → logprob: -14.375556945800781
    6. ':' → logprob: -14.750556945800781
    7. '```' → logprob: -15.000556945800781
    8. ')' → logprob: -15.125556945800781
    9. 'of' → logprob: -16.25055694580078
    10. '=' → logprob: -16.75055694580078

Token 865: ''une' (ID: 13337)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.016025451943278313
    2. 'def' → logprob: -4.516025543212891
    3. '#' → logprob: -5.891025543212891
    4. 'e' → logprob: -6.516025543212891
    5. 'éf' → logprob: -7.891025543212891
    6. ''une' → logprob: -8.39102554321289
    7. 'efined' → logprob: -10.89102554321289
    8. 'une' → logprob: -11.01602554321289
    9. '```' → logprob: -11.01602554321289
    10. 'eff' → logprob: -11.51602554321289

Token 866: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04751313477754593
    2. '#' → logprob: -3.422513246536255
    3. 'fonction' → logprob: -4.297513008117676
    4. 'function' → logprob: -8.922513008117676
    5. 'dé' → logprob: -10.922513008117676
    6. '```' → logprob: -11.922513008117676
    7. '...' → logprob: -13.422513008117676
    8. '**' → logprob: -13.922513008117676
    9. ' #' → logprob: -14.047513008117676
    10. '"""' → logprob: -14.172513008117676

Token 867: ' util' (ID: 3667)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.3438327843905427e-05
    2. '```' → logprob: -11.62502384185791
    3. ' def' → logprob: -12.12502384185791
    4. '#' → logprob: -12.37502384185791
    5. 'de' → logprob: -13.25002384185791
    6. '
' → logprob: -14.12502384185791
    7. ':def' → logprob: -14.50002384185791
    8. ':' → logprob: -15.12502384185791
    9. '(' → logprob: -15.25002384185791
    10. '(def' → logprob: -15.25002384185791

Token 868: 'itaire' (ID: 28335)
  Prédit: 'itaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itaire' → logprob: -0.16097721457481384
    2. 'def' → logprob: -1.9109772443771362
    3. '#' → logprob: -7.660977363586426
    4. '```' → logprob: -10.035977363586426
    5. 'ité' → logprob: -10.160977363586426
    6. 'ile' → logprob: -10.410977363586426
    7. 'itaires' → logprob: -10.660977363586426
    8. 'isée' → logprob: -11.035977363586426
    9. 'ilise' → logprob: -11.035977363586426
    10. ' def' → logprob: -11.160977363586426

Token 869: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.845798710244708e-05
    2. '```' → logprob: -11.500038146972656
    3. ':def' → logprob: -12.125038146972656
    4. ' def' → logprob: -12.250038146972656
    5. '<|end|>' → logprob: -12.375038146972656
    6. '#' → logprob: -12.500038146972656
    7. '(def' → logprob: -12.500038146972656
    8. ':' → logprob: -13.125038146972656
    9. 'de' → logprob: -13.625038146972656
    10. '
' → logprob: -14.375038146972656

Token 870: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.00022046364028938115
    2. ' calcul' → logprob: -9.37522029876709
    3. 'cal' → logprob: -9.50022029876709
    4. 'comb' → logprob: -10.75022029876709
    5. 'calc' → logprob: -10.87522029876709
    6. 'Calcul' → logprob: -11.87522029876709
    7. 'comput' → logprob: -12.25022029876709
    8. '```' → logprob: -12.62522029876709
    9. '#' → logprob: -13.25022029876709
    10. 'calculate' → logprob: -14.00022029876709

Token 871: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00012511172099038959
    2. '#' → logprob: -10.37512493133545
    3. 'def' → logprob: -10.37512493133545
    4. 'uer' → logprob: -10.87512493133545
    5. 'com' → logprob: -11.25012493133545
    6. 'uler' → logprob: -11.75012493133545
    7. 'rer' → logprob: -11.87512493133545
    8. 'ler' → logprob: -12.25012493133545
    9. 'e' → logprob: -13.25012493133545
    10. 'r' → logprob: -13.37512493133545

Token 872: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.024011343717575073
    2. 'n' → logprob: -4.149011135101318
    3. 'def' → logprob: -5.399011135101318
    4. '```' → logprob: -6.399011135101318
    5. 'comb' → logprob: -7.274011135101318
    6. 'C' → logprob: -8.274011611938477
    7. '(n' → logprob: -8.774011611938477
    8. 'les' → logprob: -8.774011611938477
    9. 'le' → logprob: -8.774011611938477
    10. ' la' → logprob: -8.774011611938477

Token 873: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13151027262210846
    2. 'comb' → logprob: -3.5065102577209473
    3. 'e' → logprob: -3.6315102577209473
    4. '_comb' → logprob: -4.256510257720947
    5. ' combinaison' → logprob: -4.881510257720947
    6. '(n' → logprob: -5.131510257720947
    7. 'C' → logprob: -5.256510257720947
    8. ' comb' → logprob: -5.256510257720947
    9. 'n' → logprob: -5.381510257720947
    10. 'ombre' → logprob: -5.881510257720947

Token 874: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.35827356576919556
    2. 'def' → logprob: -2.858273506164551
    3. 'comb' → logprob: -3.233273506164551
    4. 'é' → logprob: -3.358273506164551
    5. 'v' → logprob: -3.358273506164551
    6. 'aire' → logprob: -3.858273506164551
    7. '```' → logprob: -4.108273506164551
    8. '_comb' → logprob: -4.233273506164551
    9. '#' → logprob: -4.358273506164551
    10. 'n' → logprob: -4.858273506164551

Token 875: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007400614558719099
    2. 'mod' → logprob: -7.250740051269531
    3. 'multip' → logprob: -11.000740051269531
    4. '#' → logprob: -12.500740051269531
    5. '_mod' → logprob: -13.000740051269531
    6. 'de' → logprob: -13.250740051269531
    7. '```' → logprob: -13.625740051269531
    8. '_' → logprob: -14.125740051269531
    9. ' def' → logprob: -14.250740051269531
    10. 'mul' → logprob: -14.375740051269531

Token 876: ''un' (ID: 9788)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16366221010684967
    2. 'un' → logprob: -2.0386621952056885
    3. ''un' → logprob: -4.038662433624268
    4. 'x' → logprob: -7.538662433624268
    5. '(a' → logprob: -7.538662433624268
    6. 'n' → logprob: -7.538662433624268
    7. 'u' → logprob: -7.913662433624268
    8. 'une' → logprob: -8.16366195678711
    9. ''une' → logprob: -8.41366195678711
    10. 'mod' → logprob: -9.41366195678711

Token 877: ' nombre' (ID: 9733)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.47603175044059753
    2. 'nombre' → logprob: -0.9760317802429199
    3. 'num' → logprob: -7.47603178024292
    4. 'élé' → logprob: -8.226031303405762
    5. ' entier' → logprob: -8.351031303405762
    6. '```' → logprob: -8.476031303405762
    7. 'int' → logprob: -8.976031303405762
    8. 'number' → logprob: -8.976031303405762
    9. 'x' → logprob: -9.226031303405762
    10. '#' → logprob: -9.351031303405762

Token 878: ' modulo' (ID: 112372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.816093228830141e-06
    2. '_mod' → logprob: -14.37500286102295
    3. '#' → logprob: -14.50000286102295
    4. 'mod' → logprob: -14.87500286102295
    5. '(' → logprob: -15.00000286102295
    6. '(
' → logprob: -15.12500286102295
    7. '_def' → logprob: -15.50000286102295
    8. '```' → logprob: -15.75000286102295
    9. ' def' → logprob: -16.250001907348633
    10. '`' → logprob: -17.000001907348633

Token 879: ' MOD' (ID: 32868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03377433121204376
    2. 'MOD' → logprob: -3.4087743759155273
    3. '```' → logprob: -9.283774375915527
    4. 'mod' → logprob: -11.533774375915527
    5. '#' → logprob: -11.908774375915527
    6. ' def' → logprob: -12.158774375915527
    7. ' MOD' → logprob: -12.783774375915527
    8. '``' → logprob: -13.283774375915527
    9. '`' → logprob: -13.283774375915527
    10. '
' → logprob: -13.408774375915527

Token 880: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -14.125000953674316
    3. ' def' → logprob: -15.375000953674316
    4. '```' → logprob: -15.875000953674316
    5. ':def' → logprob: -18.125001907348633
    6. '@' → logprob: -18.125001907348633
    7. '``' → logprob: -19.500001907348633
    8. '`' → logprob: -19.750001907348633
    9. '(def' → logprob: -20.375001907348633
    10. '_def' → logprob: -20.625001907348633

Token 881: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.250000953674316
    3. '```' → logprob: -15.250000953674316
    4. ' def' → logprob: -18.625
    5. '``' → logprob: -20.5
    6. '@' → logprob: -20.75
    7. ':def' → logprob: -20.875
    8. '#' → logprob: -22.25
    9. '`' → logprob: -22.375
    10. 'ndef' → logprob: -22.5

Token 882: ' inv' (ID: 1827)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2015107125043869
    2. 'inv' → logprob: -1.7015106678009033
    3. 'inverse' → logprob: -9.451510429382324
    4. 'pow' → logprob: -11.201510429382324
    5. ' mod' → logprob: -12.951510429382324
    6. 'invert' → logprob: -13.201510429382324
    7. ' inv' → logprob: -15.451510429382324
    8. 'in' → logprob: -15.576510429382324
    9. '_mod' → logprob: -15.951510429382324
    10. 'm' → logprob: -16.20151138305664

Token 883: '(n' (ID: 2406)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.45978695154190063
    2. '(a' → logprob: -1.2097868919372559
    3. '(n' → logprob: -2.709786891937256
    4. 'a' → logprob: -6.334786891937256
    5. '(' → logprob: -6.709786891937256
    6. '(num' → logprob: -8.084787368774414
    7. 'def' → logprob: -8.209787368774414
    8. 'mod' → logprob: -9.959787368774414
    9. 'num' → logprob: -10.459787368774414
    10. '(i' → logprob: -10.709787368774414

Token 884: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008391655283048749
    2. '):
' → logprob: -7.3758392333984375
    3. ':' → logprob: -9.000839233398438
    4. ')' → logprob: -9.375839233398438
    5. '):
' → logprob: -13.250839233398438
    6. ' ):' → logprob: -13.875839233398438
    7. '(n' → logprob: -14.125839233398438
    8. 'n' → logprob: -15.375839233398438
    9. '}:' → logprob: -15.875839233398438
    10. '):

' → logprob: -16.125839233398438

Token 885: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022691501304507256
    2. '   ' → logprob: -3.897691488265991
    3. ':return' → logprob: -6.89769172668457
    4. 'return' → logprob: -7.39769172668457
    5. ' return' → logprob: -8.14769172668457
    6. ':
' → logprob: -8.77269172668457
    7. '):' → logprob: -10.89769172668457
    8. '	return' → logprob: -10.89769172668457
    9. '.' → logprob: -11.27269172668457
    10. ')' → logprob: -11.52269172668457

Token 886: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008682413026690483
    2. '   ' → logprob: -4.7586822509765625
    3. ' return' → logprob: -9.758682250976562
    4. '	return' → logprob: -11.508682250976562
    5. '{return' → logprob: -17.133682250976562
    6. ':return' → logprob: -18.508682250976562
    7. '```' → logprob: -18.883682250976562
    8. '#' (adapté à ' #') → logprob: -19.508682250976562
    9. '   ' → logprob: -19.508682250976562
    10. ' ' → logprob: -19.883682250976562

Token 887: ' Util' (ID: 13564)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -7.896309739408025e-07
    2. ' return' → logprob: -14.500000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '#' → logprob: -17.375
    5. '"""' → logprob: -17.375
    6. '	return' → logprob: -18.375
    7. '```' → logprob: -19.625
    8. 'Return' → logprob: -20.75
    9. '
' → logprob: -21.375
    10. '{return' → logprob: -21.75

Token 888: 'ise' (ID: 1096)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5760371088981628
    2. 'def' → logprob: -1.2010371685028076
    3. '   ' → logprob: -2.7010371685028076
    4. '=' → logprob: -3.0760371685028076
    5. 'eturn' → logprob: -4.0760369300842285
    6. ' return' → logprob: -6.3260369300842285
    7. '	return' → logprob: -7.0760369300842285
    8. '```' → logprob: -7.2010369300842285
    9. ':return' → logprob: -7.3260369300842285
    10. ' =' → logprob: -7.4510369300842285

Token 889: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.2233183042553719e-05
    2. ' pow' → logprob: -11.625012397766113
    3. '(pow' → logprob: -13.000012397766113
    4. '   ' → logprob: -14.625012397766113
    5. 'return' → logprob: -14.750012397766113
    6. 'def' → logprob: -17.125011444091797
    7. '_pow' → logprob: -17.875011444091797
    8. '.pow' → logprob: -18.250011444091797
    9. '```' → logprob: -19.000011444091797
    10. 'Pow' → logprob: -19.000011444091797

Token 890: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006726737599819899
    2. '(' → logprob: -5.0067267417907715
    3. 'def' → logprob: -12.256726264953613
    4. 'n' → logprob: -12.631726264953613
    5. '(pow' → logprob: -13.131726264953613
    6. 'return' → logprob: -13.881726264953613
    7. '(
' → logprob: -15.506726264953613
    8. '(return' → logprob: -16.88172721862793
    9. 'pow' → logprob: -17.13172721862793
    10. ')' → logprob: -17.50672721862793

Token 891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. ' ,' → logprob: -11.000031471252441
    3. ',
' → logprob: -12.125031471252441
    4. ',n' → logprob: -12.375031471252441
    5. ')' → logprob: -13.250031471252441
    6. '(n' → logprob: -13.750031471252441
    7. 'def' → logprob: -13.875031471252441
    8. '   ' → logprob: -14.750031471252441
    9. '(' → logprob: -15.125031471252441
    10. '),' → logprob: -16.125032424926758

Token 892: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.0325924449716695e-05
    2. ' MOD' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.500009536743164
    4. '.MOD' → logprob: -17.250009536743164
    5. '(M' → logprob: -17.500009536743164
    6. '_MOD' → logprob: -18.250009536743164
    7. 'MO' → logprob: -20.250009536743164
    8. '
' → logprob: -20.250009536743164
    9. '-' → logprob: -20.375009536743164
    10. '-M' → logprob: -20.625009536743164

Token 893: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.15310683415737e-05
    2. ' -' → logprob: -10.750021934509277
    3. '−' → logprob: -21.00002098083496
    4. '```' → logprob: -21.25002098083496
    5. '–' → logprob: -22.87502098083496
    6. '()-' → logprob: -23.00002098083496
    7. '{-' → logprob: -23.37502098083496
    8. '2' → logprob: -23.75002098083496
    9. '   ' → logprob: -24.00002098083496
    10. ')' → logprob: -24.62502098083496

Token 894: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. '-' → logprob: -11.875008583068848
    3. ' ' → logprob: -13.875008583068848
    4. '```' → logprob: -16.25000762939453
    5. '<|end|>' → logprob: -16.37500762939453
    6. '۲' → logprob: -16.62500762939453
    7. ' -' → logprob: -17.50000762939453
    8. '   ' → logprob: -17.75000762939453
    9. '  ' → logprob: -18.43750762939453
    10. '২' → logprob: -18.56250762939453

Token 895: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7610454708337784e-05
    2. ' ,' → logprob: -11.125027656555176
    3. ')' → logprob: -11.375027656555176
    4. '   ' → logprob: -13.750027656555176
    5. '```' → logprob: -16.87502670288086
    6. 'MOD' → logprob: -17.12502670288086
    7. ',
' → logprob: -17.50002670288086
    8. 'mod' → logprob: -18.12502670288086
    9. '	' → logprob: -18.12502670288086
    10. 'def' → logprob: -18.75002670288086

Token 896: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10020699352025986
    2. ' MOD' → logprob: -2.3502070903778076
    3. '_MOD' → logprob: -14.975207328796387
    4. '.MOD' → logprob: -17.22520637512207
    5. '   ' → logprob: -18.22520637512207
    6. ' ' → logprob: -18.60020637512207
    7. ')' → logprob: -18.72520637512207
    8. 'Mod' → logprob: -19.22520637512207
    9. 'MO' → logprob: -19.85020637512207
    10. 'mod' → logprob: -19.85020637512207

Token 897: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -14.000001907348633
    3. '):' → logprob: -14.250001907348633
    4. '   ' → logprob: -15.375001907348633
    5. ' )' → logprob: -16.000001907348633
    6. ')return' → logprob: -16.625001907348633
    7. '),' → logprob: -17.500001907348633
    8. ')`' → logprob: -17.875001907348633
    9. ')#' → logprob: -18.125001907348633
    10. 'def' → logprob: -18.500001907348633

Token 898: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011034619063138962
    2. ':' → logprob: -5.3860344886779785
    3. ' return' → logprob: -5.8860344886779785
    4. ')' → logprob: -6.3860344886779785
    5. 'return' → logprob: -7.1360344886779785
    6. '	return' → logprob: -8.136034965515137
    7. ':return' → logprob: -8.136034965515137
    8. '):' → logprob: -8.886034965515137
    9. '  ' → logprob: -9.136034965515137
    10. '<|end|>' → logprob: -9.636034965515137

Token 899: ' obtenir' (ID: 54423)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.09933739900588989
    2. ' pow' → logprob: -2.599337339401245
    3. 'return' → logprob: -4.349337577819824
    4. ' return' → logprob: -5.599337577819824
    5. ' obtenir' → logprob: -6.474337577819824
    6. ' retourner' → logprob: -6.724337577819824
    7. 'calcul' → logprob: -7.974337577819824
    8. ' calcul' → logprob: -9.224337577819824
    9. '...' → logprob: -10.099337577819824
    10. '(pow' → logprob: -10.099337577819824

Token 900: ' l' (ID: 305)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0012655939208343625
    2. 'n' → logprob: -7.126265525817871
    3. ' pow' → logprob: -8.501265525817871
    4. '(pow' → logprob: -9.001265525817871
    5. '(n' → logprob: -9.251265525817871
    6. 'return' → logprob: -10.626265525817871
    7. 'inv' → logprob: -12.626265525817871
    8. ')' → logprob: -12.876265525817871
    9. 'inverse' → logprob: -13.126265525817871
    10. ' n' → logprob: -13.501265525817871

Token 901: ''in' (ID: 17942)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6932986974716187
    2. ')' → logprob: -0.8182986974716187
    3. 'n' → logprob: -3.193298816680908
    4. '(' → logprob: -5.568298816680908
    5. 'pow' → logprob: -5.568298816680908
    6. 'mod' → logprob: -5.568298816680908
    7. ')n' → logprob: -6.693298816680908
    8. ' modulo' → logprob: -6.818298816680908
    9. ' n' → logprob: -7.693298816680908
    10. 'eturn' → logprob: -7.818298816680908

Token 902: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -2.5107177862082608e-05
    2. 'v' → logprob: -11.000024795532227
    3. 'inverse' → logprob: -12.375024795532227
    4. 'VERSE' → logprob: -13.625024795532227
    5. '```' → logprob: -13.875024795532227
    6. 'vers' → logprob: -14.500024795532227
    7. '(n' → logprob: -15.500024795532227
    8. 'n' → logprob: -15.750024795532227
    9. '#' → logprob: -16.000024795532227
    10. 'versible' → logprob: -16.250024795532227

Token 903: ' multiplic' (ID: 67929)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.315936429426074e-05
    2. '(' → logprob: -9.500082969665527
    3. ')' → logprob: -12.250082969665527
    4. 'def' → logprob: -13.375082969665527
    5. 'return' → logprob: -14.375082969665527
    6. '```' → logprob: -14.375082969665527
    7. 'n' → logprob: -15.625082969665527
    8. ' (' → logprob: -15.750082969665527
    9. '   ' → logprob: -15.875082969665527
    10. '(
' → logprob: -16.625083923339844

Token 904: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.0002226093056378886
    2. 'ative' → logprob: -9.250222206115723
    3. 'itif' → logprob: -10.375222206115723
    4. 'def' → logprob: -10.500222206115723
    5. '```' → logprob: -10.500222206115723
    6. 'cat' → logprob: -11.750222206115723
    7. 'act' → logprob: -11.875222206115723
    8. 't' → logprob: -12.000222206115723
    9. 'l' → logprob: -13.000222206115723
    10. 'c' → logprob: -13.500222206115723

Token 905: ' modulo' (ID: 112372)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1610669195652008
    2. '   ' → logprob: -1.9110668897628784
    3. ')' → logprob: -8.286067008972168
    4. 'def' → logprob: -8.536067008972168
    5. '(' → logprob: -8.661067008972168
    6. ',' → logprob: -10.036067008972168
    7. ' ' → logprob: -10.161067008972168
    8. '%n' → logprob: -10.536067008972168
    9. '  ' → logprob: -11.161067008972168
    10. '[n' → logprob: -11.286067008972168

Token 906: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007226797170005739
    2. ' MOD' → logprob: -7.250722885131836
    3. '_MOD' → logprob: -12.250722885131836
    4. '   ' → logprob: -12.375722885131836
    5. '(M' → logprob: -13.125722885131836
    6. '.MOD' → logprob: -15.000722885131836
    7. '```' → logprob: -15.250722885131836
    8. '(' → logprob: -15.250722885131836
    9. ' ' → logprob: -15.750722885131836
    10. '(Mod' → logprob: -15.750722885131836

Token 907: ' grâce' (ID: 31589)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025135546922683716
    2. ')' → logprob: -3.7751355171203613
    3. '):' → logprob: -7.775135517120361
    4. ':' → logprob: -8.27513599395752
    5. 'return' → logprob: -8.52513599395752
    6. 'def' → logprob: -8.65013599395752
    7. ' return' → logprob: -8.65013599395752
    8. '	return' → logprob: -9.02513599395752
    9. '  ' → logprob: -9.27513599395752
    10. ',' → logprob: -9.27513599395752

Token 908: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.36266982555389404
    2. ' au' → logprob: -1.237669825553894
    3. 'à' → logprob: -4.487669944763184
    4. ' à' → logprob: -6.362669944763184
    5. '   ' → logprob: -7.987669944763184
    6. ' ' → logprob: -8.112669944763184
    7. ''au' → logprob: -8.362669944763184
    8. '#' → logprob: -8.737669944763184
    9. 'aux' → logprob: -10.737669944763184
    10. ''à' → logprob: -10.862669944763184

Token 909: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.000977671123109758
    2. 'pow' → logprob: -7.375977516174316
    3. '#' → logprob: -8.250977516174316
    4. 'Petit' → logprob: -10.000977516174316
    5. '```' → logprob: -11.000977516174316
    6. ' petit' → logprob: -11.250977516174316
    7. 'pu' → logprob: -12.625977516174316
    8. 'pe' → logprob: -12.875977516174316
    9. 'pt' → logprob: -13.125977516174316
    10. 'prin' → logprob: -14.125977516174316

Token 910: ' thé' (ID: 34740)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.04887552931904793
    2. ' thé' → logprob: -4.048875331878662
    3. 'te' → logprob: -4.173875331878662
    4. '<|end|>' → logprob: -5.298875331878662
    5. '```' → logprob: -5.548875331878662
    6. ' th' → logprob: -6.673875331878662
    7. '#' → logprob: -6.798875331878662
    8. '_' → logprob: -7.423875331878662
    9. 'the' → logprob: -7.548875331878662
    10. 'def' → logprob: -8.04887580871582

Token 911: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0008399999933317304
    2. 'r' → logprob: -8.250840187072754
    3. 'ore' → logprob: -8.250840187072754
    4. '#' → logprob: -9.000840187072754
    5. 'orem' → logprob: -9.625840187072754
    6. 'me' → logprob: -10.250840187072754
    7. 'orique' → logprob: -10.625840187072754
    8. 'rem' → logprob: -11.000840187072754
    9. 'orme' → logprob: -11.250840187072754
    10. 'ор' → logprob: -11.875840187072754

Token 912: 'ème' (ID: 9767)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.7303894758224487
    2. 'ème' → logprob: -1.3553894758224487
    3. 'me' → logprob: -1.6053894758224487
    4. 'm' → logprob: -2.9803895950317383
    5. '#' → logprob: -5.730389595031738
    6. 'mé' → logprob: -5.980389595031738
    7. 'ême' → logprob: -7.730389595031738
    8. 'ore' → logprob: -7.730389595031738
    9. '**' → logprob: -8.355389595031738
    10. 'orem' → logprob: -8.480389595031738

Token 913: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6511374711990356
    2. '(n' → logprob: -1.2761374711990356
    3. '()' → logprob: -2.276137351989746
    4. ')' → logprob: -3.276137351989746
    5. '```' → logprob: -3.526137351989746
    6. '`' → logprob: -4.526137351989746
    7. 'def' → logprob: -4.526137351989746
    8. '(' → logprob: -5.901137351989746
    9. ',' → logprob: -7.526137351989746
    10. ' ' → logprob: -7.651137351989746

Token 914: ' Ferm' (ID: 156422)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.032510630786418915
    2. 'Fer' → logprob: -3.90751051902771
    3. 'ferm' → logprob: -5.282510757446289
    4. 'fer' → logprob: -5.282510757446289
    5. 'FER' → logprob: -7.032510757446289
    6. 'Fen' → logprob: -8.407510757446289
    7. 'f' → logprob: -8.532510757446289
    8. ' Ferm' → logprob: -9.532510757446289
    9. 'Python' → logprob: -9.782510757446289
    10. 'MOD' → logprob: -10.032510757446289

Token 915: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.5892382860183716
    2. 'mat' → logprob: -0.8392382860183716
    3. 'rat' → logprob: -4.339238166809082
    4. 'm' → logprob: -9.589238166809082
    5. 'Mat' → logprob: -9.714238166809082
    6. '#' → logprob: -11.464238166809082
    7. 'ma' → logprob: -12.089238166809082
    8. 'hat' → logprob: -12.089238166809082
    9. 'math' → logprob: -13.214238166809082
    10. 'r' → logprob: -13.714238166809082

Token 916: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024897437542676926
    2. ')' → logprob: -4.024897575378418
    3. ':' → logprob: -5.774897575378418
    4. '):' → logprob: -6.399897575378418
    5. 'return' → logprob: -7.899897575378418
    6. '(n' → logprob: -8.024897575378418
    7. 'def' → logprob: -8.274897575378418
    8. '	return' → logprob: -8.399897575378418
    9. ' return' → logprob: -8.524897575378418
    10. ':return' → logprob: -9.274897575378418

Token 917: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008190384833142161
    2. ':' → logprob: -8.375819206237793
    3. ')' → logprob: -8.500819206237793
    4. 'return' → logprob: -8.625819206237793
    5. ' return' → logprob: -9.000819206237793
    6. '):' → logprob: -10.500819206237793
    7. '	return' → logprob: -10.625819206237793
    8. ':return' → logprob: -10.625819206237793
    9. '  ' → logprob: -14.125819206237793
    10. ':
' → logprob: -14.375819206237793

Token 918: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034383961465209723
    2. 'return' (adapté à ' return') → logprob: -6.253438472747803
    3. ' return' → logprob: -6.503438472747803
    4. '	return' → logprob: -11.503437995910645
    5. '   ' → logprob: -16.00343894958496
    6. '    ' → logprob: -16.37843894958496
    7. '       ' → logprob: -17.00343894958496
    8. '  ' → logprob: -17.50343894958496
    9. ':return' → logprob: -17.75343894958496
    10. ' ' → logprob: -18.25343894958496

Token 919: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -9.615255839889869e-05
    2. ' pow' → logprob: -9.250096321105957
    3. '(pow' → logprob: -17.12509536743164
    4. '_pow' → logprob: -19.75009536743164
    5. '.pow' → logprob: -21.25009536743164
    6. 'Pow' → logprob: -21.37509536743164
    7. 'pw' → logprob: -21.50009536743164
    8. 'p' → logprob: -21.62509536743164
    9. 'power' → logprob: -21.87509536743164
    10. '   ' → logprob: -22.00009536743164

Token 920: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04859213903546333
    2. '(' → logprob: -3.0485920906066895
    3. 'n' → logprob: -12.798592567443848
    4. '(
' → logprob: -13.298592567443848
    5. ' (' → logprob: -16.79859161376953
    6. ')n' → logprob: -17.17359161376953
    7. '<|end|>' → logprob: -17.42359161376953
    8. '(num' → logprob: -17.79859161376953
    9. '(

' → logprob: -17.92359161376953
    10. '(number' → logprob: -18.04859161376953

Token 921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1557283111615106e-05
    2. ' ,' → logprob: -10.500041961669922
    3. ',n' → logprob: -11.750041961669922
    4. ')' → logprob: -13.125041961669922
    5. ',
' → logprob: -13.500041961669922
    6. '`,' → logprob: -14.250041961669922
    7. 'n' → logprob: -14.375041961669922
    8. '(n' → logprob: -15.625041961669922
    9. '```' → logprob: -15.750041961669922
    10. ' ' → logprob: -15.875041961669922

Token 922: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.2729995988775045e-06
    2. ' MOD' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.5000057220459
    4. 'MO' → logprob: -20.3750057220459
    5. ' ' → logprob: -21.2500057220459
    6. '.MOD' → logprob: -21.3750057220459
    7. '_MOD' → logprob: -21.7500057220459
    8. 'MODE' → logprob: -22.2500057220459
    9. 'MD' → logprob: -23.6250057220459
    10. '  ' → logprob: -23.8750057220459

Token 923: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.547789674485102e-05
    2. ' -' → logprob: -10.250035285949707
    3. '−' → logprob: -20.250036239624023
    4. '   ' → logprob: -20.375036239624023
    5. '2' → logprob: -20.500036239624023
    6. '–' → logprob: -20.875036239624023
    7. '-
' → logprob: -20.875036239624023
    8. ' ' → logprob: -21.125036239624023
    9. ')' → logprob: -21.375036239624023
    10. ''-' → logprob: -21.750036239624023

Token 924: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '۲' → logprob: -19.25
    4. '２' → logprob: -20.125
    5. '२' → logprob: -21.0
    6. '২' → logprob: -21.125
    7. '٢' → logprob: -21.25
    8. '```' → logprob: -21.75
    9. '-' → logprob: -22.1875
    10. '' → logprob: -22.375

Token 925: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8325677703833207e-05
    2. ' ,' → logprob: -10.625028610229492
    3. ')' → logprob: -12.625028610229492
    4. '   ' → logprob: -15.250028610229492
    5. ',
' → logprob: -15.625028610229492
    6. 'MOD' → logprob: -15.875028610229492
    7. ',M' → logprob: -17.375028610229492
    8. '),' → logprob: -17.875028610229492
    9. '‌,' → logprob: -17.875028610229492
    10. '```' → logprob: -18.000028610229492

Token 926: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0040785204619169235
    2. ' MOD' → logprob: -5.504078388214111
    3. '_MOD' → logprob: -17.379077911376953
    4. '.MOD' → logprob: -18.129077911376953
    5. 'MO' → logprob: -18.504077911376953
    6. 'MODE' → logprob: -18.879077911376953
    7. ')' → logprob: -19.254077911376953
    8. '```' → logprob: -19.504077911376953
    9. 'mod' → logprob: -20.004077911376953
    10. '   ' → logprob: -20.129077911376953

Token 927: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -15.750001907348633
    4. ')

' → logprob: -16.875001907348633
    5. ')#' → logprob: -17.875001907348633
    6. '),' → logprob: -18.875001907348633
    7. ')
' → logprob: -19.000001907348633
    8. ')`' → logprob: -19.250001907348633
    9. '}' → logprob: -19.375001907348633
    10. ')return' → logprob: -19.750001907348633

Token 928: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 929: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019288709154352546
    2. '#' → logprob: -6.251928806304932
    3. '
' → logprob: -15.62692928314209
    4. '@' → logprob: -16.376928329467773
    5. ' def' → logprob: -17.001928329467773
    6. '```' → logprob: -17.251928329467773
    7. 'from' → logprob: -17.501928329467773
    8. '\' → logprob: -18.751928329467773
    9. 'import' → logprob: -19.501928329467773
    10. 'class' → logprob: -19.626928329467773

Token 930: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001389996730722487
    2. '#' → logprob: -6.626389980316162
    3. 'fin' → logprob: -9.87639045715332
    4. 'fn' → logprob: -12.25139045715332
    5. 'def' → logprob: -12.62639045715332
    6. 'ff' → logprob: -14.37639045715332
    7. 'ф' → logprob: -14.62639045715332
    8. '```' → logprob: -14.62639045715332
    9. 'finite' → logprob: -14.62639045715332
    10. '
' → logprob: -14.75139045715332

Token 931: 'ition' (ID: 868)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0298174899071455
    2. 'def' → logprob: -3.529817581176758
    3. '#' → logprob: -10.529817581176758
    4. ' def' → logprob: -10.779817581176758
    5. 'fine' → logprob: -12.404817581176758
    6. 'c' → logprob: -12.529817581176758
    7. 'fin' → logprob: -13.279817581176758
    8. 'ef' → logprob: -13.279817581176758
    9. '_f' → logprob: -13.529817581176758
    10. '```' → logprob: -13.654817581176758

Token 932: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006429764907807112
    2. '#' → logprob: -8.125642776489258
    3. ' def' → logprob: -8.375642776489258
    4. '(' → logprob: -9.250642776489258
    5. 'de' → logprob: -11.250642776489258
    6. '(
' → logprob: -13.000642776489258
    7. ')' → logprob: -13.250642776489258
    8. ' de' → logprob: -13.750642776489258
    9. '(def' → logprob: -13.875642776489258
    10. 'd' → logprob: -15.250642776489258

Token 933: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00028862981707789004
    2. 'a' → logprob: -9.000288963317871
    3. '#' → logprob: -9.375288963317871
    4. 'la' → logprob: -9.625288963317871
    5. ' def' → logprob: -12.125288963317871
    6. 'une' → logprob: -12.625288963317871
    7. '```' → logprob: -13.625288963317871
    8. 'n' → logprob: -14.375288963317871
    9. '(n' → logprob: -14.500288963317871
    10. 'the' → logprob: -14.875288963317871

Token 934: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00012880703434348106
    2. '#' → logprob: -9.000128746032715
    3. ' def' → logprob: -13.125128746032715
    4. 'comb' → logprob: -14.125128746032715
    5. 'factor' → logprob: -14.125128746032715
    6. 'function' → logprob: -15.000128746032715
    7. 'fonction' → logprob: -15.125128746032715
    8. '
' → logprob: -15.250128746032715
    9. 'com' → logprob: -15.625128746032715
    10. 'fact' → logprob: -15.625128746032715

Token 935: ' principale' (ID: 68926)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4005594551563263
    2. 'comb' → logprob: -1.150559425354004
    3. ' comb' → logprob: -4.900559425354004
    4. 'C' → logprob: -5.900559425354004
    5. 'com' → logprob: -6.775559425354004
    6. 'n' → logprob: -7.150559425354004
    7. ' def' → logprob: -7.275559425354004
    8. 'fact' → logprob: -9.150559425354004
    9. '#' → logprob: -9.275559425354004
    10. 'combine' → logprob: -9.275559425354004

Token 936: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.5941604690160602e-05
    2. ' def' → logprob: -11.375025749206543
    3. 'de' → logprob: -11.500025749206543
    4. ':def' → logprob: -12.625025749206543
    5. 'd' → logprob: -14.500025749206543
    6. '(def' → logprob: -15.500025749206543
    7. ':' → logprob: -15.875025749206543
    8. '
' → logprob: -17.00002670288086
    9. '()' → logprob: -17.25002670288086
    10. '(
' → logprob: -19.12502670288086

Token 937: ' résolution' (ID: 147402)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.025291316211223602
    2. 'calcul' → logprob: -4.150291442871094
    3. 'com' → logprob: -4.900291442871094
    4. 'composition' → logprob: -7.775291442871094
    5. 'c' → logprob: -8.775291442871094
    6. 'la' → logprob: -8.900291442871094
    7. 'dé' → logprob: -9.275291442871094
    8. 'compl' → logprob: -9.400291442871094
    9. 'fact' → logprob: -9.400291442871094
    10. 'code' → logprob: -9.400291442871094

Token 938: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.0
    3. '(def' → logprob: -18.375
    4. ':def' → logprob: -19.25
    5. '()' → logprob: -19.625
    6. '
' → logprob: -20.625
    7. '@' → logprob: -20.875
    8. 'de' → logprob: -21.0
    9. '()
' → logprob: -21.875
    10. '```' → logprob: -22.375

Token 939: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.20599666237831116
    2. 'def' → logprob: -2.7059967517852783
    3. ' problème' → logprob: -2.8309967517852783
    4. '```' → logprob: -3.5809967517852783
    5. 'problem' → logprob: -3.8309967517852783
    6. 'proble' → logprob: -5.580996513366699
    7. 'main' → logprob: -5.955996513366699
    8. 't' → logprob: -7.205996513366699
    9. '():' → logprob: -7.330996513366699
    10. ' problem' → logprob: -7.455996513366699

Token 940: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. '@' → logprob: -17.75
    3. 'from' → logprob: -19.125
    4. '
' → logprob: -19.75
    5. '```' → logprob: -19.875
    6. ' def' → logprob: -20.375
    7. '#' → logprob: -21.0
    8. ':def' → logprob: -21.5
    9. 'import' → logprob: -22.125
    10. 'de' → logprob: -22.25

Token 941: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. '
' → logprob: -18.875
    3. ' def' → logprob: -18.875
    4. '```' → logprob: -19.625
    5. 'main' → logprob: -21.0
    6. '#' → logprob: -21.0
    7. '@' → logprob: -22.625
    8. 'de' → logprob: -22.75
    9. 'solve' → logprob: -22.75
    10. 'from' → logprob: -23.0

Token 942: ' prend' (ID: 37463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012650556862354279
    2. '():' → logprob: -4.512650489807129
    3. ' def' → logprob: -7.637650489807129
    4. '=' → logprob: -8.387650489807129
    5. 'n' → logprob: -8.387650489807129
    6. ':' → logprob: -8.762650489807129
    7. '():
' → logprob: -9.262650489807129
    8. '...' → logprob: -9.387650489807129
    9. '(n' → logprob: -9.387650489807129
    10. '()' → logprob: -9.762650489807129

Token 943: ' trois' (ID: 25564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16281865537166595
    2. 'n' → logprob: -2.162818670272827
    3. '()' → logprob: -3.787818670272827
    4. '(n' → logprob: -4.912818431854248
    5. 't' → logprob: -6.287818431854248
    6. 'a' → logprob: -7.162818431854248
    7. 'N' → logprob: -7.537818431854248
    8. '):' → logprob: -7.537818431854248
    9. 'la' → logprob: -8.037818908691406
    10. '(N' → logprob: -8.162818908691406

Token 944: ' paramètres' (ID: 130696)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4948748052120209
    2. 'n' → logprob: -1.3698748350143433
    3. 'arguments' → logprob: -2.8698747158050537
    4. 'def' → logprob: -4.119874954223633
    5. 'inte' → logprob: -4.244874954223633
    6. 'parameters' → logprob: -4.744874954223633
    7. '(n' → logprob: -4.869874954223633
    8. 'params' → logprob: -5.244874954223633
    9. 'args' → logprob: -5.369874954223633
    10. 'a' → logprob: -5.494874954223633

Token 945: ' :' (ID: 712)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2896793782711029
    2. 'def' → logprob: -1.9146794080734253
    3. '(a' → logprob: -2.4146792888641357
    4. '(N' → logprob: -5.289679527282715
    5. '(A' → logprob: -6.039679527282715
    6. '(k' → logprob: -6.164679527282715
    7. '(' → logprob: -6.664679527282715
    8. '(s' → logprob: -6.789679527282715
    9. '(t' → logprob: -7.539679527282715
    10. '(x' → logprob: -7.789679527282715

Token 946: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15102224051952362
    2. 'a' → logprob: -2.65102219581604
    3. 'N' → logprob: -3.02602219581604
    4. 'def' → logprob: -4.651022434234619
    5. 'x' → logprob: -5.401022434234619
    6. 'A' → logprob: -6.526022434234619
    7. 'k' → logprob: -6.776022434234619
    8. 'm' → logprob: -7.401022434234619
    9. 'p' → logprob: -7.526022434234619
    10. 'r' → logprob: -7.651022434234619

Token 947: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021891399228479713
    2. ',y' → logprob: -8.625219345092773
    3. ':' → logprob: -11.500219345092773
    4. ',n' → logprob: -11.750219345092773
    5. '1' → logprob: -12.125219345092773
    6. ',k' → logprob: -13.000219345092773
    7. ',x' → logprob: -13.000219345092773
    8. '0' → logprob: -13.375219345092773
    9. ' ,' → logprob: -13.500219345092773
    10. ',a' → logprob: -13.750219345092773

Token 948: ' d' (ID: 272)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006360181607306004
    2. 'n' → logprob: -5.381360054016113
    3. 'k' → logprob: -6.881360054016113
    4. 'a' → logprob: -7.756360054016113
    5. 'm' → logprob: -9.131360054016113
    6. ' y' → logprob: -9.631360054016113
    7. 'l' → logprob: -10.381360054016113
    8. 'r' → logprob: -10.881360054016113
    9. 'x' → logprob: -11.381360054016113
    10. 'N' → logprob: -11.756360054016113

Token 949: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006679982761852443
    2. 'def' → logprob: -8.375667572021484
    3. '(n' → logprob: -8.750667572021484
    4. 'f' → logprob: -9.125667572021484
    5. 'n' → logprob: -10.125667572021484
    6. ',n' → logprob: -10.625667572021484
    7. 'y' → logprob: -11.000667572021484
    8. '(x' → logprob: -11.000667572021484
    9. 'e' → logprob: -11.000667572021484
    10. '(' → logprob: -12.000667572021484

Token 950: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07046184688806534
    2. 'n' → logprob: -2.8204617500305176
    3. 'm' → logprob: -5.945461750030518
    4. 'c' → logprob: -6.695461750030518
    5. 'y' → logprob: -6.820461750030518
    6. 'x' → logprob: -6.945461750030518
    7. 'r' → logprob: -7.570461750030518
    8. 'q' → logprob: -7.945461750030518
    9. 'e' → logprob: -8.070462226867676
    10. 't' → logprob: -8.570462226867676

Token 951: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00044056313345208764
    2. ':' → logprob: -8.12544059753418
    3. '(def' → logprob: -10.00044059753418
    4. ':def' → logprob: -10.00044059753418
    5. '():' → logprob: -10.87544059753418
    6. ' def' → logprob: -11.12544059753418
    7. '(x' → logprob: -11.50044059753418
    8. '(n' → logprob: -12.25044059753418
    9. '(' → logprob: -13.62544059753418
    10. ':
' → logprob: -13.75044059753418

Token 952: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1472419600977446e-06
    2. ' def' → logprob: -14.375000953674316
    3. ':def' → logprob: -15.000000953674316
    4. '(def' → logprob: -16.250001907348633
    5. 'de' → logprob: -16.750001907348633
    6. 'd' → logprob: -16.875001907348633
    7. '```' → logprob: -17.875001907348633
    8. '
' → logprob: -18.000001907348633
    9. '_def' → logprob: -18.625001907348633
    10. 'ndef' → logprob: -19.125001907348633

Token 953: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.010265245102345943
    2. 'main' → logprob: -4.635265350341797
    3. 'solution' → logprob: -8.635265350341797
    4. 'resolve' → logprob: -9.135265350341797
    5. 'comb' → logprob: -10.010265350341797
    6. 'solver' → logprob: -10.260265350341797
    7. ' solve' → logprob: -10.510265350341797
    8. 'count' → logprob: -10.510265350341797
    9. 'sol' → logprob: -10.760265350341797
    10. 'calc' → logprob: -10.760265350341797

Token 954: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003372502396814525
    2. '(' → logprob: -8.000337600708008
    3. ' (' → logprob: -14.125337600708008
    4. '():' → logprob: -14.750337600708008
    5. '(
' → logprob: -15.250337600708008
    6. '(n' → logprob: -16.250337600708008
    7. '(a' → logprob: -16.375337600708008
    8. '(args' → logprob: -17.000337600708008
    9. 'def' → logprob: -17.125337600708008
    10. '((' → logprob: -17.375337600708008

Token 955: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003214784199371934
    2. ',d' → logprob: -5.7532148361206055
    3. ' ,' → logprob: -10.753214836120605
    4. ',
' → logprob: -11.878214836120605
    5. ':' → logprob: -12.003214836120605
    6. 'd' → logprob: -14.378214836120605
    7. ',n' → logprob: -14.628214836120605
    8. '):' → logprob: -14.878214836120605
    9. '   ' → logprob: -15.253214836120605
    10. '_,' → logprob: -15.628214836120605

Token 956: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.15310683415737e-05
    2. ' d' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.62502098083496
    4. '	d' → logprob: -19.00002098083496
    5. ' ' → logprob: -19.87502098083496
    6. '```' → logprob: -20.00002098083496
    7. ' ' → logprob: -20.25002098083496
    8. '  ' → logprob: -21.00002098083496
    9. '_d' → logprob: -21.37502098083496
    10. 'def' → logprob: -21.62502098083496

Token 957: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0076737068593502045
    2. '):' → logprob: -4.882673740386963
    3. ',n' → logprob: -9.757673263549805
    4. ')' → logprob: -12.757673263549805
    5. ' ,' → logprob: -12.882673263549805
    6. ':' → logprob: -13.632673263549805
    7. ',x' → logprob: -14.882673263549805
    8. ',
' → logprob: -15.132673263549805
    9. ',y' → logprob: -15.132673263549805
    10. '   ' → logprob: -15.257673263549805

Token 958: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010902655776590109
    2. ' n' → logprob: -9.12510871887207
    3. '	n' → logprob: -17.37510871887207
    4. '   ' → logprob: -18.62510871887207
    5. 'N' → logprob: -20.12510871887207
    6. '```' → logprob: -20.25010871887207
    7. ' ' → logprob: -20.37510871887207
    8. ' ' → logprob: -20.37510871887207
    9. 'k' → logprob: -20.50010871887207
    10. '  ' → logprob: -20.87510871887207

Token 959: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.764977686339989e-05
    2. ':' → logprob: -10.750057220458984
    3. ')' → logprob: -10.875057220458984
    4. '):
' → logprob: -11.000057220458984
    5. ' ):' → logprob: -14.625057220458984
    6. '):
' → logprob: -16.500057220458984
    7. '}:' → logprob: -17.375057220458984
    8. '():' → logprob: -17.375057220458984
    9. '):

' → logprob: -18.000057220458984
    10. ']:' → logprob: -18.375057220458984

Token 960: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005573204252868891
    2. 'if' → logprob: -7.7505574226379395
    3. 'res' → logprob: -10.125556945800781
    4. ' if' → logprob: -10.125556945800781
    5. 'result' → logprob: -10.875556945800781
    6. ':' → logprob: -11.500556945800781
    7. '```' → logprob: -12.250556945800781
    8. 'n' → logprob: -13.000556945800781
    9. ' res' → logprob: -13.250556945800781
    10. '    
' → logprob: -13.375556945800781

Token 961: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6706681251525879
    2. '   ' → logprob: -0.9206681251525879
    3. 'res' → logprob: -2.795668125152588
    4. 'result' → logprob: -3.920668125152588
    5. 's' → logprob: -6.170668125152588
    6. '#' (adapté à ' #') → logprob: -6.295668125152588
    7. 'ans' → logprob: -6.420668125152588
    8. 'r' → logprob: -6.795668125152588
    9. 'k' → logprob: -7.420668125152588
    10. 'answer' → logprob: -7.795668125152588

Token 962: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0011370006250217557
    2. 'res' → logprob: -7.126136779785156
    3. 'result' → logprob: -8.876136779785156
    4. '#' → logprob: -9.126136779785156
    5. 'r' → logprob: -10.501136779785156
    6. 'x' → logprob: -10.626136779785156
    7. 'ans' → logprob: -11.501136779785156
    8. ' if' → logprob: -12.126136779785156
    9. '   ' → logprob: -13.001136779785156
    10. 'def' → logprob: -13.126136779785156

Token 963: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11236502975225449
    2. ' n' → logprob: -2.6123650074005127
    3. 'x' → logprob: -3.7373650074005127
    4. 'd' → logprob: -4.987365245819092
    5. ' x' → logprob: -6.487365245819092
    6. ' d' → logprob: -7.237365245819092
    7. ' not' → logprob: -11.112364768981934
    8. 'not' → logprob: -11.737364768981934
    9. '(n' → logprob: -12.112364768981934
    10. '(x' → logprob: -12.987364768981934

Token 964: ' vaut' (ID: 83004)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.049599651247262955
    2. ' ==' → logprob: -3.4245996475219727
    3. '<=' → logprob: -4.924599647521973
    4. '<' → logprob: -5.424599647521973
    5. '%' → logprob: -5.674599647521973
    6. '>=' → logprob: -8.549599647521973
    7. '>' → logprob: -8.924599647521973
    8. ' <=' → logprob: -9.049599647521973
    9. ' <' → logprob: -9.174599647521973
    10. '!=' → logprob: -9.549599647521973

Token 965: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001507405104348436
    2. '1' → logprob: -8.875150680541992
    3. ' ' → logprob: -11.625150680541992
    4. 'd' → logprob: -14.000150680541992
    5. '=' → logprob: -14.375150680541992
    6. '2' → logprob: -16.375150680541992
    7. '```' → logprob: -16.750150680541992
    8. '   ' → logprob: -16.875150680541992
    9. '100' → logprob: -17.000150680541992
    10. '
' → logprob: -17.375150680541992

Token 966: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.534558552724775e-05
    2. '1' → logprob: -10.875025749206543
    3. ' ' → logprob: -12.000025749206543
    4. '=' → logprob: -15.625025749206543
    5. 'x' → logprob: -17.125024795532227
    6. 'd' → logprob: -17.250024795532227
    7. 'n' → logprob: -17.875024795532227
    8. '2' → logprob: -18.500024795532227
    9. '100' → logprob: -19.000024795532227
    10. '(' → logprob: -19.500024795532227

Token 967: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10904782265424728
    2. '   ' → logprob: -2.4840478897094727
    3. ':
' → logprob: -4.609047889709473
    4. 'and' → logprob: -5.234047889709473
    5. ' and' → logprob: -6.109047889709473
    6. ',' → logprob: -7.234047889709473
    7. ':return' → logprob: -7.359047889709473
    8. ' or' → logprob: -7.609047889709473
    9. 'or' → logprob: -8.609047889709473
    10. 'if' → logprob: -8.734047889709473

Token 968: ' le' (ID: 505)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.017520880326628685
    2. '   ' → logprob: -4.267520904541016
    3. 'if' → logprob: -5.892520904541016
    4. ' return' → logprob: -7.642520904541016
    5. 'print' → logprob: -9.517520904541016
    6. '       ' → logprob: -11.392520904541016
    7. '	return' → logprob: -11.517520904541016
    8. ' if' → logprob: -11.517520904541016
    9. 'exit' → logprob: -12.392520904541016
    10. ':return' → logprob: -14.267520904541016

Token 969: ' résultat' (ID: 62556)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06460925191640854
    2. '0' → logprob: -2.9396092891693115
    3. 'print' → logprob: -5.439609050750732
    4. 'if' → logprob: -6.064609050750732
    5. '1' → logprob: -7.064609050750732
    6. ' return' → logprob: -7.314609050750732
    7. 'ret' → logprob: -8.06460952758789
    8. 'n' → logprob: -8.43960952758789
    9. 'r' → logprob: -8.81460952758789
    10. '#' → logprob: -8.81460952758789

Token 970: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3640083074569702
    2. ' =' → logprob: -1.2390083074569702
    3. '   ' → logprob: -4.73900842666626
    4. 'return' → logprob: -5.36400842666626
    5. 'def' → logprob: -7.23900842666626
    6. ':' → logprob: -7.61400842666626
    7. ' return' → logprob: -8.114007949829102
    8. ' ' → logprob: -9.364007949829102
    9. '0' → logprob: -9.364007949829102
    10. 'if' → logprob: -9.739007949829102

Token 971: ' toujours' (ID: 16867)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.051645416766405106
    2. '1' → logprob: -3.051645517349243
    3. '(' → logprob: -6.801645278930664
    4. 'n' → logprob: -7.301645278930664
    5. ' ' → logprob: -7.801645278930664
    6. '(n' → logprob: -8.176645278930664
    7. 'fact' → logprob: -8.301645278930664
    8. 'pow' → logprob: -8.426645278930664
    9. ' (' → logprob: -10.801645278930664
    10. '
' → logprob: -11.426645278930664

Token 972: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25293248891830444
    2. '1' → logprob: -1.5029325485229492
    3. '(' → logprob: -7.252932548522949
    4. ' ' → logprob: -8.75293254852295
    5. 'pow' → logprob: -9.75293254852295
    6. 'n' → logprob: -10.75293254852295
    7. '(n' → logprob: -11.25293254852295
    8. 'return' → logprob: -12.37793254852295
    9. '```' → logprob: -12.37793254852295
    10. 'print' → logprob: -12.44043254852295

Token 973: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2526576817035675
    2. '1' → logprob: -1.5026576519012451
    3. '(' → logprob: -7.877657890319824
    4. 'pow' → logprob: -8.502657890319824
    5. '(n' → logprob: -9.752657890319824
    6. 'fact' → logprob: -10.127657890319824
    7. 'n' → logprob: -10.627657890319824
    8. 'd' → logprob: -12.252657890319824
    9. 'int' → logprob: -12.377657890319824
    10. ' ' → logprob: -13.377657890319824

Token 974: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013195300474762917
    2. ':' → logprob: -4.888195514678955
    3. '       ' → logprob: -5.513195514678955
    4. ':return' → logprob: -6.888195514678955
    5. ':
' → logprob: -8.513195037841797
    6. 'return' → logprob: -8.638195037841797
    7. ' return' → logprob: -9.638195037841797
    8. '	return' → logprob: -9.888195037841797
    9. '.' → logprob: -11.388195037841797
    10. 'if' → logprob: -12.638195037841797

Token 975: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18108917772769928
    2. ' return' → logprob: -2.056089162826538
    3. 'return' → logprob: -3.306089162826538
    4. '	return' → logprob: -7.056089401245117
    5. '       ' → logprob: -9.181089401245117
    6. ':return' → logprob: -10.931089401245117
    7. '   ' → logprob: -11.306089401245117
    8. 'eturn' → logprob: -12.056089401245117
    9. '    
' → logprob: -12.056089401245117
    10. '
' → logprob: -12.556089401245117

Token 976: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0025081203784793615
    2. ' return' → logprob: -6.127508163452148
    3. '   ' → logprob: -8.252508163452148
    4. 'print' → logprob: -10.377508163452148
    5. '0' → logprob: -10.627508163452148
    6. 'exit' → logprob: -12.377508163452148
    7. '```' → logprob: -13.252508163452148
    8. '	return' → logprob: -15.002508163452148
    9. ':return' → logprob: -15.627508163452148
    10. '{return' → logprob: -15.877508163452148

Token 977: ' le' (ID: 505)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012623244896531105
    2. ' return' → logprob: -5.012623310089111
    3. '   ' → logprob: -5.887623310089111
    4. 'if' → logprob: -6.512623310089111
    5. 'exit' → logprob: -7.012623310089111
    6. 'eturn' → logprob: -8.012622833251953
    7. 'print' → logprob: -8.137622833251953
    8. ' if' → logprob: -10.762622833251953
    9. '```' → logprob: -10.762622833251953
    10. 'ret' → logprob: -11.137622833251953

Token 978: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00429468834772706
    2. 'ret' → logprob: -5.8792948722839355
    3. 'print' → logprob: -7.0042948722839355
    4. ' return' → logprob: -7.7542948722839355
    5. 'exit' → logprob: -9.754294395446777
    6. 'eturn' → logprob: -9.879294395446777
    7. ' retourne' → logprob: -11.504294395446777
    8. '```' → logprob: -11.629294395446777
    9. 'yield' → logprob: -12.004294395446777
    10. ':return' → logprob: -13.129294395446777

Token 979: ' immédiatement' (ID: 100743)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015716375783085823
    2. 'if' → logprob: -6.8765716552734375
    3. ' if' → logprob: -7.6265716552734375
    4. 'return' → logprob: -10.251571655273438
    5. '```' → logprob: -12.126571655273438
    6. '	if' → logprob: -12.626571655273438
    7. ' return' → logprob: -12.626571655273438
    8. ':' → logprob: -14.126571655273438
    9. '       ' → logprob: -14.251571655273438
    10. '	return' → logprob: -14.376571655273438

Token 980: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001732663222355768
    2. 'if' → logprob: -9.125173568725586
    3. ' if' → logprob: -10.000173568725586
    4. ':' → logprob: -11.750173568725586
    5. 'return' → logprob: -12.875173568725586
    6. '```' → logprob: -12.875173568725586
    7. '	if' → logprob: -13.375173568725586
    8. '
' → logprob: -13.750173568725586
    9. ':return' → logprob: -14.375173568725586
    10. '       ' → logprob: -14.375173568725586

Token 981: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024828488007187843
    2. ':' → logprob: -3.7748284339904785
    3. '	return' → logprob: -6.8998284339904785
    4. ':return' → logprob: -8.399828910827637
    5. ':
' → logprob: -8.899828910827637
    6. '	if' → logprob: -9.024828910827637
    7. '\t' → logprob: -11.024828910827637
    8. '
' → logprob: -11.524828910827637
    9. '       ' → logprob: -11.649828910827637
    10. '.' → logprob: -11.774828910827637

Token 982: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2573204040527344
    2. 'if' (adapté à ' if') → logprob: -1.5073204040527344
    3. '   ' → logprob: -5.257320404052734
    4. ' return' → logprob: -9.257320404052734
    5. ' if' → logprob: -9.882320404052734
    6. '	return' → logprob: -11.007320404052734
    7. '```' → logprob: -13.132320404052734
    8. '	if' → logprob: -13.257320404052734
    9. ' ' → logprob: -15.632320404052734
    10. 'exit' → logprob: -16.007320404052734

Token 983: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003361774142831564
    2. ' x' → logprob: -8.000336647033691
    3. 'not' → logprob: -14.625336647033691
    4. '   ' → logprob: -15.625336647033691
    5. '0' → logprob: -16.000335693359375
    6. ' not' → logprob: -17.500335693359375
    7. ' ' → logprob: -18.125335693359375
    8. '	x' → logprob: -18.750335693359375
    9. '(x' → logprob: -18.750335693359375
    10. ' ' → logprob: -19.875335693359375

Token 984: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06198729947209358
    2. ' ==' → logprob: -2.8119874000549316
    3. '=' → logprob: -11.436986923217773
    4. '==
' → logprob: -12.561986923217773
    5. '0' → logprob: -13.186986923217773
    6. '[' → logprob: -13.561986923217773
    7. ' ' → logprob: -14.436986923217773
    8. '```' → logprob: -14.811986923217773
    9. '()==' → logprob: -14.936986923217773
    10. ']==' → logprob: -15.936986923217773

Token 985: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.125003814697266
    4. '۰' → logprob: -19.125003814697266
    5. '```' → logprob: -20.000003814697266
    6. '  ' → logprob: -20.312503814697266
    7. '00' → logprob: -20.750003814697266
    8. '    ' → logprob: -21.187503814697266
    9. ' ' → logprob: -21.250003814697266
    10. '０' → logprob: -21.312503814697266

Token 986: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -19.625001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '00' → logprob: -21.312501907348633
    6. '  ' → logprob: -21.312501907348633
    7. '    ' → logprob: -21.625001907348633
    8. '০' → logprob: -21.812501907348633
    9. '1' → logprob: -22.000001907348633
    10. '０' → logprob: -22.000001907348633

Token 987: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01968139037489891
    2. ':
' → logprob: -4.519681453704834
    3. ':return' → logprob: -4.894681453704834
    4. '   ' → logprob: -6.894681453704834
    5. '       ' → logprob: -9.394680976867676
    6. 'return' → logprob: -12.019680976867676
    7. ':
' → logprob: -12.644680976867676
    8. '.' → logprob: -13.894680976867676
    9. '	return' → logprob: -14.144680976867676
    10. ' :' → logprob: -14.144680976867676

Token 988: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005078160669654608
    2. 'return' → logprob: -5.630078315734863
    3. ':' → logprob: -7.380078315734863
    4. ':return' → logprob: -8.130078315734863
    5. ':
' → logprob: -8.505078315734863
    6. '	' → logprob: -8.880078315734863
    7. '   ' → logprob: -9.005078315734863
    8. ' return' → logprob: -9.380078315734863
    9. '	return' → logprob: -12.380078315734863
    10. '0' → logprob: -13.630078315734863

Token 989: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0003820524725597352
    2. ' return' → logprob: -8.500382423400879
    3. '       ' → logprob: -8.875382423400879
    4. 'exit' → logprob: -11.125382423400879
    5. '	return' → logprob: -11.250382423400879
    6. '   ' → logprob: -11.500382423400879
    7. ':return' → logprob: -15.250382423400879
    8. '	' → logprob: -15.500382423400879
    9. 'eturn' → logprob: -15.875382423400879
    10. '```' → logprob: -16.375381469726562

Token 990: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '"' → logprob: -19.625003814697266
    4. '   ' → logprob: -20.875003814697266
    5. '`' → logprob: -21.875003814697266
    6. ''' → logprob: -21.875003814697266
    7. '(' → logprob: -22.500003814697266
    8. '۰' → logprob: -22.500003814697266
    9. '00' → logprob: -23.000003814697266
    10. '000' → logprob: -23.000003814697266

Token 991: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '"' → logprob: -17.5
    3. ' ' → logprob: -18.75
    4. ''' → logprob: -20.0
    5. '`' → logprob: -20.875
    6. '```' → logprob: -21.25
    7. '000' → logprob: -21.375
    8. '   ' → logprob: -21.5
    9. '00' → logprob: -21.75
    10. '1' → logprob: -22.125

Token 992: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12330051511526108
    2. '
' → logprob: -2.748300552368164
    3. '    
' → logprob: -2.998300552368164
    4. '<|end|>' → logprob: -7.623300552368164
    5. '#' → logprob: -7.998300552368164
    6. '        
' → logprob: -8.498300552368164
    7. '```' → logprob: -8.748300552368164
    8. 'n' → logprob: -8.748300552368164
    9. '  
' → logprob: -9.248300552368164
    10. '    
    
' → logprob: -9.248300552368164

Token 993: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06483687460422516
    2. '    
' → logprob: -2.8148369789123535
    3. '
' → logprob: -6.1898369789123535
    4. '<|end|>' → logprob: -8.564836502075195
    5. '    
    
' → logprob: -8.939836502075195
    6. '        
' → logprob: -9.189836502075195
    7. '#' → logprob: -9.439836502075195
    8. 'n' → logprob: -9.564836502075195
    9. '   
' → logprob: -9.939836502075195
    10. '    ' → logprob: -10.314836502075195

Token 994: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49544966220855713
    2. '#' (adapté à ' #') → logprob: -1.2454496622085571
    3. 'res' → logprob: -2.9954495429992676
    4. 'ans' → logprob: -3.7454495429992676
    5. '   ' → logprob: -4.620449542999268
    6. 'result' → logprob: -5.370449542999268
    7. 'm' → logprob: -6.120449542999268
    8. 'answer' → logprob: -6.495449542999268
    9. 'total' → logprob: -6.620449542999268
    10. 'cnt' → logprob: -6.745449542999268

Token 995: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15035514533519745
    2. '#' → logprob: -2.150355100631714
    3. 'res' → logprob: -4.650355339050293
    4. 'ans' → logprob: -6.150355339050293
    5. 'result' → logprob: -6.525355339050293
    6. 'total' → logprob: -6.650355339050293
    7. 'def' → logprob: -6.650355339050293
    8. 'm' → logprob: -6.775355339050293
    9. 'elif' → logprob: -6.775355339050293
    10. 'p' → logprob: -7.900355339050293

Token 996: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.021383915096521378
    2. 'x' → logprob: -4.396383762359619
    3. 'n' → logprob: -4.771383762359619
    4. ' d' → logprob: -8.021384239196777
    5. ' x' → logprob: -11.271384239196777
    6. ' n' → logprob: -11.646384239196777
    7. 'abs' → logprob: -13.021384239196777
    8. 'pow' → logprob: -13.021384239196777
    9. '(d' → logprob: -13.396384239196777
    10. '1' → logprob: -13.458884239196777

Token 997: ' vaut' (ID: 83004)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42913880944252014
    2. ' ==' → logprob: -1.0541387796401978
    3. '<=' → logprob: -8.429139137268066
    4. ' <=' → logprob: -9.554139137268066
    5. ' <' → logprob: -10.679139137268066
    6. '%' → logprob: -10.679139137268066
    7. '==
' → logprob: -10.804139137268066
    8. '=' → logprob: -10.929139137268066
    9. '>' → logprob: -11.054139137268066
    10. '<' → logprob: -11.179139137268066

Token 998: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015335931675508618
    2. '1' → logprob: -9.000153541564941
    3. ' ' → logprob: -10.500153541564941
    4. '-' → logprob: -13.250153541564941
    5. '2' → logprob: -16.250152587890625
    6. '=' → logprob: -16.250152587890625
    7. '
' → logprob: -16.375152587890625
    8. ' -' → logprob: -16.625152587890625
    9. '(' → logprob: -17.375152587890625
    10. '100' → logprob: -17.750152587890625

Token 999: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005083533469587564
    2. '1' → logprob: -7.7505083084106445
    3. '-' → logprob: -9.500508308410645
    4. ' ' → logprob: -13.250508308410645
    5. '
' → logprob: -15.125508308410645
    6. '2' → logprob: -15.625508308410645
    7. '(' → logprob: -15.875508308410645
    8. ' -' → logprob: -16.81300926208496
    9. '(-' → logprob: -16.93800926208496
    10. '```' → logprob: -17.12550926208496

Token 1000: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0666455328464508
    2. ':
' → logprob: -2.816645622253418
    3. '   ' → logprob: -5.566645622253418
    4. ' and' → logprob: -7.941645622253418
    5. 'and' → logprob: -8.441645622253418
    6. '==' → logprob: -8.941645622253418
    7. ':return' → logprob: -10.066645622253418
    8. '       ' → logprob: -10.691645622253418
    9. ' ==' → logprob: -10.816645622253418
    10. ',' → logprob: -11.066645622253418

Token 1001: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25814932584762573
    2. '#' → logprob: -2.0081493854522705
    3. '   ' → logprob: -2.3831493854522705
    4. ' return' → logprob: -7.258149147033691
    5. 'if' → logprob: -8.508149147033691
    6. ' #' → logprob: -10.133149147033691
    7. 'def' → logprob: -10.883149147033691
    8. 'result' → logprob: -11.508149147033691
    9. '       ' → logprob: -11.758149147033691
    10. '	return' → logprob: -11.883149147033691

Token 1002: ' doit' (ID: 21822)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06573396921157837
    2. '#' → logprob: -3.0657339096069336
    3. 'ret' → logprob: -5.315733909606934
    4. ' return' → logprob: -5.690733909606934
    5. '   ' → logprob: -5.690733909606934
    6. 'a' → logprob: -7.065733909606934
    7. 'def' → logprob: -7.065733909606934
    8. 'do' → logprob: -7.440733909606934
    9. 'eturn' → logprob: -7.815733909606934
    10. ' retourne' → logprob: -7.940733909606934

Token 1003: ' simplement' (ID: 45065)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0573134608566761
    2. 'ret' → logprob: -2.9323134422302246
    3. 'calcul' → logprob: -6.432313442230225
    4. 'ren' → logprob: -7.807313442230225
    5. '#' → logprob: -8.057313919067383
    6. ' return' → logprob: -10.432313919067383
    7. 'trait' → logprob: -10.807313919067383
    8. ':return' → logprob: -11.682313919067383
    9. '```' → logprob: -12.182313919067383
    10. '   ' → logprob: -12.307313919067383

Token 1004: ' ren' (ID: 5427)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.6759420037269592
    2. 'return' → logprob: -1.1759419441223145
    3. 'calcul' → logprob: -1.9259419441223145
    4. 'ren' → logprob: -3.3009419441223145
    5. ' retourner' → logprob: -9.425942420959473
    6. '#' → logprob: -10.175942420959473
    7. 'mult' → logprob: -10.675942420959473
    8. 'cal' → logprob: -11.550942420959473
    9. 'calc' → logprob: -11.675942420959473
    10. 'returns' → logprob: -11.800942420959473

Token 1005: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.39175164699554443
    2. 'return' → logprob: -1.1417516469955444
    3. 'trer' → logprob: -6.016751766204834
    4. 'dre' → logprob: -7.141751766204834
    5. 'voy' → logprob: -7.266751766204834
    6. 'def' → logprob: -8.141751289367676
    7. '0' → logprob: -8.641751289367676
    8. 'voie' → logprob: -9.516751289367676
    9. '```' → logprob: -9.516751289367676
    10. 'voi' → logprob: -10.016751289367676

Token 1006: 'oyer' (ID: 36165)
  Prédit: 'oyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oyer' → logprob: -0.0016311476938426495
    2. 'er' → logprob: -7.126631259918213
    3. 'v' → logprob: -8.001630783081055
    4. 'o' → logprob: -8.126630783081055
    5. 'return' → logprob: -10.126630783081055
    6. 'trer' → logprob: -10.376630783081055
    7. 'ouer' → logprob: -10.501630783081055
    8. 'oy' → logprob: -10.626630783081055
    9. '0' → logprob: -10.626630783081055
    10. 'oir' → logprob: -11.501630783081055

Token 1007: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5145929455757141
    2. 'pow' → logprob: -1.7645928859710693
    3. '(n' → logprob: -2.3895928859710693
    4. 'x' → logprob: -2.5145928859710693
    5. '(pow' → logprob: -2.8895928859710693
    6. 'n' → logprob: -6.639593124389648
    7. '(' → logprob: -6.889593124389648
    8. '((' → logprob: -8.514593124389648
    9. '1' → logprob: -9.389593124389648
    10. '(power' → logprob: -10.264593124389648

Token 1008: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8074201941490173
    2. 'pow' → logprob: -1.557420253753662
    3. 'return' → logprob: -1.682420253753662
    4. '
' → logprob: -2.557420253753662
    5. '*' → logprob: -3.682420253753662
    6. '*n' → logprob: -4.182420253753662
    7. '**' → logprob: -4.432420253753662
    8. 'def' → logprob: -4.932420253753662
    9. 'n' → logprob: -5.932420253753662
    10. '

' → logprob: -6.057420253753662

Token 1009: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013948403298854828
    2. 'pow' → logprob: -4.513948440551758
    3. 'la' → logprob: -6.763948440551758
    4. '(n' → logprob: -6.763948440551758
    5. 'power' → logprob: -8.263948440551758
    6. 'the' → logprob: -8.263948440551758
    7. 'nth' → logprob: -11.263948440551758
    8. '
' → logprob: -11.388948440551758
    9. '(' → logprob: -11.763948440551758
    10. '(pow' → logprob: -11.888948440551758

Token 1010: ' puissance' (ID: 63494)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010145875858142972
    2. 'pow' → logprob: -7.751014709472656
    3. '(n' → logprob: -8.001014709472656
    4. 'power' → logprob: -8.376014709472656
    5. 'nth' → logprob: -11.876014709472656
    6. 'pu' → logprob: -13.126014709472656
    7. ' n' → logprob: -13.251014709472656
    8. ' puissance' → logprob: -13.376014709472656
    9. '(' → logprob: -13.501014709472656
    10. '
' → logprob: -13.626014709472656

Token 1011: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4736459888808895e-05
    2. ' n' → logprob: -11.250014305114746
    3. '(n' → logprob: -13.500014305114746
    4. '[n' → logprob: -16.000015258789062
    5. '```' → logprob: -17.000015258789062
    6. '[' → logprob: -17.375015258789062
    7. '
' → logprob: -17.875015258789062
    8. '`' → logprob: -17.875015258789062
    9. 'ndef' → logprob: -18.625015258789062
    10. 'def' → logprob: -19.000015258789062

Token 1012: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010427596978843212
    2. 'return' → logprob: -4.635427474975586
    3. ':' → logprob: -7.760427474975586
    4. ' return' → logprob: -9.260427474975586
    5. '       ' → logprob: -10.135427474975586
    6. ':return' → logprob: -10.760427474975586
    7. '(' → logprob: -10.885427474975586
    8. '```' → logprob: -11.010427474975586
    9. ',' → logprob: -11.260427474975586
    10. 'def' → logprob: -11.385427474975586

Token 1013: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -16.5
    3. 'MO' → logprob: -18.75
    4. 'M' → logprob: -22.125
    5. '_MOD' → logprob: -22.375
    6. '(M' → logprob: -22.625
    7. 'mod' → logprob: -22.625
    8. '.MOD' → logprob: -23.25
    9. 'MD' → logprob: -23.5
    10. 'Mod' → logprob: -23.625

Token 1014: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002127064624801278
    2. 'return' → logprob: -6.377127170562744
    3. ':' → logprob: -8.252126693725586
    4. ' return' → logprob: -9.377126693725586
    5. 'def' → logprob: -10.627126693725586
    6. '       ' → logprob: -11.252126693725586
    7. '
' → logprob: -11.502126693725586
    8. '```' → logprob: -11.502126693725586
    9. ',' → logprob: -12.377126693725586
    10. '  ' → logprob: -12.377126693725586

Token 1015: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006490480620414019
    2. 'return' → logprob: -5.131490707397461
    3. ' return' → logprob: -7.506490707397461
    4. '       ' → logprob: -11.881490707397461
    5. '	return' → logprob: -12.881490707397461
    6. '   ' → logprob: -14.006490707397461
    7. '    
' → logprob: -14.756490707397461
    8. '	' → logprob: -14.881490707397461
    9. '```' → logprob: -15.006490707397461
    10. '  ' → logprob: -15.756490707397461

Token 1016: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04804283380508423
    2. '   ' → logprob: -3.1730427742004395
    3. ' return' → logprob: -5.2980427742004395
    4. '       ' → logprob: -11.673043251037598
    5. 'def' → logprob: -11.923043251037598
    6. '	return' → logprob: -12.548043251037598
    7. '
' → logprob: -12.798043251037598
    8. '  ' → logprob: -13.048043251037598
    9. 'else' → logprob: -13.298043251037598
    10. '    
' → logprob: -13.673043251037598

Token 1017: ' car' (ID: 1669)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0027404469437897205
    2. '   ' → logprob: -6.002740383148193
    3. ' return' → logprob: -8.252740859985352
    4. 'else' → logprob: -12.627740859985352
    5. '```' → logprob: -15.127740859985352
    6. 'result' → logprob: -15.502740859985352
    7. '	return' → logprob: -15.877740859985352
    8. 'if' → logprob: -15.877740859985352
    9. ' ' → logprob: -16.62774085998535
    10. 'res' → logprob: -17.00274085998535

Token 1018: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15671460330486298
    2. 'pow' → logprob: -2.406714677810669
    3. '   ' → logprob: -3.656714677810669
    4. ' return' → logprob: -4.40671443939209
    5. 'n' → logprob: -5.03171443939209
    6. 'd' → logprob: -5.28171443939209
    7. 'x' → logprob: -6.03171443939209
    8. 'fact' → logprob: -6.40671443939209
    9. ' n' → logprob: -8.03171443939209
    10. ' pow' → logprob: -8.65671443939209

Token 1019: ' suite' (ID: 13800)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5034139752388
    2. 'pow' → logprob: -1.3784139156341553
    3. ' return' → logprob: -3.0034139156341553
    4. ' puissance' → logprob: -3.8784139156341553
    5. 'pu' → logprob: -4.253414154052734
    6. 'def' → logprob: -4.253414154052734
    7. 'result' → logprob: -4.378414154052734
    8. '#' → logprob: -4.878414154052734
    9. 'solution' → logprob: -5.378414154052734
    10. ' solution' → logprob: -5.628414154052734

Token 1020: ' devient' (ID: 63488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.392922580242157
    2. '=' → logprob: -1.3929226398468018
    3. ' est' → logprob: -3.5179226398468018
    4. '   ' → logprob: -4.267922401428223
    5. 'return' → logprob: -4.642922401428223
    6. ' return' → logprob: -5.017922401428223
    7. 'est' → logprob: -5.142922401428223
    8. ' n' → logprob: -6.017922401428223
    9. 'x' → logprob: -6.267922401428223
    10. 'n' → logprob: -6.892922401428223

Token 1021: ' constante' (ID: 49652)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00038658222183585167
    2. '(pow' → logprob: -8.375386238098145
    3. 'x' → logprob: -9.375386238098145
    4. '1' → logprob: -10.250386238098145
    5. ' pow' → logprob: -10.500386238098145
    6. '(' → logprob: -12.375386238098145
    7. 'power' → logprob: -13.500386238098145
    8. '(x' → logprob: -13.875386238098145
    9. '```' → logprob: -13.875386238098145
    10. '
' → logprob: -15.000386238098145

Token 1022: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010491237044334412
    2. 'return' → logprob: -7.376049041748047
    3. '       ' → logprob: -8.626049041748047
    4. ':' → logprob: -8.751049041748047
    5. ' return' → logprob: -9.876049041748047
    6. ',' → logprob: -11.251049041748047
    7. '```' → logprob: -11.751049041748047
    8. '  ' → logprob: -13.126049041748047
    9. '.' → logprob: -13.251049041748047
    10. ' (' → logprob: -13.501049041748047

Token 1023: 't' (ID: 83)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25202006101608276
    2. 'pow' → logprob: -1.5020201206207275
    3. 'x' → logprob: -10.377019882202148
    4. '   ' → logprob: -10.877019882202148
    5. ' return' → logprob: -11.002019882202148
    6. '```' → logprob: -12.002019882202148
    7. 'power' → logprob: -12.127019882202148
    8. 'def' → logprob: -12.752019882202148
    9. ' pow' → logprob: -13.002019882202148
    10. 'fact' → logprob: -13.127019882202148

Token 1024: 'ous' (ID: 784)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.1540818214416504
    2. 'erm' → logprob: -1.2790818214416504
    3. 'x' → logprob: -1.4040818214416504
    4. '=' → logprob: -2.6540818214416504
    5. '=x' → logprob: -3.9040818214416504
    6. 'return' → logprob: -4.52908182144165
    7. 'er' → logprob: -4.65408182144165
    8. 'pow' → logprob: -4.90408182144165
    9. ' =' → logprob: -5.02908182144165
    10. '0' → logprob: -5.52908182144165

Token 1025: ' les' (ID: 1341)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.35017675161361694
    2. ' ég' → logprob: -1.6001768112182617
    3. ' equal' → logprob: -3.1001768112182617
    4. ' x' → logprob: -3.9751768112182617
    5. '(x' → logprob: -4.850176811218262
    6. '=' → logprob: -4.975176811218262
    7. ' =' → logprob: -5.600176811218262
    8. 'equal' → logprob: -5.850176811218262
    9. 'les' → logprob: -5.975176811218262
    10. ' les' → logprob: -6.225176811218262

Token 1026: ' termes' (ID: 72480)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009836367331445217
    2. 'terms' → logprob: -5.259836196899414
    3. 'equal' → logprob: -6.509836196899414
    4. 'elements' → logprob: -7.259836196899414
    5. 'values' → logprob: -7.384836196899414
    6. '=' → logprob: -8.134836196899414
    7. 'val' → logprob: -8.259836196899414
    8. ' x' → logprob: -8.759836196899414
    9. ' equal' → logprob: -8.759836196899414
    10. '...' → logprob: -8.884836196899414

Token 1027: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6499121785163879
    2. ' =' → logprob: -1.1499121189117432
    3. ' sont' → logprob: -2.524912118911743
    4. 's' → logprob: -3.524912118911743
    5. ' ég' → logprob: -4.399912357330322
    6. '#' → logprob: -4.524912357330322
    7. ' are' → logprob: -4.899912357330322
    8. ' seront' → logprob: -6.024912357330322
    9. '```' → logprob: -6.149912357330322
    10. ')' → logprob: -6.149912357330322

Token 1028: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007603150443173945
    2. ' x' → logprob: -7.375760078430176
    3. 'equal' → logprob: -9.125760078430176
    4. ' equal' → logprob: -11.125760078430176
    5. 'égal' → logprob: -12.625760078430176
    6. ' ég' → logprob: -12.625760078430176
    7. '```' → logprob: -14.000760078430176
    8. '=' → logprob: -14.500760078430176
    9. ' égal' → logprob: -15.375760078430176
    10. 'equals' → logprob: -15.375760078430176

Token 1029: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24530093371868134
    2. '   ' → logprob: -2.1203010082244873
    3. ')
' → logprob: -3.1203010082244873
    4. '),' → logprob: -4.245300769805908
    5. '**' → logprob: -4.370300769805908
    6. ')**' → logprob: -4.995300769805908
    7. ' )' → logprob: -5.620300769805908
    8. '```' → logprob: -5.745300769805908
    9. '):
' → logprob: -6.120300769805908
    10. ',' → logprob: -6.120300769805908

Token 1030: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017674085684120655
    2. 'return' → logprob: -6.376767635345459
    3. '       ' → logprob: -10.0017671585083
    4. '```' → logprob: -11.3767671585083
    5. ' return' → logprob: -12.0017671585083
    6. '	return' → logprob: -14.0017671585083
    7. '   ' → logprob: -14.0017671585083
    8. 'result' → logprob: -15.6267671585083
    9. '	' → logprob: -15.7517671585083
    10. 'if' → logprob: -16.376768112182617

Token 1031: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03830701485276222
    2. '   ' → logprob: -3.288306951522827
    3. ' return' → logprob: -8.663307189941406
    4. 'if' (adapté à ' if') → logprob: -9.913307189941406
    5. '	return' → logprob: -11.163307189941406
    6. '       ' → logprob: -11.538307189941406
    7. '```' → logprob: -11.538307189941406
    8. 'result' → logprob: -12.788307189941406
    9. 'ret' → logprob: -12.913307189941406
    10. ' ' → logprob: -14.288307189941406

Token 1032: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00861456897109747
    2. ' d' → logprob: -4.758614540100098
    3. '	d' → logprob: -17.008615493774414
    4. '   ' → logprob: -17.633615493774414
    5. ' ' → logprob: -18.883615493774414
    6. ' ' → logprob: -19.508615493774414
    7. '  ' → logprob: -20.758615493774414
    8. '(d' → logprob: -21.133615493774414
    9. 'not' → logprob: -21.633615493774414
    10. '_d' → logprob: -21.883615493774414

Token 1033: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03807006776332855
    2. ' ==' → logprob: -3.2880699634552
    3. '==
' → logprob: -10.663069725036621
    4. '0' → logprob: -13.163069725036621
    5. '=' → logprob: -13.413069725036621
    6. ')==' → logprob: -14.538069725036621
    7. '()==' → logprob: -14.788069725036621
    8. '===' → logprob: -15.163069725036621
    9. ']==' → logprob: -15.288069725036621
    10. '[' → logprob: -16.038070678710938

Token 1034: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.000911712646484
    4. '۰' → logprob: -17.563411712646484
    5. '00' → logprob: -18.688411712646484
    6. ' ' → logprob: -18.938411712646484
    7. '000' → logprob: -19.125911712646484
    8. '  ' → logprob: -19.188411712646484
    9. '```' → logprob: -19.438411712646484
    10. '０' → logprob: -19.500911712646484

Token 1035: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -18.625001907348633
    4. ' ' → logprob: -19.437501907348633
    5. '=' → logprob: -19.500001907348633
    6. '  ' → logprob: -19.625001907348633
    7. '00' → logprob: -19.750001907348633
    8. '   ' → logprob: -19.937501907348633
    9. '000' → logprob: -20.062501907348633
    10. '﻿' → logprob: -20.687501907348633

Token 1036: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10208499431610107
    2. ':
' → logprob: -2.3520851135253906
    3. '   ' → logprob: -7.352085113525391
    4. '       ' → logprob: -7.352085113525391
    5. ':return' → logprob: -7.477085113525391
    6. 'return' → logprob: -11.10208511352539
    7. ':
' → logprob: -11.85208511352539
    8. ' return' → logprob: -12.85208511352539
    9. '	' → logprob: -14.10208511352539
    10. ':

' → logprob: -14.47708511352539

Token 1037: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21071450412273407
    2. 'return' → logprob: -1.7107144594192505
    3. '   ' → logprob: -4.710714340209961
    4. ' return' → logprob: -8.460714340209961
    5. ':return' → logprob: -10.835714340209961
    6. ':' → logprob: -11.210714340209961
    7. ':
' → logprob: -11.460714340209961
    8. '	return' → logprob: -13.210714340209961
    9. '	' → logprob: -13.710714340209961
    10. '     ' → logprob: -15.085714340209961

Token 1038: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.636475493200123e-05
    2. '   ' → logprob: -9.500076293945312
    3. ' return' → logprob: -13.500076293945312
    4. '	return' → logprob: -18.500076293945312
    5. ' ' → logprob: -21.125076293945312
    6. '{return' → logprob: -21.250076293945312
    7. 'eturn' → logprob: -22.125076293945312
    8. '       ' → logprob: -22.250076293945312
    9. '```' → logprob: -22.250076293945312
    10. 'ret' → logprob: -22.625076293945312

Token 1039: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0001600347168277949
    2. ' pow' → logprob: -8.750160217285156
    3. '(pow' → logprob: -13.500160217285156
    4. 'power' → logprob: -16.000160217285156
    5. '   ' → logprob: -17.000160217285156
    6. '_pow' → logprob: -17.625160217285156
    7. 'Pow' → logprob: -18.750160217285156
    8. ' ' → logprob: -19.125160217285156
    9. '.pow' → logprob: -20.375160217285156
    10. 'powers' → logprob: -21.125160217285156

Token 1040: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00015860427811276168
    2. '(' → logprob: -8.750158309936523
    3. 'x' → logprob: -16.250158309936523
    4. '(
' → logprob: -17.375158309936523
    5. '(base' → logprob: -21.000158309936523
    6. '((' → logprob: -21.750158309936523
    7. ' (' → logprob: -22.250158309936523
    8. '(pow' → logprob: -22.250158309936523
    9. '(
' → logprob: -23.500158309936523
    10. '(input' → logprob: -23.500158309936523

Token 1041: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048656631261110306
    2. ',n' → logprob: -3.048656702041626
    3. 'n' → logprob: -10.548656463623047
    4. ' ,' → logprob: -10.673656463623047
    5. '(n' → logprob: -10.923656463623047
    6. ',
' → logprob: -14.048656463623047
    7. '(' → logprob: -15.048656463623047
    8. ' n' → logprob: -16.048656463623047
    9. ',d' → logprob: -16.298656463623047
    10. '%' → logprob: -16.673656463623047

Token 1042: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.704273118884885e-07
    2. ' n' → logprob: -14.250000953674316
    3. '	n' → logprob: -20.125
    4. '(n' → logprob: -20.75
    5. '$n' → logprob: -21.0
    6. ')n' → logprob: -21.375
    7. '   ' → logprob: -21.625
    8. '[n' → logprob: -21.625
    9. ',n' → logprob: -22.875
    10. '%n' → logprob: -23.0

Token 1043: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009056262206286192
    2. '%' → logprob: -7.500905513763428
    3. ')' → logprob: -8.000905990600586
    4. ' ,' → logprob: -11.500905990600586
    5. ' %' → logprob: -13.250905990600586
    6. 'MOD' → logprob: -13.625905990600586
    7. 'mod' → logprob: -14.125905990600586
    8. '```' → logprob: -14.250905990600586
    9. '%,' → logprob: -14.500905990600586
    10. '*' → logprob: -14.750905990600586

Token 1044: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.306760805164231e-05
    2. ' MOD' → logprob: -11.25001335144043
    3. 'MO' → logprob: -21.75001335144043
    4. '_MOD' → logprob: -22.75001335144043
    5. '.MOD' → logprob: -24.25001335144043
    6. '   ' → logprob: -24.87501335144043
    7. 'MODE' → logprob: -25.62501335144043
    8. 'MD' → logprob: -25.87501335144043
    9. ' ' → logprob: -26.00001335144043
    10. '
' → logprob: -27.00001335144043

Token 1045: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.978233846486546e-05
    2. '   ' → logprob: -10.000049591064453
    3. ')
' → logprob: -12.875049591064453
    4. ' )' → logprob: -13.875049591064453
    5. ')return' → logprob: -14.500049591064453
    6. ')

' → logprob: -16.125049591064453
    7. '))' → logprob: -17.250049591064453
    8. ')#' → logprob: -17.500049591064453
    9. ')
' → logprob: -17.750049591064453
    10. ')`' → logprob: -17.875049591064453

Token 1046: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16630271077156067
    2. 'res' → logprob: -2.9163026809692383
    3. '#' → logprob: -3.4163026809692383
    4. 'result' → logprob: -3.7913026809692383
    5. '
' → logprob: -3.9163026809692383
    6. '    
' → logprob: -4.541302680969238
    7. 'a' → logprob: -6.041302680969238
    8. 'ans' → logprob: -6.291302680969238
    9. 'from' → logprob: -6.541302680969238
    10. 'n' → logprob: -6.666302680969238

Token 1047: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.22635941207408905
    2. '#' (adapté à ' #') → logprob: -2.6013593673706055
    3. 'result' → logprob: -2.7263593673706055
    4. 'ans' → logprob: -3.4763593673706055
    5. 'dp' → logprob: -3.8513593673706055
    6. '   ' → logprob: -5.3513593673706055
    7. 's' → logprob: -6.7263593673706055
    8. 'ret' → logprob: -7.1013593673706055
    9. 'total' → logprob: -7.3513593673706055
    10. 'r' → logprob: -7.4763593673706055

Token 1048: ' Calcul' (ID: 57243)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5633643865585327
    2. '#' → logprob: -1.0633643865585327
    3. 'ans' → logprob: -3.8133645057678223
    4. 'result' → logprob: -4.188364505767822
    5. 'num' → logprob: -4.563364505767822
    6. 'def' → logprob: -4.563364505767822
    7. 'if' → logprob: -5.563364505767822
    8. 'r' → logprob: -5.688364505767822
    9. 'a' → logprob: -5.813364505767822
    10. 'dp' → logprob: -6.188364505767822

Token 1049: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6060057878494263
    2. 'res' → logprob: -1.2310057878494263
    3. 'ans' → logprob: -3.2310056686401367
    4. 'result' → logprob: -3.6060056686401367
    5. 'def' → logprob: -4.106005668640137
    6. '(ans' → logprob: -4.356005668640137
    7. 's' → logprob: -4.481005668640137
    8. 'a' → logprob: -4.731005668640137
    9. '(res' → logprob: -5.106005668640137
    10. 'de' → logprob: -5.106005668640137

Token 1050: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.6549688577651978
    2. 'pow' → logprob: -1.7799688577651978
    3. 'inv' → logprob: -2.404968738555908
    4. 'def' → logprob: -2.529968738555908
    5. 'd' → logprob: -2.779968738555908
    6. '#' → logprob: -2.904968738555908
    7. 'x' → logprob: -3.154968738555908
    8. 'ans' → logprob: -3.404968738555908
    9. 'fact' → logprob: -3.404968738555908
    10. 'a' → logprob: -3.529968738555908

Token 1051: ' valeur' (ID: 41664)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.23641695082187653
    2. 'result' → logprob: -2.986417055130005
    3. 'num' → logprob: -3.236417055130005
    4. '#' → logprob: -3.361417055130005
    5. 'dp' → logprob: -3.736417055130005
    6. 'pow' → logprob: -4.861416816711426
    7. 'den' → logprob: -5.111416816711426
    8. 'ans' → logprob: -5.236416816711426
    9. 'inv' → logprob: -5.361416816711426
    10. 'term' → logprob: -5.486416816711426

Token 1052: ' k' (ID: 372)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.32311999797821045
    2. 'result' → logprob: -2.5731201171875
    3. '   ' → logprob: -2.8231201171875
    4. 'ans' → logprob: -3.1981201171875
    5. '(ans' → logprob: -3.9481201171875
    6. '(res' → logprob: -4.1981201171875
    7. '(r' → logprob: -4.8231201171875
    8. '(x' → logprob: -5.0731201171875
    9. 'r' → logprob: -5.0731201171875
    10. '(result' → logprob: -5.0731201171875

Token 1053: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6334887742996216
    2. '=' → logprob: -0.7584887742996216
    3. '=k' → logprob: -7.633488655090332
    4. '   ' → logprob: -7.883488655090332
    5. '=n' → logprob: -11.883488655090332
    6. 'k' → logprob: -12.008488655090332
    7. 's' → logprob: -13.258488655090332
    8. 'n' → logprob: -13.383488655090332
    9. ',' → logprob: -13.383488655090332
    10. '=int' → logprob: -13.633488655090332

Token 1054: ' qui' (ID: 2780)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0016087667318060994
    2. '   ' → logprob: -7.251608848571777
    3. '(k' → logprob: -8.001608848571777
    4. ' k' → logprob: -8.876608848571777
    5. 'n' → logprob: -9.001608848571777
    6. '#' → logprob: -9.001608848571777
    7. '=' → logprob: -9.751608848571777
    8. ' =' → logprob: -10.501608848571777
    9. '(n' → logprob: -11.126608848571777
    10. '=k' → logprob: -11.626608848571777

Token 1055: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002361974911764264
    2. '=(' → logprob: -6.75236177444458
    3. ' =' → logprob: -6.87736177444458
    4. 'est' → logprob: -10.002362251281738
    5. '=n' → logprob: -10.127362251281738
    6. 'cor' → logprob: -11.127362251281738
    7. '=((' → logprob: -11.252362251281738
    8. 'n' → logprob: -11.502362251281738
    9. '=
' → logprob: -11.627362251281738
    10. '=int' → logprob: -12.127362251281738

Token 1056: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7664204239845276
    2. '(n' → logprob: -1.2664203643798828
    3. '(x' → logprob: -1.7664203643798828
    4. 'x' → logprob: -3.266420364379883
    5. '(d' → logprob: -4.391420364379883
    6. 'd' → logprob: -4.766420364379883
    7. 'pow' → logprob: -5.016420364379883
    8. '(min' → logprob: -5.016420364379883
    9. '((' → logprob: -5.641420364379883
    10. 'min' → logprob: -5.891420364379883

Token 1057: ' div' (ID: 4223)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.8489343523979187
    2. 'd' → logprob: -1.9739344120025635
    3. '*' → logprob: -2.2239344120025635
    4. 'div' → logprob: -2.9739344120025635
    5. ' *' → logprob: -3.2239344120025635
    6. ' //' → logprob: -3.2239344120025635
    7. 'k' → logprob: -3.3489344120025635
    8. '_div' → logprob: -3.4739344120025635
    9. '*k' → logprob: -3.7239344120025635
    10. '=' → logprob: -3.7239344120025635

Token 1058: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.18537920713424683
    2. '//' → logprob: -2.4353792667388916
    3. 'ided' → logprob: -3.5603792667388916
    4. 'd' → logprob: -3.6853792667388916
    5. 'div' → logprob: -4.6853790283203125
    6. '#' → logprob: -5.0603790283203125
    7. 'isible' → logprob: -5.6853790283203125
    8. 'isée' → logprob: -6.0603790283203125
    9. 'ise' → logprob: -6.6853790283203125
    10. 'mod' → logprob: -6.6853790283203125

Token 1059: ' par' (ID: 686)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1071956604719162
    2. 'par' → logprob: -2.4821956157684326
    3. 'by' → logprob: -4.732195854187012
    4. ' par' → logprob: -6.107195854187012
    5. '#' → logprob: -6.482195854187012
    6. 'mod' → logprob: -6.732195854187012
    7. '//' → logprob: -6.857195854187012
    8. ' by' → logprob: -7.107195854187012
    9. '(d' → logprob: -7.607195854187012
    10. '-d' → logprob: -8.232195854187012

Token 1060: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.816093228830141e-06
    2. ' d' → logprob: -12.87500286102295
    3. '	d' → logprob: -17.000001907348633
    4. 'pow' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '```' → logprob: -18.125001907348633
    7. '_d' → logprob: -18.625001907348633
    8. '(d' → logprob: -18.625001907348633
    9. ' ' → logprob: -18.750001907348633
    10. '  ' → logprob: -18.750001907348633

Token 1061: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6434728503227234
    2. 'k' → logprob: -0.8934728503227234
    3. ' =' → logprob: -3.143472909927368
    4. '=' → logprob: -3.893472909927368
    5. '=k' → logprob: -7.018472671508789
    6. ' k' → logprob: -7.893472671508789
    7. 'def' → logprob: -7.893472671508789
    8. ',' → logprob: -10.268472671508789
    9. '#' → logprob: -10.518472671508789
    10. ':' → logprob: -10.518472671508789

Token 1062: ' modulo' (ID: 112372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0052392068319022655
    2. '   ' → logprob: -5.255239009857178
    3. ' k' → logprob: -12.380239486694336
    4. '	k' → logprob: -14.880239486694336
    5. '```' → logprob: -15.005239486694336
    6. '  ' → logprob: -15.880239486694336
    7. ' ' → logprob: -16.755239486694336
    8. 'x' → logprob: -16.880239486694336
    9. 'def' → logprob: -16.880239486694336
    10. 'kx' → logprob: -17.380239486694336

Token 1063: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.014703650027513504
    2. 'x' → logprob: -4.764703750610352
    3. '(x' → logprob: -5.639703750610352
    4. 'pow' → logprob: -6.889703750610352
    5. '(M' → logprob: -7.389703750610352
    6. ' MOD' → logprob: -8.139703750610352
    7. 'k' → logprob: -9.014703750610352
    8. 'inv' → logprob: -9.389703750610352
    9. '_MOD' → logprob: -9.889703750610352
    10. '(' → logprob: -10.014703750610352

Token 1064: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3893388509750366
    2. 'k' → logprob: -1.1393388509750366
    3. '=' → logprob: -6.764338970184326
    4. ' =' → logprob: -7.514338970184326
    5. '```' → logprob: -7.889338970184326
    6. ' k' → logprob: -8.764338493347168
    7. '=k' → logprob: -8.889338493347168
    8. 'def' → logprob: -10.139338493347168
    9. '    
' → logprob: -11.514338493347168
    10. '`' → logprob: -11.514338493347168

Token 1065: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.38707083463668823
    2. '   ' → logprob: -1.137070894241333
    3. '```' → logprob: -8.762070655822754
    4. ' k' → logprob: -10.262070655822754
    5. '	k' → logprob: -12.512070655822754
    6. '`' → logprob: -13.387070655822754
    7. '``' → logprob: -13.637070655822754
    8. 'def' → logprob: -14.262070655822754
    9. '    
' → logprob: -14.387070655822754
    10. '   ' → logprob: -15.512070655822754

Token 1066: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -8.554343366995454e-05
    2. '   ' → logprob: -9.375085830688477
    3. '```' → logprob: -14.750085830688477
    4. ' k' → logprob: -15.375085830688477
    5. '	k' → logprob: -18.000085830688477
    6. '#' (adapté à ' #') → logprob: -18.250085830688477
    7. 'def' → logprob: -18.500085830688477
    8. '
' → logprob: -18.750085830688477
    9. 'kx' → logprob: -19.000085830688477
    10. '``' → logprob: -19.125085830688477

Token 1067: ' L' (ID: 451)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0206720617134124e-05
    2. '   ' → logprob: -11.62501049041748
    3. ' k' → logprob: -14.62501049041748
    4. '```' → logprob: -15.12501049041748
    5. 'def' → logprob: -15.25001049041748
    6. '#' → logprob: -15.25001049041748
    7. '	k' → logprob: -17.750009536743164
    8. '    
' → logprob: -18.000009536743164
    9. '
' → logprob: -18.125009536743164
    10. '`' → logprob: -18.125009536743164

Token 1068: ''in' (ID: 17942)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.010064641013741493
    2. 'x' → logprob: -4.885064601898193
    3. '#' → logprob: -6.260064601898193
    4. 'kx' → logprob: -9.010065078735352
    5. 'val' → logprob: -9.385065078735352
    6. 'def' → logprob: -9.635065078735352
    7. 'a' → logprob: -10.635065078735352
    8. 'div' → logprob: -10.760065078735352
    9. 'inv' → logprob: -10.760065078735352
    10. '```' → logprob: -10.760065078735352

Token 1069: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10505368560552597
    2. 't' → logprob: -2.355053663253784
    3. 'verse' → logprob: -6.230053901672363
    4. '#' → logprob: -7.230053901672363
    5. 'tention' → logprob: -8.230053901672363
    6. 'value' → logprob: -8.480053901672363
    7. 'teger' → logprob: -8.855053901672363
    8. '[' → logprob: -8.980053901672363
    9. 'x' → logprob: -8.980053901672363
    10. '=' → logprob: -8.980053901672363

Token 1070: 'ocation' (ID: 2355)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.35490044951438904
    2. 'd' → logprob: -1.7299004793167114
    3. 'v' → logprob: -2.979900360107422
    4. 'x' → logprob: -3.229900360107422
    5. '_k' → logprob: -3.854900360107422
    6. '_d' → logprob: -5.479900360107422
    7. '_x' → logprob: -5.479900360107422
    8. '=' → logprob: -7.979900360107422
    9. 'val' → logprob: -8.229900360107422
    10. 'inv' → logprob: -8.979900360107422

Token 1071: ' de' (ID: 334)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7103201150894165
    2. 'd' → logprob: -1.2103201150894165
    3. 'inv' → logprob: -1.9603201150894165
    4. '_k' → logprob: -3.085319995880127
    5. '_d' → logprob: -4.835319995880127
    6. '_inv' → logprob: -4.960319995880127
    7. 'x' → logprob: -5.835319995880127
    8. 'def' → logprob: -6.835319995880127
    9. '(k' → logprob: -7.585319995880127
    10. '_x' → logprob: -7.585319995880127

Token 1072: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0005421888781711459
    2. 'pow' → logprob: -8.375542640686035
    3. '(inv' → logprob: -8.750542640686035
    4. 'x' → logprob: -8.875542640686035
    5. '(x' → logprob: -12.875542640686035
    6. 'd' → logprob: -13.125542640686035
    7. '(' → logprob: -13.375542640686035
    8. 'def' → logprob: -13.500542640686035
    9. ' inv' → logprob: -13.500542640686035
    10. 'k' → logprob: -13.750542640686035

Token 1073: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.027217423543334007
    2. '(d' → logprob: -3.777217388153076
    3. '_d' → logprob: -5.777217388153076
    4. 'D' → logprob: -7.652217388153076
    5. 'inv' → logprob: -8.277217864990234
    6. 'mod' → logprob: -9.777217864990234
    7. '(inv' → logprob: -10.527217864990234
    8. '(' → logprob: -11.777217864990234
    9. '=' → logprob: -12.277217864990234
    10. 'val' → logprob: -12.402217864990234

Token 1074: ')' (ID: 8)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.04251205176115036
    2. ')' → logprob: -3.7925119400024414
    3. '())' → logprob: -4.167511940002441
    4. 'd' → logprob: -6.417511940002441
    5. '(' → logprob: -6.917511940002441
    6. '))' → logprob: -7.292511940002441
    7. '(x' → logprob: -10.042511940002441
    8. ')d' → logprob: -10.167511940002441
    9. '(
' → logprob: -10.292511940002441
    10. '()))' → logprob: -10.417511940002441

Token 1075: ' retourne' (ID: 178818)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08240927010774612
    2. ' =' → logprob: -3.207409381866455
    3. ')' → logprob: -3.457409381866455
    4. '*' → logprob: -5.832409381866455
    5. ' *' → logprob: -7.082409381866455
    6. '()' → logprob: -7.207409381866455
    7. '(x' → logprob: -7.832409381866455
    8. '(' → logprob: -7.957409381866455
    9. 'x' → logprob: -8.457408905029297
    10. ')=' → logprob: -8.582408905029297

Token 1076: ' l' (ID: 305)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.19867265224456787
    2. '(inv' → logprob: -1.9486726522445679
    3. 'inv' → logprob: -3.5736727714538574
    4. '((' → logprob: -5.323672771453857
    5. 'x' → logprob: -5.948672771453857
    6. ' (' → logprob: -6.698672771453857
    7. ' inv' → logprob: -7.698672771453857
    8. '(in' → logprob: -8.9486722946167
    9. '(pow' → logprob: -9.6986722946167
    10. '(k' → logprob: -9.8236722946167

Token 1077: ''in' (ID: 17942)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.33129188418388367
    2. '(x' → logprob: -2.206291913986206
    3. '*x' → logprob: -3.456291913986206
    4. ' *' → logprob: -3.581291913986206
    5. 'n' → logprob: -3.706291913986206
    6. '*(' → logprob: -3.956291913986206
    7. 'x' → logprob: -4.081291675567627
    8. '(' → logprob: -4.331291675567627
    9. 'a' → logprob: -4.956291675567627
    10. '%' → logprob: -5.706291675567627

Token 1078: 'verse' (ID: 7093)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.3021465837955475
    2. '(x' → logprob: -1.677146553993225
    3. 'v' → logprob: -2.6771466732025146
    4. 'verse' → logprob: -5.9271464347839355
    5. '(v' → logprob: -7.0521464347839355
    6. 'd' → logprob: -7.4271464347839355
    7. '(k' → logprob: -7.9271464347839355
    8. '((' → logprob: -8.552146911621094
    9. '(' → logprob: -9.052146911621094
    10. 'x' → logprob: -9.677146911621094

Token 1079: ' multiplic' (ID: 67929)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5583274364471436
    2. '(d' → logprob: -1.3083274364471436
    3. '_d' → logprob: -1.9333274364471436
    4. '(' → logprob: -5.683327674865723
    5. 'x' → logprob: -5.808327674865723
    6. '_x' → logprob: -5.808327674865723
    7. '=' → logprob: -6.808327674865723
    8. '(x' → logprob: -7.308327674865723
    9. ' =' → logprob: -7.433327674865723
    10. '=d' → logprob: -8.683327674865723

Token 1080: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.0001721934968372807
    2. 'cat' → logprob: -9.87517261505127
    3. '```' → logprob: -10.37517261505127
    4. 'itif' → logprob: -10.75017261505127
    5. 'def' → logprob: -11.00017261505127
    6. 'if' → logprob: -11.50017261505127
    7. 'el' → logprob: -11.75017261505127
    8. 'f' → logprob: -12.25017261505127
    9. 't' → logprob: -12.37517261505127
    10. 'act' → logprob: -13.00017261505127

Token 1081: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02934924326837063
    2. '(d' → logprob: -4.154349327087402
    3. ' (' → logprob: -4.779349327087402
    4. '(
' → logprob: -5.654349327087402
    5. ' modulo' → logprob: -7.904349327087402
    6. 'mod' → logprob: -8.279349327087402
    7. 'd' → logprob: -8.779349327087402
    8. ' d' → logprob: -8.904349327087402
    9. ' (
' → logprob: -9.279349327087402
    10. ')' → logprob: -9.404349327087402

Token 1082: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.2200749754119897e-06
    2. ' d' → logprob: -13.375001907348633
    3. '(d' → logprob: -14.250001907348633
    4. '	d' → logprob: -17.500001907348633
    5. '(' → logprob: -19.250001907348633
    6. 'int' → logprob: -19.375001907348633
    7. '   ' → logprob: -20.250001907348633
    8. ' (' → logprob: -20.250001907348633
    9. '%d' → logprob: -20.375001907348633
    10. '
' → logprob: -20.625001907348633

Token 1083: ' modulo' (ID: 112372)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8147526383399963
    2. ' =' → logprob: -1.8147525787353516
    3. 'x' → logprob: -2.1897525787353516
    4. 'k' → logprob: -2.9397525787353516
    5. '_mod' → logprob: -3.0647525787353516
    6. '=' → logprob: -3.1897525787353516
    7. 'mod' → logprob: -3.1897525787353516
    8. '_d' → logprob: -3.4397525787353516
    9. '_val' → logprob: -4.314752578735352
    10. '_x' → logprob: -4.314752578735352

Token 1084: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -8.180258191714529e-06
    2. ' MOD' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.750008583068848
    4. '_MOD' → logprob: -17.87500762939453
    5. 'd' → logprob: -18.25000762939453
    6. 'MO' → logprob: -18.50000762939453
    7. '```' → logprob: -18.62500762939453
    8. '.MOD' → logprob: -18.75000762939453
    9. '(M' → logprob: -19.25000762939453
    10. '`' → logprob: -19.62500762939453

Token 1085: ',
' (ID: 412)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0000711679458618
    2. '   ' → logprob: -1.1250711679458618
    3. 'k' → logprob: -1.2500711679458618
    4. '=' → logprob: -4.000071048736572
    5. ',' → logprob: -7.250071048736572
    6. '=k' → logprob: -7.375071048736572
    7. ' k' → logprob: -7.500071048736572
    8. '	k' → logprob: -8.37507152557373
    9. '(k' → logprob: -9.25007152557373
    10. '_k' → logprob: -9.50007152557373

Token 1086: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03950590640306473
    2. '   ' → logprob: -3.789505958557129
    3. ' k' → logprob: -4.164505958557129
    4. '(k' → logprob: -8.289505958557129
    5. ' (' → logprob: -8.789505958557129
    6. 'x' → logprob: -9.289505958557129
    7. 'kx' → logprob: -10.414505958557129
    8. 'mod' → logprob: -11.289505958557129
    9. 'def' → logprob: -11.664505958557129
    10. ' x' → logprob: -11.789505958557129

Token 1087: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7945297956466675
    2. '(x' → logprob: -1.4195297956466675
    3. '(k' → logprob: -1.9195297956466675
    4. 'x' → logprob: -1.9195297956466675
    5. ' (' → logprob: -4.919529914855957
    6. 'return' → logprob: -5.669529914855957
    7. ' x' → logprob: -7.044529914855957
    8. ' k' → logprob: -7.919529914855957
    9. '   ' → logprob: -8.044529914855957
    10. '*' → logprob: -8.669529914855957

Token 1088: ' ce' (ID: 2357)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0017934665083885193
    2. '(k' → logprob: -7.251793384552002
    3. 'kd' → logprob: -7.876793384552002
    4. 'x' → logprob: -8.37679386138916
    5. 'kx' → logprob: -8.50179386138916
    6. '(x' → logprob: -8.75179386138916
    7. 'inv' → logprob: -10.12679386138916
    8. '((' → logprob: -11.12679386138916
    9. 'tmp' → logprob: -11.37679386138916
    10. '   ' → logprob: -11.50179386138916

Token 1089: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9411593675613403
    2. '=' → logprob: -1.1911593675613403
    3. 'return' → logprob: -2.316159248352051
    4. ' =' → logprob: -2.941159248352051
    5. 'x' → logprob: -3.441159248352051
    6. 'k' → logprob: -3.441159248352051
    7. '#' → logprob: -4.566159248352051
    8. '       ' → logprob: -4.566159248352051
    9. 'val' → logprob: -4.691159248352051
    10. ' return' → logprob: -4.691159248352051

Token 1090: ' permet' (ID: 11798)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3553659915924072
    2. 'return' → logprob: -2.3553659915924072
    3. 'k' → logprob: -2.6053659915924072
    4. ' =' → logprob: -3.2303659915924072
    5. ' return' → logprob: -3.8553659915924072
    6. 'res' → logprob: -3.9803659915924072
    7. '*=' → logprob: -3.9803659915924072
    8. '*' → logprob: -5.605365753173828
    9. 'result' → logprob: -5.730365753173828
    10. '   ' → logprob: -5.980365753173828

Token 1091: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.98386549949646
    2. 'd' → logprob: -1.60886549949646
    3. '   ' → logprob: -1.73386549949646
    4. ' de' → logprob: -2.10886549949646
    5. '(x' → logprob: -2.98386549949646
    6. ' d' → logprob: -3.10886549949646
    7. 'x' → logprob: -4.233865737915039
    8. '(' → logprob: -5.108865737915039
    9. '(d' → logprob: -5.233865737915039
    10. '(de' → logprob: -6.608865737915039

Token 1092: ' procéder' (ID: 150870)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.045244019478559494
    2. '((' → logprob: -3.795243978500366
    3. 'x' → logprob: -4.420244216918945
    4. '(k' → logprob: -4.795244216918945
    5. 'k' → logprob: -7.295244216918945
    6. ' (' → logprob: -7.545244216918945
    7. '(' → logprob: -9.920244216918945
    8. 'mul' → logprob: -9.920244216918945
    9. ' x' → logprob: -10.545244216918945
    10. ' ((' → logprob: -10.545244216918945

Token 1093: ' à' (ID: 1221)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.20806941390037537
    2. '(' → logprob: -2.208069324493408
    3. '((' → logprob: -3.083069324493408
    4. '   ' → logprob: -4.208069324493408
    5. 'x' → logprob: -5.208069324493408
    6. '*' → logprob: -5.708069324493408
    7. '=' → logprob: -6.083069324493408
    8. ' (' → logprob: -6.458069324493408
    9. '(k' → logprob: -6.958069324493408
    10. 'return' → logprob: -7.333069324493408

Token 1094: ' la' (ID: 557)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.038683366030454636
    2. 'x' → logprob: -3.2886834144592285
    3. '((' → logprob: -7.5386834144592285
    4. 'multip' → logprob: -10.41368293762207
    5. '(k' → logprob: -10.53868293762207
    6. 'k' → logprob: -10.53868293762207
    7. ' (' → logprob: -11.28868293762207
    8. '(' → logprob: -12.53868293762207
    9. '(((' → logprob: -13.16368293762207
    10. 'mul' → logprob: -13.66368293762207

Token 1095: ' division' (ID: 21629)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0831151232123375
    2. 'x' → logprob: -2.8331151008605957
    3. '(n' → logprob: -5.083115100860596
    4. '(k' → logprob: -5.208115100860596
    5. '((' → logprob: -5.708115100860596
    6. '(' → logprob: -6.083115100860596
    7. 'multip' → logprob: -6.958115100860596
    8. ' (' → logprob: -7.208115100860596
    9. 'k' → logprob: -7.333115100860596
    10. 'calcul' → logprob: -7.708115100860596

Token 1096: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.227071151137352
    2. 'k' → logprob: -1.8520711660385132
    3. ' =' → logprob: -3.8520710468292236
    4. '(k' → logprob: -4.102071285247803
    5. '=' → logprob: -5.352071285247803
    6. 'x' → logprob: -6.352071285247803
    7. '(x' → logprob: -7.602071285247803
    8. 'kx' → logprob: -8.227070808410645
    9. '=k' → logprob: -8.227070808410645
    10. '(' → logprob: -8.477070808410645

Token 1097: ' un' (ID: 537)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0009286141721531749
    2. ' MOD' → logprob: -7.1259284019470215
    3. 'mod' → logprob: -9.25092887878418
    4. 'le' → logprob: -11.37592887878418
    5. ' modulo' → logprob: -12.25092887878418
    6. 'def' → logprob: -12.87592887878418
    7. '_MOD' → logprob: -13.12592887878418
    8. '(M' → logprob: -13.62592887878418
    9. '(mod' → logprob: -13.75092887878418
    10. 'Modulo' → logprob: -13.87592887878418

Token 1098: ' corps' (ID: 29363)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.11382941901683807
    2. 'mod' → logprob: -2.7388293743133545
    3. 'def' → logprob: -3.6138293743133545
    4. '```' → logprob: -5.488829612731934
    5. '
' → logprob: -6.113829612731934
    6. '#' → logprob: -6.488829612731934
    7. ' MOD' → logprob: -6.613829612731934
    8. 'pow' → logprob: -6.988829612731934
    9. 'return' → logprob: -7.113829612731934
    10. ' modulo' → logprob: -7.363829612731934

Token 1099: ' fini' (ID: 63561)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7638528943061829
    2. 'mod' → logprob: -1.138852834701538
    3. 'return' → logprob: -2.888852834701538
    4. 'x' → logprob: -2.888852834701538
    5. 'MOD' → logprob: -2.888852834701538
    6. ')' → logprob: -4.013853073120117
    7. '`' → logprob: -4.888853073120117
    8. '(x' → logprob: -5.513853073120117
    9. '```' → logprob: -6.013853073120117
    10. '=' → logprob: -6.263853073120117

Token 1100: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2850136160850525
    2. 'k' → logprob: -1.4100136756896973
    3. ' k' → logprob: -6.410013675689697
    4. '(k' → logprob: -7.035013675689697
    5. ' =' → logprob: -8.285013198852539
    6. 'return' → logprob: -8.285013198852539
    7. '```' → logprob: -8.410013198852539
    8. 'result' → logprob: -9.410013198852539
    9. ' (' → logprob: -9.535013198852539
    10. ',' → logprob: -9.785013198852539

Token 1101: '   ' (ID: 271)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07901790738105774
    2. '   ' → logprob: -2.5790178775787354
    3. ' k' → logprob: -9.454017639160156
    4. '```' → logprob: -10.079017639160156
    5. '	k' → logprob: -12.204017639160156
    6. '`' → logprob: -13.704017639160156
    7. '    
' → logprob: -14.454017639160156
    8. '``' → logprob: -14.954017639160156
    9. '=k' → logprob: -16.079017639160156
    10. '=' → logprob: -16.204017639160156

Token 1102: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.000397422380046919
    2. '   ' → logprob: -7.875397205352783
    3. ' k' → logprob: -11.000397682189941
    4. '	k' → logprob: -14.875397682189941
    5. '```' → logprob: -15.250397682189941
    6. '    
' → logprob: -17.250396728515625
    7. ' ' → logprob: -17.875396728515625
    8. 'kx' → logprob: -18.125396728515625
    9. '(k' → logprob: -18.750396728515625
    10. '`' → logprob: -18.750396728515625

Token 1103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407740354537964
    2. ' =' → logprob: -0.9740774035453796
    3. '=k' → logprob: -15.349077224731445
    4. ',' → logprob: -16.849077224731445
    5. '＝' → logprob: -17.224077224731445
    6. '=
' → logprob: -18.224077224731445
    7. ' =
' → logprob: -18.599077224731445
    8. '=}' → logprob: -18.849077224731445
    9. '=

' → logprob: -19.099077224731445
    10. '.=' → logprob: -19.349077224731445

Token 1104: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2255731225013733
    2. 'x' → logprob: -1.6005730628967285
    3. ' (' → logprob: -9.600573539733887
    4. ' x' → logprob: -9.850573539733887
    5. '(' → logprob: -10.475573539733887
    6. '((' → logprob: -11.725573539733887
    7. '(k' → logprob: -14.100573539733887
    8. '{x' → logprob: -14.725573539733887
    9. '   ' → logprob: -15.163073539733887
    10. '	x' → logprob: -15.225573539733887

Token 1105: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.006721995305269957
    2. ' *' → logprob: -5.0067219734191895
    3. '*d' → logprob: -12.131722450256348
    4. '*k' → logprob: -14.256722450256348
    5. '**' → logprob: -15.256722450256348
    6. '   ' → logprob: -15.631722450256348
    7. '*object' → logprob: -16.88172149658203
    8. '*(' → logprob: -17.00672149658203
    9. '*out' → logprob: -17.13172149658203
    10. '*ft' → logprob: -18.25672149658203

Token 1106: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.5048530030981055e-06
    2. ' inv' → logprob: -13.625001907348633
    3. '(inv' → logprob: -15.625001907348633
    4. '.inv' → logprob: -21.250001907348633
    5. 'inf' → logprob: -21.375001907348633
    6. '_inv' → logprob: -21.625001907348633
    7. 'INV' → logprob: -22.250001907348633
    8. 'Inv' → logprob: -22.625001907348633
    9. 'inj' → logprob: -22.750001907348633
    10. 'pow' → logprob: -22.875001907348633

Token 1107: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.005246091168373823
    2. '(' → logprob: -5.255246162414551
    3. 'd' → logprob: -11.38024616241455
    4. ' (' → logprob: -14.13024616241455
    5. '(
' → logprob: -15.75524616241455
    6. '((' → logprob: -17.130245208740234
    7. '(D' → logprob: -18.505245208740234
    8. ' d' → logprob: -18.755245208740234
    9. '(k' → logprob: -19.005245208740234
    10. ',d' → logprob: -19.380245208740234

Token 1108: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007229385431855917
    2. '%' → logprob: -5.007229328155518
    3. ')%' → logprob: -7.632229328155518
    4. ' %' → logprob: -10.882229804992676
    5. ' )' → logprob: -11.882229804992676
    6. '%)' → logprob: -12.757229804992676
    7. '   ' → logprob: -14.882229804992676
    8. ',' → logprob: -16.00722885131836
    9. '),' → logprob: -16.63222885131836
    10. ')
' → logprob: -16.88222885131836

Token 1109: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.004081367049366236
    2. ' %' → logprob: -5.5040812492370605
    3. ')' → logprob: -14.254081726074219
    4. ' %=' → logprob: -14.379081726074219
    5. '%=' → logprob: -14.629081726074219
    6. '%n' → logprob: -15.254081726074219
    7. '   ' → logprob: -15.504081726074219
    8. '
' → logprob: -15.754081726074219
    9. ')%' → logprob: -16.12908172607422
    10. 'k' → logprob: -16.25408172607422

Token 1110: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.704273118884885e-07
    2. ' MOD' → logprob: -14.250000953674316
    3. '_MOD' → logprob: -21.5
    4. 'MO' → logprob: -22.125
    5. '.MOD' → logprob: -22.125
    6. 'mod' → logprob: -23.25
    7. '   ' → logprob: -23.875
    8. '(M' → logprob: -24.0
    9. '(mod' → logprob: -25.5
    10. 'MODE' → logprob: -25.5

Token 1111: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7115629315376282
    2. '   ' → logprob: -0.9615629315376282
    3. 'res' → logprob: -3.3365628719329834
    4. 'result' → logprob: -3.4615628719329834
    5. 'n' → logprob: -3.5865628719329834
    6. 'ans' → logprob: -4.9615631103515625
    7. 'def' → logprob: -5.0865631103515625
    8. 'if' → logprob: -5.4615631103515625
    9. '
' → logprob: -5.9615631103515625
    10. 'm' → logprob: -6.0865631103515625

Token 1112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47561880946159363
    2. 'return' → logprob: -2.350618839263916
    3. 'res' → logprob: -2.475618839263916
    4. 'result' → logprob: -2.850618839263916
    5. 'if' → logprob: -3.225618839263916
    6. 'n' → logprob: -3.600618839263916
    7. '#' → logprob: -3.725618839263916
    8. 'def' → logprob: -3.725618839263916
    9. ')' → logprob: -4.725618839263916
    10. '```' → logprob: -5.350618839263916

Token 1113: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.218174546957016
    2. 'if' → logprob: -2.218174457550049
    3. 'result' → logprob: -2.968174457550049
    4. '#' (adapté à ' #') → logprob: -4.218174457550049
    5. 'ans' → logprob: -4.468174457550049
    6. 'r' → logprob: -5.843174457550049
    7. 's' → logprob: -6.343174457550049
    8. 'def' → logprob: -6.843174457550049
    9. 'c' → logprob: -7.468174457550049
    10. 'return' → logprob: -7.593174457550049

Token 1114: ' Vér' (ID: 159169)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8192448019981384
    2. 'if' → logprob: -0.9442448019981384
    3. 'result' → logprob: -3.194244861602783
    4. '#' → logprob: -3.444244861602783
    5. 'def' → logprob: -3.569244861602783
    6. 'return' → logprob: -3.694244861602783
    7. 'ans' → logprob: -4.194244861602783
    8. 'c' → logprob: -5.319244861602783
    9. 'comb' → logprob: -5.694244861602783
    10. 'fact' → logprob: -5.819244861602783

Token 1115: 'ifie' (ID: 46409)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25423961877822876
    2. 'ification' → logprob: -2.254239559173584
    3. '   ' → logprob: -2.754239559173584
    4. 'ifier' → logprob: -3.504239559173584
    5. 'ifie' → logprob: -4.629239559173584
    6. 'ifiant' → logprob: -4.754239559173584
    7. 'er' → logprob: -5.504239559173584
    8. '#' → logprob: -7.004239559173584
    9. 'r' → logprob: -7.129239559173584
    10. 'ifiez' → logprob: -7.504239559173584

Token 1116: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02878960780799389
    2. 'si' → logprob: -3.778789520263672
    3. '   ' → logprob: -5.278789520263672
    4. ' si' → logprob: -8.653789520263672
    5. ' if' → logprob: -8.778789520263672
    6. 'que' → logprob: -9.278789520263672
    7. 's' → logprob: -12.778789520263672
    8. 'n' → logprob: -12.778789520263672
    9. ' que' → logprob: -13.528789520263672
    10. 'la' → logprob: -14.778789520263672

Token 1117: ''il' (ID: 14683)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5979494452476501
    2. '(k' → logprob: -0.8479494452476501
    3. 'if' → logprob: -4.847949504852295
    4. '(n' → logprob: -4.847949504852295
    5. '(i' → logprob: -6.222949504852295
    6. ''il' → logprob: -6.722949504852295
    7. 'si' → logprob: -6.847949504852295
    8. 'e' → logprob: -7.597949504852295
    9. '(' → logprob: -7.847949504852295
    10. 'n' → logprob: -9.097949028015137

Token 1118: ' serait' (ID: 35762)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5175025463104248
    2. '==' → logprob: -1.1425025463104248
    3. '<' → logprob: -3.142502546310425
    4. '>' → logprob: -3.892502546310425
    5. '<=' → logprob: -4.892502784729004
    6. 'k' → logprob: -5.267502784729004
    7. ' >=' → logprob: -5.392502784729004
    8. ' ==' → logprob: -6.642502784729004
    9. ' <' → logprob: -7.767502784729004
    10. '#' → logprob: -7.767502784729004

Token 1119: ' possible' (ID: 4149)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9089521765708923
    2. '(k' → logprob: -1.158952236175537
    3. 'n' → logprob: -2.783952236175537
    4. 'possible' → logprob: -2.908952236175537
    5. '0' → logprob: -3.783952236175537
    6. 'MOD' → logprob: -3.783952236175537
    7. '(n' → logprob: -4.033952236175537
    8. 'inf' → logprob: -4.783952236175537
    9. '(x' → logprob: -5.033952236175537
    10. 'inut' → logprob: -5.033952236175537

Token 1120: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6575746536254883
    2. 'd' → logprob: -1.5325746536254883
    3. 'de' → logprob: -2.4075746536254883
    4. 'if' → logprob: -2.6575746536254883
    5. '#' → logprob: -2.7825746536254883
    6. 'def' → logprob: -3.9075746536254883
    7. ' d' → logprob: -4.657574653625488
    8. ' de' → logprob: -5.407574653625488
    9. '(k' → logprob: -6.032574653625488
    10. 'k' → logprob: -7.407574653625488

Token 1121: ''acc' (ID: 46331)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -1.5090880393981934
    2. 'ur' → logprob: -1.8840880393981934
    3. 'overflow' → logprob: -1.8840880393981934
    4. ''effect' → logprob: -2.6340880393981934
    5. 'e' → logprob: -2.7590880393981934
    6. 'effect' → logprob: -2.8840880393981934
    7. ''obtenir' → logprob: -3.5090880393981934
    8. 'a' → logprob: -3.6340880393981934
    9. ''utiliser' → logprob: -3.8840880393981934
    10. 'u' → logprob: -4.134088039398193

Token 1122: 'éder' (ID: 56640)
  Prédit: 'éder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éder' → logprob: -0.11698178201913834
    2. 'ue' → logprob: -2.7419817447662354
    3. 'ep' → logprob: -3.9919817447662354
    4. 'om' → logprob: -4.7419819831848145
    5. 'e' → logprob: -4.9919819831848145
    6. 'order' → logprob: -5.2419819831848145
    7. 'omp' → logprob: -6.3669819831848145
    8. 'ép' → logprob: -6.6169819831848145
    9. 'um' → logprob: -6.7419819831848145
    10. 'é' → logprob: -7.8669819831848145

Token 1123: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.08459390699863434
    2. 'au' → logprob: -3.3345940113067627
    3. ' à' → logprob: -3.8345940113067627
    4. 'aux' → logprob: -4.584593772888184
    5. 'a' → logprob: -4.709593772888184
    6. 'k' → logprob: -6.209593772888184
    7. ' au' → logprob: -7.959593772888184
    8. 'to' → logprob: -7.959593772888184
    9. '```' → logprob: -7.959593772888184
    10. ' ' → logprob: -8.209593772888184

Token 1124: ' une' (ID: 2463)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6713607907295227
    2. 'MOD' → logprob: -1.671360731124878
    3. 'fact' → logprob: -2.296360731124878
    4. 'n' → logprob: -2.421360731124878
    5. '0' → logprob: -3.046360731124878
    6. 'x' → logprob: -3.296360731124878
    7. '(k' → logprob: -4.921360969543457
    8. '(n' → logprob: -5.171360969543457
    9. '-' → logprob: -5.671360969543457
    10. '#' → logprob: -6.171360969543457

Token 1125: ' entrée' (ID: 95590)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.12344466149806976
    2. 'fact' → logprob: -3.4984445571899414
    3. 'position' → logprob: -3.7484445571899414
    4. 'indice' → logprob: -4.123444557189941
    5. 'case' → logprob: -4.748444557189941
    6. 'comb' → logprob: -4.998444557189941
    7. 'term' → logprob: -5.123444557189941
    8. 'factor' → logprob: -5.498444557189941
    9. 'index' → logprob: -5.748444557189941
    10. 'solution' → logprob: -5.748444557189941

Token 1126: ' hors' (ID: 26087)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'negative' → logprob: -1.5126820802688599
    2. ' nég' → logprob: -1.7626820802688599
    3. 'neg' → logprob: -2.1376819610595703
    4. 'fact' → logprob: -2.1376819610595703
    5. 'k' → logprob: -2.2626819610595703
    6. 'de' → logprob: -3.6376819610595703
    7. ' negative' → logprob: -3.8876819610595703
    8. 'out' → logprob: -3.8876819610595703
    9. '>=' → logprob: -4.01268196105957
    10. '   ' → logprob: -4.13768196105957

Token 1127: ' de' (ID: 334)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.7855936288833618
    2. 'fact' → logprob: -1.5355936288833618
    3. 'borne' → logprob: -1.5355936288833618
    4. 'born' → logprob: -2.6605935096740723
    5. 'des' → logprob: -4.160593509674072
    6. 'liste' → logprob: -4.535593509674072
    7. '#' → logprob: -5.160593509674072
    8. 'de' → logprob: -5.535593509674072
    9. 'pl' → logprob: -6.535593509674072
    10. 'bounds' → logprob: -6.660593509674072

Token 1128: ' la' (ID: 557)
  Prédit: 'borne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'borne' → logprob: -1.0645114183425903
    2. 'fact' → logprob: -1.3145114183425903
    3. 'lim' → logprob: -1.8145114183425903
    4. 'born' → logprob: -1.8145114183425903
    5. 'la' → logprob: -3.064511299133301
    6. 'liste' → logprob: -5.189511299133301
    7. 'bound' → logprob: -5.939511299133301
    8. 'bounds' → logprob: -6.439511299133301
    9. 'pl' → logprob: -6.689511299133301
    10. 'range' → logprob: -7.439511299133301

Token 1129: ' gamme' (ID: 56645)
  Prédit: 'borne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'borne' → logprob: -0.5885946750640869
    2. 'born' → logprob: -1.463594675064087
    3. 'lim' → logprob: -1.838594675064087
    4. 'fact' → logprob: -3.588594675064087
    5. 'pl' → logprob: -4.213594436645508
    6. 'bounds' → logprob: -5.588594436645508
    7. 'liste' → logprob: -6.088594436645508
    8. 'tail' → logprob: -6.463594436645508
    9. '#' → logprob: -6.588594436645508
    10. 'bound' → logprob: -6.713594436645508

Token 1130: ' de' (ID: 334)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5642916560173035
    2. ' de' → logprob: -2.0642917156219482
    3. 'if' → logprob: -2.3142917156219482
    4. '   ' → logprob: -2.5642917156219482
    5. 'de' → logprob: -2.8142917156219482
    6. ' if' → logprob: -3.8142917156219482
    7. '#' → logprob: -3.9392917156219482
    8. 'def' → logprob: -4.814291477203369
    9. 'dans' → logprob: -5.189291477203369
    10. ' dans' → logprob: -6.064291477203369

Token 1131: ' la' (ID: 557)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.005543577950447798
    2. 'inv' → logprob: -5.2555437088012695
    3. 'factor' → logprob: -9.00554370880127
    4. 'n' → logprob: -10.00554370880127
    5. 'facts' → logprob: -10.38054370880127
    6. 'indices' → logprob: -10.50554370880127
    7. 'la' → logprob: -11.00554370880127
    8. 'k' → logprob: -11.13054370880127
    9. 'fait' → logprob: -11.75554370880127
    10. 'l' → logprob: -12.00554370880127

Token 1132: ' factor' (ID: 12332)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.11820424348115921
    2. 'liste' → logprob: -2.618204355239868
    3. 'table' → logprob: -4.368204116821289
    4. '#' → logprob: -4.993204116821289
    5. 'factor' → logprob: -5.368204116821289
    6. 'def' → logprob: -5.493204116821289
    7. 'list' → logprob: -5.743204116821289
    8. 'fonction' → logprob: -5.868204116821289
    9. 'range' → logprob: -7.493204116821289
    10. '```' → logprob: -8.118204116821289

Token 1133: 'ielle' (ID: 22380)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.21908549964427948
    2. 'iale' → logprob: -1.719085454940796
    3. 'ielle' → logprob: -5.219085693359375
    4. 'ialis' → logprob: -5.844085693359375
    5. 'fact' → logprob: -5.969085693359375
    6. 'ials' → logprob: -6.219085693359375
    7. 'iales' → logprob: -6.469085693359375
    8. 'iel' → logprob: -6.844085693359375
    9. 'ialize' → logprob: -7.094085693359375
    10. 'ail' → logprob: -7.594085693359375

Token 1134: ' pré' (ID: 9424)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7965860366821289
    2. ' if' → logprob: -1.046586036682129
    3. '   ' → logprob: -2.046586036682129
    4. ' or' → logprob: -3.171586036682129
    5. 'or' → logprob: -4.671586036682129
    6. 's' → logprob: -5.421586036682129
    7. '(n' → logprob: -6.046586036682129
    8. 'n' → logprob: -6.171586036682129
    9. 'fact' → logprob: -6.171586036682129
    10. ' of' → logprob: -6.796586036682129

Token 1135: '-cal' (ID: 84920)
  Prédit: 'computed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'computed' → logprob: -0.1063978299498558
    2. 'cal' → logprob: -2.856397867202759
    3. 'fact' → logprob: -3.356397867202759
    4. 'calcul' → logprob: -5.23139762878418
    5. '```' → logprob: -7.85639762878418
    6. 'k' → logprob: -8.23139762878418
    7. 'dict' → logprob: -8.23139762878418
    8. 'com' → logprob: -8.48139762878418
    9. '#' → logprob: -8.60639762878418
    10. 'calc' → logprob: -8.73139762878418

Token 1136: 'cul' (ID: 2885)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.2327825129032135
    2. 'ul' → logprob: -2.4827826023101807
    3. 'cul' → logprob: -3.3577826023101807
    4. 'culated' → logprob: -3.4827826023101807
    5. 'culation' → logprob: -4.982782363891602
    6. 'ult' → logprob: -4.982782363891602
    7. 'ule' → logprob: -5.107782363891602
    8. 'cule' → logprob: -5.357782363891602
    9. 'ulé' → logprob: -5.607782363891602
    10. 'ulated' → logprob: -5.732782363891602

Token 1137: 'ée' (ID: 2894)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5131872296333313
    2. 'if' → logprob: -1.2631871700286865
    3. '   ' → logprob: -3.1381871700286865
    4. ' if' → logprob: -3.3881871700286865
    5. 'n' → logprob: -4.138187408447266
    6. 'fact' → logprob: -4.638187408447266
    7. 'or' → logprob: -5.638187408447266
    8. ' or' → logprob: -5.763187408447266
    9. 'f' → logprob: -6.638187408447266
    10. '(n' → logprob: -7.263187408447266

Token 1138: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17516016960144043
    2. ' if' → logprob: -2.8001601696014404
    3. '   ' → logprob: -3.3001601696014404
    4. ' or' → logprob: -3.3001601696014404
    5. 'or' → logprob: -4.4251604080200195
    6. 'and' → logprob: -5.1751604080200195
    7. ' and' → logprob: -5.3001604080200195
    8. '(n' → logprob: -6.6751604080200195
    9. 'n' → logprob: -7.0501604080200195
    10. '>=' → logprob: -7.8001604080200195

Token 1139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03208392858505249
    2. 'if' → logprob: -4.032083988189697
    3. ' if' → logprob: -4.282083988189697
    4. '```' → logprob: -11.907083511352539
    5. 'and' → logprob: -12.907083511352539
    6. ' and' → logprob: -12.907083511352539
    7. ',' → logprob: -12.907083511352539
    8. '<|end|>' → logprob: -13.407083511352539
    9. '	if' → logprob: -13.532083511352539
    10. '#' → logprob: -13.532083511352539

Token 1140: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00036037206882610917
    2. '   ' → logprob: -8.000360488891602
    3. ' if' → logprob: -10.625360488891602
    4. '```' → logprob: -14.375360488891602
    5. 'assert' → logprob: -17.8753604888916
    6. '	if' → logprob: -18.8753604888916
    7. ' ' → logprob: -19.3753604888916
    8. '
' → logprob: -19.5003604888916
    9. 'If' → logprob: -19.7503604888916
    10. '`' → logprob: -20.6253604888916

Token 1141: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.12127808178775e-05
    2. '   ' → logprob: -10.375051498413086
    3. ' if' → logprob: -10.875051498413086
    4. '```' → logprob: -14.000051498413086
    5. 'assert' → logprob: -16.125051498413086
    6. 'i' → logprob: -18.750051498413086
    7. ' ' → logprob: -18.875051498413086
    8. 'If' → logprob: -18.875051498413086
    9. '#' → logprob: -19.000051498413086
    10. '	if' → logprob: -19.625051498413086

Token 1142: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011597801931202412
    2. 'n' → logprob: -4.511597633361816
    3. '(k' → logprob: -7.761597633361816
    4. '(n' → logprob: -9.761597633361816
    5. 'not' → logprob: -10.261597633361816
    6. 'x' → logprob: -10.636597633361816
    7. ' k' → logprob: -12.886597633361816
    8. '(x' → logprob: -13.511597633361816
    9. '(not' → logprob: -14.011597633361816
    10. 'max' → logprob: -14.136597633361816

Token 1143: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4907737374305725
    2. '>' → logprob: -1.1157736778259277
    3. '>=' → logprob: -3.2407736778259277
    4. ' >=' → logprob: -3.8657736778259277
    5. '==' → logprob: -10.365774154663086
    6. '+' → logprob: -10.365774154663086
    7. '<=' → logprob: -11.990774154663086
    8. ' ' → logprob: -11.990774154663086
    9. ' ==' → logprob: -12.490774154663086
    10. '≥' → logprob: -12.990774154663086

Token 1144: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.088346359931165e-07
    2. 'x' → logprob: -14.500000953674316
    3. ' k' → logprob: -15.000000953674316
    4. '   ' → logprob: -16.875
    5. '(k' → logprob: -17.5
    6. '1' → logprob: -18.375
    7. 'n' → logprob: -18.5
    8. ' ' → logprob: -19.125
    9. 'max' → logprob: -19.5
    10. '	k' → logprob: -19.625

Token 1145: ' -' (ID: 533)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.14425919950008392
    2. '>' → logprob: -2.769259214401245
    3. ' >=' → logprob: -2.769259214401245
    4. ' >' → logprob: -4.769258975982666
    5. '+' → logprob: -8.019259452819824
    6. '   ' → logprob: -10.269259452819824
    7. '```' → logprob: -10.644259452819824
    8. '≥' → logprob: -11.519259452819824
    9. ')>=' → logprob: -11.644259452819824
    10. ']>=' → logprob: -12.269259452819824

Token 1146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.750001907348633
    3. '2' → logprob: -14.125001907348633
    4. '0' → logprob: -17.125001907348633
    5. '-' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '```' → logprob: -18.625001907348633
    8. '
' → logprob: -19.000001907348633
    9. 'n' → logprob: -19.000001907348633
    10. '...' → logprob: -19.125001907348633

Token 1147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. 'fact' → logprob: -12.875005722045898
    3. 'n' → logprob: -14.000005722045898
    4. '-' → logprob: -14.000005722045898
    5. '2' → logprob: -14.500005722045898
    6. '0' → logprob: -15.000005722045898
    7. ' ' → logprob: -15.125005722045898
    8. '   ' → logprob: -16.0000057220459
    9. '(n' → logprob: -16.1250057220459
    10. '(' → logprob: -16.7500057220459

Token 1148: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.12771780788898468
    2. ' >=' → logprob: -2.1277177333831787
    3. '>' → logprob: -7.627717971801758
    4. ')>=' → logprob: -9.002717971801758
    5. ' >' → logprob: -9.502717971801758
    6. ')' → logprob: -10.127717971801758
    7. ']>=' → logprob: -10.377717971801758
    8. '<' → logprob: -10.877717971801758
    9. '≥' → logprob: -12.127717971801758
    10. '   ' → logprob: -12.627717971801758

Token 1149: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.512236498361744e-07
    2. ' MOD' → logprob: -14.750000953674316
    3. 'len' → logprob: -17.125
    4. 'mod' → logprob: -18.875
    5. 'MAX' → logprob: -20.125
    6. 'MO' → logprob: -20.5
    7. '_MOD' → logprob: -20.875
    8. 'Mod' → logprob: -21.5
    9. '.MOD' → logprob: -21.75
    10. '   ' → logprob: -22.375

Token 1150: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03037375397980213
    2. '   ' → logprob: -3.7803738117218018
    3. ' or' → logprob: -5.655373573303223
    4. ':
' → logprob: -6.655373573303223
    5. ':return' → logprob: -6.655373573303223
    6. ' and' → logprob: -7.155373573303223
    7. 'and' → logprob: -9.905373573303223
    8. '       ' → logprob: -10.155373573303223
    9. '==' → logprob: -10.530373573303223
    10. 'or' → logprob: -10.530373573303223

Token 1151: ' retourner' (ID: 116656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6663782000541687
    2. '       ' → logprob: -1.4163782596588135
    3. 'return' → logprob: -1.4163782596588135
    4. ' return' → logprob: -7.041378021240234
    5. '	return' → logprob: -8.291378021240234
    6. '	' → logprob: -10.166378021240234
    7. 'raise' → logprob: -10.791378021240234
    8. '#' → logprob: -10.916378021240234
    9. 'exit' → logprob: -11.916378021240234
    10. ':return' → logprob: -12.166378021240234

Token 1152: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007729776669293642
    2. '-' → logprob: -4.882730007171631
    3. 'None' → logprob: -10.382729530334473
    4. ' ' → logprob: -10.507729530334473
    5. '   ' → logprob: -10.757729530334473
    6. 'return' → logprob: -11.132729530334473
    7. ' -' → logprob: -11.507729530334473
    8. '
' → logprob: -12.632729530334473
    9. 'print' → logprob: -12.757729530334473
    10. '1' → logprob: -13.257729530334473

Token 1153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0046681687235832214
    2. '-' → logprob: -5.379668235778809
    3. 'None' → logprob: -11.379668235778809
    4. 'exit' → logprob: -11.379668235778809
    5. '```' → logprob: -12.254668235778809
    6. '"' → logprob: -12.379668235778809
    7. ' ' → logprob: -12.379668235778809
    8. 'return' → logprob: -13.004668235778809
    9. 'print' → logprob: -13.004668235778809
    10. ' -' → logprob: -13.004668235778809

Token 1154: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012606780976057053
    2. ' if' → logprob: -5.137606620788574
    3. ':' → logprob: -5.387606620788574
    4. '	if' → logprob: -6.637606620788574
    5. 'if' → logprob: -7.512606620788574
    6. ' and' → logprob: -10.137606620788574
    7. '	return' → logprob: -10.262606620788574
    8. ':
' → logprob: -10.387606620788574
    9. ':return' → logprob: -10.637606620788574
    10. '  ' → logprob: -11.012606620788574

Token 1155: ' ce' (ID: 2357)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00553231593221426
    2. 'return' → logprob: -5.380532264709473
    3. '   ' → logprob: -7.505532264709473
    4. 'n' → logprob: -8.630532264709473
    5. 'False' → logprob: -9.255532264709473
    6. ' ' → logprob: -10.380532264709473
    7. ' return' → logprob: -10.755532264709473
    8. '1' → logprob: -11.255532264709473
    9. 'True' → logprob: -11.255532264709473
    10. 'k' → logprob: -12.505532264709473

Token 1156: ' cas' (ID: 2108)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4424678683280945
    2. 'n' → logprob: -2.0674679279327393
    3. ' n' → logprob: -2.0674679279327393
    4. 'return' → logprob: -2.9424679279327393
    5. ' return' → logprob: -4.31746768951416
    6. ' serait' → logprob: -4.81746768951416
    7. ' would' → logprob: -5.06746768951416
    8. ' #' → logprob: -5.06746768951416
    9. '```' → logprob: -5.31746768951416
    10. ' ne' → logprob: -5.81746768951416

Token 1157: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03513048216700554
    2. '       ' → logprob: -4.535130500793457
    3. ' n' → logprob: -4.660130500793457
    4. ':' → logprob: -5.035130500793457
    5. 'n' → logprob: -5.160130500793457
    6. 'return' → logprob: -7.035130500793457
    7. ':return' → logprob: -8.535130500793457
    8. '```' → logprob: -8.660130500793457
    9. 'would' → logprob: -9.160130500793457
    10. ' would' → logprob: -9.535130500793457

Token 1158: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.5052437782287598
    2. '>=' → logprob: -2.3802437782287598
    3. '#' → logprob: -3.0052437782287598
    4. '>' → logprob: -3.0052437782287598
    5. 'ex' → logprob: -3.2552437782287598
    6. 'return' → logprob: -3.5052437782287598
    7. ''ex' → logprob: -3.6302437782287598
    8. 'n' → logprob: -3.8802437782287598
    9. 'est' → logprob: -3.8802437782287598
    10. '=' → logprob: -4.25524377822876

Token 1159: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.000523246475495398
    2. ' pas' → logprob: -8.000523567199707
    3. 'plus' → logprob: -9.125523567199707
    4. 'hors' → logprob: -10.500523567199707
    5. 'im' → logprob: -11.000523567199707
    6. 'invalid' → logprob: -11.750523567199707
    7. '```' → logprob: -11.750523567199707
    8. '#' → logprob: -12.375523567199707
    9. 't' → logprob: -13.125523567199707
    10. 'possible' → logprob: -13.250523567199707

Token 1160: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2969144284725189
    2. 'valid' → logprob: -2.6719143390655518
    3. 'support' → logprob: -2.7969143390655518
    4. 'trait' → logprob: -3.2969143390655518
    5. 'pris' → logprob: -3.6719143390655518
    6. 'calcul' → logprob: -4.171914577484131
    7. 'compatible' → logprob: -4.296914577484131
    8. 'possible' → logprob: -5.421914577484131
    9. 'prise' → logprob: -5.671914577484131
    10. 'supported' → logprob: -5.796914577484131

Token 1161: 'éré' (ID: 33338)
  Prédit: 'éré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.012390851974487305
    2. 'érée' → logprob: -4.762391090393066
    3. 'ér' → logprob: -7.012391090393066
    4. 'u' → logprob: -7.137391090393066
    5. 'er' → logprob: -7.137391090393066
    6. 'ar' → logprob: -7.637391090393066
    7. 'é' → logprob: -8.887391090393066
    8. 'estion' → logprob: -9.137391090393066
    9. 'érés' → logprob: -9.262391090393066
    10. 'érer' → logprob: -9.387391090393066

Token 1162: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009611000306904316
    2. ':' → logprob: -5.384611129760742
    3. ' if' → logprob: -6.384611129760742
    4. 'if' → logprob: -6.509611129760742
    5. '       ' → logprob: -6.634611129760742
    6. ':
' → logprob: -8.634611129760742
    7. '	if' → logprob: -9.634611129760742
    8. '```' → logprob: -9.759611129760742
    9. ':return' → logprob: -9.884611129760742
    10. ' or' → logprob: -10.134611129760742

Token 1163: 'd' (ID: 67)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07679501175880432
    2. '   ' → logprob: -3.0767951011657715
    3. ' return' → logprob: -4.2017951011657715
    4. '       ' → logprob: -5.0767951011657715
    5. '```' → logprob: -6.0767951011657715
    6. ':return' → logprob: -6.2017951011657715
    7. ')' → logprob: -6.5767951011657715
    8. ')return' → logprob: -7.2017951011657715
    9. '           ' → logprob: -10.576794624328613
    10. '	return' → logprob: -10.826794624328613

Token 1164: 'ép' (ID: 35980)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4855510890483856
    2. 'ef' → logprob: -1.610551118850708
    3. ' >=' → logprob: -2.360551118850708
    4. '>' → logprob: -3.610551118850708
    5. ')' → logprob: -4.235550880432129
    6. '+' → logprob: -4.485550880432129
    7. 'e' → logprob: -4.735550880432129
    8. '-' → logprob: -4.985550880432129
    9. '-k' → logprob: -5.235550880432129
    10. '#' → logprob: -6.360550880432129

Token 1165: 'asse' (ID: 5788)
  Prédit: 'éré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.07243454456329346
    2. 'é' → logprob: -3.572434425354004
    3. 'r' → logprob: -5.447434425354004
    4. 'u' → logprob: -5.572434425354004
    5. 'éné' → logprob: -5.572434425354004
    6. 'ré' → logprob: -5.697434425354004
    7. 'ub' → logprob: -5.822434425354004
    8. 'f' → logprob: -6.322434425354004
    9. 'fac' → logprob: -6.322434425354004
    10. 'éf' → logprob: -6.322434425354004

Token 1166: 'ment' (ID: 508)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5427749752998352
    2. ')' → logprob: -1.0427749156951904
    3. 's' → logprob: -3.2927749156951904
    4. ' MOD' → logprob: -4.0427751541137695
    5. 'mod' → logprob: -6.1677751541137695
    6. 'er' → logprob: -6.4177751541137695
    7. 'it' → logprob: -6.9177751541137695
    8. 'the' → logprob: -6.9177751541137695
    9. ']' → logprob: -6.9177751541137695
    10. '_MOD' → logprob: -7.1677751541137695

Token 1167: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009280219674110413
    2. '   ' → logprob: -6.134280204772949
    3. '=' → logprob: -6.259280204772949
    4. '0' → logprob: -6.759280204772949
    5. ')
' → logprob: -7.884280204772949
    6. 'n' → logprob: -7.884280204772949
    7. ' de' → logprob: -8.00928020477295
    8. ' )' → logprob: -8.00928020477295
    9. '```' → logprob: -8.13428020477295
    10. ')n' → logprob: -8.25928020477295

Token 1168: ' tableau' (ID: 67053)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.500821828842163
    2. 'fact' → logprob: -1.500821828842163
    3. 'lim' → logprob: -1.875821828842163
    4. 'limit' → logprob: -2.625821828842163
    5. 'MOD' → logprob: -3.000821828842163
    6. '```' → logprob: -3.000821828842163
    7. 'pré' → logprob: -3.250821828842163
    8. 'tail' → logprob: -3.250821828842163
    9. 'table' → logprob: -3.375821828842163
    10. 'max' → logprob: -3.875821828842163

Token 1169: ' factorial' (ID: 111204)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6504079699516296
    2. ')' → logprob: -0.7754079699516296
    3. '):' → logprob: -4.900407791137695
    4. 'return' → logprob: -6.275407791137695
    5. '```' → logprob: -6.525407791137695
    6. '[' → logprob: -6.650407791137695
    7. '):
' → logprob: -6.775407791137695
    8. ')
' → logprob: -6.900407791137695
    9. ':' → logprob: -7.275407791137695
    10. ':return' → logprob: -7.900407791137695

Token 1170: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49039873480796814
    2. ')' → logprob: -1.7403987646102905
    3. '):' → logprob: -2.615398645401001
    4. '):
' → logprob: -2.865398645401001
    5. ':' → logprob: -2.990398645401001
    6. ':
' → logprob: -3.740398645401001
    7. ' or' → logprob: -5.36539888381958
    8. '       ' → logprob: -7.36539888381958
    9. ')
' → logprob: -7.49039888381958
    10. ':return' → logprob: -7.74039888381958

Token 1171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001382378744892776
    2. '```' → logprob: -7.501382350921631
    3. '       ' → logprob: -7.751382350921631
    4. 'if' → logprob: -8.501382827758789
    5. ' if' → logprob: -9.626382827758789
    6. '	if' → logprob: -10.001382827758789
    7. ':' → logprob: -10.126382827758789
    8. '	return' → logprob: -10.626382827758789
    9. '``' → logprob: -12.251382827758789
    10. ':return' → logprob: -12.626382827758789

Token 1172: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04973951727151871
    2. '   ' → logprob: -3.0497395992279053
    3. ' if' → logprob: -6.799739360809326
    4. '	if' → logprob: -10.674739837646484
    5. '```' → logprob: -11.174739837646484
    6. ' ' → logprob: -16.174739837646484
    7. '  ' → logprob: -16.799739837646484
    8. '``' → logprob: -17.424739837646484
    9. 'If' → logprob: -17.549739837646484
    10. '
' → logprob: -18.174739837646484

Token 1173: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00044437398901209235
    2. '(n' → logprob: -8.000444412231445
    3. 'k' → logprob: -9.625444412231445
    4. ' n' → logprob: -10.250444412231445
    5. '(k' → logprob: -12.000444412231445
    6. '   ' → logprob: -13.875444412231445
    7. '(' → logprob: -15.625444412231445
    8. ' (' → logprob: -15.750444412231445
    9. '	n' → logprob: -16.125444412231445
    10. ' ' → logprob: -19.375444412231445

Token 1174: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07840494066476822
    2. ' +' → logprob: -2.7034049034118652
    3. '   ' → logprob: -6.078404903411865
    4. '>' → logprob: -6.203404903411865
    5. '+n' → logprob: -6.203404903411865
    6. '+k' → logprob: -6.328404903411865
    7. '>=' → logprob: -8.953405380249023
    8. ' >' → logprob: -9.078405380249023
    9. '```' → logprob: -11.703405380249023
    10. ' ' → logprob: -11.828405380249023

Token 1175: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.6240566083070007e-06
    2. ' k' → logprob: -13.375001907348633
    3. ' ' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '(k' → logprob: -19.250001907348633
    6. '	k' → logprob: -21.250001907348633
    7. '  ' → logprob: -22.000001907348633
    8. '{k' → logprob: -23.625001907348633
    9. 'kx' → logprob: -23.750001907348633
    10. '
' → logprob: -24.000001907348633

Token 1176: ' -' (ID: 533)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.14105181396007538
    2. ' >=' → logprob: -2.141051769256592
    3. '-' → logprob: -4.516051769256592
    4. '>' → logprob: -6.766051769256592
    5. ' -' → logprob: -7.016051769256592
    6. '   ' → logprob: -7.766051769256592
    7. '[' → logprob: -8.89105224609375
    8. ' >' → logprob: -9.14105224609375
    9. ')>=' → logprob: -9.14105224609375
    10. ']>=' → logprob: -9.39105224609375

Token 1177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.082895273109898e-05
    2. ' ' → logprob: -10.500030517578125
    3. '   ' → logprob: -12.750030517578125
    4. '<|end|>' → logprob: -16.000030517578125
    5. '```' → logprob: -16.000030517578125
    6. '...' → logprob: -16.625030517578125
    7. '>' → logprob: -17.125030517578125
    8. '  ' → logprob: -18.125030517578125
    9. '<|end|>' → logprob: -18.375030517578125
    10. '[' → logprob: -19.062530517578125

Token 1178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7491250875755213e-05
    2. ' ' → logprob: -10.625027656555176
    3. '   ' → logprob: -12.750027656555176
    4. '>' → logprob: -16.00002670288086
    5. '```' → logprob: -17.00002670288086
    6. '...' → logprob: -17.87502670288086
    7. '[' → logprob: -17.93752670288086
    8. '  ' → logprob: -18.25002670288086
    9. '	' → logprob: -18.25002670288086
    10. '<|end|>' → logprob: -18.31252670288086

Token 1179: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3142779767513275
    2. ' >=' → logprob: -1.31427800655365
    3. '   ' → logprob: -6.9392781257629395
    4. ')>=' → logprob: -10.814277648925781
    5. ']>=' → logprob: -11.689277648925781
    6. '>' → logprob: -11.814277648925781
    7. ' ' → logprob: -12.814277648925781
    8. ')' → logprob: -12.814277648925781
    9. '	' → logprob: -13.564277648925781
    10. '  ' → logprob: -13.564277648925781

Token 1180: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -16.0
    3. '   ' → logprob: -22.625
    4. 'MO' → logprob: -23.25
    5. '_MOD' → logprob: -24.0
    6. 'MODE' → logprob: -25.625
    7. '.MOD' → logprob: -25.625
    8. 'mod' → logprob: -26.5
    9. 'MD' → logprob: -26.5
    10. 'MAX' → logprob: -26.625

Token 1181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1305612474679947
    2. ':
' → logprob: -2.755561351776123
    3. '       ' → logprob: -3.005561351776123
    4. '   ' → logprob: -5.130561351776123
    5. ':return' → logprob: -5.755561351776123
    6. '	' → logprob: -8.880560874938965
    7. ':
' → logprob: -10.380560874938965
    8. 'return' → logprob: -11.380560874938965
    9. '=' → logprob: -11.505560874938965
    10. '	return' → logprob: -12.005560874938965

Token 1182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5332478142227046e-05
    2. 'return' → logprob: -11.250015258789062
    3. '	' → logprob: -13.875015258789062
    4. '   ' → logprob: -14.000015258789062
    5. ':' → logprob: -15.375015258789062
    6. ' return' → logprob: -15.875015258789062
    7. ':return' → logprob: -16.125015258789062
    8. '```' → logprob: -17.250015258789062
    9. ':
' → logprob: -18.000015258789062
    10. '	   ' → logprob: -18.000015258789062

Token 1183: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00022010602697264403
    2. '       ' → logprob: -8.50022029876709
    3. '   ' → logprob: -11.75022029876709
    4. ' return' → logprob: -11.75022029876709
    5. '	return' → logprob: -14.12522029876709
    6. ':return' → logprob: -17.625219345092773
    7. 'exit' → logprob: -17.750219345092773
    8. '{return' → logprob: -18.125219345092773
    9. '```' → logprob: -18.500219345092773
    10. '	' → logprob: -18.625219345092773

Token 1184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -21.625
    4. '۰' → logprob: -22.875
    5. '０' → logprob: -24.0
    6. '
' → logprob: -24.75
    7. '00' → logprob: -25.375
    8. '  ' → logprob: -26.0
    9. '```' → logprob: -26.0
    10. '    
' → logprob: -26.125

Token 1185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '```' → logprob: -21.5
    4. 'return' → logprob: -21.625
    5. '   ' → logprob: -22.0
    6. '۰' → logprob: -22.125
    7. '00' → logprob: -22.5
    8. '000' → logprob: -22.75
    9. '`' → logprob: -23.5
    10. 'print' → logprob: -23.75

Token 1186: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00375970546156168
    2. '    
' → logprob: -5.753759860992432
    3. ')' → logprob: -8.628759384155273
    4. '
' → logprob: -8.878759384155273
    5. '	return' → logprob: -9.878759384155273
    6. '\n' → logprob: -10.253759384155273
    7. '```' → logprob: -10.253759384155273
    8. '  
' → logprob: -10.503759384155273
    9. '   
' → logprob: -10.878759384155273
    10. '<|end|>' → logprob: -11.003759384155273

Token 1187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005867527215741575
    2. '    
' → logprob: -8.25058650970459
    3. '
' → logprob: -9.00058650970459
    4. '	return' → logprob: -9.50058650970459
    5. ')' → logprob: -9.87558650970459
    6. '```' → logprob: -10.25058650970459
    7. 'return' → logprob: -11.00058650970459
    8. '	
' → logprob: -12.87558650970459
    9. '	' → logprob: -12.87558650970459
    10. '\t' → logprob: -13.12558650970459

Token 1188: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5462571978569031
    2. 'res' → logprob: -1.2962572574615479
    3. '   ' → logprob: -2.171257257461548
    4. 'return' → logprob: -3.796257257461548
    5. 'result' → logprob: -5.546257019042969
    6. 'ans' → logprob: -5.671257019042969
    7. 'ret' → logprob: -6.671257019042969
    8. 'r' → logprob: -7.421257019042969
    9. 'num' → logprob: -7.421257019042969
    10. 'answer' → logprob: -8.296257019042969

Token 1189: ' Calcul' (ID: 57243)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8111063838005066
    2. 'return' → logprob: -1.0611064434051514
    3. '#' → logprob: -1.8111064434051514
    4. 'num' → logprob: -4.061106204986572
    5. 'result' → logprob: -4.061106204986572
    6. 'ans' → logprob: -5.311106204986572
    7. 'numer' → logprob: -5.686106204986572
    8. 'val' → logprob: -7.311106204986572
    9. 'ret' → logprob: -7.561106204986572
    10. 'c' → logprob: -7.686106204986572

Token 1190: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25105759501457214
    2. 'result' → logprob: -1.8760576248168945
    3. 'res' → logprob: -2.7510576248168945
    4. 'return' → logprob: -6.5010576248168945
    5. 'ans' → logprob: -7.0010576248168945
    6. 's' → logprob: -7.6260576248168945
    7. 'ret' → logprob: -7.7510576248168945
    8. 'c' → logprob: -8.501057624816895
    9. '#' → logprob: -8.626057624816895
    10. '(result' → logprob: -8.876057624816895

Token 1191: ' résultat' (ID: 62556)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6327866315841675
    2. 'result' → logprob: -1.0077866315841675
    3. 'return' → logprob: -2.632786750793457
    4. '(res' → logprob: -5.007786750793457
    5. 'ret' → logprob: -5.132786750793457
    6. '#' → logprob: -5.257786750793457
    7. 'rés' → logprob: -5.382786750793457
    8. 'ans' → logprob: -5.757786750793457
    9. 'fact' → logprob: -6.257786750793457
    10. '(result' → logprob: -6.382786750793457

Token 1192: ' à' (ID: 1221)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2075691521167755
    2. '   ' → logprob: -2.207569122314453
    3. 'res' → logprob: -2.707569122314453
    4. 'result' → logprob: -4.707569122314453
    5. '```' → logprob: -6.707569122314453
    6. 'ans' → logprob: -8.457569122314453
    7. 'ret' → logprob: -8.457569122314453
    8. ' return' → logprob: -10.457569122314453
    9. 'answer' → logprob: -10.957569122314453
    10. 'r' → logprob: -11.332569122314453

Token 1193: ' l' (ID: 305)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.30395784974098206
    2. 'part' → logprob: -1.9289578199386597
    3. 'ret' → logprob: -3.303957939147949
    4. '(ret' → logprob: -4.178957939147949
    5. '(return' → logprob: -4.428957939147949
    6. '(base' → logprob: -4.428957939147949
    7. 'l' → logprob: -4.428957939147949
    8. '((' → logprob: -4.803957939147949
    9. '(part' → logprob: -5.178957939147949
    10. 'base' → logprob: -5.553957939147949

Token 1194: ''aide' (ID: 75684)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24401643872261047
    2. ''aide' → logprob: -2.869016408920288
    3. 'pow' → logprob: -2.994016408920288
    4. 'a' → logprob: -3.994016408920288
    5. 'result' → logprob: -4.494016647338867
    6. 'rés' → logprob: -4.994016647338867
    7. '#' → logprob: -4.994016647338867
    8. '(k' → logprob: -5.119016647338867
    9. '(return' → logprob: -5.119016647338867
    10. 'k' → logprob: -5.494016647338867

Token 1195: ' des' (ID: 731)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7501130104064941
    2. '(f' → logprob: -1.0001130104064941
    3. 'reduce' → logprob: -2.125113010406494
    4. '(re' → logprob: -4.375113010406494
    5. '(' → logprob: -4.750113010406494
    6. '   ' → logprob: -5.000113010406494
    7. ' (' → logprob: -6.000113010406494
    8. '((' → logprob: -6.375113010406494
    9. 'factor' → logprob: -6.500113010406494
    10. 're' → logprob: -6.875113010406494

Token 1196: ' valeurs' (ID: 73668)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.1436188817024231
    2. '(f' → logprob: -2.1436188220977783
    3. 'inv' → logprob: -5.643619060516357
    4. 'return' → logprob: -5.643619060516357
    5. '(inv' → logprob: -5.893619060516357
    6. 'reduce' → logprob: -6.143619060516357
    7. '(' → logprob: -6.768619060516357
    8. 'factor' → logprob: -6.768619060516357
    9. '(re' → logprob: -7.143619060516357
    10. '#' → logprob: -8.0186185836792

Token 1197: ' pré' (ID: 9424)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5318168997764587
    2. 'fact' → logprob: -1.1568169593811035
    3. 'res' → logprob: -2.5318169593811035
    4. 'result' → logprob: -4.9068169593811035
    5. 'ret' → logprob: -5.9068169593811035
    6. '   ' → logprob: -6.1568169593811035
    7. '=' → logprob: -6.9068169593811035
    8. ' return' → logprob: -6.9068169593811035
    9. 'rés' → logprob: -7.0318169593811035
    10. '```' → logprob: -7.2818169593811035

Token 1198: '-cal' (ID: 84920)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.36510562896728516
    2. 'fact' → logprob: -2.115105628967285
    3. 'res' → logprob: -2.365105628967285
    4. 'return' → logprob: -2.865105628967285
    5. 'rés' → logprob: -4.115105628967285
    6. '   ' → logprob: -4.240105628967285
    7. '#' → logprob: -6.240105628967285
    8. 'ret' → logprob: -8.115105628967285
    9. 'answer' → logprob: -8.240105628967285
    10. '=' → logprob: -8.865105628967285

Token 1199: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.058885909616947174
    2. 'culated' → logprob: -3.3088858127593994
    3. 'c' → logprob: -4.4338860511779785
    4. 'fact' → logprob: -5.4338860511779785
    5. '#' → logprob: -6.1838860511779785
    6. 'ul' → logprob: -7.1838860511779785
    7. 'cut' → logprob: -7.8088860511779785
    8. 'cu' → logprob: -8.05888557434082
    9. '```' → logprob: -8.18388557434082
    10. 'ult' → logprob: -9.68388557434082

Token 1200: 'ées' (ID: 5161)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0977422371506691
    2. '   ' → logprob: -2.8477423191070557
    3. '#' → logprob: -4.472742080688477
    4. 'result' → logprob: -5.222742080688477
    5. 'des' → logprob: -5.722742080688477
    6. 'de' → logprob: -6.097742080688477
    7. 'ues' → logprob: -6.347742080688477
    8. '
' → logprob: -6.972742080688477
    9. 'ules' → logprob: -7.097742080688477
    10. 'factor' → logprob: -7.222742080688477

Token 1201: ' des' (ID: 731)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4939858019351959
    2. 'res' → logprob: -1.1189857721328735
    3. 'result' → logprob: -2.993985891342163
    4. '   ' → logprob: -5.243985652923584
    5. 'ret' → logprob: -5.868985652923584
    6. '```' → logprob: -6.618985652923584
    7. 'ans' → logprob: -6.743985652923584
    8. 'comb' → logprob: -7.118985652923584
    9. 'answer' → logprob: -7.618985652923584
    10. 'fact' → logprob: -7.868985652923584

Token 1202: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0005698331515304744
    2. '#' → logprob: -7.875569820404053
    3. 'factor' → logprob: -8.750570297241211
    4. 'facts' → logprob: -12.000570297241211
    5. 'comb' → logprob: -12.125570297241211
    6. 'fac' → logprob: -12.250570297241211
    7. ' fact' → logprob: -12.625570297241211
    8. '```' → logprob: -13.000570297241211
    9. 'inv' → logprob: -13.125570297241211
    10. 'fait' → logprob: -13.375570297241211

Token 1203: 'ori' (ID: 6510)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.013816853985190392
    2. 'fact' → logprob: -4.888816833496094
    3. '[' → logprob: -6.263816833496094
    4. '#' → logprob: -6.263816833496094
    5. 'or' → logprob: -6.638816833496094
    6. '[i' → logprob: -7.888816833496094
    7. 'ort' → logprob: -8.388816833496094
    8. '[n' → logprob: -9.013816833496094
    9. 'ct' → logprob: -9.138816833496094
    10. 'ect' → logprob: -9.888816833496094

Token 1204: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.0003361774142831564
    2. 'els' → logprob: -9.375336647033691
    3. '[' → logprob: -10.250336647033691
    4. 'ales' → logprob: -10.500336647033691
    5. '#' → logprob: -10.625336647033691
    6. 'elle' → logprob: -10.625336647033691
    7. 'alles' → logprob: -11.000336647033691
    8. 'lles' → logprob: -11.000336647033691
    9. 'elli' → logprob: -11.125336647033691
    10. 'ques' → logprob: -11.750336647033691

Token 1205: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04611075296998024
    2. 'return' → logprob: -3.4211108684539795
    3. 'res' → logprob: -4.7961106300354
    4. '```' → logprob: -6.2961106300354
    5. 'result' → logprob: -6.5461106300354
    6. 'ret' → logprob: -7.7961106300354
    7. 'et' → logprob: -9.296111106872559
    8. ' return' → logprob: -9.546111106872559
    9. 'ans' → logprob: -9.671111106872559
    10. '#' → logprob: -10.171111106872559

Token 1206: ' leurs' (ID: 16348)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -2.7610454708337784e-05
    2. '(inv' → logprob: -11.250027656555176
    3. ' inv' → logprob: -11.625027656555176
    4. '#' → logprob: -12.500027656555176
    5. 'fact' → logprob: -14.000027656555176
    6. '```' → logprob: -15.125027656555176
    7. 'inverse' → logprob: -15.875027656555176
    8. '
' → logprob: -16.00002670288086
    9. '   ' → logprob: -16.12502670288086
    10. '...' → logprob: -16.62502670288086

Token 1207: ' invers' (ID: 38721)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0032064728438854218
    2. 'inv' → logprob: -6.378206253051758
    3. 'inverse' → logprob: -6.503206253051758
    4. '#' → logprob: -12.878206253051758
    5. 'invert' → logprob: -13.878206253051758
    6. ' invers' → logprob: -14.753206253051758
    7. '
' → logprob: -16.128206253051758
    8. 'indices' → logprob: -16.253206253051758
    9. '...' → logprob: -16.253206253051758
    10. 'multip' → logprob: -16.378206253051758

Token 1208: 'es' (ID: 268)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00017040544480551034
    2. 'inv' → logprob: -9.375170707702637
    3. 'fait' → logprob: -10.750170707702637
    4. 'act' → logprob: -11.000170707702637
    5. 'ifact' → logprob: -11.500170707702637
    6. 'fac' → logprob: -11.750170707702637
    7. 'facts' → logprob: -11.750170707702637
    8. 'f' → logprob: -12.000170707702637
    9. 'factor' → logprob: -12.250170707702637
    10. ' fact' → logprob: -13.375170707702637

Token 1209: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5470418930053711
    2. '   ' → logprob: -1.047041893005371
    3. 'res' → logprob: -2.797041893005371
    4. '```' → logprob: -5.297041893005371
    5. 'result' → logprob: -5.547041893005371
    6. 'ans' → logprob: -8.672041893005371
    7. 'ret' → logprob: -9.047041893005371
    8. 'answer' → logprob: -10.422041893005371
    9. ' return' → logprob: -10.422041893005371
    10. 'comb' → logprob: -10.547041893005371

Token 1210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5829097032546997
    2. 'return' → logprob: -0.8329097032546997
    3. '```' → logprob: -5.45790958404541
    4. 'res' → logprob: -6.20790958404541
    5. 'result' → logprob: -7.58290958404541
    6. ' return' → logprob: -9.08290958404541
    7. 'ret' → logprob: -11.08290958404541
    8. '``' → logprob: -11.45790958404541
    9. 'ans' → logprob: -12.58290958404541
    10. 'r' → logprob: -12.83290958404541

Token 1211: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009111789055168629
    2. '   ' → logprob: -5.2591118812561035
    3. 'res' → logprob: -5.7591118812561035
    4. 'result' → logprob: -7.2591118812561035
    5. 'ret' → logprob: -12.384111404418945
    6. 'ans' → logprob: -12.509111404418945
    7. ' return' → logprob: -12.759111404418945
    8. '```' → logprob: -14.134111404418945
    9. 'r' → logprob: -15.009111404418945
    10. '	return' → logprob: -15.259111404418945

Token 1212: ' Cette' (ID: 27383)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012928551062941551
    2. 'res' → logprob: -4.512928485870361
    3. 'result' → logprob: -6.762928485870361
    4. '   ' → logprob: -7.262928485870361
    5. 'ans' → logprob: -11.63792896270752
    6. 'ret' → logprob: -11.76292896270752
    7. '```' → logprob: -12.88792896270752
    8. ' return' → logprob: -13.76292896270752
    9. 'r' → logprob: -14.13792896270752
    10. 'answer' → logprob: -14.38792896270752

Token 1213: ' formule' (ID: 84316)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.353192538022995
    2. 'res' → logprob: -1.8531925678253174
    3. 'result' → logprob: -2.4781925678253174
    4. 'rés' → logprob: -3.8531925678253174
    5. 'ligne' → logprob: -3.9781925678253174
    6. '#' → logprob: -4.978192329406738
    7. 'ret' → logprob: -5.728192329406738
    8. ' return' → logprob: -6.478192329406738
    9. '   ' → logprob: -6.728192329406738
    10. 'r' → logprob: -6.978192329406738

Token 1214: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4815385639667511
    2. 'return' → logprob: -1.6065385341644287
    3. '   ' → logprob: -1.9815385341644287
    4. ' =' → logprob: -3.6065385341644287
    5. '#' → logprob: -5.106538772583008
    6. 'result' → logprob: -5.481538772583008
    7. 'res' → logprob: -5.981538772583008
    8. '```' → logprob: -5.981538772583008
    9. ' return' → logprob: -7.481538772583008
    10. ':' → logprob: -8.981538772583008

Token 1215: ' expr' (ID: 30206)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4478694498538971
    2. '#' → logprob: -1.6978694200515747
    3. '   ' → logprob: -2.3228695392608643
    4. 'res' → logprob: -3.8228695392608643
    5. 'être' → logprob: -3.8228695392608643
    6. '```' → logprob: -3.9478695392608643
    7. 'rés' → logprob: -5.447869300842285
    8. 's' → logprob: -5.697869300842285
    9. 'ret' → logprob: -6.322869300842285
    10. 're' → logprob: -6.947869300842285

Token 1216: 'imer' (ID: 3747)
  Prédit: 'imer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imer' → logprob: -0.011250476352870464
    2. 'és' → logprob: -4.8862504959106445
    3. 'r' → logprob: -6.1362504959106445
    4. 'ess' → logprob: -8.386250495910645
    5. 'iquer' → logprob: -8.636250495910645
    6. 'im' → logprob: -8.761250495910645
    7. 'import' → logprob: -8.886250495910645
    8. 'l' → logprob: -9.386250495910645
    9. 'é' → logprob: -9.511250495910645
    10. 'resser' → logprob: -9.636250495910645

Token 1217: ' le' (ID: 505)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.2634705901145935
    2. '(f' → logprob: -1.6384706497192383
    3. 'reduce' → logprob: -3.6384706497192383
    4. '(re' → logprob: -5.513470649719238
    5. '((' → logprob: -5.888470649719238
    6. '   ' → logprob: -7.138470649719238
    7. 'factor' → logprob: -7.388470649719238
    8. '(' → logprob: -7.888470649719238
    9. 'pow' → logprob: -8.263470649719238
    10. '#' → logprob: -8.263470649719238

Token 1218: ' nombre' (ID: 9733)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.2147480547428131
    2. '(f' → logprob: -1.9647480249404907
    3. 'reduce' → logprob: -3.0897481441497803
    4. 'factor' → logprob: -6.214747905731201
    5. '(re' → logprob: -6.714747905731201
    6. 'comb' → logprob: -6.714747905731201
    7. '(' → logprob: -7.589747905731201
    8. '((' → logprob: -7.714747905731201
    9. 'return' → logprob: -7.714747905731201
    10. '(n' → logprob: -8.08974838256836

Token 1219: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6518227458000183
    2. 'return' → logprob: -0.7768227458000183
    3. 'result' → logprob: -4.651822566986084
    4. 'res' → logprob: -5.651822566986084
    5. ' return' → logprob: -6.651822566986084
    6. '((' → logprob: -6.651822566986084
    7. '(' → logprob: -7.401822566986084
    8. 'fact' → logprob: -7.651822566986084
    9. '(f' → logprob: -8.151823043823242
    10. '#' → logprob: -8.276823043823242

Token 1220: ' façons' (ID: 165958)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.9622841477394104
    2. 'man' → logprob: -1.3372840881347656
    3. 'm' → logprob: -2.2122840881347656
    4. '   ' → logprob: -2.4622840881347656
    5. 'fa' → logprob: -2.9622840881347656
    6. 'n' → logprob: -3.2122840881347656
    7. 'ways' → logprob: -4.212284088134766
    8. '#' → logprob: -4.212284088134766
    9. 'mé' → logprob: -5.087284088134766
    10. ' façons' → logprob: -5.087284088134766

Token 1221: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4267492890357971
    2. 'de' → logprob: -1.3017492294311523
    3. 'd' → logprob: -3.3017492294311523
    4. '#' → logprob: -3.3017492294311523
    5. 'def' → logprob: -7.051749229431152
    6. 'return' → logprob: -8.801749229431152
    7. ' ' → logprob: -8.801749229431152
    8. '       ' → logprob: -9.301749229431152
    9. ' de' → logprob: -9.801749229431152
    10. '  ' → logprob: -10.051749229431152

Token 1222: ' résoudre' (ID: 134006)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0001007318496704
    2. 'comb' → logprob: -1.5001007318496704
    3. '   ' → logprob: -1.7501007318496704
    4. ' comb' → logprob: -2.375100612640381
    5. 'com' → logprob: -3.500100612640381
    6. ' de' → logprob: -3.750100612640381
    7. 'de' → logprob: -3.750100612640381
    8. ' la' → logprob: -4.375100612640381
    9. 'la' → logprob: -4.500100612640381
    10. '(com' → logprob: -5.250100612640381

Token 1223: ' des' (ID: 731)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.037479281425476
    2. '(n' → logprob: -1.412479281425476
    3. '(' → logprob: -2.5374794006347656
    4. '(f' → logprob: -2.7874794006347656
    5. 'fact' → logprob: -2.7874794006347656
    6. '((' → logprob: -3.1624794006347656
    7. 'comb' → logprob: -3.9124794006347656
    8. 'k' → logprob: -4.037479400634766
    9. 'pow' → logprob: -4.037479400634766
    10. 'return' → logprob: -4.162479400634766

Token 1224: ' suites' (ID: 59833)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.19164471328258514
    2. 'comb' → logprob: -1.9416446685791016
    3. 'pro' → logprob: -4.316644668579102
    4. 'coeff' → logprob: -5.066644668579102
    5. 'n' → logprob: -5.691644668579102
    6. ' comb' → logprob: -5.941644668579102
    7. '```' → logprob: -6.441644668579102
    8. 'calcul' → logprob: -6.941644668579102
    9. '#' → logprob: -7.191644668579102
    10. '
' → logprob: -8.191644668579102

Token 1225: ' ar' (ID: 646)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006706496700644493
    2. 'return' → logprob: -5.131706714630127
    3. 'de' → logprob: -8.381706237792969
    4. 'result' → logprob: -8.756706237792969
    5. '```' → logprob: -8.881706237792969
    6. 'res' → logprob: -9.381706237792969
    7. 'factor' → logprob: -10.131706237792969
    8. '#' → logprob: -10.256706237792969
    9. ' return' → logprob: -11.131706237792969
    10. 'fact' → logprob: -11.131706237792969

Token 1226: 'ith' (ID: 437)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7646622061729431
    2. 'ith' → logprob: -0.7646622061729431
    3. 'rang' → logprob: -3.764662265777588
    4. 'ithmetic' → logprob: -5.014662265777588
    5. 'gé' → logprob: -5.139662265777588
    6. 'g' → logprob: -5.389662265777588
    7. '```' → logprob: -5.514662265777588
    8. 'i' → logprob: -5.639662265777588
    9. 'range' → logprob: -5.639662265777588
    10. 'e' → logprob: -6.264662265777588

Token 1227: 'mé' (ID: 35328)
  Prédit: 'mé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mé' → logprob: -0.6326729655265808
    2. 'ith' → logprob: -2.0076730251312256
    3. 'm' → logprob: -2.1326730251312256
    4. 'th' → logprob: -2.2576730251312256
    5. '   ' → logprob: -2.5076730251312256
    6. 'h' → logprob: -5.3826727867126465
    7. 't' → logprob: -5.3826727867126465
    8. '#' → logprob: -5.5076727867126465
    9. '       ' → logprob: -5.5076727867126465
    10. '
' → logprob: -6.3826727867126465

Token 1228: 'tiques' (ID: 60539)
  Prédit: 'mé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mé' → logprob: -0.7117425799369812
    2. 'm' → logprob: -1.336742639541626
    3. 'étiques' → logprob: -2.336742639541626
    4. 'th' → logprob: -2.711742639541626
    5. 'tiques' → logprob: -2.961742639541626
    6. 't' → logprob: -4.336742401123047
    7. '#' → logprob: -5.086742401123047
    8. 'miques' → logprob: -5.336742401123047
    9. 'met' → logprob: -6.586742401123047
    10. 'étique' → logprob: -6.961742401123047

Token 1229: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02112647518515587
    2. 'return' → logprob: -3.8961265087127686
    3. '```' → logprob: -8.521126747131348
    4. 'result' → logprob: -8.646126747131348
    5. 'res' → logprob: -9.021126747131348
    6. ' return' → logprob: -10.896126747131348
    7. 'n' → logprob: -11.146126747131348
    8. '    
' → logprob: -11.646126747131348
    9. 'comb' → logprob: -11.896126747131348
    10. '   ' → logprob: -11.896126747131348

Token 1230: ' combinaison' (ID: 165933)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.508547842502594
    2. 'fact' → logprob: -2.258547782897949
    3. 'la' → logprob: -2.383547782897949
    4. 'com' → logprob: -2.883547782897949
    5. 'des' → logprob: -3.258547782897949
    6. 'une' → logprob: -3.383547782897949
    7. 'n' → logprob: -3.883547782897949
    8. 'coeff' → logprob: -4.883547782897949
    9. 'les' → logprob: -5.008547782897949
    10. 'l' → logprob: -5.133547782897949

Token 1231: '.
' (ID: 558)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47757256031036377
    2. '   ' → logprob: -0.9775725603103638
    3. 'result' → logprob: -6.727572441101074
    4. ' return' → logprob: -6.977572441101074
    5. 'res' → logprob: -7.352572441101074
    6. '=' → logprob: -8.477572441101074
    7. ' =' → logprob: -8.602572441101074
    8. '```' → logprob: -8.727572441101074
    9. '
' → logprob: -9.977572441101074
    10. 'ans' → logprob: -11.227572441101074

Token 1232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47999805212020874
    2. 'return' → logprob: -0.9799980521202087
    3. 'result' → logprob: -5.7299981117248535
    4. 'res' → logprob: -6.3549981117248535
    5. ' return' → logprob: -7.3549981117248535
    6. '```' → logprob: -8.354997634887695
    7. '    
' → logprob: -11.479997634887695
    8. 'ans' → logprob: -11.604997634887695
    9. '	return' → logprob: -11.854997634887695
    10. 'ret' → logprob: -12.729997634887695

Token 1233: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009092297405004501
    2. 'res' → logprob: -5.009092330932617
    3. '   ' → logprob: -6.259092330932617
    4. 'result' → logprob: -7.759092330932617
    5. 'ret' → logprob: -11.009092330932617
    6. 'ans' → logprob: -11.384092330932617
    7. ' return' → logprob: -12.759092330932617
    8. '```' → logprob: -13.259092330932617
    9. 'r' → logprob: -15.134092330932617
    10. 'c' → logprob: -15.134092330932617

Token 1234: ' Multip' (ID: 52811)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0320596843957901
    2. 'res' → logprob: -3.532059669494629
    3. 'result' → logprob: -6.782059669494629
    4. '   ' → logprob: -6.782059669494629
    5. 'ret' → logprob: -10.782059669494629
    6. 'ans' → logprob: -11.157059669494629
    7. ' return' → logprob: -13.532059669494629
    8. 'r' → logprob: -14.032059669494629
    9. 'val' → logprob: -15.032059669494629
    10. '```' → logprob: -15.032059669494629

Token 1235: 'lication' (ID: 2389)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33174368739128113
    2. 'turn' → logprob: -2.4567437171936035
    3. 'urn' → logprob: -2.9567437171936035
    4. 'return' → logprob: -3.0817437171936035
    5. ' =' → logprob: -3.2067437171936035
    6. 'fact' → logprob: -3.7067437171936035
    7. '=' → logprob: -4.5817437171936035
    8. ' return' → logprob: -4.8317437171936035
    9. 'result' → logprob: -5.8317437171936035
    10. 'ult' → logprob: -6.0817437171936035

Token 1236: ' mod' (ID: 1812)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3670511841773987
    2. 'result' → logprob: -2.117051124572754
    3. 'fact' → logprob: -2.867051124572754
    4. ' =' → logprob: -3.117051124572754
    5. 'return' → logprob: -3.242051124572754
    6. '   ' → logprob: -3.367051124572754
    7. '(' → logprob: -5.617051124572754
    8. '((' → logprob: -6.117051124572754
    9. '=(' → logprob: -6.867051124572754
    10. '(
' → logprob: -7.367051124572754

Token 1237: 'ulaire' (ID: 48584)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2750349044799805
    2. ' =' → logprob: -1.4000349044799805
    3. '=' → logprob: -1.7750349044799805
    4. 'result' → logprob: -1.9000349044799805
    5. '_result' → logprob: -2.7750349044799805
    6. 'return' → logprob: -2.9000349044799805
    7. 'fact' → logprob: -4.4000349044799805
    8. ' result' → logprob: -4.9000349044799805
    9. ' return' → logprob: -5.1500349044799805
    10. '(' → logprob: -5.9000349044799805

Token 1238: ' à' (ID: 1221)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19005829095840454
    2. 'result' → logprob: -1.9400582313537598
    3. '   ' → logprob: -3.8150582313537598
    4. '=' → logprob: -5.81505823135376
    5. ' return' → logprob: -6.06505823135376
    6. 'res' → logprob: -6.69005823135376
    7. 'fact' → logprob: -7.94005823135376
    8. ' =' → logprob: -8.940058708190918
    9. ' result' → logprob: -9.190058708190918
    10. '(result' → logprob: -10.315058708190918

Token 1239: ' chaque' (ID: 21194)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7609291672706604
    2. 'return' → logprob: -1.2609291076660156
    3. '((' → logprob: -1.5109291076660156
    4. '(f' → logprob: -4.510929107666016
    5. '(k' → logprob: -5.135929107666016
    6. '(((' → logprob: -5.635929107666016
    7. 'MOD' → logprob: -6.385929107666016
    8. '(n' → logprob: -6.635929107666016
    9. '(return' → logprob: -7.010929107666016
    10. '```' → logprob: -7.135929107666016

Token 1240: ' étape' (ID: 83661)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2209383249282837
    2. ')' → logprob: -1.3459383249282837
    3. 'return' → logprob: -1.3459383249282837
    4. '(' → logprob: -2.095938205718994
    5. 'step' → logprob: -3.970938205718994
    6. 'ét' → logprob: -5.095938205718994
    7. ' étape' → logprob: -5.220938205718994
    8. '#' → logprob: -5.970938205718994
    9. '```' → logprob: -5.970938205718994
    10. '`' → logprob: -6.220938205718994

Token 1241: ' pour' (ID: 1930)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6031513214111328
    2. 'result' → logprob: -1.3531513214111328
    3. '   ' → logprob: -1.7281513214111328
    4. 'res' → logprob: -4.228151321411133
    5. ' return' → logprob: -7.603151321411133
    6. 'fact' → logprob: -7.603151321411133
    7. '```' → logprob: -8.103151321411133
    8. '(result' → logprob: -8.478151321411133
    9. 'ans' → logprob: -8.603151321411133
    10. '((' → logprob: -8.978151321411133

Token 1242: ' ne' (ID: 453)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.04983161389827728
    2. '((' → logprob: -4.049831390380859
    3. 'return' → logprob: -4.174831390380859
    4. '(f' → logprob: -4.424831390380859
    5. '(((' → logprob: -6.424831390380859
    6. '((((' → logprob: -7.174831390380859
    7. 'result' → logprob: -8.42483139038086
    8. '(' → logprob: -8.92483139038086
    9. 'faire' → logprob: -8.92483139038086
    10. ' fact' → logprob: -9.04983139038086

Token 1243: ' jamais' (ID: 23077)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.5016754865646362
    2. ')' → logprob: -1.8766754865646362
    3. ' return' → logprob: -2.751675605773926
    4. '```' → logprob: -2.751675605773926
    5. 'continue' → logprob: -2.876675605773926
    6. '   ' → logprob: -2.876675605773926
    7. '(' → logprob: -3.501675605773926
    8. '%' → logprob: -3.501675605773926
    9. '*' → logprob: -3.751675605773926
    10. 'MOD' → logprob: -3.876675605773926

Token 1244: ' dépasser' (ID: 187375)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.24290765821933746
    2. ' lose' → logprob: -3.117907762527466
    3. 'lose' → logprob: -3.242907762527466
    4. ' overflow' → logprob: -3.367907762527466
    5. 'break' → logprob: -3.742907762527466
    6. '```' → logprob: -3.742907762527466
    7. 'forget' → logprob: -4.742907524108887
    8. 'return' → logprob: -5.117907524108887
    9. ' perdre' → logprob: -5.492907524108887
    10. 'n' → logprob: -5.867907524108887

Token 1245: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0013282144209370017
    2. ' MOD' → logprob: -6.626327991485596
    3. '_MOD' → logprob: -14.126328468322754
    4. '```' → logprob: -14.626328468322754
    5. '(M' → logprob: -14.751328468322754
    6. '   ' → logprob: -15.501328468322754
    7. '`' → logprob: -16.251327514648438
    8. '.MOD' → logprob: -16.376327514648438
    9. '(' → logprob: -16.751327514648438
    10. 'le' → logprob: -17.376327514648438

Token 1246: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3783748149871826
    2. '   ' → logprob: -1.8783748149871826
    3. 'result' → logprob: -1.8783748149871826
    4. 'res' → logprob: -5.253375053405762
    5. ' return' → logprob: -6.753375053405762
    6. 'fact' → logprob: -7.128375053405762
    7. 'ans' → logprob: -7.628375053405762
    8. '```' → logprob: -7.753375053405762
    9. '((' → logprob: -8.253375053405762
    10. '(result' → logprob: -8.253375053405762

Token 1247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5913810133934021
    2. 'return' → logprob: -0.8413810133934021
    3. 'result' → logprob: -5.091381072998047
    4. 'res' → logprob: -5.341381072998047
    5. '```' → logprob: -5.466381072998047
    6. ' return' → logprob: -9.466381072998047
    7. 'ret' → logprob: -9.841381072998047
    8. '``' → logprob: -11.716381072998047
    9. '    
' → logprob: -12.216381072998047
    10. 'ans' → logprob: -12.341381072998047

Token 1248: ' result' (ID: 1534)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08456127345561981
    2. 'res' → logprob: -2.584561347961426
    3. 'result' (adapté à ' result') → logprob: -5.584561347961426
    4. '   ' → logprob: -6.709561347961426
    5. 'ret' → logprob: -7.459561347961426
    6. 'ans' → logprob: -9.584561347961426
    7. ' return' → logprob: -11.209561347961426
    8. '```' → logprob: -11.584561347961426
    9. 'fact' → logprob: -12.209561347961426
    10. 'r' → logprob: -13.084561347961426

Token 1249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6942451596260071
    2. ' =' → logprob: -0.6942451596260071
    3. '   ' → logprob: -6.819245338439941
    4. '=
' → logprob: -13.444245338439941
    5. ' =
' → logprob: -14.194245338439941
    6. ' ' → logprob: -14.194245338439941
    7. '	' → logprob: -14.319245338439941
    8. ')' → logprob: -15.319245338439941
    9. '```' → logprob: -15.569245338439941
    10. ',' → logprob: -15.944245338439941

Token 1250: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.012746606022119522
    2. '(f' → logprob: -4.387746810913086
    3. '((' → logprob: -9.512746810913086
    4. ' fact' → logprob: -9.762746810913086
    5. '(' → logprob: -10.012746810913086
    6. 'factor' → logprob: -10.887746810913086
    7. ' (' → logprob: -11.262746810913086
    8. '(((' → logprob: -11.762746810913086
    9. 'facts' → logprob: -12.137746810913086
    10. '_fact' → logprob: -12.887746810913086

Token 1251: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.03179793059825897
    2. '[(' → logprob: -4.156797885894775
    3. '[k' → logprob: -4.531797885894775
    4. 'n' → logprob: -5.656797885894775
    5. '(n' → logprob: -7.031797885894775
    6. '[' → logprob: -7.781797885894775
    7. 'k' → logprob: -10.281798362731934
    8. '(k' → logprob: -11.281798362731934
    9. '[((' → logprob: -11.906798362731934
    10. '[
' → logprob: -12.031798362731934

Token 1252: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6534254550933838
    2. ']' → logprob: -0.7784254550933838
    3. ']*' → logprob: -4.153425216674805
    4. '[' → logprob: -6.528425216674805
    5. '*' → logprob: -6.653425216674805
    6. ' -' → logprob: -6.903425216674805
    7. '   ' → logprob: -7.903425216674805
    8. '[n' → logprob: -9.153425216674805
    9. '+' → logprob: -9.528425216674805
    10. '[-' → logprob: -9.778425216674805

Token 1253: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.320199877838604e-07
    2. ' k' → logprob: -14.875
    3. '(k' → logprob: -19.625
    4. 'int' → logprob: -19.875
    5. ' ' → logprob: -21.375
    6. '   ' → logprob: -21.625
    7. '{k' → logprob: -21.75
    8. '
' → logprob: -22.625
    9. '[k' → logprob: -23.125
    10. '	k' → logprob: -23.125

Token 1254: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00047773998812772334
    2. ' -' → logprob: -7.7504777908325195
    3. '[' → logprob: -10.87547779083252
    4. '-token' → logprob: -11.25047779083252
    5. '[-' → logprob: -12.62547779083252
    6. '1' → logprob: -12.75047779083252
    7. '<|end|>' → logprob: -12.87547779083252
    8. ']' → logprob: -13.75047779083252
    9. '   ' → logprob: -14.25047779083252
    10. '```' → logprob: -14.50047779083252

Token 1255: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -16.375
    4. '   ' → logprob: -16.5
    5. '```' → logprob: -16.875
    6. '<|end|>' → logprob: -18.125
    7. '۱' → logprob: -19.0625
    8. '১' → logprob: -19.1875
    9. '１' → logprob: -19.875
    10. '१' → logprob: -20.375

Token 1256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.500000953674316
    3. '2' → logprob: -16.0
    4. '   ' → logprob: -16.625
    5. '<|end|>' → logprob: -17.125
    6. '```' → logprob: -17.375
    7. 'result' → logprob: -17.5625
    8. '۱' → logprob: -18.125
    9. '১' → logprob: -18.9375
    10. '
' → logprob: -19.0625

Token 1257: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.6789137084269896e-05
    2. ']*' → logprob: -10.50003719329834
    3. '   ' → logprob: -12.25003719329834
    4. ']
' → logprob: -12.87503719329834
    5. ' ]' → logprob: -14.00003719329834
    6. ']%' → logprob: -14.87503719329834
    7. '```' → logprob: -15.87503719329834
    8. '']' → logprob: -15.87503719329834
    9. '*' → logprob: -16.000036239624023
    10. '"]' → logprob: -16.375036239624023

Token 1258: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3518301844596863
    2. '*' → logprob: -1.226830244064331
    3. '   ' → logprob: -5.726830005645752
    4. '
' → logprob: -10.60183048248291
    5. '%' → logprob: -10.72683048248291
    6. '#' → logprob: -10.85183048248291
    7. '  ' → logprob: -11.85183048248291
    8. '    
' → logprob: -11.97683048248291
    9. ' ' → logprob: -12.35183048248291
    10. ' ' → logprob: -12.35183048248291

Token 1259: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00015347852604463696
    2. '(inv' → logprob: -8.875153541564941
    3. ' inv' → logprob: -11.250153541564941
    4. '(' → logprob: -14.875153541564941
    5. '   ' → logprob: -15.750153541564941
    6. '_inv' → logprob: -17.250152587890625
    7. '.inv' → logprob: -17.500152587890625
    8. 'Inv' → logprob: -18.750152587890625
    9. ' (' → logprob: -18.875152587890625
    10. '```' → logprob: -19.000152587890625

Token 1260: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.014257765375077724
    2. '(f' → logprob: -4.264257907867432
    3. '(inv' → logprob: -9.389257431030273
    4. '(k' → logprob: -12.514257431030273
    5. 'f' → logprob: -13.514257431030273
    6. '((' → logprob: -13.764257431030273
    7. 'inv' → logprob: -13.764257431030273
    8. 'fac' → logprob: -13.889257431030273
    9. '(x' → logprob: -14.139257431030273
    10. '(' → logprob: -14.514257431030273

Token 1261: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -7.696077227592468e-05
    2. '[n' → logprob: -9.500077247619629
    3. 'k' → logprob: -13.250077247619629
    4. '[' → logprob: -15.250077247619629
    5. '[key' → logprob: -17.625076293945312
    6. '[
' → logprob: -17.750076293945312
    7. '[(' → logprob: -17.875076293945312
    8. '

' → logprob: -18.250076293945312
    9. '   ' → logprob: -18.375076293945312
    10. ' [' → logprob: -18.375076293945312

Token 1262: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22711181640625
    2. ']' → logprob: -1.72711181640625
    3. '[k' → logprob: -4.85211181640625
    4. '[' → logprob: -5.10211181640625
    5. '[-' → logprob: -5.10211181640625
    6. ' -' → logprob: -6.10211181640625
    7. '1' → logprob: -6.97711181640625
    8. 'k' → logprob: -7.72711181640625
    9. '[n' → logprob: -8.22711181640625
    10. '```' → logprob: -8.35211181640625

Token 1263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.484132169745862e-05
    2. ']' → logprob: -9.375094413757324
    3. '```' → logprob: -12.375094413757324
    4. '0' → logprob: -12.875094413757324
    5. '   ' → logprob: -13.125094413757324
    6. ' ' → logprob: -14.125094413757324
    7. ']int' → logprob: -16.25009536743164
    8. '...' → logprob: -16.25009536743164
    9. '<|end|>' → logprob: -16.75009536743164
    10. '-' → logprob: -16.87509536743164

Token 1264: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029472043737769127
    2. '%' → logprob: -3.9044721126556396
    3. ']%' → logprob: -4.7794718742370605
    4. ')' → logprob: -7.9044718742370605
    5. ' %' → logprob: -9.529472351074219
    6. '']' → logprob: -11.404472351074219
    7. '<|end|>' → logprob: -11.779472351074219
    8. ' ]' → logprob: -11.904472351074219
    9. ')%' → logprob: -12.279472351074219
    10. '}' → logprob: -13.154472351074219

Token 1265: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.027682051062583923
    2. ' %' → logprob: -3.652682065963745
    3. 'result' → logprob: -7.152681827545166
    4. '   ' → logprob: -8.777682304382324
    5. '<|end|>' → logprob: -9.027682304382324
    6. '*' → logprob: -9.652682304382324
    7. ')' → logprob: -9.652682304382324
    8. ')%' → logprob: -10.652682304382324
    9. '%n' → logprob: -10.652682304382324
    10. '[result' → logprob: -10.777682304382324

Token 1266: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.512236498361744e-07
    2. ' MOD' → logprob: -14.500000953674316
    3. '_MOD' → logprob: -22.25
    4. '.MOD' → logprob: -23.75
    5. 'MO' → logprob: -25.0
    6. 'MD' → logprob: -25.75
    7. 'MODE' → logprob: -26.125
    8. '```' → logprob: -26.125
    9. '(M' → logprob: -26.75
    10. 'mod' → logprob: -26.75

Token 1267: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.474845290184021
    2. '   ' → logprob: -1.224845290184021
    3. '*' → logprob: -2.9748454093933105
    4. '<|end|>' → logprob: -3.9748454093933105
    5. ' result' → logprob: -5.5998454093933105
    6. ')' → logprob: -5.7248454093933105
    7. ' *' → logprob: -5.9748454093933105
    8. '%' → logprob: -6.0998454093933105
    9. '[result' → logprob: -7.0998454093933105
    10. '```' → logprob: -8.224844932556152

Token 1268: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.002798698842525482
    2. '*' → logprob: -6.877798557281494
    3. '   ' → logprob: -6.877798557281494
    4. ' result' → logprob: -7.752798557281494
    5. '```' → logprob: -8.877799034118652
    6. '(result' → logprob: -9.002799034118652
    7. '[result' → logprob: -11.377799034118652
    8. ' *' → logprob: -11.502799034118652
    9. 'fact' → logprob: -12.127799034118652
    10. '`' → logprob: -12.627799034118652

Token 1269: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -8.315936429426074e-05
    2. '   ' → logprob: -9.500082969665527
    3. ' result' → logprob: -12.000082969665527
    4. '*' → logprob: -14.375082969665527
    5. '(result' → logprob: -14.500082969665527
    6. '```' → logprob: -14.750082969665527
    7. '	result' → logprob: -15.250082969665527
    8. 'return' → logprob: -15.625082969665527
    9. ',result' → logprob: -17.500083923339844
    10. '[result' → logprob: -17.625083923339844

Token 1270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016576901078224182
    2. '   ' → logprob: -4.891576766967773
    3. '*' → logprob: -5.266576766967773
    4. '```' → logprob: -6.266576766967773
    5. ' =' → logprob: -6.766576766967773
    6. '*=' → logprob: -7.641576766967773
    7. '#' → logprob: -9.141576766967773
    8. '`' → logprob: -10.391576766967773
    9. '  ' → logprob: -10.891576766967773
    10. ' *=' → logprob: -11.141576766967773

Token 1271: ' result' (ID: 1534)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.16104711592197418
    2. 'result' → logprob: -1.911047101020813
    3. 'fact' → logprob: -8.036046981811523
    4. ' (' → logprob: -8.036046981811523
    5. ' result' → logprob: -8.786046981811523
    6. '(f' → logprob: -11.661046981811523
    7. '[result' → logprob: -12.161046981811523
    8. '=result' → logprob: -13.286046981811523
    9. ',result' → logprob: -13.786046981811523
    10. '(' → logprob: -14.036046981811523

Token 1272: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08919911086559296
    2. ' *' → logprob: -2.4641990661621094
    3. '```' → logprob: -8.96419906616211
    4. '   ' → logprob: -9.58919906616211
    5. '**' → logprob: -10.96419906616211
    6. 'result' → logprob: -11.08919906616211
    7. '`' → logprob: -11.71419906616211
    8. ' ' → logprob: -12.08919906616211
    9. '=' → logprob: -12.71419906616211
    10. '#' → logprob: -12.96419906616211

Token 1273: ' pow' (ID: 9779)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -3.173704271830502e-06
    2. ' inv' → logprob: -13.87500286102295
    3. '(inv' → logprob: -14.00000286102295
    4. 'fact' → logprob: -14.12500286102295
    5. '   ' → logprob: -14.75000286102295
    6. 'inf' → logprob: -17.125003814697266
    7. '  ' → logprob: -17.250003814697266
    8. '```' → logprob: -17.500003814697266
    9. ' ' → logprob: -18.625003814697266
    10. '#' → logprob: -18.750003814697266

Token 1274: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.01896415278315544
    2. '(inv' → logprob: -4.2689642906188965
    3. 'd' → logprob: -5.3939642906188965
    4. 'inv' → logprob: -8.393963813781738
    5. '(' → logprob: -11.268963813781738
    6. '(in' → logprob: -13.143963813781738
    7. '((' → logprob: -13.643963813781738
    8. '(f' → logprob: -14.268963813781738
    9. '2' → logprob: -14.643963813781738
    10. '(pow' → logprob: -14.768963813781738

Token 1275: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3291778266429901
    2. ',' → logprob: -1.5791778564453125
    3. 'result' → logprob: -3.0791778564453125
    4. ',n' → logprob: -3.5791778564453125
    5. ',result' → logprob: -8.454177856445312
    6. '(n' → logprob: -8.954177856445312
    7. ' ,' → logprob: -10.454177856445312
    8. '```' → logprob: -10.954177856445312
    9. '%n' → logprob: -11.204177856445312
    10. '   ' → logprob: -11.329177856445312

Token 1276: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. '(n' → logprob: -16.25
    3. ' n' → logprob: -16.25
    4. '
' → logprob: -17.375
    5. '   ' → logprob: -17.875
    6. '_n' → logprob: -19.5
    7. '#' → logprob: -20.0
    8. '

' → logprob: -20.125
    9. '    ' → logprob: -20.125
    10. '	n' → logprob: -20.25

Token 1277: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4632238447666168
    2. ',' → logprob: -1.4632238149642944
    3. '%' → logprob: -2.088223934173584
    4. ',n' → logprob: -5.213223934173584
    5. ' ,' → logprob: -6.463223934173584
    6. '*' → logprob: -6.463223934173584
    7. '-' → logprob: -6.588223934173584
    8. '```' → logprob: -6.588223934173584
    9. '%n' → logprob: -6.713223934173584
    10. ')%' → logprob: -7.338223934173584

Token 1278: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.0206720617134124e-05
    2. ' MOD' → logprob: -11.50001049041748
    3. '_MOD' → logprob: -23.125009536743164
    4. '   ' → logprob: -23.625009536743164
    5. 'MODE' → logprob: -24.875009536743164
    6. 'MO' → logprob: -25.375009536743164
    7. '.MOD' → logprob: -26.125009536743164
    8. ' ' → logprob: -26.250009536743164
    9. 'MD' → logprob: -26.750009536743164
    10. '```' → logprob: -27.375009536743164

Token 1279: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.060189660638570786
    2. '   ' → logprob: -3.185189723968506
    3. '%' → logprob: -4.310189723968506
    4. ')%' → logprob: -6.435189723968506
    5. ' %' → logprob: -6.560189723968506
    6. '<|end|>' → logprob: -8.310189247131348
    7. ' )' → logprob: -8.685189247131348
    8. '<|end|>' → logprob: -9.685189247131348
    9. ']' → logprob: -10.310189247131348
    10. '```' → logprob: -10.810189247131348

Token 1280: ' %' (ID: 1851)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3497655987739563
    2. '%' → logprob: -1.3497655391693115
    3. '<|end|>' → logprob: -3.8497655391693115
    4. 'return' → logprob: -5.099765777587891
    5. ' %' → logprob: -6.474765777587891
    6. 'result' → logprob: -6.474765777587891
    7. '```' → logprob: -6.474765777587891
    8. '
' → logprob: -6.599765777587891
    9. ')' → logprob: -7.349765777587891
    10. ' return' → logprob: -7.599765777587891

Token 1281: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.512236498361744e-07
    2. ' MOD' → logprob: -14.500000953674316
    3. '_MOD' → logprob: -21.25
    4. '   ' → logprob: -22.0
    5. '.MOD' → logprob: -23.625
    6. 'MO' → logprob: -24.0
    7. 'mod' → logprob: -24.375
    8. 'MODE' → logprob: -25.5
    9. 'Mod' → logprob: -25.75
    10. '(M' → logprob: -25.75

Token 1282: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038251250982284546
    2. 'return' → logprob: -3.2882511615753174
    3. '	return' → logprob: -9.038250923156738
    4. ' return' → logprob: -9.538250923156738
    5. '```' → logprob: -11.538250923156738
    6. '    
' → logprob: -12.663250923156738
    7. '<|end|>' → logprob: -13.163250923156738
    8. '  ' → logprob: -13.538250923156738
    9. ':return' → logprob: -14.288250923156738
    10. '
' → logprob: -14.413250923156738

Token 1283: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12836597859859467
    2. '   ' → logprob: -2.128365993499756
    3. ' return' → logprob: -7.253365993499756
    4. 'result' → logprob: -7.628365993499756
    5. '	return' → logprob: -8.878365516662598
    6. '```' → logprob: -9.503365516662598
    7. ':return' → logprob: -12.003365516662598
    8. '  ' → logprob: -12.253365516662598
    9. 'eturn' → logprob: -12.378365516662598
    10. '    
' → logprob: -12.753365516662598

Token 1284: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31348171830177307
    2. 'result' → logprob: -1.3134816884994507
    3. '   ' → logprob: -8.438481330871582
    4. ' return' → logprob: -13.313481330871582
    5. '```' → logprob: -13.938481330871582
    6. ' result' → logprob: -14.063481330871582
    7. '	return' → logprob: -16.9384822845459
    8. '	result' → logprob: -17.0634822845459
    9. '    
' → logprob: -17.0634822845459
    10. '(result' → logprob: -17.8134822845459

Token 1285: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0025031249970197678
    2. ' result' → logprob: -6.002502918243408
    3. '(result' → logprob: -10.502503395080566
    4. ' (' → logprob: -17.87750244140625
    5. 'res' → logprob: -18.00250244140625
    6. '	result' → logprob: -18.37750244140625
    7. '   ' → logprob: -19.12750244140625
    8. '```' → logprob: -19.37750244140625
    9. 'results' → logprob: -19.87750244140625
    10. ' ' → logprob: -20.12750244140625

Token 1286: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1287: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1288: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.020432686433196068
    2. 'def' → logprob: -4.145432472229004
    3. '```' → logprob: -5.645432472229004
    4. '<|end|>' → logprob: -7.270432472229004
    5. 'import' → logprob: -10.770432472229004
    6. 'pass' → logprob: -10.895432472229004
    7. '
' → logprob: -11.020432472229004
    8. 'for' → logprob: -11.020432472229004
    9. 'n' → logprob: -11.145432472229004
    10. 'x' → logprob: -11.270432472229004

Token 1289: ' du' (ID: 1462)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17277884483337402
    2. '()' → logprob: -2.922778844833374
    3. 't' → logprob: -3.047778844833374
    4. 'q' → logprob: -3.422778844833374
    5. 'n' → logprob: -4.047779083251953
    6. '(x' → logprob: -6.297779083251953
    7. '#' → logprob: -7.297779083251953
    8. 'a' → logprob: -7.422779083251953
    9. 'T' → logprob: -7.547779083251953
    10. 'for' → logprob: -7.797779083251953

Token 1290: ' nombre' (ID: 9733)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014061362482607365
    2. 'T' → logprob: -4.389061450958252
    3. 'n' → logprob: -6.889061450958252
    4. 'q' → logprob: -8.514060974121094
    5. ' t' → logprob: -9.264060974121094
    6. 'int' → logprob: -9.389060974121094
    7. '```' → logprob: -9.514060974121094
    8. 'x' → logprob: -10.389060974121094
    9. ' T' → logprob: -11.389060974121094
    10. '_' → logprob: -11.764060974121094

Token 1291: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49902236461639404
    2. ' =' → logprob: -1.374022364616394
    3. 't' → logprob: -2.6240224838256836
    4. 'n' → logprob: -3.8740224838256836
    5. '_' → logprob: -4.499022483825684
    6. 'of' → logprob: -5.124022483825684
    7. '_of' → logprob: -5.249022483825684
    8. 'de' → logprob: -5.624022483825684
    9. 's' → logprob: -5.874022483825684
    10. '_queries' → logprob: -5.874022483825684

Token 1292: ' requ' (ID: 7028)
  Prédit: 'tests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tests' → logprob: -0.1717681735754013
    2. 'test' → logprob: -2.1717681884765625
    3. 't' → logprob: -3.1717681884765625
    4. 'cas' → logprob: -6.9217681884765625
    5. 'cases' → logprob: -7.1717681884765625
    6. 'queries' → logprob: -9.296768188476562
    7. ' tests' → logprob: -10.796768188476562
    8. ' test' → logprob: -11.046768188476562
    9. '```' → logprob: -11.546768188476562
    10. 'tc' → logprob: -11.921768188476562

Token 1293: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.003606363432481885
    2. 'etes' → logprob: -5.62860631942749
    3. 'ête' → logprob: -12.753606796264648
    4. 'ètes' → logprob: -13.878606796264648
    5. 'ettes' → logprob: -14.503606796264648
    6. 'et' → logprob: -14.628606796264648
    7. '#' → logprob: -15.003606796264648
    8. 'êt' → logprob: -15.253606796264648
    9. 'é' → logprob: -15.503606796264648
    10. 'ises' → logprob: -15.753606796264648

Token 1294: ' à' (ID: 1221)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08794138580560684
    2. 'Q' → logprob: -2.5879414081573486
    3. 't' → logprob: -4.8379411697387695
    4. 'T' → logprob: -6.8379411697387695
    5. 'for' → logprob: -12.33794116973877
    6. 'qq' → logprob: -12.33794116973877
    7. 'query' → logprob: -13.46294116973877
    8. '```' → logprob: -13.71294116973877
    9. 'queries' → logprob: -13.71294116973877
    10. '
' → logprob: -13.83794116973877

Token 1295: ' effectuer' (ID: 98625)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.15803508460521698
    2. ' traiter' → logprob: -2.7830350399017334
    3. 'faire' → logprob: -3.4080350399017334
    4. 'read' → logprob: -3.6580350399017334
    5. 'int' → logprob: -4.0330352783203125
    6. 'tra' → logprob: -5.2830352783203125
    7. '_trait' → logprob: -7.4080352783203125
    8. 'l' → logprob: -8.158035278320312
    9. 'ré' → logprob: -8.658035278320312
    10. 'execut' → logprob: -8.908035278320312

Token 1296: ',' (ID: 11)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.036960773169994354
    2. 'Q' → logprob: -3.5369608402252197
    3. 't' → logprob: -5.036960601806641
    4. 'T' → logprob: -7.286960601806641
    5. 'for' → logprob: -13.28696060180664
    6. 'qq' → logprob: -13.66196060180664
    7. '```' → logprob: -13.78696060180664
    8. 'queries' → logprob: -14.03696060180664
    9. '_q' → logprob: -14.66196060180664
    10. '
' → logprob: -14.78696060180664

Token 1297: ' via' (ID: 4493)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06441791355609894
    2. 'Q' → logprob: -3.064417839050293
    3. 't' → logprob: -4.314417839050293
    4. 'T' → logprob: -6.064417839050293
    5. 'qq' → logprob: -12.939417839050293
    6. 'for' → logprob: -13.314417839050293
    7. ' q' → logprob: -13.814417839050293
    8. 'query' → logprob: -13.814417839050293
    9. 'queries' → logprob: -14.689417839050293
    10. '_q' → logprob: -15.814417839050293

Token 1298: ' la' (ID: 557)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0007245833403430879
    2. 'reads' → logprob: -7.375724792480469
    3. ' read' → logprob: -10.375724792480469
    4. 'int' → logprob: -10.500724792480469
    5. 't' → logprob: -10.750724792480469
    6. 'q' → logprob: -11.250724792480469
    7. ' reads' → logprob: -13.500724792480469
    8. 'r' → logprob: -14.000724792480469
    9. 'Q' → logprob: -14.250724792480469
    10. '_' → logprob: -14.875724792480469

Token 1299: ' fonction' (ID: 17610)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.007456130348145962
    2. 't' → logprob: -5.382456302642822
    3. 'r' → logprob: -6.757456302642822
    4. 'reads' → logprob: -7.507456302642822
    5. 'int' → logprob: -7.757456302642822
    6. 'T' → logprob: -8.757455825805664
    7. 'q' → logprob: -8.882455825805664
    8. 'n' → logprob: -9.007455825805664
    9. 'def' → logprob: -9.632455825805664
    10. 'for' → logprob: -9.882455825805664

Token 1300: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.6588059663772583
    2. 'q' → logprob: -1.0338059663772583
    3. 't' → logprob: -2.2838058471679688
    4. 'T' → logprob: -4.158805847167969
    5. 'Q' → logprob: -4.783805847167969
    6. 'reads' → logprob: -8.033805847167969
    7. 'r' → logprob: -8.283805847167969
    8. 'for' → logprob: -8.408805847167969
    9. 'queries' → logprob: -9.783805847167969
    10. 'n' → logprob: -10.658805847167969

Token 1301: ' qui' (ID: 2780)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.036644794046878815
    2. 'Q' → logprob: -3.536644697189331
    3. 't' → logprob: -5.03664493560791
    4. 'T' → logprob: -7.91164493560791
    5. '```' → logprob: -12.28664493560791
    6. 'queries' → logprob: -13.28664493560791
    7. '_q' → logprob: -14.66164493560791
    8. ' q' → logprob: -14.78664493560791
    9. 'query' → logprob: -14.91164493560791
    10. 'qq' → logprob: -15.16164493560791

Token 1302: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21070756018161774
    2. 'reads' → logprob: -2.335707664489746
    3. ' reads' → logprob: -2.960707664489746
    4. 'read' → logprob: -4.835707664489746
    5. '()
' → logprob: -4.835707664489746
    6. 'calls' → logprob: -4.835707664489746
    7. 'n' → logprob: -5.210707664489746
    8. '_reads' → logprob: -5.835707664489746
    9. '#' → logprob: -5.960707664489746
    10. 'returns' → logprob: -6.085707664489746

Token 1303: ' un' (ID: 537)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.048659808933734894
    2. 'read' → logprob: -3.0486598014831543
    3. '()
' → logprob: -10.423660278320312
    4. 'int' → logprob: -10.548660278320312
    5. 'reads' → logprob: -12.298660278320312
    6. 'def' → logprob: -12.548660278320312
    7. '(read' → logprob: -12.673660278320312
    8. 't' → logprob: -14.048660278320312
    9. '#' → logprob: -14.423660278320312
    10. '()]' → logprob: -14.798660278320312

Token 1304: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.21250705420970917
    2. '()' → logprob: -1.7125070095062256
    3. '()
' → logprob: -5.712507247924805
    4. 'n' → logprob: -6.087507247924805
    5. 'integer' → logprob: -6.712507247924805
    6. 'number' → logprob: -7.462507247924805
    7. '=int' → logprob: -7.462507247924805
    8. 'read' → logprob: -7.962507247924805
    9. 'line' → logprob: -7.962507247924805
    10. 'def' → logprob: -8.337507247924805

Token 1305: ' depuis' (ID: 16277)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.09325883537530899
    2. 'Q' → logprob: -2.843258857727051
    3. 't' → logprob: -3.593258857727051
    4. 'T' → logprob: -5.718258857727051
    5. 'queries' → logprob: -12.46825885772705
    6. 'qq' → logprob: -12.96825885772705
    7. '```' → logprob: -13.21825885772705
    8. 'query' → logprob: -13.46825885772705
    9. '
' → logprob: -14.34325885772705
    10. ' q' → logprob: -14.96825885772705

Token 1306: ' l' (ID: 305)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.08002683520317078
    2. 'input' → logprob: -2.580026865005493
    3. '()' → logprob: -8.080026626586914
    4. '(stdin' → logprob: -8.205026626586914
    5. 'read' → logprob: -8.580026626586914
    6. '0' → logprob: -8.955026626586914
    7. '()
' → logprob: -9.205026626586914
    8. '```' → logprob: -10.455026626586914
    9. '
' → logprob: -10.830026626586914
    10. 'stdout' → logprob: -10.830026626586914

Token 1307: ''entrée' (ID: 115820)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.6629931330680847
    2. 'input' → logprob: -0.7879931330680847
    3. 'put' → logprob: -3.7879931926727295
    4. '()
' → logprob: -5.91299295425415
    5. '(stdin' → logprob: -6.66299295425415
    6. '=' → logprob: -7.03799295425415
    7. '()' → logprob: -7.16299295425415
    8. '=input' → logprob: -8.162993431091309
    9. 't' → logprob: -8.162993431091309
    10. ')' → logprob: -8.912993431091309

Token 1308: ' standard' (ID: 7024)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.043833110481500626
    2. 't' → logprob: -3.793833017349243
    3. 'Q' → logprob: -3.918833017349243
    4. 'T' → logprob: -7.793833255767822
    5. 'def' → logprob: -9.918832778930664
    6. 'm' → logprob: -11.168832778930664
    7. '```' → logprob: -11.168832778930664
    8. 'queries' → logprob: -11.793832778930664
    9. '()' → logprob: -12.543832778930664
    10. 'query' → logprob: -12.918832778930664

Token 1309: '
' (ID: 198)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08995833247900009
    2. 'Q' → logprob: -2.589958429336548
    3. 't' → logprob: -4.589958190917969
    4. 'T' → logprob: -7.089958190917969
    5. 'queries' → logprob: -11.839958190917969
    6. '```' → logprob: -12.464958190917969
    7. 'query' → logprob: -12.714958190917969
    8. 'qq' → logprob: -12.964958190917969
    9. 'm' → logprob: -14.339958190917969
    10. ' q' → logprob: -14.464958190917969

Token 1310: 'Q' (ID: 48)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08594450354576111
    2. 'Q' → logprob: -2.585944414138794
    3. 't' → logprob: -5.085944652557373
    4. 'T' → logprob: -7.085944652557373
    5. 'queries' → logprob: -12.210944175720215
    6. 'query' → logprob: -13.085944175720215
    7. 'qq' → logprob: -13.835944175720215
    8. '```' → logprob: -14.460944175720215
    9. 'for' → logprob: -14.835944175720215
    10. ' q' → logprob: -15.210944175720215

Token 1311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03404271602630615
    2. ' =' → logprob: -3.7840428352355957
    3. '()' → logprob: -4.534042835235596
    4. '()
' → logprob: -14.159042358398438
    5. '=int' → logprob: -14.909042358398438
    6. '(' → logprob: -15.284042358398438
    7. '   ' → logprob: -15.784042358398438
    8. ')' → logprob: -16.159042358398438
    9. '=
' → logprob: -16.284042358398438
    10. ' ()' → logprob: -16.409042358398438

Token 1312: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -4.024604277219623e-05
    2. ' read' → logprob: -10.125040054321289
    3. 'reads' → logprob: -16.12504005432129
    4. 'int' → logprob: -17.00004005432129
    5. '(read' → logprob: -19.12504005432129
    6. '	read' → logprob: -19.50004005432129
    7. ' reads' → logprob: -20.37504005432129
    8. 'Read' → logprob: -21.87504005432129
    9. 'readonly' → logprob: -22.37504005432129
    10. 'write' → logprob: -22.50004005432129

Token 1313: '()

' (ID: 5874)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.702754474943504e-05
    2. '
' → logprob: -10.25003719329834
    3. ' for' → logprob: -13.37503719329834
    4. '\n' → logprob: -17.750036239624023
    5. '```' → logprob: -18.625036239624023
    6. '
' → logprob: -18.875036239624023
    7. '#' → logprob: -19.000036239624023
    8. 'while' → logprob: -19.125036239624023
    9. '	for' → logprob: -19.250036239624023
    10. 'results' → logprob: -19.875036239624023

Token 1314: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.5
    3. '
' → logprob: -19.125
    4. 'results' → logprob: -21.5
    5. '```' → logprob: -22.125
    6. '	for' → logprob: -23.125
    7. '#' → logprob: -23.75
    8. 'while' → logprob: -24.125
    9. 'result' → logprob: -24.125
    10. 'For' → logprob: -25.125

Token 1315: ' Ex' (ID: 1771)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.320199877838604e-07
    2. 'results' → logprob: -14.75
    3. ' for' → logprob: -19.0
    4. '
' → logprob: -19.375
    5. 'output' → logprob: -20.125
    6. 'outputs' → logprob: -20.125
    7. 'result' → logprob: -20.375
    8. 'answers' → logprob: -20.5
    9. 'res' → logprob: -23.5
    10. '	for' → logprob: -23.625

Token 1316: 'écution' (ID: 122423)
  Prédit: 'ecution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecution' → logprob: -0.3666192293167114
    2. 'ecute' → logprob: -1.8666192293167114
    3. 'ec' → logprob: -2.491619110107422
    4. 'for' → logprob: -2.866619110107422
    5. 'éc' → logprob: -5.366619110107422
    6. 'ecut' → logprob: -5.741619110107422
    7. 'écution' → logprob: -5.741619110107422
    8. 'ecu' → logprob: -7.741619110107422
    9. 'ecutable' → logprob: -7.866619110107422
    10. 'pression' → logprob: -8.741619110107422

Token 1317: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012761499965563416
    2. ' for' → logprob: -9.000127792358398
    3. '(
' → logprob: -13.875127792358398
    4. '
' → logprob: -14.125127792358398
    5. 'while' → logprob: -14.125127792358398
    6. '(Q' → logprob: -14.500127792358398
    7. 'Q' → logprob: -14.625127792358398
    8. 'range' → logprob: -15.375127792358398
    9. '_for' → logprob: -15.375127792358398
    10. '_' → logprob: -15.500127792358398

Token 1318: ' Q' (ID: 1486)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4483025372028351
    2. 'for' → logprob: -1.0733025074005127
    3. 'Q' → logprob: -4.573302745819092
    4. '_' → logprob: -5.948302745819092
    5. '_Q' → logprob: -6.448302745819092
    6. ' range' → logprob: -6.698302745819092
    7. '
' → logprob: -7.073302745819092
    8. '(Q' → logprob: -7.323302745819092
    9. '_range' → logprob: -7.448302745819092
    10. '[' → logprob: -7.698302745819092

Token 1319: ' bou' (ID: 17573)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37640580534935
    2. ' for' → logprob: -1.5014058351516724
    3. ' times' → logprob: -3.376405715942383
    4. 'times' → logprob: -4.126405715942383
    5. ' _' → logprob: -4.251405715942383
    6. '_' → logprob: -5.126405715942383
    7. '_times' → logprob: -5.501405715942383
    8. 'range' → logprob: -5.751405715942383
    9. ':' → logprob: -5.876405715942383
    10. ' range' → logprob: -6.376405715942383

Token 1320: 'cles' (ID: 10934)
  Prédit: 'cle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.004784445744007826
    2. 'cles' → logprob: -5.37978458404541
    3. 'c' → logprob: -8.75478458404541
    4. 'r' → logprob: -13.87978458404541
    5. 'cule' → logprob: -14.37978458404541
    6. 'ycle' → logprob: -14.37978458404541
    7. ' cle' → logprob: -14.37978458404541
    8. 'Cle' → logprob: -14.50478458404541
    9. 'ucle' → logprob: -14.62978458404541
    10. '#' → logprob: -14.75478458404541

Token 1321: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.4656579120783135e-05
    2. ' for' → logprob: -10.125044822692871
    3. '
' → logprob: -13.125044822692871
    4. 'range' → logprob: -13.500044822692871
    5. 'while' → logprob: -14.750044822692871
    6. '_for' → logprob: -15.875044822692871
    7. '(
' → logprob: -15.875044822692871
    8. '_' → logprob: -16.000043869018555
    9. ':
' → logprob: -16.125043869018555
    10. '(range' → logprob: -16.250043869018555

Token 1322: ' traiter' (ID: 105852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02407395839691162
    2. '_range' → logprob: -3.774074077606201
    3. 'range' → logprob: -8.774073600769043
    4. '
' → logprob: -8.899073600769043
    5. '_q' → logprob: -8.899073600769043
    6. '_
' → logprob: -9.024073600769043
    7. ' range' → logprob: -9.149073600769043
    8. ' _' → logprob: -9.899073600769043
    9. '_for' → logprob: -10.899073600769043
    10. '_true' → logprob: -10.899073600769043

Token 1323: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4064894914627075
    2. 'Q' → logprob: -1.1564894914627075
    3. 'for' → logprob: -4.281489372253418
    4. ' range' → logprob: -5.406489372253418
    5. '_Q' → logprob: -7.531489372253418
    6. '
' → logprob: -8.531489372253418
    7. '_' → logprob: -8.781489372253418
    8. '(Q' → logprob: -9.156489372253418
    9. '_range' → logprob: -10.031489372253418
    10. ' Q' → logprob: -10.156489372253418

Token 1324: ' requ' (ID: 7028)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07557881623506546
    2. '
' → logprob: -3.3255789279937744
    3. '_query' → logprob: -4.700578689575195
    4. 'query' → logprob: -4.825578689575195
    5. '_queries' → logprob: -5.325578689575195
    6. 'range' → logprob: -5.950578689575195
    7. ' _' → logprob: -6.200578689575195
    8. ' query' → logprob: -6.200578689575195
    9. '```' → logprob: -7.200578689575195
    10. '_q' → logprob: -7.200578689575195

Token 1325: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.0009200352360494435
    2. 'ète' → logprob: -8.375920295715332
    3. 'êt' → logprob: -8.625920295715332
    4. 'ete' → logprob: -8.875920295715332
    5. 'quête' → logprob: -9.250920295715332
    6. '#' → logprob: -9.250920295715332
    7. 'p' → logprob: -9.375920295715332
    8. 'q' → logprob: -10.750920295715332
    9. 'r' → logprob: -11.000920295715332
    10. 'ette' → logprob: -11.875920295715332

Token 1326: ' indépendante' (ID: 188424)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.1054253011243418e-05
    2. ' for' → logprob: -11.250020980834961
    3. '
' → logprob: -11.875020980834961
    4. '```' → logprob: -14.375020980834961
    5. 'while' → logprob: -15.750020980834961
    6. ':
' → logprob: -16.37502098083496
    7. '_for' → logprob: -16.50002098083496
    8. 'range' → logprob: -16.50002098083496
    9. ':' → logprob: -17.25002098083496
    10. ' 
' → logprob: -18.37502098083496

Token 1327: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.849109119386412e-06
    2. ' for' → logprob: -12.250009536743164
    3. '
' → logprob: -12.375009536743164
    4. 'while' → logprob: -14.750009536743164
    5. '```' → logprob: -15.625009536743164
    6. '_for' → logprob: -17.000009536743164
    7. 'range' → logprob: -17.250009536743164
    8. ' 
' → logprob: -17.500009536743164
    9. ':' → logprob: -17.625009536743164
    10. '	for' → logprob: -18.375009536743164

Token 1328: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -20.5
    3. '
' → logprob: -21.5
    4. '```' → logprob: -22.5
    5. '	for' → logprob: -25.25
    6. 'while' → logprob: -25.25
    7. '_for' → logprob: -26.25
    8. 'print' → logprob: -27.75
    9. '``' → logprob: -27.75
    10. 'from' → logprob: -28.375

Token 1329: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.896309739408025e-07
    2. ' _' → logprob: -14.250000953674316
    3. '_
' → logprob: -17.0
    4. '_=' → logprob: -17.0
    5. '_q' → logprob: -17.5
    6. '_i' → logprob: -18.125
    7. '_

' → logprob: -20.0
    8. '_in' → logprob: -20.5
    9. '_query' → logprob: -20.625
    10. '_case' → logprob: -21.0

Token 1330: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759819149971008
    2. 'in' → logprob: -0.8259819149971008
    3. ' ' → logprob: -10.700982093811035
    4. '_' → logprob: -11.575982093811035
    5. '	in' → logprob: -12.075982093811035
    6. ' ' → logprob: -13.575982093811035
    7. '  ' → logprob: -13.825982093811035
    8. 'import' → logprob: -14.575982093811035
    9. 'i' → logprob: -15.075982093811035
    10. ' _' → logprob: -15.450982093811035

Token 1331: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '_' → logprob: -18.500911712646484
    4. 'in' → logprob: -18.625911712646484
    5. 'Q' → logprob: -19.625911712646484
    6. 'rang' → logprob: -20.000911712646484
    7. '	range' → logprob: -20.375911712646484
    8. 'read' → logprob: -20.750911712646484
    9. ' ' → logprob: -20.875911712646484
    10. '_range' → logprob: -21.375911712646484

Token 1332: '(Q' (ID: 14437)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.48840364813804626
    2. '(Q' → logprob: -0.9884036779403687
    3. ' Q' → logprob: -4.863403797149658
    4. 'range' → logprob: -5.488403797149658
    5. ' range' → logprob: -6.238403797149658
    6. '(' → logprob: -8.2384033203125
    7. ' ' → logprob: -10.3634033203125
    8. ' (' → logprob: -10.3634033203125
    9. '(range' → logprob: -10.8634033203125
    10. ' in' → logprob: -11.1134033203125

Token 1333: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16544006764888763
    2. ',' → logprob: -2.040440082550049
    3. '):
' → logprob: -4.290440082550049
    4. '():' → logprob: -5.165440082550049
    5. ':' → logprob: -6.290440082550049
    6. ')' → logprob: -8.41543960571289
    7. '():
' → logprob: -8.54043960571289
    8. '(' → logprob: -8.54043960571289
    9. ' ):' → logprob: -8.54043960571289
    10. '   ' → logprob: -9.04043960571289

Token 1334: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11308456212282181
    2. '   ' → logprob: -2.238084554672241
    3. ' x' → logprob: -8.48808479309082
    4. '	x' → logprob: -10.23808479309082
    5. 'a' → logprob: -12.36308479309082
    6. '(x' → logprob: -12.36308479309082
    7. '```' → logprob: -12.36308479309082
    8. '[x' → logprob: -13.36308479309082
    9. ' ' → logprob: -13.73808479309082
    10. '  ' → logprob: -13.86308479309082

Token 1335: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.961759259458631e-06
    2. ' x' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.2500057220459
    4. '	x' → logprob: -17.8750057220459
    5. 'a' → logprob: -20.2500057220459
    6. '    
' → logprob: -21.3750057220459
    7. '(x' → logprob: -21.8750057220459
    8. '#' (adapté à ' #') → logprob: -22.0000057220459
    9. ',x' → logprob: -22.7500057220459
    10. '_x' → logprob: -22.8750057220459

Token 1336: ' Lecture' (ID: 106534)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.703443770878948e-06
    2. '   ' → logprob: -12.250007629394531
    3. ' x' → logprob: -12.750007629394531
    4. '	x' → logprob: -17.37500762939453
    5. 'a' → logprob: -18.50000762939453
    6. '(x' → logprob: -19.50000762939453
    7. 'params' → logprob: -19.62500762939453
    8. '    
' → logprob: -19.62500762939453
    9. '#' → logprob: -19.75000762939453
    10. 'X' → logprob: -19.87500762939453

Token 1337: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004679680336266756
    2. '(x' → logprob: -5.3796796798706055
    3. ' x' → logprob: -10.504679679870605
    4. '   ' → logprob: -11.129679679870605
    5. 'a' → logprob: -11.504679679870605
    6. '	x' → logprob: -13.129679679870605
    7. 'params' → logprob: -13.754679679870605
    8. '(' → logprob: -14.129679679870605
    9. ',x' → logprob: -14.629679679870605
    10. '*x' → logprob: -14.754679679870605

Token 1338: ' trois' (ID: 25564)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.869639476761222e-05
    2. ' x' → logprob: -10.750039100646973
    3. '(x' → logprob: -11.375039100646973
    4. '*x' → logprob: -12.375039100646973
    5. '[x' → logprob: -14.625039100646973
    6. 'reads' → logprob: -15.125039100646973
    7. '*' → logprob: -15.125039100646973
    8. 'a' → logprob: -15.750039100646973
    9. 'read' → logprob: -16.250038146972656
    10. '	x' → logprob: -16.500038146972656

Token 1339: ' ent' (ID: 1121)
  Prédit: 'ints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.5847333073616028
    2. 'inte' → logprob: -1.084733247756958
    3. 'int' → logprob: -2.959733247756958
    4. ' integers' → logprob: -3.584733247756958
    5. 'ent' → logprob: -3.959733247756958
    6. 'x' → logprob: -5.459733486175537
    7. 'ents' → logprob: -6.834733486175537
    8. 'values' → logprob: -7.709733486175537
    9. 'variables' → logprob: -10.084733009338379
    10. 'integer' → logprob: -10.084733009338379

Token 1340: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -6.64708495605737e-05
    2. 'ers' → logprob: -10.875066757202148
    3. 't' → logprob: -11.500066757202148
    4. 'ints' → logprob: -11.750066757202148
    5. 'ier' → logprob: -12.250066757202148
    6. 'eg' → logprob: -12.250066757202148
    7. 'er' → logprob: -12.375066757202148
    8. 's' → logprob: -12.500066757202148
    9. 'gers' → logprob: -13.000066757202148
    10. 'e' → logprob: -13.125066757202148

Token 1341: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00013250234769657254
    2. '(x' → logprob: -9.00013256072998
    3. ' x' → logprob: -11.62513256072998
    4. 'a' → logprob: -17.125131607055664
    5. '   ' → logprob: -17.125131607055664
    6. '	x' → logprob: -17.875131607055664
    7. '[x' → logprob: -17.875131607055664
    8. '_x' → logprob: -19.875131607055664
    9. '{x' → logprob: -19.875131607055664
    10. '*x' → logprob: -20.250131607055664

Token 1342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008133203955367208
    2. ',d' → logprob: -7.1258134841918945
    3. ' ,' → logprob: -12.250813484191895
    4. 'd' → logprob: -13.000813484191895
    5. ',n' → logprob: -14.375813484191895
    6. ',x' → logprob: -15.000813484191895
    7. '_,' → logprob: -15.500813484191895
    8. ',y' → logprob: -15.625813484191895
    9. ',D' → logprob: -16.125812530517578
    10. ',v' → logprob: -16.750812530517578

Token 1343: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002036595979006961
    2. ' d' → logprob: -8.500204086303711
    3. 'y' → logprob: -15.750204086303711
    4. 'read' → logprob: -18.37520408630371
    5. 'reads' → logprob: -19.50020408630371
    6. 'def' → logprob: -19.75020408630371
    7. '   ' → logprob: -20.00020408630371
    8. ' ' → logprob: -20.00020408630371
    9. '	d' → logprob: -20.25020408630371
    10. ',' → logprob: -20.37520408630371

Token 1344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0053129736334085464
    2. ',n' → logprob: -5.255312919616699
    3. ',k' → logprob: -10.0053129196167
    4. ',x' → logprob: -11.5053129196167
    5. ' ,' → logprob: -11.8803129196167
    6. ',d' → logprob: -12.3803129196167
    7. 'n' → logprob: -13.1303129196167
    8. ',r' → logprob: -13.2553129196167
    9. ',y' → logprob: -13.5053129196167
    10. ',N' → logprob: -13.7553129196167

Token 1345: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.339278580620885e-06
    2. ' n' → logprob: -13.125001907348633
    3. '_n' → logprob: -15.625001907348633
    4. 'and' → logprob: -15.750001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '	n' → logprob: -19.375001907348633
    7. 'x' → logprob: -19.625001907348633
    8. '_' → logprob: -19.875001907348633
    9. ' and' → logprob: -20.000001907348633
    10. 'y' → logprob: -20.250001907348633

Token 1346: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20275896787643433
    2. ' =' → logprob: -1.952759027481079
    3. 'x' → logprob: -3.202759027481079
    4. '   ' → logprob: -7.5777587890625
    5. '=x' → logprob: -7.7027587890625
    6. ' x' → logprob: -11.3277587890625
    7. '=
' → logprob: -11.8277587890625
    8. '(x' → logprob: -12.0777587890625
    9. ',' → logprob: -13.9527587890625
    10. ',x' → logprob: -14.9527587890625

Token 1347: ' chaque' (ID: 21194)
  Prédit: 'reads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reads' → logprob: -0.0005576779949478805
    2. ' reads' → logprob: -8.125557899475098
    3. '*' → logprob: -8.875557899475098
    4. 'read' → logprob: -9.500557899475098
    5. '=' → logprob: -10.250557899475098
    6. '```' → logprob: -12.375557899475098
    7. '...' → logprob: -13.125557899475098
    8. 'loads' → logprob: -14.125557899475098
    9. 'list' → logprob: -14.250557899475098
    10. 'writes' → logprob: -14.375557899475098

Token 1348: ' it' (ID: 480)
  Prédit: 'reads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reads' → logprob: -0.24435372650623322
    2. 'tuple' → logprob: -2.244353771209717
    3. '*' → logprob: -3.619353771209717
    4. 'line' → logprob: -3.869353771209717
    5. '```' → logprob: -3.994353771209717
    6. ' reads' → logprob: -4.494353771209717
    7. 'point' → logprob: -4.619353771209717
    8. 'map' → logprob: -5.244353771209717
    9. '_reads' → logprob: -5.744353771209717
    10. '=' → logprob: -6.369353771209717

Token 1349: 'ération' (ID: 24977)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.10399539023637772
    2. 'ération' → logprob: -3.9789953231811523
    3. 'er' → logprob: -4.103995323181152
    4. 'imes' → logprob: -4.228995323181152
    5. 'time' → logprob: -4.228995323181152
    6. 'line' → logprob: -4.603995323181152
    7. '()' → logprob: -5.103995323181152
    8. 'e' → logprob: -5.853995323181152
    9. '[' → logprob: -6.603995323181152
    10. 's' → logprob: -6.728995323181152

Token 1350: ' via' (ID: 4493)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006738319061696529
    2. '   ' → logprob: -7.750673770904541
    3. ' x' → logprob: -8.3756742477417
    4. '(x' → logprob: -11.6256742477417
    5. '
' → logprob: -13.7506742477417
    6. ' =' → logprob: -14.1256742477417
    7. '	x' → logprob: -14.2506742477417
    8. '```' → logprob: -15.2506742477417
    9. '    
' → logprob: -15.3756742477417
    10. '[x' → logprob: -15.5006742477417

Token 1351: ' la' (ID: 557)
  Prédit: 'reads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reads' → logprob: -0.0001593195047462359
    2. ' reads' → logprob: -8.75015926361084
    3. '```' → logprob: -15.00015926361084
    4. '   ' → logprob: -16.250160217285156
    5. 'read' → logprob: -16.250160217285156
    6. 'writes' → logprob: -16.750160217285156
    7. 'loads' → logprob: -17.000160217285156
    8. '
' → logprob: -17.125160217285156
    9. ' ' → logprob: -17.250160217285156
    10. 'Reads' → logprob: -17.500160217285156

Token 1352: ' fonction' (ID: 17610)
  Prédit: 'reads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reads' → logprob: -0.0005536287208087742
    2. ' reads' → logprob: -7.500553607940674
    3. 'Reads' → logprob: -14.500554084777832
    4. '   ' → logprob: -16.625553131103516
    5. '```' → logprob: -17.250553131103516
    6. 'writes' → logprob: -17.250553131103516
    7. 'read' → logprob: -18.250553131103516
    8. '_reads' → logprob: -18.250553131103516
    9. ' ' → logprob: -18.500553131103516
    10. '
' → logprob: -18.625553131103516

Token 1353: ' reads' (ID: 31523)
  Prédit: 'reads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reads' → logprob: -2.8921695047756657e-05
    2. ' reads' → logprob: -10.500028610229492
    3. '```' → logprob: -14.500028610229492
    4. '   ' → logprob: -15.000028610229492
    5. 'read' → logprob: -15.875028610229492
    6. '
' → logprob: -16.125028610229492
    7. ' ' → logprob: -17.125028610229492
    8. 'Reads' → logprob: -17.125028610229492
    9. 'writes' → logprob: -17.500028610229492
    10. '_reads' → logprob: -17.625028610229492

Token 1354: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1985383778810501
    2. '   ' → logprob: -2.198538303375244
    3. '(x' → logprob: -3.323538303375244
    4. '()' → logprob: -3.948538303375244
    5. ' x' → logprob: -5.698538303375244
    6. '
' → logprob: -6.198538303375244
    7. '()
' → logprob: -6.323538303375244
    8. ' =' → logprob: -6.323538303375244
    9. '();' → logprob: -6.698538303375244
    10. '<|end|>' → logprob: -6.948538303375244

Token 1355: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01419064961373806
    2. '   ' → logprob: -4.264190673828125
    3. ' x' → logprob: -11.014190673828125
    4. '(x' → logprob: -12.264190673828125
    5. '[x' → logprob: -12.889190673828125
    6. '	x' → logprob: -13.264190673828125
    7. '```' → logprob: -14.264190673828125
    8. '    
' → logprob: -14.639190673828125
    9. '
' → logprob: -15.264190673828125
    10. '{x' → logprob: -15.764190673828125

Token 1356: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: 0.0
    2. ' x' → logprob: -17.375
    3. '   ' → logprob: -19.625
    4. '(x' → logprob: -19.75
    5. '
' → logprob: -20.375
    6. '	x' → logprob: -22.125
    7. '[x' → logprob: -23.0
    8. '    
' → logprob: -23.125
    9. '_x' → logprob: -24.125
    10. '```' → logprob: -24.125

Token 1357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008618474006652832
    2. ',d' → logprob: -4.758618354797363
    3. ' ,' → logprob: -13.258618354797363
    4. ',
' → logprob: -13.508618354797363
    5. 'd' → logprob: -14.633618354797363
    6. ',n' → logprob: -15.258618354797363
    7. ',y' → logprob: -16.63361930847168
    8. ',D' → logprob: -17.13361930847168
    9. ',a' → logprob: -17.50861930847168
    10. '_,' → logprob: -18.00861930847168

Token 1358: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001170225441455841
    2. ' d' → logprob: -6.7511701583862305
    3. ' ' → logprob: -18.751171112060547
    4. '   ' → logprob: -18.876171112060547
    5. '  ' → logprob: -19.251171112060547
    6. '	d' → logprob: -19.751171112060547
    7. '    ' → logprob: -21.126171112060547
    8. ' ' → logprob: -21.751171112060547
    9. '
' → logprob: -21.876171112060547
    10. '     ' → logprob: -22.876171112060547

Token 1359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.618001053633634e-05
    2. ',n' → logprob: -10.625025749206543
    3. '=' → logprob: -14.125025749206543
    4. ',d' → logprob: -14.625025749206543
    5. 'n' → logprob: -15.500025749206543
    6. ' ,' → logprob: -15.875025749206543
    7. '<|end|>' → logprob: -16.50002670288086
    8. 'd' → logprob: -16.75002670288086
    9. ',
' → logprob: -17.00002670288086
    10. '‌,' → logprob: -17.37502670288086

Token 1360: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.676292231422849e-05
    2. ' n' → logprob: -11.000017166137695
    3. '	n' → logprob: -20.875017166137695
    4. '   ' → logprob: -22.625017166137695
    5. ' ' → logprob: -22.875017166137695
    6. '_n' → logprob: -23.000017166137695
    7. '  ' → logprob: -23.250017166137695
    8. 'reads' → logprob: -23.375017166137695
    9. '    ' → logprob: -23.750017166137695
    10. ' ' → logprob: -25.250017166137695

Token 1361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008045066497288644
    2. ' =' → logprob: -7.125804424285889
    3. '=
' → logprob: -17.875804901123047
    4. '   ' → logprob: -19.500804901123047
    5. ')' → logprob: -19.625804901123047
    6. '=

' → logprob: -19.750804901123047
    7. '_=' → logprob: -20.125804901123047
    8. ',' → logprob: -20.750804901123047
    9. ')=' → logprob: -21.000804901123047
    10. '＝' → logprob: -21.000804901123047

Token 1362: ' reads' (ID: 31523)
  Prédit: 'reads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reads' → logprob: -0.0004311460361350328
    2. ' reads' → logprob: -7.750431060791016
    3. 'read' → logprob: -15.125431060791016
    4. 'Reads' → logprob: -17.125431060791016
    5. '   ' → logprob: -17.250431060791016
    6. 'loads' → logprob: -17.625431060791016
    7. 'writes' → logprob: -17.625431060791016
    8. '```' → logprob: -18.250431060791016
    9. 'gets' → logprob: -18.375431060791016
    10. ' ' → logprob: -18.625431060791016

Token 1363: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005760280764661729
    2. 'print' → logprob: -7.500576019287109
    3. '
' → logprob: -10.87557601928711
    4. ' print' → logprob: -13.37557601928711
    5. '    
' → logprob: -13.50057601928711
    6. '```' → logprob: -14.75057601928711
    7. '       ' → logprob: -14.87557601928711
    8. 'result' → logprob: -15.75057601928711
    9. '	print' → logprob: -15.87557601928711
    10. 'output' → logprob: -16.87557601928711

Token 1364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6953003406524658
    2. 'print' → logprob: -0.6953003406524658
    3. '```' → logprob: -6.195300102233887
    4. ' print' → logprob: -9.320300102233887
    5. '
' → logprob: -11.695300102233887
    6. 'result' → logprob: -12.070300102233887
    7. '``' → logprob: -12.695300102233887
    8. '	print' → logprob: -12.820300102233887
    9. '    
' → logprob: -13.320300102233887
    10. '       ' → logprob: -15.570300102233887

Token 1365: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018804390856530517
    2. '   ' → logprob: -8.875187873840332
    3. ' print' → logprob: -10.750187873840332
    4. '
' → logprob: -11.000187873840332
    5. '```' → logprob: -12.000187873840332
    6. 'result' → logprob: -13.250187873840332
    7. '	print' → logprob: -14.250187873840332
    8. '    
' → logprob: -14.500187873840332
    9. 'exit' → logprob: -15.250187873840332
    10. '``' → logprob: -15.500187873840332

Token 1366: ' App' (ID: 2583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.3213025744771585e-05
    2. 'exit' → logprob: -10.875033378601074
    3. 'result' → logprob: -11.500033378601074
    4. 'res' → logprob: -12.625033378601074
    5. 'answer' → logprob: -15.000033378601074
    6. ' print' → logprob: -15.875033378601074
    7. 'r' → logprob: -16.125032424926758
    8. '   ' → logprob: -16.500032424926758
    9. 'write' → logprob: -16.625032424926758
    10. 'output' → logprob: -17.375032424926758

Token 1367: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -1.165726661682129
    2. 'print' → logprob: -1.165726661682129
    3. 'l' → logprob: -1.790726661682129
    4. 'ly' → logprob: -2.290726661682129
    5. 'uyer' → logprob: -3.790726661682129
    6. 'ply' → logprob: -4.040726661682129
    7. 'uye' → logprob: -4.040726661682129
    8. '   ' → logprob: -4.415726661682129
    9. '#' → logprob: -5.415726661682129
    10. 'y' → logprob: -5.540726661682129

Token 1368: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7191471457481384
    2. '(print' → logprob: -0.7191471457481384
    3. '(s' → logprob: -4.344147205352783
    4. '(' → logprob: -5.219147205352783
    5. 'solve' → logprob: -5.219147205352783
    6. '   ' → logprob: -6.344147205352783
    7. '(
' → logprob: -9.969146728515625
    8. 's' → logprob: -11.594146728515625
    9. 'result' → logprob: -11.719146728515625
    10. ' print' → logprob: -11.844146728515625

Token 1369: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.627176768844947e-05
    2. 'solve' → logprob: -9.250096321105957
    3. '(print' → logprob: -16.12509536743164
    4. ' print' → logprob: -17.12509536743164
    5. '
' → logprob: -18.62509536743164
    6. '```' → logprob: -19.12509536743164
    7. 'printf' → logprob: -19.75009536743164
    8. 'exit' → logprob: -20.37509536743164
    9. 'write' → logprob: -20.50009536743164
    10. '   ' → logprob: -20.62509536743164

Token 1370: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.2729995988775045e-06
    2. 'solve' → logprob: -12.000006675720215
    3. ' print' → logprob: -17.3750057220459
    4. 'def' → logprob: -20.0000057220459
    5. 'println' → logprob: -20.0000057220459
    6. 'write' → logprob: -20.1250057220459
    7. 'printf' → logprob: -20.3750057220459
    8. '   ' → logprob: -20.7500057220459
    9. 'prin' → logprob: -20.8750057220459
    10. '
' → logprob: -21.0000057220459

Token 1371: ' solve' (ID: 17722)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02324780821800232
    2. 'solve' → logprob: -3.773247718811035
    3. 'def' → logprob: -13.773247718811035
    4. '(print' → logprob: -13.898247718811035
    5. ' print' → logprob: -16.14824867248535
    6. '```' → logprob: -16.64824867248535
    7. ' solve' → logprob: -17.02324867248535
    8. 'write' → logprob: -17.52324867248535
    9. '   ' → logprob: -18.02324867248535
    10. 'save' → logprob: -18.14824867248535

Token 1372: ' avec' (ID: 3937)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0004991783644072711
    2. 'print' → logprob: -8.00049877166748
    3. '(' → logprob: -8.87549877166748
    4. 'result' → logprob: -11.50049877166748
    5. '(
' → logprob: -12.50049877166748
    6. '(print' → logprob: -12.50049877166748
    7. '(s' → logprob: -13.37549877166748
    8. 'solve' → logprob: -13.75049877166748
    9. '(result' → logprob: -13.87549877166748
    10. '```' → logprob: -14.25049877166748

Token 1373: ' les' (ID: 1341)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003874166286550462
    2. '(x' → logprob: -8.000387191772461
    3. ' x' → logprob: -10.500387191772461
    4. 'print' → logprob: -10.625387191772461
    5. '(' → logprob: -15.875387191772461
    6. '(
' → logprob: -18.37538719177246
    7. ' (' → logprob: -18.75038719177246
    8. '(print' → logprob: -19.00038719177246
    9. 'result' → logprob: -19.12538719177246
    10. ')x' → logprob: -19.50038719177246

Token 1374: ' paramètres' (ID: 130696)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3856492842023727e-06
    2. ' x' → logprob: -13.875000953674316
    3. '(x' → logprob: -14.875000953674316
    4. 'result' → logprob: -19.875001907348633
    5. 'arguments' → logprob: -21.000001907348633
    6. 'results' → logprob: -21.500001907348633
    7. 'print' → logprob: -22.125001907348633
    8. 'parameters' → logprob: -22.375001907348633
    9. '	x' → logprob: -22.500001907348633
    10. '   ' → logprob: -22.625001907348633

Token 1375: ' lus' (ID: 54762)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00012630375567823648
    2. '(' → logprob: -9.625125885009766
    3. 'x' → logprob: -10.125125885009766
    4. '(
' → logprob: -10.875125885009766
    5. 'print' → logprob: -14.125125885009766
    6. '```' → logprob: -15.500125885009766
    7. ' (' → logprob: -16.000125885009766
    8. 'result' → logprob: -16.875125885009766
    9. '`' → logprob: -17.375125885009766
    10. '   ' → logprob: -18.625125885009766

Token 1376: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7906837463378906
    2. '(print' → logprob: -1.4156837463378906
    3. '(x' → logprob: -2.2906837463378906
    4. '(' → logprob: -2.5406837463378906
    5. '(s' → logprob: -2.7906837463378906
    6. 'solve' → logprob: -3.7906837463378906
    7. '(result' → logprob: -4.165683746337891
    8. 'result' → logprob: -4.415683746337891
    9. '(
' → logprob: -4.665683746337891
    10. '(solution' → logprob: -7.665683746337891

Token 1377: ' obtenir' (ID: 54423)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.265633419388905e-05
    2. ' print' → logprob: -9.875062942504883
    3. 'result' → logprob: -11.875062942504883
    4. 'solve' → logprob: -13.500062942504883
    5. '   ' → logprob: -14.125062942504883
    6. 'exit' → logprob: -14.250062942504883
    7. 'res' → logprob: -14.500062942504883
    8. 'x' → logprob: -15.250062942504883
    9. 'rés' → logprob: -15.750062942504883
    10. 'r' → logprob: -16.125062942504883

Token 1378: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6465370059013367
    2. 'result' → logprob: -1.0215370655059814
    3. 'solve' → logprob: -2.2715370655059814
    4. 'le' → logprob: -5.521536827087402
    5. 'la' → logprob: -5.771536827087402
    6. 'res' → logprob: -6.271536827087402
    7. '(print' → logprob: -6.646536827087402
    8. 'answer' → logprob: -7.771536827087402
    9. 'the' → logprob: -7.896536827087402
    10. '(result' → logprob: -8.146536827087402

Token 1379: ' réponse' (ID: 50332)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000737442634999752
    2. 'result' → logprob: -7.25073766708374
    3. 'answer' → logprob: -11.000737190246582
    4. 'res' → logprob: -11.500737190246582
    5. 'r' → logprob: -15.375737190246582
    6. ' print' → logprob: -15.750737190246582
    7. 'rés' → logprob: -16.2507381439209
    8. 'output' → logprob: -16.5007381439209
    9. 'response' → logprob: -17.1257381439209
    10. 'pr' → logprob: -17.2507381439209

Token 1380: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22680769860744476
    2. '(print' → logprob: -1.726807713508606
    3. '(' → logprob: -3.8518075942993164
    4. 'solve' → logprob: -6.226807594299316
    5. '   ' → logprob: -6.976807594299316
    6. '(s' → logprob: -8.101807594299316
    7. '```' → logprob: -8.601807594299316
    8. 'result' → logprob: -8.976807594299316
    9. '(result' → logprob: -9.101807594299316
    10. '(output' → logprob: -10.351807594299316

Token 1381: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005511255003511906
    2. '   ' → logprob: -7.750551223754883
    3. 'result' → logprob: -9.750551223754883
    4. ' print' → logprob: -10.125551223754883
    5. 'res' → logprob: -11.750551223754883
    6. '```' → logprob: -11.750551223754883
    7. '(print' → logprob: -12.625551223754883
    8. 'answer' → logprob: -13.125551223754883
    9. '	print' → logprob: -15.500551223754883
    10. 'ans' → logprob: -15.625551223754883

Token 1382: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -16.0
    3. '   ' → logprob: -16.625
    4. '```' → logprob: -18.625
    5. 'result' → logprob: -18.75
    6. 'answer' → logprob: -19.25
    7. '
' → logprob: -19.5
    8. '    
' → logprob: -20.0
    9. '	print' → logprob: -21.375
    10. 'res' → logprob: -22.0

Token 1383: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6276797652244568
    2. '=' → logprob: -0.8776797652244568
    3. '   ' → logprob: -3.0026798248291016
    4. '    ' → logprob: -8.502679824829102
    5. '  ' → logprob: -9.002679824829102
    6. ')' → logprob: -9.127679824829102
    7. '	' → logprob: -9.502679824829102
    8. ',' → logprob: -9.877679824829102
    9. ' ' → logprob: -10.127679824829102
    10. '```' → logprob: -10.127679824829102

Token 1384: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -6.2729995988775045e-06
    2. ' solve' → logprob: -12.000006675720215
    3. '(s' → logprob: -22.5000057220459
    4. '   ' → logprob: -22.6250057220459
    5. 'save' → logprob: -22.7500057220459
    6. '.solve' → logprob: -23.0000057220459
    7. 'resolve' → logprob: -24.5000057220459
    8. ' ' → logprob: -25.7500057220459
    9. ' ' → logprob: -25.7500057220459
    10. '
' → logprob: -26.0000057220459

Token 1385: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06201787292957306
    2. '(' → logprob: -2.8120179176330566
    3. '(
' → logprob: -9.937017440795898
    4. ' (' → logprob: -13.812017440795898
    5. '(
' → logprob: -15.812017440795898
    6. '(

' → logprob: -16.4370174407959
    7. '((' → logprob: -16.5620174407959
    8. '(input' → logprob: -16.5620174407959
    9. '```' → logprob: -16.5620174407959
    10. '(i' → logprob: -17.0620174407959

Token 1386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0100624169572257e-05
    2. ',d' → logprob: -11.375020027160645
    3. ' ,' → logprob: -11.750020027160645
    4. ',
' → logprob: -14.625020027160645
    5. '   ' → logprob: -16.62502098083496
    6. ',n' → logprob: -17.00002098083496
    7. '_,' → logprob: -18.00002098083496
    8. '```' → logprob: -18.37502098083496
    9. ')' → logprob: -18.87502098083496
    10. ',x' → logprob: -19.37502098083496

Token 1387: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.5577775128767826e-06
    2. ' d' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.6250057220459
    4. '  ' → logprob: -19.3750057220459
    5. '	d' → logprob: -20.7500057220459
    6. '    ' → logprob: -21.8750057220459
    7. '       ' → logprob: -21.8750057220459
    8. ' ' → logprob: -22.5000057220459
    9. '```' → logprob: -22.6250057220459
    10. ')d' → logprob: -22.7500057220459

Token 1388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021021578868385404
    2. ',n' → logprob: -8.50020980834961
    3. ' ,' → logprob: -12.00020980834961
    4. ',
' → logprob: -15.00020980834961
    5. '   ' → logprob: -16.25020980834961
    6. 'n' → logprob: -16.75020980834961
    7. '```' → logprob: -18.62520980834961
    8. ')' → logprob: -19.00020980834961
    9. ' n' → logprob: -19.50020980834961
    10. '[n' → logprob: -20.12520980834961

Token 1389: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0206720617134124e-05
    2. ' n' → logprob: -11.50001049041748
    3. '	n' → logprob: -22.125009536743164
    4. '   ' → logprob: -22.500009536743164
    5. ')n' → logprob: -24.625009536743164
    6. ' ' → logprob: -25.125009536743164
    7. '       ' → logprob: -25.375009536743164
    8. '    ' → logprob: -25.375009536743164
    9. '_n' → logprob: -25.875009536743164
    10. '[n' → logprob: -26.125009536743164

Token 1390: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03214811161160469
    2. '   ' → logprob: -4.0321478843688965
    3. ')
' → logprob: -4.2821478843688965
    4. 'print' → logprob: -9.907148361206055
    5. ')
' → logprob: -10.282148361206055
    6. ' print' → logprob: -13.907148361206055
    7. '```' → logprob: -14.407148361206055
    8. ')`' → logprob: -15.157148361206055
    9. ')

' → logprob: -15.282148361206055
    10. '()' → logprob: -15.657148361206055

Token 1391: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16037066280841827
    2. '   ' → logprob: -1.9103707075119019
    3. '```' → logprob: -9.160370826721191
    4. ' print' → logprob: -10.535370826721191
    5. '	print' → logprob: -11.410370826721191
    6. '``' → logprob: -13.785370826721191
    7. '(print' → logprob: -14.035370826721191
    8. '#print' → logprob: -14.660370826721191
    9. '
' → logprob: -14.785370826721191
    10. '`' → logprob: -15.410370826721191

Token 1392: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. '   ' → logprob: -13.750001907348633
    3. 'exit' → logprob: -14.000001907348633
    4. 'write' → logprob: -17.000001907348633
    5. ' print' → logprob: -17.500001907348633
    6. 'stderr' → logprob: -17.875001907348633
    7. '    
' → logprob: -18.375001907348633
    8. '
' → logprob: -18.750001907348633
    9. 'stdout' → logprob: -19.500001907348633
    10. '```' → logprob: -19.625001907348633

Token 1393: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'exit' → logprob: -19.375
    3. 'write' → logprob: -21.25
    4. ' print' → logprob: -21.25
    5. 'printf' → logprob: -21.75
    6. 'stdout' → logprob: -22.625
    7. '#print' → logprob: -24.0
    8. 'stderr' → logprob: -24.25
    9. 'println' → logprob: -24.375
    10. '	print' → logprob: -24.75

Token 1394: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.10728700459003448
    2. 'iche' → logprob: -2.3572869300842285
    3. 'ich' → logprob: -5.2322869300842285
    4. 'ichage' → logprob: -6.4822869300842285
    5. '#' → logprob: -9.357287406921387
    6. '   ' → logprob: -10.357287406921387
    7. 'print' → logprob: -10.482287406921387
    8. 'iché' → logprob: -11.482287406921387
    9. 'ic' → logprob: -11.857287406921387
    10. 'cher' → logprob: -12.607287406921387

Token 1395: ' du' (ID: 1462)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00016480287013109773
    2. '(' → logprob: -8.750164985656738
    3. '(print' → logprob: -12.875164985656738
    4. 'ans' → logprob: -13.625164985656738
    5. '(f' → logprob: -13.750164985656738
    6. '()' → logprob: -14.125164985656738
    7. '(answer' → logprob: -15.125164985656738
    8. 'print' → logprob: -15.625164985656738
    9. ' (' → logprob: -16.750164031982422
    10. '   ' → logprob: -16.875164031982422

Token 1396: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.018271684646606445
    2. '(ans' → logprob: -4.018271446228027
    3. 'print' → logprob: -9.018271446228027
    4. ' ans' → logprob: -14.768271446228027
    5. 'answer' → logprob: -15.768271446228027
    6. 'str' → logprob: -17.143272399902344
    7. '	ans' → logprob: -17.268272399902344
    8. 'ANS' → logprob: -18.018272399902344
    9. '   ' → logprob: -19.143272399902344
    10. 'f' → logprob: -19.143272399902344

Token 1397: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16679854691028595
    2. '   ' → logprob: -2.1667985916137695
    3. '(ans' → logprob: -3.5417985916137695
    4. '(' → logprob: -5.4167985916137695
    5. '(print' → logprob: -5.4167985916137695
    6. '()' → logprob: -6.9167985916137695
    7. '```' → logprob: -9.54179859161377
    8. '()
' → logprob: -9.66679859161377
    9. ' print' → logprob: -10.29179859161377
    10. 'ans' → logprob: -10.91679859161377

Token 1398: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.029756275936961174
    2. 'ans' → logprob: -3.5297563076019287
    3. 'print' → logprob: -12.154756546020508
    4. 'answer' → logprob: -15.779756546020508
    5. '	ans' → logprob: -15.779756546020508
    6. ' ans' → logprob: -16.404756546020508
    7. '(answer' → logprob: -16.404756546020508
    8. '(' → logprob: -17.529756546020508
    9. 'ANS' → logprob: -17.654756546020508
    10. '_ans' → logprob: -18.154756546020508

Token 1399: ' requ' (ID: 7028)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. 'ans' → logprob: -13.625001907348633
    3. '(print' → logprob: -15.625001907348633
    4. '(ans' → logprob: -16.250001907348633
    5. ' print' → logprob: -16.875001907348633
    6. '#print' → logprob: -17.375001907348633
    7. 'println' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.125001907348633
    9. 'write' → logprob: -18.625001907348633
    10. 'answer' → logprob: -18.875001907348633

Token 1400: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.00652968417853117
    2. 'ete' → logprob: -5.506529808044434
    3. 'êt' → logprob: -6.756529808044434
    4. 'ponse' → logprob: -7.381529808044434
    5. 'ète' → logprob: -8.381529808044434
    6. 'érence' → logprob: -9.381529808044434
    7. 'é' → logprob: -10.131529808044434
    8. 'ise' → logprob: -10.506529808044434
    9. 'te' → logprob: -10.506529808044434
    10. 'êtes' → logprob: -10.506529808044434

Token 1401: ' cour' (ID: 2871)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023246755823493004
    2. '   ' → logprob: -3.7732467651367188
    3. ' print' → logprob: -14.398246765136719
    4. '```' → logprob: -14.398246765136719
    5. '	print' → logprob: -16.27324676513672
    6. '(print' → logprob: -17.89824676513672
    7. '``' → logprob: -18.89824676513672
    8. '
' → logprob: -19.14824676513672
    9. '`' → logprob: -19.14824676513672
    10. 'println' → logprob: -19.14824676513672

Token 1402: 'ante' (ID: 2116)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5288317799568176
    2. 'êt' → logprob: -0.9038317799568176
    3. 't' → logprob: -6.403831958770752
    4. 'ête' → logprob: -6.903831958770752
    5. 'ints' → logprob: -7.153831958770752
    6. 'r' → logprob: -8.278831481933594
    7. 'ut' → logprob: -8.403831481933594
    8. 'ès' → logprob: -8.528831481933594
    9. 'ète' → logprob: -8.778831481933594
    10. 'èt' → logprob: -9.153831481933594

Token 1403: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004746406921185553
    2. '   ' → logprob: -7.875474452972412
    3. '(print' → logprob: -9.37547492980957
    4. ' print' → logprob: -11.87547492980957
    5. '```' → logprob: -13.62547492980957
    6. '	print' → logprob: -14.00047492980957
    7. '(' → logprob: -14.75047492980957
    8. '(ans' → logprob: -15.75047492980957
    9. '
' → logprob: -16.37547492980957
    10. '``' → logprob: -17.25047492980957

Token 1404: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.723352049040841e-06
    2. '   ' → logprob: -12.500004768371582
    3. '```' → logprob: -14.875004768371582
    4. '(print' → logprob: -15.125004768371582
    5. ' print' → logprob: -15.500004768371582
    6. 'println' → logprob: -18.750003814697266
    7. '	print' → logprob: -18.750003814697266
    8. '
' → logprob: -19.625003814697266
    9. '#print' → logprob: -19.875003814697266
    10. '``' → logprob: -19.875003814697266

Token 1405: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -21.5
    3. '   ' → logprob: -22.25
    4. '```' → logprob: -22.5
    5. 'println' → logprob: -24.375
    6. '	print' → logprob: -24.75
    7. 'printf' → logprob: -25.0
    8. 'exit' → logprob: -25.375
    9. '
' → logprob: -26.0
    10. '#print' → logprob: -27.25

Token 1406: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.512236498361744e-07
    2. 'ans' → logprob: -14.500000953674316
    3. '(answer' → logprob: -20.375
    4. '	ans' → logprob: -21.125
    5. '(f' → logprob: -21.75
    6. '((' → logprob: -22.875
    7. '(
' → logprob: -23.25
    8. '(abs' → logprob: -23.375
    9. 'ANS' → logprob: -23.5
    10. '(' → logprob: -23.625

Token 1407: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.810037742368877e-05
    2. '())' → logprob: -10.375038146972656
    3. '()' → logprob: -12.000038146972656
    4. ' )' → logprob: -14.375038146972656
    5. '```' → logprob: -17.625038146972656
    6. '(' → logprob: -17.750038146972656
    7. '))' → logprob: -18.125038146972656
    8. ')
' → logprob: -19.000038146972656
    9. ')`' → logprob: -19.000038146972656
    10. ')}' → logprob: -19.250038146972656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1405
Tokens correctement prédits (1ère position, stricte): 308
Tokens correctement prédits (1ère position, avec adaptation): 323
Tokens correctement prédits (top 10): 776
Précision stricte (1ère position): 21.92%
Précision adaptée (1ère position): 22.99%
Précision (top 10): 55.23%
================================================================================
