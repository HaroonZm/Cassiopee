================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def gcd(a, b):
    while b != 0:
        temp = b
        b = a % b
        a = temp
    return a

def lcm(a, b):
    return a * b // gcd(a, b)

n = int(input())
numbers = list(map(int, input().split()))

current_lcm = numbers[0]
for num in numbers[1:]:
    current_lcm = lcm(current_lcm, num)

answer = 0
for num in numbers:
    answer += (current_lcm - 1) % num

print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' gcd' (ID: 106918)
  → Token d'amorce (pas de prédiction)

Token 2: '(a' (ID: 6271)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008750610053539276
    2. ',b' → logprob: -5.1337504386901855
    3. ')' → logprob: -6.2587504386901855
    4. '):' → logprob: -8.133750915527344
    5. ',a' → logprob: -8.133750915527344
    6. ',)' → logprob: -9.008750915527344
    7. ' ,' → logprob: -10.008750915527344
    8. ',g' → logprob: -10.383750915527344
    9. ',
' → logprob: -11.383750915527344
    10. ',c' → logprob: -11.508750915527344

Token 4: ' b' (ID: 287)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8858749270439148
    2. ' ,' → logprob: -0.8858749270439148
    3. ',b' → logprob: -2.1358749866485596
    4. 'b' → logprob: -3.2608749866485596
    5. ' b' → logprob: -4.1358747482299805
    6. ' ' → logprob: -6.1358747482299805
    7. ')' → logprob: -7.7608747482299805
    8. ' )' → logprob: -9.38587474822998
    9. ')b' → logprob: -10.63587474822998
    10. '<|end|>' → logprob: -10.88587474822998

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0051169381476938725
    2. ')' → logprob: -5.505116939544678
    3. ':' → logprob: -7.505116939544678
    4. '):
' → logprob: -8.00511646270752
    5. '```' → logprob: -10.13011646270752
    6. ''):' → logprob: -10.50511646270752
    7. ',' → logprob: -11.25511646270752
    8. '   ' → logprob: -11.50511646270752
    9. '=' → logprob: -11.50511646270752
    10. '**' → logprob: -11.50511646270752

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04887450486421585
    2. '   ' → logprob: -3.923874616622925
    3. '```' → logprob: -4.423874378204346
    4. ':
' → logprob: -5.923874378204346
    5. '`:' → logprob: -6.048874378204346
    6. '':' → logprob: -6.298874378204346
    7. '":' → logprob: -6.423874378204346
    8. '():' → logprob: -6.423874378204346
    9. '\' → logprob: -7.048874378204346
    10. '    
' → logprob: -7.048874378204346

Token 7: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48494473099708557
    2. '```' → logprob: -1.8599447011947632
    3. 'i' → logprob: -2.3599448204040527
    4. ' if' → logprob: -2.7349448204040527
    5. 'if' → logprob: -3.1099448204040527
    6. ' ' → logprob: -5.234944820404053
    7. ' i' → logprob: -5.234944820404053
    8. ':' → logprob: -5.359944820404053
    9. '``' → logprob: -5.859944820404053
    10. '    ' → logprob: -5.859944820404053

Token 8: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6590116024017334
    2. ' ' → logprob: -0.7840116024017334
    3. ' b' → logprob: -4.4090118408203125
    4. 'a' → logprob: -5.0340118408203125
    5. ' not' → logprob: -5.0340118408203125
    6. '  ' → logprob: -7.7840118408203125
    7. 'b' → logprob: -8.284011840820312
    8. ' (' → logprob: -9.034011840820312
    9. 'not' → logprob: -10.784011840820312
    10. 's' → logprob: -11.534011840820312

Token 9: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10665298998355865
    2. ' >' → logprob: -2.6066529750823975
    3. '>' → logprob: -4.356653213500977
    4. ':' → logprob: -5.606653213500977
    5. ' ' → logprob: -5.606653213500977
    6. '!=' → logprob: -6.356653213500977
    7. '```' → logprob: -6.481653213500977
    8. '   ' → logprob: -6.606653213500977
    9. ' ==' → logprob: -7.606653213500977
    10. ' :' → logprob: -7.731653213500977

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4741341769695282
    2. '0' → logprob: -0.9741342067718506
    3. ''' → logprob: -9.97413444519043
    4. '```' → logprob: -12.34913444519043
    5. ' '' → logprob: -13.72413444519043
    6. ' ' → logprob: -13.72413444519043
    7. '"' → logprob: -13.84913444519043
    8. '`' → logprob: -13.97413444519043
    9. '  ' → logprob: -14.97413444519043
    10. ' `' → logprob: -14.97413444519043

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.632542913896032e-05
    2. ' ' → logprob: -10.000046730041504
    3. 'a' → logprob: -14.000046730041504
    4. '   ' → logprob: -19.250045776367188
    5. '```' → logprob: -19.375045776367188
    6. ''' → logprob: -20.125045776367188
    7. '=' → logprob: -20.250045776367188
    8. ' a' → logprob: -20.250045776367188
    9. '`' → logprob: -21.250045776367188
    10. '۰' → logprob: -22.125045776367188

Token 12: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005107374745421112
    2. ':
' → logprob: -8.000511169433594
    3. '):' → logprob: -10.125511169433594
    4. ':return' → logprob: -10.125511169433594
    5. '':' → logprob: -10.375511169433594
    6. '       ' → logprob: -10.875511169433594
    7. ' :' → logprob: -11.250511169433594
    8. '   ' → logprob: -11.500511169433594
    9. '":' → logprob: -12.125511169433594
    10. ':**' → logprob: -12.375511169433594

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002524053445085883
    2. '    ' → logprob: -7.002523899078369
    3. '   ' → logprob: -7.502523899078369
    4. 'a' → logprob: -8.752524375915527
    5. ' ' → logprob: -8.877524375915527
    6. '        
' → logprob: -9.002524375915527
    7. '```' → logprob: -9.127524375915527
    8. '     ' → logprob: -9.252524375915527
    9. '        ' → logprob: -9.377524375915527
    10. '`' → logprob: -9.377524375915527

Token 14: ' temp' (ID: 5484)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2953476011753082
    2. ' a' → logprob: -1.4203475713729858
    3. '       ' → logprob: -4.420347690582275
    4. '```' → logprob: -7.170347690582275
    5. '   ' → logprob: -7.795347690582275
    6. '    ' → logprob: -8.045347213745117
    7. '           ' → logprob: -8.670347213745117
    8. '        ' → logprob: -9.795347213745117
    9. '        
' → logprob: -9.920347213745117
    10. 't' → logprob: -10.295347213745117

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20338328182697296
    2. '=' → logprob: -1.7033833265304565
    3. ' ' → logprob: -7.203383445739746
    4. '<|end|>' → logprob: -7.453383445739746
    5. ',' → logprob: -7.953383445739746
    6. '    ' → logprob: -9.578383445739746
    7. ')' → logprob: -9.578383445739746
    8. '_' → logprob: -10.703383445739746
    9. 's' → logprob: -10.828383445739746
    10. '  ' → logprob: -10.953383445739746

Token 16: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6946645379066467
    2. ' b' → logprob: -0.6946645379066467
    3. 'a' → logprob: -6.694664478302002
    4. ' a' → logprob: -8.19466495513916
    5. ' ' → logprob: -14.06966495513916
    6. '```' → logprob: -14.19466495513916
    7. '	b' → logprob: -14.81966495513916
    8. '    ' → logprob: -15.31966495513916
    9. '   ' → logprob: -16.069664001464844
    10. ')b' → logprob: -16.444664001464844

Token 17: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39239323139190674
    2. '\n' → logprob: -1.3923932313919067
    3. '<|end|>' → logprob: -3.642393112182617
    4. '        
' → logprob: -4.142393112182617
    5. '
' → logprob: -4.267393112182617
    6. '\' → logprob: -5.267393112182617
    7. '    
' → logprob: -6.017393112182617
    8. '   ' → logprob: -6.392393112182617
    9. '```' → logprob: -6.642393112182617
    10. ' 
' → logprob: -6.642393112182617

Token 18: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5801810026168823
    2. '       ' → logprob: -1.2051810026168823
    3. '
' → logprob: -2.830181121826172
    4. '        
' → logprob: -3.580181121826172
    5. 'a' → logprob: -3.830181121826172
    6. '    
' → logprob: -5.205181121826172
    7. '\' → logprob: -5.205181121826172
    8. 'b' → logprob: -5.330181121826172
    9. '```' → logprob: -5.955181121826172
    10. '  
' → logprob: -6.080181121826172

Token 19: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07696687430143356
    2. '       ' → logprob: -2.9519667625427246
    3. ' a' → logprob: -4.451966762542725
    4. 'b' (adapté à ' b') → logprob: -4.951966762542725
    5. '```' → logprob: -6.826966762542725
    6. '        
' → logprob: -7.326966762542725
    7. ' b' → logprob: -8.201967239379883
    8. '\n' → logprob: -8.326967239379883
    9. '        ' → logprob: -8.701967239379883
    10. '\' → logprob: -9.201967239379883

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03428245708346367
    2. '=' → logprob: -3.7842824459075928
    3. ',' → logprob: -5.409282684326172
    4. ' ' → logprob: -5.909282684326172
    5. '<|end|>' → logprob: -5.909282684326172
    6. '    ' → logprob: -8.534282684326172
    7. ' ,' → logprob: -8.659282684326172
    8. ')' → logprob: -9.159282684326172
    9. '  ' → logprob: -9.534282684326172
    10. '   ' → logprob: -9.659282684326172

Token 21: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931480169296265
    2. ' a' → logprob: -0.6931480169296265
    3. '	a' → logprob: -15.568147659301758
    4. ' ' → logprob: -15.693147659301758
    5. '(a' → logprob: -15.943147659301758
    6. '_a' → logprob: -16.443147659301758
    7. '```' → logprob: -16.443147659301758
    8. '>a' → logprob: -17.193147659301758
    9. ' ' → logprob: -17.693147659301758
    10. '.a' → logprob: -18.443147659301758

Token 22: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.38688382506370544
    2. '%' → logprob: -1.1368838548660278
    3. '%b' → logprob: -11.386883735656738
    4. ' ' → logprob: -13.886883735656738
    5. '%i' → logprob: -15.761883735656738
    6. ' ' → logprob: -16.011884689331055
    7. '%s' → logprob: -16.261884689331055
    8. '%c' → logprob: -16.886884689331055
    9. '%n' → logprob: -17.136884689331055
    10. '%B' → logprob: -17.886884689331055

Token 23: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006716913543641567
    2. ' b' → logprob: -5.006716728210449
    3. 'temp' → logprob: -13.38171672821045
    4. ' temp' → logprob: -17.006717681884766
    5. ' ' → logprob: -17.756717681884766
    6. '<|end|>' → logprob: -18.756717681884766
    7. '	b' → logprob: -19.006717681884766
    8. 't' → logprob: -19.256717681884766
    9. '>b' → logprob: -20.756717681884766
    10. ')b' → logprob: -20.756717681884766

Token 24: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.30146753787994385
    2. 'a' → logprob: -2.3014674186706543
    3. '<|end|>' → logprob: -2.9264674186706543
    4. '       ' → logprob: -3.6764674186706543
    5. '        
' → logprob: -3.6764674186706543
    6. '\' → logprob: -4.051467418670654
    7. ' 
' → logprob: -4.426467418670654
    8. '
' → logprob: -5.051467418670654
    9. '    
' → logprob: -5.176467418670654
    10. '  
' → logprob: -5.676467418670654

Token 25: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.757658064365387
    2. 'a' → logprob: -1.1326580047607422
    3. '       ' → logprob: -3.007658004760742
    4. '
' → logprob: -3.132658004760742
    5. '\' → logprob: -3.132658004760742
    6. '        
' → logprob: -3.382658004760742
    7. ' 
' → logprob: -4.757658004760742
    8. ' a' → logprob: -5.257658004760742
    9. '\a' → logprob: -5.257658004760742
    10. '    
' → logprob: -5.382658004760742

Token 26: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.025415338575839996
    2. ' a' → logprob: -4.275415420532227
    3. '\n' → logprob: -4.525415420532227
    4. '\' → logprob: -9.150415420532227
    5. '\a' → logprob: -9.650415420532227
    6. ' 
' → logprob: -10.025415420532227
    7. '
' → logprob: -10.150415420532227
    8. '        
' → logprob: -11.025415420532227
    9. '    
' → logprob: -11.150415420532227
    10. '       ' → logprob: -11.275415420532227

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06996878236532211
    2. '=' → logprob: -2.6949687004089355
    3. '<|end|>' → logprob: -10.569969177246094
    4. ',' → logprob: -12.319969177246094
    5. ' ' → logprob: -13.444969177246094
    6. ' =)' → logprob: -14.569969177246094
    7. ' ,' → logprob: -16.569969177246094
    8. '<|end|>' → logprob: -16.569969177246094
    9. ')' → logprob: -16.819969177246094
    10. 's' → logprob: -17.194969177246094

Token 28: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.011047935113310814
    2. 'temp' → logprob: -4.511047840118408
    3. ' tmp' → logprob: -16.51104736328125
    4. '	temp' → logprob: -17.38604736328125
    5. 'tmp' → logprob: -18.88604736328125
    6. ' tem' → logprob: -19.13604736328125
    7. '(temp' → logprob: -19.26104736328125
    8. '[temp' → logprob: -19.51104736328125
    9. ' temps' → logprob: -19.76104736328125
    10. 'tem' → logprob: -20.13604736328125

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023329516407102346
    2. ' return' → logprob: -7.127333164215088
    3. '       ' → logprob: -7.877333164215088
    4. '\n' → logprob: -8.12733268737793
    5. '    
' → logprob: -8.12733268737793
    6. 'return' → logprob: -8.37733268737793
    7. '
' → logprob: -8.62733268737793
    8. '	return' → logprob: -10.37733268737793
    9. '```' → logprob: -10.37733268737793
    10. '<|end|>' → logprob: -10.62733268737793

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005888383369892836
    2. 'return' → logprob: -5.38088846206665
    3. ' return' → logprob: -7.13088846206665
    4. '    
' → logprob: -8.255887985229492
    5. '       ' → logprob: -9.255887985229492
    6. '
' → logprob: -10.005887985229492
    7. '```' → logprob: -10.380887985229492
    8. '	return' → logprob: -11.005887985229492
    9. '\n' → logprob: -12.255887985229492
    10. ':return' → logprob: -12.880887985229492

Token 31: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24837283790111542
    2. 'return' (adapté à ' return') → logprob: -1.8733727931976318
    3. ' return' → logprob: -3.498372793197632
    4. '\n' → logprob: -3.623372793197632
    5. '\' → logprob: -5.873373031616211
    6. ':return' → logprob: -6.373373031616211
    7. '```' → logprob: -6.498373031616211
    8. '    
' → logprob: -7.248373031616211
    9. '	return' → logprob: -7.373373031616211
    10. '\r' → logprob: -7.373373031616211

Token 32: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759490728378296
    2. ' a' → logprob: -0.8259490728378296
    3. ' ' → logprob: -11.950948715209961
    4. ' ' → logprob: -13.825948715209961
    5. '_a' → logprob: -13.950948715209961
    6. 'space' → logprob: -14.200948715209961
    7. '	a' → logprob: -15.075948715209961
    8. 's' → logprob: -16.82594871520996
    9. ' space' → logprob: -16.82594871520996
    10. '(a' → logprob: -17.32594871520996

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5446249842643738
    2. '<|end|>' → logprob: -1.0446250438690186
    3. '```' → logprob: -3.6696250438690186
    4. '\n' → logprob: -3.7946250438690186
    5. '

' → logprob: -5.0446248054504395
    6. '(' → logprob: -5.7946248054504395
    7. '#' → logprob: -5.9196248054504395
    8. ')' → logprob: -6.0446248054504395
    9. 'newline' → logprob: -6.7946248054504395
    10. '<|end|>' → logprob: -7.1696248054504395

Token 34: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7717872262001038
    2. '
' → logprob: -1.896787166595459
    3. '<|end|>' → logprob: -1.896787166595459
    4. '\n' → logprob: -2.396787166595459
    5. '```' → logprob: -2.896787166595459
    6. '#' → logprob: -3.896787166595459
    7. '\' → logprob: -4.021787166595459
    8. ')' → logprob: -4.271787166595459
    9. '

' → logprob: -4.771787166595459
    10. '(
' → logprob: -5.146787166595459

Token 35: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.20036447048187256
    2. ' gcd' → logprob: -2.325364589691162
    3. ' factorial' → logprob: -3.075364589691162
    4. ' f' → logprob: -4.825364589691162
    5. ' ' → logprob: -4.950364589691162
    6. ' fib' → logprob: -5.200364589691162
    7. ' space' → logprob: -5.575364589691162
    8. ' fibonacci' → logprob: -5.575364589691162
    9. ' add' → logprob: -5.950364589691162
    10. ' ' → logprob: -6.700364589691162

Token 36: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.002619062550365925
    2. 'c' → logprob: -6.75261926651001
    3. 'cms' → logprob: -7.50261926651001
    4. 'e' → logprob: -8.002618789672852
    5. '   ' → logprob: -8.502618789672852
    6. '_c' → logprob: -8.877618789672852
    7. 'cd' → logprob: -9.502618789672852
    8. 'ength' → logprob: -11.002618789672852
    9. '_cm' → logprob: -11.127618789672852
    10. ' cm' → logprob: -11.127618789672852

Token 37: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026383911608718336
    2. '(a' → logprob: -8.250264167785645
    3. ' (' → logprob: -13.500264167785645
    4. '(
' → logprob: -15.125264167785645
    5. '(def' → logprob: -16.125263214111328
    6. '(n' → logprob: -16.125263214111328
    7. '```' → logprob: -16.125263214111328
    8. '<|end|>' → logprob: -16.250263214111328
    9. '("("' → logprob: -16.375263214111328
    10. '(

' → logprob: -16.625263214111328

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037073178100399673
    2. ' ,' → logprob: -8.625370979309082
    3. ')' → logprob: -8.750370979309082
    4. ',a' → logprob: -11.000370979309082
    5. '(a' → logprob: -12.000370979309082
    6. '<|end|>' → logprob: -12.750370979309082
    7. '(' → logprob: -12.875370979309082
    8. 'a' → logprob: -14.125370979309082
    9. ')>' → logprob: -14.750370979309082
    10. '),' → logprob: -14.750370979309082

Token 39: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04859350249171257
    2. 'b' → logprob: -3.048593521118164
    3. ' ' → logprob: -12.173593521118164
    4. ')' → logprob: -14.923593521118164
    5. ' )' → logprob: -14.923593521118164
    6. ')b' → logprob: -15.298593521118164
    7. ' ' → logprob: -16.798593521118164
    8. '	b' → logprob: -17.548593521118164
    9. ' б' → logprob: -17.673593521118164
    10. '    ' → logprob: -17.798593521118164

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00039968726923689246
    2. ')' → logprob: -7.875399589538574
    3. '):
' → logprob: -11.500399589538574
    4. ':' → logprob: -11.750399589538574
    5. '**' → logprob: -14.875399589538574
    6. ' ):' → logprob: -15.125399589538574
    7. '   ' → logprob: -15.375399589538574
    8. ')：' → logprob: -15.750399589538574
    9. ''):' → logprob: -16.37540054321289
    10. '):
' → logprob: -16.37540054321289

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0722108855843544
    2. ' (' → logprob: -3.4472107887268066
    3. ' a' → logprob: -3.8222107887268066
    4. '(' → logprob: -5.447210788726807
    5. 'a' → logprob: -5.447210788726807
    6. ' ' → logprob: -5.697210788726807
    7. '(a' → logprob: -6.072210788726807
    8. '    ' → logprob: -7.197210788726807
    9. ' return' → logprob: -7.947210788726807
    10. '  ' → logprob: -8.697211265563965

Token 42: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23392540216445923
    2. ' a' → logprob: -1.8589253425598145
    3. ' (' → logprob: -2.9839253425598145
    4. '(a' → logprob: -6.7339253425598145
    5. '(' → logprob: -7.2339253425598145
    6. ' return' → logprob: -9.108925819396973
    7. '   ' → logprob: -9.733925819396973
    8. 'return' (adapté à ' return') → logprob: -9.858925819396973
    9. ' ' → logprob: -13.108925819396973
    10. 'A' → logprob: -13.233925819396973

Token 43: ' a' (ID: 261)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.35562363266944885
    2. ' a' → logprob: -1.9806236028671265
    3. 'a' → logprob: -2.480623722076416
    4. '(a' → logprob: -2.730623722076416
    5. '(' → logprob: -4.605623722076416
    6. ' abs' → logprob: -6.230623722076416
    7. ' ' → logprob: -9.105623245239258
    8. 'abs' → logprob: -9.230623245239258
    9. '(int' → logprob: -9.480623245239258
    10. '(abs' → logprob: -9.480623245239258

Token 44: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1609247326850891
    2. '*' → logprob: -1.9109246730804443
    3. ' ' → logprob: -7.285924911499023
    4. '"' → logprob: -12.910924911499023
    5. ' //' → logprob: -13.035924911499023
    6. '**' → logprob: -13.035924911499023
    7. '  ' → logprob: -13.285924911499023
    8. ' ' → logprob: -14.160924911499023
    9. ' **' → logprob: -14.285924911499023
    10. 'space' → logprob: -14.535924911499023

Token 45: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011048408225178719
    2. ' b' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.636048316955566
    4. '   ' → logprob: -17.011049270629883
    5. '  ' → logprob: -17.261049270629883
    6. '/' → logprob: -17.761049270629883
    7. '(b' → logprob: -18.386049270629883
    8. '```' → logprob: -18.386049270629883
    9. '(' → logprob: -18.511049270629883
    10. '	b' → logprob: -18.761049270629883

Token 46: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.014764019288122654
    2. '//' → logprob: -4.264763832092285
    3. ' /' → logprob: -7.639763832092285
    4. ' ' → logprob: -9.264763832092285
    5. '/' → logprob: -11.014763832092285
    6. ' ' → logprob: -12.514763832092285
    7. ')' → logprob: -13.139763832092285
    8. '  ' → logprob: -14.514763832092285
    9. '#' → logprob: -15.014763832092285
    10. '   ' → logprob: -15.264763832092285

Token 47: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.1756367712223437e-05
    2. ' gcd' → logprob: -12.000011444091797
    3. 'b' → logprob: -12.125011444091797
    4. '   ' → logprob: -18.375011444091797
    5. '	g' → logprob: -18.625011444091797
    6. '(g' → logprob: -19.125011444091797
    7. ' ' → logprob: -19.500011444091797
    8. '  ' → logprob: -19.750011444091797
    9. ' g' → logprob: -20.000011444091797
    10. 'c' → logprob: -20.875011444091797

Token 48: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.47408509254455566
    2. '(' → logprob: -0.9740850925445557
    3. '(
' → logprob: -12.349084854125977
    4. '(b' → logprob: -13.974084854125977
    5. ' (' → logprob: -14.474084854125977
    6. '(None' → logprob: -14.724084854125977
    7. '(

' → logprob: -15.224084854125977
    8. '```' → logprob: -15.349084854125977
    9. '(abs' → logprob: -15.474084854125977
    10. '(ab' → logprob: -15.599084854125977

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023624442983418703
    2. ',b' → logprob: -6.127362251281738
    3. 'b' → logprob: -9.002362251281738
    4. ' ,' → logprob: -10.002362251281738
    5. ')' → logprob: -12.002362251281738
    6. ',
' → logprob: -14.127362251281738
    7. '2' → logprob: -14.627362251281738
    8. ' b' → logprob: -14.627362251281738
    9. ' ' → logprob: -15.002362251281738
    10. ')b' → logprob: -15.252362251281738

Token 50: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078401252627373
    2. ' b' → logprob: -5.504078388214111
    3. ')b' → logprob: -17.379077911376953
    4. ' ' → logprob: -17.504077911376953
    5. '	b' → logprob: -19.004077911376953
    6. '   ' → logprob: -20.004077911376953
    7. '_b' → logprob: -20.754077911376953
    8. ')' → logprob: -21.004077911376953
    9. ''b' → logprob: -21.379077911376953
    10. ' б' → logprob: -21.379077911376953

Token 51: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -15.875
    3. ')
' → logprob: -18.0
    4. '))' → logprob: -18.25
    5. ')a' → logprob: -19.0
    6. '）' → logprob: -20.125
    7. ')`' → logprob: -20.25
    8. '),' → logprob: -20.25
    9. '}' → logprob: -20.375
    10. ')b' → logprob: -20.375

Token 52: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3632429540157318
    2. 'd' → logprob: -1.6132429838180542
    3. '
' → logprob: -3.7382428646087646
    4. '\' → logprob: -3.8632428646087646
    5. '\n' → logprob: -3.9882428646087646
    6. '```' → logprob: -4.363243103027344
    7. '#' → logprob: -4.613243103027344
    8. 'a' → logprob: -5.238243103027344
    9. '(' → logprob: -5.488243103027344
    10. 'n' → logprob: -5.613243103027344

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4466288983821869
    2. ' ' → logprob: -1.0716289281845093
    3. '=' → logprob: -4.196629047393799
    4. 'u' → logprob: -6.821629047393799
    5. '  ' → logprob: -7.446629047393799
    6. 's' → logprob: -7.946629047393799
    7. ',' → logprob: -9.32162857055664
    8. '.' → logprob: -9.44662857055664
    9. ' ,' → logprob: -9.44662857055664
    10. '_' → logprob: -9.44662857055664

Token 54: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14974118769168854
    2. ' int' → logprob: -2.5247411727905273
    3. '10' → logprob: -3.0247411727905273
    4. 'int' → logprob: -4.649741172790527
    5. '1' → logprob: -8.274741172790527
    6. '20' → logprob: -8.524741172790527
    7. '5' → logprob: -8.649741172790527
    8. '0' → logprob: -9.774741172790527
    9. '40' → logprob: -10.524741172790527
    10. '15' → logprob: -10.649741172790527

Token 55: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01612340286374092
    2. '(input' → logprob: -4.141123294830322
    3. 'input' → logprob: -10.26612377166748
    4. '()' → logprob: -10.26612377166748
    5. ' (' → logprob: -12.76612377166748
    6. '('' → logprob: -12.76612377166748
    7. '(`' → logprob: -13.01612377166748
    8. '<|end|>' → logprob: -13.01612377166748
    9. '(**' → logprob: -13.51612377166748
    10. '(int' → logprob: -13.76612377166748

Token 56: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23041288554668427
    2. '()' → logprob: -1.6054128408432007
    3. '('' → logprob: -5.98041296005249
    4. '())' → logprob: -6.35541296005249
    5. '("("' → logprob: -7.98041296005249
    6. '(()' → logprob: -9.105412483215332
    7. ')' → logprob: -9.605412483215332
    8. '("")' → logprob: -9.605412483215332
    9. '("' → logprob: -10.355412483215332
    10. '(),' → logprob: -11.230412483215332

Token 57: 'numbers' (ID: 85055)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46873101592063904
    2. ' 
' → logprob: -2.468730926513672
    3. '<|end|>' → logprob: -2.468730926513672
    4. 'for' → logprob: -3.218730926513672
    5. 'numbers' → logprob: -3.343730926513672
    6. '[' → logprob: -4.218730926513672
    7. '  
' → logprob: -4.468730926513672
    8. ' numbers' → logprob: -4.593730926513672
    9. 'n' → logprob: -4.718730926513672
    10. 'data' → logprob: -4.843730926513672

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002251483965665102
    2. '=' → logprob: -6.127251625061035
    3. '[' → logprob: -9.877251625061035
    4. ' ' → logprob: -12.377251625061035
    5. ' =[' → logprob: -12.502251625061035
    6. '.' → logprob: -12.877251625061035
    7. '[:]' → logprob: -13.377251625061035
    8. '[]' → logprob: -14.002251625061035
    9. 's' → logprob: -14.252251625061035
    10. '_' → logprob: -14.377251625061035

Token 59: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8583493232727051
    2. ' list' → logprob: -0.9833493232727051
    3. ' []' → logprob: -1.733349323272705
    4. 'list' → logprob: -4.483349323272705
    5. '[' → logprob: -4.983349323272705
    6. '[list' → logprob: -5.108349323272705
    7. '[]' → logprob: -7.483349323272705
    8. '[int' → logprob: -8.608348846435547
    9. ' ' → logprob: -8.608348846435547
    10. '[input' → logprob: -8.733348846435547

Token 60: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005715350620448589
    2. '(map' → logprob: -5.755715370178223
    3. '(input' → logprob: -6.880715370178223
    4. '(int' → logprob: -7.380715370178223
    5. '(range' → logprob: -7.380715370178223
    6. '()' → logprob: -9.130715370178223
    7. '(numbers' → logprob: -9.505715370178223
    8. '(s' → logprob: -11.505715370178223
    9. '(eval' → logprob: -11.880715370178223
    10. '(nums' → logprob: -12.380715370178223

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03400007635354996
    2. '(' → logprob: -3.4090001583099365
    3. '(str' → logprob: -8.659000396728516
    4. '(input' → logprob: -8.909000396728516
    5. '(
' → logprob: -11.159000396728516
    6. 'int' → logprob: -11.534000396728516
    7. '(lambda' → logprob: -12.159000396728516
    8. '<|end|>' → logprob: -12.409000396728516
    9. '<int' → logprob: -12.534000396728516
    10. '=int' → logprob: -13.534000396728516

Token 62: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.011891514994204044
    2. ',input' → logprob: -4.6368913650512695
    3. '(' → logprob: -6.2618913650512695
    4. ',' → logprob: -9.01189136505127
    5. 'input' → logprob: -9.38689136505127
    6. ' (' → logprob: -11.38689136505127
    7. '=input' → logprob: -13.13689136505127
    8. ' input' → logprob: -13.13689136505127
    9. ' ,' → logprob: -13.63689136505127
    10. '(
' → logprob: -13.88689136505127

Token 63: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011051944456994534
    2. ' input' → logprob: -4.511052131652832
    3. '(input' → logprob: -12.511052131652832
    4. ',input' → logprob: -15.136052131652832
    5. ' ' → logprob: -16.511051177978516
    6. '=input' → logprob: -16.636051177978516
    7. '	input' → logprob: -16.761051177978516
    8. '<input' → logprob: -16.886051177978516
    9. '   ' → logprob: -18.261051177978516
    10. '```' → logprob: -18.886051177978516

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.558399319241289e-05
    2. '()' → logprob: -10.625025749206543
    3. ' ().' → logprob: -14.000025749206543
    4. '(' → logprob: -15.125025749206543
    5. '()
' → logprob: -17.125024795532227
    6. '.' → logprob: -17.500024795532227
    7. ' .' → logprob: -17.875024795532227
    8. '('').' → logprob: -18.125024795532227
    9. '(.' → logprob: -18.250024795532227
    10. '())' → logprob: -18.500024795532227

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.5954712075181305e-05
    2. 'strip' → logprob: -10.250036239624023
    3. ' split' → logprob: -15.375036239624023
    4. 'rstrip' → logprob: -16.125036239624023
    5. '(split' → logprob: -16.625036239624023
    6. 'spl' → logprob: -17.125036239624023
    7. '.split' → logprob: -20.375036239624023
    8. '_split' → logprob: -21.250036239624023
    9. 's' → logprob: -21.875036239624023
    10. ')' → logprob: -22.000036239624023

Token 66: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.23963309824466705
    2. '())' → logprob: -1.7396330833435059
    3. '()' → logprob: -3.614633083343506
    4. '(' → logprob: -4.989633083343506
    5. '))' → logprob: -5.989633083343506
    6. ')' → logprob: -7.114633083343506
    7. '('' → logprob: -8.114633560180664
    8. '()))
' → logprob: -10.489633560180664
    9. '())))' → logprob: -10.489633560180664
    10. '(','' → logprob: -10.739633560180664

Token 67: 'current' (ID: 5804)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16423116624355316
    2. 'l' → logprob: -1.9142311811447144
    3. 'res' → logprob: -6.789231300354004
    4. 'answer' → logprob: -6.789231300354004
    5. 'from' → logprob: -7.039231300354004
    6. 'current' → logprob: -7.789231300354004
    7. 'ans' → logprob: -8.664231300354004
    8. 'lc' → logprob: -9.289231300354004
    9. 'r' → logprob: -9.539231300354004
    10. '```' → logprob: -9.664231300354004

Token 68: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014427091926336288
    2. '_l' → logprob: -4.264427185058594
    3. ' _' → logprob: -10.389427185058594
    4. '_n' → logprob: -10.389427185058594
    5. '_value' → logprob: -10.514427185058594
    6. '_li' → logprob: -10.889427185058594
    7. '_lower' → logprob: -11.139427185058594
    8. '_g' → logprob: -11.264427185058594
    9. '_L' → logprob: -11.264427185058594
    10. '_=' → logprob: -11.639427185058594

Token 69: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -3.6312321753939614e-05
    2. '_cm' → logprob: -10.750036239624023
    3. '=' → logprob: -12.125036239624023
    4. '_' → logprob: -12.125036239624023
    5. 'CM' → logprob: -13.250036239624023
    6. '_c' → logprob: -14.500036239624023
    7. 'm' → logprob: -14.625036239624023
    8. 'cms' → logprob: -14.875036239624023
    9. 'c' → logprob: -15.000036239624023
    10. ' =' → logprob: -15.500036239624023

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09751322865486145
    2. '=' → logprob: -2.472513198852539
    3. '(' → logprob: -5.222513198852539
    4. '_' → logprob: -5.972513198852539
    5. ' ' → logprob: -7.847513198852539
    6. '<|end|>' → logprob: -9.472513198852539
    7. 's' → logprob: -9.972513198852539
    8. '()' → logprob: -10.722513198852539
    9. '_=' → logprob: -10.972513198852539
    10. ')' → logprob: -12.347513198852539

Token 71: ' numbers' (ID: 8663)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17983485758304596
    2. 'numbers' → logprob: -1.8048348426818848
    3. '(numbers' → logprob: -9.929835319519043
    4. ' numbers' → logprob: -10.304835319519043
    5. ' ' → logprob: -12.554835319519043
    6. 'n' → logprob: -13.054835319519043
    7. '   ' → logprob: -14.054835319519043
    8. 'nums' → logprob: -15.054835319519043
    9. '0' → logprob: -15.304835319519043
    10. 'num' → logprob: -15.429835319519043

Token 72: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.250000953674316
    3. ' [' → logprob: -15.125000953674316
    4. '\[' → logprob: -16.250001907348633
    5. '[:' → logprob: -18.000001907348633
    6. '[:]' → logprob: -18.375001907348633
    7. '()[' → logprob: -18.500001907348633
    8. '[
' → logprob: -18.625001907348633
    9. 's' → logprob: -18.750001907348633
    10. '(' → logprob: -19.000001907348633

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '[' → logprob: -16.312501907348633
    4. '   ' → logprob: -16.875001907348633
    5. '1' → logprob: -17.312501907348633
    6. '-' → logprob: -17.312501907348633
    7. '۰' → logprob: -17.437501907348633
    8. '```' → logprob: -17.687501907348633
    9. '00' → logprob: -17.812501907348633
    10. '٠' → logprob: -18.000001907348633

Token 74: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003148472751490772
    2. ' )' → logprob: -8.250314712524414
    3. '<|end|>' → logprob: -9.875314712524414
    4. '<|end|>' → logprob: -14.500314712524414
    5. ')
' → logprob: -15.250314712524414
    6. ' ' → logprob: -15.375314712524414
    7. ']' → logprob: -15.375314712524414
    8. ')#' → logprob: -15.875314712524414
    9. '))' → logprob: -16.125314712524414
    10. '),' → logprob: -16.500314712524414

Token 75: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5505180954933167
    2. 'for' → logprob: -1.0505180358886719
    3. '
' → logprob: -2.800518035888672
    4. ' 
' → logprob: -4.925518035888672
    5. '<|end|>' → logprob: -5.300518035888672
    6. ' ' → logprob: -8.300518035888672
    7. '\n' → logprob: -8.925518035888672
    8. '<|end|>' → logprob: -10.175518035888672
    9. '  
' → logprob: -10.300518035888672
    10. '```' → logprob: -10.425518035888672

Token 76: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.2179976999759674
    2. ' i' → logprob: -1.717997670173645
    3. 'num' → logprob: -4.7179975509643555
    4. ' number' → logprob: -4.9679975509643555
    5. 'i' → logprob: -7.7179975509643555
    6. ' ' → logprob: -9.342997550964355
    7. 'number' → logprob: -10.967997550964355
    8. ' x' → logprob: -12.592997550964355
    9. '	num' → logprob: -13.092997550964355
    10. '_num' → logprob: -14.342997550964355

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006895594415254891
    2. 'in' → logprob: -7.500689506530762
    3. ' ' → logprob: -9.500689506530762
    4. 's' → logprob: -9.875689506530762
    5. '  ' → logprob: -12.000689506530762
    6. '	in' → logprob: -13.750689506530762
    7. ' ' → logprob: -13.875689506530762
    8. '   ' → logprob: -14.875689506530762
    9. '_in' → logprob: -14.875689506530762
    10. '1' → logprob: -15.250689506530762

Token 78: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.0013332172529771924
    2. 'numbers' → logprob: -6.626333236694336
    3. 'umbers' → logprob: -12.501333236694336
    4. '(numbers' → logprob: -13.126333236694336
    5. ' ' → logprob: -13.751333236694336
    6. '_numbers' → logprob: -15.126333236694336
    7. ' ' → logprob: -16.001333236694336
    8. 'n' → logprob: -17.751333236694336
    9. 's' → logprob: -18.126333236694336
    10. '  ' → logprob: -18.501333236694336

Token 79: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010605713352560997
    2. '[' → logprob: -4.760605812072754
    3. ' :' → logprob: -6.260605812072754
    4. '1' → logprob: -10.885605812072754
    5. ' in' → logprob: -11.010605812072754
    6. '):' → logprob: -11.260605812072754
    7. '：' → logprob: -12.385605812072754
    8. '<|end|>' → logprob: -12.385605812072754
    9. '   ' → logprob: -12.635605812072754
    10. ':**' → logprob: -12.760605812072754

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003673940955195576
    2. ':' → logprob: -9.000367164611816
    3. '):' → logprob: -9.125367164611816
    4. ' ' → logprob: -9.250367164611816
    5. '[' → logprob: -11.000367164611816
    6. ']:' → logprob: -11.125367164611816
    7. ' :' → logprob: -12.875367164611816
    8. ':]' → logprob: -13.250367164611816
    9. ' ):' → logprob: -13.750367164611816
    10. ')' → logprob: -14.000367164611816

Token 81: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06005754694342613
    2. '):' → logprob: -3.1850576400756836
    3. ']:' → logprob: -4.685057640075684
    4. ' :' → logprob: -4.935057640075684
    5. ' ):' → logprob: -8.685057640075684
    6. ':**' → logprob: -9.435057640075684
    7. '>:' → logprob: -9.810057640075684
    8. '():' → logprob: -9.935057640075684
    9. ':]' → logprob: -10.310057640075684
    10. ',' → logprob: -10.560057640075684

Token 82: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40335404872894287
    2. ':' → logprob: -1.1533540487289429
    3. ']:' → logprob: -4.278354167938232
    4. ' ):' → logprob: -6.403354167938232
    5. ' :' → logprob: -7.278354167938232
    6. '>:' → logprob: -10.653353691101074
    7. '):
' → logprob: -10.653353691101074
    8. ')' → logprob: -10.778353691101074
    9. ',' → logprob: -11.028353691101074
    10. '}:' → logprob: -11.278353691101074

Token 83: '   ' (ID: 271)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.4738909900188446
    2. '   ' → logprob: -1.348891019821167
    3. ' ' → logprob: -2.598891019821167
    4. ' 
' → logprob: -3.973891019821167
    5. '    
' → logprob: -4.723890781402588
    6. '    ' → logprob: -5.098890781402588
    7. 'current' → logprob: -5.473890781402588
    8. '     
' → logprob: -6.598890781402588
    9. '<|end|>' → logprob: -6.848890781402588
    10. '   
' → logprob: -7.348890781402588

Token 84: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.1779794991016388
    2. ' ' → logprob: -1.9279794692993164
    3. ' 
' → logprob: -4.427979469299316
    4. 'current' (adapté à ' current') → logprob: -5.302979469299316
    5. '     
' → logprob: -8.552979469299316
    6. '   ' → logprob: -8.802979469299316
    7. '    
' → logprob: -9.177979469299316
    8. '    ' → logprob: -9.302979469299316
    9. '_current' → logprob: -10.927979469299316
    10. '   
' → logprob: -10.927979469299316

Token 85: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.03396539390087128
    2. '_' → logprob: -3.4089653491973877
    3. ' _' → logprob: -8.783965110778809
    4. '_s' → logprob: -10.408965110778809
    5. '_L' → logprob: -10.408965110778809
    6. '_li' → logprob: -10.533965110778809
    7. '_ll' → logprob: -11.783965110778809
    8. '_ls' → logprob: -11.908965110778809
    9. '_g' → logprob: -12.408965110778809
    10. '_n' → logprob: -12.408965110778809

Token 86: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.5772151947021484
    2. 'c' → logprob: -0.8272151947021484
    3. 'm' → logprob: -6.702215194702148
    4. '   ' → logprob: -11.577215194702148
    5. 'cms' → logprob: -11.577215194702148
    6. '_cm' → logprob: -11.827215194702148
    7. '_c' → logprob: -11.952215194702148
    8. '```' → logprob: -12.327215194702148
    9. ' cm' → logprob: -12.952215194702148
    10. 'с' → logprob: -13.577215194702148

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025269107427448034
    2. '=' → logprob: -6.252526760101318
    3. ' ' → logprob: -7.627526760101318
    4. ' *=' → logprob: -9.627527236938477
    5. ' +=' → logprob: -11.002527236938477
    6. ' |=' → logprob: -11.377527236938477
    7. ' ^=' → logprob: -12.377527236938477
    8. ' .=' → logprob: -12.502527236938477
    9. ' =
' → logprob: -13.752527236938477
    10. '_' → logprob: -13.752527236938477

Token 88: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.023270051926374435
    2. 'l' → logprob: -3.7732701301574707
    3. ' ' → logprob: -10.898269653320312
    4. ' ' → logprob: -12.523269653320312
    5. '	l' → logprob: -13.898269653320312
    6. ' current' → logprob: -14.273269653320312
    7. '  ' → logprob: -15.648269653320312
    8. '_l' → logprob: -16.273269653320312
    9. 'current' → logprob: -16.648269653320312
    10. '   ' → logprob: -16.648269653320312

Token 89: 'cm' (ID: 7871)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1800987422466278
    2. 'cm' → logprob: -1.8050987720489502
    3. 'm' → logprob: -8.055098533630371
    4. '   ' → logprob: -11.305098533630371
    5. '```' → logprob: -11.805098533630371
    6. 'current' → logprob: -12.930098533630371
    7. 'cms' → logprob: -13.055098533630371
    8. 'CM' → logprob: -13.180098533630371
    9. ' cm' → logprob: -13.680098533630371
    10. 'C' → logprob: -13.680098533630371

Token 90: '(current' (ID: 15023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20147094130516052
    2. '(current' → logprob: -1.701470971107483
    3. '(
' → logprob: -9.951471328735352
    4. ' (' → logprob: -12.076471328735352
    5. '(cur' → logprob: -13.451471328735352
    6. '(

' → logprob: -13.576471328735352
    7. '(curr' → logprob: -14.076471328735352
    8. 'current' → logprob: -16.20147132873535
    9. '(c' → logprob: -16.20147132873535
    10. '(Current' → logprob: -16.20147132873535

Token 91: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.019472837448120117
    2. '_,' → logprob: -4.519473075866699
    3. ',' → logprob: -5.019473075866699
    4. '_' → logprob: -6.894473075866699
    5. '_)' → logprob: -7.894473075866699
    6. ',)' → logprob: -8.5194730758667
    7. ')' → logprob: -10.2694730758667
    8. '_),' → logprob: -10.3944730758667
    9. ',_' → logprob: -10.5194730758667
    10. ',num' → logprob: -10.8944730758667

Token 92: 'cm' (ID: 7871)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5502400398254395
    2. 'cm' → logprob: -0.9252400398254395
    3. 'c' → logprob: -3.6752400398254395
    4. ')' → logprob: -7.1752400398254395
    5. 'num' → logprob: -8.425239562988281
    6. 'C' → logprob: -9.050239562988281
    7. '   ' → logprob: -10.425239562988281
    8. 'CM' → logprob: -10.425239562988281
    9. 'mc' → logprob: -10.925239562988281
    10. 'current' → logprob: -10.925239562988281

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038047123700380325
    2. ',num' → logprob: -3.2880470752716064
    3. ' ,' → logprob: -12.288046836853027
    4. ',n' → logprob: -14.038046836853027
    5. ',
' → logprob: -16.538047790527344
    6. '(num' → logprob: -16.663047790527344
    7. 'num' → logprob: -16.788047790527344
    8. '   ' → logprob: -17.163047790527344
    9. ')' → logprob: -17.788047790527344
    10. '`,' → logprob: -18.163047790527344

Token 94: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.1602276712656021
    2. 'num' → logprob: -1.910227656364441
    3. ' ' → logprob: -13.28522777557373
    4. ')' → logprob: -14.03522777557373
    5. '(num' → logprob: -15.16022777557373
    6. ',num' → logprob: -15.78522777557373
    7. '	num' → logprob: -16.285226821899414
    8. ' )' → logprob: -16.535226821899414
    9. '[num' → logprob: -16.660226821899414
    10. 'n' → logprob: -16.785226821899414

Token 95: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -14.500003814697266
    4. '))' → logprob: -19.000003814697266
    5. ')`' → logprob: -19.000003814697266
    6. ')

' → logprob: -19.500003814697266
    7. '`)' → logprob: -19.750003814697266
    8. ')
' → logprob: -19.875003814697266
    9. ')#' → logprob: -20.250003814697266
    10. '   ' → logprob: -20.375003814697266

Token 96: 'answer' (ID: 17021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00034297199454158545
    2. '
' → logprob: -8.000343322753906
    3. '\n' → logprob: -12.000343322753906
    4. ' print' → logprob: -14.500343322753906
    5. '```' → logprob: -14.625343322753906
    6. '
' → logprob: -15.375343322753906
    7. ' 
' → logprob: -17.000343322753906
    8. '\' → logprob: -17.125343322753906
    9. '(print' → logprob: -17.125343322753906
    10. '#print' → logprob: -17.500343322753906

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7683037519454956
    2. '_' → logprob: -1.0183037519454956
    3. '=' → logprob: -1.7683037519454956
    4. ' ' → logprob: -5.893303871154785
    5. '_=' → logprob: -7.768303871154785
    6. ' _' → logprob: -8.143303871154785
    7. ')' → logprob: -8.518303871154785
    8. '<|end|>' → logprob: -9.018303871154785
    9. '.' → logprob: -9.768303871154785
    10. '_space' → logprob: -9.893303871154785

Token 98: ' ' (ID: 220)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.04300900548696518
    2. 'current' → logprob: -3.168009042739868
    3. ' ' → logprob: -12.668008804321289
    4. ' ' → logprob: -13.668008804321289
    5. ' str' → logprob: -14.293008804321289
    6. '1' → logprob: -14.293008804321289
    7. '(current' → logprob: -14.668008804321289
    8. '[current' → logprob: -14.668008804321289
    9. 'str' → logprob: -15.043008804321289
    10. ''' → logprob: -15.168008804321289

Token 99: '0' (ID: 15)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -2.3080716346157715e-05
    2. ' current' → logprob: -11.500022888183594
    3. 'str' → logprob: -12.625022888183594
    4. 'curr' → logprob: -13.500022888183594
    5. 'cur' → logprob: -14.000022888183594
    6. '(current' → logprob: -14.250022888183594
    7. '[current' → logprob: -14.250022888183594
    8. 'max' → logprob: -14.375022888183594
    9. '100' → logprob: -14.375022888183594
    10. 'int' → logprob: -14.375022888183594

Token 100: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3035593628883362
    2. 'for' → logprob: -1.5535593032836914
    3. ' for' → logprob: -3.1785593032836914
    4. '\n' → logprob: -5.178559303283691
    5. '<|end|>' → logprob: -6.303559303283691
    6. ' 
' → logprob: -7.303559303283691
    7. '
' → logprob: -8.928559303283691
    8. '' → logprob: -9.178559303283691
    9. '+' → logprob: -9.428559303283691
    10. '

' → logprob: -10.053559303283691

Token 101: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00030161935137584805
    2. ' for' → logprob: -8.125301361083984
    3. '<|end|>' → logprob: -13.125301361083984
    4. 'print' → logprob: -13.750301361083984
    5. 'while' → logprob: -13.875301361083984
    6. 'f' → logprob: -14.500301361083984
    7. 'i' → logprob: -15.625301361083984
    8. 'n' → logprob: -15.875301361083984
    9. 'current' → logprob: -16.000301361083984
    10. '
' → logprob: -16.375301361083984

Token 102: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.35623475909233093
    2. 'num' → logprob: -2.1062347888946533
    3. ' i' → logprob: -2.3562347888946533
    4. ' current' → logprob: -3.7312347888946533
    5. ' range' → logprob: -3.7312347888946533
    6. ' number' → logprob: -4.106234550476074
    7. ' numbers' → logprob: -4.731234550476074
    8. 'i' → logprob: -5.356234550476074
    9. 'range' → logprob: -6.106234550476074
    10. 'number' → logprob: -6.856234550476074

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01827765628695488
    2. 'in' → logprob: -4.018277645111084
    3. ' ' → logprob: -9.268278121948242
    4. '  ' → logprob: -10.768278121948242
    5. 's' → logprob: -12.268278121948242
    6. '   ' → logprob: -13.643278121948242
    7. ' ' → logprob: -13.893278121948242
    8. ' ,' → logprob: -14.018278121948242
    9. '	in' → logprob: -14.143278121948242
    10. ',' → logprob: -14.268278121948242

Token 104: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.18030080199241638
    2. ' numbers' → logprob: -1.8053008317947388
    3. 'range' → logprob: -8.18030071258545
    4. ' range' → logprob: -8.80530071258545
    5. '(numbers' → logprob: -9.43030071258545
    6. 'num' → logprob: -11.55530071258545
    7. 'umbers' → logprob: -11.68030071258545
    8. 'n' → logprob: -12.05530071258545
    9. 'number' → logprob: -12.18030071258545
    10. '_numbers' → logprob: -12.55530071258545

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000563042180147022
    2. ':
' → logprob: -7.875563144683838
    3. '   ' → logprob: -9.25056266784668
    4. ' :' → logprob: -10.37556266784668
    5. '=' → logprob: -11.37556266784668
    6. '>' → logprob: -11.62556266784668
    7. '):' → logprob: -11.62556266784668
    8. ',' → logprob: -12.25056266784668
    9. '==' → logprob: -12.37556266784668
    10. ' ==' → logprob: -12.50056266784668

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006130746915005147
    2. ' if' → logprob: -7.625613212585449
    3. '<|end|>' → logprob: -9.37561321258545
    4. ' answer' → logprob: -11.62561321258545
    5. '    
' → logprob: -11.62561321258545
    6. '```' → logprob: -12.12561321258545
    7. 'if' → logprob: -12.25061321258545
    8. '<|end|>' → logprob: -12.75061321258545
    9. '    ' → logprob: -13.37561321258545
    10. 'answer' → logprob: -13.37561321258545

Token 107: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.6741069555282593
    2. ' if' → logprob: -0.7991069555282593
    3. 'answer' (adapté à ' answer') → logprob: -3.549107074737549
    4. 'if' → logprob: -4.549107074737549
    5. '   ' → logprob: -6.799107074737549
    6. ' i' → logprob: -9.92410659790039
    7. ' %' → logprob: -10.17410659790039
    8. '    ' → logprob: -10.42410659790039
    9. '```' → logprob: -10.79910659790039
    10. '+' → logprob: -11.17410659790039

Token 108: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.05492459610104561
    2. '+=' → logprob: -2.929924488067627
    3. '+' → logprob: -10.429924964904785
    4. '=' → logprob: -13.054924964904785
    5. ' +' → logprob: -13.054924964904785
    6. '   ' → logprob: -13.179924964904785
    7. ' -=' → logprob: -13.554924964904785
    8. ' ^=' → logprob: -13.929924964904785
    9. ' =' → logprob: -13.929924964904785
    10. ']+=' → logprob: -14.054924964904785

Token 109: ' (' (ID: 350)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4361236095428467
    2. ' current' → logprob: -1.0611236095428467
    3. 'num' → logprob: -5.186123847961426
    4. ' num' → logprob: -6.936123847961426
    5. '1' → logprob: -8.436123847961426
    6. ' ' → logprob: -8.686123847961426
    7. '(current' → logprob: -8.811123847961426
    8. ' l' → logprob: -9.186123847961426
    9. ' (' → logprob: -9.686123847961426
    10. 'l' → logprob: -10.061123847961426

Token 110: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.005625023506581783
    2. ' current' → logprob: -5.255625247955322
    3. 'num' → logprob: -8.505624771118164
    4. '1' → logprob: -9.130624771118164
    5. ' ' → logprob: -10.505624771118164
    6. '(current' → logprob: -11.255624771118164
    7. '   ' → logprob: -11.380624771118164
    8. 'urrent' → logprob: -11.630624771118164
    9. '  ' → logprob: -12.130624771118164
    10. '2' → logprob: -13.255624771118164

Token 111: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0004961982485838234
    2. '_' → logprob: -7.6254963874816895
    3. '%' → logprob: -13.250495910644531
    4. '//' → logprob: -13.375495910644531
    5. ' //' → logprob: -13.625495910644531
    6. '   ' → logprob: -14.500495910644531
    7. 'l' → logprob: -14.625495910644531
    8. ')' → logprob: -14.625495910644531
    9. '```' → logprob: -14.625495910644531
    10. ' _' → logprob: -15.125495910644531

Token 112: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.006524357013404369
    2. 'c' → logprob: -5.631524562835693
    3. 'm' → logprob: -5.881524562835693
    4. 'CM' → logprob: -9.756524085998535
    5. ' cm' → logprob: -10.631524085998535
    6. 'C' → logprob: -11.131524085998535
    7. '_cm' → logprob: -11.756524085998535
    8. 'cms' → logprob: -12.006524085998535
    9. 'Cm' → logprob: -12.881524085998535
    10. 'mc' → logprob: -12.881524085998535

Token 113: ' -' (ID: 533)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.05197841674089432
    2. '//' → logprob: -3.551978349685669
    3. ' %' → logprob: -4.051978588104248
    4. '%' → logprob: -5.926978588104248
    5. ' ' → logprob: -6.301978588104248
    6. ' //
' → logprob: -10.30197811126709
    7. ' ' → logprob: -11.05197811126709
    8. ')' → logprob: -11.55197811126709
    9. ' -' → logprob: -11.92697811126709
    10. '-' → logprob: -12.30197811126709

Token 114: ' ' (ID: 220)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.3132956027984619
    2. 'num' → logprob: -1.313295602798462
    3. '(num' → logprob: -10.938295364379883
    4. ' (' → logprob: -12.063295364379883
    5. ' ' → logprob: -12.688295364379883
    6. ')' → logprob: -13.063295364379883
    7. '	num' → logprob: -13.188295364379883
    8. '%' → logprob: -14.438295364379883
    9. '1' → logprob: -14.563295364379883
    10. '   ' → logprob: -14.688295364379883

Token 115: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.000616889214143157
    2. ' num' → logprob: -7.625617027282715
    3. '(num' → logprob: -9.000617027282715
    4. '1' → logprob: -12.375617027282715
    5. ' (' → logprob: -14.500617027282715
    6. '   ' → logprob: -15.375617027282715
    7. '	num' → logprob: -15.625617027282715
    8. '[num' → logprob: -16.3756160736084
    9. '(' → logprob: -16.5006160736084
    10. ',num' → logprob: -16.8756160736084

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02858307585120201
    2. ' )' → logprob: -3.65358304977417
    3. ' %' → logprob: -6.65358304977417
    4. '%' → logprob: -7.15358304977417
    5. ' -' → logprob: -9.528583526611328
    6. ' //' → logprob: -10.403583526611328
    7. ')%' → logprob: -10.528583526611328
    8. ')//' → logprob: -10.528583526611328
    9. ' ' → logprob: -11.278583526611328
    10. '   ' → logprob: -11.528583526611328

Token 117: ' %' (ID: 1851)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11239294707775116
    2. '+' → logprob: -2.3623929023742676
    3. '
' → logprob: -5.362392902374268
    4. ' print' → logprob: -5.487392902374268
    5. '-' → logprob: -7.237392902374268
    6. '+
' → logprob: -7.362392902374268
    7. ' +' → logprob: -7.987392902374268
    8. '<|end|>' → logprob: -8.112393379211426
    9. '-print' → logprob: -8.112393379211426
    10. '\n' → logprob: -9.112393379211426

Token 118: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.12693136930465698
    2. ' num' → logprob: -2.1269314289093018
    3. ' ' → logprob: -13.751931190490723
    4. '	num' → logprob: -13.751931190490723
    5. '<num' → logprob: -14.626931190490723
    6. '(num' → logprob: -15.126931190490723
    7. '<|end|>' → logprob: -15.751931190490723
    8. ',num' → logprob: -16.00193214416504
    9. '=num' → logprob: -16.37693214416504
    10. 'n' → logprob: -16.62693214416504

Token 119: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014267049729824066
    2. '
' → logprob: -4.2642669677734375
    3. ' print' → logprob: -9.639266967773438
    4. '
' → logprob: -10.514266967773438
    5. '```' → logprob: -12.514266967773438
    6. ' 
' → logprob: -13.264266967773438
    7. '    
' → logprob: -13.639266967773438
    8. '<|end|>' → logprob: -13.764266967773438
    9. '  
' → logprob: -14.139266967773438
    10. '\n' → logprob: -14.389266967773438

Token 120: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031983929220587015
    2. '
' → logprob: -5.753198623657227
    3. ' print' → logprob: -11.378198623657227
    4. '\n' → logprob: -12.628198623657227
    5. '```' → logprob: -12.753198623657227
    6. '
' → logprob: -13.253198623657227
    7. '-print' → logprob: -15.503198623657227
    8. '.print' → logprob: -15.753198623657227
    9. '#print' → logprob: -15.878198623657227
    10. '(print' → logprob: -16.253198623657227

Token 121: '(answer' (ID: 78433)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029977375641465187
    2. '(answer' → logprob: -3.529977321624756
    3. '(current' → logprob: -8.904977798461914
    4. '("("' → logprob: -10.529977798461914
    5. '()' → logprob: -11.404977798461914
    6. '(ans' → logprob: -11.529977798461914
    7. ' (' → logprob: -11.654977798461914
    8. '((' → logprob: -11.779977798461914
    9. '('' → logprob: -12.404977798461914
    10. '(

' → logprob: -12.404977798461914

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.750003814697266
    3. '))' → logprob: -15.250003814697266
    4. ')
' → logprob: -16.125003814697266
    5. ')`' → logprob: -17.250003814697266
    6. '`)' → logprob: -17.625003814697266
    7. '')' → logprob: -17.625003814697266
    8. '）' → logprob: -18.500003814697266
    9. '**' → logprob: -18.625003814697266
    10. '()' → logprob: -18.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 120
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 108
Précision stricte (1ère position): 46.67%
Précision adaptée (1ère position): 47.50%
Précision (top 10): 90.00%
================================================================================
